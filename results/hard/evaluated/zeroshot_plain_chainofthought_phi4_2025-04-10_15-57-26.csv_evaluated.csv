id,subid,split,question,sparql,generated_sparql,num_edges,num_edges_full,num_nodes,depth,breadth,base_depth,base_breadth,subgraphs,TP,FP,FN,Precision,Recall,F1
392,21,test,"Give me the region of Central European Time and entity in Italy and province of the residence, that is a settlement and Italian, of Sebastiano Bianchetti.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/province> ?result . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Central_European_Time> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy> . <http://dbpedia.org/resource/Sebastiano_Bianchetti> <http://dbpedia.org/property/residence> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?region ?entityInItaly ?province WHERE {
  ?person a dbo:Person ;
          foaf:name ""Sebastiano Bianchetti""@it .
  
  OPTIONAL { ?person dbo:birthPlace ?placeOfBirth . }
  OPTIONAL { ?person dbo:residence ?residence . }

  ?residence dbo:country dbr:Italy ;
             dbo:region ?region .

  FILTER EXISTS {
    ?region dbp:timeZone ""Central European Time"" .
  }

  ?residence a dbo:Settlement ;
             dbo:province ?province .

  OPTIONAL { ?entityInItaly dbo:location ?residence . }
  
  FILTER (lang(?personLabel) = 'it')
}
```",4,6,5,2,3,2,3,28,0,0,1,0,0.0,0
421,24,test,Give me the person born as the birth name of Dino Merlin and native of the birthplace of Samir Bekrić.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . <http://dbpedia.org/resource/Dino_Merlin> <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Samir_Bekrić> <http://dbpedia.org/ontology/birthPlace> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Find Dino Merlin's birth name
  VALUES (?dinoBirthName) { 
    (dbr:Dino_Merlin dbo:birthName ?name)
  }
  
  # Find Samir Bekrić's birthplace
  VALUES (?samirBirthPlace) { 
    (dbr:Samir_Bekrić dbo:birthPlace ?place)
  }

  # Find a person with the same birth name and native place
  ?person dbo:birthName ?name .
  ?person dbo:nativePlace ?place .
  
  FILTER (?name = ?dinoBirthName && ?place = ?samirBirthPlace)
}
```",4,4,5,2,2,2,3,28,0,0,1,0,0.0,0
427,55,test,"Give me the party of the person born, that is an office holder and a politician, as Romano Antonio Prodi and reference to the name of Italian People's Party (1994) and party of the father of Lamberto Andreotti.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ""Romano Antonio Prodi""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Lamberto_Andreotti> <http://dbpedia.org/property/father> ?v5 . ?v2 <http://dbpedia.org/ontology/party> ?result . ?v5 <http://dbpedia.org/ontology/party> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Italian_People's_Party_(1994)> <http://xmlns.com/foaf/0.1/name> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?prodiParty ?italianPeopleParty ?andreottisFatherParty WHERE {
  # Romano Prodi's party
  OPTIONAL { 
    dbr:Romano_Prodi dbo:party ?prodiParty .
  }

  # Italian People's Party (1994)
  OPTIONAL {
    dbr:Italian_People%27s_Party_(1994) rdfs:label ?italianPeopleParty .
  }

  # Lamberto Andreotti's father
  OPTIONAL {
    dbr:Lamberto_Andreotti dbo:father ?andreottisFather .
    ?andreottisFather dbo:party ?andreottisFatherParty .
  }
}
```",6,8,7,2,3,3,3,71,0,0,1,0,0.0,0
996,19,test,Give me the force of the awardee of 1778.0 and entity in the award of the native of Palestine (region).,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> ""1778.0""^^<http://www.w3.org/2001/XMLSchema#double> . ?result <http://dbpedia.org/ontology/place> ?v4 . ?v0 <http://dbpedia.org/property/awards> ?v4 . ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Palestine_(region)> . ?result <http://dbpedia.org/ontology/commander> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?awardee ?force ?award ?nativeOfPalestine WHERE {
  # Step 1: Identify the awardee of 1778
  VALUES (?year) { ""1778"" }
  
  ?awardee dbo:dateReceived ?date .
  FILTER(YEAR(?date) = ?year)
  
  # Step 2: Determine the force associated with this awardee
  OPTIONAL {
    ?awardee dbo:militaryUnit ?force .
  }

  # Step 3: Find the award related to a native of Palestine (region)
  ?award dbo:recipient ?nativeOfPalestine .
  
  ?nativeOfPalestine dbo:nationality dbr:Palestinian_people .

  # Ensure we are connecting the right entities
  FILTER(?awardee != ?nativeOfPalestine)
}
```",5,5,6,3,2,3,2,20,0,0,4,0,0.0,0
184,64,test,"Give me the parent of the child of the parent of Archduchess Margaret of Austria (born 1925) and parent of the native of the landmark at elevation, that is a settlement, of 96.0 and child of Archduke Joseph August of Austria.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_August_of_Austria> . ?v3 <http://dbpedia.org/ontology/elevation> ""96.0""^^<http://www.w3.org/2001/XMLSchema#double> . ?v2 <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Margaret_of_Austria_(born_1925)> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/property/father> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?parentOfMargaret ?childOfParentOfMargaret ?nativeOfLandmark ?parentOfNative ?childOfJosephAugust WHERE {
  # Step 1: Find Archduchess Margaret of Austria (born 1925) and her parent
  ?margaret dbo:birthDate ?date .
  FILTER(YEAR(?date) = 1925)
  ?margaret foaf:name ""Margaret of Austria"" .
  ?margaret dbo:parent ?parentOfMargaret .

  # Step 2: Find the child of that parent
  ?childOfParentOfMargaret dbo:parent ?parentOfMargaret .

  # Step 3: Identify the landmark at elevation 96.0 meters, which is a settlement
  ?landmark geo:elevation ?elevation .
  FILTER(?elevation = ""96.0""^^xsd:float)
  ?landmark rdf:type dbo:Settlement .

  # Step 4: Find the native of this landmark
  ?nativeOfLandmark foaf:nativePlace ?landmark .

  # Step 5: Find the parent of this native
  ?parentOfNative dbo:child ?nativeOfLandmark .

  # Step 6: Identify Archduke Joseph August of Austria and his child
  ?josephAugust foaf:name ""Joseph August of Austria"" .
  ?childOfJosephAugust dbo:parent ?josephAugust .

  # Combine relationships to find the common ancestor or relationship
  OPTIONAL { ?parentOfMargaret dbo:child ?commonAncestor . }
  OPTIONAL { ?parentOfNative dbo:child ?commonAncestor . }

}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
492,46,test,"Give me the person decedent at the work of the author of French Algeria and commander in the war, that is a military conflict and an event, of Frédéric-Georges Herr.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/property/author> ?v2 . ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . ?v4 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/French_Algeria> <http://dbpedia.org/property/author> ?v2 . <http://dbpedia.org/resource/Frédéric-Georges_Herr> <http://dbpedia.org/ontology/battle> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?decedent WHERE {
  # Find Frédéric-Georges Herr's DBpedia resource
  ?herr a dbo:Person ;
        foaf:name ""Frédéric-Georges Herr""@en .
  
  # Identify his role as an author and commander in a military conflict
  ?herr dbo:occupation ?occupation .
  FILTER(CONTAINS(LCASE(STR(?occupation)), ""author"") && CONTAINS(LCASE(STR(?occupation)), ""commander""))
  
  # Find the military conflict he was involved in
  ?conflict dbo:commander ?herr ;
            a dbo:MilitaryConflict .

  # Identify any events related to French Algeria
  ?event dbo:location dbr:French_Algeria ;
         dbo:participated ?herr .
  
  # Find the person who died during these activities
  ?decedent dbo:deathPlace ?place ;
            dbo:causeOfDeath ?conflict ;
            dbo:relatedEvent ?event .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
427,20,test,Give me the reference to Partito Popolare Italiano and party of the father of Lamberto Andreotti.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Lamberto_Andreotti> <http://dbpedia.org/property/father> ?v2 . ?result <http://xmlns.com/foaf/0.1/name> ""Partito Popolare Italiano""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?party ?fatherParty WHERE {
  # Get the DBpedia resource for Partito Popolare Italiano
  dbr:Partito_Popolare_Italiano dbo:wikiPageRedirects ?party .

  # Get the political party of Giuseppe Andreotti
  dbr:Giuseppe_Andreotti dbo:politicalAffiliation ?fatherParty .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
747,61,test,"Give me the band of the person born as the persona of Shèna and band of the writer of the work, that is a song, of Amba Shepherd.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Amba_Shepherd> . ?v3 <http://dbpedia.org/property/birthName> ?v1 . ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/writer> ?v5 . <http://dbpedia.org/resource/Shèna> <http://xmlns.com/foaf/0.1/givenName> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
# Query 1: Find the band of the person born as Shèna
SELECT ?person ?band WHERE {
  ?person foaf:name ""Shèna""@en .
  OPTIONAL { ?person dbo:birthName ?birthName . FILTER(?birthName = ""Shèna"") }
  OPTIONAL { ?person dbo:member ?band . }
}
```

```sparql
# Query 2: Find the writer of the song ""Amba Shepherd"" and their band
SELECT ?writer ?songBand WHERE {
  ?song dcterms:title ""Amba Shepherd""@en .
  ?song dbo:lyricsBy ?writer .
  OPTIONAL { ?writer dbo:member ?songBand . }
}
```",6,7,7,3,2,3,3,71,0,0,1,0,0.0,0
328,44,test,"Give me the awardee of Order of Suvorov and commander in the force of Ferenc Szálasi and leader of the office, that is a government agency, of Joseph Stalin.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Ferenc_Szálasi> . ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Order_of_Suvorov> . <http://dbpedia.org/resource/Joseph_Stalin> <http://dbpedia.org/property/office> ?v2 . ?v4 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v2 <http://dbpedia.org/ontology/leader> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person dbo:award dbr:Order_of_Suvorov .
  ?person dbo:commanderOf dbr:Ferenc_Szálasi .
  ?person dbo:leaderOf dbr:Soviet_Government_Agency ;
          dbo:leaderUnder dbr:Joseph_Stalin .
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
294,28,test,"Give me the resting place of the architect of P. D. Houston Jr. House and entity in the birth place, that is a settlement, of Marion James and resting place of the awardee, that is a politician, of Distinguished Service Medal (U.S. Army).",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . ?result <http://dbpedia.org/ontology/location> ?v5 . ?v3 <http://dbpedia.org/ontology/restingPlace> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/P._D._Houston_Jr._House> <http://dbpedia.org/ontology/architect> ?v3 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Marion_James> <http://dbpedia.org/ontology/birthPlace> ?v5 . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Distinguished_Service_Medal_(U.S._Army)> . },"```sparql
# Query 1: Find the resting place of the architect of P. D. Houston Jr. House
SELECT ?architectRestingPlace WHERE {
  ?house dbo:architect ?architect .
  ?house rdfs:label ""P. D. Houston Jr. House""@en .
  OPTIONAL { ?architect foaf:deathPlace ?architectRestingPlace . }
}

# Query 2: Find the birthplace of Marion James that is a settlement
SELECT DISTINCT ?birthPlace WHERE {
  ?marion dbo:birthPlace ?birthPlace .
  ?marion rdfs:label ""Marion James""@en .
  FILTER (isBlank(?birthPlace) || ?birthPlace a dbo:Settlement)
}

# Query 3: Find the resting place of an awardee of the Distinguished Service Medal (U.S. Army) who is also a politician
SELECT DISTINCT ?restingPlace WHERE {
  ?person dbo:award ?medal .
  ?medal rdfs:label ""Distinguished Service Medal (United States Army)""@en .
  ?person dbo:occupation ?occupation .
  FILTER(CONTAINS(LCASE(?occupation), ""politician"")).
  OPTIONAL { ?person foaf:deathPlace ?restingPlace . }
}
```",6,8,7,2,3,2,3,28,0,0,1,0,0.0,0
528,41,test,Give me the war of the military force of Battle of Pisagua and war of the commander in Battle of La Rinconada de Ate and force of Narciso Campero.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Battle_of_La_Rinconada_de_Ate> <http://dbpedia.org/ontology/commander> ?v4 . ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Narciso_Campero> . ?v2 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Pisagua> . ?v4 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
# Query for the war associated with the Battle of Pisagua
SELECT ?war WHERE {
  dbpedia:Battle_of_Pisagua dbp:partOf ?war .
}

UNION

# Query for the war associated with the Battle of La Rinconada de Ate
SELECT ?war WHERE {
  dbpedia:Battle_of_La_Rinconada_de_Ate dbp:partOf ?war .
}

UNION

# Query for the military force commanded by Narciso Campero
SELECT ?force WHERE {
  dbpedia:Narciso_Campero dbp:militaryForce ?force .
}
```",5,5,6,2,3,3,3,71,0,0,2,0,0.0,0
9,49,test,"Give me the alma mater of the mayor, that is a politician, of Northern Ireland Forum and figure known as the nickname of the entity, that is an organisation and an educational institution, in Northern Ireland.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/nickname> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/property/nickname> ?v1 . ?v2 <http://dbpedia.org/ontology/almaMater> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Northern_Ireland_Forum> <http://dbpedia.org/property/leader> ?v2 . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Northern_Ireland> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?almaMater ?nickname WHERE {
  # Identify the politician associated with the Northern Ireland Forum
  ?politician dbo:occupation dbr:Politician ;
              dbo:memberOf dbr:Northern_Ireland_Forum .

  # Find the alma mater of this politician
  ?politician dbo:almaMater ?almaMater .

  # Identify an organization that is both a nickname and an educational institution
  ?organization dbo:type dbr:Educational_institution ;
                rdfs:label ?nickname .
  
  FILTER (CONTAINS(LCASE(?nickname), ""northern ireland""))
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
281,41,test,"Give me the entity in the birth place, that is a country, of Bob Heffron and war of the awardee of Knight Grand Cross of the Order of the Bath and war of New Zealand Army.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> ?v4 . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_the_Bath> . <http://dbpedia.org/resource/New_Zealand_Army> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Bob_Heffron> <http://dbpedia.org/ontology/birthPlace> ?v4 . },"```sparql
# Step 1: Find Bob Heffron's birth place that is a country
SELECT ?birthPlace WHERE {
    dbpedia:Bob_Heffron dbo:birthPlace ?birthPlace .
    ?birthPlace rdf:type dbo:Country .
}

# Step 2: Find the awardee of Knight Grand Cross of the Order of the Bath and their associated war
SELECT ?awardee ?war WHERE {
    ?awardee dbo:award dbpedia:Knight_Grand_Cross_of_the_Order_of_the_Bath .
    ?awardee dbo:militaryConflict ?war .
}

# Step 3: Find the war involving the New Zealand Army
SELECT ?nzWar WHERE {
    dbpedia:New_Zealand_Army dbo:militaryConflict ?nzWar .
}

# Step 4: Combine results to find the common entity (country)
SELECT DISTINCT ?birthPlace WHERE {
    # Bob Heffron's birth place that is a country
    dbpedia:Bob_Heffron dbo:birthPlace ?birthPlace .
    ?birthPlace rdf:type dbo:Country .

    # Awardee of Knight Grand Cross and their war
    ?awardee dbo:award dbpedia:Knight_Grand_Cross_of_the_Order_of_the_Bath .
    ?awardee dbo:militaryConflict ?war .

    # War involving the New Zealand Army
    dbpedia:New_Zealand_Army dbo:militaryConflict ?nzWar .

    # Find common war
    FILTER(?war = ?nzWar)
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
485,21,test,"Give me the entity in the birth place, that is a region, of Joseph Whitaker (naturalist) and entity in United Kingdom and birth place of Thomas Warner (poet).",SELECT ?result WHERE { <http://dbpedia.org/resource/Thomas_Warner_(poet)> <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?result <http://dbpedia.org/ontology/country> ?v1 . <http://dbpedia.org/resource/Joseph_Whitaker_(naturalist)> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . },"```sparql
# Query for Joseph Whitaker's birth place that is a region
SELECT ?birthPlace WHERE {
  dbpedia:Joseph_Whitaker_(naturalist) dbo:birthPlace ?birthPlace .
  ?birthPlace rdf:type dbo:Region .
}

# Query for Thomas Warner's birth place in the United Kingdom
SELECT ?birthPlace WHERE {
  dbpedia:Thomas_Warner_(poet) dbo:birthPlace ?birthPlace .
  ?birthPlace dbo:country dbr:United_Kingdom .
}
```",4,5,5,2,3,2,3,28,0,0,1,0,0.0,0
528,52,test,"Give me the war of the commander in Battle of La Rinconada de Ate and force of Narciso Campero and war of the military force of the entity, that is a societal event, in Chile.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Narciso_Campero> . ?v2 <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Battle_of_La_Rinconada_de_Ate> <http://dbpedia.org/ontology/commander> ?v5 . ?v3 <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Chile> . ?v5 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?battle ?commander ?war WHERE {
  # Find the Battle of La Rinconada de Ate
  ?battle a dbo:Battle ;
          rdfs:label ""Battle of La Rinconada de Ate""@en .
  
  # Identify Narciso Campero as a commander in this battle
  ?commander a dbo:Person ;
             foaf:name ""Narciso Campero"" ;
             dbo:commanderOf ?battle .

  # Find the war involving Chile that is a societal event
  ?war a dbo:War ;
       dbo:location dbr:Chile ;
       rdfs:label ?warLabel .
  
  FILTER(CONTAINS(LCASE(?warLabel), ""pacific"") || CONTAINS(LCASE(?warLabel), ""chile""))
}
```",6,7,7,3,3,3,3,71,0,0,2,0,0.0,0
534,19,test,"Give me the birth place of the child, that is a politician and an office holder, of Desmond FitzGerald (politician) and headquarter of the owner of the location, that is a venue and an architectural structure, of 2012 Pro12 Grand Final.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/headquarter> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Venue>. <http://dbpedia.org/resource/Desmond_FitzGerald_(politician)> <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/ontology/owner> ?v4 . <http://dbpedia.org/resource/2012_Pro12_Grand_Final> <http://dbpedia.org/ontology/location> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ArchitecturalStructure>. },"```sparql
# Step 1: Identify Desmond FitzGerald's children who are politicians or office holders
SELECT ?child WHERE {
  ?desmond a dbo:Politician ;
           foaf:name ""Desmond FitzGerald"" .
  ?desmond dbo:child ?child .
  ?child (a dbo:Politician ; dbo:officeHolder) .
}

# Step 2: Determine the birthplace of this child
SELECT ?birthPlace WHERE {
  ?child dbo:birthPlace ?birthPlace .
}

# Step 3: Identify the venue for the 2012 Pro12 Grand Final
SELECT ?venue WHERE {
  ?event a dbo:SportsEvent ;
         dbo:date ""2012-05-19""^^xsd:date ;
         dbo:name ""Pro12 Grand Final""@en ;
         dbo:location ?venue .
}

# Step 4: Find out who owns that venue
SELECT ?owner WHERE {
  ?venue dbo:owner ?owner .
}

# Step 5: Determine the headquarters of the owner
SELECT ?headquarters WHERE {
  ?owner dbo:headquarter ?headquarters .
}
```",5,9,6,3,2,3,2,20,0,0,1,0,0.0,0
391,33,test,"Give me the actor of the claim to fame, that is a work, of the spouse of Sherry Hormann and native of Compton, California.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Compton,_California> . <http://dbpedia.org/resource/Sherry_Hormann> <http://dbpedia.org/ontology/spouse> ?v0 . ?v0 <http://dbpedia.org/ontology/knownFor> ?v3 . ?v3 <http://dbpedia.org/ontology/starring> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?actor WHERE {
  # Step 1: Find Sherry Hormann's spouse
  ?spouse a dbo:Spouse;
          dbo:spouse dbr:Sherry_Hormann.

  # Step 2: Identify the claim to fame (work) of her spouse
  ?work dbo:creator ?spouse;
        a dbo:Film; # Assuming it's a film, adjust if necessary

  # Step 3: Find the native of Compton, California involved in that work
  ?person dbp:nativePlace dbr:Compton,_California;
          dbo:actorIn ?work.

  # Step 4: Extract the actor's name
  ?person rdfs:label ?actor.
  
  FILTER(LANG(?actor) = 'en')
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
54,54,test,Give me the child of the father of Soe Min Wimala Dewi and predecessor of Ameitta Thiri Maha Dhamma Dewi of Ava and parent of the child of the parent of Thado Minsaw of Prome.,SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/father> ?v0 . ?v5 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> . <http://dbpedia.org/resource/Soe_Min_Wimala_Dewi> <http://dbpedia.org/property/father> ?v3 . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Ameitta_Thiri_Maha_Dhamma_Dewi_of_Ava> . ?v3 <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?individual WHERE {
  # Step 1: Father of Soe Min Wimala Dewi
  ?father dbo:child dbr:Soe_Min_Wimala_Dewi .
  
  # Step 2: Predecessor of Ameitta Thiri Maha Dhamma Dewi of Ava
  ?predecessor dbo:succeededBy dbr:Ameitta_Thiri_Maha_Dhamma_Dewi_of_Ava .

  # Step 3: Child of the Father and Predecessor (same person)
  FILTER (?father = ?predecessor)

  # Step 4: Parent of Thado Minsaw of Prome
  ?parent dbo:child dbr:Thado_Minsaw_of_Prome .
  
  # Step 5: Child of that Parent
  ?grandchild dbo:child ?parent .

  # Step 6: The individual is the parent of the grandchild (from step 4)
  ?individual dbo:child ?grandchild .

  # Ensure all conditions are met for the same individual
  FILTER (?father = ?predecessor && ?individual = ?grandchild)
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
10,27,test,"Give me the professional in the birth name of Sharon Kao and associated musical artist of Matt Colton and band member of the person born, that is an artist, as Luke Francis Vibert.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Sharon_Kao> <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Matt_Colton> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://dbpedia.org/property/birthName> ""Luke Francis Vibert""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
# Query for Sharon Kao's birth name
SELECT ?birthName WHERE {
  ?person rdfs:label ""Sharon Kao""@en .
  ?person foaf:name ?name .
  OPTIONAL { ?person dbo:birthName ?birthName . }
  FILTER(LANG(?name) = 'en')
} LIMIT 1

# Query for Matt Colton's associated musical artist
SELECT DISTINCT ?artist WHERE {
  ?colton rdfs:label ""Matt Colton""@en .
  ?colton foaf:worksFor|foaf:knows ?artist .
  FILTER(LANG(?artist) = 'en')
} LIMIT 1

# Query for Luke Francis Vibert's band membership
SELECT DISTINCT ?band WHERE {
  ?vibert rdfs:label ""Luke Francis Vibert""@en .
  ?vibert dbo:memberOf ?band .
  FILTER(LANG(?band) = 'en')
} LIMIT 1
```",5,6,6,2,3,2,3,28,0,0,1,0,0.0,0
528,65,test,Give me the war of the military force of Battle of Pisagua and war of the commander in the work of --01-09 and force of the person born as Narciso Campero Leyes.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> ?v3 . ?v3 <http://dbpedia.org/property/birthName> ""Narciso Campero Leyes""@en . ?v6 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/property/author> ""--01-09""^^<http://www.w3.org/2001/XMLSchema#gMonthDay> . ?v4 <http://dbpedia.org/ontology/battle> ?result . ?v4 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Pisagua> . ?v0 <http://dbpedia.org/ontology/commander> ?v6 . }","```sparql
# Query for the military force involved in the Battle of Pisagua
SELECT ?militaryForce WHERE {
  ?battle dbpedia-owl:wikiPageRedirects ?redirect .
  ?redirect rdfs:label ""Battle of Pisagua""@en .
  ?battle dbo:militaryConflict ?war .
  ?war dbo:participatingMilitaryUnit ?militaryForce .
}

# Query for the war associated with the Battle of Pisagua
SELECT ?war WHERE {
  ?battle dbpedia-owl:wikiPageRedirects ?redirect .
  ?redirect rdfs:label ""Battle of Pisagua""@en .
  ?battle dbo:militaryConflict ?war .
}

# Query for commanders related to the War of the Pacific around January 9th
SELECT DISTINCT ?commander WHERE {
  ?war dbo:wikiPageRedirects ?redirect .
  ?redirect rdfs:label ""War of the Pacific""@en .
  ?person dbo:birthDate ?date .
  FILTER (YEAR(?date) = 1800 || YEAR(?date) = 1810 || YEAR(?date) = 1820 || YEAR(?date) = 1830 || YEAR(?date) = 1840 || YEAR(?date) = 1850 || YEAR(?date) = 1860 || YEAR(?date) = 1870 || YEAR(?date) = 1880)
  ?person dbo:birthPlace ?place .
  ?commander dbo:wikiPageRedirects ?redirect2 .
  ?redirect2 rdfs:label ?name .
  FILTER (CONTAINS(LCASE(?name), ""commander"") && CONTAINS(LCASE(?name), ""war of the pacific""))
}

# Query for Narciso Campero Leyes' birth details and military force
SELECT ?birthDate ?militaryForce WHERE {
  wd:Q123456 dbo:birthDate ?birthDate .
  OPTIONAL { 
    ?person dbo:militaryUnit ?militaryForce .
    FILTER (?person = wd:Q123456)
  }
}
```

Note: Replace `wd:Q123456` with the actual DBpedia identifier for Narciso Campero Leyes.",7,7,8,3,3,3,3,71,0,0,2,0,0.0,0
492,59,test,"Give me the person decedent at the work of the author of French Algeria and commander in the war, that is a military conflict and an event, of the commander in Battle of Verdun.",SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . ?v2 <http://dbpedia.org/property/author> ?v3 . <http://dbpedia.org/resource/Battle_of_Verdun> <http://dbpedia.org/ontology/commander> ?v0 . <http://dbpedia.org/resource/French_Algeria> <http://dbpedia.org/property/author> ?v3 . ?v0 <http://dbpedia.org/ontology/battle> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v5 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?decedent WHERE {
  # Charles de Gaulle's role in World War II
  dbr:Charles_de_Gaulle dbo:militaryConflict dbr:World_War_II .
  
  # Philippe Pétain's command during the Battle of Verdun
  dbr:Philippe_Pétain dbo:militaryCommanderOf dbr:Battle_of_Verdun .

  # Find a common decedent related to both roles
  ?decedent dbo:deathPlace ?place .
  
  OPTIONAL {
    ?event dbo:commandedBy dbr:Charles_de_Gaulle ;
           dbo:participant ?decedent .
  }
  
  OPTIONAL {
    ?battle dbo:commandedBy dbr:Philippe_Pétain ;
            dbo:participant ?decedent .
  }

  FILTER(?event != ?battle)
}
```",6,8,7,3,2,3,3,71,0,0,1,0,0.0,0
488,58,test,"Give me the administration of the father of the spouse, that is a royalty, of Tokugawa Masako and birth place of Enomoto Takeaki and death place of the father, that is a politician, of Yūki Hideyasu.",SELECT ?result WHERE { <http://dbpedia.org/resource/Yūki_Hideyasu> <http://dbpedia.org/property/father> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v5 <http://dbpedia.org/ontology/deathPlace> ?result . ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Tokugawa_Masako> . ?v1 <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/property/leader> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Enomoto_Takeaki> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
# Query for Tokugawa Masako's spouse's father's administration
SELECT ?administration WHERE {
  ?spouse dbo:spouse dbr:Tokugawa_Masako .
  ?parent dbo:child ?spouse ;
          rdf:type dbo:Monarch .
  ?office dbo:monarch ?parent ;
          dbo:administrativeTitle ?title .
  ?administration dbo:headOfGovernment ?office .
}

# Query for Enomoto Takeaki's birth place
SELECT ?birthPlace WHERE {
  dbr:Enomoto_Takeaki dbo:birthPlace ?birthPlace .
}

# Query for Yūki Hideyasu's father's death place
SELECT ?deathPlace WHERE {
  ?yuki dbo:father ?father ;
        rdf:type dbo:Person .
  ?father rdf:type dbo:Politician ;
          dbo:deathPlace ?deathPlace .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
801,56,test,"Give me the producer of Westside Story (song) and professional in the alter ego of The Shadow and associated musical artist of the writer, that is a musical artist and an artist, of the album, that is a musical work and a work, of What U See Is What U Get.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v2 . <http://dbpedia.org/resource/Westside_Story_(song)> <http://dbpedia.org/ontology/producer> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/What_U_See_Is_What_U_Get> <http://dbpedia.org/ontology/album> ?v0 . ?v0 <http://dbpedia.org/property/writer> ?v1 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"```sparql
# Query to get the producer of Westside Story (song)
SELECT ?producer WHERE {
  dbpedia:Westside_Story_(song) dbo:producer ?producer .
}

# Query to find the professional known as The Shadow
SELECT ?person WHERE {
  ?person rdfs:label ""The Shadow""@en .
  FILTER NOT EXISTS { ?person rdfs:label ?otherLabel . FILTER(?otherLabel != ""The Shadow"") }
}

# Query to get the writer of the album What U See Is What U Get and their associated musical artist
SELECT DISTINCT ?writer ?associatedArtist WHERE {
  dbpedia:What_U_See_Is_What_U_Get_(album) dbo:composer ?writer .
  ?writer foaf:page ?artistPage .
  ?artistPage dbo:musicalArtist ?associatedArtist .
}

# Query to find the musical artist and artist of the album What U See Is What U Get
SELECT DISTINCT ?person WHERE {
  dbpedia:What_U_See_Is_What_U_Get_(album) dbo:musicalArtist ?person ;
                                            dbo:artist ?person .
}
```",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
232,54,test,"Give me the actor of the claim to fame, that is a film and a military conflict, of the professional in Actor, narrator and producer and child of the person born as John Devon Roland Pertwee and native of London.","SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/property/birthName> ""John Devon Roland Pertwee""@en . ?v3 <http://dbpedia.org/ontology/child> ?result . ?v0 <http://dbpedia.org/property/occupation> ""Actor, narrator and producer""@en . ?v0 <http://dbpedia.org/ontology/knownFor> ?v5 . ?v5 <http://dbpedia.org/ontology/starring> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/London> . }","```sparql
SELECT ?actor WHERE {
  ?person foaf:name ""John Devon Roland Pertwee""@en .
  ?person dbo:birthPlace dbr:London .
  ?child dbo:parent ?person ;
         rdf:type dbo:Actor ;
         dbo:profession dbo:Narrator ;
         dbo:profession dbo:Producer .
  ?film dbo:title ""The Life and Death of Peter Sellers""@en ;
        dbo:actor ?actor .
  FILTER(?actor = dbr:Geoffrey_Rush)
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
184,18,test,Give me the parent of Archduchess Ilona of Austria and parent of Géza von Habsburg and child of Archduke Joseph August of Austria.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_August_of_Austria> . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Géza_von_Habsburg> . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Ilona_of_Austria> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?ilonaParent ?gezaParent ?josephChild WHERE {
  # Find the parent of Archduchess Ilona of Austria
  ?ilona dbo:parent ?ilonaParent .
  FILTER(STRSTARTS(STR(?ilona), ""http://dbpedia.org/resource/Archduchess_Ilona_of_Austria""))

  # Find the parent of Géza von Habsburg
  ?geza dbo:parent ?gezaParent .
  FILTER(STRSTARTS(STR(?geza), ""http://dbpedia.org/resource/G%C3%A9za_von_Habsburg""))

  # Find a child of Archduke Joseph August of Austria
  ?josephChild dbo:child ?josephChildResource .
  FILTER(STRSTARTS(STR(?josephChild), ""http://dbpedia.org/resource/Archduke_Joseph_August_of_Austria""))
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
994,33,test,"Give me the associated musical artist of the band member, that is a band and a group and an organisation, of the band, that is an organisation, of Fredrik Thordendal and associated musical artist of S.A. Slayer.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Fredrik_Thordendal> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/S.A._Slayer> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandMember ?associatedArtist WHERE {
  # Step 1: Find Fredrik Thordendal's band (Meshuggah)
  dbr:Fredrik_Thordendal dbo:musicalArtist ?meshuggah .
  
  # Step 2: Check if Meshuggah is an organization
  ?meshuggah a dbo:Band ;
             a dbo:Organization .

  # Step 3: Find members of Meshuggah who are in other bands that qualify as organizations
  ?bandMember dbo:musicalArtist ?meshuggah .
  ?otherBand dbo:musicalArtist ?bandMember .
  ?otherBand a dbo:Band ;
            a dbo:Group ;
            a dbo:Organization .

  # Step 4: Find Tom Araya's associated musical artist (S.A. Slayer)
  dbr:S._A._Slayer dbo:musicalArtist ?associatedArtist .
}
```",4,8,5,3,2,3,3,71,0,0,2,0,0.0,0
184,47,test,"Give me the parent of the native of Budapest and child of the child of the parent, that is a royalty, of Archduke Ladislaus Philipp of Austria.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Archduke_Ladislaus_Philipp_of_Austria> <http://dbpedia.org/ontology/parent> ?v0 . ?v2 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Budapest> . ?result <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/property/father> ?v4 . },"```sparql
# Step 1: Identify Archduke Ladislaus Philipp of Austria
SELECT ?ladislaus WHERE {
    ?ladislaus dbo:nationality dbr:Austrian ;
               foaf:name ""Ladislaus Philipp of Austria""@en .
}

# Step 2: Find the parent of Budapest (assuming a historical figure like King Stephen I)
SELECT ?parent WHERE {
    ?buda dcterms:subject dbc:Budapest ;
          dbo:foundingDate ?date .
    ?parent dbo:birthPlace ?buda ;
            foaf:name ""Stephen I, King of Hungary""@en .
}

# Step 3: Identify the child of this parent
SELECT ?child WHERE {
    ?parent dbo:child ?child .
}

# Step 4: Find the parent of this child
SELECT ?grandParent WHERE {
    ?child dbo:parent ?grandParent .
}

# Step 5: Determine royalty among them
SELECT DISTINCT ?royalty WHERE {
    VALUES ?individual { ?parent ?child ?grandParent }
    ?individual rdf:type dbo:Monarch ;
                foaf:name ?name .
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
617,60,test,"Give me the child of the child, that is a royalty, of the successor, that is a royalty, of Antiochus II Theos and parent of the child of the commander in Battle of Panium.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Antiochus_II_Theos> <http://dbpedia.org/ontology/successor> ?v3 . ?v0 <http://dbpedia.org/ontology/child> ?v1 . <http://dbpedia.org/resource/Battle_of_Panium> <http://dbpedia.org/ontology/commander> ?v0 . ?result <http://dbpedia.org/property/father> ?v2 . ?v2 <http://dbpedia.org/property/father> ?v3 . },"```sparql
SELECT ?childOfChildRoyalty WHERE {
  # Step 1: Identify Antiochus II Theos
  ?antiochus2 dbo:spouse ?parent .
  ?antiochus2 foaf:name ""Antiochus II""@en .

  # Step 2: Find the successor of Antiochus II Theos who is royalty
  ?successor dbo:succeededBy ?antiochus2 .
  ?successor rdf:type dbo:Monarch .

  # Step 3: Determine the child of this successor who is royalty
  ?childOfSuccessor dbo:parent ?successor .
  ?childOfSuccessor rdf:type dbo:Monarch .
  
  # Step 4: Identify the commander in Battle of Panium and their parent
  ?battle dbp:battle ""Battle of Panium""@en .
  ?commander dbp:commanderIn ?battle .
  ?parentCommander dbo:child ?commander .

  # Step 5: Find the child of the commander's parent
  ?childOfParentCommander dbo:parent ?parentCommander .

  # Step 6: Link to royalty (the child of the child who is royalty)
  ?childOfChildRoyalty dbo:parent ?childOfSuccessor .
  ?childOfChildRoyalty rdf:type dbo:Monarch .
  
  FILTER(?childOfChildRoyalty = ?childOfParentCommander)
}
```",6,8,7,3,2,3,3,71,0,0,2,0,0.0,0
184,55,test,Give me the parent of the child of Archduke Joseph Francis of Austria and parent of the native of Budapest and child of the child of Archduke Joseph Karl of Austria.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v5 . ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Karl_of_Austria> . ?result <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Budapest> . ?result <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Francis_of_Austria> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parent1 ?parent2 WHERE {
  # Archduke Joseph Francis of Austria's child
  ?child1 dbo:father dbr:Archduke_Joseph_Francis_of_Austria .
  
  # Parent of that child
  ?child1 dbo:motherOrFather ?parent1 .

  # Native of Budapest and their parent
  ?person dbo:nativePlace dbr:Budapest .
  ?person dbo:fatherOrMother ?parent2 .

  # Archduke Joseph Karl of Austria's grandchild
  ?grandchild dbo:father dbr:Archduke_Joseph_Karl_of_Austria ;
              dbo:motherOrFather ?child2 .
  
  ?child2 dbo:motherOrFather ?grandparent .

  FILTER (?parent1 = ?grandparent)
}
```",6,6,7,2,3,3,3,71,0,0,1,0,0.0,0
92,37,test,"Give me the band of Joseph Michael and associated musical artist of the person born, that is an artist, as the actor of Return to Nuke 'Em High Volume 1.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Joseph_Michael> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v3 <http://dbpedia.org/property/birthName> ?v0 . <http://dbpedia.org/resource/Return_to_Nuke_'Em_High_Volume_1> <http://dbpedia.org/property/starring> ?v0 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
# Step 1: Find the actor from ""Return to Nuke 'Em High Time Volume 1""
SELECT ?actor WHERE {
    ?movie dcterms:title ""Return to Nuke 'Em High Volume 1""@en .
    ?movie dbo:starring ?actor .
}

# Step 2: Confirm if this person is a musician
SELECT DISTINCT ?person WHERE {
    ?person foaf:name ""Dee Snider""@en .
    ?person dbo:occupation dbp:Singer .
}

# Step 3: Find Joseph Michael's band
SELECT ?band WHERE {
    ?person foaf:name ""Joseph Michael""@en .
    ?person dbo:memberOf ?band .
}

# Step 4: Identify associated musical artist with Dee Snider
SELECT DISTINCT ?associatedArtist WHERE {
    ?artist foaf:name ""Dee Snider""@en .
    ?artist dbo:memberOf ?band .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
528,69,test,"Give me the force of the person born as the birth name of Narciso Campero and war of the commander in Battle of La Rinconada de Ate and war of the military force of the entity, that is a societal event, in Chile.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/property/birthName> ?v1 . ?v7 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Battle_of_La_Rinconada_de_Ate> <http://dbpedia.org/ontology/commander> ?v7 . ?v4 <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Chile> . ?v3 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/commander> ?v2 . ?v3 <http://dbpedia.org/ontology/battle> ?v4 . <http://dbpedia.org/resource/Narciso_Campero> <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
# Query to find Narciso Campero's birth name
SELECT ?birthName WHERE {
  dbpedia:es:Narciso_Campero dbo:birthName ?birthName .
}

# Query to determine the military force associated with Narciso Campero
SELECT DISTINCT ?force WHERE {
  ?person dbo:birthName ?birthName .
  FILTER(?birthName = ""Narciso Campero"") .
  ?person dbo:militaryForce ?force .
}

# Query to find details about the Battle of La Rinconada de Ate and its commander
SELECT ?commander ?war WHERE {
  dbpedia:Battle_of_La_Rinconada_de_Ate dbo:commander ?commander ;
                                            dbo:partOfWar ?war .
}

# Query to identify a societal event in Chile involving a military force
SELECT DISTINCT ?event ?militaryForce WHERE {
  ?event rdf:type dbo:SocietalEvent ;
         dbo:location dbpedia:Chile ;
         dbo:militaryForce ?militaryForce .
}
```",8,9,9,3,3,3,3,71,0,0,2,0,0.0,0
48,20,test,"Give me the band of the actor, that is a musical artist, of the show with Stacey Dash and band of the writer of the work, that is a work, of Shellback (record producer).",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Stacey_Dash> . ?v1 <http://dbpedia.org/property/writer> ?v2 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Shellback_(record_producer)> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://dbpedia.org/property/starring> ?v5 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. },"```sparql
# Step 1: Find shows featuring Stacey Dash
SELECT ?show WHERE {
  ?staceyDash dbo:profession dbr/Actor .
  ?staceyDash foaf:name ""Stacey Dash"" .
  ?show dbo:castMember ?staceyDash .
}

# Step 2: Find actors from those shows who are also musical artists
SELECT DISTINCT ?actor ?band WHERE {
  # Assuming we have a variable $showId for the show ID from step 1
  ?actor dbo:profession dbr/MusicalArtist ;
         dbo:castMember ?show .
  
  OPTIONAL { 
    ?artistBand dbo:member ?actor .
    ?artistBand foaf:name ?band .
  }
}

# Step 3: Find works produced by Shellback
SELECT DISTINCT ?work WHERE {
  ?shellback dbo:profession dbr/RecordProducer ;
             foaf:name ""Shellback"" .
  
  ?work dbo:producer ?shellback .
}

# Step 4: Identify writers of those works
SELECT DISTINCT ?writer WHERE {
  # Assuming we have a variable $workId for the work ID from step 3
  ?work dbo:author ?writer .
}

# Step 5: Find bands associated with these writers if they are musical artists
SELECT DISTINCT ?writerBand WHERE {
  # Assuming we have a variable $writerId for the writer ID from step 4
  ?writer dbo:profession dbr/MusicalArtist ;
          foaf:name ?writerName .
  
  OPTIONAL { 
    ?band dbo:member ?writer .
    ?band foaf:name ?writerBand .
  }
}
```",6,8,7,3,2,3,2,20,0,0,3,0,0.0,0
314,21,test,"Give me the awardee of 30 and commander in the profession, that is an event and a societal event, of Lisa Gavrić and person deceased at Madrid.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Lisa_Gavrić> <http://dbpedia.org/property/occupation> ?v0 . ?result <http://dbpedia.org/property/awards> ""30""^^<http://www.w3.org/2001/XMLSchema#integer> . ?result <http://dbpedia.org/ontology/restingPlace> <http://dbpedia.org/resource/Madrid> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?name WHERE {
  ?person a dbo:Person .
  OPTIONAL { ?person dbo:award ?award . FILTER (regex(str(?award), ""30"")) }
  OPTIONAL { ?person dbo:rank ?rank . FILTER (str(?rank) = ""Commander"") }
  OPTIONAL { ?person dbo:event ?event . FILTER (dbo:SocietalEvent(?event)) }
  OPTIONAL { ?person dbo:associatedWith dbr:Lisa_Gavrić }
  OPTIONAL { ?person dbo:deathPlace dbr:Madrid }
  ?person rdfs:label ?name .
}
```",4,6,5,2,3,2,3,28,0,0,1,0,0.0,0
161,50,test,"Give me the commander in the force, that is an event, of Emilio Mola and military force of the force, that is a societal event and a military conflict, of the predecessor of Indalecio Prieto.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/commander> ?v0 . ?result <http://dbpedia.org/ontology/battle> ?v4 . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Emilio_Mola> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Indalecio_Prieto> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?event ?conflict
WHERE {
  # Emilio Mola's involvement in the Spanish Civil War
  dbr:Emilio_Mola dbo:occupation dbr:Military_person .
  dbr:Spanish_Civil_War dbo:participant dbr:Emilio_Mola ;
                       a dbo:Event .

  # Francisco Largo Caballero as predecessor of Indalecio Prieto and his involvement in the Spanish Civil War
  dbr:Francisco_Largo_Caballero dbo:predecessorOf dbr:Indalecio_Prieto .
  dbr:Spanish_Civil_War dbo:participant dbr:Francisco_Largo_Caballero ;
                       a dbo:Military_conflict, dbo:Societal_event .

  # Retrieve the commander in the force (Emilio Mola) and the event
  ?commander dbo:occupation dbr:Military_person .
  ?event dbo:participant ?commander ;
         a dbo:Event .
  
  # Ensure the conflict is the same as the Spanish Civil War
  ?conflict rdf:type dbo:Military_conflict, dbo:Societal_event .
  FILTER(?event = dbr:Spanish_Civil_War && ?conflict = dbr:Spanish_Civil_War)
}
```",5,8,6,3,2,3,3,71,0,0,32,0,0.0,0
767,66,test,"Give me the entity in the administration, that is a settlement, of Green and reference to the alter ego of the persona, that is a fictional character, of Matthew Burland and alma mater of the administration of George K. Nash.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/alterEgo> ""Matthew Burland""@en . ?v1 <http://dbpedia.org/property/alterEgo> ?v2 . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v6 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/George_K._Nash> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v3 <http://dbpedia.org/property/leaderParty> ""Green""@en . ?v6 <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://dbpedia.org/ontology/state> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?settlement ?alterEgo ?almaMater WHERE {
  # Step 1: Find settlements in the administration of Green
  ?green dbo:administrativeUnit ?administration .
  ?administration dbo:settlement ?settlement .

  # Step 2: Identify alter ego of Matthew Burland
  dbr:Matthew_Burland dbo:fictionalCharacter ?alterEgo .

  # Step 3: Find alma mater of George K. Nash's administration
  dbr:George_K._Nash dbo:almaMater ?almaMater .
  
  # Combine the elements
  FILTER(?settlement = ?administration) 
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
182,21,test,Give me the war of Jagath Dias and entity in the nationality of Tamara Kunanayakam and war of Mahesh Senanayake.,SELECT ?result WHERE { <http://dbpedia.org/resource/Tamara_Kunanayakam> <http://dbpedia.org/ontology/nationality> ?v0 . <http://dbpedia.org/resource/Mahesh_Senanayake> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Jagath_Dias> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> ?v0 . },"```sparql
# Query for wars associated with Jagath Dias
SELECT ?war WHERE {
  ?person foaf:name ""Jagath Dias""@en .
  ?person dbo:occupation dbp:Military_person .
  ?event dbo:agent ?person ;
         rdf:type dbo:Battle .
  ?event rdfs:label ?war .
}
UNION
# Query for wars associated with Mahesh Senanayake
SELECT ?war WHERE {
  ?person foaf:name ""Mahesh Senanayake""@en .
  ?person dbo:occupation dbp:Military_person .
  ?event dbo:agent ?person ;
         rdf:type dbo:Battle .
  ?event rdfs:label ?war .
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
92,71,test,"Give me the associated musical artist of the person born, that is an artist, as the actor of Return to Nuke 'Em High Volume 1 and band member of the reference, that is an artist, to the name of Nevermore (2006 film) and band of the person born as the birth name of Joseph Michael.",SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Joseph_Michael> <http://dbpedia.org/property/birthName> ?v7 . ?v8 <http://dbpedia.org/property/birthName> ?v7 . ?v2 <http://xmlns.com/foaf/0.1/name> ?v1 . <http://dbpedia.org/resource/Return_to_Nuke_'Em_High_Volume_1> <http://dbpedia.org/property/starring> ?v4 . ?v5 <http://dbpedia.org/property/birthName> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Nevermore_(2006_film)> <http://xmlns.com/foaf/0.1/name> ?v1 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?result <http://dbpedia.org/ontology/bandMember> ?v8 . },"```sparql
# Step 1: Find the actor of ""Return to Nuke 'Em High Volume 1""
SELECT ?actor WHERE {
  ?film dcterms:title ""Return to Nuke 'Em High Volume 1""@en .
  ?film dbo:starring ?actor .
}

# Step 2: Find the band associated with this actor
SELECT DISTINCT ?band WHERE {
  ?actor dbo:musicArtist ?band .
}

# Step 3: Identify the reference artist for ""Nevermore (2006 film)""
SELECT ?referenceArtist WHERE {
  ?film dcterms:title ""Nevermore (2006 film)""@en .
  ?film dbo:relatedMusicalArtist ?referenceArtist .
}

# Step 4: Find the band associated with this reference artist
SELECT DISTINCT ?band WHERE {
  ?referenceArtist dbo:musicArtist ?band .
}

# Step 5: Determine the birth name of Joseph Michael
SELECT ?birthName WHERE {
  ?person foaf:name ""Joseph Michael""@en .
  ?person dbo:birthName ?birthName .
}

# Step 6: Identify the band associated with this person
SELECT DISTINCT ?band WHERE {
  ?person dbo:musicArtist ?band .
}

# Final step: Combine all these associations to find the final musical artist
SELECT DISTINCT ?finalArtist WHERE {
  # Assuming we have variables from previous steps: ?actor, ?referenceArtist, ?birthNamePerson
  ?actor dbo:musicArtist ?finalArtist .
  ?referenceArtist dbo:musicArtist ?finalArtist .
  ?birthNamePerson dbo:musicArtist ?finalArtist .
}
```",9,11,10,3,3,3,3,71,0,0,1,0,0.0,0
92,30,test,Give me the band of the person born as Joseph Michael Furney and band member of Nevermore and associated musical artist of Jim Sheppard.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Jim_Sheppard> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Nevermore> . ?result <http://dbpedia.org/ontology/bandMember> ?v1 . ?v1 <http://dbpedia.org/property/birthName> ""Joseph Michael Furney""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band WHERE {
  ?person a dbo:MusicalArtist ;
          foaf:name ""Warrel Dane""@en .
  OPTIONAL { ?person dbo:birthName ""Joseph Michael Furney""@en . }
  ?membership dbo:member ?person ;
              dbo:musicalBand ?band .
  FILTER EXISTS { ?band rdfs:label ""Nevermore""@en }
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
55,21,test,"Give me the band member of Metallica and band member of Guns N' Roses and band of the reference, that is a band, to Newsted.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://xmlns.com/foaf/0.1/name> ""Newsted""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Guns_N'_Roses> . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Metallica> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?metallicaMember ?gunsNrosesMember ?bandWithNewsted WHERE {
  # Metallica members
  ?metallicaMember dbo:memberOf dbr:Metallica .
  
  # Guns N' Roses members
  ?gunsNrosesMember dbo:memberOf dbr:Guns_N'_Roses .

  # Bands associated with Jason Newsted
  ?bandWithNewsted dbo:member dbr:Jason_Newsted .

  # Find commonality or connection
  OPTIONAL { ?metallicaMember dbo:associatedBand ?bandWithNewsted . }
  OPTIONAL { ?gunsNrosesMember dbo:associatedBand ?bandWithNewsted . }

  FILTER(?metallicaMember != ?gunsNrosesMember)
}
```",4,5,5,2,3,2,3,28,0,0,1,0,0.0,0
801,22,test,"Give me the associated musical artist of the writer, that is a musical artist and an artist, of 40 Dayz & 40 Nightz and professional in .","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/occupation> """"@en . <http://dbpedia.org/resource/40_Dayz_&_40_Nightz> <http://dbpedia.org/property/writer> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artist WHERE {
  ?song dbo:lyricsAuthor ?writer .
  ?song rdfs:label ""40 Dayz & 40 Nightz""@en .
  
  OPTIONAL { ?writer dbo:occupation dbr:Musical_artist . }
  OPTIONAL { ?writer dbo:occupation dbr:Artist . }

  FILTER (CONTAINS(LCASE(?writer), ""rick ross""))
}
```",3,5,4,2,2,3,3,71,0,0,22,0,0.0,0
391,46,test,"Give me the actor of the claim to fame, that is a work, of Michael Ballhaus and native of the figure known as the nick name of Jackson, Tennessee.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/nickname> ?v2 . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Michael_Ballhaus> <http://dbpedia.org/ontology/knownFor> ?v4 . <http://dbpedia.org/resource/Jackson,_Tennessee> <http://xmlns.com/foaf/0.1/nick> ?v2 . ?v4 <http://dbpedia.org/ontology/starring> ?result . }","```sparql
# Step 1: Find a notable work of Michael Ballhaus
SELECT ?work WHERE {
  wd:Q12345 dbo:filmCinematographer ?work .
}

# Step 2: Find an actor from that work
SELECT DISTINCT ?actor WHERE {
  ?work dbo:starring ?actor .
}

# Step 3: Identify Al Green's birthplace
SELECT ?birthPlace WHERE {
  wd:Q12346 dbo:birthPlace ?birthPlace .
}
```

Note: Replace `wd:Q12345` with the actual DBpedia identifier for Michael Ballhaus and `wd:Q12346` with the identifier for Al Green.",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
378,55,test,Give me the war of the commander in Peninsular War and war of the person born as Carl Pontus Gahn and claim to fame of the commander in Great Siege of Gibraltar.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/knownFor> ?result . <http://dbpedia.org/resource/Peninsular_War> <http://dbpedia.org/ontology/commander> ?v5 . ?v3 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Great_Siege_of_Gibraltar> <http://dbpedia.org/ontology/commander> ?v2 . ?v3 <http://dbpedia.org/property/birthName> ""Carl Pontus Gahn""@en . ?v5 <http://dbpedia.org/ontology/battle> ?result . }","```sparql
SELECT ?person ?role ?event WHERE {
  # Arthur Wellesley and the Peninsular War
  { 
    ?person rdfs:label ""Arthur Wellesley""@en .
    ?person dbo:nationality dbr:United_Kingdom .
    ?person dbo:occupation dbr:Military_person .
    ?event dbo:name ""Peninsular_War""@en ;
           dbo:participatedIn ?person .
  }
  
  UNION
  
  # Jöns Jacob Berzelius and his claim to fame
  { 
    ?person rdfs:label ""Jöns Jacob Berzelius""@en .
    ?person dbo:nationality dbr:Sweden .
    ?person dbo:occupation dbr:Chemist .
    ?fame dbo:fieldOfStudy ?person ;
          rdf:type dbo:Achievement .
  }
  
  UNION
  
  # George Augustus Eliott and the Great Siege of Gibraltar
  { 
    ?person rdfs:label ""George Augustus Eliott""@en .
    ?person dbo:nationality dbr:United_Kingdom .
    ?person dbo:occupation dbr:Military_person .
    ?event dbo:name ""Great_Siege_of_Gibraltar""@en ;
           dbo:participatedIn ?person .
  }
}
```",6,6,7,2,3,3,3,71,0,0,2,0,0.0,0
55,26,test,"Give me the band member of the producer, that is a band, of Used to Love Her and band member of Metallica and band of the reference, that is a band, to Newsted.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Used_to_Love_Her> <http://dbpedia.org/ontology/producer> ?v4 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Metallica> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?v1 <http://xmlns.com/foaf/0.1/name> ""Newsted""@en . }","```sparql
# Step 1: Identify the producer of ""Used to Love Her""
SELECT ?producer WHERE {
  ?song dcterms:title ""Used to Love Her"" .
  ?song dbo:performer ?artist .
  ?artist dbo:recordLabel ?label .
  ?label dbo:president ?producer .
}

# Step 2: Check if the producer is a band and find a member
SELECT ?bandMember WHERE {
  ?producer rdfs:seeAlso ?band .
  ?band dbo:member ?bandMember .
}

# Step 3: Identify a Metallica band member
SELECT ?metallicaMember WHERE {
  wd:Q1522 dbo:member ?metallicaMember .
}

# Step 4: Find the reference to Newsted and his subsequent band
SELECT ?newstedBand WHERE {
  wd:Q1522 dbo:ex-member wd:Q12345 . # Jason Newsted's QID
  wd:Q12345 dbo:memberOf ?newstedBand .
}
```",5,7,6,2,3,2,3,28,0,0,1,0,0.0,0
161,39,test,"Give me the military force of Spanish Civil War and commander in the force, that is an event, of the figure known as El Director.","SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/nick> ""El Director""@en . ?v1 <http://dbpedia.org/ontology/commander> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce ?commander WHERE {
  # Identify the Spanish Civil War event
  dbr:Spanish_Civil_War a dbo:MilitaryConflict .

  # Identify Francisco Franco (El Director) and his role in the conflict
  dbr:Franco a dbo:Person ;
     dbo:nationality dbr:Spain ;
     dbo:spouse ?spouse . # To ensure we are referring to the correct person

  OPTIONAL {
    ?militaryForce dbo:commander ?commander .
    ?commander rdfs:label ""Francisco Franco""@en .
    FILTER(CONTAINS(LCASE(?militaryForce), ""nationalist"")) # Filter for Nationalist faction
  }
}
```",4,5,5,3,2,3,3,71,0,0,32,0,0.0,0
959,63,test,"Give me the manager of the team of Takashi Sekizuka and member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of the person born in 1958 and native of the residence, that is a country, of Yōichi Masuzoe.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?result <http://dbpedia.org/ontology/team> ?v1 . ?v0 <http://dbpedia.org/ontology/manager> ?result . ?v3 <http://dbpedia.org/ontology/birthYear> ""1958""^^<http://www.w3.org/2001/XMLSchema#gYear> . <http://dbpedia.org/resource/Yōichi_Masuzoe> <http://dbpedia.org/property/residence> ?v5 . ?v0 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Takashi_Sekizuka> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?result <http://dbpedia.org/ontology/birthPlace> ?v5 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?v3 <http://dbpedia.org/ontology/almaMater> ?v1 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?manager ?university WHERE {
  # Step 1: Identify Yōichi Masuzoe
  ?yoshiichi a dbo:Person ;
             dbo:birthYear ""1958""^^xsd:gYear ;
             dbo:nationality dbr:Japan .

  # Step 2: Find Takashi Sekizuka's team and its manager
  ?sekizuka dbo:team ?team .
  ?team dbo:manager ?manager .

  # Step 3: Determine the alma mater of the manager
  ?manager dbo:almaMater ?university ;
           dbo:nationality dbr:Japan .
  
  # Ensure the university is a Japanese organization and educational institution
  ?university a dbo:EducationalInstitution, dbo:Organization ;
              dbo:country dbr:Japan .
}
```",7,12,8,3,3,3,3,71,0,0,3,0,0.0,0
959,49,test,"Give me the manager of the team of the manager, that is a sports manager, of 1998 Kashima Antlers season and member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of Eiji Ōtsuka.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/team> ?v2 . <http://dbpedia.org/resource/Eiji_Ōtsuka> <http://dbpedia.org/ontology/almaMater> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. <http://dbpedia.org/resource/1998_Kashima_Antlers_season> <http://dbpedia.org/ontology/manager> ?v4 . ?v0 <http://dbpedia.org/ontology/manager> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?v0 <http://dbpedia.org/ontology/manager> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. },"```sparql
# Step 1: Find Eiji Ōtsuka's alma mater
SELECT ?university WHERE {
    wd:Q1234567 dbo:almaMater ?university .
    FILTER (langMatches(lang(?university), ""ja""))
}

# Step 2: Find the manager of the 1998 Kashima Antlers season
SELECT ?manager WHERE {
    wd:Q7890123 dbo:managerOfTeam ?team .
    ?team dbo:season ?season .
    ?season dbo:date ""1998""^^xsd:gYear .
}

# Step 3: Verify if this person is a sports manager
ASK {
    ?manager rdf:type dbo:SportsManager .
}

# Step 4: Find the team managed by this sports manager
SELECT ?team WHERE {
    ?manager dbo:managesTeam ?team .
}

# Step 5: Find the manager of that team
SELECT ?finalManager WHERE {
    ?team dbo:currentManager ?finalManager .
}
```

Note: Replace `wd:Q1234567` with Eiji Ōtsuka's DBpedia entity ID and `wd:Q7890123` with the entity ID for the 1998 Kashima Antlers team.",5,10,6,3,2,3,3,71,0,0,2,0,0.0,0
391,32,test,"Give me the actor of the claim to fame, that is a work, of Michael Ballhaus and native of the figure known as Hub City.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/nickname> ""Hub City""@en . <http://dbpedia.org/resource/Michael_Ballhaus> <http://dbpedia.org/ontology/knownFor> ?v3 . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://dbpedia.org/ontology/starring> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  # Michael Ballhaus's claim to fame work
  ?work dbo:directorOfPhotography dbr:Michael_Ballhaus .
  
  # Actor in the work
  ?work dbo:starring ?actor .

  # Chris Cooper is from Columbia, South Carolina (Hub City)
  ?actor dbo:birthPlace dbr:Columbia,_South_Carolina .
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
54,62,test,Give me the predecessor of Ameitta Thiri Maha Dhamma Dewi of Ava and parent of the child of the parent of Thado Minsaw of Prome and child of the father of the child of Thinkhaya of Pagan.,SELECT ?result WHERE { <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?v4 . ?v6 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> . ?v6 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Ameitta_Thiri_Maha_Dhamma_Dewi_of_Ava> . ?v3 <http://dbpedia.org/ontology/child> ?result . ?v4 <http://dbpedia.org/property/father> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?predecessor WHERE {
  ?person rdfs:label ""Ameitta Thiri Maha Dhamma Dewi""@en .
  ?person dbo:predecessor ?predecessor .
}
```",7,7,8,3,3,3,3,71,0,0,1,0,0.0,0
488,49,test,"Give me the birth place of the commander in Boshin War and administration of the father of the spouse, that is a royalty, of Tokugawa Masako.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Tokugawa_Masako> . <http://dbpedia.org/resource/Boshin_War> <http://dbpedia.org/ontology/commander> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/leader> ?v1 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/father> ?v1 . },"```sparql
# Step 1: Find Tokugawa Masako's spouse
SELECT ?emperorMeiji WHERE {
  wd:Q11998 wdt:P26 ?emperorMeiji .
}

# Step 2: Determine the father of Emperor Meiji
SELECT ?emperorKomei WHERE {
  ?emperorMeiji wdt:P22 ?emperorKomei .
}

# Step 3: Find Saigō Takamori as a commander in the Boshin War
SELECT ?saigoTakamori WHERE {
  wd:Q1234 wdt:P39 ?saigoTakamori . # Assuming Q1234 is the Boshin War entity
}

# Step 4: Determine the birthplace of Saigō Takamori
SELECT ?birthPlace WHERE {
  ?saigoTakamori wdt:P19 ?birthPlace .
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
747,71,test,"Give me the person born on the birth date of the person decedent, that is an athlete and a soccer player, at Zolotonosha and band of the person born as the persona of Shèna and band of the writer of the work, that is a song, of Amba Shepherd.",SELECT ?result WHERE { <http://dbpedia.org/resource/Shèna> <http://xmlns.com/foaf/0.1/givenName> ?v7 . ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v8 <http://dbpedia.org/property/birthName> ?v7 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v4 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Amba_Shepherd> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?result <http://dbpedia.org/ontology/birthDate> ?v2 . ?v1 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Zolotonosha> . ?v8 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://dbpedia.org/property/writer> ?v5 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v1 <http://dbpedia.org/ontology/birthDate> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?athlete ?band1 ?band2 WHERE {
  # Step 1: Identify a song written by Amba Shepherd
  ?song dbo:composer dbr:Amba_Shepherd .

  # Step 2: Find the writer of that song
  ?song dbo:lyricist ?writer .

  # Step 3: Determine the band of the writer
  ?writer dbo:band ?band1 .

  # Step 4: Identify Shèna's persona and find their birth date
  ?persona rdfs:label ""Shèna""@en .
  ?persona dbo:birthDate ?shenaBirthDate .

  # Step 5: Find the band of Shèna's persona
  ?persona dbo:band ?band2 .

  # Step 6: Find an athlete and soccer player born on the writer's birth date at Zolotonosha
  ?athlete dbo:birthDate ?writerBirthDate ;
           dbo:sport dbr:Soccer ;
           dbo:birthPlace dbr:Zolotonosha .
}
```",9,12,10,3,3,3,3,71,0,0,1,0,0.0,0
492,63,test,"Give me the commander in the war, that is a military conflict and an event, of Frédéric-Georges Herr and person decedent at the capital, that is a settlement, of Algeria and person decedent at the work of the author of French Algeria.",SELECT ?result WHERE { ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Algeria> <http://dbpedia.org/ontology/capital> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v3 <http://dbpedia.org/property/author> ?v4 . ?v6 <http://dbpedia.org/ontology/commander> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/French_Algeria> <http://dbpedia.org/property/author> ?v4 . ?result <http://dbpedia.org/ontology/deathPlace> ?v3 . ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . <http://dbpedia.org/resource/Frédéric-Georges_Herr> <http://dbpedia.org/ontology/battle> ?v6 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  # Frédéric-Georges Herr's military involvement
  ?herr a dbo:MilitaryPerson ;
       foaf:name ""Frédéric-Georges Herr""@en .
  
  # War he was involved in, classified as both a conflict and an event
  ?war dbo:commander ?herr ;
       rdf:type dbo:MilitaryConflict, dbo:Event .

  # Person who died in Algiers (capital of Algeria)
  ?decedentInAlgiers dbo:placeOfBirth dbr:Algiers ;
                     dbo:deathPlace dbr:Algiers .
  
  # Author of ""French Algeria"" and their place of death
  ?author dbo:work dbr:French_Algeria ;
          dbo:deathPlace ?deathPlaceOfWork .

  # Find the commander who matches all criteria
  ?commander dbo:commander ?war ;
             foaf:name ?name .
  
  FILTER(?decedentInAlgiers = ?commander || ?deathPlaceOfWork = ?commander)
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
617,68,test,"Give me the parent of the child of Antiochus (son of Antiochus III the Great) and child of the child, that is a royalty, of the successor, that is a royalty, of Antiochus II Theos and spouse of the child of the successor, that is a royalty, of Antiochus (son of Antiochus III the Great).",SELECT ?result WHERE { <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/child> ?v3 . ?v7 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/child> ?v3 . ?result <http://dbpedia.org/property/father> ?v4 . ?v0 <http://dbpedia.org/ontology/child> ?v7 . ?v4 <http://dbpedia.org/property/father> ?v5 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Antiochus_II_Theos> <http://dbpedia.org/ontology/successor> ?v5 . <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/successor> ?v0 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?finalParent WHERE {
  # Step 1: Identify Antiochus (son of Antiochus III the Great)
  ?antiochusIII a dbo:Monarch ;
                dbo:spouse ?wife ;
                dbo:child ?antiochusIV .

  # Step 2: Find the child of this Antiochus
  ?antiochusIV dbo:child ?childOfAntiochusIV .

  # Step 3: Determine the parent of this child
  ?parent1 dbo:child ?childOfAntiochusIV .

  # Step 4: Identify the successor (royalty) of Antiochus II Theos
  ?antiochusII a dbo:Monarch ;
               dbo:succeededBy ?successorAntiochusII .

  # Step 5: Find the child of this successor
  ?successorChildOfAntiochusII dbo:child ?childOfSuccessorAntiochusII .

  # Step 6: Determine the spouse of this child
  ?spouse dbr:Marriage ?marriage ;
          dbo:spouse ?childOfSuccessorAntiochusII .

  # Step 7: Identify the successor (royalty) of Antiochus (son of Antiochus III)
  ?antiochusIV dbo:succeededBy ?successorAntiochusIV .

  # Step 8: Find the child of this successor
  ?successorChildOfAntiochusIV dbo:child ?childOfSuccessorAntiochusIV .

  # Step 9: Determine the parent of this child
  ?parent2 dbo:child ?childOfSuccessorAntiochusIV .

  # Step 10: Combine these relationships to find the final answer
  FILTER(?spouse = ?successorChildOfAntiochusII)
  BIND(CONCAT(""The parent is: "", STR(?parent1), "" and "", STR(?parent2)) AS ?finalParent)
}
```",8,11,9,3,3,3,3,71,0,0,2,0,0.0,0
981,19,test,"Give me the birth place of the person born, that is a beauty queen, as the author of Kamikaze Girls and entity in the region of Time in Indonesia.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/birthName> ?v0 . <http://dbpedia.org/resource/Kamikaze_Girls> <http://dbpedia.org/property/author> ?v0 . ?v4 <http://dbpedia.org/ontology/birthPlace> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BeautyQueen>. ?result <http://dbpedia.org/ontology/country> ?v2 . ?v2 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Time_in_Indonesia> . },"```sparql
SELECT ?birthPlace WHERE {
  ?person dbo:birthPlace ?birthPlace .
  ?person rdfs:label ""Ayu Utami""@en .
  FILTER (lang(?person) = 'en')
}
```",5,6,6,3,2,3,2,20,0,0,19,0,0.0,0
378,60,test,"Give me the claim to fame of the commander in the war, that is a military conflict and a societal event and an event, of Thomas Trigge and war of the person born as the birth name of Carl Pontus Gahn.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/property/birthName> ?v3 . ?v2 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/property/birthName> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://dbpedia.org/ontology/commander> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/knownFor> ?result . <http://dbpedia.org/resource/Thomas_Trigge> <http://dbpedia.org/ontology/battle> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?event WHERE {
  ?person1 dbo:nationality dbr:Sweden .
  ?person1 rdfs:label ""Thomas Trigge""@en .
  ?person2 rdfs:label ""Carl Wilhelm Scheele""@en .
  ?event dbo:participatedInMilitaryConflict ?person1 ;
         dbo:participatedInMilitaryConflict ?person2 .
  FILTER (CONTAINS(LCASE(?event), ""great northern war""))
}
```",6,9,7,3,2,3,3,71,0,0,2,0,0.0,0
9,33,test,"Give me the alma mater of the awardee of the reference, that is an award, to Royal Medals and alma mater of John Alderdice, Baron Alderdice.","SELECT ?result WHERE { <http://dbpedia.org/resource/John_Alderdice,_Baron_Alderdice> <http://dbpedia.org/ontology/almaMater> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v3 <http://dbpedia.org/ontology/almaMater> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Royal Medals""@en . ?v3 <http://dbpedia.org/property/awards> ?v0 . }","```sparql
# Query for Royal Medals awardees and their alma maters
SELECT DISTINCT ?awardee ?almaMater WHERE {
  ?award rdf:type dbo:Award .
  ?award dbo:officialName ""Royal Medal""@en .
  ?award dbo:recipient ?awardee .
  OPTIONAL { 
    ?awardee dbo:almaMater ?almaMater .
  }
}

UNION

# Query for John Alderdice's alma mater
SELECT DISTINCT ?person ?almaMater WHERE {
  ?person rdfs:label ""John Alderdice, Baron Alderdice""@en ;
          rdf:type dbo:Person .
  OPTIONAL { 
    ?person dbo:almaMater ?almaMater .
  }
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
981,18,test,"Give me the birth place of the person born, that is a beauty queen, as  and entity in the region of the time zone in Salak, North Sumatra.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v2 . ?v2 <http://dbpedia.org/property/timeZone> ?v1 . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v3 <http://dbpedia.org/property/birthName> """"@en . <http://dbpedia.org/resource/Salak,_North_Sumatra> <http://dbpedia.org/ontology/timeZone> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BeautyQueen>. }","```sparql
SELECT ?person ?birthPlace WHERE {
  ?person dbo:occupation dbr:Beauty_queen .
  ?person dbo:wikiPageWikiLink ?region .
  ?region rdfs:label ""Salak, North Sumatra""@en .
  OPTIONAL { ?person dbp:birthPlace ?birthPlace . }
}
```",5,6,6,3,2,3,2,20,0,0,19,0,0.0,0
54,49,test,"Give me the child of the father of Soe Min Wimala Dewi and predecessor of the child, that is an office holder and a royalty, of the reference to Thihapate of Mohnyin.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/successor> ?v1 . <http://dbpedia.org/resource/Soe_Min_Wimala_Dewi> <http://dbpedia.org/property/father> ?v2 . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Thihapate of Mohnyin""@en . ?v1 <http://dbpedia.org/property/father> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Step 1: Identify Soe Min Wimala Dewi's father
  ?soeMinWimalaDewi dbo:parent ?father .
  FILTER (str(?soeMinWimalaDewi) = ""Soe_Min_Wimala_Dewi"")

  # Step 2: Find the child of Soe Min Wimala Dewi's father
  ?father dbo:child ?child .

  # Step 3: Identify Thihapate of Mohnyin
  ?thihapate dbr:Thihapate_of_Mohnyin .

  # Step 4: Find the child of Thihapate of Mohnyin
  ?thihapate dbo:child ?thihapateChild .

  # Step 5: Predecessor of the child
  ?thihapateChild dbo:predecessor ?predecessor .

  # Step 6: Ensure predecessor is an office holder and royalty
  ?predecessor a dbo:Monarch ;
               dbo:officeHolder true .

  # Step 7: Commonality - The person should be the same in both contexts
  FILTER (?child = ?predecessor)
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
161,48,test,"Give me the military force of the force, that is a societal event and an event and a military conflict, of the person decedent at Francoist Spain and commander in the force, that is an event, of Emilio Mola.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v3 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Francoist_Spain> . ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Emilio_Mola> . ?v2 <http://dbpedia.org/ontology/commander> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
# Step 1: Find the military force commanded by Emilio Mola
SELECT ?militaryForce WHERE {
  ?emilioMola dbo:occupation ""Military commander""@en .
  ?emilioMola foaf:name ""Emilio Mola""@en .
  ?emilioMola dbo:commanderOf ?militaryForce .
}

# Step 2: Identify the military conflict involving this force
SELECT ?conflict WHERE {
  ?militaryForce dbo:participatedIn ?conflict .
  ?conflict rdf:type dbpedia-owl:MilitaryConflict .
  ?conflict rdf:type dbpedia-owl:SocietalEvent .
}

# Step 3: Find a person who died during Francoist Spain and their military force
SELECT ?decedentForce WHERE {
  ?francoistSpain dbo:wikiPageRedirects dbpedia-es:Franquismo .
  ?person dbo:deathPlace ?francoistSpain .
  ?person dbo:militaryService ?decedentForce .
}
```",5,9,6,3,2,3,3,71,0,0,34,0,0.0,0
303,27,test,"Give me the party of Guillermo Endara and party of the person born, that is a politician, as Arnulfo Arias Madrid and entity in the country, that is a country, of El Valle de Antón.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Guillermo_Endara> <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/El_Valle_de_Antón> <http://dbpedia.org/ontology/country> ?v3 . ?v0 <http://dbpedia.org/property/birthName> ""Arnulfo Arias Madrid""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
# Query to get Guillermo Endara's political party
SELECT ?party WHERE {
  dbpedia:Guillermo_Endara dbo:politicalParty ?party .
}

# Query to get Arnulfo Arias Madrid's birth details and confirm he is a politician
SELECT ?birthPlace ?birthDate WHERE {
  dbpedia:Arnulfo_Arias_Madrid dbo:birthPlace ?birthPlace ;
                                 dbo:birthDate ?birthDate .
  FILTER EXISTS { dbpedia:Arnulfo_Arias_Madrid rdf:type dbo:Politician }
}

# Query to get the country of El Valle de Antón
SELECT ?country WHERE {
  dbpedia:El_Valle_de_Ant%C3%B3n dbo:locatedInCountry ?country .
}
```",5,7,6,2,3,2,3,28,0,0,1,0,0.0,0
488,45,test,"Give me the administration of the father of the spouse, that is a royalty, of Tokugawa Masako and birth place of Enomoto Takeaki and death place of Tokugawa Ieyasu.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Tokugawa_Masako> . <http://dbpedia.org/resource/Enomoto_Takeaki> <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/property/leader> ?v1 . <http://dbpedia.org/resource/Tokugawa_Ieyasu> <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?administration ?birthPlace ?deathPlace WHERE {
  # Enomoto Bunroku's administration and royalty check
  OPTIONAL { 
    dbr:Enomoto_Bunroku dbo:positionHeld ?administration .
    FILTER(CONTAINS(LCASE(STR(?administration)), ""royalty""))
  }

  # Enomoto Takeaki's birthplace
  dbr:Enomoto_Takeaki dbo:birthPlace ?birthPlace .

  # Tokugawa Ieyasu's death place
  dbr:Tokugawa_Ieyasu dbo:deathPlace ?deathPlace .
}
```",5,6,6,3,3,3,3,71,1,2,0,0.3333333333333333,1.0,0.5
281,61,test,"Give me the war of the profession, that is a military unit, of the professional, that is an office holder and a politician, in New Zealand Army and entity in the birth place, that is a country, of the leader, that is a politician, of 1962 New South Wales state election.",SELECT ?result WHERE { <http://dbpedia.org/resource/1962_New_South_Wales_state_election> <http://dbpedia.org/property/leader> ?v0 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/New_Zealand_Army> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/property/occupation> ?v3 . ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/ontology/birthPlace> ?v5 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?result <http://dbpedia.org/ontology/place> ?v5 . },"```sparql
# Step 1: Find the leader of the 1962 New South Wales state election
SELECT ?leader WHERE {
  ?election dcterms:title ""1962 New South Wales state election""@en .
  ?election dbo:leader ?leader .
}

# Step 2: Determine the birthplace (country) of that leader
SELECT ?birthPlaceCountry WHERE {
  ?leader foaf:bornIn ?birthPlace .
  ?birthPlace geo:hasCountry ?birthPlaceCountry .
}

# Step 3: Find a military unit in the New Zealand Army related to an office holder and politician
SELECT ?militaryUnit WHERE {
  ?unit dbo:militaryBranch dbr:New_Zealand_Army ;
        rdfs:label ?unitLabel .
  FILTER(CONTAINS(LCASE(?unitLabel), ""politician"") || CONTAINS(LCASE(?unitLabel), ""office""))
}

# Step 4: Connect this military unit to an entity in the birthplace (England)
SELECT ?entity WHERE {
  ?militaryUnit dbo:relatedEntity ?entity .
  ?entity geo:location ?birthPlaceCountry .
}
```",6,11,7,3,2,3,3,71,0,0,1,0,0.0,0
421,23,test,Give me the person born as the birth name of Dino Merlin and band member of the awardee of [[#Awards and nominations.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?result <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Dino_Merlin> <http://dbpedia.org/property/birthName> ?v2 . ?v1 <http://dbpedia.org/property/awards> ""[[#Awards and nominations""@en . }","```sparql
# Step 1: Get Dino Merlin's birth name
SELECT ?birthName WHERE {
  dbpedia:en:Dino_Merlin dbo:birthName ?birthName .
}

# Step 2: Find an award-winning band and a member of that band
SELECT DISTINCT ?bandMember WHERE {
  ?band dbo:award ?award .
  ?band dbo:member ?bandMember .
}
```",4,4,5,2,2,2,3,28,0,0,1,0,0.0,0
801,19,test,Give me the producer of Westside Story (song) and professional in the alter ego of The Shadow.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v0 . <http://dbpedia.org/resource/Westside_Story_(song)> <http://dbpedia.org/ontology/producer> ?result . },"```sparql
# Query 1: Producer of ""West Side Story (song)""
SELECT ?producer WHERE {
  dbpedia:West_Side_Story_(song) dbo:producer ?producer .
}

# Query 2: Profession of Lamont Cranston, the alter ego of The Shadow
SELECT ?profession WHERE {
  dbpedia:Lamont_Cranston dbo:occupation ?profession .
}
```",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
994,44,test,"Give me the band member of the person born, that is a musical artist, as Donald Maynard Dokken and associated musical artist of the band member, that is a band and a group and an organisation, of Meshuggah and associated musical artist of S.A. Slayer.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Meshuggah> . ?v0 <http://dbpedia.org/property/birthName> ""Donald Maynard Dokken""@en . <http://dbpedia.org/resource/S.A._Slayer> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
# Step 1: Find Donald Maynard Dokken's band members
SELECT ?bandMember WHERE {
  ?dokken dbo:birthName ""Donald Maynard Dokken""@en .
  ?dokken dbo:associatedBand ?band .
  ?bandMember dbo:memberOf ?band ;
              a dbo:MusicalArtist .
}

# Step 2: Find associated musical artists of Meshuggah's band members
SELECT DISTINCT ?associatedArtist WHERE {
  ?meshuggah dbo:type dbr:Band ;
             dbo:bandMember ?meshuggahMember .
  ?meshuggahMember dbo:associatedBand ?otherBand .
  ?otherBand dbo:member ?associatedArtist .
  FILTER(?meshuggah = dbpedia:Meshuggah)
}

# Step 3: Find associated musical artist of S.A. Slayer
SELECT DISTINCT ?associatedArtist WHERE {
  ?sASlayer dbo:birthName ""S.A. Slayer""@en ;
            dbo:associatedBand ?band .
  ?bandMember dbo:memberOf ?band ;
              a dbo:MusicalArtist .
  ?bandMember dbo:associatedBand ?otherBand .
  ?otherBand dbo:member ?associatedArtist .
}
```",5,9,6,2,3,3,3,71,0,0,1,0,0.0,0
232,36,test,"Give me the child of Jon Pertwee and native of the residence, that is a settlement and British, of the native, that is a politician and an office holder, of France.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/France> . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/ontology/child> ?result . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v0 <http://dbpedia.org/property/residence> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child ?residence ?politician WHERE {
  # Jon Pertwee's children
  VALUES ?parent { dbr:Jon_Pertwee }
  
  ?child dbo:parent ?parent .
  
  # Residence of the child
  ?child dbo:residence ?residence .

  # Ensure the residence is a British settlement
  ?residence dbo:country dbr:United_Kingdom ;
             a dbo:Settlement .

  # French politician native to this settlement and holding an office
  ?politician dbo:nativePlace ?residence ;
              dbo:officeHolder true ;
              dbo:country dbr:France .
}
```",4,8,5,3,2,3,3,71,0,0,1,0,0.0,0
404,64,test,"Give me the child of the father of the spouse of Princess Victoria Louise of Prussia and spouse of the person born, that is a royalty, as the birth name of Princess Victoria Louise of Prussia and parent of Prince Ernest Augustus of Hanover (born 1914).",SELECT ?result WHERE { <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Prince_Ernest_Augustus_of_Hanover_(born_1914)> . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/property/birthName> ?v3 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/ontology/parent> ?v1 . ?v2 <http://dbpedia.org/property/birthName> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parentName WHERE {
  # Princess Victoria Louise of Prussia's birth name and spouse
  VALUES (?princess) { dbr:Princess_Victoria_Louise_of_Prussia }
  ?princess dbo:birthName ?birthName .
  ?princess dbo:spouse ?spouse .

  # Spouse's father
  ?spouse dbo:father ?father .

  # Father's child who is royalty and parent of Prince Ernest Augustus of Hanover (born 1914)
  ?child dbo:parent ?father ;
         dbo:birthDate ?birthDate .
  FILTER EXISTS { ?child dbo:parent dbr:Prince_Ernst_August_of_Hanover_(1914) }
  
  # Ensure the child is royalty
  ?child a dbo:Monarch .

  # Get the name of this parent (Ernest Augustus III)
  ?father rdfs:label ?parentName .
  FILTER(LANG(?parentName) = 'en')
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
391,36,test,"Give me the native of Compton, California and actor of the movie, that is a movie and a work and a television show, with the professional in .","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/starring> ?v0 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Compton,_California> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v0 <http://dbpedia.org/property/occupation> """"@en . ?v1 <http://dbpedia.org/property/starring> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  ?actor dbo:nationality dbr:United_States ;
         dbo:birthPlace dbr:Compton,_California .
  
  ?movie dbo:starring ?actor ;
         a dbo:Film ;
         dbo:workExample ?televisionShow .

  FILTER EXISTS { 
    ?televisionShow a dbo:TelevisionSeries .
  }
}
```",4,7,5,3,2,3,3,71,0,0,1,0,0.0,0
9,55,test,"Give me the alma mater of the awardee of Royal Medal and figure known as the nickname of Queen's University Belfast and alma mater of the mayor, that is a politician, of Northern Ireland Forum.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ?v2 . <http://dbpedia.org/resource/Queen's_University_Belfast> <http://dbpedia.org/property/nickname> ?v2 . <http://dbpedia.org/resource/Northern_Ireland_Forum> <http://dbpedia.org/property/leader> ?v3 . ?v5 <http://dbpedia.org/ontology/almaMater> ?result . ?v3 <http://dbpedia.org/ontology/almaMater> ?result . ?v5 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Medal> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
# Step 1: Find the Royal Medal awardee who is also associated with Queen's University Belfast.
SELECT ?person WHERE {
  ?person dbo:award dbp:Royal_Medal .
  OPTIONAL { ?person foaf:name ?name . }
  FILTER EXISTS { 
    ?education dbo:almaMater dbr:Queen's_University_Belfast ;
               dbo:student ?person .
  }
}

# Step 2: Find the mayor of the Northern Ireland Forum and their alma mater.
SELECT ?mayor ?university WHERE {
  ?mayor dbo:position dbp:Northern_Ireland_Forum_Mayor ;
         dbo:almaMater ?university .
  OPTIONAL { ?mayor foaf:name ?name . }
}

# Step 3: Find the common alma mater among these individuals.
SELECT DISTINCT ?commonAlmaMater WHERE {
  VALUES (?person1) { (<RoyalMedalAwardeeURI>) } # Replace with actual URI from step 1
  VALUES (?person2) { (<MayorOfNorthernIrelandForumURI>) } # Replace with actual URI from step 2

  ?education1 dbo:student ?person1 ;
              dbo:almaMater ?commonAlmaMater .
  ?education2 dbo:student ?person2 ;
              dbo:almaMater ?commonAlmaMater .
}
```

Note: The placeholders `<RoyalMedalAwardeeURI>` and `<MayorOfNorthernIrelandForumURI>` need to be replaced with the actual URIs obtained from steps 1 and 2.",6,7,7,2,3,3,3,71,0,0,1,0,0.0,0
328,40,test,Give me the commander in Eastern Front (World War II) and leader of People's Commissariat of Defense of the Soviet Union and awardee of the award of the commander in Volcano and Ryukyu Islands campaign.,SELECT ?result WHERE { <http://dbpedia.org/resource/People's_Commissariat_of_Defense_of_the_Soviet_Union> <http://dbpedia.org/ontology/leader> ?result . ?v2 <http://dbpedia.org/property/awards> ?v1 . <http://dbpedia.org/resource/Eastern_Front_(World_War_II)> <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Volcano_and_Ryukyu_Islands_campaign> <http://dbpedia.org/ontology/commander> ?v2 . ?result <http://dbpedia.org/property/awards> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?roleEasternFront ?roleDefenseCommissar ?awardVolcanoRyukyu WHERE {
  VALUES ?person { dbr:Joseph_Stalin }
  
  # Check for role in Eastern Front
  OPTIONAL {
    ?person dbo:office ?roleEasternFront .
    FILTER(CONTAINS(LCASE(STR(?roleEasternFront)), ""eastern front""))
  }

  # Check for leadership of People's Commissariat of Defense
  OPTIONAL {
    ?person dbo:office ?roleDefenseCommissar .
    FILTER(CONTAINS(LCASE(STR(?roleDefenseCommissar)), ""people's commissariat of defense""))
  }
  
  # Check for award related to Volcano and Ryukyu Islands campaign
  OPTIONAL {
    ?person dbo:honoraryTitle ?awardVolcanoRyukyu .
    FILTER(CONTAINS(LCASE(STR(?awardVolcanoRyukyu)), ""volcano"") || CONTAINS(LCASE(STR(?awardVolcanoRyukyu)), ""ryukyu islands""))
  }
}
```",5,5,6,3,3,3,3,71,0,1,1,0.0,0.0,0
626,16,test,"Give me the awardee of the award of Aleksey Petrovich Yermolov and commander in the force, that is a military conflict, of Alexander I of Russia.",SELECT ?result WHERE { <http://dbpedia.org/resource/Aleksey_Petrovich_Yermolov> <http://dbpedia.org/property/awards> ?v3 . ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Alexander_I_of_Russia> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/property/awards> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?awardee ?award ?conflict WHERE {
  # Find the award received by Aleksey Petrovich Yermolov
  dbr:Aleksey_Petrovich_Yermolov dbo:receivedAwards ?award .
  
  # Ensure that this awardee is also a commander in a conflict where Alexander I was a commander
  ?awardee dbo:receivedAwards ?award ;
          dbo:militaryConflict ?conflict .

  # Find conflicts commanded by Alexander I of Russia
  dbr:Alexander_I_of_Russia dbo:militaryCommanderOf ?conflict .
}
```",4,5,5,2,2,3,2,20,0,0,21,0,0.0,0
465,8,test,"Give me the death place of Jiřina Štěpničková and administration of the leader, that is a political party and an organisation, of Chamber of Deputies of the Czech Republic.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Chamber_of_Deputies_of_the_Czech_Republic> <http://dbpedia.org/property/leader> ?v0 . ?result <http://dbpedia.org/property/leaderParty> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. <http://dbpedia.org/resource/Jiřina_Štěpničková> <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
# Query to get the death place of Jiřina Štěpničková
SELECT ?deathPlace WHERE {
  wd:Q1234568 dbo:deathPlace ?deathPlace .
}

UNION

# Query to get the political party and organization of the leader of the Chamber of Deputies
SELECT DISTINCT ?partyLabel ?organizationLabel WHERE {
  # Assuming we have a way to identify the current leader's DBpedia resource, e.g., wd:Q7890123
  wd:Q7890123 dbo:politicalAffiliation ?party .
  ?party rdfs:label ?partyLabel .
  
  # Assuming the organization is linked through some property like dbo:organization or similar
  wd:Q7890123 dbo:organization ?organization .
  ?organization rdfs:label ?organizationLabel .
}
```

Note: Replace `wd:Q1234568` with the actual DBpedia resource identifier for Jiřina Štěpničková and `wd:Q7890123` with the identifier for the current leader of the Chamber of Deputies.",3,5,4,2,2,2,2,9,0,0,1,0,0.0,0
488,65,test,"Give me the death place of the father, that is a politician, of the father, that is an office holder, of Matsudaira Tadamasa and administration of the father of Emperor Go-Mizunoo and birth place of the commander in Boshin War.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> ?v3 . ?v6 <http://dbpedia.org/ontology/deathPlace> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Emperor_Go-Mizunoo> <http://dbpedia.org/property/father> ?v3 . ?v4 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Matsudaira_Tadamasa> <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/property/father> ?v6 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Boshin_War> <http://dbpedia.org/ontology/commander> ?v4 . },"```sparql
# Query for the death place of Matsudaira Sadanobu
SELECT ?deathPlace WHERE {
  ?s dbp:father ?f.
  ?f dbp:name ""Matsudaira Tadamasa""@en.
  ?s dbp:paternalGrandfather ?ggf.
  ?ggf dbp:name ""Matsudaira Sadanobu""@en;
      dbo:deathPlace ?deathPlace.
}

UNION

# Query for the administration of Tokugawa Ieyasu
SELECT ?administration WHERE {
  ?s dbp:father ?f.
  ?f dbp:name ""Emperor Go-Mizunoo""@en.
  ?s dbp:paternalGrandfather ?ggf.
  ?ggf dbp:name ""Tokugawa Ieyasu""@en;
      dbo:ruledTerritory ?administration.
}

UNION

# Query for the birthplace of Saigō Takamori
SELECT ?birthPlace WHERE {
  ?s dbp:commanderInBattle ?battle.
  ?battle dbp:name ""Boshin War""@en.
  ?s dbp:name ""Saigō Takamori""@en;
      dbo:birthPlace ?birthPlace.
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
488,68,test,"Give me the birth place of the commander in the war, that is a military conflict and an event and a societal event, of Saitō Hajime and administration of the father of Emperor Go-Mizunoo and death place of the father, that is a politician, of the father, that is an office holder, of Matsudaira Tadamasa.",SELECT ?result WHERE { <http://dbpedia.org/resource/Matsudaira_Tadamasa> <http://dbpedia.org/property/father> ?v0 . ?v4 <http://dbpedia.org/ontology/birthPlace> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v5 <http://dbpedia.org/ontology/commander> ?v4 . <http://dbpedia.org/resource/Saitō_Hajime> <http://dbpedia.org/ontology/battle> ?v5 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/property/father> ?v7 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v7 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Emperor_Go-Mizunoo> <http://dbpedia.org/property/father> ?v3 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/property/leader> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace ?deathPlace WHERE {
  # Saitō Hajime's birthplace
  dbr:Saitō_Hajime dbo:birthPlace ?birthPlace .

  # Tokugawa Ieyasu's death place
  dbr:Tokugawa_Ieyasu dbo:deathPlace ?deathPlace .
}
```",8,13,9,3,3,3,3,71,0,0,1,0,0.0,0
184,57,test,"Give me the child of the child of the parent, that is a royalty, of Archduke Ladislaus Philipp of Austria and parent of Géza von Habsburg and parent of the child of Archduke Joseph Francis of Austria.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Géza_von_Habsburg> . ?result <http://dbpedia.org/property/father> ?v5 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Francis_of_Austria> . <http://dbpedia.org/resource/Archduke_Ladislaus_Philipp_of_Austria> <http://dbpedia.org/ontology/parent> ?v0 . ?result <http://dbpedia.org/ontology/child> ?v3 . },"```sparql
SELECT ?royalChild WHERE {
  # Step 1: Identify Archduke Ladislaus Philipp of Austria
  ?ladislaus dbo:spouse ?parent .
  
  # Step 2: Find his parent (grandparent)
  ?parent dbo:child ?grandparent .

  # Step 3: Find the child of this grandparent who is royalty and a parent
  ?grandparent dbo:child ?royalChild .
  ?royalChild rdf:type dbo:RoyalFamilyMember .
  
  # Step 4: Ensure this royal child is also a parent to Géza von Habsburg
  ?royalChild dbo:child ?geza .

  # Step 5: Identify Archduke Joseph Francis of Austria's child
  ?joseph dbo:child ?josephsChild .

  # Step 6: Verify the royal child is also a parent of this child
  ?royalChild dbo:child ?josephsChild .
  
  FILTER (str(?ladislaus) = ""Archduke_Ladislaus_Philipp_of_Austria"")
  FILTER (str(?geza) = ""Géza_von_Habsburg"")
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
488,50,test,"Give me the death place of the father, that is a politician, of the father, that is an office holder, of Matsudaira Tadamasa and administration of the father of Emperor Go-Mizunoo.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Matsudaira_Tadamasa> <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/property/leader> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Emperor_Go-Mizunoo> <http://dbpedia.org/property/father> ?v3 . ?v0 <http://dbpedia.org/property/father> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
# Query to find the death place of Matsudaira Katamori
SELECT ?deathPlace WHERE {
  wd:Q123456 wdt:P20 ?deathPlace .
}

# Query to find the administration of Tokugawa Hidetada
SELECT ?administration WHERE {
  wd:Q654321 wdt:P39 ?administration .
}
```

Note: Replace `wd:Q123456` with the actual DBpedia identifier for Matsudaira Katamori and `wd:Q654321` with the identifier for Tokugawa Hidetada.",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
427,56,test,"Give me the party of the person born, that is an office holder and a politician, as the birth name of Romano Prodi and party of Giulio Andreotti and reference to the name of Italian People's Party (1994).",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://xmlns.com/foaf/0.1/name> ?v2 . <http://dbpedia.org/resource/Giulio_Andreotti> <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/property/birthName> ?v0 . ?v1 <http://dbpedia.org/ontology/party> ?result . ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Italian_People's_Party_(1994)> <http://xmlns.com/foaf/0.1/name> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?prodiParty ?andreottiParty ?partyName WHERE {
  # Romano Prodi's political party when he was an office holder
  OPTIONAL {
    ?prodi dbo:birthName ""Romano Prodi""@en .
    ?prodi dbo:politicalAffiliation ?prodiParty .
    FILTER EXISTS { ?prodiParty a dbo:PoliticalParty }
  }

  # Giulio Andreotti's political party when he was an office holder
  OPTIONAL {
    ?andreotti dbo:birthName ""Giulio Andreotti""@en .
    ?andreotti dbo:politicalAffiliation ?andreottiParty .
    FILTER EXISTS { ?andreottiParty a dbo:PoliticalParty }
  }

  # Italian People's Party (1994)
  ?party dbr:Italian_People%27s_Party_(1994) .
  ?party rdfs:label ?partyName .
  FILTER(LANG(?partyName) = ""en"")
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
232,66,test,"Give me the native of the residence, that is a settlement and British, of the native, that is a politician and an office holder, of France and actor of the claim to fame, that is a film and a military conflict, of Sean Pertwee and child of the person born as John Devon Roland Pertwee.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/birthName> ""John Devon Roland Pertwee""@en . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. <http://dbpedia.org/resource/Sean_Pertwee> <http://dbpedia.org/ontology/knownFor> ?v6 . ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/France> . ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v3 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://dbpedia.org/property/residence> ?v2 . ?v6 <http://dbpedia.org/ontology/starring> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. }","```sparql
SELECT DISTINCT ?nativeOfResidence WHERE {
  # Step 1: Identify Sean Pertwee's films and military conflicts
  ?film dbo:actor dbr:Sean_Pertwee .
  OPTIONAL { ?conflict dbo:participant dbr:Sean_Pertwee . }

  # Step 2: Find French politicians who are actors in these films or conflicts
  ?person dbo:nationality dbr:France ;
          a dbo:Politician ;
          dbo:officeHolder true ;
          dbo:actor ?film .
  OPTIONAL { ?person dbo:participant ?conflict . }

  # Step 3: Identify their British settlement residence
  ?person dbo:residence ?settlement .
  FILTER (strstarts(str(?settlement), ""http://dbpedia.org/resource/Category:"") || strstarts(str(?settlement), ""http://dbpedia.org/resource/""))

  # Ensure the settlement is in Britain
  ?settlement dbo:country dbr:United_Kingdom .

  # Step 4: Find the native of this settlement
  ?nativeOfResidence dbo:nativePlace ?settlement .
}
```",7,13,8,3,3,3,3,71,0,0,1,0,0.0,0
378,64,test,"Give me the claim to fame of the commander in the war, that is a military conflict and a societal event and an event, of Thomas Trigge and war of Joaquín Blake and war of the person born as the birth name of Carl Pontus Gahn.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Joaquín_Blake> <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/ontology/commander> ?v1 . <http://dbpedia.org/resource/Thomas_Trigge> <http://dbpedia.org/ontology/battle> ?v0 . ?v1 <http://dbpedia.org/ontology/knownFor> ?result . <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/property/birthName> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?event WHERE {
  # Find the war associated with Thomas Trigge
  ?trigge dbo:occupation dbr:Military_person .
  ?trigge dbo:knownFor ?event1 .

  # Find the war associated with Joaquín Blake
  ?blake dbo:occupation dbr:Military_person .
  ?blake dbo:knownFor ?event2 .

  # Ensure both events are the same
  FILTER (?event1 = ?event2)
  
  # Get Carl Pontus Gahn's birth name
  ?gahn dbo:birthName ?birthName .
  ?gahn rdfs:label ""Carl Pontus Gahn""@en .

  # Check if there is any connection between the event and Carl Pontus Gahn
  OPTIONAL { ?event1 dbo:relatedTo ?gahn }
  
  BIND(?event1 AS ?event)
}
```",7,10,8,3,3,3,3,71,0,0,2,0,0.0,0
9,48,test,"Give me the alma mater of the mayor, that is a politician, of the entity, that is an organisation, in Belfast and figure known as the nickname of Queen's University Belfast.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/almaMater> ?result . <http://dbpedia.org/resource/Queen's_University_Belfast> <http://dbpedia.org/property/nickname> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Belfast> . ?result <http://dbpedia.org/property/nickname> ?v1 . ?v3 <http://dbpedia.org/property/leader> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nickname ?mayorName ?almaMater WHERE {
  # Step 2: Get the nickname for Queen's University Belfast
  dbr:Queen's_University_Belfast dbo:nickName ?nickname .

  # Step 3: Find the current mayor of Belfast
  ?belfastMayor a dbo:Mayor ;
               foaf:name ?mayorName ;
               dbp:city dbr:Belfast .
  
  # Step 4: Get the alma mater of the mayor
  ?belfastMayor dbo:almaMater ?almaMater .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
528,54,test,Give me the war of the military force of Battle of Pisagua and war of the commander in the work of --01-09 and force of Narciso Campero.,"SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Pisagua> . ?v5 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/ontology/commander> ?v5 . ?v0 <http://dbpedia.org/property/author> ""--01-09""^^<http://www.w3.org/2001/XMLSchema#gMonthDay> . ?v3 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Narciso_Campero> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?battleWar ?pisaguaForce ?camperoWar ?camperoForce WHERE {
  # Battle of Pisagua details
  dbr:Battle_of_Pisagua dbo:partOf ?battleWar .
  dbr:Battle_of_Pisagua dbo:militaryConflicts ?pisaguaConflict .
  ?pisaguaConflict dbo:combatant1|dbo:combatant2 ?pisaguaForce .

  # Narciso Campero details
  OPTIONAL {
    ?camperoEvent dbo:agent dbr:Narciso_Campero ;
                  dbo:partOf ?camperoWar .
    ?camperoEvent dbo:militaryConflicts ?camperoConflict .
    ?camperoConflict dbo:combatant1|dbo:combatant2 ?camperoForce .
  }
}
```",6,6,7,3,3,3,3,71,0,0,2,0,0.0,0
161,46,test,"Give me the military force of the force, that is a societal event and a military conflict, of Francisco Largo Caballero and military force of the force, that is a societal event and an event and a military conflict, of the person decedent at Francoist Spain.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Francoist_Spain> . ?v1 <http://dbpedia.org/ontology/commander> ?v2 . },"```sparql
# Query for Francisco Largo Caballero
SELECT ?militaryForce WHERE {
  wd:Q12345 wdt:P106 wd:Q82955 . # Francisco Largo Caballero is a politician
  ?event wdt:P31/wdt:P279* wd:Q13442814 . # Event is a societal event
  ?event wdt:P6252 ?militaryForce . # Event involves military force
  ?conflict wdt:P31/wdt:P279* wd:Q16521 . # Conflict is a military conflict
  ?conflict wdt:P6252 ?militaryForce . # Conflict involves military force
  FILTER(?event != ?conflict)
}

UNION

# Query for person decedent at Francoist Spain
SELECT ?militaryForce WHERE {
  ?person wdt:P570 ?deathDate .
  ?deathEvent wdt:P31 wd:Q13442814 ; # Death event is a societal event
              wdt:P6252 ?militaryForce . # Involves military force
  ?conflict wdt:P31/wdt:P279* wd:Q16521 . # Conflict is a military conflict
  ?conflict wdt:P6252 ?militaryForce . # Conflict involves military force
  FILTER(?deathEvent != ?conflict)
  FILTER(YEAR(?deathDate) >= 1939 && YEAR(?deathDate) <= 1975) # During Francoist Spain
}
```

Note: Replace `wd:Q12345` with the actual DBpedia ID for Francisco Largo Caballero and adjust the query to find a specific person decedent at Francoist Spain.",5,10,6,3,2,3,3,71,0,0,514,0,0.0,0
184,25,test,Give me the child of Archduke Joseph August of Austria and parent of the child of Archduke Joseph Francis of Austria.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Francis_of_Austria> . ?result <http://dbpedia.org/ontology/child> ?v1 . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_August_of_Austria> . },"```sparql
SELECT ?person WHERE {
  # Find a person who is a child of Archduke Joseph August
  ?child dbr:Archduke_Joseph_August_of_Austria dbo:child ?person .
  
  # Check if this person has any children who are also children of Archduke Joseph Francis
  ?person dbo:child ?grandchild .
  ?grandchild dbr:Archduke_Joseph_Francis_of_Austria dbo:child ?grandchild .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
659,67,test,"Give me the commander in German campaign of 1813 and military force of the force, that is a societal event and an event and a military conflict, of the reference to Rutger Jan Schimmelpenninck and commander in the war, that is an event and a military conflict, of the figure known, that is a military unit and an organisation, as 'Polish Horse'.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/German_campaign_of_1813> <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/property/nickname> ""'Polish Horse'""@en . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://dbpedia.org/ontology/battle> ?v6 . ?v1 <http://xmlns.com/foaf/0.1/name> ""Rutger Jan Schimmelpenninck""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/ontology/commander> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v6 <http://dbpedia.org/ontology/commander> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?militaryForce WHERE {
  # Find the German Campaign of 1813 and its commander
  ?campaign dbo:partOf dbr:War_of_the_Sixth_Coalition ;
            rdfs:label ""German Campaign of 1813""@en .
  
  ?campaign dbo:commander ?commander .

  # Identify the military force known as 'Polish Horse'
  ?militaryForce dbo:name ""Polish Horse""@en ;
                 dbo:partOf ?campaign .

  OPTIONAL {
    # Check for any connection to Rutger Jan Schimmelpenninck
    ?schimmelpenninck dbo:occupation dbr:Military_officer ;
                     rdfs:label ""Rutger Jan Schimmelpenninck""@en .
    
    ?commander dbo:associatedWith ?schimmelpenninck .
  }
}
```",7,14,8,3,3,3,3,71,0,0,7,0,0.0,0
16,57,test,Give me the spouse of Ted McGinley and person born as the birth name of Gigi Rice and professional in the profession of the actor of Unnatural (TV series).,SELECT ?result WHERE { <http://dbpedia.org/resource/Unnatural_(TV_series)> <http://dbpedia.org/property/starring> ?v0 . <http://dbpedia.org/resource/Gigi_Rice> <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/property/occupation> ?v5 . ?result <http://dbpedia.org/property/birthName> ?v3 . ?result <http://dbpedia.org/property/occupation> ?v5 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?spouse ?personWithBirthName ?professionalInSameProfession
WHERE {
  # Spouse of Ted McGinley
  dbr:Ted_McGinley dbo:spouse ?spouse .

  # Person born as the birth name of Gigi Rice
  dbr:Gigi_Rice dbo:birthName ?birthName .
  ?personWithBirthName dbo:birthName ?birthName .

  # Professional in the profession of the actor of Unnatural (TV series)
  {
    SELECT DISTINCT ?actor ?profession WHERE {
      ?unrelatedSeries dbo:title ""Unnatural"" ;
                      dbo:starring ?actor .
      ?actor a dbo:Actor ;
             dbo:occupation ?profession .
    }
  } UNION {
    # In case the actor is not directly linked, we might need to find another way
    ?unrelatedSeries dbo:title ""Unnatural"" ;
                    dbo:starring ?actor .
    ?actor a dbo:Person ;
           dbo:occupation ?profession .
  }

  ?professionalInSameProfession a dbo:Person ;
                               dbo:occupation ?profession .
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
492,56,test,"Give me the person decedent at the capital, that is a settlement, of the country of Khemis Miliana District and person decedent at the work of US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite and commander in Franco-Hova Wars.","SELECT ?result WHERE { <http://dbpedia.org/resource/Khemis_Miliana_District> <http://dbpedia.org/ontology/country> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://dbpedia.org/property/author> ""US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite""@en . ?v0 <http://dbpedia.org/ontology/capital> ?v1 . ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . <http://dbpedia.org/resource/Franco-Hova_Wars> <http://dbpedia.org/ontology/commander> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person WHERE {
  # Khemis Miliana District capital
  dbr:Khemis_Miliana_District dbo:capital dbr:Khemis_Miliana .
  
  # Joseph C. Satterthwaite's place of death
  dbr:Joseph_C._Satterthwaite dbo:placeOfDeath ?deathPlace .

  # Commander in the Franco-Hova Wars
  ?commander a dbo:MilitaryPerson ;
             dbo:participatedInMilitaryConflict ?francoHovaWar .
  
  FILTER EXISTS { ?francoHovaWar rdfs:label ""Franco-Hova War""@en . }

  # Person who died at both places and was a commander
  ?person dbo:placeOfDeath dbr:Khemis_Miliana ;
          dbo:placeOfDeath ?deathPlace ;
          dbo:participatedInMilitaryConflict ?francoHovaWar .
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
696,18,test,"Give me the landmark at elevation of the award of Nie Rongzhen and birth place of the member of the associated musical artist, that is an organisation and a group and a band, of The Boils.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/bandMember> ?v2 . <http://dbpedia.org/resource/The_Boils> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Nie_Rongzhen> <http://dbpedia.org/property/awards> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/elevation> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?landmark WHERE {
  # Step 1: Identify Nie Rongzhen's Award
  ?nie dbo:honoraryTitle ?award .
  FILTER (str(?nie) = ""Nie_Rongzhen"") .

  # Step 2: Determine the Elevation of the Landmark Associated with the Award
  ?award dbo:location ?landmarkAward .
  ?landmarkAward dbo:elevation ?elevationAward .

  # Step 3: Find the Birthplace of a Member of The Boils
  ?member dbo:birthPlace ?birthPlaceMember .
  ?band dbo:member ?member .
  FILTER (str(?band) = ""The_Boils"") .

  # Step 4: Identify the Organisation, Group, or Band Associated with the Musical Artist
  OPTIONAL {
    ?artist dbo:associatedBandOrGroup ?organisation .
    ?organisation rdf:type/(dbo:MusicalArtist|dbo:Organization|dbo:Band) .
    ?member dbo:associatedMusicalArtist ?artist .
  }

  # Step 5: Find the Landmark at the Elevation of the Award and Birthplace of the Member
  ?landmark dbo:elevation ?elevationAward ;
            dbo:location ?birthPlaceMember .
}
```",5,8,6,3,2,3,2,20,0,0,1,0,0.0,0
328,49,test,"Give me the leader of the office, that is a government agency, of the leader, that is an office holder and a politician, of Gustav Jonson and awardee of the award of Bruce Fraser, 1st Baron Fraser of North Cape.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/office> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/leader> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape> <http://dbpedia.org/property/awards> ?v2 . ?result <http://dbpedia.org/property/awards> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. <http://dbpedia.org/resource/Gustav_Jonson> <http://dbpedia.org/property/leader> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?leaderOfOffice WHERE {
  # Step 1: Identify Gustav Jonson's political role
  ?gustavJonson a dbo:Politician ;
                foaf:name ""Gustav Jonson"" .
  
  # Assuming Gustav Jonson holds an office, find its leader
  ?office dbo:head ?leaderOfOffice ;
          dbo:member ?gustavJonson .

  # Step 2: Identify Bruce Fraser and the recipient of his award
  ?bruceFraser a dbo:Person ;
               foaf:name ""Bruce Fraser, 1st Baron Fraser of North Cape"" .
  
  ?award dbo:recipient ?awardee ;
         dbo:givenTo ?bruceFraser .

  # Assuming the Victoria Cross is the relevant award
  ?award rdfs:label ""Victoria Cross""@en .

  # Step 3: Find the government agency associated with both individuals
  ?office dbo:head ?leaderOfOffice ;
          dbo:member ?awardee .
  
  FILTER(?gustavJonson != ?awardee)
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
778,20,test,"Give me the entity in the award of the awardee, that is American, of Wolf Prize in Medicine and author of the work, that is a software, of the author of Pushd and popd.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/United_States>. ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Wolf_Prize_in_Medicine> . ?v5 <http://dbpedia.org/property/author> ?v4 . <http://dbpedia.org/resource/Pushd_and_popd> <http://dbpedia.org/property/author> ?v4 . ?result <http://dbpedia.org/ontology/location> ?v2 . ?v1 <http://dbpedia.org/property/awards> ?v2 . ?v5 <http://dbpedia.org/ontology/author> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Software>. },"```sparql
SELECT ?entity WHERE {
  ?person foaf:name ""Ken Thompson""@en .
  ?person dbo:award ?award .
  ?award dbo:recipient ?person .
  ?award dbo:category dbc:Wolf_Prize_in_Medicine .
  ?person dbo:nationality dbr:United_States .
  ?software dbo:author ?person .
  ?software rdf:type dbo:Software .
  ?work dbo:title ""Pushd""@en ;
        dbo:creator ?person .
  ?work dbo:title ""Popd""@en ;
        dbo:creator ?person .
  ?award dbo:entity ?entity .
}
```",6,8,7,3,2,3,2,20,0,0,1,0,0.0,0
427,65,test,"Give me the party of the father of the alumnus of Massachusetts Institute of Technology and party of the person born, that is an office holder and a politician, as Romano Antonio Prodi and reference to the name of Italian People's Party (1994).","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v4 . ?v0 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Massachusetts_Institute_of_Technology> . ?v6 <http://dbpedia.org/ontology/party> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/ontology/party> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Italian_People's_Party_(1994)> <http://xmlns.com/foaf/0.1/name> ?v4 . ?v0 <http://dbpedia.org/property/father> ?v6 . ?v3 <http://dbpedia.org/property/birthName> ""Romano Antonio Prodi""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?prodiParty ?fatherName ?fatherParty WHERE {
  # Romano Prodi's political affiliation
  OPTIONAL {
    dbr:Romano_Prodi dbo:politicalAffiliation ?party .
    FILTER EXISTS { ?party rdfs:label ""Italian People's Party (1994)""@en }
    BIND(?party AS ?prodiParty)
  }

  # Find an MIT alumnus and their father
  OPTIONAL {
    ?alumnus dbo:almaMater dbr:Massachusetts_Institute_of_Technology ;
             dbo:father ?father .
    
    # Get the father's name
    ?father rdfs:label ?fatherName .

    # Find the political party of the father
    OPTIONAL { 
      ?father dbo:politicalAffiliation ?fatherParty .
    }
  }
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
161,53,test,"Give me the commander in the force, that is an event, of Emilio Mola and military force of the force, that is a societal event and an event and a military conflict, of the person decedent at Francoist Spain and military force of Spanish Civil War.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Emilio_Mola> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v3 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Francoist_Spain> . ?v2 <http://dbpedia.org/ontology/commander> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce WHERE {
  # Emilio Mola's involvement in a military force or event
  dbr:Emilio_Mola dbo:militaryConflict ?militaryEvent .
  
  # The military event should be related to the Spanish Civil War
  ?militaryEvent dbo:partOf dbr:Spanish_Civil_War .

  # Francisco Franco's involvement in the same military force or event
  dbr:Franco_Spain dbo:militaryConflict ?militaryForce .
  ?militaryForce dbo:partOf dbr:Spanish_Civil_War .

  # Ensure the military force is both a societal event and a military conflict
  ?militaryForce rdf:type dbo:SocietalEvent ;
                 rdf:type dbo:MilitaryConflict .
}
```",6,10,7,3,3,3,3,71,0,0,32,0,0.0,0
645,20,test,"Give me the alma mater of the child of the parent of Adela Pankhurst and entity in the residence, that is a country, of the commander in Battle of Diamond Rock.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v2 . ?v1 <http://dbpedia.org/property/residence> ?v2 . <http://dbpedia.org/resource/Adela_Pankhurst> <http://dbpedia.org/ontology/parent> ?v4 . ?v4 <http://dbpedia.org/ontology/child> ?v5 . ?v5 <http://dbpedia.org/ontology/almaMater> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Battle_of_Diamond_Rock> <http://dbpedia.org/ontology/commander> ?v1 . },"```sparql
# Step 1: Find Adela Pankhurst's parent
SELECT ?parent WHERE {
  wd:Q123456 wdt:P40 ?parent .
}

# Step 2: Find the child of that parent (Adela Pankhurst)
SELECT ?child WHERE {
  ?parent wdt:P40 ?child .
  FILTER(?parent = wd:Q123456) # Replace with actual QID for Adela's parent
}

# Step 3: Determine the alma mater of this child
SELECT ?almaMater WHERE {
  ?child wdt:P69 ?almaMater .
}

# Step 4: Identify the commander in the Battle of Diamond Rock
SELECT ?commander WHERE {
  wd:Q789012 wdt:P112 ?commander . # Replace with actual QID for Battle of Diamond Rock
}

# Step 5: Find the residence entity that is a country for this commander
SELECT ?country WHERE {
  ?commander wdt:P551 ?residence .
  ?residence wdt:P31 wd:Q6256 . # P31: instance of, Q6256: Country
}
```

Note: Replace `wd:Q123456` with the actual DBpedia QID for Adela Pankhurst's parent and `wd:Q789012` with the QID for the Battle of Diamond Rock.",6,7,7,3,2,3,2,20,0,0,1,0,0.0,0
182,25,test,Give me the war of the work of Gotabhaya Rajapaksa and war of the author of 2019 Sri Lanka Easter bombings and entity in Sri Lanka.,SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/battle> ?result . ?v4 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Gotabhaya_Rajapaksa> . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Sri_Lanka> . ?v3 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/2019_Sri_Lanka_Easter_bombings> <http://dbpedia.org/property/author> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war ?author ?entity WHERE {
  # Gotabhaya Rajapaksa's war involvement
  dbr:Gotabhaya_Rajapaksa dbo:role ""Secretary of Defence""@en .
  dbr:Sri_Lankan_Civil_War dbo:participatedIn dbr:Gotabhaya_Rajapaksa .

  # Author of the Easter bombings
  ?author dbo:nationality dbr:Sri_Lanka ;
          dbo:occupation ""Islamic preacher""@en ;
          rdfs:label ?authorLabel .
  FILTER(CONTAINS(LCASE(?authorLabel), ""zahran hashim""))

  # Entity in Sri Lanka related to these events
  ?entity a dbo:Place ;
          dbo:country dbr:Sri_Lanka .

  # Ensure the entity is relevant (e.g., Colombo, where bombings occurred)
  FILTER(CONTAINS(LCASE(?entity), ""colombo"") || CONTAINS(LCASE(?entity), ""sri lanka""))
}
```",5,5,6,2,3,2,3,28,0,0,1,0,0.0,0
16,26,test,Give me the professional in the profession of the actor of Unnatural (TV series).,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/Unnatural_(TV_series)> <http://dbpedia.org/property/starring> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v2 . },"```sparql
SELECT DISTINCT ?actor ?profession WHERE {
  ?series dbo:title ""Unnatural (TV series)""@en .
  ?series dbo:starring ?actor .
  OPTIONAL { ?actor dbo:profession ?profession . }
}
```",3,3,4,3,1,3,3,71,0,0,40872,0,0.0,0
184,44,test,Give me the child of the child of Archduke Joseph Karl of Austria and parent of the child of Archduke Joseph Francis of Austria and parent of Géza von Habsburg.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Francis_of_Austria> . ?result <http://dbpedia.org/property/father> ?v4 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Géza_von_Habsburg> . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Karl_of_Austria> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?childOfChild ?parentOfGéza WHERE {
  # Step 1: Find a child of Archduke Joseph Karl of Austria
  ?person1 dbo:spouse|dbo:child dbr:Archduke_Joseph_Karl_of_Austria .
  
  # Step 2: Find the child of that person (child of child)
  ?childOfChild dbo:parent ?person1 .

  # Step 3: Find a child of Archduke Joseph Francis of Austria
  ?person2 dbo:spouse|dbo:child dbr:Archduke_Joseph_Francis_of_Austria .
  
  # Step 4: Find the parent of Géza von Habsburg
  ?parentOfGéza dbo:child dbr:G%C3%A9za_von_Habsburg .

  # Step 5: Match the child from step 2 with the parent from step 4
  FILTER (?childOfChild = ?parentOfGéza)
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
838,16,test,"Give me the band of the band member, that is an artist and a musical artist, of YU Grupa and band member of the band, that is a group, of YU Grupa.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/YU_Grupa> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/YU_Grupa> . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?bandMember ?otherBand WHERE {
  # Find band members of YU Grupa
  ?member dbo:bandMemberOf dbr:YU_Grupa .
  
  # Ensure the member is both an artist and a musical artist
  ?member dbo:occupation dbp:artist ;
          dbo:occupation dbp:musical_artist .

  # Find other bands (groups) that this member belongs to
  ?member dbo:bandMemberOf ?otherBand .
  
  # Filter to ensure the other band is classified as a group
  ?otherBand rdf:type dbo:MusicalGroup .
}
```",4,7,5,2,2,3,2,20,0,0,5,0,0.0,0
427,45,test,"Give me the party of the person born, that is an office holder and a politician, as the birth name of Romano Prodi and party of Giulio Andreotti and reference to Partito Popolare Italiano.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/party> ?result . ?result <http://xmlns.com/foaf/0.1/name> ""Partito Popolare Italiano""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/property/birthName> ?v0 . <http://dbpedia.org/resource/Giulio_Andreotti> <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/property/birthName> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?romanoProdiBirthName ?romanoProdiParty ?giulioAndreottiParty WHERE {
  # Romano Prodi's birth name and party affiliation
  OPTIONAL { 
    dbr:Romano_Prodi dbo:birthName ?romanoProdiBirthName .
  }
  OPTIONAL {
    dbr:Romano_Prodi dbo:politicalAffiliation ?romanoProdiParty .
  }

  # Giulio Andreotti's party affiliation
  OPTIONAL {
    dbr:Giulio_Andreotti dbo:politicalAffiliation ?giulioAndreottiParty .
  }

  # Check for any reference to Partito Popolare Italiano
  OPTIONAL {
    ?romanoProdiParty rdfs:label ""Partito Popolare Italiano""@it .
  }
  OPTIONAL {
    ?giulioAndreottiParty rdfs:label ""Partito Popolare Italiano""@it .
  }
}
```",5,7,6,3,3,3,3,71,0,1,1,0.0,0.0,0
994,54,test,"Give me the associated musical artist of the associated musical artist of Watchtower (band) and associated musical artist of the band member, that is a band and a group and an organisation, of the band, that is an organisation, of Fredrik Thordendal and band member of Don Dokken.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . <http://dbpedia.org/resource/Watchtower_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v1 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Fredrik_Thordendal> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Don_Dokken> . },"```sparql
# Step 1: Find the associated musical artist of Watchtower
SELECT ?artist1 WHERE {
  wd:Q123456 wdt:P175 ?artist1 .
}

# Step 2: Find the associated musical artist of the artist found in step 1
SELECT ?artist2 WHERE {
  ?artist1 wdt:P175 ?artist2 .
}

# Step 3: Identify Meshuggah as Fredrik Thordendal's band
SELECT ?meshuggah WHERE {
  wd:Q1234567 wdt:P106/wdt:P39* wd:Q123457 .
}

# Step 4: Identify Dokken as Don Dokken's band
SELECT ?dokken WHERE {
  wd:Q123458 wdt:P175 wd:Q123459 .
}

# Step 5: Find a common associated musical artist between the results from steps 2 and 3
SELECT DISTINCT ?commonArtist WHERE {
  VALUES (?artist) { ?artist2 }
  ?artist wdt:P175 ?commonArtist .
  
  VALUES (?band) { ?meshuggah ?dokken }
  ?commonArtist wdt:P175 ?band .
}
```

Note: Replace `wd:Q123456`, `wd:Q1234567`, `wd:Q123457`, `wd:Q123458`, and `wd:Q123459` with the actual DBpedia QIDs for Watchtower, Fredrik Thordendal, Meshuggah, Don Dokken, and Dokken respectively.",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
92,48,test,"Give me the band member of the reference, that is an artist, to the name of Nevermore (2006 film) and band of the person born as Joseph Michael Furney.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Nevermore_(2006_film)> <http://xmlns.com/foaf/0.1/name> ?v3 . ?result <http://dbpedia.org/ontology/bandMember> ?v1 . ?v1 <http://dbpedia.org/property/birthName> ""Joseph Michael Furney""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v2 <http://xmlns.com/foaf/0.1/name> ?v3 . }","```sparql
# Query to find the band associated with the 2006 film ""Nevermore""
SELECT ?band WHERE {
  ?film dbpedia-owl:title ""Nevermore (2006 film)""@en .
  ?film dbo:subject ?band .
}

# Assuming we have identified the band, query for a member who is also an artist
SELECT DISTINCT ?member WHERE {
  ?band dbo:member ?member .
  ?member foaf:name ?name .
  OPTIONAL { ?member dbo:occupation dbpedia:Artist . }
  FILTER EXISTS { ?member dbo:occupation dbpedia:Artist . }
}

# Query to find the band associated with Joseph Michael Furney
SELECT DISTINCT ?band WHERE {
  ?person foaf:name ""Joseph Michael Furney""@en ;
          foaf:alias ?stageName .
  ?person dbo:birthName ""Joseph Michael Furney""@en .
  ?person dbo:member ?band .
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
701,70,test,"Give me the parent of the child of the child of Seti I and spouse of the father of the commander, that is a royalty, in Battle of Perire and parent of the child of Nefertari.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> ?v3 . <http://dbpedia.org/resource/Battle_of_Perire> <http://dbpedia.org/ontology/commander> ?v1 . <http://dbpedia.org/resource/Nefertari> <http://dbpedia.org/ontology/child> ?v4 . ?v1 <http://dbpedia.org/property/father> ?v3 . ?v4 <http://dbpedia.org/ontology/parent> ?result . ?v7 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/child> ?v7 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seti_I> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Step 1: Identify Seti I's children
  ?setiI a dbo:Monarch ;
         foaf:name ""Seti I""@en .
  
  ?childOfSetiI dbo:parent ?setiI ;
                a dbo:Person .

  # Step 2: Find one child of Seti I and their child (grandchild of Seti I)
  ?grandChildOfSetiI dbo:parent ?childOfSetiI ;
                     a dbo:Person .

  # Step 3: Parent of the grandchild is a child of Seti I
  ?parentOfGrandChild ?childOfSetiI .

  # Step 4: Identify commander in Battle of Perire and their father's spouse
  ?battle dbr:Battle_of_Perire ;
         dbo:commander ?commander .
  
  ?fatherOfCommander dbo:child ?commander ;
                     a dbo:Person .

  ?spouseOfFather ?fatherOfCommander ;
                  dbo:spouse ?person .

  # Step 5: Ensure the person is royalty and involved in Battle of Perire
  ?person dbo:occupation dbr:Royalty ;
          dbo:participatedInBattle ?battle .

  # Step 6: Parent of a child of Nefertari
  ?nefertariChild dbo:parent dbr:Nefertari ;
                 a dbo:Person .
  
  ?parentOfNefertariChild ?nefertariChild .

  # Final condition: The person must be the same in all conditions
  FILTER (?person = ?spouseOfFather && ?person = ?parentOfGrandChild && ?person = ?parentOfNefertariChild)
}
```",8,9,9,3,3,3,3,71,0,0,1,0,0.0,0
281,45,test,"Give me the entity in Colony of New Zealand and war of the profession, that is a military unit, of the professional, that is an office holder and a politician, in New Zealand Army and war of Beauchamp Seymour, 1st Baron Alcester.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Colony_of_New_Zealand> . ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/New_Zealand_Army> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Beauchamp_Seymour,_1st_Baron_Alcester> <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v0 <http://dbpedia.org/property/occupation> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryUnit ?professional WHERE {
  # Find military units associated with the New Zealand Army during the time of Beauchamp Seymour
  ?militaryUnit a dbo:MilitaryUnit ;
                dbo:militaryBranch dbr:New_Zealand_Army ;
                dbo:country dbr:Colony_of_New_Zealand .

  # Find professionals who were office holders or politicians and associated with this military unit
  ?professional dbo:officeHolderOf ?militaryUnit ;
                a (dbo:Politician|dbo:OfficeHolder) .
  
  # Ensure the professional is linked to Beauchamp Seymour's time as Governor
  ?professional dbo:associatedWith dbr:Beauchamp_Seymour_1st_Baron_Alcester .
}
```",5,8,6,3,3,3,3,71,0,0,1,0,0.0,0
712,19,test,Give me the capital of the country of Armed Forces of South Russia and resting place of the awardee of the show of Soviet Union.,SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/restingPlace> ?result . ?v0 <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/Soviet_Union> . <http://dbpedia.org/resource/Armed_Forces_of_South_Russia> <http://dbpedia.org/ontology/country> ?v2 . ?v4 <http://dbpedia.org/property/awards> ?v0 . ?v2 <http://dbpedia.org/ontology/capital> ?result . },"```sparql
# Query to get the capital of Ukraine
SELECT ?capital WHERE {
  wd:Q38 wdt:P36 ?capital .
}

# Query to find a notable awardee of a Soviet Union award (e.g., Lenin Prize) and their resting place
SELECT ?awardee ?restingPlace WHERE {
  ?award wdt:P31 wd:Q12345678 ; # Assuming Q12345678 is the concept for a Soviet Union award like the Lenin Prize
         wdt:P921 ?awardee .
  OPTIONAL { ?awardee wdt:P90 ?restingPlace . }
}
```

Note: The placeholder `wd:Q12345678` should be replaced with the actual DBpedia identifier for the specific Soviet Union award if available.",5,5,6,3,2,3,2,20,0,0,1,0,0.0,0
959,56,test,"Give me the native of Japan and manager of the team of the manager, that is a sports manager, of 1998 Kashima Antlers season and member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of Eiji Ōtsuka.",SELECT ?result WHERE { <http://dbpedia.org/resource/1998_Kashima_Antlers_season> <http://dbpedia.org/ontology/manager> ?v4 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Japan> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. <http://dbpedia.org/resource/Eiji_Ōtsuka> <http://dbpedia.org/ontology/almaMater> ?v2 . ?v0 <http://dbpedia.org/ontology/manager> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v0 <http://dbpedia.org/ontology/manager> ?v4 . ?result <http://dbpedia.org/ontology/team> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?managerName ?nativePlace WHERE {
  # Step 1: Find Eiji Ōtsuka's alma mater
  VALUES ?eijiAlmaMater { 
    dbr:Nihon_University
  }
  
  # Step 2: Identify the manager of the 1998 Kashima Antlers season
  ?kashimaAntlersSeason dbo:manager ?manager .
  ?manager foaf:name ?managerName .
  ?manager dbo:nationality dbr:Japan .
  ?manager dbo:occupation dbr:Sports_manager .

  # Step 3: Confirm the manager is a sports manager and native to Japan
  ?manager dbo:nativePlace ?nativePlace .

  FILTER EXISTS {
    ?eijiAlmaMater dbo:type dbr:University .
    ?eijiAlmaMater dbo:country dbr:Japan .
  }

  # Step 4: Ensure the manager is associated with the 1998 Kashima Antlers season
  ?kashimaAntlersSeason dbo:sport dbr:Soccer .
  ?kashimaAntlersSeason dbo:season ""1998""^^xsd:string .
}
```",6,11,7,3,3,3,3,71,0,0,2,0,0.0,0
404,61,test,"Give me the parent of the child, that is a royalty, of the parent, that is a royalty, of Prince George William of Hanover and child of the father of the spouse of Princess Victoria Louise of Prussia.",SELECT ?result WHERE { <http://dbpedia.org/resource/Prince_George_William_of_Hanover> <http://dbpedia.org/ontology/parent> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/child> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> ?v5 . ?v1 <http://dbpedia.org/property/father> ?v3 . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?v1 . ?result <http://dbpedia.org/ontology/parent> ?v3 . },"```sparql
SELECT ?parentOfChild WHERE {
  # Step 1: Identify Prince George William of Hanover
  ?princeGeorgeWilliam dbr:Prince_George_William_of_Hanover .
  
  # Step 2: Find his parent who is a royalty
  ?royalParent dbo:child ?princeGeorgeWilliam ;
              rdf:type dbo:RoyalFamilyMember .

  # Step 3: Identify the child of this royal parent
  ?childOfRoyalParent dbo:parent ?royalParent .
  
  # Step 4: Determine the spouse of Princess Victoria Louise of Prussia
  ?spouse dbr:Princess_Victoria_Louise_of_Prussia dbo:spouse ?princeGeorgeWilliam ;
                                                 rdf:type dbo:RoyalFamilyMember .

  # Step 5: Find the father of this spouse
  ?fatherOfSpouse dbo:child ?spouse .
  
  # Step 6: Identify a child of this father
  ?childOfFather dbo:parent ?fatherOfSpouse .
  
  # Step 7: Determine the parent of this child if they are royalty
  ?parentOfChild dbo:child ?childOfFather ;
                 rdf:type dbo:RoyalFamilyMember .
}
```",6,8,7,3,2,3,3,71,0,0,1,0,0.0,0
294,27,test,"Give me the entity in the birth place, that is a settlement, of Marion James and resting place of the architect of P. D. Houston Jr. House and resting place of Luke Lea (American politician, born 1879).","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/P._D._Houston_Jr._House> <http://dbpedia.org/ontology/architect> ?v3 . ?result <http://dbpedia.org/ontology/location> ?v0 . ?v3 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Marion_James> <http://dbpedia.org/ontology/birthPlace> ?v0 . <http://dbpedia.org/resource/Luke_Lea_(American_politician,_born_1879)> <http://dbpedia.org/ontology/restingPlace> ?result . }","```sparql
# Query to find Marion James' birthplace
SELECT ?birthPlace WHERE {
  dbpedia:Marion_James dbo:birthPlace ?birthPlace .
}

# Query to find the architect of P. D. Houston Jr. House and their resting place
SELECT ?architectRestingPlace WHERE {
  ?house dbo:architect ?architect .
  ?architect dbo:deathPlace ?architectRestingPlace .
  FILTER(STRSTARTS(STR(?house), ""http://dbpedia.org/resource/P._D._Houston_Jr._House""))
}

# Query to find Luke Lea's resting place
SELECT ?leaRestingPlace WHERE {
  dbpedia:Luke_Lea_(American_politician,_born_1879) dbo:deathPlace ?leaRestingPlace .
}

# Final query to find the common settlement among these places
SELECT DISTINCT ?settlement WHERE {
  VALUES (?place1 ?place2 ?place3) { 
    ( ?birthPlace ?architectRestingPlace ?leaRestingPlace )
  }
  
  ?place1 a dbo:PopulatedPlace .
  ?place2 a dbo:PopulatedPlace .
  ?place3 a dbo:PopulatedPlace .

  FILTER(?place1 = ?place2 && ?place2 = ?place3)
}
```",5,6,6,2,3,2,3,28,0,0,1,0,0.0,0
92,69,test,"Give me the associated musical artist of the person born, that is an artist, as Jim Sheppard and band member of the reference, that is an artist, to the name of Nevermore (2006 film) and band of the person born as the birth name of Joseph Michael.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v3 <http://xmlns.com/foaf/0.1/name> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v7 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Joseph_Michael> <http://dbpedia.org/property/birthName> ?v1 . ?v7 <http://dbpedia.org/property/birthName> ""Jim Sheppard""@en . <http://dbpedia.org/resource/Nevermore_(2006_film)> <http://xmlns.com/foaf/0.1/name> ?v4 . ?result <http://dbpedia.org/ontology/bandMember> ?v2 . ?v2 <http://dbpedia.org/property/birthName> ?v1 . }","```sparql
# Step 1: Find the band associated with Jim Sheppard
SELECT ?band WHERE {
  ?person foaf:name ""Jim Sheppard""@en .
  ?person dbo:memberOf ?band .
}

# Step 2: Identify Joseph Michael's birth name and his associated band
SELECT ?birthName ?band WHERE {
  ?person foaf:name ""Joseph Michael""@en ;
          foaf:birthday ?birthday .
  ?person foaf:givenName ?birthName .
  ?person dbo:memberOf ?band .
}

# Step 3: Find the person born with Joseph Michael's birth name and their band
SELECT ?person ?band WHERE {
  ?person foaf:givenName ?birthName ;
          foaf:birthday ?birthday .
  ?person dbo:memberOf ?band .
  FILTER(?birthName = ""Joseph""@en) # Assuming we found his birth name is ""Joseph""
}

# Step 4: Connect to the film ""Nevermore"" (2006)
SELECT ?artist WHERE {
  ?film dbp:title ""Nevermore""@en ;
        dbp:releaseDate ?date .
  FILTER(YEAR(?date) = 2006)
  ?film dbo:associatedMusicalArtist ?artist .
}

# Final step: Combine the results to find the associated musical artist
SELECT DISTINCT ?finalArtist WHERE {
  # Assuming we have identified the bands and persons from previous steps
  VALUES (?band1 ?band2 ?person) { (""BandOfJimSheppard"" ""BandOfJosephMichael"" ""PersonWithBirthName"") }
  
  ?person dbo:memberOf ?band1 .
  ?person dbo:memberOf ?band2 .
  ?film dbp:title ""Nevermore""@en ;
        dbo:associatedMusicalArtist ?finalArtist .
}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
701,57,test,Give me the spouse of the father of Merneptah and parent of the child of the child of Seti I and parent of Meritamen.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v3 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seti_I> . ?v5 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Merneptah> <http://dbpedia.org/property/father> ?v3 . <http://dbpedia.org/resource/Meritamen> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/child> ?v5 . },"```sparql
SELECT ?spouse WHERE {
  wd:Q1512 wdt:P26 ?father.
  ?father wdt:P26 wd:Q1512. # Seti I is the father of Merneptah (Merneptah)
  ?father wdt:P26 ?child1.   # Seti I's children
  ?child1 wdt:P40 wd:Q1189.  # Ramses II is a child of Seti I
  ?child1 wdt:P25 ?spouse.   # Spouse of Ramses II (Seti I's spouse)
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
281,68,test,"Give me the war of the awardee of the award of Jonathon Band and entity in the birth place, that is a country, of the leader, that is a politician, of 1962 New South Wales state election and war of the profession, that is a military unit, of Heather Roy.",SELECT ?result WHERE { <http://dbpedia.org/resource/Heather_Roy> <http://dbpedia.org/property/occupation> ?v3 . ?result <http://dbpedia.org/ontology/place> ?v7 . ?v4 <http://dbpedia.org/property/awards> ?v5 . <http://dbpedia.org/resource/Jonathon_Band> <http://dbpedia.org/property/awards> ?v5 . ?v0 <http://dbpedia.org/ontology/birthPlace> ?v7 . ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v4 <http://dbpedia.org/ontology/battle> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. <http://dbpedia.org/resource/1962_New_South_Wales_state_election> <http://dbpedia.org/property/leader> ?v0 . },"```sparql
# Step 1: Identify Jonathon Band's Award
SELECT ?award WHERE {
  ?person foaf:name ""Jonathon Band"" .
  ?person dbo:awarded ?award .
}

# Step 2: Find the War Related to Jonathon Band's Awardee
SELECT DISTINCT ?war WHERE {
  ?award dbo:recipient ?entity .
  ?entity dbo:relatedTo ?war .
  FILTER EXISTS { 
    SELECT ?award WHERE {
      ?person foaf:name ""Jonathon Band"" .
      ?person dbo:awarded ?award .
    }
  }
}

# Step 3: Determine the Birthplace Country of the 1962 New South Wales State Election Leader
SELECT DISTINCT ?country WHERE {
  ?election dbo:date ""1962-03-01""^^xsd:date ;
            dbo:stateOrTerritory dbr_New_South_Wales ;
            dbo:leader ?politician .
  ?politician foaf:birthPlace ?place .
  ?place geo:hasCountryCode ?country .
}

# Step 4: Find the War Related to the Politician's Birthplace
SELECT DISTINCT ?war WHERE {
  ?country dbo:relatedTo ?war .
  FILTER EXISTS { 
    SELECT ?country WHERE {
      ?election dbo:date ""1962-03-01""^^xsd:date ;
                dbo:stateOrTerritory dbr_New_South_Wales ;
                dbo:leader ?politician .
      ?politician foaf:birthPlace ?place .
      ?place geo:hasCountryCode ?country .
    }
  }
}

# Step 5: Identify Heather Roy's Profession as a Military Unit
SELECT DISTINCT ?militaryUnit WHERE {
  ?person foaf:name ""Heather Roy"" ;
          dbo:profession ?militaryUnit .
  FILTER EXISTS { 
    VALUES ?type { dbo:MilitaryUnit }
  }
}

# Step 6: Find the War Related to Heather Roy's Military Unit
SELECT DISTINCT ?war WHERE {
  ?militaryUnit dbo:relatedTo ?war .
  FILTER EXISTS { 
    SELECT ?militaryUnit WHERE {
      ?person foaf:name ""Heather Roy"" ;
              dbo:profession ?militaryUnit .
      FILTER EXISTS { 
        VALUES ?type { dbo:MilitaryUnit }
      }
    }
  }
}
```",8,11,9,3,3,3,3,71,0,0,1,0,0.0,0
161,31,test,"Give me the military force of the force, that is a societal event and an event and a military conflict, of the person decedent at Francoist Spain and military force of Spanish Civil War.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://dbpedia.org/ontology/commander> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . ?result <http://dbpedia.org/ontology/battle> ?v0 . ?v1 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Francoist_Spain> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce WHERE {
  # Find Francisco Franco's military affiliation during Francoist Spain
  OPTIONAL {
    dbr:Franco_of_Spain dbo:militaryServiceIn ?militaryForce .
  }
  
  # Find the military forces involved in the Spanish Civil War
  OPTIONAL {
    dbr:Spanish_Civil_War dbo:participatedInMilitaryConflict ?conflict .
    ?conflict dbo:participant ?militaryForce .
  }
}
```",4,7,5,3,2,3,3,71,0,0,514,0,0.0,0
820,19,test,Give me the child of the parent of the professional in Actor and professional in the award of Scott McCloud.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/occupation> ""Actor""@en . ?v4 <http://dbpedia.org/ontology/child> ?v0 . <http://dbpedia.org/resource/Scott_McCloud> <http://dbpedia.org/property/awards> ?v2 . ?result <http://dbpedia.org/property/occupation> ?v2 . ?result <http://dbpedia.org/property/father> ?v4 . }","```sparql
SELECT ?childAward WHERE {
  # Step 1: Identify Scott McCloud's profession as Actor
  dbpedia:Scott_McCloud dbo:profession dbpedia:Actor .

  # Step 2: Find an award associated with Scott McCloud
  dbpedia:Scott_McCloud dbo:award ?award .

  # Step 3: Determine the parent of this award
  ?award rdfs:subClassOf+ ?parentAward .

  # Step 4: Identify a child of this parent award
  ?childAward rdfs:subClassOf* ?parentAward .
  
  FILTER(?childAward != ?award) # Ensure it's not the same award
}
```",5,5,6,3,2,3,2,20,0,0,128,0,0.0,0
161,68,test,"Give me the military force of the force, that is a societal event and an event and a military conflict, of the person decedent at Francoist Spain and military force of the force, that is a societal event and a military conflict, of the predecessor of Indalecio Prieto and commander in the force, that is an event, of Emilio Mola.",SELECT ?result WHERE { ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v7 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v7 <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Indalecio_Prieto> . ?v4 <http://dbpedia.org/ontology/commander> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v5 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Francoist_Spain> . ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Emilio_Mola> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?militaryForce1 ?militaryForce2 ?commander 
WHERE {
  # Step 1: Identify Francoist Spain's decedent and their military force
  ?person dbo:decedent dbr:Francoist_Spain .
  ?person dbo:militaryConflict ?conflict1 ;
          dbo:societalEvent ?event1 .
  
  # Step 2: Find the predecessor of Indalecio Prieto and their military force
  ?prietoPredecessor dbo:predecessor dbr:Indalecio_Prieto .
  ?prietoPredecessor dbo:militaryConflict ?conflict2 ;
                    dbo:societalEvent ?event2 .

  # Step 3: Identify Emilio Mola's commander in a military force
  ?molaCommander dbo:commanderOf dbr:Emilio_Mola .
  ?molaCommander dbo:event ?event3 .

  # Bind the results to variables for clarity
  BIND(?conflict1 AS ?militaryForce1)
  BIND(?conflict2 AS ?militaryForce2)
  BIND(?molaCommander AS ?commander)
}
```",8,14,9,3,3,3,3,71,0,0,32,0,0.0,0
16,50,test,Give me the professional in the profession of the actor of Unnatural (TV series) and person born as the birth name of Gigi Rice.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v4 . ?result <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Gigi_Rice> <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Unnatural_(TV_series)> <http://dbpedia.org/property/starring> ?v0 . ?v0 <http://dbpedia.org/property/occupation> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor ?birthName WHERE {
    # Find actor of ""Unnatural"" TV series
    ?series dbo:title ""Unnatural (TV series)""@en .
    ?series dbo:starring ?actor .

    # Get birth name of Gigi Rice
    dbr:Gigi_Rice dbo:birthName ?birthName .

    # Filter actors by the same birth name as Gigi Rice
    ?actor dbo:birthName ?sameBirthName .
    FILTER (?sameBirthName = ?birthName)
}
```",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
54,22,test,"Give me the predecessor of the child, that is an office holder and a royalty, of Thihapate of Mohnyin and child of Thinkhaya of Pagan.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/successor> ?v1 . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Thihapate_of_Mohnyin> . <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?result . },"```sparql
SELECT ?predecessor WHERE {
  # Find Thihapate's children who are both royalty and office holders
  ?child dbo:parent dbr:Thihapate_of_Mohnyin ;
         rdf:type dbo:Royalty, dbo:OfficeHolder .
  
  # Ensure the child is also a child of Thinkhaya of Pagan
  ?child dbo:parent dbr:Thinkhaya_of_Pagan .

  # Find the predecessor of this child in their role
  ?role dbr:Thinkhaya_of_Pagan dbo:predecessor ?predecessor .
  
  # Ensure the predecessor is related to the identified child's role
  ?child dbo:officeHolderRole ?role ;
         dbo:predecessor ?predecessor .
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
492,50,test,"Give me the commander in the war, that is a military conflict and an event, of the commander in Battle of Verdun and person decedent at the capital, that is a settlement, of Algeria.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> ?v3 . <http://dbpedia.org/resource/Battle_of_Verdun> <http://dbpedia.org/ontology/commander> ?v0 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://dbpedia.org/ontology/battle> ?v4 . <http://dbpedia.org/resource/Algeria> <http://dbpedia.org/ontology/capital> ?v3 . ?v4 <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
# Step 1: Get the commander of the Battle of Verdun
SELECT ?commander WHERE {
  ?battle dbpedia-owl:commander ?commander .
  ?battle rdfs:label ""Battle of Verdun""@en .
}

# Step 2: Find another military conflict/event involving that commander
SELECT DISTINCT ?conflict WHERE {
  ?conflict dbpedia-owl:commander ?commander .
  FILTER(?commander IN (<COMMANDER_URI_FROM_STEP_1>))
}

# Step 3: Get a person who died in Algiers (capital of Algeria)
SELECT ?deceasedPerson WHERE {
  ?person dbo:deathPlace ?place .
  ?place rdfs:label ""Algiers""@en .
  ?person rdf:type dbo:Person .
}

# Step 4: Find another military conflict/event involving that deceased person
SELECT DISTINCT ?conflict2 WHERE {
  ?conflict2 dbpedia-owl:commander ?deceasedPerson .
  FILTER(?deceasedPerson IN (<DECEASED_PERSON_URI_FROM_STEP_3>))
}

# Step 5: Compare commanders from both parts to find any commonality
SELECT DISTINCT ?commonCommander WHERE {
  VALUES (?uri1) {(<COMMANDER_URI_FROM_STEP_2>)}
  VALUES (?uri2) {(<COMMANDER_URI_FROM_STEP_4>)}
  FILTER(?uri1 = ?uri2)
  ?commonCommander rdf:type dbo:Person .
}
```

Note: Replace `<COMMANDER_URI_FROM_STEP_1>`, `<DECEASED_PERSON_URI_FROM_STEP_3>`, `<COMMANDER_URI_FROM_STEP_2>`, and `<COMMANDER_URI_FROM_STEP_4>` with the actual URIs obtained from executing each respective query.",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
488,67,test,"Give me the birth place of Enomoto Takeaki and administration of the father of the spouse, that is a royalty, of Tokugawa Masako and death place of the father, that is a politician, of the father, that is an office holder, of Matsudaira Tadamasa.",SELECT ?result WHERE { ?v6 <http://dbpedia.org/ontology/deathPlace> ?result . ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Tokugawa_Masako> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Matsudaira_Tadamasa> <http://dbpedia.org/property/father> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Enomoto_Takeaki> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/property/leader> ?v3 . ?v1 <http://dbpedia.org/property/father> ?v3 . ?v0 <http://dbpedia.org/property/father> ?v6 . },"```sparql
# Query for Enomoto Takeaki's birth place
SELECT ?birthPlace WHERE {
  dbpedia:Enomoto_Takeaki dbo:birthPlace ?birthPlace .
}

# Query for Tokugawa Masako's spouse and their father's administration
SELECT DISTINCT ?spouse ?royalFather ?administration WHERE {
  dbpedia:Tokugawa_Masako dbo:spouse ?spouse .
  ?spouse dbo:father ?royalFather .
  ?royalFather rdf:type dbo:Monarch .
  OPTIONAL { ?royalFather dbo:countryAdministered ?administration . }
}

# Query for Matsudaira Tadamasa's father and his death place
SELECT DISTINCT ?officeHolderFather ?deathPlace WHERE {
  dbpedia:Matsudaira_Tadamasa dbo:father ?officeHolderFather .
  ?officeHolderFather rdf:type dbo:OfficeHolder .
  OPTIONAL { ?officeHolderFather dbo:politicalParty ?party . }
  FILTER EXISTS { ?officeHolderFather dbo:politicalParty ?party } # Ensures the father is a politician
  OPTIONAL { ?officeHolderFather dbo:deathPlace ?deathPlace . }
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
184,59,test,"Give me the child of the child of the parent, that is a royalty, of Archduke Ladislaus Philipp of Austria and parent of the native of the landmark at elevation, that is a settlement, of 96.0.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/property/father> ?v5 . ?v5 <http://dbpedia.org/property/father> ?v0 . ?v3 <http://dbpedia.org/ontology/elevation> ""96.0""^^<http://www.w3.org/2001/XMLSchema#double> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Archduke_Ladislaus_Philipp_of_Austria> <http://dbpedia.org/ontology/parent> ?v0 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?childOfChild
WHERE {
  # Step 1: Identify Archduke Ladislaus Philipp of Austria
  ?ladislaus a dbo:Person ;
             foaf:name ""Archduke Ladislaus Philipp of Austria"" .

  # Step 2: Find his parent
  ?parent dbo:spouse|dbo:child ?ladislaus .

  # Step 3: Find the child of this parent
  ?childOfParent dbo:child ?parent .

  # Step 4: Identify royalty among these children
  ?royalty a dbo:Monarch ;
           dbo:child ?childOfParent .

  # Step 5: Determine the native landmark at elevation 96.0 meters that is a settlement
  ?landmark a dbo:PopulatedPlace ;
            dbo:elevation ""96.0""^^xsd:float ;
            dbo:nativeCountry ?nativeCountry .

  # Step 6: Find the parent of this native
  ?parentOfNative dbo:child ?nativePerson .
  ?nativePerson dbo:nationality|dbo:birthPlace ?landmark .

  # Step 7: Combine results to find the child of the royalty who is also the parent of the native
  ?childOfChild dbo:child ?royalty ;
               dbo:parent ?parentOfNative .
}
```",6,8,7,3,2,3,3,71,0,0,1,0,0.0,0
617,57,test,"Give me the spouse of the child of the successor, that is a royalty, of Antiochus (son of Antiochus III the Great) and parent of the child of Antiochus (son of Antiochus III the Great) and child of Antiochus III the Great.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?v5 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/successor> ?v0 . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Antiochus_III_the_Great> . ?result <http://dbpedia.org/ontology/child> ?v3 . <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/child> ?v3 . },"```sparql
SELECT ?spouse WHERE {
  # Identify Antiochus IV Epiphanes
  wd:Q123456 a dbo:Person ;
             foaf:name ""Antiochus IV Epiphanes""@en ;
             dbo:childOf wd:Q789012 . # Antiochus III the Great

  # Find his successor, Seleucus V Philometor
  ?successor dbo:succeededBy wd:Q123456 ;
             a dbo:Person ;
             foaf:name ""Seleucus V Philometor""@en .

  # Hypothetical child of Seleucus V
  ?child dbo:parent ?successor ;
         a dbo:Person .

  # Spouse of the hypothetical child, ensuring they are royalty
  ?spouse dbo:spouse ?child ;
          a dbo:RoyalFamilyMember .

  FILTER EXISTS { ?spouse dbo:royalTitle ?title }
}
```

Note: The above query uses placeholder QIDs (Q123456 for Antiochus IV and Q789012 for Antiochus III) which should be replaced with the actual DBpedia identifiers. Additionally, due to historical records, some assumptions are made about potential children of Seleucus V.",6,7,7,3,3,3,3,71,0,0,2,0,0.0,0
16,59,test,Give me the spouse of the person born as the birth name of Ted McGinley and professional in the profession of the actor of Unnatural (TV series).,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ?v3 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Unnatural_(TV_series)> <http://dbpedia.org/property/starring> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v5 . ?v0 <http://dbpedia.org/property/occupation> ?v5 . },"```sparql
# Step 1: Find Ted McGinley's birth name
SELECT ?birthName WHERE {
  dbpedia:ted_mcginley dbo:birthName ?birthName .
}

# Step 2: Using the birth name from step 1, find the spouse
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?spouse WHERE {
  ?person dbo:birthName ?birthName .
  ?person foaf:mbox ?email . # Ensure it's the correct person by checking an email or another unique identifier if needed
  ?person dbo:spouse ?spouse .
}
```

Note: The second query assumes you have identified `?birthName` from the first query and replaced it in the second query. Additionally, using a unique identifier like an email (if available) can help ensure accuracy when multiple people might share the same birth name.",6,6,7,3,2,3,3,71,0,0,1,0,0.0,0
994,53,test,"Give me the band member of the person born, that is a musical artist, as Donald Maynard Dokken and associated musical artist of Red Tide (band) and associated musical artist of the associated musical artist of the reference to Watchtower.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ""Donald Maynard Dokken""@en . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Red_Tide_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://xmlns.com/foaf/0.1/name> ""Watchtower""@en . }","```sparql
# Step 1: Find Donald Maynard Dokken's band (Dokken) and its members
SELECT ?bandMember WHERE {
  ?dokken dbo:birthName ""Donald Maynard Dokken""@en .
  ?dokken dbo:associatedBand ?band .
  ?band dbo:member ?bandMember .
}

# Step 2: Find Red Tide's associated musical artists
SELECT ?artist WHERE {
  dbpedia:Red_Tide_(band) dbo:associatedMusicalArtist ?artist .
}

# Step 3: For each artist found in step 2, find their associated musical artists
SELECT DISTINCT ?relatedArtist WHERE {
  ?artist dbo:associatedMusicalArtist ?relatedArtist .
  FILTER(?artist IN (dbpedia:Red_Tide_(band) dbo:associatedMusicalArtist ?subArtist .))
}

# Step 4: Find Watchtower's associated musical artists
SELECT ?watchtowerRelatedArtist WHERE {
  dbpedia:Watchtower_(band) dbo:associatedMusicalArtist ?watchtowerRelatedArtist .
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
92,56,test,"Give me the band member of the reference, that is an artist, to Nevermore and associated musical artist of Jim Sheppard and band of the person born as the birth name of Joseph Michael.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Jim_Sheppard> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Joseph_Michael> <http://dbpedia.org/property/birthName> ?v0 . ?v2 <http://xmlns.com/foaf/0.1/name> ""Nevermore""@en . ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?result <http://dbpedia.org/ontology/bandMember> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?member ?artist ?associatedArtist ?band 
WHERE {
  # Find members of Nevermore who are also artists
  ?member dbo:memberOf dbr:Nevermore .
  ?member dbo:occupation dbr:Musician .
  OPTIONAL { ?member foaf:name ?name . }
  
  # Check if the member is an artist
  OPTIONAL { 
    ?artist dbo:performer ?member .
    ?artist dbo:title ?album .
  }

  # Find associated musical artists of Jim Sheppard
  dbr:Jim_Sheppard dbo:associatedMusicalArtist ?associatedArtist .

  # Identify band of person born as Joseph Michael
  ?person foaf:name ""Joseph Michael"" .
  ?person dbo:birthName ?birthName .
  ?band dbo:member ?person .
  
  FILTER (?member = ?artist || ?member = ?associatedArtist || ?member = ?person)
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
696,19,test,Give me the birth place of the member of Dropkick Murphys and landmark at elevation of the award of the commander in Battle of Chishui River.,SELECT ?result WHERE { <http://dbpedia.org/resource/Dropkick_Murphys> <http://dbpedia.org/ontology/bandMember> ?v2 . <http://dbpedia.org/resource/Battle_of_Chishui_River> <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://dbpedia.org/property/awards> ?v4 . ?result <http://dbpedia.org/ontology/elevation> ?v4 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
# Query for the birthplace of a member of Dropkick Murphys
SELECT ?member ?birthPlace WHERE {
  ?band rdf:type dbo:MusicalGroup .
  ?band foaf:name ""Dropkick Murphys"" .
  ?band dbo:member ?person .
  ?person dbo:birthPlace ?birthPlace .
  ?person rdfs:label ?member FILTER (LANG(?member) = 'en') .
} LIMIT 1

UNION

# Query for the landmark at elevation of an award given to a commander in Battle of Chishui River
SELECT ?landmark WHERE {
  ?battle dbo:name ""Battle of Chishui River"" .
  ?commander dbo:participatedIn ?battle .
  ?award dbo:recipient ?commander .
  ?award dbo:elevation ?elevation .
  ?landmark dbo:elevation ?elevation .
  ?landmark rdfs:label ?landmarkLabel FILTER (LANG(?landmarkLabel) = 'en') .
} LIMIT 1
```",5,5,6,3,2,3,2,20,0,0,1,0,0.0,0
345,17,test,"Give me the figure known as Stolz von Liechtenstein and team of the person born, that is a soccer player and a soccer manager, on the birth date of Eiður Guðjohnsen.","SELECT ?result WHERE { <http://dbpedia.org/resource/Eiður_Guðjohnsen> <http://dbpedia.org/ontology/birthDate> ?v0 . ?result <http://dbpedia.org/property/nickname> ""Stolz von Liechtenstein""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v3 <http://dbpedia.org/ontology/birthDate> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?result <http://dbpedia.org/ontology/manager> ?v3 . }","```sparql
# Step 1: Get Eiður Guðjohnsen's birth date
SELECT ?birthDate WHERE {
  dbpedia:Æður_Guðjónsson dbo:birthDate ?birthDate .
}

# Step 2: Find a soccer player and manager born on the same date
SELECT DISTINCT ?person ?team WHERE {
  # Replace 'YYYY-MM-DD' with Eiður Guðjohnsen's birth date obtained from step 1
  VALUES ?birthDate { ""YYYY-MM-DD""^^xsd:date }
  
  ?person dbo:birthDate ?birthDate .
  ?person a ?type .
  FILTER (
    ?type = dbpedia:Soccer_player || 
    ?type = dbpedia:Soccer_manager
  )
  
  OPTIONAL {
    ?person dbo:team ?team .
  }
}
```",4,6,5,3,2,3,2,20,0,0,1,0,0.0,0
64,9,test,"Give me the entity in the region, that is a country, of Central European Time and alma mater of the person decedent, that is a writer, at Sremska Kamenica.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . ?result <http://dbpedia.org/ontology/country> ?v3 . ?v1 <http://dbpedia.org/ontology/almaMater> ?result . ?v1 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Sremska_Kamenica> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>. },"```sparql
SELECT DISTINCT ?entity WHERE {
  # Find countries using Central European Time
  ?country wdt:P421 wd:Q3732 .
  
  # Identify writers associated with Sremska Kamenica
  ?writer dbo:birthPlace dbr:Sremska_Kamenica ;
          rdf:type dbo:Writer .

  # Get the alma mater of these writers
  ?writer dbo:almaMater ?university .

  # Ensure the university is in a country using CET
  ?university wdt:P17 ?country .
  
  # Return the entity (country) that matches all criteria
  BIND(?country AS ?entity)
}
```",4,6,5,2,2,2,2,9,0,0,1,0,0.0,0
9,34,test,"Give me the figure known as QUB and alma mater of the mayor, that is a politician, of the entity, that is an organisation, in Belfast.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/almaMater> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://dbpedia.org/property/leader> ?v1 . ?v2 <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Belfast> . ?result <http://dbpedia.org/property/nickname> ""QUB""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?university WHERE {
  # Step 1: Identify the organization in Belfast (Belfast City Council)
  dbr:Belfast_City_Council dbo:mayor ?mayor .
  
  # Step 2: Find the mayor's alma mater
  ?mayor dbo:almaMater ?university .

  # Step 3: Ensure the university is QUB
  FILTER (str(?university) = ""Queen's University Belfast"")
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
701,37,test,Give me the parent of the child of the child of Seti I and spouse of Ramesses II.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/child> ?v3 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seti_I> . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Ramesses_II> . },"```sparql
SELECT DISTINCT ?grandChildParent WHERE {
  # Step 1: Find Seti I's children
  ?setiI dbo:child ?child1 .
  
  # Step 2: Find the child of one of Seti I's children (a grandchild)
  ?child1 dbo:child ?grandChild .

  # Step 3: Identify Ramesses II and his spouse
  ?ramessesII rdfs:label ""Ramesses II""@en .
  ?ramessesII dbo:spouse ?spouse .

  # Step 4: Check if the grandchild is a child of the spouse of Ramesses II
  ?grandChild dbo:parent ?spouse .

  # Find the parent of this grandchild (which should be one of Seti I's children)
  ?grandChild dbo:parent ?grandChildParent .
}
```",4,4,5,3,2,3,3,71,0,0,2,0,0.0,0
356,17,test,"Give me the team of the native, that is a soccer player and a soccer manager, of the birth place, that is English and a settlement, of Gary Williams (footballer, born 1960) and player in 2015 Sacramento Republic FC season.","SELECT ?result WHERE { <http://dbpedia.org/resource/2015_Sacramento_Republic_FC_season> <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/Gary_Williams_(footballer,_born_1960)> <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v3 <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/manager> ?v3 . }","```sparql
# Step 1: Find Gary Williams' birthplace
SELECT ?birthPlace WHERE {
  dbpedia:Gary_Williams_(footballer,_born_1960) dbo:nationality dbr:England .
  dbpedia:Gary_Williams_(footballer,_born_1960) dbo:birthPlace ?birthPlace .
}

# Step 2: Find individuals who are natives of this place and have careers as both soccer players and managers
SELECT DISTINCT ?person WHERE {
  # Replace ?birthPlace with the actual URI obtained from step 1
  ?person dbo:nationality dbr:England .
  ?person dbo:birthPlace ?birthPlace .
  ?person dbo:occupation dbr:Soccer_player .
  ?person dbo:occupation dbr:Soccer_manager .
}

# Step 3: Determine which team they played for in the 2015 Sacramento Republic FC season
SELECT DISTINCT ?team WHERE {
  # Replace ?person with the actual URI obtained from step 2
  ?player dbp:currentclub ?team .
  ?player dbo:birthPlace ?birthPlace .
  ?player dbo:occupation dbr:Soccer_player .
  ?player dbo:occupation dbr:Soccer_manager .
  FILTER (YEAR(?startDate) <= 2015 && (?endDate >= 2015 || NOT EXISTS { ?player dbp:endDate ?endDate }))
}
```",4,8,5,3,2,3,2,20,0,0,1,0,0.0,0
161,38,test,"Give me the commander in the force, that is an event, of Emilio Mola and military force of the force, that is a societal event and a military conflict, of Francisco Largo Caballero.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Emilio_Mola> . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  # Emilio Mola's military force and event
  ?militaryForce a dbo:MilitaryUnit ;
                 dbo:commander ?commander ;
                 dbo:partOfEvent dbr:Military_Rebellion_of_1936 .

  # Francisco Largo Caballero's societal event and military conflict
  ?societalEvent a dbo:SocietalEvent, dbo:MilitaryConflict ;
                dbo:relatedToMilitaryForce ?militaryForce ;
                rdfs:label ""Spanish Civil War""@en .
}
```",4,7,5,2,2,3,3,71,0,0,32,0,0.0,0
994,70,test,"Give me the band member of the person born, that is a musical artist, as the persona of Don Dokken and associated musical artist of the associated musical artist of Watchtower (band) and associated musical artist of the band member, that is a band and a group and an organisation, of the band, that is an organisation, of Fredrik Thordendal.",SELECT ?result WHERE { ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Watchtower_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v0 <http://dbpedia.org/property/birthName> ?v5 . <http://dbpedia.org/resource/Don_Dokken> <http://xmlns.com/foaf/0.1/givenName> ?v5 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Fredrik_Thordendal> . ?v6 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v6 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandMember WHERE {
  # Don Dokken's associated musical artist
  ?dokkenArtist dbo:associatedBand dbr:Don_Dokken .
  
  # Watchtower's associated musical artists
  ?watchtowerArtist dbo:associatedBand dbr:Watchtower_(band) .

  # Fredrik Thordendal's band
  ?thordendalBand dbo:member dbr:Fredrik_Thordendal ;
                  a dbo:MusicalGroup .

  # Find the common band member
  ?commonArtist dbo:associatedBand ?dokkenArtist .
  ?commonArtist dbo:associatedBand ?watchtowerArtist .
  ?commonArtist dbo:associatedBand ?thordendalBand .
  
  # Ensure the result is a band member of an organization
  ?bandMember dbo:member ?commonArtist ;
              a dbo:MusicalGroup .

}
```",8,13,9,3,3,3,3,71,0,0,1,0,0.0,0
54,38,test,"Give me the parent of the child of Narapati I of Ava and predecessor of the child, that is an office holder and a royalty, of Thihapate of Mohnyin.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Narapati_I_of_Ava> . ?result <http://dbpedia.org/ontology/successor> ?v2 . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Thihapate_of_Mohnyin> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
# Step 1: Find Narapati I's child
SELECT ?narapatisChild WHERE {
  wd:Narapati_I_of_Ava dbo:spouse ?parent .
  ?parent dbo:child ?narapatisChild .
}

# Step 2: Find the predecessor of Narapati I's child
SELECT ?predecessor WHERE {
  ?narapatisChild dbo:successor ?predecessor .
}

# Step 3: Find Thihapate of Mohnyin's child who is an office holder and a royalty
SELECT ?thihapatesChild WHERE {
  wd:Thihapate_of_Mohnyin dbo:spouse ?parent .
  ?parent dbo:child ?thihapatesChild .
  ?thihapatesChild rdf:type wd:OfficeHolder ;
                  rdf:type wd:RoyalPerson .
}

# Step 4: Find the parent of Thihapate's child
SELECT ?parent WHERE {
  wd:Thihapate_of_Mohnyin dbo:spouse ?parent .
  ?parent dbo:child ?thihapatesChild .
}

# Step 5: Combine to find the commonality
SELECT DISTINCT ?commonParent WHERE {
  # Narapati I's child predecessor
  ?narapatisChild dbo:successor ?predecessor .
  
  # Thihapate of Mohnyin's child who is an office holder and a royalty
  wd:Thihapate_of_Mohnyin dbo:spouse ?parent .
  ?parent dbo:child ?thihapatesChild .
  ?thihapatesChild rdf:type wd:OfficeHolder ;
                  rdf:type wd:RoyalPerson .

  # Find the parent of Thihapate's child
  ?parent2 dbo:child ?thihapatesChild .
  
  # Check if the predecessor is the same as the parent of Thihapate's child
  FILTER(?predecessor = ?parent2)
}
```",4,6,5,2,2,3,3,71,0,0,1,0,0.0,0
404,52,test,"Give me the child of Ernest Augustus, Crown Prince of Hanover and parent of the child, that is a royalty, of Ernest Augustus, Duke of Brunswick and spouse of the person born, that is a royalty, as the birth name of Princess Victoria Louise of Prussia.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/birthName> ?v3 . ?result <http://dbpedia.org/ontology/child> ?v5 . <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/ontology/child> ?v5 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ernest_Augustus,_Crown_Prince_of_Hanover> . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/property/birthName> ?v3 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child ?parent ?spouse WHERE {
  # Ernest Augustus, Crown Prince of Hanover's child who is a royalty
  ?child dbo:father dbr:Ernest_Augustus,_Crown_Prince_of_Hanover .
  ?child a dbo:Person .

  # This child must be the parent of another person (royalty)
  ?parent dbo:motherOrFather ?child .
  ?parent a dbo:Person .

  # The child is also related to Ernest Augustus, Duke of Brunswick
  ?child dbo:father dbr:Ernest_Augustus,_Duke_of_Brunswick .

  # Princess Victoria Louise of Prussia's spouse
  ?spouse dbo:spouse ?parent .
  ?spouse rdfs:label ""Princess Victoria Louise of Prussia""@en .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
232,55,test,"Give me the actor of the claim to fame, that is a film and a military conflict, of Sean Pertwee and child of the person born as John Devon Roland Pertwee and native of the residence, that is a settlement and British, of Sylvie Bermann.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/birthName> ""John Devon Roland Pertwee""@en . ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Sean_Pertwee> <http://dbpedia.org/ontology/knownFor> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v5 <http://dbpedia.org/ontology/starring> ?result . ?v3 <http://dbpedia.org/ontology/child> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Sylvie_Bermann> <http://dbpedia.org/property/residence> ?v2 . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. }","```sparql
# Step 1: Find Sean Pertwee's claim to fame (film and military conflict)
SELECT ?film ?conflict WHERE {
  wd:Q123456 foaf:name ""Sean Pertwee"" . # Replace Q123456 with the actual DBpedia ID for Sean Pertwee
  wd:Q123456 dbo:famousFor ?claimToFame .
  ?claimToFame rdf:type dbo:Film .
  BIND(?claimToFame AS ?film)
  OPTIONAL {
    ?claimToFame rdf:type dbo:MilitaryConflict .
    BIND(?claimToFame AS ?conflict)
  }
}

# Step 2: Find Sylvie Bermann's residence in Britain
SELECT ?residence WHERE {
  wd:Q654321 foaf:name ""Sylvie Bermann"" . # Replace Q654321 with the actual DBpedia ID for Sylvie Bermann
  wd:Q654321 dbo:nativePlace ?residence .
  ?residence rdf:type dbo:Settlement .
  ?residence dbo:country dbr:United_Kingdom .
}

# Step 3: Confirm John Devon Roland Pertwee as Sean Pertwee's father
SELECT ?father WHERE {
  wd:Q123456 foaf:name ""Sean Pertwee"" . # Replace Q123456 with the actual DBpedia ID for Sean Pertwee
  wd:Q123456 dbo:parent ?father .
  ?father foaf:name ""John Devon Roland Pertwee"" .
}
```",6,10,7,2,3,3,3,71,0,0,1,0,0.0,0
16,52,test,Give me the professional in the profession of Satomi Ishihara and spouse of the person born as the birth name of Ted McGinley and person born as Georgeanne Marie Rice.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Georgeanne Marie Rice""@en . ?result <http://dbpedia.org/property/occupation> ?v5 . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Satomi_Ishihara> <http://dbpedia.org/property/occupation> ?v5 . ?v2 <http://dbpedia.org/property/birthName> ?v3 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?professional WHERE {
  # Find Satomi Ishihara's profession
  ?satomi a dbo:Person;
          foaf:name ""Satomi Ishihara""@en.
  ?satomi dbo:profession ?profession.

  # Find Ted McGinley's birth name and his spouse
  ?ted a dbo:Person;
       foaf:name ""Ted McGinley""@en;
       foaf:nick ""Georgeanne Marie Rice""@en. # Assuming this is the birth name
  ?ted dbo:spouse ?spouse.

  # Find Georgeanne Marie Rice's spouse
  ?rice a dbo:Person;
        foaf:name ""Georgeanne Marie Rice""@en.
  ?rice dbo:spouse ?sameSpouse.

  FILTER (?spouse = ?sameSpouse)

  # Find the professional in Satomi Ishihara's profession who is also the spouse
  ?professional a dbo:Person;
                dbo:profession ?profession;
                foaf:name ?name.
  FILTER(?professional = ?spouse)
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
9,52,test,"Give me the figure known as QUB and alma mater of the awardee of Royal Medal and alma mater of the mayor, that is a politician, of the entity, that is an organisation, in Belfast.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ""QUB""@en . ?v5 <http://dbpedia.org/ontology/almaMater> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://dbpedia.org/property/leader> ?v2 . ?v3 <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Belfast> . ?v2 <http://dbpedia.org/ontology/almaMater> ?result . ?v5 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Medal> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person1 ?person2 WHERE {
  # Find individuals who have received the Royal Medal and attended QUB
  ?person1 dbo:almaMater dbr:Queen's_University_Belfast ;
           dbo:honoraryTitle dbr:Royal_Medal .

  # Find politicians who are mayors of organizations in Belfast and attended QUB
  ?person2 dbo:almaMater dbr:Queen's_University_Belfast ;
           a dbo:Politician ;
           dbo:officeHolderOf ?organization .
  
  # Ensure the organization is located in Belfast
  ?organization dbo:location dbr:Belfast .

  FILTER(?person1 != ?person2)
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
666,19,test,"Give me the player in the manager, that is a sports manager, of 2016–17 Hull City A.F.C. season and figure known as the nickname of the reference, that is an organisation and a soccer club and a sports club, to England.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v0 <http://xmlns.com/foaf/0.1/name> ""England""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://dbpedia.org/ontology/team> ?result . ?result <http://dbpedia.org/property/nickname> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v0 <http://dbpedia.org/property/nickname> ?v4 . <http://dbpedia.org/resource/2016–17_Hull_City_A.F.C._season> <http://dbpedia.org/ontology/manager> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?managerName ?clubNickname WHERE {
  # Find the manager of Hull City A.F.C. for the 2016-17 season
  ?hullCity a dbo:SoccerClub ;
            dbo:seasons ?season .
  ?season dbo:team ?hullTeam .
  ?hullTeam dbo:manager ?manager .
  ?manager rdfs:label ?managerName .

  FILTER(CONTAINS(LCASE(?managerName), ""2016-17"") && CONTAINS(LCASE(?managerName), ""hull city""))

  # Find the nickname of an English soccer club
  ?club a dbo:SoccerClub ;
        dbo:country dbr:England ;
        rdfs:label ?clubLabel .
  OPTIONAL { ?club dbo:nickname ?nickname . }
  BIND(COALESCE(?nickname, ?clubLabel) AS ?clubNickname)

  FILTER(CONTAINS(LCASE(?clubNickname), ""red devils"") || CONTAINS(LCASE(?clubNickname), ""the gunners""))
}
```",5,9,6,3,2,3,2,20,0,0,2,0,0.0,0
659,55,test,"Give me the commander in the war, that is an event and a military conflict, of 1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish) and military force of the force, that is a societal event and an event and a military conflict, of Rutger Jan Schimmelpenninck and commander in the force of Arthur Wellesley, 1st Duke of Wellington.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v2 . <http://dbpedia.org/resource/1st_Light_Cavalry_Lancers_Regiment_of_the_Imperial_Guard_(Polish)> <http://dbpedia.org/ontology/battle> ?v5 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v5 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Arthur_Wellesley,_1st_Duke_of_Wellington> . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  # Identify the war involving both entities
  ?war dbo:participatingMilitaryUnit dbr:1st_Light_Cavalry_Lancers_Regiment_of_the_Imperial_Guard_(Polish) .
  ?war dbo:participant dbr:Rutger_Jan_Schimmelpenninck .

  # Find the commander of this war
  ?commander dbo:commandedMilitaryUnit ?unit .
  ?unit dbo:participatesIn ?war .

  # Ensure Arthur Wellesley, 1st Duke of Wellington's involvement in the same war
  ?welForce dbo:commandedBy dbr:Arthur_Wellesley,_1st_Duke_of_Wellington .
  ?welForce dbo:participatesIn ?war .
}
```",6,11,7,2,3,3,3,71,0,0,15,0,0.0,0
488,31,test,"Give me the birth place of the commander in the war, that is a military conflict and an event and a societal event, of Saitō Hajime and death place of Tokugawa Ieyasu.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Saitō_Hajime> <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Tokugawa_Ieyasu> <http://dbpedia.org/ontology/deathPlace> ?result . ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?person ?place WHERE {
  { 
    wd:Q1234567 dbo:birthPlace ?place .
    BIND(wd:Q1234567 AS ?person)
  }
  UNION
  {
    wd:Q6543210 dbo:deathPlace ?place .
    BIND(wd:Q6543210 AS ?person)
  }
}
```

Note: `wd:Q1234567` and `wd:Q6543210` are placeholders for the actual DBpedia identifiers of Saitō Hajime and Tokugawa Ieyasu, respectively. You would need to replace these with their correct QIDs from DBpedia.",4,7,5,3,2,3,3,71,0,0,1,0,0.0,0
391,56,test,"Give me the actor of The Departed and native of the figure known as Hub City and actor of the movie, that is a movie and a work and a television show, with the professional in .","SELECT ?result WHERE { <http://dbpedia.org/resource/The_Departed> <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://dbpedia.org/property/starring> ?v0 . ?v2 <http://dbpedia.org/property/nickname> ""Hub City""@en . ?v0 <http://dbpedia.org/property/occupation> """"@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://dbpedia.org/property/starring> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  # Actor of The Departed
  ?movie dbo:title ""The Departed""@en .
  ?movie dbo:starring ?actor .

  # Native of Hub City (Scranton)
  ?person dbo:nationality dbr:United_States ;
          dbo:birthPlace dbr:Scranton,_Pennsylvania .

  # Actor in a movie that is also a work and television show
  ?work dbo:title ""127 Hours""@en .
  ?work dbo:starring ?actor .
  
  FILTER(?actor = ?person)
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
981,17,test,"Give me the birth place of the person born, that is a beauty queen, as the author of Kamikaze Girls and entity in Indonesia.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BeautyQueen>. ?v3 <http://dbpedia.org/property/birthName> ?v0 . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Indonesia> . <http://dbpedia.org/resource/Kamikaze_Girls> <http://dbpedia.org/property/author> ?v0 . },"```sparql
SELECT ?birthPlace WHERE {
  ?person dbo:birthName ""Kyoko Mori"" .
  ?person dbo:occupation dbo:Author .
  ?person dbo:wikiPageRedirects dbpedia:Kamikaze_Girls .
  ?person dbo:birthPlace ?birthPlace .
}
```",4,5,5,3,2,3,2,20,0,0,19,0,0.0,0
55,22,test,"Give me the band member of the producer, that is a band, of Used to Love Her and band member of the band member, that is a band and a group, of San Francisco Symphony.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/San_Francisco_Symphony> . <http://dbpedia.org/resource/Used_to_Love_Her> <http://dbpedia.org/ontology/producer> ?v3 . },"```sparql
SELECT DISTINCT ?bandMember WHERE {
  # Step 1: Find the producer of ""Used to Love Her""
  ?song dcterms:title ""Used to Love Her"" ;
        dbo:producer ?producer .
  
  # Check if the producer is a band
  ?producer rdf:type dbo:Band .

  # Step 2: Find members of this producer's band
  ?bandMember dbo:memberOf ?producer .

  # Step 3: Check if any band member is part of another band or group that includes ""San Francisco Symphony""
  ?otherBandMember dbo:memberOf ?otherGroup .
  
  FILTER EXISTS {
    ?otherGroup rdf:type dbo:MusicalGroup ;
                dbo:location ?location .
    ?location rdfs:label ""San Francisco""@en .
  }

  # Step 4: Find the band member of this second group
  ?bandMember2 dbo:memberOf ?otherGroup .

  FILTER (?bandMember = ?bandMember2)
}
```",4,7,5,2,2,2,3,28,0,0,1,0,0.0,0
281,60,test,"Give me the war of the awardee of the award of Jonathon Band and war of the profession, that is a military unit, of the professional, that is an office holder and a politician, in New Zealand Army.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/occupation> ?v1 . ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/property/awards> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/New_Zealand_Army> . <http://dbpedia.org/resource/Jonathon_Band> <http://dbpedia.org/property/awards> ?v3 . },"```sparql
# Query 1: Find Jonathon Band's award and associated war
SELECT ?award ?war WHERE {
  ?person foaf:name ""Jonathon Band""@en .
  ?person dbo:awardsReceived ?award .
  ?award dbo:associatedWithWar ?war .
}

# Query 2: Find a New Zealand politician in the army and their military unit or profession
SELECT ?politician ?militaryUnit ?war WHERE {
  ?politician dbo:nationality dbr:New_Zealand ;
              dbo:occupation dbr:Politician ;
              dbo:militaryService ?service .
  ?service dbo:branch dbr:New_Zealand_Army ;
           dbo:rank ?militaryRank .
  OPTIONAL { ?militaryRank rdfs:label ?militaryUnit . }
  ?service dbo:associatedWithWar ?war .
}
```",6,9,7,3,2,3,3,71,0,0,9,0,0.0,0
184,67,test,"Give me the child of the child of the parent, that is a royalty, of Archduke Ladislaus Philipp of Austria and parent of the child of the parent of Archduchess Margaret of Austria (born 1925) and parent of Géza von Habsburg.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v3 . ?v6 <http://dbpedia.org/property/father> ?v0 . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Margaret_of_Austria_(born_1925)> . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Géza_von_Habsburg> . ?v3 <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/property/father> ?v6 . <http://dbpedia.org/resource/Archduke_Ladislaus_Philipp_of_Austria> <http://dbpedia.org/ontology/parent> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?commonAncestor WHERE {
  # Archduke Ladislaus Philipp of Austria's parent and sibling
  ?ladislausParent a dbo:Person ;
                   dbo:child ?ladislaus .
  VALUES ?ladislaus { <http://dbpedia.org/resource/Ladislaus_Philipp_of_Austria> }
  
  ?sibling1 dbo:parent ?ladislausParent ;
           dbo:child ?ladislausChild1 .

  # Archduchess Margaret of Austria's parent and sibling
  ?margaretParent a dbo:Person ;
                  dbo:child ?margaret .
  VALUES ?margaret { <http://dbpedia.org/resource/Margaret_of_Austria_(1925)> }
  
  ?sibling2 dbo:parent ?margaretParent ;
           dbo:child ?ladislausChild2 .

  # Géza von Habsburg's parent and sibling
  ?gezaParent a dbo:Person ;
              dbo:child ?geza .
  VALUES ?geza { <http://dbpedia.org/resource/G%C3%A9za_von_Habsburg> }
  
  ?sibling3 dbo:parent ?gezaParent ;
           dbo:child ?ladislausChild3 .

  # Check if siblings are royalty and have children
  ?sibling1 dbp:title ?title1 .
  FILTER(CONTAINS(LCASE(?title1), ""royalty""))
  ?sibling2 dbp:title ?title2 .
  FILTER(CONTAINS(LCASE(?title2), ""royalty""))
  ?sibling3 dbp:title ?title3 .
  FILTER(CONTAINS(LCASE(?title3), ""royalty""))

  # Find common ancestor
  ?commonAncestor dbo:parent ?ladislausParent ;
                  dbo:parent ?margaretParent ;
                  dbo:parent ?gezaParent .

}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
54,45,test,"Give me the parent of Thado Minsaw of Prome and child of Thinkhaya of Pagan and predecessor of the child, that is an office holder and a royalty, of the reference to Thihapate of Mohnyin.","SELECT ?result WHERE { <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> ?v1 . ?v1 <http://dbpedia.org/property/father> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Thihapate of Mohnyin""@en . <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?result . }","```sparql
# Step 1: Find Thado Minsaw's parent
SELECT ?parent WHERE {
  ?thadoMinsaw dbo:spouse ?parent .
  FILTER(CONTAINS(LCASE(STR(?thadoMinsaw)), ""thado minsaw of prome""))
}

# Step 2: Identify Thinkhaya's child
SELECT ?child WHERE {
  ?thinkhaya dbo:child ?child .
  FILTER(CONTAINS(LCASE(STR(?thinkhaya)), ""thinkhaya of pagan""))
}

# Step 3: Determine the predecessor who is an office holder and royalty
SELECT DISTINCT ?predecessor WHERE {
  ?child dbo:successor ?predecessor .
  ?predecessor a dbo:Monarch ;
               dbo:officeHolder ?office .
  FILTER(?office != """")
}

# Step 4: Ensure connection to Thihapate of Mohnyin
SELECT ?finalPredecessor WHERE {
  ?thihapate dbo:successor ?finalPredecessor .
  ?finalPredecessor a dbo:Monarch ;
                   dbo:officeHolder ?office .
  FILTER(?office != """")
  FILTER(CONTAINS(LCASE(STR(?thihapate)), ""thihapate of mohnyin""))
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
959,59,test,"Give me the member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of the person born in 1958 and native of the residence, that is a country, of the leader, that is a politician, of 2010 Japanese House of Councillors election.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/birthYear> ""1958""^^<http://www.w3.org/2001/XMLSchema#gYear> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v3 <http://dbpedia.org/ontology/almaMater> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/birthPlace> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?v0 <http://dbpedia.org/property/residence> ?v4 . ?result <http://dbpedia.org/ontology/team> ?v1 . <http://dbpedia.org/resource/2010_Japanese_House_of_Councillors_election> <http://dbpedia.org/property/leader> ?v0 . }","```sparql
SELECT DISTINCT ?almaMater WHERE {
  # Step 1: Identify the leader of the 2010 Japanese House of Councillors election
  ?leader dbo:officeHolderOf dbr:Japanese_House_of_Councillors_election,_2010 ;
          rdf:type dbo:Politician .

  # Step 2: Determine the country where this leader was born and resides natively
  ?leader dbo:nationality ?country .
  
  # Step 3: Find a person who was born in 1958 and is native to that country
  ?person dbo:birthYear ""1958""^^xsd:gYear ;
          dbo:nationality ?country .

  # Step 4: Identify the alma mater of this person, which must be an organization, university, educational institution, and located in Japan
  ?person dbo:almaMater ?almaMater .
  ?almaMater rdf:type dbo:EducationalInstitution ;
             dbo:country dbr:Japan ;
             a (dbo:University | dbo:Organization) .
}
```",6,12,7,3,2,3,3,71,0,0,167,0,0.0,0
498,9,test,"Give me the band of the band, that is an organisation and a band, of Solace of Requiem and band of the member, that is an artist, of Mortician (band).",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. <http://dbpedia.org/resource/Mortician_(band)> <http://dbpedia.org/ontology/bandMember> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Solace_of_Requiem> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
# Step 1: Identify the band associated with Solace of Requiem that is both an organization and a band.
SELECT ?band WHERE {
  ?solace dbr:Solace_of_Requiem .
  ?solace dbo:associatedBand ?band .
  ?band rdf:type dbp:MusicalGroup .
  ?band dbo:isPartOfOrganization ?organization .
}

# Step 2: Find members of the identified band who are also part of Mortician.
SELECT DISTINCT ?member WHERE {
  # Assuming ?band is the result from step 1
  ?band dbo:member ?member .
  ?member dbo:associatedBand dbr:Mortician_(band) .
}

# Step 3: Identify other bands associated with these members.
SELECT DISTINCT ?otherBand WHERE {
  # Assuming ?member is the result from step 2
  ?member dbo:associatedBand ?otherBand .
}
```

Note: The above SPARQL queries are structured to be executed in sequence, where each subsequent query depends on the results of the previous one. In practice, you might need to execute these steps programmatically or manually adjust based on intermediate results.",4,7,5,2,2,2,2,9,0,0,1,0,0.0,0
547,62,test,Give me the resting place of the child of the child of William Haliburton and resting place of Alan Cunningham and resting place of the actor of the show with Emily Richard.,"SELECT ?result WHERE { ?v6 <http://dbpedia.org/ontology/restingPlace> ?result . ?v4 <http://dbpedia.org/property/father> ""William Haliburton""@en . <http://dbpedia.org/resource/Alan_Cunningham> <http://dbpedia.org/ontology/restingPlace> ?result . ?v4 <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://dbpedia.org/ontology/restingPlace> ?result . ?v0 <http://dbpedia.org/property/starring> ?v6 . ?v0 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emily_Richard> . }","```sparql
# Query for resting place of the child of the child of William Haliburton
SELECT DISTINCT ?grandchildRestingPlace WHERE {
  ?williamHaliburton dbo:givenName ""William"" .
  ?williamHaliburton dbo:familyName ""Haliburton"" .
  ?williamHaliburton dbo:child ?child .
  ?child dbo:child ?grandchild .
  ?grandchild dbo:deathPlace ?grandchildRestingPlace .
}

UNION

# Query for resting place of Alan Cunningham
SELECT DISTINCT ?alanCunninghamRestingPlace WHERE {
  ?alanCunningham dbo:givenName ""Alan"" .
  ?alanCunningham dbo:familyName ""Cunningham"" .
  ?alanCunningham dbo:deathPlace ?alanCunninghamRestingPlace .
}

UNION

# Query for resting place of the actor of the show with Emily Richard
SELECT DISTINCT ?actorRestingPlace WHERE {
  ?show dbo:starring ?actor .
  ?show dbo:character ?emilyRichard .
  ?emilyRichard dbo:givenName ""Emily"" .
  ?emilyRichard dbo:familyName ""Richard"" .
  ?actor dbo:deathPlace ?actorRestingPlace .
}
```",7,7,8,3,3,3,3,71,0,0,1,0,0.0,0
251,26,test,"Give me the administration of Forza Italia (2013) and location of the war, that is a military conflict, of Louis François Félix Musnier and death place of the author of The Twelve Abbots of Challant.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/place> ?result . ?result <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Forza_Italia_(2013)> . <http://dbpedia.org/resource/The_Twelve_Abbots_of_Challant> <http://dbpedia.org/property/author> ?v1 . ?v1 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Louis_François_Félix_Musnier> <http://dbpedia.org/ontology/battle> ?v2 . },"```sparql
# Query 1: Administration of Forza Italia (2013)
SELECT ?person WHERE {
  ?party dcterms:title ""Forza Italia""@en .
  ?party dbo:leader ?person .
  ?person dbo:officePeriodStartYear ?startYear .
  ?person dbo:officePeriodEndYear ?endYear .
  FILTER (?startYear <= 2013 && (BOUND(?endYear) -> ?endYear >= 2013))
}

# Query 2: Location of the war involving Louis François Félix Musnier
SELECT DISTINCT ?location WHERE {
  ?musnier foaf:name ""Louis François Félix Musnier""@en .
  ?musnier dbo:militaryConflict ?conflict .
  ?conflict dbo:location ?location .
}

# Query 3: Death place of the author of The Twelve Abbots of Challant
SELECT ?deathPlace WHERE {
  ?book dcterms:title ""The Twelve Abbots of Challant""@en ;
        dbo:author ?author .
  ?author dbo:deathPlace ?deathPlace .
}
```",5,6,6,2,3,2,3,28,0,0,1,0,0.0,0
92,28,test,"Give me the band member of the reference, that is an artist, to Nevermore and band of Joseph Michael and associated musical artist of Jim Sheppard.","SELECT ?result WHERE { ?v1 <http://xmlns.com/foaf/0.1/name> ""Nevermore""@en . ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Joseph_Michael> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . <http://dbpedia.org/resource/Jim_Sheppard> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?member ?artistName ?josephsBand ?jimAssociatedArtist WHERE {
  # Find members of Nevermore who are also artists
  ?band a dbo:MusicalBand ;
        dbo:name ""Nevermore"" .
  
  ?band dbo:bandMember ?member .
  ?member dbo:occupation dbr:Musician .

  OPTIONAL { 
    ?artist dbo:wikiPageRedirects ?member .
    ?artist dbo:name ?artistName .
  }

  # Find the band associated with Joseph Michael
  ?joseph a dbo:Person ;
          foaf:name ""Joseph Michael"" .
  
  ?band2 dbo:bandMember ?joseph .
  ?band2 dbo:name ?josephsBand .

  # Find any musical artist associated with Jim Sheppard
  ?shepard a dbo:Person ;
           foaf:name ""Jim Sheppard"" .
  
  OPTIONAL {
    ?artist3 dbo:wikiPageRedirects ?shepard .
    ?artist3 dbo:name ?jimAssociatedArtist .
  }
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
488,54,test,"Give me the death place of the father, that is a politician, of the father, that is an office holder, of Matsudaira Tadamasa and administration of Emperor Go-Yōzei and birth place of the commander in Boshin War.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Matsudaira_Tadamasa> <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Boshin_War> <http://dbpedia.org/ontology/commander> ?v3 . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/father> ?v5 . ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Emperor_Go-Yōzei> . },"```sparql
# Step 1: Find Matsudaira Tadamasa's father and his father (the grandfather)
SELECT ?grandfather WHERE {
  ?matsudairaTadamasa dbo:parent ?father .
  ?father dbo:parent ?grandfather .
  ?matsudairaTadamasa rdfs:label ""Matsudaira Tadamasa""@en .
}

# Step 2: Find the death place of Matsudaira Tadamasa's grandfather
SELECT ?deathPlace WHERE {
  ?grandfather dbo:deathPlace ?deathPlace .
  # Assuming we have identified the grandfather from the previous query
  FILTER(?grandfather = <http://dbpedia.org/resource/Specific_Grandfather_URI>)
}

# Step 3: Find a notable commander in the Boshin War and his birth place
SELECT ?birthPlace WHERE {
  ?commander dbo:occupation ""Military personnel""@en .
  ?commander dbo:participatedInBattle <http://dbpedia.org/resource/Boshin_War> .
  ?commander dbo:birthPlace ?birthPlace .
}
```

Note: Replace `<http://dbpedia.org/resource/Specific_Grandfather_URI>` with the actual URI of Matsudaira Tadamasa's grandfather once identified.",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
391,50,test,"Give me the actor of the claim to fame, that is a work, of the spouse of Sherry Hormann and actor of the movie, that is a movie and a work and a television show, with Roz Ryan.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Roz_Ryan> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v3 <http://dbpedia.org/property/starring> ?result . ?v4 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Sherry_Hormann> <http://dbpedia.org/ontology/spouse> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v0 <http://dbpedia.org/ontology/knownFor> ?v4 . },"```sparql
# Step 1: Find Sherry Hormann's spouse
SELECT ?spouse WHERE {
  wd:Q123456 wdt:P26 ?spouse .
}

# Step 2: Determine the claim to fame (a work) of Sherry Hormann's spouse
SELECT ?work WHERE {
  ?spouse wdt:P800 ?work .
}

# Step 3: Find who acted in that particular work
SELECT DISTINCT ?actor WHERE {
  ?work wdt:P161 ?actor .
}

# Step 4: Identify a movie that is also a television show and involves Roz Ryan
SELECT DISTINCT ?movie WHERE {
  wd:Q789012 wdt:P161 ?movie .
  ?movie wdt:P31/wdt:P279* wd:Q11424 . # Q11424 is the class for films, including TV movies
}

# Step 5: Determine who else acted in this movie/television show
SELECT DISTINCT ?actor WHERE {
  ?movie wdt:P161 ?actor .
}
```

Note: Replace `wd:Q123456` with Sherry Hormann's DBpedia ID and `wd:Q789012` with Roz Ryan's DBpedia ID. The exact IDs need to be looked up in the DBpedia database.",5,9,6,3,2,3,3,71,0,0,1,0,0.0,0
54,50,test,"Give me the parent of the child of the parent of Thado Minsaw of Prome and predecessor of the child, that is an office holder and a royalty, of Thihapate of Mohnyin.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/successor> ?v3 . ?v4 <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Thihapate_of_Mohnyin> . ?v4 <http://dbpedia.org/property/father> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parentOfPredecessor WHERE {
  # Step 1: Identify Thado Minsaw of Prome
  ?thadoMinsaw a dbo:Monarch ;
               foaf:name ""Thado Minsaw""@en ;
               dbo:country dbr:Prome_Region .

  # Step 2: Find the Parent of Thado Minsaw
  ?parentOfThadoMinsaw dbo:child ?thadoMinsaw .

  # Step 3: Predecessor of Thado Minsaw
  ?predecessor dbo:succeededBy ?thadoMinsaw ;
              a dbo:Monarch .

  # Step 4: Parent of the Predecessor
  ?parentOfPredecessor dbo:child ?predecessor .

  # Step 5: Identify Thihapate of Mohnyin
  ?thihapate a dbo:Monarch ;
             foaf:name ""Thihapate""@en ;
             dbo:country dbr:Mohnyin_Region .

  # Step 6: Child of Thihapate
  ?childOfThihapate dbo:parent ?thihapate .

  # Ensure the person is an office holder and royalty
  FILTER EXISTS { ?parentOfPredecessor a dbo:Monarch }
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
251,22,test,"Give me the administration of the ruling party, that is a political party and an organisation, in Sicily and location of the war, that is a military conflict, of Louis François Félix Musnier.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Sicily> <http://dbpedia.org/property/leaderParty> ?v3 . ?v2 <http://dbpedia.org/ontology/place> ?result . <http://dbpedia.org/resource/Louis_François_Félix_Musnier> <http://dbpedia.org/ontology/battle> ?v2 . ?result <http://dbpedia.org/property/leaderParty> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. },"```sparql
# Query to find the administration of a ruling party in Sicily
SELECT ?party ?administration WHERE {
  ?party rdf:type dbo:PoliticalParty .
  ?party dbo:country dbr:Sicily .
  ?party dbo:headquarters ?location .
  OPTIONAL { ?party dbo:leader ?person . }
  ?administration dbo:politicalParty ?party .
  ?administration dbo:administrativeArea dbr:Sicily .
}

UNION

# Query to find the location of a war involving Louis François Félix Musnier
SELECT ?war ?location WHERE {
  ?musnier foaf:name ""Louis François Félix Musnier""@en .
  ?musnier dbo:militaryConflict ?war .
  ?war dbo:location ?location .
}
```",4,7,5,2,2,2,3,28,0,0,1,0,0.0,0
328,65,test,"Give me the awardee of the award of Bruce Fraser, 1st Baron Fraser of North Cape and leader of the office, that is a government agency, of Joseph Stalin and commander in the force of the person decedent at Budapest.","SELECT ?result WHERE { ?v6 <http://dbpedia.org/ontology/commander> ?result . ?v6 <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Budapest> . <http://dbpedia.org/resource/Joseph_Stalin> <http://dbpedia.org/property/office> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v3 <http://dbpedia.org/ontology/leader> ?result . ?result <http://dbpedia.org/property/awards> ?v4 . <http://dbpedia.org/resource/Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape> <http://dbpedia.org/property/awards> ?v4 . }","```sparql
SELECT ?award WHERE {
  ?person rdfs:label ""Bruce Fraser, 1st Baron Fraser of North Cape""@en .
  ?person dbo:awardsReceived ?award .
  OPTIONAL { 
    ?award dbo:givenBy ?giver .
    ?giver rdfs:label ?leaderLabel .
    FILTER(CONTAINS(LCASE(?leaderLabel), ""winston churchill"") || CONTAINS(LCASE(?leaderLabel), ""joseph stalin""))
  }
  OPTIONAL {
    ?person dbo:commanderOfMilitaryUnit ?unit .
    ?unit dbo:location ?location .
    FILTER(CONTAINS(LCASE(STR(?location)), ""budapest""))
  }
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
251,23,test,"Give me the location of the war, that is a military conflict, of Louis François Félix Musnier and death place of the author of The Twelve Abbots of Challant.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Louis_François_Félix_Musnier> <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/The_Twelve_Abbots_of_Challant> <http://dbpedia.org/property/author> ?v1 . ?v2 <http://dbpedia.org/ontology/place> ?result . },"```sparql
# Query to find the location of the war involving Louis François Félix Musnier
SELECT ?location WHERE {
  ?musnier dbo:occupation dbr:Military_officer .
  ?musnier foaf:name ""Louis François Félix Musnier"" .
  ?engagement dbo:participant ?musnier ;
              dbo:place ?location .
}

UNION

# Query to find the death place of Bonvesin de la Riva
SELECT ?deathPlace WHERE {
  ?bonvesin dbo:author dbr:The_Twelve_Abbots_of_Challant ;
            dbo:deathPlace ?deathPlace .
}
```",4,5,5,2,2,2,3,28,0,0,2,0,0.0,0
528,66,test,Give me the war of the military force of Battle of Pisagua and force of the person born as the birth name of Narciso Campero and war of the commander in Battle of La Rinconada de Ate.,SELECT ?result WHERE { <http://dbpedia.org/resource/Battle_of_La_Rinconada_de_Ate> <http://dbpedia.org/ontology/commander> ?v6 . ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/property/birthName> ?v1 . ?v6 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/commander> ?v2 . ?v3 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Pisagua> . <http://dbpedia.org/resource/Narciso_Campero> <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
# Query for the military forces involved in the Battle of Pisagua
SELECT ?force WHERE {
  ?battle dbpedia-owl:wikiPageRedirects ?redirect .
  ?redirect rdfs:label ""Battle of Pisagua""@en .
  ?battle dbo:militaryConflicts ?conflict .
  ?conflict dbo:participatingMilitaryUnit ?unit .
  ?unit rdfs:label ?force .
  FILTER(LANG(?force) = 'en')
}

UNION

# Query for the military force associated with Narciso Campero
SELECT ?militaryForce WHERE {
  ?person foaf:name ""Narciso Campero""@en .
  ?person dbo:birthName ?birthName .
  ?person dbo:militaryService ?service .
  ?service dbo:militaryUnit ?unit .
  ?unit rdfs:label ?militaryForce .
  FILTER(LANG(?militaryForce) = 'en')
}

UNION

# Query for the commander in the Battle of La Rinconada de Ate
SELECT ?commander WHERE {
  ?battle dbpedia-owl:wikiPageRedirects ?redirect .
  ?redirect rdfs:label ""Battle of La Rinconada de Ate""@en .
  ?battle dbo:commander ?commander .
  ?commander rdfs:label ?name .
  FILTER(LANG(?name) = 'en')
}
```",7,7,8,3,3,3,3,71,0,0,2,0,0.0,0
547,66,test,Give me the resting place of the awardee of the award of Gerald Graham and resting place of the child of James Burton (property developer) and resting place of the actor of Enemy at the Door.,SELECT ?result WHERE { <http://dbpedia.org/resource/James_Burton_(property_developer)> <http://dbpedia.org/ontology/child> ?v3 . <http://dbpedia.org/resource/Enemy_at_the_Door> <http://dbpedia.org/property/starring> ?v6 . ?v2 <http://dbpedia.org/property/awards> ?v1 . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . ?v6 <http://dbpedia.org/ontology/restingPlace> ?result . ?v3 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Gerald_Graham> <http://dbpedia.org/property/awards> ?v1 . },"```sparql
# Query for the awardee of Gerald Graham's award
SELECT ?awardee ?restingPlace WHERE {
  ?award dbo:wikiPageRedirects db:Q1234567 ; # Assuming Q1234567 is the DBpedia ID for Gerald Graham's award
         dbo:recipient ?awardee .
  OPTIONAL { ?awardee dbo:placeOfBurial ?restingPlace . }
}

UNION

# Query for the child of James Burton (property developer)
SELECT ?child ?restingPlace WHERE {
  db:Q2345678 dbo:child ?child ; # Assuming Q2345678 is the DBpedia ID for James Burton
               rdf:type dbo:PropertyDeveloper .
  OPTIONAL { ?child dbo:placeOfBurial ?restingPlace . }
}

UNION

# Query for the actor of ""Enemy at the Door""
SELECT ?actor ?restingPlace WHERE {
  db:Q3456789 dbo:castMember ?actor ; # Assuming Q3456789 is the DBpedia ID for ""Enemy at the Door""
               rdf:type dbo:Film .
  OPTIONAL { ?actor dbo:placeOfBurial ?restingPlace . }
}
```",7,7,8,3,3,3,3,71,0,0,1,0,0.0,0
184,68,test,"Give me the parent of the native of the landmark at elevation, that is a settlement, of 96.0 and parent of the child of Archduke Joseph Francis of Austria and child of the child of the parent, that is a royalty, of Archduke Ladislaus Philipp of Austria.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/birthPlace> ?v5 . ?v5 <http://dbpedia.org/ontology/elevation> ""96.0""^^<http://www.w3.org/2001/XMLSchema#double> . ?result <http://dbpedia.org/ontology/child> ?v3 . ?result <http://dbpedia.org/ontology/child> ?v4 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Francis_of_Austria> . <http://dbpedia.org/resource/Archduke_Ladislaus_Philipp_of_Austria> <http://dbpedia.org/ontology/parent> ?v0 . ?v7 <http://dbpedia.org/property/father> ?v0 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/property/father> ?v7 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?finalParent WHERE {
  # Step 1: Find the landmark at elevation 96.0 that is a settlement
  ?landmark a dbo:Settlement ;
            dbo:elevation ""96.0""^^xsd:float .

  # Step 2: Find the native of this landmark
  ?native dbo:nativeOf ?landmark .

  # Step 3: Determine the parent of this native
  ?parent1 dbo:child ?native .

  # Step 4: Identify Archduke Joseph Francis of Austria's child
  dbr:Archduke_Joseph_Francis_of_Austria dbo:child ?childOfJoseph .

  # Step 5: Find the child of this child (grandchild of Joseph)
  ?grandChild dbo:parent ?childOfJoseph ;
              a dbo:Person .

  # Step 6: Identify the parent of this grandchild
  ?parent2 dbo:child ?grandChild .

  # Step 7: Ensure the parent is royalty and related to Archduke Ladislaus Philipp of Austria
  ?parent2 a dbo:Royalty ;
           dbo:parent ?ladislausParent .
  
  dbr:Archduke_Ladislaus_Philipp_of_Austria dbo:child ?ladislausParent .

  # Step 8: Find the parent of this royal person
  ?finalParent dbo:child ?parent2 .
}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
767,47,test,"Give me the alma mater of the administration of the reference to George Kilbon Nash and entity in the administration, that is a settlement, of Green.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/state> ?v2 . ?v2 <http://dbpedia.org/property/leaderParty> ""Green""@en . ?v4 <http://dbpedia.org/property/governor> ?v0 . ?v0 <http://xmlns.com/foaf/0.1/name> ""George Kilbon Nash""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v4 <http://dbpedia.org/ontology/almaMater> ?result . }","```sparql
# Query to find the alma mater of George Kilbon Nash
SELECT ?almaMater WHERE {
  ?person foaf:name ""George Kilbon Nash""@en .
  ?person dbo:almaMater ?almaMater .
}

UNION

# Query to find a settlement named Green and its administration's alma mater
SELECT ?settlementAlmaMater WHERE {
  ?greenSettlement rdfs:label ""Green""@en ;
                   rdf:type dbo:Settlement .
  ?administration dbo:administrativeUnit ?greenSettlement .
  ?administrationMember foaf:name ?personName .
  ?administrationMember dbo:almaMater ?settlementAlmaMater .
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
92,58,test,"Give me the band of the person born as the birth name of Joseph Michael and associated musical artist of the person born, that is an artist, as Jim Sheppard and band member of Nevermore.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Nevermore> . ?v5 <http://dbpedia.org/property/birthName> ""Jim Sheppard""@en . ?result <http://dbpedia.org/ontology/bandMember> ?v2 . <http://dbpedia.org/resource/Joseph_Michael> <http://dbpedia.org/property/birthName> ?v1 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band1 ?band2 WHERE {
  # Geoff Tate (born Joseph Michael) and his band
  OPTIONAL { 
    ?person dbr:Geoff_Tate .
    ?person dbo:birthName ""Joseph Michael"" .
    ?person dbo:musicGroup ?band1 .
  }
  
  # Jim Sheppard and his band Nevermore
  OPTIONAL {
    ?person2 dbr:Jim_Sheppard .
    ?person2 dbo:musicArtist ?artist .
    ?person2 dbo:musicalBandMemberOf ?band2 .
    FILTER(?band2 = dbr:Nevermore)
  }
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
959,22,test,Give me the member of University of Tsukuba and manager of the team of Takashi Sekizuka.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/University_of_Tsukuba> . ?v0 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Takashi_Sekizuka> . ?v0 <http://dbpedia.org/ontology/manager> ?result . },"```sparql
SELECT ?person WHERE {
  # Find individuals affiliated with the University of Tsukuba
  ?person wdt:P69 wd:Q1234567 . # P69 is ""alma mater"" or ""educated at"", Q1234567 should be replaced by the actual DBpedia ID for University of Tsukuba

  UNION

  # Find manager of Takashi Sekizuka's team
  ?team wdt:P106 wd:Q1234568 ; # P106 is ""occupation"", Q1234568 should be replaced by the actual DBpedia ID for Takashi Sekizuka
        wdt:P127* ?manager .
}
```

Note: The placeholders `wd:Q1234567` and `wd:Q1234568` need to be replaced with the correct DBpedia IDs for the University of Tsukuba and Takashi Sekizuka, respectively. Additionally, ensure that the property P127 (part of) is used correctly to find hierarchical relationships like team membership.",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
617,52,test,"Give me the parent of Nysa (wife of Pharnaces I of Pontus) and spouse of the child of Antiochus III the Great and child of the child, that is a royalty, of the successor, that is a royalty, of Antiochus II Theos.",SELECT ?result WHERE { <http://dbpedia.org/resource/Antiochus_III_the_Great> <http://dbpedia.org/ontology/child> ?v5 . ?v5 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/father> ?v2 . <http://dbpedia.org/resource/Antiochus_II_Theos> <http://dbpedia.org/ontology/successor> ?v3 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Nysa_(wife_of_Pharnaces_I_of_Pontus)> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/father> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent ?spouse WHERE {
  # Nysa's parent
  dbr:Nysa_(wife_of_Pharaces_I) dbo:mother ?nysaMother .
  ?nysaMother a dbo:Person .

  # Antiochus III the Great's child who is royalty
  dbr:Antiochus_III_the_Great dbo:child ?antiochusChild .
  ?antiochusChild a dbo:Monarch .

  # Successor of Antiochus II Theos and their royal child
  dbr:Antiochus_II_Theos dbo:successor ?successor .
  ?successor a dbo:Monarch .
  ?successor dbo:child ?royalChild .
  ?royalChild a dbo:Monarch .

  # Spouse of the royal child
  ?royalChild dbo:spouse ?spouse .
}
```",6,8,7,3,3,3,3,71,0,0,2,0,0.0,0
92,52,test,"Give me the band member of the reference, that is an artist, to the name of Nevermore (2006 film) and associated musical artist of the person born, that is an artist, as Jim Sheppard and band of Joseph Michael.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Joseph_Michael> . ?v5 <http://dbpedia.org/property/birthName> ""Jim Sheppard""@en . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://xmlns.com/foaf/0.1/name> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Nevermore_(2006_film)> <http://xmlns.com/foaf/0.1/name> ?v3 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . }","```sparql
# Query 1: Band member of Nevermore (2006 film) who is an artist
SELECT ?bandMember WHERE {
  ?film dcterms:title ""Nevermore"" .
  ?film dbo:releaseDate ?date .
  FILTER(YEAR(?date) = 2006)
  ?film dbo:starring ?actor .
  ?actor dbo:occupation ?occupation .
  FILTER(CONTAINS(LCASE(?occupation), ""musician"") || CONTAINS(LCASE(?occupation), ""singer""))
  ?actor foaf:name ?bandMember .
}

# Query 2: Musical artist associated with Jim Sheppard
SELECT ?artist WHERE {
  ?person foaf:name ""Jim Sheppard"" .
  ?person dbo:associatedBand ?band .
  ?band dbo:member ?artist .
  ?artist a dbo:MusicalArtist .
}

# Query 3: Band of Joseph Michael
SELECT ?band WHERE {
  ?person foaf:name ""Joseph Michael"" .
  ?person dbo:associatedBand ?band .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
747,51,test,Give me the band of the person born as the persona of Shèna and band of the writer of Apollo (Hardwell song).,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Apollo_(Hardwell_song)> <http://dbpedia.org/property/writer> ?v4 . <http://dbpedia.org/resource/Shèna> <http://xmlns.com/foaf/0.1/givenName> ?v1 . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT ?band1Label ?band2Label WHERE {
  # Find the band associated with Shèna (Shèna Marie Rogers)
  ?person foaf:name ""Shèna Marie Rogers""@en .
  ?person dbo:associatedBand ?band1 .
  ?band1 rdfs:label ?band1Label .

  # Find the writer of Apollo by Hardwell and their band
  ?song dbo:title ""Apollo""@en ;
        dbo:lyricsBy ?writer .
  ?writer foaf:name ?writerName .
  
  OPTIONAL {
    ?writer dbo:associatedBand ?band2 .
    ?band2 rdfs:label ?band2Label .
  }

  FILTER(?writerName IN (""Tiësto"", ""Dimitri Vegas & Like Mike"")) # Assuming these are potential writers based on common collaborations
}
```",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
9,53,test,"Give me the figure known as the nickname of Queen's University Belfast and alma mater of Allen Hill (scientist) and alma mater of the mayor, that is a politician, of the entity, that is an organisation, in Belfast.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/leader> ?v2 . <http://dbpedia.org/resource/Allen_Hill_(scientist)> <http://dbpedia.org/ontology/almaMater> ?result . ?v3 <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Belfast> . ?v2 <http://dbpedia.org/ontology/almaMater> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Queen's_University_Belfast> <http://dbpedia.org/property/nickname> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/property/nickname> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?nickname ?mayorName WHERE {
  # Get the nickname of Queen's University Belfast
  VALUES ?university { dbr:Queen's_University_Belfast }
  ?university dbo:nickname ?nickname .

  # Confirm Allen Hill is an alumnus of Queen's University Belfast
  ?allenHill dbo:almaMater ?university .
  FILTER (str(?allenHill) = ""Allen_Hill_(scientist)"")

  # Identify a politician who is the mayor of an organization in Belfast
  ?mayor dbo:almaMater ?university ;
         dbo:occupation dbr:Politician ;
         dbp:municipality dbr:Belfast .

  # Return the nickname and the name of the mayor
  BIND(str(?mayor) AS ?mayorName)
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
701,63,test,Give me the parent of the child of the spouse of Amun-her-khepeshef and parent of the child of Ramesses II and spouse of the father of Merneptah.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?result <http://dbpedia.org/ontology/child> ?v6 . ?v6 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ramesses_II> . ?v4 <http://dbpedia.org/ontology/child> ?v3 . <http://dbpedia.org/resource/Amun-her-khepeshef> <http://dbpedia.org/ontology/spouse> ?v4 . ?v3 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Merneptah> <http://dbpedia.org/property/father> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?result1 ?result2 ?result3 WHERE {
  # Amun-her-khepeshef's spouse and their child
  ?amunHerKhepeshef dbo:spouse ?spouse1 .
  ?child1 dbo:parent ?spouse1 ;
          dbo:parent ?parent1 .

  # Ramesses II's spouse and their child
  ?ramessesII dbo:spouse ?spouse2 .
  ?child2 dbo:parent ?spouse2 ;
          dbo:parent ?parent2 .

  # Merneptah's father and his spouse
  ?merneptah dbp:father ?fatherMerneptah .
  ?fatherMerneptah dbo:spouse ?spouse3 .

  # Bind results to variables for final output
  BIND(?parent1 AS ?result1)
  BIND(?parent2 AS ?result2)
  BIND(?spouse3 AS ?result3)

  FILTER(STRSTARTS(LCASE(?amunHerKhepeshef), ""http://dbpedia.org/resource/amun-her-khepeshef""))
  FILTER(STRSTARTS(LCASE(?ramessesII), ""http://dbpedia.org/resource/ramesses_ii""))
  FILTER(STRSTARTS(LCASE(?merneptah), ""http://dbpedia.org/resource/merneptah""))
}
```",7,7,8,3,3,3,3,71,0,0,1,0,0.0,0
378,58,test,"Give me the war of the commander in Peninsular War and war of Carl Pontus Gahn and claim to fame of the commander in the war, that is a military conflict and a societal event and an event, of Thomas Trigge.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Peninsular_War> <http://dbpedia.org/ontology/commander> ?v5 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Thomas_Trigge> <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v5 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/ontology/knownFor> ?result . },"```sparql
# Query for the commander of the Peninsular War and his claim to fame
SELECT ?commander ?fame WHERE {
  ?war dbo:wikiPageRedirects db:Q1234; # Assuming Q1234 is the DBpedia ID for the Peninsular War
      dbo:participatedInMilitaryConflict ?commander.
  ?commander dbo:occupation ""military commander""@en;
             dbo:famousFor ?fame.
}

# Query for Carl Pontus Gahn's war involvement
SELECT ?war WHERE {
  db:Q12345 dbo:participatedInMilitaryConflict ?war; # Assuming Q12345 is the DBpedia ID for Carl Pontus Gahn
            a dbo:MilitaryPerson.
}

# Query for Thomas Trigge's claim to fame, if available
SELECT ?fame WHERE {
  db:Q67890 dbo:famousFor ?fame. # Assuming Q67890 is the DBpedia ID for Thomas Trigge
}
```",6,9,7,3,3,3,3,71,0,0,2,0,0.0,0
427,68,test,"Give me the party of the father of the alumnus of Massachusetts Institute of Technology and reference to the name of the party of Michele Pinto and party of the person born, that is an office holder and a politician, as Romano Antonio Prodi.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/birthName> ""Romano Antonio Prodi""@en . ?v5 <http://xmlns.com/foaf/0.1/name> ?v4 . ?result <http://xmlns.com/foaf/0.1/name> ?v4 . <http://dbpedia.org/resource/Michele_Pinto> <http://dbpedia.org/ontology/party> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/property/father> ?v7 . ?v7 <http://dbpedia.org/ontology/party> ?result . ?v0 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Massachusetts_Institute_of_Technology> . ?v3 <http://dbpedia.org/ontology/party> ?result . }","```sparql
# Query 1: Find a notable alumnus of MIT and their father's political party
SELECT ?alumnus ?father ?party WHERE {
  ?alumnus dbo:almaMater dbr:Massachusetts_Institute_of_Technology .
  ?alumnus dbo:birthName ?name .
  OPTIONAL { ?alumnus dbo:father ?father . }
  OPTIONAL { ?father dbo:politicalParty ?party . }
  FILTER (LANG(?name) = ""en"")
} LIMIT 1

# Query 2: Find Michele Pinto's political party
SELECT ?michelePinto ?party WHERE {
  ?michelePinto rdfs:label ""Michele Pinto""@en .
  ?michelePinto dbo:politicalParty ?party .
}

# Query 3: Find Romano Prodi's political party
SELECT ?romanoProdi ?party WHERE {
  ?romanoProdi rdfs:label ""Romano Prodi""@en .
  ?romanoProdi dbo:politicalParty ?party .
}
```",8,10,9,3,3,3,3,71,0,0,2,0,0.0,0
391,61,test,"Give me the actor of the movie, that is a movie and a work and a television show, with the professional in  and actor of the claim to fame, that is a work, of the spouse of Sherry Hormann.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v3 <http://dbpedia.org/property/starring> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://dbpedia.org/property/starring> ?v1 . <http://dbpedia.org/resource/Sherry_Hormann> <http://dbpedia.org/ontology/spouse> ?v0 . ?v1 <http://dbpedia.org/property/occupation> """"@en . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v5 <http://dbpedia.org/ontology/starring> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v0 <http://dbpedia.org/ontology/knownFor> ?v5 . }","```sparql
# Step 1: Find Sherry Hormann's spouse
SELECT ?spouse WHERE {
  dbpedia:Sherry_Hormann dbo:spouse ?spouse .
}

# Step 2: Identify the claim to fame of Sherry Hormann's spouse which is a work
SELECT DISTINCT ?work WHERE {
  ?spouse dbo:claimToFame ?work .
  ?work rdf:type dbo:Film .
}

# Step 3: Find actors associated with that work
SELECT DISTINCT ?actor WHERE {
  ?work dbo:starring ?actor .
  ?actor rdf:type dbo:Actor .
}

# Step 4: Check if any of these works are also classified as television shows and retrieve the actor
SELECT DISTINCT ?actor WHERE {
  ?work rdf:type dbo:Film ;
        rdf:type dbo:TelevisionShow .
  ?work dbo:starring ?actor .
  ?actor rdf:type dbo:Actor .
}
```",6,10,7,3,2,3,3,71,0,0,11,0,0.0,0
528,57,test,Give me the war of the commander in the work of --01-09 and war of Irene Morales and force of the person born as Narciso Campero Leyes.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/commander> ?v5 . ?v0 <http://dbpedia.org/property/author> ""--01-09""^^<http://www.w3.org/2001/XMLSchema#gMonthDay> . ?v5 <http://dbpedia.org/ontology/battle> ?result . ?v3 <http://dbpedia.org/property/birthName> ""Narciso Campero Leyes""@en . ?result <http://dbpedia.org/ontology/commander> ?v3 . <http://dbpedia.org/resource/Irene_Morales> <http://dbpedia.org/ontology/battle> ?result . }","```sparql
# Query to find wars associated with Irene Morales
SELECT ?war WHERE {
  ?person foaf:name ""Irene Morales"" .
  ?person dbo:memberOf ?organization .
  ?organization dbo:member ?individual .
  ?individual dbo:occupation dbp:MilitaryPerson .
  ?individual dbo:participatedIn ?war .
}

# Query to find birth details and military force of Narciso Campero Leyes
SELECT ?birthDate ?militaryForce WHERE {
  ?person foaf:name ""Narciso Campero Leyes"" .
  ?person dbo:birthday ?birthDate .
  ?person dbo:memberOf ?organization .
  ?organization rdf:type dbp:MilitaryOrganization .
  BIND(?organization AS ?militaryForce)
}
```",6,6,7,3,3,3,3,71,0,0,2,0,0.0,0
48,19,test,"Give me the band of the writer of Emotion (Carly Rae Jepsen album) and band of the actor, that is a musical artist, of the show with Stacey Dash.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Stacey_Dash> . <http://dbpedia.org/resource/Emotion_(Carly_Rae_Jepsen_album)> <http://dbpedia.org/property/writer> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/property/starring> ?v4 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
# Query to find the writer of Carly Rae Jepsen's album ""Emotion""
SELECT ?writer WHERE {
  ?album dcterms:title ""Emotion""@en .
  ?album dbo:artist <http://dbpedia.org/resource/Carly_Rae_Jepsen> .
  ?album dbo:composerOrLyricist ?writer .
}

# Query to find the band of the writer
SELECT DISTINCT ?band WHERE {
  ?person rdfs:label ?writerLabel FILTER (lang(?writerLabel) = 'en') .
  OPTIONAL { ?person dbo:memberOfBand ?band . }
}

# Query to find a show with Stacey Dash and an actor who is also a musical artist
SELECT DISTINCT ?show ?actor WHERE {
  ?show dbo:starring <http://dbpedia.org/resource/Stacey_Dash> .
  ?show dbo:starring ?actor .
  OPTIONAL { ?actor dbo:musicalArtist true . }
}

# Query to find the band of the actor-musical artist
SELECT DISTINCT ?band WHERE {
  ?person rdfs:label ?actorLabel FILTER (lang(?actorLabel) = 'en') .
  OPTIONAL { ?person dbo:memberOfBand ?band . }
}
```",5,6,6,3,2,3,2,20,0,0,1,0,0.0,0
391,65,test,"Give me the actor of the movie, that is a movie and a work and a television show, with Roz Ryan and actor of the claim to fame, that is a work, of the spouse of Sherry Hormann and native of the figure known as Hub City.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/starring> ?result . ?v6 <http://dbpedia.org/ontology/starring> ?result . ?v3 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Roz_Ryan> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?result <http://dbpedia.org/ontology/birthPlace> ?v4 . ?v4 <http://dbpedia.org/property/nickname> ""Hub City""@en . ?v0 <http://dbpedia.org/ontology/knownFor> ?v6 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. <http://dbpedia.org/resource/Sherry_Hormann> <http://dbpedia.org/ontology/spouse> ?v0 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actor WHERE {
  # Step 1: Find movies that are also works and television shows with Roz Ryan as an actor
  ?movie a dbo:Film ;
         dbo:genre ?workGenre ;
         dbo:starring dbr:Roz_Ryan .
  
  FILTER EXISTS { ?movie dbo:isBasedOn ?work . }
  FILTER EXISTS { ?movie dbo:televisionSeriesVersion ?tvShow . }

  # Step 2: Find Sherry Hormann's spouse and their claim to fame
  dbr:Sherry_Hormann dbo:spouse ?spouse .
  ?spouse dbo:claimToFame ?fameWork .

  # Step 3: Identify actors common to both the movie and the claim to fame
  ?actor dbo:starring ?movie ;
         dbo:starring ?fameWork .

  # Step 4: Find the native city of the figure known as Hub City
  dbr:Hub_City dbo:nativePlace ?nativeCity .
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
617,66,test,"Give me the child of the child, that is a royalty, of Seleucus II Callinicus and parent of the child of the commander in Battle of Panium and spouse of the child of Antiochus III the Great.",SELECT ?result WHERE { <http://dbpedia.org/resource/Battle_of_Panium> <http://dbpedia.org/ontology/commander> ?v1 . ?v6 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Antiochus_III_the_Great> <http://dbpedia.org/ontology/child> ?v6 . ?v1 <http://dbpedia.org/ontology/child> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/property/father> ?v3 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seleucus_II_Callinicus> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?grandchild WHERE {
  # Seleucus II Callinicus and his children
  ?seleucus2 dbr:Seleucus_II_Callinicus .
  ?seleucus2 dbo:spouse ?parent1 .
  ?seleucus2 dbo:child ?child1 .

  # Antiochus Hierax as a child of Seleucus II Callinicus
  ?child1 rdfs:label ""Antiochus Hierax""@en .
  
  # Antiochus Hierax's descendants
  ?antiochusHierax dbo:child ?grandchild .

  # Commander in Battle of Panium and his child
  ?ptolemyIV dbr:Ptolemy_IV_Philopator .
  ?ptolemyIV dbo:spouse ?parent2 .
  ?ptolemyIV dbo:child ?child2 .

  # Antiochus III the Great and his children
  ?antiochusIII dbr:Antiochus_III_the_Great .
  ?antiochusIII dbo:child ?child3 .
  
  # Laodice IV as a child of Antiochus III the Great
  ?child3 rdfs:label ""Laodice_IV""@en .

  # Seleucus III Ceraunus as spouse and parent
  ?grandchild rdfs:label ""Seleucus_III_Ceraunus""@en .
  ?grandchild dbo:spouse ?child3 .
  ?grandchild dbo:parent ?child2 .
}
```",7,8,8,3,3,3,3,71,0,0,2,0,0.0,0
251,21,test,Give me the death place of the author of The Twelve Abbots of Challant and administration of Forza Italia (2013) and location of Battle of Marengo.,SELECT ?result WHERE { <http://dbpedia.org/resource/Battle_of_Marengo> <http://dbpedia.org/ontology/place> ?result . ?result <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Forza_Italia_(2013)> . ?v0 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/The_Twelve_Abbots_of_Challant> <http://dbpedia.org/property/author> ?v0 . },"```sparql
# Query for the death place of Bartolomeo Sacchi (Placido)
SELECT ?deathPlace WHERE {
  ?author foaf:name ""Bartolomeo Sacchi""@en .
  ?author dbo:birthName ""Bartolomeo Sacchi""@en .
  ?author dbo:deathPlace ?deathPlace .
}

# Query for the administration of Forza Italia in 2013
SELECT ?location WHERE {
  ?administration dcterms:title ""Forza Italia (2013)""@en ;
                  dbo:governmentHead ?head ;
                  dbo:country ?country .
  ?country dbo:capital ?location .
}

# Query for the location of the Battle of Marengo
SELECT ?location WHERE {
  ?battle dbo:name ""Battle of Marengo""@en ;
          dbo:place ?location .
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
747,54,test,"Give me the band of the writer of the work, that is a song, of Amba Shepherd and person born on the birth date of Pavlo Khudzik and band of Shèna.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/writer> ?v5 . ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Shèna> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Amba_Shepherd> . ?result <http://dbpedia.org/ontology/birthDate> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. <http://dbpedia.org/resource/Pavlo_Khudzik> <http://dbpedia.org/ontology/birthDate> ?v3 . },"```sparql
# Step 1: Find Amba Shepherd's song and its writer
SELECT ?song ?writer WHERE {
  ?work dcterms:title ?title .
  ?work dbo:genre ""Song"" .
  ?work dbo:composer ?writer .
  ?writer foaf:name ""Amba Shepherd""@en .
}

# Step 2: Find the band of the writer
SELECT ?band WHERE {
  ?person dbo:member ?band .
  ?person foaf:name ?writerName .
  FILTER(?writerName = <writer_name_from_step_1>)
}

# Step 3: Find Pavlo Khudzik's birth date
SELECT ?birthDate WHERE {
  ?person dbo:birthDate ?birthDate .
  ?person foaf:name ""Pavlo Khudzik""@en .
}

# Step 4: Find a person born on the same date as Pavlo Khudzik
SELECT DISTINCT ?personName WHERE {
  ?person dbo:birthDate ?birthDate .
  ?person foaf:name ?personName .
  FILTER(?birthDate = <birth_date_from_step_3>)
}

# Step 5: Find Shèna's band
SELECT ?band WHERE {
  ?person dbo:member ?band .
  ?person foaf:name ""Shèna""@en .
}
```

Note: Replace `<writer_name_from_step_1>` and `<birth_date_from_step_3>` with the actual values obtained from the previous queries.",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
404,53,test,"Give me the child of the father of Ernest Augustus, Duke of Brunswick and spouse of the person born, that is a royalty, as the birth name of Princess Victoria Louise of Prussia and parent of Prince Ernest Augustus of Hanover (born 1914).","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/property/father> ?v1 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/parent> ?v1 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Prince_Ernest_Augustus_of_Hanover_(born_1914)> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/property/birthName> ?v3 . }","```sparql
SELECT ?childBirthName WHERE {
  ?father dbo:spouse ?mother .
  ?father foaf:name ""Ernst August I. (Braunschweig)""@en .
  ?father dbo:parent ?ernestAugustusDuke .
  ?ernestAugustusDuke foaf:name ""Ernest Augustus, Duke of Brunswick""@en .
  
  ?child dbo:spouse ?princeErnestAugustus1914 .
  ?princeErnestAugustus1914 foaf:name ""Prince Ernest Augustus of Hanover (born 1914)""@en .
  ?child dbo:parent ?mother .

  ?child foaf:name ?childBirthName .
  FILTER regex(?childBirthName, ""Victoria Louise"", ""i"")
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
404,55,test,"Give me the parent of the child, that is a royalty, of Ernest Augustus, Duke of Brunswick and spouse of the person born, that is a royalty, as Princess Victoria Louise of Prussia and child of the father of Ernest Augustus, Duke of Brunswick.","SELECT ?result WHERE { <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/property/father> ?v2 . ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?v3 <http://dbpedia.org/property/birthName> ""Princess Victoria Louise of Prussia""@en . ?result <http://dbpedia.org/ontology/child> ?v5 . <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/ontology/child> ?v5 . ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
SELECT ?parent WHERE {
  # Step 1: Identify Ernest Augustus, Duke of Brunswick
  ?ernestAugustus dbr:Ernest_Augustus,_Duke_of_Brunswick .
  
  # Step 2: Find his spouse, Princess Victoria Louise of Prussia
  ?spouse dbo:birthName ""Victoria Louise of Prussia""@en ;
          dbo:title dbr:Princess_Victoria_Louise_of_Prussia .

  # Step 3: Confirm the marriage
  ?ernestAugustus dbo:spouse ?spouse .
  
  # Step 4: Find their children and identify the royalty
  ?child dbo:parent ?ernestAugustus ;
         dbo:parent ?spouse ;
         (dbo:title|dbo:occupation) dbr:Royal_Titles .

  # Step 5: Determine the parent of this royal child
  ?parent dbo:child ?child .
}
```",6,8,7,2,3,3,3,71,0,0,1,0,0.0,0
994,61,test,"Give me the band member of the person born, that is a musical artist, as the persona of Don Dokken and associated musical artist of the band member, that is a band and a group and an organisation, of the band, that is an organisation, of Fredrik Thordendal.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Don_Dokken> <http://xmlns.com/foaf/0.1/givenName> ?v3 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v1 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Fredrik_Thordendal> . ?v0 <http://dbpedia.org/property/birthName> ?v3 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
# Step 1: Get Fredrik Thordendal's band (Meshuggah)
SELECT ?meshuggah WHERE {
  wd:Q123456 wdt:P106 wd:Q33999 . # Fredrik Thordendal is a member of Meshuggah
  wd:Q123456 wdt:P46 ?meshuggah .
}

# Step 2: Get members of Meshuggah
SELECT DISTINCT ?member WHERE {
  ?meshuggah wdt:P127* wd:Q123456 . # Meshuggah has Fredrik Thordendal as a member
  ?meshuggah wdt:P127 ?member .
}

# Step 3: Get Don Dokken's band (Dokken)
SELECT ?dokken WHERE {
  wd:Q789012 wdt:P106 wd:Q33999 . # Don Dokken is a member of Dokken
  wd:Q789012 wdt:P46 ?dokken .
}

# Step 4: Get members of Dokken
SELECT DISTINCT ?member WHERE {
  ?dokken wdt:P127* wd:Q789012 . # Dokken has Don Dokken as a member
  ?dokken wdt:P127 ?member .
}

# Step 5: Find any overlap or association between Meshuggah and Dokken members
SELECT DISTINCT ?commonMember WHERE {
  { ?meshuggah wdt:P127* wd:Q123456 . ?meshuggah wdt:P127 ?commonMember . }
  UNION
  { ?dokken wdt:P127* wd:Q789012 . ?dokken wdt:P127 ?commonMember . }
}
```",6,11,7,3,2,3,3,71,0,0,1,0,0.0,0
182,26,test,Give me the war of Jagath Dias and entity in the nationality of Tamara Kunanayakam and war of the author of 2019 Sri Lanka Easter bombings.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> ?v1 . <http://dbpedia.org/resource/Jagath_Dias> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/2019_Sri_Lanka_Easter_bombings> <http://dbpedia.org/property/author> ?v2 . <http://dbpedia.org/resource/Tamara_Kunanayakam> <http://dbpedia.org/ontology/nationality> ?v1 . },"```sparql
# Query for Jagath Dias related war
SELECT ?war WHERE {
  ?person foaf:name ""Jagath Dias""@en .
  ?person dbo:occupation dbo:MilitaryPerson .
  ?person dbo:participatedIn ?war .
}

UNION

# Query for Tamara Kunanayakam's nationality and related wars
SELECT ?war WHERE {
  ?person foaf:name ""Tamara Kunanayakam""@en .
  ?person dbo:nationality ?nationality .
  ?nationality rdfs:label ?countryLabel .
  FILTER (lang(?countryLabel) = 'en')
  ?war dbo:location ?location .
  ?location rdfs:label ?countryLabel .
}

UNION

# Query for author of work about 2019 Sri Lanka Easter bombings and related wars
SELECT ?war WHERE {
  ?work dcterms:title ""2019 Sri Lanka Easter bombings""@en .
  ?work dbo:author ?author .
  ?author foaf:name ?name .
  ?author dbo:occupation dbo:Writer .
  ?author dbo:participatedIn ?war .
}
```",5,5,6,2,3,2,3,28,0,0,1,0,0.0,0
404,62,test,"Give me the child of Ernest Augustus, Crown Prince of Hanover and parent of the child, that is a royalty, of the parent, that is a royalty, of Prince George William of Hanover and spouse of the person born, that is a royalty, as the birth name of Princess Victoria Louise of Prussia.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v6 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Prince_George_William_of_Hanover> <http://dbpedia.org/ontology/parent> ?v0 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ernest_Augustus,_Crown_Prince_of_Hanover> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/birthName> ?v4 . ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/ontology/child> ?v6 . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/property/birthName> ?v4 . }","```sparql
SELECT ?child WHERE {
  ?parent1 foaf:name ""Prince George William of Hanover""@en .
  ?parent1 dbo:spouse ?royaltyParent .
  ?royaltyParent rdf:type dbo:Monarch .

  ?ernestAugustus foaf:name ""Ernest Augustus, Crown Prince of Hanover""@en .
  ?ernestAugustus dbo:child ?princessVictoriaLouise .
  ?princessVictoriaLouise foaf:name ""Princess Victoria Louise of Prussia""@en .

  ?princessVictoriaLouise dbo:spouse ?dukeOfBrunswick .
  ?dukeOfBrunswick foaf:name ""Ernest Augustus, Duke of Brunswick""@en .

  ?dukeOfBrunswick dbo:child ?child .
  ?child rdf:type dbo:Monarch .
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
421,25,test,Give me the person born as Edin Dervišhalidović and native of the birthplace of Samir Bekrić and band member of the awardee of [[#Awards and nominations.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Samir_Bekrić> <http://dbpedia.org/ontology/birthPlace> ?v4 . ?v2 <http://dbpedia.org/property/awards> ""[[#Awards and nominations""@en . ?result <http://dbpedia.org/property/birthName> ""Edin Dervišhalidović""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?result <http://dbpedia.org/ontology/birthPlace> ?v4 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?birthPlace ?band WHERE {
  # Identify Dino Merlin (Edin Dervišhalidović)
  VALUES ?person { dbr:Dino_Merlin }
  
  # Check if his birthplace is Sarajevo
  ?person dbo:birthPlace dbr:Sarajevo .
  
  # Find bands he has been a member of
  ?band dbo:member ?person .
  
  # Check if the band has won any awards
  ?band dbo:award ?award .
}
```",5,5,6,2,3,2,3,28,0,0,1,0,0.0,0
378,56,test,"Give me the claim to fame of the commander in the war, that is a military conflict and a societal event and an event, of Thomas Trigge and war of Joaquín Blake and war of the person born as Carl Pontus Gahn.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Joaquín_Blake> <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/property/birthName> ""Carl Pontus Gahn""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/knownFor> ?result . ?v0 <http://dbpedia.org/ontology/commander> ?v1 . <http://dbpedia.org/resource/Thomas_Trigge> <http://dbpedia.org/ontology/battle> ?v0 . }","```sparql
SELECT ?event WHERE {
  ?trigge dbo:occupation ""military officer""@en .
  ?trigge foaf:name ""Thomas Trigge""@en .
  
  ?blake dbo:occupation ""military officer""@en .
  ?blake foaf:name ""Joaquín Blake y Jáuregui""@en .

  ?gahn foaf:name ""Carl Pontus Gahn""@en .
  ?gahn dbo:birthPlace ?place .
  ?gahn dbo:fieldOfStudy ""chemistry""@en .

  ?event dbo:participatedIn [
    rdf:type dbo:MilitaryConflict ;
    dbo:participant ?trigge, ?blake
  ] .
  
  FILTER EXISTS { ?event dbo:date ?date . }
}
```",6,9,7,3,3,3,3,71,0,0,2,0,0.0,0
994,52,test,"Give me the associated musical artist of the associated musical artist of the reference to Watchtower and associated musical artist of the band member, that is a band and a group and an organisation, of Meshuggah and band member of Don Dokken.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Meshuggah> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Don_Dokken> . ?v3 <http://xmlns.com/foaf/0.1/name> ""Watchtower""@en . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . }","```sparql
# Step 1: Find associated musical artist of Watchtower
SELECT ?artist WHERE {
  wd:Q123456 wdt:P175* wd:Q789012 . # Watchtower's associated artists
  ?artist wdt:P175 wd:Q789012 .
}

# Step 2: Find associated musical artist of that artist
SELECT ?secondArtist WHERE {
  ?firstArtist wdt:P175* ?artist .
  ?secondArtist wdt:P175 ?artist .
}

# Step 3: Identify Meshuggah band member who is also a band/group/organization
SELECT ?member WHERE {
  wd:Q987654 wdt:P127+ wd:Q123456 . # Meshuggah's members
  ?member wdt:P31 wd:Q4321 .         # Member is a band/group/organization
}

# Step 4: Find associated musical artist of that member
SELECT ?thirdArtist WHERE {
  ?member wdt:P175* ?artist .
  ?thirdArtist wdt:P175 ?artist .
}

# Step 5: Combine results to find the final answer
SELECT DISTINCT ?finalArtist WHERE {
  VALUES (?secondArtist ?thirdArtist) { 
    (SELECT ?secondArtist WHERE { ... }) # From step 2
    (SELECT ?thirdArtist WHERE { ... })  # From step 4
  }
  ?finalArtist wdt:P175 ?secondArtist .
  ?finalArtist wdt:P175 ?thirdArtist .
}
```

Note: The placeholders `wd:Q123456`, `wd:Q789012`, `wd:Q987654`, and `wd:Q4321` should be replaced with the actual DBpedia QIDs for Watchtower, its associated artist, Meshuggah, and the specific member who is also a band/group/organization.",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
747,42,test,Give me the person born on the birth date of Pavlo Khudzik and band of Amba Shepherd and band of the person born as Tracey Elizabeth McSween.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Pavlo_Khudzik> <http://dbpedia.org/ontology/birthDate> ?v2 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/birthDate> ?v2 . ?v1 <http://dbpedia.org/property/birthName> ""Tracey Elizabeth McSween""@en . <http://dbpedia.org/resource/Amba_Shepherd> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
# Step 1: Find Pavlo Khudzik's birth date
SELECT ?birthDate WHERE {
  dbpedia:Pavlo_Khudzik dbo:birthday ?birthDate .
}

# Step 2: Identify people born on Pavlo Khudzik's birth date
SELECT DISTINCT ?person WHERE {
  ?person dbo:birthday ?birthDate .
  FILTER(?birthDate = ""Pavlo Khudzik's Birth Date"") # Replace with actual date from step 1
}

# Step 3: Find Amba Shepherd's band
SELECT ?band WHERE {
  dbpedia:Amba_Shepherd dbo:associatedBand ?band .
}

# Step 4: Find Tracey Elizabeth McSween's birth date and her band
SELECT ?birthDate, ?band WHERE {
  dbpedia:Tracey_Elizabeth_McSween dbo:birthday ?birthDate ;
                                     dbo:associatedBand ?band .
}

# Step 5: Identify people born on Tracey Elizabeth McSween's birth date
SELECT DISTINCT ?person WHERE {
  ?person dbo:birthday ?birthDate .
  FILTER(?birthDate = ""Tracey Elizabeth McSween's Birth Date"") # Replace with actual date from step 4
}

# Step 6: Find the bands of these individuals
SELECT DISTINCT ?person, ?band WHERE {
  {
    ?person dbo:birthday ?birthDate .
    FILTER(?birthDate = ""Pavlo Khudzik's Birth Date"") # Replace with actual date from step 1
  }
  UNION
  {
    ?person dbo:birthday ?birthDate .
    FILTER(?birthDate = ""Tracey Elizabeth McSween's Birth Date"") # Replace with actual date from step 4
  }
  OPTIONAL { ?person dbo:associatedBand ?band . }
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
281,20,test,"Give me the entity in the birth place, that is a country, of Bob Heffron and war of Beauchamp Seymour, 1st Baron Alcester.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/place> ?v2 . <http://dbpedia.org/resource/Bob_Heffron> <http://dbpedia.org/ontology/birthPlace> ?v2 . <http://dbpedia.org/resource/Beauchamp_Seymour,_1st_Baron_Alcester> <http://dbpedia.org/ontology/battle> ?result . }","```sparql
SELECT DISTINCT ?bobHeffronBirthPlaceCountry ?beauchampSeymourBirthPlaceCountry WHERE {
  # Find Bob Heffron's birthplace and check if it is a country
  ?bobHeffron dbo:birthPlace ?bobHeffronBirthPlace .
  ?bobHeffron rdfs:label ""Bob Heffron""@en .

  OPTIONAL { 
    ?bobHeffronBirthPlace rdf:type dbo:Country .
    BIND(?bobHeffronBirthPlace AS ?bobHeffronBirthPlaceCountry)
  }

  # Find Beauchamp Seymour, 1st Baron Alcester's birthplace and check if it is a country
  ?beauchampSeymour dbo:birthPlace ?beauchampSeymourBirthPlace .
  ?beauchampSeymour rdfs:label ""Beauchamp Seymour, 1st Baron Alcester""@en .

  OPTIONAL { 
    ?beauchampSeymourBirthPlace rdf:type dbo:Country .
    BIND(?beauchampSeymourBirthPlace AS ?beauchampSeymourBirthPlaceCountry)
  }
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
747,43,test,"Give me the person born on 1985-04-29 and band of Shèna and band of the writer of the work, that is a song, of Amba Shepherd.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthDate> ""1985-04-29""^^<http://www.w3.org/2001/XMLSchema#date> . ?v0 <http://dbpedia.org/property/writer> ?v4 . ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Amba_Shepherd> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. <http://dbpedia.org/resource/Shèna> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
# Step 1: Find the person born on 1985-04-29
SELECT ?person WHERE {
  ?person dbo:birthday ""1985-04-29""^^xsd:date .
}

# Step 2: Find the band of Shèna
SELECT ?band WHERE {
  dbpedia:Shena dbo:member ?band .
}

# Step 3: Find the writer of the song by Amba Shepherd
SELECT ?writer WHERE {
  ?song dbo:lyricsBy ?writer ;
        dbo:artist dbpedia:Amba_Shepherd .
}

# Step 4: Find the band of this writer
SELECT ?band WHERE {
  ?writer dbo:member ?band .
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
959,27,test,"Give me the manager of the team of the manager, that is a sports manager, of 1998 Kashima Antlers season.",SELECT ?result WHERE { <http://dbpedia.org/resource/1998_Kashima_Antlers_season> <http://dbpedia.org/ontology/manager> ?v1 . ?v0 <http://dbpedia.org/ontology/manager> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v0 <http://dbpedia.org/ontology/manager> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?teamManager ?sportsManagerTeam ?sportsManagerTeamManager WHERE {
  # Step 1: Find the manager of the 1998 Kashima Antlers team
  ?kashimaAntlersSeason dbo:season ""1998"" .
  ?kashimaAntlersSeason dbo:manager ?teamManager .

  # Step 2: Check if this manager is a sports manager
  OPTIONAL {
    ?teamManager dbo:occupation dbr:Sports_manager .
  }

  # Step 3: Find the team managed by this sports manager and its manager
  OPTIONAL {
    ?sportsManagerTeam dbo:manager ?teamManager .
    ?sportsManagerTeam dbo:manager ?sportsManagerTeamManager .
  }
}
```",3,4,4,3,1,3,3,71,0,0,10,0,0.0,0
488,29,test,"Give me the death place of the father, that is a politician, of Yūki Hideyasu and administration of Emperor Go-Yōzei and birth place of Enomoto Takeaki.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/ontology/deathPlace> ?result . ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Emperor_Go-Yōzei> . <http://dbpedia.org/resource/Yūki_Hideyasu> <http://dbpedia.org/property/father> ?v3 . <http://dbpedia.org/resource/Enomoto_Takeaki> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?deathPlace ?birthPlace
WHERE {
  # Death place of Yūki Ujitomo
  OPTIONAL { 
    dbr:Yuki_Ujitomo dbo:deathPlace ?deathPlace .
  }

  # Birthplace of Enomoto Takeaki
  OPTIONAL { 
    dbr:Enomoto_Takeaki dbo:birthPlace ?birthPlace .
  }
}
```",4,5,5,2,3,3,3,71,1,1,0,0.5,1.0,0.6666666666666666
92,68,test,"Give me the band of the person born as Joseph Michael Furney and associated musical artist of the person born, that is an artist, as the actor of Return to Nuke 'Em High Volume 1 and band member of the reference, that is an artist, to the name of Nevermore (2006 film).","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?v7 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Nevermore_(2006_film)> <http://xmlns.com/foaf/0.1/name> ?v5 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v7 <http://dbpedia.org/property/birthName> ?v0 . <http://dbpedia.org/resource/Return_to_Nuke_'Em_High_Volume_1> <http://dbpedia.org/property/starring> ?v0 . ?result <http://dbpedia.org/ontology/bandMember> ?v3 . ?v4 <http://xmlns.com/foaf/0.1/name> ?v5 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v3 <http://dbpedia.org/property/birthName> ""Joseph Michael Furney""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band1 ?artist2 ?actor ?band2 WHERE {
  # Step 1: Identify Joseph Michael Furney and his band
  ?person a dbo:Person ;
          foaf:name ""Joseph Michael Furney"" .
  
  ?person dbo:musicalArtist ?band1 .

  # Step 2: Find the actor of ""Return to Nuke 'Em High Volume 1""
  ?film a dbo:Film ;
        foaf:name ""Return to Nuke 'Em High Volume 1"" .
  
  ?film dbo:actor ?actor .

  # Step 3: Determine if this actor is also a musician
  ?actor dbo:musicalArtist ?band2 .

  # Step 4: Link to Nevermore (2006 film)
  ?nevermoreFilm a dbo:Film ;
                 foaf:name ""Nevermore"" .
  
  ?nevermoreFilm dbo:reference ?artist2 .
  
  FILTER(?film != ?nevermoreFilm) # Ensure they are different films
}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
184,42,test,Give me the parent of the native of Budapest and child of Archduke Joseph August of Austria and parent of the child of Archduke Joseph Francis of Austria.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v2 . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Francis_of_Austria> . ?v2 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Budapest> . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_August_of_Austria> . ?result <http://dbpedia.org/ontology/child> ?v1 . },"```sparql
SELECT ?person WHERE {
  ?person dbo:birthPlace dbr:Budapest .
  ?person dbo:father dbr:Archduke_Joseph_August_of_Austria .
  ?child dbo:mother ?person .
  ?child dbo:father dbr:Archduke_Franz_Josef_I_of_Austria .
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
328,38,test,"Give me the commander in the force of Ferenc Szálasi and leader of the office, that is a government agency, of Joseph Stalin.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/leader> ?result . <http://dbpedia.org/resource/Joseph_Stalin> <http://dbpedia.org/property/office> ?v2 . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Ferenc_Szálasi> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?szalasiCommander ?stalinLeader WHERE {
  # Ferenc Szálasi's military commander
  OPTIONAL {
    ?szalasi dbr:Ferenc_Szálasi ;
             dbo:primeMinisterOf dbr:Hungary ;
             dbo:spouse ?commander .
    ?commander a dbo:MilitaryPerson ;
               rdfs:label ?szalasiCommander .
    FILTER (LANG(?szalasiCommander) = ""en"")
  }

  # Leader of an office under Joseph Stalin
  OPTIONAL {
    ?stalin dbr:Joseph_Stalin ;
            dbo:headOfState dbr:Soviet_Union ;
            dbo:spouse ?leader .
    ?leader a dbo:GovernmentOfficial ;
            rdfs:label ?stalinLeader .
    FILTER (LANG(?stalinLeader) = ""en"")
  }
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
801,46,test,"Give me the producer of the work, that is a musical work and a song and a work, of 50 Cent and professional in the alter ego of the true self of The Shadow.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://dbpedia.org/ontology/producer> ?result . ?result <http://dbpedia.org/property/occupation> ?v1 . ?v2 <http://dbpedia.org/property/alterEgo> ?v1 . ?v2 <http://xmlns.com/foaf/0.1/givenName> ""The Shadow""@en . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v4 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/50_Cent> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?song ?producer WHERE {
  ?song dbo:artist dbr:50_Cent ;
        dbo:genre dbr:Hip_hop_music .
  
  OPTIONAL { 
    ?song dbo:lyricContent ?content .
    FILTER(CONTAINS(LCASE(?content), ""the shadow""))
  }
  
  ?song dbo:producer ?producer .
}
```",5,8,6,3,2,3,3,71,15,26,12,0.36585365853658536,0.5555555555555556,0.4411764705882353
232,58,test,"Give me the actor of the claim to fame, that is a film and a military conflict, of Sean Pertwee and child of Jon Pertwee and native of the residence, that is a settlement and British, of the native, that is a politician and an office holder, of France.",SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/France> . <http://dbpedia.org/resource/Sean_Pertwee> <http://dbpedia.org/ontology/knownFor> ?v5 . ?v5 <http://dbpedia.org/ontology/starring> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/property/residence> ?v2 . <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  # Identify Sean Pertwee and his notable works
  dbr:Sean_Pertwee dbo:profession dbr:Actor .
  
  OPTIONAL { 
    dbr:Sean_Pertwee dbo:film dbr:?Film .
    dbr:Sean_Pertwee dbo:militaryConflict dbr:?MilitaryConflict .
  }
  
  # Identify Jon Pertwee and confirm Sean as his child
  dbr:Jon_Pertwee dbo:child dbr:Sean_Pertwee .

  # Find a French politician who resides in a British settlement
  ?politician dbo:nationality dbr:France ;
             dbo:residence ?settlement .
  
  FILTER (dbo:isPartOf(?settlement, dbr:United_Kingdom)) .

  # Use this information to identify the actor associated with Sean Pertwee's claim to fame
  OPTIONAL {
    ?film dbo:actor ?actor .
    ?militaryConflict dbo:actor ?actor .
  }
}
```",6,12,7,3,3,3,3,71,0,0,1,0,0.0,0
827,17,test,"Give me the child of Charles Alexander, Grand Duke of Saxe-Weimar-Eisenach and father of the child, that is a royalty, of the spouse, that is a royalty, of Princess Pauline of Saxe-Weimar-Eisenach.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Princess_Pauline_of_Saxe-Weimar-Eisenach> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Charles_Alexander,_Grand_Duke_of_Saxe-Weimar-Eisenach> <http://dbpedia.org/ontology/child> ?result . ?v3 <http://dbpedia.org/property/father> ?result . }","```sparql
SELECT DISTINCT ?royalChild ?parentName ?spouseName ?childOfSpouse WHERE {
  # Step 1: Identify children of Charles Alexander, Grand Duke of Saxe-Weimar-Eisenach
  VALUES (?charlesAlexander) { <http://dbpedia.org/resource/Charles_Alexander,_Grand_Duke_of_Saxe-Weimar-Eisenach> }
  
  ?royalChild dbo:childOf ?charlesAlexander .
  ?royalChild rdf:type schema:Person .

  # Step 2: Ensure the child is royalty
  OPTIONAL { ?royalChild rdf:type ?royaltyType . FILTER(STRSTARTS(STR(?royaltyType), ""http://dbpedia.org/ontology/Monarch"")) }

  # Get parent's name for clarity in results
  BIND(""Charles Alexander, Grand Duke of Saxe-Weimar-Eisenach"" AS ?parentName)

  # Step 3: Identify spouse(s) of the royal child
  ?royalChild dbo:spouse ?spouse .

  # Step 4: Ensure the spouse is royalty
  OPTIONAL { ?spouse rdf:type ?spouseRoyaltyType . FILTER(STRSTARTS(STR(?spouseRoyaltyType), ""http://dbpedia.org/ontology/Monarch"")) }

  # Get spouse's name for clarity in results
  ?spouse rdfs:label ?spouseName .

  # Step 5: Identify children of the royal spouse
  ?childOfSpouse dbo:parent ?spouse .
  
  # Filter out non-person types and ensure child is a person
  FILTER(STRSTARTS(STR(?childOfSpouse), ""http://dbpedia.org/resource/""))
}
ORDER BY ?royalChild
```",4,6,5,3,2,3,2,20,0,0,1,0,0.0,0
659,59,test,"Give me the commander in the force of the native, that is an office holder, of Kingdom of Ireland and commander in the war, that is an event and a military conflict, of the figure known, that is a military unit and an organisation, as 'Polish Horse'.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/commander> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Kingdom_of_Ireland> . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v0 <http://dbpedia.org/ontology/battle> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v5 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/property/nickname> ""'Polish Horse'""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  ?commander dbo:nationality dbr:Ireland .
  ?commander dbo:officeHolderOf dbr:Kingdom_of_Ireland .
  ?commander dbo:militaryConflict ?war .
  
  ?war a dbo:MilitaryConflict ;
      dbo:participatingMilitaryUnit dbr:Polish_Horse .

  FILTER EXISTS { ?commander dbo:role ""Commander"" }
}
```",6,11,7,3,2,3,3,71,0,0,71,0,0.0,0
16,63,test,Give me the professional in the profession of Satomi Ishihara and spouse of the person born as the birth name of Ted McGinley and person born as the birth name of Gigi Rice.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v2 . ?result <http://dbpedia.org/property/occupation> ?v6 . <http://dbpedia.org/resource/Gigi_Rice> <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Satomi_Ishihara> <http://dbpedia.org/property/occupation> ?v6 . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/property/birthName> ?v4 . ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?v3 <http://dbpedia.org/property/birthName> ?v4 . },"```sparql
# Step 1: Find Satomi Ishihara's profession
SELECT ?profession WHERE {
    dbpedia:Satomi_Ishihara dbo:occupation ?profession .
}

# Step 2: Find Ted McGinley's birth name
SELECT ?birthName WHERE {
    dbpedia:Ted_McGinley foaf:name ?birthName .
    FILTER(CONTAINS(LCASE(?birthName), ""ted mcginley""))
}

# Step 3: Find Gigi Rice's birth name
SELECT ?birthName WHERE {
    dbpedia:Gigi_Rice foaf:name ?birthName .
    FILTER(CONTAINS(LCASE(?birthName), ""gigi rice""))
}

# Step 4: Identify the spouse common to both Ted McGinley and Gigi Rice by their birth names
SELECT DISTINCT ?spouse WHERE {
    ?person foaf:name ?name1 .
    ?person dbo:spouse ?spouse .
    FILTER(CONTAINS(LCASE(?name1), ""ted mcginley""))
    
    ?person2 foaf:name ?name2 .
    ?person2 dbo:spouse ?spouse .
    FILTER(CONTAINS(LCASE(?name2), ""gigi rice""))
}

# Step 5: Find the profession of this spouse
SELECT ?profession WHERE {
    ?spouse dbo:occupation ?profession .
}
```",7,7,8,3,3,3,3,71,0,0,1,0,0.0,0
378,46,test,Give me the war of the person born as the birth name of Carl Pontus Gahn and war of the commander in Peninsular War.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Peninsular_War> <http://dbpedia.org/ontology/commander> ?v4 . <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/property/birthName> ?v2 . ?v4 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
# Query for Carl Pontus Gahn's associated war
SELECT ?war WHERE {
  ?person foaf:name ""Carl Pontus Gahn""@en .
  ?person dbo:birthName ?name .
  ?person dbo:nationality dbr:Sweden .
  ?person dbo:occupation dbr:Military_person .
  ?person dbo:participatedInWar ?war .
}

# Query for a notable commander in the Peninsular War and their associated war
SELECT ?commander ?otherWar WHERE {
  ?commander foaf:name ?name .
  ?commander dbo:nationality ?nationality .
  ?commander dbo:occupation dbr:Military_person .
  ?commander dbo:participatedInWar dbr:Peninsular_War .
  OPTIONAL { ?commander dbo:participatedInWar ?otherWar . }
}
```",5,5,6,3,2,3,3,71,0,0,2,0,0.0,0
356,20,test,"Give me the player in the successor of the predecessor, that is a sports team season and a soccer club season, of 2015 Sacramento Republic FC season and team of the native, that is a soccer player and a soccer manager, of the birth place, that is English and a settlement, of Gary Williams (footballer, born 1960).","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/manager> ?v5 . ?v2 <http://dbpedia.org/ontology/team> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v5 <http://dbpedia.org/ontology/birthPlace> ?v4 . ?v4 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v1 <http://dbpedia.org/ontology/successor> ?v2 . ?v1 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/2015_Sacramento_Republic_FC_season> . <http://dbpedia.org/resource/Gary_Williams_(footballer,_born_1960)> <http://dbpedia.org/ontology/birthPlace> ?v4 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?player WHERE {
  # Step 1: Identify the predecessor season of 2015 Sacramento Republic FC
  dbr:2015_Sacramento_Republic_FC_season dbo:predecessorSeason ?predecessorSeason .
  
  # Step 2: Find the successor of that predecessor
  ?predecessorSeason dbo:successorSeason ?successorSeason .

  # Step 3: Ensure it's a sports team season and a soccer club season
  ?successorSeason rdf:type dbo:SoccerClubSeason ;
                   dbo:sport dbr:Soccer .

  # Step 4: Identify Gary Williams' birthplace
  dbr:Gary_Williams_(footballer,_born_1960) dbo:birthPlace dbr:Wigan .

  # Step 5: Find the native team of Wigan
  dbr:Wigan_Athletic_F.C. dbo:location dbr:Wigan ;
                          dbo:teamMember ?nativePlayer .

  # Step 6: Determine a player who is both a soccer player and manager for Wigan Athletic FC
  ?nativePlayer rdf:type dbo:SoccerPlayer, dbo:SoccerManager ;
                dbo:currentClub dbr:Wigan_Athletic_F.C. .

  # Step 7: Identify the player from the 2015 USL Pro season linked to this person
  ?successorSeason dbo:teamMember ?linkedPlayer .
  
  FILTER(?nativePlayer = ?linkedPlayer)
}
```",6,12,7,3,2,3,2,20,0,0,1,0,0.0,0
645,17,test,Give me the entity in United Kingdom and alma mater of the child of the parent of Adela Pankhurst.,SELECT ?result WHERE { <http://dbpedia.org/resource/Adela_Pankhurst> <http://dbpedia.org/ontology/parent> ?v0 . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . ?v0 <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
SELECT DISTINCT ?entity WHERE {
  # Step 1: Identify Adela Pankhurst's parent(s)
  ?adela a dbo:Person ;
         foaf:name ""Adela Pankhurst""@en .
  
  ?parent dbo:child ?adela .

  # Step 2: Find the child of this parent (other than Adela)
  ?parent dbo:child ?sibling .
  FILTER(?sibling != ?adela)

  # Step 3: Identify alma mater of this sibling
  ?sibling dbo:almaMater ?university .

  # Step 4: Ensure the university is in the United Kingdom
  ?university dbo:location dbr:United_Kingdom .
  
  # Return the entity (university)
  BIND(?university AS ?entity)
}
```",4,4,5,3,2,3,2,20,0,0,1,0,0.0,0
696,17,test,Give me the landmark at elevation of the award of the commander in Battle of Chishui River and birth place of Tim Brennan.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/elevation> ?v3 . <http://dbpedia.org/resource/Tim_Brennan> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Battle_of_Chishui_River> <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://dbpedia.org/property/awards> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?landmark WHERE {
  # Find the commander of the Battle of Chishui River
  ?battle dbo:commander ?commander .
  FILTER(STRSTARTS(STR(?battle), ""Battle_of_Chishui_River""))

  # Find the award received by this commander
  ?award dbo:recipient ?commander ;
         rdfs:label ?awardLabel .
  FILTER(CONTAINS(LCASE(?awardLabel), ""commander""))

  # Get the location of the award (assuming it's a place)
  ?award dbo:location ?awardLocation .

  # Find Tim Brennan's birthplace
  dbr:Tim_Brennan dbo:birthPlace ?brennanBirthPlace .

  # Find a landmark at the same elevation as the award's location
  ?landmark dbo:elevation ?elevation .
  ?awardLocation dbo:elevation ?sameElevation .
  FILTER(?elevation = ?sameElevation)
}
```",4,4,5,3,2,3,2,20,0,0,1,0,0.0,0
184,54,test,"Give me the parent of Archduchess Ilona of Austria and child of the child of the parent, that is a royalty, of Archduke Ladislaus Philipp of Austria and parent of the native of Budapest.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/property/father> ?v5 . ?v3 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Budapest> . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Ilona_of_Austria> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> ?v3 . <http://dbpedia.org/resource/Archduke_Ladislaus_Philipp_of_Austria> <http://dbpedia.org/ontology/parent> ?v0 . },"```sparql
# Step 1: Find Archduchess Ilona's parent
SELECT ?parent WHERE {
    wd:Q123456 wdt:P40 ?parent .
}

# Step 2: Find the child of the child of the parent (that is a royalty)
SELECT ?royalChild WHERE {
    ?child wdt:P40 ?parent . # Parent from step 1
    ?grandchild wdt:P40 ?child .
    ?grandchild wdt:P31 wd:Q5 . # Assuming Q5 represents royalty
}

# Step 3: Find Archduke Ladislaus Philipp's parent
SELECT ?parent WHERE {
    wd:Q654321 wdt:P40 ?parent .
}

# Step 4: Find the child of the child of the parent (that is a royalty)
SELECT ?royalChild WHERE {
    ?child wdt:P40 ?parent . # Parent from step 3
    ?grandchild wdt:P40 ?child .
    ?grandchild wdt:P31 wd:Q5 . # Assuming Q5 represents royalty
}

# Step 5: Identify the native of Budapest
SELECT ?native WHERE {
    ?person wdt:P19 wd:Q1234 . # Assuming Q1234 is the DBpedia item for Budapest
}

# Step 6: Find the parent of the native of Budapest
SELECT ?parent WHERE {
    ?native wdt:P40 ?parent .
}

# Combine results to find common individual
SELECT DISTINCT ?commonIndividual WHERE {
    { 
        ?individual wdt:P31 wd:Q5 . # Must be royalty
        ?individual ?p1 ?child1 .
        ?child1 wdt:P40 ?parent1 .
        ?grandchild1 wdt:P40 ?child1 .
        
        ?individual ?p2 ?child2 .
        ?child2 wdt:P40 ?parent2 .
        ?grandchild2 wdt:P40 ?child2 .

        ?native wdt:P19 wd:Q1234 .
        ?native wdt:P40 ?parent3 .
        
        FILTER(?parent1 = ?parent2)
        FILTER(?grandchild1 = ?grandchild2)
        FILTER(?parent3 = ?parent1 || ?parent3 = ?parent2)
    }
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
767,63,test,"Give me the reference to the alter ego of Black Hood and alma mater of the administration of George K. Nash and entity in the administration, that is a settlement, of the writer of Where It's At (Dustin Lynch album).",SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v2 . <http://dbpedia.org/resource/Where_It's_At_(Dustin_Lynch_album)> <http://dbpedia.org/property/writer> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v6 <http://dbpedia.org/ontology/almaMater> ?result . ?v6 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/George_K._Nash> . ?v3 <http://dbpedia.org/property/leaderParty> ?v4 . <http://dbpedia.org/resource/Black_Hood> <http://dbpedia.org/property/alterEgo> ?v2 . ?result <http://dbpedia.org/ontology/state> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity WHERE {
  # Black Hood's alter ego is Jason Todd
  VALUES ?blackHoodAlterEgo { dbr:Jason_Todd }

  # Alma mater of George K. Nash
  ?nash dbo:almaMater dbr:Princeton_University .

  # Entity in the administration related to Dustin Lynch's album ""Where It's At""
  ?album dcterms:title ""Where It's At"" .
  ?album dbo:creator ?writer .
  ?writer dbo:residence ?settlement .

  # Find a common reference
  FILTER(?blackHoodAlterEgo = ?entity || ?nash = ?entity || ?settlement = ?entity)
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
54,53,test,"Give me the parent of Thado Minsaw of Prome and child of the father of the child of Thinkhaya of Pagan and predecessor of the child, that is an office holder and a royalty, of Thihapate of Mohnyin.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Thihapate_of_Mohnyin> . ?result <http://dbpedia.org/ontology/successor> ?v1 . ?v3 <http://dbpedia.org/property/father> ?v2 . <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
    # Step 1: Find Thado Minsaw of Prome's parent
    ?thadoMinsaw a dbo:Monarch ;
        dbo:country dbr:Myanmar ;
        dbo:spouse ?spouse .
    
    OPTIONAL { ?spouse dbo:child ?child . }
    FILTER(?child = dbr:Thado_Minsaw_of_Prome)

    # Step 2: Find Thinkhaya of Pagan's child and predecessor
    ?thinkhaya a dbo:Monarch ;
        dbo:country dbr:Myanmar .
    
    OPTIONAL { ?thinkhaya dbo:child ?thinkhayaChild . }
    OPTIONAL { ?thinkhayaChild dbo:predecessor ?predecessor . }

    # Step 3: Find Thihapate of Mohnyin's child who is an office holder and royalty
    ?thihapate a dbo:Monarch ;
        dbo:country dbr:Myanmar .
    
    OPTIONAL { ?thihapate dbo:child ?thihapateChild . }
    FILTER(?thihapateChild a (dbo:OfficeHolder|dbo:Royalty))

    # Combine the conditions
    VALUES ?parent {
        ?spouse
    }
    FILTER(?predecessor = ?thinkhayaChild)
    FILTER(?thihapateChild = ?predecessor)
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
161,58,test,"Give me the commander in the force, that is an event, of the figure known as El Director and military force of the force, that is a societal event and a military conflict, of Francisco Largo Caballero and military force of Rif War.","SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v5 . ?v2 <http://dbpedia.org/ontology/commander> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://xmlns.com/foaf/0.1/nick> ""El Director""@en . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Rif_War> . ?v5 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commander WHERE {
  # Francisco Largo Caballero's involvement in the Spanish Civil War
  OPTIONAL {
    ?event1 a dbo:MilitaryConflict ;
            dbo:participatingMilitaryForce dbr:Spanish_Civil_War ;
            dbo:commander ?commander .
    ?person dbr:Francisco_Largo_Caballero ;
            dbo:role ?role .
    FILTER(?role = ""Commander"" || ?role = ""Leader"")
  }

  # Francisco Largo Caballero's involvement in the Rif War
  OPTIONAL {
    ?event2 a dbo:MilitaryConflict ;
            dbo:participatingMilitaryForce dbr:Rif_War ;
            dbo:commander ?commander .
    ?person1 dbr:Francisco_Largo_Caballero ;
             dbo:role ?role1 .
    FILTER(?role1 = ""Commander"")
  }
}
```",6,9,7,3,3,3,3,71,0,0,11,0,0.0,0
9,43,test,"Give me the alma mater of John Alderdice, Baron Alderdice and alma mater of the awardee of the reference, that is an award, to Royal Medals and figure known as QUB.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v4 <http://dbpedia.org/ontology/almaMater> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Royal Medals""@en . ?v4 <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/John_Alderdice,_Baron_Alderdice> <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://dbpedia.org/property/nickname> ""QUB""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?almaMaterJohnAlderdice ?awardee ?almaMaterAwardee WHERE {
  # Alma mater of John Alderdice, Baron Alderdice
  dbr:John_Alderdice dbo:almaMater ?almaMaterJohnAlderdice .

  # Find an award related to Royal Medals and QUB
  ?award dbo:awardee ?awardee .
  FILTER EXISTS { 
    ?award dbo:recipient ?recipient . 
    ?recipient dbo:almaMater dbr:Queen's_University_Belfast .
  }
  
  # Ensure the award is related to Royal Medals
  ?award rdfs:label ?awardLabel .
  FILTER regex(?awardLabel, ""Royal Medal"", ""i"") .

  # Alma mater of the awardee
  ?awardee dbo:almaMater ?almaMaterAwardee .
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
645,19,test,"Give me the entity in the residence, that is a country, of James Wilkes Maurice and alma mater of the child of the parent of Adela Pankhurst.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v4 <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://dbpedia.org/ontology/country> ?v2 . <http://dbpedia.org/resource/James_Wilkes_Maurice> <http://dbpedia.org/property/residence> ?v2 . <http://dbpedia.org/resource/Adela_Pankhurst> <http://dbpedia.org/ontology/parent> ?v0 . },"```sparql
# Step 1: Find Adela Pankhurst's parent
SELECT ?parent WHERE {
  wd:Q123456 wdt:P40 ?parent .
}

# Step 2: Identify the sibling of Adela Pankhurst
SELECT DISTINCT ?sibling WHERE {
  ?parent wdt:P40 wd:Q123456 ;
          wdt:P40 ?sibling .
  FILTER(?sibling != wd:Q123456)
}

# Step 3: Find the alma mater of this sibling
SELECT DISTINCT ?almaMater WHERE {
  ?sibling wdt:P69 ?almaMater .
}

# Step 4: Identify James Wilkes Maurice's residence country
SELECT DISTINCT ?residenceCountry WHERE {
  wd:Q654321 wdt:P19 ?location .
  ?location wdt:P17 ?residenceCountry .
}

# Step 5: Find the entity in that country matching the alma mater
SELECT DISTINCT ?entity WHERE {
  ?almaMater wdt:P131* ?location .
  ?location wdt:P17 ?residenceCountry .
}
```

Note: Replace `wd:Q123456` with Adela Pankhurst's DBpedia QID and `wd:Q654321` with James Wilkes Maurice's DBpedia QID. The queries assume that the relationships are directly available in DBpedia.",5,6,6,3,2,3,2,20,0,0,1,0,0.0,0
617,20,test,Give me the spouse of the child of Antiochus III the Great and child of Antiochus III the Great.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Antiochus_III_the_Great> <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Antiochus_III_the_Great> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
  ?child dbo:parent dbr:Antiochus_III_the_Great .
  ?child dbo:spouse ?spouse .
}
```",3,3,4,2,2,3,3,71,4,1,0,0.8,1.0,0.888888888888889
547,29,test,Give me the resting place of Alan Cunningham and resting place of the actor of Enemy at the Door and resting place of James Burton (Egyptologist).,SELECT ?result WHERE { <http://dbpedia.org/resource/Enemy_at_the_Door> <http://dbpedia.org/property/starring> ?v3 . ?v3 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/James_Burton_(Egyptologist)> <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Alan_Cunningham> <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
# Query for Alan Cunningham's resting place
SELECT ?restingPlace WHERE {
  ?person dbo:birthName ""Alan Cunningham""@en .
  ?person dbo:deathPlace ?restingPlace .
}

UNION

# Query for the actor of ""Enemy at the Door""
SELECT ?actorRestingPlace WHERE {
  ?film dbo:title ""Enemy at the Door""@en .
  ?film dbo:starring ?actor .
  ?actor dbo:birthName ?actorName .
  FILTER EXISTS { ?actor foaf:name ?actorName } # Assuming a name filter if needed
  ?actor dbo:deathPlace ?actorRestingPlace .
}

UNION

# Query for James Burton (Egyptologist)'s resting place
SELECT ?burialSite WHERE {
  ?person dbo:birthName ""James Burton""@en .
  ?person dbo:occupation ""Archaeologist""@en .
  ?person dbo:deathPlace ?burialSite .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
994,50,test,"Give me the associated musical artist of the band member, that is a band and a group and an organisation, of the band, that is an organisation, of Fredrik Thordendal and band member of the person born, that is a musical artist, as Donald Maynard Dokken.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v0 <http://dbpedia.org/property/birthName> ""Donald Maynard Dokken""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Fredrik_Thordendal> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . }","```sparql
# Step 1: Find Donald Maynard Dokken's birth information
SELECT ?dokken WHERE {
    ?dokken dbo:birthName ""Donald Maynard Dokken"" .
}

# Step 2: Identify the band associated with Donald Maynard Dokken
SELECT ?band WHERE {
    ?band dbo:member ?dokken .
    ?band a dbo:Band ;
          a dbo:Organization ;
          a dbo:MusicalGroup .
}

# Step 3: Find Fredrik Thordendal as a member of the identified band
SELECT ?thordendal WHERE {
    ?thordendal rdfs:label ""Fredrik Thordendal""@en .
    ?band dbo:member ?thordendal .
}

# Step 4: Identify the band associated with Fredrik Thordendal
SELECT ?meshuggah WHERE {
    ?meshuggah dbo:member ?thordendal .
    ?meshuggah a dbo:Band ;
               a dbo:Organization ;
               a dbo:MusicalGroup .
}

# Step 5: Find the musical artist associated with Meshuggah
SELECT ?artist WHERE {
    ?meshuggah dbo:member ?artist .
    ?artist a dbo:MusicalArtist .
}
```",5,10,6,3,2,3,3,71,0,0,1,0,0.0,0
488,20,test,"Give me the birth place of Enomoto Takeaki and death place of the father, that is a politician, of Yūki Hideyasu.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/deathPlace> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Enomoto_Takeaki> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Yūki_Hideyasu> <http://dbpedia.org/property/father> ?v2 . },"```sparql
SELECT ?birthPlace WHERE {
  wd:Q123456 rdfs:label ""Enomoto Takeaki""@en .
  wd:Q123456 dbo:birthPlace ?birthPlace .
}

UNION

SELECT ?deathPlace WHERE {
  ?father a dbo:Politician ;
          foaf:parent wd:Q654321 ; # Assuming Yūki Hideyasu's identifier is Q654321
          dbo:deathPlace ?deathPlace .
}
```

Note: The identifiers `wd:Q123456` for Enomoto Takeaki and `wd:Q654321` for Yūki Hideyasu are placeholders. You would need to replace these with the correct DBpedia resource identifiers.",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
392,26,test,"Give me the entity in the region, that is a country, of Central European Time and province of the residence, that is a settlement and Italian, of Sebastiano Bianchetti and region of Central European Time.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Sebastiano_Bianchetti> <http://dbpedia.org/property/residence> ?v2 . ?v1 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://dbpedia.org/ontology/province> ?result . ?result <http://dbpedia.org/ontology/country> ?v1 . ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Central_European_Time> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?country WHERE {
  # Find Sebastiano Bianchetti's residence
  ?person dbo:nationality dbr:Italy .
  ?person foaf:name ""Sebastiano Bianchetti"" .
  ?person dbo:residence ?settlement .

  # Ensure the settlement is in Italy
  ?settlement dbo:country dbr:Italy .

  # Find the province of the settlement
  ?settlement dbo:administrativeRegion ?province .

  # Find countries in Central European Time zone
  ?country dbo:timeZone dbr:Central_European_Time .

  # Match the country to the province's region
  ?province dbo:partOf ?region .
  ?region dbo:timeZone dbr:Central_European_Time .

  FILTER(?country != dbr:Italy) # Exclude Italy itself if it matches
}
```",5,8,6,2,3,2,3,28,0,0,1,0,0.0,0
994,57,test,"Give me the associated musical artist of S.A. Slayer and associated musical artist of the band member, that is a band and a group and an organisation, of the band, that is an organisation, of Fredrik Thordendal and band member of the person born, that is a musical artist, as Donald Maynard Dokken.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ""Donald Maynard Dokken""@en . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/S.A._Slayer> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Fredrik_Thordendal> . }","```sparql
# Step 1: Identify S.A. Slayer and their associated musical artists
SELECT ?sASlayer ?associatedArtist WHERE {
  ?sASlayer dbo:wikiPageRedirects db:S.A.Slayer ;
            dbo:genre ?genre .
  OPTIONAL { ?sASlayer dbo:member ?bandMember . }
  OPTIONAL { ?bandMember dbo:associatedBand ?associatedArtist . }
}

# Step 2: Find band members of S.A. Slayer who are also bands or organizations
SELECT DISTINCT ?bandMember WHERE {
  ?sASlayer dbo:member ?bandMember .
  FILTER EXISTS { ?bandMember a dbo:MusicalGroup } .
  OPTIONAL { ?bandMember dbo:organization ?org . }
}

# Step 3: Identify Fredrik Thordendal's organization
SELECT ?thordendalOrg WHERE {
  db:Fredrik_Thordendal dbo:member ?band ;
                        dbo:associatedBand ?thordendalOrg .
  FILTER EXISTS { ?thordendalOrg a dbo:Organization }
}

# Step 4: Determine Don Dokken's band members
SELECT DISTINCT ?dokkenBandMember WHERE {
  db:Don_Dokken dbo:member ?dokkenBand ;
                dbo:associatedBand ?band .
  OPTIONAL { ?band dbo:member ?dokkenBandMember . }
}

# Step 5: Retrieve the associated musical artist for the identified band member
SELECT DISTINCT ?finalArtist WHERE {
  ?dokkenBandMember dbo:associatedBand ?finalArtist .
}
```",6,11,7,3,3,3,3,71,0,0,1,0,0.0,0
838,17,test,"Give me the band member of the band, that is a group, of the reference, that is a group and an organisation, to YU Grupa and band of Raša Đelmaš.","SELECT ?result WHERE { <http://dbpedia.org/resource/Raša_Đelmaš> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v0 <http://xmlns.com/foaf/0.1/name> ""YU Grupa""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandMember WHERE {
  # Find Raša Đelmaš's association with YU Grupa
  ?yuGrupa dbo:member dbr:Raša_Đelmaš .
  
  # Find the band Raša Đelmaš is associated with
  ?rašaBand dbo:member dbr:Raša_Đelmaš .

  # Ensure YU Grupa and the other band are distinct entities
  FILTER(?yuGrupa != ?rašaBand)

  # Find common members between these two bands
  ?yuGrupa dbo:member ?bandMember .
  ?rašaBand dbo:member ?bandMember .
}
```",4,7,5,3,2,3,2,20,0,0,4,0,0.0,0
994,27,test,"Give me the band member of the person born, that is a musical artist, as the persona of Don Dokken.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Don_Dokken> <http://xmlns.com/foaf/0.1/givenName> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?member WHERE {
  ?band a dbo:Band ;
        dbo:leadVocalist dbr:Don_Dokken .
  
  ?bandMember dbo:memberOf ?band ;
              dbo:name ?member .
}
```",3,4,4,3,1,3,3,71,0,0,2,0,0.0,0
281,54,test,"Give me the war of the awardee of Knight Grand Cross of the Order of the Bath and war of New Zealand Army and entity in the birth place, that is a country, of the leader, that is a politician, of 1962 New South Wales state election.",SELECT ?result WHERE { <http://dbpedia.org/resource/New_Zealand_Army> <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/ontology/birthPlace> ?v5 . ?result <http://dbpedia.org/ontology/place> ?v5 . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_the_Bath> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/1962_New_South_Wales_state_election> <http://dbpedia.org/property/leader> ?v0 . ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
# Step 1: Find individuals awarded Knight Grand Cross of the Order of the Bath
SELECT ?person WHERE {
  ?person dbo:award dbpedia:Knight_Grand_Cross_of_the_Order_of_the_Bath .
}

# Step 2: Filter those involved in wars with New Zealand Army
SELECT DISTINCT ?person WHERE {
  ?person dbo:award dbpedia:Knight_Grand_Cross_of_the_Order_of_the_Bath .
  ?war dbo:participatingMilitaryUnit ?unit .
  ?unit rdfs:label ""New Zealand Army""@en .
}

# Step 3: Identify the leader of the 1962 NSW election
SELECT DISTINCT ?leader WHERE {
  ?election dbo:winner ?leader .
  ?election dbo:date ?date .
  FILTER (YEAR(?date) = 1962 && STRSTARTS(STR(?election), ""dbpedia:New_South_Wales_state_election,_""))
}

# Step 4: Find the birthplace country of this leader
SELECT DISTINCT ?country WHERE {
  ?leader dbo:birthPlace ?location .
  ?location dbo:country ?country .
}

# Step 5: Connect the war to this country
SELECT DISTINCT ?war ?country WHERE {
  ?person dbo:award dbpedia:Knight_Grand_Cross_of_the_Order_of_the_Bath .
  ?war dbo:participatingMilitaryUnit ?unit .
  ?unit rdfs:label ""New Zealand Army""@en .
  ?leader dbo:birthPlace ?location .
  ?location dbo:country ?country .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
701,26,test,Give me the parent of the child of the child of Seti I.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://dbpedia.org/property/father> ?v1 . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seti_I> . },"```sparql
SELECT ?grandparent WHERE {
  ?setiI dbo:wikiPageRedirects db:Q12345 . # Assuming Q12345 is the DBpedia ID for Seti I
  ?child1 dbo:childOf ?setiI .
  ?child2 dbo:childOf ?child1 .
  ?grandparent dbo:parentOf ?child2 .
}
```

Note: The exact property names like `dbo:child`, `dbo:parentOf`, and the DBpedia ID for Seti I (`Q12345` in this example) need to be verified against the actual DBpedia schema, as they might differ.",3,3,4,3,1,3,3,71,0,0,2,0,0.0,0
547,54,test,Give me the resting place of the child of James Burton (property developer) and resting place of the actor of the show with Emily Richard and resting place of Alan Cunningham.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/James_Burton_(property_developer)> <http://dbpedia.org/ontology/child> ?v3 . <http://dbpedia.org/resource/Alan_Cunningham> <http://dbpedia.org/ontology/restingPlace> ?result . ?v0 <http://dbpedia.org/property/starring> ?v5 . ?v0 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emily_Richard> . ?v5 <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
# Query for the child of James Burton (property developer)
SELECT ?child ?restingPlace WHERE {
  ?james a dbo:Person ;
         foaf:name ""James Burton"" ;
         dbo:spouse ?spouse .
  ?child dbo:parent ?james ;
         dbo:deathPlace ?restingPlace .
}

UNION

# Query for the actor from a show with Emily Richard
SELECT ?actor ?show ?restingPlace WHERE {
  ?show dbo:castMember ?emily ;
        dbo:castMember ?actor .
  ?emily foaf:name ""Emily Richard"" .
  ?actor dbo:deathPlace ?restingPlace .
}

UNION

# Query for Alan Cunningham's resting place
SELECT ?alan ?restingPlace WHERE {
  ?alan a dbo:Person ;
         foaf:name ""Alan Cunningham"" ;
         dbo:deathPlace ?restingPlace .
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
294,22,test,"Give me the resting place of the awardee, that is a politician, of Distinguished Service Medal (U.S. Army) and resting place of the architect of P. D. Houston Jr. House.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Distinguished_Service_Medal_(U.S._Army)> . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/P._D._Houston_Jr._House> <http://dbpedia.org/ontology/architect> ?v3 . ?v3 <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
# Query to find the resting place of a politician who received the Distinguished Service Medal (U.S. Army)
SELECT ?politician ?restingPlace WHERE {
  ?politician dbo:award dbpedia:Distinguished_Service_Medal_(United_States_Army) .
  ?politician rdf:type dbo:Politician .
  OPTIONAL { ?politician dbo:deathPlace ?burialPlace . }
  BIND(COALESCE(?burialPlace, ""Unknown"") AS ?restingPlace)
}

UNION

# Query to find the resting place of the architect of P.D. Houston Jr. House
SELECT ?architect ?restingPlace WHERE {
  ?house dbo:architect ?architect .
  ?house rdfs:label ""P.D. Houston Jr. House""@en .
  OPTIONAL { ?architect dbo:deathPlace ?burialPlace . }
  BIND(COALESCE(?burialPlace, ""Unknown"") AS ?restingPlace)
}
```",4,5,5,2,2,2,3,28,0,0,1,0,0.0,0
232,47,test,"Give me the actor of the claim to fame, that is a film and a military conflict, of the professional in Actor, narrator and producer and child of the person born as John Devon Roland Pertwee.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/starring> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/ontology/knownFor> ?v4 . ?v0 <http://dbpedia.org/property/occupation> ""Actor, narrator and producer""@en . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v2 <http://dbpedia.org/ontology/child> ?result . ?v2 <http://dbpedia.org/property/birthName> ""John Devon Roland Pertwee""@en . }","```sparql
SELECT ?actor WHERE {
  # Identify John Pertwee and his child
  ?johnPertwee dbo:birthName ""John Devon Roland Pertwee""@en .
  ?child dbo:parent ?johnPertwee ;
         rdf:type dbo:Actor .

  # Find the film related to a military conflict
  ?film dbo:starring ?actor ;
        dbo:genre ?genre ;
        rdfs:label ?filmLabel .

  FILTER(CONTAINS(LCASE(?filmLabel), ""war"") || CONTAINS(LCASE(?genre), ""war""))

  # Ensure the actor is associated with the child's claim to fame
  ?child dbo:claimToFame ?film .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
161,29,test,"Give me the commander in Biscay Campaign and military force of Rif War and military force of the force, that is a societal event and a military conflict, of Francisco Largo Caballero.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Rif_War> . ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Biscay_Campaign> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commanderBiscay ?rifWarForce ?caballeroForce WHERE {
  # Commander in Biscay Campaign
  ?campaign dbo:partOf dbr:Spanish_Civil_War ;
            dbo:commander ?commanderBiscay .
  
  FILTER regex(str(?campaign), ""Biscay Campaign"", ""i"")

  # Military force of Rif War
  ?rifWar dbo:participatedInMilitaryConflicts ?rifWarForce .

  FILTER regex(str(?rifWar), ""Rif War"", ""i"")

  # Francisco Largo Caballero's military force during the Spanish Civil War
  dbr:Francisco_Largo_Caballero dbo:militaryConflict ?conflict .
  ?conflict dbo:participatingMilitaryUnit ?caballeroForce .

  FILTER regex(str(?conflict), ""Spanish Civil War"", ""i"")
}
```",4,6,5,2,3,3,3,71,0,0,1,0,0.0,0
16,47,test,Give me the professional in the profession of the actor of Unnatural (TV series) and spouse of the person born as Ted Martin McGinley.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ""Ted Martin McGinley""@en . <http://dbpedia.org/resource/Unnatural_(TV_series)> <http://dbpedia.org/property/starring> ?v0 . ?v0 <http://dbpedia.org/property/occupation> ?v4 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/occupation> ?v4 . }","```sparql
# Step 1: Get the actor of ""Unnatural"" (TV series)
SELECT ?actor WHERE {
    ?series dcterms:title ""Unnatural""@en .
    ?series dbo:starring ?actor .
}

# Step 2: Get the profession of this actor
SELECT DISTINCT ?profession WHERE {
    ?actor dbo:occupation ?profession .
}

# Step 3: Find Ted Martin McGinley's birth name entry
SELECT ?person WHERE {
    ?person foaf:name ""Ted Martin McGinley""@en .
}

# Step 4: Identify his spouse
SELECT ?spouse WHERE {
    ?person dbo:spouse ?spouse .
}

# Step 5: Match the spouse's profession with that of the actor from step 2
SELECT DISTINCT ?matchedProfession WHERE {
    ?actor dbo:occupation ?profession .
    ?person foaf:name ""Ted Martin McGinley""@en .
    ?person dbo:spouse ?spouse .
    ?spouse dbo:occupation ?matchedProfession .
    FILTER(?matchedProfession = ?profession)
}
```",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
427,24,test,Give me the party of Romano Prodi and party of the father of Lamberto Andreotti.,SELECT ?result WHERE { <http://dbpedia.org/resource/Lamberto_Andreotti> <http://dbpedia.org/property/father> ?v2 . <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/ontology/party> ?result . ?v2 <http://dbpedia.org/ontology/party> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?prodiPartyLabel ?andreottiFatherPartyLabel WHERE {
  # Romano Prodi's party
  dbr:Romano_Prodi dbo:party ?prodiParty .
  ?prodiParty rdfs:label ?prodiPartyLabel .

  # Lamberto Andreotti's father (Giuseppe Andreotti) and his party
  dbr:Lamberto_Andreotti dbo:father dbr:Giuseppe_Andreotti .
  dbr:Giuseppe_Andreotti dbo:party ?andreottiFatherParty .
  ?andreottiFatherParty rdfs:label ?andreottiFatherPartyLabel .

  # Filter to ensure labels are in English
  FILTER (lang(?prodiPartyLabel) = 'en')
  FILTER (lang(?andreottiFatherPartyLabel) = 'en')
}
```",3,3,4,2,2,3,3,71,0,0,3,0,0.0,0
801,45,test,"Give me the associated musical artist of the writer, that is a musical artist and an artist, of the album, that is a musical work and a work, of What U See Is What U Get and professional in  and producer of Westside Story (song).","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Westside_Story_(song)> <http://dbpedia.org/ontology/producer> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/What_U_See_Is_What_U_Get> <http://dbpedia.org/ontology/album> ?v0 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/writer> ?v1 . ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
# Step 1: Find the album and its artists
SELECT ?album ?artist WHERE {
  ?album rdf:type dbo:MusicalAlbum ;
         rdfs:label ""What U See Is What U Get""@en .
  ?album dbo:musicArtist ?artist .
}

# Step 2: Identify which artist is also a writer for that album
SELECT DISTINCT ?writer WHERE {
  ?album rdf:type dbo:MusicalAlbum ;
         rdfs:label ""What U See Is What U Get""@en .
  ?album dbo:musicArtist ?writer .
  ?album dbo:lyricist ?writer .
}

# Step 3: Check if this writer has produced ""Westside Story (song)""
SELECT DISTINCT ?producer WHERE {
  ?producer rdf:type dbo:MusicalArtist ;
            rdfs:label ?name .
  ?producer foaf:name ?name .
  ?work dbo:title ""Westside Story""@en ;
        dbo:producer ?producer .
}

# Step 4: Find the associated musical artist of this writer
SELECT DISTINCT ?associatedArtist WHERE {
  ?writer rdf:type dbo:MusicalArtist ;
          rdfs:label ?name .
  ?album rdf:type dbo:MusicalAlbum ;
         rdfs:label ""What U See Is What U Get""@en .
  ?album dbo:musicArtist ?writer .
  ?album dbo:lyricist ?writer .
  ?work dbo:title ""Westside Story""@en ;
        dbo:producer ?writer .
  ?associatedArtist rdf:type dbo:MusicalArtist ;
                    rdfs:label ?artistName .
}
```",5,9,6,3,3,3,3,71,0,0,1,0,0.0,0
747,62,test,"Give me the person born on the birth date of the person decedent, that is an athlete and a soccer player, at Zolotonosha and band of the writer of the work, that is a song, of Amba Shepherd and band of Shèna.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Shèna> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v4 <http://dbpedia.org/ontology/birthDate> ?v3 . ?v4 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Zolotonosha> . ?v6 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Amba_Shepherd> . ?result <http://dbpedia.org/ontology/birthDate> ?v3 . ?v0 <http://dbpedia.org/property/writer> ?v6 . },"```sparql
# Step 1: Find a song by Amba Shepherd
SELECT ?song WHERE {
  ?song dbo:composer dbr:Amba_Shepherd .
}

# Step 2: Find Shèna's band
SELECT ?band WHERE {
  ?band dbo:member dbr:Shèna .
}

# Step 3: Find an athlete and soccer player born in Zolotonosha
SELECT ?person ?birthDate WHERE {
  ?person dbo:nationality dbr:Ukraine ;
          dbo:sport dbr:Soccer ;
          dbo:birthPlace dbr:Zolotonosha ;
          dbo:birthDate ?birthDate .
}

# Step 4: Find another athlete and soccer player born on the same date
SELECT DISTINCT ?otherPerson WHERE {
  ?person dbo:nationality dbr:Ukraine ;
          dbo:sport dbr:Soccer ;
          dbo:birthPlace dbr:Zolotonosha ;
          dbo:birthDate ?birthDate .
  
  ?otherPerson dbo:nationality ?nationality ;
               dbo:sport dbr:Soccer ;
               dbo:birthDate ?birthDate .
  FILTER(?person != ?otherPerson)
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
328,45,test,"Give me the commander in Eastern Front (World War II) and awardee of Order of Suvorov and leader of the office, that is a government agency, of the leader, that is an office holder and a politician, of Gustav Jonson.",SELECT ?result WHERE { <http://dbpedia.org/resource/Gustav_Jonson> <http://dbpedia.org/property/leader> ?v0 . ?v1 <http://dbpedia.org/ontology/leader> ?result . ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Order_of_Suvorov> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/office> ?v1 . <http://dbpedia.org/resource/Eastern_Front_(World_War_II)> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
# Step 1: Find Gustav Jonson's leadership role and the associated government agency
SELECT ?office ?agency WHERE {
  ?gustavJonson dbo:occupation dbr:Politician .
  ?gustavJonson foaf:name ""Gustav Jonson"" .
  ?gustavJonson dbo:holdsOffice ?office .
  ?office dbo:headOrganization ?agency .
}

# Step 2: Find WWII Eastern Front commanders who were awarded the Order of Suvorov
SELECT DISTINCT ?commander WHERE {
  ?commander dbo:rank dbr:Military_rank_of_a_commander_on_the_Eastern_Front .
  ?commander dbo:awardsReceived dbr:Order_of_Suvorov .
}

# Step 3: Cross-reference to find a match (assuming the same person can be found in both queries)
SELECT DISTINCT ?commonPerson WHERE {
  # Assuming we have results from previous steps, we need to join them
  ?gustavJonson dbo:occupation dbr:Politician .
  ?gustavJonson foaf:name ""Gustav Jonson"" .
  ?gustavJonson dbo:holdsOffice ?office .
  ?office dbo:headOrganization ?agency .

  ?commander dbo:rank dbr:Military_rank_of_a_commander_on_the_Eastern_Front .
  ?commander dbo:awardsReceived dbr:Order_of_Suvorov .
  
  # Assuming a common person can be identified by their name or another unique identifier
  FILTER(?gustavJonson = ?commander)
}
```",5,8,6,3,3,3,3,71,0,0,1,0,0.0,0
492,36,test,"Give me the person decedent at the capital, that is a settlement, of the country of Khemis Miliana District and person decedent at French Algeria.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . ?v0 <http://dbpedia.org/ontology/capital> ?v1 . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/French_Algeria> . <http://dbpedia.org/resource/Khemis_Miliana_District> <http://dbpedia.org/ontology/country> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person ?deathPlace1 ?deathPlace2 WHERE {
  # Find persons who died in Khemis Miliana
  ?person dbo:deathPlace ?deathPlace1 .
  FILTER (
    ?deathPlace1 = dbr:Khemis_Miliana OR 
    ?deathPlace1 rdfs:label ""Khemis Miliana""@en
  ) .

  # Find persons who also died in French Algeria
  ?person dbo:deathPlace ?deathPlace2 .
  FILTER (
    ?deathPlace2 rdfs:label ""French Algeria""@en
  ) .
}
```",4,5,5,3,2,3,3,71,0,0,16,0,0.0,0
16,18,test,Give me the professional in Actress and spouse of Ted McGinley and person born as Georgeanne Marie Rice.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Georgeanne Marie Rice""@en . ?result <http://dbpedia.org/property/occupation> ""Actress""@en . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person WHERE {
  ?person a dbo:Actress .
  ?person foaf:name ""Georgeanne Marie Rice""@en .
  ?marriage dbo:spouse ?person ;
            dbo:partner <http://dbpedia.org/resource/Ted_McGinley> .
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
404,65,test,"Give me the child of the father of Ernest Augustus, Duke of Brunswick and spouse of the person born, that is a royalty, as Princess Victoria Louise of Prussia and parent of the child, that is a royalty, of the parent, that is a royalty, of Prince George William of Hanover.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/parent> ?v3 . ?v4 <http://dbpedia.org/property/birthName> ""Princess Victoria Louise of Prussia""@en . <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/property/father> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> ?v6 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Prince_George_William_of_Hanover> <http://dbpedia.org/ontology/parent> ?v0 . ?v0 <http://dbpedia.org/ontology/child> ?v6 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
SELECT ?child WHERE {
  ?father rdf:type dbo:Person .
  ?father foaf:name ""Prince Albert of Prussia""@en .
  
  ?father dbo:spouse ?mother .
  ?mother foaf:name ""Princess Victoria of Schleswig-Holstein-Sonderburg-Glücksburg""@en .

  ?child dbo:parent ?father ;
         rdf:type dbo:Person ;
         foaf:name ?name .

  FILTER EXISTS {
    ?child dbo:spouse ?spouse .
    ?spouse foaf:name ""Ernest Augustus, Duke of Brunswick""@en .
  }

  FILTER EXISTS {
    ?prince dbo:parent ?grandfather .
    ?grandfather foaf:name ""Ernest Augustus, King of Hanover""@en .
    
    ?grandfather dbo:parent ?child .
  }
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
959,47,test,"Give me the member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of Eiji Ōtsuka and native of the residence, that is a country, of the leader, that is a politician, of 2010 Japanese House of Councillors election.",SELECT ?result WHERE { <http://dbpedia.org/resource/2010_Japanese_House_of_Councillors_election> <http://dbpedia.org/property/leader> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?result <http://dbpedia.org/ontology/team> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?v0 <http://dbpedia.org/property/residence> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Eiji_Ōtsuka> <http://dbpedia.org/ontology/almaMater> ?v1 . },"```sparql
# Step 1: Find Eiji Ōtsuka's alma mater
SELECT ?almaMater WHERE {
    wd:Q123456 dbo:almaMater ?almaMater .
}

# Step 2: Ensure the alma mater is Japanese, an organization, a university, and an educational institution
SELECT DISTINCT ?almaMater WHERE {
    ?almaMater wdt:P17 wd:Q36 ; # Japan
                wdt:P31/wdt:P279* wd:Q3914 ; # University
                wdt:P31/wdt:P279* wd:Q43229 . # Educational institution
}

# Step 3: Identify the leader of the 2010 Japanese House of Councillors election
SELECT ?leader WHERE {
    ?election dbo:winner ?leader .
    FILTER (?election = wd:Q1234567) # Assuming Q1234567 is the identifier for the 2010 election
}

# Step 4: Determine the residence (country) of this leader
SELECT DISTINCT ?country WHERE {
    ?leader wdt:P27 ?country .
}

# Step 5: Find a member of Eiji Ōtsuka's alma mater who matches all criteria
SELECT DISTINCT ?member WHERE {
    ?almaMater dbo:member ?member .
    ?member wdt:P17 wd:Q36 ; # Japan
            wdt:P31/wdt:P279* wd:Q3914 ; # University
            wdt:P31/wdt:P279* wd:Q43229 . # Educational institution
    ?leader wdt:P27 ?country .
    FILTER (?member = ?almaMater) # Ensure the member is from the same alma mater
}
```",5,11,6,3,2,3,3,71,0,0,84,0,0.0,0
427,63,test,"Give me the party of the father of Lamberto Andreotti and reference to the name of the party of Michele Pinto and party of the person born, that is an office holder and a politician, as Romano Antonio Prodi.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ""Romano Antonio Prodi""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Michele_Pinto> <http://dbpedia.org/ontology/party> ?v4 . <http://dbpedia.org/resource/Lamberto_Andreotti> <http://dbpedia.org/property/father> ?v6 . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . ?v4 <http://xmlns.com/foaf/0.1/name> ?v3 . ?v2 <http://dbpedia.org/ontology/party> ?result . ?v6 <http://dbpedia.org/ontology/party> ?result . }","```sparql
# Query to find the political party of Lamberto Andreotti's father
SELECT ?party WHERE {
  wd:Q123456 wdt:P22 ?father. # Lamberto Andreotti's father
  ?father wdt:P102 ?party.   # Father's political party membership
}

UNION

# Query to find the political party associated with Michele Pinto
SELECT ?party WHERE {
  wd:Q654321 wdt:P102 ?party. # Michele Pinto's political party membership
}

UNION

# Query to find the political party or office held by Romano Antonio Prodi
SELECT DISTINCT ?party, ?office WHERE {
  wd:Q789012 wdt:P102 ?party.          # Romano Antonio Prodi's political party membership
  OPTIONAL { wd:Q789012 wdt:P39 ?office } # Romano Antonio Prodi's office held
}
```

Note: Replace `wd:Q123456`, `wd:Q654321`, and `wd:Q789012` with the actual DBpedia entity IDs for Lamberto Andreotti, Michele Pinto, and Romano Antonio Prodi respectively.",7,9,8,3,3,3,3,71,0,0,2,0,0.0,0
778,16,test,"Give me the entity in the award of Ralph L. Brinster and author of the work, that is a software, of Bill Joy.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/location> ?v2 . ?v3 <http://dbpedia.org/ontology/author> ?result . <http://dbpedia.org/resource/Ralph_L._Brinster> <http://dbpedia.org/property/awards> ?v2 . ?v3 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Bill_Joy> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Software>. },"```sparql
# Query for the award associated with Ralph L. Brinster
SELECT ?award WHERE {
  ?person foaf:name ""Ralph L. Brinster""@en .
  ?person dbo:awardedBy ?award .
}

UNION

# Query for software authored by Bill Joy
SELECT ?software WHERE {
  ?person foaf:name ""Bill Joy""@en .
  ?person dbo:authorOf ?work .
  ?work rdf:type dbo:Software .
  BIND(?work AS ?software)
}
```",4,5,5,2,2,3,2,20,0,0,1,0,0.0,0
9,66,test,"Give me the alma mater of the mayor, that is a politician, of Northern Ireland Forum and alma mater of the awardee of Royal Medal and figure known as the nickname of the entity, that is an organisation and an educational institution, in Northern Ireland.",SELECT ?result WHERE { <http://dbpedia.org/resource/Northern_Ireland_Forum> <http://dbpedia.org/property/leader> ?v3 . ?result <http://dbpedia.org/property/nickname> ?v2 . ?v1 <http://dbpedia.org/property/nickname> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://dbpedia.org/ontology/almaMater> ?result . ?v6 <http://dbpedia.org/ontology/almaMater> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Northern_Ireland> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v6 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Medal> . },"```sparql
# Step 1: Find the mayor associated with the Northern Ireland Forum and their alma mater
SELECT ?mayor ?almaMaterMayor WHERE {
  ?mayor dbo:position dbr:Northern_Ireland_Forum_Mayor .
  ?mayor foaf:almaMater ?almaMaterMayor .
}

# Step 2: Find the awardee of the Royal Medal and their alma mater
SELECT ?awardee ?almaMaterAwardee WHERE {
  ?awardee dbo:award dbr:Royal_Medal .
  ?awardee foaf:almaMater ?almaMaterAwardee .
}

# Step 3: Find the nickname of an organization that is also an educational institution in Northern Ireland
SELECT ?organisation ?nickname WHERE {
  ?organisation rdf:type dbo:EducationalInstitution ;
                dbo:location dbr:Northern_Ireland ;
                foaf:nick ?nickname .
}

# Step 4: Find common alma mater among the identified entities
SELECT DISTINCT ?commonAlmaMater WHERE {
  VALUES (?almaMater) { 
    (SELECT ?almaMaterMayor WHERE { ... }) # Replace with query from Step 1
    (SELECT ?almaMaterAwardee WHERE { ... }) # Replace with query from Step 2
  }
  ?commonAlmaMater owl:sameAs ?almaMater .
}
```

Note: The above SPARQL queries are structured to guide the process. Some parts, like finding the exact mayor or awardee, may require additional context or manual lookup due to limitations in DBpedia's data coverage.",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
281,66,test,"Give me the entity in the birth place, that is a country, of Bob Heffron and war of the profession, that is a military unit, of the professional, that is an office holder and a politician, in New Zealand Army and war of the awardee of Knight Grand Cross of the Order of the Bath.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Bob_Heffron> <http://dbpedia.org/ontology/birthPlace> ?v6 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_the_Bath> . ?v1 <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/New_Zealand_Army> . ?result <http://dbpedia.org/ontology/place> ?v6 . ?v1 <http://dbpedia.org/property/occupation> ?v2 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
# Step 1: Find Bob Heffron's birth place that is a country
SELECT ?birthPlace WHERE {
    dbpedia:Bob_Heffron dbo:birthPlace ?birthPlace .
    ?birthPlace rdf:type dbo:Country .
}

# Step 2: Determine his profession related to the New Zealand Army
SELECT ?profession WHERE {
    dbpedia:Bob_Heffron dbo:occupation ?profession .
    FILTER(CONTAINS(LCASE(?profession), ""new zealand army""))
}

# Step 3: Find the war associated with his military unit
SELECT ?war WHERE {
    ?militaryUnit dbo:partOfMilitaryConflict ?war .
    ?militaryUnit dbo:member dbpedia:Bob_Heffron .
}

# Step 4: Identify the awardee of Knight Grand Cross of the Order of the Bath and related war
SELECT ?awardee ?relatedWar WHERE {
    ?awardee dbo:awardReceived dbpedia:Knight_Grand_Cross_of_the_Order_of_the_Bath .
    ?awardee dbo:militaryConflict ?relatedWar .
}

# Step 5: Link all elements together to find the entity that fits all criteria
SELECT DISTINCT ?country ?militaryUnit ?war WHERE {
    # Bob Heffron's birthplace as a country
    dbpedia:Bob_Heffron dbo:birthPlace ?country .
    ?country rdf:type dbo:Country .

    # His profession related to the New Zealand Army
    dbpedia:Bob_Heffron dbo:occupation ?militaryUnit .
    FILTER(CONTAINS(LCASE(?militaryUnit), ""new zealand army""))

    # War associated with his military unit
    ?militaryUnit dbo:partOfMilitaryConflict ?war .

    # Awardee of Knight Grand Cross and related war
    ?awardee dbo:awardReceived dbpedia:Knight_Grand_Cross_of_the_Order_of_the_Bath .
    ?awardee dbo:militaryConflict ?relatedWar .
    
    FILTER(?war = ?relatedWar)
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
747,69,test,"Give me the person born on the birth date of the person decedent, that is an athlete and a soccer player, at Zolotonosha and band of the person born as the persona of Shèna and band of the writer of Apollo (Hardwell song).",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v7 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Shèna> <http://xmlns.com/foaf/0.1/givenName> ?v1 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?result <http://dbpedia.org/ontology/birthDate> ?v3 . <http://dbpedia.org/resource/Apollo_(Hardwell_song)> <http://dbpedia.org/property/writer> ?v7 . ?v2 <http://dbpedia.org/property/birthName> ?v1 . ?v4 <http://dbpedia.org/ontology/birthDate> ?v3 . ?v4 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Zolotonosha> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. },"```sparql
# Step 1: Identify the Decedent's Birth Date
SELECT ?decedentBirthDate WHERE {
  ?decedent a dbo:DeceasedPerson ;
            dbo:birthday ?birthDate .
}

# Step 2: Find an Athlete and Soccer Player Born on That Date in Zolotonosha
SELECT ?athlete WHERE {
  ?athlete a dbo:Athlete ;
           dbo:sport dbr:Soccer ;
           dbo:birthPlace dbr:Zolotonosha ;
           dbo:birthday ?decedentBirthDate .
}

# Step 3: Identify Shèna's Band
SELECT ?shenaBand WHERE {
  ?shena foaf:name ""Shèna"" ;
         dbo:band ?shenaBand .
}

# Step 4: Find the Writer of Apollo (Hardwell Song)
SELECT ?writer WHERE {
  ?song dbo:title ""Apollo"" ;
        dbo:artist dbr:Hardwell ;
        dbo:lyricist ?writer .
}

# Step 5: Identify the Band Associated with the Writer
SELECT ?band WHERE {
  ?writer dbo:band ?band .
}

# Final Query to Combine Information
SELECT ?athlete ?shenaBand ?band WHERE {
  # Assuming we have variables from previous queries
  VALUES (?decedentBirthDate) { ""YYYY-MM-DD"" } # Replace with actual date from Step 1

  ?athlete a dbo:Athlete ;
           dbo:sport dbr:Soccer ;
           dbo:birthPlace dbr:Zolotonosha ;
           dbo:birthday ?decedentBirthDate .

  ?shena foaf:name ""Shèna"" ;
         dbo:band ?shenaBand .

  ?song dbo:title ""Apollo"" ;
        dbo:artist dbr:Hardwell ;
        dbo:lyricist ?writer .

  ?writer dbo:band ?band .
}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
92,21,test,"Give me the band member of the reference, that is an artist, to Nevermore and band of Joseph Michael.","SELECT ?result WHERE { ?v1 <http://xmlns.com/foaf/0.1/name> ""Nevermore""@en . ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Joseph_Michael> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . }","```sparql
SELECT ?artist WHERE {
  ?person foaf:name ""Joseph Michael""@en .
  ?person dbo:memberOfBand ?nevermore .
  ?nevermore rdfs:label ""Nevermore""@en .
  ?person dbo:memberOf ?josephMichaelBand .
  ?josephMichaelBand rdfs:label ""band of Joseph Michael""@en .
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
161,70,test,"Give me the commander in the force, that is an event, of the figure known as El Director and military force of the force, that is a societal event and an event and a military conflict, of Francisco Franco and military force of the force, that is a societal event and a military conflict, of the predecessor of Indalecio Prieto.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/ontology/commander> ?v1 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Indalecio_Prieto> . ?v7 <http://dbpedia.org/ontology/commander> ?v0 . ?v1 <http://xmlns.com/foaf/0.1/nick> ""El Director""@en . ?result <http://dbpedia.org/ontology/battle> ?v7 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v4 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Franco> . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  ?event dbo:type dbr:Spanish_Civil_War .
  ?event dbo:militaryCommander ?commander .
  ?commander rdfs:label ""Francisco Franco""@en .
}
```",8,14,9,3,3,3,3,71,0,0,32,0,0.0,0
959,62,test,"Give me the member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of the person born in 1958 and manager of 2013 Júbilo Iwata season and native of the residence, that is a country, of the leader, that is a politician, of 2010 Japanese House of Councillors election.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/birthYear> ""1958""^^<http://www.w3.org/2001/XMLSchema#gYear> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. <http://dbpedia.org/resource/2013_Júbilo_Iwata_season> <http://dbpedia.org/ontology/manager> ?result . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?result <http://dbpedia.org/ontology/team> ?v2 . ?result <http://dbpedia.org/ontology/birthPlace> ?v5 . ?v4 <http://dbpedia.org/ontology/almaMater> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. <http://dbpedia.org/resource/2010_Japanese_House_of_Councillors_election> <http://dbpedia.org/property/leader> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/property/residence> ?v5 . }","```sparql
SELECT ?almaMater WHERE {
  # Step 1: Identify Naoto Kan as the leader of the 2010 Japanese House of Councillors election
  ?kan a dbo:Politician ;
      foaf:name ""Naoto Kan""@en .
  
  # Step 2: Determine his country of residence
  ?kan dbo:nationality dbr:Japan .

  # Step 3: Find Akira Nishino, manager of Júbilo Iwata in 2013 and native to Japan
  ?nishino a dbo:Person ;
      foaf:name ""Akira Nishino""@en ;
      dbo:birthYear ""1958""^^xsd:gYear ;
      dbo:nationality dbr:Japan ;
      dbo:managerOf dbr:Júbilo_Iwata_2013_season .

  # Step 4: Identify his alma mater
  ?nishino dbo:almaMater ?almaMater .
  
  # Ensure the alma mater is a Japanese organization, university, or educational institution
  ?almaMater a (dbo:Organization|dbo:University|dbo:EducationalInstitution) ;
      dbo:country dbr:Japan .
}
```",7,13,8,3,3,3,3,71,0,0,1,0,0.0,0
285,18,test,Give me the parent of the child of the spouse of Aristotle Onassis and spouse of the professional in .,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Aristotle_Onassis> . ?result <http://dbpedia.org/ontology/spouse> ?v3 . ?v3 <http://dbpedia.org/property/occupation> """"@en . ?v1 <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://dbpedia.org/ontology/parent> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?parent ?spouse
WHERE {
  # Aristotle Onassis's spouse
  ?onassisSpouse a dbo:Person ;
                 foaf:name ""Jacqueline Kennedy""@en .

  # Child of Jacqueline Kennedy (Aristotle Onassis's spouse)
  ?child dbo:mother ?onassisSpouse ;
         foaf:name ""Caroline Kennedy""@en .

  # Parent of the child
  ?parent dbo:child ?child .

  # Maria Callas as a notable professional associated with Aristotle Onassis
  ?callasProfession a dbo:Person ;
                    foaf:name ""Maria Callas""@en .
  
  # Spouse of Maria Callas (Aristotle Onassis)
  ?spouse dbo:spouse ?callasProfession .

  FILTER(?parent = ?onassisSpouse && ?spouse = ?onassisSpouse)
}
```",5,5,6,3,2,3,2,20,0,0,3,0,0.0,0
827,16,test,"Give me the child of the child, that is a royalty, of Grand Duchess Maria Pavlovna of Russia (1786–1859) and father of the child, that is a royalty, of Charles Augustus, Hereditary Grand Duke of Saxe-Weimar-Eisenach (1844–1894).","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Charles_Augustus,_Hereditary_Grand_Duke_of_Saxe-Weimar-Eisenach_(1844–1894)> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Grand_Duchess_Maria_Pavlovna_of_Russia_(1786–1859)> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> ?result . ?v2 <http://dbpedia.org/ontology/child> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commonIndividual WHERE {
  # Find Maria Pavlovna's children who are royalty
  ?child1 dbo:parent dbr:Grand_Duchess_Maria_Pavlovna_of_Russia ;
          a dbo:Monarch .

  # Find Charles Augustus's children who are royalty
  ?child2 dbo:parent dbr:Charles_Augustus,_Hereditary_Grand_Duke_of_Saxe-Weimar-Eisenach ;
          a dbo:Monarch .

  # Identify the child of Maria Pavlovna's royal child
  ?grandChild1 dbo:parent ?child1 ;
               a dbo:Monarch .

  # Identify the father of Charles Augustus's royal child
  ?father2 dbo:spouse ?mother2 .
  ?mother2 dbo:parent ?child2 .
  
  # Find common individual who is both grandChild1 and father2
  FILTER (?grandChild1 = ?commonIndividual && ?commonIndividual = ?father2)
}
```",4,6,5,2,2,3,2,20,0,0,1,0,0.0,0
747,39,test,Give me the band of Amba Shepherd and band of the person born as the persona of Shèna.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ?v0 . <http://dbpedia.org/resource/Shèna> <http://xmlns.com/foaf/0.1/givenName> ?v0 . <http://dbpedia.org/resource/Amba_Shepherd> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandAmbaShepherd ?bandShenaEaston WHERE {
  # Find the band associated with Amba Shepherd
  OPTIONAL { 
    ?ambashepherd dbo:memberOf ?bandAmbaShepherd .
    FILTER(CONTAINS(LCASE(STR(?ambashepherd)), ""amba shepherd""))
  }

  # Find any band association for Shena Easton (born as Shèna)
  OPTIONAL {
    ?shenaEaston dbo:birthName ?birthName .
    ?shenaEaston dbo:memberOf ?bandShenaEaston .
    FILTER(CONTAINS(LCASE(STR(?birthName)), ""shèna""))
  }
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
281,51,test,"Give me the war of the profession, that is a military unit, of the professional, that is an office holder and a politician, in New Zealand Army and entity in the birth place, that is a country, of Bob Heffron.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/New_Zealand_Army> . ?v1 <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/Bob_Heffron> <http://dbpedia.org/ontology/birthPlace> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace ?militaryUnit WHERE {
  # Find Bob Heffron's birthplace
  dbr:Bob_Heffron dbo:nationality dbr:Australia ;
                  dbo:birthPlace ?birthPlace .

  OPTIONAL {
    # Check for any military unit association in New Zealand Army
    ?person dbo:militaryService ?militaryUnit .
    FILTER(CONTAINS(LCASE(STR(?militaryUnit)), ""new zealand army""))
    FILTER(?person = dbr:Bob_Heffron)
  }
}
```",5,9,6,3,2,3,3,71,0,0,1,0,0.0,0
294,25,test,"Give me the resting place of the awardee, that is a politician, of Distinguished Service Medal (U.S. Army) and resting place of the architect of P. D. Houston Jr. House and entity in Nashville, Tennessee.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Nashville,_Tennessee> . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Distinguished_Service_Medal_(U.S._Army)> . <http://dbpedia.org/resource/P._D._Houston_Jr._House> <http://dbpedia.org/ontology/architect> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/ontology/restingPlace> ?result . ?v4 <http://dbpedia.org/ontology/restingPlace> ?result . }","```sparql
# Query to find the resting place of Dwight D. Eisenhower
SELECT ?restingPlace WHERE {
  wd:Q1126 dbo:awardReceived wd:Q123456 . # Assuming Q123456 is the DBpedia ID for Distinguished Service Medal (U.S. Army)
  wd:Q1126 dbo:deathPlace ?place .
  ?place dbp:type ""burial site""@en .
  ?place rdfs:label ?restingPlace .
  FILTER(LANG(?restingPlace) = ""en"")
}

UNION

# Query to find the resting place of the architect associated with P. D. Houston Jr. House and Nashville, Tennessee
SELECT ?architectRestingPlace WHERE {
  ?architect dbo:workLocation wd:Q1234567 . # Assuming Q1234567 is the DBpedia ID for Nashville, Tennessee
  ?architect dbo:designed wd:Q7654321 . # Assuming Q7654321 is the DBpedia ID for P. D. Houston Jr. House
  ?architect dbo:deathPlace ?architectPlace .
  ?architectPlace dbp:type ""burial site""@en .
  ?architectPlace rdfs:label ?architectRestingPlace .
  FILTER(LANG(?architectRestingPlace) = ""en"")
}
```",5,6,6,2,3,2,3,28,0,0,1,0,0.0,0
378,41,test,"Give me the war of the person born as Carl Pontus Gahn and war of the commander in Peninsular War and claim to fame of Louis des Balbes de Berton de Crillon, 1st Duke of Mahón.","SELECT ?result WHERE { <http://dbpedia.org/resource/Peninsular_War> <http://dbpedia.org/ontology/commander> ?v4 . <http://dbpedia.org/resource/Louis_des_Balbes_de_Berton_de_Crillon,_1st_Duke_of_Mahón> <http://dbpedia.org/ontology/knownFor> ?result . ?v2 <http://dbpedia.org/property/birthName> ""Carl Pontus Gahn""@en . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v4 <http://dbpedia.org/ontology/battle> ?result . }","```sparql
# Query for Carl Pontus Gahn's associated wars
SELECT ?war WHERE {
  wd:Q123456 a dbo:Chemist ; # Replace Q123456 with the actual DBpedia ID for Carl Pontus Gahn
  dbo:participatedIn ?event .
  ?event rdf:type dbo:MilitaryConflict .
  BIND(IRI(CONCAT(""http://dbpedia.org/resource/"", STR(?event))) AS ?war)
}

# Query for Arthur Wellesley's notable war (Peninsular War)
SELECT ?peninsularWar WHERE {
  wd:Q1234567 a dbo:MilitaryPerson ; # Replace Q1234567 with the actual DBpedia ID for Arthur Wellesley
  dbo:participatedIn ?event .
  ?event rdf:type dbo:MilitaryConflict ;
         rdfs:label ""Peninsular War""@en .
  BIND(IRI(CONCAT(""http://dbpedia.org/resource/"", STR(?event))) AS ?peninsularWar)
}

# Query for Louis des Balbes de Berton de Crillon's claim to fame
SELECT ?claimToFame WHERE {
  wd:Q1234568 a dbo:MilitaryPerson ; # Replace Q1234568 with the actual DBpedia ID for Louis des Balbes de Berton de Crillon
  dbo:knownFor ?event .
  ?event rdf:type dbo:MilitaryConflict ;
         rdfs:label ""Battle of Toulouse""@en .
  BIND(IRI(CONCAT(""http://dbpedia.org/resource/"", STR(?event))) AS ?claimToFame)
}
```",5,5,6,2,3,3,3,71,0,0,2,0,0.0,0
303,21,test,"Give me the entity in Panama and party of the person born, that is a politician, as Arnulfo Arias Madrid and party of Guillermo Endara.","SELECT ?result WHERE { <http://dbpedia.org/resource/Guillermo_Endara> <http://dbpedia.org/ontology/party> ?result . ?v0 <http://dbpedia.org/property/birthName> ""Arnulfo Arias Madrid""@en . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Panama> . ?v0 <http://dbpedia.org/ontology/party> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?party WHERE {
  VALUES ?name { 
    dbr:Arnulfo_Arias_Madrid 
    dbr:Guillermo_Endara 
  }
  
  ?person dbo:birthPlace dbr:Panama .
  ?person foaf:name ?name .
  OPTIONAL { ?person dbo:politicalParty ?party . }
}
```",4,5,5,2,3,2,3,28,0,0,1,0,0.0,0
701,27,test,"Give me the spouse of the father of the commander, that is a royalty, in Battle of Perire.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> ?v2 . <http://dbpedia.org/resource/Battle_of_Perire> <http://dbpedia.org/ontology/commander> ?v1 . },"```sparql
SELECT ?spouse WHERE {
  # Step 1: Find the commander in the Battle of Perire
  ?battle dbo:commander ?commander .
  FILTER(STR(?battle) = ""Battle_of_Perire"") .

  # Step 2: Find the father of the commander
  ?father dbo:child ?commander .
  
  # Step 3: Find the spouse of the father
  ?father dbo:spouse ?spouse .

  # Step 4: Ensure the spouse is royalty
  OPTIONAL { ?spouse dbo:title ?title . FILTER(CONTAINS(LCASE(?title), ""king"") || CONTAINS(LCASE(?title), ""queen"")) }
  
  FILTER(EXISTS { ?spouse dbo:title ?title })
}
```",3,4,4,3,1,3,3,71,0,0,5,0,0.0,0
959,58,test,"Give me the manager of the team of the manager, that is a sports manager, of 1998 Kashima Antlers season and member of University of Tsukuba and native of the residence, that is a country, of Yōichi Masuzoe.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/manager> ?v4 . <http://dbpedia.org/resource/Yōichi_Masuzoe> <http://dbpedia.org/property/residence> ?v5 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?result <http://dbpedia.org/ontology/birthPlace> ?v5 . ?result <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/University_of_Tsukuba> . <http://dbpedia.org/resource/1998_Kashima_Antlers_season> <http://dbpedia.org/ontology/manager> ?v4 . ?v0 <http://dbpedia.org/ontology/manager> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
# Step 1: Find Yōichi Masuzoe's native country
SELECT ?country WHERE {
  wd:Q123456 wdt:P19 ?place.
  ?place wdt:P17 ?country.
}

# Step 2: Find the manager of Kashima Antlers in 1998
SELECT ?manager WHERE {
  wd:Q789012 wdt:P112 ?manager. # Q789012 is a placeholder for Kashima Antlers
  ?manager wdt:P106 wd:Q1930181. # P106 is occupation, Q1930181 is sports manager
  ?manager wdt:P569 ?birthDate.
  FILTER(year(?birthDate) <= 1998 && year(?birthDate) >= 1980) # Assuming the manager was active around this time
}

# Step 3: Ensure the manager is a member of University of Tsukuba
SELECT ?manager WHERE {
  ?manager wdt:P69 wd:Q1234567. # P69 is alumni_of, Q1234567 is University of Tsukuba
  ?manager wdt:P106 wd:Q1930181.
}

# Step 4: Find the manager's team manager
SELECT ?teamManager WHERE {
  ?manager wdt:P112 ?team. # P112 is manages (organization)
  ?team wdt:P112 ?teamManager.
}
```",6,8,7,3,3,3,3,71,0,0,2,0,0.0,0
421,20,test,Give me the band member of Senidah and native of the birthplace of Samir Bekrić and person born as Edin Dervišhalidović.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Edin Dervišhalidović""@en . <http://dbpedia.org/resource/Samir_Bekrić> <http://dbpedia.org/ontology/birthPlace> ?v3 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Senidah> . ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . }","```sparql
SELECT ?person WHERE {
  # Find a person associated with Senidah
  ?senidah dbo:associatedBandMember ?person .
  
  # Ensure this person was born as Edin Dervišhalidović
  ?person foaf:name ""Edin Dervišhalidović""@en .

  # Check if the person is native to Sarajevo, Bosnia and Herzegovina (birthplace of Samir Bekrić)
  ?person dbo:birthPlace dbr:Sarajevo .
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
767,44,test,Give me the alma mater of the administration of George K. Nash and reference to the alter ego of Black Hood and entity in Baden-Württemberg.,SELECT ?result WHERE { <http://dbpedia.org/resource/Black_Hood> <http://dbpedia.org/property/alterEgo> ?v2 . ?v4 <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v4 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/George_K._Nash> . ?result <http://dbpedia.org/ontology/state> <http://dbpedia.org/resource/Baden-Württemberg> . },"```sparql
# Query for George K. Nash's alma mater
SELECT ?university WHERE {
  ?person dbo:almaMater ?university .
  ?person rdfs:label ""George K. Nash""@en .
}

UNION

# Query for the alter ego of Black Hood
SELECT ?alterEgo WHERE {
  ?character dbo:alias ""Black Hood""@en ;
             dbo:realName ?alterEgo .
}

UNION

# Query for an entity in Baden-Württemberg
SELECT ?entity WHERE {
  ?entity dbo:location ?place .
  ?place rdfs:label ""Baden-Württemberg""@en .
  FILTER (lang(?place) = 'en')
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
994,56,test,"Give me the associated musical artist of the associated musical artist of Watchtower (band) and associated musical artist of Red Tide (band) and band member of the person born, that is a musical artist, as the persona of Don Dokken.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Red_Tide_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/birthName> ?v4 . <http://dbpedia.org/resource/Don_Dokken> <http://xmlns.com/foaf/0.1/givenName> ?v4 . <http://dbpedia.org/resource/Watchtower_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . },"```sparql
# Find associated musical artist of Watchtower
SELECT ?associatedArtist WHERE {
  wd:Q123456 wdt:P170* wd:Q789012 .
}

# Find associated musical artist of Red Tide
SELECT ?associatedArtist WHERE {
  wd:Q345678 wdt:P170* wd:Q901234 .
}

# Find band member of Don Dokken who is a musical artist
SELECT ?bandMember WHERE {
  wd:Q567890 wdt:P31 wd:Q11111 ;
             wdt:P106 wd:Q215627 .
}
```

Note: The above SPARQL queries use placeholders for entity IDs (`wd:Q123456`, `wd:Q789012`, etc.) which need to be replaced with the actual DBpedia identifiers for Watchtower, Red Tide, and Don Dokken. These can be found using a search or by querying DBpedia directly.",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
488,64,test,"Give me the birth place of the commander in the war, that is a military conflict and an event and a societal event, of Saitō Hajime and administration of the father of the spouse, that is a royalty, of Tokugawa Masako and death place of Tokugawa Ieyasu.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v3 <http://dbpedia.org/ontology/commander> ?v2 . <http://dbpedia.org/resource/Saitō_Hajime> <http://dbpedia.org/ontology/battle> ?v3 . <http://dbpedia.org/resource/Tokugawa_Ieyasu> <http://dbpedia.org/ontology/deathPlace> ?result . ?v0 <http://dbpedia.org/property/father> ?v1 . ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Tokugawa_Masako> . ?result <http://dbpedia.org/property/leader> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?birthPlaceSaitoHajime ?administrationFatherSpouseTokugawaMasako ?deathPlaceTokugawaIeyasu WHERE {
  # Saitō Hajime's birthplace
  OPTIONAL { 
    dbr:Saitō_Hajime dbo:birthPlace ?birthPlaceSaitoHajime .
  }

  # Tokugawa Masako's spouse and his father
  OPTIONAL {
    dbr:Tokugawa_Masako dbo:spouse ?spouseTokugawaMasako .
    ?spouseTokugawaMasako dbo:father ?fatherSpouseTokugawaMasako .
    
    # Administration of the father-in-law
    ?administrationFatherSpouseTokugawaMasako dbo:administrator ?fatherSpouseTokugawaMasako .
  }

  # Death place of Tokugawa Ieyasu
  OPTIONAL {
    dbr:Tokugawa_Ieyasu dbo:deathPlace ?deathPlaceTokugawaIeyasu .
  }
}
```",7,11,8,3,3,3,3,71,1,1,0,0.5,1.0,0.6666666666666666
528,51,test,Give me the force of the person born as the birth name of Narciso Campero and war of the commander in Battle of La Rinconada de Ate.,SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/commander> ?v2 . ?v2 <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Narciso_Campero> <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Battle_of_La_Rinconada_de_Ate> <http://dbpedia.org/ontology/commander> ?v4 . },"```sparql
# Query to find Narciso Campero's birth name and role
SELECT ?birthName ?role WHERE {
  ?person foaf:name ""Narciso Campero""@en .
  OPTIONAL { ?person foaf:givenname ?birthName . }
  OPTIONAL { ?person dbo:occupation ?role . }
}

# Query to find the commander of Battle of La Rinconada de Ate and the associated war
SELECT ?commander ?war WHERE {
  ?battle dbp:name ""Battle of La Rinconada de Ate""@en .
  ?battle dbo:commander ?commander .
  OPTIONAL { ?battle dbo:partOfWar ?war . }
}
```",5,5,6,3,2,3,3,71,0,0,2,0,0.0,0
92,24,test,"Give me the associated musical artist of the person born, that is an artist, as Jim Sheppard and band of Joseph Michael.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Joseph_Michael> . ?v2 <http://dbpedia.org/property/birthName> ""Jim Sheppard""@en . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artist WHERE {
  VALUES (?person) { 
    dbr:Jim_Sheppard (dbr:Joseph_Michael)
  }
  
  OPTIONAL {
    ?person dbo:musicalArtist ?artist .
  }

  FILTER(?artist != dbr:Unknown)
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
617,42,test,"Give me the child of the child, that is a royalty, of Seleucus II Callinicus and parent of the child of Antiochus (son of Antiochus III the Great) and spouse of Laodice IV.",SELECT ?result WHERE { <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/child> ?v1 . ?result <http://dbpedia.org/ontology/child> ?v1 . ?result <http://dbpedia.org/property/father> ?v2 . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seleucus_II_Callinicus> . <http://dbpedia.org/resource/Laodice_IV> <http://dbpedia.org/ontology/spouse> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?grandchild WHERE {
  # Seleucus II Callinicus and his children
  dbr:Seleucus_II_Callinicus dbo:spouse ?parent1 .
  ?parent1 dbo:child ?child .

  # Child of Antiochus III the Great (Antiochus IV Epiphanes)
  dbr:Antiochus_IV_Epiphanes dbo:father dbr:Antiochus_III_the_Great ;
                             dbo:spouse ?parent2 .
  ?parent2 dbo:child ?antiochusChild .

  # Laodice IV
  dbr:Laodice_IV dbo:spouse ?grandchild .

  # Ensure the grandchild is a royalty and child of one of Seleucus II's children
  ?child dbo:child ?grandchild .
  FILTER (?grandchild != dbr:Seleucus_II_Callinicus && ?grandchild != ?parent1)
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
92,57,test,"Give me the associated musical artist of the person born, that is an artist, as the actor of Return to Nuke 'Em High Volume 1 and band member of Nevermore and band of the person born as Joseph Michael Furney.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Nevermore> . ?v5 <http://dbpedia.org/property/birthName> ?v0 . <http://dbpedia.org/resource/Return_to_Nuke_'Em_High_Volume_1> <http://dbpedia.org/property/starring> ?v0 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v3 <http://dbpedia.org/property/birthName> ""Joseph Michael Furney""@en . ?result <http://dbpedia.org/ontology/bandMember> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artist WHERE {
  # David Hasselhoff's association
  OPTIONAL { 
    dbr:David_Hasselhoff dbo:actorIn dbr:Return_to_Nuke_'Em_High_Volume_1 .
    dbr:David_Hasselhoff dbo:musicArtist ?artist .
  }

  # Joe Duplantier's band association
  OPTIONAL {
    dbr:Joe_Duplantier dbo:memberOf dbr:Gojira .
    dbr:Gojira dbo:musicalArtist ?artist .
  }
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
92,35,test,"Give me the band of the person born as Joseph Michael Furney and band member of the reference, that is an artist, to Nevermore.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v1 <http://dbpedia.org/property/birthName> ""Joseph Michael Furney""@en . ?result <http://dbpedia.org/ontology/bandMember> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://xmlns.com/foaf/0.1/name> ""Nevermore""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?previousBand WHERE {
  ?person dbo:birthName ""Joseph Michael Furney"" .
  ?person foaf:name ?stageName .
  ?person dbo:bandMember ?nevermoreMembership .
  ?nevermoreMembership dbo:band dbr:Nevermore .

  OPTIONAL { 
    ?person dbo:memberOfBand ?previousBand .
    FILTER NOT EXISTS {
      ?previousBand dbo:bandMember ?person .
      ?previousBand dbo:band dbr:Nevermore .
    }
  }

  # Ensure we get the person with a stage name
  FILTER(?stageName != """")
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
345,19,test,"Give me the team of the person born, that is a soccer player and a soccer manager, on the birth date of Eiður Guðjohnsen and figure known as the nickname of FC Vaduz.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/FC_Vaduz> <http://dbpedia.org/property/nickname> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v4 <http://dbpedia.org/ontology/birthDate> ?v0 . <http://dbpedia.org/resource/Eiður_Guðjohnsen> <http://dbpedia.org/ontology/birthDate> ?v0 . ?result <http://dbpedia.org/property/nickname> ?v2 . ?result <http://dbpedia.org/ontology/manager> ?v4 . },"```sparql
# Step 1: Get Eiður Guðjohnsen's birth date
SELECT ?birthDate WHERE {
  dbpedia:Æður_Guðjónsson dbo:birthDate ?birthDate .
}

# Step 2: Find a soccer player and manager born on the same date
SELECT DISTINCT ?person WHERE {
  ?person dbo:birthDate ?birthDate ;
          (dbo:occupation dbr:Soccer_player ; dbo:occupation dbr:Soccer_manager) .
  FILTER(?birthDate = <Eiður_Guðjohnsen_birth_date>) # Replace with actual birth date from Step 1
}

# Step 3: Get FC Vaduz's nickname
SELECT ?nickname WHERE {
  dbpedia:FC_Vaduz dbo:nickname ?nickname .
}

# Step 4: Find the team of the identified person
SELECT DISTINCT ?team WHERE {
  ?person dbo:currentTeam ?team ;
          (dbo:occupation dbr:Soccer_player ; dbo:occupation dbr:Soccer_manager) .
  FILTER(?person = <identified_person>) # Replace with actual person from Step 2
}
```",5,7,6,3,2,3,2,20,0,0,1,0,0.0,0
801,29,test,"Give me the associated musical artist of Chris Taylor (music producer) and producer of the work, that is a musical work and a song and a work, of 50 Cent and professional in .","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/50_Cent> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?result <http://dbpedia.org/property/occupation> """"@en . ?v3 <http://dbpedia.org/ontology/producer> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. <http://dbpedia.org/resource/Chris_Taylor_(music_producer)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artist ?song WHERE {
    ?producer a dbo:MusicProducer ;
              foaf:name ""Chris Taylor"" .
    
    ?producer dbo:produced ?work .
    ?work a dbo:Songs ;
          dbo:artist dbr:50_Cent ;
          rdfs:label ?song .

    OPTIONAL { 
        ?work dbo:artist ?artist .
    }
}
```",4,7,5,2,3,3,3,71,0,0,1,0,0.0,0
184,69,test,"Give me the parent of the child of the parent of Archduchess Margaret of Austria (born 1925) and child of the child of Archduke Joseph Karl of Austria and parent of the native of the landmark at elevation, that is a settlement, of 96.0.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Margaret_of_Austria_(born_1925)> . ?v2 <http://dbpedia.org/property/father> ?v1 . ?v3 <http://dbpedia.org/ontology/birthPlace> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v7 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Karl_of_Austria> . ?result <http://dbpedia.org/property/father> ?v7 . ?v4 <http://dbpedia.org/ontology/elevation> ""96.0""^^<http://www.w3.org/2001/XMLSchema#double> . ?result <http://dbpedia.org/ontology/child> ?v3 . ?result <http://dbpedia.org/ontology/child> ?v2 . }","```sparql
# Step 1: Find Archduchess Margaret of Austria (born 1925) and her parent's child
SELECT ?childOfParent WHERE {
  ?margaret dbo:birthYear ""1925""^^xsd:gYear .
  ?margaret rdfs:label ""Archduchess Margaret of Austria""@en .
  ?parent dbo:spouse ?margaret .
  ?parent dbo:child ?child .
  FILTER NOT EXISTS { ?child rdfs:label ""Margaret""@en }
}

# Step 2: Find Archduke Joseph Karl's child and the parent of that child
SELECT ?parentOfChild WHERE {
  ?josephKarl rdfs:label ""Archduke Joseph Karl of Austria""@en .
  ?josephKarl dbo:child ?child .
  ?parent dbo:spouse ?child .
}

# Step 3: Find the landmark at elevation 96.0 and its native settlement
SELECT ?native WHERE {
  ?landmark dbo:elevation ""96.0""^^xsd:float .
  ?settlement dbo:location ?landmark .
  ?native dbo:nativeOf ?settlement .
}

# Step 4: Combine these to find the common entity and their parent
SELECT ?parent WHERE {
  VALUES ?commonEntity { ?childOfParent ?parentOfChild ?native }
  ?parent dbo:spouse ?commonEntity .
}
```",8,9,9,3,3,3,3,71,0,0,1,0,0.0,0
391,62,test,"Give me the native of the figure known as the nick name of Jackson, Tennessee and actor of the claim to fame, that is a work, of the spouse of Sherry Hormann and actor of All About the Andersons.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/nickname> ?v4 . ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . <http://dbpedia.org/resource/Jackson,_Tennessee> <http://xmlns.com/foaf/0.1/nick> ?v4 . ?v6 <http://dbpedia.org/ontology/starring> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/ontology/knownFor> ?v6 . <http://dbpedia.org/resource/Sherry_Hormann> <http://dbpedia.org/ontology/spouse> ?v0 . <http://dbpedia.org/resource/All_About_the_Andersons> <http://dbpedia.org/property/starring> ?result . }","```sparql
# Step 1: Find Sherry Hormann's spouse
SELECT ?spouse WHERE {
  wd:Q123456 wdt:P26 ?spouse .
}

# Step 2: Determine the claim to fame of Sherry Hormann's spouse
SELECT ?claimToFame WHERE {
  ?spouse wdt:P800 ?claimToFame .
}

# Step 3: Find the actor of ""All About the Andersons""
SELECT ?actor WHERE {
  wd:Q789012 wdt:P161 ?actor .
}

# Step 4: Identify the nickname of Jackson, Tennessee
SELECT ?nickname WHERE {
  wd:Q345678 wdt:P1448 ?nickname .
}

# Step 5: Connect these elements to find the figure
SELECT DISTINCT ?figure ?nativePlace WHERE {
  # Figure known by the nickname of Jackson, Tennessee
  ?figure wdt:P1448 ?nickname .

  # Actor of ""All About the Andersons""
  ?figure wdt:P161 wd:Q789012 .

  # Claim to fame is a work of Sherry Hormann's spouse
  ?figure wdt:P800 ?claimToFame .

  # Determine native place
  ?figure wdt:P19 ?nativePlace .
}
```

Note: The placeholders `wd:Q123456`, `wd:Q789012`, and `wd:Q345678` should be replaced with the actual DBpedia identifiers for Sherry Hormann, ""All About the Andersons"", and Jackson, Tennessee respectively. These can be found using a search on DBpedia or by querying their names directly.",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
391,45,test,"Give me the actor of the movie, that is a movie and a work and a television show, with the professional in  and native of Compton, California and actor of The Departed.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/occupation> """"@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Compton,_California> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://dbpedia.org/property/starring> ?v0 . ?v1 <http://dbpedia.org/property/starring> ?result . <http://dbpedia.org/resource/The_Departed> <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. }","```sparql
SELECT DISTINCT ?actor WHERE {
  ?movie dbo:genre dbc:Film; 
         dbo:workExample ?televisionShow;
         dbo:starring ?actor .
  
  ?actor dbo:birthPlace dbr:Compton,_California .

  ?actor dbo:film ?departedMovie .
  ?departedMovie rdfs:label ""The Departed""@en .
  
  FILTER (CONTAINS(LCASE(?movie), ""work"") && CONTAINS(LCASE(?televisionShow), ""television""))
}
```",5,8,6,3,3,3,3,71,0,0,1,0,0.0,0
427,59,test,Give me the reference to the name of the party of Michele Pinto and party of the father of the alumnus of Massachusetts Institute of Technology.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Massachusetts_Institute_of_Technology> . ?v3 <http://xmlns.com/foaf/0.1/name> ?v2 . <http://dbpedia.org/resource/Michele_Pinto> <http://dbpedia.org/ontology/party> ?v3 . ?v5 <http://dbpedia.org/ontology/party> ?result . ?v0 <http://dbpedia.org/property/father> ?v5 . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . },"```sparql
# Query to find Michele Pinto's party
SELECT ?party WHERE {
  ?person foaf:name ""Michele Pinto""@en .
  OPTIONAL { ?person dbo:politicalParty ?party . }
}

# Query to find a notable MIT alumnus and their father
SELECT DISTINCT ?alumnus ?fatherName WHERE {
  ?alumnus dbo:almaMater dbr:Massachusetts_Institute_of_Technology ;
           foaf:name ?name .
  OPTIONAL { ?alumnus dbo:parent ?father . }
  OPTIONAL { ?father foaf:name ?fatherName . }
}

# Assuming we identify Bill Gates as an alumnus, find his father's party
SELECT ?party WHERE {
  ?person foaf:name ""William H. Gates II""@en .
  OPTIONAL { ?person dbo:politicalParty ?party . }
}
```",6,6,7,3,2,3,3,71,0,0,2,0,0.0,0
754,18,test,Give me the parent of the parent of the parent of Min Linka and parent of the child of Ram Khamhaeng.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v3 . <http://dbpedia.org/resource/Min_Linka> <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/Ram_Khamhaeng> <http://dbpedia.org/ontology/child> ?v3 . ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://dbpedia.org/ontology/parent> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?greatGrandparentMinLinka ?parentChildRamKhamhaeng WHERE {
  # Min Linka's family tree
  ?minLinka dbo:birthName ""Min Linka""@en.
  
  ?minLinka dbo:child ?parent1 .
  ?parent1 dbo:child ?grandparent1 .
  ?grandparent1 dbo:child ?greatGrandparentMinLinka .

  # Ram Khamhaeng's family tree
  ?ramKhamhaeng dbo:birthName ""Ram Khamhaeng""@en.
  
  ?ramKhamhaeng dbo:child ?child1 .
  ?child1 dbo:parent ?parentChildRamKhamhaeng .
}
```",5,5,6,3,2,3,2,20,0,0,1,0,0.0,0
378,54,test,"Give me the war of the person born as Carl Pontus Gahn and claim to fame of Louis des Balbes de Berton de Crillon, 1st Duke of Mahón and war of the commander in the reference, that is a military conflict, to Peninsular War.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/birthName> ""Carl Pontus Gahn""@en . ?v0 <http://xmlns.com/foaf/0.1/name> ""Peninsular War""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/ontology/commander> ?v5 . ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v5 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Louis_des_Balbes_de_Berton_de_Crillon,_1st_Duke_of_Mahón> <http://dbpedia.org/ontology/knownFor> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?war WHERE {
  VALUES (?personName) { (""Carl Pontus Gahn"" ""Louis des Balbes de Berton de Crillon, 1st Duke of Mahón"") }
  
  # Find the DBpedia resource for each person
  ?person dbo:wikiPageWikiLink dbr:?personName .
  
  # Get wars associated with Carl Pontus Gahn
  OPTIONAL {
    ?person dbo:nationality dbr:Sweden .
    ?war dbo:endYear ?endYear .
    FILTER (?endYear >= 1803 && ?endYear <= 1815) .
    ?person dbo:participatedInWar ?war .
  }
  
  # Get wars associated with Louis des Balbes de Berton de Crillon
  OPTIONAL {
    ?person dbo:nationality dbr:France .
    ?war dbo:endYear ?endYear .
    FILTER (?endYear >= 1808 && ?endYear <= 1814) .
    ?person dbo:participatedInWar ?war .
  }
  
  # Filter to ensure we get the Peninsular War for Crillon
  OPTIONAL {
    ?person rdfs:label ""Louis des Balbes de Berton de Crillon, 1st Duke of Mahón""@en .
    ?war rdfs:label ""Peninsular War""@en .
    ?person dbo:participatedInWar ?war .
  }
  
  FILTER(?war != UNDEF)
}
```",6,7,7,3,3,3,3,71,0,0,2,0,0.0,0
701,65,test,Give me the parent of the child of the child of Seti I and spouse of the father of Merneptah and parent of the child of Nefertari.,SELECT ?result WHERE { <http://dbpedia.org/resource/Nefertari> <http://dbpedia.org/ontology/child> ?v4 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seti_I> . <http://dbpedia.org/resource/Merneptah> <http://dbpedia.org/property/father> ?v3 . ?result <http://dbpedia.org/ontology/spouse> ?v3 . ?v6 <http://dbpedia.org/property/father> ?v0 . ?v4 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/child> ?v6 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  # Seti I's child (Ramesses II)
  dbr:Seti_I dbo:child dbr:Ramesses_II .
  
  # Ramesses II's spouse (Nefertari)
  dbr:Ramesses_II dbo:spouse dbr:Nefertari .

  # Nefertari's parent
  ?parent dbo:child dbr:Nefertari .
}
```",7,7,8,3,3,3,3,71,0,0,1,0,0.0,0
783,18,test,"Give me the band member of the person born, that is an artist and a musical artist, as Priscilla Opoku-Kwarteng and associated musical artist of the band member of the person born as Samuel Ofori Amponsah.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://dbpedia.org/property/birthName> ""Priscilla Opoku-Kwarteng""@en . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://dbpedia.org/property/birthName> ""Samuel Ofori Amponsah""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandMemberStonebwoy ?bandMemberShattaWale WHERE {
  # Stonebwoy's band members
  OPTIONAL { 
    dbr:Stonebwoy dbo:memberOf ?band .
    ?band dbo:member ?bandMemberStonebwoy .
  }
  
  # Shatta Wale's band members
  OPTIONAL { 
    dbr:Shatta_Wale dbo:memberOf ?band .
    ?band dbo:member ?bandMemberShattaWale .
  }
}
```",5,7,6,3,2,3,2,20,0,0,1,0,0.0,0
959,57,test,"Give me the member of University of Tsukuba and native of the residence, that is a country, of the leader, that is a politician, of 2010 Japanese House of Councillors election and manager of the team of Takashi Sekizuka.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/manager> ?result . ?result <http://dbpedia.org/ontology/birthPlace> ?v4 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Takashi_Sekizuka> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/2010_Japanese_House_of_Councillors_election> <http://dbpedia.org/property/leader> ?v1 . ?result <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/University_of_Tsukuba> . ?v1 <http://dbpedia.org/property/residence> ?v4 . },"```sparql
# Step 1: Identify the leader of the 2010 Japanese House of Councillors election
SELECT ?politician WHERE {
    ?election dbo:event ""Japanese House of Councillors election, 2010"" .
    ?election dbo:leader ?politician .
    ?politician rdf:type dbo:Politician .
}

# Step 2: Determine the native country of this leader
SELECT DISTINCT ?nativeCountry WHERE {
    ?politician dbo:nationality ?nationality .
    ?nationality rdfs:label ?nativeCountry .
    FILTER (lang(?nativeCountry) = ""en"")
}

# Step 3: Find members of the University of Tsukuba who are natives of this country
SELECT DISTINCT ?member WHERE {
    ?member dbo:almaMater dbr:University_of_Tsukuba .
    ?member dbo:nationality ?nationality .
    ?nationality rdfs:label ?nativeCountry .
    FILTER (lang(?nativeCountry) = ""en"")
}

# Step 4: Identify managers of Takashi Sekizuka's team
SELECT DISTINCT ?manager WHERE {
    ?manager dbo:employeeOf dbr:Takashi_Sekizuka_Team .
    ?manager dbo:nationality ?nationality .
    ?nationality rdfs:label ?nativeCountry .
    FILTER (lang(?nativeCountry) = ""en"")
}

# Final step: Combine the results to find the individual who satisfies all conditions
SELECT DISTINCT ?individual WHERE {
    ?individual dbo:almaMater dbr:University_of_Tsukuba .
    ?individual dbo:nationality ?nationality .
    ?nationality rdfs:label ?nativeCountry .
    FILTER (lang(?nativeCountry) = ""en"")
    
    ?individual dbo:employeeOf dbr:Takashi_Sekizuka_Team .
}
```",6,8,7,3,3,3,3,71,0,0,2,0,0.0,0
328,46,test,Give me the awardee of the award of the commander in Volcano and Ryukyu Islands campaign and commander in the force of Ferenc Szálasi.,SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Ferenc_Szálasi> . <http://dbpedia.org/resource/Volcano_and_Ryukyu_Islands_campaign> <http://dbpedia.org/ontology/commander> ?v2 . ?v4 <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/property/awards> ?v1 . ?v2 <http://dbpedia.org/property/awards> ?v1 . },"```sparql
# Query to find Chester W. Nimitz as the commander of the Volcano and Ryukyu Islands campaign
SELECT ?person WHERE {
  ?person dbo:occupation dbr:Admiral_in_the_United_States_Navy.
  ?person rdfs:label ""Chester W. Nimitz""@en.
  OPTIONAL { 
    ?campaign dbo:commander ?person.
    ?campaign rdfs:label ""Volcano and Ryukyu Islands campaign""@en.
  }
}

UNION

# Query to find Hubert Lanz as the commander in the force of Ferenc Szálasi
SELECT ?person WHERE {
  ?person dbo:occupation dbr:Military_personnel_of_Germany.
  ?person rdfs:label ""Hubert Lanz""@en.
  OPTIONAL { 
    ?force dbo:commander ?person.
    ?force rdfs:label ""Arrow Cross Party military force""@en.
  }
}
```",5,5,6,3,2,3,3,71,0,0,5,0,0.0,0
404,66,test,"Give me the spouse of the person born, that is a royalty, as Princess Victoria Louise of Prussia and child of the father of the spouse of Princess Victoria Louise of Prussia and parent of the child, that is a royalty, of Ernest Augustus, Duke of Brunswick.","SELECT ?result WHERE { <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> ?v6 . <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/ontology/child> ?v6 . ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/birthName> ""Princess Victoria Louise of Prussia""@en . ?v1 <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/ontology/parent> ?v2 . }","```sparql
SELECT ?spouse WHERE {
  # Step 1: Identify Princess Victoria Louise of Prussia
  ?princess a dbo:Princess ;
           foaf:name ""Victoria Louise, Princess Royal""@en ;
           dbo:birthPlace ?birthPlace .

  # Step 2: Find her spouse
  ?princess dbo:spouse ?spouse .

  # Step 3: Determine the father of her spouse
  ?spouse dbo:father ?father .

  # Step 4: Identify the child of this father and parent of Ernest Augustus, Duke of Brunswick
  ?child dbo:parent ?father ;
         dbo:child ?ernestAugustus .
  ?ernestAugustus a dbo:Duke ;
                  foaf:name ""Ernest Augustus, Duke of Brunswick""@en .

  # Step 5: Find the spouse of this identified royalty
  ?child dbo:spouse ?finalSpouse .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
161,66,test,"Give me the commander in the force, that is an event, of the figure known as El Director and military force of the force, that is a societal event and an event and a military conflict, of Francisco Franco and military force of the force, that is a societal event and a military conflict, of Francisco Largo Caballero.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v6 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/commander> ?v1 . ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Franco> . ?v1 <http://xmlns.com/foaf/0.1/nick> ""El Director""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v6 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commander ?force ?event
WHERE {
  # Identify Francisco Franco as a commander
  ?franco dbo:alias ""El Director""@en .
  ?franco dbo:occupation dbo:MilitaryPerson .

  # Find military forces commanded by Franco
  ?force dbo:commander ?franco ;
         dbo:partOf ?conflict .

  # Ensure the conflict is a societal event and a military conflict
  ?conflict rdf:type dbo:SocietalEvent, dbo:MilitaryConflict .

  # Link to Francisco Largo Caballero
  ?caballero dbr:Francisco_Largo_Caballero ;
             dbo:occupation dbo:PrimeMinisterOfSpain ;
             dbo:participatedIn ?conflict .

  # Ensure the event is linked to both Franco and Largo Caballero
  ?event dbo:relatedEvent ?conflict ;
         dbo:commander ?franco ;
         dbo:participant ?caballero .
}
```",7,13,8,3,3,3,3,71,0,0,32,0,0.0,0
184,21,test,Give me the parent of Archduchess Ilona of Austria and parent of the native of Budapest.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v1 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Ilona_of_Austria> . ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Budapest> . },"```sparql
# Query to get the parents of Archduchess Ilona of Austria
SELECT ?parent WHERE {
  dbpedia:Ilona_of_Austria dbo:parent ?parent .
}

# Query to get the parents of Ferenc Liszt (native of Budapest)
SELECT ?parent WHERE {
  dbpedia:Ferenc_Liszt dbo:birthPlace dbr:Budapest ;
                       dbo:parent ?parent .
}
```",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
959,70,test,"Give me the native of the residence, that is a country, of the leader, that is a politician, of 2010 Japanese House of Councillors election and manager of the team of the manager, that is a sports manager, of 1998 Kashima Antlers season and member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of Eiji Ōtsuka.",SELECT ?result WHERE { <http://dbpedia.org/resource/1998_Kashima_Antlers_season> <http://dbpedia.org/ontology/manager> ?v5 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/ontology/manager> ?result . ?result <http://dbpedia.org/ontology/birthPlace> ?v6 . <http://dbpedia.org/resource/Eiji_Ōtsuka> <http://dbpedia.org/ontology/almaMater> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://dbpedia.org/property/residence> ?v6 . ?result <http://dbpedia.org/ontology/team> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. <http://dbpedia.org/resource/2010_Japanese_House_of_Councillors_election> <http://dbpedia.org/property/leader> ?v1 . ?v0 <http://dbpedia.org/ontology/manager> ?v5 . },"```sparql
# Step 1: Find the leader of the 2010 Japanese House of Councillors election
SELECT ?politician WHERE {
  ?politician dbo:officeHolder dbr:Japanese_House_of_Councillors.
  ?politician dbo:electionDate ?date.
  FILTER (YEAR(?date) = 2010)
}

# Step 2: Find the manager of the Kashima Antlers in 1998
SELECT ?manager WHERE {
  ?team dbo:coach ?manager.
  ?team rdfs:label ""Kashima Antlers""@en.
  ?team dbo:season ?season.
  ?season dbo:year ?year.
  FILTER (?year = 1998)
}

# Step 3: Find the manager of the team managed by the manager from step 2
SELECT ?subManager WHERE {
  ?manager dbo:coach ?subTeam.
  ?subTeam dbo:coach ?subManager.
}

# Step 4: Find the alma mater of Eiji Ōtsuka
SELECT ?almaMater WHERE {
  dbr:Eiji_Ōtsuka dbo:almaMater ?almaMater.
  ?almaMater rdf:type dbo:University.
  FILTER (LANG(?almaMater) = ""ja"")
}

# Step 5: Find the native country of the residence of the politician from step 1
SELECT DISTINCT ?nativeCountry WHERE {
  ?politician dbo:nationality ?nationality.
  ?nationality rdfs:label ?nativeCountryLabel.
  FILTER (LANG(?nativeCountryLabel) = ""en"")
}
```",8,15,9,3,3,3,3,71,0,0,2,0,0.0,0
547,49,test,Give me the resting place of the child of James Burton (property developer) and resting place of the awardee of the award of Gerald Graham.,SELECT ?result WHERE { <http://dbpedia.org/resource/James_Burton_(property_developer)> <http://dbpedia.org/ontology/child> ?v2 . <http://dbpedia.org/resource/Gerald_Graham> <http://dbpedia.org/property/awards> ?v0 . ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . ?v1 <http://dbpedia.org/property/awards> ?v0 . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
# Query for the resting place of a child of James Burton (property developer)
SELECT ?child ?restingPlace WHERE {
  ?person dbo:spouse|dbo:childOf dbr:James_Burton_(property_developer) .
  ?person foaf:name ?child .
  OPTIONAL { ?person dbp:placeOfBurial ?restingPlace . }
} LIMIT 1

# Query for the resting place of an awardee associated with Gerald Graham
SELECT ?awardee ?restingPlace WHERE {
  ?award dbo:recipient ?awardee ;
         dbo:name ?awardName .
  FILTER(CONTAINS(LCASE(?awardName), ""gerald graham"")) .
  OPTIONAL { ?awardee dbp:placeOfBurial ?restingPlace . }
} LIMIT 1
```",5,5,6,3,2,3,3,71,0,0,2,0,0.0,0
378,66,test,"Give me the war of the person born as Carl Pontus Gahn and war of the commander in Peninsular War and claim to fame of the commander in the war, that is a military conflict and a societal event and an event, of Thomas Trigge.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Peninsular_War> <http://dbpedia.org/ontology/commander> ?v6 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Thomas_Trigge> <http://dbpedia.org/ontology/battle> ?v1 . ?v3 <http://dbpedia.org/property/birthName> ""Carl Pontus Gahn""@en . ?v6 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/ontology/commander> ?v2 . ?v2 <http://dbpedia.org/ontology/knownFor> ?result . ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. }","```sparql
# Query for Carl Pontus Gahn (Pontus Wiktorin) and his involvement in wars
SELECT ?person ?birthName WHERE {
  ?person rdfs:label ""Pontus Wiktorin""@en .
  OPTIONAL { ?person foaf:name ?birthName . }
  OPTIONAL { ?person dbo:nationality dbr:Sweden . }
}

# Query for the Peninsular War commander and their claim to fame
SELECT ?commander ?fame WHERE {
  ?commander rdfs:label ""Arthur Wellesley, 1st Duke of Wellington""@en .
  ?commander dbo:occupation dbr:Military_person .
  OPTIONAL { ?commander dbo:awardReceived ?fame . }
}

# Query for Thomas Trigge and any notable events
SELECT ?person ?event WHERE {
  ?person rdfs:label ""Thomas Trigge""@en .
  OPTIONAL { ?person dbo:memberOf ?event . }
}
```",7,10,8,3,3,3,3,71,0,0,2,0,0.0,0
9,56,test,"Give me the alma mater of Allen Hill (scientist) and figure known as the nickname of the entity, that is an organisation and an educational institution, in Northern Ireland and alma mater of the mayor, that is a politician, of Northern Ireland Forum.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/nickname> ?v1 . <http://dbpedia.org/resource/Northern_Ireland_Forum> <http://dbpedia.org/property/leader> ?v2 . ?v2 <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://dbpedia.org/property/nickname> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Northern_Ireland> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. <http://dbpedia.org/resource/Allen_Hill_(scientist)> <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
# Query for Allen Hill's alma mater
SELECT ?almaMater WHERE {
  dbpedia:Allen_Hill_(scientist) dbo:almaMater ?almaMater .
}

# Query to find the mayor of the Northern Ireland Forum and their alma mater
SELECT ?mayor ?almaMater WHERE {
  ?mayor dbo:position ""Mayor""@en ;
         dbo:memberOf dbpedia:Northern_Ireland_Forum ;
         dbo:almaMater ?almaMater .
}

# Query to find an organization/educational institution in Northern Ireland with a nickname
SELECT ?entity ?nickname WHERE {
  ?entity rdf:type dbo:EducationalInstitution ;
          dbo:location dbc:Northern_Ireland ;
          rdfs:label ?name ;
          foaf:nick ?nickname .
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
312,9,test,"Give me the entity in the administration, that is a settlement and a region and Italian and a state, of Democratic Party (Italy) and entity in the birthplace of Giorgio Grigolli.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. ?v1 <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Democratic_Party_(Italy)> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Giorgio_Grigolli> <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?result <http://dbpedia.org/ontology/province> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?entityInAdministration ?birthEntity
WHERE {
  # Entity in the administration
  ?entityInAdministration a dbo:Settlement ;
                         dbo:country dbr:Italy ;
                         (dbo:stateOrProvince|a) ?type .
  FILTER(?type IN (dbr:Region_of_Italy, dbr:State_of_Italy))
  
  OPTIONAL {
    ?party dbp:member ?person .
    ?person dbo:affiliation dbr:Democratic_Party_(Italy) ;
            dbo:residence ?entityInAdministration .
  }
  
  # Entity in the birthplace of Giorgio Grigolli
  dbr:Giorgio_Grigolli dbo:birthPlace ?birthEntity .
}
```",4,8,5,2,2,2,2,9,0,0,587,0,0.0,0
232,69,test,"Give me the actor of the claim to fame, that is a film and a military conflict, of Sean Pertwee and child of the person born as the birth name of Jon Pertwee and native of the residence, that is a settlement and British, of the native, that is a politician and an office holder, of France.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/property/birthName> ?v4 . ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/property/residence> ?v2 . ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/France> . <http://dbpedia.org/resource/Sean_Pertwee> <http://dbpedia.org/ontology/knownFor> ?v7 . ?v3 <http://dbpedia.org/property/birthName> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v7 <http://dbpedia.org/ontology/starring> ?result . ?v3 <http://dbpedia.org/ontology/child> ?result . },"```sparql
# Step 1: Find Sean Pertwee's notable works (film/military conflict)
SELECT ?work WHERE {
  wd:Q1234567 dbo:notableWork ?work .
  FILTER EXISTS { ?work rdf:type/(dbo:Film|dbo:MilitaryConflict) }
}

# Step 2: Find Jon Pertwee's birth name and residence
SELECT ?birthName ?residence WHERE {
  wd:Q6543210 foaf:name ?birthName .
  wd:Q6543210 dbo:birthPlace ?residence .
}

# Step 3: Identify a British settlement in France associated with a politician/office holder
SELECT ?settlement ?politician WHERE {
  ?settlement rdf:type dbo:Settlement ;
              dbo:country dbr:France ;
              dbo:native ?politician .
  ?politician rdf:type/(dbo:Politician|dbo:OfficeHolder) ;
              foaf:nationality dbr:United_Kingdom .
}

# Step 4: Connect these elements to find the actor related to Sean Pertwee's claim to fame
SELECT ?actor WHERE {
  ?work dbo:starring ?actor .
  ?actor rdf:type dbo:Actor .
}
```

Note: Replace `wd:Q1234567` and `wd:Q6543210` with the actual DBpedia identifiers for Sean Pertwee and Jon Pertwee, respectively. The query assumes these identifiers are known or can be found through preliminary queries.",8,14,9,3,3,3,3,71,0,0,1,0,0.0,0
391,70,test,"Give me the actor of the movie, that is a movie and a work and a television show, with the professional in  and native of the figure known as Hub City and actor of the claim to fame, that is a work, of the spouse of Sherry Hormann.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v3 <http://dbpedia.org/property/starring> ?result . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://dbpedia.org/property/nickname> ""Hub City""@en . ?result <http://dbpedia.org/ontology/birthPlace> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v7 <http://dbpedia.org/ontology/starring> ?result . ?v3 <http://dbpedia.org/property/starring> ?v1 . ?v0 <http://dbpedia.org/ontology/knownFor> ?v7 . ?v1 <http://dbpedia.org/property/occupation> """"@en . <http://dbpedia.org/resource/Sherry_Hormann> <http://dbpedia.org/ontology/spouse> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actor WHERE {
  # Step 1: Identify Sherry Hormann's spouse
  ?spouse dbo:spouse dbr:Sherry_Hormann .
  
  # Step 2: Find the claim to fame of Sherry Hormann's spouse
  ?claimToFame dbo:creator ?spouse ;
               a dbo:Work .

  # Step 3: Determine the actor associated with this claim to fame
  ?actor dbo:actedIn ?claimToFame .
  
  # Step 4: Find the professional and native city of this actor
  ?actor dbo:birthPlace ?nativeCity ;
         dbo:professionLocation ?professionalCity .

  # Step 5: Identify a movie, work, and television show associated with this actor
  ?project dbo:starring ?actor ;
           a dbo:Film , dbo:Work , dbo:TelevisionShow .
  
  # Step 6: Cross-reference Hub City
  FILTER(?nativeCity = dbr:Hub_City OR ?professionalCity = dbr:Hub_City)
}
```",8,12,9,3,3,3,3,71,0,0,1,0,0.0,0
161,28,test,"Give me the military force of Spanish Civil War and military force of the force, that is a societal event and an event and a military conflict, of Francisco Franco and commander in Biscay Campaign.",SELECT ?result WHERE { <http://dbpedia.org/resource/Biscay_Campaign> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Franco> . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce ?event ?commander WHERE {
  # Military forces in the Spanish Civil War
  VALUES ?civilWar { dbr:Spanish_Civil_War }
  
  ?militaryForce dbo:partOf ?civilWar .
  
  OPTIONAL {
    # Societal event and military conflict involving Francisco Franco
    ?francoEvent dbo:wikiPageRedirects ?event ;
                rdfs:label ""Francisco Franco""@en .
    
    ?commander dbo:wikiPageRedirects dbr:Biscay_Campaign ;
               rdfs:label ?name .
  }
}
```",4,7,5,2,3,3,3,71,0,0,3,0,0.0,0
783,20,test,"Give me the band member of the person born, that is an artist and a musical artist, as the persona of Ebony Reigns and associated musical artist of the band member of the person born as Samuel Ofori Amponsah.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v5 . <http://dbpedia.org/resource/Ebony_Reigns> <http://xmlns.com/foaf/0.1/givenName> ?v4 . ?v1 <http://dbpedia.org/property/birthName> ""Samuel Ofori Amponsah""@en . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v5 <http://dbpedia.org/property/birthName> ?v4 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandMember ?associatedArtist WHERE {
  # Find band members or associated artists of Ebony Reigns (Priscilla Opoku-Kwarteng)
  OPTIONAL {
    dbr:Ebony_Reigns dbo:member ?bandMember .
    ?bandMember dbo:associatedMusicalArtist ?associatedArtist .
  }
  
  # Find band members or associated artists of Samuel Ofori Amponsah
  OPTIONAL {
    dbr:Samuel_Ofori_Amponsah dbo:member ?samBandMember .
    ?samBandMember dbo:associatedMusicalArtist ?associatedArtist .
  }

  FILTER(?bandMember = ?samBandMember)
}
```",6,8,7,3,2,3,2,20,0,0,1,0,0.0,0
281,64,test,"Give me the war of the awardee of the award of Jonathon Band and war of the profession, that is a military unit, of the professional, that is an office holder and a politician, in New Zealand Army and entity in Colony of New Zealand.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Colony_of_New_Zealand> . ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v2 <http://dbpedia.org/property/awards> ?v3 . ?v0 <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/New_Zealand_Army> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Jonathon_Band> <http://dbpedia.org/property/awards> ?v3 . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/property/occupation> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?jonathonBandAward ?war ?militaryUnit ?politician ?entityInColony
WHERE {
  # Find Jonathon Band and his award
  ?jonathonBand a dbo:Person ;
               foaf:name ""Jonathon Band"" ;
               dbo:honoraryTitle ?award .
  
  # Determine the war associated with the award
  ?award dbo:relatedToWar ?war .

  # Identify Jonathon Band's military unit or profession in New Zealand Army
  ?jonathonBand dbo:militaryUnit ?militaryUnit ;
                dbo:nationality dbr:New_Zealand .
  
  # Find a politician who was an office holder in the Colony of New Zealand
  ?politician a dbo:Politician, dbo:OfficeHolder ;
              dbo:residence dbr:Colony_of_New_Zealand ;
              dbo:militaryUnit ?entityInColony .

  # Link military units or professions
  FILTER(?militaryUnit = ?entityInColony)
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
801,50,test,"Give me the associated musical artist of the writer, that is a musical artist and an artist, of 40 Dayz & 40 Nightz and producer of the work, that is a musical work and a song and a work, of the professional, that is a musical artist, in Rapper.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/writer> ?v0 . ?v4 <http://dbpedia.org/ontology/producer> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/40_Dayz_&_40_Nightz> <http://dbpedia.org/property/writer> ?v3 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v0 <http://dbpedia.org/property/occupation> ""Rapper""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artist WHERE {
  ?song dbo:title ""40 Dayz & 40 Nightz"" ;
        a dbo:Song ;
        dbo:composer ?writer .
  
  ?writer foaf:name ?name ;
          a dbo:MusicalArtist, dbo:Artist .

  OPTIONAL { 
    ?song dbo:producer ?producer .
    FILTER (?producer = ?writer)
  }

  VALUES ?artist { ?writer }
}
```",5,11,6,3,2,3,3,71,0,0,9,0,0.0,0
435,20,test,"Give me the work of Article 62, Section IV of Constitution of Iceland and territory administered from Reykjavík and region of the time zone in Bombali Shebora Chiefdom.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Reykjavík> . ?result <http://dbpedia.org/ontology/timeZone> ?v3 . ?result <http://dbpedia.org/property/author> ""Article 62, Section IV of Constitution of Iceland""@en . <http://dbpedia.org/resource/Bombali_Shebora_Chiefdom> <http://dbpedia.org/ontology/timeZone> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

# Query for territories administered by Reykjavík
SELECT ?territory WHERE {
  ?territory dbo:administrativeArea dbr:Reykjavík.
}

# Query for time zone of Bombali Shebora Chiefdom
SELECT ?timeZone WHERE {
  dbr:Bombali_Shebora_Chowchiefdom dbo:timeZone ?timeZone.
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
232,64,test,"Give me the actor of Dog Soldiers (film) and native of the residence, that is a settlement and British, of the native, that is a politician and an office holder, of France and child of the person born as the birth name of Jon Pertwee.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/property/birthName> ?v3 . ?v0 <http://dbpedia.org/property/residence> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v2 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Dog_Soldiers_(film)> <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/France> . ?v2 <http://dbpedia.org/property/birthName> ?v3 . },"```sparql
# Step 1: Find Jon Pertwee's birth name
SELECT ?birthName WHERE {
  wd:Q12345 foaf:name ?name .
  OPTIONAL { wd:Q12345 schema:birthName ?birthName . }
}

# Step 2: Find children of Jon Pertwee who are politicians and office holders in France
SELECT DISTINCT ?child WHERE {
  ?child dbo:parent wd:Q12345 .
  ?child dbo:occupation/schema:jobTitle ?occupation .
  FILTER(CONTAINS(LCASE(?occupation), ""politician"") && CONTAINS(LCASE(?occupation), ""office holder""))
  ?child dbo:nationality wd:Q142 . # France
}

# Step 3: Identify the native residence of this French politician that is a British settlement
SELECT DISTINCT ?residence WHERE {
  ?child dbo:birthPlace ?residence .
  ?residence wdt:P17 wd:Q145 . # British
  ?residence wdt:P31/wdt:P279* wd:Q515 . # Settlement
}

# Step 4: Find an actor from ""Dog Soldiers"" who is native to this settlement
SELECT DISTINCT ?actor WHERE {
  ?film dbo:starring ?actor .
  ?film foaf:name ""Dog Soldiers""@en .
  ?actor dbo:birthPlace ?residence .
  FILTER(?residence = wd:Q123456) # Replace with actual residence URI from step 3
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
232,49,test,"Give me the child of the person born as John Devon Roland Pertwee and native of the residence, that is a settlement and British, of the native, that is a politician and an office holder, of France.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/France> . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/residence> ?v1 . ?v2 <http://dbpedia.org/property/birthName> ""John Devon Roland Pertwee""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v2 <http://dbpedia.org/ontology/child> ?result . }","```sparql
SELECT ?child WHERE {
  ?person foaf:name ""John Devon Roland Pertwee""@en .
  ?person dbo:birthPlace dbr:United_Kingdom .
  ?person dbo:child ?child .

  OPTIONAL { 
    ?politician foaf:name ""Charles de Gaulle""@fr .
    ?politician dbo:nationality dbr:Francois .
    ?politician dbo:country dbr:France .
    ?politician dbo:officeHolder true .
  }

  FILTER EXISTS {
    ?child foaf:name ""Emily Pertwee""@en .
  }
}
```",5,9,6,3,2,3,3,71,0,0,1,0,0.0,0
701,50,test,Give me the parent of the child of the child of Seti I and spouse of the father of Merneptah.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v3 . <http://dbpedia.org/resource/Merneptah> <http://dbpedia.org/property/father> ?v3 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seti_I> . ?result <http://dbpedia.org/ontology/child> ?v4 . ?v4 <http://dbpedia.org/property/father> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  # Seti I and his child
  dbr:Seti_I dbo:child dbr:Ramesses_II .
  
  # Ramesses II's children (one of them is Merneptah)
  dbr:Ramesses_II dbo:child ?merneptah .

  # Identify Merneptah
  ?merneptah rdfs:label ""Merneptah""@en .

  # Spouse of Ramesses II
  dbr:Ramesses_II dbo:spouse dbr:Nefertari .
  
  # Check if the parent of Seti I's grandchild is also the spouse of Merneptah's father
  ?parent rdfs:label ""Ramesses II""@en .
}
```",5,5,6,3,2,3,3,71,0,0,2,0,0.0,0
328,47,test,"Give me the awardee of the award of Bruce Fraser, 1st Baron Fraser of North Cape and commander in the force of the person decedent at Budapest.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/commander> ?v0 . ?result <http://dbpedia.org/property/awards> ?v2 . ?v4 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape> <http://dbpedia.org/property/awards> ?v2 . ?v0 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Budapest> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?awardee WHERE {
  # Identify Bruce Fraser and his award
  dbr:Bruce_Fraser_1st_Baron_Fraser_of_North_Cape dbo:awardReceived dbr:Knight_Grand_Cross_of_the_Order_of_the_Bath .

  # Find the awardee related to this award, focusing on a commander role at Budapest
  ?awardee dbo:awardReceived dbr:Knight_Grand_Cross_of_the_Order_of_the_Bath .
  ?awardee dbo:occupation dbr:Military_commander .
  ?awardee dbo:placeOfBirth ?location .
  FILTER(CONTAINS(LCASE(?location), ""budapest""))
}
```",5,5,6,3,2,3,3,71,0,0,5,0,0.0,0
747,66,test,Give me the band of the person born as the persona of Shèna and band of the writer of Apollo (Hardwell song) and person born on the birth date of Pavlo Khudzik.,SELECT ?result WHERE { ?v6 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/birthDate> ?v3 . <http://dbpedia.org/resource/Apollo_(Hardwell_song)> <http://dbpedia.org/property/writer> ?v6 . ?v2 <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Shèna> <http://xmlns.com/foaf/0.1/givenName> ?v1 . <http://dbpedia.org/resource/Pavlo_Khudzik> <http://dbpedia.org/ontology/birthDate> ?v3 . },"```sparql
# Query for the band of the person born as the persona of Shèna
SELECT ?band WHERE {
  ?person rdfs:label ""Shèna""@en .
  ?person dbo:associatedBand ?band .
}

UNION

# Query for the band of the writer of Apollo (Hardwell song)
SELECT ?band WHERE {
  ?song dbo:title ""Apollo""@en ;
        dbo:lyricsBy ?writer .
  ?writer dbo:associatedBand ?band .
  FILTER EXISTS { ?song dbo:artist ""Hardwell""@en }
}

UNION

# Query for the band of the person born on Pavlo Khudzik's birth date
SELECT ?band WHERE {
  ?pavlo dbo:birthday ?birthDate .
  ?person dbo:birthday ?birthDate ;
          dbo:associatedBand ?band .
  FILTER NOT EXISTS { ?person rdfs:label ""Pavlo Khudzik""@en }
}
```",7,7,8,3,3,3,3,71,0,0,1,0,0.0,0
492,64,test,"Give me the person decedent at the work of the author of French Algeria and person decedent at the capital, that is a settlement, of the country of Khemis Miliana District and commander in Franco-Hova Wars.",SELECT ?result WHERE { <http://dbpedia.org/resource/Khemis_Miliana_District> <http://dbpedia.org/ontology/country> ?v0 . ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . ?v0 <http://dbpedia.org/ontology/capital> ?v1 . <http://dbpedia.org/resource/French_Algeria> <http://dbpedia.org/property/author> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . ?v2 <http://dbpedia.org/property/author> ?v3 . <http://dbpedia.org/resource/Franco-Hova_Wars> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT DISTINCT ?personDecedent WHERE {
  # Person decedent at the work ""French Algeria""
  ?work dcterms:title ""French Algeria""@en .
  ?author dbo:creator ?work .
  ?author dbo:deathPlace ?place .
  ?place dbp:deceased ?personDecedent .

  UNION

  # Person decedent at the capital of Khemis Miliana District
  ?district dbp:name ""Khemis Miliana District""@en .
  ?capital dbo:administrativeUnit ?district ;
           a dbo:Settlement .
  ?resident dbo:residence ?capital .
  ?resident dbp:deceased ?personDecedent .

  UNION

  # Person decedent who was a commander in the Franco-Hova Wars
  ?war dbp:name ""Franco-Hova Wars""@en ;
       dbo:commander ?commander .
  ?commander dbp:deathPlace ?place2 .
  ?place2 dbp:deceased ?personDecedent .
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
184,53,test,"Give me the child of Archduke Joseph August of Austria and parent of the native of the landmark at elevation, that is a settlement, of 96.0 and parent of the child of Archduke Joseph Francis of Austria.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v1 . ?result <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_August_of_Austria> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Francis_of_Austria> . ?v3 <http://dbpedia.org/ontology/elevation> ""96.0""^^<http://www.w3.org/2001/XMLSchema#double> . ?v2 <http://dbpedia.org/ontology/birthPlace> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?commonParent WHERE {
  # Step 1: Find a child of Archduke Joseph August of Austria
  ?child dbr:Archduke_Joseph_August_of_Austria dbo:child .

  # Step 2: Find the parent of this child
  ?parent dbo:parent ?child .

  # Step 3: Find a settlement with elevation 96.0 and its native
  ?settlement dbp:elevation ""96.0""^^xsd:float ;
              a dbo:Settlement .
  ?native dbo:nativePlace ?settlement .

  # Step 4: Find the parent of this native
  ?parent2 dbo:parent ?native .

  # Step 5: Find a child of Archduke Joseph Francis of Austria
  ?child2 dbr:Archduke_Joseph_Francis_of_Austria dbo:child .

  # Step 6: Find the parent of this child
  ?parent3 dbo:parent ?child2 .

  # Step 7: Determine the common entity between the two parents found in steps 2 and 6
  FILTER (?parent = ?parent3)
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
701,31,test,Give me the parent of the child of the spouse of Amun-her-khepeshef and parent of Henuttawy (19th dynasty).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Henuttawy_(19th_dynasty)> . ?v0 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Amun-her-khepeshef> <http://dbpedia.org/ontology/spouse> ?v1 . ?v1 <http://dbpedia.org/ontology/child> ?v0 . },"```sparql
# Step 1: Find Amun-her-khepeshef's spouse
SELECT ?spouse WHERE {
    ?amunherkhepeshef dbo:spouse ?spouse .
    ?amunherkhepeshef rdfs:label ""Amun-her-khepeshef""@en .
}

# Step 2: Find a child of the spouse
SELECT ?child WHERE {
    ?spouse dbo:child ?child .
    # Assuming we have identified ?spouse from the previous query
}

# Step 3: Determine parent of this child (could be spouse or another)
SELECT ?parent WHERE {
    ?child dbo:parent ?parent .
    # Assuming we have identified ?child from the previous query
}

# Step 4: Find Henuttawy's parent
SELECT ?henuttawyparent WHERE {
    ?henuttawy dbo:parent ?henuttawyparent .
    ?henuttawy rdfs:label ""Henuttawy""@en .
}

# Step 5: Identify common ancestor between the two parents found in steps 3 and 4
SELECT DISTINCT ?commonAncestor WHERE {
    VALUES (?parent1 ?parent2) { 
        (# Assuming we have identified ?parent from step 3 #)
        (# Assuming we have identified ?henuttawyparent from step 4 #)
    }
    ?ancestor dbo:child ?parent1 .
    ?ancestor dbo:child ?parent2 .
}
```

Note: The above SPARQL queries are structured to be executed sequentially, with each query depending on the results of the previous one. In practice, you would need to replace placeholders like `# Assuming we have identified ... #` with actual values obtained from executing prior queries.",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
328,50,test,"Give me the commander in the force of the person decedent at Budapest and leader of the office, that is a government agency, of Joseph Stalin.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Budapest> . ?v4 <http://dbpedia.org/ontology/commander> ?v0 . ?v4 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v3 <http://dbpedia.org/ontology/leader> ?result . <http://dbpedia.org/resource/Joseph_Stalin> <http://dbpedia.org/property/office> ?v3 . },"```sparql
SELECT ?person WHERE {
  ?event dbo:location dbr:Budapest .
  ?event dbo:deathOf dbr:Imre_Nagy .
  ?event dbo:commander ?person .
  
  OPTIONAL { 
    ?office dbo:leader ?person ;
            dbo:country dbr:Soviet_Union ;
            dbo:headOfAgency dbr:NKVD .
  }
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
179,19,test,Give me the parent of the child of the parent of Vajiralongkorn and person born as the birth name of Sirikit.,SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Sirikit> <http://dbpedia.org/property/birthName> ?v2 . ?v0 <http://dbpedia.org/ontology/child> ?v4 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Vajiralongkorn> . ?result <http://dbpedia.org/property/birthName> ?v2 . },"```sparql
# Step 1: Get Vajiralongkorn's parent (Bhumibol Adulyadej)
SELECT ?parent WHERE {
  wd:Q11999 wdt:P22 ?parent .
}

# Step 2: Get the child of Bhumibol Adulyadej (Sirindhorn)
SELECT ?child WHERE {
  ?bhumibol wdt:P40 ?child .
  FILTER(?bhumibol = <http://dbpedia.org/resource/Bhumibol_Adulyadej>)
}

# Step 3: Get Sirikit's birth name (Srinagarindra)
SELECT ?birthName WHERE {
  wd:Q11998 wdt:P1476 ?birthName .
}

# Step 4: Get the parent of Srinagarindra (Prince Naris)
SELECT ?parent WHERE {
  wd:Q1234567 wdt:P22 ?parent . # Assuming Q1234567 is the DBpedia ID for Srinagarindra
}

# Step 5: Get the child of Prince Naris (Bhumibol Adulyadej)
SELECT ?child WHERE {
  ?naris wdt:P40 ?child .
  FILTER(?naris = <http://dbpedia.org/resource/Prince_Naris>)
}

# Step 6: Get the parent of Bhumibol Adulyadej (Prince Mahidol Adulyadej)
SELECT ?parent WHERE {
  wd:Q11999 wdt:P22 ?parent .
}
```",5,5,6,3,2,3,2,20,0,0,1,0,0.0,0
77,18,test,Give me the force of the mayor of Congress Poland and war of the awardee of the award of Maxim Grigorievich Vlasov.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> ?v3 . ?v2 <http://dbpedia.org/property/awards> ?v1 . <http://dbpedia.org/resource/Congress_Poland> <http://dbpedia.org/property/leader> ?v3 . <http://dbpedia.org/resource/Maxim_Grigorievich_Vlasov> <http://dbpedia.org/property/awards> ?v1 . ?v2 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
# Query for the force of the Mayor of Congress Poland
SELECT ?mayor ?force WHERE {
  ?congressPoland dbo:wikiPageRedirects db:Q1234567 . # Assuming Q1234567 is the DBpedia ID for Congress Poland
  ?congressPoland dbo:mayor ?mayor .
  ?mayor dbo:militaryForce ?force .
}

UNION

# Query for the war involving Maxim Grigorievich Vlasov
SELECT ?war WHERE {
  db:Q1234568 dbo:participatedInWar ?war . # Assuming Q1234568 is the DBpedia ID for Maxim Grigorievich Vlasov
}
```",5,5,6,3,2,3,2,20,0,0,24,0,0.0,0
303,20,test,"Give me the entity in the country, that is a country, of El Valle de Antón and party of Guillermo Endara and party of Arnulfo Arias.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/El_Valle_de_Antón> <http://dbpedia.org/ontology/country> ?v3 . <http://dbpedia.org/resource/Arnulfo_Arias> <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Guillermo_Endara> <http://dbpedia.org/ontology/party> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?entity WHERE {
  # El Valle de Antón in Panama
  dbr:El_Valle_de_Antón dbo:country dbr:Panama .

  # Guillermo Endara's political party
  dbr:Guillermo_Endara dbo:politicalParty ?party1 .
  
  # Arnulfo Arias' political party
  dbr:Arnulfo_Arias dbo:politicalParty ?party2 .

  # Entity in Panama that is a country or has significant autonomy
  ?entity dbo:country dbr:Panama ;
          (dbo:isPartOf|dbo:hasAutonomy) ?autonomousEntity .
  
  FILTER EXISTS { ?autonomousEntity rdfs:label ""Country""@en }
}
```",4,5,5,2,3,2,3,28,0,0,1,0,0.0,0
959,24,test,"Give me the native of the residence, that is a country, of Yōichi Masuzoe and manager of 2013 Júbilo Iwata season.",SELECT ?result WHERE { <http://dbpedia.org/resource/Yōichi_Masuzoe> <http://dbpedia.org/property/residence> ?v2 . ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . <http://dbpedia.org/resource/2013_Júbilo_Iwata_season> <http://dbpedia.org/ontology/manager> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
SELECT ?nativeCountry WHERE {
  ?person foaf:name ""Yōichi Masuzoe""@ja .
  ?person dbo:position ""Manager""@en ;
          dbo:team <http://dbpedia.org/resource/Júbilo_Iwata> ;
          dbo:managerSeason ?season .
  FILTER(YEAR(?season) = 2013)
  
  OPTIONAL { ?person dbo:residence ?residence . }
  
  ?residence a dbo:Country ;
             rdfs:label ?countryLabel .
  
  BIND(IF(BOUND(?residence), STR(?residence), ?nativeCountry) AS ?nativeCountry)
}
```",3,4,4,2,2,3,3,71,0,0,3,0,0.0,0
617,64,test,"Give me the child of the child, that is a royalty, of the successor, that is a royalty, of Antiochus II Theos and spouse of Laodice IV and parent of the child of the commander in Battle of Panium.",SELECT ?result WHERE { <http://dbpedia.org/resource/Antiochus_II_Theos> <http://dbpedia.org/ontology/successor> ?v3 . ?result <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/ontology/child> ?v1 . ?v0 <http://dbpedia.org/ontology/child> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Laodice_IV> <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Battle_of_Panium> <http://dbpedia.org/ontology/commander> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/father> ?v3 . },"```sparql
SELECT ?finalPerson WHERE {
  # Step 1: Identify Antiochus II Theos and his spouse Laodice IV
  ?antiochus2 dbo:spouse ?laodiceIV .
  ?antiochus2 foaf:name ""Antiochus II""@en .

  # Step 2: Find the successor of Antiochus II Theos who is royalty
  ?successor dbo:succeededBy ?antiochus2 ;
             a dbo:Monarch .

  # Step 3: Identify the commander in Battle of Panium and their child
  ?battle dbp:battle ""Battle of Panium""@en .
  ?commander dbp:commanded ?battle ;
             dbo:child ?childOfCommander .

  # Step 4: Determine the parent of this child
  ?parent dbo:child ?childOfCommander .

  # Step 5: Find the spouse of Laodice IV
  ?laodiceIV dbo:spouse ?successorSpouse .

  # Step 6: Identify the child of the successor
  ?successor dbo:child ?childOfSuccessor .

  # Step 7: Determine the child of this child who is royalty
  ?childOfSuccessor dbo:child ?finalPerson .
  ?finalPerson a dbo:Monarch .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
281,59,test,"Give me the entity in the birth place, that is a country, of the leader, that is a politician, of 1962 New South Wales state election and war of the awardee of the award of Jonathon Band.",SELECT ?result WHERE { <http://dbpedia.org/resource/1962_New_South_Wales_state_election> <http://dbpedia.org/property/leader> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/place> ?v5 . <http://dbpedia.org/resource/Jonathon_Band> <http://dbpedia.org/property/awards> ?v3 . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/ontology/birthPlace> ?v5 . ?v2 <http://dbpedia.org/property/awards> ?v3 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
# Step 1: Find the leader of the 1962 New South Wales state election
SELECT ?leader WHERE {
  ?election dbo:year ""1962"" ;
            dbo:stateOrTerritory dbr_New_South_Wales ;
            dbo:winner ?leader .
}

# Step 2: Determine the birthplace country of this leader
SELECT DISTINCT ?country WHERE {
  ?leader dbo:birthPlace ?birthPlace .
  ?birthPlace geo:location ?coordinates .
  ?country dbp:capital ?capital .
  ?capital geo:location ?capCoordinates .
  FILTER (sameCountry(?coordinates, ?capCoordinates))
}

# Step 3: Identify Jonathon Band's award
SELECT DISTINCT ?award WHERE {
  dbr_Jonathan_Band dbo:awardReceived ?award .
}

# Step 4: Find the war associated with the awardee of the same award
SELECT DISTINCT ?war WHERE {
  ?otherAwardee dbo:awardReceived ?award ;
                dbo:occupation dbo:Military_person .
  ?war dbo:awardees ?otherAwardee .
}

# Helper function to determine if two coordinates are in the same country
FILTER (sameCountry(?coordinates, ?capCoordinates)) {
  BIND(IF(STRSTARTS(STR(?coordinates), STR(?capCoordinates)), true, false) AS ?sameCountry)
}
```",6,8,7,3,2,3,3,71,0,0,1,0,0.0,0
963,20,test,"Give me the administration of the ruling party, that is a political party, in the location for 21205 and entity in the region, that is a country, of the time zone of Herzegovina-Neretva Canton.","SELECT ?result WHERE { <http://dbpedia.org/resource/Herzegovina-Neretva_Canton> <http://dbpedia.org/property/timeZone> ?v1 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v2 <http://dbpedia.org/property/timeZone> ?v1 . ?result <http://dbpedia.org/ontology/country> ?v2 . ?v4 <http://dbpedia.org/property/leaderParty> ?v5 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/property/leaderParty> ?v5 . ?v4 <http://dbpedia.org/ontology/postalCode> ""21205"" . }","```sparql
# Step 1: Identify Herzegovina-Neretva Canton and its country
SELECT ?country WHERE {
  wd:Q1118 wdt:P17 ?country .
}

# Step 2: Find the city or area associated with postal code 21205 in Bosnia and Herzegovina
SELECT ?city WHERE {
  ?city wdt:P281 ""21205"" ;
        wdt:P17 wd:Q30 . # Q30 is the DBpedia entity for Bosnia and Herzegovina
}

# Step 3: Determine the ruling political party in that city or area
SELECT DISTINCT ?party WHERE {
  ?event wdt:P159 ?party .
  ?event wdt:P131 ?city .
  ?event wdt:P580 ?start .
  FILTER NOT EXISTS { ?event wdt:P582 ?end . }
}

# Step 4: Find the administration of that ruling party
SELECT DISTINCT ?administration WHERE {
  ?party dbo:leader ?person .
  ?person foaf:name ?name .
  FILTER CONTAINS(LCASE(?name), ""bosnia and herzegovina"") # Assuming the leader's name contains a reference to Bosnia and Herzegovina
}
```",6,8,7,3,2,3,2,20,0,0,84,0,0.0,0
328,42,test,"Give me the commander in Eastern Front (World War II) and leader of the office, that is a government agency, of Joseph Stalin and awardee of the award of Bruce Fraser, 1st Baron Fraser of North Cape.","SELECT ?result WHERE { <http://dbpedia.org/resource/Joseph_Stalin> <http://dbpedia.org/property/office> ?v1 . ?result <http://dbpedia.org/property/awards> ?v2 . ?v1 <http://dbpedia.org/ontology/leader> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. <http://dbpedia.org/resource/Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape> <http://dbpedia.org/property/awards> ?v2 . <http://dbpedia.org/resource/Eastern_Front_(World_War_II)> <http://dbpedia.org/ontology/commander> ?result . }","```sparql
SELECT ?person ?name WHERE {
  # Find the commander on the Eastern Front during WWII
  ?person wdt:P39 wd:Q11174; # P39: position held, Q11174: Commander-in-Chief of the Soviet Armed Forces
          wdt:P106 wd:Q82955. # P106: occupation or field, Q82955: military personnel

  OPTIONAL {
    # Find leader of the People's Commissariat for Defence (Stalin's office)
    ?person wdt:P39 wd:Q11174.
  }

  OPTIONAL {
    # Find awardee of Bruce Fraser
    ?awardschema wdt:P170 wd:Q11912; # P170: award received, Q11912: Order of the Bath
                 wdt:P921 ?recipient.
    FILTER(?recipient = ?person).
  }

  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
488,66,test,"Give me the death place of the father, that is a politician, of Yūki Hideyasu and birth place of the commander in Boshin War and administration of the father of the spouse, that is a royalty, of Tokugawa Masako.",SELECT ?result WHERE { ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/property/leader> ?v2 . <http://dbpedia.org/resource/Yūki_Hideyasu> <http://dbpedia.org/property/father> ?v6 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Boshin_War> <http://dbpedia.org/ontology/commander> ?v3 . ?v6 <http://dbpedia.org/ontology/deathPlace> ?result . ?v1 <http://dbpedia.org/property/father> ?v2 . ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Tokugawa_Masako> . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
# Query 1: Death place of Yūki Hideyasu's father
SELECT ?deathPlace WHERE {
  ?person dbo:parent dbc:Yuki_Hideyasu .
  ?person dbo:deathPlace ?deathPlace .
}

# Query 2: Birthplace of a commander in the Boshin War
SELECT ?birthPlace WHERE {
  ?commander dbo:occupation dbr:Boshin_War_commander .
  ?commander dbo:birthPlace ?birthPlace .
}

# Query 3: Administration of Tokugawa Masako's spouse's father
SELECT ?administration WHERE {
  ?spouse dbo:spouse dbr:Tokugawa_Masako .
  ?spouse dbo:parent ?father .
  ?father dbo:administers ?administration .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
10,22,test,"Give me the associated musical artist of the person born, that is an artist, as Matt Colton and band member of the person born, that is an artist, as Luke Francis Vibert.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/property/birthName> ""Matt Colton""@en . ?v0 <http://dbpedia.org/property/birthName> ""Luke Francis Vibert""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artist WHERE {
  # Matt Colton's association with Aphex Twin through mastering work
  ?masteringWork dbo:performer dbr:Aphex_Twin .
  ?masteringWork dbo:engineer dbr:Matt_Colton .

  # Luke Francis Vibert (Wagon Christ) association with Aphex Twin in the electronic music scene
  ?musician dbo:stageName dbr:Wagon_Christ ;
            dbo:birthName dbr:Luke_Francis_Vibert .
  
  OPTIONAL { 
    ?association dbo:associatedMusicalArtist dbr:Aphex_Twin .
    ?association dbo:artist ?musician .
  }

  # Aphex Twin as the common artist
  ?artist rdfs:label ""Aphex Twin""@en .
}
```",4,6,5,2,2,2,3,28,0,0,1,0,0.0,0
92,46,test,"Give me the associated musical artist of the person born, that is an artist, as Jim Sheppard and band member of the reference, that is an artist, to the name of Nevermore (2006 film).","SELECT ?result WHERE { <http://dbpedia.org/resource/Nevermore_(2006_film)> <http://xmlns.com/foaf/0.1/name> ?v2 . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://dbpedia.org/property/birthName> ""Jim Sheppard""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://xmlns.com/foaf/0.1/name> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artist WHERE {
  ?band dbo:member ?person .
  ?person foaf:name ""Jim Sheppard"" .
  ?band rdfs:label ""Nevermore (band)""@en .
  
  OPTIONAL { 
    ?person dbo:associatedBand ?artist .
    FILTER(?artist != ?band)
  }
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
767,69,test,"Give me the alma mater of the administration of George K. Nash and entity in the administration, that is a settlement, of the writer of Where It's At (Dustin Lynch album) and reference to the alter ego of the persona, that is a fictional character, of Matthew Burland.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/alterEgo> ""Matthew Burland""@en . ?result <http://dbpedia.org/ontology/state> ?v3 . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v3 <http://dbpedia.org/property/leaderParty> ?v4 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. <http://dbpedia.org/resource/Where_It's_At_(Dustin_Lynch_album)> <http://dbpedia.org/property/writer> ?v4 . ?v1 <http://dbpedia.org/property/alterEgo> ?v2 . ?v7 <http://dbpedia.org/ontology/almaMater> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v7 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/George_K._Nash> . }","```sparql
# Query for George K. Nash's alma mater
SELECT ?almaMater WHERE {
  ?nash dbo:almaMater ?almaMater .
  ?nash foaf:name ""George K. Nash"" .
}

UNION

# Query for entity in the administration of George K. Nash that is a settlement
SELECT ?settlement WHERE {
  ?administration dbo:member ?nash .
  ?nash foaf:name ""George K. Nash"" .
  ?administration dbo:location ?settlement .
  ?settlement rdf:type dbo:Settlement .
}

UNION

# Query for the writer of ""Where It's At"" by Dustin Lynch
SELECT ?writer WHERE {
  ?song dbo:lyricsBy ?writer .
  ?song foaf:name ""Where It's At (Dustin Lynch song)"" .
}

UNION

# Query for a settlement associated with the writer
SELECT ?settlement WHERE {
  ?writer dbo:birthPlace ?settlement .
  ?writer ?p ?o .
  FILTER(?p = dbo:lyricsBy && ?o = <http://dbpedia.org/resource/Where_It's_At_(Dustin_Lynch_song)>)
}

UNION

# Query for the alter ego of Matthew Burland's persona that is a fictional character
SELECT ?fictionalCharacter WHERE {
  ?burland dbo:fictionalAlterEgo ?fictionalCharacter .
  ?burland foaf:name ""Matthew Burland"" .
  ?fictionalCharacter rdf:type dbo:FictionalCharacter .
}

UNION

# Query for reference to the alter ego
SELECT ?reference WHERE {
  ?fictionalCharacter dbo:wikiPageRedirects ?reference .
}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
16,44,test,Give me the person born as the birth name of Gigi Rice and spouse of Ted McGinley and professional in the profession of Satomi Ishihara.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Gigi_Rice> <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Satomi_Ishihara> <http://dbpedia.org/property/occupation> ?v4 . ?result <http://dbpedia.org/property/occupation> ?v4 . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person rdfs:label ""Gina Rice""@en .
  OPTIONAL { ?person dbo:birthName ""Gina Marie Rice"" . }
  OPTIONAL { ?person dbo:spouse dbr:Ted_McGinley . }
  OPTIONAL { ?person dbo:occupation dbr/Actress . }
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
488,36,test,"Give me the birth place of Enomoto Takeaki and administration of the father of the spouse, that is a royalty, of Tokugawa Masako.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> ?v1 . ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Tokugawa_Masako> . <http://dbpedia.org/resource/Enomoto_Takeaki> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
# Query for Enomoto Takeaki's birthplace
SELECT ?birthPlace WHERE {
  dbpedia:Enomoto_Takeaki dbo:birthPlace ?birthPlace .
}

UNION

# Query for the administration of the father of Tokugawa Masako's spouse (if royalty)
SELECT ?administration WHERE {
  # Find Tokugawa Masako and her spouse
  dbpedia:Tokugawa_Masako dbo:spouse ?spouse .

  # Check if the spouse is royalty
  ?spouse rdf:type dbo:Monarch .
  
  # Get the father of the spouse
  ?spouse dbo:father ?father .

  # Find the administration or country associated with the father
  ?father dbo:country ?administration .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
161,57,test,"Give me the military force of the force, that is a societal event and a military conflict, of the predecessor of Indalecio Prieto and commander in the force, that is an event, of Emilio Mola and military force of Rif War.",SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Emilio_Mola> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v5 . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v5 <http://dbpedia.org/ontology/commander> ?v0 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Rif_War> . ?v0 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Indalecio_Prieto> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce WHERE {
  # Indalecio Prieto's predecessor in a military force that is both a societal event and a military conflict
  ?prietoPredecessor dbo:militaryConflict ?militaryEvent .
  ?militaryEvent rdf:type dbo:MilitaryConflict .
  ?militaryEvent dbo:isPartOf dbr:Spanish_Civil_War .

  # Emilio Mola's commander role in a military force that is an event
  ?emilioMolaCommanderRole dbo:militaryConflict ?militaryForce .
  ?militaryForce rdf:type dbo:MilitaryConflict .
  ?militaryForce dbo:isPartOf dbr:Spanish_Civil_War .

  # Military force of Rif War
  ?rifWarMilitaryForce dbo:militaryConflict dbr:Rif_War .
  ?rifWarMilitaryForce dbo:isPartOf dbr:Spanish_Civil_War .

  FILTER (?militaryEvent = ?militaryForce && ?militaryForce = ?rifWarMilitaryForce)
}
```",6,9,7,3,3,3,3,71,0,0,11,0,0.0,0
767,32,test,"Give me the entity in the administration, that is a settlement, of Green and alma mater of the administration of George K. Nash.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/George_K._Nash> . ?result <http://dbpedia.org/ontology/state> ?v1 . ?v1 <http://dbpedia.org/property/leaderParty> ""Green""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v3 <http://dbpedia.org/ontology/almaMater> ?result . }","```sparql
# Step 1: Find George K. Nash's Alma Mater
SELECT ?almaMater WHERE {
  ?nash dbo:almaMater ?almaMater .
  ?nash foaf:name ""George K. Nash""@en .
}

# Step 2: Identify the Administration He Was Part Of
SELECT ?administration WHERE {
  ?nash dbo:memberOf ?administration .
  ?nash foaf:name ""George K. Nash""@en .
}

# Step 3: Find a Settlement in That Administration Which is Also His Alma Mater
SELECT DISTINCT ?settlement WHERE {
  ?administration dbo:hasPart ?settlement .
  ?settlement rdf:type dbpedia-owl:Settlement .
  ?almaMater rdfs:label ?settlementLabel .
  FILTER (lang(?settlementLabel) = ""en"")
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
391,23,test,"Give me the native of the figure known as the nick name of Jackson, Tennessee.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v0 <http://dbpedia.org/property/nickname> ?v2 . <http://dbpedia.org/resource/Jackson,_Tennessee> <http://xmlns.com/foaf/0.1/nick> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?nativePlace WHERE {
  ?person dbo:nativePlace dbr:Jackson,_Tennessee .
  OPTIONAL { ?person rdfs:label ?nickname FILTER (lang(?nickname) = 'en') }
  FILTER EXISTS { ?person rdfs:label ?nickname }
}
```",3,3,4,3,1,3,3,71,0,0,176,0,0.0,0
404,22,test,"Give me the child of the father of Ernest Augustus, Duke of Brunswick and spouse of Princess Victoria Louise of Prussia.","SELECT ?result WHERE { <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/parent> ?v1 . }","```sparql
SELECT ?child WHERE {
  ?ernestAugustus dbo:father ?father .
  FILTER(STR(?ernestAugustus) = ""Ernest Augustus, Duke of Brunswick"")
  
  ?father dbo:child ?child .

  OPTIONAL { 
    ?princessVictoriaLouise dbo:spouse ?child .
    FILTER(STR(?princessVictoriaLouise) = ""Princess Victoria Louise of Prussia"")
  }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
427,58,test,"Give me the party of the father of Lamberto Andreotti and party of the person born, that is an office holder and a politician, as the birth name of Romano Prodi and reference to Partito Popolare Italiano.","SELECT ?result WHERE { <http://dbpedia.org/resource/Lamberto_Andreotti> <http://dbpedia.org/property/father> ?v5 . <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://dbpedia.org/property/birthName> ?v1 . ?v5 <http://dbpedia.org/ontology/party> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://xmlns.com/foaf/0.1/name> ""Partito Popolare Italiano""@en . ?v2 <http://dbpedia.org/ontology/party> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?fatherName ?fatherParty ?prodiParty WHERE {
  # Find Lamberto Andreotti's father and his political party
  dbr:Lamberto_Andreotti dbo:father ?father .
  ?father rdfs:label ?fatherName ;
          dbp:partyAffiliation ?fatherParty .

  FILTER (lang(?fatherName) = 'it')

  # Confirm Romano Prodi is an office holder and politician, and find his party
  dbr:Romano_Prodi dbo:officeHolder ?prodiOffice .
  dbr:Romano_Prodi dbo:politician ?prodiPolitician .
  dbr:Romano_Prodi dbp:partyAffiliation ?prodiParty .

  # Check for any reference to Partito Popolare Italiano
  OPTIONAL {
    ?father dbp:partyAffiliation dbr:Partito_Popolare_Italiano .
  }
  OPTIONAL {
    dbr:Romano_Prodi dbp:partyAffiliation dbr:Partito_Popolare_Italiano .
  }

}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
701,38,test,Give me the parent of the child of Ramesses II and spouse of the father of Merneptah.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v3 . <http://dbpedia.org/resource/Merneptah> <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ramesses_II> . },"```sparql
SELECT ?spouse WHERE {
  wd:Q1516 wdt:P22 ?spouse .
}
```",4,4,5,2,2,3,3,71,0,0,2,0,0.0,0
281,62,test,"Give me the war of New Zealand Army and war of the awardee of the award of Jonathon Band and entity in the birth place, that is a country, of the leader, that is a politician, of 1962 New South Wales state election.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> ?v6 . ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v3 <http://dbpedia.org/property/awards> ?v4 . <http://dbpedia.org/resource/1962_New_South_Wales_state_election> <http://dbpedia.org/property/leader> ?v0 . ?v0 <http://dbpedia.org/ontology/birthPlace> ?v6 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Jonathon_Band> <http://dbpedia.org/property/awards> ?v4 . <http://dbpedia.org/resource/New_Zealand_Army> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war ?awardee ?leader ?birthCountry WHERE {
  # Step 1: Identify the awardee of an award by Jonathon Band
  ?award dbo:recipient ?awardee .
  ?award dbo:givenBy dbr:Jonathon_Band .

  # Step 2: Determine wars involving the New Zealand Army and the identified awardee
  ?war dbo:participatingMilitaryUnit [
    dbo:militaryBranch dbr:New_Zealand_Army ;
    dbo:member ?awardee .
  ] .

  # Step 3: Identify the leader of the 1962 New South Wales state election
  ?election dbo:leader ?leader .
  ?election dbo:electionDate ?date .
  FILTER (YEAR(?date) = 1962 && CONTAINS(LCASE(STR(?election)), ""new south wales""))

  # Step 4: Find the birthplace country of this leader
  ?leader dbo:birthPlace ?birthPlace .
  ?birthPlace a dbo:Country .

  BIND(?birthPlace AS ?birthCountry)
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
994,39,test,"Give me the associated musical artist of Red Tide (band) and band member of the person born, that is a musical artist, as the persona of Don Dokken.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . <http://dbpedia.org/resource/Don_Dokken> <http://xmlns.com/foaf/0.1/givenName> ?v2 . <http://dbpedia.org/resource/Red_Tide_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/birthName> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?associatedArtist ?bandMember WHERE {
  # Find the associated musical artist of Red Tide (band)
  OPTIONAL { 
    dbr:Red_Tide_(band) dbo:associatedMusicalArtist ?associatedArtist .
  }

  # Identify Don Dokken as a musical artist
  dbr:Don_Dokken dbo:birthName ""Donald Jay Dokken"" .

  # Find band members associated with Don Dokken's band (Dokken)
  OPTIONAL {
    dbr:Dokken dbo:bandMember ?bandMember .
    FILTER EXISTS { ?bandMember dbo:birthName ?name . }
  }

  # Ensure the band member is also a musical artist
  OPTIONAL {
    ?bandMember dbo:occupation ""musician"" .
  }
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
16,62,test,Give me the person born as Georgeanne Marie Rice and spouse of the person born as the birth name of Ted McGinley and professional in the profession of the actor of Unnatural (TV series).,"SELECT ?result WHERE { <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/property/birthName> ?v4 . ?result <http://dbpedia.org/property/birthName> ""Georgeanne Marie Rice""@en . ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?v3 <http://dbpedia.org/property/birthName> ?v4 . ?v0 <http://dbpedia.org/property/occupation> ?v6 . ?result <http://dbpedia.org/property/occupation> ?v6 . <http://dbpedia.org/resource/Unnatural_(TV_series)> <http://dbpedia.org/property/starring> ?v0 . }","```sparql
# Step 1: Find Georgeanne Marie Rice
SELECT ?georgeanne WHERE {
  ?georgeanne foaf:name ""Georgeanne Marie Rice""@en .
  ?georgeanne dbo:birthName ""Georgeanne Marie Rice"" .
}

# Step 2: Find Ted McGinley's birth name
SELECT ?tedBirthName WHERE {
  ?ted dbp:birthName ?tedBirthName .
  ?ted foaf:name ""Ted McGinley""@en .
}

# Step 3: Identify the actor from ""Unnatural"" and their profession
SELECT ?unnaturalActor ?profession WHERE {
  ?unnaturalActor dbo:actorIn <http://dbpedia.org/resource/Unnatural_(TV_series)> .
  ?unnaturalActor dbo:occupation ?profession .
}

# Step 4: Find the spouse of Georgeanne Marie Rice who matches the criteria
SELECT ?spouse WHERE {
  ?georgeanne dbo:spouse ?spouse .
  FILTER EXISTS { 
    ?tedBirthName foaf:name ?spouseName .
    ?spouse foaf:name ?spouseName .
  }
  FILTER EXISTS {
    ?unnaturalActor dbo:occupation ?profession .
    ?spouse dbo:occupation ?profession .
  }
}
```",7,7,8,3,3,3,3,71,0,0,1,0,0.0,0
528,49,test,Give me the force of the person born as the birth name of Narciso Campero and war of the military force of Battle of Pisagua.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Pisagua> . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?result <http://dbpedia.org/ontology/commander> ?v1 . <http://dbpedia.org/resource/Narciso_Campero> <http://dbpedia.org/property/birthName> ?v0 . },"```sparql
# Query to get the birth name of Narciso Campero
SELECT ?birthName WHERE {
  ?person dbo:birthName ?birthName .
  ?person rdfs:label ""Narciso Campero""@en .
}

# Assuming we find that Narciso Campero's birth name is ""Narciso Campero"" (for demonstration purposes)
# Query to get the military force or role of Narciso Campero
SELECT ?force WHERE {
  ?person dbo:role ?force .
  ?person rdfs:label ""Narciso Campero""@en .
}

# Query to find information about the Battle of Pisagua and involved forces
SELECT ?battle ?involvedForce WHERE {
  ?battle rdf:type dbo:MilitaryEngagement ;
          rdfs:label ""Battle of Pisagua""@en .
  ?battle dbo:participatingMilitaryUnit ?unit .
  ?unit rdfs:label ?involvedForce .
}
```",5,5,6,3,2,3,3,71,0,0,3,0,0.0,0
747,52,test,"Give me the band of the writer of Apollo (Hardwell song) and band of Shèna and person born on the birth date of the person decedent, that is an athlete and a soccer player, at Zolotonosha.",SELECT ?result WHERE { <http://dbpedia.org/resource/Shèna> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Zolotonosha> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v3 <http://dbpedia.org/ontology/birthDate> ?v2 . <http://dbpedia.org/resource/Apollo_(Hardwell_song)> <http://dbpedia.org/property/writer> ?v5 . ?result <http://dbpedia.org/ontology/birthDate> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
# Query to find the writer of ""Apollo"" by Hardwell and their band
SELECT ?writer ?band WHERE {
  ?song dbo:artist ?hardwell .
  ?song dbo:title ""Apollo"" .
  ?hardwell foaf:name ""Hardwell"" .
  ?song dbo:lyricist ?writer .
  OPTIONAL { ?writer dbo:member ?band . }
}

# Query to find Shèna's band
SELECT ?band WHERE {
  ?shena dbo:associatedBand ?band .
  ?shena foaf:name ""Shèna"" .
}

# Query to find a decedent athlete and soccer player from Zolotonosha and their birth date
SELECT ?person ?birthDate WHERE {
  ?person dbo:nationality dbr:Ukraine ;
          dbo:sport dbr:Soccer ;
          dbo:placeOfBirth dbr:Zolotonosha ;
          dbo:dateOfDeath ?deathDate .
  FILTER NOT EXISTS { ?person dbo:alive ""true""^^xsd:boolean }
  ?person dbo:birthDate ?birthDate .
}

# Query to find an athlete and soccer player born on the same date
SELECT ?athlete WHERE {
  ?athlete dbo:sport dbr:Soccer ;
           dbo:birthDate ?sameBirthDate .
  FILTER (?sameBirthDate = <REPLACE_WITH_ACTUAL_BIRTH_DATE>^^xsd:date)
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
281,70,test,"Give me the war of the profession, that is a military unit, of the professional, that is an office holder and a politician, in New Zealand Army and entity in the birth place, that is a country, of the leader, that is a politician, of 1962 New South Wales state election and war of the awardee of Knight Grand Cross of the Order of the Bath.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/New_Zealand_Army> . <http://dbpedia.org/resource/1962_New_South_Wales_state_election> <http://dbpedia.org/property/leader> ?v0 . ?v4 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_the_Bath> . ?v0 <http://dbpedia.org/ontology/birthPlace> ?v7 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?result <http://dbpedia.org/ontology/place> ?v7 . ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/property/occupation> ?v3 . },"```sparql
SELECT DISTINCT ?warNZ ?entityBirthplace ?warAwardee 
WHERE {
  # Step 1: Identify the leader of the 1962 New South Wales state election
  ?leader dbo:officeHolderOf dbr:Premier_of_New_South_Wales ;
          dbo:termStartYear ""1962""^^xsd:gYear ;
          foaf:birthPlace ?birthPlace .

  # Step 2: Determine the birthplace country of this leader
  ?birthPlace rdf:type dbo:Country .

  # Step 3: Find an entity in that birthplace country
  ?entityBirthplace dbo:country ?birthPlace .

  # Step 4: Identify a military unit (war) associated with the New Zealand Army
  ?warNZ dbo:militaryUnit dbr:New_Zealand_Army ;
         rdf:type dbo:MilitaryConflict .

  # Step 5: Find a professional who is both an office holder and a politician
  ?professional dbo:officeHolderOf ?office ;
                dbo:politicalParty ?party .

  # Step 6: Determine the war associated with this professional's profession
  ?warProfession dbo:militaryUnit dbr:New_Zealand_Army ;
                 rdf:type dbo:MilitaryConflict .

  # Step 7: Identify an awardee of the Knight Grand Cross of the Order of the Bath
  ?awardee dbo:award dbr:Knight_Grand_Cross_of_the_Order_of_the_Bath .

  # Step 8: Find the war associated with this awardee
  ?warAwardee dbo:militaryUnit ?unit ;
             rdf:type dbo:MilitaryConflict .
}
```",8,13,9,3,3,3,3,71,0,0,1,0,0.0,0
617,69,test,"Give me the spouse of the child of Antiochus III the Great and child of the child, that is a royalty, of the successor, that is a royalty, of Antiochus II Theos and parent of the child of the commander in Battle of Panium.",SELECT ?result WHERE { <http://dbpedia.org/resource/Battle_of_Panium> <http://dbpedia.org/ontology/commander> ?v1 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> ?v2 . ?v7 <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://dbpedia.org/ontology/child> ?v2 . ?v3 <http://dbpedia.org/property/father> ?v4 . <http://dbpedia.org/resource/Antiochus_II_Theos> <http://dbpedia.org/ontology/successor> ?v4 . ?result <http://dbpedia.org/property/father> ?v3 . <http://dbpedia.org/resource/Antiochus_III_the_Great> <http://dbpedia.org/ontology/child> ?v7 . },"```sparql
SELECT ?spouse WHERE {
  # Antiochus III the Great and his child who is royalty
  wd:Q1116 dbo:child ?royalChild1 .
  
  # Seleucus II Callinicus, successor of Antiochus II Theos, and his royal child
  wd:Q1120 dbo:succeededBy ?successor .
  ?successor dbo:child ?royalChild2 .

  # John Hyrcanus, commander in Battle of Panium, and his child
  wd:Q1118 dbo:commanderInBattle wd:Q123456 . # Assuming Q123456 is the DBpedia ID for Battle of Panium
  wd:Q1118 dbo:child ?hyrcanusChild .

  # Seleucus IV Philopator's spouse
  ?royalChild1 rdfs:label ""Seleucus IV Philopator""@en .
  ?royalChild1 dbo:spouse ?spouse .
}
```",8,10,9,3,3,3,3,71,0,0,2,0,0.0,0
801,71,test,"Give me the professional in the alter ego of the true self of The Shadow and producer of the work, that is a musical work and a song and a work, of the professional, that is a musical artist, in Rapper and associated musical artist of the writer, that is a musical artist and an artist, of the album, that is a musical work and a work, of What U See Is What U Get.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/occupation> ""Rapper""@en . ?result <http://dbpedia.org/property/occupation> ?v2 . ?v8 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v1 <http://dbpedia.org/property/alterEgo> ?v2 . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. <http://dbpedia.org/resource/What_U_See_Is_What_U_Get> <http://dbpedia.org/ontology/album> ?v7 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v7 <http://dbpedia.org/property/writer> ?v8 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v5 <http://dbpedia.org/ontology/producer> ?result . ?v1 <http://xmlns.com/foaf/0.1/givenName> ""The Shadow""@en . ?v5 <http://dbpedia.org/property/writer> ?v4 . }","```sparql
SELECT ?producer WHERE {
  # Identify The Shadow's alter ego
  ?shadow dcterms:alternativeName ""The Shadow""@en .
  ?shadow foaf:name ""Lamont Cranston""@en .

  # Lamont Cranston as a producer
  ?producer foaf:name ""Lamont Cranston""@en ;
            dbo:occupation dbp:Producer .

  # Find the album ""What U See Is What U Get""
  ?album dcterms:title ""What U See Is What U Get""@en ;
         dbo:creator ?writer .

  # Writer is a musical artist and an artist
  ?writer rdf:type dbo:MusicalArtist, dbo:Artist .

  # Rapper associated with the writer
  ?rapper dbo:associatedWith ?writer ;
          rdf:type dbo:Rapper .

  # The producer's work as a musical work
  ?musicalWork dbo:producer ?producer ;
               rdf:type dbo:MusicalWork, dbo:Song .
}
```",9,17,10,3,3,3,3,71,0,0,8,0,0.0,0
767,54,test,"Give me the reference to  and alma mater of the administration of the reference to George Kilbon Nash and entity in the administration, that is a settlement, of Green.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://xmlns.com/foaf/0.1/name> """"@en . ?v3 <http://dbpedia.org/property/leaderParty> ""Green""@en . ?v5 <http://dbpedia.org/ontology/almaMater> ?result . ?v5 <http://dbpedia.org/property/governor> ?v0 . ?v0 <http://xmlns.com/foaf/0.1/name> ""George Kilbon Nash""@en . ?result <http://dbpedia.org/ontology/state> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?georgeNash ?almaMaterGeorgeNash ?adminEntity ?settlementGreen ?almaMaterAdminEntity
WHERE {
  # Find George Kilbon Nash
  ?georgeNash a dbo:Person ;
              foaf:name ""George Kilbon Nash""@en .

  # Get his alma mater
  ?georgeNash dbo:almaMater ?almaMaterGeorgeNash .

  # Find any administrative role or entity he was part of
  OPTIONAL {
    ?adminEntity dbo:member ?georgeNash .
    ?adminEntity dbo:location dbr:Green_(disambiguation) .
    
    # Get the alma mater for the administration entity if available
    ?adminEntity dbo:almaMater ?almaMaterAdminEntity .
  }

  # Identify the settlement named Green associated with the administration
  OPTIONAL {
    ?settlementGreen a dbo:Settlement ;
                     foaf:name ""Green""@en .
    
    ?adminEntity dbo:location ?settlementGreen .
  }
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
179,16,test,Give me the parent of the child of Bhumibol Adulyadej and person born as the birth name of Sirikit.,SELECT ?result WHERE { <http://dbpedia.org/resource/Bhumibol_Adulyadej> <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Sirikit> <http://dbpedia.org/property/birthName> ?v2 . ?result <http://dbpedia.org/property/birthName> ?v2 . },"```sparql
SELECT ?parent WHERE {
  wd:Q11980 wdt:P40 wd:Q11888 .
  wd:Q11888 rdfs:label ""Sirikit""@en .
}
```",4,4,5,2,2,3,2,20,0,0,1,0,0.0,0
801,53,test,"Give me the producer of Westside Story (song) and professional in the alter ego of the true self of The Shadow and associated musical artist of the writer, that is a musical artist and an artist, of 40 Dayz & 40 Nightz.","SELECT ?result WHERE { <http://dbpedia.org/resource/40_Dayz_&_40_Nightz> <http://dbpedia.org/property/writer> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v3 <http://xmlns.com/foaf/0.1/givenName> ""The Shadow""@en . ?result <http://dbpedia.org/property/occupation> ?v2 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Westside_Story_(song)> <http://dbpedia.org/ontology/producer> ?result . ?v3 <http://dbpedia.org/property/alterEgo> ?v2 . }","```sparql
# Query to find the producer of ""Westside Story"" (song)
SELECT ?producer WHERE {
  ?song dcterms:title ""Westside Story""@en .
  ?song dbo:performer ?artist .
  ?artist dbo:associatedMusicalArtist ?producer .
}

UNION

# Query to identify The Shadow's alter ego
SELECT ?alterEgo WHERE {
  ?character rdfs:label ""The Shadow""@en .
  ?character dbo:alias ?alterEgo .
}

UNION

# Query to find the writer of ""40 Dayz & 40 Nightz"" and associated musical artists
SELECT ?writer ?associatedArtist WHERE {
  ?song dcterms:title ""40 Dayz & 40 Nightz""@en .
  ?song dbo:lyricsBy ?writer .
  ?writer rdf:type dbo:MusicalArtist ;
          dbo:occupation dbo:Artist .
  ?writer dbo:associatedMusicalArtist ?associatedArtist .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
747,55,test,Give me the band of the writer of Apollo (Hardwell song) and band of the person born as Tracey Elizabeth McSween and person born on the birth date of Pavlo Khudzik.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ""Tracey Elizabeth McSween""@en . <http://dbpedia.org/resource/Pavlo_Khudzik> <http://dbpedia.org/ontology/birthDate> ?v3 . ?result <http://dbpedia.org/ontology/birthDate> ?v3 . ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Apollo_(Hardwell_song)> <http://dbpedia.org/property/writer> ?v5 . }","```sparql
# Query 1: Find the band of the writer of ""Apollo"" by Hardwell
SELECT ?band WHERE {
  ?song dcterms:title ""Apollo""@en .
  ?song dbo:artist <http://dbpedia.org/resource/Hardwell> .
  ?song dbo:lyricist ?writer .
  ?writer dbo:associatedBand ?band .
}

UNION

# Query 2: Find the band of the person born as Tracey Elizabeth McSween
SELECT ?band WHERE {
  ?person foaf:name ""Tracey Elizabeth McSween""@en .
  ?person dbo:associatedBand ?band .
}

UNION

# Query 3: Find the band of the person born on Pavlo Khudzik's birth date
SELECT ?band WHERE {
  <http://dbpedia.org/resource/Pavlo_Khudzik> dbo:birthday ?birthDate .
  ?person dbo:birthday ?birthDate .
  FILTER(?person != <http://dbpedia.org/resource/Pavlo_Khudzik>)
  ?person dbo:associatedBand ?band .
}
```",6,6,7,2,3,3,3,71,0,0,1,0,0.0,0
404,54,test,"Give me the parent of the child, that is a royalty, of the parent, that is a royalty, of Prince George William of Hanover and spouse of the person born, that is a royalty, as Princess Victoria Louise of Prussia and child of Ernest Augustus, Crown Prince of Hanover.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Prince_George_William_of_Hanover> <http://dbpedia.org/ontology/parent> ?v0 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ernest_Augustus,_Crown_Prince_of_Hanover> . ?result <http://dbpedia.org/ontology/child> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/child> ?v5 . ?v3 <http://dbpedia.org/property/birthName> ""Princess Victoria Louise of Prussia""@en . }","```sparql
SELECT ?parentOfChild WHERE {
  # Step 1: Identify Prince George William of Hanover
  ?princeGeorgeWilliam dbr:Prince_George_William_of_Hanover .
  
  # Step 2: Find his parent who is a royalty
  ?parentOfPrinceGeorgeWilliam dbo:child ?princeGeorgeWilliam ;
                               rdf:type dbo:RoyalFamilyMember .

  # Step 3: Identify the spouse of Princess Victoria Louise of Prussia
  ?princessVictoriaLouise dbr:Princess_Victoria_Louise_of_Prussia .
  ?spouseOfPrincessVictoriaLouise dbo:spouse ?princessVictoriaLouise ;
                                   rdf:type dbo:RoyalFamilyMember .

  # Step 4: Determine their child who is a royalty and whose parent is Ernest Augustus, Crown Prince of Hanover
  ?ernestAugustus dbr:Ernest_Augustus,_Crown_Prince_of_Hanover .
  ?childOfSpouseAndPrincessVictoriaLouise dbo:parent ?spouseOfPrincessVictoriaLouise ;
                                           dbo:parent ?princessVictoriaLouise ;
                                           rdf:type dbo:RoyalFamilyMember .

  # Step 5: Find the parent of this child (from step 4) who is a royalty
  ?parentOfChild dbo:child ?childOfSpouseAndPrincessVictoriaLouise ;
                 rdf:type dbo:RoyalFamilyMember .
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
485,24,test,"Give me the entity in the birth place, that is a region, of Joseph Whitaker (naturalist) and birth place of the awardee, that is a writer and a poet, of Eric Gregory Award.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Poet>. ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Eric_Gregory_Award> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?result <http://dbpedia.org/ontology/country> ?v1 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Joseph_Whitaker_(naturalist)> <http://dbpedia.org/ontology/birthPlace> ?v1 . },"```sparql
SELECT DISTINCT ?region1 ?region2 WHERE {
  # Find Joseph Whitaker's birthplace that is a region
  ?whitaker dbo:birthPlace ?birthPlaceWhitaker .
  ?birthPlaceWhitaker rdf:type dbpedia-owl:Region .

  # Find an awardee of the Eric Gregory Award who is both a writer and a poet, and their birthplace that is a region
  ?awardAwardedTo dbo:recipient ?poetWriter .
  ?poetWriter dbo:occupation ?occupation1 ;
              dbo:occupation ?occupation2 .
  FILTER (CONTAINS(LCASE(?occupation1), ""writer"") && CONTAINS(LCASE(?occupation2), ""poet""))
  ?poetWriter dbo:birthPlace ?birthPlacePoetWriter .
  ?birthPlacePoetWriter rdf:type dbpedia-owl:Region .

  # Bind the regions to variables
  BIND(?birthPlaceWhitaker AS ?region1)
  BIND(?birthPlacePoetWriter AS ?region2)

  # Ensure we are referring to Joseph Whitaker (naturalist) specifically
  FILTER(CONTAINS(LCASE(STR(?whitaker)), ""joseph whitaker naturalist""))
}
```",4,7,5,2,2,2,3,28,0,0,1,0,0.0,0
767,18,test,Give me the alma mater of Carl L. Nippert and reference to  and entity in Baden-Württemberg.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Carl_L._Nippert> <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://xmlns.com/foaf/0.1/name> """"@en . ?result <http://dbpedia.org/ontology/state> <http://dbpedia.org/resource/Baden-Württemberg> . }","```sparql
# Query for Carl L. Nippert's alma mater
SELECT ?almaMater WHERE {
  ?person foaf:name ""Carl L. Nippert""@en .
  ?person dbo:almaMater ?almaMater .
}

UNION

# Query for an entity in Baden-Württemberg
SELECT ?entity ?location WHERE {
  ?entity dbp:location ?location .
  FILTER (CONTAINS(LCASE(?location), ""baden-wuerttemberg""))
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
801,23,test,Give me the professional in the alter ego of the true self of The Shadow.,"SELECT ?result WHERE { ?v2 <http://xmlns.com/foaf/0.1/givenName> ""The Shadow""@en . ?result <http://dbpedia.org/property/occupation> ?v0 . ?v2 <http://dbpedia.org/property/alterEgo> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?alterEgo WHERE {
  ?shadow dbo:wikiPageRedirects ?entity .
  FILTER (str(?entity) = ""The_Shadow_(character)"")
  
  ?entity dbo:fictionalAlterEgo ?alterEgo .
}
```",3,3,4,3,1,3,3,71,0,0,39640,0,0.0,0
485,26,test,"Give me the entity in the region, that is a country, of Western European Time and entity in the birth place, that is a region, of Joseph Whitaker (naturalist) and birth place of Thomas Warner (poet).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v1 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Western_European_Time> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Joseph_Whitaker_(naturalist)> <http://dbpedia.org/ontology/birthPlace> ?v2 . <http://dbpedia.org/resource/Thomas_Warner_(poet)> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/country> ?v2 . },"```sparql
# Query for countries in Western European Time
SELECT ?country WHERE {
  ?country dbo:timeZone dbr:Western_European_Time .
}

# Query for the birthplace region of Joseph Whitaker (naturalist)
SELECT ?region WHERE {
  ?person foaf:name ""Joseph Whitaker"" .
  ?person dbo:nationality dbr:Naturalist .
  ?person dbo:birthPlace ?location .
  ?location a dbo:Region .
  BIND(?location AS ?region)
}

# Query for the birthplace of Thomas Warner (poet)
SELECT ?birthPlace WHERE {
  ?person foaf:name ""Thomas Warner"" .
  ?person dbo:nationality dbr:Poet .
  ?person dbo:birthPlace ?birthPlace .
}
```",5,7,6,2,3,2,3,28,0,0,1,0,0.0,0
360,28,test,"Give me the writer of the work, that is an album, of Dave Flett and reference to the author of Blinded by the Light and native of the death place, that is a settlement, of Winnie Madikizela-Mandela.","SELECT ?result WHERE { <http://dbpedia.org/resource/Blinded_by_the_Light> <http://dbpedia.org/property/author> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://dbpedia.org/property/author> ""Dave Flett""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Album>. ?v1 <http://dbpedia.org/property/writer> ?result . <http://dbpedia.org/resource/Winnie_Madikizela-Mandela> <http://dbpedia.org/ontology/deathPlace> ?v3 . ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?result <http://xmlns.com/foaf/0.1/name> ?v5 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?albumWriter ?songAuthor ?deathPlace 
WHERE {
  # Find the album associated with Dave Flett and its writer
  ?album dbo:artist dbr:Dave_Flett .
  ?album dbo:composer ?albumWriter .

  # Confirm Bruce Springsteen as the author of ""Blinded by the Light""
  dbr:""Blinded_by_the_Light"" dbo:lyricist dbr:Bruce_Springsteen .

  # Identify Johannesburg as the place of death for Winnie Madikizela-Mandela
  dbr:Winnie_Madikizela-Mandela dbo:deathPlace dbr:Johannesburg .
}
```",6,8,7,2,3,2,3,28,0,0,1,0,0.0,0
378,62,test,"Give me the war of the person born as the birth name of Carl Pontus Gahn and claim to fame of Louis des Balbes de Berton de Crillon, 1st Duke of Mahón and war of the commander in the reference, that is a military conflict, to Peninsular War.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v3 <http://dbpedia.org/property/birthName> ?v4 . <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/property/birthName> ?v4 . ?v6 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Louis_des_Balbes_de_Berton_de_Crillon,_1st_Duke_of_Mahón> <http://dbpedia.org/ontology/knownFor> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Peninsular War""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/ontology/commander> ?v6 . }","```sparql
SELECT ?person1 ?war1 ?person2 ?war2 WHERE {
  # Carl Pontus Gahn's claim to fame
  wd:Q123456 rdfs:label ""Carl Pontus Gahn""@en .
  ?person1 dbo:birthName ""Carl Pontus Gahn"" .
  ?person1 dbo:occupation ?occupation1 .
  
  # Louis des Balbes de Berton de Crillon, 1st Duke of Mahón's birth name
  wd:Q654321 rdfs:label ""Louis des Balbes de Berton de Crillon, 1st Duke of Mahón""@en .
  ?person2 dbo:birthName ?birthName2 .

  # Wars associated with Carl Pontus Gahn
  ?person1 dbo:participatedInMilitaryConflict ?war1 .

  # Wars commanded by Louis des Balbes de Berton de Crillon, 1st Duke of Mahón
  ?person2 dbo:commandedMilitaryConflict ?war2 .

  # Peninsular War and its commander
  wd:Q987654 rdfs:label ""Peninsular War""@en .
  ?peninsularWarCommander dbo:commandedMilitaryConflict wd:Q987654 .
  
  FILTER (lang(?occupation1) = 'en')
}
```",7,8,8,3,3,3,3,71,0,0,2,0,0.0,0
528,20,test,Give me the war of Irene Morales and war of the commander in Battle of La Rinconada de Ate.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Battle_of_La_Rinconada_de_Ate> <http://dbpedia.org/ontology/commander> ?v2 . <http://dbpedia.org/resource/Irene_Morales> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?event ?description WHERE {
  # Query for events involving Irene Morales
  { 
    ?person rdfs:label ""Irene Morales""@en .
    ?person dbo:memberOf ?organization .
    ?event dbo:agent ?person ;
           a dbo:Battle ;
           rdfs:comment ?description .
  }
  
  UNION
  
  # Query for the Battle of La Rinconada de Ate
  { 
    ?event rdfs:label ""Battle of La Rinconada de Ate""@en .
    ?event rdfs:comment ?description .
  }
}
```",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
488,61,test,"Give me the administration of the father of the spouse, that is a royalty, of Tokugawa Masako and death place of the father, that is a politician, of the father, that is an office holder, of Matsudaira Tadamasa.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/deathPlace> ?result . ?result <http://dbpedia.org/property/leader> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Matsudaira_Tadamasa> <http://dbpedia.org/property/father> ?v0 . ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Tokugawa_Masako> . ?v1 <http://dbpedia.org/property/father> ?v3 . ?v0 <http://dbpedia.org/property/father> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?administration ?deathPlace WHERE {
  # Step 1: Identify Tokugawa Masako's spouse
  ?tokugawaMasako dbo:spouse ?spouse .

  # Step 2: Determine the father of Tokugawa Masako's spouse
  ?spouse dbo:father ?fatherOfSpouse .

  # Step 3: Find the administration if he was royalty
  OPTIONAL {
    ?fatherOfSpouse dbo:officeHolder ?royalty .
    ?royalty dbp:administration ?administration .
  }

  # Step 4: Identify Matsudaira Tadamasa's father
  ?matsudairaTadamasa dbo:father ?fatherOfMatsudaira .

  # Step 5: Determine if this father was an office holder and a politician
  OPTIONAL {
    ?fatherOfMatsudaira dbo:officeHolder ?office .
    ?office dbp:position ""Politician""^^xsd:string .
  }

  # Step 6: Find the death place of this father
  OPTIONAL {
    ?fatherOfMatsudaira dbo:deathPlace ?deathPlace .
  }

  # Bind Tokugawa Masako and Matsudaira Tadamasa to their respective DBpedia resources
  VALUES (?tokugawaMasako ?matsudairaTadamasa) {
    (dbpedia:Tokugawa_Masako dbpedia:Matsudaira_Tadamasa)
  }
}
```",6,9,7,3,2,3,3,71,0,0,1,0,0.0,0
747,56,test,Give me the band of Amba Shepherd and person born on the birth date of Pavlo Khudzik and band of the person born as the persona of Shèna.,SELECT ?result WHERE { <http://dbpedia.org/resource/Amba_Shepherd> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Pavlo_Khudzik> <http://dbpedia.org/ontology/birthDate> ?v2 . <http://dbpedia.org/resource/Shèna> <http://xmlns.com/foaf/0.1/givenName> ?v0 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?result <http://dbpedia.org/ontology/birthDate> ?v2 . },"```sparql
# Query 1: Find the band of Amba Shepherd
SELECT ?band WHERE {
  ?person foaf:name ""Amba Shepherd""@en .
  ?person dbo:memberOf ?band .
}

UNION

# Query 2: Find a person born on Pavlo Khudzik's birth date and their band
{
  # Get Pavlo Khudzik's birth date
  SELECT ?birthDate WHERE {
    ?pavlo foaf:name ""Pavlo Khudzik""@en .
    ?pavlo dbo:birthday ?birthDate .
  }
  
  # Find another person with the same birth date and their band
  SELECT ?personName ?band WHERE {
    ?otherPerson dbo:birthday ?birthDate .
    ?otherPerson foaf:name ?personName .
    ?otherPerson dbo:memberOf ?band .
  }
}

UNION

# Query 3: Find the band of a person associated with Shèna
{
  # Assuming ""Shèna"" is an alias or persona, find related individuals
  SELECT ?relatedPerson WHERE {
    ?alias foaf:name ""Shèna""@en .
    ?alias dbo:alsoKnownAs ?relatedPerson .
  }
  
  # Find the band of this related person
  SELECT ?band WHERE {
    ?relatedPerson dbo:memberOf ?band .
  }
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
54,36,test,"Give me the child of Thinkhaya of Pagan and predecessor of the child, that is an office holder and a royalty, of the reference to Thihapate of Mohnyin.","SELECT ?result WHERE { <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Thihapate of Mohnyin""@en . ?result <http://dbpedia.org/ontology/successor> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?predecessor WHERE {
  # Thinkhaya of Pagan
  dbr:Thinkhaya_of_Pagan dbo:child ?child .

  # Child's predecessor who is an office holder and royalty related to Thihapate of Mohnyin
  ?child dbo:predecessor ?predecessor .
  ?predecessor a dbo:Monarch ;
              dbo:officeHolder true ;
              dbo:royalty true .
  
  OPTIONAL { ?predecessor dbo:relatedTo dbr:Thihapate_of_Mohnyin . }
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
427,29,test,Give me the party of the father of Lamberto Andreotti and reference to Partito Popolare Italiano and party of Romano Prodi.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Lamberto_Andreotti> <http://dbpedia.org/property/father> ?v3 . <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/ontology/party> ?result . ?result <http://xmlns.com/foaf/0.1/name> ""Partito Popolare Italiano""@en . ?v3 <http://dbpedia.org/ontology/party> ?result . }","```sparql
# Query to find the father of Lamberto Andreotti and his political party
SELECT ?father ?party WHERE {
  ?person dbo:birthName ""Lamberto Andreotti""@it .
  ?person dbo:father ?father .
  OPTIONAL { ?father dbo:politicalParty ?party . }
}

UNION

# Query to find the connection between Lamberto Andreotti's father's party and Partito Popolare Italiano
SELECT ?fatherParty ?ppi WHERE {
  ?person dbo:birthName ""Lamberto Andreotti""@it .
  ?person dbo:father ?father .
  ?father dbo:politicalParty ?fatherParty .
  ?ppi dbo:wikiPageRedirects ?fatherParty .
  FILTER (str(?ppi) = ""Partito_Popolare_Italiano"")
}

UNION

# Query to find Romano Prodi's political party
SELECT ?prodiParty WHERE {
  ?person dbo:birthName ""Romano Prodi""@it .
  ?person dbo:politicalParty ?prodiParty .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
492,53,test,"Give me the person decedent at the work of the author of French Algeria and commander in Franco-Hova Wars and person decedent at the capital, that is a settlement, of Algeria.",SELECT ?result WHERE { <http://dbpedia.org/resource/French_Algeria> <http://dbpedia.org/property/author> ?v3 . <http://dbpedia.org/resource/Algeria> <http://dbpedia.org/ontology/capital> ?v1 . ?v2 <http://dbpedia.org/property/author> ?v3 . <http://dbpedia.org/resource/Franco-Hova_Wars> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?descendant WHERE {
  ?person dbo:authorOf dbr:French_Algeria .
  ?person dbo:militaryCommanderIn dbr:Franco-Hova_Wars .
  ?deathEvent dbo:place dbr:Algiers ;
              dbo:agent ?person ;
              dbo:deathPlace dbr:Algiers .
  ?descendant dbo:parent ?person .
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
485,25,test,"Give me the entity in the region, that is a country, of Western European Time and entity in Nottinghamshire and birth place of the awardee, that is a writer and a poet, of Eric Gregory Award.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v4 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Eric_Gregory_Award> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Poet>. ?v2 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Western_European_Time> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>. ?v4 <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Nottinghamshire> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?country ?nottinghamshireEntity ?birthPlace WHERE {
  # Find a country in the Western European Time zone
  ?country dbo:timeZone dbr:Western_European_Time ;
           rdf:type dbo:Country .

  # Find an entity in Nottinghamshire
  ?nottinghamshireEntity dbp:location dbr:Nottinghamshire ;
                         rdf:type dbo:Place .

  # Find a writer and poet who won the Eric Gregory Award and their birthplace
  ?poet dbo:award dbr:Educational_Society_of_Authors_Eric_Gregory_Award ;
        dbo:occupation dbr:Writer ;
        dbo:occupation dbr:Poet .
  
  ?poet dbp:birthPlace ?birthPlace .

}
```",5,8,6,2,3,2,3,28,0,0,1,0,0.0,0
994,38,test,"Give me the band member of the person born, that is a musical artist, as Donald Maynard Dokken and associated musical artist of the band member, that is a band and a group and an organisation, of Meshuggah.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ""Donald Maynard Dokken""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Meshuggah> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?bandMember ?associatedArtist WHERE {
  # Step 1: Find Donald Maynard Dokken as a musical artist
  ?dokken dbo:birthName ""Donald Maynard Dokken""@en .
  
  # Step 2: Find the band he is associated with
  ?dokken dbo:memberOf ?band .

  # Step 3: Get members of that band
  ?bandMember dbo:memberOf ?band ;
              dbp:birthDate ?birthDate .

  # Step 4: Check if they are also recognized as musical artists
  OPTIONAL { ?bandMember dbo:birthName ?name . FILTER (lang(?name) = ""en"") }

  # Step 5: Identify Meshuggah and its associated artists
  dbr:Meshuggah dbo:member ?meshuggahArtist .

  # Step 6: Find the association between band members of Dokken's band and Meshuggah
  ?bandMember dbp:associatedBand dbr:Meshuggah .
  
  # Return results
  BIND(?bandMember AS ?associatedArtist)
}
```",4,8,5,2,2,3,3,71,0,0,1,0,0.0,0
10,21,test,Give me the associated musical artist of Matt Colton and band member of Luke Vibert and professional in the birth name of Sharon Kao.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Luke_Vibert> . ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Matt_Colton> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Sharon_Kao> <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
SELECT ?artist WHERE {
  # Matt Colton's associated artist
  ?mattColton foaf:name ""Matt Colton"" .
  ?mattColton dbo:worksFor dbpedia:Metropolis_Mastering .
  ?associatedArtist dbo:masteredBy ?mattColton .
  
  # Luke Vibert's band member
  ?lukeVibert foaf:name ""Luke Vibert"" .
  ?bandMember dbo:member ?lukeVibert .

  # Professional linked to Sharon Kao (TOKiMONSTA)
  ?sharonKao foaf:name ""Sharon Kao""@en .
  ?professional foaf:name ?birthName .
  FILTER(?birthName = ""James Ford"") .
  
  # Find the common artist
  VALUES ?artist { 
    ?associatedArtist 
    ?bandMember 
    ?professional 
  }
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
488,69,test,"Give me the birth place of the commander in the war, that is a military conflict and an event and a societal event, of Saitō Hajime and administration of the father of the spouse, that is a royalty, of Tokugawa Masako and death place of the father, that is a politician, of Yūki Hideyasu.",SELECT ?result WHERE { <http://dbpedia.org/resource/Yūki_Hideyasu> <http://dbpedia.org/property/father> ?v7 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Tokugawa_Masako> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Saitō_Hajime> <http://dbpedia.org/ontology/battle> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/property/father> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v7 <http://dbpedia.org/ontology/deathPlace> ?result . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://dbpedia.org/ontology/commander> ?v3 . ?result <http://dbpedia.org/property/leader> ?v2 . },"```sparql
SELECT DISTINCT ?saitoBirthPlace ?akihitoAdministration ?yukiFatherDeathPlace WHERE {
  # Saitō Hajime's birth place
  ?saitoHajime dbo:birthPlace ?saitoBirthPlace .
  FILTER (str(?saitoHajime) = ""Saitō_Hajime"") .

  # Emperor Akihito's administration role
  ?akihito dbo:spouse ?naruhito .
  ?naruhito rdfs:label ""Naruhito""@en .
  ?akihito dbo:office ?administrationRole .
  FILTER (str(?akihito) = ""Akihito"") .

  # Yūki Hideyasu's father and his death place
  ?yukiHideyasu dbo:father ?yukiFather .
  ?yukiFather dbo:deathPlace ?yukiFatherDeathPlace .
  FILTER (str(?yukiHideyasu) = ""Yūki_Hideyasu"") .
}
```",8,13,9,3,3,3,3,71,0,0,1,0,0.0,0
54,68,test,"Give me the child of the father of the child of Thinkhaya of Pagan and predecessor of the child, that is an office holder and a royalty, of Thihapate of Mohnyin and parent of the child of the parent of Thado Minsaw of Prome.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/father> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> . <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?v5 . ?v7 <http://dbpedia.org/property/father> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v7 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/successor> ?v3 . ?v4 <http://dbpedia.org/ontology/child> ?result . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Thihapate_of_Mohnyin> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Thinkhaya's child (Sawlu)
  ?thinkhaya dbr:Thinkhaya_of_Pagan ;
             dbo:child ?sawlu .
  
  # Sawlu's child
  ?sawlu dbo:child ?grandchild .

  # Thihapate of Mohnyin's child who is royalty and office holder
  ?thihapate dbr:Thihapate_of_Mohnyin ;
             dbo:child ?officeHolder .
  
  # Office holder must be royalty
  ?officeHolder a dbo:Monarch .

  # Parent of Thado Minsaw
  ?parent dbr:Thado_Minsaw ;
          dbo:parent ?officeHolder .

  # Find the person who matches all conditions
  FILTER (?sawlu = ?officeHolder && ?officeHolder = ?parent)
}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
427,48,test,"Give me the party of the person born, that is an office holder and a politician, as Romano Antonio Prodi and reference to the name of the party of Michele Pinto.","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v1 <http://dbpedia.org/ontology/party> ?result . ?v1 <http://dbpedia.org/property/birthName> ""Romano Antonio Prodi""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Michele_Pinto> <http://dbpedia.org/ontology/party> ?v3 . ?v3 <http://xmlns.com/foaf/0.1/name> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?prodiPartyLabel ?pintoPartyLabel WHERE {
  # Find Romano Prodi's political party when he was an office holder or politician
  OPTIONAL {
    ?prodi dbo:politicalAffiliation ?prodiParty .
    ?prodi rdfs:label ""Romano Prodi""@en .
    ?prodiParty rdfs:label ?prodiPartyLabel .
  }

  # Find Michele Pinto's political party association
  OPTIONAL {
    ?pinto dbo:politicalAffiliation ?pintoParty .
    ?pinto rdfs:label ""Michele Pinto""@en .
    ?pintoParty rdfs:label ?pintoPartyLabel .
  }
}
```",5,7,6,3,2,3,3,71,0,0,2,0,0.0,0
281,53,test,"Give me the war of the awardee of the award of Jonathon Band and entity in Colony of New Zealand and war of the profession, that is a military unit, of Heather Roy.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> ?v3 . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Colony_of_New_Zealand> . ?v2 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Jonathon_Band> <http://dbpedia.org/property/awards> ?v3 . ?v1 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Heather_Roy> <http://dbpedia.org/property/occupation> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. },"```sparql
# Query for Jonathon Band's award and related war
SELECT ?award ?war WHERE {
  ?person foaf:name ""Jonathon Band""@en .
  ?person dbo:awardsReceived ?award .
  ?award dbo:relatedToWar ?war .
}

UNION

# Query for Heather Roy's military unit and related war
SELECT ?profession ?war WHERE {
  ?person foaf:name ""Heather Roy""@en .
  ?person dbo:occupation ?profession .
  FILTER(?profession IN (dbo:MilitaryUnit)) # Assuming a class or property that identifies military units
  ?profession dbo:relatedToWar ?war .
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
404,41,test,"Give me the spouse of the person born, that is a royalty, as Princess Victoria Louise of Prussia and child of Ernest Augustus, Crown Prince of Hanover and parent of the child, that is a royalty, of Ernest Augustus, Duke of Brunswick.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/ontology/child> ?v4 . ?v2 <http://dbpedia.org/property/birthName> ""Princess Victoria Louise of Prussia""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ernest_Augustus,_Crown_Prince_of_Hanover> . }","```sparql
SELECT ?spouse WHERE {
  wd:Q1234567 wdt:P26 ?spouse .
}
```

In this query:
- `wd:Q1234567` should be replaced with the DBpedia identifier for Princess Victoria Louise of Prussia.
- The property `wdt:P26` is used to find the spouse.",5,7,6,2,3,3,3,71,0,0,1,0,0.0,0
915,18,test,"Give me the resident of the birthplace, that is a settlement, of the director of Pipe Dreams (1976 film) and father of the child, that is a fictional character and a soap character, of Phillip Spaulding.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoapCharacter>. ?v3 <http://dbpedia.org/property/father> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v1 <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Phillip_Spaulding> . ?result <http://dbpedia.org/ontology/residence> ?v2 . <http://dbpedia.org/resource/Pipe_Dreams_(1976_film)> <http://dbpedia.org/ontology/director> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
SELECT DISTINCT ?resident WHERE {
  # Step 1: Find the director of ""Pipe Dreams"" (1976 film)
  ?film dbp:title ""Pipe Dreams""@en .
  ?film dbp:year ""1976""^^xsd:gYear .
  ?film dbo:director ?director .

  # Step 2: Get the birthplace of the director
  ?director dbo:birthPlace ?birthPlace .
  
  # Step 3: Ensure the birthplace is a settlement
  ?birthPlace rdf:type dbp:Settlement .

  # Step 4: Identify Phillip Spaulding's child who is both fictional and a soap character
  ?child dbo:parent ?spaulding ;
         dbo:fictionalCharacter ""true""^^xsd:boolean ;
         dbo:soapCharacter ""true""^^xsd:boolean .
  ?spaulding dbp:name ""Phillip Spaulding""@en .

  # Step 5: Find the father of this child
  ?child dbo:father ?father .

  # Step 6: Get residents of the director's birthplace
  ?birthPlace dbo:resident ?resident .
}
```",5,8,6,3,2,3,2,20,0,0,1,0,0.0,0
487,17,test,"Give me the country of 2022 Vermont House of Representatives election and administration of the person born, that is a soccer player, as the birth name of Phil Scott.",SELECT ?result WHERE { <http://dbpedia.org/resource/Phil_Scott> <http://dbpedia.org/property/birthName> ?v0 . <http://dbpedia.org/resource/2022_Vermont_House_of_Representatives_election> <http://dbpedia.org/ontology/country> ?result . ?v3 <http://dbpedia.org/property/birthName> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?result <http://dbpedia.org/property/governor> ?v3 . },"```sparql
# Step 1: Get Phil Scott's birth name
SELECT ?birthName WHERE {
  ?person foaf:name ""Phil Scott""@en .
  ?person dbo:birthName ?birthName .
}

# Step 2: Confirm Vermont and the 2022 election
SELECT ?country WHERE {
  ?election dcterms:isPartOf <http://dbpedia.org/resource/Vermont> ;
           dbp:electionDate ?date .
  FILTER (YEAR(?date) = 2022)
  ?location dbo:country ?country .
}

# Step 3: Find soccer players with the same birth name
SELECT ?player WHERE {
  ?person foaf:name ?birthName .
  ?person dbo:occupation dbc:Soccer_players .
  ?person foaf:name ?player .
}
```",4,5,5,3,2,3,2,20,0,0,1,0,0.0,0
801,62,test,"Give me the professional in the alter ego of the true self of The Shadow and associated musical artist of Chris Taylor (music producer) and producer of the work, that is a musical work and a song and a work, of the professional, that is a musical artist, in Rapper.","SELECT ?result WHERE { ?v4 <http://xmlns.com/foaf/0.1/givenName> ""The Shadow""@en . ?v0 <http://dbpedia.org/property/occupation> ""Rapper""@en . ?result <http://dbpedia.org/property/occupation> ?v3 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v6 <http://dbpedia.org/ontology/producer> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v6 <http://dbpedia.org/property/writer> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Chris_Taylor_(music_producer)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://dbpedia.org/property/alterEgo> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?song WHERE {
  # Lamont Cranston is the alter ego of The Shadow
  dbr:Lamont_Cranston dbo:alterEgoOf dbr:The_Shadow .
  
  # Chris Taylor (music producer) associated with ASAP Rocky
  dbr:Chris_Taylor_(musician) dbo:associatedMusicalArtist dbr:ASAP_Rocky .

  # ASAP Rocky is a rapper
  dbr:ASAP_Rocky rdf:type dbo:Rapper .

  # Find songs by ASAP Rocky produced by Chris Taylor
  ?song dbo:artist dbr:ASAP_Rocky ;
        dbo:producer dbr:Chris_Taylor_(musician) .
}
```",7,11,8,3,3,3,3,71,0,0,2,0,0.0,0
9,60,test,"Give me the alma mater of the mayor, that is a politician, of the entity, that is an organisation, in Belfast and figure known as the nickname of the entity, that is an organisation and an educational institution, in Northern Ireland.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Northern_Ireland> . ?result <http://dbpedia.org/property/nickname> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v3 <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Belfast> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/property/leader> ?v2 . ?v2 <http://dbpedia.org/ontology/almaMater> ?result . ?v0 <http://dbpedia.org/property/nickname> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?mayorName ?universityName WHERE {
  # Find Queen's University Belfast by its nickname
  ?university a dbo:EducationalInstitution ;
              dbp:nickname ""QUB"" ;
              rdfs:label ?universityLabel .
  
  FILTER (CONTAINS(LCASE(?universityLabel), ""queen's university belfast""))
  
  # Find the current mayor of Belfast who is also a politician
  ?mayor dbo:almaMater ?university ;
         dbp:title ""Mayor"" ;
         dbp:city dbr:Belfast .
  
  # Get the name of the mayor and the university
  ?mayor rdfs:label ?mayorName .
  FILTER (LANG(?mayorName) = 'en')
  
  ?university rdfs:label ?universityLabel .
  FILTER (LANG(?universityLabel) = 'en' && CONTAINS(LCASE(?universityLabel), ""queen's university belfast""))
  
  BIND(REPLACE(STR(?universityLabel), ""Queen's University Belfast"", """") AS ?universityName)
}
```",6,10,7,3,2,3,3,71,0,0,1,0,0.0,0
994,58,test,"Give me the associated musical artist of S.A. Slayer and band member of the person born, that is a musical artist, as the persona of Don Dokken and associated musical artist of the band member, that is a band and a group and an organisation, of Meshuggah.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Meshuggah> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://dbpedia.org/property/birthName> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Don_Dokken> <http://xmlns.com/foaf/0.1/givenName> ?v4 . ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. <http://dbpedia.org/resource/S.A._Slayer> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
# Step 1: Identify S.A. Slayer as a musical artist
SELECT ?sASlayer WHERE {
  ?s ASLAYER dbp:occupation ""musician""@en .
}

# Step 2: Find the band member associated with S.A. Slayer
SELECT ?bandMember WHERE {
  ?s ASLAYER dbo:memberOf ?band .
  ?band dbo:member ?bandMember .
}

# Step 3: Identify Don Dokken's persona
SELECT ?dokkenPersona WHERE {
  dbp:DonDokken dbo:alterEgo ?dokkenPersona .
}

# Step 4: Find the associated musical artist with Don Dokken's persona
SELECT ?associatedArtist WHERE {
  ?dokkenPersona dbo:associatedMusicalArtist ?associatedArtist .
}

# Step 5 & 6: Identify Meshuggah as a band and organization, find a band member
SELECT ?meshuggahMember WHERE {
  dbp:Meshuggah rdf:type ?type .
  FILTER(?type IN (dbo:Band, dbo:Organization)) .
  dbp:Meshuggah dbo:member ?meshuggahMember .
}

# Step 7: Find the associated musical artist of this band member
SELECT ?associatedArtist WHERE {
  ?meshuggahMember dbo:associatedMusicalArtist ?associatedArtist .
}
```",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
994,63,test,"Give me the associated musical artist of the associated musical artist of the reference to Watchtower and associated musical artist of the band member, that is a band and a group and an organisation, of Meshuggah and band member of the person born, that is a musical artist, as Donald Maynard Dokken.","SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://dbpedia.org/property/birthName> ""Donald Maynard Dokken""@en . ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Meshuggah> . ?v3 <http://xmlns.com/foaf/0.1/name> ""Watchtower""@en . }","```sparql
# Step 1: Find associated artist of Watchtower (Anthrax)
SELECT ?anthraxArtist WHERE {
  wd:Q123456 wdt:P106 wd:Q33999 . # Anthrax is a musical artist
  wd:Q33999 wdt:P527 ?anthraxArtist . # Members of Anthrax
}

# Step 2: Find band member of Meshuggah who is also a band/group/organization (Bloodbath)
SELECT ?bloodbathMember WHERE {
  wd:Q1234568 wdt:P106 wd:Q33999 . # Bloodbath is a musical artist
  wd:Q33999 wdt:P527 ?bloodbathMember . # Members of Bloodbath
}

# Step 3: Find band member of Donald Maynard Dokken (George Lynch)
SELECT ?dokkenGuitarist WHERE {
  wd:Q1234567 wdt:P106 wd:Q33999 . # Dokken is a musical artist
  wd:Q33999 wdt:P127 ?dokkenGuitarist . # Members of Dokken
}

# Final Step: Find associated artist of the results from above (Opeth)
SELECT ?opethArtist WHERE {
  ?anthraxArtist wdt:P106 wd:Q33999 .
  ?bloodbathMember wdt:P106 wd:Q33999 .
  ?dokkenGuitarist wdt:P106 wd:Q33999 .
  wd:Q1234570 wdt:P106 wd:Q33999 . # Opeth is a musical artist
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
391,49,test,"Give me the actor of the movie, that is a movie and a work and a television show, with the professional in  and native of the figure known as Hub City.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/nickname> ""Hub City""@en . ?v0 <http://dbpedia.org/property/occupation> """"@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://dbpedia.org/property/starring> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://dbpedia.org/property/starring> ?result . }","```sparql
SELECT ?actor WHERE {
  ?movie dcterms:isPartOf ?work .
  ?movie dbo:type ""Film"" .
  ?movie dbo:adaptationOfWork ?work .
  ?tvShow dbo:basedOnWork ?work .
  ?tvShow dbo:type ""TelevisionSeries"" .
  
  ?person dbo:nationality dbc:United_States .
  ?person foaf:name ""Jim Henson""@en .
  ?person dbo:birthPlace dbr:Greenville,_South_Carolina .

  ?movie dbo:starring ?actor .
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
747,67,test,"Give me the band of the person born as the persona of Shèna and band of the writer of the work, that is a song, of Amba Shepherd and person born on 1985-04-29.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Shèna> <http://xmlns.com/foaf/0.1/givenName> ?v1 . ?v3 <http://dbpedia.org/property/birthName> ?v1 . ?v6 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Amba_Shepherd> . ?result <http://dbpedia.org/ontology/birthDate> ""1985-04-29""^^<http://www.w3.org/2001/XMLSchema#date> . ?v0 <http://dbpedia.org/property/writer> ?v6 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. }","```sparql
# Query for the band associated with the persona ""Shèna""
SELECT ?band WHERE {
  ?person rdfs:label ""Shèna""@en .
  ?person dbo:associatedBand ?band .
}

UNION

# Query for the band of the writer of the song ""Amba Shepherd"" born on 1985-04-29
SELECT ?band WHERE {
  ?person dbo:birthday ""1985-04-29""^^xsd:date ;
          dbo:worksForCreativeWork ?song .
  ?song rdfs:label ""Amba Shepherd""@en .
  ?person dbo:associatedBand ?band .
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
488,63,test,"Give me the birth place of the commander in the war, that is a military conflict and an event and a societal event, of Saitō Hajime and death place of the father, that is a politician, of Yūki Hideyasu and administration of the father of Emperor Go-Mizunoo.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Emperor_Go-Mizunoo> <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/property/leader> ?v2 . <http://dbpedia.org/resource/Saitō_Hajime> <http://dbpedia.org/ontology/battle> ?v4 . <http://dbpedia.org/resource/Yūki_Hideyasu> <http://dbpedia.org/property/father> ?v6 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v6 <http://dbpedia.org/ontology/deathPlace> ?result . ?v4 <http://dbpedia.org/ontology/commander> ?v3 . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
# Query for the birthplace of Saitō Hajime
SELECT ?birthPlace WHERE {
  wd:Q123456 wdt:P19 ?birthPlace .
}

UNION

# Query for the death place of Yūki Hideyasu's father
SELECT ?deathPlace WHERE {
  ?father wdt:P31 wd:Q5 ; # Person
          wdt:P22 wd:Q789012 . # Father of Yūki Hideyasu (replace with actual QID)
  ?father wdt:P20 ?deathPlace .
}

UNION

# Query for the administration of Emperor Go-Mizunoo's father
SELECT ?administration WHERE {
  ?father wdt:P31 wd:Q5 ; # Person
          wdt:P22 wd:Q345678 . # Father of Emperor Go-Mizunoo (replace with actual QID)
  ?father wdt:P39 ?administration .
}
```

Note: Replace `wd:Q123456`, `wd:Q789012`, and `wd:Q345678` with the correct DBpedia QIDs for Saitō Hajime, Yūki Hideyasu's father, and Emperor Go-Mizunoo's father respectively.",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
994,67,test,"Give me the associated musical artist of the band member, that is a band and a group and an organisation, of the band, that is an organisation, of Fredrik Thordendal and band member of the person born, that is a musical artist, as the persona of Don Dokken and associated musical artist of S.A. Slayer.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Don_Dokken> <http://xmlns.com/foaf/0.1/givenName> ?v4 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/birthName> ?v4 . ?v1 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Fredrik_Thordendal> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. <http://dbpedia.org/resource/S.A._Slayer> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . },"```sparql
SELECT ?bandMember ?associatedArtist WHERE {
  # Fredrik Thordendal's band
  dbpedia:Meshuggah dbo:member dbpedia:Fredrik_Thordendal .
  
  # Meshuggah as an organisation and group
  dbpedia:Meshuggah a dbo:MusicalGroup ;
                   a dbo:Organization .

  # Find a band member of Meshuggah who is also a musical artist
  dbpedia:Meshuggah dbo:member ?bandMember .
  ?bandMember dbo:birthPlace ?place .
  ?bandMember a dbo:MusicalArtist .

  # Persona of Don Dokken (associated with Dokken)
  ?persona dbo:associatedBand dbpedia:Dokken ;
           dbo:associatedBand dbpedia:S.A._Slayer .
  
  # Find the associated musical artist
  ?bandMember dbo:associatedBand ?persona .
  ?bandMember dbo:associatedMusicalArtist ?associatedArtist .

}
```",7,12,8,3,3,3,3,71,0,0,1,0,0.0,0
421,26,test,Give me the person born as the birth name of Dino Merlin and band member of the awardee of [[#Awards and nominations and native of Socialist Federal Republic of Yugoslavia.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v2 . ?v1 <http://dbpedia.org/property/awards> ""[[#Awards and nominations""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Socialist_Federal_Republic_of_Yugoslavia> . <http://dbpedia.org/resource/Dino_Merlin> <http://dbpedia.org/property/birthName> ?v2 . }","```sparql
# Step 1: Find Dino Merlin's birth name
SELECT ?birthName WHERE {
  wd:Q123456 foaf:name ""Dino Merlin""@en .
  wd:Q123456 dbo:birthName ?birthName .
}

# Step 2: Find band members with the same birth name
SELECT DISTINCT ?person WHERE {
  # Assuming we found Dino Merlin's birth name as ""Dino Merlin"" for demonstration purposes
  ?person foaf:name ""Dino Merlin""@en .
  ?band dbo:member ?person .
  ?band dbo:award ?award .
  
  # Step 3: Ensure the person is from the Socialist Federal Republic of Yugoslavia
  ?person dbo:nationality wd:Q1234 . # Q1234 should be replaced with the actual DBpedia ID for SFRY
}
```

Note: Replace `wd:Q123456` and `wd:Q1234` with the correct DBpedia IDs for Dino Merlin and the Socialist Federal Republic of Yugoslavia, respectively. The query assumes that the birth name is ""Dino Merlin"" for demonstration purposes; adjust as necessary based on actual data.",5,5,6,2,3,2,3,28,0,0,1,0,0.0,0
378,68,test,"Give me the war of the person born as the birth name of Carl Pontus Gahn and claim to fame of the commander in Great Siege of Gibraltar and war of the commander in the reference, that is a military conflict, to Peninsular War.","SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""Peninsular War""@en . ?v4 <http://dbpedia.org/property/birthName> ?v5 . ?v4 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/ontology/commander> ?v7 . ?v3 <http://dbpedia.org/ontology/knownFor> ?result . ?v7 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Great_Siege_of_Gibraltar> <http://dbpedia.org/ontology/commander> ?v3 . <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/property/birthName> ?v5 . }","```sparql
# Step 1: Find Carl Pontus Gahn's birth name
SELECT ?birthName WHERE {
  ?person rdfs:label ""Carl Pontus Gahn""@en .
  ?person foaf:name ?birthName .
}

# Step 2: Identify the commander in the Great Siege of Gibraltar
SELECT ?commander WHERE {
  ?siege dcterms:title ""Great Siege of Gibraltar""@en ;
         dbo:commander ?commander .
}

# Step 3: Determine the notable war associated with this commander
SELECT DISTINCT ?war WHERE {
  ?commander dbo:knownFor ?event .
  ?event rdf:type dbo:MilitaryConflict .
  FILTER NOT EXISTS { ?event dcterms:title ""Great Siege of Gibraltar""@en }
}

# Step 4: Find a common military conflict involving both individuals
SELECT DISTINCT ?commonWar WHERE {
  ?person rdfs:label ""Carl Pontus Gahn""@en ;
          dbo:knownFor ?commonWar .
  ?commander dbo:knownFor ?commonWar .
}
```",8,9,9,3,3,3,3,71,0,0,2,0,0.0,0
360,26,test,"Give me the reference to the author of Blinded by the Light and native of Johannesburg and writer of the work, that is an album, of Dave Flett.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Album>. ?v2 <http://dbpedia.org/property/author> ""Dave Flett""@en . <http://dbpedia.org/resource/Blinded_by_the_Light> <http://dbpedia.org/property/author> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . ?v2 <http://dbpedia.org/property/writer> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Johannesburg> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?author ?birthPlace ?album WHERE {
  # Find the author of ""Blinded by the Light"" or its inspiration
  VALUES ?work { 
    dbr:Blinded_by_the_Light_(song) 
    dbr:The_Streets_of_Philadelphia_(poem)
  }
  
  ?author dbo:writerOf ?work .
  ?author dbo:birthPlace dbr:Johannesburg .

  OPTIONAL {
    # Check for any albums associated with Dave Flett
    ?album dbo:composer ?author ;
           dbo:performer dbr:Dave_Flett .
  }

  FILTER EXISTS { ?author }
}
```",5,6,6,2,3,2,3,28,0,0,1,0,0.0,0
435,26,test,"Give me the work of the author of Iceland and region of Greenwich Mean Time and territory administered from the figure known, that is a settlement and a town and Icelandic, as Land of fire and ice.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Greenwich_Mean_Time> . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Iceland>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Iceland> <http://dbpedia.org/property/author> ?v2 . ?v1 <http://dbpedia.org/property/nickname> ""Land of fire and ice""@en . ?result <http://dbpedia.org/ontology/capital> ?v1 . ?result <http://dbpedia.org/property/author> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Town>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?work ?gmtRegion ?islandTerritory
WHERE {
  # Find works by Halldór Laxness
  ?author a dbo:Writer ;
          foaf:name ""Halldór Laxness""@en .
  ?author dbo:literaryWork ?work .

  # Find the region of Greenwich Mean Time (GMT)
  ?gmtRegion dbo:timeZone dbr:Greenwich_Mean_Time ;
             rdfs:label ?gmtLabel FILTER (lang(?gmtLabel) = 'en') .

  # Find Iceland as a settlement and town
  ?islandTerritory a dbo:Settlement, dbo:Town ;
                   foaf:name ""Iceland""@is .
}
```",5,8,6,2,3,2,3,28,0,0,1,0,0.0,0
427,70,test,"Give me the reference to the name of Italian People's Party (1994) and party of the father of the alumnus of Massachusetts Institute of Technology and party of the person born, that is an office holder and a politician, as the birth name of Romano Prodi.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://dbpedia.org/property/birthName> ?v1 . ?v7 <http://dbpedia.org/ontology/party> ?result . ?v0 <http://dbpedia.org/property/father> ?v7 . <http://dbpedia.org/resource/Italian_People's_Party_(1994)> <http://xmlns.com/foaf/0.1/name> ?v4 . <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/property/birthName> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Massachusetts_Institute_of_Technology> . ?v3 <http://dbpedia.org/ontology/party> ?result . },"```sparql
# Query 1: Italian People's Party (1994)
SELECT ?party WHERE {
  ?party dbo:type dbr:Political_party .
  ?party rdfs:label ?label .
  FILTER(CONTAINS(LCASE(?label), ""italian people's party"") && CONTAINS(LCASE(STR(YEAR(NOW()))), ""1994""))
}

# Query 2: Father of an MIT Alumnus
SELECT DISTINCT ?father ?fatherParty WHERE {
  ?alumnus dbo:almaMater dbr:Massachusetts_Institute_of_Technology .
  ?alumnus foaf:parent ?father .
  OPTIONAL { ?father dbo:partyAffiliation ?fatherParty }
}

# Query 3: Romano Prodi's Birth Name and Party
SELECT ?birthName ?party WHERE {
  dbr:Romano_Prodi dbo:birthName ?birthName .
  dbr:Romano_Prodi dbo:partyAffiliation ?party .
}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
360,20,test,"Give me the reference to Manfred Mann and native of the death place, that is a settlement, of Winnie Madikizela-Mandela and writer of The Roaring Silence.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . <http://dbpedia.org/resource/Winnie_Madikizela-Mandela> <http://dbpedia.org/ontology/deathPlace> ?v3 . ?result <http://xmlns.com/foaf/0.1/name> ""Manfred Mann""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/The_Roaring_Silence> <http://dbpedia.org/property/writer> ?result . }","```sparql
SELECT ?manfredMannReference ?winnieDeathPlace ?settlementLabel WHERE {
  # Get reference for Manfred Mann
  dbpedia:Manfred_Mann a dbo:MusicalArtist ;
                       foaf:name ""Manfred Mann""@en .
  
  OPTIONAL { 
    ?manfredMannReference dbr:subject dbpedia:Manfred_Mann .
  }
  
  # Get death place of Winnie Madikizela-Mandela
  dbpedia:Winnie_Madikizela-Mandela dbo:deathPlace ?winnieDeathPlace .

  # Ensure the death place is a settlement
  ?winnieDeathPlace a dbo:Settlement ;
                   rdfs:label ?settlementLabel .
  
  FILTER (lang(?settlementLabel) = 'en')
}
```",4,5,5,2,3,2,3,28,0,0,1,0,0.0,0
92,45,test,Give me the band member of Nevermore and associated musical artist of Jim Sheppard and band of the person born as the birth name of Joseph Michael.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Nevermore> . <http://dbpedia.org/resource/Joseph_Michael> <http://dbpedia.org/property/birthName> ?v0 . <http://dbpedia.org/resource/Jim_Sheppard> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/bandMember> ?v1 . },"```sparql
# Query to get a member of Nevermore
SELECT ?member WHERE {
  ?band dcterms:isPartOf db:Nevermore ;
        dbo:bandMember ?member .
}

UNION

# Query to find associated musical artist of Jim Sheppard
SELECT DISTINCT ?associatedArtist WHERE {
  ?artist foaf:name ""Jim Sheppard""@en ;
          dbo:associatedBand ?band .
  ?band dbo:bandMember ?associatedArtist .
}

UNION

# Query to get the band of the person born as Joseph Michael
SELECT ?band WHERE {
  ?person foaf:name ?name ;
          dbp:birthday ?birthday ;
          dbo:birthName ""Joseph Michael""@en .
  ?person dbo:memberOfBand ?band .
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
161,45,test,"Give me the commander in the force, that is an event, of the figure known as El Director and military force of Rif War and military force of Spanish Civil War.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> ?v0 . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Rif_War> . ?v0 <http://xmlns.com/foaf/0.1/nick> ""El Director""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  # Identify El Director and his involvement in military forces during specific wars
  dbr:El_Director a dbo:MilitaryPerson ;
                  dbo:militaryConflict [
                    a dbo:MilitaryConflict ;
                    dbo:name ?war .
                  ] .

  # Filter for Rif War or Spanish Civil War
  FILTER (
    ?war = dbr:Rif_War || 
          ?war = dbr:Spanish_Civil_War
  ) .

  # Find the commander of the event where El Director was involved
  ?event dbo:militaryCommander ?commander ;
         dbo:militaryConflict ?war .
}
```",5,6,6,3,3,3,3,71,0,0,11,0,0.0,0
232,44,test,"Give me the child of Jon Pertwee and native of the residence, that is a settlement and British, of Sylvie Bermann and actor of the claim to fame, that is a film and a military conflict, of Sean Pertwee.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v4 <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . <http://dbpedia.org/resource/Sean_Pertwee> <http://dbpedia.org/ontology/knownFor> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Sylvie_Bermann> <http://dbpedia.org/property/residence> ?v2 . <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/ontology/child> ?result . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  # Jon Pertwee's child who is an actor
  ?actor dbo:parent dbr:Jon_Pertwee .
  ?actor rdf:type dbo:Actor .

  # Sean Pertwee's claim to fame in a film and military conflict
  ?film dbo:starring ?actor .
  FILTER(STRSTARTS(LCASE(?film), ""the king's speech"")).
  
  ?conflict dbo:portrayal ?actor .
  FILTER(STRSTARTS(LCASE(?conflict), ""winston churchill"")).

  # Sylvie Bermann's residence
  ?residence dbo:native dbr:Sylvie_Bermann .
  ?residence rdf:type dbo:Settlement .
  ?residence dbo:country dbr:United_Kingdom .

  # Ensure the child is native of the residence
  ?actor dbo:nativePlace ?residence .

  # Bind the actor to the variable
  BIND(?actor AS ?child)
}
```",5,9,6,2,3,3,3,71,0,0,1,0,0.0,0
617,37,test,"Give me the parent of Nysa (wife of Pharnaces I of Pontus) and spouse of the child of the successor, that is a royalty, of Antiochus (son of Antiochus III the Great).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Nysa_(wife_of_Pharnaces_I_of_Pontus)> . <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/successor> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
# Step 1: Find Nysa's parent
SELECT ?parent WHERE {
  ?nysa dbo:spouse ?pharnaces .
  ?pharnaces rdfs:label ""Pharnaces I of Pontus""@en .
  ?nysa dbo:child ?parent .
}

# Step 2: Find Antiochus III the Great's successor and their child
SELECT ?successorChild WHERE {
  ?antiochus3 dbo:succeededBy ?successor .
  ?antiochus3 rdfs:label ""Antiochus III""@en .
  ?successor dbo:child ?successorChild .
}

# Step 3: Find the spouse of the successor's child who is a royalty
SELECT ?spouse WHERE {
  ?successorChild dbo:spouse ?spouse .
  ?spouse rdf:type dbo:Monarch .
}

# Step 4: Determine Nysa's parent's spouse
SELECT ?nysasParentSpouse WHERE {
  ?parent dbo:spouse ?nysasParentSpouse .
}
```",4,5,5,3,2,3,3,71,0,0,2,0,0.0,0
54,70,test,"Give me the predecessor of the child, that is an office holder and a royalty, of the reference to Thihapate of Mohnyin and child of the father of Soe Min Wimala Dewi and parent of the child of the parent of Thado Minsaw of Prome.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/ontology/child> ?result . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> . ?v1 <http://xmlns.com/foaf/0.1/name> ""Thihapate of Mohnyin""@en . ?v7 <http://dbpedia.org/ontology/parent> ?result . ?v7 <http://dbpedia.org/property/father> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Soe_Min_Wimala_Dewi> <http://dbpedia.org/property/father> ?v4 . }","```sparql
# Step 1: Find Thihapate of Mohnyin's child who is an office holder and royalty.
SELECT ?child WHERE {
    ?thihapate dbo:spouse ?parent .
    ?parent dbo:child ?child .
    ?child rdf:type dbo:Monarch .
    ?child dbo:officeHolder ?office .
}

# Step 2: Find Soe Min Wimala Dewi's father.
SELECT ?father WHERE {
    ?soeminwimaladewi dbo:parent ?father .
    ?soeminwimaladewi dbp:name ""Soe Min Wimala Dewi""@en .
}

# Step 3: Find Thado Minsaw of Prome's parent.
SELECT ?parent WHERE {
    ?thadominsaw dbo:parent ?parent .
    ?thadominsaw dbp:name ""Thado Minsaw of Prome""@en .
}

# Step 4: Combine the information to find the predecessor of the child from step 1.
SELECT ?predecessor WHERE {
    # Assuming we have identified the child as ?child from step 1
    ?child dbo:predecessor ?predecessor .
}
```

Note: The above SPARQL queries are structured based on assumptions about the relationships and properties available in DBpedia. Adjustments may be necessary depending on the actual data structure and availability of specific entities and their relationships.",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
48,17,test,"Give me the band of the actor, that is a musical artist, of the show with Stacey Dash and band of Carl Falk.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/property/starring> ?v3 . ?v0 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Stacey_Dash> . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Carl_Falk> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
# Step 1: Find a show featuring Stacey Dash
SELECT ?show WHERE {
  ?show dbo:starring dbpedia:Stacey_Dash .
}

# Step 2: Identify actors in that show who are also musical artists
SELECT DISTINCT ?actor ?band WHERE {
  # Replace 'YourShow' with the actual URI of the show found from step 1
  ?show dbo:starring ?actor .
  OPTIONAL { ?actor dbo:musicalArtist true . }
  OPTIONAL { ?actor foaf:page dbpedia:BandName . } # Assuming band information is linked via a page property
}

# Step 3: Find the band associated with Carl Falk
SELECT DISTINCT ?band WHERE {
  ?person foaf:name ""Carl Falk""@en .
  ?person dbo:musicalArtist true .
  ?person foaf:page ?band .
}

# Step 4: Combine results to find the band of the actor who is a musical artist from the show with Stacey Dash
SELECT DISTINCT ?actorBand WHERE {
  # Replace 'YourActor' and 'CarlFalksBand' with actual URIs found in previous steps
  ?actor foaf:page ?actorBand .
}
```",4,5,5,3,2,3,2,20,0,0,1,0,0.0,0
9,68,test,"Give me the alma mater of the mayor, that is a politician, of the entity, that is an organisation, in Belfast and figure known as the nickname of Queen's University Belfast and alma mater of the awardee of the reference, that is an award, to Royal Medals.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Belfast> . <http://dbpedia.org/resource/Queen's_University_Belfast> <http://dbpedia.org/property/nickname> ?v3 . ?v4 <http://dbpedia.org/ontology/almaMater> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v7 <http://dbpedia.org/ontology/almaMater> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?result <http://dbpedia.org/property/nickname> ?v3 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v5 <http://dbpedia.org/property/leader> ?v4 . ?v7 <http://dbpedia.org/property/awards> ?v0 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Royal Medals""@en . }","```sparql
# Step 1: Find the current mayor of Belfast
SELECT ?mayor WHERE {
  ?belfast dbo:type dbr:City;
           dbo:mayor ?mayor.
}

# Step 2: Get the alma mater of the mayor
SELECT DISTINCT ?almaMater WHERE {
  ?mayor dbo:almaMater ?almaMater.
}

# Step 3: Find the nickname of Queen's University Belfast
SELECT ?nickname WHERE {
  dbr:Queen's_University_Belfast dbo:nickname ?nickname.
}

# Step 4: Identify awardees of Royal Medals and their alma maters
SELECT DISTINCT ?awardee ?almaMater WHERE {
  ?awardee dbo:award dbr:Royal_Medal;
           dbo:almaMater ?almaMater.
}

# Step 5: Find common alma mater
SELECT DISTINCT ?commonAlmaMater WHERE {
  VALUES (?mayorAlmaMater ?queenNickname ?royalMedalAwardeeAlmaMater) {
    (VALUES ?x { ?mayorAlmaMater } )
    (VALUES ?y { ?queenNickname } )
    (VALUES ?z { ?royalMedalAwardeeAlmaMater } )
  }
  ?commonAlmaMater rdfs:label ?label.
  FILTER(?mayorAlmaMater = ?commonAlmaMater && ?queenNickname = ?commonAlmaMater && ?royalMedalAwardeeAlmaMater = ?commonAlmaMater)
}
```",8,11,9,3,3,3,3,71,0,0,1,0,0.0,0
48,16,test,"Give me the band of the actor, that is a musical artist, of Honor Up and band of the writer of Emotion (Carly Rae Jepsen album).",SELECT ?result WHERE { <http://dbpedia.org/resource/Honor_Up> <http://dbpedia.org/property/starring> ?v3 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Emotion_(Carly_Rae_Jepsen_album)> <http://dbpedia.org/property/writer> ?v2 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
# Query 1: Find the band of the actor, who is a musical artist in ""Honor Up""
SELECT ?actor ?band WHERE {
  ?film dcterms:title ""Honor Up""@en .
  ?film dbo:starring ?actor .
  ?actor dbo:occupation dbp:musical_artist .
  OPTIONAL { ?actor dbo:memberOfBand ?band . }
}

# Query 2: Find the band of the writer(s) of ""Emotion"" from Carly Rae Jepsen's album
SELECT ?writer ?band WHERE {
  ?song dcterms:title ""Emotion""@en ;
        dbo:lyricsBy ?writer .
  OPTIONAL { ?writer dbo:memberOfBand ?band . }
}
```",4,5,5,2,2,3,2,20,0,0,1,0,0.0,0
801,48,test,"Give me the professional in the alter ego of the true self of The Shadow and associated musical artist of the writer, that is a musical artist and an artist, of 40 Dayz & 40 Nightz.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/alterEgo> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/occupation> ?v2 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://xmlns.com/foaf/0.1/givenName> ""The Shadow""@en . <http://dbpedia.org/resource/40_Dayz_&_40_Nightz> <http://dbpedia.org/property/writer> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?alterEgo ?professional ?associatedArtist ?songArtist1 ?songArtist2 WHERE {
  # The Shadow's alter ego
  dbr:The_Shadow dbo:alterEgo dbr:Lamont_Cranston .
  
  # Lamont Cranston's professional identity
  dbr:Lamont_Cranston dbo:profession ?professional .

  # Musical artists associated with Walter B. Gibson
  OPTIONAL {
    dbr:Walter_B._Gibson dbo:associatedMusicalArtist ?associatedArtist .
  }

  # Artists of ""40 Dayz & 40 Nightz""
  dbr:""40_Dayz_%26_40_Nightz"" dbo:artist ?songArtist1 ;
                               dbo:artist ?songArtist2 .

  # Filter to find commonality
  FILTER(?professional = ?associatedArtist || ?professional = ?songArtist1 || ?professional = ?songArtist2)
}
```",5,7,6,3,2,3,3,71,0,0,22,0,0.0,0
488,57,test,"Give me the birth place of Enomoto Takeaki and death place of the father, that is a politician, of the father, that is an office holder, of Matsudaira Tadamasa and administration of the father of Emperor Go-Mizunoo.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?v5 . ?result <http://dbpedia.org/property/leader> ?v3 . <http://dbpedia.org/resource/Enomoto_Takeaki> <http://dbpedia.org/ontology/birthPlace> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Emperor_Go-Mizunoo> <http://dbpedia.org/property/father> ?v3 . <http://dbpedia.org/resource/Matsudaira_Tadamasa> <http://dbpedia.org/property/father> ?v0 . ?v5 <http://dbpedia.org/ontology/deathPlace> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
# Query 1: Birth place of Enomoto Takeaki
SELECT ?birthPlace WHERE {
  wd:Q123456 rdfs:label ""Enomoto Takeaki""@en .
  wd:Q123456 dbo:birthPlace ?birthPlace .
} LIMIT 1

# Query 2: Death place of Matsudaira Tadamasa's father
SELECT ?deathPlace WHERE {
  wd:Q789012 rdfs:label ""Matsudaira Tadamasa""@en .
  wd:Q789012 dbo:father ?father .
  ?father dbo:occupation ?occupation .
  FILTER(CONTAINS(LCASE(STR(?occupation)), ""office holder"") || CONTAINS(LCASE(STR(?occupation)), ""politician"")) .
  ?father dbo:deathPlace ?deathPlace .
} LIMIT 1

# Query 3: Administration of Emperor Go-Mizunoo's father
SELECT ?administration WHERE {
  wd:Q345678 rdfs:label ""Emperor Go-Mizunoo""@en .
  wd:Q345678 dbo:father ?father .
  ?father dbo:officeHeld ?office .
  ?office dbo:administrativeBody ?administration .
} LIMIT 1
```

Note: The placeholders `wd:Q123456`, `wd:Q789012`, and `wd:Q345678` should be replaced with the actual DBpedia resource identifiers for Enomoto Takeaki, Matsudaira Tadamasa, and Emperor Go-Mizunoo respectively. These can be found by querying DBpedia or using a service like Wikidata to get the correct QIDs.",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
427,50,test,"Give me the party of the father of the alumnus of Massachusetts Institute of Technology and party of the person born, that is an office holder and a politician, as Romano Antonio Prodi.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/birthName> ""Romano Antonio Prodi""@en . ?v0 <http://dbpedia.org/property/father> ?v4 . ?v3 <http://dbpedia.org/ontology/party> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://dbpedia.org/ontology/party> ?result . ?v0 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Massachusetts_Institute_of_Technology> . }","```sparql
# Query for the political party of the father of an MIT alumnus
SELECT ?fatherParty WHERE {
  ?alumnus dbo:almaMater dbr:Massachusetts_Institute_of_Technology .
  ?alumnus foaf:parent ?father .
  ?father dbo:politicalAffiliation ?fatherParty .
  FILTER EXISTS { ?alumnus a dbo:Person } # Ensure it's a person
}

UNION

# Query for the political party of Romano Prodi
SELECT ?party WHERE {
  dbr:Romano_Prodi dbo:politicalAffiliation ?party .
  FILTER EXISTS { 
    ?officeHolder dbo:positionTitle ?title ;
                 dbo:agent dbr:Romano_Prodi .
    ?politician dbo:birthPlace ?place ;
                a dbo:Politician .
    FILTER (?title != """" && ?place != """")
  }
}
```",5,7,6,3,2,3,3,71,0,0,3,0,0.0,0
492,67,test,"Give me the person decedent at French Algeria and person decedent at the capital, that is a settlement, of the country of Khemis Miliana District and commander in the war, that is a military conflict and an event, of the commander in Battle of Verdun.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/French_Algeria> . ?v0 <http://dbpedia.org/ontology/battle> ?v6 . ?v6 <http://dbpedia.org/ontology/commander> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/deathPlace> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Khemis_Miliana_District> <http://dbpedia.org/ontology/country> ?v1 . ?v1 <http://dbpedia.org/ontology/capital> ?v3 . <http://dbpedia.org/resource/Battle_of_Verdun> <http://dbpedia.org/ontology/commander> ?v0 . },"```sparql
# Query 1: Find the capital of Khemis Miliana District
SELECT ?capital WHERE {
  ?district dcterms:subject dbc:Districts_of_Algeria.
  ?district dbo:officialName ""Khemis Miliana District""@en.
  ?district dbo:seat ?capital.
}

# Query 2: Find person decedent at French Algeria and the capital of Khemis Miliana District
SELECT DISTINCT ?person WHERE {
  ?person dbo:deathPlace ?place1.
  ?place1 rdfs:label ""French Algeria""@en.
  
  ?person dbo:deathPlace ?place2.
  VALUES ?capital { <INSERT_CAPITAL_URI_HERE> } # Replace with the URI obtained from Query 1
  ?place2 = ?capital.
}

# Query 3: Identify the commander in the Battle of Verdun
SELECT DISTINCT ?commander WHERE {
  ?battle dbo:eventType dbc:Military_conflicts_of_World_War_I.
  ?battle rdfs:label ""Battle of Verdun""@en.
  ?battle dbo:commander ?commander.
}

# Query 4: Find person decedent at the capital and commander in a war involving the Battle of Verdun's commander
SELECT DISTINCT ?person WHERE {
  ?war dbo:eventType dbc:Military_conflicts.
  ?war dbo:commander ?commander1.
  
  # Commander from the Battle of Verdun
  VALUES ?commander2 { <INSERT_COMMANDER_URI_HERE> } # Replace with the URI obtained from Query 3
  
  FILTER (?commander1 = ?commander2 || ?commander1 != ?commander2)
  
  ?person dbo:deathPlace ?place.
  VALUES ?capital { <INSERT_CAPITAL_URI_HERE> } # Replace with the URI obtained from Query 1
  ?place = ?capital.
  
  ?war dbo:commander ?person.
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
701,60,test,"Give me the spouse of the father of the commander, that is a royalty, in Battle of Perire and parent of the child of the spouse of Amun-her-khepeshef.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v1 . <http://dbpedia.org/resource/Battle_of_Perire> <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://dbpedia.org/property/father> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://dbpedia.org/ontology/child> ?v2 . <http://dbpedia.org/resource/Amun-her-khepeshef> <http://dbpedia.org/ontology/spouse> ?v3 . },"```sparql
# Step 1: Identify the commander in the Battle of Perire
SELECT ?commander WHERE {
  ?battle dbp:battleName ""Battle of Perire""@en .
  ?battle dbo:commander ?commander .
}

# Step 2: Find the father of this commander
SELECT ?father WHERE {
  ?commander dbo:father ?father .
}

# Step 3: Determine the spouse of this father
SELECT ?spouse WHERE {
  ?father dbo:spouse ?spouse .
}

# Step 4: Check if the spouse is royalty
SELECT DISTINCT ?spouse WHERE {
  ?spouse rdf:type dbo:Monarch .
  ?father dbo:spouse ?spouse .
}

# Step 5: Identify Amun-her-khepeshef's spouse
SELECT ?amunSpouse WHERE {
  ?amunHerKhepeshef dbo:spouse ?amunSpouse .
  FILTER(STR(?amunHerKhepeshef) = ""Amun-her-khepeshef""@en)
}

# Step 6: Find the child of Amun-her-khepeshef's spouse
SELECT ?child WHERE {
  ?amunSpouse dbo:child ?child .
}

# Step 7: Check if the spouse from step 3 is a parent of the child from step 6
SELECT DISTINCT ?spouse WHERE {
  ?father dbo:spouse ?spouse .
  ?spouse rdf:type dbo:Monarch .
  ?amunSpouse dbo:child ?child .
  ?spouse dbo:parent ?child .
}
```",6,7,7,3,2,3,3,71,0,0,1,0,0.0,0
747,28,test,Give me the band of Shèna and person born on the birth date of Pavlo Khudzik and band of Amba Shepherd.,SELECT ?result WHERE { <http://dbpedia.org/resource/Shèna> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Amba_Shepherd> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Pavlo_Khudzik> <http://dbpedia.org/ontology/birthDate> ?v1 . ?result <http://dbpedia.org/ontology/birthDate> ?v1 . },"```sparql
# Query to find the band associated with Shèna
SELECT ?band WHERE {
  ?s dbr:Shèna .
  ?s dbo:associatedBand ?band .
}

UNION

# Query to find Pavlo Khudzik's birth date
SELECT ?birthDate WHERE {
  ?pavlo dbr:Pavlo_Khudzik .
  ?pavlo dbo:birthday ?birthDate .
}

UNION

# Query to find a person born on the same date as Pavlo Khudzik
SELECT DISTINCT ?person WHERE {
  ?pavlo dbr:Pavlo_Khudzik .
  ?pavlo dbo:birthday ?birthDate .
  ?person dbo:birthday ?birthDate .
  FILTER(?person != dbr:Pavlo_Khudzik)
}

UNION

# Query to find the band associated with Amba Shepherd
SELECT ?band WHERE {
  ?s dbr:Amba_Shepherd .
  ?s dbo:associatedBand ?band .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
659,50,test,"Give me the commander in the war, that is an event and a military conflict, of the figure known, that is a military unit and an organisation, as 'Polish Horse' and military force of the force, that is a societal event and an event and a military conflict, of Rutger Jan Schimmelpenninck.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/property/nickname> ""'Polish Horse'""@en . ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://dbpedia.org/ontology/battle> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v4 <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  # Find the military unit known as 'Polish Horse'
  dbr:Polish_Horse a dbo:MilitaryUnit .

  # Identify Rutger Jan Schimmelpenninck's associated force
  dbr:Rutger_Jan_Schimmelpenninck dbo:militaryConflict ?conflict .
  
  # Find the war that is both an event and a military conflict
  ?conflict a dbo:MilitaryConflict ;
           dbo:commander ?commander .

  # Ensure 'Polish Horse' was part of this conflict
  ?conflict dbo:participatingUnit dbr:Polish_Horse .
}
```",5,12,6,3,2,3,3,71,0,0,31,0,0.0,0
182,27,test,Give me the war of Mahesh Senanayake and war of the work of Gotabhaya Rajapaksa and entity in the nationality of Tamara Kunanayakam.,SELECT ?result WHERE { <http://dbpedia.org/resource/Tamara_Kunanayakam> <http://dbpedia.org/ontology/nationality> ?v0 . ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v3 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Gotabhaya_Rajapaksa> . ?result <http://dbpedia.org/ontology/place> ?v0 . <http://dbpedia.org/resource/Mahesh_Senanayake> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?war1 ?war2 ?entity
WHERE {
  # War associated with Mahesh Senanayake
  ?person1 foaf:name ""Mahesh Senanayake""@en .
  ?person1 dbo:occupation dbo:MilitaryPerson .
  ?person1 dbo:participatedIn ?war1 .

  # War related to Gotabhaya Rajapaksa's work
  ?person2 foaf:name ""Gotabhaya Rajapaksa""@en .
  ?person2 dbo:occupation dbo:SecretaryOfDefence .
  ?person2 dbo:participatedIn ?war2 .

  # Entity in the nationality of Tamara Kunanayakam (Sri Lankan)
  ?person3 foaf:name ""Tamara Kunanayakam""@en .
  ?person3 dbo:nationality dbr:Sri_Lanka .
  ?entity dbo:country dbr:Sri_Lanka .

  FILTER(?war1 != ?war2) # Ensure different wars
}
```",5,5,6,2,3,2,3,28,0,0,1,0,0.0,0
701,64,test,"Give me the parent of Henuttawy (19th dynasty) and parent of the child of the spouse of Amun-her-khepeshef and spouse of the father of the commander, that is a royalty, in Battle of Perire.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> ?v1 . ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Henuttawy_(19th_dynasty)> . <http://dbpedia.org/resource/Battle_of_Perire> <http://dbpedia.org/ontology/commander> ?v0 . <http://dbpedia.org/resource/Amun-her-khepeshef> <http://dbpedia.org/ontology/spouse> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?henuttawyParent ?childOfSpouseParent ?royalSpouse WHERE {
  # Step 1: Find Henuttawy (19th dynasty) and her parent
  ?henuttawy a dbo:Person ;
             rdfs:label ""Henuttawy (19th dynasty)""@en .
  OPTIONAL { ?henuttawy dbo:parent ?henuttawyParent . }

  # Step 2: Find Amun-her-khepeshef's spouse and their child
  ?amunHerKhepeshef a dbo:Person ;
                    rdfs:label ""Amun-her-khepeshef""@en .
  OPTIONAL { ?spouse dbo:spouse ?amunHerKhepeshef . }
  OPTIONAL { ?spouse dbo:child ?childOfSpouse . }
  OPTIONAL { ?childOfSpouse dbo:parent ?childOfSpouseParent . }

  # Step 3: Find the commander in the Battle of Perire and their father's spouse
  ?battle a dbo:MilitaryConflict ;
          rdfs:label ""Battle of Perire""@en .
  ?commander dbo:participatedIn ?battle ;
             a dbo:Person .
  OPTIONAL { ?father dbo:child ?commander . }
  OPTIONAL { ?father dbo:spouse ?royalSpouse . }

  # Step 4: Check if the spouse is royalty
  FILTER (?royalSpouse != null && EXISTS {
    ?royalSpouse a dbo:RoyalPerson .
  })

}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
232,53,test,"Give me the native of the residence, that is a settlement and British, of Sylvie Bermann and actor of Dog Soldiers (film) and child of the person born as the birth name of Jon Pertwee.",SELECT ?result WHERE { <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Sylvie_Bermann> <http://dbpedia.org/property/residence> ?v1 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v2 <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Dog_Soldiers_(film)> <http://dbpedia.org/ontology/starring> ?result . },"```sparql
# Step 1: Find Sylvie Bermann's residence
SELECT ?residence WHERE {
  wd:Q123456 wdt:P19 ?residence .
}

# Step 2: Check if the residence is a settlement and British
SELECT ?residence WHERE {
  ?residence wdt:P31/wdt:P279* wd:Q515 . # Settlement type
  ?residence wdt:P17 wd:Q145 .           # Located in United Kingdom
}

# Step 3: Find the actor of ""Dog Soldiers""
SELECT ?actor WHERE {
  wd:Q1234568 wdt:P161 ?actor .
}

# Step 4: Identify Jon Pertwee's birth name and his child
SELECT ?child WHERE {
  wd:Q123457 wdt:P735 ?child . # Child of Jon Pertwee
}

# Step 5: Find the native place of Sylvie Bermann's residence
SELECT ?nativePlace WHERE {
  ?actor wdt:P19 ?nativePlace .
}
```

Note: Replace `wd:Q123456`, `wd:Q1234568`, and `wd:Q123457` with the actual DBpedia identifiers for Sylvie Bermann, ""Dog Soldiers"" film, and Jon Pertwee respectively.",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
197,8,test,Give me the birthplace of the awardee of Leroy P. Steele Prize and birthplace of Dumitru Nadu.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> ""Leroy P. Steele Prize""@en . <http://dbpedia.org/resource/Dumitru_Nadu> <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . }","```sparql
# Query to get the birthplace of a recent awardee of the Leroy P. Steele Prize
SELECT ?birthPlace WHERE {
  ?person dbo:award dbpedia:Leroy_P._Steele_Prize .
  ?person dbo:birthPlace ?birthPlace .
}

UNION

# Query to get the birthplace of Dumitru Nadu
SELECT ?birthPlace WHERE {
  dbpedia:Dumitru_Nadu dbo:birthPlace ?birthPlace .
}
```",3,3,4,2,2,2,2,9,0,0,1,0,0.0,0
747,45,test,Give me the person born on 1985-04-29 and band of Amba Shepherd and band of the person born as the persona of Shèna.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Amba_Shepherd> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Shèna> <http://xmlns.com/foaf/0.1/givenName> ?v0 . ?result <http://dbpedia.org/ontology/birthDate> ""1985-04-29""^^<http://www.w3.org/2001/XMLSchema#date> . ?v1 <http://dbpedia.org/property/birthName> ?v0 . }","```sparql
# Find Amba Shepherd and her associated band
SELECT ?person ?band WHERE {
  ?person rdfs:label ""Amba Shepherd""@en .
  OPTIONAL { ?person dbo:birthDate ?birthdate . }
  OPTIONAL { ?person dbo:associatedBand ?band . }
}

UNION

# Find the person born on 1985-04-29 and their associated band
SELECT ?person ?band WHERE {
  ?person dbo:birthDate ""1985-04-29""^^xsd:date .
  OPTIONAL { ?person dbo:associatedBand ?band . }
}

UNION

# Identify the persona of Shèna and find their real name or identity
SELECT ?persona ?realName WHERE {
  ?persona rdfs:label ""Shèna""@en .
  ?alias foaf:name ?persona ;
         dbo:wikiPageRedirects ?realName .
}

UNION

# Find the band associated with the persona of Shèna
SELECT ?person ?band WHERE {
  ?alias foaf:name ""Shèna""@en ;
         dbo:wikiPageRedirects ?person .
  OPTIONAL { ?person dbo:associatedBand ?band . }
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
963,17,test,"Give me the entity in Serbia and administration of the ruling party, that is a political party, in the location for 21205.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/leaderParty> ?v3 . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Serbia> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v0 <http://dbpedia.org/ontology/postalCode> ""21205"" . ?v0 <http://dbpedia.org/property/leaderParty> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?party WHERE {
  ?party a dbo:PoliticalParty ;
         dbo:country dbr:Serbia ;
         dbo:location dbr:Belgrade .
}
```",4,5,5,3,2,3,2,20,0,0,84,0,0.0,0
391,47,test,"Give me the native of the figure known as Hub City and actor of the claim to fame, that is a work, of the spouse of Sherry Hormann.","SELECT ?result WHERE { <http://dbpedia.org/resource/Sherry_Hormann> <http://dbpedia.org/ontology/spouse> ?v0 . ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v4 <http://dbpedia.org/ontology/starring> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/property/nickname> ""Hub City""@en . ?v0 <http://dbpedia.org/ontology/knownFor> ?v4 . }","```sparql
# Step 1: Find Sherry Hormann's spouse
SELECT ?spouse WHERE {
  dbpedia:Sherry_Hormann dbo:spouse ?spouse .
}

# Step 2: Find the notable work of the spouse (assuming it's a film)
SELECT DISTINCT ?film WHERE {
  ?spouse dbo:actedIn ?film .
  FILTER NOT EXISTS { ?film rdf:type dbo:Film }
}

# Step 3: Identify the actor known as ""Hub City"" who acted in that film
SELECT ?actor WHERE {
  ?actor rdfs:label ""Hub City""@en .
  ?actor dbo:actedIn ?film .
}

# Step 4: Find the native place of this actor
SELECT ?nativePlace WHERE {
  ?actor dbo:nativePlace ?nativePlace .
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
392,22,test,"Give me the entity in the region, that is a country, of Central European Time and region of the time zone, that is a sports event, of Aguilar de Segarra.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/timeZone> ?v3 . ?result <http://dbpedia.org/ontology/country> ?v2 . ?v2 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . <http://dbpedia.org/resource/Aguilar_de_Segarra> <http://dbpedia.org/ontology/timeZone> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsEvent>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?country ?sportsEvent WHERE {
  # Find the time zone of Aguilar de Segarra
  dbr:Aguilar_de_Segarra dbo:timeZone ?tz .
  
  # Identify the region associated with Central European Time (CET)
  ?tz dbo:timezoneName ""Central European Time"" ;
      dbo:region ?country .

  # Ensure the region is a country
  ?country rdf:type dbo:Country .

  # Find any sports events associated with this country
  OPTIONAL { ?sportsEvent dbo:location ?country . 
             ?sportsEvent rdf:type dbo:SportsEvent }
}
```",4,6,5,2,2,2,3,28,0,0,28787,0,0.0,0
9,35,test,"Give me the alma mater of the mayor, that is a politician, of Northern Ireland Forum and figure known as the nickname of Queen's University Belfast.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/almaMater> ?result . <http://dbpedia.org/resource/Queen's_University_Belfast> <http://dbpedia.org/property/nickname> ?v1 . ?result <http://dbpedia.org/property/nickname> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Northern_Ireland_Forum> <http://dbpedia.org/property/leader> ?v2 . },"```sparql
# Query to find the alma mater of the mayor who is a politician from the Northern Ireland Forum
SELECT ?mayor ?almaMater WHERE {
  ?mayor dbo:occupation dbr:Politician ;
         dbo:memberOf dbr:Northern_Ireland_Forum .
  ?mayor foaf:almaMater ?almaMater .
}

# Query to find the alma mater of a figure known as the nickname of Queen's University Belfast
SELECT ?figure ?nickname ?almaMater WHERE {
  ?figure dbo:almaMater dbr:Queen%27s_University_Belfast ;
          foaf:name ?name .
  ?figure rdfs:label ?nickname .
  FILTER(CONTAINS(LCASE(?nickname), ""nickname of queens university belfast""))
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
488,62,test,"Give me the birth place of the commander in the war, that is a military conflict and an event and a societal event, of Saitō Hajime and administration of Emperor Go-Yōzei and death place of the father, that is a politician, of the father, that is an office holder, of Matsudaira Tadamasa.",SELECT ?result WHERE { <http://dbpedia.org/resource/Saitō_Hajime> <http://dbpedia.org/ontology/battle> ?v4 . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Emperor_Go-Yōzei> . <http://dbpedia.org/resource/Matsudaira_Tadamasa> <http://dbpedia.org/property/father> ?v0 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/father> ?v6 . ?v4 <http://dbpedia.org/ontology/commander> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v6 <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
SELECT DISTINCT ?birthPlace ?deathPlace WHERE {
  # Saitō Hajime's birthplace
  ?saitoHajime dbo:birthPlace ?birthPlace .
  FILTER(STRSTARTS(LCASE(?saitoHajime), ""saitō_hajime"")) .

  # Matsudaira Nobutsuna's death place
  ?matsudairaNobutsuna dbo:deathPlace ?deathPlace .
  FILTER(STRSTARTS(LCASE(?matsudairaNobutsuna), ""matsudaira_nobutsuna"")) .

  # Linking Matsudaira Katamori to Matsudaira Nobutsuna
  ?matsudairaKatamori dbo:father ?matsudairaNobutsuna .
  FILTER(STRSTARTS(LCASE(?matsudairaKatamori), ""matsudaira_katamori"")) .

  # Linking Matsudaira Tadamasa to Matsudaira Katamori
  ?matsudairaTadamasa dbo:father ?matsudairaKatamori .
  FILTER(STRSTARTS(LCASE(?matsudairaTadamasa), ""matsudaira_tadamasa"")) .

  # Boshin War as a military conflict, event, and societal event
  ?boshinWar rdf:type dbo:MilitaryConflict ;
             dbo:wikiPageRedirects db:Boshin_War .
  
  # Emperor Go-Yōzei's administration
  ?goYozei dbo:reignStartYear ?startYear ;
           dbo:reignEndYear ?endYear .
  FILTER(STRSTARTS(LCASE(?goYozei), ""emperor_go-yozei"")) .

}
```",7,12,8,3,3,3,3,71,0,0,1,0,0.0,0
184,50,test,"Give me the parent of the child of Archduke Joseph Francis of Austria and child of the child of the parent, that is a royalty, of Archduke Ladislaus Philipp of Austria.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Francis_of_Austria> . <http://dbpedia.org/resource/Archduke_Ladislaus_Philipp_of_Austria> <http://dbpedia.org/ontology/parent> ?v0 . ?result <http://dbpedia.org/ontology/child> ?v3 . ?v4 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v4 . },"```sparql
# Step 1: Find a direct child of Archduke Joseph Francis of Austria
SELECT ?child WHERE {
    wd:Q123456 wdt:P40 ?child .
}

# Step 2: Find the parent of that child
SELECT ?parent WHERE {
    ?child wdt:P22 ?parent .
}

# Step 3: Identify Archduke Ladislaus Philipp of Austria's parent
SELECT ?ladislausParent WHERE {
    wd:Q654321 wdt:P22 ?ladislausParent .
}

# Step 4: Find a child of this parent who is royalty
SELECT ?royaltyChild WHERE {
    ?ladislausParent wdt:P40 ?royaltyChild .
    ?royaltyChild wdt:P31/wdt:P279* wd:Q5 . # Ensure the person is a human or subclass thereof
}

# Step 5: Find the child of that royalty child
SELECT ?grandchild WHERE {
    ?royaltyChild wdt:P40 ?grandchild .
}

# Step 6: Identify the parent of this final grandchild
SELECT ?finalParent WHERE {
    ?grandchild wdt:P22 ?finalParent .
}
```

Note: Replace `wd:Q123456` with the actual DBpedia ID for Archduke Joseph Francis of Austria and `wd:Q654321` with the ID for Archduke Ladislaus Philipp of Austria. The queries assume that `P40` is used for child relationships, `P22` for parent relationships, and `P31`/`P279*` to ensure royalty status.",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
161,49,test,"Give me the military force of the force, that is a societal event and an event and a military conflict, of Francisco Franco and commander in the force, that is an event, of the figure known as El Director.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://xmlns.com/foaf/0.1/nick> ""El Director""@en . ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Franco> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce WHERE {
  ?franco dbo:nationality dbr:Spanish_people ;
          foaf:name ""Francisco Franco""@en .
  
  ?conflict dbo:participatedInMilitaryConflict ?franco ;
            a dbo:MilitaryConflict .

  ?conflict dbo:hasParticipant ?militaryForce .

  FILTER(CONTAINS(LCASE(?conflict), ""spanish civil war""))
}
```",5,9,6,3,2,3,3,71,0,0,34,0,0.0,0
547,70,test,Give me the resting place of the awardee of the award of Gerald Graham and resting place of the actor of the show with Emily Richard and resting place of the child of James Burton (property developer).,SELECT ?result WHERE { <http://dbpedia.org/resource/James_Burton_(property_developer)> <http://dbpedia.org/ontology/child> ?v4 . ?v0 <http://dbpedia.org/property/starring> ?v7 . ?v3 <http://dbpedia.org/property/awards> ?v1 . ?v3 <http://dbpedia.org/ontology/restingPlace> ?result . ?v4 <http://dbpedia.org/ontology/restingPlace> ?result . ?v0 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emily_Richard> . ?v7 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Gerald_Graham> <http://dbpedia.org/property/awards> ?v1 . },"```sparql
# Query 1: Resting place of the awardee of the award associated with Gerald Graham
SELECT ?awardee ?restingPlace WHERE {
  ?award dbo:recipient ?awardee .
  ?award dbo:name ?awardName .
  ?g gnd:associatedWith ?award .
  ?g rdfs:label ""Gerald Graham""@en .
  OPTIONAL { ?awardee dbo:deathPlace ?restingPlace . }
}

# Query 2: Resting place of the actor from a show with Emily Richard
SELECT ?actor ?restingPlace WHERE {
  ?show dbo:starring ?emily .
  ?show dbo:starring ?actor .
  ?emily rdfs:label ""Emily Richard""@en .
  OPTIONAL { ?actor dbo:deathPlace ?restingPlace . }
}

# Query 3: Resting place of the child of James Burton (property developer)
SELECT ?child ?restingPlace WHERE {
  ?james foaf:surname ""Burton"" .
  ?james dbo:occupation ""Property Developer""@en .
  ?james dbo:child ?child .
  OPTIONAL { ?child dbo:deathPlace ?restingPlace . }
}
```",8,8,9,3,3,3,3,71,0,0,1,0,0.0,0
488,53,test,"Give me the birth place of the commander in the war, that is a military conflict and an event and a societal event, of Saitō Hajime and administration of the father of Emperor Go-Mizunoo and death place of Tokugawa Ieyasu.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Tokugawa_Ieyasu> <http://dbpedia.org/ontology/deathPlace> ?result . ?v3 <http://dbpedia.org/ontology/commander> ?v2 . <http://dbpedia.org/resource/Saitō_Hajime> <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/property/leader> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Emperor_Go-Mizunoo> <http://dbpedia.org/property/father> ?v1 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace ?deathPlace
WHERE {
  # Saitō Hajime's birth place
  dbr:Saitō_Hajime dbo:birthPlace ?birthPlace .

  # Boshin War as a military conflict, event, and societal event
  dbr:Boshin_War rdf:type dbo:MilitaryConflict ;
                 rdf:type dbo:Event ;
                 rdf:type dbo:SocietalEvent .

  # Toyotomi Hideyoshi's administration
  dbr:Toyotomi_Hideyoshi dbo:office ?administration .
  
  # Tokugawa Ieyasu's death place
  dbr:Tokugawa_Ieyasu dbo:deathPlace ?deathPlace .
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
754,17,test,Give me the parent of the child of the reference to Ram Khamhaeng the Great and parent of Loe Thai.,"SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""Ram Khamhaeng the Great""@en . ?v0 <http://dbpedia.org/ontology/child> ?v3 . <http://dbpedia.org/resource/Loe_Thai> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/child> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?commonAncestor WHERE {
  # Find Ram Khamhaeng the Great's child
  ?ramKhamhaeng dbp:name ""Ram Khamhaeng the Great""@en .
  ?child dbo:parent ?ramKhamhaeng .

  # Find Loe Thai's parent
  ?loeThai dbp:name ""Loe Thai""@en .
  ?parent dbo:child ?loeThai .

  # Find a common ancestor of both
  ?commonAncestor dbo:parent ?child ;
                  dbo:parent ?parent .
}
```",4,4,5,3,2,3,2,20,0,0,1,0,0.0,0
55,20,test,"Give me the band of Newsted and band member of the band member, that is a band and a group, of San Francisco Symphony and band member of Guns N' Roses.",SELECT ?result WHERE { <http://dbpedia.org/resource/Newsted> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/San_Francisco_Symphony> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Guns_N'_Roses> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandMember WHERE {
  # Step 1: Identify Newsted as a member of Metallica
  ?metallicaBand dbo:member dbr:Lars_Ulrich ;
                 dbo:member dbr:James_Hetfield ;
                 dbo:member dbr:Kirk_Hammett ;
                 dbo:member dbr:Robert_Trujillo .

  # Newsted is Jason Newsted, who was a member of Metallica
  ?metallicaBand dbo:member dbr:Jason_Newsted .

  # Step 2: Find bands that are both a band and a group related to Metallica
  ?bandMember dbo:member ?metallicaBand .
  
  # Step 3: Identify San Francisco Symphony members who are also part of a band or group
  ?symphonyGroup dbr:San_Francisco_Symphony ;
                 dbo:member ?symphonyMember .

  ?symphonyMember dbo:member ?bandOrGroup .

  # Step 4: Determine which of these individuals is a member of Guns N' Roses
  ?gunsNRosesBand dbr:Guns_N'_Roses ;
                  dbo:member ?commonMember .

  FILTER (?commonMember = ?bandMember && ?commonMember = ?symphonyMember)
}
```",4,6,5,2,3,2,3,28,0,0,1,0,0.0,0
184,56,test,Give me the parent of the child of the parent of Archduchess Margaret of Austria (born 1925) and parent of the native of Budapest and child of Archduke Joseph August of Austria.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Margaret_of_Austria_(born_1925)> . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_August_of_Austria> . ?result <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Budapest> . },"```sparql
# Step 1: Find Archduchess Margaret of Austria (born 1925) and her parent
SELECT ?margaret ?parentMargaret WHERE {
  ?margaret dbo:birthYear ""1925""^^xsd:gYear ;
           foaf:name ""Archduchess Margaret of Austria""@en .
  ?margaret dbp:fatherOrMother ?parentMargaret .
}

# Step 2: Find the child of Archduchess Margaret's parent
SELECT ?child WHERE {
  ?parentMargaret dbo:child ?child .
}

# Step 3: Find the parent of this child
SELECT ?grandParent WHERE {
  ?child dbp:fatherOrMother ?grandParent .
}

# Step 4: Identify the native of Budapest and child of Archduke Joseph August of Austria
SELECT ?budaChild ?parentBudapest WHERE {
  ?budaChild dbo:nativePlace dbr:Budapest ;
             dbp:fatherOrMother ?josephAugust .
  ?josephAugust foaf:name ""Archduke Joseph August of Austria""@en .
}

# Step 5: Find the parent of this child
SELECT ?parentBudapest WHERE {
  ?budaChild dbp:fatherOrMother ?parentBudapest .
}

# Step 6: Determine the commonality or relationship between these two identified parents
SELECT DISTINCT ?commonParent WHERE {
  VALUES (?grandParent ?parentBudapest) { 
    (?grandParent1 ?parentBudapest1)
  }
  OPTIONAL { ?grandParent1 dbp:fatherOrMother ?commonParent . }
  OPTIONAL { ?parentBudapest1 dbp:fatherOrMother ?commonParent . }
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
427,69,test,"Give me the reference to the name of the party of Michele Pinto and party of the father of Lamberto Andreotti and party of the person born, that is an office holder and a politician, as the birth name of Romano Prodi.",SELECT ?result WHERE { ?v4 <http://xmlns.com/foaf/0.1/name> ?v3 . <http://dbpedia.org/resource/Michele_Pinto> <http://dbpedia.org/ontology/party> ?v4 . ?v7 <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Lamberto_Andreotti> <http://dbpedia.org/property/father> ?v7 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/property/birthName> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . ?v2 <http://dbpedia.org/ontology/party> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
# Query for Michele Pinto's political party
SELECT ?party WHERE {
  ?michelePinto dbo:occupation dbr:Politician .
  ?michelePinto dbo:politicalParty ?party .
}

UNION

# Query for the father of Lamberto Andreotti's political party
SELECT ?fatherParty WHERE {
  ?lambertoAndreotti dbo:parent ?father .
  ?father dbo:occupation dbr:Politician .
  ?father dbo:politicalParty ?fatherParty .
}

UNION

# Query for Romano Prodi's birth name
SELECT ?birthName WHERE {
  dbr:Romano_Prodi dbp:birthName ?birthName .
}
```",8,10,9,3,3,3,3,71,0,0,2,0,0.0,0
617,41,test,"Give me the spouse of the child of Antiochus III the Great and parent of Nysa (wife of Pharnaces I of Pontus) and child of the child, that is a royalty, of Seleucus II Callinicus.",SELECT ?result WHERE { <http://dbpedia.org/resource/Antiochus_III_the_Great> <http://dbpedia.org/ontology/child> ?v4 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Nysa_(wife_of_Pharnaces_I_of_Pontus)> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seleucus_II_Callinicus> . ?result <http://dbpedia.org/property/father> ?v2 . ?v4 <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
SELECT ?spouse WHERE {
  # Antiochus III the Great's child who is also a parent of Nysa
  ?antiochusChild dbo:childOf dbr:Antiochus_III_the_Great ;
                  dbo:parentOf ?nysa .

  # Nysa, wife of Pharnaces I of Pontus
  ?nysa rdfs:label ""Nysa""@en ;
        dbo:spouse dbr:Pharnaces_I_of_Pontus .

  # This child is also a royalty and a child of Seleucus II Callinicus
  ?antiochusChild dbo:childOf dbr:Seleucus_II_Callinicus ;
                  rdf:type dbo:RoyalPerson .

  # Find the spouse of this individual
  ?antiochusChild dbo:spouse ?spouse .
}
```",5,6,6,2,3,3,3,71,0,0,2,0,0.0,0
232,42,test,"Give me the native of the residence, that is a settlement and British, of Sylvie Bermann and child of the person born as John Devon Roland Pertwee and actor of Dog Soldiers (film).","SELECT ?result WHERE { <http://dbpedia.org/resource/Sylvie_Bermann> <http://dbpedia.org/property/residence> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Dog_Soldiers_(film)> <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v2 <http://dbpedia.org/property/birthName> ""John Devon Roland Pertwee""@en . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. }","```sparql
# Step 1: Find Sylvie Bermann's current residence
SELECT ?residence WHERE {
  wd:Q123456 wdt:P1128 ?person . # Sylvie Bermann (replace Q123456 with her actual DBpedia ID)
  ?person wdt:P19 ?residence .
}

# Step 2: Identify John Devon Roland Pertwee's children and find the actor in ""Dog Soldiers""
SELECT ?child WHERE {
  wd:Q654321 wdt:P40 ?child . # John Devon Roland Pertwee (replace Q654321 with his actual DBpedia ID)
  ?child wdt:P106 wd:Q33999 . # Actor
  ?child wdt:P161 wd:Q1234567 . # ""Dog Soldiers"" film (replace Q1234567 with the actual DBpedia ID for the film)
}

# Step 3: Verify that the residence is a settlement and British
SELECT ?residence WHERE {
  ?residence wdt:P31/wdt:P279* wd:Q515 . # Settlement
  ?residence wdt:P17 wd:Q145 . # United Kingdom (British)
}

# Step 4: Determine the native of this residence
SELECT ?native WHERE {
  ?residence wdt:P19 ?native .
}
```

Note: Replace `wd:Q123456`, `wd:Q654321`, and `wd:Q1234567` with the actual DBpedia IDs for Sylvie Bermann, John Devon Roland Pertwee, and ""Dog Soldiers"" respectively. The query assumes these entities are correctly identified in DBpedia.",5,7,6,2,3,3,3,71,0,0,1,0,0.0,0
915,19,test,"Give me the father of the child, that is a fictional character and a soap character, of the parent, that is a fictional character and a soap character, of Lizzie Spaulding and resident of the birthplace, that is a settlement, of Stephen Verona.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/residence> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v4 <http://dbpedia.org/property/father> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoapCharacter>. ?v4 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Lizzie_Spaulding> <http://dbpedia.org/ontology/parent> ?v0 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. <http://dbpedia.org/resource/Stephen_Verona> <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoapCharacter>. },"```sparql
# Step 1: Find Lizzie Spaulding's child who is a fictional character and soap opera character
SELECT ?child WHERE {
    ?lizzie dbo:spouse ?parent .
    ?lizzie foaf:name ""Lizzie Spaulding"" .
    ?child dbo:parent ?parent .
    ?child dbo:genre dbc:Fictional_characters .
    ?child dbo:genre dbc:Soap_opera_characters
}

# Step 2: Find the parent of this child who is a fictional character and soap opera character
SELECT ?grandParent WHERE {
    ?child dbo:parent ?grandParent .
    ?grandParent dbo:genre dbc:Fictional_characters .
    ?grandParent dbo:genre dbc:Soap_opera_characters
}

# Step 3: Determine Stephen Verona's birthplace
SELECT ?birthPlace WHERE {
    ?stephen dbo:birthPlace ?birthPlace .
    ?stephen foaf:name ""Stephen Verona"" .
    ?birthPlace a dbo:Settlement
}

# Step 4: Find the father of the child from step 2 who is a fictional character and soap opera character
SELECT ?father WHERE {
    ?grandParent dbo:parent ?father .
    ?father dbo:genre dbc:Fictional_characters .
    ?father dbo:genre dbc:Soap_opera_characters
}
```",5,10,6,3,2,3,2,20,0,0,1,0,0.0,0
427,41,test,Give me the party of the father of Lamberto Andreotti and reference to the name of Italian People's Party (1994) and party of Romano Prodi.,SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/party> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . <http://dbpedia.org/resource/Lamberto_Andreotti> <http://dbpedia.org/property/father> ?v4 . <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Italian_People's_Party_(1994)> <http://xmlns.com/foaf/0.1/name> ?v2 . },"```sparql
# Query to find Lamberto Andreotti's father and his party
SELECT ?father ?partyLabel WHERE {
  ?andreotti dbo:birthName ""Lamberto Andreotti""@it .
  ?andreotti dbo:father ?father .
  ?father dbo:politicalParty ?party .
  ?party rdfs:label ?partyLabel .
  FILTER(LANG(?partyLabel) = 'en')
}

# Query to find the Italian People's Party (1994)
SELECT ?party ?partyLabel WHERE {
  ?party dbo:country dbr/Italy ;
         dbo:foundingDate ?foundingDate ;
         rdfs:label ?partyLabel .
  FILTER(CONTAINS(LCASE(?partyLabel), ""italian people's party"") && YEAR(?foundingDate) = 1994)
  FILTER(LANG(?partyLabel) = 'en')
}

# Query to find Romano Prodi's political affiliation
SELECT ?prodiParty ?prodiPartyLabel WHERE {
  ?prodi dbo:birthName ""Romano Prodi""@it .
  ?prodi dbo:politicalParty ?prodiParty .
  ?prodiParty rdfs:label ?prodiPartyLabel .
  FILTER(LANG(?prodiPartyLabel) = 'en')
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
161,41,test,"Give me the military force of the force, that is a societal event and a military conflict, of Francisco Largo Caballero and military force of the force, that is a societal event and an event and a military conflict, of Francisco Franco and commander in Biscay Campaign.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Biscay_Campaign> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v4 . ?v4 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Franco> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce1 ?militaryForce2 WHERE {
  # Francisco Largo Caballero's military force (Republican Army)
  dbr:Francisco_Largo_Caballero dbo:militaryConflict [
    a dbo:MilitaryConflict ;
    dbo:participatingMilitaryGroup ?group1 .
  ] .
  
  FILTER(?group1 = dbr:Spanish_Republican_Army) .

  # Francisco Franco's military force (Nationalist Army)
  dbr:Francisco_Franco dbo:militaryConflict [
    a dbo:MilitaryConflict ;
    dbo:participatingMilitaryGroup ?group2 .
  ] .

  FILTER(?group2 = dbr:Spanish_Nationalist_Army) .

  # Commander in Biscay Campaign (Nationalist Army)
  OPTIONAL {
    ?campaign dbo:commander ?commander .
    ?campaign dbo:militaryConflict [
      a dbo:MilitaryConflict ;
      dbo:participatingMilitaryGroup ?group3 .
    ] .
    
    FILTER(?campaign = dbr:Biscay_Campaign) .
    FILTER(?group3 = dbr:Spanish_Nationalist_Army) .
  }
  
  BIND(IF(BOUND(?group1), ?group1, ""Unknown"") AS ?militaryForce1)
  BIND(IF(BOUND(?group2), ?group2, ""Unknown"") AS ?militaryForce2)
}
```",5,10,6,2,3,3,3,71,0,0,3,0,0.0,0
404,47,test,"Give me the spouse of the person born, that is a royalty, as Princess Victoria Louise of Prussia and parent of the child, that is a royalty, of the parent, that is a royalty, of Prince George William of Hanover.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v2 <http://dbpedia.org/property/birthName> ""Princess Victoria Louise of Prussia""@en . <http://dbpedia.org/resource/Prince_George_William_of_Hanover> <http://dbpedia.org/ontology/parent> ?v0 . ?v0 <http://dbpedia.org/ontology/child> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> ?v4 . }","```sparql
SELECT ?spouse WHERE {
  ?princess a dbo:Princess ;
            foaf:name ""Victoria Louise of Prussia""@en .
  
  ?princess dbo:spouse ?spouse .

  ?spouse a dbo:CrownPrince ;
          foaf:name ""Ernest Augustus, Crown Prince of Hanover""@en .

  ?child dbo:parent ?spouse ;
         a dbo:Duke ;
         foaf:name ""Ernest Augustus, Duke of Brunswick""@en .
  
  ?grandparent dbo:parent ?child ;
               a dbo:Prince ;
               foaf:name ""George William of Hanover""@en .
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
959,55,test,"Give me the manager of the team of Takashi Sekizuka and native of the residence, that is a country, of Yōichi Masuzoe and member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of Eiji Ōtsuka.",SELECT ?result WHERE { <http://dbpedia.org/resource/Eiji_Ōtsuka> <http://dbpedia.org/ontology/almaMater> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/ontology/manager> ?result . ?result <http://dbpedia.org/ontology/team> ?v2 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Takashi_Sekizuka> . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. <http://dbpedia.org/resource/Yōichi_Masuzoe> <http://dbpedia.org/property/residence> ?v5 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?result <http://dbpedia.org/ontology/birthPlace> ?v5 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?manager WHERE {
  # Step 1: Find Takashi Sekizuka's team and its manager
  ?team dbo:player dbr:Takashi_Sekizuka .
  ?team dbo:coach ?manager .

  # Step 2: Identify Yōichi Masuzoe's residence country
  ?yoshi dbr:Yōichi_Masuzoe .
  ?yoshi dbo:nationality ?countryResidence .

  # Step 3: Determine Eiji Ōtsuka's alma mater that is a Japanese educational institution
  ?eiji dbr:Eiji_Ōtsuka .
  ?eiji dbo:almaMater ?almaMater .
  ?almaMater rdf:type dbo:University ;
             dbo:country dbr:Japan .

  # Step 4: Ensure the residence and alma mater match
  FILTER (?countryResidence = ?almaMater)
}
```",6,11,7,2,3,3,3,71,0,0,2,0,0.0,0
179,17,test,Give me the parent of the child of the parent of Vajiralongkorn and person born as Mom Rajawongse Sirikit Kitiyakara.,"SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Vajiralongkorn> . ?v0 <http://dbpedia.org/ontology/child> ?v3 . ?result <http://dbpedia.org/property/birthName> ""Mom Rajawongse Sirikit Kitiyakara""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent
WHERE {
  # Vajiralongkorn's parent (mother)
  dbr:Maha_Vajiralongkorn dbo:mother dbr:Sirikit_of_Thailand .

  # Queen Sirikit's birth name and her father
  dbr:Sirikit_of_Thailand foaf:name ""Mom Rajawongse Sirikit Kitiyakara""@en ;
                          dbo:father ?parent .

  # Prince Naris is the parent of Queen Sirikit
  ?parent rdfs:label ""Prince Naris""@en .
}
```",4,4,5,3,2,3,2,20,0,0,1,0,0.0,0
303,28,test,"Give me the party of the person born, that is a politician, as Arnulfo Arias Madrid and entity in the country, that is a country, of El Valle de Antón and party of the commander, that is a politician, in United States invasion of Panama.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/country> ?v3 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/United_States_invasion_of_Panama> <http://dbpedia.org/ontology/commander> ?v1 . ?v5 <http://dbpedia.org/ontology/party> ?result . ?v1 <http://dbpedia.org/ontology/party> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/El_Valle_de_Antón> <http://dbpedia.org/ontology/country> ?v3 . ?v5 <http://dbpedia.org/property/birthName> ""Arnulfo Arias Madrid""@en . }","```sparql
# Query for Arnulfo Arias Madrid's political party
SELECT ?party WHERE {
  ?person dbo:birthPlace dbr:El_Valle_de_Antón ;
          foaf:name ""Arnulfo Arias Madrid"" ;
          dbo:politicalParty ?party .
}

UNION

# Query for the commander's (Manuel Noriega) political party during the U.S. invasion of Panama
SELECT ?party WHERE {
  ?person dbo:birthPlace dbr:Panama ;
          foaf:name ""Manuel Noriega"" ;
          dbo:politicalParty ?party .
}
```",6,9,7,2,3,2,3,28,0,0,1,0,0.0,0
659,69,test,"Give me the commander in the war, that is an event and a military conflict, of 1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish) and military force of the force, that is a societal event and an event and a military conflict, of the reference to Rutger Jan Schimmelpenninck and commander in the force of the native, that is an office holder, of Kingdom of Ireland.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v7 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://dbpedia.org/ontology/commander> ?v4 . ?v1 <http://xmlns.com/foaf/0.1/name> ""Rutger Jan Schimmelpenninck""@en . ?v4 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Kingdom_of_Ireland> . <http://dbpedia.org/resource/1st_Light_Cavalry_Lancers_Regiment_of_the_Imperial_Guard_(Polish)> <http://dbpedia.org/ontology/battle> ?v7 . ?v2 <http://dbpedia.org/ontology/commander> ?v1 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  # Identify the war involving the 1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish)
  ?regiment dbo:militaryConflict ?war .
  ?regiment rdfs:label ""1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish)""@en .

  # Determine the commander associated with this regiment and war
  ?commander dbo:commandedMilitaryUnit ?unit .
  ?unit dbo:militaryConflict ?war .
  ?commander rdfs:label ""Napoleon Bonaparte""@en .

  # Identify the societal event and military conflict involving Rutger Jan Schimmelpennink
  ?schimmelpennink dbo:officeHolderOf ?batavianRepublic .
  ?batavianRepublic dbo:militaryConflict ?conflict .
  ?schimmelpennink rdfs:label ""Rutger Jan Schimmelpenninck""@en .

  # Determine the commander in the force associated with Schimmelpennink
  ?commander2 dbo:commandedMilitaryUnit ?unit2 .
  ?unit2 dbo:militaryConflict ?conflict .
  ?commander2 rdfs:label ""Napoleon Bonaparte""@en .

  # Identify the native office holder of the Kingdom of Ireland
  ?officeHolder dbo:nativeCountry dbr:Kingdom_of_Ireland ;
                dbo:positionHeld dbr:Lord_Lieutenant_of_Ireland .
  ?officeHolder rdfs:label ""Duke of Portland""@en .

  FILTER(?commander = ?commander2)
}
```",8,14,9,3,3,3,3,71,0,0,15,0,0.0,0
281,56,test,"Give me the war of the profession, that is a military unit, of the professional, that is an office holder and a politician, in New Zealand Army and entity in Colony of New Zealand and war of the awardee of Knight Grand Cross of the Order of the Bath.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/New_Zealand_Army> . ?v1 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Colony_of_New_Zealand> . ?v0 <http://dbpedia.org/property/occupation> ?v1 . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_the_Bath> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?politician ?militaryUnit ?war
WHERE {
  ?politician a dbo:Politician ;
             dbo:nationality dbr:New_Zealand ;
             dbo:officeHolderOf dbr:New_Zealand .

  OPTIONAL { ?politician dbo:militaryService ?militaryUnit . }
  
  FILTER EXISTS { 
    ?militaryUnit dbo:partOfMilitaryOrganization dbr:New_Zealand_Army .
  }

  OPTIONAL {
    ?politician dbo:associatedWithWar ?war .
    ?war dbo:awardee dbr:Knight_Grand_Cross_of_the_Order_of_the_Bath ;
         dbo:location dbr:Colony_of_New_Zealand .
  }
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
404,24,test,"Give me the parent of the child, that is a royalty, of Ernest Augustus, Duke of Brunswick and child of Ernest Augustus, Crown Prince of Hanover.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ernest_Augustus,_Crown_Prince_of_Hanover> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  ?child dbo:spouse ?royalPartner .
  ?child dbo:father dbr:Ernest_Augustus,_Duke_of_Brunswick .
  ?child dbo:mother dbr:Princess_Caroline_of_Brunswick-Wolfenbüttel .
  ?child dbo:parent ?parent .
  FILTER EXISTS { ?royalPartner a dbo:RoyalFamilyMember }
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
492,62,test,"Give me the person decedent at Algiers and person decedent at the work of the author of French Algeria and commander in the war, that is a military conflict and an event, of the commander in Battle of Verdun.",SELECT ?result WHERE { ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v6 <http://dbpedia.org/ontology/commander> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://dbpedia.org/property/author> ?v4 . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Algiers> . <http://dbpedia.org/resource/Battle_of_Verdun> <http://dbpedia.org/ontology/commander> ?v0 . ?result <http://dbpedia.org/ontology/deathPlace> ?v3 . <http://dbpedia.org/resource/French_Algeria> <http://dbpedia.org/property/author> ?v4 . ?v0 <http://dbpedia.org/ontology/battle> ?v6 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?personDecedentAtAlgiers ?authorOfFrenchAlgeria ?commanderInBattleOfVerdun WHERE {
  # Person decedent at Algiers
  ?personDecedentAtAlgiers dbo:deathPlace dbr:Algiers ;
                           a dbo:Person .

  # Author of ""French Algeria""
  ?authorOfFrenchAlgeria dbo:book dbr:French_Algeria ;
                         a dbo:Author .

  # Commander in the Battle of Verdun
  ?commanderInBattleOfVerdun dbo:commandedMilitaryEngagement dbr:Battle_of_Verdun ;
                             a dbo:MilitaryPerson .

  # Ensure Philippe Pétain is identified as commander in Battle of Verdun
  FILTER(?commanderInBattleOfVerdun = dbr:Philippe_Pétain)
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
391,67,test,"Give me the actor of the movie, that is a movie and a work and a television show, with the professional in  and native of Compton, California and actor of the claim to fame, that is a work, of the spouse of Sherry Hormann.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Compton,_California> . ?v1 <http://dbpedia.org/property/occupation> """"@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v6 <http://dbpedia.org/ontology/starring> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://dbpedia.org/property/starring> ?result . ?v3 <http://dbpedia.org/property/starring> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/ontology/knownFor> ?v6 . <http://dbpedia.org/resource/Sherry_Hormann> <http://dbpedia.org/ontology/spouse> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?actor WHERE {
  # Step 1: Find Sherry Hormann's spouse
  dbr:Sherry_Hormann dbo:spouse ?spouse .

  # Step 2: Determine the claim to fame of the spouse, which is a work
  ?spouse dbo:claimToFame ?work .
  
  # Step 3: Find an actor who has worked on this work and is from Compton, California
  ?actor dbo:nationality dbr:United_States ;
         dbo:birthPlace dbr:Compton,_California ;
         dbo:profession dbr:Actor ;
         dbo:work ?work .

  # Step 4: Identify a movie that is both a movie and a television show
  ?movie dbo:type dbr:Film ;
         dbo:type dbr:Television_Show .
  
  # Ensure the actor worked on this specific movie/TV show
  ?actor dbo:work ?movie .
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
547,51,test,Give me the resting place of the actor of Enemy at the Door and resting place of the awardee of the award of Gerald Graham.,SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/restingPlace> ?result . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Enemy_at_the_Door> <http://dbpedia.org/property/starring> ?v4 . <http://dbpedia.org/resource/Gerald_Graham> <http://dbpedia.org/property/awards> ?v1 . ?v2 <http://dbpedia.org/property/awards> ?v1 . },"```sparql
# Query to find the resting place of the actor/director of ""Enemy at the Door""
SELECT ?actor ?restingPlace WHERE {
  ?film dcterms:title ""Enemy at the Door"" .
  ?film dbo:starringOrDirector ?actor .
  OPTIONAL { ?actor dbo:deathPlace ?restingPlace . }
}

UNION

# Query to find the resting place of the awardee associated with Gerald Graham
SELECT ?awardee ?restingPlace WHERE {
  ?award dbo:recipient ?awardee ;
         dbo:associatedWith ""Gerald Graham"" .
  OPTIONAL { ?awardee dbo:deathPlace ?restingPlace . }
}
```",5,5,6,3,2,3,3,71,0,0,2,0,0.0,0
820,20,test,Give me the child of the parent of the professional in Actor and professional in the award of the author of Understanding Comics.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Understanding_Comics> <http://dbpedia.org/ontology/author> ?v1 . ?v5 <http://dbpedia.org/ontology/child> ?v4 . ?result <http://dbpedia.org/property/father> ?v5 . ?result <http://dbpedia.org/property/occupation> ?v2 . ?v1 <http://dbpedia.org/property/awards> ?v2 . ?v4 <http://dbpedia.org/property/occupation> ""Actor""@en . }","```sparql
# Step 1: Find the author of ""Understanding Comics""
SELECT ?author WHERE {
  ?book dcterms:title ""Understanding Comics""@en .
  ?book dbo:author ?author .
}

# Step 2: Find an award associated with Scott McCloud (assuming Eisner Award)
SELECT ?award WHERE {
  wd:Q123456 dbo:recipient wd:Q789012 . # Replace Q123456 with the DBpedia ID for Eisner Award, and Q789012 with Scott McCloud's DBpedia ID
}

# Step 3: Find professionals related to the Eisner Award (assuming they are in a category like ""winner"")
SELECT ?professional WHERE {
  ?award dbo:recipient ?professional .
  FILTER(?award = wd:Q123456) # Replace with actual Eisner Award DBpedia ID
}

# Step 4: Identify an actor among these professionals
SELECT ?actor WHERE {
  ?professional dbo:occupation wd:Q11424 . # Q11424 is the DBpedia ID for Actor
}

# Step 5: Determine the parent of this actor
SELECT ?parent WHERE {
  ?actor dbo:child ?parent .
}

# Step 6: Identify the child of that parent (excluding the original actor)
SELECT DISTINCT ?sibling WHERE {
  ?parent dbo:child ?sibling .
  FILTER(?sibling != ?actor) # Exclude the original actor to find other children
}
```",6,6,7,3,2,3,2,20,0,0,128,0,0.0,0
701,54,test,Give me the parent of the child of the child of Seti I and spouse of Ramesses II and parent of the child of Nefertari.,SELECT ?result WHERE { <http://dbpedia.org/resource/Nefertari> <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Ramesses_II> . ?result <http://dbpedia.org/ontology/child> ?v5 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seti_I> . ?v5 <http://dbpedia.org/property/father> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  # Seti I's children
  VALUES (?setiChild) { 
    dbr:Tiaa_of_the_18th_dynasty 
    dbr/Ramesses_II 
    dbr/Khaemwaset 
    dbr/Princess_Meryatum 
    dbr/Merenptah 
    dbr/Seti_maat_Chenet 
    dbr/Princess_Bintanath 
    dbr/Princess_Isetnofret 
  }
  
  # Ramesses II's spouse
  ?ramesses2 dbo:spouse ?nefertari .
  
  # Nefertari's child
  ?nefertari dbo:child ?nephthys_tasherit .

  # Parent of Nefertari's child (Ramesses II)
  ?parent dbo:child ?nephthys_tasherit .

  FILTER(?setiChild = dbr/Ramesses_II) # Ramesses II is the child of Seti I
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
547,63,test,Give me the resting place of the child of the child of William Haliburton and resting place of the awardee of Knight Grand Cross of the Order of St Michael and St George and resting place of the actor of Enemy at the Door.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Enemy_at_the_Door> <http://dbpedia.org/property/starring> ?v6 . ?v6 <http://dbpedia.org/ontology/restingPlace> ?result . ?v3 <http://dbpedia.org/ontology/restingPlace> ?result . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_St_Michael_and_St_George> . ?v4 <http://dbpedia.org/property/father> ""William Haliburton""@en . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . ?v4 <http://dbpedia.org/ontology/child> ?v3 . }","```sparql
# Query 1: Resting place of a grandchild of William Haliburton
SELECT ?grandchild ?restingPlace WHERE {
  ?williamHaliburton dbo:spouse ?spouse .
  ?williamHaliburton foaf:name ""William Haliburton""@en .
  ?williamHaliburton dbo:child ?child .
  ?child dbo:child ?grandchild .
  OPTIONAL { ?grandchild dbo:deathPlace ?restingPlace }
} LIMIT 1

# Query 2: Resting place of a Knight Grand Cross of the Order of St Michael and St George
SELECT ?person ?restingPlace WHERE {
  ?person dbo:award ""Knight Grand Cross of the Order of St Michael and St George""@en .
  OPTIONAL { ?person dbo:deathPlace ?restingPlace }
} LIMIT 1

# Query 3: Resting place of an actor in ""Enemy at the Door""
SELECT ?actor ?restingPlace WHERE {
  ?movie dbo:starring ?actor .
  ?movie foaf:name ""Enemy at the Door""@en .
  OPTIONAL { ?actor dbo:deathPlace ?restingPlace }
} LIMIT 1
```",7,7,8,3,3,3,3,71,0,0,1,0,0.0,0
659,60,test,"Give me the commander in the force of the native, that is an office holder, of Kingdom of Ireland and military force of the force, that is a societal event and an event and a military conflict, of the reference to Rutger Jan Schimmelpenninck.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Kingdom_of_Ireland> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/commander> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://dbpedia.org/ontology/commander> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Rutger Jan Schimmelpenninck""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?militaryForce WHERE {
  ?officeHolder a dbo:OfficeHolder ;
               dbo:country dbr:Kingdom_of_Ireland ;
               dbo:position ?position .
  
  ?commander a dbo:MilitaryPerson ;
             dbo:heldPosition ?position ;
             dbo:nationality dbr:Ireland .

  ?militaryForce a dbo:SocietalEvent, dbo:MilitaryConflict ;
                 dbo:relatedTo dbr:Rutger_Jan_Schimmelpenninck ;
                 dbo:commander ?commander .
}
```",6,10,7,3,2,3,3,71,0,0,40,0,0.0,0
783,19,test,"Give me the band member of the person born, that is an artist and a musical artist, as the persona of Ebony Reigns and associated musical artist of the band member of Ofori Amponsah.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v4 <http://dbpedia.org/property/birthName> ?v0 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . <http://dbpedia.org/resource/Ebony_Reigns> <http://xmlns.com/foaf/0.1/givenName> ?v0 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Ofori_Amponsah> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandMember WHERE {
  # Find Ebony Reigns' birth details and roles
  ?ebony a dbo:MusicalArtist ;
        foaf:name ""Ebony Reigns"" ;
        dbo:birthPlace ?birthPlace ;
        dbo:genre ?genre .

  # Find Ofori Amponsah's band member
  ?ofori a dbo:MusicalArtist ;
         foaf:name ""Ofori Amponsah"" ;
         dbo:bandMember ?bandMember .

  # Link the band member to Ebony Reigns through their roles as artists
  ?bandMember a dbo:MusicalArtist ;
              dbo:associatedBandMember ?ebony .
}
```",5,7,6,3,2,3,2,20,0,0,1,0,0.0,0
232,30,test,"Give me the child of Jon Pertwee and actor of Dog Soldiers (film) and native of the residence, that is a settlement and British, of Sylvie Bermann.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . <http://dbpedia.org/resource/Dog_Soldiers_(film)> <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Sylvie_Bermann> <http://dbpedia.org/property/residence> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child ?actor ?settlement WHERE {
  # Jon Pertwee's child
  ?person dbo:parent dbr:Jon_Pertwee .
  ?person rdfs:label ?childLabel .
  FILTER(CONTAINS(LCASE(?childLabel), ""child"")) .
  
  # Actor of Dog Soldiers
  ?film dbo:starring ?actor .
  ?film rdfs:label ?filmLabel .
  FILTER(LCASE(?filmLabel) = ""dog soldiers (2002 film)"") .

  # Sylvie Bermann's residence
  dbr:Sylvie_Bermann dbo:nationality dbr:France ;
                     dbo:birthPlace ?settlement .
  
  # Ensure the child is also an actor in Dog Soldiers and native of the settlement
  ?person rdfs:label ?actorLabel .
  FILTER(LCASE(?actorLabel) = LCASE(?actor)) .
  ?person dbo:birthPlace ?settlement .
}
```",4,6,5,2,3,3,3,71,0,0,1,0,0.0,0
492,44,test,"Give me the person decedent at French Algeria and person decedent at the capital, that is a settlement, of Algeria and commander in the war, that is a military conflict and an event, of Frédéric-Georges Herr.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/French_Algeria> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v4 <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Algeria> <http://dbpedia.org/ontology/capital> ?v2 . <http://dbpedia.org/resource/Frédéric-Georges_Herr> <http://dbpedia.org/ontology/battle> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?personDecedentInFrenchAlgeria ?personDecedentInAlgiers ?commanderWar
WHERE {
  # Person who died in French Algeria
  ?personDecedentInFrenchAlgeria dbo:deathPlace dbr:French_Algeria .
  
  # Person who died in Algiers, the capital of Algeria
  ?personDecedentInAlgiers dbo:deathPlace dbr:Algiers .

  # Frédéric-Georges Herr as a commander in a military conflict
  dbr:Frédéric_Georges_Herr dbo:commanderOf ?commanderWar .
  
  FILTER(?commanderWar rdf:type dbo:MilitaryConflict)
}
```",5,8,6,2,3,3,3,71,0,0,1,0,0.0,0
767,59,test,"Give me the alma mater of the administration of the reference to George Kilbon Nash and entity in the administration, that is a settlement, of the writer of Where It's At (Dustin Lynch album).","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://xmlns.com/foaf/0.1/name> ""George Kilbon Nash""@en . ?v2 <http://dbpedia.org/property/leaderParty> ?v3 . ?result <http://dbpedia.org/ontology/state> ?v2 . <http://dbpedia.org/resource/Where_It's_At_(Dustin_Lynch_album)> <http://dbpedia.org/property/writer> ?v3 . ?v5 <http://dbpedia.org/property/governor> ?v0 . ?v5 <http://dbpedia.org/ontology/almaMater> ?result . }","```sparql
# Step 1: Find George Kilbon Nash's alma mater
SELECT ?almaMater WHERE {
  ?nash dbo:almaMater ?almaMater .
  ?nash foaf:name ""George Kilbon Nash""@en .
}

UNION

# Step 2: Identify settlements related to George Kilbon Nash or his administration
SELECT ?settlement WHERE {
  ?adminEntity dbo:administrator ?nash ;
               a dbo:Settlement .
  ?nash foaf:name ""George Kilbon Nash""@en .
}

UNION

# Step 3: Find the writer of ""Where It's At"" by Dustin Lynch
SELECT ?writer WHERE {
  ?song dbo:lyricsBy ?writer ;
        rdfs:label ""Where It's At""@en .
  ?album dbo:song ?song ;
         foaf:name ""Where It's At""@en .
  ?album dbo:artist ?dustinLynch .
  ?dustinLynch foaf:name ""Dustin Lynch""@en .
}

UNION

# Step 4: Identify the settlement related to the writer
SELECT ?settlement WHERE {
  ?writer dbo:birthPlace ?settlement ;
          rdfs:label ?name .
  FILTER(CONTAINS(?name, ""Where It's At""))
}

UNION

# Step 5: Find the common alma mater
SELECT DISTINCT ?almaMater WHERE {
  VALUES (?entity) { ?nash ?adminEntity ?writer }
  ?entity dbo:almaMater ?almaMater .
}
```",6,7,7,3,2,3,3,71,0,0,1,0,0.0,0
16,71,test,Give me the professional in the profession of the actor of Unnatural (TV series) and spouse of the person born as the birth name of Ted McGinley and person born as the birth name of the alumnus of Ohio State University.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/birthName> ?v8 . ?v7 <http://dbpedia.org/property/birthName> ?v8 . ?v7 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Ohio_State_University> . ?v4 <http://dbpedia.org/property/occupation> ?v5 . <http://dbpedia.org/resource/Unnatural_(TV_series)> <http://dbpedia.org/property/starring> ?v4 . ?result <http://dbpedia.org/property/occupation> ?v5 . ?v2 <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actor ?profession ?spouse1 ?spouse2 WHERE {
  # Step 1: Find the actor of ""Unnatural""
  ?series dbo:title ""Unnatural (TV series)""@en .
  ?series dbo:starring ?actor .

  # Step 2: Get the profession of the actor
  ?actor dbo:occupation ?profession .

  # Step 3: Identify Ted McGinley's spouse using his birth name
  dbr:Ted_McGinley dbo:birthName ""Thomas Edward McGinley""@en .
  dbr:Ted_McGinley dbo:spouse ?spouse1 .

  # Step 4: Find an alumnus of Ohio State University and their birth name
  ?alumnus dbo:almaMater dbr:Ohio_State_University ;
           dbo:birthName ?birthName .
  
  # Use the birth name to find another person
  ?person dbo:birthName ?birthName .

  # Step 5: Check if this person is also a spouse of the actor's profession
  ?person dbo:spouse ?actor .
  ?person dbo:occupation ?profession .

  # Ensure the same person is linked as spouse in both cases
  FILTER(?spouse1 = ?person && ?spouse2 = ?person)
}
```",9,9,10,3,3,3,3,71,0,0,1,0,0.0,0
285,19,test,Give me the spouse of the professional in the award of Stan Lee and parent of the child of Tina Onassis Niarchos.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Tina_Onassis_Niarchos> <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/ontology/spouse> ?v4 . ?v4 <http://dbpedia.org/property/occupation> ?v0 . <http://dbpedia.org/resource/Stan_Lee> <http://dbpedia.org/property/awards> ?v0 . },"```sparql
# Step 1: Find Stan Lee's Award
SELECT ?award WHERE {
  wd:Q12345 dbo:awardReceived ?award .
}

# Step 2: Identify the Professional Related to the Award
SELECT ?professional WHERE {
  ?award dbo:recipient ?professional .
}

# Step 3: Find Tina Onassis Niarchos' Child
SELECT ?child WHERE {
  wd:Q67890 foaf:child ?child .
}

# Step 4: Determine the Parent of That Child
SELECT ?parent WHERE {
  ?child dbo:parent ?parent .
}

# Step 5: Find the Spouse of the Professional
SELECT ?spouse WHERE {
  ?professional dbo:spouse ?spouse .
}
```

Note: Replace `wd:Q12345` with Stan Lee's DBpedia ID and `wd:Q67890` with Tina Onassis Niarchos' DBpedia ID. The properties like `dbo:awardReceived`, `dbo:recipient`, `foaf:child`, `dbo:parent`, and `dbo:spouse` are used based on typical DBpedia schema, but may need adjustment if the exact property paths differ.",5,5,6,3,2,3,2,20,0,0,2,0,0.0,0
391,64,test,"Give me the native of the figure known as the nick name of Jackson, Tennessee and actor of The Departed and actor of the movie, that is a movie and a work and a television show, with the professional in .","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. <http://dbpedia.org/resource/Jackson,_Tennessee> <http://xmlns.com/foaf/0.1/nick> ?v3 . ?v2 <http://dbpedia.org/property/nickname> ?v3 . ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/property/starring> ?v0 . ?v1 <http://dbpedia.org/property/starring> ?result . ?v0 <http://dbpedia.org/property/occupation> """"@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. <http://dbpedia.org/resource/The_Departed> <http://dbpedia.org/ontology/starring> ?result . }","```sparql
SELECT ?nativePlace WHERE {
  ?person dbo:birthPlace ?nativePlace .
  ?person foaf:name ""Jack Nicholson""@en .
  ?film dbp:starring ?person ;
        rdfs:label ""The Departed""@en .
  OPTIONAL { 
    ?otherFilm dbp:starring ?person ;
               rdfs:label ""Animal House""@en .
  }
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
528,45,test,Give me the war of Orozimbo Barbosa and war of Irene Morales and force of the person born as the birth name of Narciso Campero.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> ?v1 . <http://dbpedia.org/resource/Irene_Morales> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Narciso_Campero> <http://dbpedia.org/property/birthName> ?v0 . <http://dbpedia.org/resource/Orozimbo_Barbosa> <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/property/birthName> ?v0 . },"```sparql
# Query for the war of Orozimbo Barbosa
SELECT ?war WHERE {
  ?person foaf:name ""Orozimbo Barbosa""@en .
  ?person dbo:participatedIn ?war .
}

UNION

# Query for the war of Irene Morales
SELECT ?war WHERE {
  ?person foaf:name ""Irene Morales""@en .
  ?person dbo:participatedIn ?war .
}

UNION

# Query for the force associated with Narciso Campero
SELECT ?force WHERE {
  ?person foaf:name ""Narciso Campero""@en ;
          foaf:birthName ?birthName .
  ?person dbo:militaryCommanderOf ?force .
}
```",5,5,6,3,3,3,3,71,0,0,2,0,0.0,0
251,25,test,"Give me the location of the war, that is a military conflict, of Louis François Félix Musnier and administration of the ruling party, that is a political party and an organisation, in Sicily and death place of Laura Mancinelli.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Sicily> <http://dbpedia.org/property/leaderParty> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v3 <http://dbpedia.org/ontology/place> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Laura_Mancinelli> <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Louis_François_Félix_Musnier> <http://dbpedia.org/ontology/battle> ?v3 . ?result <http://dbpedia.org/property/leaderParty> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?warLocation ?rulingPartyAdminLocation ?deathPlace
WHERE {
  # Find the war involving Louis François Félix Musnier
  ?musnier dbo:nationality dbr:French_people ;
          dbo:occupation dbr:Military_person .
  
  ?musnier dbo:participatedIn ?conflict .
  ?conflict a dbo:Military_conflict .

  # Get the location of the war
  ?conflict dbo:location ?warLocation .

  # Find the ruling party in Sicily during that conflict
  ?party a dbo:Political_party ;
        dbo:country dbr:Sicily ;
        dbo:administration ?admin .
  
  ?admin dbo:location ?rulingPartyAdminLocation .

  # Ensure the time frame matches (this part is more complex and may require additional historical data)
  FILTER(?conflictTimeFrame = ?partyTimeFrame)

  # Find Laura Mancinelli's death place
  dbr:Laura_Mancinelli dbo:deathPlace ?deathPlace .
}
```",5,8,6,2,3,2,3,28,0,0,1,0,0.0,0
281,49,test,"Give me the war of the profession, that is a military unit, of the professional, that is an office holder and a politician, in New Zealand Army and war of the awardee of Knight Grand Cross of the Order of the Bath.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/occupation> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v0 <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/New_Zealand_Army> . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_the_Bath> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?person ?militaryUnit ?war WHERE {
  ?person a dbo:Politician ;
          dbo:nationality dbr:New_Zealand ;
          dbo:officeHolderOf dbr:New_Zealand ;
          dbo:militaryService ?service .
  
  ?service dbo:militaryUnit ?militaryUnit ;
           dbo:participatedInWar ?war .

  OPTIONAL { 
    ?person dbo:honoraryTitle dbr:Knight_Grand_Cross_of_the_Order_of_the_Bath .
  }

  FILTER EXISTS {
    ?person dbo:honoraryTitle dbr:Knight_Grand_Cross_of_the_Order_of_the_Bath
  }
}
```",5,8,6,3,2,3,3,71,0,0,9,0,0.0,0
9,62,test,"Give me the alma mater of the mayor, that is a politician, of the entity, that is an organisation, in Belfast and figure known as QUB and alma mater of the awardee of the reference, that is an award, to Royal Medals.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Royal Medals""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v6 <http://dbpedia.org/property/awards> ?v0 . ?v3 <http://dbpedia.org/ontology/almaMater> ?result . ?v4 <http://dbpedia.org/property/leader> ?v3 . ?result <http://dbpedia.org/property/nickname> ""QUB""@en . ?v4 <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Belfast> . ?v6 <http://dbpedia.org/ontology/almaMater> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. }","```sparql
# Step 1: Find Queen's University of Belfast
SELECT ?qub WHERE {
  ?qub rdfs:label ""Queen's University of Belfast""@en .
}

# Step 2: Find the current mayor of Belfast and their alma mater
SELECT DISTINCT ?mayor ?almaMater WHERE {
  ?belfast dbo:mayor ?mayor ;
           rdfs:label ""Belfast""@en .
  OPTIONAL { ?mayor dbo:almaMater ?almaMater . }
}

# Step 3: Find an awardee of the Royal Medals and their alma mater
SELECT DISTINCT ?awardee ?almaMater WHERE {
  ?royalMedal dbo:recipient ?awardee ;
              rdfs:label ""Royal Medal""@en .
  OPTIONAL { ?awardee dbo:almaMater ?almaMater . }
}

# Step 4: Find common alma mater
SELECT DISTINCT ?commonAlmaMater WHERE {
  VALUES (?mayorAlmaMater ?awardeeAlmaMater) {
    (VALUES ?x { ?y } WHERE { 
      ?belfast dbo:mayor ?mayor ;
               rdfs:label ""Belfast""@en .
      OPTIONAL { ?mayor dbo:almaMater ?x . }
    })
    (VALUES ?x { ?y } WHERE { 
      ?royalMedal dbo:recipient ?awardee ;
                  rdfs:label ""Royal Medal""@en .
      OPTIONAL { ?awardee dbo:almaMater ?x . }
    })
  }
  FILTER(?mayorAlmaMater = ?awardeeAlmaMater)
  BIND(?mayorAlmaMater AS ?commonAlmaMater)
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
994,51,test,"Give me the band member of the person born, that is a musical artist, as the persona of Don Dokken and associated musical artist of the band member, that is a band and a group and an organisation, of Meshuggah.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. <http://dbpedia.org/resource/Don_Dokken> <http://xmlns.com/foaf/0.1/givenName> ?v3 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Meshuggah> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/property/birthName> ?v3 . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandMemberOfDonDokken ?associatedArtistOfMeshuggahBandMember
WHERE {
  # Find Don Dokken and his band members
  dbr:Don_Dokken a dbo:MusicalArtist .
  
  ?donDokkenBandMember dbo:member ?person ;
                      dbo:musicalArtist dbr:Don_Dokken .

  # Find Meshuggah and its band members
  dbr:Meshuggah a dbo:Band, dbo:MusicalGroup, dbo:Organization .
  
  ?meshuggahBandMember dbo:member ?person ;
                       dbo:musicalArtist dbr:Meshuggah .

  # Find associated musical artists of the Meshuggah band members
  ?associatedArtistOfMeshuggahBandMember dbo:associatedMusicalArtist ?meshuggahBandMember .

  # Return results
  BIND(?donDokkenBandMember AS ?bandMemberOfDonDokken)
}
```",5,9,6,3,2,3,3,71,0,0,1,0,0.0,0
528,56,test,Give me the war of Orozimbo Barbosa and war of the military force of Battle of Pisagua and force of the person born as the birth name of Narciso Campero.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?v2 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Orozimbo_Barbosa> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Narciso_Campero> <http://dbpedia.org/property/birthName> ?v0 . ?v2 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Pisagua> . ?result <http://dbpedia.org/ontology/commander> ?v1 . },"```sparql
# Query to find wars involving Orozimbo Barbosa
SELECT ?war WHERE {
  ?person foaf:name ""Orozimbo Barbosa""@en .
  ?person dbo:participatedIn ?event .
  ?event rdf:type dbo:MilitaryConflict .
  BIND(?event AS ?war)
}

# Query to find military forces involved in the Battle of Pisagua
SELECT DISTINCT ?force WHERE {
  ?battle rdfs:label ""Battle of Pisagua""@en .
  ?battle dbo:participatingMilitaryUnit ?unit .
  ?unit dbo:member ?person .
  ?person foaf:name ?name .
  BIND(CONCAT(""Force involved in Battle of Pisagua: "", ?name) AS ?force)
}

# Query to find the military force associated with Narciso Campero
SELECT DISTINCT ?militaryForce WHERE {
  ?person foaf:name ""Narciso Campero""@en ;
          dbo:birthName ?birthName .
  ?person dbo:militaryService ?service .
  ?service dbo:member ?unit .
  BIND(CONCAT(""Military force of "", ?birthName, "": "", ?unit) AS ?militaryForce)
}
```",6,6,7,3,3,3,3,71,0,0,2,0,0.0,0
55,24,test,"Give me the band member of the band member, that is a band and a group, of San Francisco Symphony and band of the reference, that is a band, to Newsted.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/San_Francisco_Symphony> . ?v1 <http://xmlns.com/foaf/0.1/name> ""Newsted""@en . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandMember ?relatedBand WHERE {
  # Find musicians associated with the San Francisco Symphony
  ?musician dbo:memberOf dbr:San_Francisco_Symphony .
  
  # Check if this musician is also a member of another band
  ?musician dbo:memberOf ?otherBand .

  # Ensure the other band has a connection to Jason Newsted (Metallica)
  ?metallicaMember dbo:memberOf dbr:Metallica ;
                  foaf:name ""Jason Newsted"" .
  
  # Find if there's any overlap or reference between the bands
  ?relatedBand dbo:member ?musician .

  FILTER(?otherBand != dbr:Metallica) # Exclude Metallica itself

  # Return the band member and their related band
  BIND(?musician AS ?bandMember)
}
```",4,7,5,2,2,2,3,28,0,0,3,0,0.0,0
16,70,test,Give me the professional in the profession of the actor of Unnatural (TV series) and spouse of the person born as Ted Martin McGinley and person born as the birth name of the alumnus of Ohio State University.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v7 . ?v4 <http://dbpedia.org/property/birthName> ""Ted Martin McGinley""@en . ?v4 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/property/occupation> ?v7 . ?v1 <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Unnatural_(TV_series)> <http://dbpedia.org/property/starring> ?v0 . ?result <http://dbpedia.org/property/birthName> ?v3 . ?v1 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Ohio_State_University> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?spouse ?profession WHERE {
  # Step 1: Find the actor of ""Unnatural""
  ?actor dbo:starringIn dbr:Unnatural_(TV_series) .
  
  # Step 2: Find Ted Martin McGinley's spouse
  dbr:Ted_McGinley foaf:mbox <mailto:some-email@domain.com> ;
                   dbo:spouse ?tedSpouse .

  # Step 3: Identify an alumnus of Ohio State University and their birth name
  ?alumnus dbo:almaMater dbr:Ohio_State_University ;
           foaf:name ?birthName .
  
  # Find the person with this birth name
  ?person foaf:name ?birthName .

  # Step 4: Check if there is a common spouse between the actor and the person identified in step 3
  ?actor dbo:spouse ?commonSpouse .
  ?person dbo:spouse ?commonSpouse .

  # Ensure the common spouse is also Ted McGinley's spouse
  FILTER (?commonSpouse = ?tedSpouse)

  # Step 5: Get the profession of this common spouse
  ?commonSpouse dbo:profession ?profession .
}
```",8,8,9,3,3,3,3,71,0,0,1,0,0.0,0
404,68,test,"Give me the spouse of the person born, that is a royalty, as the birth name of Princess Victoria Louise of Prussia and child of the father of Ernest Augustus, Duke of Brunswick and parent of the child, that is a royalty, of the parent, that is a royalty, of Prince George William of Hanover.","SELECT ?result WHERE { <http://dbpedia.org/resource/Prince_George_William_of_Hanover> <http://dbpedia.org/ontology/parent> ?v0 . ?v4 <http://dbpedia.org/property/birthName> ?v5 . ?result <http://dbpedia.org/ontology/parent> ?v3 . ?v4 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/ontology/child> ?v7 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/property/father> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/property/birthName> ?v5 . ?result <http://dbpedia.org/ontology/child> ?v7 . }","```sparql
SELECT ?spouse WHERE {
  ?princess rdf:type dbo:Princess ;
            foaf:name ""Victoria Louise of Prussia""@en ;
            dbo:birthName ?birthName .
  ?father dbo:child ?princess ;
          dbo:parent ?ernestAugustusDuke .
  ?ernestAugustusKing dbo:child ?georgeWilliamHanover ;
                      rdfs:label ""Ernest Augustus, King of Hanover""@en .
  ?georgeV dbo:parent ?ernestAugustusKing ;
           rdf:type dbo:Monarch .
  ?princess dbo:spouse ?spouse .
}
```",8,11,9,3,3,3,3,71,0,0,1,0,0.0,0
617,62,test,"Give me the parent of Nysa (wife of Pharnaces I of Pontus) and child of the child, that is a royalty, of the successor, that is a royalty, of Antiochus II Theos and spouse of the child of the successor, that is a royalty, of Antiochus (son of Antiochus III the Great).",SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v3 . <http://dbpedia.org/resource/Antiochus_II_Theos> <http://dbpedia.org/ontology/successor> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v6 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/successor> ?v0 . ?v0 <http://dbpedia.org/ontology/child> ?v6 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Nysa_(wife_of_Pharnaces_I_of_Pontus)> . ?v3 <http://dbpedia.org/property/father> ?v4 . },"```sparql
SELECT ?finalPerson WHERE {
  # Step 1: Identify Nysa's parent
  ?nysa dbo:spouse ?pharnacesI .
  ?pharnacesI rdfs:label ""Pharnaces I of Pontus""@en .
  ?nysa dbo:parent ?nysasParent .

  # Step 2: Find the child of Nysa's parent who is royalty
  ?nysasChild dbo:parent ?nysasParent .
  ?nysasChild rdf:type dbo:Monarch .

  # Step 3: Identify Antiochus II Theos' successor who is royalty
  ?antiochusII dbo:succeededBy ?successorAntiochusII .
  ?successorAntiochusII rdf:type dbo:Monarch .

  # Step 4: Find the child of this successor who is royalty
  ?childOfSuccessorAntiochusII dbo:parent ?successorAntiochusII .
  ?childOfSuccessorAntiochusII rdf:type dbo:Monarch .

  # Step 5: Identify the spouse
  ?childOfSuccessorAntiochusII dbo:spouse ?spouse .

  # Step 6: Identify Antiochus III's successor who is royalty
  ?antiochusIII dbo:succeededBy ?successorAntiochusIII .
  ?successorAntiochusIII rdf:type dbo:Monarch .

  # Step 7: Find the child of this successor who is royalty
  ?childOfSuccessorAntiochusIII dbo:parent ?successorAntiochusIII .
  ?childOfSuccessorAntiochusIII rdf:type dbo:Monarch .

  # Step 8: Final connection
  FILTER (?spouse = ?childOfSuccessorAntiochusIII)
  
  BIND(?spouse AS ?finalPerson)
}
```",7,10,8,3,3,3,3,71,0,0,2,0,0.0,0
659,18,test,Give me the military force of Napoleonic Wars and commander in Battle of Leipzig and commander in German campaign of 1813.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Napoleonic_Wars> . <http://dbpedia.org/resource/Battle_of_Leipzig> <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/German_campaign_of_1813> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?battle ?commander ?role
WHERE {
  VALUES ?battle { 
    dbr:Battle_of_Leipzig 
    dbr:German_campaign_of_1813 
  }
  
  ?battle dbo:commander ?unit .
  ?unit dbo:commander ?commander .

  OPTIONAL {
    ?commander dbo:wikiPageDisambiguates ?disambiguation .
    FILTER EXISTS { ?disambiguation rdfs:label ""Napoleon""@en . }
    BIND(""French Commander"" AS ?role)
  }

  OPTIONAL {
    ?commander dbo:wikiPageDisambiguates ?disambiguation .
    FILTER EXISTS { ?disambiguation rdfs:label ""Gebhard Leberecht von Blücher""@en . }
    BIND(""Coalition Commander"" AS ?role)
  }

  OPTIONAL {
    ?commander dbo:wikiPageDisambiguates ?disambiguation .
    FILTER EXISTS { ?disambiguation rdfs:label ""Alexander I of Russia""@en . }
    BIND(""Coalition Commander"" AS ?role)
  }

  OPTIONAL {
    ?commander dbo:wikiPageDisambiguates ?disambiguation .
    FILTER EXISTS { ?disambiguation rdfs:label ""Jean-Baptiste Bernadotte""@en . }
    BIND(""Coalition Commander"" AS ?role)
  }
}
ORDER BY ?battle ?role
```",3,3,4,1,3,3,3,71,0,0,5,0,0.0,0
391,69,test,"Give me the actor of the claim to fame, that is a work, of Michael Ballhaus and native of the figure known as the nick name of Jackson, Tennessee and actor of the movie, that is a movie and a work and a television show, with the professional in .","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Michael_Ballhaus> <http://dbpedia.org/ontology/knownFor> ?v7 . ?v3 <http://dbpedia.org/property/nickname> ?v4 . <http://dbpedia.org/resource/Jackson,_Tennessee> <http://xmlns.com/foaf/0.1/nick> ?v4 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/property/starring> ?result . ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v2 <http://dbpedia.org/property/starring> ?v1 . ?v7 <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://dbpedia.org/property/occupation> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  # Find projects where Michael Ballhaus was involved as a cinematographer
  ?project dbo:cinematographer dbr:Michael_Ballhaus .
  
  # Ensure the project is both a movie and a television show
  ?project rdf:type dbo:Film ;
           dbo:televisionSeries .

  # Find actors in these projects
  ?project dbo:starring ?actor .

  # Filter actors who are native to Jackson, Tennessee
  ?actor dbo:nativePlace dbr:Jackson,_Tennessee .
}
```",8,12,9,3,3,3,3,71,0,0,1,0,0.0,0
959,60,test,"Give me the manager of the team of the manager, that is a sports manager, of 1998 Kashima Antlers season and member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of the person born in 1958.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/manager> ?result . <http://dbpedia.org/resource/1998_Kashima_Antlers_season> <http://dbpedia.org/ontology/manager> ?v5 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v4 <http://dbpedia.org/ontology/almaMater> ?v2 . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?result <http://dbpedia.org/ontology/team> ?v2 . ?v4 <http://dbpedia.org/ontology/birthYear> ""1958""^^<http://www.w3.org/2001/XMLSchema#gYear> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v0 <http://dbpedia.org/ontology/manager> ?v5 . }","```sparql
# Step 1: Find the manager of Kashima Antlers in 1998
SELECT ?manager WHERE {
    ?team dcterms:title ""Kashima Antlers""@en .
    ?team dbo:season ""1998"" .
    ?team dbo:coach ?manager .
}

# Step 2: Confirm if the manager is a sports manager (assuming DBpedia has such data)
SELECT ?manager WHERE {
    ?manager rdf:type dbo:SportsManager .
    # Assuming we have identified the manager from step 1
    FILTER(?manager = <identified_manager_uri>)
}

# Step 3: Find the alma mater of this manager
SELECT ?almaMater WHERE {
    ?manager foaf:almaMater ?almaMater .
    # Assuming we have identified the manager from previous steps
    FILTER(?manager = <identified_manager_uri>)
}

# Step 4: Check if the alma mater is Japanese and an organization/educational institution
SELECT ?almaMater WHERE {
    ?almaMater dbo:country dbr:Japan .
    ?almaMater rdf:type dbo:EducationalOrganization .
    # Assuming we have identified the alma mater from previous steps
    FILTER(?almaMater = <identified_alma_mater_uri>)
}

# Step 5: Identify a member born in 1958 associated with this alma mater
SELECT ?person WHERE {
    ?person foaf:birthYear ""1958"" .
    ?person foaf:almaMater ?almaMater .
    # Assuming we have identified the alma mater from previous steps
    FILTER(?almaMater = <identified_alma_mater_uri>)
}

# Step 6: Determine the manager of this person's team
SELECT ?teamManager WHERE {
    ?person dbo:manager ?teamManager .
    # Assuming we have identified the person from previous steps
    FILTER(?person = <identified_person_uri>)
}
```",6,11,7,3,2,3,3,71,0,0,3,0,0.0,0
281,38,test,"Give me the entity in the birth place, that is a country, of Bob Heffron and war of the profession, that is a military unit, of Heather Roy.",SELECT ?result WHERE { <http://dbpedia.org/resource/Bob_Heffron> <http://dbpedia.org/ontology/birthPlace> ?v3 . <http://dbpedia.org/resource/Heather_Roy> <http://dbpedia.org/property/occupation> ?v2 . ?result <http://dbpedia.org/ontology/place> ?v3 . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?country ?militaryUnit WHERE {
  # Find Bob Heffron's birth place that is a country
  dbr:Bob_Heffron dbo:birthPlace ?place .
  ?place rdf:type dbo:Country ;
         rdfs:label ?country .

  # Find Heather Roy's profession related to a military unit
  dbr:Heather_Roy dbo:occupation ?profession .
  ?profession dbo:militaryUnit ?militaryUnit .
}
```",4,6,5,2,2,3,3,71,0,0,1,0,0.0,0
404,46,test,"Give me the parent of the child, that is a royalty, of Ernest Augustus, Duke of Brunswick and spouse of the person born, that is a royalty, as the birth name of Princess Victoria Louise of Prussia.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/property/birthName> ?v2 . ?v1 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/child> ?v4 . ?v1 <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/ontology/child> ?v4 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
SELECT ?parent WHERE {
  # Step 1: Find Ernest Augustus, Duke of Brunswick
  ?ernestAugustus a dbo:Duke ;
                  foaf:name ""Ernest Augustus, Duke of Brunswick""@en .

  # Step 2: Identify his child who is royalty
  ?child dbo:childOf ?ernestAugustus ;
         rdf:type ?royaltyType .
  
  FILTER(?royaltyType IN (dbo:Monarch, dbo:Princess, dbo:Duchess)) # Assuming these types for royalty

  # Step 3: Determine the spouse of this royal child
  ?spouse dbo:spouse ?child .

  # Step 4: Identify Princess Victoria Louise of Prussia by birth name and confirm she is royalty
  ?princessVictoriaLouise a dbo:Princess ;
                         foaf:name ""Princess Victoria Louise of Prussia""@en ;
                         foaf:birthday ?birthDate .
  
  ?spouse foaf:name ?name .
  FILTER(?name = ""Victoria Louise, Princess Royal""@en) # Assuming this is her spouse's name

  # Step 5: Find the parent of the identified spouse
  ?parent dbo:childOf+ ?spouse .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
959,45,test,"Give me the manager of the team of the manager, that is a sports manager, of 1998 Kashima Antlers season and native of Japan and member of University of Tsukuba.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Japan> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v0 <http://dbpedia.org/ontology/manager> ?v3 . ?result <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/University_of_Tsukuba> . ?v0 <http://dbpedia.org/ontology/manager> ?result . <http://dbpedia.org/resource/1998_Kashima_Antlers_season> <http://dbpedia.org/ontology/manager> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?managerName WHERE {
  # Find the manager of Kashima Antlers in 1998
  ?team dbo:coach ?manager .
  ?manager foaf:name ?managerName .

  # Ensure the team is Kashima Antlers and the season is 1998
  ?team dbp:clubName ""Kashima Antlers"" ;
        dbp:season ""1998"" .

  # Check if the manager is a sports manager, native of Japan, and attended University of Tsukuba
  ?manager dbo:nationality dbr:Japan .
  ?manager dbo:almaMater dbr:University_of_Tsukuba .
  ?manager rdf:type dbo:SportsManager .
}
```",5,6,6,3,3,3,3,71,0,0,2,0,0.0,0
378,40,test,"Give me the claim to fame of Louis des Balbes de Berton de Crillon, 1st Duke of Mahón and war of Joaquín Blake and war of the person born as the birth name of Carl Pontus Gahn.","SELECT ?result WHERE { <http://dbpedia.org/resource/Louis_des_Balbes_de_Berton_de_Crillon,_1st_Duke_of_Mahón> <http://dbpedia.org/ontology/knownFor> ?result . ?v1 <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Joaquín_Blake> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/property/birthName> ?v2 . ?v1 <http://dbpedia.org/ontology/battle> ?result . }","```sparql
# Query for Louis des Balbes de Berton de Crillon's claim to fame
SELECT ?fame WHERE {
  wd:Q123456 rdfs:label ""Louis des Balbes de Berton de Crillon, 1st Duke of Mahón""@en .
  wd:Q123456 dbo:notableClaim ?fame .
}

# Query for the war Joaquín Blake was associated with
SELECT ?war WHERE {
  wd:Q654321 rdfs:label ""Joaquín Blake""@en .
  wd:Q654321 dbo:associatedWar ?war .
}

# Query for Carl Pontus Gahn's birth name
SELECT ?birthName WHERE {
  wd:Q789012 rdfs:label ""Carl Pontus Gahn""@en .
  wd:Q789012 foaf:name ?birthName .
}
```

Note: Replace `wd:Q123456`, `wd:Q654321`, and `wd:Q789012` with the actual DBpedia resource identifiers for Louis des Balbes de Berton de Crillon, Joaquín Blake, and Carl Pontus Gahn respectively.",5,5,6,3,3,3,3,71,0,0,2,0,0.0,0
701,62,test,Give me the parent of the child of the spouse of Amun-her-khepeshef and spouse of Ramesses II and parent of the child of the child of Seti I.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Ramesses_II> . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seti_I> . ?v3 <http://dbpedia.org/ontology/parent> ?result . ?v6 <http://dbpedia.org/property/father> ?v0 . ?v4 <http://dbpedia.org/ontology/child> ?v3 . ?result <http://dbpedia.org/ontology/child> ?v6 . <http://dbpedia.org/resource/Amun-her-khepeshef> <http://dbpedia.org/ontology/spouse> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parent
WHERE {
  # Amun-her-khepeshef and his spouse
  ?amunherkhepeshef a dbo:Person ;
                   foaf:surname ""Amun-her-khepeshef""@en .
  
  ?spouse1 dbo:spouse ?amunherkhepeshef .

  # Ramesses II and his spouse
  dbr:Ramesses_II dbo:spouse ?ramessesis2spouse .

  # Seti I's child and their descendant
  dbr:Seti_I dbo:child ?setis1child .
  
  ?setis1childChild dbo:parent ?setis1child ;
                   a dbo:Person .

  # Find the common parent
  ?commonParent dbo:spouse ?spouse1 ;
                dbo:spouse ?ramessesis2spouse ;
                dbo:parent ?setis1childChild .
}
```",7,7,8,3,3,3,3,71,0,0,1,0,0.0,0
801,67,test,"Give me the professional in  and producer of the work, that is a musical work and a song and a work, of the professional, that is a musical artist, in Rapper and associated musical artist of the writer, that is a musical artist and an artist, of the album, that is a musical work and a work, of What U See Is What U Get.","SELECT ?result WHERE { ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v6 <http://dbpedia.org/ontology/producer> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> """"@en . <http://dbpedia.org/resource/What_U_See_Is_What_U_Get> <http://dbpedia.org/ontology/album> ?v1 . ?v1 <http://dbpedia.org/property/writer> ?v3 . ?v0 <http://dbpedia.org/property/occupation> ""Rapper""@en . ?v6 <http://dbpedia.org/property/writer> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?rapper ?producer WHERE {
  # Find the album ""What U See Is What U Get""
  VALUES ?album { dbr:What_U_See_Is_What_U_Get_(album) }
  
  # Find the main artist (rapper) associated with the album
  ?album dbo:artist ?rapper .
  FILTER EXISTS { ?rapper a dbo:MusicalArtist . }
  FILTER EXISTS { ?rapper dbo:genre dbr:Hip_hop_music . }

  # Find the producer(s) of the album
  OPTIONAL {
    ?album dbo:producer ?producer .
    FILTER EXISTS { ?producer a dbo:MusicalArtist . }
  }
}
```",7,15,8,3,3,3,3,71,0,0,8,0,0.0,0
747,47,test,"Give me the band of the writer of the work, that is a song, of Amba Shepherd and person born on the birth date of Pavlo Khudzik.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Amba_Shepherd> . ?result <http://dbpedia.org/ontology/birthDate> ?v2 . ?v0 <http://dbpedia.org/property/writer> ?v4 . <http://dbpedia.org/resource/Pavlo_Khudzik> <http://dbpedia.org/ontology/birthDate> ?v2 . },"```sparql
# Step 1: Find a song written by Amba Shepherd
SELECT ?song WHERE {
    ?work dcterms:title ?title .
    ?work dbo:composer ?composer .
    ?composer foaf:name ""Amba Shepherd""@en .
    ?work rdf:type dbo:Song .
}

# Step 2: Find the writer of that song and their band
SELECT ?writerBand WHERE {
    ?song dbo:composer ?writer .
    ?writer dbo:musicGroup ?band .
    ?band rdfs:label ?writerBand .
    FILTER(?song IN (SELECT DISTINCT ?work WHERE {
        ?work dcterms:title ?title .
        ?work dbo:composer ?composer .
        ?composer foaf:name ""Amba Shepherd""@en .
        ?work rdf:type dbo:Song
    }))
}

# Step 3: Find Pavlo Khudzik's birth date
SELECT ?birthDate WHERE {
    ?person foaf:name ""Pavlo Khudzik""@en .
    ?person dbo:birthday ?birthDate .
}

# Step 4: Find a person born on that same date
SELECT DISTINCT ?otherPersonName WHERE {
    ?otherPerson dbo:birthday ?birthDate .
    ?person foaf:name ""Pavlo Khudzik""@en .
    ?person dbo:birthday ?birthDate .
    ?otherPerson foaf:name ?otherPersonName .
    FILTER(?otherPerson != ?person)
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
77,20,test,"Give me the war of the awardee of the award of Maxim Grigorievich Vlasov and force of the mayor of the territory administered, that is an organisation, from Warsaw.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> ?v1 . ?v4 <http://dbpedia.org/property/leader> ?v5 . ?result <http://dbpedia.org/ontology/commander> ?v5 . ?v4 <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Warsaw> . <http://dbpedia.org/resource/Maxim_Grigorievich_Vlasov> <http://dbpedia.org/property/awards> ?v1 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
# Query to find Maxim Grigorievich Vlasov and his award
SELECT ?award WHERE {
  ?person rdfs:label ""Maxim Grigorievich Vlasov""@en .
  ?person dbo:awardsReceived ?award .
}

# Assuming we have identified the award, query for the associated war
SELECT ?war WHERE {
  ?award dbo:associatedWithWar ?war .
}

# Query to find the current mayor of Warsaw
SELECT ?mayor WHERE {
  wd:Q1206 dbo:mayor ?mayor .
}

# Query to find the organization or force administered by the mayor
SELECT ?organization WHERE {
  ?mayor dbo:administers ?organization .
}
```",6,7,7,3,2,3,2,20,0,0,26,0,0.0,0
994,46,test,"Give me the associated musical artist of the band member, that is a band and a group and an organisation, of Meshuggah and associated musical artist of the associated musical artist of the reference to Watchtower.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://xmlns.com/foaf/0.1/name> ""Watchtower""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Meshuggah> . }","```sparql
# Step 1: Find a band member of Meshuggah who is also in another band or group
SELECT ?member WHERE {
  ?meshuggah dbo:bandMember ?member .
  FILTER(STRSTARTS(LCASE(?meshuggah), ""http://dbpedia.org/resource/meshuggah""))
}

# Step 2: Find the associated musical artist of that band or group
SELECT DISTINCT ?associatedArtist WHERE {
  ?otherBand dbo:bandMember ?member .
  ?otherBand dbo:genre ?genre .
  ?artist dbo:genre ?genre .
  FILTER(?otherBand != ?meshuggah)
}

# Step 3: Identify the reference to Watchtower
SELECT DISTINCT ?watchtowerArtist WHERE {
  ?watchtower dbo:associatedMusicalArtist ?watchtowerArtist .
  FILTER(STRSTARTS(LCASE(?watchtower), ""http://dbpedia.org/resource/watchtower_(band)""))
}

# Step 4: Find the associated musical artist of that reference
SELECT DISTINCT ?finalArtist WHERE {
  ?artist dbo:associatedMusicalArtist ?watchtowerArtist .
}
```",5,8,6,3,2,3,3,71,0,0,5,0,0.0,0
492,45,test,"Give me the commander in Franco-Hova Wars and person decedent at the capital, that is a settlement, of the country of Khemis Miliana District and person decedent at French Algeria.",SELECT ?result WHERE { <http://dbpedia.org/resource/Khemis_Miliana_District> <http://dbpedia.org/ontology/country> ?v0 . ?v0 <http://dbpedia.org/ontology/capital> ?v1 . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/French_Algeria> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . <http://dbpedia.org/resource/Franco-Hova_Wars> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commander ?decedentKhemisMiliana ?decedentFrenchAlgeria WHERE {
  # Commander in Franco-Hova Wars
  ?commander dbo:nationality dbr:France ;
            dbo:occupation dbr:Military_person ;
            dbo:wikiPageDisambiguates ?francoHovaWars .
  
  FILTER(CONTAINS(LCASE(STR(?francoHovaWars)), ""franco-hova wars""))

  # Person decedent at Khemis Miliana
  ?decedentKhemisMiliana dbo:deathPlace dbr:Khemis_Miliana ;
                         dbo:occupation ?occupation .

  # Person decedent at French Algeria
  ?decedentFrenchAlgeria dbo:deathPlace ?placeInAlgeria ;
                        dbo:country dbr:French_Algeria .
  
  FILTER(CONTAINS(LCASE(STR(?placeInAlgeria)), ""algeria""))
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
184,61,test,"Give me the child of the child of the parent, that is a royalty, of Archduke Ladislaus Philipp of Austria and parent of the child of the parent of Archduchess Margaret of Austria (born 1925).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v3 . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Margaret_of_Austria_(born_1925)> . ?v3 <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Archduke_Ladislaus_Philipp_of_Austria> <http://dbpedia.org/ontology/parent> ?v0 . ?result <http://dbpedia.org/property/father> ?v5 . ?v5 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
# Step 1: Find a royalty who is the grandchild of Archduke Ladislaus Philipp's parent.
SELECT ?grandchild WHERE {
  ?ladislaus dbo:parent ?parent .
  ?parent dbo:child ?child .
  ?child dbo:child ?grandchild .
  ?grandchild rdf:type dbo:RoyalPerson .
}

# Step 2: Find the grandparent of Archduchess Margaret of Austria (born 1925).
SELECT ?grandparent WHERE {
  wd:Q1234567 dbo:parent ?parent . # Replace Q1234567 with the DBpedia ID for Archduchess Margaret of Austria
  ?parent dbo:child ?child .
  ?child dbo:parent ?grandparent .
}

# Step 3: Find the intersection of results from Step 1 and Step 2.
SELECT DISTINCT ?commonIndividual WHERE {
  # From Step 1
  ?ladislaus dbo:parent ?parentLadislaus .
  ?parentLadislaus dbo:child ?childLadislaus .
  ?childLadislaus dbo:child ?grandchildLadislaus .
  ?grandchildLadislaus rdf:type dbo:RoyalPerson .

  # From Step 2
  wd:Q1234567 dbo:parent ?parentMargaret .
  ?parentMargaret dbo:child ?childMargaret .
  ?childMargaret dbo:parent ?commonIndividual .

  FILTER (?grandchildLadislaus = ?commonIndividual)
}
```

Note: Replace `wd:Q1234567` with the actual DBpedia ID for Archduchess Margaret of Austria (born 1925). The query assumes that the relationships are stored in a way that allows traversal through parent-child links and checks for royalty type.",6,7,7,3,2,3,3,71,0,0,1,0,0.0,0
16,49,test,Give me the person born as the birth name of the alumnus of Ohio State University and spouse of the person born as Ted Martin McGinley.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Ohio_State_University> . ?v2 <http://dbpedia.org/property/birthName> ""Ted Martin McGinley""@en . ?v0 <http://dbpedia.org/property/birthName> ?v1 . }","```sparql
# Step 1: Get alumni of Ohio State University and their birth names
SELECT ?alumnus ?birthName WHERE {
  ?alumnus dbo:almaMater dbr_Ohio_State_University.
  OPTIONAL { ?alumnus foaf:name ?name. }
  OPTIONAL { ?alumnus dbp:birthName ?birthName. }
}

# Step 2: Get Ted Martin McGinley's spouse
SELECT ?spouse WHERE {
  ?person foaf:name ""Ted Martin McGinley""@en.
  ?person dbo:spouse ?spouse.
}

# Step 3: Find the person whose birth name matches the alumnus' birth name
SELECT ?matchingPerson WHERE {
  # Assuming we have stored the results from step 1 and step 2 in variables $birthName and $spouse respectively
  VALUES (?alumnusBirthName) { ($birthName) }
  VALUES (?spouse) { ($spouse) }

  ?person dbp:birthName ?alumnusBirthName.
  FILTER(?person != ?spouse)
}
```

Note: The above SPARQL queries are structured to be executed in sequence, with intermediate results stored and used in subsequent queries. In practice, you would need to execute these queries step-by-step, storing the necessary values for `$birthName` and `$spouse`.",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
16,65,test,Give me the person born as the birth name of Gigi Rice and spouse of the person born as Ted Martin McGinley and professional in the profession of the actor of Unnatural (TV series).,"SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/birthName> ""Ted Martin McGinley""@en . ?v4 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Gigi_Rice> <http://dbpedia.org/property/birthName> ?v3 . ?v0 <http://dbpedia.org/property/occupation> ?v6 . ?result <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Unnatural_(TV_series)> <http://dbpedia.org/property/starring> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v6 . }","```sparql
# Step 1: Get Gigi Rice's birth name
SELECT ?birthName WHERE {
  wd:Q1234568 foaf:name ""Gigi Rice""@en .
  OPTIONAL { wd:Q1234568 schema:birthName ?birthName . }
}

# Step 2: Find Ted Martin McGinley's spouse with the birth name from step 1
SELECT ?spouse WHERE {
  ?person foaf:name ""Ted Martin McGinley""@en .
  ?person schema:spouse ?spouse .
  ?spouse schema:birthName ?birthName .
  FILTER(?birthName = <URI_of_birth_name_from_step_1>)
}

# Step 3: Identify the actor from ""Unnatural"" and their profession
SELECT ?actor ?profession WHERE {
  wd:Q789012 foaf:name ""Unnatural""@en . # Assuming Q789012 is the TV series URI
  ?episode schema:isPartOf wd:Q789012 .
  ?episode schema:actor ?actor .
  ?actor dbo:occupation ?profession .
}

# Step 4: Find the person who matches all criteria
SELECT ?person WHERE {
  ?person foaf:name ?birthName . # From step 1
  ?person schema:spouse ?spouse .
  ?spouse foaf:name ""Ted Martin McGinley""@en .
  ?actor dbo:occupation ?profession .
  FILTER(?birthName = <URI_of_birth_name_from_step_1> && ?profession = <Profession_from_step_3>)
}
```

Note: Replace `<URI_of_birth_name_from_step_1>` and `<Profession_from_step_3>` with the actual URIs obtained from executing the first two queries.",7,7,8,3,3,3,3,71,0,0,1,0,0.0,0
16,60,test,Give me the person born as the birth name of the alumnus of Ohio State University and spouse of the person born as the birth name of Ted McGinley.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Ohio_State_University> . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/property/birthName> ?v3 . ?result <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
# Step 1: Find an alumnus of Ohio State University and their birth name
SELECT ?alumnus ?birthName WHERE {
  ?alumnus dbo:almaMater dbr_Ohio_State_University .
  ?alumnus foaf:name ?name .
  OPTIONAL { ?alumnus schema:birthName ?birthName }
}

# Step 2: Find someone else with the same birth name
SELECT DISTINCT ?person WHERE {
  ?person schema:birthName ?birthName .
  FILTER(?person != ?alumnus)
}

# Step 3: Find Ted McGinley's spouse and their birth name
SELECT ?spouse ?spouseBirthName WHERE {
  dbr_Ted_McGinley dbo:spouse ?spouse .
  OPTIONAL { ?spouse schema:birthName ?spouseBirthName }
}

# Step 4: Find the person born with that birth name
SELECT DISTINCT ?finalPerson WHERE {
  ?finalPerson schema:birthName ?spouseBirthName .
}
```",6,6,7,3,2,3,3,71,0,0,1,0,0.0,0
547,60,test,Give me the resting place of the awardee of the award of Gerald Graham and resting place of the child of the child of William Haliburton.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Gerald_Graham> <http://dbpedia.org/property/awards> ?v0 . ?v1 <http://dbpedia.org/property/awards> ?v0 . ?v3 <http://dbpedia.org/ontology/child> ?v2 . ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . ?v3 <http://dbpedia.org/property/father> ""William Haliburton""@en . }","```sparql
# Query for the resting place of the awardee of the award associated with Gerald Graham

SELECT ?awardee ?restingPlace WHERE {
  # Find the award associated with Gerald Graham
  ?award dbo:recipient ?person .
  ?person foaf:name ""Gerald Graham""@en .

  # Find an individual who received that award
  ?award dbo:recipient ?awardee .

  # Get the resting place of that awardee
  OPTIONAL { ?awardee dbo:deathPlace ?restingPlace . }
}

UNION

# Query for the resting place of the child of the child of William Haliburton

SELECT ?grandchild ?restingPlace WHERE {
  # Find William Haliburton and his children
  ?william foaf:name ""William Haliburton""@en .
  ?william dbo:child ?child .

  # Find a grandchild (child of one of William's children)
  ?child dbo:child ?grandchild .

  # Get the resting place of that grandchild
  OPTIONAL { ?grandchild dbo:deathPlace ?restingPlace . }
}
```",6,6,7,3,2,3,3,71,0,0,2,0,0.0,0
659,49,test,"Give me the commander in the force of Arthur Wellesley, 1st Duke of Wellington and military force of the force, that is a societal event and an event and a military conflict, of the reference to Rutger Jan Schimmelpenninck.","SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""Rutger Jan Schimmelpenninck""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Arthur_Wellesley,_1st_Duke_of_Wellington> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/ontology/commander> ?v0 . ?result <http://dbpedia.org/ontology/battle> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  ?battle dbo:commander dbr:Arthur_Wellesley,_1st_Duke_of_Wellington .
  ?battle a dbo:MilitaryConflict .
  ?battle rdfs:label ""Battle of Waterloo""@en .
  
  ?battle dbo:participatedInMilitaryForce ?force .
  ?force dbo:commander ?commander .

  OPTIONAL {
    ?commander dbo:reference dbr:Rutger_Jan_Schimmelpenninck .
  }
}
```",5,8,6,3,2,3,3,71,0,0,38,0,0.0,0
547,67,test,Give me the resting place of James Burton (Egyptologist) and resting place of the awardee of the award of Gerald Graham and resting place of the actor of the show with Emily Richard.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/awards> ?v1 . <http://dbpedia.org/resource/Gerald_Graham> <http://dbpedia.org/property/awards> ?v1 . ?v6 <http://dbpedia.org/ontology/restingPlace> ?result . ?v0 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emily_Richard> . <http://dbpedia.org/resource/James_Burton_(Egyptologist)> <http://dbpedia.org/ontology/restingPlace> ?result . ?v3 <http://dbpedia.org/ontology/restingPlace> ?result . ?v0 <http://dbpedia.org/property/starring> ?v6 . },"```sparql
# Query for James Burton (Egyptologist)
SELECT ?restingPlace WHERE {
  ?person rdfs:label ""James Burton (Egyptologist)""@en .
  ?person dbo:deathPlace ?restingPlace .
}

UNION

# Query for the awardee of the award associated with Gerald Graham
SELECT ?awardeeRestingPlace WHERE {
  ?award dbo:recipient ?awardee .
  ?award rdfs:label ?awardLabel .
  FILTER(CONTAINS(LCASE(?awardLabel), ""gerald graham"")).
  ?awardee dbo:deathPlace ?awardeeRestingPlace .
}

UNION

# Query for the actor of the show with Emily Richard
SELECT ?actorRestingPlace WHERE {
  ?show dbo:starring ?actor .
  ?show dbo:castMember ?emilyRichard .
  ?emilyRichard rdfs:label ""Emily Richard""@en .
  ?actor dbo:deathPlace ?actorRestingPlace .
}
```",7,7,8,3,3,3,3,71,0,0,1,0,0.0,0
994,62,test,"Give me the associated musical artist of the associated musical artist of the reference to Watchtower and band member of Don Dokken and associated musical artist of the band member, that is a band and a group and an organisation, of the band, that is an organisation, of Fredrik Thordendal.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v4 <http://xmlns.com/foaf/0.1/name> ""Watchtower""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Don_Dokken> . ?v1 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Fredrik_Thordendal> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. }","```sparql
# Step 1: Find John Bush as an associated artist of Watchtower
SELECT ?johnBush WHERE {
  wd:Q123456 wdt:P106 wd:Q33999; # Watchtower has a member who is a musician
  wdt:P527 ?member.             # Member of Watchtower
  ?member wdt:P31 wd:Q33999.    # Person is a musician
  ?member rdfs:label ?name.
  FILTER(CONTAINS(LCASE(?name), ""john bush""))
}

# Step 2: Find George Lynch as an associated artist of John Bush (Anthrax)
SELECT ?georgeLynch WHERE {
  wd:Q1234567 wdt:P106 wd:Q33999; # Anthrax has a member who is a musician
  wdt:P527 ?member.               # Member of Anthrax
  ?member wdt:P31 wd:Q33999.      # Person is a musician
  ?member rdfs:label ?name.
  FILTER(CONTAINS(LCASE(?name), ""george lynch""))
}

# Step 3: Find Lynch Mob as an associated artist of George Lynch
SELECT ?lynchMob WHERE {
  wd:Q1234568 wdt:P31 wd:Q215380; # Lynch Mob is a band
  wdt:P127 ?member.               # Member of Lynch Mob
  ?member wdt:P31 wd:Q33999.      # Person is a musician
  ?member rdfs:label ?name.
  FILTER(CONTAINS(LCASE(?name), ""george lynch""))
}

# Step 4: Confirm Meshuggah as an organisation related to Fredrik Thordendal
SELECT ?meshuggah WHERE {
  wd:Q1234569 wdt:P31 wd:Q215380; # Meshuggah is a band
  wdt:P127 ?member.               # Member of Meshuggah
  ?member rdfs:label ?name.
  FILTER(CONTAINS(LCASE(?name), ""fredrik thordendal""))
}

# Final Step: Confirm Lynch Mob as the answer
SELECT ?lynchMob WHERE {
  wd:Q1234568 wdt:P31 wd:Q215380. # Lynch Mob is a band
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
328,71,test,"Give me the commander in the force of the person decedent at Budapest and awardee of the award of the commander in Volcano and Ryukyu Islands campaign and leader of the office, that is a government agency, of the leader, that is an office holder and a politician, of Gustav Jonson.",SELECT ?result WHERE { ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/property/awards> ?v2 . ?v8 <http://dbpedia.org/ontology/leader> ?result . ?v5 <http://dbpedia.org/ontology/commander> ?v4 . ?v1 <http://dbpedia.org/property/awards> ?v2 . <http://dbpedia.org/resource/Gustav_Jonson> <http://dbpedia.org/property/leader> ?v7 . ?v5 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Volcano_and_Ryukyu_Islands_campaign> <http://dbpedia.org/ontology/commander> ?v1 . ?v4 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Budapest> . ?v7 <http://dbpedia.org/property/office> ?v8 . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?agencyLeader WHERE {
  # Identify Gustav Jonson as a politician
  ?gustavJonson dbo:occupation dbr:Politician ;
                foaf:name ""Gustav Jonson"" .

  # Find the commander at Budapest during his time
  ?budaCommander dbo:commandedForce ?force ;
                 dbo:awardedForCampaign dbr:Volcano_and_Ryukyu_Islands_campaign ;
                 dbo:awardReceived dbr:Commander_Award .

  # Check if this commander was awarded for their role in the Volcano and Ryukyu Islands campaign
  ?budaCommander foaf:name ?commanderName .

  # Identify the government agency led by this commander
  ?agencyLeader dbo:leader ?commander ;
                a dbo:GovernmentAgency .
}
```",9,12,10,3,3,3,3,71,0,0,1,0,0.0,0
391,66,test,"Give me the actor of the movie, that is a movie and a work and a television show, with the professional in  and actor of the claim to fame, that is a work, of Michael Ballhaus and native of the figure known as Hub City.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/nickname> ""Hub City""@en . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v6 <http://dbpedia.org/ontology/starring> ?result . ?v2 <http://dbpedia.org/property/starring> ?result . ?v1 <http://dbpedia.org/property/occupation> """"@en . ?v2 <http://dbpedia.org/property/starring> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . <http://dbpedia.org/resource/Michael_Ballhaus> <http://dbpedia.org/ontology/knownFor> ?v6 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actor WHERE {
  ?work a dbo:Film ;
        a dbo:TelevisionSeries ;
        dbo:director dbr:Michael_Ballhaus .
  
  ?work dbo:starring ?actor .

  OPTIONAL {
    ?person dbo:nationality dbr:United_States ;
            dbo:birthPlace dbr:Spartanburg,_South_Carolina ;
            rdfs:label ?name .
    
    FILTER(CONTAINS(LCASE(?name), ""hub city""))
    
    ?work dbo:starring ?person .
  }
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
801,69,test,"Give me the producer of the work, that is a musical work and a song and a work, of 50 Cent and professional in the alter ego of the true self of The Shadow and associated musical artist of the writer, that is a musical artist and an artist, of the album, that is a musical work and a work, of What U See Is What U Get.","SELECT ?result WHERE { <http://dbpedia.org/resource/What_U_See_Is_What_U_Get> <http://dbpedia.org/ontology/album> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v4 <http://xmlns.com/foaf/0.1/givenName> ""The Shadow""@en . ?v7 <http://dbpedia.org/ontology/producer> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v1 <http://dbpedia.org/property/writer> ?v2 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v7 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/50_Cent> . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v4 <http://dbpedia.org/property/alterEgo> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/property/occupation> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?producer WHERE {
    # Identify the album ""What U See Is What U Get""
    dbr:What_U_See_Is_What_U_Get a dbo:Album ;
        dbo:artist dbr:50_Cent ;
        dbo:producer ?producer .

    # Ensure the producer is associated with 50 Cent or The Shadow
    OPTIONAL { ?producer dbo:associatedMusicalArtist dbr:50_Cent . }
    OPTIONAL { ?producer dbo:associatedMusicalArtist dbr:The_Shadow . }

    FILTER EXISTS {
        ?producer dbo:associatedMusicalArtist dbr:50_Cent .
    }
}
```",8,15,9,3,3,3,3,71,0,0,1,0,0.0,0
488,21,test,Give me the administration of Emperor Go-Yōzei and birth place of the commander in Boshin War.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Emperor_Go-Yōzei> . <http://dbpedia.org/resource/Boshin_War> <http://dbpedia.org/ontology/commander> ?v1 . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?reignPeriod ?birthPlace WHERE {
  # Query for Emperor Go-Yōzei's reign period
  dbr:Emperor_Go-Yōzei dbo:reign ?reignPeriod .
  
  # Query for Saigō Takamori's birthplace (as an example commander of the Boshin War)
  dbr:Saigō_Takamori dbo:birthPlace ?birthPlace .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
429,9,test,"Give me the country of the military force, that is an organisation, of Camden Expedition and administration of the father of Martha Johnson Patterson.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://dbpedia.org/ontology/country> ?result . ?v3 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Camden_Expedition> . ?result <http://dbpedia.org/property/leader> ?v1 . <http://dbpedia.org/resource/Martha_Johnson_Patterson> <http://dbpedia.org/property/father> ?v1 . },"```sparql
SELECT DISTINCT ?country1 ?country2 WHERE {
  # Find the country of the military organization involved in the Camden Expedition
  ?militaryOrganization dbo:wikiPageRedirects db:Camden_Expedition .
  ?militaryOrganization dbo:country ?country1 .

  # Find Martha Johnson Patterson's father and his administration
  ?martha foaf:parent ?father .
  ?father dbo:occupation ""Politician""^^xsd:string .
  ?administration dbo:member ?father .
  ?administration dbo:country ?country2 .

  FILTER (str(?martha) = ""Martha_Johnson_Patterson"")
}
```",4,5,5,2,2,2,2,9,0,0,1,0,0.0,0
427,53,test,"Give me the reference to the name of the party of Michele Pinto and party of Giulio Andreotti and party of the person born, that is an office holder and a politician, as Romano Antonio Prodi.","SELECT ?result WHERE { <http://dbpedia.org/resource/Giulio_Andreotti> <http://dbpedia.org/ontology/party> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/party> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://xmlns.com/foaf/0.1/name> ?v2 . ?v1 <http://dbpedia.org/property/birthName> ""Romano Antonio Prodi""@en . <http://dbpedia.org/resource/Michele_Pinto> <http://dbpedia.org/ontology/party> ?v3 . }","```sparql
SELECT ?person ?name ?partyName WHERE {
  VALUES ?person { 
    dbr:Michele_Pinto_(politician) 
    dbr:Giulio_Andreotti 
    dbr:Romano_Prodi 
  }
  
  ?person dbo:name ?name .
  OPTIONAL { ?person dbo:party ?party . }
  OPTIONAL { ?party rdfs:label ?partyName FILTER (lang(?partyName) = ""en"") . }
}
```",6,8,7,3,3,3,3,71,0,0,2,0,0.0,0
285,17,test,Give me the spouse of the professional in the award of Stan Lee and parent of Alexander Onassis.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/occupation> ?v0 . <http://dbpedia.org/resource/Stan_Lee> <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Alexander_Onassis> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/spouse> ?v3 . },"```sparql
SELECT ?spouse WHERE {
  wd:Q1773 wdt:P26 ?spouse .
}
```",4,4,5,3,2,3,2,20,0,0,2,0,0.0,0
232,67,test,"Give me the actor of the claim to fame, that is a film and a military conflict, of the professional in Actor, narrator and producer and native of the residence, that is a settlement and British, of the native, that is a politician and an office holder, of France and child of Jon Pertwee.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/residence> ?v3 . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v0 <http://dbpedia.org/property/occupation> ""Actor, narrator and producer""@en . ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/France> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://dbpedia.org/ontology/knownFor> ?v6 . <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/ontology/child> ?result . ?v6 <http://dbpedia.org/ontology/starring> ?result . }","```sparql
# Step 1: Find Jon Pertwee's child who is a politician from France
SELECT ?child WHERE {
  wd:Q1773 wdt:P40 ?child .
  ?child wdt:P106 wd:Q82955 . # Politician
  ?child wdt:P27 wd:Q142 .    # France
}

# Step 2: Find the residence of this child that is a settlement and British
SELECT ?residence WHERE {
  ?child wdt:P19 ?residence .
  ?residence wdt:P31/wdt:P279* wd:Q515 . # Settlement
  ?residence wdt:P17 wd:Q145 .           # United Kingdom
}

# Step 3: Find the actor, narrator, and producer native to this settlement
SELECT ?actor WHERE {
  ?actor wdt:P19 ?residence .
  ?actor wdt:P106/wdt:P279* wd:Q33999 . # Actor
  ?actor wdt:P106/wdt:P279* wd:Q49770 . # Narrator
  ?actor wdt:P106/wdt:P279* wd:Q483627 # Producer
}

# Step 4: Find the film and military conflict associated with this actor
SELECT ?film ?conflict WHERE {
  ?actor wdt:P800 ?work .
  ?work wdt:P31/wdt:P279* wd:Q11424 . # Film
  BIND(STR(?work) AS ?film)
  
  OPTIONAL { 
    ?actor wdt:P800 ?work2 .
    ?work2 wdt:P31/wdt:P279* wd:Q1344284 . # Military conflict
    BIND(STR(?work2) AS ?conflict)
  }
}
```",7,13,8,3,3,3,3,71,0,0,1,0,0.0,0
281,67,test,"Give me the entity in the birth place, that is a country, of the leader, that is a politician, of 1962 New South Wales state election and war of the profession, that is a military unit, of the professional, that is an office holder and a politician, in New Zealand Army and war of Beauchamp Seymour, 1st Baron Alcester.","SELECT ?result WHERE { <http://dbpedia.org/resource/1962_New_South_Wales_state_election> <http://dbpedia.org/property/leader> ?v0 . ?v0 <http://dbpedia.org/ontology/birthPlace> ?v6 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://dbpedia.org/property/occupation> ?v3 . ?v1 <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/New_Zealand_Army> . <http://dbpedia.org/resource/Beauchamp_Seymour,_1st_Baron_Alcester> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> ?v6 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. }","```sparql
# Step 1: Retrieve leader of the 1962 NSW state election
SELECT ?leader WHERE {
  ?election dcterms:title ""1962 New South Wales state election""@en .
  ?election dbo:winner ?leader .
  ?leader a dbo:Politician .
}

# Step 2: Find birthplace and check if it's a country
SELECT ?birthPlaceCountry WHERE {
  ?leader dbo:birthPlace ?birthPlace .
  ?birthPlace wdt:P31 wd:Q6256 ; # Q6256 is the class for Country
             rdfs:label ?countryLabel .
}

# Step 3: Identify Beauchamp Seymour's military unit in New Zealand Army
SELECT ?militaryUnit WHERE {
  wd:Q123456 dbo:militaryUnit ?militaryUnit . # Replace with actual WD ID of Beauchamp Seymour
  ?militaryUnit dbo:partOfMilitaryOrganization wd:Q789012 . # Q789012 is the class for New Zealand Army
}

# Step 4: Find professional who is both an office holder and politician involved in this unit's war
SELECT ?professional WHERE {
  ?war dbo:militaryUnit ?militaryUnit .
  ?professional dbo:officeHolder ?office ;
                a dbo:Politician ;
                dbo:profession ?war .
}

# Step 5: Determine the birthplace of this professional and check if it's a country
SELECT ?birthPlaceCountry2 WHERE {
  ?professional dbo:birthPlace ?birthPlace2 .
  ?birthPlace2 wdt:P31 wd:Q6256 ; # Q6256 is the class for Country
               rdfs:label ?countryLabel2 .
}
```",7,12,8,3,3,3,3,71,0,0,1,0,0.0,0
487,16,test,"Give me the administration of the person born, that is a soccer player, as Philip Brian Scott and country of the administration of Patricia McCoy.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/country> ?result . ?result <http://dbpedia.org/property/governor> ?v3 . ?v3 <http://dbpedia.org/property/birthName> ""Philip Brian Scott""@en . ?v2 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Patricia_McCoy> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. }","```sparql
# Query for Philip Brian Scott's administration
SELECT ?administration WHERE {
  ?person foaf:name ""Philip Brian Scott""@en .
  ?person dbo:occupation dbp:Soccer_player .
  ?person dbo:team ?administration .
}

UNION

# Query for Patricia McCoy's country of administration
SELECT ?country WHERE {
  ?person foaf:name ""Patricia McCoy""@en .
  ?person dbo:occupation dbp:Soccer_player .
  ?person dbo:team ?administration .
  ?administration dbo:location ?location .
  ?location dbo:country ?country .
}
```",4,5,5,2,2,3,2,20,0,0,1,0,0.0,0
232,50,test,"Give me the native of the residence, that is a settlement and British, of Sylvie Bermann and actor of the claim to fame, that is a film and a military conflict, of the professional in Actor, narrator and producer.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v4 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Sylvie_Bermann> <http://dbpedia.org/property/residence> ?v3 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/ontology/knownFor> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v0 <http://dbpedia.org/property/occupation> ""Actor, narrator and producer""@en . ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?native WHERE {
  # Sylvie Bermann's residence context (Washington D.C.)
  dbr:Sylvie_Bermann dbo:residence dbr:Washington_D.C.

  # London as a British settlement
  dbr:London a dbo:Settlement ;
             dbo:country dbr:United_Kingdom .

  # Tom Hanks' claim to fame (film and military conflict)
  dbr:Saving_Private_Ryan dbo:actor dbr:Tom_Hanks .
  dbr:World_War_II dbo:relatedWork dbr:Saving_Private_Ryan .

  # Find the native of London related to these contexts
  ?native dbo:nativePlace dbr:London ;
          dbo:profession dbr:Actor ;
          dbo:actorInFilm dbr:Saving_Private_Ryan .
}
```",5,9,6,3,2,3,3,71,0,0,1,0,0.0,0
281,71,test,"Give me the war of the awardee of the award of Jonathon Band and entity in the birth place, that is a country, of the leader, that is a politician, of 1962 New South Wales state election and war of the profession, that is a military unit, of the professional, that is an office holder and a politician, in New Zealand Army.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/birthPlace> ?v5 . <http://dbpedia.org/resource/Jonathon_Band> <http://dbpedia.org/property/awards> ?v1 . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v8 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/1962_New_South_Wales_state_election> <http://dbpedia.org/property/leader> ?v4 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/place> ?v5 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/property/awards> ?v1 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v7 <http://dbpedia.org/property/occupation> ?v8 . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v7 <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/New_Zealand_Army> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
# Step 1: Find Jonathon Band's award
SELECT ?award WHERE {
    dbpedia:Jonathan_Band dbo:awardedBy ?award .
}

# Step 2: Find the awardee of Jonathon Band's award and associated war
SELECT DISTINCT ?awardee ?war WHERE {
    ?award dbo:recipient ?awardee .
    OPTIONAL { ?awardee dbo:participatedIn ?war . }
}

# Step 3: Identify the leader from the 1962 New South Wales state election
SELECT ?leader WHERE {
    ?election dbo:year ""1962"" ;
              dbo:stateOrTerritory dbpedia:New_South_Wales ;
              dbo:winner ?leader .
}

# Step 4: Find the birthplace country of the leader and associated war
SELECT DISTINCT ?country ?war WHERE {
    ?leader dbo:birthPlace ?location .
    ?location rdf:type dbo:Country .
    OPTIONAL { ?location dbo:participatedIn ?war . }
}

# Step 5: Identify the profession in the New Zealand Army for a politician and office holder, and find related wars
SELECT DISTINCT ?profession ?war WHERE {
    ?person dbo:occupation dbpedia:New_Zealand_Army ;
            dbo:officeHolder ""true""^^xsd:boolean ;
            dbo:politician ""true""^^xsd:boolean .
    OPTIONAL { ?person dbo:participatedIn ?war . }
}
```",9,14,10,3,3,3,3,71,0,0,1,0,0.0,0
30,9,test,Give me the professional in the profession of Édouard Alphonse James de Rothschild and native of the birthplace of Silvia Cohen.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v3 . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . <http://dbpedia.org/resource/Silvia_Cohen> <http://dbpedia.org/ontology/birthPlace> ?v1 . <http://dbpedia.org/resource/Édouard_Alphonse_James_de_Rothschild> <http://dbpedia.org/property/occupation> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Find the profession of Édouard Alphonse James de Rothschild
  dbr:Édouard_Alphonse_James_de_Rothschild dbo:profession ?profession .

  # Find the birthplace of Silvia Cohen
  dbr:Silvia_Cohen dbo:birthPlace ?birthPlace .

  # Find individuals with the same profession and birthplace
  ?person a dbo:Person ;
          dbo:profession ?profession ;
          dbo:birthPlace ?birthPlace .
}
```",4,4,5,2,2,2,2,9,0,0,1,0,0.0,0
528,58,test,Give me the war of the commander in Battle of La Rinconada de Ate and war of Irene Morales and force of the person born as the birth name of Narciso Campero.,SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Battle_of_La_Rinconada_de_Ate> <http://dbpedia.org/ontology/commander> ?v5 . <http://dbpedia.org/resource/Narciso_Campero> <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/ontology/commander> ?v2 . ?v2 <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Irene_Morales> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
# Query for the commander of the Battle of La Rinconada de Ate
SELECT ?commander WHERE {
  ?battle dbpedia-owl:wikiPageRedirects ?redirect .
  ?redirect rdfs:label ""Battle of La Rinconada de Ate""@en .
  ?battle dbo:commander ?commander .
}

# Query for the war involving Irene Morales and her opposing force
SELECT ?war ?opposingForce WHERE {
  ?person rdfs:label ""Irene Morales""@en ;
          dbo:spouse ?spouse .
  ?spouse dbo:occupation ?occupation .
  FILTER(?occupation = dbpedia:Irene_Morales) .
  ?war dbo:participant ?person ;
       dbo:opposing_force ?opposingForce .
}

# Query for Narciso Campero's birth name and military involvement
SELECT ?birthName ?militaryRole WHERE {
  ?person rdfs:label ""Narciso Campero""@en ;
          foaf:name ?birthName ;
          dbo:militaryService ?service .
  OPTIONAL { ?service dbo:role ?militaryRole }
}
```",6,6,7,3,3,3,3,71,0,0,2,0,0.0,0
617,45,test,Give me the spouse of Laodice IV and child of Antiochus III the Great and parent of the child of the commander in Battle of Panium.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?v1 . <http://dbpedia.org/resource/Laodice_IV> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Antiochus_III_the_Great> . ?result <http://dbpedia.org/ontology/child> ?v1 . <http://dbpedia.org/resource/Battle_of_Panium> <http://dbpedia.org/ontology/commander> ?v0 . },"```sparql
SELECT ?spouse WHERE {
  wd:Q1118844 wdt:P26 ?spouse .
}
```

This query retrieves the spouse of Laodice IV (identified by DBpedia ID `Q1118844`), which should return Antiochus III.",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
161,59,test,"Give me the military force of the force, that is a societal event and a military conflict, of the predecessor of Indalecio Prieto and military force of the force, that is a societal event and an event and a military conflict, of the person decedent at Francoist Spain.",SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Indalecio_Prieto> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v2 . ?result <http://dbpedia.org/ontology/battle> ?v5 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Francoist_Spain> . ?v5 <http://dbpedia.org/ontology/commander> ?v0 . ?v2 <http://dbpedia.org/ontology/commander> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?forceAzaña ?forceCaballero WHERE {
  # Manuel Azaña's involvement in the Spanish Civil War
  dbr:Manuel_Azaña dbo:nationality dbr:Spain ;
                   dbo:occupation dbr:Politician ;
                   dbo:spouse dbr:Victoria_Kaufmann .
  
  dbr:Spanish_Civil_War dbo:participatedIn ?forceAzaña .

  # Francisco Largo Caballero's involvement in the Spanish Civil War
  dbr:Francoist_Spain dbo:placeOfBirth dbr:Madrid ;
                     dbo:deceased dbr:Francoist_Spain .
  
  dbr:Francisco_Largo_Caballero dbo:nationality dbr:Spain ;
                               dbo:occupation dbr:Politician .

  dbr:Spanish_Civil_War dbo:participatedIn ?forceCaballero .
}
```",6,11,7,3,2,3,3,71,0,0,514,0,0.0,0
801,70,test,"Give me the associated musical artist of the writer, that is a musical artist and an artist, of the album, that is a musical work and a work, of What U See Is What U Get and producer of the work, that is a musical work and a song and a work, of the professional, that is a musical artist, in Rapper and professional in the alter ego of The Shadow.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. <http://dbpedia.org/resource/What_U_See_Is_What_U_Get> <http://dbpedia.org/ontology/album> ?v1 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v7 <http://dbpedia.org/property/writer> ?v0 . ?v1 <http://dbpedia.org/property/writer> ?v3 . ?result <http://dbpedia.org/property/occupation> ?v4 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v4 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v7 <http://dbpedia.org/ontology/producer> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v0 <http://dbpedia.org/property/occupation> ""Rapper""@en . }","```sparql
SELECT DISTINCT ?associatedArtist WHERE {
  # Step 1: Find the album ""What U See Is What U Get""
  ?album dbo:title ""What U See Is What U Get"" .
  
  # Step 2: Identify its associated musical artist
  ?album dbo:artist ?artist .

  # Step 3: Determine a work produced by this artist
  ?work dbo:producer ?artist .
  
  # Step 4: Identify the professional with an alter ego ""The Shadow"" who is a rapper
  ?professional foaf:name ?name ;
                dbo:profession dbc:Rapper ;
                dbo:alterEgo ?shadow .
  ?shadow rdfs:label ""The Shadow""@en .

  # Step 5: Find the production work of this professional
  ?work2 dbo:producer ?professional .

  # Ensure it's the same work found in step 3
  FILTER(?work = ?work2)

  # Step 6: Determine the associated musical artist of the writer of that particular work
  ?work dbo:writer ?writer .
  ?writer dbo:artist ?associatedArtist .
}
```",8,16,9,3,3,3,3,71,0,0,8,0,0.0,0
981,20,test,"Give me the birth place of the person born, that is a beauty queen, as the author of Kamikaze Girls and entity in the region of the time zone in Salak, North Sumatra.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/birthName> ?v4 . <http://dbpedia.org/resource/Kamikaze_Girls> <http://dbpedia.org/property/author> ?v4 . ?v2 <http://dbpedia.org/property/timeZone> ?v1 . ?v5 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Salak,_North_Sumatra> <http://dbpedia.org/ontology/timeZone> ?v1 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BeautyQueen>. ?result <http://dbpedia.org/ontology/country> ?v2 . }","```sparql
SELECT ?birthPlace WHERE {
  ?person dbo:author ""Kamikaze Girls""@en .
  ?person dbo:title ""Miss Japan""@en .
  ?person foaf:bornIn ?birthPlace .
}
```",6,7,7,3,2,3,2,20,0,0,19,0,0.0,0
666,16,test,"Give me the figure known as the nickname of England national beach soccer team and player in the manager, that is a sports manager, of 2016–17 Hull City A.F.C. season.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v2 <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/2016–17_Hull_City_A.F.C._season> <http://dbpedia.org/ontology/manager> ?v2 . ?result <http://dbpedia.org/property/nickname> ?v3 . <http://dbpedia.org/resource/England_national_beach_soccer_team> <http://dbpedia.org/property/nickname> ?v3 . },"```sparql
# Query for the nickname of the England national beach soccer team
SELECT ?nickname WHERE {
  dbpedia:England_national_beach_soccer_team rdfs:label ?nickname .
  FILTER (lang(?nickname) = 'en')
}

# Query for the manager of Hull City A.F.C. during the 2016–17 season
SELECT ?manager WHERE {
  dbpedia:Hull_City_A.FC/season_2016-17 dbo:manager ?manager .
}
```",4,5,5,2,2,3,2,20,0,0,2,0,0.0,0
427,22,test,"Give me the reference to Partito Popolare Italiano and party of the person born, that is an office holder and a politician, as Romano Antonio Prodi.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://xmlns.com/foaf/0.1/name> ""Partito Popolare Italiano""@en . ?v1 <http://dbpedia.org/ontology/party> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/property/birthName> ""Romano Antonio Prodi""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?partyURL ?prodiParty
WHERE {
  # Get the URL for Partito Popolare Italiano
  dbr:Partito_Popolare_Italiano dbo:url ?partyURL .

  # Find Romano Prodi's political party affiliation
  OPTIONAL {
    ?prodi a dbo:Politician ;
           foaf:name ""Romano Antonio Prodi"" ;
           dbo:birthPlace ?birthPlace ;
           dbo:officeHolder ?office .
    
    ?prodi dbp:party ?prodiParty .
  }
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
528,40,test,"Give me the war of the military force of the entity, that is a societal event, in Chile and war of Orozimbo Barbosa and force of Narciso Campero.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> ?v2 . ?v1 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Orozimbo_Barbosa> <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Chile> . ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Narciso_Campero> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?warChile ?warTripleAlliance WHERE {
  # Wars involving Chilean military forces
  ?chileForce a dbo:MilitaryUnit ;
              dbo:country dbr:Chile .
  
  ?warChile dbo:participatingMilitaryUnit ?chileForce .

  # War involving Orozimbo Barbosa and Narciso Campero
  ?barbosa a dbo:Person ;
           foaf:name ""Orozimbo Barbosa""@en ;
           dbo:militaryConflict ?warTripleAlliance .
  
  ?campero a dbo:Person ;
           foaf:name ""Narciso Campero""@en ;
           dbo:militaryConflict ?warTripleAlliance .

}
```",5,6,6,3,3,3,3,71,0,0,2,0,0.0,0
328,63,test,"Give me the commander in the force of Ferenc Szálasi and leader of the office, that is a government agency, of Joseph Stalin and awardee of the award of the commander in Volcano and Ryukyu Islands campaign.",SELECT ?result WHERE { <http://dbpedia.org/resource/Joseph_Stalin> <http://dbpedia.org/property/office> ?v2 . ?result <http://dbpedia.org/property/awards> ?v3 . ?v6 <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://dbpedia.org/property/awards> ?v3 . <http://dbpedia.org/resource/Volcano_and_Ryukyu_Islands_campaign> <http://dbpedia.org/ontology/commander> ?v4 . ?v2 <http://dbpedia.org/ontology/leader> ?result . ?v6 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Ferenc_Szálasi> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person dbo:commanderOf dbr:Ferenc_Szálasi .
  ?person dbo:leaderOfOffice dbr:Soviet_government_agency .
  ?person dbo:awardeeOf dbr:Volcano_and_Ryukyu_Islands_campaign_award .
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
659,29,test,"Give me the commander in the war, that is an event and a military conflict, of 1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish) and military force of Napoleonic Wars and commander in German campaign of 1813.",SELECT ?result WHERE { <http://dbpedia.org/resource/German_campaign_of_1813> <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/1st_Light_Cavalry_Lancers_Regiment_of_the_Imperial_Guard_(Polish)> <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Napoleonic_Wars> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  # Find the commander of the 1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish)
  ?regiment dbo:commander ?commander .
  
  FILTER(CONTAINS(LCASE(STR(?regiment)), ""1st light cavalry lancers regiment imperial guard polish""))

  # Ensure this commander was involved in the Napoleonic Wars
  ?commander dbo:militaryConflict dbr:Napoleonic_Wars .

  # Ensure this commander was involved in the German campaign of 1813
  OPTIONAL {
    ?campaign dbo:participatedIn ?commander .
    FILTER(CONTAINS(LCASE(STR(?campaign)), ""german campaign 1813""))
  }
}
```",4,6,5,2,3,3,3,71,0,0,6,0,0.0,0
659,52,test,"Give me the commander in the force of the native, that is an office holder, of Kingdom of Ireland and military force of Napoleonic Wars and commander in the war, that is an event and a military conflict, of 1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish).",SELECT ?result WHERE { <http://dbpedia.org/resource/1st_Light_Cavalry_Lancers_Regiment_of_the_Imperial_Guard_(Polish)> <http://dbpedia.org/ontology/battle> ?v5 . ?v3 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Kingdom_of_Ireland> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Napoleonic_Wars> . ?v5 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://dbpedia.org/ontology/commander> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:MilitaryPerson .
  ?person dbo:officeHolderOf dbr:Kingdom_of_Ireland .
  ?person dbo:militaryConflict dbr:Napoleonic_Wars .
  ?commanderRole dbo:commanderInWar dbr:1st_Light_Cavalry_Lancers_Regiment_of_the_Imperial_Guard_(Polish) .
  FILTER(?person = ?commanderRole)
  
  # Ensure the person is Arthur Wellesley
  ?person rdfs:label ""Arthur Wellesley""@en .
}
```",6,9,7,3,3,3,3,71,0,0,13,0,0.0,0
404,71,test,"Give me the spouse of the person born, that is a royalty, as the birth name of Princess Victoria Louise of Prussia and child of the father of the spouse of Princess Victoria Louise of Prussia and parent of the child, that is a royalty, of the parent, that is a royalty, of Prince George William of Hanover.",SELECT ?result WHERE { <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?v7 . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v4 <http://dbpedia.org/ontology/child> ?v5 . ?result <http://dbpedia.org/ontology/child> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Prince_George_William_of_Hanover> <http://dbpedia.org/ontology/parent> ?v4 . ?v2 <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/ontology/parent> ?v8 . ?v7 <http://dbpedia.org/property/father> ?v8 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
SELECT ?spouse WHERE {
  wd:Q1234567 foaf:name ""Victoria Louise Marie Anna Elisabeth""@en .
  wd:Q1234567 schema:spouse ?spouse .
  ?spouse a dbo:Person ;
          schema:birthName ?birthName .
  FILTER(CONTAINS(LCASE(?birthName), ""princess victoria louise of prussia"")) .

  ?spouse schema:spouse ?husband .
  ?husband foaf:name ""Ernest Augustus, Prince of Hanover""@en .

  ?husband schema:father ?father .
  ?father foaf:name ""George V of the United Kingdom""@en .

  ?father schema:child ?child .
  ?child foaf:name ""Elizabeth II""@en .

  ?child schema:parent ?parent1 ;
         schema:parent ?parent2 .
  ?parent1 foaf:name ""George VI""@en .
  ?parent2 foaf:name ""Elizabeth, Queen Mother""@en .

  ?parent1 schema:spouse ?grandmother .
  ?grandmother foaf:name ""Mary of Teck""@en .

  ?grandmother schema:child ?grandson .
  ?grandson foaf:name ""George VI""@en .

  ?grandson schema:parent ?greatParent1 ;
             schema:parent ?greatParent2 .
  ?greatParent1 foaf:name ""Francis, Duke of Teck""@en .
  ?greatParent2 foaf:name ""Mary Adelaide of Cambridge""@en .
}
```",9,12,10,3,3,3,3,71,0,0,1,0,0.0,0
16,55,test,Give me the person born as the birth name of Gigi Rice and professional in the profession of Satomi Ishihara and spouse of the person born as Ted Martin McGinley.,"SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Satomi_Ishihara> <http://dbpedia.org/property/occupation> ?v5 . ?result <http://dbpedia.org/property/occupation> ?v5 . <http://dbpedia.org/resource/Gigi_Rice> <http://dbpedia.org/property/birthName> ?v2 . ?result <http://dbpedia.org/property/birthName> ?v2 . ?v3 <http://dbpedia.org/property/birthName> ""Ted Martin McGinley""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Find Gigi Rice's birth name
  ?gigi a dbr:Gigi_Rice ;
        dbo:birthName ?birthName .

  # Find Satomi Ishihara's profession
  ?satomi a dbr:Satomi_Ishihara ;
          dbo:occupation ?profession .

  # Find Ted Martin McGinley's spouse
  ?ted a dbr:Ted_McGinley ;
       dbo:spouse ?spouse .

  # Find the person who matches all criteria
  ?person dbo:birthName ?birthName ;
          dbo:occupation ?profession ;
          ?relationship ?spouse .
}
```",6,6,7,2,3,3,3,71,0,0,1,0,0.0,0
404,51,test,"Give me the child of the father of the spouse of Princess Victoria Louise of Prussia and parent of the child, that is a royalty, of Ernest Augustus, Duke of Brunswick.","SELECT ?result WHERE { <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/ontology/child> ?v4 . ?result <http://dbpedia.org/ontology/parent> ?v2 . ?result <http://dbpedia.org/ontology/child> ?v4 . ?v1 <http://dbpedia.org/property/father> ?v2 . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?v1 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
SELECT ?person WHERE {
  # Princess Victoria Louise of Prussia's spouse
  ?spouse rdf:type dbo:Spouse ;
          foaf:name ""Ernest Augustus, Duke of Brunswick""@en .
  
  # Father of Ernest Augustus (Duke of Brunswick)
  ?father dbo:child ?spouse ;
          foaf:name ""George V of Hanover""@en .

  # Child of George V and parent of a royalty related to Ernest Augustus
  ?child dbo:parent ?father ;
         rdf:type dbo:Person .
  
  # Check if the child is a royalty and connected to Ernest Augustus
  OPTIONAL { 
    ?royaltyChild dbo:parent ?spouse ;
                  rdf:type dbo:Royalty .
    
    FILTER(?child = ?royaltyChild)
  }
  
  # Return the person who fits all criteria
  BIND(?father AS ?person)
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
161,20,test,"Give me the military force of the force, that is a societal event and a military conflict, of Francisco Largo Caballero and military force of Rif War.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . ?result <http://dbpedia.org/ontology/battle> ?v2 . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Rif_War> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?force1 ?force2 WHERE {
  # Francisco Largo Caballero's military force during the Spanish Civil War
  OPTIONAL { 
    dbr:Francisco_Largo_Caballero dbo:militaryConflict [
      a dbo:MilitaryConflict ;
      dbo:participatingMilitaryForce ?force1 .
    ] 
  }
  
  # Military force involved in the Rif War
  OPTIONAL {
    dbr:Rif_War dbo:participatingMilitaryForce ?force2 .
  }
}
```",3,5,4,2,2,3,3,71,0,0,34,0,0.0,0
281,58,test,"Give me the war of the profession, that is a military unit, of the professional, that is an office holder and a politician, in New Zealand Army and entity in the birth place, that is a country, of Bob Heffron and war of Beauchamp Seymour, 1st Baron Alcester.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> ?v5 . ?v1 <http://dbpedia.org/property/occupation> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. <http://dbpedia.org/resource/Beauchamp_Seymour,_1st_Baron_Alcester> <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/New_Zealand_Army> . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Bob_Heffron> <http://dbpedia.org/ontology/birthPlace> ?v5 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryUnit ?war ?country
WHERE {
  # Step 1: Find Bob Heffron's birthplace
  dbr:Bob_Heffron dbo:nationality dbr:Australia .
  dbr:Australia rdfs:label ?countryLabel .

  # Step 2: Find the war associated with Beauchamp Seymour, 1st Baron Alcester
  dbr:Beauchamp_Seymour,_1st_Baron_Alcester dbo:militaryConflict ?war .

  # Step 3: Identify a military unit in the New Zealand Army that is also a profession for an office holder and politician
  ?militaryUnit a dbo:MilitaryUnit ;
               dbo:partOf dbr:New_Zealand_Army ;
               rdfs:label ?unitLabel .
  
  FILTER CONTAINS(LCASE(?unitLabel), ""profession"")
}
```",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
838,20,test,"Give me the band member of the band, that is a group, of the reference, that is a group and an organisation, to YU Grupa and band of the band member, that is an artist and a musical artist, of the band, that is a band and a group, of Žika Jelić.","SELECT ?result WHERE { ?v4 <http://xmlns.com/foaf/0.1/name> ""YU Grupa""@en . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v5 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Žika_Jelić> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v5 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. }","```sparql
SELECT DISTINCT ?bandMember WHERE {
  # Step 1: Identify YU Grupa
  ?yuGrupa dbr:YU_Grupa .
  
  # Step 2: Find band members of YU Grupa who are artists or musical artists
  ?yuGrupa dbo:member ?member .
  ?member a (dbo:Artist|dbo:MusicalArtist) .

  # Step 3: Identify bands associated with these members
  ?member dbo:bandMemberOf ?otherBand .
  
  # Step 4: Focus on Žika Jelić and find the band he is part of
  ?otherBand dbr:Žika_Jelić_band .
  
  # Step 5: Find band members of that band who are artists or musical artists
  ?otherBand dbo:member ?bandMember .
  ?bandMember a (dbo:Artist|dbo:MusicalArtist) .
}
```",6,13,7,3,2,3,2,20,0,0,5,0,0.0,0
92,60,test,"Give me the band of the person born as the birth name of Joseph Michael and band member of the reference, that is an artist, to the name of Nevermore (2006 film).",SELECT ?result WHERE { ?v2 <http://xmlns.com/foaf/0.1/name> ?v3 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?result <http://dbpedia.org/ontology/bandMember> ?v1 . <http://dbpedia.org/resource/Joseph_Michael> <http://dbpedia.org/property/birthName> ?v0 . ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Nevermore_(2006_film)> <http://xmlns.com/foaf/0.1/name> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person ?bandName WHERE {
  ?person foaf:name ""Joseph Michael""@en .
  ?person dbo:birthName ?birthName .
  FILTER(?birthName = ""Joseph Michael"")
  
  OPTIONAL { 
    ?person dbo:memberOfBand ?band .
    ?band foaf:name ?bandName .
  }
  
  OPTIONAL {
    ?film dbo:title ""Nevermore (2006 film)""@en ;
          dbo:starring ?actor .
    FILTER(?actor = ?person)
  }
}
```",6,7,7,3,2,3,3,71,0,0,1,0,0.0,0
827,20,test,"Give me the father of the child, that is a royalty, of the spouse, that is a royalty, of Princess Pauline of Saxe-Weimar-Eisenach and child of the child, that is a royalty, of the parent of Charles Alexander, Grand Duke of Saxe-Weimar-Eisenach.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Charles_Alexander,_Grand_Duke_of_Saxe-Weimar-Eisenach> . ?v5 <http://dbpedia.org/property/father> ?v4 . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/parent> ?v1 . ?v4 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Princess_Pauline_of_Saxe-Weimar-Eisenach> . ?v5 <http://dbpedia.org/property/father> ?result . }","```sparql
SELECT ?father WHERE {
  # Step 1: Identify Charles Alexander's parent
  dbpedia:Charles_Alexander,_Grand_Duke_of_Saxe-Weimar-Eisenach dbo:parent ?charlesFrederick .

  # Step 2: Find children of Charles Frederick
  ?charlesFrederick dbo:child ?princessPauline .
  
  # Step 3: Identify Princess Pauline's spouse who is a royalty
  ?princessPauline dbo:spouse ?royalSpouse .
  ?royalSpouse rdf:type dbo:Monarch .

  # Step 4: Find their child who is a royalty
  ?royalSpouse dbo:child ?royaltyChild .
  ?royaltyChild rdf:type dbo:Monarch .

  # Step 5: Determine the father of this royal child
  ?royaltyChild dbo:father ?father .
}
```",6,9,7,3,2,3,2,20,0,0,1,0,0.0,0
54,46,test,Give me the child of the father of the child of Thinkhaya of Pagan and parent of the child of Narapati I of Ava.,SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://dbpedia.org/ontology/child> ?result . ?v2 <http://dbpedia.org/property/father> ?v1 . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Narapati_I_of_Ava> . <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Find Thinkhaya's child
  ?thinkhayaChild dbo:childOf dbr:Thinkhaya_of_Pagan .
  
  # Find Narapati I's child
  ?narapatiIChild dbo:childOf dbr:Narapati_I_of_Ava .

  # The person we are looking for is a grandchild of Thinkhaya and a parent to one of Narapati I's children
  ?person dbo:parentOf ?thinkhayaGrandchild .
  ?thinkhayaGrandchild dbo:childOf ?thinkhayaChild .
  
  ?person dbo:childOf ?narapatiI .
  ?narapatiI dbo:parentOf ?narapatiIChild .
}
```",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
994,71,test,"Give me the associated musical artist of the band member, that is a band and a group and an organisation, of the band, that is an organisation, of Fredrik Thordendal and band member of the person born, that is a musical artist, as the persona of Don Dokken and associated musical artist of the associated musical artist of the reference to Watchtower.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Don_Dokken> <http://xmlns.com/foaf/0.1/givenName> ?v7 . ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v8 <http://dbpedia.org/property/birthName> ?v7 . ?v4 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Fredrik_Thordendal> . ?v1 <http://xmlns.com/foaf/0.1/name> ""Watchtower""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v8 . }","```sparql
SELECT DISTINCT ?finalArtist WHERE {
  # Step 1: Reference to Watchtower
  ?watchtower dbo:musicalArtist ?artist1 .
  
  # Step 2: Associated Musical Artist of Watchtower's Reference
  ?artist1 dbo:associatedMusicalArtist ?artist2 .

  # Step 3: Person Born as Don Dokken's Persona (George Lynch)
  ?dokken foaf:name ""Don Dokken"" ;
          dbo:birthName ?lynch .
  
  # Step 4: Band Member of George Lynch
  ?lynch dbo:bandMember ?bandLynch .

  # Step 5: Fredrik Thordendal and Band (Meshuggah)
  ?thordendal foaf:name ""Fredrik Thordendal"" ;
              dbo:bandMember ?meshuggah .
  
  # Step 6: Meshuggah as an Organisation
  ?meshuggah a dbo:Band ;
             a dbo:Organization .

  # Step 7: Associated Musical Artist of Meshuggah
  ?meshuggah dbo:associatedMusicalArtist ?finalArtist .
}
```",9,14,10,3,3,3,3,71,0,0,1,0,0.0,0
179,20,test,"Give me the person born as the birth name of the child, that is a royalty, of Nakkhatra Mangala and parent of the child of the parent of Vajiralongkorn.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/birthName> ?v2 . ?v5 <http://dbpedia.org/ontology/parent> ?result . ?v4 <http://dbpedia.org/ontology/child> ?v5 . ?v4 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Vajiralongkorn> . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Nakkhatra_Mangala> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?birthName WHERE {
  ?person dbo:parent dbr:Nakkhatra_Mangala ;
          dbo:birthName ?birthName .
  
  OPTIONAL { ?person dbo:spouse ?spouse . }
  
  FILTER EXISTS {
    ?child dbo:parent ?person .
    ?grandChild dbo:parent ?child .
    ?grandGrandChild dbo:parent ?grandChild .
    ?grandGrandChild rdfs:label ""Vajiralongkorn""@en
  }
}
```",6,7,7,3,2,3,2,20,0,0,1,0,0.0,0
547,53,test,Give me the resting place of the awardee of Knight Grand Cross of the Order of St Michael and St George and resting place of the child of the child of William Haliburton and resting place of Simon Cadell.,"SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> ""William Haliburton""@en . <http://dbpedia.org/resource/Simon_Cadell> <http://dbpedia.org/ontology/restingPlace> ?result . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_St_Michael_and_St_George> . ?v3 <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . }","```sparql
# Query for the awardee of Knight Grand Cross of the Order of St Michael and St George
SELECT ?person ?restingPlace WHERE {
  ?person dbo:award dbp:KnightGrandCrossOfTheOrderOfStMichaelAndStGeorge .
  OPTIONAL { ?person dbo:deathPlace ?restingPlace . }
}

UNION

# Query for the child of the child of William Haliburton
SELECT ?grandchild ?restingPlace WHERE {
  ?parent dbo:child dbp:WilliamHaliburton ;
          dbo:child ?grandchild .
  OPTIONAL { ?grandchild dbo:deathPlace ?restingPlace . }
}

UNION

# Query for Simon Cadell
SELECT ?person ?restingPlace WHERE {
  ?person rdfs:label ""Simon Cadell""@en .
  OPTIONAL { ?person dbo:deathPlace ?restingPlace . }
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
617,48,test,"Give me the parent of the child of Antiochus (son of Antiochus III the Great) and child of the child, that is a royalty, of the successor, that is a royalty, of Antiochus II Theos.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> ?v3 . <http://dbpedia.org/resource/Antiochus_II_Theos> <http://dbpedia.org/ontology/successor> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/child> ?v1 . ?result <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/ontology/child> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
SELECT ?parent WHERE {
  ?antiochusIV a dbo:Person ;
               foaf:name ""Antiochus IV Epiphanes""@en .
  ?child1 dbo:childOf ?antiochusIV ;
          foaf:name ""Seleucus V Philometor""@en .
  ?grandchild dbo:childOf ?child1 ;
              foaf:name ""Demetrius I Soter""@en .
  ?successor a dbo:Person ;
             foaf:name ""Antiochus III the Great""@en ;
             dbo:succeededBy ?antiochusIITheos .
  ?parent dbo:fatherOf ?grandchild .
}
```",5,7,6,3,2,3,3,71,0,0,2,0,0.0,0
659,23,test,"Give me the commander in the force of the native, that is an office holder, of Kingdom of Ireland.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/commander> ?v2 . ?v2 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Kingdom_of_Ireland> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?office ?commandRole WHERE {
  ?person a dbo:Person ;
          foaf:name ""Oliver Cromwell""@en .
  
  OPTIONAL { 
    ?person dbo:officeHolder ?office .
    FILTER (CONTAINS(LCASE(STR(?office)), ""kingdom of ireland""))
  }
  
  OPTIONAL {
    ?person dbo:militaryCommanderFor ?commandRole .
    FILTER (CONTAINS(LCASE(STR(?commandRole)), ""ireland"") || CONTAINS(LCASE(STR(?commandRole)), ""native irish""))
  }
}
```",3,4,4,3,1,3,3,71,0,2,269,0.0,0.0,0
161,61,test,"Give me the military force of the force, that is a societal event and a military conflict, of the predecessor of Indalecio Prieto and commander in the force, that is an event, of the figure known as El Director.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v5 . ?v1 <http://xmlns.com/foaf/0.1/nick> ""El Director""@en . ?v3 <http://dbpedia.org/ontology/commander> ?v1 . ?v0 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Indalecio_Prieto> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v5 <http://dbpedia.org/ontology/commander> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce WHERE {
  # Indalecio Prieto's predecessor in a significant role
  dbr:Indalecio_Prieto dbo:predecessor ?predecessor .
  
  # Predecessor associated with a military force that is both a societal event and a conflict
  ?predecessor dbo:militaryConflict ?militaryForce ;
              rdf:type dbo:SocietalEvent .

  # El Director (Manuel Azaña) associated with the same military force
  dbr:Manuel_Aza%C3%B1a rdfs:label ""El Director""@en .
  dbr:Manuel_Aza%C3%B1a dbo:militaryConflict ?militaryForce ;
                        rdf:type dbo:SocietalEvent .

}
```",6,9,7,3,2,3,3,71,0,0,32,0,0.0,0
161,60,test,"Give me the military force of the force, that is a societal event and an event and a military conflict, of the person decedent at Francoist Spain and commander in the force, that is an event, of the figure known as El Director.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> ?v0 . ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/ontology/commander> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Francoist_Spain> . ?v0 <http://xmlns.com/foaf/0.1/nick> ""El Director""@en . }","```sparql
# Step 1: Identify ""El Director"" and his military force
SELECT ?elDirector ?militaryForce WHERE {
  ?elDirector rdfs:label ""El Director""@en .
  ?elDirector dbo:militaryCommanderOf ?militaryForce .
}

# Step 2: Find individuals who died during Francoist Spain and were involved in a military conflict
SELECT DISTINCT ?person ?deathEvent ?militaryConflict WHERE {
  ?person dbo:causeOfDeath ?deathEvent .
  ?deathEvent dbo:date ?date .
  FILTER (?date >= ""1939-04-01""^^xsd:date && ?date <= ""1975-11-20""^^xsd:date) # Francoist Spain period
  ?person dbo:militaryConflict ?militaryConflict .
}

# Step 3: Identify events that are both societal and military conflicts involving these individuals
SELECT DISTINCT ?event WHERE {
  ?event rdf:type dbpedia-owl:Event .
  ?event dbo:socialEvent true .
  ?event dbo:militaryConflict true .
  ?person dbo:event ?event .
  FILTER EXISTS { 
    ?person dbo:causeOfDeath ?deathEvent .
    ?deathEvent dbo:date ?date .
    FILTER (?date >= ""1939-04-01""^^xsd:date && ?date <= ""1975-11-20""^^xsd:date)
  }
}

# Step 4: Extract the military forces related to these individuals
SELECT DISTINCT ?person ?militaryForce WHERE {
  ?person dbo:militaryConflict ?event .
  ?event rdf:type dbpedia-owl:Event .
  ?event dbo:socialEvent true .
  ?event dbo:militaryConflict true .
  ?person dbo:militaryForce ?militaryForce .
}
```",6,10,7,3,2,3,3,71,0,0,34,0,0.0,0
55,23,test,"Give me the band member of the producer, that is a band, of Used to Love Her and band of the reference, that is a band, to Newsted.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://xmlns.com/foaf/0.1/name> ""Newsted""@en . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Used_to_Love_Her> <http://dbpedia.org/ontology/producer> ?v3 . }","```sparql
# Step 1: Find the producer of ""Used to Love Her""
SELECT ?producer WHERE {
  ?song dcterms:title ""Used to Love Her""@en .
  ?song dbo:performer ?artist .
  ?artist dbo:recordLabel ?label .
  ?label dbo:producer ?producer .
}

# Step 2: Check if the producer is part of a band
SELECT DISTINCT ?band WHERE {
  ?producer dbo:member ?band .
}

# Step 3: Identify the reference to Newsted (Jason Newsted)
SELECT ?newstedBand WHERE {
  wd:Q123456 dbo:member ?newsted . # Assuming Q123456 is the DBpedia ID for Jason Newsted
  ?newsted dbo:memberOf ?newstedBand .
}

# Step 4: Find any overlap between the band member(s) of the producer and the band associated with Newsted
SELECT DISTINCT ?commonMember WHERE {
  ?producer dbo:member ?band1 .
  ?newstedBand dbo:member ?commonMember .
}
```

Note: The above SPARQL queries assume that DBpedia has structured data for these entities. You may need to adjust the property paths based on actual DBpedia schema and available data.",4,6,5,2,2,2,3,28,0,0,1,0,0.0,0
659,61,test,"Give me the military force of the force, that is a societal event and an event and a military conflict, of the reference to Rutger Jan Schimmelpenninck and commander in the war, that is an event and a military conflict, of the figure known, that is a military unit and an organisation, as 'Polish Horse'.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/commander> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v5 <http://dbpedia.org/ontology/commander> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/property/nickname> ""'Polish Horse'""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://xmlns.com/foaf/0.1/name> ""Rutger Jan Schimmelpenninck""@en . ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://dbpedia.org/ontology/battle> ?v5 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce WHERE {
  ?event dbo:type dbr:Military_conflict .
  ?event dbo:commander dbr:Rutger_Jan_Schimmelpenninck .
  ?event dbo:participatingUnit dbr:Polish_Horse .
  ?event dbo:militaryForce ?militaryForce .
}
```",6,13,7,3,2,3,3,71,0,0,31,0,0.0,0
328,35,test,"Give me the leader of the office, that is a government agency, of Joseph Stalin and awardee of the award of Bruce Fraser, 1st Baron Fraser of North Cape.","SELECT ?result WHERE { <http://dbpedia.org/resource/Joseph_Stalin> <http://dbpedia.org/property/office> ?v1 . ?v1 <http://dbpedia.org/ontology/leader> ?result . <http://dbpedia.org/resource/Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape> <http://dbpedia.org/property/awards> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?result <http://dbpedia.org/property/awards> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?leader ?award WHERE {
  # Find the government office led by Joseph Stalin
  ?office dbo:head dbr:Joseph_Stalin .
  
  # Find leaders of that office
  ?office dbo:head ?leader .

  # Find awards received by these leaders
  ?leader dbo:awardsReceived ?award .

  # Find awards received by Bruce Fraser, 1st Baron Fraser of North Cape
  dbr:Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape dbo:awardsReceived ?fraserAward .

  # Match the award with one of the leader's awards
  FILTER (?award = ?fraserAward)
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
328,51,test,"Give me the leader of the office, that is a government agency, of the leader, that is an office holder and a politician, of Gustav Jonson and commander in the force of Ferenc Szálasi.",SELECT ?result WHERE { <http://dbpedia.org/resource/Gustav_Jonson> <http://dbpedia.org/property/leader> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Ferenc_Szálasi> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/property/office> ?v2 . ?v4 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://dbpedia.org/ontology/leader> ?result . },"```sparql
# Step 1: Find Gustav Jonson's leader who is an office holder and a politician
SELECT ?leader WHERE {
  ?jonson dbo:positionHeld dbr:Gustav_Jonson .
  ?jonson dbo:reportsTo ?leader .
  ?leader rdf:type dbo:OfficeHolder ;
          dbo:occupation dbr:Politician .
}

# Step 2: Find Ferenc Szálasi's commander in the force
SELECT ?commander WHERE {
  ?szalasi dbo:militaryCommanderOf ?unit .
  ?unit dbo:commandedBy ?commander .
}

# Step 3: Identify the government agency led by Gustav Jonson's leader
SELECT ?agencyLeader ?agency WHERE {
  # Assuming we have identified the leader from step 1 as ?leader
  ?leader dbo:positionHeld ?office .
  ?office dbo:headOf ?agency .
  ?agency rdf:type dbo:GovernmentAgency .
}
```

Note: The above SPARQL queries are structured to be executed sequentially, where the results of one query inform the next. In practice, you would need to execute these queries in sequence and use the results from each step to proceed to the next.",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
92,54,test,"Give me the band of Joseph Michael and band member of the reference, that is an artist, to Nevermore and associated musical artist of the person born, that is an artist, as the actor of Return to Nuke 'Em High Volume 1.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/birthName> ?v0 . ?v3 <http://xmlns.com/foaf/0.1/name> ""Nevermore""@en . <http://dbpedia.org/resource/Return_to_Nuke_'Em_High_Volume_1> <http://dbpedia.org/property/starring> ?v0 . ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Joseph_Michael> . }","```sparql
# Step 1: Find Joseph Michael's Band
SELECT ?band WHERE {
  wd:Q1234567 dbo:musicArtist ?band .
}

# Step 2: Identify band members of the found band who are artists and associated with Nevermore
SELECT DISTINCT ?member WHERE {
  ?band dbo:bandMember ?member .
  ?member rdf:type dbo:MusicalArtist .
  OPTIONAL { ?member dbo:associatedBand wd:Q7890123 } # Assuming Q7890123 is Nevermore's DBpedia ID
}

# Step 3: Find the actor of ""Return to Nuke 'Em High Volume 1"" who is also a musician
SELECT DISTINCT ?actor WHERE {
  wd:Q9876543 dbo:starring ?actor .
  ?actor rdf:type dbo:Actor .
  OPTIONAL { ?actor dbo:musicArtist ?musicBand }
}
```

Note: Replace `wd:Q1234567` with the actual DBpedia ID for Joseph Michael, and `wd:Q7890123` with the DBpedia ID for Nevermore. Similarly, replace `wd:Q9876543` with the DBpedia resource for ""Return to Nuke 'Em High Volume 1.""",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
281,19,test,Give me the war of the awardee of Knight Grand Cross of the Order of the Bath and entity in Colony of New Zealand.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Colony_of_New_Zealand> . ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_the_Bath> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name WHERE {
  ?person a dbo:Person .
  ?person dbo:title ""Knight Grand Cross of the Order of the Bath""@en .
  ?person foaf:name ?name .
  OPTIONAL { 
    ?association dbo:place dbr:New_Zealand_Colony ;
                 dbo:agent ?person .
  }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
391,68,test,"Give me the actor of the claim to fame, that is a work, of the spouse of Sherry Hormann and actor of the movie, that is a movie and a work and a television show, with Roz Ryan and native of the figure known as the nick name of Jackson, Tennessee.","SELECT ?result WHERE { <http://dbpedia.org/resource/Sherry_Hormann> <http://dbpedia.org/ontology/spouse> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://dbpedia.org/property/nickname> ?v5 . ?v7 <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/ontology/birthPlace> ?v4 . <http://dbpedia.org/resource/Jackson,_Tennessee> <http://xmlns.com/foaf/0.1/nick> ?v5 . ?v3 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Roz_Ryan> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v0 <http://dbpedia.org/ontology/knownFor> ?v7 . ?v3 <http://dbpedia.org/property/starring> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  # Step 1: Identify Sherry Hormann's spouse
  ?spouse dbo:spouse dbr:Sherry_Hormann .
  
  # Step 2: Find the claim to fame of Sherry Hormann's spouse
  ?spouse dbo:claimToFame ?work .

  # Step 3: Identify Roz Ryan's movie and find an actor from Jackson, Tennessee
  ?movie dbo:actor dbr:Roz_Ryan ;
         dbo:actor ?actorFromJackson .
  
  ?actorFromJackson dbo:nativePlace dbr:Jackson,_Tennessee .

  # Step 4: Ensure the actor is the same as Sherry Hormann's spouse
  FILTER (?spouse = ?actorFromJackson)
}
```",8,12,9,3,3,3,3,71,0,0,1,0,0.0,0
404,70,test,"Give me the parent of the child, that is a royalty, of the parent, that is a royalty, of Prince George William of Hanover and spouse of the person born, that is a royalty, as Princess Victoria Louise of Prussia and child of the father of the spouse of Princess Victoria Louise of Prussia.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v3 . ?v4 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/child> ?v7 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Prince_George_William_of_Hanover> <http://dbpedia.org/ontology/parent> ?v0 . ?v1 <http://dbpedia.org/property/father> ?v3 . ?v4 <http://dbpedia.org/property/birthName> ""Princess Victoria Louise of Prussia""@en . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?v1 . ?v0 <http://dbpedia.org/ontology/child> ?v7 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
SELECT ?parentOfChild WHERE {
  # Step 1: Prince George William of Hanover
  ?princeGeorgeWilliam dbr:Prince_George_William_of_Hanover .
  
  # Step 2: Parent who is a royalty
  ?parent dbp:child ?princeGeorgeWilliam ;
         rdf:type dbo:Monarch .

  # Step 3: Spouse of Princess Victoria Louise of Prussia
  ?princessVictoriaLouise dbr:Princess_Victoria_Louise_of_Prussia .
  ?spouse dbp:spouse ?princessVictoriaLouise ;
          rdf:type dbo:Monarch .

  # Step 4: Child of this spouse's father
  ?fatherOfSpouse dbp:child ?spouse .
  ?child dbp:parent ?fatherOfSpouse .

  # Step 5: Parent of this child who is a royalty
  ?parentOfChild dbp:child ?child ;
                 rdf:type dbo:Monarch .
}
```",8,11,9,3,3,3,3,71,0,0,1,0,0.0,0
659,45,test,"Give me the military force of the force, that is a societal event and an event and a military conflict, of the reference to Rutger Jan Schimmelpenninck and commander in Battle of Leipzig and commander in German campaign of 1813.","SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""Rutger Jan Schimmelpenninck""@en . ?result <http://dbpedia.org/ontology/battle> ?v1 . <http://dbpedia.org/resource/Battle_of_Leipzig> <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/German_campaign_of_1813> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/ontology/commander> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce WHERE {
  # Rutger Jan Schimmelpenninck's involvement in military forces
  ?schimmelpenninck dbo:occupation dbr:Military_person .
  ?schimmelpenninck foaf:name ""Rutger Jan Schimmelpenninck""@en .

  # Battle of Leipzig and German Campaign of 1813
  ?battle1 dbo:participatedInMilitaryConflict dbr:Battle_of_Leipzig .
  ?campaign dbo:participatedInMilitaryConflict dbr:German_campaign_of_1813 .

  # Military force associated with Schimmelpenninck
  ?schimmelpenninck dbo:militaryForce ?militaryForce .

  # Ensure the military force is linked to both events
  ?militaryForce dbo:participatedInMilitaryConflict ?battle1 .
  ?militaryForce dbo:participatedInMilitaryConflict ?campaign .
}
```",5,8,6,3,3,3,3,71,0,0,6,0,0.0,0
161,47,test,"Give me the military force of the force, that is a societal event and an event and a military conflict, of Francisco Franco and military force of the force, that is a societal event and a military conflict, of the predecessor of Indalecio Prieto.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/commander> ?v0 . ?result <http://dbpedia.org/ontology/battle> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v0 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Indalecio_Prieto> . ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Franco> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?conflict WHERE {
  # For Francisco Franco
  OPTIONAL { 
    dbr:Francisco_Franco dbo:militaryConflict ?conflict .
    FILTER EXISTS { ?conflict a dbo:SocietalEvent . }
    FILTER EXISTS { ?conflict a dbo:MilitaryConflict . }
  }

  # For Manuel Azaña (predecessor of Indalecio Prieto)
  OPTIONAL {
    dbr:Manuel_Azaña dbo:militaryConflict ?conflict .
    FILTER EXISTS { ?conflict a dbo:SocietalEvent . }
    FILTER EXISTS { ?conflict a dbo:MilitaryConflict . }
  }

  # Ensure the same conflict is returned for both
  FILTER (?conflict = ?conflict)
}
```",5,10,6,3,2,3,3,71,0,0,514,0,0.0,0
232,45,test,"Give me the native of the residence, that is a settlement and British, of the native, that is a politician and an office holder, of France and child of Jon Pertwee and actor of Dog Soldiers (film).",SELECT ?result WHERE { <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/ontology/child> ?result . ?v0 <http://dbpedia.org/property/residence> ?v1 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/France> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Dog_Soldiers_(film)> <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?residenceNative WHERE {
  ?person dbo:nationality dbr:Francois; # Assuming the person is French, but we need to find Marina Wheeler specifically.
           dbo:parent dbr:Jon_Pertwee;
           dbo:occupation dbr:Politician;
           dbo:officeHolder true;
           dbo:film dbr:Dog_Soldiers_(2002_film).
  ?person dbo:residence ?residence.
  ?residence dbo:settlementType dbr:Settlement; # Ensures the residence is a settlement
             dbo:native ?residenceNative.
  ?residenceNative dbo:country dbr:United_Kingdom. # Ensures it's British
}
```",5,9,6,3,3,3,3,71,0,0,1,0,0.0,0
617,55,test,"Give me the parent of the child of Antiochus (son of Antiochus III the Great) and spouse of the child of Antiochus III the Great and child of the child, that is a royalty, of Seleucus II Callinicus.",SELECT ?result WHERE { <http://dbpedia.org/resource/Antiochus_III_the_Great> <http://dbpedia.org/ontology/child> ?v5 . ?result <http://dbpedia.org/ontology/child> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://dbpedia.org/ontology/spouse> ?result . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seleucus_II_Callinicus> . <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/property/father> ?v3 . },"```sparql
SELECT ?parent WHERE {
  wd:Q1116 wdt:P26 ?spouse .
  ?spouse wdt:P22 wd:Q1116 .
  ?spouse wdt:P25 ?parent .
}
```",6,7,7,2,3,3,3,71,0,0,2,0,0.0,0
391,43,test,"Give me the actor of the claim to fame, that is a work, of the spouse of Sherry Hormann and native of Compton, California and actor of All About the Andersons.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://dbpedia.org/ontology/knownFor> ?v4 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Compton,_California> . <http://dbpedia.org/resource/Sherry_Hormann> <http://dbpedia.org/ontology/spouse> ?v0 . <http://dbpedia.org/resource/All_About_the_Andersons> <http://dbpedia.org/property/starring> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. }","```sparql
# Step 1: Find Sherry Hormann's spouse
SELECT ?spouse WHERE {
  ?person dbo:spouse dbpedia:Sherry_Hormann.
  ?person foaf:name ?spouseName.
}

# Step 2: Identify a notable work of the spouse
SELECT DISTINCT ?work WHERE {
  ?spouse dbo:notableWork ?work.
}

# Step 3: Find an actor from Compton, California who acted in ""All About the Andersons""
SELECT DISTINCT ?actor WHERE {
  ?actor dbo:nationality dbr:United_States.
  ?actor dbo:birthPlace dbr:Compton,_California.
  ?actor dbo:film dbpedia:All_About_the_Andersons.
}

# Step 4: Determine which actor is associated with the identified work
SELECT DISTINCT ?actor WHERE {
  ?work dbo:starring ?actor.
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
184,71,test,"Give me the parent of the child of the parent of Archduchess Margaret of Austria (born 1925) and parent of the native of the landmark at elevation, that is a settlement, of 96.0 and child of the child of the parent, that is a royalty, of Archduke Ladislaus Philipp of Austria.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v2 . ?v7 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Margaret_of_Austria_(born_1925)> . ?v1 <http://dbpedia.org/ontology/elevation> ""96.0""^^<http://www.w3.org/2001/XMLSchema#double> . ?result <http://dbpedia.org/ontology/child> ?v8 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Archduke_Ladislaus_Philipp_of_Austria> <http://dbpedia.org/ontology/parent> ?v4 . ?result <http://dbpedia.org/property/father> ?v5 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v5 <http://dbpedia.org/property/father> ?v4 . ?v8 <http://dbpedia.org/property/father> ?v7 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parentMargaret ?nativeLandmark ?grandChildLadislaus ?commonParent WHERE {
  # Archduchess Margaret of Austria (born 1925)
  ?margaret a dbo:Person ;
            foaf:name ""Archduchess Margaret of Austria""@en ;
            dbo:birthDate ?birthDate .
  FILTER(YEAR(?birthDate) = 1925)

  # Parent of Margaret
  ?parentMargaret dbo:child ?margaret .

  # Child of the parent of Margaret
  ?childParentMargaret dbo:child ?parentMargaret .

  # Landmark at elevation 96.0 that is a settlement
  ?landmark dbo:elevationAboveSeaLevel ""96.0""^^xsd:float ;
            a dbo:Settlement .
  
  # Native of the landmark
  ?nativeLandmark dbo:nativePlace ?landmark .

  # Parent of the native
  ?parentNative dbo:child ?nativeLandmark .

  # Archduke Ladislaus Philipp of Austria
  ?ladislaus a dbo:Person ;
             foaf:name ""Archduke Ladislaus Philipp of Austria""@en .
  
  # Royal parent of Ladislaus
  ?royalParent dbo:child ?ladislaus ;
               a dbo:Royalty .

  # Child of the child of the royal parent
  ?grandChildLadislaus dbo:parent ?ladislaus .

  # Parent of both individuals identified in steps 2 and 6
  ?commonParent dbo:child ?childParentMargaret, ?grandChildLadislaus .
}
```",9,11,10,3,3,3,3,71,0,0,1,0,0.0,0
617,18,test,"Give me the parent of the father, that is a royalty, of Richeza of Poland, Queen of Hungary and child of the child, that is a royalty, of the parent of Mlada (abbess).","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/parent> ?v1 . ?v2 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Richeza_of_Poland,_Queen_of_Hungary> <http://dbpedia.org/property/father> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Mlada_(abbess)> . ?result <http://dbpedia.org/ontology/child> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?parentOfRichezasFather WHERE {
  # Step 1: Find Richeza of Poland, Queen of Hungary's father who is a royalty
  ?richeza dbo:father ?richezasFather .
  FILTER (STRSTARTS(STR(?richezasFather), ""http://dbpedia.org/resource/"") && 
          EXISTS { ?richezasFather dbo:occupation dbp:Monarch } )

  # Step 2: Find the parent of Richeza's father who is a royalty
  ?richezasFather dbo:fatherOrMother ?parentOfRichezasFather .
  FILTER (EXISTS { ?parentOfRichezasFather dbo:occupation dbp:Monarch })

  # Step 3: Identify Mlada (abbess)'s parent who is a royalty
  ?mlada dbo:motherOrFather ?mldasParent .
  FILTER (STRSTARTS(STR(?mlada), ""http://dbpedia.org/resource/Mlada_(abbess)"") &&
          EXISTS { ?mldasParent dbo:occupation dbp:Monarch })

  # Step 4: Find the child of Mlada's parent who is a royalty
  ?mldasParent dbo:child ?childOfMldasParent .
  FILTER (EXISTS { ?childOfMldasParent dbo:occupation dbp:Monarch })

  # Step 5: Find the child of the child from step 4 who is a royalty
  ?childOfMldasParent dbo:child ?grandChildOfMldasParent .
  FILTER (EXISTS { ?grandChildOfMldasParent dbo:occupation dbp:Monarch })

  # Final Step: Ensure both results are the same person
  VALUES ?commonPerson { ?parentOfRichezasFather ?grandChildOfMldasParent }
}
```",5,7,6,3,2,3,2,20,0,0,1,0,0.0,0
281,47,test,"Give me the entity in the birth place, that is a country, of the leader, that is a politician, of 1962 New South Wales state election and war of the awardee of Knight Grand Cross of the Order of the Bath.",SELECT ?result WHERE { <http://dbpedia.org/resource/1962_New_South_Wales_state_election> <http://dbpedia.org/property/leader> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/place> ?v4 . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/ontology/birthPlace> ?v4 . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_the_Bath> . },"```sparql
# Step 1: Find the leader of the 1962 New South Wales state election
SELECT ?leader WHERE {
  ?election dbo:year ""1962"" ;
            dbo:stateOrTerritory dbr_New_South_Wales ;
            dbo:winner ?party .
  ?party dbo:leader ?leader .
}

# Step 2: Find the birthplace of this leader and ensure it is a country
SELECT DISTINCT ?birthPlace WHERE {
  VALUES ?leader { <INSERT_LEADER_URI_HERE> }
  ?leader dbo:birthPlace ?birthPlace .
  ?birthPlace rdf:type dbr:Country .
}

# Step 3: Find the awardee of Knight Grand Cross of the Order of the Bath
SELECT ?awardee WHERE {
  ?awardee dbo:honoraryTitle ""Knight Grand Cross of the Order of the Bath"" .
}

# Step 4: Determine the war associated with this awardee
SELECT DISTINCT ?war WHERE {
  VALUES ?awardee { <INSERT_AWARDEE_URI_HERE> }
  ?awardee dbo:participatedInWar ?war .
}

# Step 5: Find an entity in the birthplace that is a country
SELECT DISTINCT ?entity WHERE {
  VALUES ?birthPlace { <INSERT_BIRTH_PLACE_URI_HERE> }
  ?entity dbo:country ?birthPlace .
  ?entity rdf:type dbr:Country .
}
```

Note: Replace `<INSERT_LEADER_URI_HERE>`, `<INSERT_AWARDEE_URI_HERE>`, and `<INSERT_BIRTH_PLACE_URI_HERE>` with the actual URIs obtained from previous query results.",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
314,27,test,"Give me the person deceased at Madrid and awardee of the award of Sergei Makovetsky and commander in the profession, that is an event and a societal event, of Lisa Gavrić.",SELECT ?result WHERE { <http://dbpedia.org/resource/Sergei_Makovetsky> <http://dbpedia.org/property/awards> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/property/awards> ?v3 . ?result <http://dbpedia.org/ontology/restingPlace> <http://dbpedia.org/resource/Madrid> . <http://dbpedia.org/resource/Lisa_Gavrić> <http://dbpedia.org/property/occupation> ?v0 . ?v0 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?deathDate ?award ?event ?societalEvent WHERE {
  ?person dbo:deathPlace dbr:Madrid .
  ?person dbo:awardsReceived ?award .
  FILTER(CONTAINS(LCASE(str(?award)), ""sergei makovetsky"")) .
  
  OPTIONAL { ?person dbo:occupation ?occupation . FILTER(CONTAINS(LCASE(str(?occupation)), ""commander"")) }
  
  OPTIONAL { ?person dbo:notableEvent ?event }
  OPTIONAL { ?person dbo:societalImpact ?societalEvent }

  # Assuming Lisa Gavrić is a DBpedia resource, we look for connections
  OPTIONAL { ?person dbo:colleague dbr:Lisa_Gavrić . }
  
  FILTER(?deathDate != """")
}
ORDER BY ?person
LIMIT 10
```",5,7,6,2,3,2,3,28,0,0,1,0,0.0,0
996,16,test,Give me the entity in the award of Ekrem Akurgal and force of the awardee of 1778.0.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> ""1778.0""^^<http://www.w3.org/2001/XMLSchema#double> . <http://dbpedia.org/resource/Ekrem_Akurgal> <http://dbpedia.org/property/awards> ?v3 . ?result <http://dbpedia.org/ontology/commander> ?v2 . ?result <http://dbpedia.org/ontology/place> ?v3 . }","```sparql
SELECT ?awardee ?force WHERE {
  # Find the award associated with Ekrem Akurgal
  ?ekremAkurgal dbo:award ?award .
  FILTER (str(?ekremAkurgal) = ""Ekrem_Akurgal"") .

  # Use this award to find all awardees and their professions
  ?recipient dbo:award ?award ;
             foaf:name ?awardee ;
             dbo:occupation ?force .
  
  # Filter by the year 1778
  OPTIONAL { ?recipient dbo:dateOfBirth ?dob . }
  FILTER (YEAR(?dob) = 1778)
}
```",4,4,5,2,2,3,2,20,0,0,4,0,0.0,0
701,66,test,"Give me the spouse of the father of the commander, that is a royalty, in Battle of Perire and parent of the child of Ramesses II and parent of the child of Nefertari.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v6 . ?v6 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ramesses_II> . <http://dbpedia.org/resource/Nefertari> <http://dbpedia.org/ontology/child> ?v3 . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v1 <http://dbpedia.org/property/father> ?v2 . <http://dbpedia.org/resource/Battle_of_Perire> <http://dbpedia.org/ontology/commander> ?v1 . ?v3 <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?spouse WHERE {
  # Find the commander in Battle of Perire
  ?battle dbo:event = ""Battle of Perire"" .
  ?commander dbo:commanderOf ?battle .

  # Identify the father of this commander
  ?father dbo:child ?commander .

  # Determine the spouse of this father, ensuring they are royalty
  ?spouse dbo:spouse ?father ;
          a dbo:Monarch ;  # Assuming 'dbo:Monarch' is used for royalty

  # Ensure the spouse is a parent of a child of Ramesses II and Nefertari
  ?child1 dbp:parent ?spouse ;
          dbp:parent <http://dbpedia.org/resource/Ramesses_II> .
  
  ?child2 dbp:parent ?spouse ;
          dbp:parent <http://dbpedia.org/resource/Nefertari> .
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
378,61,test,"Give me the claim to fame of the commander in the war, that is a military conflict and a societal event and an event, of Thomas Trigge and war of the commander in the reference, that is a military conflict, to Peninsular War.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/ontology/commander> ?v5 . ?v1 <http://dbpedia.org/ontology/commander> ?v3 . ?v3 <http://dbpedia.org/ontology/knownFor> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Thomas_Trigge> <http://dbpedia.org/ontology/battle> ?v1 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Peninsular War""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v5 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war ?claimToFame WHERE {
  ?trigge a dbo:MilitaryPerson ;
          foaf:name ""Thomas Trigge"" .
  
  ?trigge dbo:militaryCommanderOf ?command ;
          dbo:claimToFame ?claimToFame .

  OPTIONAL { ?command dbo:reference dbr:Peninsular_War . }

  ?war a dbo:MilitaryConflict ;
       dbo:participatedIn ?command .

  FILTER EXISTS { ?trigge dbo:militaryCommanderOf ?command }
}
```",6,10,7,3,2,3,3,71,0,0,2,0,0.0,0
767,52,test,"Give me the alma mater of the administration of George K. Nash and reference to  and entity in the administration, that is a settlement, of the writer of Where It's At (Dustin Lynch album).","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/leaderParty> ?v3 . ?v5 <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://xmlns.com/foaf/0.1/name> """"@en . <http://dbpedia.org/resource/Where_It's_At_(Dustin_Lynch_album)> <http://dbpedia.org/property/writer> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/state> ?v2 . ?v5 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/George_K._Nash> . }","```sparql
# Query to find George K. Nash's alma mater
SELECT ?almaMater WHERE {
  ?nash dbo:almaMater ?almaMater .
  FILTER (str(?nash) = ""George_K._Nash"")
}

# Query to find an entity in his administration that is a settlement
SELECT DISTINCT ?settlement WHERE {
  ?nash dbo:positionHeld ?administration .
  ?administration dbo:location ?settlement .
  FILTER (isBlank(?settlement) || rdf:type/schema:Place)
  FILTER (str(?nash) = ""George_K._Nash"")
}

# Query to find the writer of ""Where It's At"" by Dustin Lynch
SELECT ?writer WHERE {
  ?song dbo:lyricsBy ?writer .
  ?song rdfs:label ?title .
  FILTER (CONTAINS(LCASE(str(?title)), ""where it's at""))
  FILTER (CONTAINS(LCASE(str(?song)), ""dustin lynch""))
}

# Query to find an entity in the writer's administration that is a settlement
SELECT DISTINCT ?settlement WHERE {
  ?writer dbo:positionHeld ?administration .
  ?administration dbo:location ?settlement .
  FILTER (isBlank(?settlement) || rdf:type/schema:Place)
  ?song dbo:lyricsBy ?writer .
  ?song rdfs:label ?title .
  FILTER (CONTAINS(LCASE(str(?title)), ""where it's at""))
  FILTER (CONTAINS(LCASE(str(?song)), ""dustin lynch""))
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
528,70,test,Give me the war of the commander in the work of --01-09 and force of the person born as the birth name of Narciso Campero and war of the military force of Battle of Pisagua.,"SELECT ?result WHERE { ?v7 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Narciso_Campero> <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/ontology/commander> ?v7 . ?result <http://dbpedia.org/ontology/commander> ?v3 . ?v4 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Pisagua> . ?v4 <http://dbpedia.org/ontology/battle> ?result . ?v3 <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/property/author> ""--01-09""^^<http://www.w3.org/2001/XMLSchema#gMonthDay> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?work ?commander ?birthName ?militaryForce ?war
WHERE {
  # Find work associated with the date 2009-01-09
  ?work dbo:date ""2009-01-09""^^xsd:date .
  
  # Find the commander involved in that work
  ?work dbo:director ?commander .

  # Find Narciso Campero's birth name and military force
  dbr:Narciso_Campero dbo:birthName ?birthName ;
                      dbo:militaryForce ?militaryForce .

  # Find the war involving the Battle of Pisagua
  dbr:Battle_of_Pisagua dbo:partOfWar ?war .
}
```",8,8,9,3,3,3,3,71,0,0,2,0,0.0,0
404,48,test,"Give me the spouse of the person born, that is a royalty, as the birth name of Princess Victoria Louise of Prussia and child of the father of Ernest Augustus, Duke of Brunswick.","SELECT ?result WHERE { <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/property/father> ?v1 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/property/birthName> ?v3 . ?result <http://dbpedia.org/ontology/parent> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/birthName> ?v3 . }","```sparql
SELECT ?spouse WHERE {
  ?person dbo:birthName ""Victoria Louise Margaret Agnes""@en .
  ?person rdf:type dbo:Monarch .
  ?person dbo:spouse ?spouse .
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
617,38,test,Give me the spouse of the child of Antiochus III the Great and parent of the child of Antiochus (son of Antiochus III the Great).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v2 . <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/child> ?v2 . <http://dbpedia.org/resource/Antiochus_III_the_Great> <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
SELECT ?spouse WHERE {
  wd:Q1116 wdt:P26 ?child . # Antiochus III the Great's children
  ?child wdt:P26 wd:Q1116 . # Laodice III (Antiochus IV Epiphanes' mother)
  ?child wdt:P26 ?spouse .
}
```",4,4,5,2,2,3,3,71,0,0,2,0,0.0,0
528,63,test,"Give me the force of the person born as Narciso Campero Leyes and war of the military force of the entity, that is a societal event, in Chile and war of the commander in Battle of La Rinconada de Ate.","SELECT ?result WHERE { <http://dbpedia.org/resource/Battle_of_La_Rinconada_de_Ate> <http://dbpedia.org/ontology/commander> ?v6 . ?v2 <http://dbpedia.org/property/birthName> ""Narciso Campero Leyes""@en . ?v3 <http://dbpedia.org/ontology/battle> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/commander> ?v2 . ?v4 <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Chile> . ?v6 <http://dbpedia.org/ontology/battle> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?narciso ?force ?chileWar ?battleCommander WHERE {
  # Find Narciso Campero Leyes and any military force associated with him
  ?narciso a dbo:Person ;
           foaf:name ""Narciso Campero Leyes"" ;
           dbo:militaryForce ?force .

  # Find wars involving Chile as societal events
  ?chileWar a dbo:SocietalEvent ;
            dbo:location dbr:Chile ;
            dbo:type dbr:War .

  # Find the Battle of La Rinconada de Ate and its commander
  ?battle a dbo:MilitaryConflict ;
          foaf:name ""Battle of La Rinconada de Ate"" .
  ?battle dbo:commander ?battleCommander .
}
```",7,8,8,3,3,3,3,71,0,0,2,0,0.0,0
712,18,test,"Give me the resting place of the awardee of Hero of the Soviet Union and capital of the country of the military force, that is an organisation and a military unit, of Vyoshenskaya Uprising.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/capital> ?result . ?v1 <http://dbpedia.org/ontology/country> ?v2 . ?v3 <http://dbpedia.org/ontology/restingPlace> ?result . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Hero_of_the_Soviet_Union> . ?v1 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Vyoshenskaya_Uprising> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?hero ?restingPlace WHERE {
  ?hero dbo:award [ a dbo:Award ; rdfs:label ""Hero of the Soviet Union""@en ] .
  ?hero dbo:militaryService [ dbo:organization dbr:Red_Army ] .
  OPTIONAL { ?hero dbo:placeOfBurial ?restingPlace . }
}
```",5,7,6,3,2,3,2,20,0,0,1,0,0.0,0
281,42,test,"Give me the war of the awardee of Knight Grand Cross of the Order of the Bath and entity in Colony of New Zealand and war of the profession, that is a military unit, of Heather Roy.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_the_Bath> . <http://dbpedia.org/resource/Heather_Roy> <http://dbpedia.org/property/occupation> ?v1 . ?v1 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Colony_of_New_Zealand> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?awardee ?war1 ?war2 WHERE {
  # Find individuals awarded Knight Grand Cross of the Order of the Bath
  ?awardee dbo:award [ 
    a dbo:Award ; 
    dbp:name ""Knight Grand Cross of the Order of the Bath"" .
  ] .

  # Filter those with connections to Colony of New Zealand in wars
  ?awardee dbo:memberOf ?militaryUnit ;
          dbo:placeOfBirth ?location .
  OPTIONAL { ?militaryUnit dbo:country dbr:New_Zealand_Colony . }
  
  ?war1 dbo:participatingMilitaryUnit ?militaryUnit .

  # Identify Heather Roy's military profession or unit
  ?heatherRoy a dbo:Person ;
              foaf:name ""Heather Roy"" .
  OPTIONAL { ?heatherRoy dbo:militaryService ?militaryService . }
  
  ?war2 dbo:participatingMilitaryUnit ?militaryService .

  # Find wars involving both entities
  FILTER(?war1 != ?war2)
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
360,27,test,"Give me the writer of The Roaring Silence and native of the death place, that is a settlement, of Winnie Madikizela-Mandela and reference to the author of Blinded by the Light.",SELECT ?result WHERE { <http://dbpedia.org/resource/Blinded_by_the_Light> <http://dbpedia.org/property/author> ?v0 . ?result <http://xmlns.com/foaf/0.1/name> ?v0 . <http://dbpedia.org/resource/The_Roaring_Silence> <http://dbpedia.org/property/writer> ?result . <http://dbpedia.org/resource/Winnie_Madikizela-Mandela> <http://dbpedia.org/ontology/deathPlace> ?v3 . ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
# Query for the writer of ""The Roaring Silence""
SELECT ?writer WHERE {
  ?album dcterms:title ""The Roaring Silence""@en .
  ?album dbo:artist ?person .
  ?person foaf:name ?writer .
}

UNION

# Query for the native place (settlement) of Winnie Madikizela-Mandela's death
SELECT ?deathPlace WHERE {
  wd:Q1056 dbo:placeOfBirth ?birthPlace .
  ?deathEvent dbo:agent wd:Q1056 ;
              dbo:location ?deathPlace .
  ?deathPlace a dbo:Settlement .
}

UNION

# Query for the author of ""Blinded by the Light""
SELECT ?author WHERE {
  ?film dbo:title ""Blinded by the Light""@en .
  ?film dbo:writer ?person .
  ?person foaf:name ?author .
}
```",5,6,6,2,3,2,3,28,0,0,1,0,0.0,0
701,69,test,"Give me the parent of the child of the spouse of Amun-her-khepeshef and parent of the child of Ramesses II and spouse of the father of the commander, that is a royalty, in Battle of Perire.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v7 . <http://dbpedia.org/resource/Battle_of_Perire> <http://dbpedia.org/ontology/commander> ?v1 . ?v7 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ramesses_II> . ?v4 <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Amun-her-khepeshef> <http://dbpedia.org/ontology/spouse> ?v4 . ?v1 <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?parent WHERE {
  # Step 1: Identify Amun-her-khepeshef's spouse
  ?amunherkhepeshef a dbo:Person ;
                   foaf:name ""Amun-her-khepeshef""@en .
  ?spouse dbp:spouseOf ?amunherkhepeshef .

  # Step 2: Find the child of Amun-her-khepeshef's spouse
  ?child dbo:parent ?spouse .

  # Step 3: Identify Ramesses II and one of his children
  ?ramessesII a dbo:Person ;
              foaf:name ""Ramesses II""@en .
  ?ramessessChild dbo:parent ?ramessesII .

  # Step 4: Determine the parent of this child (should be Ramesses II)
  BIND(?ramessesII AS ?parentOfChild)

  # Step 5: Find the commander in the Battle of Perire
  ?battle a dbo:MilitaryConflict ;
          dbp:name ""Battle of Perire""@en .
  ?commander dbo:commandedBy ?battle .

  # Step 6: Identify the father of the commander and his spouse
  ?father dbo:child ?commander .
  ?spouseOfFather dbp:spouseOf ?father .

  # Step 7: Determine royalty among these connections
  FILTER((?parentOfChild = ?spouseOfFather) && (dbo:royalty ?parentOfChild))

  # Step 8: Find the parent of the child from step 2 and spouse from step 6
  ?parent dbo:child ?child .
  FILTER(?parent = ?spouseOfFather)
}
```",8,9,9,3,3,3,3,71,0,0,1,0,0.0,0
528,50,test,Give me the war of the commander in the work of --01-09 and force of the person born as Narciso Campero Leyes.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> ?v3 . ?v0 <http://dbpedia.org/property/author> ""--01-09""^^<http://www.w3.org/2001/XMLSchema#gMonthDay> . ?v0 <http://dbpedia.org/ontology/commander> ?v4 . ?v4 <http://dbpedia.org/ontology/battle> ?result . ?v3 <http://dbpedia.org/property/birthName> ""Narciso Campero Leyes""@en . }","```sparql
# Step 1: Find an event on January 9th involving a commander
SELECT ?event ?commander WHERE {
  ?event dbo:date ""2009-01-09""^^xsd:date .
  ?event dbo:commander ?commander .
}

# Step 2: Identify the war associated with the commander found in step 1
SELECT DISTINCT ?war WHERE {
  ?commander dbo:participatedInWar ?war .
}

# Step 3: Find information about Narciso Campero Leyes
SELECT ?person ?birthDate ?role WHERE {
  ?person foaf:name ""Narciso Campero Leyes"" .
  ?person dbo:birthday ?birthDate .
  OPTIONAL { ?person dbo:positionHeld ?role . }
}
```",5,5,6,3,2,3,3,71,0,0,2,0,0.0,0
16,51,test,Give me the professional in the profession of Satomi Ishihara and person born as the birth name of the alumnus of Ohio State University.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Ohio_State_University> . ?result <http://dbpedia.org/property/birthName> ?v2 . ?result <http://dbpedia.org/property/occupation> ?v4 . ?v1 <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Satomi_Ishihara> <http://dbpedia.org/property/occupation> ?v4 . },"```sparql
# Step 1: Find Satomi Ishihara's profession
SELECT ?profession WHERE {
    dbpedia:Satomi_Ishihara dbo:occupation ?profession .
}

# Step 2: Find an alumnus of Ohio State University and their birth name
SELECT ?alumnus ?birthName WHERE {
    ?alumnus dbo:almaMater dbpedia:Ohio_State_University ;
             foaf:name ?name .
    OPTIONAL { ?alumnus foaf:givenName ?givenName . }
    OPTIONAL { ?alumnus foaf:familyName ?familyName . }
    BIND(CONCAT(?givenName, "" "", ?familyName) AS ?birthName)
}

# Step 3: Find a professional in the same profession as Satomi Ishihara with the identified birth name
SELECT DISTINCT ?professional WHERE {
    dbpedia:Satomi_Ishihara dbo:occupation ?profession .
    ?alumnus foaf:name ?name .
    OPTIONAL { ?alumnus foaf:givenName ?givenName . }
    OPTIONAL { ?alumnus foaf:familyName ?familyName . }
    BIND(CONCAT(?givenName, "" "", ?familyName) AS ?birthName)
    ?professional dbo:occupation ?profession ;
                 foaf:name ?name .
}
```",5,5,6,3,2,3,3,71,0,0,3,0,0.0,0
378,63,test,Give me the war of the person born as the birth name of Carl Pontus Gahn and claim to fame of the commander in Great Siege of Gibraltar and war of the commander in Peninsular War.,SELECT ?result WHERE { <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/property/birthName> ?v4 . <http://dbpedia.org/resource/Peninsular_War> <http://dbpedia.org/ontology/commander> ?v6 . ?v3 <http://dbpedia.org/property/birthName> ?v4 . ?v6 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/ontology/knownFor> ?result . ?v3 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Great_Siege_of_Gibraltar> <http://dbpedia.org/ontology/commander> ?v2 . },"```sparql
SELECT ?war WHERE {
  # George Augustus Eliott and his association with the Great Siege of Gibraltar
  ?eliott dbo:birthName ""George Augustus Eliott""@en .
  ?eliott dbo:occupation dbp:Military_officer .

  # Arthur Wellesley, 1st Duke of Wellington, and his role in the Peninsular War
  ?wellington dbo:birthName ""Arthur Wellesley""@en .
  ?wellington dbo:occupation dbp:Military_officer .
  
  # Wars associated with both figures
  ?war dbo:participatedIn [
    a dbo:War ;
    rdfs:label ?label ;
    dbo:participant ?eliott ;
    dbo:participant ?wellington
  ] .

  FILTER(CONTAINS(LCASE(?label), ""napoleonic""))
}
```",7,7,8,3,3,3,3,71,0,0,2,0,0.0,0
767,27,test,"Give me the reference to the alter ego of the persona, that is a fictional character, of Matthew Burland.","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v1 <http://dbpedia.org/property/alterEgo> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v1 <http://dbpedia.org/property/alterEgo> ""Matthew Burland""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?alterEgo WHERE {
  ?author dbo:name ""Matthew Burland""@en .
  ?author dbo:pseudonym ?pseudonym .
  OPTIONAL { ?pseudonym rdfs:label ?alterEgo . FILTER (lang(?alterEgo) = 'en') }
}
```",3,4,4,3,1,3,3,71,0,0,98447,0,0.0,0
281,30,test,"Give me the war of Beauchamp Seymour, 1st Baron Alcester and war of the profession, that is a military unit, of Heather Roy and entity in Colony of New Zealand.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Beauchamp_Seymour,_1st_Baron_Alcester> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Colony_of_New_Zealand> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. <http://dbpedia.org/resource/Heather_Roy> <http://dbpedia.org/property/occupation> ?v1 . }","```sparql
# Query for war involving Beauchamp Seymour, 1st Baron Alcester
SELECT ?war WHERE {
  wd:Q1234567 wdt:P31/wdt:P279* wd:Q11424 . # Assuming Q1234567 is the DBpedia ID for Beauchamp Seymour
  wd:Q1234567 wdt:P106 wd:Q36180 .          # P106 denotes profession, and Q36180 denotes military personnel
  ?war wdt:P1128 wd:Q1234567 .
}

# Query for war or military unit related to Heather Roy's profession
SELECT ?militaryUnit WHERE {
  wd:Q6543210 wdt:P31/wdt:P279* wd:Q11424 . # Assuming Q6543210 is the DBpedia ID for Heather Roy
  wd:Q6543210 wdt:P106 wd:Q36180 .
  ?militaryUnit wdt:P1128 wd:Q6543210 .
}

# Query for entity in Colony of New Zealand
SELECT ?entity WHERE {
  ?entity wdt:P31/wdt:P279* wd:Q1234567 . # Assuming Q1234567 is the DBpedia ID for Colony of New Zealand
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
488,56,test,"Give me the birth place of the commander in Boshin War and death place of Tokugawa Ieyasu and administration of the father of the spouse, that is a royalty, of Tokugawa Masako.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?v1 . ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Tokugawa_Masako> . <http://dbpedia.org/resource/Tokugawa_Ieyasu> <http://dbpedia.org/ontology/deathPlace> ?result . ?result <http://dbpedia.org/property/leader> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Boshin_War> <http://dbpedia.org/ontology/commander> ?v2 . },"```sparql
# Query for the birthplace of Saigō Takamori (Commander in Boshin War)
SELECT ?birthPlace WHERE {
  wd:Q12345 dbo:birthPlace ?birthPlace .
}

UNION

# Query for the death place of Tokugawa Ieyasu
SELECT ?deathPlace WHERE {
  wd:Q12346 dbo:deathPlace ?deathPlace .
}

UNION

# Query for the administration (domain) governed by the father of Tokugawa Yoshinobu's spouse's father
SELECT ?administration WHERE {
  wd:Q12347 dbo:father ?father .
  ?father dbo:governedAdministrativeUnit ?administration .
}
```

Note: Replace `wd:Q12345`, `wd:Q12346`, and `wd:Q12347` with the actual DBpedia resource identifiers for Saigō Takamori, Tokugawa Ieyasu, and Tokugawa Nariaki respectively.",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
492,34,test,Give me the person decedent at the work of the author of French Algeria and person decedent at Algiers.,SELECT ?result WHERE { <http://dbpedia.org/resource/French_Algeria> <http://dbpedia.org/property/author> ?v2 . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Algiers> . ?v1 <http://dbpedia.org/property/author> ?v2 . ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . },"```sparql
# Query to find the person who died at the work of the author of ""French Algeria""
SELECT ?author ?deathPlace WHERE {
  ?book dcterms:title ""French Algeria""@en .
  ?book dbo:author ?author .
  ?author dbo:deathPlace ?deathPlace .
}

UNION

# Query to find a notable person who died in Algiers
SELECT ?person ?deathPlace WHERE {
  ?person dbo:deathPlace ?deathPlace .
  FILTER(CONTAINS(LCASE(?deathPlace), ""algiers""))
}
```",4,4,5,3,2,3,3,71,0,0,16,0,0.0,0
10,26,test,"Give me the band member of Luke Vibert and associated musical artist of the person born, that is an artist, as Matt Colton and professional in the birth name of Sharon Kao.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Luke_Vibert> . ?v4 <http://dbpedia.org/property/birthName> ""Matt Colton""@en . ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Sharon_Kao> <http://dbpedia.org/property/birthName> ?v1 . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandMember ?associatedArtist ?professionalRole
WHERE {
  # Find a band member of Luke Vibert
  OPTIONAL {
    dbr:Luke_Vibert dbo:memberOf ?band .
    ?band dbo:member ?bandMember .
  }

  # Find the associated musical artist of Matt Colton
  OPTIONAL {
    dbr:Matt_Colton dbo:associatedMusicalArtist ?artist .
    ?artist a dbo:MusicArtist .
    BIND(?artist AS ?associatedArtist)
  }

  # Find the professional role of Sharon Kao
  OPTIONAL {
    dbr:Sharon_Kao dbo:birthName ?birthName .
    ?birthName dbo:profession ?professionalRole .
  }
}
```",5,6,6,2,3,2,3,28,0,0,1,0,0.0,0
9,59,test,"Give me the alma mater of the mayor, that is a politician, of the entity, that is an organisation, in Belfast and alma mater of the awardee of the reference, that is an award, to Royal Medals.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/almaMater> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Royal Medals""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v5 <http://dbpedia.org/property/awards> ?v0 . ?v3 <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Belfast> . ?v2 <http://dbpedia.org/ontology/almaMater> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://dbpedia.org/property/leader> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
# Step 1: Find the current mayor of Belfast who is a politician
SELECT ?mayor WHERE {
  ?belfast dbo:type dbr:City.
  ?belfast rdfs:label ""Belfast""@en.
  ?organization dbo:location ?belfast;
                dbo:officeHolder ?mayor;
                dbo:position dbr:Mayor_of_Belfast.
  ?mayor rdf:type dbo:Politician.
}

# Step 2: Find the alma mater of the mayor
SELECT DISTINCT ?university WHERE {
  ?mayor dbo:almaMater ?university.
  # Use the result from step 1 for ?mayor
}

# Step 3: Identify the award associated with Royal Medals
SELECT ?award WHERE {
  ?award rdfs:label ?label.
  FILTER(CONTAINS(LCASE(?label), ""royal medals"")).
}

# Step 4: Find awardees of this award and their alma mater
SELECT DISTINCT ?university WHERE {
  ?recipient dbo:awardReceived ?award;
             dbo:almaMater ?university.
  # Use the result from step 3 for ?award
}

# Final query to find common university
SELECT DISTINCT ?commonUniversity WHERE {
  VALUES ?mayor { /* Insert mayor's URI from Step 1 */ }
  VALUES ?award { /* Insert award URI from Step 3 */ }

  ?mayor dbo:almaMater ?commonUniversity.
  ?recipient dbo:awardReceived ?award;
             dbo:almaMater ?commonUniversity.

  # Ensure the recipient is not the mayor
  FILTER(?recipient != ?mayor)
}
```",6,9,7,3,2,3,3,71,0,0,1,0,0.0,0
115,8,test,Give me the alma mater of Vladimir Cerrón and alma mater of the awardee of National Order of Scientific Merit.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/almaMater> ?result . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/National_Order_of_Scientific_Merit> . <http://dbpedia.org/resource/Vladimir_Cerrón> <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
# Query for Vladimir Cerrón's alma mater
SELECT ?almaMater WHERE {
  wd:QXXXXX dbo:almaMater ?almaMater .
}

UNION

# Query for a notable awardee of the National Order of Scientific Merit and their alma mater
SELECT ?awardeeAlmaMater WHERE {
  ?person dbo:awardReceived wd:YYYYYY ; # Replace YYYYYY with the DBpedia ID for the National Order of Scientific Merit
           dbo:almaMater ?awardeeAlmaMater .
}
```

Note: You will need to replace `QXXXXX` with the actual DBpedia identifier for Vladimir Cerrón and `YYYYYY` with the identifier for the National Order of Scientific Merit. Additionally, you may need to refine the query for the awardee by specifying a particular individual if there are multiple recipients.",3,3,4,2,2,2,2,9,0,0,1,0,0.0,0
232,65,test,"Give me the actor of the claim to fame, that is a film and a military conflict, of the professional in Actor, narrator and producer and child of the person born as John Devon Roland Pertwee and native of the residence, that is a settlement and British, of Sylvie Bermann.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. <http://dbpedia.org/resource/Sylvie_Bermann> <http://dbpedia.org/property/residence> ?v3 . ?v0 <http://dbpedia.org/property/occupation> ""Actor, narrator and producer""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v4 <http://dbpedia.org/property/birthName> ""John Devon Roland Pertwee""@en . ?v6 <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://dbpedia.org/ontology/knownFor> ?v6 . ?v4 <http://dbpedia.org/ontology/child> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  # Simon Pertwee's involvement in the film ""The Young Indiana Jones Chronicles""
  ?film dbo:title ""The Young Indiana Jones Chronicles""@en .
  ?film dbo:starring dbr:Simon_Pertwee .

  # Simon Pertwee's connection to World War I
  ?actor dbo:birthName ""Simon Pertwee"" .
  ?actor dbo:profession dbr:Actor ;
         dbo:occupation dbr:Narrator ;
         dbo:occupation dbr:Producer .
  
  OPTIONAL {
    ?actor dbo:wikiPageDisambiguates ?disambiguation .
    ?disambiguation dbo:title ""World War I""@en .
  }
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
328,24,test,Give me the leader of People's Commissariat of Defense of the Soviet Union and commander in the force of Ferenc Szálasi.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Ferenc_Szálasi> . <http://dbpedia.org/resource/People's_Commissariat_of_Defense_of_the_Soviet_Union> <http://dbpedia.org/ontology/leader> ?result . ?v2 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT ?stalin ?szalasiCommander WHERE {
  # Query to find Joseph Stalin as the leader of the People's Commissariat of Defense
  ?stalin dbo:position ""People's Commissar for Defence""@en .
  ?stalin rdfs:label ""Joseph Stalin""@en .

  # Query to find the commander associated with Ferenc Szálasi
  ?szalasiCommander dbo:leader ""Ferenc Szálasi""@en ;
                   rdf:type dbo:MilitaryPerson .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
9,63,test,"Give me the figure known as the nickname of Queen's University Belfast and alma mater of the mayor, that is a politician, of the entity, that is an organisation, in Belfast and alma mater of the awardee of Royal Medal.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v6 <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://dbpedia.org/property/nickname> ?v2 . ?v4 <http://dbpedia.org/property/leader> ?v3 . ?v6 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Medal> . <http://dbpedia.org/resource/Queen's_University_Belfast> <http://dbpedia.org/property/nickname> ?v2 . ?v4 <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Belfast> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?nickname ?mayorName WHERE {
  # Get the nickname of Queen's University Belfast
  dbr:Queen's_University_Belfast dbo:nickname ?nickname .

  # Find a politician who is mayor of an organization in Belfast and an alumnus of Queen's University Belfast
  ?person dbo:almaMater dbr:Queen's_University_Belfast .
  ?person dbo:occupation dbr:Politician .
  ?organization dbo:location dbr:Belfast .
  ?organization dbo:mayor ?person .

  # Check if the person or another alumnus received the Royal Medal
  OPTIONAL {
    ?awardee dbo:almaMater dbr:Queen's_University_Belfast .
    ?awardee dbo:award dbr:Royal_Medal .
    FILTER(?awardee = ?person)
  }

  # Return the nickname and mayor's name
  BIND(STR(?person) AS ?mayorName)
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
747,57,test,"Give me the band of the person born as Tracey Elizabeth McSween and person born on 1985-04-29 and band of the writer of the work, that is a song, of Amba Shepherd.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/writer> ?v5 . ?v3 <http://dbpedia.org/property/birthName> ""Tracey Elizabeth McSween""@en . ?result <http://dbpedia.org/ontology/birthDate> ""1985-04-29""^^<http://www.w3.org/2001/XMLSchema#date> . ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Amba_Shepherd> . ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
# Query for Tracey Elizabeth McSween's band
SELECT ?band WHERE {
  ?person foaf:name ""Tracey Elizabeth McSween""@en .
  OPTIONAL { ?person dbo:birthName ""Tracey Elizabeth McSween""@en . }
  ?person dbo:memberOfBand ?band .
}

UNION

# Query for the person born on 1985-04-29's band
SELECT ?band WHERE {
  ?person dbo:birthday ""1985-04-29""^^xsd:date .
  OPTIONAL { ?person foaf:name ?name . }
  ?person dbo:memberOfBand ?band .
}

UNION

# Query for the writer of a song by Amba Shepherd
SELECT ?writer WHERE {
  ?song dbo:composer ""Amba Shepherd""@en ;
        rdf:type dbo:Songs .
  ?song dbo:lyricsBy ?writer .
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
328,61,test,"Give me the commander in the force of the person decedent at Budapest and leader of the office, that is a government agency, of the leader, that is an office holder and a politician, of Gustav Jonson.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/leader> ?result . ?v5 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Budapest> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v5 <http://dbpedia.org/ontology/commander> ?v0 . ?v1 <http://dbpedia.org/property/office> ?v3 . <http://dbpedia.org/resource/Gustav_Jonson> <http://dbpedia.org/property/leader> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  # Step 1: Identify Gustav Jonson and his role
  ?gustavJonson a dbo:OfficeHolder ;
                foaf:name ""Gustav Jonson""@en .

  # Step 2: Find the leader of the agency or office he was part of
  ?agencyOrOffice dbo:head ?leader .
  ?gustavJonson dbo:memberOf ?agencyOrOffice .

  # Step 3: Determine the commander of the force in Budapest at the time of the decedent's death
  ?commander a dbo:MilitaryPerson ;
             dbo:commanderOf ?forceInBudapest .
  ?forceInBudapest dbo:location dbr:Budapest ;
                   dbo:timePeriod ?relevantTime .

  # Assuming we have some way to determine the relevant time of the decedent's death
  FILTER(?relevantTime = <RELEVANT_TIME_PERIOD>)

}
```

Note: The query assumes placeholders like `<RELEVANT_TIME_PERIOD>` need to be replaced with actual data or further refined based on available information.",6,9,7,3,2,3,3,71,0,0,1,0,0.0,0
994,48,test,"Give me the band member of the person born, that is a musical artist, as Donald Maynard Dokken and associated musical artist of the associated musical artist of the reference to Watchtower.","SELECT ?result WHERE { ?v3 <http://xmlns.com/foaf/0.1/name> ""Watchtower""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/birthName> ""Donald Maynard Dokken""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . }","```sparql
# Step 1: Identify Donald Maynard Dokken as a musical artist and find his band members
SELECT ?bandMember WHERE {
    ?dokken dbo:birthName ""Donald Maynard Dokken""@en .
    ?dokken rdf:type dbo:MusicalArtist .
    ?band dbo:member ?dokken .
    ?band dbo:member ?bandMember .
    FILTER(?bandMember != ?dokken)
}

UNION

# Step 2: Identify the associated musical artist of Watchtower
SELECT ?associatedArtist WHERE {
    ?watchtower dbo:reference ""Watchtower""@en .
    ?watchtower rdf:type dbo:MusicalArtist .
    ?relatedArtist dbo:associatedMusicalArtist ?watchtower .
    ?relatedArtist rdf:type dbo:MusicalArtist .
    ?relatedArtist rdfs:label ?associatedArtist .
}

UNION

# Step 3: Find the associated musical artist of the artist identified in step 2
SELECT ?finalAssociatedArtist WHERE {
    ?artist1 ?p ?watchtowerRelatedArtist .
    ?watchtowerRelatedArtist rdf:type dbo:MusicalArtist .
    ?relatedArtist2 dbo:associatedMusicalArtist ?watchtowerRelatedArtist .
    ?relatedArtist2 rdfs:label ?finalAssociatedArtist .
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
9,65,test,"Give me the alma mater of the awardee of the reference, that is an award, to Royal Medals and figure known as the nickname of Queen's University Belfast and alma mater of the mayor, that is a politician, of Northern Ireland Forum.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. <http://dbpedia.org/resource/Queen's_University_Belfast> <http://dbpedia.org/property/nickname> ?v3 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Royal Medals""@en . <http://dbpedia.org/resource/Northern_Ireland_Forum> <http://dbpedia.org/property/leader> ?v4 . ?v6 <http://dbpedia.org/ontology/almaMater> ?result . ?v6 <http://dbpedia.org/property/awards> ?v0 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://dbpedia.org/property/nickname> ?v3 . }","```sparql
# Step 1: Find an awardee of the Royal Medal
SELECT ?awardee WHERE {
  ?award dbo:type dbr:Royal_Medal .
  ?award dbo:recipient ?person .
  ?person rdfs:label ?awardeeLabel FILTER (lang(?awardeeLabel) = ""en"") .
} LIMIT 1

# Step 2: Find the alma mater of this awardee
SELECT ?almaMater WHERE {
  ?person dbo:almaMater ?institution .
  ?institution rdfs:label ?almaMaterLabel FILTER (lang(?almaMaterLabel) = ""en"") .
}

# Step 3: Identify a politician who was mayor of the Northern Ireland Forum
SELECT ?politician WHERE {
  ?forum dbo:type dbr:Northern_Ireland_Forum .
  ?forum dbo:mayor ?person .
  ?person rdfs:label ?politicianLabel FILTER (lang(?politicianLabel) = ""en"") .
} LIMIT 1

# Step 4: Find the alma mater of this politician
SELECT ?almaMater WHERE {
  ?person dbo:almaMater ?institution .
  ?institution rdfs:label ?almaMaterLabel FILTER (lang(?almaMaterLabel) = ""en"") .
}

# Note: The above queries are separate and need to be executed in sequence to gather the required information.
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
959,46,test,"Give me the native of the residence, that is a country, of Yōichi Masuzoe and member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of the person born in 1958.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v2 <http://dbpedia.org/ontology/birthYear> ""1958""^^<http://www.w3.org/2001/XMLSchema#gYear> . ?v2 <http://dbpedia.org/ontology/almaMater> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Yōichi_Masuzoe> <http://dbpedia.org/property/residence> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?result <http://dbpedia.org/ontology/team> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. }","```sparql
SELECT ?native WHERE {
  ?person dbo:birthYear ""1958""^^xsd:gYear ;
          foaf:name ""Yōichi Masuzoe""@en .
  
  ?person dbo:almaMater ?university .
  ?university rdf:type dbpedia-ja:大学 ; 
              dbo:country dbc:Japan .

  ?person dbo:residenceCountry ?residenceCountry .
  
  ?native dbo:nationality ?residenceCountry ;
          foaf:name ?name .
}
```",5,10,6,3,2,3,3,71,0,0,167,0,0.0,0
547,68,test,Give me the resting place of the child of the child of William Haliburton and resting place of the actor of the show with Emily Richard and resting place of the awardee of Knight Grand Cross of the Order of St Michael and St George.,"SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_St_Michael_and_St_George> . ?v5 <http://dbpedia.org/property/father> ""William Haliburton""@en . ?v4 <http://dbpedia.org/ontology/restingPlace> ?result . ?v0 <http://dbpedia.org/property/starring> ?v7 . ?v5 <http://dbpedia.org/ontology/child> ?v4 . ?v7 <http://dbpedia.org/ontology/restingPlace> ?result . ?v0 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emily_Richard> . ?v3 <http://dbpedia.org/ontology/restingPlace> ?result . }","```sparql
# Query 1: Resting place of the child of the child of William Haliburton
SELECT ?grandchildRestingPlace WHERE {
  ?williamHaliburton dbo:spouse ?spouse .
  ?williamHaliburton foaf:name ""William Haliburton""@en .
  ?williamHaliburton dbo:child ?child .
  ?child dbo:child ?grandchild .
  ?grandchild dbo:deathPlace ?grandchildRestingPlace .
}

# Query 2: Resting place of the actor from the show with Emily Richard
SELECT ?actorRestingPlace WHERE {
  ?show dbo:starring ?emilyRichard .
  ?emilyRichard foaf:name ""Emily Richard""@en .
  ?show dbo:starring ?actor .
  ?actor dbo:deathPlace ?actorRestingPlace .
}

# Query 3: Resting place of the awardee of Knight Grand Cross of the Order of St Michael and St George
SELECT ?recipientRestingPlace WHERE {
  ?recipient dbo:honoraryTitle ""Knight Grand Cross of the Order of St Michael and St George""@en .
  ?recipient dbo:deathPlace ?recipientRestingPlace .
}
```",8,8,9,3,3,3,3,71,0,0,1,0,0.0,0
659,62,test,"Give me the commander in the war, that is an event and a military conflict, of the figure known, that is a military unit and an organisation, as 'Polish Horse' and military force of Napoleonic Wars and commander in the force of the native, that is an office holder, of Kingdom of Ireland.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/property/nickname> ""'Polish Horse'""@en . ?v6 <http://dbpedia.org/ontology/commander> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v4 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Kingdom_of_Ireland> . ?v3 <http://dbpedia.org/ontology/commander> ?v4 . ?v0 <http://dbpedia.org/ontology/battle> ?v6 . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Napoleonic_Wars> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  ?unit a dbo:MilitaryUnit ;
        rdfs:label ""Polish Uhlans""@en .
  
  ?conflict a dbo:MilitaryConflict ;
            rdfs:label ""Napoleonic Wars""@en .

  ?commander dbo:commanded ?unit ;
             dbo:participatedInMilitaryConflicts ?conflict ;
             rdfs:label ?name .

  FILTER(CONTAINS(LCASE(?name), ""józef poniatowski""))

  OPTIONAL {
    ?officeHolder a dbo:OfficeHolder ;
                  dbo:positionHeld dbr:Lord_Lieutenant_of_Ireland ;
                  dbo:residence dbr:Kingdom_of_Ireland .
    
    ?commander dbo:commandedBy ?officeHolder .
  }
}
```",7,12,8,3,3,3,3,71,0,0,13,0,0.0,0
54,60,test,"Give me the child of the father of the child of Thinkhaya of Pagan and predecessor of the child, that is an office holder and a royalty, of the reference to Thihapate of Mohnyin.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Thihapate of Mohnyin""@en . ?v2 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?v3 . ?v1 <http://dbpedia.org/property/father> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://dbpedia.org/property/father> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  # Thinkhaya of Pagan and his child
  ?thinkhaya a dbo:Monarch ;
             foaf:name ""Thinkhaya""@en ;
             dbo:country dbr:Myanmar .
  
  ?thinkhayasChild dbo:parent ?thinkhaya ;
                   a dbo:Person .

  # Thinkhaya's grandchild (child of his child)
  ?grandchild dbo:parent ?thinkhayasChild ;
              a dbo:Person .

  # Predecessor of the grandchild is Thinkhaya's child
  ?predecessor ?p ?grandchild .
  
  # Thihapate of Mohnyin and his reference (office or title)
  ?thihapate a dbo:Monarch ;
             foaf:name ""Thihapate""@en ;
             dbo:country dbr:Myanmar .

  ?reference dbo:monarch ?thihapate ;
             a dbo:OfficeOrTitle .

  # Find the child who is an office holder and royalty, linked to Thihapate
  ?child dbo:parent ?thinkhayasChild ;
         a dbo:Person ;
         dbo:officeOrTitle ?reference .
}
```",6,8,7,3,2,3,3,71,0,0,1,0,0.0,0
427,64,test,"Give me the party of the person born, that is an office holder and a politician, as the birth name of Romano Prodi and reference to the name of the party of Michele Pinto and party of Giulio Andreotti.",SELECT ?result WHERE { <http://dbpedia.org/resource/Michele_Pinto> <http://dbpedia.org/ontology/party> ?v3 . <http://dbpedia.org/resource/Giulio_Andreotti> <http://dbpedia.org/ontology/party> ?result . ?v3 <http://xmlns.com/foaf/0.1/name> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?v1 <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/property/birthName> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?romanoProdiBirthName ?romanoProdiParty ?michelePintoParty ?giulioAndreottiParty WHERE {
  # Romano Prodi's birth name and party
  dbr:Romano_Prodi dbo:birthName ?romanoProdiBirthName .
  OPTIONAL { 
    ?romanoProdiOfficeHolder dbo:party ?romanoProdiParty .
    FILTER EXISTS { ?romanoProdiOfficeHolder dbp:officeHolder = dbr:Romano_Prodi }
  }

  # Michele Pinto's party
  dbr:Michele_Pinto dbo:politicalParty ?michelePintoParty .

  # Giulio Andreotti's party
  dbr:Giulio_Andreotti dbo:politicalParty ?giulioAndreottiParty .
}
```",7,9,8,3,3,3,3,71,0,0,2,0,0.0,0
9,47,test,"Give me the alma mater of the mayor, that is a politician, of Northern Ireland Forum and alma mater of the awardee of the reference, that is an award, to Royal Medals.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/almaMater> ?result . <http://dbpedia.org/resource/Northern_Ireland_Forum> <http://dbpedia.org/property/leader> ?v2 . ?v4 <http://dbpedia.org/property/awards> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/ontology/almaMater> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Royal Medals""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. }","```sparql
# Query to find the mayor associated with Northern Ireland Forum who is a politician
SELECT ?mayor ?mayorName WHERE {
  ?mayor dbo:position dbr:Northern_Ireland_Forum_Mayor .
  ?mayor dbo:occupation dbr:Politician .
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}

# Query to find the awardee of Royal Medals
SELECT ?awardee ?awardeeName WHERE {
  ?awardee dbo:award dbr:Royal_Medal .
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}

# Assuming we have identified the individuals, query their alma mater
# Replace :mayor and :awardee with actual DBpedia resource identifiers obtained from above queries

SELECT ?university WHERE {
  OPTIONAL { <http://dbpedia.org/resource/Identified_Mayor> dbo:almaMater ?university . }
  OPTIONAL { <http://dbpedia.org/resource/Identified_Awardee> dbo:almaMater ?university . }
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
184,63,test,"Give me the child of the child of Archduke Joseph Karl of Austria and parent of the native of the landmark at elevation, that is a settlement, of 96.0 and parent of the child of Archduke Joseph Francis of Austria.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v3 . ?v6 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Karl_of_Austria> . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Francis_of_Austria> . ?v4 <http://dbpedia.org/ontology/elevation> ""96.0""^^<http://www.w3.org/2001/XMLSchema#double> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/property/father> ?v6 . ?result <http://dbpedia.org/ontology/child> ?v2 . ?v3 <http://dbpedia.org/ontology/birthPlace> ?v4 . }","```sparql
# Step 1: Find a child of Archduke Joseph Karl of Austria
SELECT ?child WHERE {
    ?person dbo:parent dbr:Archduke_Joseph_Karl_of_Austria .
    ?person rdf:type dbo:Person .
    FILTER EXISTS { ?person dbo:child ?child . }
}

# Step 2: Find a child of the child from step 1
SELECT ?grandchild WHERE {
    ?child dbo:parent ?parent .
    ?child dbo:child ?grandchild .
}

# Step 3: Identify the parent of this grandchild
SELECT ?grandchildParent WHERE {
    ?grandchild dbo:parent ?grandchildParent .
}

# Step 4: Find a landmark at elevation 96.0 meters that is a settlement
SELECT ?landmark WHERE {
    ?landmark rdf:type dbo:Settlement .
    ?landmark dbo:elevation ""96.0""^^xsd:float .
}

# Step 5: Identify the native of this landmark
SELECT ?native WHERE {
    ?native dbo:nativePlace ?landmark .
}

# Step 6: Find the parent of this native
SELECT ?nativeParent WHERE {
    ?native dbo:parent ?nativeParent .
}

# Step 7: Find a child of Archduke Joseph Francis of Austria
SELECT ?child2 WHERE {
    ?person2 dbo:parent dbr:Archduke_Joseph_Francis_of_Austria .
    ?person2 rdf:type dbo:Person .
    FILTER EXISTS { ?person2 dbo:child ?child2 . }
}

# Step 8: Identify the parent of this child
SELECT ?childParent WHERE {
    ?child2 dbo:parent ?childParent .
}

# Final step: Find the intersection or connection between results from steps 3 and 6
SELECT DISTINCT ?commonAncestor WHERE {
    VALUES (?ancestor1) { ?grandchildParent }
    VALUES (?ancestor2) { ?nativeParent }
    FILTER(?ancestor1 = ?ancestor2)
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
994,65,test,"Give me the associated musical artist of the band member, that is a band and a group and an organisation, of the band, that is an organisation, of Fredrik Thordendal and band member of the person born, that is a musical artist, as Donald Maynard Dokken and associated musical artist of the associated musical artist of Watchtower (band).","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v1 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Fredrik_Thordendal> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v0 <http://dbpedia.org/property/birthName> ""Donald Maynard Dokken""@en . <http://dbpedia.org/resource/Watchtower_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
SELECT DISTINCT ?finalArtist WHERE {
  # Step 1: Find associated musical artist of Watchtower
  ?watchtower dbo:associatedBand ?artist1 .
  
  # Step 2: Find band member of Donald Maynard Dokken (musical artist)
  ?dokken dbo:birthName ""Donald Maynard Dokken"" .
  ?bandMember dbo:bandMember ?dokken .

  # Step 3: Identify Fredrik Thordendal's band
  ?fredrik dbo:bandMember ?thordendalsBand .
  FILTER (str(?thordendalsBand) = ""Meshuggah"") .

  # Step 4: Find a band member of Fredrik Thordendal's band who is also a band and an organization
  ?bandOrg dbo:bandMember ?fredrik .
  FILTER (str(?bandOrg) IN (""Meshuggah"", ""Cynic"")) . # Assuming Cynic as a possible band

  # Step 5: Find associated musical artist of this band member
  ?bandOrg dbo:associatedBand ?finalArtist .
}
```",7,12,8,3,3,3,3,71,0,0,1,0,0.0,0
492,48,test,"Give me the person decedent at the work of the author of French Algeria and person decedent at the capital, that is a settlement, of Algeria.",SELECT ?result WHERE { <http://dbpedia.org/resource/French_Algeria> <http://dbpedia.org/property/author> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . <http://dbpedia.org/resource/Algeria> <http://dbpedia.org/ontology/capital> ?v1 . ?v2 <http://dbpedia.org/property/author> ?v3 . },"```sparql
# Query for the person who died at the work location of the author of ""French Algeria""
SELECT ?decedent WHERE {
  ?book dcterms:title ""French Algeria""@en .
  ?book dbo:author ?author .
  ?author dbo:deathPlace ?placeOfDeath .
  ?person dbo:deathPlace ?placeOfDeath ;
          rdf:type dbo:Person .
  BIND(?person AS ?decedent)
}

UNION

# Query for the person who died in Algiers, the capital of Algeria
SELECT ?decedent WHERE {
  ?capital rdfs:label ""Algiers""@en ;
           dbo:country dbr:Algeria .
  ?person dbo:deathPlace ?capital ;
          rdf:type dbo:Person .
  BIND(?person AS ?decedent)
}
```",5,6,6,3,2,3,3,71,0,0,16,0,0.0,0
617,51,test,Give me the parent of the child of the commander in Battle of Panium and spouse of the child of Antiochus III the Great.,SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://dbpedia.org/ontology/child> ?v2 . <http://dbpedia.org/resource/Antiochus_III_the_Great> <http://dbpedia.org/ontology/child> ?v4 . <http://dbpedia.org/resource/Battle_of_Panium> <http://dbpedia.org/ontology/commander> ?v1 . ?result <http://dbpedia.org/ontology/child> ?v2 . },"```sparql
# Step 1: Find the commander in the Battle of Panium
SELECT ?commander WHERE {
  ?battle dbo:location ""Battle of Panium""@en .
  ?battle dbo:commander ?commander .
}

# Step 2: Find the child of this commander
SELECT ?child WHERE {
  ?commander dbo:child ?child .
}

# Step 3: Determine the parent of this child (should be the commander)
SELECT ?parent WHERE {
  ?child dbo:parent ?parent .
}

# Step 4: Identify Antiochus III the Great's child
SELECT ?antiochusChild WHERE {
  wd:Q123456 dbo:child ?antiochusChild . # Assuming Q123456 is the DBpedia ID for Antiochus III the Great
}

# Step 5: Find the spouse of this child
SELECT ?spouse WHERE {
  ?antiochusChild dbo:spouse ?spouse .
}

# Step 6: Match the parent from step 3 with the spouse from step 5
SELECT DISTINCT ?parent AS ?result WHERE {
  { 
    # Subquery for commander's child's parent
    SELECT ?childParent WHERE {
      ?battle dbo:location ""Battle of Panium""@en .
      ?battle dbo:commander ?commander .
      ?commander dbo:child ?child .
      ?child dbo:parent ?childParent .
    }
  }
  {
    # Subquery for Antiochus III the Great's child's spouse
    SELECT ?antiochusSpouse WHERE {
      wd:Q123456 dbo:child ?antiochusChild .
      ?antiochusChild dbo:spouse ?antiochusSpouse .
    }
  }
  FILTER (?childParent = ?antiochusSpouse)
}
```",5,5,6,3,2,3,3,71,0,0,2,0,0.0,0
16,61,test,Give me the professional in the profession of the actor of Unnatural (TV series) and person born as the birth name of the alumnus of Ohio State University.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Unnatural_(TV_series)> <http://dbpedia.org/property/starring> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v5 . ?v1 <http://dbpedia.org/property/birthName> ?v3 . ?v0 <http://dbpedia.org/property/occupation> ?v5 . ?v1 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Ohio_State_University> . },"```sparql
# Step 1: Find actor(s) of ""Unnatural"" (TV series)
SELECT ?actor WHERE {
  ?series dcterms:title ""Unnatural""@en .
  ?series dbo:starring ?actor .
  ?actor a dbo:Actor .
}

# Step 2: Find an alumnus of Ohio State University and their birth name
SELECT ?alumnus ?birthName WHERE {
  ?university dcterms:title ""Ohio State University""@en .
  ?university dbo:alumni ?alumnus .
  OPTIONAL { ?alumnus foaf:name ?birthName . }
}

# Step 3: Find the profession of the actor from Unnatural
SELECT DISTINCT ?actorProfession WHERE {
  VALUES ?actor { <actor_uri_from_step_1> } # Replace with actual URI obtained from step 1
  ?actor dbo:occupation ?actorProfession .
}

# Step 4: Find the profession of the alumnus from Ohio State University
SELECT DISTINCT ?alumnusProfession WHERE {
  VALUES ?alumnus { <alumnus_uri_from_step_2> } # Replace with actual URI obtained from step 2
  ?alumnus dbo:occupation ?alumnusProfession .
}

# Step 5: Find a professional in the same profession as both individuals
SELECT DISTINCT ?professional WHERE {
  VALUES ?profession { <actor_profession_uri_from_step_3> <alumnus_profession_uri_from_step_4> } # Replace with actual URIs obtained from steps 3 and 4
  ?professional dbo:occupation ?profession .
}
```",6,6,7,3,2,3,3,71,0,0,3,0,0.0,0
378,36,test,"Give me the war of Carl Pontus Gahn and claim to fame of the commander in the war, that is a military conflict and a societal event and an event, of Thomas Trigge.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/commander> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Thomas_Trigge> <http://dbpedia.org/ontology/battle> ?v0 . ?v1 <http://dbpedia.org/ontology/knownFor> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war ?commander ?fame WHERE {
  ?war dbo:participated Carl_Pontus_Gahn .
  ?war dbo:participated Thomas_Trigge .
  ?war a dbo:MilitaryConflict .

  OPTIONAL { 
    ?war dbo:commandedBy ?commander .
    ?commander dbo:famousFor ?fame .
  }
}
```",4,7,5,3,2,3,3,71,0,0,2,0,0.0,0
801,68,test,"Give me the associated musical artist of the writer, that is a musical artist and an artist, of 40 Dayz & 40 Nightz and producer of the work, that is a musical work and a song and a work, of the professional, that is a musical artist, in Rapper and professional in the alter ego of the true self of The Shadow.","SELECT ?result WHERE { ?v7 <http://dbpedia.org/ontology/producer> ?result . <http://dbpedia.org/resource/40_Dayz_&_40_Nightz> <http://dbpedia.org/property/writer> ?v3 . ?v5 <http://dbpedia.org/property/alterEgo> ?v4 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v5 <http://xmlns.com/foaf/0.1/givenName> ""The Shadow""@en . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/occupation> ?v4 . ?v7 <http://dbpedia.org/property/writer> ?v0 . ?v0 <http://dbpedia.org/property/occupation> ""Rapper""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artist WHERE {
  ?album dbo:artist dbr:The_Game ;
         a dbo:Album .
  
  ?game dbo:birthName ""Jayceon Terrell Taylor""^^xsd:string ;
        dbo:profession dbr:Rapper ;
        dbo:alias dbr:The_Shadow ;
        dbo:work dbr:40_Dayz_&_40_Nightz ;
        dbo:producer dbr:40_Dayz_&_40_Nightz ;
        a dbo:MusicalArtist .

  ?artist dbo:associatedMusicalArtist ?game .
  
  FILTER (?artist = ?game)
}
```",8,14,9,3,3,3,3,71,0,0,8,0,0.0,0
547,52,test,Give me the resting place of the child of the child of William Haliburton and resting place of Alan Cunningham and resting place of the actor of Enemy at the Door.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Enemy_at_the_Door> <http://dbpedia.org/property/starring> ?v5 . ?v5 <http://dbpedia.org/ontology/restingPlace> ?result . ?v3 <http://dbpedia.org/ontology/child> ?v2 . ?v3 <http://dbpedia.org/property/father> ""William Haliburton""@en . <http://dbpedia.org/resource/Alan_Cunningham> <http://dbpedia.org/ontology/restingPlace> ?result . }","```sparql
# Query for resting place of the child of the child of William Haliburton
SELECT DISTINCT ?grandchild ?restingPlace WHERE {
  ?williamHaliburton dbo:givenName ""William"" .
  ?williamHaliburton dbo:familyName ""Haliburton"" .
  ?williamHaliburton dbo:child ?child .
  ?child dbo:child ?grandchild .
  OPTIONAL { ?grandchild dbo:placeOfBurial ?restingPlace }
}

UNION

# Query for resting place of Alan Cunningham
SELECT DISTINCT ?alanCunningham ?restingPlace WHERE {
  ?alanCunningham dbo:givenName ""Alan"" .
  ?alanCunningham dbo:familyName ""Cunningham"" .
  OPTIONAL { ?alanCunningham dbo:placeOfBurial ?restingPlace }
}

UNION

# Query for resting place of the actor of ""Enemy at the Door""
SELECT DISTINCT ?actor ?restingPlace WHERE {
  ?film dbo:title ""Enemy at the Door""@en .
  ?film dbo:starring ?actor .
  OPTIONAL { ?actor dbo:placeOfBurial ?restingPlace }
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
528,35,test,Give me the force of the person born as Narciso Campero Leyes and war of the military force of Battle of Pisagua.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> ?v1 . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/property/birthName> ""Narciso Campero Leyes""@en . ?v2 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Pisagua> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?role ?battle ?forces
WHERE {
  # Find Narciso Campero Leyes and his role
  dbr:Narciso_Campero_Leyes dbo:occupation ?role .
  
  # Find the Battle of Pisagua and the forces involved
  dbr:Battle_of_Pisagua dbo:participatedInWar ?war ;
                        dbo:hasParticipant ?forces .
}
```",4,4,5,2,2,3,3,71,0,0,3,0,0.0,0
92,70,test,"Give me the band of the person born as the birth name of Joseph Michael and band member of the reference, that is an artist, to Nevermore and associated musical artist of the person born, that is an artist, as the actor of Return to Nuke 'Em High Volume 1.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/birthName> ?v1 . ?v4 <http://xmlns.com/foaf/0.1/name> ""Nevermore""@en . <http://dbpedia.org/resource/Joseph_Michael> <http://dbpedia.org/property/birthName> ?v1 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Return_to_Nuke_'Em_High_Volume_1> <http://dbpedia.org/property/starring> ?v0 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/bandMember> ?v3 . ?v7 <http://dbpedia.org/property/birthName> ?v0 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?v7 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
# Step 1: Find Warrel Dane's birth name
SELECT ?person WHERE {
  ?person foaf:name ""Warrel Dane""@en .
  ?person dbo:birthName ?birthName .
}

# Step 2: Determine his band membership
SELECT ?band WHERE {
  ?person dbo:musicArtist ?band .
  FILTER(?person = <http://dbpedia.org/resource/Warrel_Dane>)
}

# Step 3: Find associated musical artist with Nevermore and Warrel Dane
SELECT DISTINCT ?associatedArtist WHERE {
  ?artist dbo:member ?band .
  ?band foaf:name ""Nevermore""@en .
  OPTIONAL { ?person dbo:musicArtist ?band . FILTER(?person = <http://dbpedia.org/resource/Warrel_Dane>) }
}

# Step 4: Identify actor from ""Return to Nuke 'Em High Volume 1""
SELECT ?actor WHERE {
  ?film dbo:starring ?actor .
  ?film foaf:name ""Return to Nuke 'Em High Volume 1""@en .
}

# Step 5: Determine associated musical artist of the actor
SELECT DISTINCT ?musicalArtist WHERE {
  ?actor dbo:musicArtist ?musicalArtist .
  FILTER(?actor = <http://dbpedia.org/resource/Dee_Snider>)
}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
184,62,test,"Give me the parent of Archduchess Ilona of Austria and parent of the native of the landmark at elevation, that is a settlement, of 96.0 and child of the child of the parent, that is a royalty, of Archduke Ladislaus Philipp of Austria.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v6 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Archduke_Ladislaus_Philipp_of_Austria> <http://dbpedia.org/ontology/parent> ?v0 . ?v4 <http://dbpedia.org/ontology/elevation> ""96.0""^^<http://www.w3.org/2001/XMLSchema#double> . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Ilona_of_Austria> . ?v3 <http://dbpedia.org/ontology/birthPlace> ?v4 . ?result <http://dbpedia.org/ontology/child> ?v3 . ?result <http://dbpedia.org/property/father> ?v6 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. }","```sparql
# Query 1: Parent of Archduchess Ilona of Austria
SELECT ?parent WHERE {
  dbpedia:Ilona_of_Austria dbo:parent ?parent .
}

# Query 2: Native of the Landmark at Elevation 96.0
SELECT ?landmark ?location WHERE {
  ?landmark dbo:elevation ""96.0""^^xsd:float .
  ?landmark dbo:location ?location .
  FILTER (isBlank(?location) = false)
}

# Query 3: Native of the Location found in Query 2
SELECT ?native WHERE {
  ?person dbo:nativePlace ?location .
  VALUES ?location { <[LOCATION_URI]> }  # Replace [LOCATION_URI] with the actual URI found
}

# Query 4: Child of the Child of the Parent, that is Royalty, of Archduke Ladislaus Philipp
SELECT ?parent WHERE {
  dbpedia:Ladislaus_Philipp_of_Austria dbo:parent ?parent .
  ?parent rdf:type dbo:RoyalFamily .
}

SELECT ?grandchild WHERE {
  ?parent dbo:child ?child .
  ?child dbo:child ?grandchild .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
303,22,test,"Give me the party of the commander, that is a politician, in United States invasion of Panama and entity in the country, that is a country, of El Valle de Antón.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/El_Valle_de_Antón> <http://dbpedia.org/ontology/country> ?v3 . <http://dbpedia.org/resource/United_States_invasion_of_Panama> <http://dbpedia.org/ontology/commander> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/ontology/party> ?result . ?result <http://dbpedia.org/ontology/country> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?party ?country 
WHERE {
  # Find George H.W. Bush's party affiliation
  dbr:George_H._W._Bush dbo:politicalParty ?party .
  
  # Find the country associated with El Valle de Antón
  dbr:El_Valle_de_Antón dbo:country ?country .
}
```",4,6,5,2,2,2,3,28,0,0,2,0,0.0,0
547,44,test,Give me the resting place of the actor of Enemy at the Door and resting place of James Burton (Egyptologist) and resting place of the awardee of Knight Grand Cross of the Order of St Michael and St George.,SELECT ?result WHERE { <http://dbpedia.org/resource/Enemy_at_the_Door> <http://dbpedia.org/property/starring> ?v4 . ?v4 <http://dbpedia.org/ontology/restingPlace> ?result . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_St_Michael_and_St_George> . <http://dbpedia.org/resource/James_Burton_(Egyptologist)> <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
# Query for the actor of ""Enemy at the Door""
SELECT ?actor ?restingPlace WHERE {
  ?film dbo:title ""Enemy at the Door""@en .
  ?film dbo:starring ?actor .
  OPTIONAL { ?actor dbo:deathPlace ?restingPlace . }
} LIMIT 1

UNION

# Query for James Burton (Egyptologist)
SELECT ?person ?restingPlace WHERE {
  ?person rdfs:label ""James Burton (Egyptologist)""@en .
  OPTIONAL { ?person dbo:deathPlace ?restingPlace . }
} LIMIT 1

UNION

# Query for a Knight Grand Cross of the Order of St Michael and St George
SELECT ?recipient ?restingPlace WHERE {
  ?recipient dbo:honours ""Knight Grand Cross of the Order of St Michael and St George""@en .
  OPTIONAL { ?recipient dbo:deathPlace ?restingPlace . }
} LIMIT 1
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
492,26,test,"Give me the commander in the war, that is a military conflict and an event, of the commander in Battle of Verdun.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> ?v2 . <http://dbpedia.org/resource/Battle_of_Verdun> <http://dbpedia.org/ontology/commander> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?conflict ?event WHERE {
  # Find the commander in the Battle of Verdun
  ?verdunEvent a dbo:MilitaryConflict ;
               dbp:name ""Battle of Verdun""@en ;
               dbp:commander ?petain .

  # Get other conflicts or events where Philippe Pétain was a commander
  ?conflict a dbo:MilitaryConflict ;
            dbp:commander ?petain .
  
  OPTIONAL {
    ?event a dbo:Event ;
           dbp:commander ?petain .
  }

  FILTER(?verdunEvent != ?conflict)
}
```",3,5,4,3,1,3,3,71,0,0,92,0,0.0,0
339,17,test,Give me the father of the child of the parent of Princess Olga of Greece and Denmark and child of George I of Greece.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/George_I_of_Greece> <http://dbpedia.org/ontology/child> ?result . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Princess_Olga_of_Greece_and_Denmark> . },"```sparql
SELECT DISTINCT ?father WHERE {
  # Identify Princess Olga of Greece and Denmark
  ?olga dbo:spouse ?husband .
  ?olga rdfs:label ""Princess Olga of Greece and Denmark""@en .

  # Find her parent(s)
  ?parent dbo:child ?olga .

  # Determine the child of her parent(s) who is also a child of George I of Greece
  ?child dbo:child ?parent .
  ?georgeI rdfs:label ""George I of Greece""@en .
  ?georgeI dbo:child ?child .

  # Find the father of this individual
  ?father dbo:spouse ?mother .
  ?mother dbo:child ?child .
  
  FILTER(?father != ?georgeI) # Ensure we are not selecting George I himself as the father

}
```",4,4,5,3,2,3,2,20,0,0,1,0,0.0,0
959,21,test,"Give me the manager of 2013 Júbilo Iwata season and member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of Eiji Ōtsuka.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/team> ?v2 . <http://dbpedia.org/resource/Eiji_Ōtsuka> <http://dbpedia.org/ontology/almaMater> ?v2 . <http://dbpedia.org/resource/2013_Júbilo_Iwata_season> <http://dbpedia.org/ontology/manager> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?managerRole ?almaMater WHERE {
    # Find Eiji Ōtsuka's role as manager for Júbilo Iwata in 2013
    ?person a dbo:Person ;
        foaf:name ""Eiji Ōtsuka""@en ;
        dbo:positionHeld ?position .
    
    ?position dbo:organization dbr:Júbilo_Iwata ;
        dbo:startDate ?startDate ;
        dbo:endDate ?endDate .

    FILTER (?startDate <= ""2013-12-31""^^xsd:date && 
            (?endDate >= ""2013-01-01""^^xsd:date || NOT EXISTS { ?position dbo:endDate ?endDate }))

    BIND(""Manager of Júbilo Iwata in 2013"" AS ?managerRole)

    # Find Eiji Ōtsuka's alma mater
    ?person dbo:almaMater ?almaMater .
    
    FILTER (?almaMater a dbo:EducationalOrganization &&
            ?almaMater dbo:country dbr:Japan)
}
```",3,7,4,2,2,3,3,71,0,0,1,0,0.0,0
427,71,test,"Give me the party of the father of the alumnus of Massachusetts Institute of Technology and reference to the name of the party of Michele Pinto and party of the person born, that is an office holder and a politician, as the birth name of Romano Prodi.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/party> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v8 <http://dbpedia.org/property/birthName> ?v7 . ?v4 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Massachusetts_Institute_of_Technology> . ?v4 <http://dbpedia.org/property/father> ?v5 . <http://dbpedia.org/resource/Michele_Pinto> <http://dbpedia.org/ontology/party> ?v1 . ?v1 <http://xmlns.com/foaf/0.1/name> ?v2 . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/property/birthName> ?v7 . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v8 <http://dbpedia.org/ontology/party> ?result . },"```sparql
# Query 1: Identify an alumnus of MIT
SELECT ?alumnus WHERE {
  ?alumnus dbo:almaMater dbr_Massachusetts_Institute_of_Technology .
  FILTER (lang(?alumnusLabel) = 'en')
} LIMIT 1

# Query 2: Determine the father's party affiliation
SELECT ?fatherParty WHERE {
  ?person dbo:almaMater dbr_Massachusetts_Institute_of_Technology .
  ?person foaf:parent ?father .
  ?father dbo:partyAffiliation ?fatherParty .
  FILTER (lang(?fatherPartyLabel) = 'en')
} LIMIT 1

# Query 3: Identify Michele Pinto's party
SELECT ?michelePintoParty WHERE {
  dbr:Michele_Pinto dbo:partyAffiliation ?michelePintoParty .
  FILTER (lang(?michelePintoPartyLabel) = 'en')
} LIMIT 1

# Query 4: Identify the political party of Romano Prodi
SELECT ?prodiParty WHERE {
  ?person foaf:name ""Romano Prodi""@it ;
          dbo:birthName ""Romano Prodi""@it ;
          dbo:partyAffiliation ?prodiParty .
  FILTER (lang(?prodiPartyLabel) = 'en')
} LIMIT 1
```",9,11,10,3,3,3,3,71,0,0,2,0,0.0,0
281,55,test,"Give me the war of the profession, that is a military unit, of Heather Roy and war of the awardee of Knight Grand Cross of the Order of the Bath and entity in the birth place, that is a country, of Bob Heffron.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. <http://dbpedia.org/resource/Heather_Roy> <http://dbpedia.org/property/occupation> ?v2 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> ?v5 . <http://dbpedia.org/resource/Bob_Heffron> <http://dbpedia.org/ontology/birthPlace> ?v5 . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_the_Bath> . },"```sparql
# Query to find Heather Roy's profession and associated military unit or war
SELECT ?profession ?war WHERE {
  dbpedia:Heather_Roy dbo:occupation ?profession .
  OPTIONAL { ?profession dbo:relatedMilitaryUnitOrWar ?war . }
}

# Query to find individuals awarded Knight Grand Cross of the Order of the Bath and their related wars
SELECT ?person ?war WHERE {
  ?person dbo:award ""Knight Grand Cross of the Order of the Bath""@en .
  OPTIONAL { ?person dbo:relatedMilitaryUnitOrWar ?war . }
}

# Query to find Bob Heffron's birthplace country
SELECT ?country WHERE {
  dbpedia:Bob_Heffron dbo:birthPlace ?location .
  ?location geo:hasCountry ?country .
}
```",6,8,7,2,3,3,3,71,0,0,1,0,0.0,0
16,46,test,Give me the professional in the profession of Satomi Ishihara and spouse of the person born as the birth name of Ted McGinley.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v4 . ?v1 <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Satomi_Ishihara> <http://dbpedia.org/property/occupation> ?v4 . ?v1 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/property/birthName> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?professional WHERE {
  # Find Satomi Ishihara's profession
  ?satomi a dbo:Person;
          foaf:name ""Satomi Ishihara""@en.
  ?satomi dbo:profession ?profession.

  # Find Ted McGinley's spouse
  ?ted a dbo:Person;
       foaf:name ""Ted McGinley""@en;
       dbp:birthName ?birthName.
  ?ted dbo:spouse ?spouse.

  # Match the professional with the same profession as Satomi Ishihara and who is Ted McGinley's spouse
  ?professional a dbo:Person;
                foaf:name ?name;
                dbo:profession ?sameProfession;
                dbo:spouse ?ted.
  
  FILTER(?sameProfession = ?profession)
}
```",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
959,50,test,"Give me the manager of the team of Takashi Sekizuka and native of the residence, that is a country, of the leader, that is a politician, of 2010 Japanese House of Councillors election.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://dbpedia.org/property/residence> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/2010_Japanese_House_of_Councillors_election> <http://dbpedia.org/property/leader> ?v1 . ?v0 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Takashi_Sekizuka> . },"```sparql
# Step 1: Find Takashi Sekizuka's team
SELECT ?team WHERE {
  ?player foaf:name ""Takashi Sekizuka""@en .
  ?player dbo:playsFor ?team .
}

# Step 2: Find the manager of that team
SELECT ?manager WHERE {
  ?team dbo:coach ?manager .
}

# Step 3: Identify the leader of the 2010 Japanese House of Councillors election
SELECT ?leader WHERE {
  ?election dbo:electionDate ?date ;
            dbo:country dbr:Japan ;
            dbo:office dbr:House_of_Councillors_(Japan) .
  FILTER(YEAR(?date) = 2010)
  ?candidate dbo:positionHeld ?office ;
             dbo:candidateFor ?election .
  ?office dbo:leader ?leader .
}

# Step 4: Determine the native country of that leader
SELECT ?country WHERE {
  ?leader dbo:nationality ?nationality .
  ?nationality rdfs:label ?country .
  FILTER(LANG(?country) = ""en"")
}

# Step 5: Find a manager from that country who is associated with Takashi Sekizuka's team
SELECT DISTINCT ?manager WHERE {
  # Reuse the team and manager query
  ?team dbo:coach ?manager .
  
  # Filter by native country of the leader
  ?leader dbo:nationality ?nationality .
  ?nationality rdfs:label ?country .
  FILTER(LANG(?country) = ""en"")
  
  # Ensure the manager is from the same country as the leader
  ?manager dbo:nationality ?sameNationality .
  ?sameNationality rdfs:label ?sameCountry .
  FILTER(?sameCountry = ?country)
}
```",5,7,6,3,2,3,3,71,0,0,6,0,0.0,0
161,65,test,"Give me the commander in the force, that is an event, of Emilio Mola and military force of the force, that is a societal event and an event and a military conflict, of Francisco Franco and military force of the force, that is a societal event and a military conflict, of the predecessor of Indalecio Prieto.",SELECT ?result WHERE { ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v6 <http://dbpedia.org/ontology/commander> ?v0 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v4 . ?v0 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Indalecio_Prieto> . ?v4 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Franco> . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v6 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Emilio_Mola> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?eventEmilioMola ?eventFranciscoFranco ?predecessorIndalecioPrieto WHERE {
  # Event involving Emilio Mola as a commander
  ?eventEmilioMola dbo:commander dbr:Emilio_Mola .
  
  # Event involving Francisco Franco with societal and military conflict aspects
  ?eventFranciscoFranco dbo:militaryConflict ?conflict ;
                        dbo:societalEvent ?societalEvent .
  ?conflict dbo:participant dbr:Francisco_Franco .

  # Predecessor of Indalecio Prieto as Minister of War
  ?predecessorIndalecioPrieto dbo:officeHolderPosition dbr:Minister_of_War_of_Spain ;
                              dbo:endTime ?endTime .
  ?prietoTerm dbo:officeHolderPosition dbr:Minister_of_War_of_Spain ;
              dbo:startTime ?startTime .
  FILTER (?prietoTerm = dbr:Indalecio_Prieto && ?startTime > ?endTime)
}
```",7,13,8,3,3,3,3,71,0,0,32,0,0.0,0
492,69,test,"Give me the commander in the war, that is a military conflict and an event, of Frédéric-Georges Herr and person decedent at the work of the author of French Algeria and person decedent at the capital, that is a settlement, of the country of Khemis Miliana District.",SELECT ?result WHERE { <http://dbpedia.org/resource/French_Algeria> <http://dbpedia.org/property/author> ?v4 . <http://dbpedia.org/resource/Khemis_Miliana_District> <http://dbpedia.org/ontology/country> ?v1 . <http://dbpedia.org/resource/Frédéric-Georges_Herr> <http://dbpedia.org/ontology/battle> ?v7 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://dbpedia.org/ontology/capital> ?v2 . ?v7 <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/deathPlace> ?v3 . ?v3 <http://dbpedia.org/property/author> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  # Frédéric-Georges Herr and his military role
  dbr:Frédéric_Georges_Herr dbo:militaryConflict ?war .

  # Author of French Algeria
  ?author dbo:title ""French Algeria""@en .
  
  # Person decedent at the work of the author
  ?decedent1 dbo:deathPlace ?workLocation .
  ?workLocation dbo:locationOf ?author .

  # Capital of Khemis Miliana District and person decedent there
  dbr:Khemis_Miliana dbo:capital ?capital .
  ?decedent2 dbo:deathPlace ?capital .

  # Commander in the war
  ?commander dbo:militaryConflict ?war .
}
```",8,11,9,3,3,3,3,71,0,0,1,0,0.0,0
54,57,test,"Give me the child of Thinkhaya of Pagan and parent of the child of the parent of Thado Minsaw of Prome and predecessor of the child, that is an office holder and a royalty, of Thihapate of Mohnyin.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Thihapate_of_Mohnyin> . ?v5 <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/successor> ?v3 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> . <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Step 1: Thinkhaya of Pagan's child
  ?thinkhaya a dbo:Monarch ;
             foaf:name ""Thinkhaya""@en ;
             dbo:spouse ?spouse .
  ?child dbo:parent ?thinkhaya .

  # Step 2: Thado Minsaw of Prome
  ?thadoMinsaw a dbo:Monarch ;
               foaf:name ""Thado Minsaw""@en ;
               dbo:parent ?parentOfThado .
  ?sibling dbo:parent ?parentOfThado .

  # Step 3: Thihapate of Mohnyin
  ?thihapate a dbo:Monarch ;
             foaf:name ""Thihapate""@en ;
             dbo:child ?childOfThihapate .
  ?predecessor dbo:succ ?childOfThihapate .

  # Step 4: Find the person who matches all criteria
  ?person dbo:parent ?sibling ;
          dbo:successor ?predecessor ;
          a dbo:Monarch, dbo:OfficeHolder .

}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
767,67,test,"Give me the entity in Baden-Württemberg and reference to the alter ego of the persona, that is a fictional character, of Matthew Burland and alma mater of the administration of the reference to George Kilbon Nash.","SELECT ?result WHERE { ?v6 <http://dbpedia.org/property/governor> ?v0 . ?v0 <http://xmlns.com/foaf/0.1/name> ""George Kilbon Nash""@en . ?v6 <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . ?v1 <http://dbpedia.org/property/alterEgo> ?v3 . ?v1 <http://dbpedia.org/property/alterEgo> ""Matthew Burland""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?result <http://dbpedia.org/ontology/state> <http://dbpedia.org/resource/Baden-Württemberg> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entityInBadenWurttemberg WHERE {
  # Hypothetical fictional character associated with Matthew Burland
  ?fictionalCharacter dbo:creator dbr:Matthew_Burland .
  
  # Hypothetical alma mater of George Kilbon Nash
  ?almaMater dbo:administrator dbr:George_Kilbon_Nash .

  # Entity in Baden-Württemberg related to both the fictional character and alma mater
  ?entityInBadenWurttemberg dbo:location dbr:Baden-Württemberg .
  
  # Linking conditions (hypothetical)
  ?fictionalCharacter dbo:relatedEntity ?entityInBadenWurttemberg .
  ?almaMater dbo:relatedEntity ?entityInBadenWurttemberg .
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
492,55,test,"Give me the commander in the war, that is a military conflict and an event, of Frédéric-Georges Herr and person decedent at the work of US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite and person decedent at the capital, that is a settlement, of Algeria.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . <http://dbpedia.org/resource/Algeria> <http://dbpedia.org/ontology/capital> ?v2 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/property/author> ""US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite""@en . ?v5 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Frédéric-Georges_Herr> <http://dbpedia.org/ontology/battle> ?v5 . ?result <http://dbpedia.org/ontology/deathPlace> ?v3 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  # Find military conflict where Frédéric-Georges Herr was a commander
  ?conflict dbo:commander dbr:Frédéric-Georges_Herr .
  
  # Find Joseph C. Satterthwaite's place of death related to his role
  ?satterthwaite dbo:deathPlace ?place ;
                 rdfs:label ""Joseph C. Satterthwaite""@en .

  # Find the capital of Algeria and a notable person who died there
  dbr:Algiers dbo:capitalOf dbr:Algeria .
  ?person dbo:deathPlace dbr:Algiers ;
          rdfs:label ?name .

  FILTER regex(?place, ""Assistant Secretary of State for African Affairs"", ""i"")
  
  # Ensure the conflict is an event where both died
  ?conflict dbo:eventParticipant ?satterthwaite .
  ?conflict dbo:eventParticipant ?person .
  
  # Return the commander of the conflict
  ?conflict dbo:commander ?commander .
}
```",6,9,7,2,3,3,3,71,0,0,1,0,0.0,0
360,24,test,"Give me the reference to the author of Blinded by the Light and native of the death place, that is a settlement, of Winnie Madikizela-Mandela.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?result <http://xmlns.com/foaf/0.1/name> ?v0 . <http://dbpedia.org/resource/Blinded_by_the_Light> <http://dbpedia.org/property/author> ?v0 . <http://dbpedia.org/resource/Winnie_Madikizela-Mandela> <http://dbpedia.org/ontology/deathPlace> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
SELECT ?author WHERE {
  ?song dbo:lyricsAuthor ?author .
  ?song rdfs:label ""Blinded by the Light""@en .
  FILTER NOT EXISTS { ?song owl:sameAs ?otherSong . }
}

UNION

SELECT ?native WHERE {
  ?person dbo:birthPlace ?place .
  ?place rdf:type dbo:Settlement .
  ?person foaf:name ""Bruce Springsteen""@en .
  
  OPTIONAL {
    ?winnie dbo:deathPlace ?place .
    ?winnie foaf:name ""Winnie Madikizela-Mandela""@en .
  }
}
```",4,5,5,2,2,2,3,28,0,0,1,0,0.0,0
959,39,test,"Give me the native of Japan and manager of the team of the manager, that is a sports manager, of 1998 Kashima Antlers season.",SELECT ?result WHERE { <http://dbpedia.org/resource/1998_Kashima_Antlers_season> <http://dbpedia.org/ontology/manager> ?v2 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Japan> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v0 <http://dbpedia.org/ontology/manager> ?result . ?v0 <http://dbpedia.org/ontology/manager> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?manager ?nationality WHERE {
  ?team dbo:manager ?manager .
  ?manager dbo:sportsManager true .
  ?manager dbo:nationality ?nationality .

  FILTER (CONTAINS(LCASE(STR(?team)), ""kashima antlers""))
  FILTER (YEAR(?season) = 1998)
}
```",4,5,5,3,2,3,3,71,0,0,6,0,0.0,0
339,19,test,Give me the child of the child of Christian IX of Denmark and father of the child of the parent of Princess Olga of Greece and Denmark.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Princess_Olga_of_Greece_and_Denmark> . ?v4 <http://dbpedia.org/property/father> ?result . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v0 <http://dbpedia.org/ontology/child> ?v4 . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Christian_IX_of_Denmark> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Step 1: Find children of Christian IX
  ?child dbo:spouse* dbr:Christian_IX_of_Denmark .
  
  # Step 2: Find child of Frederick VIII (one of Christian IX's children)
  ?grandchild dbo:parent dbr:Frederick_VIII_of_Denmark .

  # Step 3: Identify parent of Princess Olga
  ?olgaParent dbo:spouse* dbr:Princess_Olga_of_Greece_and_Denmark .
  
  # Step 4: Find child of George I (parent of Princess Olga)
  ?constantineI dbo:parent ?olgaParent .

  # Step 5: Identify father of Constantine I
  ?georgeIFather dbo:child ?constantineI .

  # Step 6: Find child of Princess Alexandrine (child of Frederick VIII)
  ?haraldIX dbo:parent dbr:Princess_Alexandrine_of_Denmark .

  # Step 7: Identify child of Harald IX
  ?margretheII dbo:parent ?haraldIX .

  # Step 8: Find person who is both a descendant of Christian IX and an ancestor of Constantine I
  FILTER(?georgeIFather = ?child)
}
```",5,5,6,3,2,3,2,20,0,0,1,0,0.0,0
55,25,test,"Give me the band member of the band member, that is a band and a group, of San Francisco Symphony and band of Newsted and band member of the producer, that is a band, of Used to Love Her.",SELECT ?result WHERE { <http://dbpedia.org/resource/Used_to_Love_Her> <http://dbpedia.org/ontology/producer> ?v4 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/San_Francisco_Symphony> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. <http://dbpedia.org/resource/Newsted> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandMember ?band ?group ?producerBand
WHERE {
  # Step 1: Identify a band member of the San Francisco Symphony
  ?symphonyMember dbo:memberOf dbr:San_Francisco_Symphony .
  
  # Step 2: Find bands or groups associated with this person
  OPTIONAL { ?symphonyMember dbo:bandMemberOf ?band . }
  OPTIONAL { ?symphonyMember dbo:groupMemberOf ?group . }

  # Step 3: Identify Newsted's band (Metallica)
  dbr:Metallica dbo:bandMember dbr:Jason_Newsted .

  # Step 4: Find the producer of ""Used to Love Her""
  ?song dbo:producer ?producer .
  FILTER(?song = dbr:Used_to_Love_Her)

  # Step 5: Identify bands associated with these producers
  OPTIONAL { ?producer dbo:bandMemberOf ?producerBand . }

  # Step 6: Combine information to find a common link
  ?bandMember dbo:bandMemberOf ?band .
  ?bandMember dbo:bandMemberOf ?producerBand .

  FILTER(?band != dbr:Metallica) # Exclude Metallica itself
}
```",5,8,6,2,3,2,3,28,0,0,1,0,0.0,0
547,58,test,Give me the resting place of the actor of Enemy at the Door and resting place of James Burton (Egyptologist) and resting place of the awardee of the award of Gerald Graham.,SELECT ?result WHERE { <http://dbpedia.org/resource/Enemy_at_the_Door> <http://dbpedia.org/property/starring> ?v5 . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/James_Burton_(Egyptologist)> <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Gerald_Graham> <http://dbpedia.org/property/awards> ?v1 . ?v2 <http://dbpedia.org/property/awards> ?v1 . ?v5 <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
# Query for the actor of ""Enemy at the Door""
SELECT ?actor ?deathPlace WHERE {
  ?movie dcterms:title ""Enemy at the Door""@en .
  ?movie dbo:starring ?actor .
  OPTIONAL { ?actor dbo:deathPlace ?deathPlace . }
}

UNION

# Query for James Burton (Egyptologist)
SELECT ?person ?deathPlace WHERE {
  ?person foaf:name ""James Burton"" .
  ?person dbo:occupation dbp:Egyptologist .
  OPTIONAL { ?person dbo:deathPlace ?deathPlace . }
}

UNION

# Query for the awardee of Gerald Graham's award
SELECT ?awardee ?deathPlace WHERE {
  ?award dbo:recipient ?awardee ;
         dbo:givenBy ""Gerald Graham""@en .
  OPTIONAL { ?awardee dbo:deathPlace ?deathPlace . }
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
488,59,test,"Give me the birth place of the commander in the war, that is a military conflict and an event and a societal event, of Saitō Hajime and death place of the father, that is a politician, of the father, that is an office holder, of Matsudaira Tadamasa.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/commander> ?v2 . <http://dbpedia.org/resource/Matsudaira_Tadamasa> <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Saitō_Hajime> <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v5 <http://dbpedia.org/ontology/deathPlace> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/property/father> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
# Query to find the birthplace of Saitō Hajime, who was a commander in the Boshin War
SELECT ?birthPlace WHERE {
  ?saitoHajime dbo:birthPlace ?birthPlace .
  ?saitoHajime dbo:occupation ""Commander""@en .
  ?boshinWar dbo:commander ?saitoHajime ;
             a dbo:MilitaryConflict ;
             a dbo:Event ;
             a dbo:SocietalEvent .
}

# Query to find the death place of Matsudaira Katamori, father of Matsudaira Tadamasa
SELECT ?deathPlace WHERE {
  ?matsudairaKatamori dbo:deathPlace ?deathPlace .
  ?matsudairaKatamori dbo:child ?matsudairaTadamasa ;
                      a dbo:Politician ;
                      a dbo:OfficeHolder .
}
```",6,11,7,3,2,3,3,71,0,0,1,0,0.0,0
528,48,test,"Give me the force of the person born as Narciso Campero Leyes and war of the military force of the entity, that is a societal event, in Chile.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/property/birthName> ""Narciso Campero Leyes""@en . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Chile> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?force ?war WHERE {
  # Find Andrés de Santa Cruz by his birth name Narciso Campero Leyes
  ?person dbo:birthName ""Narciso Campero Leyes""@en .
  
  # Ensure the person is Andrés de Santa Cruz
  ?person rdfs:label ""Andrés de Santa Cruz""@en .

  # Find military force associated with Andrés de Santa Cruz
  ?person dbo:militaryForce ?force .

  # Find war involving this military force that was a societal event in Chile
  ?war dbo:participated ?force ;
       dbo:location dbr:Chile ;
       rdf:type dbo:SocietalEvent .
}
```",5,6,6,3,2,3,3,71,0,0,4,0,0.0,0
488,51,test,"Give me the death place of the father, that is a politician, of Yūki Hideyasu and administration of the father of the spouse, that is a royalty, of Tokugawa Masako.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Tokugawa_Masako> . <http://dbpedia.org/resource/Yūki_Hideyasu> <http://dbpedia.org/property/father> ?v4 . ?v4 <http://dbpedia.org/ontology/deathPlace> ?result . ?v1 <http://dbpedia.org/property/father> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/property/leader> ?v2 . },"```sparql
# Query to find the death place of Yūki Hideyasu's father, Yūki Ujitomo
SELECT ?deathPlace WHERE {
  ?yukiUjitomo dbo:birthName ""Yūki Ujitomo""@ja .
  ?yukiUjitomo dbo:deathPlace ?deathPlace .
}

# Query to find the administration of Tokugawa Iesada, father of Tokugawa Masako's spouse
SELECT ?administration WHERE {
  ?tokugawaIesada dbo:birthName ""Tokugawa Iesada""@ja .
  ?tokugawaIesada dbo:positionHeld ?shogunate .
  ?shogunate dbo:name ?administration .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
427,57,test,"Give me the reference to Partito Popolare Italiano and party of the father of the alumnus of Massachusetts Institute of Technology and party of the person born, that is an office holder and a politician, as Romano Antonio Prodi.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/party> ?result . ?v3 <http://dbpedia.org/property/birthName> ""Romano Antonio Prodi""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://xmlns.com/foaf/0.1/name> ""Partito Popolare Italiano""@en . ?v5 <http://dbpedia.org/ontology/party> ?result . ?v0 <http://dbpedia.org/property/father> ?v5 . ?v0 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Massachusetts_Institute_of_Technology> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?prodiParty ?alumnusFatherParty WHERE {
  # Romano Prodi's political party
  OPTIONAL { 
    dbr:Romano_Prodi dbo:partyAffiliation ?prodiParty .
  }

  # Find an MIT alumnus with a known father's political affiliation
  ?alumnus dbo:almaMater dbr:Massachusetts_Institute_of_Technology ;
           dbo:father ?father .

  OPTIONAL {
    ?father dbo:partyAffiliation ?alumnusFatherParty .
  }

  # Check for connection to Partito Popolare Italiano
  FILTER (
    EXISTS { ?prodiParty rdfs:label ""Partito Popolare Italiano""@en }
    || EXISTS { ?alumnusFatherParty rdfs:label ""Partito Popolare Italiano""@en }
  )
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
498,8,test,"Give me the band of the member, that is an artist, of Mortician (band) and band of Malevolent Creation.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Mortician_(band)> <http://dbpedia.org/ontology/bandMember> ?v0 . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Malevolent_Creation> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
# Step 1: Get members of Mortician
SELECT ?member WHERE {
  wd:Q1234568 dbo:bandMember ?member .
}

UNION

# Step 2: Get members of Malevolent Creation
SELECT ?member WHERE {
  wd:Q6543210 dbo:bandMember ?member .
}

# Step 3: Find common member who is an artist
FILTER EXISTS { ?commonMember dbo:occupation wd:Q33999 } # Q33999 represents 'artist'

# Step 4: Get the band of this artist
SELECT DISTINCT ?band WHERE {
  ?commonMember dbo:bandMember ?band .
}
```

Note: Replace `wd:Q1234568` and `wd:Q6543210` with the actual DBpedia identifiers for Mortician and Malevolent Creation, respectively. The identifier `wd:Q33999` is used as a placeholder for 'artist' and should be replaced with the correct DBpedia resource if different.",3,4,4,2,2,2,2,9,0,0,1,0,0.0,0
485,23,test,"Give me the entity in the region, that is a country, of Western European Time and entity in the birth place, that is a region, of Joseph Whitaker (naturalist).",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Western_European_Time> . ?result <http://dbpedia.org/ontology/country> ?v1 . <http://dbpedia.org/resource/Joseph_Whitaker_(naturalist)> <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?result <http://dbpedia.org/ontology/country> ?v2 . },"```sparql
# Query 1: Find a country in the region of Western European Time
SELECT ?country WHERE {
  ?country rdf:type dbo:Country .
  ?country dbo:timeZone dbr:Western_European_Time .
}

UNION

# Query 2: Find the birthplace region of Joseph Whitaker (naturalist)
SELECT ?birthPlaceRegion WHERE {
  ?whitaker dbo:occupation dbr:Naturalist ;
            foaf:bornIn ?birthPlace .
  ?birthPlace rdf:type dbo:AdministrativeTerritory ;
              rdfs:label ?birthPlaceLabel .
  FILTER(CONTAINS(LCASE(?birthPlaceLabel), ""region""))
}
```",4,6,5,2,2,2,3,28,0,0,357,0,0.0,0
547,30,test,Give me the resting place of James Burton (Egyptologist) and resting place of Simon Cadell and resting place of the awardee of Knight Grand Cross of the Order of St Michael and St George.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/James_Burton_(Egyptologist)> <http://dbpedia.org/ontology/restingPlace> ?result . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_St_Michael_and_St_George> . <http://dbpedia.org/resource/Simon_Cadell> <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
# Query for James Burton (Egyptologist)
SELECT ?restingPlace WHERE {
  ?person dbo:birthName ""James Burton""@en .
  ?person dbo:occupation dbp:Egyptologist .
  OPTIONAL { ?person dbo:deathPlace ?restingPlace . }
  FILTER NOT EXISTS { ?person dbo:deathPlace ?place . FILTER(?place != ?restingPlace) }
}

UNION

# Query for Simon Cadell
SELECT ?restingPlace WHERE {
  ?person foaf:name ""Simon Cadell""@en .
  OPTIONAL { ?person dbo:deathPlace ?restingPlace . }
  FILTER NOT EXISTS { ?person dbo:deathPlace ?place . FILTER(?place != ?restingPlace) }
}

UNION

# Query for a notable Knight Grand Cross of the Order of St Michael and St George
SELECT ?restingPlace WHERE {
  ?person dbo:award dbp:KnightGrandCrossOfTheOrderOfStMichaelAndStGeorge .
  OPTIONAL { ?person dbo:deathPlace ?restingPlace . }
  FILTER NOT EXISTS { ?person dbo:deathPlace ?place . FILTER(?place != ?restingPlace) }
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
492,40,test,Give me the person decedent at the work of the author of French Algeria and person decedent at Algiers and commander in Franco-Hova Wars.,SELECT ?result WHERE { <http://dbpedia.org/resource/Franco-Hova_Wars> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . <http://dbpedia.org/resource/French_Algeria> <http://dbpedia.org/property/author> ?v2 . ?v1 <http://dbpedia.org/property/author> ?v2 . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Algiers> . },"```sparql
# Query for the author of ""French Algeria"" and their decedent
SELECT ?author ?decedent WHERE {
  ?work dcterms:title ""French Algeria""@en .
  ?work dbo:author ?author .
  ?author db:decedent ?decedent .
}

UNION

# Query for a person associated with Algiers and their decedent
SELECT ?person ?decedent WHERE {
  ?person dbo:placeOfBirth ?algiers .
  FILTER (CONTAINS(LCASE(STR(?algiers)), ""algiers""))
  ?person db:decedent ?decedent .
}

UNION

# Query for a commander in the Franco-Hova Wars and their decedent
SELECT ?commander ?decedent WHERE {
  ?event dbo:agent ?commander .
  FILTER (CONTAINS(LCASE(STR(?event)), ""franco-hova wars""))
  ?commander db:decedent ?decedent .
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
54,66,test,"Give me the predecessor of the child, that is an office holder and a royalty, of the reference to Thihapate of Mohnyin and parent of the child of Narapati I of Ava and child of the father of Soe Min Wimala Dewi.","SELECT ?result WHERE { ?v6 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Narapati_I_of_Ava> . ?v2 <http://dbpedia.org/property/father> ?v1 . ?v6 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Soe_Min_Wimala_Dewi> <http://dbpedia.org/property/father> ?v3 . ?v3 <http://dbpedia.org/ontology/child> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://xmlns.com/foaf/0.1/name> ""Thihapate of Mohnyin""@en . ?result <http://dbpedia.org/ontology/successor> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?predecessor WHERE {
  # Thihapate of Mohnyin's child who is an office holder and royalty
  ?thihapateChild dbo:parent dbr:Thihapate_of_Mohnyin ;
                  a dbo:Monarch ;
                  dbo:officeHolder true .

  # Narapati I of Ava's child
  ?narapatiIChild dbo:parent dbr:Narapati_I_of_Ava ;
                  a dbo:Person .

  # Soe Min Wimala Dewi's father
  ?soeminWimalaDewi dbo:child ?soeminWimalaDewiFather .

  # Find the predecessor of Thihapate's child
  ?predecessor dbo:succeededBy ?thihapateChild ;
               a dbo:Monarch .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
92,50,test,"Give me the associated musical artist of the person born, that is an artist, as the actor of Return to Nuke 'Em High Volume 1 and band of the person born as Joseph Michael Furney.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/bandMember> ?v3 . ?v3 <http://dbpedia.org/property/birthName> ""Joseph Michael Furney""@en . ?v4 <http://dbpedia.org/property/birthName> ?v0 . <http://dbpedia.org/resource/Return_to_Nuke_'Em_High_Volume_1> <http://dbpedia.org/property/starring> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?musicalArtist ?band WHERE {
  # Step 1 & 2: Find the actor of ""Return to Nuke 'Em High Volume 1"" who is also a musical artist
  ?movie dbo:starring ?actor .
  FILTER(STRSTARTS(STR(?movie), STR(dbr:Return_to_Nuke_'Em_High_Volume_1)))
  
  # Check if the actor is a musical artist
  OPTIONAL { ?actor dbo:musicalArtist ?musicalArtist . }
  
  # Step 3: Find Joseph Michael Furney's band
  dbr:Joseph_Michael_Furney dbo:band ?band .
  
  # Step 4: Check for association between the musical artist and the band
  OPTIONAL { ?musicalArtist dbo:associatedBand ?band . }
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
54,27,test,"Give me the predecessor of the child, that is an office holder and a royalty, of the reference to Thihapate of Mohnyin.","SELECT ?result WHERE { ?v1 <http://xmlns.com/foaf/0.1/name> ""Thihapate of Mohnyin""@en . ?v2 <http://dbpedia.org/property/father> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/successor> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?predecessor WHERE {
  # Step 1: Identify Thihapate of Mohnyin
  ?thihapate a dbo:Person ;
             rdfs:label ""Thihapate of Mohnyin""@en .

  # Step 2: Find the child who is both an office holder and royalty
  ?child dbo:parent ?thihapate ;
         a dbo:Monarch, dbo:OfficeHolder ;
         rdfs:label ?childLabel .

  # Step 3: Find the predecessor of this child in their role as an office holder
  ?officeHolderPosition dbo:positionHeldBy ?child .
  ?predecessor dbo:positionHeldBy ?previousChild .
  ?previousChild dbo:parent ?thihapate ;
                 a dbo:Monarch, dbo:OfficeHolder .

  # Ensure the predecessor is distinct from the child
  FILTER(?previousChild != ?child)
}
```",3,5,4,3,1,3,3,71,0,0,1,0,0.0,0
314,25,test,Give me the awardee of the award of Sergei Makovetsky and commander in Spanish Civil War and person deceased at the headquarter of House of Sombrerete.,SELECT ?result WHERE { <http://dbpedia.org/resource/Spanish_Civil_War> <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Sergei_Makovetsky> <http://dbpedia.org/property/awards> ?v4 . ?result <http://dbpedia.org/ontology/restingPlace> ?v3 . ?result <http://dbpedia.org/property/awards> ?v4 . <http://dbpedia.org/resource/House_of_Sombrerete> <http://dbpedia.org/ontology/location> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person WHERE {
  # Find awardees of awards received by Sergei Makovetsky
  ?award dbo:recipient dbr:Sergei_Makovetsky .
  ?award dbo:recipient ?person .

  # Ensure the person was a commander in the Spanish Civil War
  ?person dbo:occupation dbr:Commander_in_the_Spanish_Civil_War .

  # Check if the person died at the headquarters of House of Sombrerete
  OPTIONAL { 
    ?deathEvent dbo:place dbr:House_of_Sombrerete_Headquarters .
    ?deathEvent dbo:agent ?person .
  }
}
```",5,5,6,2,3,2,3,28,0,0,1,0,0.0,0
767,60,test,"Give me the entity in the administration, that is a settlement, of the writer of Where It's At (Dustin Lynch album) and reference to the alter ego of the persona, that is a fictional character, of Matthew Burland.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/alterEgo> ""Matthew Burland""@en . ?v2 <http://dbpedia.org/property/leaderParty> ?v3 . <http://dbpedia.org/resource/Where_It's_At_(Dustin_Lynch_album)> <http://dbpedia.org/property/writer> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://xmlns.com/foaf/0.1/name> ?v1 . ?v0 <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://dbpedia.org/ontology/state> ?v2 . }","```sparql
# Step 1: Find the writer(s) of songs in Dustin Lynch's album ""Where It's At""
SELECT ?songwriter WHERE {
  ?album dct:title ""Where It's At""@en .
  ?album dbo:artist dbr:Dustin_Lynch .
  ?track dbo:composer ?songwriter .
  ?track dbo:partOfAlbum ?album .
}

# Step 2: Find the administration and settlement related to the songwriter
SELECT DISTINCT ?settlement WHERE {
  ?person foaf:name ?songwriterName .
  FILTER(?songwriterName IN (VALUES ?songwriterName) {<result_from_step_1>})
  OPTIONAL { ?person dbo:residence ?settlement . }
  ?settlement a dbo:Settlement .
}

# Step 3: Find Matthew Burland's alter ego
SELECT DISTINCT ?alterEgo WHERE {
  ?person foaf:name ""Matthew Burland""@en .
  ?person dbo:fictionalCharacter ?alterEgo .
}
```

Note: The above SPARQL queries are structured to be executed sequentially. The result from the first query should be used as input for the second query, and similarly, the fictional character found in the third query can be cross-referenced with any additional information needed.",6,8,7,3,2,3,3,71,0,0,8,0,0.0,0
547,59,test,Give me the resting place of the child of the child of William Haliburton and resting place of the actor of the show with Emily Richard.,"SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> ""William Haliburton""@en . ?v0 <http://dbpedia.org/property/starring> ?v5 . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . ?v0 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emily_Richard> . ?v5 <http://dbpedia.org/ontology/restingPlace> ?result . ?v3 <http://dbpedia.org/ontology/child> ?v2 . }","```sparql
# Query for the resting place of the child of the child of William Haliburton
SELECT ?grandchild ?restingPlace WHERE {
  ?williamHaliburton dbo:spouse ?spouse .
  ?williamHaliburton foaf:name ""William Haliburton""@en .
  ?child dbo:parent ?williamHaliburton ;
         dbo:parent ?otherParent .
  ?grandchild dbo:parent ?child ;
              dbo:parent ?anotherParent .
  OPTIONAL { ?grandchild dbo:deathPlace ?restingPlace }
} LIMIT 1

# Query for the resting place of an actor from a show with Emily Richard
SELECT ?actor ?show ?restingPlace WHERE {
  ?emilyRichard foaf:name ""Emily Richard""@en ;
                dbo:spouse ?partner .
  ?show dbo:starring ?emilyRichard .
  ?actor dbo:starring ?show .
  OPTIONAL { ?actor dbo:deathPlace ?restingPlace }
} LIMIT 1
```",6,6,7,3,2,3,3,71,0,0,1,0,0.0,0
251,27,test,"Give me the death place of the author of The Twelve Abbots of Challant and administration of the ruling party, that is a political party and an organisation, in Sicily and location of Battle of Marengo.",SELECT ?result WHERE { <http://dbpedia.org/resource/Sicily> <http://dbpedia.org/property/leaderParty> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/The_Twelve_Abbots_of_Challant> <http://dbpedia.org/property/author> ?v0 . <http://dbpedia.org/resource/Battle_of_Marengo> <http://dbpedia.org/ontology/place> ?result . ?result <http://dbpedia.org/property/leaderParty> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. },"```sparql
# Query for the death place of Bonvesin de la Riva
SELECT ?deathPlace WHERE {
  ?author dbo:birthName ""Bonvesin de la Riva""@en .
  ?author dbo:deathPlace ?deathPlace .
}

UNION

# Query for the administration location of the ruling party in Sicily
SELECT ?administrationLocation WHERE {
  ?party dbo:country dbr:Sicily ;
         dbo:politicalOrganizationType dbr:Political_party .
  ?party dbo:headquarters ?administrationLocation .
  FILTER EXISTS { ?party dbo:currentLeader ?leader . }
}

UNION

# Query for the location of the Battle of Marengo
SELECT ?location WHERE {
  ?battle dbo:name ""Battle of Marengo""@en ;
          dbo:place ?location .
}
```",5,7,6,2,3,2,3,28,0,0,1,0,0.0,0
747,20,test,Give me the person born on 1985-04-29 and band of the writer of Apollo (Hardwell song).,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthDate> ""1985-04-29""^^<http://www.w3.org/2001/XMLSchema#date> . <http://dbpedia.org/resource/Apollo_(Hardwell_song)> <http://dbpedia.org/property/writer> ?v2 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
# Step 1: Find the person born on 1985-04-29
SELECT ?person WHERE {
  ?person dbo:birthday ""1985-04-29""^^xsd:date .
}

# Step 2: Identify the writer of the song ""Apollo"" by Hardwell and their band
SELECT ?writer ?band WHERE {
  # Assuming there is a DBpedia entry for the song ""Apollo"" by Hardwell
  dbp:Apollo dbo:lyricsBy ?writer .
  
  OPTIONAL {
    ?writer dbo:memberOfBand ?band .
  }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
712,17,test,Give me the capital of South Russia (1919–1920) and resting place of the awardee of the show of Soviet Union.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/awards> ?v0 . ?v3 <http://dbpedia.org/ontology/restingPlace> ?result . ?v0 <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/Soviet_Union> . <http://dbpedia.org/resource/South_Russia_(1919–1920)> <http://dbpedia.org/ontology/capital> ?result . },"```sparql
# Query to find information about Ekaterinodar (Krasnodar) as the capital of South Russia during 1919-1920
SELECT ?city ?capitalLabel WHERE {
  ?city dbo:officialName ""Ekaterinodar""@en .
  OPTIONAL { ?city dbo:capitalOf ?region . }
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}

# Query to find resting places of notable Soviet awardees
SELECT ?person ?restingPlaceLabel WHERE {
  ?person dbo:award ""Hero of the Soviet Union"" .
  OPTIONAL { ?person dbo:placeOfBurial ?restingPlace . }
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
```",4,4,5,3,2,3,2,20,0,0,1,0,0.0,0
16,56,test,Give me the person born as the birth name of the alumnus of Ohio State University and spouse of the person born as Ted Martin McGinley and professional in Actress.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://dbpedia.org/property/birthName> ""Ted Martin McGinley""@en . ?result <http://dbpedia.org/property/occupation> ""Actress""@en . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Ohio_State_University> . ?result <http://dbpedia.org/property/birthName> ?v1 . }","```sparql
# Step 1: Find Ted Martin McGinley's spouse
SELECT ?spouse WHERE {
  dbpedia:Ted_McGinley dbo:spouse ?spouse .
}

# Assuming we found the spouse, let's say it is ""PersonA""

# Step 2: Get the birth name of PersonA
SELECT ?birthName WHERE {
  <http://dbpedia.org/resource/PersonA> foaf:name ?birthName .
}

# Assuming the birth name is ""BirthNameX""

# Step 3: Check if BirthNameX attended Ohio State University and is an actress
SELECT ?person WHERE {
  ?person foaf:name ""BirthNameX""@en .
  ?person dbo:almaMater <http://dbpedia.org/resource/Ohio_State_University> .
  ?person rdf:type dbpedia:Actress .
}

# Step 4: Find the person born with that birth name
SELECT ?person WHERE {
  ?person foaf:name ""BirthNameX""@en .
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
959,54,test,"Give me the member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of Eiji Ōtsuka and native of the residence, that is a country, of the leader, that is a politician, of 2010 Japanese House of Councillors election and manager of 2013 Júbilo Iwata season.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?v1 <http://dbpedia.org/property/residence> ?v4 . ?result <http://dbpedia.org/ontology/birthPlace> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. <http://dbpedia.org/resource/Eiji_Ōtsuka> <http://dbpedia.org/ontology/almaMater> ?v2 . ?result <http://dbpedia.org/ontology/team> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/2013_Júbilo_Iwata_season> <http://dbpedia.org/ontology/manager> ?result . <http://dbpedia.org/resource/2010_Japanese_House_of_Councillors_election> <http://dbpedia.org/property/leader> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?member WHERE {
    # Step 1: Find Eiji Ōtsuka's alma mater
    dbr:Eiji_Ōtsuka dbo:almaMater ?university .
    
    # Step 2: Ensure the university is Japanese and fits the criteria
    ?university a dbo:University ;
               dbo:country dbr:Japan ;
               rdf:type dbo:Organisation, dbo:EducationalInstitution .

    # Step 3: Find the leader of the 2010 Japanese House of Councillors election
    ?electionEvent dbo:leader ?politician .
    ?electionEvent rdfs:label ""2010 Japanese House of Councillors election""@en .
    
    # Step 4: Determine the residence country of this politician
    ?politician dbo:nationality dbr:Japan ;
               dbo:residenceCountry ?country .

    # Step 5: Find the manager of Júbilo Iwata for the 2013 season
    ?team dbo:manager ?manager .
    ?team rdfs:label ""Júbilo Iwata""@en .
    ?season dbo:hasParticipant ?team ;
            dbo:year ""2013""^^xsd:gYear .

    # Step 6: Find a common member (alumnus) of the university
    ?member dbo:almaMater ?university ;
            dbo:nationality dbr:Japan .
    
    FILTER (?manager = ?member)
}
```",6,12,7,3,3,3,3,71,0,0,1,0,0.0,0
801,47,test,"Give me the producer of the work, that is a musical work and a song and a work, of the professional, that is a musical artist, in Rapper and professional in the alter ego of The Shadow.","SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?result <http://dbpedia.org/property/occupation> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/property/occupation> ""Rapper""@en . ?v4 <http://dbpedia.org/property/writer> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v4 <http://dbpedia.org/ontology/producer> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?artist ?work ?producer WHERE {
  ?artist a dbo:MusicalArtist ;
          foaf:name ?name ;
          dbo:genre ?genre .
  
  FILTER (?genre = dbo:Rapper) .

  ?alias foaf:alterName ""The Shadow"" .
  ?artist foaf:alias ?alias .

  ?work dbo:performer ?artist ;
        a dbo:Songs .

  ?work dbo:producer ?producer .
}
```",5,9,6,3,2,3,3,71,0,0,473,0,0.0,0
488,70,test,"Give me the administration of the father of the spouse, that is a royalty, of Tokugawa Masako and birth place of the commander in Boshin War and death place of the father, that is a politician, of the father, that is an office holder, of Matsudaira Tadamasa.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Tokugawa_Masako> . ?v1 <http://dbpedia.org/property/father> ?v3 . ?v7 <http://dbpedia.org/ontology/deathPlace> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Boshin_War> <http://dbpedia.org/ontology/commander> ?v4 . ?v4 <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/property/leader> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/father> ?v7 . <http://dbpedia.org/resource/Matsudaira_Tadamasa> <http://dbpedia.org/property/father> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?administration ?birthPlace ?deathPlace WHERE {
  # Tokugawa Masako's spouse
  ?spouse a dbo:Spouse; 
          dbo:spouse dbr:Tokugawa_Masako.
  
  # Father of Tokugawa Masako's spouse (royalty)
  ?father dbo:child ?spouse;
          rdf:type dbo:Monarch;
          dbo:administrativeOffice ?administration.

  # Commander in the Boshin War
  ?commander a dbo:MilitaryPerson; 
             dbo:militaryConflict dbr:Boshin_War.
  
  # Birthplace of the commander
  ?birthPlace dbo:birthPlace ?commander.

  # Matsudaira Tadamasa's father (office holder)
  ?tadamasaFather dbo:child dbr:Matsudaira_Tadamasa;
                  rdf:type dbo:OfficeHolder.

  # Politician father of Matsudaira Tadamasa's father
  ?politicianFather dbo:child ?tadamasaFather;
                    rdf:type dbo:Politician.
  
  # Death place of the politician
  ?deathPlace dbo:deathPlace ?politicianFather.
}
```",8,11,9,3,3,3,3,71,0,0,1,0,0.0,0
285,16,test,Give me the parent of the child of Tina Onassis Niarchos and spouse of the professional in .,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v3 . ?v3 <http://dbpedia.org/property/occupation> """"@en . ?v2 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Tina_Onassis_Niarchos> <http://dbpedia.org/ontology/child> ?v2 . }","```sparql
SELECT ?parent ?spouse WHERE {
  wd:Q1234567 wdt:P40 wd:Q7890123 . # Tina Onassis Niarchos (Q1234567) has child Athina Onassis (Q7890123)
  wd:Q7890123 wdt:P22 ?parent .    # Athina Onassis's parent
  wd:Q1234567 wdt:P26 ?spouse .    # Tina Onassis Niarchos's spouse
}
```

Note: Replace `wd:Q1234567` with the actual DBpedia ID for Tina Onassis Niarchos and `wd:Q7890123` with the ID for Athina Onassis.",4,4,5,2,2,3,2,20,0,0,2,0,0.0,0
659,70,test,"Give me the military force of the force, that is a societal event and an event and a military conflict, of the reference to Rutger Jan Schimmelpenninck and commander in the force of Arthur Wellesley, 1st Duke of Wellington and commander in the war, that is an event and a military conflict, of the figure known, that is a military unit and an organisation, as 'Polish Horse'.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/nickname> ""'Polish Horse'""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v0 <http://dbpedia.org/ontology/battle> ?v7 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v4 <http://dbpedia.org/ontology/commander> ?result . ?v7 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v4 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Arthur_Wellesley,_1st_Duke_of_Wellington> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://xmlns.com/foaf/0.1/name> ""Rutger Jan Schimmelpenninck""@en . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://dbpedia.org/ontology/commander> ?v1 . }","```sparql
SELECT ?militaryForce WHERE {
  ?event1 rdf:type dbo:SocietalEvent .
  ?event2 rdf:type dbo:Event .
  ?conflict rdf:type dbo:MilitaryConflict .
  
  ?schimmelpenninck dbo:referenceTo ?event1 ;
                   dbo:referenceTo ?conflict .

  ?wellington dbo:commanderInForce ?militaryForce ;
              dbo:commanderInWar ?conflict .

  ?polishHorse rdf:type dbo:MilitaryUnit, dbo:Organisation ;
               rdfs:label ""Polish Horse""@en .
  
  ?militaryForce dbo:militaryConflict ?conflict ;
                 dbo:militaryUnit ?polishHorse .
}
```",8,15,9,3,3,3,3,71,0,0,15,0,0.0,0
328,59,test,Give me the commander in the force of the person decedent at Budapest and awardee of the award of the commander in Volcano and Ryukyu Islands campaign.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/awards> ?v2 . ?v0 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Budapest> . <http://dbpedia.org/resource/Volcano_and_Ryukyu_Islands_campaign> <http://dbpedia.org/ontology/commander> ?v3 . ?v5 <http://dbpedia.org/ontology/commander> ?v0 . ?v5 <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/property/awards> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person WHERE {
  # Step 1: Identify commanders involved in the Battle of Budapest
  ?commander dbo:occupation dbr:Military_commander .
  ?commander dbo:placeOfBirth ?buda . 
  ?buda rdfs:label ""Budapest""@en .

  # Step 2: Identify awardees for Volcano and Ryukyu Islands campaigns
  ?awardee dbo:awardReceived ?volcanoAward ;
          dbo:awardReceived ?ryukyuAward .
  
  ?volcanoAward rdfs:label ?volcanoLabel .
  ?ryukyuAward rdfs:label ?ryukyuLabel .

  FILTER(CONTAINS(LCASE(?volcanoLabel), ""commander's award for the volcano campaign"") &&
         CONTAINS(LCASE(?ryukyuLabel), ""commander's award for the ryukyu islands campaign""))

  # Step 3: Find common individuals
  BIND(?commander AS ?person)
  FILTER(?commander = ?awardee)
}
```",6,6,7,3,2,3,3,71,0,0,15,0,0.0,0
54,64,test,"Give me the child of the father of the child of Thinkhaya of Pagan and predecessor of the child, that is an office holder and a royalty, of the reference to Thihapate of Mohnyin and parent of Thado Minsaw of Prome.","SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""Thihapate of Mohnyin""@en . ?v3 <http://dbpedia.org/property/father> ?v2 . ?v1 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?v3 . ?result <http://dbpedia.org/ontology/successor> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> <http://dbpedia.org/ontology/parent> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Thinkhaya of Pagan
  ?thinkhaya dbo:spouse ?spouse .
  ?thinkhaya dbo:child ?child1 .

  # Child of Thinkhaya's child (Thinkhaya's grandchild)
  ?child1 dbo:child ?grandchild .

  # Predecessor of the grandchild is Thinkhaya's child
  ?predecessor rdfs:label ""Thinkhaya's child""@en .
  
  # Thihapate of Mohnyin and his parent
  dbr:Thihapate_of_Mohnyin dbo:parent ?thihapateParent .

  # Thado Minsaw of Prome and his parent
  dbr:Thado_Minsaw_of_Prome dbo:parent ?thadoMinsawParent .

  # The person we are looking for is an office holder and royalty
  ?person a dbo:Monarch ;
          rdfs:label ?label .
  
  FILTER(CONTAINS(LCASE(?label), ""thinkhaya's child"") &&
         CONTAINS(LCASE(?label), ""thihapate of mohnyin"") &&
         ?person = ?thihapateParent &&
         ?person = ?thadoMinsawParent)
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
232,61,test,"Give me the native of the residence, that is a settlement and British, of the native, that is a politician and an office holder, of France and actor of the claim to fame, that is a film and a military conflict, of the professional in Actor, narrator and producer.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/France> . ?v0 <http://dbpedia.org/ontology/knownFor> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v0 <http://dbpedia.org/property/occupation> ""Actor, narrator and producer""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v5 <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://dbpedia.org/property/residence> ?v3 . }","```sparql
SELECT ?native WHERE {
  # Step 1: Identify the professional in Actor, narrator and producer
  ?professional dbo:occupation dbr:Actor . 
  ?professional dbo:occupation dbr:Narrator . 
  ?professional dbo:occupation dbr:Producer .
  
  # Step 2: Determine their claim to fame (film and military conflict)
  ?fame dbo:genre dbr:Military_conflict .
  ?fame dbo:genre dbr:Film .
  ?fame dbo:actor ?professional .

  # Step 3: Find the native of this claim to fame who is a politician and office holder from France
  ?politician dbo:nationality dbr:France .
  ?politician dbo:occupation dbr:Politician .
  ?politician dbo:officeHolder true .
  ?fame dbo:associatedWith ?politician .

  # Step 4: Identify the residence of this French politician that is a British settlement
  ?residence dbo:nationality dbr:United_Kingdom .
  ?residence rdf:type dbo:Settlement .
  ?politician dbo:residence ?residence .

  # Step 5: Determine the native of this British settlement
  ?native dbo:nativePlace ?residence .
}
```",6,12,7,3,2,3,3,71,0,0,1,0,0.0,0
184,45,test,Give me the parent of Géza von Habsburg and parent of the child of the parent of Archduchess Margaret of Austria (born 1925) and child of Archduke Joseph August of Austria.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Géza_von_Habsburg> . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_August_of_Austria> . ?v1 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/child> ?v1 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Margaret_of_Austria_(born_1925)> . },"```sparql
# Query 1: Parent of Géza von Habsburg
SELECT ?parent WHERE {
  wd:Q123456 rdfs:label ""Géza von Habsburg""@en .
  ?parent wdt:P22 ?gézaVonHabsburg .
}

# Query 2: Parent of Archduchess Margaret of Austria (born 1925)
SELECT ?parent WHERE {
  wd:Q789012 rdfs:label ""Archduchess Margaret of Austria""@en .
  ?parent wdt:P22 ?margaretOfAustria .
}

# Query 3: Child of the parent of Archduchess Margaret
SELECT ?child WHERE {
  ?parent wdt:P40 ?margaretOfAustria .
  ?parent wdt:P40 ?child .
}

# Query 4: Child of Archduke Joseph August of Austria
SELECT ?child WHERE {
  wd:Q345678 rdfs:label ""Archduke Joseph August of Austria""@en .
  ?child wdt:P22 ?josephAugust .
}

# Query 5: Common ancestor or connection (hypothetical, as DBpedia may not have direct connections)
SELECT DISTINCT ?commonAncestor WHERE {
  VALUES (?individual1) { ?parentOfGéza ?childOfJosephAugust }
  ?individual1 wdt:P40+ ?commonAncestor .
}
```

Note: Replace `wd:Q123456`, `wd:Q789012`, and `wd:Q345678` with the actual DBpedia resource identifiers for Géza von Habsburg, Archduchess Margaret of Austria (born 1925), and Archduke Joseph August of Austria respectively. These identifiers need to be looked up in DBpedia.",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
747,58,test,Give me the person born on 1985-04-29 and band of the writer of Apollo (Hardwell song) and band of the person born as the persona of Shèna.,"SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/birthDate> ""1985-04-29""^^<http://www.w3.org/2001/XMLSchema#date> . ?v2 <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Apollo_(Hardwell_song)> <http://dbpedia.org/property/writer> ?v5 . <http://dbpedia.org/resource/Shèna> <http://xmlns.com/foaf/0.1/givenName> ?v1 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
# Query for person born on 1985-04-29
SELECT ?person WHERE {
  ?person dbo:birthDate ""1985-04-29""^^xsd:date .
}

# Query to find the writer of ""Apollo"" by Hardwell and their band
SELECT ?writer ?band WHERE {
  ?song dbo:title ""Apollo""@en ;
        dbo:lyricsBy ?writer .
  ?writer dbo:associatedBand ?band .
  FILTER(CONTAINS(LCASE(?song), ""apollo""))
}

# Query to find the real person behind Shèna and their band
SELECT ?realPerson ?band WHERE {
  ?persona rdfs:label ""Shèna""@en ;
           dbo:birthName ?realPerson .
  ?realPerson dbo:associatedBand ?band .
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
488,60,test,"Give me the birth place of the commander in the war, that is a military conflict and an event and a societal event, of Saitō Hajime and administration of the father of the spouse, that is a royalty, of Tokugawa Masako.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Saitō_Hajime> <http://dbpedia.org/ontology/battle> ?v3 . ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Tokugawa_Masako> . ?result <http://dbpedia.org/property/leader> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/ontology/commander> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace WHERE {
  # Saito Hajime's birthplace
  dbr:Saitō_Hajime dbo:birthPlace ?birthPlace .

  # Boshin War as a military conflict and societal event
  OPTIONAL { 
    ?boshinWar dbo:type dbr:Military_conflict .
    ?boshinWar dbo:type dbr:Event .
    ?boshinWar dbo:type dbr:Societal_event .
  }

  # Tokugawa Masako's spouse and his father
  dbr:Tokugawa_Masako dbo:spouse dbr:Akishino_Nobuhito .
  dbr:Akishino_Nobuhito dbo:father dbr:Hirohito .

  # Administration of Hirohito (Shōwa era)
  OPTIONAL {
    dbr:Hirohito dbo:reignStart ?start .
    dbr:Hirohito dbo:reignEnd ?end .
  }
}
```",6,10,7,3,2,3,3,71,0,0,1,0,0.0,0
54,24,test,Give me the parent of the child of Narapati I of Ava and predecessor of Ameitta Thiri Maha Dhamma Dewi of Ava.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Narapati_I_of_Ava> . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Ameitta_Thiri_Maha_Dhamma_Dewi_of_Ava> . ?v2 <http://dbpedia.org/ontology/parent> ?result . },"```sparql
# Step 1: Find a child of Narapati I of Ava
SELECT ?child WHERE {
  wd:Q1234567 wdt:P40 ?child. # Assuming Q1234567 is Narapati I of Ava, P40 is the property for children
}

# Step 2: Find predecessor of Ameitta Thiri Maha Dhamma Dewi of Ava
SELECT ?predecessor WHERE {
  wd:Q6543210 wdt:P136 ?position. # Assuming Q6543210 is Ameitta Thiri Maha Dhamma Dewi, P136 is the position held
  ?predecessor wdt:P136 ?position.
  FILTER(?predecessor != wd:Q6543210)
}

# Step 3: Find parent of Narapati I's child and check if it matches predecessor
SELECT ?parent WHERE {
  ?child wdt:P22 ?parent. # P22 is the property for parents
  VALUES ?child { <URI_of_Child> } # Replace with actual URI from step 1
  FILTER(?parent = <URI_of_Predecessor>) # Replace with actual URI from step 2
}
```

Note: The exact URIs and properties (like Q1234567, P40) need to be verified against DBpedia for accuracy.",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
328,56,test,"Give me the commander in Eastern Front (World War II) and awardee of the award of Bruce Fraser, 1st Baron Fraser of North Cape and leader of the office, that is a government agency, of the leader, that is an office holder and a politician, of Gustav Jonson.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/office> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape> <http://dbpedia.org/property/awards> ?v2 . ?result <http://dbpedia.org/property/awards> ?v2 . <http://dbpedia.org/resource/Eastern_Front_(World_War_II)> <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Gustav_Jonson> <http://dbpedia.org/property/leader> ?v0 . ?v1 <http://dbpedia.org/ontology/leader> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person WHERE {
  # Commander in Eastern Front (World War II)
  ?person dbo:militaryCommanderOf dbr:Eastern_Front_(World_War_II) .

  # Awardee of the award of Bruce Fraser, 1st Baron Fraser of North Cape
  ?award dbo:recipient ?person .
  ?award dbo:awardedBy dbr:Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape .

  # Leader of a government agency
  ?agency dbo:head ?person .
  ?agency a dbo:GovernmentAgency .

  # Leader of the leader, that is an office holder and politician, of Gustav Jonson
  ?leaderOfficeHolder dbo:officeHolderOf dbr:Gustav_Jonson ;
                     dbo:positionHeld ?position .
  ?position dbo:head ?person .
  ?leaderOfficeHolder a dbo:Politician .

}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
534,17,test,"Give me the birth place of Garret FitzGerald and headquarter of the owner of the location, that is a venue and an architectural structure, of 2012 Pro12 Grand Final.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/owner> ?v3 . ?v3 <http://dbpedia.org/ontology/headquarter> ?result . <http://dbpedia.org/resource/2012_Pro12_Grand_Final> <http://dbpedia.org/ontology/location> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ArchitecturalStructure>. <http://dbpedia.org/resource/Garret_FitzGerald> <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Venue>. },"```sparql
# Query to find Garret FitzGerald's birthplace
SELECT ?birthPlace WHERE {
  dbpedia:Garrett_FitzGerald dbo:birthPlace ?birthPlace .
}

# Query to find the venue for the 2012 Pro12 Grand Final
SELECT ?venue WHERE {
  ?event dbo:eventLocation ?venue ;
         rdfs:label ""2012 Pro12 Grand Final""@en .
}

# Query to find the owner of the venue
SELECT ?owner WHERE {
  ?venue dbo:operator ?organization ;
         rdf:type dbo:SportsVenue .
  ?organization rdfs:label ?orgLabel .
  FILTER(CONTAINS(LCASE(?orgLabel), ""owner""))
}

# Query to find the headquarters of the owner organization
SELECT ?headquarters WHERE {
  ?organization dbo:headquarterLocation ?headquarters .
}
```",4,6,5,3,2,3,2,20,0,0,1,0,0.0,0
659,65,test,"Give me the commander in the war, that is an event and a military conflict, of the figure known, that is a military unit and an organisation, as 'Polish Horse' and commander in the force of Arthur Wellesley, 1st Duke of Wellington and military force of the force, that is a societal event and an event and a military conflict, of Rutger Jan Schimmelpenninck.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v4 <http://dbpedia.org/ontology/commander> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v4 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Arthur_Wellesley,_1st_Duke_of_Wellington> . ?v0 <http://dbpedia.org/ontology/battle> ?v6 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v6 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/property/nickname> ""'Polish Horse'""@en . ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","```sparql
SELECT ?commander WHERE {
  ?event rdf:type dbo:MilitaryConflict .
  ?event dbo:participatedInMilitaryForce ?force .
  
  ?polishHorse rdf:type dbo:MilitaryUnit ;
               rdfs:label ""Polish Horse""@en ;
               dbo:commandedBy ?commander .

  ?welshCommander rdf:type dbo:Person ;
                  rdfs:label ""Arthur Wellesley, 1st Duke of Wellington""@en ;
                  dbo:commandedMilitaryForce ?force .

  ?schimmelpenninckEvent rdf:type dbo:SocietalEvent ;
                         dbo:participatedInMilitaryConflict ?event .
  
  ?schimmelpenninckPerson rdf:type dbo:Person ;
                          rdfs:label ""Rutger Jan Schimmelpenninck""@en ;
                          dbo:involvedInSocietalEvent ?schimmelpenninckEvent .

  FILTER(?commander = ?welshCommander)
}
```",7,14,8,3,3,3,3,71,0,0,15,0,0.0,0
994,59,test,"Give me the associated musical artist of the associated musical artist of the reference to Watchtower and associated musical artist of the band member, that is a band and a group and an organisation, of the band, that is an organisation, of Fredrik Thordendal.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Fredrik_Thordendal> . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://xmlns.com/foaf/0.1/name> ""Watchtower""@en . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . }","```sparql
# Step 1: Get Fredrik Thordendal's band (Meshuggah)
SELECT ?meshuggah WHERE {
  wd:Q123456 wdt:P106 wd:Q7396; # Fredrik Thordendal is a musician of Meshuggah
  wdt:P175 ?meshuggah.         # Meshuggah is the band
}

# Step 2: Get associated musical artists of Meshuggah
SELECT DISTINCT ?associatedArtist WHERE {
  ?meshuggah wdt:P463 ?associatedArtist.
}

# Step 3: Get associated musical artists of Watchtower
SELECT DISTINCT ?watchtowerAssociatedArtist WHERE {
  wd:Q789012 wdt:P463 ?watchtowerAssociatedArtist. # Watchtower's associated artists
}

# Step 4: Find common associated artist between Meshuggah and Watchtower
SELECT DISTINCT ?commonArtist WHERE {
  ?meshuggah wdt:P463 ?commonArtist.
  wd:Q789012 wdt:P463 ?commonArtist.
}

# Step 5: Identify a band member of Meshuggah who is part of another band or group that is an organization
SELECT DISTINCT ?bandMember ?otherBand WHERE {
  ?meshuggah wdt:P127 ?member. # Members of Meshuggah
  ?member wdt:P175 ?otherBand.
  ?otherBand wdt:P31 wd:Q43229. # Other band is a musical group
}

# Step 6: Find the associated musical artist of this band member's other band
SELECT DISTINCT ?finalArtist WHERE {
  ?otherBand wdt:P463 ?finalArtist.
}
```

Note: Replace `wd:Q123456` with Fredrik Thordendal's DBpedia QID and `wd:Q789012` with Watchtower's DBpedia QID. The exact SPARQL query might need adjustments based on the actual data available in DBpedia.",6,10,7,3,2,3,3,71,0,0,5,0,0.0,0
712,20,test,"Give me the resting place of the awardee of the show of Soviet Union and capital of the country of the military force, that is an organisation and a military unit, of Vyoshenskaya Uprising.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/awards> ?v4 . ?v1 <http://dbpedia.org/ontology/country> ?v2 . ?v2 <http://dbpedia.org/ontology/capital> ?result . ?v5 <http://dbpedia.org/ontology/restingPlace> ?result . ?v1 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Vyoshenskaya_Uprising> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v4 <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/Soviet_Union> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?restingPlace WHERE {
  ?person dbo:awardReceived ?award .
  ?award dbo:country dbr:Soviet_Union .
  
  ?person dbo:associatedWithEvent dbr:Vyoshenskaya_Uprising .
  
  OPTIONAL { ?person dbo:deathPlace ?restingPlace . }
}
```",6,8,7,3,2,3,2,20,0,0,1,0,0.0,0
435,28,test,"Give me the work of the author of Iceland and region of the time zone in Bombali Shebora Chiefdom and territory administered from the figure known, that is a settlement and a town and Icelandic, as Land of fire and ice.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/capital> ?v1 . ?result <http://dbpedia.org/property/author> ?v5 . ?v1 <http://dbpedia.org/property/nickname> ""Land of fire and ice""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Bombali_Shebora_Chiefdom> <http://dbpedia.org/ontology/timeZone> ?v3 . <http://dbpedia.org/resource/Iceland> <http://dbpedia.org/property/author> ?v5 . ?result <http://dbpedia.org/ontology/timeZone> ?v3 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Iceland>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Town>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?work ?timeZone ?region WHERE {
  # Find works by Jules Verne
  VALUES ?author { dbr:Jules_Verne }
  
  ?author dbo:literaryWork ?work .
  
  # Get information about Bombali Shebora Chiefdom
  ?chiefdom a dbo:AdministrativeRegion ;
            rdfs:label ""Bombali Shebora Chiefdom""@en ;
            dbo:timeZone ?timeZone ;
            dbo:partOf ?region .

}
```",6,9,7,2,3,2,3,28,0,0,1,0,0.0,0
534,18,test,"Give me the birth place of the child, that is a politician and an office holder, of the native, that is a politician, of Essex and headquarter of the owner of RDS Arena.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/RDS_Arena> <http://dbpedia.org/ontology/owner> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Essex> . ?v3 <http://dbpedia.org/ontology/headquarter> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/child> ?v2 . },"```sparql
# Step 1: Identify a native politician from Essex
SELECT ?politician WHERE {
  ?politician dbo:nationality dbr:United_Kingdom ;
              dbo:birthPlace dbr:Essex .
  ?politician rdf:type dbo:Politician .
}

# Assuming we have identified the politician, let's say it is ""John Smith"" for demonstration purposes

# Step 2: Find the owner of RDS Arena and their headquarters
SELECT ?owner ?headquarters WHERE {
  dbp:RDS_Arena dbo:ownedBy ?owner ;
                dbo:location dbr:Dublin .
  ?owner dbo:headquarterLocation ?headquarters .
}

# Assuming we have identified the owner, let's say it is ""XYZ Corporation"" for demonstration purposes

# Step 3 and 4: Check if John Smith has any children who are politicians or office holders
SELECT ?child WHERE {
  ?child dbo:parent dbr:John_Smith ;
         rdf:type dbo:Politician .
}

# Assuming we have identified the child, let's say it is ""Jane Doe"" for demonstration purposes

# Step 5: Retrieve the birthplace of Jane Doe
SELECT ?birthPlace WHERE {
  dbp:Jane_Doe dbo:birthPlace ?birthPlace .
}
```",5,8,6,3,2,3,2,20,0,0,1,0,0.0,0
339,18,test,Give me the father of the child of Grand Duchess Elena Vladimirovna of Russia and child of the child of the predecessor of Frederick VIII of Denmark.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Frederick_VIII_of_Denmark> . ?v2 <http://dbpedia.org/property/father> ?v1 . ?v3 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Grand_Duchess_Elena_Vladimirovna_of_Russia> <http://dbpedia.org/ontology/child> ?v3 . },"```sparql
# Step 1: Find a child of Grand Duchess Elena Vladimirovna of Russia
SELECT ?child WHERE {
  wd:Q123456 wdt:P40 ?child .
}

# Step 2: Find the father of that child
SELECT ?father WHERE {
  ?child wdt:P22 ?father .
}

# Step 3: Identify Frederick VIII of Denmark's predecessor
SELECT ?predecessor WHERE {
  wd:Q789012 wdt:P35 ?predecessor .
}

# Step 4: Find a child of the predecessor
SELECT ?childOfPredecessor WHERE {
  ?predecessor wdt:P40 ?childOfPredecessor .
}

# Step 5: Find a child of that child (grandchild)
SELECT ?grandChild WHERE {
  ?childOfPredecessor wdt:P40 ?grandChild .
}

# Step 6: Find the father of the grandchild
SELECT ?fatherOfGrandChild WHERE {
  ?grandChild wdt:P22 ?fatherOfGrandChild .
}
```

Note: Replace `wd:Q123456` with the actual DBpedia ID for Grand Duchess Elena Vladimirovna of Russia and `wd:Q789012` with the ID for Frederick VIII of Denmark. The queries assume that these IDs are known or can be looked up in DBpedia.",5,5,6,3,2,3,2,20,0,0,1,0,0.0,0
666,20,test,"Give me the figure known as the nickname of the reference, that is an organisation and a soccer club and a sports club, to England and player in the manager, that is a sports manager, of the team, that is a soccer club and a sports team season, of Leonid Slutsky (football coach).","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v4 <http://dbpedia.org/property/nickname> ?v5 . ?result <http://dbpedia.org/property/nickname> ?v5 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v1 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Leonid_Slutsky_(football_coach)> . ?v2 <http://dbpedia.org/ontology/team> ?result . ?v4 <http://xmlns.com/foaf/0.1/name> ""England""@en . ?v1 <http://dbpedia.org/ontology/manager> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. }","```sparql
SELECT ?nickname WHERE {
  ?team a dbo:SoccerClub ;
        dbo:manager ?coach .
  ?coach foaf:name ""Leonid Slutsky"" .
  ?team rdfs:label ?label .
  FILTER(CONTAINS(LCASE(?label), ""middlesbrough"") && LANGMATCHES(LANG(?label), ""en"")) .
  OPTIONAL { ?team dbo:nickname ?nickname } .
}
```",6,12,7,3,2,3,2,20,0,0,2,0,0.0,0
16,67,test,Give me the professional in the profession of the actor of Unnatural (TV series) and spouse of Ted McGinley and person born as the birth name of the alumnus of Ohio State University.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Ohio_State_University> . ?result <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/property/occupation> ?v6 . ?v1 <http://dbpedia.org/property/birthName> ?v3 . ?result <http://dbpedia.org/property/occupation> ?v6 . <http://dbpedia.org/resource/Unnatural_(TV_series)> <http://dbpedia.org/property/starring> ?v0 . },"```sparql
# Step 1: Find the actor of ""Unnatural"" (TV series)
SELECT ?actor WHERE {
    ?series dcterms:title ""Unnatural""@en .
    ?series dbo:starring ?actor .
}

# Step 2: Check if this actor is also the spouse of Ted McGinley
SELECT ?spouse WHERE {
    ?person foaf:name ""Ted McGinley"" .
    ?person dbo:spouse ?spouse .
    FILTER(?spouse IN (?actor))
}

# Step 3: Find an alumnus of Ohio State University and their birth name
SELECT ?alumnus ?birthName WHERE {
    ?alumnus dbo:almaMater <http://dbpedia.org/resource/Ohio_State_University> .
    ?alumnus foaf:name ?name .
    OPTIONAL { ?alumnus foaf:birthday ?birthday . }
    ?alumnus dbp:birthName ?birthName .
}

# Step 4: Match the birth name with the spouse's birth name
SELECT ?professional WHERE {
    ?spouse foaf:name ?name .
    ?spouse dbp:birthName ?birthName .
    ?alumnus dbp:birthName ?birthName .
    FILTER(?spouse = ?professional)
}
```",7,7,8,3,3,3,3,71,0,0,1,0,0.0,0
378,52,test,"Give me the war of the commander in Peninsular War and claim to fame of Louis des Balbes de Berton de Crillon, 1st Duke of Mahón and war of the person born as the birth name of Carl Pontus Gahn.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Peninsular_War> <http://dbpedia.org/ontology/commander> ?v5 . ?v2 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Louis_des_Balbes_de_Berton_de_Crillon,_1st_Duke_of_Mahón> <http://dbpedia.org/ontology/knownFor> ?result . <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/property/birthName> ?v3 . ?v5 <http://dbpedia.org/ontology/battle> ?result . }","```sparql
# Query for Louis des Balbes de Berton de Crillon, 1st Duke of Mahón
SELECT ?roleInPeninsularWar ?claimToFame WHERE {
  wd:Q123456 rdfs:label ""Louis des Balbes de Berton de Crillon, 1st Duke of Mahón""@en .
  OPTIONAL { 
    ?crillon dbo:roleIn ?peninsularWar .
    ?peninsularWar rdfs:label ?roleInPeninsularWar .
  }
  OPTIONAL {
    ?crillon dbo:claimToFame ?fame .
    ?fame rdfs:label ?claimToFame .
  }
}

# Query for Carl Pontus Gahn
SELECT ?war WHERE {
  wd:Q654321 rdfs:label ""Carl Pontus Gahn""@en .
  OPTIONAL { 
    ?gahn dbo:roleIn ?war .
    ?war rdfs:label ?warLabel .
  }
}
```

Note: The `wd:Q123456` and `wd:Q654321` are placeholders for the actual DBpedia resource identifiers for Louis des Balbes de Berton de Crillon, 1st Duke of Mahón, and Carl Pontus Gahn, respectively. These should be replaced with their correct identifiers.",6,6,7,3,3,3,3,71,0,0,2,0,0.0,0
328,60,test,"Give me the awardee of the award of the commander in Volcano and Ryukyu Islands campaign and leader of the office, that is a government agency, of the leader, that is an office holder and a politician, of Gustav Jonson.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/leader> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v3 <http://dbpedia.org/property/awards> ?v2 . ?v0 <http://dbpedia.org/property/office> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/property/awards> ?v2 . <http://dbpedia.org/resource/Volcano_and_Ryukyu_Islands_campaign> <http://dbpedia.org/ontology/commander> ?v3 . <http://dbpedia.org/resource/Gustav_Jonson> <http://dbpedia.org/property/leader> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?awardeeLeader WHERE {
  # Step 1: Identify Gustav Jonson and his role
  ?gustavJonson a dbo:Politician ;
                foaf:name ""Gustav Jonson"" .

  # Step 2: Find the government agency or office he leads
  ?office dbo:leader ?gustavJonson ;
          a dbo:GovernmentAgency .

  # Step 3: Identify the award for Volcano and Ryukyu Islands campaign
  ?award dbo:name ""Volcano and Ryukyu Islands Campaign Award"" .

  # Step 4: Find the awardee of this specific award
  ?awardee dbo:receivedAward ?award .

  # Step 5: Determine the leader of the office or agency associated with the awardee
  ?office2 dbo:leader ?awardeeLeader ;
           dbo:employee ?awardee .
}
```",6,9,7,3,2,3,3,71,0,0,1,0,0.0,0
391,60,test,"Give me the native of the figure known as the nick name of Jackson, Tennessee and actor of the movie, that is a movie and a work and a television show, with the professional in .","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. <http://dbpedia.org/resource/Jackson,_Tennessee> <http://xmlns.com/foaf/0.1/nick> ?v3 . ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/property/starring> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v2 <http://dbpedia.org/property/nickname> ?v3 . ?v1 <http://dbpedia.org/property/starring> ?v0 . ?v0 <http://dbpedia.org/property/occupation> """"@en . }","```sparql
SELECT ?nativePlace WHERE {
  wd:Q177898 wdt:P19 ?nativePlace .
}
```",6,9,7,3,2,3,3,71,0,0,1,0,0.0,0
184,46,test,"Give me the parent of the native of the landmark at elevation, that is a settlement, of 96.0 and child of the child of Archduke Joseph Karl of Austria.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Karl_of_Austria> . ?result <http://dbpedia.org/ontology/child> ?v1 . ?v2 <http://dbpedia.org/ontology/elevation> ""96.0""^^<http://www.w3.org/2001/XMLSchema#double> . ?v1 <http://dbpedia.org/ontology/birthPlace> ?v2 . ?result <http://dbpedia.org/property/father> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  # Step 1: Find Archduke Joseph Karl and his child
  ?archduke a dbo:Person ;
            foaf:name ""Archduke Joseph Karl of Austria"" .
  
  ?child dbo:childOf ?archduke .

  # Step 2: Find the grandchild (child of the child)
  ?grandchild dbo:childOf ?child .

  # Step 3: Identify a settlement at elevation 96.0
  ?settlement a dbo:Settlement ;
              dbo:elevation ""96.0""^^xsd:float .

  # Step 4: Find landmark associated with this settlement
  ?landmark dbo:location ?settlement .

  # Step 5: Identify native of the landmark
  ?native dbo:nativeOf ?landmark .

  # Step 6: Determine parent of this native
  ?parent dbo:child ?native .
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
701,53,test,Give me the spouse of the father of Merneptah and parent of Henuttawy (19th dynasty) and parent of the child of the spouse of Amun-her-khepeshef.,SELECT ?result WHERE { <http://dbpedia.org/resource/Amun-her-khepeshef> <http://dbpedia.org/ontology/spouse> ?v3 . ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/ontology/spouse> ?v1 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Henuttawy_(19th_dynasty)> . <http://dbpedia.org/resource/Merneptah> <http://dbpedia.org/property/father> ?v1 . },"```sparql
SELECT ?spouse WHERE {
  ?merneptah dbo:father dbc:Ramesses_II .
  ?ramesses2 dbo:spouse ?spouse ;
             dbo:child dbc:Henttawy .
  ?amunherkhepeshef dbo:parent dbc:Bintanath ;
                    dbo:spouse ?spouse2 .
  ?spouse2 dbo:child ?child .
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
488,46,test,"Give me the death place of the father, that is a politician, of Yūki Hideyasu and birth place of the commander in the war, that is a military conflict and an event and a societal event, of Saitō Hajime.",SELECT ?result WHERE { <http://dbpedia.org/resource/Saitō_Hajime> <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v4 <http://dbpedia.org/ontology/deathPlace> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/ontology/commander> ?v1 . <http://dbpedia.org/resource/Yūki_Hideyasu> <http://dbpedia.org/property/father> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
# Query for the death place of Yuki Muneyoshi (father of Yuki Hideyasu)
SELECT ?deathPlace WHERE {
  ?person a dbo:Person ;
          foaf:name ""Yūki Muneyoshi""@en .
  OPTIONAL { ?person dbo:placeOfBirth ?birthPlace . }
  OPTIONAL { ?person dbo:deathPlace ?deathPlace . }
}

# Query for the birth place of Enomoto Takeaki (commander in the Boshin War)
SELECT ?birthPlace WHERE {
  ?person a dbo:Person ;
          foaf:name ""Enomoto Takeaki""@en .
  OPTIONAL { ?person dbo:placeOfBirth ?birthPlace . }
}
```",5,9,6,3,2,3,3,71,0,0,1,0,0.0,0
659,35,test,"Give me the military force of the force, that is a societal event and an event and a military conflict, of Rutger Jan Schimmelpenninck and commander in the force of Arthur Wellesley, 1st Duke of Wellington.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Arthur_Wellesley,_1st_Duke_of_Wellington> . ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce WHERE {
  ?event dbo:type dbr:Military_conflict .
  ?event dbo:participatedInMilitaryConflict [
    a dbo:Military_force ;
    dbo:commander [
      rdf:type dbo:Person ;
      foaf:name ""Rutger Jan Schimmelpenninck""^^xsd:string
    ] ;
    dbo:commander [
      rdf:type dbo:Person ;
      foaf:name ""Arthur Wellesley, 1st Duke of Wellington""^^xsd:string
    ]
  ] .
}
```",4,7,5,2,2,3,3,71,0,0,38,0,0.0,0
659,48,test,"Give me the commander in the force of the native, that is an office holder, of Kingdom of Ireland and military force of the force, that is a societal event and an event and a military conflict, of Rutger Jan Schimmelpenninck.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Kingdom_of_Ireland> . ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v2 <http://dbpedia.org/ontology/commander> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
SELECT ?commander ?event WHERE {
  ?schimmelpenninck dbo:birthName ""Rutger Jan Schimmelpenninck"" .
  ?schimmelpenninck dbo:officeHolderOf dbr:Kingdom_of_Holland .
  
  ?irelandEvent dbo:type dbr:Military_conflict ;
                dbo:place dbr:Ireland ;
                dbo:date ""1798-06-24T00:00:00Z""^^xsd:dateTime ;
                dbo:participatedIn ?commander .

  ?commander dbo:officeHolderOf dbr:Kingdom_of_Ireland .
  ?commander rdfs:label ?commanderLabel .
  
  FILTER (CONTAINS(LCASE(?commanderLabel), ""lord lieutenant""))
}
```",5,9,6,3,2,3,3,71,0,0,40,0,0.0,0
64,8,test,"Give me the alma mater of Jovan Hristić and entity in the region, that is a country, of Central European Time.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . ?result <http://dbpedia.org/ontology/country> ?v2 . <http://dbpedia.org/resource/Jovan_Hristić> <http://dbpedia.org/ontology/almaMater> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
SELECT ?university ?country WHERE {
  # Find Jovan Hristić's alma mater
  wd:Q123456 dbo:almaMater ?university .
  
  # Find countries in the Central European Time zone
  ?country wdt:P421 wd:Q11111 ; # Q11111 is a placeholder for the CET time zone entity
            wdt:P31/wdt:P279* wd:Q6256 . # Q6256 represents the class of country
}
```

Note: Replace `wd:Q123456` with Jovan Hristić's actual DBpedia identifier and `wd:Q11111` with the correct identifier for the Central European Time zone.",3,4,4,2,2,2,2,9,0,0,1,0,0.0,0
232,41,test,"Give me the native of London and actor of the claim to fame, that is a film and a military conflict, of Sean Pertwee and child of the person born as John Devon Roland Pertwee.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ""John Devon Roland Pertwee""@en . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v4 <http://dbpedia.org/ontology/starring> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v2 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Sean_Pertwee> <http://dbpedia.org/ontology/knownFor> ?v4 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/London> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?film ?conflict WHERE {
  # Sean Pertwee's information
  dbr:Sean_Pertwee dbo:nativePlace dbr:London .
  
  # Films associated with Sean Pertwee
  OPTIONAL { 
    ?film dbo:starring dbr:Sean_Pertwee .
    FILTER (strstarts(str(?film), ""Film""))
  }
  
  # Military conflicts associated with Sean Pertwee
  OPTIONAL {
    ?conflict dbo:participant dbr:Sean_Pertwee .
    FILTER (strstarts(str(?conflict), ""Military conflict""))
  }

  # Relationship between John Devon Roland Pertwee and Sean Pertwee
  dbr:John_Devon_Roland_Pertwee foaf:child dbr:Sean_Pertwee .
}
```",5,7,6,2,3,3,3,71,0,0,1,0,0.0,0
92,62,test,"Give me the associated musical artist of the person born, that is an artist, as the actor of Return to Nuke 'Em High Volume 1 and band of Joseph Michael and band member of the reference, that is an artist, to the name of Nevermore (2006 film).",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v3 <http://xmlns.com/foaf/0.1/name> ?v4 . <http://dbpedia.org/resource/Nevermore_(2006_film)> <http://xmlns.com/foaf/0.1/name> ?v4 . ?v6 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Return_to_Nuke_'Em_High_Volume_1> <http://dbpedia.org/property/starring> ?v0 . ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Joseph_Michael> . ?v6 <http://dbpedia.org/property/birthName> ?v0 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"```sparql
# Step 1: Get actor of ""Return to Nuke 'Em High Volume 1""
SELECT ?actor WHERE {
  ?film dcterms:title ""Return to Nuke 'Em High Volume 1""@en .
  ?film dbo:starring ?actor .
}

# Step 2: Check if the actor is a musician and find their band
SELECT DISTINCT ?band WHERE {
  ?actor dbo:associatedBand ?band .
  FILTER EXISTS { 
    ?band rdf:type dbo:MusicalArtist .
  }
}

# Step 3: Find Joseph Michael's band membership
SELECT DISTINCT ?josephs_band WHERE {
  ?person foaf:name ""Joseph Michael""@en .
  ?person dbo:memberOf ?josephs_band .
  FILTER EXISTS { 
    ?josephs_band rdf:type dbo:MusicalBand .
  }
}

# Step 4: Identify musical reference related to ""Nevermore"" (2006 film)
SELECT DISTINCT ?nevermore_artist WHERE {
  ?film dcterms:title ""Nevermore""@en .
  ?film dbo:releaseDate ?date .
  FILTER(YEAR(?date) = 2006) .
  ?film dbo:reference ?artist .
  FILTER EXISTS { 
    ?artist rdf:type dbo:MusicalArtist .
  }
}

# Step 5: Find common artist or band
SELECT DISTINCT ?common_artist WHERE {
  VALUES ?actor_band {?band1} # Replace with actual band from step 2
  VALUES ?josephs_band {?band2} # Replace with actual band from step 3
  VALUES ?nevermore_artist {?artist1} # Replace with actual artist from step 4

  { ?common_artist rdfs:label ?actor_band }
  UNION
  { ?common_artist rdfs:label ?josephs_band }
  UNION
  { ?common_artist rdfs:label ?nevermore_artist }
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
959,25,test,Give me the native of Japan and manager of the team of Takashi Sekizuka.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/manager> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Japan> . ?v0 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Takashi_Sekizuka> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?team WHERE {
  ?person a dbo:FootballManager ;
          foaf:name ""Takashi Sekizuka""@en .
  
  OPTIONAL { ?person dbo:nationality ?nationality . FILTER (str(?nationality) = ""Japan"") }
  
  ?person dbo:managerOfTeam ?team .
}
```",3,3,4,2,2,3,3,71,0,0,6,0,0.0,0
427,61,test,"Give me the party of the person born, that is an office holder and a politician, as the birth name of Romano Prodi and party of the father of the alumnus of Massachusetts Institute of Technology.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?v5 . ?v3 <http://dbpedia.org/property/birthName> ?v1 . ?v5 <http://dbpedia.org/ontology/party> ?result . ?v3 <http://dbpedia.org/ontology/party> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Massachusetts_Institute_of_Technology> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
# Query for Romano Prodi's birth name and political party
SELECT ?birthName ?partyLabel WHERE {
  ?prodi dbo:birthName ?birthName .
  ?prodi foaf:name ""Romano Prodi"" .
  OPTIONAL { 
    ?prodi dbo:politicalParty ?party .
    ?party rdfs:label ?partyLabel .
  }
} ORDER BY ?birthName

# Query for an MIT alumnus and their father's political party
SELECT DISTINCT ?alumnusName ?fatherName ?fatherPartyLabel WHERE {
  ?alumnus dbo:almaMater dbr:Massachusetts_Institute_of_Technology ;
           foaf:name ?alumnusName .
  OPTIONAL { 
    ?alumnus dbo:parent ?father .
    ?father foaf:name ?fatherName .
    OPTIONAL {
      ?father dbo:politicalParty ?fatherParty .
      ?fatherParty rdfs:label ?fatherPartyLabel .
    }
  }
} ORDER BY ?alumnusName
```",6,8,7,3,2,3,3,71,0,0,3,0,0.0,0
626,18,test,"Give me the awardee of the award of Aleksey Petrovich Yermolov and commander in the force, that is a military conflict, of the commander in Battle of Paris (1814).",SELECT ?result WHERE { <http://dbpedia.org/resource/Aleksey_Petrovich_Yermolov> <http://dbpedia.org/property/awards> ?v3 . ?result <http://dbpedia.org/property/awards> ?v3 . <http://dbpedia.org/resource/Battle_of_Paris_(1814)> <http://dbpedia.org/ontology/commander> ?v1 . ?v2 <http://dbpedia.org/ontology/commander> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?awardee ?conflict WHERE {
  # Find Aleksey Petrovich Yermolov's award
  ?person a dbo:MilitaryPerson ;
          foaf:name ""Aleksey Petrovich Yermolov""@en .
  
  ?award dbo:recipient ?person ;
         dbo:name ?awardee .

  # Find the conflict related to Battle of Paris (1814)
  ?conflict dbo:participatedInBattle dbr:Battle_of_Paris_(1814) ;
            dbo:commander ?person .
}
```",5,6,6,3,2,3,2,20,0,0,23,0,0.0,0
959,48,test,"Give me the member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of the person born in 1958 and manager of the team of Takashi Sekizuka.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Takashi_Sekizuka> . ?v3 <http://dbpedia.org/ontology/birthYear> ""1958""^^<http://www.w3.org/2001/XMLSchema#gYear> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v3 <http://dbpedia.org/ontology/almaMater> ?v1 . ?result <http://dbpedia.org/ontology/team> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?almaMater WHERE {
  ?person dbo:birthYear ""1958""^^xsd:gYear ;
          dbo:managerOfTeam dbr:Takashi_Sekizuka .
  
  ?person dbo:almaMater ?almaMater .

  ?almaMater a dbo:University ;
             dbo:country dbr:Japan ;
             rdf:type dbo:EducationalOrganization .
}
```",5,9,6,3,2,3,3,71,0,0,3,0,0.0,0
754,20,test,Give me the parent of the child of the reference to Ram Khamhaeng the Great and parent of the parent of the parent of Min Linka.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Min_Linka> <http://dbpedia.org/ontology/parent> ?v1 . ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://dbpedia.org/ontology/parent> ?v2 . ?v4 <http://dbpedia.org/ontology/child> ?v5 . ?v4 <http://xmlns.com/foaf/0.1/name> ""Ram Khamhaeng the Great""@en . ?result <http://dbpedia.org/ontology/child> ?v5 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT DISTINCT ?ramChildParent ?minGreatGrandparent
WHERE {
  # Find Ram Khamhaeng the Great's child and its parent
  ?ramChild dbo:childOf ?ramKhamhaeng .
  ?ramChildParent dbo:parent ?ramChild .

  # Find Min Linka's great-grandparent
  ?minLinka dbo:parent ?minParent .
  ?minParent dbo:parent ?minGrandparent .
  ?minGrandparent dbo:parent ?minGreatGrandparent .

  # Bind Ram Khamhaeng the Great and Min Linka to their respective entities
  VALUES (?ramKhamhaeng) { <http://dbpedia.org/resource/Ram_Khamhaeng_the_Great> }
  VALUES (?minLinka) { <http://dbpedia.org/resource/Min_Linka> }
}
```",6,6,7,3,2,3,2,20,0,0,1,0,0.0,0
528,62,test,"Give me the force of Narciso Campero and war of the military force of the entity, that is a societal event, in Chile and war of the commander in the work of --01-09.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Chile> . ?v6 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/ontology/commander> ?v6 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Narciso_Campero> . ?v3 <http://dbpedia.org/ontology/battle> ?v4 . ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/property/author> ""--01-09""^^<http://www.w3.org/2001/XMLSchema#gMonthDay> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?narcisoCampero ?militaryForce ?chileEvent ?commanderWork WHERE {
  # Identify Narciso Campero and any military force associated with him
  ?narcisoCampero a dbo:Person ;
                  foaf:name ""Narciso Campero"" .
  
  OPTIONAL { 
    ?narcisoCampero dbo:militaryForce ?militaryForce .
  }
  
  # Find societal events or wars involving military forces in Chile
  ?chileEvent a dbo:SocietalEvent ;
              dbo:location dbr:Chile ;
              dbo:relatedMilitaryForce ?militaryForce .

  # Connect to a work dated January 9th, possibly involving a commander
  OPTIONAL {
    ?commanderWork dbo:date ""2000-01-09""^^xsd:date ;
                   dbo:author ?narcisoCampero .
  }
}
```",7,8,8,3,3,3,3,71,0,0,2,0,0.0,0
767,70,test,"Give me the entity in the administration, that is a settlement, of Green and reference to the alter ego of the persona, that is a fictional character, of Matthew Burland and alma mater of the administration of the reference to George Kilbon Nash.","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v3 . ?v7 <http://dbpedia.org/property/governor> ?v0 . ?v1 <http://dbpedia.org/property/alterEgo> ""Matthew Burland""@en . ?v1 <http://dbpedia.org/property/alterEgo> ?v3 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v7 <http://dbpedia.org/ontology/almaMater> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""George Kilbon Nash""@en . ?v4 <http://dbpedia.org/property/leaderParty> ""Green""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?result <http://dbpedia.org/ontology/state> ?v4 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?settlement ?fictionalCharacter ?almaMater WHERE {
  # Step 1: Find the settlement related to Green in an administration context
  ?greenEntity a dbo:Settlement ;
              rdfs:label ""Green""@en .
  
  # Step 2: Identify the fictional character associated with Matthew Burland
  ?fictionalCharacter dbo:alterEgo dbr:Matthew_Burland .

  # Step 3: Find the alma mater of George Kilbon Nash's administration
  ?nashEntity dbo:almaMater ?almaMater ;
              rdfs:label ""George_Kilbon_Nash""@en .
  
  # Combine these elements to find a common entity
  ?settlement dbo:administration ?greenEntity ;
              dbo:alterEgo ?fictionalCharacter ;
              dbo:almaMater ?almaMater .
}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
392,25,test,"Give me the province of Schio and region of the time zone, that is a sports event, of Aguilar de Segarra and entity in the region, that is a country, of Central European Time.",SELECT ?result WHERE { <http://dbpedia.org/resource/Aguilar_de_Segarra> <http://dbpedia.org/ontology/timeZone> ?v4 . ?v2 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsEvent>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Schio> <http://dbpedia.org/ontology/province> ?result . ?result <http://dbpedia.org/ontology/timeZone> ?v4 . ?result <http://dbpedia.org/ontology/country> ?v2 . },"```sparql
# Query to get the province of Schio
SELECT ?province WHERE {
  dbpedia:Schio dbo:administrativeTerritory ?province .
}

# Query to find the time zone for Aguilar de Segarra and its region
SELECT DISTINCT ?region WHERE {
  dbpedia:Aguilar_de_Segarra dbo:timeZone ?tz .
  ?tz dbo:location ?place .
  ?place dbo:partOfRegion ?region .
}

# Query to find a sports event in the region of Aguilar de Segarra
SELECT DISTINCT ?event WHERE {
  ?event dbo:location ?place .
  ?place dbo:partOfRegion ?region .
  FILTER(?region IN (SELECT DISTINCT ?region WHERE {
    dbpedia:Aguilar_de_Segarra dbo:timeZone ?tz .
    ?tz dbo:location ?place .
    ?place dbo:partOfRegion ?region .
  }))
}

# Query to find an entity in the region of Central European Time
SELECT DISTINCT ?entity WHERE {
  ?entity dbo:timeZone dbpedia:Central_European_Time .
}

# Query to find a country associated with Central European Time
SELECT DISTINCT ?country WHERE {
  ?country dbo:timeZone dbpedia:Central_European_Time .
}
```",5,7,6,2,3,2,3,28,0,0,1,0,0.0,0
360,23,test,"Give me the reference to the author of Blinded by the Light and writer of the work, that is an album, of Dave Flett.","SELECT ?result WHERE { <http://dbpedia.org/resource/Blinded_by_the_Light> <http://dbpedia.org/property/author> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . ?v2 <http://dbpedia.org/property/author> ""Dave Flett""@en . ?v2 <http://dbpedia.org/property/writer> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Album>. }","```sparql
# Query to find the author of ""Blinded by the Light""
SELECT ?author WHERE {
  ?song dcterms:title ""Blinded by the Light"" .
  ?song dbo:composer ?author .
}

UNION

# Query to find an album related to Dave Flett and its creator
SELECT ?albumCreator WHERE {
  ?album dcterms:title ?title .
  ?album dbo:creator ?albumCreator .
  FILTER(CONTAINS(LCASE(?title), ""dave flett""))
}
```",4,5,5,2,2,2,3,28,0,0,1,0,0.0,0
547,45,test,Give me the resting place of the awardee of the award of Gerald Graham and resting place of James Burton (Egyptologist) and resting place of Simon Cadell.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . ?v1 <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Simon_Cadell> <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Gerald_Graham> <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/James_Burton_(Egyptologist)> <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
# Query for Gerald Graham's award recipient's resting place
SELECT ?recipient ?restingPlace WHERE {
  ?award dbo:awardee ?recipient .
  ?award dbo:name ""Gerald Graham Award""@en . # Replace with the actual award name if known
  OPTIONAL { ?recipient dbo:finalRestingPlace ?restingPlace }
}

UNION

# Query for James Burton (Egyptologist)'s resting place
SELECT ?person ?restingPlace WHERE {
  ?person rdfs:label ""James Burton (Egyptologist)""@en .
  ?person dbo:finalRestingPlace ?restingPlace
}

UNION

# Query for Simon Cadell's resting place
SELECT ?person ?restingPlace WHERE {
  ?person rdfs:label ""Simon Cadell""@en .
  ?person dbo:finalRestingPlace ?restingPlace
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
391,51,test,"Give me the actor of the claim to fame, that is a work, of Michael Ballhaus and actor of the movie, that is a movie and a work and a television show, with the professional in .","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://dbpedia.org/property/occupation> """"@en . ?v2 <http://dbpedia.org/property/starring> ?v1 . ?v2 <http://dbpedia.org/property/starring> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v4 <http://dbpedia.org/ontology/starring> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Michael_Ballhaus> <http://dbpedia.org/ontology/knownFor> ?v4 . }","```sparql
# Step 1: Find a work by Michael Ballhaus
SELECT ?work WHERE {
  ?ballhaus dbo:profession dbr:Cinematographer .
  ?ballhaus foaf:name ""Michael Ballhaus""@en .
  ?ballhaus dbo:worksForFilm ?work .
}

# Step 2: Find actors in the identified work
SELECT DISTINCT ?actor WHERE {
  ?film dbo:starring ?actor .
  VALUES ?film { <URI_of_the_work_found_in_step_1> }
}

# Step 3: Identify movies that are also TV shows and involve professionals (actors)
SELECT DISTINCT ?movie WHERE {
  ?movie rdf:type dbr:Film ;
         rdfs:label ?title .
  FILTER CONTAINS(LCASE(?title), ""tv show"") .
  ?movie dbo:starring ?actor .
}

# Step 4: Find the common actor
SELECT DISTINCT ?commonActor WHERE {
  VALUES ?film { <URI_of_the_work_found_in_step_1> }
  ?film dbo:starring ?commonActor .
  
  ?movie rdf:type dbr:Film ;
         rdfs:label ?title .
  FILTER CONTAINS(LCASE(?title), ""tv show"") .
  ?movie dbo:starring ?commonActor .
}
```

Note: Replace `<URI_of_the_work_found_in_step_1>` with the actual URI of a work by Michael Ballhaus found in Step 1.",5,9,6,3,2,3,3,71,0,0,11,0,0.0,0
391,59,test,"Give me the native of the figure known as the nick name of Jackson, Tennessee and actor of the claim to fame, that is a work, of the spouse of Sherry Hormann.","SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v5 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Sherry_Hormann> <http://dbpedia.org/ontology/spouse> ?v0 . ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://dbpedia.org/property/nickname> ?v3 . ?v0 <http://dbpedia.org/ontology/knownFor> ?v5 . <http://dbpedia.org/resource/Jackson,_Tennessee> <http://xmlns.com/foaf/0.1/nick> ?v3 . }","```sparql
SELECT ?native WHERE {
  # Step 1: Find Sherry Hormann's spouse
  dbpedia:Sherry_Hormann dbo:spouse ?spouse .
  
  # Step 2: Identify works associated with Michael Ballhaus
  ?work dbo:director ?spouse ;
        dbo:actor ?actor .
  
  # Step 3: Find actors involved in those works and check for the nickname ""Jackson, Tennessee""
  ?actor rdfs:label ?actorLabel .
  FILTER(CONTAINS(LCASE(?actorLabel), ""samuel l. jackson"") && CONTAINS(LCASE(?actorLabel), ""nicknamed jackson, tennessee""))
  
  # Step 4: Retrieve the birthplace of Samuel L. Jackson
  ?actor dbo:birthPlace ?native .
}
```",6,7,7,3,2,3,3,71,0,0,1,0,0.0,0
16,66,test,Give me the professional in the profession of Satomi Ishihara and spouse of the person born as Ted Martin McGinley and person born as the birth name of the alumnus of Ohio State University.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v6 . ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?v3 <http://dbpedia.org/property/birthName> ""Ted Martin McGinley""@en . ?v1 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Ohio_State_University> . ?v1 <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Satomi_Ishihara> <http://dbpedia.org/property/occupation> ?v6 . ?result <http://dbpedia.org/property/birthName> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?professional WHERE {
  # Find Satomi Ishihara's profession
  ?satomi a dbo:Person;
          foaf:name ""Satomi Ishihara""@en.
  ?satomi dbo:profession ?profession.

  # Find Ted Martin McGinley's spouse
  ?ted a dbo:Person;
       foaf:name ""Ted McGinley""@en.
  ?ted dbo:spouse ?spouse.

  # Find the alumnus of Ohio State University and their birth name
  ?alumnus a dbo:Person;
           dbo:almaMater <http://dbpedia.org/resource/Ohio_State_University>;
           foaf:name ?birthName.
  
  # Check if Ted McGinley's spouse is the same person as the alumnus with that birth name
  ?spouse foaf:name ?birthName.

  # Ensure the spouse has the same profession as Satomi Ishihara
  ?spouse dbo:profession ?profession.
}
```",7,7,8,3,3,3,3,71,0,0,1,0,0.0,0
421,22,test,Give me the native of the birthplace of Samir Bekrić and band member of the awardee of [[#Awards and nominations.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v2 <http://dbpedia.org/property/awards> ""[[#Awards and nominations""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . <http://dbpedia.org/resource/Samir_Bekrić> <http://dbpedia.org/ontology/birthPlace> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?nativeLanguage ?bandMember WHERE {
  # Find Samir Bekrić's birthplace
  dbr:Samir_Bekrić dbo:birthPlace ?birthPlace .

  # Get the native language of the birthplace
  ?birthPlace dbo:officialLanguage ?language .
  ?language rdfs:label ?nativeLanguage .

  # Find an awardee from a music award (example using Grammy Awards)
  ?awardee dbo:award dbr:Grammy_Award .
  
  # Get a band member of the awardee
  ?bandMember dbo:memberOf ?awardee .
}
```",4,4,5,2,2,2,3,28,0,0,2,0,0.0,0
54,30,test,"Give me the predecessor of the child, that is an office holder and a royalty, of Thihapate of Mohnyin and parent of Thado Minsaw of Prome and child of Thinkhaya of Pagan.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Thihapate_of_Mohnyin> . <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?predecessor WHERE {
  # Thihapate of Mohnyin
  dbr:Thihapate_of_Mohnyin dbo:child dbr:Saw_Yun .
  
  # Saw Yun is the child of Thinkhaya of Pagan and parent of Thado Minsaw of Prome
  dbr:Saw_Yun dbo:parent dbr:Thinkhaya_of_Pagan ;
              dbo:child dbr:Thado_Minsaw_of_Prome .

  # Find predecessor in terms of office or royalty
  ?predecessor dbo:child dbr:Saw_Yun .
}
```",4,6,5,2,3,3,3,71,0,0,1,0,0.0,0
378,53,test,Give me the war of Joaquín Blake and claim to fame of the commander in Great Siege of Gibraltar and war of the person born as the birth name of Carl Pontus Gahn.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/knownFor> ?result . <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Joaquín_Blake> <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Great_Siege_of_Gibraltar> <http://dbpedia.org/ontology/commander> ?v1 . },"```sparql
# Query for Joaquín Blake's participation in a war
SELECT ?war WHERE {
  dbpedia:Joaqu%C3%ADn_Blake dbo:militaryConflict ?war .
}

# Query for the commander of the Great Siege of Gibraltar
SELECT ?commander WHERE {
  dbpedia:The_Great_Siege_of_Gibraltar dbo:commander ?commander .
}

# Query for Carl Pontus Gahn's birth name and war involvement
SELECT ?birthName ?war WHERE {
  dbpedia:Carl_Pontus_Gahn foaf:name ?birthName .
  OPTIONAL { dbpedia:Carl_Pontus_Gahn dbo:militaryConflict ?war . }
}
```",6,6,7,3,3,3,3,71,0,0,2,0,0.0,0
801,59,test,"Give me the producer of the work, that is a musical work and a song and a work, of the professional, that is a musical artist, in Rapper and professional in the alter ego of the true self of The Shadow.","SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v3 <http://dbpedia.org/property/alterEgo> ?v2 . ?result <http://dbpedia.org/property/occupation> ?v2 . ?v5 <http://dbpedia.org/ontology/producer> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/property/occupation> ""Rapper""@en . ?v5 <http://dbpedia.org/property/writer> ?v0 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://xmlns.com/foaf/0.1/givenName> ""The Shadow""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?producer WHERE {
  ?alterEgo a dbo:MusicalArtist ;
            dbo:profession ""Rapper"" ;
            rdfs:label ?alias .
  
  FILTER(CONTAINS(LCASE(?alias), ""the shadow"")) .

  ?work dbo:artist ?alterEgo ;
        a dbo:Song .

  ?work dbo:producer ?producer .
}
```",6,10,7,3,2,3,3,71,0,0,473,0,0.0,0
767,68,test,"Give me the reference to the alter ego of Black Hood and entity in the administration, that is a settlement, of the writer of Where It's At (Dustin Lynch album) and alma mater of the administration of the reference to George Kilbon Nash.","SELECT ?result WHERE { ?v7 <http://dbpedia.org/ontology/almaMater> ?result . <http://dbpedia.org/resource/Black_Hood> <http://dbpedia.org/property/alterEgo> ?v3 . ?v4 <http://dbpedia.org/property/leaderParty> ?v5 . ?result <http://dbpedia.org/ontology/state> ?v4 . ?v7 <http://dbpedia.org/property/governor> ?v0 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Where_It's_At_(Dustin_Lynch_album)> <http://dbpedia.org/property/writer> ?v5 . ?v0 <http://xmlns.com/foaf/0.1/name> ""George Kilbon Nash""@en . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . }","```sparql
SELECT ?city WHERE {
  VALUES (?entity1 ?entity2 ?entity3) { 
    (wd:Q159 ""Gotham City"" wd:Q1204) (""Nashville, Tennessee"" ""Yale University"") 
  }
  
  ?entity1 wdt:P31/wdt:P279* wd:Q515 ; # entity1 is a city
          wdt:P131 ?city . # located in

  ?entity2 wdt:P69 ?writer . # alma mater of the writer
  ?writer foaf:name ""Josh Osborne"" .

  ?entity3 wdt:P69 wd:Q1204 . # Yale University's location
            ?entity3 wdt:P131 ?city . # located in
  
  FILTER(?entity1 != ?entity2 && ?entity1 != ?entity3)
}
```",8,9,9,3,3,3,3,71,0,0,1,0,0.0,0
801,66,test,"Give me the producer of the work, that is a musical work and a song and a work, of 50 Cent and professional in the alter ego of The Shadow and associated musical artist of the writer, that is a musical artist and an artist, of the album, that is a musical work and a work, of What U See Is What U Get.",SELECT ?result WHERE { ?v6 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/50_Cent> . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v1 <http://dbpedia.org/property/writer> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/What_U_See_Is_What_U_Get> <http://dbpedia.org/ontology/album> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v3 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v6 <http://dbpedia.org/ontology/producer> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?producer ?song ?writerArtist WHERE {
  # Identify the album ""What U See Is What U Get"" by 50 Cent
  dbr:What_U_See_Is_What_U_Get_(album) dbo:artist dbr:50_Cent .
  
  # Find producers of this album
  OPTIONAL { 
    dbr:What_U_See_Is_What_U_Get_(album) dbo:producer ?producer .
  }
  
  # Identify songs from the album that feature both 50 Cent and The Shadow
  OPTIONAL {
    ?song dbo:partOfAlbum dbr:What_U_See_Is_What_U_Get_(album) ;
          dbo:artist dbr:50_Cent ;
          dbo:hasMusicalArtist ?shadow .
    FILTER (str(?shadow) = ""The Shadow"")
  }
  
  # Find writers/artists associated with these songs
  OPTIONAL {
    ?song dbo:writer ?writerArtist .
    ?song dbo:musicalArtist ?artist .
    FILTER (str(?artist) = ""50 Cent"" || str(?artist) = ""The Shadow"")
  }
}
```",7,14,8,3,3,3,3,71,0,0,1,0,0.0,0
378,32,test,Give me the war of the commander in Peninsular War and war of the person born as Carl Pontus Gahn.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v3 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Peninsular_War> <http://dbpedia.org/ontology/commander> ?v3 . ?v1 <http://dbpedia.org/property/birthName> ""Carl Pontus Gahn""@en . }","```sparql
# Query for the war involving a commander in the Peninsular War (Arthur Wellesley)
SELECT ?war WHERE {
  wd:Q3323 dbo:participatedInMilitaryConflict ?war .
}

# Query for the war involving Carl Pontus Gahn
SELECT ?war WHERE {
  wd:Q1234567 dbo:participatedInMilitaryConflict ?war . # Replace Q1234567 with the actual DBpedia ID for Carl Pontus Gahn
}
```

Note: The placeholder `wd:Q1234567` should be replaced with the correct DBpedia resource identifier for Carl Pontus Gahn.",4,4,5,2,2,3,3,71,0,0,2,0,0.0,0
9,23,test,"Give me the alma mater of the mayor, that is a politician, of the entity, that is an organisation, in Belfast.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/property/leader> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/ontology/almaMater> ?result . ?v2 <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Belfast> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?almaMater WHERE {
  ?organization a dbo:Organization ;
                dbo:location dbr:Belfast .
  
  ?mayor dbo:positionHeld ?office ;
         dbo:holdsOffice ?organization ;
         rdf:type dbo:Politician .

  ?office dbp:name ""Mayor""@en .

  ?mayor dbo:almaMater ?almaMater .
}
```",3,5,4,3,1,3,3,71,0,0,10,0,0.0,0
328,53,test,"Give me the commander in Eastern Front (World War II) and leader of the office, that is a government agency, of Joseph Stalin and awardee of the award of the commander in Volcano and Ryukyu Islands campaign.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/awards> ?v2 . <http://dbpedia.org/resource/Eastern_Front_(World_War_II)> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v1 <http://dbpedia.org/ontology/leader> ?result . <http://dbpedia.org/resource/Joseph_Stalin> <http://dbpedia.org/property/office> ?v1 . ?result <http://dbpedia.org/property/awards> ?v2 . <http://dbpedia.org/resource/Volcano_and_Ryukyu_Islands_campaign> <http://dbpedia.org/ontology/commander> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Commander on the Eastern Front during World War II
  OPTIONAL { 
    ?person dbo:commanderOf dbr:Eastern_Front_(World_War_II) .
  }
  
  # Leader of a government agency under Joseph Stalin
  OPTIONAL {
    ?agency dbo:head dbr:Lavrentiy_Beria ;
            dbo:leader dbr:Joseph_Stalin .
    ?person dbo:head ?agency .
  }

  # Awardee for the Volcano and Ryukyu Islands campaign
  OPTIONAL {
    ?campaign dbr:Volcano_and_Ryukyu_Islands_campaigns ;
              dbo:awardee ?person .
  }
  
  FILTER (count(?person) = 3)
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
492,70,test,"Give me the person decedent at the work of US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite and commander in the war, that is a military conflict and an event, of the commander in Battle of Verdun and person decedent at the capital, that is a settlement, of the country of Khemis Miliana District.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/capital> ?v3 . <http://dbpedia.org/resource/Battle_of_Verdun> <http://dbpedia.org/ontology/commander> ?v0 . ?v4 <http://dbpedia.org/property/author> ""US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite""@en . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v7 <http://dbpedia.org/ontology/commander> ?result . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/deathPlace> ?v3 . ?v0 <http://dbpedia.org/ontology/battle> ?v7 . <http://dbpedia.org/resource/Khemis_Miliana_District> <http://dbpedia.org/ontology/country> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/deathPlace> ?v4 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person WHERE {
  # Find Joseph C. Satterthwaite's role and related persons
  ?satterthwaite a dbo:GovernmentOfficial ;
                 foaf:name ""Joseph C. Satterthwaite"" ;
                 dbo:office dbr:Assistant_Secretary_of_State_for_African_Affairs .

  # Find commanders in the Battle of Verdun
  ?verdunCommander a dbo:MilitaryPerson ;
                   dbo:commandedBattle dbr:Battle_of_Verdun .

  # Find the capital of Khemis Miliana District
  ?khemisMilianaDistrict dbo:capital ?capitalSettlement .
  FILTER (str(?khemisMilianaDistrict) = ""Khemis_Miliana_District"")

  # Link these entities to find a common person
  ?person dbo:succeededBy ?satterthwaite ;
          foaf:name ?name ;
          dbo:commandedBattle dbr:Battle_of_Verdun ;
          dbo:residence ?capitalSettlement .

}
```",8,11,9,3,3,3,3,71,0,0,1,0,0.0,0
184,70,test,"Give me the child of the child of the parent, that is a royalty, of Archduke Ladislaus Philipp of Austria and parent of the child of the parent of Archduchess Margaret of Austria (born 1925) and parent of the native of Budapest.",SELECT ?result WHERE { ?v7 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/child> ?v4 . <http://dbpedia.org/resource/Archduke_Ladislaus_Philipp_of_Austria> <http://dbpedia.org/ontology/parent> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v7 . ?v3 <http://dbpedia.org/property/father> ?v1 . ?v4 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Budapest> . ?result <http://dbpedia.org/ontology/child> ?v3 . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Margaret_of_Austria_(born_1925)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?person WHERE {
  # Step 1: Find the parent of Archduke Ladislaus Philipp who is a royalty
  ?ladislausParent dbo:child ?ladislaus .
  FILTER(STRSTARTS(STR(?ladislaus), ""Archduke_Ladislaus_Philipp_of_Austria""))
  ?ladislausParent rdf:type dbo:RoyalFamily .

  # Step 2: Find the child of that parent (grandchild of Ladislaus)
  ?ladislausGrandchild dbo:parent ?ladislausParent .
  
  # Step 3: Find the parent of Archduchess Margaret of Austria (born 1925) who is a royalty
  ?margaretParent dbo:child ?margaret .
  FILTER(STRSTARTS(STR(?margaret), ""Archduchess_Margaret_of_Austria"") && 
         EXISTS { ?margaret dbp:birthday ?birthday . FILTER(YEAR(?birthday) = 1925) })
  ?margaretParent rdf:type dbo:RoyalFamily .

  # Step 4: Find the child of that parent (grandchild of Margaret)
  ?margaretGrandchild dbo:parent ?margaretParent .
  
  # Step 5: Identify a native of Budapest
  ?budaNative dbp:nationality <http://dbpedia.org/resource/Hungarian> ;
              dbo:birthPlace ?place .
  FILTER(STRSTARTS(STR(?place), ""Budapest""))

  # Step 6: Find the person who is the parent of both grandchild and native of Budapest
  ?person dbo:parent ?ladislausGrandchild .
  ?person dbo:parent ?margaretGrandchild .
  ?person dbo:parent ?budaNative .

}
```",8,9,9,3,3,3,3,71,0,0,1,0,0.0,0
492,58,test,"Give me the person decedent at French Algeria and person decedent at the capital, that is a settlement, of the country of Khemis Miliana District and commander in the war, that is a military conflict and an event, of Frédéric-Georges Herr.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Frédéric-Georges_Herr> <http://dbpedia.org/ontology/battle> ?v5 . ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . <http://dbpedia.org/resource/Khemis_Miliana_District> <http://dbpedia.org/ontology/country> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/French_Algeria> . ?v1 <http://dbpedia.org/ontology/capital> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?personDecedentFrenchAlgeria ?personDecedentKhemisMilianaCapital ?war
WHERE {
  # Find person decedent in French Algeria
  ?personDecedentFrenchAlgeria dbo:deathPlace dbr:French_Algeria .
  
  # Find the capital of Khemis Miliana District and person decedent there
  dbr:Khemis_Miliana_District dbo:capital ?capitalSettlement .
  ?personDecedentKhemisMilianaCapital dbo:deathPlace ?capitalSettlement .

  # Find the war involving Frédéric-Georges Herr as a commander
  dbr:Frédéric-Georges_Herr dbo:militaryConflict ?war ;
                            dbo:role ""commander"" .
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
617,50,test,"Give me the spouse of the child of the successor, that is a royalty, of Antiochus (son of Antiochus III the Great) and parent of the child of Antiochus (son of Antiochus III the Great).",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/child> ?v4 . ?v4 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/child> ?v3 . <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/successor> ?v0 . ?result <http://dbpedia.org/ontology/child> ?v3 . },"```sparql
SELECT ?spouse WHERE {
  # Step 1: Identify Antiochus (son of Antiochus III the Great)
  ?antiochus dbo:parent dbr:Antiochus_III_the_Great .
  
  # Step 2: Find his successor
  ?successor dbo:predecessor ?antiochus .

  # Step 3: Identify the child of the successor that is royalty
  ?royalChild dbo:child ?successor ;
              a dbo:RoyalFamilyMember .

  # Step 4: Determine the spouse of this royal child
  ?royalChild dbo:spouse ?spouse .

  # Step 5 & 6: Ensure the parent of Antiochus is Antiochus III the Great and link to his child
  ?antiochusParent dbo:parent dbr:Antiochus_III_the_Great .
  ?antiochusParent dbo:child ?antiochus .

  # Step 7: Ensure the spouse found is connected to the lineage
  FILTER(?spouse != ?antiochus)
}
```",5,6,6,3,2,3,3,71,0,0,2,0,0.0,0
345,18,test,"Give me the team of the person born, that is a soccer player and a soccer manager, on 1978-09-15 and figure known as the nickname of the player, that is a sports club and an organisation and a soccer club, in Armando Heeb.","SELECT ?result WHERE { <http://dbpedia.org/resource/Armando_Heeb> <http://dbpedia.org/ontology/team> ?v1 . ?result <http://dbpedia.org/ontology/manager> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v3 <http://dbpedia.org/ontology/birthDate> ""1978-09-15""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://dbpedia.org/property/nickname> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v1 <http://dbpedia.org/property/nickname> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?team ?nicknameClub WHERE {
  ?person a dbo:SoccerPlayer ;
          dbo:birthDate ""1978-09-15""^^xsd:date ;
          dbo:managerOf ?team .
  
  OPTIONAL { 
    ?club a dbo:SportsTeam ;
          rdfs:label ?nicknameClub ;
          dbp:nickname ?person .
  }
  
  FILTER (lang(?nicknameClub) = 'en')
  
  VALUES ?person {
    dbr:Armando_Heeb
  }
}
```",5,10,6,3,2,3,2,20,0,0,1,0,0.0,0
528,59,test,"Give me the war of the military force of the entity, that is a societal event, in Chile and war of the commander in the work of --01-09.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/author> ""--01-09""^^<http://www.w3.org/2001/XMLSchema#gMonthDay> . ?v2 <http://dbpedia.org/ontology/battle> ?v3 . ?v5 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/ontology/commander> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Chile> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?war ?commander WHERE {
  ?war a dbo:War ;
      dbp:location ""Chile"" .
  
  OPTIONAL { 
    ?war dbo:militaryForce ?militaryForce .
    ?militaryForce dbo:commander ?commander .
  }
}
```",6,7,7,3,2,3,3,71,0,0,14,0,0.0,0
281,50,test,"Give me the war of the profession, that is a military unit, of Heather Roy and entity in the birth place, that is a country, of the leader, that is a politician, of 1962 New South Wales state election.",SELECT ?result WHERE { <http://dbpedia.org/resource/1962_New_South_Wales_state_election> <http://dbpedia.org/property/leader> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://dbpedia.org/ontology/birthPlace> ?v4 . <http://dbpedia.org/resource/Heather_Roy> <http://dbpedia.org/property/occupation> ?v3 . ?result <http://dbpedia.org/ontology/place> ?v4 . ?v3 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryUnit ?country WHERE {
  # Find military unit associated with Heather Roy's profession (assuming politics)
  dbr:Heather_Roy dbo:profession dbr:Politician .
  dbr:Politician dbo:relatedMilitaryUnit ?militaryUnit .

  # Find the birthplace country of Robert Askin
  dbr:Robert_Askin dbo:birthPlace ?birthPlace .
  ?birthPlace dbo:country ?country .
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
281,52,test,"Give me the entity in the birth place, that is a country, of Bob Heffron and war of New Zealand Army and war of the awardee of the award of Jonathon Band.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> ?v3 . ?result <http://dbpedia.org/ontology/place> ?v5 . ?v2 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/New_Zealand_Army> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Jonathon_Band> <http://dbpedia.org/property/awards> ?v3 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Bob_Heffron> <http://dbpedia.org/ontology/birthPlace> ?v5 . },"```sparql
# Query 1: Retrieve Bob Heffron's birthplace that is a country
SELECT ?birthPlace WHERE {
    wd:Q123456 dbo:birthPlace ?birthPlace .
    ?birthPlace rdf:type dbo:Country .
}

# Query 2: List wars involving the New Zealand Army
SELECT DISTINCT ?war WHERE {
    wd:Q789012 dbo:militaryConflict ?war .
    ?war rdf:type dbo:MilitaryConflict .
}

# Query 3: Identify the award received by Jonathon Band
SELECT ?award WHERE {
    wd:Q987654 dbo:receivedAward ?award .
}

# Query 4: Find the war associated with Jonathon Band's award
SELECT DISTINCT ?war WHERE {
    ?award dbo:relatedToWar ?war .
    ?war rdf:type dbo:MilitaryConflict .
}

# Query 5: Determine if there is a common country between Bob Heffron's birthplace and the wars identified in Queries 2 and 4
SELECT DISTINCT ?commonCountry WHERE {
    { SELECT ?birthPlace WHERE {
        wd:Q123456 dbo:birthPlace ?birthPlace .
        ?birthPlace rdf:type dbo:Country .
    }}
    
    UNION
    
    { SELECT ?warCountry WHERE {
        ?war dbo:location ?warCountry .
        ?warCountry rdf:type dbo:Country .
        VALUES ?war { 
            # Insert results from Query 2 and Query 4 here
        }
    }}

    FILTER(?birthPlace = ?warCountry)
}
```

Note: Replace `wd:Q123456`, `wd:Q789012`, and `wd:Q987654` with the actual DBpedia identifiers for Bob Heffron, New Zealand Army, and Jonathon Band respectively. The results from Queries 2 and 4 should be inserted into Query 5.",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
328,48,test,"Give me the leader of the office, that is a government agency, of Joseph Stalin and awardee of the award of the commander in Volcano and Ryukyu Islands campaign.",SELECT ?result WHERE { <http://dbpedia.org/resource/Joseph_Stalin> <http://dbpedia.org/property/office> ?v1 . ?result <http://dbpedia.org/property/awards> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v3 <http://dbpedia.org/property/awards> ?v2 . ?v1 <http://dbpedia.org/ontology/leader> ?result . <http://dbpedia.org/resource/Volcano_and_Ryukyu_Islands_campaign> <http://dbpedia.org/ontology/commander> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?officeLeader ?award WHERE {
  # Identify Joseph Stalin's office
  dbr:Joseph_Stalin dbo:positionHeld ?office .
  
  # Determine the leader of that office (likely Stalin himself)
  OPTIONAL { ?office dbo:leader ?officeLeader . }
  
  # Find awards related to Volcano and Ryukyu Islands campaigns
  ?award dbo:relatedEvent ?event .
  FILTER (
    EXISTS { ?event rdfs:label ""Volcano Islands campaign""@en } ||
    EXISTS { ?event rdfs:label ""Ryukyu Islands campaign""@en }
  )
  
  # Check if Stalin was an awardee of such an award
  OPTIONAL { ?award dbo:recipient dbr:Joseph_Stalin . }
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
391,71,test,"Give me the native of the figure known as the nick name of Jackson, Tennessee and actor of the movie, that is a movie and a work and a television show, with the professional in  and actor of the claim to fame, that is a work, of the spouse of Sherry Hormann.","SELECT ?result WHERE { <http://dbpedia.org/resource/Jackson,_Tennessee> <http://xmlns.com/foaf/0.1/nick> ?v1 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://dbpedia.org/property/nickname> ?v1 . ?v7 <http://dbpedia.org/property/occupation> """"@en . ?v4 <http://dbpedia.org/ontology/knownFor> ?v5 . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v8 <http://dbpedia.org/property/starring> ?result . ?v8 <http://dbpedia.org/property/starring> ?v7 . <http://dbpedia.org/resource/Sherry_Hormann> <http://dbpedia.org/ontology/spouse> ?v4 . ?v5 <http://dbpedia.org/ontology/starring> ?result . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. }","```sparql
# Step 1: Find the nickname of Jackson, Tennessee
SELECT ?nickname WHERE {
  ?city rdfs:label ""Jackson""@en .
  ?city dbo:nickname ?nickname .
}

# Step 2: Find an actor known by that nickname and acted in a movie/work/TV show with the same name
SELECT DISTINCT ?actor WHERE {
  ?movie rdfs:label ?nickname .
  ?movie dbo:starring ?actor .
  ?work rdfs:label ?nickname .
  ?tvShow rdfs:label ?nickname .
}

# Step 3: Find Sherry Hormann's spouse
SELECT ?spouse WHERE {
  dbpedia:Sherry_Hormann dbo:spouse ?spouse .
}

# Step 4: Determine the claim to fame of Sherry Hormann's spouse
SELECT DISTINCT ?claimToFame WHERE {
  ?spouse dbo:profession ""Actor""@en ;
          dbo:knownFor ?claimToFame .
}

# Step 5: Find the native place of the actor identified in step 2
SELECT ?nativePlace WHERE {
  ?actor dbo:nativePlace ?nativePlace .
}
```",9,13,10,3,3,3,3,71,0,0,1,0,0.0,0
659,24,test,"Give me the commander in the war, that is an event and a military conflict, of 1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish) and military force of Napoleonic Wars.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/1st_Light_Cavalry_Lancers_Regiment_of_the_Imperial_Guard_(Polish)> <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Napoleonic_Wars> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?event ?commander WHERE {
  # Identify the regiment
  VALUES ?regiment { dbr:1st_Light_Cavalry_Lancers_Regiment_of_the_Imperial_Guard_(Polish) }
  
  # Find events (military conflicts) involving this regiment during the Napoleonic Wars
  ?event dbo:participatedInMilitaryConflict ?conflict .
  ?regiment dbo:participatedIn ?event .
  ?conflict dbo:wikiPageRedirects dbr:Napoleonic_Wars .

  # Find the commander of the regiment in these events
  ?commander dbo:commanded ?regiment .
  
  FILTER EXISTS { ?event dbo:wikiPageRedirects ?conflict }
}
```",3,5,4,2,2,3,3,71,0,0,29,0,0.0,0
232,62,test,"Give me the actor of the claim to fame, that is a film and a military conflict, of the professional in Actor, narrator and producer and native of London and child of the person born as the birth name of Jon Pertwee.","SELECT ?result WHERE { ?v6 <http://dbpedia.org/ontology/starring> ?result . ?v3 <http://dbpedia.org/ontology/child> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/property/birthName> ?v4 . <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/property/birthName> ?v4 . ?v0 <http://dbpedia.org/ontology/knownFor> ?v6 . ?v0 <http://dbpedia.org/property/occupation> ""Actor, narrator and producer""@en . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/London> . }","```sparql
SELECT ?actor WHERE {
  ?film dcterms:title ""The Claim""@en .
  ?film dbo:starring ?actor .
  FILTER EXISTS { 
    ?person foaf:name ""Carole Ann Ford""@en ;
            dbo:profession dbo:Actor ;
            dbo:birthPlace dbpedia:London ;
            dbo:parent ?parent .
    ?parent foaf:name ""Jon Pertwee""@en .
  }
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
659,71,test,"Give me the military force of the force, that is a societal event and an event and a military conflict, of the reference to Rutger Jan Schimmelpenninck and commander in the war, that is an event and a military conflict, of the figure known, that is a military unit and an organisation, as 'Polish Horse' and commander in the force of the native, that is an office holder, of Kingdom of Ireland.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v8 . ?v2 <http://dbpedia.org/ontology/commander> ?v1 . ?v8 <http://dbpedia.org/ontology/commander> ?v7 . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v5 <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v4 <http://dbpedia.org/property/nickname> ""'Polish Horse'""@en . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Kingdom_of_Ireland> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v4 <http://dbpedia.org/ontology/battle> ?v5 . ?v7 <http://xmlns.com/foaf/0.1/name> ""Rutger Jan Schimmelpenninck""@en . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. }","```sparql
SELECT ?militaryForce WHERE {
  ?person1 foaf:name ""Rutger Jan Schimmelpenninck"" .
  ?event1 dbo:agent ?person1 ;
          rdf:type dbo:MilitaryConflict .
  
  ?person2 foaf:name ""Napoleon Bonaparte"" .
  ?event1 dbo:commander ?person2 .

  ?person3 foaf:name ""Józef Poniatowski"" .
  ?unit1 rdfs:label ""Polish Horse""@en ;
         dbo:commander ?person3 ;
         dbo:partOf ?event1 .

  ?officeHolder rdf:type dbo:OfficeHolder ;
                dbo:nativeCountry dbr:Kingdom_of_Ireland .
  
  ?militaryForce dbo:commander ?officeHolder ;
                 dbo:partOf ?unit1 .
}
```",9,17,10,3,3,3,3,71,0,0,15,0,0.0,0
427,46,test,Give me the reference to the name of the party of Michele Pinto and party of the father of Lamberto Andreotti.,SELECT ?result WHERE { ?v2 <http://xmlns.com/foaf/0.1/name> ?v1 . <http://dbpedia.org/resource/Lamberto_Andreotti> <http://dbpedia.org/property/father> ?v4 . ?v4 <http://dbpedia.org/ontology/party> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . <http://dbpedia.org/resource/Michele_Pinto> <http://dbpedia.org/ontology/party> ?v2 . },"```sparql
SELECT ?michelePartyLabel ?fatherPartyLabel WHERE {
  # Find Michele Pinto's political party
  dbpedia:en:Michele_Pinto dbo:party ?micheleParty .
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
  
  # Find Lamberto Andreotti's father and his political party
  dbpedia:it:Lamberto_Andreotti dbo:father ?lambertoFather .
  ?lambertoFather dbo:party ?fatherParty .

  # Get labels for the parties
  ?micheleParty rdfs:label ?michelePartyLabel .
  ?fatherParty rdfs:label ?fatherPartyLabel .
}
```",5,5,6,3,2,3,3,71,0,0,2,0,0.0,0
161,62,test,"Give me the commander in Biscay Campaign and military force of the force, that is a societal event and a military conflict, of the predecessor of Indalecio Prieto and military force of the force, that is a societal event and an event and a military conflict, of the person decedent at Francoist Spain.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v4 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Francoist_Spain> . ?v0 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Indalecio_Prieto> . ?result <http://dbpedia.org/ontology/battle> ?v6 . ?v6 <http://dbpedia.org/ontology/commander> ?v0 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Biscay_Campaign> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://dbpedia.org/ontology/commander> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
# Step 1: Find Indalecio Prieto's predecessor
SELECT ?predecessor WHERE {
  ?prieto dbo:officeHolder dbpedia-es:Indalecio_Prieto .
  ?prieto dbo:predecessor ?predecessor .
}

# Step 2: Find the commander of the Biscay Campaign
SELECT ?commander WHERE {
  ?campaign dbo:type dbr:Military_campaign ;
            rdfs:label ""Biscay Campaign""@en .
  ?campaign dbo:commander ?commander .
}

# Step 3: Identify a notable person who died during Francoist Spain
SELECT ?decedent WHERE {
  ?person dbo:deathPlace dbpedia-es:Francoist_Spain ;
          dbo:occupation dbr:Military_person .
  ?person dbo:dateOfDeath ?date .
  FILTER(?date >= ""1939-01-01""^^xsd:date && ?date <= ""1975-11-20""^^xsd:date)
}

# Step 4: Find the military force associated with this person
SELECT ?militaryForce WHERE {
  ?decedent dbo:militaryService ?militaryForce .
  ?militaryForce dbo:type dbr:Military_conflict ;
                 dbo:socialEvent ?socialEvent .
}
```",7,12,8,3,3,3,3,71,0,0,3,0,0.0,0
435,25,test,"Give me the territory administered from the figure known, that is a settlement and a town and Icelandic, as Land of fire and ice and work of Article 62, Section IV of Constitution of Iceland and region of the time zone in Bombali Shebora Chiefdom.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/capital> ?v2 . ?result <http://dbpedia.org/property/author> ""Article 62, Section IV of Constitution of Iceland""@en . ?v2 <http://dbpedia.org/property/nickname> ""Land of fire and ice""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Iceland>. ?result <http://dbpedia.org/ontology/timeZone> ?v4 . <http://dbpedia.org/resource/Bombali_Shebora_Chiefdom> <http://dbpedia.org/ontology/timeZone> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Town>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?town WHERE {
  ?town a dbo:Municipality ;
        dbo:country dbr:Iceland .
}
```",5,8,6,2,3,2,3,28,0,0,1,0,0.0,0
281,35,test,"Give me the war of the profession, that is a military unit, of Heather Roy and war of the awardee of Knight Grand Cross of the Order of the Bath.",SELECT ?result WHERE { <http://dbpedia.org/resource/Heather_Roy> <http://dbpedia.org/property/occupation> ?v1 . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_the_Bath> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. },"```sparql
SELECT ?heatherRoyUnit ?knightGrandCrossUnit WHERE {
  # Heather Roy's association with a military unit
  OPTIONAL {
    ?heatherRoy dbo:profession dbr:Member_of_the_New_Zealand_Parliament .
    ?heatherRoy dbo:militaryUnit ?heatherRoyUnit .
  }
  
  # A notable recipient of the Knight Grand Cross of the Order of the Bath and their military unit
  OPTIONAL {
    ?knightGrandCrossAwarded a dbo:Award ;
                            dbo:recipient ?recipient .
    FILTER (str(?knightGrandCrossAwarded) = ""Knight_Grand_Cross_of_the_Order_of_the_Bath"")
    ?recipient dbo:militaryUnit ?knightGrandCrossUnit .
  }
}
```",4,5,5,2,2,3,3,71,0,0,9,0,0.0,0
281,69,test,"Give me the war of the awardee of the award of Jonathon Band and war of the profession, that is a military unit, of the professional, that is an office holder and a politician, in New Zealand Army and entity in the birth place, that is a country, of Bob Heffron.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Jonathon_Band> <http://dbpedia.org/property/awards> ?v4 . <http://dbpedia.org/resource/Bob_Heffron> <http://dbpedia.org/ontology/birthPlace> ?v7 . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> ?v7 . ?v1 <http://dbpedia.org/property/occupation> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/New_Zealand_Army> . ?v3 <http://dbpedia.org/property/awards> ?v4 . ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
# Step 1: Find Jonathon Band's award
SELECT ?award WHERE {
  dbpedia:Jonathon_Band dbo:awarded ?award .
}

# Step 2: Determine the war associated with the award
SELECT DISTINCT ?war WHERE {
  ?award dbo:associatedWithWar ?war .
}

# Step 3: Find Jonathon Band's profession in the New Zealand Army
SELECT ?profession WHERE {
  dbpedia:Jonathon_Band dbo:militaryUnit ?unit .
  ?unit dbo:partOfMilitaryOrganization dbpedia:New_Zealand_Army .
  ?unit rdfs:label ?profession .
}

# Step 4: Find Bob Heffron's birthplace
SELECT ?birthPlace WHERE {
  dbpedia:Bob_Heffron dbo:birthPlace ?birthPlace .
}

# Step 5: Identify an office holder and politician from the birthplace country
SELECT DISTINCT ?politician WHERE {
  ?birthPlace rdf:type dbo:Country .
  ?politician dbo:nationality ?birthPlace ;
              dbo:occupation dbpedia:Politician ;
              dbo:officeHolder true .
}

# Step 6: Determine the war associated with this profession
SELECT DISTINCT ?war WHERE {
  ?profession dbo:associatedWithWar ?war .
}
```",8,12,9,3,3,3,3,71,0,0,1,0,0.0,0
547,69,test,Give me the resting place of the child of the child of William Haliburton and resting place of the awardee of the award of Gerald Graham and resting place of the actor of Enemy at the Door.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> ?v1 . <http://dbpedia.org/resource/Gerald_Graham> <http://dbpedia.org/property/awards> ?v1 . <http://dbpedia.org/resource/Enemy_at_the_Door> <http://dbpedia.org/property/starring> ?v7 . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . ?v4 <http://dbpedia.org/property/father> ""William Haliburton""@en . ?v4 <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://dbpedia.org/ontology/restingPlace> ?result . ?v7 <http://dbpedia.org/ontology/restingPlace> ?result . }","```sparql
# Query for the resting place of the child of the child of William Haliburton
SELECT DISTINCT ?grandchildRestingPlace WHERE {
  ?williamHaliburton dbo:spouse ?spouse .
  ?williamHaliburton foaf:name ""William Haliburton""@en .
  ?williamHaliburton dbo:child ?child .
  ?child dbo:child ?grandchild .
  ?grandchild dbo:deathPlace ?grandchildRestingPlace .
}

UNION

# Query for the resting place of the awardee of the award of Gerald Graham
SELECT DISTINCT ?awardeeRestingPlace WHERE {
  ?geraldGraham dbo:awardReceived ?award .
  ?geraldGraham foaf:name ""Gerald Graham""@en .
  ?award dbo:recipient ?awardee .
  ?awardee dbo:deathPlace ?awardeeRestingPlace .
}

UNION

# Query for the resting place of an actor in ""Enemy at the Door""
SELECT DISTINCT ?actorRestingPlace WHERE {
  ?film dbo:title ""Enemy at the Door""@en .
  ?film dbo:starring ?actor .
  ?actor dbo:deathPlace ?actorRestingPlace .
}
```",8,8,9,3,3,3,3,71,0,0,1,0,0.0,0
492,65,test,"Give me the person decedent at the work of US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite and person decedent at the capital, that is a settlement, of Algeria and commander in the war, that is a military conflict and an event, of the commander in Battle of Verdun.","SELECT ?result WHERE { ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Battle_of_Verdun> <http://dbpedia.org/ontology/commander> ?v0 . ?result <http://dbpedia.org/ontology/deathPlace> ?v4 . <http://dbpedia.org/resource/Algeria> <http://dbpedia.org/ontology/capital> ?v3 . ?v4 <http://dbpedia.org/property/author> ""US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite""@en . ?result <http://dbpedia.org/ontology/deathPlace> ?v3 . ?v0 <http://dbpedia.org/ontology/battle> ?v6 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v6 <http://dbpedia.org/ontology/commander> ?result . }","```sparql
# Query to find the successor of Joseph C. Satterthwaite as US Assistant Secretary of State for African Affairs
SELECT ?successor WHERE {
  ?satterthwaite dbo:office dbr:Assistant_Secretary_of_State_for_African_Affairs ;
                 foaf:name ""Joseph C. Satterthwaite"" .
  ?successor dbo:predecessor ?satterthwaite ;
             dbo:office dbr:Assistant_Secretary_of_State_for_African_Affairs .
}

UNION

# Query to find a notable person associated with Algiers, the capital of Algeria
SELECT ?person WHERE {
  dbr:Algiers dbo:capitalOf dbr:Algeria .
  ?person dbo:placeOfBirth dbr:Algiers ;
          dbo:occupation dbp:Politician ; # Assuming we are looking for a political figure
}

UNION

# Query to find the commander in the Battle of Verdun and their commander in another war
SELECT ?commanderInAnotherWar WHERE {
  ?battle dbo:name ""Battle of Verdun"" ;
          dbo:participatedIn dbp:World_War_I .
  ?verdunCommander dbo:commanded ?battle .
  ?anotherWar dbo:participatedIn ?verdunCommander ;
              dbo:commandedBy ?commanderInAnotherWar .
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
981,16,test,"Give me the entity in the region of Time in Indonesia and birth place of the person born, that is a beauty queen, as .","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v2 . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v3 <http://dbpedia.org/property/birthName> """"@en . ?v2 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Time_in_Indonesia> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BeautyQueen>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?beautyQueen ?birthPlace WHERE {
  ?beautyQueen a dbo:BeautyQueen .
  ?beautyQueen dbo:birthPlace ?birthPlace .
  ?birthPlace dbo:country dbr:Indonesia .
}
```",4,5,5,2,2,3,2,20,19,54,0,0.2602739726027397,1.0,0.41304347826086957
391,35,test,"Give me the native of the figure known as Hub City and actor of the movie, that is a movie and a work and a television show, with Roz Ryan.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/property/nickname> ""Hub City""@en . ?v1 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Roz_Ryan> . ?v1 <http://dbpedia.org/property/starring> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor ?nativePlace WHERE {
  ?actor dbo:nativePlace dbr:Spartanburg,_South_Carolina .
  ?actor dbo:spouse ?partner .
  ?partner foaf:name ""Roz Ryan"" .
  ?project dbo:starring ?actor ;
           a dbo:Film ;
           dbo:basedOnBook ?book .
  ?tvShow dbo:starring ?actor ;
          a dbo:TVSeries .
}
```",4,7,5,2,2,3,3,71,0,0,1,0,0.0,0
485,27,test,"Give me the birth place of the awardee, that is a writer and a poet, of Eric Gregory Award and entity in the birth place, that is a region, of Joseph Whitaker (naturalist) and entity in United Kingdom.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?result <http://dbpedia.org/ontology/country> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Poet>. <http://dbpedia.org/resource/Joseph_Whitaker_(naturalist)> <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>. ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Eric_Gregory_Award> . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?awardeeBirthPlace ?region WHERE {
  # Find a writer and poet who won the Eric Gregory Award
  ?awardee dbo:award dbr:Eric_Gregory_Award ;
          rdf:type dbo:Writer ;
          rdf:type dbo:Poet .

  # Get their birthplace
  ?awardee dbo:birthPlace ?awardeeBirthPlace .

  # Find Joseph Whitaker's birth place and ensure it is a region in the UK
  dbr:Joseph_Whitaker dbo:birthPlace ?whitakerBirthPlace .
  
  ?region dbp:country dbr:United_Kingdom ;
          dbo:containedInPlace ?whitakerBirthPlace .

  # Ensure the awardee's birthplace is within the same region
  ?awardeeBirthPlace dbo:locatedIn ?region .
}
```",5,8,6,2,3,2,3,28,0,0,1,0,0.0,0
435,23,test,"Give me the territory administered from the figure known, that is a settlement and a town and Icelandic, as Land of fire and ice and work of the author of Iceland.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/nickname> ""Land of fire and ice""@en . ?result <http://dbpedia.org/ontology/capital> ?v1 . ?result <http://dbpedia.org/property/author> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Town>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Iceland>. <http://dbpedia.org/resource/Iceland> <http://dbpedia.org/property/author> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?settlement WHERE {
  ?settlement a dbo:Settlement ;
              dbo:country dbr:Iceland .
  
  OPTIONAL { 
    ?work dbo:author dbr:J._R._R._Tolkien .
    ?work dbo:wikiPageWikiLink ?settlement .
  }
}
```",4,7,5,2,2,2,3,28,0,179,1,0.0,0.0,0
378,42,test,Give me the war of the person born as Carl Pontus Gahn and claim to fame of the commander in Great Siege of Gibraltar and war of Joaquín Blake.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ""Carl Pontus Gahn""@en . <http://dbpedia.org/resource/Joaquín_Blake> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Great_Siege_of_Gibraltar> <http://dbpedia.org/ontology/commander> ?v1 . ?v1 <http://dbpedia.org/ontology/knownFor> ?result . ?v2 <http://dbpedia.org/ontology/battle> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person1 ?war1 ?person2 ?siegeRole ?peninsularWarRole WHERE {
  # Carl von Clausewitz (born as Carl Pontus Gahn)
  VALUES ?clausewitz { dbr:Claude_von_Clausewitz }
  ?clausewitz dbo:birthName ""Carl Pontus Gahn""@en .
  
  # War associated with Carl von Clausewitz
  ?clausewitz dbo:militaryConflict ?war1 .

  # Joaquín Blake
  VALUES ?blake { dbr/Joaqu%C3%ADn_Blake }
  ?blake dbo:roleInMilitaryOperation [
    a dbo:MilitaryOperation ;
    dbo:name ""Great Siege of Gibraltar""@en ;
    dbo:participant ?siegeRole .
  ] .

  # Joaquín Blake in the Peninsular War
  ?blake dbo:militaryConflict [
    a dbo:MilitaryConflict ;
    dbo:name ""Peninsular War""@en ;
    dbo:role ?peninsularWarRole .
  ]
}
```",5,5,6,2,3,3,3,71,0,0,2,0,0.0,0
360,25,test,"Give me the writer of the work, that is an album, of Dave Flett and reference to Manfred Mann and native of the death place, that is a settlement, of Winnie Madikizela-Mandela.","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Manfred Mann""@en . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Winnie_Madikizela-Mandela> <http://dbpedia.org/ontology/deathPlace> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Album>. ?result <http://dbpedia.org/ontology/birthPlace> ?v4 . ?v3 <http://dbpedia.org/property/author> ""Dave Flett""@en . ?v3 <http://dbpedia.org/property/writer> ?result . }","```sparql
# Step 1: Find albums by Dave Flett
SELECT ?album WHERE {
  ?album dbo:artist dbr:Dave_Flett .
  ?album rdf:type dbo:Album .
}

UNION

# Step 2: Filter albums with a reference to Manfred Mann
SELECT ?album WHERE {
  ?album dbo:relatedBand dbr:Manfred_Mann .
  ?album rdf:type dbo:Album .
}

# Step 3: Find the death place of Winnie Madikizela-Mandela
SELECT ?deathPlace WHERE {
  dbr:Winnie_Madikizela-Mandela dbo:placeOfBirth ?birthPlace ;
                                  dbo:deathPlace ?deathPlace .
}

# Step 4: Combine to find a writer associated with the album and death place
SELECT DISTINCT ?writer WHERE {
  # Albums by Dave Flett related to Manfred Mann
  ?album dbo:artist dbr:Dave_Flett ;
         dbo:relatedBand dbr:Manfred_Mann ;
         rdf:type dbo:Album .
  
  # Death place of Winnie Madikizela-Mandela
  dbr:Winnie_Madikizela-Mandela dbo:deathPlace ?deathPlace .

  # Find writer associated with the album
  ?album dbo:writer ?writer .
}
```",5,7,6,2,3,2,3,28,0,0,1,0,0.0,0
318,9,test,Give me the professional in the profession of Robert Xavier Rodriguez and person born in the founding year of Eel Pie Publishing.,SELECT ?result WHERE { <http://dbpedia.org/resource/Robert_Xavier_Rodriguez> <http://dbpedia.org/property/occupation> ?v3 . ?result <http://dbpedia.org/ontology/birthYear> ?v1 . <http://dbpedia.org/resource/Eel_Pie_Publishing> <http://dbpedia.org/ontology/foundingYear> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v3 . },"```sparql
# Step 1: Find Robert Xavier Rodriguez's profession
SELECT ?profession WHERE {
    dbpedia:Robert_Xavier_Rodriguez dbo:occupation ?profession .
}

# Step 2: Find the founding year of Eel Pie Publishing
SELECT ?foundingYear WHERE {
    dbpedia:Eel_Pie_Publishing dbo:foundingDate ?date .
    BIND(YEAR(?date) AS ?foundingYear)
}

# Step 3 and 4: Find a person born in that year with the same profession
SELECT DISTINCT ?person ?birthDate WHERE {
    # Assuming we have obtained ?profession from step 1 and ?foundingYear from step 2
    BIND(""Robert_Xavier_Rodriguez's_profession"" AS ?profession) # Replace with actual value from step 1
    BIND(2000 AS ?foundingYear) # Replace with actual value from step 2

    ?person dbo:birthDate ?birthDate .
    FILTER(YEAR(?birthDate) = ?foundingYear)
    
    ?person dbo:occupation ?profession .
}
```

Note: The placeholders `""Robert_Xavier_Rodriguez's_profession""` and `2000` in the final query should be replaced with actual values obtained from steps 1 and 2, respectively. This requires running the first two queries separately to get these values.",4,4,5,2,2,2,2,9,0,0,7,0,0.0,0
701,55,test,Give me the parent of the child of Ramesses II and spouse of the father of Merneptah and parent of the child of Nefertari.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ramesses_II> . <http://dbpedia.org/resource/Nefertari> <http://dbpedia.org/ontology/child> ?v3 . <http://dbpedia.org/resource/Merneptah> <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/ontology/child> ?v5 . },"```sparql
SELECT ?parent WHERE {
  wd:Q1516 wdt:P31/wdt:P279* wd:Q5; # Ramesses II is a human
  wdt:P22 ?spouse. # Spouse of Ramesses II

  ?child wdt:P25 wd:Q1516; # Child of Ramesses II
         wdt:P31/wdt:P279* wd:Q5. # The child is a human

  OPTIONAL { ?child wdt:P25 ?parentOfChild. } # Parent of the child of Nefertari (if known)

  FILTER(?spouse = wd:Q1517) # Filter for Queen Nefertari
}
```",6,6,7,2,3,3,3,71,0,0,1,0,0.0,0
285,20,test,Give me the parent of the child of the spouse of Aristotle Onassis and spouse of the professional in the award of Stan Lee.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/spouse> ?v5 . ?v5 <http://dbpedia.org/property/occupation> ?v4 . <http://dbpedia.org/resource/Stan_Lee> <http://dbpedia.org/property/awards> ?v4 . ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Aristotle_Onassis> . ?v1 <http://dbpedia.org/ontology/child> ?v2 . },"```sparql
# Find Aristotle Onassis's spouse and their child
SELECT ?child WHERE {
  wd:Q1116 wdt:P26 ?spouse .
  ?spouse wdt:P40 ?child .
}

# Find the parent of Christina Onassis
SELECT ?parent WHERE {
  wd:Q1120 wdt:P22 ?parent .
}

# Find Stan Lee's spouse
SELECT ?stanSpouse WHERE {
  wd:Q1119 wdt:P26 ?stanSpouse .
}

# Combine results to find the parent of Christina Onassis and spouse of Joan Boocock Lee
SELECT DISTINCT ?result WHERE {
  { 
    wd:Q1120 wdt:P22 ?result . # Parent of Christina Onassis
  }
  UNION
  {
    wd:Q1119 wdt:P26 ?stanSpouse .
    ?stanSpouse rdfs:label ""Joan Boocock Lee""@en .
    ?stanSpouse wdt:P26 ?result . # Spouse of Joan Boocock Lee
  }
}
```",6,6,7,3,2,3,2,20,0,0,3,0,0.0,0
487,18,test,"Give me the administration of the person born, that is a soccer player, as Philip Brian Scott and country of the administration of the person born on 1955-01-26.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v2 <http://dbpedia.org/ontology/country> ?result . ?v2 <http://dbpedia.org/property/leader> ?v1 . ?v3 <http://dbpedia.org/property/birthName> ""Philip Brian Scott""@en . ?result <http://dbpedia.org/property/governor> ?v3 . ?v1 <http://dbpedia.org/ontology/birthDate> ""1955-01-26""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?philipAdministration ?personCountry WHERE {
  # Find Philip Brian Scott who is a soccer player and his place of birth
  ?philip a dbo:SoccerPlayer ;
          foaf:name ""Philip Brian Scott"" ;
          dbp:birthPlace ?birthPlace .
  
  ?birthPlace dbo:administrativeArea ?philipAdministration .

  # Find the person born on 1955-01-26 and their country of birth
  ?person dbo:birthDate ?date ;
          dbp:birthPlace ?placeOfBirth .
  
  FILTER (YEAR(?date) = 1955 && MONTH(?date) = 1 && DAY(?date) = 26)
  
  ?placeOfBirth dbo:country ?country .
  BIND(IRI(CONCAT(""http://dbpedia.org/resource/"", STR(?country))) AS ?personCountry)
}
```",5,6,6,3,2,3,2,20,0,0,1,0,0.0,0
465,9,test,"Give me the death place of the native of Prague and administration of the leader, that is a political party and an organisation, of Chamber of Deputies of the Czech Republic.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Chamber_of_Deputies_of_the_Czech_Republic> <http://dbpedia.org/property/leader> ?v3 . ?result <http://dbpedia.org/property/leaderParty> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v1 <http://dbpedia.org/ontology/deathPlace> ?result . ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Prague> . },"```sparql
SELECT ?deathPlace WHERE {
  wd:Q1234 dbo:placeOfBirth dbr:Prague .
  wd:Q1234 dbo:leaderOf <http://dbpedia.org/resource/Civic_Democratic_Party> .
  wd:Q1234 dbo:memberOfParliament <http://dbpedia.org/resource/Chamber_of_Deputies_of_the_Czech_Republic> .
  wd:Q1234 dbo:deathPlace ?deathPlace .
}
```",4,6,5,2,2,2,2,9,0,0,8,0,0.0,0
161,69,test,"Give me the military force of the force, that is a societal event and an event and a military conflict, of the person decedent at Francoist Spain and military force of the force, that is a societal event and a military conflict, of Francisco Largo Caballero and commander in the force, that is an event, of the figure known as El Director.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v7 . ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://dbpedia.org/ontology/commander> ?v1 . ?v4 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Francoist_Spain> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://xmlns.com/foaf/0.1/nick> ""El Director""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/ontology/commander> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v7 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","```sparql
# Query for Francisco Largo Caballero's involvement in a societal event and military conflict
SELECT ?event WHERE {
  ?person dbr:Francisco_Largo_Caballero .
  ?person dbo:spouse ?decedent .
  ?decedent dbo:deathPlace dbr:Francoist_Spain .
  ?event dbo:participant ?person ;
         a dbo:MilitaryConflict, dbo:SocietalEvent .
}

# Query for the military force and commander role of Francisco Largo Caballero
SELECT ?force WHERE {
  ?person dbr:Francisco_Largo_Caballero .
  ?conflict dbo:commander ?person ;
            a dbo:MilitaryConflict .
  ?conflict dbo:militaryForce ?force .
}
```",8,14,9,3,3,3,3,71,0,0,32,0,0.0,0
488,28,test,Give me the death place of Tokugawa Ieyasu and administration of Emperor Go-Yōzei and birth place of the commander in Boshin War.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Emperor_Go-Yōzei> . <http://dbpedia.org/resource/Boshin_War> <http://dbpedia.org/ontology/commander> ?v1 . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Tokugawa_Ieyasu> <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?deathPlaceTokugawaIeyasu ?administrationGoYozei ?birthPlaceSaigoTakamori WHERE {
  # Tokugawa Ieyasu's death place
  dbr:Tokugawa_Ieyasu dbo:deathPlace ?deathPlaceTokugawaIeyasu .

  # Emperor Go-Yōzei's administration (reign period)
  dbr:Emperor_Go-Yozei dbo:reign ?administrationGoYozei .

  # Saigō Takamori's birth place
  dbr:Saigo_Takamori dbo:birthPlace ?birthPlaceSaigoTakamori .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
701,68,test,Give me the parent of the child of the child of Seti I and spouse of the father of Merneptah and parent of the child of the spouse of Amun-her-khepeshef.,SELECT ?result WHERE { ?v7 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Amun-her-khepeshef> <http://dbpedia.org/ontology/spouse> ?v5 . <http://dbpedia.org/resource/Merneptah> <http://dbpedia.org/property/father> ?v3 . ?v5 <http://dbpedia.org/ontology/child> ?v4 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seti_I> . ?v4 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/spouse> ?v3 . ?result <http://dbpedia.org/ontology/child> ?v7 . },"```sparql
# Find Seti I's child Merenptah
SELECT ?merenptah WHERE {
  wd:Q123456 wdt:P31/wdt:P279* wd:Q43210; # Seti I is a person and instance of Pharaoh
  wdt:P40 ?merenptah. # Seti I has child Merenptah
}

# Find the child of Merenptah (Seti II)
SELECT ?seti2 WHERE {
  ?merenptah wdt:P31/wdt:P279* wd:Q43210; # Merenptah is a person and instance of Pharaoh
  wdt:P40 ?seti2. # Merenptah has child Seti II
}

# Find the parent (mother) of Seti II (Queen Takhat)
SELECT ?takhat WHERE {
  ?seti2 wdt:P31/wdt:P279* wd:Q43210; # Seti II is a person and instance of Pharaoh
  wdt:P22 ?takhat. # Seti II's mother is Queen Takhat
}

# Find the spouse of Seti I (Tuya)
SELECT ?tuya WHERE {
  wd:Q123456 wdt:P31/wdt:P279* wd:Q43210; # Seti I is a person and instance of Pharaoh
  wdt:P26 ?tuya. # Seti I's spouse is Tuya
}

# Find the child of Tuya (Khaemweset)
SELECT ?khaemweset WHERE {
  ?tuya wdt:P31/wdt:P279* wd:Q43210; # Tuya is a person and instance of Pharaoh
  wdt:P40 ?khaemweset. # Tuya has child Khaemweset
}

# Find Amun-her-khepeshef's spouse (Isetnofret)
SELECT ?isetnofret WHERE {
  wd:Q654321 wdt:P31/wdt:P279* wd:Q43210; # Amun-her-khepeshef is a person and instance of Pharaoh
  wdt:P26 ?isetnofret. # Amun-her-khepeshef's spouse is Isetnofret
}

# Find the child of Amun-her-khepeshef (Pentaweret)
SELECT ?pentaweret WHERE {
  wd:Q654321 wdt:P31/wdt:P279* wd:Q43210; # Amun-her-khepeshef is a person and instance of Pharaoh
  wdt:P40 ?pentaweret. # Amun-her-khepeshef has child Pentaweret
}

# Find the parent (mother) of Pentaweret
SELECT ?parent WHERE {
  ?pentawer",8,8,9,3,3,3,3,71,0,0,1,0,0.0,0
754,19,test,Give me the parent of the parent of May Hnin Htapi and parent of the child of the reference to Ram Khamhaeng the Great.,"SELECT ?result WHERE { <http://dbpedia.org/resource/May_Hnin_Htapi> <http://dbpedia.org/ontology/parent> ?v2 . ?result <http://dbpedia.org/ontology/child> ?v4 . ?v0 <http://dbpedia.org/ontology/child> ?v4 . ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Ram Khamhaeng the Great""@en . }","```sparql
# Query for May Hnin Htapi's grandparent
SELECT ?grandparent WHERE {
  ?mayHninHtapi dbo:birthName ""May Hnin Htapi""@en .
  ?mayHninHtapi dbo:parent ?parent1 .
  ?parent1 dbo:parent ?grandparent .
}

# Query for the parent of a child of Ram Khamhaeng the Great
SELECT ?childParent WHERE {
  dbpedia:Ram_Khamhaeng_the_Great dbo:child ?child .
  ?child dbo:parent ?childParent .
}
```",5,5,6,3,2,3,2,20,0,0,1,0,0.0,0
701,51,test,"Give me the spouse of the father of the commander, that is a royalty, in Battle of Perire and parent of the child of Ramesses II.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ramesses_II> . <http://dbpedia.org/resource/Battle_of_Perire> <http://dbpedia.org/ontology/commander> ?v1 . ?v1 <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/ontology/child> ?v4 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
SELECT DISTINCT ?spouse WHERE {
  # Step 1: Identify the commander in Battle of Perire
  ?battle dbo:location ""Battle of Perire""@en .
  ?battle dbo:commander ?commander .

  # Step 2: Find the father of the commander
  ?father rdfs:label ?fatherLabel ;
          dbo:child ?commander .

  # Step 3: Determine the spouse of this father
  ?spouse dbo:spouse ?father ;
          rdf:type dbo:Person .

  # Step 4: Check if the spouse is royalty
  ?spouse dbo:title ?title .
  FILTER(CONTAINS(LCASE(?title), ""king"") || CONTAINS(LCASE(?title), ""queen""))

  # Step 5: Link to Ramesses II's child
  ?child rdfs:label ?childLabel ;
         dbo:parent ?spouse ;
         dbo:parent <http://dbpedia.org/resource/Ramesses_II> .
}
```",5,6,6,3,2,3,3,71,0,0,2,0,0.0,0
747,48,test,"Give me the band of the person born as Tracey Elizabeth McSween and person born on the birth date of the person decedent, that is an athlete and a soccer player, at Zolotonosha.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ""Tracey Elizabeth McSween""@en . ?v3 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Zolotonosha> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v3 <http://dbpedia.org/ontology/birthDate> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?result <http://dbpedia.org/ontology/birthDate> ?v2 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?band WHERE {
  # Step 1: Identify Tracey Elizabeth McSween and her birth date
  ?tracey a dbo:Person ;
          foaf:name ""Tracey Elizabeth McSween""@en ;
          dbo:birthday ?birthDate .

  # Step 2: Find the decedent born on that birth date
  ?decedent dbo:birthday ?birthDate ;
           dbo:deathPlace ?deathPlace ;
           a dbo:Person .

  # Step 3: Identify an athlete and soccer player born in Zolotonosha
  ?athlete dbo:nationality dbr:Ukraine ;
           dbo:sport dbr:Soccer ;
           dbo:birthPlace dbr:Zolotonosha ;
           a dbo:Athlete .

  # Step 4: Check if this person is associated with any band
  OPTIONAL { ?athlete dbo:band ?band . }
  
  FILTER EXISTS { ?decedent dbo:deathDate ?deathDate } # Ensure the decedent has a death date

}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
959,52,test,"Give me the manager of 2013 Júbilo Iwata season and native of the residence, that is a country, of Yōichi Masuzoe and member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of the person born in 1958.","SELECT ?result WHERE { <http://dbpedia.org/resource/Yōichi_Masuzoe> <http://dbpedia.org/property/residence> ?v4 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. <http://dbpedia.org/resource/2013_Júbilo_Iwata_season> <http://dbpedia.org/ontology/manager> ?result . ?result <http://dbpedia.org/ontology/team> ?v1 . ?v3 <http://dbpedia.org/ontology/almaMater> ?v1 . ?v3 <http://dbpedia.org/ontology/birthYear> ""1958""^^<http://www.w3.org/2001/XMLSchema#gYear> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?result <http://dbpedia.org/ontology/birthPlace> ?v4 . }","```sparql
# Step 1: Find Yōichi Masuzoe's native residence country
SELECT ?country WHERE {
  dbpedia:Yōichi_Masuzoe dbo:nativePlace ?place .
  ?place rdf:type dbo:City ;
         dbo:country ?country .
}

# Step 2: Find a person born in 1958 with the specified alma mater
SELECT DISTINCT ?person WHERE {
  ?person dbo:birthdayYear ""1958""^^xsd:gYear ;
          dbo:almaMater ?university .
  ?university rdf:type dbo:University ;
              rdfs:label ?label .
  FILTER(CONTAINS(LCASE(?label), ""japan"") && CONTAINS(LCASE(?label), ""university""))
}

# Step 3: Find the manager of Júbilo Iwata for the 2013 season
SELECT DISTINCT ?manager WHERE {
  dbpedia:Júbilo_Iwata dbo:manager ?manager .
  ?manager dbo:managedTeam dbpedia:Júbilo_Iwata ;
           dbo:managementEndYear ""2013""^^xsd:gYear .
}

# Step 4: Combine the information to find the correct manager
SELECT DISTINCT ?manager WHERE {
  # Manager of Júbilo Iwata in 2013
  dbpedia:Júbilo_Iwata dbo:manager ?manager .
  ?manager dbo:managedTeam dbpedia:Júbilo_Iwata ;
           dbo:managementEndYear ""2013""^^xsd:gYear .

  # Native residence country of Yōichi Masuzoe
  dbpedia:Yōichi_Masuzoe dbo:nativePlace ?place .
  ?place rdf:type dbo:City ;
         dbo:country ?country .

  # Alma mater condition for a person born in 1958
  ?person dbo:birthdayYear ""1958""^^xsd:gYear ;
          dbo:almaMater ?university .
  ?university rdf:type dbo:University ;
              rdfs:label ?label .
  FILTER(CONTAINS(LCASE(?label), ""japan"") && CONTAINS(LCASE(?label), ""university""))

  # Ensure the manager matches all conditions
  ?manager dbo:nativePlace ?place2 .
  ?place2 dbo:country ?country2 .
  FILTER(?country = ?country2)
}
```",6,11,7,3,3,3,3,71,0,0,1,0,0.0,0
16,68,test,Give me the person born as the birth name of Gigi Rice and spouse of the person born as the birth name of Ted McGinley and professional in the profession of the actor of Unnatural (TV series).,SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Gigi_Rice> <http://dbpedia.org/property/birthName> ?v3 . ?v0 <http://dbpedia.org/property/occupation> ?v7 . ?v4 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Unnatural_(TV_series)> <http://dbpedia.org/property/starring> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v7 . ?v4 <http://dbpedia.org/property/birthName> ?v5 . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/property/birthName> ?v5 . },"```sparql
# Step 1: Find Gigi Rice's birth name
SELECT ?birthName WHERE {
  ?person rdfs:label ""Gigi Rice""@en .
  ?person foaf:name ?birthName .
}

# Step 2: Find Ted McGinley's birth name
SELECT ?birthName WHERE {
  ?person rdfs:label ""Ted McGinley""@en .
  ?person foaf:name ?birthName .
}

# Step 3: Identify the actor from ""Unnatural (TV series)"" and their profession
SELECT DISTINCT ?actor ?profession WHERE {
  ?series dbo:title ""Unnatural (TV series)""@en ;
          dbo:starring ?actor .
  ?actor dbo:occupation ?profession .
}

# Step 4: Find the spouse of the person with Ted McGinley's birth name who shares the same profession
SELECT DISTINCT ?spouse WHERE {
  # Assuming we have found Ted McGinley's birth name and actor's profession from previous queries
  VALUES (?tedBirthName) { ""Ted McGinley"" } # Replace with actual birth name after query
  VALUES (?actorProfession) { ""Actor""@en } # Replace with actual profession after query

  ?person foaf:name ?tedBirthName .
  ?person dbo:spouse ?spouse .
  ?spouse dbo:occupation ?actorProfession .
}
```",8,8,9,3,3,3,3,71,0,0,1,0,0.0,0
328,57,test,"Give me the awardee of Order of Suvorov and commander in the force of the person decedent at Budapest and leader of the office, that is a government agency, of Joseph Stalin.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Budapest> . ?v5 <http://dbpedia.org/ontology/commander> ?v0 . ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Order_of_Suvorov> . ?v5 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://dbpedia.org/ontology/leader> ?result . <http://dbpedia.org/resource/Joseph_Stalin> <http://dbpedia.org/property/office> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person dbo:award [ 
    a dbo:Award ; 
    rdfs:label ""Order of Suvorov""@en .
  ].
  
  ?person dbo:occupation [
    a dbo:MilitaryCommander ;
    dbo:officeLocation dbr:Budapest ;
    dbo:timePeriod ?period .
  ].

  FILTER (?period >= ""1944-03-19""^^xsd:date && ?period <= ""1945-02-13""^^xsd:date) .

  ?person dbo:position [
    a dbo:GovernmentAgencyPosition ;
    dbo:leaderOf dbr:Soviet_Union ;
    dbo:timePeriod ?stalinPeriod .
  ].

  FILTER (?stalinPeriod >= ""1922-12-30""^^xsd:date && ?stalinPeriod <= ""1953-03-05""^^xsd:date) .

  VALUES ?person { 
    dbr:Rodion_Malinovsky
  }
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
161,71,test,"Give me the military force of the force, that is a societal event and an event and a military conflict, of the person decedent at Francoist Spain and military force of the force, that is a societal event and a military conflict, of the predecessor of Indalecio Prieto and commander in the force, that is an event, of the figure known as El Director.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v8 <http://dbpedia.org/ontology/commander> ?v7 . ?v8 <http://dbpedia.org/ontology/commander> ?result . ?v7 <http://xmlns.com/foaf/0.1/nick> ""El Director""@en . ?result <http://dbpedia.org/ontology/battle> ?v5 . ?v1 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Francoist_Spain> . ?v4 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Indalecio_Prieto> . ?v5 <http://dbpedia.org/ontology/commander> ?v4 . ?v2 <http://dbpedia.org/ontology/commander> ?v1 . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. }","```sparql
# Step 1: Find a person decedent at Francoist Spain
SELECT ?person ?militaryForce WHERE {
  ?person dbo:causeOfDeath ?event .
  ?event rdf:type dbo:MilitaryConflict ;
         dbo:place ?location .
  ?location rdfs:label ""Francoist Spain""@en .
  OPTIONAL { ?event dbo:participatingMilitaryGroup ?militaryForce }
}

# Step 2: Find the military force associated with this person
SELECT DISTINCT ?militaryForce WHERE {
  ?person dbo:causeOfDeath ?event .
  ?event rdf:type dbo:MilitaryConflict ;
         dbo:place ?location .
  ?location rdfs:label ""Francoist Spain""@en .
  OPTIONAL { ?event dbo:participatingMilitaryGroup ?militaryForce }
}

# Step 3: Find Indalecio Prieto's predecessor
SELECT ?predecessor WHERE {
  ?prieto dbo:officeHolder ?position .
  ?prieto rdfs:label ""Indalecio Prieto""@en .
  ?position dbo:successor ?prieto ;
            dbo:holder ?predecessor .
}

# Step 4: Find the military force associated with this predecessor
SELECT DISTINCT ?militaryForce WHERE {
  ?predecessor dbo:officeHolder ?position .
  ?position dbo:participatingMilitaryGroup ?militaryForce .
  ?event rdf:type dbo:MilitaryConflict ;
         dbo:participant ?predecessor .
}

# Step 5: Identify ""El Director"" and find the commander
SELECT ?commander WHERE {
  ?force rdfs:label ""El Director""@en .
  ?force dbo:commander ?commander .
}
```",9,15,10,3,3,3,3,71,0,0,32,0,0.0,0
915,17,test,"Give me the resident of Springfield, Illinois and father of the child, that is a fictional character and a soap character, of the parent, that is a fictional character and a soap character, of Lizzie Spaulding.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoapCharacter>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v3 <http://dbpedia.org/property/father> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. <http://dbpedia.org/resource/Lizzie_Spaulding> <http://dbpedia.org/ontology/parent> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoapCharacter>. ?result <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Springfield,_Illinois> . ?v3 <http://dbpedia.org/property/father> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?grandparent WHERE {
  ?lizzie dbo:spouse ?parent .
  ?parent dbo:child ?lizzie .
  ?lizzie rdfs:label ""Lizzie Spaulding""@en .

  ?parent dbo:child ?selma .
  ?selma rdfs:label ""Selma Bouvier""@en .

  ?grandparent dbo:child ?selma .
  ?grandparent dbo:spouse ?spouse .
  ?grandparent dbo:residence dbr:Springfield,_Illinois .
  ?grandparent rdf:type dbo:FictionalCharacter .
  ?grandparent dbo:genre dbr:SoapOpera .

  FILTER(CONTAINS(LCASE(?grandparent), ""clancy wiggum""))
}
```",4,8,5,3,2,3,2,20,0,0,1,0,0.0,0
617,46,test,"Give me the spouse of the child of Antiochus III the Great and child of the child, that is a royalty, of the successor, that is a royalty, of Antiochus II Theos.",SELECT ?result WHERE { <http://dbpedia.org/resource/Antiochus_II_Theos> <http://dbpedia.org/ontology/successor> ?v2 . <http://dbpedia.org/resource/Antiochus_III_the_Great> <http://dbpedia.org/ontology/child> ?v4 . ?result <http://dbpedia.org/property/father> ?v1 . ?v4 <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
SELECT ?grandchildSpouse WHERE {
  # Step 1: Find a child of Antiochus III the Great who is royalty
  ?child dbo:parent dbr:Antiochus_III_the_Great ;
         rdf:type dbo:Royal .

  # Step 2: Find a grandchild (child of the child) of Antiochus III the Great who is royalty
  ?grandchild dbo:parent ?child ;
              rdf:type dbo:Royal .

  # Step 3: Identify successor of Antiochus II Theos who is royalty
  ?successor dbo:predecessor dbr:Antiochus_II_theos ;
             rdf:type dbo:Royal .

  # Step 4: Find a child of this successor who is royalty
  ?childOfSuccessor dbo:parent ?successor ;
                   rdf:type dbo:Royal .

  # Step 5: Determine the spouse of the grandchild identified in step 2
  ?grandchildSpouse dbo:spouse ?grandchild .
}
```",5,7,6,3,2,3,3,71,0,0,4,0,0.0,0
767,38,test,Give me the reference to the alter ego of Black Hood and alma mater of the administration of George K. Nash.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/almaMater> ?result . <http://dbpedia.org/resource/Black_Hood> <http://dbpedia.org/property/alterEgo> ?v2 . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v3 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/George_K._Nash> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?reference WHERE {
  VALUES (?person) { (dbr:Dick_Grayson) }
  VALUES (?university) { (dbr:Princeton_University) }

  OPTIONAL { ?person dbo:almaMater ?university . }
  OPTIONAL { ?reference dbo:wikiPageRedirects ?person . }
  OPTIONAL { ?reference dbo:wikiPageRedirects ?university . }
}
```",4,4,5,2,2,3,3,71,0,23,2,0.0,0.0,0
161,67,test,"Give me the military force of Rif War and commander in the force, that is an event, of the figure known as El Director and military force of the force, that is a societal event and a military conflict, of the predecessor of Indalecio Prieto.","SELECT ?result WHERE { ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://xmlns.com/foaf/0.1/nick> ""El Director""@en . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v6 <http://dbpedia.org/ontology/commander> ?v0 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/ontology/commander> ?v1 . ?v0 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Indalecio_Prieto> . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Rif_War> . ?result <http://dbpedia.org/ontology/battle> ?v6 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. }","```sparql
# Query to find El Director and his military force during the Rif War
SELECT ?elDirector ?militaryForce WHERE {
  ?elDirector rdfs:label ""El Director""@en .
  ?elDirector dbo:militaryConflict dbr:Rif_War .
  ?elDirector dbo:commanderOf ?militaryForce .
}

# Query to find Indalecio Prieto's predecessor and associated events
SELECT ?predecessor ?societalEvent ?militaryConflict WHERE {
  ?indalecioPrieto rdfs:label ""Indalecio Prieto""@en .
  ?indalecioPrieto dbo:successor ?predecessor .
  ?predecessor dbo:socialEvent ?societalEvent ;
              dbo:militaryConflict ?militaryConflict .
}

# Query to find the military force of the predecessor's involvement
SELECT ?militaryForce WHERE {
  ?predecessor dbo:militaryConflict ?militaryConflict .
  ?predecessor dbo:commanderOf ?militaryForce .
}
```",7,10,8,3,3,3,3,71,0,0,11,0,0.0,0
767,55,test,"Give me the alma mater of the administration of George K. Nash and entity in the administration, that is a settlement, of Green and reference to the alter ego of Black Hood.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/almaMater> ?result . ?v5 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/George_K._Nash> . <http://dbpedia.org/resource/Black_Hood> <http://dbpedia.org/property/alterEgo> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v3 <http://dbpedia.org/property/leaderParty> ""Green""@en . ?result <http://dbpedia.org/ontology/state> ?v3 . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . }","```sparql
# Query 1: Alma Mater of George K. Nash
SELECT ?almaMater WHERE {
  ?person foaf:name ""George K. Nash""@en .
  ?person dbo:almaMater ?almaMater .
}

# Query 2: Entity in the Administration of Green that is a Settlement
SELECT DISTINCT ?settlement WHERE {
  ?administration dbo:member ?entity .
  ?administration dbo:head ?green .
  ?green foaf:name ""Al Gore""@en .
  ?entity rdf:type dbo:PopulatedPlace .
  BIND(?entity AS ?settlement)
}

# Query 3: Alter Ego of Black Hood
SELECT ?alterEgo WHERE {
  ?character foaf:name ""Black Hood""@en .
  ?character dbo:alias ?alterEgo .
}
```",6,7,7,2,3,3,3,71,0,0,1,0,0.0,0
429,8,test,"Give me the administration of Andrew Johnson and country of the military force, that is an organisation, of Camden Expedition.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Andrew_Johnson> . ?v0 <http://dbpedia.org/ontology/country> ?result . ?v0 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Camden_Expedition> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?administration ?country 
WHERE {
  # Find Andrew Johnson's administration
  dbr:Andrew_Johnson dbo:presidentOf ?administration .
  
  # Find the military force involved in the Camden Expedition and its country
  ?militaryOrganization dbo:participatedIn [
    a dbo:MilitaryConflict ;
    dbo:conflictName ""Camden_Expedition""^^xsd:string 
  ] .
  ?militaryOrganization dbo:country ?country .
  
  # Filter to ensure the military organization is related to the Confederate States
  FILTER(?country = dbr:Confederate_States_of_America)
}
```",3,4,4,2,2,2,2,9,0,0,1,0,0.0,0
701,48,test,Give me the spouse of the father of Merneptah and parent of the child of the spouse of Amun-her-khepeshef.,SELECT ?result WHERE { <http://dbpedia.org/resource/Merneptah> <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/ontology/spouse> ?v1 . <http://dbpedia.org/resource/Amun-her-khepeshef> <http://dbpedia.org/ontology/spouse> ?v3 . ?v3 <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Step 1: Identify Merneptah's father
  ?merneptah dbo:father ?father .
  FILTER(STR(?merneptah) = ""Merneptah"")

  # Step 2: Find the spouse of Merneptah's father
  ?father dbo:spouse ?spouse .

  # Step 3: Identify Amun-her-khepeshef's spouse
  ?amunherkhepeshef dbo:spouse ?amunSpouse .
  FILTER(STR(?amunherkhepeshef) = ""Amun-her-khepeshef"")

  # Step 4: Find the child of Amun-her-khepeshef's spouse
  ?amunSpouse dbo:child ?child .

  # Step 5: Identify the parent of this child (should be the same as step 2)
  ?parent dbo:child ?child .
  
  FILTER(?spouse = ?parent)
}
```",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
994,55,test,"Give me the band member of the person born, that is a musical artist, as Donald Maynard Dokken and associated musical artist of the associated musical artist of Watchtower (band) and associated musical artist of the band member, that is a band and a group and an organisation, of Meshuggah.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Meshuggah> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/property/birthName> ""Donald Maynard Dokken""@en . <http://dbpedia.org/resource/Watchtower_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. }","```sparql
SELECT DISTINCT ?bandMember ?watchtowerArtist ?meshuggahBand WHERE {
  # Step 1: Find a band member of Dokken
  ?dokken dbo:birthName ""Donald Maynard Dokken""@en .
  ?dokken dbo:associatedMusicalArtist ?bandMember .

  # Step 2: Find an associated musical artist with Watchtower
  ?watchtower dbo:name ""Watchtower (band)""@en .
  ?watchtower dbo:associatedMusicalArtist ?watchtowerArtist .

  # Step 3: Determine a band or group associated with a Meshuggah member
  ?meshuggahMember dbo:memberOf ?meshuggahBand ;
                   dbo:memberOf ?otherGroup .
  FILTER EXISTS { ?otherGroup rdf:type dbo:Band } .
  
  # Linking the results
  ?bandMember dbo:associatedMusicalArtist ?watchtowerArtist .
  ?watchtowerArtist dbo:associatedMusicalArtist ?meshuggahMember .
}
```",6,10,7,2,3,3,3,71,0,0,1,0,0.0,0
747,26,test,"Give me the band of the writer of the work, that is a song, of Amba Shepherd.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/writer> ?v2 . ?v1 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Amba_Shepherd> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?band WHERE {
  ?work dbo:composer dbr:Amba_Shepherd .
  ?work dbo:performer ?band .
}
```",3,4,4,3,1,3,3,71,0,0,13,0,0.0,0
528,30,test,Give me the war of Irene Morales and force of the person born as Narciso Campero Leyes and war of Orozimbo Barbosa.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ""Narciso Campero Leyes""@en . <http://dbpedia.org/resource/Orozimbo_Barbosa> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/commander> ?v1 . <http://dbpedia.org/resource/Irene_Morales> <http://dbpedia.org/ontology/battle> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?war WHERE {
  VALUES (?person ?label) {
    (dbr:Narciso_Campero_Leyes ""Narciso Campero Leyes"")
    (dbr:Orozimbo_Barbosa ""Orozimbo Barbosa"")
  }
  
  ?person dbo:participatedInWar ?war .
  OPTIONAL { ?war rdfs:label ?warLabel . FILTER(lang(?warLabel) = 'en') }

  UNION

  {
    # Attempt to find any war associated with Irene Morales, if available
    dbr:Irene_Morales dbo:participatedInWar ?war .
    OPTIONAL { ?war rdfs:label ?warLabel . FILTER(lang(?warLabel) = 'en') }
  }
}
```",4,4,5,2,3,3,3,71,0,0,2,0,0.0,0
378,30,test,Give me the war of Carl Pontus Gahn and claim to fame of the commander in Great Siege of Gibraltar and war of Joaquín Blake.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/knownFor> ?result . <http://dbpedia.org/resource/Great_Siege_of_Gibraltar> <http://dbpedia.org/ontology/commander> ?v1 . <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Joaquín_Blake> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?event ?role WHERE {
  VALUES ?person { dbr:Joaquín_Blake }
  
  ?person dbo:occupation dbr:Military_person .
  ?person dbo:nationality dbr:Spain .

  OPTIONAL {
    ?event dbo:participatedIn ?person .
    ?event rdfs:label ?eventName .
    FILTER CONTAINS(LCASE(?eventName), ""great siege of gibraltar"") .
    BIND(""Great Siege of Gibraltar"" AS ?role)
  }
  
  OPTIONAL {
    ?event dbo:participatedIn ?person .
    ?event rdfs:label ?eventName .
    FILTER CONTAINS(LCASE(?eventName), ""peninsular war"") .
    BIND(""Peninsular War"" AS ?role)
  }
}
```",4,4,5,2,3,3,3,71,0,0,2,0,0.0,0
16,58,test,Give me the spouse of Ted McGinley and professional in the profession of Satomi Ishihara and person born as the birth name of the alumnus of Ohio State University.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Satomi_Ishihara> <http://dbpedia.org/property/occupation> ?v5 . ?v1 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Ohio_State_University> . ?result <http://dbpedia.org/property/occupation> ?v5 . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://dbpedia.org/property/birthName> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse ?profession ?person WHERE {
  # Find the spouse of Ted McGinley
  dbr:Ted_McGinley dbo:spouse ?spouse .

  # Find the profession of Satomi Ishihara
  dbr:Satomi_Ishihara dbo:occupation ?profession .

  # Find a person born with a specific birth name who is an alumnus of Ohio State University
  ?person dbo:almaMater dbr:Ohio_State_University ;
          foaf:name ?birthName .
  
  # Assuming we have the birth name from the alumnus data, replace 'Birth_Name' with the actual name
  FILTER(?birthName = ""Birth_Name"")
}
```

Note: Replace `""Birth_Name""` in the query with the actual birth name of the Ohio State University alumnus once identified.",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
404,27,test,Give me the child of the father of the spouse of Princess Victoria Louise of Prussia.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v2 . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?v1 . ?v1 <http://dbpedia.org/property/father> ?v2 . },"```sparql
SELECT ?child WHERE {
  ?princess rdf:type dbo:Princess ;
            foaf:name ""Victoria Louise of Prussia""@en .
  
  ?princess dbo:spouse ?husband .

  ?husband dbp:father ?grandfather .

  ?grandfather dbo:child ?child .
}
```",3,3,4,3,1,3,3,71,0,0,3,0,0.0,0
281,65,test,"Give me the entity in the birth place, that is a country, of the leader, that is a politician, of 1962 New South Wales state election and war of the awardee of Knight Grand Cross of the Order of the Bath and war of the profession, that is a military unit, of Heather Roy.",SELECT ?result WHERE { <http://dbpedia.org/resource/Heather_Roy> <http://dbpedia.org/property/occupation> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v0 <http://dbpedia.org/ontology/birthPlace> ?v6 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/1962_New_South_Wales_state_election> <http://dbpedia.org/property/leader> ?v0 . ?v4 <http://dbpedia.org/ontology/battle> ?result . ?v4 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_the_Bath> . ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/place> ?v6 . },"```sparql
# Step 1: Identify the leader of the 1962 New South Wales state election
SELECT ?leader WHERE {
  ?election dcterms:title ""1962 New South Wales state election""@en .
  ?election dbo:leader ?leader .
}

# Step 2: Determine the birthplace country of this leader
SELECT DISTINCT ?birthPlaceCountry WHERE {
  ?leader dbo:birthPlace ?birthPlace .
  ?birthPlace rdf:type dbo:Country .
  BIND(?birthPlace AS ?birthPlaceCountry)
}

# Step 3: Identify Heather Roy's profession as a military unit
SELECT DISTINCT ?militaryUnit WHERE {
  wd:Q123456 dbo:profession ?militaryUnit . # Replace Q123456 with Heather Roy's DBpedia ID
  ?militaryUnit rdf:type dbo:MilitaryUnit .
}

# Step 4: Find the war associated with Heather Roy's military unit
SELECT DISTINCT ?warHeatherRoy WHERE {
  ?militaryUnit dbo:participatedInWar ?warHeatherRoy .
}

# Step 5: Identify the awardee of Knight Grand Cross of the Order of the Bath
SELECT DISTINCT ?awardee WHERE {
  ?person dbo:award ""Knight Grand Cross of the Order of the Bath""@en .
  BIND(?person AS ?awardee)
}

# Step 6: Determine the war associated with this awardee
SELECT DISTINCT ?warAwardee WHERE {
  ?awardee dbo:servedInWar ?warAwardee .
}

# Step 7: Find the common entity (war) between Heather Roy's military unit and the awardee
SELECT DISTINCT ?commonWar WHERE {
  VALUES (?heatherRoyWar ?awardeeWar) { 
    (:warHeatherRoy :warAwardee)
  }
  ?commonWar rdf:type dbo:War .
  FILTER(?heatherRoyWar = ?commonWar && ?awardeeWar = ?commonWar)
}

# Final query to get the entity in the birthplace country of the leader
SELECT DISTINCT ?birthPlaceCountry WHERE {
  # Combine all previous steps
  ?election dcterms:title ""1962 New South Wales state election""@en .
  ?election dbo:leader ?leader .
  ?leader dbo:birthPlace ?birthPlace .
  ?birthPlace rdf:type dbo:Country .
  BIND(?birthPlace AS ?birthPlaceCountry)
  
  wd:Q123456 dbo:profession ?militaryUnit . # Replace Q123456 with Heather Roy's DBpedia ID
  ?militaryUnit rdf:type dbo:MilitaryUnit .
  ?militaryUnit dbo:participatedInWar ?warHeatherRoy .

  ?person dbo:award ""Knight Grand Cross of the Order of the Bath""@en .
  BIND(?person AS ?awardee)
  ?awardee dbo:servedInWar ?warAwardee .

  VALUES (?heatherRoyWar ?awardeeWar) { 
    (:warHeatherRoy :warAwardee)
  }
  ?commonWar rdf:type dbo:War .
  FILTER(?heatherRoyWar = ?commonWar && ?awardeeWar = ?commonWar)

  # Return the birthplace country
  BIND(?birthPlace AS ?birthPlaceCountry)
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
801,49,test,"Give me the professional in the alter ego of The Shadow and associated musical artist of the writer, that is a musical artist and an artist, of the album, that is a musical work and a work, of What U See Is What U Get.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/property/writer> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/What_U_See_Is_What_U_Get> <http://dbpedia.org/ontology/album> ?v0 . },"```sparql
# Step 1: Find The Shadow's alter ego
SELECT ?alterEgo WHERE {
  ?shadow dbo:alias ""The Shadow""@en .
  ?shadow foaf:name ?alterEgo .
}

# Step 2: Find associated musical artist of the writer (alter ego)
SELECT DISTINCT ?musicalArtist WHERE {
  ?writer foaf:name ?alterEgo .
  ?association dbo:associatedMusicalArtist ?musicalArtist .
}

# Step 3: Identify the album ""What U See Is What U Get""
SELECT ?album WHERE {
  ?album dbo:title ""What U See Is What U Get""@en ;
         a dbo:MusicalWork .
}

# Step 4: Find musical artist and artist of the album
SELECT DISTINCT ?artist WHERE {
  ?album dbo:creator ?artist .
  ?artist a dbo:MusicalArtist ;
          a dbo:Artist .
}
```",5,9,6,3,2,3,3,71,0,0,22,0,0.0,0
659,58,test,"Give me the commander in German campaign of 1813 and military force of the force, that is a societal event and an event and a military conflict, of the reference to Rutger Jan Schimmelpenninck and commander in the war, that is an event and a military conflict, of 1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish).","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/German_campaign_of_1813> <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://dbpedia.org/ontology/commander> ?v1 . <http://dbpedia.org/resource/1st_Light_Cavalry_Lancers_Regiment_of_the_Imperial_Guard_(Polish)> <http://dbpedia.org/ontology/battle> ?v5 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v5 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://xmlns.com/foaf/0.1/name> ""Rutger Jan Schimmelpenninck""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?force ?regimentCommander WHERE {
  # German Campaign of 1813 as a military conflict
  ?campaign dbo:type dbr:Military_conflict ;
            rdfs:label ""German campaign of 1813""@en .
  
  # Commander of the German Campaign of 1813
  ?campaign dbo:commander ?commander .

  # Military force involved in the campaign
  ?force dbo:participatedIn ?campaign ;
         dbo:type dbr:Military_unit .

  # Reference to Rutger Jan Schimmelpenninck
  OPTIONAL {
    ?reference dbo:subject dbr:Rutger_Jan_Schimmelpenninck .
    ?reference dbo:object ?commander .
  }

  # 1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish)
  ?regiment a dbo:Military_unit ;
            rdfs:label ""1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish)""@en .

  # Commander of the regiment during the campaign
  ?regiment dbo:commander ?regimentCommander .
  
  FILTER(CONTAINS(LCASE(?force), ""imperial guard""))
}
```",6,11,7,3,3,3,3,71,0,0,7,0,0.0,0
294,26,test,"Give me the resting place of Edwin A. Keeble and entity in the birth place, that is a settlement, of Marion James and resting place of the awardee, that is a politician, of Distinguished Service Medal (U.S. Army).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/location> ?v1 . <http://dbpedia.org/resource/Marion_James> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Edwin_A._Keeble> <http://dbpedia.org/ontology/restingPlace> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Distinguished_Service_Medal_(U.S._Army)> . },"```sparql
# Query to get the resting place of Edwin A. Keeble
SELECT ?restingPlace WHERE {
  ?person dbo:name ""Edwin A. Keeble""@en .
  ?person dbo:deathPlace ?restingPlace .
}

UNION

# Query to find a notable entity in the birthplace of Marion James
SELECT ?entity WHERE {
  ?person dbo:name ""Marion James""@en .
  ?person dbo:birthPlace ?birthPlace .
  ?birthPlace dbo:wikiPageRedirects ?settlement .
  FILTER EXISTS { ?settlement rdf:type dbo:Settlement }
}

UNION

# Query to get the resting place of a politician who received the Distinguished Service Medal (U.S. Army)
SELECT ?restingPlace WHERE {
  ?person dbo:name ?name .
  ?person dbo:occupation dbr:Politician .
  ?person dbo:honor ""Distinguished Service Medal (United States Army)""@en .
  ?person dbo:deathPlace ?restingPlace .
}
```",5,7,6,2,3,2,3,28,0,0,1,0,0.0,0
16,22,test,Give me the spouse of Ted McGinley and person born as the birth name of Gigi Rice.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Gigi_Rice> <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?spouseOfTedMcGinley ?personBornAsGigiRice WHERE {
  # Find the spouse of Ted McGinley
  dbpedia:ted_mcginley dbo:spouse ?spouseOfTedMcGinley .
  
  # Find a person born as Gigi Rice
  ?personBornAsGigiRice foaf:givenName ""Gigi"" ;
                        foaf:surname ""Rice"" .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
801,61,test,"Give me the producer of the work, that is a musical work and a song and a work, of the professional, that is a musical artist, in Rapper and associated musical artist of the writer, that is a musical artist and an artist, of the album, that is a musical work and a work, of What U See Is What U Get.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/writer> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v5 <http://dbpedia.org/ontology/producer> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/What_U_See_Is_What_U_Get> <http://dbpedia.org/ontology/album> ?v1 . ?v0 <http://dbpedia.org/property/occupation> ""Rapper""@en . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v5 <http://dbpedia.org/property/writer> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?producer ?writer WHERE {
  # Identify the album
  VALUES ?album { dbr:What_U_See_Is_What_U_Get }

  # Find the producer of the album who is a musical artist and possibly a rapper or associated musical artist
  ?album dbo:producer ?producer .
  ?producer a dbo:MusicalArtist .

  OPTIONAL {
    ?producer dbo:occupation dbr:Rapper .
  }
  
  OPTIONAL {
    ?producer dbo:associatedBandOrMusicalGroup ?band .
  }

  # Identify the writer of the album who is both a musical artist and an artist
  ?album dbo:writer ?writer .
  ?writer a dbo:MusicalArtist ;
          a dbo:Artist .
}
```",6,14,7,3,2,3,3,71,0,0,9,0,0.0,0
182,23,test,Give me the war of the author of 2019 Sri Lanka Easter bombings and entity in the nationality of Tamara Kunanayakam.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Tamara_Kunanayakam> <http://dbpedia.org/ontology/nationality> ?v1 . <http://dbpedia.org/resource/2019_Sri_Lanka_Easter_bombings> <http://dbpedia.org/property/author> ?v2 . ?result <http://dbpedia.org/ontology/place> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?author ?war WHERE {
  # Find an author related to the 2019 Sri Lanka Easter bombings
  ?book dbo:subject dbr:Sri_Lanka_Easter_bombings_2019 .
  ?book dbo:author ?author .

  # Tamara Kunanayakam's nationality is Sri Lankan
  dbr:Tamara_Kunanayakam dbo:nationality dbr:Sri_Lanka .

  # Find wars associated with the author and Sri Lanka
  OPTIONAL { ?author dbo:birthPlace ?place . FILTER regex(?place, ""Sri Lanka"", ""i"") }
  OPTIONAL { ?war dbo:location dbr:Sri_Lanka . }

  # Ensure there is a war related to both entities
  FILTER EXISTS { ?war dbo:relatedEntity ?author }
}
```",4,4,5,2,2,2,3,28,0,0,1,0,0.0,0
303,26,test,"Give me the party of the person born, that is a politician, as Arnulfo Arias Madrid and entity in Panama and party of the commander, that is a politician, in United States invasion of Panama.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ""Arnulfo Arias Madrid""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/United_States_invasion_of_Panama> <http://dbpedia.org/ontology/commander> ?v2 . ?v1 <http://dbpedia.org/ontology/party> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/ontology/party> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Panama> . }","```sparql
# Query to find the political party of Arnulfo Arias Madrid
SELECT ?party WHERE {
  wd:Q123456 wdt:P102 ?party .
  FILTER(LANG(?party) = ""en"")
}

# Query to find the political affiliation (if any) of General Colin Powell
SELECT ?party WHERE {
  wd:Q789012 wdt:P102 ?party .
  FILTER(LANG(?party) = ""en"")
}
```

Note: `wd:Q123456` and `wd:Q789012` are placeholders for the actual DBpedia identifiers for Arnulfo Arias Madrid and General Colin Powell, respectively. You would need to replace these with their correct identifiers from DBpedia.",5,7,6,2,3,2,3,28,0,0,1,0,0.0,0
767,62,test,"Give me the alma mater of the administration of the reference to George Kilbon Nash and entity in the administration, that is a settlement, of the writer of Where It's At (Dustin Lynch album) and reference to .","SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""George Kilbon Nash""@en . ?v6 <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://dbpedia.org/ontology/state> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v3 <http://dbpedia.org/property/leaderParty> ?v4 . <http://dbpedia.org/resource/Where_It's_At_(Dustin_Lynch_album)> <http://dbpedia.org/property/writer> ?v4 . ?v6 <http://dbpedia.org/property/governor> ?v0 . ?result <http://xmlns.com/foaf/0.1/name> """"@en . }","```sparql
# Query for George Kilbon Nash's alma mater
SELECT ?almaMater WHERE {
  ?nash dbo:almaMater ?almaMater .
  ?nash foaf:name ""George Kilbon Nash""@en .
}

UNION

# Query to find the administration entity related to George Kilbon Nash
SELECT ?administrationEntity WHERE {
  ?nash dbo:positionHeld ?position .
  ?position dbo:administrativeBody ?administrationEntity .
  ?nash foaf:name ""George Kilbon Nash""@en .
}

UNION

# Query to find the settlement in the administration entity
SELECT ?settlement WHERE {
  ?administrationEntity dbo:settlement ?settlement .
  ?administrationEntity ?p ?o .
  FILTER(?p IN (dbo:administrativeBody, dbo:location)).
}

UNION

# Query for the writer of ""Where It's At"" by Dustin Lynch
SELECT ?writer WHERE {
  ?song dbo:lyricsBy ?writer .
  ?song foaf:name ""Where It's At""@en .
  ?album dbo:song ?song .
  ?album foaf:name ""Where It's At""@en .
  ?album dbo:artist ?dustinLynch .
  ?dustinLynch foaf:name ""Dustin Lynch""@en .
}

UNION

# Query for the writer's alma mater
SELECT ?almaMater WHERE {
  ?writer dbo:almaMater ?almaMater .
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
801,36,test,"Give me the associated musical artist of the writer, that is a musical artist and an artist, of the album, that is a musical work and a work, of What U See Is What U Get and professional in .","SELECT ?result WHERE { <http://dbpedia.org/resource/What_U_See_Is_What_U_Get> <http://dbpedia.org/ontology/album> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v0 <http://dbpedia.org/property/writer> ?v1 . ?result <http://dbpedia.org/property/occupation> """"@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
SELECT ?albumArtist ?writer ?writerAlbumArtist WHERE {
  # Find the album ""What U See Is What U Get"" and its associated musical artist
  ?album dcterms:title ""What U See Is What U Get""@en .
  ?album dbo:artist ?albumArtist .

  # Find the writer(s) of this album who are also recognized as a musical artist and an artist
  ?album dbo:lyricsBy ?writer .
  ?writer rdf:type dbo:MusicalArtist ;
          dbo:profession ""musician""@en ;
          dbo:occupation ""artist""@en .

  # Determine the associated musical artist of that writer
  ?writer dbo:associatedBandOrMusicalArtist ?writerAlbumArtist .
}
```",4,8,5,3,2,3,3,71,0,0,22,0,0.0,0
617,30,test,Give me the child of Antiochus III the Great and spouse of Laodice IV and parent of the child of Antiochus (son of Antiochus III the Great).,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Antiochus_III_the_Great> . <http://dbpedia.org/resource/Laodice_IV> <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/child> ?v1 . ?result <http://dbpedia.org/ontology/child> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child ?spouse WHERE {
  # Find children of Antiochus III the Great
  ?child dbo:parent dbr:Antiochus_III_the_Great .
  
  # Check if this child is married to Laodice IV
  ?child dbo:spouse dbr:Laodice_IV .

  # Ensure this person is also a parent (to confirm they have children)
  ?child dbo:parent ?grandchild .
}
```",4,4,5,2,3,3,3,71,1,1,0,0.5,1.0,0.6666666666666666
801,60,test,"Give me the associated musical artist of the writer, that is a musical artist and an artist, of the album, that is a musical work and a work, of What U See Is What U Get and professional in the alter ego of the true self of The Shadow.","SELECT ?result WHERE { ?v3 <http://xmlns.com/foaf/0.1/givenName> ""The Shadow""@en . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/property/occupation> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/property/writer> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v3 <http://dbpedia.org/property/alterEgo> ?v2 . <http://dbpedia.org/resource/What_U_See_Is_What_U_Get> <http://dbpedia.org/ontology/album> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artist WHERE {
  # LL Cool J's album ""What U See Is What U Get""
  dbr:What_U_See_Is_What_U_Get dbo:composer dbr:LL_Cool_J .
  
  # LL Cool J as a musician and artist
  dbr:LL_Cool_J a dbo:MusicalArtist ;
               a dbo:Artist .

  # The Shadow's true self is Lamont Cranston, professional alter ego ""The Shadow""
  dbr:The_Shadow dbo:trueSelf dbr:Lamont_Cranston .
  
  # Find the associated musical artist
  ?artist a dbo:MusicalArtist ;
         a dbo:Artist ;
         dbo:composer dbr:What_U_See_Is_What_U_Get .

  FILTER (?artist = dbr:LL_Cool_J)
}
```",6,10,7,3,2,3,3,71,0,0,22,0,0.0,0
421,21,test,Give me the band member of Senidah and native of Socialist Federal Republic of Yugoslavia and person born as the birth name of Dino Merlin.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Senidah> . ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Dino_Merlin> <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Socialist_Federal_Republic_of_Yugoslavia> . },"```sparql
SELECT ?person WHERE {
  # Find band members of Senidah
  ?bandMember dbo:memberOf dbr:Senidah .
  
  # Filter by place of birth in SFRY
  ?bandMember dbo:birthPlace ?placeOfBirth .
  ?placeOfBirth dbp:countryName ""Socialist Federal Republic of Yugoslavia""@en .

  # Check if the person's birth name is Dino Merlinović
  OPTIONAL { 
    ?person foaf:name ""Dino Merlinović""@en .
    FILTER(?bandMember = ?person)
  }
  
  # Return only those who match all criteria
  FILTER(EXISTS { ?person foaf:name ""Dino Merlinović""@en })
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
48,18,test,"Give me the band of the writer of the work, that is a work, of Shellback (record producer) and band of the actor, that is a musical artist, of Honor Up.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/writer> ?v2 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Honor_Up> <http://dbpedia.org/property/starring> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Shellback_(record_producer)> . },"```sparql
# Part 1: Find a work produced by Shellback and the writer's band

SELECT ?work ?writer ?writersBand WHERE {
  # Find works where Shellback is a producer
  ?work dbo:producer dbc:Shellback .
  
  # Get the writers of that work
  ?work dbo:lyricist ?writer .

  # Check if the writer is part of any band
  OPTIONAL { 
    ?writer dbo:bandMember ?writersBand .
  }
}

UNION

# Part 2: Find an actor in ""Honor Up"" who is also a musical artist and their band

SELECT ?actor ?actorsBand WHERE {
  # Find actors associated with the work ""Honor Up""
  ?work dcterms:title ""Honor Up""@en .
  
  # Get the cast of that work
  ?work dbo:castMember ?actor .

  # Check if the actor is also a musical artist and part of any band
  OPTIONAL {
    ?actor dbo:musicalArtist true .
    ?actor dbo:bandMember ?actorsBand .
  }
}
```",5,7,6,3,2,3,2,20,0,0,1,0,0.0,0
747,64,test,"Give me the band of the person born as the persona of Shèna and person born on the birth date of the person decedent, that is an athlete and a soccer player, at Zolotonosha and band of Amba Shepherd.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Zolotonosha> . ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?result <http://dbpedia.org/ontology/birthDate> ?v2 . <http://dbpedia.org/resource/Shèna> <http://xmlns.com/foaf/0.1/givenName> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Amba_Shepherd> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v3 <http://dbpedia.org/ontology/birthDate> ?v2 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
# Step 1: Find the person born as Shèna
SELECT ?person WHERE {
  ?person dbo:name ""Shèna""@en .
}

# Step 2: Find a decedent and their birth date
SELECT ?decedent ?birthDate WHERE {
  ?decedent dbo:deathDate ?deathDate .
  ?decedent dbo:birthday ?birthDate .
  FILTER EXISTS { ?decedent dbo:occupation ""Deceased""@en }
}

# Step 3: Find an athlete and soccer player from Zolotonosha
SELECT ?athlete WHERE {
  ?athlete dbo:sport ""Soccer""@en ;
           dbo:placeOfBirth ?zolotonosha .
  FILTER (?zolotonosha rdfs:label = ""Zolotonosha""@en)
}

# Step 4: Find Amba Shepherd's band
SELECT ?band WHERE {
  ?amba foaf:name ""Amba Shepherd""@en ;
        dbo:musicGroup ?band .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
54,47,test,Give me the child of the father of Soe Min Wimala Dewi and parent of the child of the parent of Thado Minsaw of Prome.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/child> ?result . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> . ?v4 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Soe_Min_Wimala_Dewi> <http://dbpedia.org/property/father> ?v2 . ?v4 <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?commonEntity WHERE {
  ?soeMinWimalaDewi dbo:father ?commonEntity .
  ?thadoMinsawOfProme dbo:parent ?commonEntity .
  
  # Assuming Soe Min Wimala Dewi and Thado Minsaw of Prome are known entities
  VALUES (?soeMinWimalaDewi) { <http://dbpedia.org/resource/Soe_Min_Wimala_Dewi> }
  VALUES (?thadoMinsawOfProme) { <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> }
}
```",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
404,60,test,"Give me the child of the father of the spouse of Princess Victoria Louise of Prussia and spouse of the person born, that is a royalty, as the birth name of Princess Victoria Louise of Prussia.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/property/father> ?v1 . ?v2 <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/property/birthName> ?v3 . ?result <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?childBirthName WHERE {
  # Victoria Louise of Prussia's birth name and spouse
  VALUES (?princess) { dbr:Victoria_Louise_of_Prussia }
  ?princess dbo:spouse ?spouse .
  
  # Spouse's father
  ?spouse dbo:father ?father .

  # Father's children (excluding the spouse)
  ?child dbo:parent ?father .
  FILTER(?child != ?spouse)

  # Ensure the child is royalty and has a birth name
  ?child rdf:type dbo:Monarch .
  ?child dbo:birthName ?childBirthName .
}
```",6,7,7,3,2,3,3,71,0,0,1,0,0.0,0
197,9,test,Give me the birthplace of the awardee of Leroy P. Steele Prize and birthplace of the member of FC Politehnica Timișoara.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/FC_Politehnica_Timișoara> . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v3 <http://dbpedia.org/property/awards> ""Leroy P. Steele Prize""@en . }","```sparql
# Query for the birthplace of an awardee of the Leroy P. Steele Prize
SELECT ?birthPlace WHERE {
  ?person dbo:award dbpedia:Leroy_P._Steele_Prize .
  ?person dbo:birthPlace ?birthPlace .
}

UNION

# Query for the birthplace of a member of FC Politehnica Timișoara
SELECT ?birthPlace WHERE {
  ?player dbo:team dbpedia:FC_Politehnica_Timișoara .
  ?player dbo:birthPlace ?birthPlace .
}
```",4,4,5,2,2,2,2,9,0,0,4,0,0.0,0
54,31,test,Give me the child of the father of the child of Thinkhaya of Pagan and parent of Thado Minsaw of Prome.,SELECT ?result WHERE { <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?v1 . ?v0 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://dbpedia.org/property/father> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?grandchild WHERE {
  # Thinkhaya of Pagan
  ?thinkhaya dbo:spouse ?spouse .
  ?thinkhaya rdfs:label ""Thinkhaya""@en .

  # Child of Thinkhaya (his son)
  ?son dbo:parent ?thinkhaya .
  
  # Grandchild of Thinkhaya
  ?grandchild dbo:parent ?son .

  # Thado Minsaw of Prome
  ?thadoMinsaw rdfs:label ""Thado Minsaw""@en .

  # Check if the grandchild is a parent of Thado Minsaw
  ?thadoMinsaw dbo:parent ?grandchild .
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
9,26,test,"Give me the alma mater of the awardee of the reference, that is an award, to Royal Medals.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/almaMater> ?result . ?v2 <http://dbpedia.org/property/awards> ?v1 . ?v1 <http://xmlns.com/foaf/0.1/name> ""Royal Medals""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. }","```sparql
SELECT ?awardee ?almaMater WHERE {
  ?award rdf:type dbo:Award .
  ?award dbo:wikiPageRedirects db:Royal_Medal .
  ?award dbo:recipient ?person .
  ?person foaf:name ?awardee .
  OPTIONAL { 
    ?person dbo:almaMater ?institution .
    ?institution rdfs:label ?almaMater .
    FILTER (lang(?almaMater) = ""en"")
  }
}
```",3,4,4,3,1,3,3,71,0,0,31,0,0.0,0
391,54,test,"Give me the actor of the claim to fame, that is a work, of the spouse of Sherry Hormann and actor of All About the Andersons and native of the figure known as Hub City.","SELECT ?result WHERE { <http://dbpedia.org/resource/Sherry_Hormann> <http://dbpedia.org/ontology/spouse> ?v0 . <http://dbpedia.org/resource/All_About_the_Andersons> <http://dbpedia.org/property/starring> ?result . ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v0 <http://dbpedia.org/ontology/knownFor> ?v5 . ?v3 <http://dbpedia.org/property/nickname> ""Hub City""@en . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v5 <http://dbpedia.org/ontology/starring> ?result . }","```sparql
# Step 1: Find Sherry Hormann's spouse
SELECT ?spouse WHERE {
  wd:Q123456 wdt:P26 ?spouse .
}

# Step 2: Identify the claim to fame (notable work) of Sherry Hormann's spouse
SELECT ?work WHERE {
  ?spouse wdt:P800 ?work .
}

# Step 3: Find the actor from ""All About the Andersons""
SELECT ?actor WHERE {
  wd:Q789012 wdt:P161 ?actor .
}

# Step 4: Identify Hub City and find natives of that city
SELECT ?hubCity WHERE {
  ?city rdfs:label ""Hub City""@en .
}
SELECT ?native WHERE {
  ?native wdt:P19 ?hubCity .
}

# Cross-reference to ensure the person matches all criteria
SELECT DISTINCT ?actor WHERE {
  ?spouse wdt:P800 ?work .
  wd:Q789012 wdt:P161 ?actor .
  ?actor wdt:P19 ?hubCity .
  ?city rdfs:label ""Hub City""@en .
}
```

Note: Replace `wd:Q123456` with the actual DBpedia ID for Sherry Hormann and `wd:Q789012` with the DBpedia ID for ""All About the Andersons."" The exact IDs need to be looked up in DBpedia.",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
345,20,test,"Give me the figure known as the nickname of the player, that is a sports club and an organisation and a soccer club, in Armando Heeb and team of the person born, that is a soccer player and a soccer manager, on the birth date of Eiður Guðjohnsen.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?result <http://dbpedia.org/property/nickname> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v5 <http://dbpedia.org/ontology/birthDate> ?v4 . <http://dbpedia.org/resource/Eiður_Guðjohnsen> <http://dbpedia.org/ontology/birthDate> ?v4 . ?v1 <http://dbpedia.org/property/nickname> ?v2 . <http://dbpedia.org/resource/Armando_Heeb> <http://dbpedia.org/ontology/team> ?v1 . ?result <http://dbpedia.org/ontology/manager> ?v5 . },"```sparql
# Step 1: Get Eiður Guðjohnsen's birth date
SELECT ?birthDate WHERE {
    dbpedia:Æður_Guðjónsson dbo:birthDate ?birthDate .
}

# Step 2: Find a soccer player and manager born on that date
SELECT DISTINCT ?person WHERE {
    ?person dbo:birthDate ?birthDate ;
            rdf:type dbo:SoccerPlayer ;
            rdf:type dbo:SoccerManager .
}

# Step 3: Identify Armando Heeb's team
SELECT DISTINCT ?team WHERE {
    dbpedia:Armando_Heeb dbo:memberOfTeam ?team .
}

# Step 4: Get the nickname of that sports club
SELECT DISTINCT ?nickname WHERE {
    ?team rdf:type dbo:SoccerClub ;
          dbo:nickname ?nickname .
}
```",6,11,7,3,2,3,2,20,0,0,1,0,0.0,0
617,43,test,"Give me the child of Antiochus III the Great and parent of Nysa (wife of Pharnaces I of Pontus) and spouse of the child of the successor, that is a royalty, of Antiochus (son of Antiochus III the Great).",SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Antiochus_III_the_Great> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/successor> ?v0 . ?v0 <http://dbpedia.org/ontology/child> ?v4 . ?v4 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Nysa_(wife_of_Pharnaces_I_of_Pontus)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?antiochus3 a dbo:Monarch ;
              dbo:spouse ?laodice3 ;
              dbo:child ?nysa .
  
  ?nysa rdfs:label ""Nysa (wife of Pharnaces I of Pontus)""@en .

  ?antiochus3 dbo:successor ?seleucus4 .
  ?seleucus4 a dbo:Monarch ;
             dbo:child ?antiochus4 .
  
  ?antiochus4 rdfs:label ""Antiochus IV Epiphanes""@en .
  ?antiochus4 dbo:spouse ?person .

  FILTER (LANG(?nysa) = 'en' && LANG(?antiochus4) = 'en')
}
```",5,6,6,3,3,3,3,71,0,0,2,0,0.0,0
801,20,test,"Give me the professional in  and producer of the work, that is a musical work and a song and a work, of 50 Cent.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v2 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/50_Cent> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/ontology/producer> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?work ?producer WHERE {
  ?work a dbo:SongsBy50Cent ;
        dbo:artist dbr:50_Cent ;
        rdf:type dbo:Song .
  
  OPTIONAL { 
    ?work dbo:producer ?producer .
  }
}
```",3,6,4,2,2,3,3,71,0,0,27,0,0.0,0
360,21,test,Give me the writer of The Roaring Silence and native of Johannesburg and reference to the author of Blinded by the Light.,SELECT ?result WHERE { <http://dbpedia.org/resource/Blinded_by_the_Light> <http://dbpedia.org/property/author> ?v0 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Johannesburg> . <http://dbpedia.org/resource/The_Roaring_Silence> <http://dbpedia.org/property/writer> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?writer ?birthPlace WHERE {
  # Find Mike Oldfield and his birthplace
  ?person a dbo:MusicArtist ;
          foaf:name ""Mike Oldfield"" ;
          dbo:birthPlace ?birthPlace .
  
  FILTER regex(?birthPlace, ""Johannesburg"", ""i"")

  # Ensure he is associated with ""The Roaring Silence""
  OPTIONAL {
    ?album dbo:artist ?person ;
           foaf:name ""The Roaring Silence"" .
  }

  # Reference Bruce Springsteen as the author of ""Blinded by the Light""
  ?song dbo:lyricist dbr:Bruce_Springsteen ;
        foaf:name ""Blinded by the Light"" .

  BIND(?person AS ?writer)
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
801,39,test,"Give me the associated musical artist of the writer, that is a musical artist and an artist, of the album, that is a musical work and a work, of What U See Is What U Get and producer of Westside Story (song).",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/property/writer> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Westside_Story_(song)> <http://dbpedia.org/ontology/producer> ?result . <http://dbpedia.org/resource/What_U_See_Is_What_U_Get> <http://dbpedia.org/ontology/album> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. },"```sparql
# Step 1: Find the musical artist associated with the album ""What U See Is What U Get""
SELECT ?albumArtist WHERE {
  ?album dcterms:title ""What U See Is What U Get""@en .
  ?album dbo:musicalArtist ?artist .
  ?artist a dbo:MusicalArtist .
}

# Step 2: Identify a writer of that album who is also a musical artist and an artist
SELECT DISTINCT ?writer WHERE {
  VALUES (?album) { (<http://dbpedia.org/resource/What_U_See_Is_What_U_Get_(album)> ) }
  ?album dbo:lyricsWriter ?writer .
  ?writer a dbo:MusicalArtist ;
          a dbo:Artist .
}

# Step 3: Find the albums produced by this writer/artist
SELECT DISTINCT ?producedAlbum WHERE {
  VALUES (?writer) { (<http://dbpedia.org/resource/{writer_uri}> ) } # Replace with actual URI from step 2
  ?album dbo:producer ?writer .
  ?album a dbo:MusicalWork ;
         a dbo:Work .
}

# Step 4: Identify the producer of ""Westside Story"" (song)
SELECT DISTINCT ?producer WHERE {
  ?song dcterms:title ""Westside Story""@en ;
        dbo:producer ?producer .
}

# Step 5: Check if there's any overlap between the writer/artist and the producer
SELECT DISTINCT ?commonPerson WHERE {
  VALUES (?writer) { (<http://dbpedia.org/resource/{writer_uri}> ) } # Replace with actual URI from step 2
  VALUES (?producer) { (<http://dbpedia.org/resource/{producer_uri}> ) } # Replace with actual URI from step 4
  FILTER(?writer = ?producer)
}
```",4,8,5,3,2,3,3,71,0,0,1,0,0.0,0
314,26,test,"Give me the person deceased at the headquarter of House of Sombrerete and commander in the profession, that is an event and a societal event, of Lisa Gavrić and awardee of 30.","SELECT ?result WHERE { <http://dbpedia.org/resource/House_of_Sombrerete> <http://dbpedia.org/ontology/location> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/restingPlace> ?v2 . ?result <http://dbpedia.org/property/awards> ""30""^^<http://www.w3.org/2001/XMLSchema#integer> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Lisa_Gavrić> <http://dbpedia.org/property/occupation> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  # Person deceased at the headquarter of House of Sombrerete
  ?deathEvent dbo:location dbr:Headquarters_of_the_House_of_Sombrerete ;
              dbo:agent ?person ;
              a dbo:Death .

  # Commander in profession
  ?person dbo:occupation dbr:Military_Commander .

  # Event and societal event of Lisa Gavrić
  ?societalEvent dbo:participant dbr:Lisa_Gavrić ;
                a dbo:SocietalEvent .
  ?deathEvent rdfs:seeAlso ?societalEvent .

  # Awardee of 30
  ?awardEvent dbo:recipient ?person ;
              dbp:number ""30""^^xsd:string .
}
```",5,7,6,2,3,2,3,28,0,0,1,0,0.0,0
281,57,test,"Give me the war of Beauchamp Seymour, 1st Baron Alcester and entity in the birth place, that is a country, of the leader, that is a politician, of 1962 New South Wales state election and war of the profession, that is a military unit, of Heather Roy.","SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Beauchamp_Seymour,_1st_Baron_Alcester> <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/ontology/birthPlace> ?v5 . ?result <http://dbpedia.org/ontology/place> ?v5 . <http://dbpedia.org/resource/Heather_Roy> <http://dbpedia.org/property/occupation> ?v3 . <http://dbpedia.org/resource/1962_New_South_Wales_state_election> <http://dbpedia.org/property/leader> ?v0 . }","```sparql
# Step 1: Find the war involving Beauchamp Seymour, 1st Baron Alcester
SELECT ?war WHERE {
  ?s dbpedia-owl:wikiPageRedirects dbc:Beauchamp_Seymour_1st_Baron_Alcester .
  ?s dbpedia-owl:occupation ?occupation .
  ?occupation dbo:relatedWork ?war .
}

# Step 2: Find the leader of the 1962 New South Wales state election and their birthplace country
SELECT ?leader ?birthPlaceCountry WHERE {
  ?election dbo:state dbr:New_South_Wales ;
            dbo:electionDate ?date .
  FILTER(YEAR(?date) = 1962)
  ?election dbo:winner ?leader .
  ?leader dbpedia-owl:birthPlace ?birthPlace .
  ?birthPlace rdf:type dbo:Country .
  BIND(str(?birthPlace) AS ?birthPlaceCountry)
}

# Step 3: Find the military unit associated with Heather Roy and related wars
SELECT ?unit ?war WHERE {
  dbr:Heather_Roy dbo:profession ?profession .
  ?profession dbpedia-owl:relatedWork ?unit .
  ?unit dbo:partOf ?war .
}

# Final Query: Combine information to find an entity in the birthplace country of the NSW leader that is linked to the war Beauchamp Seymour was involved in or Heather Roy's military unit
SELECT DISTINCT ?entity WHERE {
  # From Step 1
  ?s dbpedia-owl:wikiPageRedirects dbc:Beauchamp_Seymour_1st_Baron_Alcester .
  ?s dbpedia-owl:occupation ?occupation .
  ?occupation dbo:relatedWork ?war1 .

  # From Step 2
  ?election dbo:state dbr:New_South_Wales ;
            dbo:electionDate ?date .
  FILTER(YEAR(?date) = 1962)
  ?election dbo:winner ?leader .
  ?leader dbpedia-owl:birthPlace ?birthPlace .
  ?birthPlace rdf:type dbo:Country .
  BIND(str(?birthPlace) AS ?birthPlaceCountry)

  # From Step 3
  dbr:Heather_Roy dbo:profession ?profession .
  ?profession dbpedia-owl:relatedWork ?unit .
  ?unit dbo:partOf ?war2 .

  # Find entity in the birthplace country linked to either war1 or war2
  ?entity rdf:type dbo:Country ;
          rdfs:label ?birthPlaceCountry .
  OPTIONAL { ?entity dbo:relatedWar ?war1 }
  OPTIONAL { ?entity dbo:relatedWar ?war2 }
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
232,63,test,"Give me the native of the residence, that is a settlement and British, of Sylvie Bermann and actor of the claim to fame, that is a film and a military conflict, of Sean Pertwee and child of the person born as the birth name of Jon Pertwee.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v3 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/property/birthName> ?v4 . <http://dbpedia.org/resource/Sylvie_Bermann> <http://dbpedia.org/property/residence> ?v2 . ?v3 <http://dbpedia.org/property/birthName> ?v4 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v6 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Sean_Pertwee> <http://dbpedia.org/ontology/knownFor> ?v6 . },"```sparql
# Find Sylvie Bermann's British settlement residence
SELECT ?residence WHERE {
  wd:Q123456 wdt:P19 ?residence .
  ?residence wdt:P31/wdt:P279* wd:Q515 . # Settlement
  ?residence wdt:P17 wd:Q145 .           # United Kingdom
}

# Find Sean Pertwee's claim to fame involving a film and military conflict
SELECT ?claimToFame WHERE {
  wd:Q789012 wdt:P106 wd:Q33999 .        # Sean Pertwee is an actor
  wd:Q789012 wdt:P800 ?claimToFame .
  ?claimToFame wdt:P31/wdt:P279* wd:Q11424 . # Film
  ?claimToFame wdt:P31/wdt:P279* wd:Q13442814 . # Military conflict
}

# Confirm Sean Pertwee is the child of Jon Pertwee
SELECT ?child WHERE {
  wd:Q345678 wdt:P40 ?child .
  FILTER (?child = wd:Q789012)            # Jon Pertwee's child is Sean Pertwee
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
659,63,test,"Give me the commander in the war, that is an event and a military conflict, of 1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish) and military force of the force, that is a societal event and an event and a military conflict, of Rutger Jan Schimmelpenninck and commander in the force of the native, that is an office holder, of Kingdom of Ireland.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v4 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Kingdom_of_Ireland> . ?v3 <http://dbpedia.org/ontology/commander> ?v4 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v6 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/1st_Light_Cavalry_Lancers_Regiment_of_the_Imperial_Guard_(Polish)> <http://dbpedia.org/ontology/battle> ?v6 . ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander1 ?commander2 WHERE {
  # Find the war involving the 1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish)
  ?regiment dbo:militaryConflict ?war .
  ?regiment rdfs:label ""1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish)""@en .

  # Find the commander associated with this regiment and war
  ?commander1 dbo:commanded ?regiment ;
              dbo:associatedWith ?war .

  # Identify Rutger Jan Schimmelpenninck as a societal event and military conflict participant
  ?schimmelpenninck dbo:associatedWith ?event .
  ?schimmelpenninck rdfs:label ""Rutger Jan Schimmelpenninck""@en .

  # Find the commander associated with Schimmelpenninck's force
  ?commander2 dbo:commanded ?force ;
              dbo:associatedWith ?event .

  # Identify the native office holder of the Kingdom of Ireland
  ?officeHolder dbo:nativeCountry dbr:Kingdom_of_Ireland ;
                a dbo:OfficeHolder .
  ?officeHolder rdfs:label ""Robert Stewart, Viscount Castlereagh""@en .

  # Find the commander associated with Castlereagh's force
  ?commander3 dbo:commanded ?force2 ;
              dbo:associatedWith ?event2 .
}
```",7,13,8,3,3,3,3,71,0,0,15,0,0.0,0
232,31,test,Give me the actor of Dog Soldiers (film) and child of the person born as the birth name of Jon Pertwee.,SELECT ?result WHERE { <http://dbpedia.org/resource/Dog_Soldiers_(film)> <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/ontology/child> ?result . },"```sparql
# Step 1: Get actors of ""Dog Soldiers""
SELECT ?actor WHERE {
  ?film dcterms:title ""Dog Soldiers""@en .
  ?film dbo:starring ?actor .
}

UNION

SELECT ?director WHERE {
  ?film dcterms:title ""Dog Soldiers""@en .
  ?film dbo:director ?director .
}

# Step 2: Get Jon Pertwee's birth name
SELECT ?birthName WHERE {
  dbpedia:Jon_Pertwee foaf:name ?birthName .
}

# Step 3: Find children of Jon Pertwee using his birth name
SELECT ?child WHERE {
  ?person foaf:name ?birthName .
  ?person dbo:child ?child .
}
```

Note: The above queries are separate steps. You would need to execute them sequentially and manually check for overlaps between the results from Step 1 and Step 3.",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
528,60,test,"Give me the force of the person born as the birth name of Narciso Campero and war of the military force of the entity, that is a societal event, in Chile.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Chile> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?v2 <http://dbpedia.org/ontology/battle> ?v3 . ?v2 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Narciso_Campero> <http://dbpedia.org/property/birthName> ?v0 . ?result <http://dbpedia.org/ontology/commander> ?v1 . },"```sparql
SELECT ?birthName ?force ?event WHERE {
  # Step 1: Find the birth name of Narciso Campero
  ?person dbo:birthName ?birthName .
  ?person rdfs:label ""Narciso Campero""@en .

  OPTIONAL {
    # Step 2: Find any military force associated with him
    ?force dbo:leader ?person .
    
    OPTIONAL {
      # Step 3: Identify a war or societal event in Chile involving this military force
      ?event dbo:location ?chile ;
             dbo:participatingMilitaryForce ?force ;
             rdf:type dbo:MilitaryConflict .

      FILTER (langMatches(lang(?chile), ""en"") && contains(lcase(str(?chile)), ""chile""))
    }
  }
}
```",6,7,7,3,2,3,3,71,0,1,4,0.0,0.0,0
232,24,test,"Give me the actor of the claim to fame, that is a film and a military conflict, of Sean Pertwee and native of London.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Sean_Pertwee> <http://dbpedia.org/ontology/knownFor> ?v2 . ?v2 <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/London> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?filmConflict
WHERE {
  ?person a dbo:Actor ;
          foaf:name ""Sean Pertwee""@en ;
          dbp:birthPlace dbr:London .
  
  ?filmConflict dbo:actor ?person ;
                rdf:type/(dbo:Film|dbo:MilitaryConflict) .

  FILTER NOT EXISTS { ?filmConflict rdf:type dbo:Film . }
  FILTER NOT EXISTS { ?filmConflict rdf:type dbo:MilitaryConflict . }
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
659,53,test,"Give me the commander in the force of the native, that is an office holder, of Kingdom of Ireland and commander in Battle of Leipzig and military force of the force, that is a societal event and an event and a military conflict, of Rutger Jan Schimmelpenninck.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/commander> ?v3 . ?result <http://dbpedia.org/ontology/battle> ?v1 . <http://dbpedia.org/resource/Battle_of_Leipzig> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Kingdom_of_Ireland> . ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:MilitaryPerson .
  ?person dbo:officeHolderOf dbr:Kingdom_of_Ireland .
  ?person dbo:commanderInMilitaryConflict dbr:Battle_of_Leipzig .
  ?person dbo:militaryForce dbr:Society_of_the_Batavian_Republic .
  ?person dbo:associatedWith dbr:Rutger_Jan_Schimmelpenninck .
}
```",6,10,7,3,3,3,3,71,0,0,6,0,0.0,0
54,59,test,Give me the child of the father of the child of Thinkhaya of Pagan and parent of the child of the parent of Thado Minsaw of Prome.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> ?v2 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> . ?v5 <http://dbpedia.org/ontology/parent> ?result . ?v5 <http://dbpedia.org/property/father> ?v0 . ?v2 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?v3 . },"```sparql
# Step 1: Find Thinkhaya's child
SELECT ?thinkhayasChild WHERE {
    ?thinkhaya dbo:spouse ?partner .
    ?thinkhaya foaf:name ""Thinkhaya""@en .
    ?thinkhaya dbo:child ?thinkhayasChild .
}

# Step 2: Find Thado Minsaw's grandparent
SELECT ?thadoMinsawsGrandparent WHERE {
    ?thadoMinsaw dbo:spouse ?partner .
    ?thadoMinsaw foaf:name ""Thado Minsaw""@en .
    ?thadoMinsaw dbo:child ?thadoParent .
    ?thadoParent dbo:parent ?thadoMinsawsGrandparent .
}

# Step 3: Find the child of Thinkhaya who is also a parent of Thado Minsaw's sibling
SELECT DISTINCT ?commonPerson WHERE {
    # Thinkhaya's child
    ?thinkhayasChild dbo:child ?commonPerson .

    # Thado Minsaw's grandparent's child (Thado or sibling)
    ?thadoMinsawsGrandparent dbo:child ?thadoParent .
    ?thadoParent dbo:child ?thadoOrSibling .

    FILTER (?commonPerson = ?thadoOrSibling)
}
```",6,6,7,3,2,3,3,71,0,0,1,0,0.0,0
10,25,test,"Give me the band member of the person born, that is an artist, as Luke Francis Vibert and associated musical artist of the person born, that is an artist, as Matt Colton and professional in .","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . ?v0 <http://dbpedia.org/property/birthName> ""Luke Francis Vibert""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v3 <http://dbpedia.org/property/birthName> ""Matt Colton""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?bandMember ?associatedArtist WHERE {
  # Part 1: Luke Francis Vibert's band member(s)
  {
    ?person foaf:name ""Luke Francis Vibert""@en .
    ?person dbo:musicalArtist ?bandMember .
    FILTER EXISTS { ?bandMember a dbo:MusicalArtist }
  }

  UNION

  # Part 2: Matt Colton's associated musical artist
  {
    ?person foaf:name ""Matt Colton""@en .
    ?person dbo:musicalArtist ?associatedArtist .
    FILTER EXISTS { ?associatedArtist a dbo:MusicalArtist }
  }
}
```",5,7,6,2,3,2,3,28,0,0,1,0,0.0,0
801,54,test,"Give me the professional in the alter ego of The Shadow and producer of the work, that is a musical work and a song and a work, of the professional, that is a musical artist, in Rapper and associated musical artist of Chris Taylor (music producer).","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/occupation> ""Rapper""@en . <http://dbpedia.org/resource/Chris_Taylor_(music_producer)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v5 <http://dbpedia.org/ontology/producer> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v5 <http://dbpedia.org/property/writer> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v3 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person dbo:alterEgo dbr:Lamont_Cranston .
  ?person dbo:profession dbr:Musical_artist .
  ?person dbo:genre dbr/Rap_music .
  ?work dbo:producer ?person ;
        a dbo:Song .
  ?association dbo:associatedMusicalArtist ?person ;
                dbo:musicalArtist dbr:Chris_Taylor_(music_producer) .
}
```",6,10,7,3,3,3,3,71,0,0,2,0,0.0,0
994,49,test,"Give me the associated musical artist of the associated musical artist of Watchtower (band) and band member of the person born, that is a musical artist, as the persona of Don Dokken.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://dbpedia.org/property/birthName> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Don_Dokken> <http://xmlns.com/foaf/0.1/givenName> ?v4 . <http://dbpedia.org/resource/Watchtower_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
# Step 1: Find Watchtower's associated musical artist
SELECT ?associatedArtist WHERE {
  wd:Q1234568 wdt:P463 ?associatedArtist .
}

# Step 2: Find an associated musical artist of the result from step 1
SELECT ?secondAssociatedArtist WHERE {
  ?artist wdt:P463 ?secondAssociatedArtist .
  FILTER(?artist = <result_from_step_1>)
}

# Step 3: Identify Don Dokken's band
SELECT ?band WHERE {
  wd:Q1234567 wdt:P106 wd:Q483501 .
  wd:Q1234567 wdt:P102 ?band .
}

# Step 4: Find Don Dokken's birth year
SELECT ?birthYear WHERE {
  wd:Q1234567 wdt:P569 ?dateOfBirth .
  BIND(YEAR(?dateOfBirth) AS ?birthYear)
}

# Step 5: Identify a musical artist born in the same year as Don Dokken
SELECT ?musicalArtist WHERE {
  ?artist wdt:P106 wd:Q483501 .
  ?artist wdt:P569 ?dateOfBirth .
  FILTER(YEAR(?dateOfBirth) = <result_from_step_4>)
}
```

Note: Replace `wd:Q1234568` with the actual DBpedia ID for Watchtower and `wd:Q1234567` with the DBpedia ID for Don Dokken. The placeholders `<result_from_step_1>` and `<result_from_step_4>` should be replaced with the actual results obtained from executing the previous queries.",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
392,28,test,"Give me the entity in the region, that is a country, of Central European Time and region of the time zone, that is a sports event, of Aguilar de Segarra and province of the residence, that is a settlement and Italian, of Sebastiano Bianchetti.",SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Aguilar_de_Segarra> <http://dbpedia.org/ontology/timeZone> ?v3 . <http://dbpedia.org/resource/Sebastiano_Bianchetti> <http://dbpedia.org/property/residence> ?v5 . ?v5 <http://dbpedia.org/ontology/province> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/country> ?v1 . ?result <http://dbpedia.org/ontology/timeZone> ?v3 . ?v1 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . ?v5 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. },"```sparql
# Step 1: Find countries in the Central European Time zone
SELECT ?country WHERE {
  ?timeZone dcterms:isPartOf ?region .
  ?timeZone dbp:name ""Central European Time"" .
  ?region dbo:country ?country .
}

UNION

# Step 2: Identify sports events associated with Aguilar de Segarra
SELECT ?sportsEvent WHERE {
  ?location rdfs:label ""Aguilar de Segarra""@en .
  ?event dbo:location ?location ;
         rdf:type dbo:Event .
  ?event rdfs:label ?sportsEvent .
}

UNION

# Step 3: Determine the province and residence of Sebastiano Bianchetti
SELECT ?province WHERE {
  ?person foaf:name ""Sebastiano Bianchetti""@en .
  ?person dbo:nationality dbr:Italy .
  ?person dbo:residence ?settlement .
  ?settlement dbo:country dbr:Italy ;
              dbo:administrativeUnit ?province .
}
```",6,10,7,2,3,2,3,28,0,0,1,0,0.0,0
356,18,test,"Give me the team of the native, that is a soccer player and a soccer manager, of Wolverhampton and player in the successor of the predecessor, that is a sports team season and a soccer club season, of 2015 Sacramento Republic FC season.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/team> ?result . ?v3 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Wolverhampton> . ?v1 <http://dbpedia.org/ontology/successor> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?result <http://dbpedia.org/ontology/manager> ?v3 . ?v1 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/2015_Sacramento_Republic_FC_season> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. },"```sparql
SELECT ?player ?currentTeam WHERE {
  # Find a person native to Wolverhampton who is both a player and manager
  ?person dbo:nativePlace dbr:Wolverhampton ;
          dbo:occupation dbr:Soccer_player ;
          dbo:occupation dbr:Soccer_manager .
  
  # Ensure the person played in the 2015 Sacramento Republic FC season
  ?player dbr:2015_Sacramento_Republic_FC_season dbo:member ?person .

  # Find the current team of this player/manager
  OPTIONAL { ?person dbo:currentTeam ?currentTeam . }
}
```",5,9,6,3,2,3,2,20,0,0,1,0,0.0,0
312,8,test,Give me the entity in the birthplace of Giorgio Grigolli and entity in Province of Bergamo.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v1 . ?result <http://dbpedia.org/ontology/province> <http://dbpedia.org/resource/Province_of_Bergamo> . <http://dbpedia.org/resource/Giorgio_Grigolli> <http://dbpedia.org/ontology/birthPlace> ?v1 . },"```sparql
# Query to get the birthplace of Giorgio Grigolli
SELECT ?birthPlace WHERE {
  dbpedia-it:Giorgio_Grigolli dbo:birthPlace ?birthPlace .
}

# Query to find an entity in Province of Bergamo
SELECT ?entity WHERE {
  ?entity dbp:locatedInProvince ""Bergamo""@it .
}
```",3,3,4,2,2,2,2,9,0,0,228,0,0.0,0
314,22,test,Give me the awardee of the award of Sergei Makovetsky and person deceased at the headquarter of House of Sombrerete.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/restingPlace> ?v2 . ?result <http://dbpedia.org/property/awards> ?v3 . <http://dbpedia.org/resource/Sergei_Makovetsky> <http://dbpedia.org/property/awards> ?v3 . <http://dbpedia.org/resource/House_of_Sombrerete> <http://dbpedia.org/ontology/location> ?v2 . },"```sparql
# Query to find the award received by Sergei Makovetsky
SELECT ?award WHERE {
  ?s dbpedia-owl:birthName ""Sergei Makovetsky""@en .
  ?s dbo:awardReceived ?award .
}

UNION

# Query to find a person deceased at the headquarters of House of Sombrerete
SELECT ?person WHERE {
  ?location rdfs:label ""House of Sombrerete""@en ;
            dbo:deathPlace ?person .
}
```",4,4,5,2,2,2,3,28,0,0,1,0,0.0,0
54,51,test,"Give me the predecessor of the child, that is an office holder and a royalty, of the reference to Thihapate of Mohnyin and parent of the child of Narapati I of Ava.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Narapati_I_of_Ava> . ?v1 <http://xmlns.com/foaf/0.1/name> ""Thihapate of Mohnyin""@en . ?v2 <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/ontology/successor> ?v2 . ?v4 <http://dbpedia.org/ontology/parent> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?predecessor WHERE {
  # Find Thihapate of Mohnyin's child who is an office holder and royalty
  ?thihapateChild dbo:childOf dbp:Thihapate_of_Mohnyin ;
                  a dbo:OfficeHolder, dbo:Royalty .

  # Find Narapati I of Ava's child
  ?narapatiChild dbo:childOf dbp:Narapati_I_of_Ava .

  # Determine the predecessor of Thihapate's child
  ?thihapateChild dbo:predecessor ?predecessor .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
182,28,test,Give me the war of the work of Gotabhaya Rajapaksa and entity in the nationality of Tamara Kunanayakam and war of the author of 2019 Sri Lanka Easter bombings.,SELECT ?result WHERE { <http://dbpedia.org/resource/2019_Sri_Lanka_Easter_bombings> <http://dbpedia.org/property/author> ?v1 . ?v3 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Gotabhaya_Rajapaksa> . ?v1 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> ?v5 . ?v3 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Tamara_Kunanayakam> <http://dbpedia.org/ontology/nationality> ?v5 . },"```sparql
SELECT ?war ?nationality ?authorWork WHERE {
  # Gotabhaya Rajapaksa and the war he was involved in
  ?person1 rdfs:label ""Gotabhaya Rajapaksa""@en .
  ?person1 dbo:occupation dbo:Secretary_of_Defence .
  ?person1 dbo:spouse ?spouse .
  ?spouse dbo:spouse ?person2 .
  ?person2 dbo:birthPlace dbr:Sri_Lanka .
  ?person1 dbo:relatedWork ?war .
  FILTER(CONTAINS(LCASE(?war), ""sri lankan civil war""))

  # Tamara Kunanayakam's nationality
  ?person3 rdfs:label ""Tamara Kunanayakam""@en .
  ?person3 dbo:nationality dbr:India .

  # Rohan Gunaratna and his work related to the Easter bombings
  ?person4 rdfs:label ""Rohan Gunaratna""@en .
  ?person4 dbo:authorOf ?authorWork .
  FILTER(CONTAINS(LCASE(?authorWork), ""sri lanka easter bombings"") || CONTAINS(LCASE(?authorWork), ""2019""))
  
  BIND(?war AS ?war)
  BIND(dbr:India AS ?nationality)
  BIND(?authorWork AS ?authorWork)
}
```",6,6,7,2,3,2,3,28,0,0,1,0,0.0,0
959,61,test,"Give me the manager of the team of the manager, that is a sports manager, of 1998 Kashima Antlers season and native of the residence, that is a country, of the leader, that is a politician, of 2010 Japanese House of Councillors election.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://dbpedia.org/ontology/manager> ?v3 . ?result <http://dbpedia.org/ontology/birthPlace> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. <http://dbpedia.org/resource/1998_Kashima_Antlers_season> <http://dbpedia.org/ontology/manager> ?v3 . ?v1 <http://dbpedia.org/property/residence> ?v4 . <http://dbpedia.org/resource/2010_Japanese_House_of_Councillors_election> <http://dbpedia.org/property/leader> ?v1 . },"```sparql
# Step 1: Find the manager of the 1998 Kashima Antlers season
SELECT ?manager WHERE {
  ?team dcterms:title ""Kashima Antlers""@en .
  ?team dbo:sportsTeamSeason ?season .
  ?season dbo:year ""1998""^^xsd:gYear .
  ?season dbo:coach ?manager .
}

# Step 2: Find the residence (country) of a politician who led in the 2010 Japanese House of Councillors election
SELECT ?politician ?residence WHERE {
  ?election dcterms:title ""Japanese House of Councillors election, 2010""@en ;
            dbo:electionWinner ?politician .
  ?politician foaf:based_near ?location .
  ?location geo:hasCoordinate ?coordinate .
  ?location rdf:type dbo:Country .
  BIND(STR(?location) AS ?residence)
}

# Step 3: Find the manager of the team managed by the sports manager identified in step 1
SELECT ?finalManager WHERE {
  # Assuming we have found the manager from step 1 as ?manager
  VALUES (?manager) { ""Name_of_the_manager_from_step_1"" } .
  
  ?team dbo:sportsTeamSeason ?season .
  ?season dbo:year ?year .
  ?season dbo:coach ?manager .
  ?team dbo:currentManager ?finalManager .
}
```

Note: Replace `""Name_of_the_manager_from_step_1""` with the actual name obtained from step 1.",6,9,7,3,2,3,3,71,0,0,6,0,0.0,0
179,18,test,"Give me the person born as the birth name of the child, that is a royalty, of Nakkhatra Mangala and parent of the child of Bhumibol Adulyadej.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v2 . ?v1 <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Bhumibol_Adulyadej> <http://dbpedia.org/ontology/child> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Nakkhatra_Mangala> . ?v3 <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Step 1: Identify Nakkhatra Mangala
  ?nak_birth_name a dbo:Person ;
                  foaf:name ""Nakkhatra Mangala""@en .
  
  # Step 2: Find the child of Nakkhatra Mangala who is royalty
  ?nak_child dbo:childOf ?nak_birth_name ;
            a dbo:Monarch .

  # Step 3: Identify Bhumibol Adulyadej and his child
  dbr:Bhumibol_Adulyadej dbo:child ?bhumibol_child .

  # Step 4: Find the parent of Bhumibol Adulyadej's child
  ?bhumibol_parent dbo:parentOf ?bhumibol_child .

  # Step 5: Match the royalty from step 2 with the parent found in step 4
  FILTER (?nak_child = ?bhumibol_parent)
  
  # Return the person (royalty) born as Nakkhatra Mangala's child
  BIND(?nak_child AS ?person)
}
```",5,6,6,3,2,3,2,20,0,0,1,0,0.0,0
547,36,test,Give me the resting place of James Burton (Egyptologist) and resting place of the awardee of the award of Gerald Graham.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/James_Burton_(Egyptologist)> <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Gerald_Graham> <http://dbpedia.org/property/awards> ?v0 . ?v1 <http://dbpedia.org/property/awards> ?v0 . },"```sparql
# Query to find the resting place of James Burton (Egyptologist)
SELECT ?burialPlace WHERE {
  ?person a dbo:Egyptologist ;
          foaf:name ""James Burton"" .
  OPTIONAL { ?person dbo:deathPlace ?burialPlace . }
}

# Query to find the resting place of the awardee of Gerald Graham's award
SELECT ?awardeeBurialPlace WHERE {
  ?award a dbo:Award ;
         dbo:recipient ?awardee .
  ?geraldGraham foaf:name ""Gerald Graham"" ;
                dbo:associatedAward ?award .
  OPTIONAL { ?awardee dbo:deathPlace ?awardeeBurialPlace . }
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
427,51,test,"Give me the party of the person born, that is an office holder and a politician, as the birth name of Romano Prodi and party of the father of Lamberto Andreotti.",SELECT ?result WHERE { <http://dbpedia.org/resource/Lamberto_Andreotti> <http://dbpedia.org/property/father> ?v4 . <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/ontology/party> ?result . ?v4 <http://dbpedia.org/ontology/party> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
# Query for Romano Prodi's birth name and political party
SELECT ?birthName ?party WHERE {
  ?prodi dbo:birthName ?birthName .
  ?prodi foaf:name ""Romano Prodi""@en .
  OPTIONAL { 
    ?prodi dbo:politicalParty ?party .
  }
} 

UNION

# Query for Lamberto Andreotti's father and his political party
SELECT ?fatherName ?party WHERE {
  ?andreotti dbo:father ?father .
  ?father foaf:name ?fatherName .
  ?father dbo:birthName ?fatherBirthName .
  OPTIONAL { 
    ?father dbo:politicalParty ?party .
  }
  ?andreotti foaf:name ""Lamberto Andreotti""@en .
}
```",5,7,6,3,2,3,3,71,0,0,3,0,0.0,0
747,50,test,"Give me the band of the person born as Tracey Elizabeth McSween and band of the writer of the work, that is a song, of Amba Shepherd.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/birthName> ""Tracey Elizabeth McSween""@en . ?v0 <http://dbpedia.org/property/writer> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Amba_Shepherd> . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
# Query for the band of Tracey Elizabeth McSween
SELECT ?band WHERE {
  ?person foaf:name ""Tracey Elizabeth McSween""@en .
  ?person dbo:memberOf ?band .
}

# Query for the writer of a song by Amba Shepherd
SELECT DISTINCT ?writer WHERE {
  ?song dbo:composer ?writer ;
        dbo:lyricsBy ?ambashepherd .
  ?ambashepherd foaf:name ""Amba Shepherd""@en .
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
9,28,test,"Give me the alma mater of the mayor, that is a politician, of Northern Ireland Forum and figure known as QUB and alma mater of Allen Hill (scientist).","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Allen_Hill_(scientist)> <http://dbpedia.org/ontology/almaMater> ?result . <http://dbpedia.org/resource/Northern_Ireland_Forum> <http://dbpedia.org/property/leader> ?v1 . ?result <http://dbpedia.org/property/nickname> ""QUB""@en . ?v1 <http://dbpedia.org/ontology/almaMater> ?result . }","```sparql
# Find the mayor associated with Northern Ireland Forum and QUB
SELECT ?mayor WHERE {
  ?mayor dbo:almaMater dbr:Queen's_University_Belfast .
  ?mayor dbo:occupation dbr:Politician .
  # Assuming there is a property linking them to Northern Ireland Forum, if not available directly
}

# Find Allen Hill's alma mater
SELECT ?allenHillAlmaMater WHERE {
  dbp:Allen_Hill dbo:almaMater ?allenHillAlmaMater .
}

# Combine the results to find common alma mater
SELECT DISTINCT ?commonAlmaMater WHERE {
  # Assuming we have identified a specific mayor from the first query, replace `?mayor` with their URI
  ?mayor dbo:almaMater ?commonAlmaMater .
  
  # Allen Hill's alma mater
  dbp:Allen_Hill dbo:almaMater ?allenHillAlmaMater .

  FILTER (?commonAlmaMater = ?allenHillAlmaMater)
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
9,70,test,"Give me the figure known as the nickname of the entity, that is an organisation and an educational institution, in Northern Ireland and alma mater of the mayor, that is a politician, of Northern Ireland Forum and alma mater of the awardee of the reference, that is an award, to Royal Medals.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Northern_Ireland> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?result <http://dbpedia.org/property/nickname> ?v3 . ?v4 <http://dbpedia.org/ontology/almaMater> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v7 <http://dbpedia.org/ontology/almaMater> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Royal Medals""@en . <http://dbpedia.org/resource/Northern_Ireland_Forum> <http://dbpedia.org/property/leader> ?v4 . ?v7 <http://dbpedia.org/property/awards> ?v0 . ?v1 <http://dbpedia.org/property/nickname> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?institution ?nickname WHERE {
  ?institution a dbo:EducationalInstitution ;
               dbo:location dbr:Northern_Ireland ;
               dbp:nickname ?nickname .
  
  ?mayor dbo:almaMater ?institution ;
         dbo:occupation dbr:Mayor_of_the_Northern_Ireland_Forum .

  ?medalist dbo:almaMater ?institution ;
            dbo:awardReceived dbr:Royal_Medals .
}
```",8,12,9,3,3,3,3,71,0,0,1,0,0.0,0
184,52,test,"Give me the child of the child of Archduke Joseph Karl of Austria and parent of Archduchess Ilona of Austria and parent of the native of the landmark at elevation, that is a settlement, of 96.0.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Karl_of_Austria> . ?result <http://dbpedia.org/property/father> ?v5 . ?result <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?v3 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Ilona_of_Austria> . ?v3 <http://dbpedia.org/ontology/elevation> ""96.0""^^<http://www.w3.org/2001/XMLSchema#double> . }","```sparql
# Step 1: Find Archduke Joseph Karl's child who is also a parent of Archduchess Ilona
SELECT ?child WHERE {
    ?archduke dbr:Archduke_Joseph_Karl_of_Austria dbo:child ?child .
    ?child dbo:parent dbr:Archduchess_Ilona_of_Austria .
}

# Step 2: Find the landmark at elevation 96.0 that is a settlement
SELECT ?settlement WHERE {
    ?settlement a dbo:Settlement ;
                dbo:elevation ""96.0""^^xsd:float .
}

# Step 3: Find the native of this settlement
SELECT ?native WHERE {
    ?native dbo:nativePlace ?settlement .
}

# Step 4: Combine results to find the required person
SELECT DISTINCT ?person WHERE {
    # Assuming ?child from step 1 is found and stored as ?parent_of_Ilona
    ?parent_of_Ilona dbo:child ?person .
    
    # Assuming ?native from step 3 is found and stored as ?native_person
    FILTER(?person = ?native_person)
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
391,52,test,"Give me the native of the figure known as the nick name of Jackson, Tennessee and actor of All About the Andersons and actor of the claim to fame, that is a work, of Michael Ballhaus.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/All_About_the_Andersons> <http://dbpedia.org/property/starring> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/property/nickname> ?v3 . <http://dbpedia.org/resource/Michael_Ballhaus> <http://dbpedia.org/ontology/knownFor> ?v5 . <http://dbpedia.org/resource/Jackson,_Tennessee> <http://xmlns.com/foaf/0.1/nick> ?v3 . ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . }","```sparql
# Step 1: Find the nickname of Jackson, Tennessee
SELECT ?nickname WHERE {
  dbpedia:Jackson_Tennessee rdfs:label ?label .
  FILTER(CONTAINS(LCASE(?label), ""nick name""))
  BIND(SUBSTR(?label, STRSTARTS(UCASE(?label), ""NICK NAME OF JACKSON, TENNESSEE IS "") + LENGTH(""NICK NAME OF JACKSON, TENNESSEE IS ""), * ) AS ?nickname)
}

# Step 2: Find the actor associated with that nickname
SELECT DISTINCT ?actor WHERE {
  ?actor rdfs:label ?actorLabel .
  FILTER(CONTAINS(LCASE(?actorLabel), ""nick name"") && CONTAINS(LCASE(?actorLabel), ?nickname))
  
  # Step 3: Identify the work by Michael Ballhaus considered as claim to fame
  OPTIONAL { 
    ?film dbp:director dbpedia:Michael_Ballhaus .
    ?actor dbo:starring ?film .
    FILTER(CONTAINS(LCASE(STR(?film)), ""claim to fame""))
  }
  
  # Step 4: Retrieve the native place of this actor
  OPTIONAL {
    ?actor dbo:nativePlace ?nativePlace .
  }
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
994,47,test,"Give me the associated musical artist of the associated musical artist of Watchtower (band) and associated musical artist of the band member, that is a band and a group and an organisation, of the band, that is an organisation, of Fredrik Thordendal.",SELECT ?result WHERE { <http://dbpedia.org/resource/Watchtower_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Fredrik_Thordendal> . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. },"```sparql
# Step 1: Find the associated musical artist of Watchtower (band)
SELECT ?watchtowerArtist WHERE {
  wd:Q123456 wdt:P175 ?watchtowerArtist .
}

# Step 2: Find the associated musical artist of the result from step 1
SELECT ?secondLevelArtist WHERE {
  ?artist wdt:P175 ?secondLevelArtist .
  FILTER(?artist = <INSERT_WATCHTOWER_ARTIST_URI_HERE>)
}

# Step 3: Identify Fredrik Thordendal's band (Meshuggah)
SELECT ?meshuggahBand WHERE {
  wd:Q1234567 wdt:P106 ?occupation .
  ?occupation wdt:P279* wd:Q13442814 . # Musician
  ?person wdt:P106 ?occupation ;
          wdt:P463 ?band .
  FILTER(?person = wd:Q1234567) # Fredrik Thordendal's URI
}

# Step 4: Find the associated musical artist of Meshuggah
SELECT ?meshuggahArtist WHERE {
  ?band wdt:P175 ?meshuggahArtist .
  FILTER(?band = <INSERT_MESHUGGAH_BAND_URI_HERE>)
}
```

Note: Replace `<INSERT_WATCHTOWER_ARTIST_URI_HERE>` and `<INSERT_MESHUGGAH_BAND_URI_HERE>` with the actual URIs obtained from the queries.",5,9,6,3,2,3,3,71,0,0,5,0,0.0,0
659,66,test,"Give me the commander in the force of Arthur Wellesley, 1st Duke of Wellington and military force of the force, that is a societal event and an event and a military conflict, of the reference to Rutger Jan Schimmelpenninck and commander in the war, that is an event and a military conflict, of 1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish).","SELECT ?result WHERE { ?v6 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://dbpedia.org/ontology/commander> ?v1 . ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://xmlns.com/foaf/0.1/name> ""Rutger Jan Schimmelpenninck""@en . ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Arthur_Wellesley,_1st_Duke_of_Wellington> . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/1st_Light_Cavalry_Lancers_Regiment_of_the_Imperial_Guard_(Polish)> <http://dbpedia.org/ontology/battle> ?v6 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  # Arthur Wellesley's involvement in military conflicts
  dbr:Arthur_Wellesley dbo:militaryConflict [
    a dbo:MilitaryConflict ;
    dbo:participatingUnit dbr:1st_Light_Cavalry_Lancers_Regiment_of_the_Imperial_Guard_(Polish) .
  ] .

  # Rutger Jan Schimmelpenninck's involvement in military conflicts
  dbr:Rutger_Jan_Schimmelpenninck dbo:militaryConflict ?conflict .

  # Find a commander associated with both Wellesley and the conflict involving Schimmelpenninck
  ?commander dbo:commanded ?unit .
  ?unit dbo:militaryConflict ?conflict .
  
  FILTER(?conflict = dbr:Battle_of_Waterloo)
}
```",7,12,8,3,3,3,3,71,0,0,15,0,0.0,0
547,65,test,Give me the resting place of the actor of the show with Emily Richard and resting place of the awardee of Knight Grand Cross of the Order of St Michael and St George and resting place of the child of James Burton (property developer).,SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/James_Burton_(property_developer)> <http://dbpedia.org/ontology/child> ?v4 . ?v3 <http://dbpedia.org/ontology/restingPlace> ?result . ?v0 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emily_Richard> . ?v6 <http://dbpedia.org/ontology/restingPlace> ?result . ?v0 <http://dbpedia.org/property/starring> ?v6 . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_St_Michael_and_St_George> . },"```sparql
# Query for the actor from a show with Emily Richard (assuming Emily Watson)
SELECT ?actor ?restingPlace WHERE {
  ?show dbo:starring dbr:Emily_Watson .
  ?show dbo:starring ?actor .
  OPTIONAL { ?actor dbo:deathPlace ?restingPlace . }
}

# Query for the awardee of Knight Grand Cross of the Order of St Michael and St George
SELECT ?person ?restingPlace WHERE {
  ?person dbo:honours dbr:Order_of_St_Michael_and_St_George .
  ?person dbo:knighted ""Knight Grand Cross""^^xsd:string .
  OPTIONAL { ?person dbo:deathPlace ?restingPlace . }
}

# Query for the child of James Burton (property developer)
SELECT ?child ?restingPlace WHERE {
  ?james dbr:James_Burton_(property_developer) .
  ?james dbo:child ?child .
  OPTIONAL { ?child dbo:deathPlace ?restingPlace . }
}
```",7,7,8,3,3,3,3,71,0,0,1,0,0.0,0
547,71,test,Give me the resting place of the awardee of the award of Gerald Graham and resting place of the actor of the show with Emily Richard and resting place of the child of the child of William Haliburton.,"SELECT ?result WHERE { ?v8 <http://dbpedia.org/property/awards> ?v7 . ?v4 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emily_Richard> . ?v5 <http://dbpedia.org/ontology/restingPlace> ?result . ?v1 <http://dbpedia.org/ontology/child> ?v2 . ?v8 <http://dbpedia.org/ontology/restingPlace> ?result . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . ?v1 <http://dbpedia.org/property/father> ""William Haliburton""@en . <http://dbpedia.org/resource/Gerald_Graham> <http://dbpedia.org/property/awards> ?v7 . ?v4 <http://dbpedia.org/property/starring> ?v5 . }","```sparql
# Query for the resting place of the awardee of the award associated with Gerald Graham
SELECT ?awardeeRestingPlace WHERE {
  ?award dbo:recipient ?person .
  ?award dbo:name ?awardName .
  FILTER(CONTAINS(LCASE(?awardName), ""gerald graham"")) .
  OPTIONAL { ?person dbo:deathPlace ?restingPlace . }
  BIND(IF(BOUND(?restingPlace), ?restingPlace, ""Unknown"") AS ?awardeeRestingPlace)
}

UNION

# Query for the resting place of an actor from a show with Emily Richard
SELECT ?actorRestingPlace WHERE {
  ?film dbo:starring ?actor .
  ?film dbo:starring ?emilyRichard .
  FILTER(CONTAINS(LCASE(?emilyRichard), ""emily richard"")) .
  OPTIONAL { ?actor dbo:deathPlace ?restingPlace . }
  BIND(IF(BOUND(?restingPlace), ?restingPlace, ""Unknown"") AS ?actorRestingPlace)
}

UNION

# Query for the resting place of a grandchild of William Haliburton
SELECT ?grandchildRestingPlace WHERE {
  ?parent dbo:child ?child .
  ?child dbo:child ?grandchild .
  ?parent foaf:name ""William Haliburton""@en .
  OPTIONAL { ?grandchild dbo:deathPlace ?restingPlace . }
  BIND(IF(BOUND(?restingPlace), ?restingPlace, ""Unknown"") AS ?grandchildRestingPlace)
}
```",9,9,10,3,3,3,3,71,0,0,1,0,0.0,0
55,28,test,"Give me the band of the reference, that is a band, to Newsted and band member of the producer, that is a band, of Used to Love Her and band member of the band member, that is a band and a group, of San Francisco Symphony.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. <http://dbpedia.org/resource/Used_to_Love_Her> <http://dbpedia.org/ontology/producer> ?v1 . ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v5 <http://xmlns.com/foaf/0.1/name> ""Newsted""@en . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/San_Francisco_Symphony> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band WHERE {
  # Jason Newsted was a member of Metallica
  dbr:Jason_Newsted dbo:memberOf dbr:Metallica .

  # Toby Wright produced Alice in Chains' ""Used to Love Her""
  ?producer dbo:producedAlbum dbr:Jar_of_Flies .
  ?album dbo:title ""Jar of Flies"" .
  ?album dbo:artist dbr:Alice_in_Chains .
  
  # Michael Kamen was associated with Metallica and the San Francisco Symphony
  dbr:Michael_Kamen dbo:memberOf ?band ;
                    dbo:memberOf dbr:San_Francisco_Symphony .

  FILTER(?band = dbr:Metallica)
}
```",6,10,7,2,3,2,3,28,0,0,1,0,0.0,0
303,25,test,"Give me the entity in the country, that is a country, of El Valle de Antón and party of Arnulfo Arias and party of the commander, that is a politician, in United States invasion of Panama.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v4 . ?v3 <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/United_States_invasion_of_Panama> <http://dbpedia.org/ontology/commander> ?v3 . <http://dbpedia.org/resource/Arnulfo_Arias> <http://dbpedia.org/ontology/party> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/El_Valle_de_Antón> <http://dbpedia.org/ontology/country> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity WHERE {
  # El Valle de Antón is in Panama
  dbr:El_Valle_de_Antón dbo:country dbr:Panama .
  
  # Arnulfo Arias founded the Arnulfista Party
  dbr:Arnulfo_Arias dbo:founded dbr:Partido_Arnulfista .

  # Manuel Noriega was a politician in Panama during the U.S. invasion
  dbr:Manuel_Noriega dbo:nationality dbr:Panama ;
                     dbo:occupation dbr:Politician .
  
  # The entity we are looking for is a country, associated with Arnulfista Party and Noriega
  ?entity dbo:country dbr:Panama .
  ?entity dbo:founded dbr:Partido_Arnulfista .
  ?entity dbo:occupation dbr:Politician .
}
```",5,7,6,2,3,2,3,28,0,0,1,0,0.0,0
404,49,test,"Give me the spouse of the person born, that is a royalty, as Princess Victoria Louise of Prussia and child of the father of the spouse of Princess Victoria Louise of Prussia.","SELECT ?result WHERE { <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?v0 . ?result <http://dbpedia.org/ontology/parent> ?v1 . ?v0 <http://dbpedia.org/property/father> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/birthName> ""Princess Victoria Louise of Prussia""@en . ?v2 <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
SELECT ?child WHERE {
  wd:Q1198 wdt:P26 ?spouse . # Princess Victoria Louise of Prussia's spouse
  ?spouse wdt:P22 ?father .   # Spouse's father
  ?father wdt:P40 ?child .    # Father's children
  FILTER(?child IN (wd:Q157, wd:Q158, wd:Q159, wd:Q160, wd:Q161)) # Children of King George V
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
427,62,test,Give me the reference to the name of the party of Michele Pinto and party of the father of the alumnus of Massachusetts Institute of Technology and party of Romano Prodi.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?v6 . ?v4 <http://xmlns.com/foaf/0.1/name> ?v3 . ?v0 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Massachusetts_Institute_of_Technology> . <http://dbpedia.org/resource/Michele_Pinto> <http://dbpedia.org/ontology/party> ?v4 . <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/ontology/party> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . ?v6 <http://dbpedia.org/ontology/party> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?micheleParty ?fatherParty ?prodiParty WHERE {
  # Michele Pinto's political party
  OPTIONAL { 
    ?michele a dbo:Person ;
             foaf:name ""Michele Pinto"" ;
             dbo:politicalParty ?micheleParty .
  }

  # Father of an MIT alumnus and his political party
  OPTIONAL {
    ?alumnus a dbo:AlumniOf ;
             dbp:almaMater <http://dbpedia.org/resource/Massachusetts_Institute_of_Technology> ;
             foaf:parent ?father .
    ?father a dbo:Person ;
            dbo:politicalParty ?fatherParty .
  }

  # Romano Prodi's political party
  OPTIONAL {
    ?prodi a dbo:Person ;
           foaf:name ""Romano Prodi"" ;
           dbo:politicalParty ?prodiParty .
  }
}
```",7,7,8,3,3,3,3,71,0,0,2,0,0.0,0
547,48,test,Give me the resting place of the child of the child of William Haliburton and resting place of the awardee of Knight Grand Cross of the Order of St Michael and St George.,"SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> ""William Haliburton""@en . ?v3 <http://dbpedia.org/ontology/child> ?v2 . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_St_Michael_and_St_George> . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . }","```sparql
# Query for the resting place of a grandchild of William Haliburton
SELECT ?grandchild ?restingPlace WHERE {
  ?williamHaliburton dbo:spouse ?spouse .
  ?williamHaliburton foaf:name ""William Haliburton""@en .
  ?williamHaliburton dbo:child ?child .
  ?child dbo:child ?grandchild .
  OPTIONAL { ?grandchild dbo:deathPlace ?restingPlace }
}

UNION

# Query for the resting place of a Knight Grand Cross of the Order of St Michael and St George
SELECT ?person ?restingPlace WHERE {
  ?person dbo:honoraryTitle ""Knight Grand Cross of the Order of St Michael and St George""@en .
  OPTIONAL { ?person dbo:deathPlace ?restingPlace }
}
```",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
16,38,test,Give me the professional in the profession of Satomi Ishihara and person born as the birth name of Gigi Rice.,SELECT ?result WHERE { <http://dbpedia.org/resource/Gigi_Rice> <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Satomi_Ishihara> <http://dbpedia.org/property/occupation> ?v3 . ?result <http://dbpedia.org/property/birthName> ?v2 . ?result <http://dbpedia.org/property/occupation> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Find Satomi Ishihara's profession
  dbr:Satomi_Ishihara dbo:occupation ?profession .

  # Find Gigi Rice's birth name
  dbr:Gigi_Rice dbo:birthName ?birthName .

  # Find a person with the same profession and birth name
  ?person dbo:occupation ?profession ;
          dbo:birthName ?birthName .
}
```",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
404,31,test,"Give me the parent of Prince Ernest Augustus of Hanover (born 1914) and spouse of the person born, that is a royalty, as the birth name of Princess Victoria Louise of Prussia.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Prince_Ernest_Augustus_of_Hanover_(born_1914)> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
SELECT ?parent ?spouse ?birthName WHERE {
  # Find the parent of Prince Ernest Augustus of Hanover (born 1914)
  dbpedia:Prince_Ernst_August_of_Hanover dbo:parent ?parent .
  
  # Identify the spouse of this parent
  ?parent foaf:surname ""Hanover""@en .
  ?spouse dbo:spouse ?parent .
  
  # Retrieve the birth name of Princess Victoria Louise of Prussia
  ?spouse rdfs:label ""Princess Victoria Louise of Prussia""@en ;
          foaf:name ?birthName .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
492,49,test,"Give me the person decedent at the capital, that is a settlement, of the country of Khemis Miliana District and person decedent at the work of US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite.","SELECT ?result WHERE { <http://dbpedia.org/resource/Khemis_Miliana_District> <http://dbpedia.org/ontology/country> ?v0 . ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . ?v2 <http://dbpedia.org/property/author> ""US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . ?v0 <http://dbpedia.org/ontology/capital> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?personDecedentAtKhemisMiliana ?satterthwaiteDeathLocation WHERE {
  # Find the capital of Khemis Miliana District
  ?district a dbo:District ;
           dbo:capital dbr:Khemis_Miliana .
  
  # Find individuals who died in Khemis Miliana
  ?personDecedentAtKhemisMiliana dbo:deathPlace dbr:Khemis_Miliana .

  # Find Joseph C. Satterthwaite's death location related to his work
  OPTIONAL {
    ?satterthwaite a dbo:Person ;
                   foaf:name ""Joseph C. Satterthwaite"" ;
                   dbo:occupation dbr:Assistant_Secretary_of_State_for_African_Affairs .
    ?satterthwaite dbo:deathPlace ?satterthwaiteDeathLocation .
  }
}
```",5,6,6,3,2,3,3,71,0,0,16,0,0.0,0
10,20,test,"Give me the professional in  and associated musical artist of Matt Colton and band member of the person born, that is an artist, as Luke Francis Vibert.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ""Luke Francis Vibert""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/property/occupation> """"@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . <http://dbpedia.org/resource/Matt_Colton> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
# Find an artist associated with Matt Colton as a mastering engineer
SELECT ?artist WHERE {
  ?colton dbo:occupation dbr:Mastering_engineer .
  ?colton foaf:name ""Matt Colton"" .
  ?project dbo:masteredBy ?colton ;
           dbo:musicalArtist ?artist .
}

UNION

# Find bands associated with Luke Francis Vibert (Wagon Christ)
SELECT ?band WHERE {
  ?vibert dbo:birthName ""Luke Francis Vibert"" ;
          foaf:name ""Wagon Christ"" ;
          dbo:memberOfBand ?band .
}
```",4,5,5,2,3,2,3,28,0,0,1,0,0.0,0
328,66,test,"Give me the commander in the force of Ferenc Szálasi and awardee of the award of Bruce Fraser, 1st Baron Fraser of North Cape and leader of the office, that is a government agency, of the leader, that is an office holder and a politician, of Gustav Jonson.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/leader> ?result . <http://dbpedia.org/resource/Gustav_Jonson> <http://dbpedia.org/property/leader> ?v1 . ?v6 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?result <http://dbpedia.org/property/awards> ?v3 . ?v6 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Ferenc_Szálasi> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape> <http://dbpedia.org/property/awards> ?v3 . ?v1 <http://dbpedia.org/property/office> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commander ?awardee ?leader WHERE {
  # Find the commander associated with Ferenc Szálasi
  OPTIONAL { 
    ?szalasi dbo:spouse|dbo:child|dbo:parent|dbo:employer|dbo:employee dbr:Ferenc_Szálasi .
    ?szalasi dbo:commander ?commander .
  }

  # Find an awardee linked to Bruce Fraser
  OPTIONAL {
    ?fraser dbo:awardedBy|dbo:awardRecipient dbr:Bruce_Fraser_1st_Baron_Fraser_of_North_Cape .
    ?fraser dbo:awardee ?awardee .
  }

  # Determine the leader of an office or government agency connected to Gustav Jonson
  OPTIONAL {
    ?jonson dbo:spouse|dbo:child|dbo:parent|dbo:employer|dbo:employee dbr:Gustav_Jonson .
    ?jonson dbo:leaderOf ?office .
    ?office dbo:head ?leader .
  }

  # Attempt to find intersections
  FILTER(?commander = ?awardee && ?awardee = ?leader)
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
427,34,test,Give me the party of Romano Prodi and reference to the name of the party of Michele Pinto.,SELECT ?result WHERE { <http://dbpedia.org/resource/Michele_Pinto> <http://dbpedia.org/ontology/party> ?v2 . <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/ontology/party> ?result . ?v2 <http://xmlns.com/foaf/0.1/name> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?partyProdi ?partyPinto WHERE {
  # Query for Romano Prodi's party affiliation
  OPTIONAL {
    ?prodi dbo:politicalParty ?partyProdi .
    FILTER (str(?prodi) = ""Romano_Prodi"")
  }
  
  # Query for Michele Pinto's party affiliation
  OPTIONAL {
    ?pinto dbo:politicalParty ?partyPinto .
    FILTER (str(?pinto) = ""Michele_Pinto_(politician)"")
  }
}
```",4,4,5,3,2,3,3,71,0,0,2,0,0.0,0
617,70,test,"Give me the spouse of the child of the successor, that is a royalty, of Antiochus (son of Antiochus III the Great) and parent of the child of the commander in Battle of Panium and child of the child, that is a royalty, of Seleucus II Callinicus.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/successor> ?v0 . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seleucus_II_Callinicus> . ?result <http://dbpedia.org/ontology/child> ?v3 . ?result <http://dbpedia.org/property/father> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/child> ?v3 . <http://dbpedia.org/resource/Battle_of_Panium> <http://dbpedia.org/ontology/commander> ?v1 . ?v7 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/ontology/child> ?v7 . },"```sparql
SELECT ?spouse WHERE {
  # Identify Antiochus IV Epiphanes
  ?antiochusIV dbo:father dbr:Antiochus_III_the_Great .
  
  # Find his successor, Demetrius I Soter
  ?demetriusI dbo:succeededBy ?antiochusIV .

  # Identify a royal child of Demetrius I Soter, Antiochus V Eupator
  ?antiochusV dbo:father ?demetriusI .
  
  # Find the spouse of Antiochus V Eupator
  ?spouse dbo:spouse ?antiochusV .

  # Ensure Laodice VI is identified as a spouse
  FILTER(?spouse = dbr:Laodice_VI)
}
```",8,10,9,3,3,3,3,71,0,0,2,0,0.0,0
184,58,test,Give me the parent of the child of the parent of Archduchess Margaret of Austria (born 1925) and parent of Géza von Habsburg and child of the child of Archduke Joseph Karl of Austria.,SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Karl_of_Austria> . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Géza_von_Habsburg> . ?v2 <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/property/father> ?v5 . ?result <http://dbpedia.org/ontology/child> ?v2 . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Margaret_of_Austria_(born_1925)> . },"```sparql
# Step 1: Find Archduchess Margaret of Austria's parent and their child
SELECT ?margaretParent ?margaretChild WHERE {
    ?margaret dbo:birthDate ""1925-01-01""^^xsd:date .
    ?margaret rdfs:label ""Archduchess Margaret of Austria""@en .
    ?margaret dbo:parent ?margaretParent .
    ?margaretParent dbo:child ?margaretChild .
}

# Step 2: Find Géza von Habsburg's parent
SELECT ?gezaParent WHERE {
    ?geza rdfs:label ""Géza von Habsburg""@en .
    ?geza dbo:parent ?gezaParent .
}

# Step 3: Find Archduke Joseph Karl of Austria's grandchild
SELECT ?josephChild ?grandchild WHERE {
    ?joseph rdfs:label ""Archduke Joseph Karl of Austria""@en .
    ?joseph dbo:child ?josephChild .
    ?josephChild dbo:child ?grandchild .
}

# Step 4: Find the common ancestor
SELECT DISTINCT ?commonAncestor WHERE {
    # From step 1
    ?margaretParent dbo:parent ?commonAncestor .
    ?margaretChild dbo:parent ?commonAncestor .

    # From step 2
    ?gezaParent dbo:parent ?commonAncestor .

    # From step 3
    ?grandchild dbo:parent ?commonAncestor .
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
404,69,test,"Give me the spouse of the person born, that is a royalty, as the birth name of Princess Victoria Louise of Prussia and parent of the child, that is a royalty, of Ernest Augustus, Duke of Brunswick and child of the father of the spouse of Princess Victoria Louise of Prussia.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v7 . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?v1 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> ?v2 . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/property/birthName> ?v4 . ?v3 <http://dbpedia.org/property/birthName> ?v4 . ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/ontology/child> ?v7 . }","```sparql
SELECT ?spouse WHERE {
  ?princess foaf:name ""Victoria Louise Marie Anna Elisabeth""@en .
  ?princess dbo:spouse ?spouse .
  ?spouse rdf:type dbo:Monarch .
  ?child dbo:parent ?spouse ;
         rdf:type dbo:Monarch .
  ?child dbo:parent ?duke .
  ?duke foaf:name ""Ernest Augustus, Duke of Brunswick""@en .
  ?father dbo:child ?spouse .
}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
184,24,test,Give me the parent of Archduchess Ilona of Austria and child of the child of Archduke Joseph Karl of Austria.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Ilona_of_Austria> . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Karl_of_Austria> . ?result <http://dbpedia.org/property/father> ?v2 . },"```sparql
# Find the parent of Archduchess Ilona of Austria
SELECT ?parent WHERE {
  wd:Q123456 wdt:P40 ?parent. # Assuming Q123456 is the DBpedia ID for Archduchess Ilona of Austria
}

# Find a grandchild of Archduke Joseph Karl of Austria and their child
SELECT DISTINCT ?grandchild ?child WHERE {
  wd:Q654321 wdt:P40 ?child1. # Assuming Q654321 is the DBpedia ID for Archduke Joseph Karl of Austria
  ?child1 wdt:P40 ?child2.
  ?child2 wdt:P40 ?grandchild.
}

# Find a common person who fits both criteria
SELECT DISTINCT ?commonPerson WHERE {
  { 
    wd:Q123456 wdt:P40 ?commonPerson. # Parent of Archduchess Ilona
  }
  UNION
  {
    ?parent wdt:P40 ?commonPerson. # Child of the grandchild of Archduke Joseph Karl
    ?grandchild wdt:P40 ?parent.
  }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
820,17,test,Give me the child of the parent of the professional in Actor and professional in .,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v3 . ?v3 <http://dbpedia.org/ontology/child> ?v0 . ?result <http://dbpedia.org/property/occupation> """"@en . ?v0 <http://dbpedia.org/property/occupation> ""Actor""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?childCategory WHERE {
  # Find a professional in Actor
  ?actor rdfs:subClassOf* dbo:Actor .
  
  # Determine the parent category of Actor
  ?parentCategory rdfs:subClassOf+ ?actor .

  # Find another professional within that parent category
  ?otherProfessional rdfs:subClassOf* ?parentCategory .
  
  # Ensure it's a different profession from Actor
  FILTER(?otherProfessional != dbo:Actor)

  # Identify the child category of this other professional
  ?childCategory rdfs:subClassOf+ ?otherProfessional .
}
LIMIT 1
```",4,4,5,3,2,3,2,20,0,0,128,0,0.0,0
767,71,test,"Give me the reference to the alter ego of the persona, that is a fictional character, of Matthew Burland and alma mater of the administration of the reference to George Kilbon Nash and entity in the administration, that is a settlement, of the writer of Where It's At (Dustin Lynch album).","SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/almaMater> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://xmlns.com/foaf/0.1/name> ?v8 . ?result <http://dbpedia.org/ontology/state> ?v2 . <http://dbpedia.org/resource/Where_It's_At_(Dustin_Lynch_album)> <http://dbpedia.org/property/writer> ?v1 . ?v5 <http://dbpedia.org/property/governor> ?v4 . ?v7 <http://dbpedia.org/property/alterEgo> ?v8 . ?v4 <http://xmlns.com/foaf/0.1/name> ""George Kilbon Nash""@en . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v2 <http://dbpedia.org/property/leaderParty> ?v1 . ?v7 <http://dbpedia.org/property/alterEgo> ""Matthew Burland""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?alterEgo ?almaMater ?settlement WHERE {
  # Matthew Burland's alter ego (fictional character)
  dbr:The_Amazing_World_of_Gumball dbo:creator dbr:Matthew_Burland .
  dbr:The_Amazing_World_of_Gumball dbo:fictionalCharacter ?alterEgo .

  # George Kilbon Nash's alma mater
  dbr:George_Kilbon_Nash dbo:almaMater ?almaMater .

  # Josh Osborne and his associated settlement
  dbr:Josh_Osborne dbo:occupation dbr:Singer-songwriter .
  ?settlement dbo:location dbr:Josh_Osborne ;
              a dbo:Settlement .

  # Linking the fictional character to Princeton University and Josh Osborne's settlement
  FILTER(?alterEgo = ?almaMater || ?alterEgo = ?settlement)
}
```",9,11,10,3,3,3,3,71,0,0,1,0,0.0,0
77,17,test,"Give me the force of the mayor of the territory administered, that is an organisation, from Warsaw and war of Alexander Chechenskiy.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Warsaw> . ?result <http://dbpedia.org/ontology/commander> ?v3 . ?v0 <http://dbpedia.org/property/leader> ?v3 . <http://dbpedia.org/resource/Alexander_Chechenskiy> <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?mayor ?organisation ?war ?force WHERE {
  # Find the current mayor of Warsaw
  ?mayor dbo:officeHolderOf dbr:Warsaw .
  
  # Check if Warsaw is administered by an organization (interpretation)
  OPTIONAL { ?mayor dbo:memberOf ?organisation . }
  
  # Find Alexander Chechenskiy and his involvement in wars
  ?chechen dbr:Aleksandr_Chechensky .
  ?chechen dbo:participatedInWar ?war .
  
  # Attempt to find a connection between the mayor, organization, and war
  OPTIONAL { ?organisation dbo:relatedTo ?force . }
  
  # Linking the entities (mayor, organisation, war)
  OPTIONAL { ?mayor dbo:relatedTo ?chechen . }
}
```",4,5,5,3,2,3,2,20,0,0,6,0,0.0,0
54,58,test,"Give me the child of Thinkhaya of Pagan and parent of the child of Narapati I of Ava and predecessor of the child, that is an office holder and a royalty, of the reference to Thihapate of Mohnyin.","SELECT ?result WHERE { <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?result . ?v5 <http://dbpedia.org/ontology/parent> ?result . ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Narapati_I_of_Ava> . ?result <http://dbpedia.org/ontology/successor> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/property/father> ?v1 . ?v1 <http://xmlns.com/foaf/0.1/name> ""Thihapate of Mohnyin""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Thinkhaya of Pagan's child
  ?thinkhayaChild dbo:parent dbr:Thinkhaya_of_Pagan .
  
  # Narapati I of Ava's child and their parent
  ?narapatiIChild dbo:parent dbr:Narapati_I_of_Ava .
  ?parentOfNarapatiIChild dbo:child ?narapatiIChild .

  # Thihapate of Mohnyin's predecessor who is an office holder and royalty
  ?thihapate dbp:predecessor ?officeHolderRoyalty .
  ?officeHolderRoyalty a dbo:Monarch ;
                      dbo:occupation dbr:Office_Holder .

  # Find the person fitting all criteria
  FILTER (?thinkhayaChild = ?parentOfNarapatiIChild && ?parentOfNarapatiIChild = ?officeHolderRoyalty)
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
391,55,test,"Give me the native of the figure known as Hub City and actor of the movie, that is a movie and a work and a television show, with Roz Ryan and actor of the claim to fame, that is a work, of Michael Ballhaus.","SELECT ?result WHERE { <http://dbpedia.org/resource/Michael_Ballhaus> <http://dbpedia.org/ontology/knownFor> ?v5 . ?v5 <http://dbpedia.org/ontology/starring> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/property/starring> ?result . ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v3 <http://dbpedia.org/property/nickname> ""Hub City""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v2 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Roz_Ryan> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. }","```sparql
# Step 1: Identify ""Hub City""
SELECT ?city WHERE {
  ?city rdfs:label ?label .
  FILTER(CONTAINS(LCASE(?label), ""hub city""))
}

# Assuming Hub City is identified as Spartanburg, South Carolina

# Step 2 & 3: Find the actor and movie
SELECT DISTINCT ?actor ?movie WHERE {
  # Actor native to Hub City (Spartanburg)
  ?actor dbo:nativePlace dbr:Spartanburg,_South_Carolina .
  
  # Movie that is a work, television show, and features Roz Ryan
  ?movie dbo:starring dbr:Roz_Ryan ;
         rdf:type dbo:Film ;
         dbo:workExample ?work .

  # Actor acted in the movie
  ?actor dbo:actedIn ?movie .
  
  # Step 4: Find Michael Ballhaus's claim to fame
  ?ballhausWork dbo:director dbr:Michael_Ballhaus ;
               rdf:type dbo:Film .
  
  # Actor also acted in Michael Ballhaus's work
  ?actor dbo:actedIn ?ballhausWork .
}

# Note: Replace ""dbr:Spartanburg,_South_Carolina"" with the correct DBpedia resource for Hub City once identified.
```",6,10,7,2,3,3,3,71,0,0,1,0,0.0,0
701,28,test,Give me the parent of Henuttawy (19th dynasty) and spouse of Ramesses II and parent of the child of Nefertari.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Henuttawy_(19th_dynasty)> . <http://dbpedia.org/resource/Nefertari> <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Ramesses_II> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Ramesses II is the spouse of Nefertari
  ?person dbo:spouse dbr:Nefertari_of_Egypt .
  
  # Ramesses II is a parent of Henuttawy (19th dynasty)
  ?henuttawy dbo:parent ?person ;
             rdfs:label ""Henuttawy""@en .

  # Ramesses II is a parent of at least one child of Nefertari
  ?child dbo:parent dbr:Nefertari_of_Egypt .
  ?child dbo:parent ?person .
  
  FILTER (strstarts(?henuttawy, ""http://dbpedia.org/resource/Henuttawy""))
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
16,45,test,Give me the spouse of Ted McGinley and person born as the birth name of the alumnus of Ohio State University and professional in Actress.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Actress""@en . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Ohio_State_University> . ?v0 <http://dbpedia.org/property/birthName> ?v1 . }","```sparql
# Query 1: Get Ted McGinley's spouse
SELECT ?spouse WHERE {
  dbpedia:ted_mcginley dbo:spouse ?spouse .
}

# Query 2: Find an Ohio State University alumnus who is a professional actress and get their birth name
SELECT ?birthName WHERE {
  ?person foaf:almaMater dbpedia:Ohio_State_University ;
          rdf:type dbo:Actor ;
          foaf:name ?name .
  FILTER(CONTAINS(LCASE(?name), ""actress""))
  OPTIONAL { ?person foaf:givenName ?givenName . }
  OPTIONAL { ?person foaf:familyName ?familyName . }
  BIND(CONCAT(?givenName, "" "", ?familyName) AS ?birthName)
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
328,64,test,"Give me the leader of the office, that is a government agency, of the leader, that is an office holder and a politician, of Gustav Jonson and commander in Eastern Front (World War II) and awardee of the award of the commander in Volcano and Ryukyu Islands campaign.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Volcano_and_Ryukyu_Islands_campaign> <http://dbpedia.org/ontology/commander> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. <http://dbpedia.org/resource/Gustav_Jonson> <http://dbpedia.org/property/leader> ?v0 . <http://dbpedia.org/resource/Eastern_Front_(World_War_II)> <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/property/office> ?v1 . ?v1 <http://dbpedia.org/ontology/leader> ?result . ?v3 <http://dbpedia.org/property/awards> ?v2 . ?result <http://dbpedia.org/property/awards> ?v2 . },"```sparql
# Step 1: Identify Gustav Jonson and his roles
SELECT ?gustavJonson WHERE {
  ?gustavJonson dbo:occupation dbr:Military_person .
  ?gustavJonson dbo:award dbr:Volcano_and_Ryukyu_Islands_campaign_award .
  ?gustavJonson dbo:militaryConflict dbr:Eastern_Front_(World_War_II) .
}

# Step 2: Find the leader associated with Gustav Jonson
SELECT DISTINCT ?leader WHERE {
  ?gustavJonson dbo:superior ?leader .
  ?leader a dbo:OfficeHolder ;
          a dbo:Politician .
}

# Step 3: Identify the government agency this leader is associated with
SELECT DISTINCT ?office WHERE {
  ?leader dbo:headOf ?office .
  ?office a dbo:Government_agency .
}

# Step 4: Find the current or relevant leader of that office
SELECT DISTINCT ?currentLeader WHERE {
  ?office dbo:head ?currentLeader .
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
54,52,test,Give me the parent of the child of Narapati I of Ava and child of the father of the child of Thinkhaya of Pagan and predecessor of Ameitta Thiri Maha Dhamma Dewi of Ava.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> ?v2 . <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?v3 . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v5 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Ameitta_Thiri_Maha_Dhamma_Dewi_of_Ava> . ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Narapati_I_of_Ava> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parentOfNarapatiChild ?childOfThinkhayaFather ?predecessorChild
WHERE {
  # Narapati I of Ava's child and their parent
  ?narapatiChild dbo:spouse|dbo:child dbr:Narapati_I_of_Ava .
  ?parentOfNarapatiChild dbo:child ?narapatiChild .

  # Thinkhaya of Pagan's child and their father
  ?thinkhayaChild dbo:spouse|dbo:child dbr:Thinkhaya_of_Pagan .
  ?childOfThinkhayaFather dbo:child ?thinkhayaChild .

  # Ameitta Thiri Maha Dhamma Dewi of Ava's predecessor and their child
  ?ameitta dbr:Ameitta_Thiri_Maha_Dhamma_Dewi_of_Ava ;
           dbo:predecessor ?predecessor .
  ?predecessorChild dbo:child ?predecessor .

  # Find the common link (if any) between these individuals
  FILTER(?parentOfNarapatiChild = ?childOfThinkhayaFather || ?parentOfNarapatiChild = ?predecessorChild)
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
9,54,test,"Give me the alma mater of the awardee of the reference, that is an award, to Royal Medals and alma mater of the mayor, that is a politician, of Northern Ireland Forum and figure known as QUB.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Royal Medals""@en . <http://dbpedia.org/resource/Northern_Ireland_Forum> <http://dbpedia.org/property/leader> ?v3 . ?v5 <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://dbpedia.org/property/nickname> ""QUB""@en . ?v3 <http://dbpedia.org/ontology/almaMater> ?result . ?v5 <http://dbpedia.org/property/awards> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. }","```sparql
# Query to find a notable awardee of the Royal Medals and their alma mater
SELECT ?awardee ?almaMater WHERE {
  ?awardee dbo:award <http://dbpedia.org/resource/Royal_Medal> .
  ?awardee foaf:almaMater ?almaMater .
}

# Query to find a politician who was part of the Northern Ireland Forum and served as mayor
SELECT ?politician WHERE {
  ?politician dbo:memberOf <http://dbpedia.org/resource/Northern_Ireland_Forum> .
  ?politician dbo:positionTitle ""Mayor""@en .
}

# Query to check if this politician's alma mater is QUB
SELECT ?politician ?almaMater WHERE {
  ?politician foaf:almaMater ?almaMater .
  FILTER(?almaMater = <http://dbpedia.org/resource/Queen%27s_University_Belfast>)
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
492,68,test,"Give me the commander in the war, that is a military conflict and an event, of the commander in Battle of Verdun and person decedent at the capital, that is a settlement, of Algeria and person decedent at the work of the author of French Algeria.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> ?v4 . <http://dbpedia.org/resource/Battle_of_Verdun> <http://dbpedia.org/ontology/commander> ?v0 . <http://dbpedia.org/resource/Algeria> <http://dbpedia.org/ontology/capital> ?v3 . ?v7 <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://dbpedia.org/property/author> ?v5 . ?result <http://dbpedia.org/ontology/deathPlace> ?v3 . <http://dbpedia.org/resource/French_Algeria> <http://dbpedia.org/property/author> ?v5 . ?v0 <http://dbpedia.org/ontology/battle> ?v7 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?conflict ?decedent ?work WHERE {
  # Philippe Pétain as commander in a military conflict
  dbr:Philippe_P%C3%A9tain dbo:militaryCommanderOf ?conflict .
  
  # Decedent at the capital of Algeria (Algiers)
  ?decedent dbo:placeOfBirth dbr:Algiers ;
           dbo:deathPlace dbr:Algiers .

  # Albert Camus and his work related to French Algeria
  dbr:Albert_Camus dbo:authorOf ?work .
  
  # Connecting the decedent with a work of Camus
  ?decedent dbo:mortallyWoundedIn ?work .

  # Ensure the commander is involved in both contexts
  ?commander dbo:militaryCommanderOf ?conflict ;
            dbo:deathPlace ?placeOfWork .
}
```",8,11,9,3,3,3,3,71,0,0,1,0,0.0,0
488,55,test,"Give me the death place of the father, that is a politician, of Yūki Hideyasu and birth place of the commander in Boshin War and administration of the father of Emperor Go-Mizunoo.",SELECT ?result WHERE { <http://dbpedia.org/resource/Boshin_War> <http://dbpedia.org/ontology/commander> ?v3 . <http://dbpedia.org/resource/Yūki_Hideyasu> <http://dbpedia.org/property/father> ?v5 . <http://dbpedia.org/resource/Emperor_Go-Mizunoo> <http://dbpedia.org/property/father> ?v2 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v5 <http://dbpedia.org/ontology/deathPlace> ?result . ?result <http://dbpedia.org/property/leader> ?v2 . },"```sparql
SELECT ?deathPlace ?birthPlace ?administration WHERE {
  # Death place of Yuki Masashige (father of Yūki Hideyasu)
  dbpedia:Yuki_Masashige dbo:deathPlace ?deathPlace .

  # Birthplace of Saigo Takamori (commander in Boshin War)
  dbpedia:Saigō_Takamori dbo:birthPlace ?birthPlace .

  # Administration under which Toyotomi Hideyoshi served (father of Emperor Go-Mizunoo)
  dbpedia:Toyotomi_Hideyoshi dbo:office ?administration .
}
```",6,7,7,2,3,3,3,71,0,0,1,0,0.0,0
378,70,test,"Give me the war of the commander in the reference, that is a military conflict, to Peninsular War and claim to fame of the commander in the war, that is a military conflict and a societal event and an event, of Thomas Trigge and war of the person born as Carl Pontus Gahn.","SELECT ?result WHERE { ?v7 <http://dbpedia.org/ontology/battle> ?result . ?v4 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Peninsular War""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/ontology/knownFor> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Thomas_Trigge> <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://dbpedia.org/ontology/commander> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/ontology/commander> ?v7 . ?v4 <http://dbpedia.org/property/birthName> ""Carl Pontus Gahn""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. }","```sparql
# Query for Peninsular War commander and their claim to fame
SELECT ?commander ?claimToFame WHERE {
  ?war dbo:wikiPageRedirects db:Q1234567; # Assuming Q1234567 is the DBpedia ID for Peninsular War
      dbo:militaryCommander ?commander.
  OPTIONAL { ?commander dbo:claimToFame ?claimToFame. }
}

UNION

# Query for Thomas Trigge's military conflict
SELECT ?war WHERE {
  db:Q1234568 dbo:militaryConflict ?war; # Assuming Q1234568 is the DBpedia ID for Thomas Trigge
      a dbo:MilitaryPerson.
}

UNION

# Query for Carl Pontus Gahn's military conflict
SELECT ?war WHERE {
  db:Q1234569 dbo:militaryConflict ?war; # Assuming Q1234569 is the DBpedia ID for Carl Pontus Gahn
      a dbo:MilitaryPerson.
}
```",8,12,9,3,3,3,3,71,0,0,2,0,0.0,0
617,67,test,"Give me the parent of the child of the commander in Battle of Panium and spouse of the child of the successor, that is a royalty, of Antiochus (son of Antiochus III the Great) and child of Antiochus III the Great.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Antiochus_III_the_Great> . ?v6 <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://dbpedia.org/ontology/child> ?v3 . ?v0 <http://dbpedia.org/ontology/child> ?v6 . ?result <http://dbpedia.org/ontology/child> ?v3 . <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/successor> ?v0 . <http://dbpedia.org/resource/Battle_of_Panium> <http://dbpedia.org/ontology/commander> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
SELECT ?parent WHERE {
  # Step 1: Identify the commander in the Battle of Panium
  ?battle dbp:battleName ""Battle of Panium""@en .
  ?commander dbp:commanded ?battle .

  # Step 2: Find the child of this commander
  ?child dbp:parent ?commander .

  # Step 3: Determine the parent of this child
  ?parent dbp:child ?child .

  # Step 4: Identify Antiochus (son of Antiochus III the Great)
  ?antiochus dbp:father ""Antiochus III""@en ;
             rdfs:label ?antiochusLabel FILTER(CONTAINS(LCASE(?antiochusLabel), ""antiochus"")) .

  # Step 5: Find the successor of this Antiochus
  ?successor dbp:succeededBy ?antiochus .

  # Step 6: Identify the child of this successor
  ?childOfSuccessor dbp:parent ?successor .

  # Step 7: Determine the spouse of this child, ensuring they are royalty
  ?spouse dbp:spouse ?childOfSuccessor ;
          rdf:type dbo:Monarch .

  # Step 8: Ensure the spouse is a child of Antiochus III the Great
  ?spouse dbp:father ?antiochus .

  # Return the parent from step 3
}
```",7,8,8,3,3,3,3,71,0,0,2,0,0.0,0
747,60,test,"Give me the band of the person born as the persona of Shèna and person born on the birth date of the person decedent, that is an athlete and a soccer player, at Zolotonosha.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?v3 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Zolotonosha> . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Shèna> <http://xmlns.com/foaf/0.1/givenName> ?v0 . ?result <http://dbpedia.org/ontology/birthDate> ?v2 . ?v3 <http://dbpedia.org/ontology/birthDate> ?v2 . },"```sparql
# Step 1: Find Shèna's birth date
SELECT ?shenaBirthDate WHERE {
    ?s dbr:Pseudonym ""Shèna""@en .
    ?s dbo:birthDate ?shenaBirthDate .
}

# Step 2: Find a decedent with the same birth date, who is an athlete and soccer player from Zolotonosha
SELECT DISTINCT ?decedent ?band WHERE {
    # Find decedents with the same birth date as Shèna
    ?decedent dbo:birthDate ?shenaBirthDate .
    
    # Ensure the person is a soccer player and athlete
    ?decedent dbo:occupation dbr:Soccer_player .
    ?decedent dbo:occupation dbr:Athlete .

    # Ensure they are from Zolotonosha
    ?decedent dbo:birthPlace dbr:Zolotonosha .

    # Find the band associated with this person
    OPTIONAL { ?decedent dbo:memberOfBand ?band . }
}
```",6,8,7,3,2,3,3,71,0,0,1,0,0.0,0
492,66,test,"Give me the person decedent at the capital, that is a settlement, of the country of Khemis Miliana District and person decedent at the work of US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite and commander in the war, that is a military conflict and an event, of Frédéric-Georges Herr.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> ?v3 . <http://dbpedia.org/resource/Khemis_Miliana_District> <http://dbpedia.org/ontology/country> ?v1 . ?v3 <http://dbpedia.org/property/author> ""US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite""@en . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . <http://dbpedia.org/resource/Frédéric-Georges_Herr> <http://dbpedia.org/ontology/battle> ?v6 . ?v1 <http://dbpedia.org/ontology/capital> ?v2 . ?v6 <http://dbpedia.org/ontology/commander> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person1 ?person2 ?person3 WHERE {
  # Find the capital of Khemis Miliana District
  ?district a dbo:District ;
           dbo:capitalCity ?capital .
  
  FILTER(?district = dbr:Khemis_Miliana_District)

  # Person who died at the capital city
  ?deathEvent1 a dbo:Death ; 
               dbo:place ?capital ;
               dbo:agent ?person1 .

  # Joseph C. Satterthwaite's workplace
  ?satterthwaite a dbo:Person ;
                 foaf:name ""Joseph C. Satterthwaite"" ;
                 dbo:officeLocation ?workplace .
  
  # Person who died at the workplace of Joseph C. Satterthwaite
  ?deathEvent2 a dbo:Death ; 
               dbo:place ?workplace ;
               dbo:agent ?person2 .

  # Frédéric-Georges Herr's military conflict
  ?herr a dbo:Person ;
        foaf:name ""Frédéric-Georges Herr"" ;
        dbo:militaryConflict ?conflict .
  
  # Person who died in the military conflict commanded by Frédéric-Georges Herr
  ?deathEvent3 a dbo:Death ; 
               dbo:event ?conflict ;
               dbo:agent ?person3 .
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
778,19,test,"Give me the author of the work, that is a software, of the author of Pushd and popd and entity in the award of Ralph L. Brinster.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/author> ?v0 . <http://dbpedia.org/resource/Pushd_and_popd> <http://dbpedia.org/property/author> ?v0 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Software>. ?result <http://dbpedia.org/ontology/location> ?v2 . ?v4 <http://dbpedia.org/ontology/author> ?result . <http://dbpedia.org/resource/Ralph_L._Brinster> <http://dbpedia.org/property/awards> ?v2 . },"```sparql
# Step 1: Find Stephen R. Bourne's software work
SELECT ?software WHERE {
  ?person foaf:name ""Stephen R. Bourne""@en .
  ?person dbo:worksFor ?organization .
  ?software dbo:author ?person ;
            rdf:type dbo:Software .
}

# Step 2: Identify the author of Bash
SELECT ?author WHERE {
  ?bash dbo:author ?author .
  ?bash foaf:name ""Bash (Unix shell)""@en .
}

# Step 3: Find entities related to Ralph L. Brinster's award
SELECT ?entity WHERE {
  ?award dbo:recipient ?person ;
         foaf:name ""National Medal of Science""@en .
  ?person foaf:name ""Ralph L. Brinster""@en .
  ?award dbo:relatedEntity ?entity .
}

# Step 4: Connect the GNU Project to the award context
SELECT ?gnuAuthor WHERE {
  ?gnuProject rdf:type dbo:Organization ;
              foaf:name ""GNU Project""@en .
  ?gnuProject dbo:founder ?gnuAuthor .
}
```",5,6,6,3,2,3,2,20,0,0,1,0,0.0,0
360,22,test,"Give me the writer of the work, that is an album, of Dave Flett and native of the death place, that is a settlement, of Winnie Madikizela-Mandela.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v2 <http://dbpedia.org/property/author> ""Dave Flett""@en . ?v2 <http://dbpedia.org/property/writer> ?result . <http://dbpedia.org/resource/Winnie_Madikizela-Mandela> <http://dbpedia.org/ontology/deathPlace> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Album>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?albumWriter ?deathPlace WHERE {
  # Find the album written by Dave Flett
  ?album dbo:writer dbr:Dave_Flett .
  
  # Get the writer of that album (assuming it's Dave Flett himself)
  ?album dbo:writer ?albumWriter .

  # Find the death place of Winnie Madikizela-Mandela
  dbr:Winnie_Madikizela-Mandela dbo:deathPlace ?deathPlace .
  
  # Ensure the death place is a settlement
  ?deathPlace rdf:type dbo:Settlement .
}
```",4,6,5,2,2,2,3,28,0,0,1,0,0.0,0
666,18,test,"Give me the player in the manager, that is a sports manager, of the team, that is a soccer club and a sports team season, of Leonid Slutsky (football coach) and figure known as the nickname of England national beach soccer team.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?result <http://dbpedia.org/property/nickname> ?v3 . ?v1 <http://dbpedia.org/ontology/manager> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v1 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Leonid_Slutsky_(football_coach)> . <http://dbpedia.org/resource/England_national_beach_soccer_team> <http://dbpedia.org/property/nickname> ?v3 . ?v2 <http://dbpedia.org/ontology/team> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?player WHERE {
  # Find Leonid Slutsky's managed team
  ?team dbo:manager dbr:Leonid_Slutsky .
  
  # Ensure the team is a soccer club and sports team season
  ?team rdf:type dbo:SoccerClub ;
        dbo:sportsTeamSeason ?season .

  # Identify a player who is also a sports manager for that team
  ?player dbo:playsFor ?team ;
          dbo:occupation dbr:Sports_manager .

  # Find the nickname of the England national beach soccer team
  OPTIONAL {
    ?beachSoccerTeam rdfs:label ""England national beach soccer team""@en .
    ?beachSoccerTeam dbo:nickname ?nickname .
  }
}
```",5,8,6,3,2,3,2,20,0,0,2,0,0.0,0
701,20,test,Give me the parent of the child of Ramesses II and parent of Meritamen.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ramesses_II> . ?result <http://dbpedia.org/ontology/child> ?v2 . <http://dbpedia.org/resource/Meritamen> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parentOfChild ?parentOfMeritamen WHERE {
  # Find a child of Ramesses II (e.g., Khaemwaset)
  ?child dbo:father dbr:Ramesses_II .
  
  # Get the parent of this child
  ?child dbo:father ?parentOfChild .

  # Find the parent of Meritamen
  dbr:Meritamen dbo:mother ?parentOfMeritamen .
  
  # Check if both parents are the same individual
  FILTER (?parentOfChild = ?parentOfMeritamen)
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
659,68,test,"Give me the military force of the force, that is a societal event and an event and a military conflict, of Rutger Jan Schimmelpenninck and commander in the force of the native, that is an office holder, of Kingdom of Ireland and commander in the war, that is an event and a military conflict, of the figure known, that is a military unit and an organisation, as 'Polish Horse'.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v5 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Kingdom_of_Ireland> . ?v4 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/ontology/battle> ?v7 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> . ?v0 <http://dbpedia.org/property/nickname> ""'Polish Horse'""@en . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v4 <http://dbpedia.org/ontology/commander> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v7 <http://dbpedia.org/ontology/commander> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce WHERE {
  # Rutger Jan Schimmelpenninck's military force that is a societal event and a military conflict
  ?schimmelpenninckMilitaryForce dbo:type dbr:Societal_event .
  ?schimmelpenninckMilitaryForce dbo:type dbr:Military_conflict .
  ?schimmelpenninckMilitaryForce dbo:commander dbr:Rutger_Jan_Schimmelpenninck .

  # Native commander in the Kingdom of Ireland who was a commander in a war
  ?irelandCommander dbo:nationality dbr:Kingdom_of_Ireland .
  ?irelandCommander dbo:officeHolder true .
  ?irelandWar dbo:type dbr:Event .
  ?irelandWar dbo:type dbr:Military_conflict .
  ?irelandCommander dbo:commanderIn ?irelandWar .

  # Polish Horse as a military unit and organization
  ?polishHorse dbo:type dbr:Military_unit .
  ?polishHorse dbo:type dbr:Organization .
  ?polishHorse rdfs:label ""Polish Horse""@en .

  # Linking the entities
  ?schimmelpenninckMilitaryForce = ?irelandWar .
  ?irelandCommander = ?polishHorse .
}
```",8,16,9,3,3,3,3,71,0,0,15,0,0.0,0
9,45,test,"Give me the alma mater of John Alderdice, Baron Alderdice and alma mater of Allen Hill (scientist) and figure known as the nickname of the entity, that is an organisation and an educational institution, in Northern Ireland.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Allen_Hill_(scientist)> <http://dbpedia.org/ontology/almaMater> ?result . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Northern_Ireland> . <http://dbpedia.org/resource/John_Alderdice,_Baron_Alderdice> <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://dbpedia.org/property/nickname> ?v1 . ?v0 <http://dbpedia.org/property/nickname> ?v1 . }","```sparql
# Query to get the alma mater of John Alderdice, Baron Alderdice
SELECT ?almaMater WHERE {
  dbpedia:John_Alderdice_alma_mater ?almaMater .
}

# Query to get the alma mater of Allen Hill (scientist)
SELECT ?almaMater WHERE {
  dbpedia:Allen_Hill_(physicist)_alma_mater ?almaMater .
}

# Query to find the nickname for Ulster University
SELECT ?commonName WHERE {
  dbpedia:Ulster_University rdfs:label ?commonName .
  FILTER (lang(?commonName) = 'en')
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
281,25,test,"Give me the entity in Colony of New Zealand and war of the profession, that is a military unit, of Heather Roy.",SELECT ?result WHERE { <http://dbpedia.org/resource/Heather_Roy> <http://dbpedia.org/property/occupation> ?v1 . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Colony_of_New_Zealand> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v1 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryUnit WHERE {
  ?person a dbo:Person ;
          foaf:name ""Heather Roy""@en .
  
  OPTIONAL { ?person dbo:nationality dbr:New_Zealand . }
  
  ?person dbo:militaryUnit ?militaryUnit .

  FILTER EXISTS {
    ?militaryUnit dbo:country dbr:New_Zealand
                 ; (dbo:member|dbo:commander) ?person .
  }

  OPTIONAL { 
    ?person dbo:profession ?profession .
    FILTER regex(?profession, ""war"", ""i"")
  }
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
182,24,test,Give me the entity in the nationality of Tamara Kunanayakam and war of the work of Gotabhaya Rajapaksa.,SELECT ?result WHERE { <http://dbpedia.org/resource/Tamara_Kunanayakam> <http://dbpedia.org/ontology/nationality> ?v0 . ?result <http://dbpedia.org/ontology/place> ?v0 . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Gotabhaya_Rajapaksa> . },"```sparql
SELECT ?nationalityLabel ?warLabel WHERE {
  # Query for Tamara Kunanayakam's nationality
  wd:Q123456 dbo:nationality ?nationality .
  
  # Get the label of the nationality
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
  
  # Query for Gotabhaya Rajapaksa's associated war
  wd:Q654321 dbo:occupation ?occupation .
  ?occupation dbo:relatedWar ?war .

  # Get the label of the war
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
```

Note: Replace `wd:Q123456` with the actual DBpedia resource ID for Tamara Kunanayakam and `wd:Q654321` with the resource ID for Gotabhaya Rajapaksa. The properties `dbo:nationality`, `dbo:occupation`, and `dbo:relatedWar` are used as placeholders; you may need to adjust these based on actual DBpedia schema.",4,4,5,2,2,2,3,28,0,0,5,0,0.0,0
994,19,test,Give me the associated musical artist of the associated musical artist of Watchtower (band) and associated musical artist of Red Tide (band).,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Red_Tide_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Watchtower_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?artist1 ?artist2 WHERE {
  # Find associated artist(s) of Watchtower
  ?watchtower dbo:musicalArtist ?artist1 .
  FILTER(STRSTARTS(STR(?watchtower), ""http://dbpedia.org/resource/Watchtower_(band)"")) .

  # Find associated artist(s) of the first artist from Watchtower
  ?artist1 dbo:musicalArtist ?artist2 .

  UNION

  # Find associated artist(s) of Red Tide
  ?redTide dbo:musicalArtist ?artist3 .
  FILTER(STRSTARTS(STR(?redTide), ""http://dbpedia.org/resource/Red_Tide_(band)"")) .

  # Find associated artist(s) of the first artist from Red Tide
  ?artist3 dbo:musicalArtist ?artist2 .
}
```",3,3,4,2,2,3,3,71,0,0,3,0,0.0,0
747,41,test,Give me the person born on the birth date of Pavlo Khudzik and band of Shèna and band of the writer of Apollo (Hardwell song).,SELECT ?result WHERE { <http://dbpedia.org/resource/Pavlo_Khudzik> <http://dbpedia.org/ontology/birthDate> ?v2 . <http://dbpedia.org/resource/Shèna> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/birthDate> ?v2 . <http://dbpedia.org/resource/Apollo_(Hardwell_song)> <http://dbpedia.org/property/writer> ?v4 . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
# Step 1: Get Pavlo Khudzik's birth date
SELECT ?birthDate WHERE {
  dbpedia:Павло_Худзик dbo:birthDate ?birthDate .
}

# Step 2: Find people born on the same date as Pavlo Khudzik
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person WHERE {
  ?person dbo:birthDate ?date .
  FILTER (?date = ""Pavlo_Khudzik_birth_date"") # Replace with actual date from Step 1
}

# Step 3: Find the band associated with Shèna
SELECT ?band WHERE {
  dbr:Shèna dbo:associatedBand ?band .
}

# Step 4: Find the writer of Apollo (Hardwell song) and their band
SELECT ?writer ?band WHERE {
  dbr:Apollo_(song) dbo:lyricsBy ?writer .
  ?writer dbo:associatedBand ?band .
}
```

Note: Replace `""Pavlo_Khudzik_birth_date""` with the actual birth date obtained from Step 1.",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
915,16,test,"Give me the resident of the birthplace, that is a settlement, of Stephen Verona and father of the child, that is a fictional character and a soap character, of Phillip Spaulding.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v3 <http://dbpedia.org/property/father> ?result . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Phillip_Spaulding> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoapCharacter>. ?result <http://dbpedia.org/ontology/residence> ?v2 . <http://dbpedia.org/resource/Stephen_Verona> <http://dbpedia.org/ontology/birthPlace> ?v2 . },"```sparql
# Step 1: Find Stephen Verona's birthplace
SELECT ?birthPlace WHERE {
  dbpedia:Stephen_Verona dbo:birthPlace ?birthPlace .
}

# Step 2: Identify a notable resident of that place (assuming we get a specific settlement)
SELECT ?resident WHERE {
  ?settlement rdf:type dbo:Settlement ;
              rdfs:label ""PLACE_NAME""@en . # Replace PLACE_NAME with the actual name
  ?resident dbo:residence ?settlement .
}

# Step 3: Find Phillip Spaulding's child who is both a fictional and soap character
SELECT ?child WHERE {
  dbpedia:Phillip_Spaulding dbo:child ?child .
  ?child rdf:type dbo:FictionalCharacter ;
         dbo:genre ""SoapOpera""@en .
}

# Step 4: Identify the father of this character
SELECT ?father WHERE {
  ?character dbo:father ?father .
  FILTER(?character = ?child) # Use the result from step 3
}
```",4,7,5,2,2,3,2,20,0,0,1,0,0.0,0
184,49,test,Give me the parent of the child of the parent of Archduchess Margaret of Austria (born 1925) and parent of the native of Budapest.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/ontology/child> ?v1 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Margaret_of_Austria_(born_1925)> . ?v2 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Budapest> . },"```sparql
# Step 1: Find Archduchess Margaret's parent
SELECT ?parent WHERE {
  wd:Q123456 wdt:P22 ?parent .
}

# Step 2: Identify a child of Archduke Robert (Archduchess Margaret's father)
SELECT ?child WHERE {
  ?parent wdt:P40 ?child .
  FILTER(?parent = wd:Q789012) # Assuming Q789012 is the ID for Archduke Robert
}

# Step 3: Find the parent of this child
SELECT ?grandParent WHERE {
  ?child wdt:P22 ?grandParent .
}

# Step 4: Identify a native of Budapest
SELECT ?native WHERE {
  ?person wdt:P19 wd:Q12345 . # Assuming Q12345 is the ID for Budapest
  ?person wdt:P31 wd:Q5 .     # Person class
}

# Step 5: Find the parent of this native
SELECT ?parentBudapest WHERE {
  ?native wdt:P22 ?parentBudapest .
}

# Step 6: Find common ancestor (parent) of both individuals from steps 3 and 5
SELECT DISTINCT ?commonAncestor WHERE {
  { ?ancestor wdt:P40 wd:Q678901 } # Assuming Q678901 is the ID for Princess Joséphine Charlotte
  UNION
  { ?ancestor wdt:P40 wd:Q234567 } # Assuming Q234567 is the ID for Anna Lagerberg
}
```",5,5,6,3,2,3,3,71,0,0,2,0,0.0,0
994,41,test,"Give me the associated musical artist of the associated musical artist of Watchtower (band) and band member of Don Dokken and associated musical artist of the band member, that is a band and a group and an organisation, of Meshuggah.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Meshuggah> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. <http://dbpedia.org/resource/Watchtower_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Don_Dokken> . },"```sparql
# Step 1: Find associated musical artist of Watchtower
SELECT ?associatedArtist WHERE {
    wd:Q123456 wdt:P175* wd:Q789012 .
}

# Step 2: Find common band member between the result from step 1 and Don Dokken's band members
SELECT DISTINCT ?commonMember WHERE {
    ?artist wdt:P175 wd:Q789013 . # Artist associated with Watchtower
    ?member wdt:P106 wd:Q215627 . # Person is a musician
    ?member wdt:P463* ?artist .   # Member of the artist's band
    ?member wdt:P463* wd:Q1234567 . # Member of Don Dokken's band
}

# Step 3: Find associated musical artist of the common member found in step 2
SELECT DISTINCT ?associatedArtist WHERE {
    ?commonMember wdt:P106 wd:Q215627 .
    ?commonMember wdt:P175* ?artist .
    FILTER(?commonMember IN ({?commonMember})) # Replace with actual results from Step 2
}

# Step 4: Check if this artist is a band, group, and organization of Meshuggah
SELECT DISTINCT ?finalArtist WHERE {
    ?artist wdt:P31 wd:Q215627 . # Artist is a musical artist
    ?artist wdt:P463* wd:Q1234568 . # Artist is part of Meshuggah as a band
    ?artist wdt:P31/wdt:P279* wd:Q43229 . # Artist is a group or organization
}
```

Note: Replace `wd:Q789012`, `wd:Q123456`, and other placeholders with the actual DBpedia QIDs for Watchtower, Don Dokken's band, etc., as needed.",5,8,6,2,3,3,3,71,0,0,1,0,0.0,0
161,56,test,"Give me the military force of the force, that is a societal event and an event and a military conflict, of Francisco Franco and commander in the force, that is an event, of the figure known as El Director and military force of Spanish Civil War.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/ontology/commander> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://xmlns.com/foaf/0.1/nick> ""El Director""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Franco> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce WHERE {
  # Identify Francisco Franco's role in the Spanish Civil War
  dbr:Francisco_Franco dbo:commanderInMilitaryConflict dbr:Spanish_Civil_War .
  
  # Retrieve the military force he commanded
  dbr:Francisco_Franco dbo:militaryForce ?militaryForce .

  # Ensure this force is recognized as an event and a societal event
  ?militaryForce rdf:type dbo:Event ;
                 rdf:type dbo:SocietalEvent .
}
```",6,10,7,3,3,3,3,71,0,0,32,0,0.0,0
318,8,test,Give me the professional in the profession of Robert Xavier Rodriguez and person born in 1970.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthYear> ""1970""^^<http://www.w3.org/2001/XMLSchema#gYear> . ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Robert_Xavier_Rodriguez> <http://dbpedia.org/property/occupation> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?name WHERE {
  # Step 1: Identify the profession of Robert Xavier Rodriguez
  ?robert a dbo:Person;
          foaf:name ""Robert Xavier Rodríguez""@en;
          dbo:profession ?profession.

  # Step 2: Find individuals with the same profession
  ?person a dbo:Person;
          dbo:profession ?profession;
          dbp:birthdayYear ?birthYear;
          foaf:name ?name.
  
  # Step 3: Filter by birth year 1970
  FILTER (?birthYear = ""1970""^^xsd:gYear)
}
```",3,3,4,2,2,2,2,9,0,0,7,0,0.0,0
659,43,test,"Give me the military force of Napoleonic Wars and commander in German campaign of 1813 and commander in the war, that is an event and a military conflict, of the figure known, that is a military unit and an organisation, as 'Polish Horse'.","SELECT ?result WHERE { <http://dbpedia.org/resource/German_campaign_of_1813> <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Napoleonic_Wars> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/property/nickname> ""'Polish Horse'""@en . ?v4 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/ontology/battle> ?v4 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce ?commanderGermanCampaign1813 ?commanderWar ?event ?conflict WHERE {
  # Polish Uhlans as a military unit
  VALUES ?militaryForce { 
    dbr:Polish_Uhlans 
  }
  
  # German Campaign of 1813 and its commanders
  ?campaign dbo:partOf dbr:War_of_the_Sixth_Coalition ;
            rdfs:label ?campaignLabel .
  FILTER(CONTAINS(LCASE(?campaignLabel), ""german campaign 1813""))
  
  ?commanderGermanCampaign1813 dbo:commanded ?campaign ;
                               foaf:name ?nameBlucher ;
                               dbo:birthPlace ?birthplaceBlucher .
  OPTIONAL { 
    ?commanderGermanCampaign1813 foaf:name ?nameSchwarzenberg .
  }
  
  # Commander of the Polish Uhlans
  ?commanderWar dbo:commanded ?militaryForce ;
                foaf:name ?poniatowskiName .

  # Event and conflict
  ?event dbo:partOf ?conflict ;
         rdfs:label ?eventLabel .
  FILTER(CONTAINS(LCASE(?eventLabel), ""battle of nations"") || CONTAINS(LCASE(?eventLabel), ""war of the sixth coalition""))
  
  ?conflict rdfs:label ?conflictLabel .
}
```",5,9,6,3,3,3,3,71,0,0,6,0,0.0,0
963,19,test,"Give me the administration of the ruling party, that is a political party, in the location for 21205 and entity in the region, that is a country, of Central European Time.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v2 . ?result <http://dbpedia.org/property/leaderParty> ?v4 . ?v0 <http://dbpedia.org/property/leaderParty> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . ?v0 <http://dbpedia.org/ontology/postalCode> ""21205"" . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?city ?country ?rulingParty ?administration WHERE {
  # Find city with postal code 21205
  ?city dbo:postalCode ""21205"" .
  
  # Ensure the country is in the CET region
  ?city dbo:country dbr:Czech_Republic ; # Example, assuming Prague's postal code
    dbo:timeZone dbr:Central_European_Time .

  # Find ruling political party in that city or area
  ?rulingParty dbo:location ?city ;
               dbo:governmentRole ""Ruling"" .
  
  # Get the administration of the ruling party
  OPTIONAL { ?administration dbo:party ?rulingParty . }
}
```",5,7,6,3,2,3,2,20,0,0,84,0,0.0,0
391,53,test,"Give me the native of the figure known as the nick name of Jackson, Tennessee and actor of the movie, that is a movie and a work and a television show, with Roz Ryan and actor of The Departed.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . <http://dbpedia.org/resource/Jackson,_Tennessee> <http://xmlns.com/foaf/0.1/nick> ?v3 . ?v1 <http://dbpedia.org/property/starring> ?result . ?v2 <http://dbpedia.org/property/nickname> ?v3 . ?v1 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Roz_Ryan> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. <http://dbpedia.org/resource/The_Departed> <http://dbpedia.org/ontology/starring> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor ?nativePlace WHERE {
  # Find the nickname of Jackson, Tennessee
  VALUES ?cityNickname { ""City of Soul"" }
  
  # Find actors in The Departed
  ?departedActor dbo:starringIn dbr:The_Departed .
  
  # Find actor involved in a movie with Roz Ryan that is also a work and TV show
  ?movie dbo:starring dbr:Roz_Ryan ;
         dbo:basedOnWork ?work ;
         dbo:adaptationOf ?tvShow .
  
  # Link the actor to all criteria
  ?actor dbo:nativePlace ?nativePlace ;
         dbo:starringIn ?departedActor, ?movie .

  FILTER(?actor IN (dbr:Matt_Damon))
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
232,70,test,"Give me the native of the residence, that is a settlement and British, of the native, that is a politician and an office holder, of France and actor of the claim to fame, that is a film and a military conflict, of the professional in Actor, narrator and producer and child of the person born as John Devon Roland Pertwee.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/ontology/knownFor> ?v7 . ?v4 <http://dbpedia.org/property/birthName> ""John Devon Roland Pertwee""@en . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/France> . ?v0 <http://dbpedia.org/property/occupation> ""Actor, narrator and producer""@en . ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v1 <http://dbpedia.org/property/residence> ?v3 . ?v7 <http://dbpedia.org/ontology/starring> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. }","```sparql
SELECT ?native WHERE {
  # Step 1: Identify Jon Pertwee
  ?jonPertwee dbo:name ""Jon Pertwee""@en .
  
  # Step 2: Find his child Simon Pertwee
  ?simonPertwee dbo:childOf ?jonPertwee ;
               rdf:type dbo:Actor ;
               dbo:profession ""Actor""@en, ""Narrator""@en, ""Producer""@en .

  # Step 3: Identify Simon Pertwee's claim to fame related to a film and military conflict
  ?claimToFame dbo:relatedWork ?simonPertwee ;
               rdf:type dbo:Film, dbo:MilitaryConflict .
  
  # Step 4: Find the French politician associated with this claim to fame
  ?frenchPolitician dbo:nativeCountry dbr:France ;
                   dbo:officeHolder true ;
                   dbo:relatedWork ?claimToFame .

  # Step 5: Identify the residence of this French politician that is a settlement and British
  ?residence dbo:resident ?frenchPolitician ;
             rdf:type dbo:Settlement ;
             dbo:nationality dbr:United_Kingdom .

  # Step 6: Determine the native of this British settlement
  ?native dbo:nativePlace ?residence .
}
```",8,14,9,3,3,3,3,71,0,0,1,0,0.0,0
16,69,test,Give me the spouse of the person born as the birth name of Ted McGinley and person born as the birth name of the alumnus of Ohio State University and professional in the profession of Satomi Ishihara.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/property/birthName> ?v4 . <http://dbpedia.org/resource/Satomi_Ishihara> <http://dbpedia.org/property/occupation> ?v7 . ?v1 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Ohio_State_University> . ?v1 <http://dbpedia.org/property/birthName> ?v2 . ?result <http://dbpedia.org/property/birthName> ?v2 . ?v3 <http://dbpedia.org/property/birthName> ?v4 . ?result <http://dbpedia.org/property/occupation> ?v7 . },"```sparql
SELECT ?spouseTedMcGinley ?spouseSatomiIshihara WHERE {
  # Find Ted McGinley's birth name
  ?tedMcGinley dbo:birthName ?birthName .
  ?tedMcGinley foaf:name ""Ted McGinley"" .

  # Find Satomi Ishihara's details
  ?satomiIshihara dbo:almaMater dbr:Ohio_State_University ;
                 dbo:profession dbr/Actress .

  # Query for Ted McGinley's spouse
  ?tedMcGinley dbo:spouse ?spouseTedMcGinley .

  # Query for Satomi Ishihara's spouse
  ?satomiIshihara dbo:spouse ?spouseSatomiIshihara .
}
```",8,8,9,3,3,3,3,71,0,0,1,0,0.0,0
701,45,test,"Give me the spouse of the father of the commander, that is a royalty, in Battle of Perire and parent of Meritamen and parent of Henuttawy (19th dynasty).",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Battle_of_Perire> <http://dbpedia.org/ontology/commander> ?v0 . <http://dbpedia.org/resource/Meritamen> <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Henuttawy_(19th_dynasty)> . ?result <http://dbpedia.org/ontology/spouse> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  ?commander dbo:father dbr:Seti_I .
  ?battle dbo:commander ?commander .
  FILTER(CONTAINS(LCASE(str(?battle)), ""perire"")) .
  
  dbr:Seti_I dbo:spouse ?spouse .
  ?spouse dbo:parent dbr:Meritamen ;
          dbo:parent dbr:Henuttawy .
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
232,68,test,"Give me the actor of the claim to fame, that is a film and a military conflict, of the professional in Actor, narrator and producer and native of the residence, that is a settlement and British, of Sylvie Bermann and child of the person born as the birth name of Jon Pertwee.","SELECT ?result WHERE { <http://dbpedia.org/resource/Sylvie_Bermann> <http://dbpedia.org/property/residence> ?v3 . ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v0 <http://dbpedia.org/ontology/knownFor> ?v7 . ?v0 <http://dbpedia.org/property/occupation> ""Actor, narrator and producer""@en . ?v4 <http://dbpedia.org/ontology/child> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/property/birthName> ?v5 . ?v4 <http://dbpedia.org/property/birthName> ?v5 . ?v7 <http://dbpedia.org/ontology/starring> ?result . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. }","```sparql
SELECT ?actor WHERE {
  # Step 1: Find Sylvie Bermann's residence
  dbpedia:Sylvie_Bermann dbo:residence ?settlement .
  
  # Ensure the settlement is British
  ?settlement rdf:type dbo:Settlement ;
              dbo:country dbc:United_Kingdom .

  # Step 2: Find Jon Pertwee born in that settlement
  ?person dbo:birthName ""Jon Pertwee"" ;
          dbo:birthPlace ?settlement .
  
  # Step 3: Identify the child of Jon Pertwee
  ?child dbo:parent ?person .

  # Step 4: Determine their claim to fame (film and military conflict)
  ?claimToFame dbo:wikiPageRedirects ?film ;
               dbo:wikiPageRedirects ?conflict .
  
  ?child dbo:claimToFame ?claimToFame .

  # Step 5: Find the actor associated with this claim to fame
  ?actor dbo:profession dbc:Actor ;
         dbo:claimToFame ?claimToFame .
}
```",8,12,9,3,3,3,3,71,0,0,1,0,0.0,0
378,51,test,"Give me the claim to fame of the commander in the war, that is a military conflict and a societal event and an event, of Thomas Trigge and war of the commander in Peninsular War.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Peninsular_War> <http://dbpedia.org/ontology/commander> ?v4 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/knownFor> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Thomas_Trigge> <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://dbpedia.org/ontology/commander> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?event ?description WHERE {
  ?person a dbo:MilitaryPerson ;
          foaf:name ""Thomas Trigge""@en .
  
  OPTIONAL { 
    ?person dbo:participatedInMilitaryConflict dbr:Peninsular_War . 
  }
  
  ?event dbo:agent ?person ;
         dbo:description ?description .

  FILTER(CONTAINS(LCASE(?description), ""peninsular war""))
}
```",5,8,6,3,2,3,3,71,0,0,2,0,0.0,0
528,42,test,Give me the war of Orozimbo Barbosa and force of the person born as Narciso Campero Leyes and war of the military force of Battle of Pisagua.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Orozimbo_Barbosa> <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Pisagua> . ?result <http://dbpedia.org/ontology/commander> ?v1 . ?v1 <http://dbpedia.org/property/birthName> ""Narciso Campero Leyes""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?warOrozimbo ?forceNarciso ?battlePisagua WHERE {
  # Find the war associated with Orozimbo Barbosa
  OPTIONAL { 
    dbr:Orozimbo_Barbosa dbo:militaryConflict ?warOrozimbo .
  }

  # Find the military force or role of Narciso Campero Leyes
  OPTIONAL {
    dbr:Narciso_Campero_Leyes dbo:militaryForce ?forceNarciso .
  }

  # Find information about the Battle of Pisagua
  OPTIONAL {
    dbr:Battle_of_Pisagua dbo:participatedIn ?battlePisagua .
  }
}
```",5,5,6,2,3,3,3,71,0,0,2,0,0.0,0
747,68,test,"Give me the person born on the birth date of the person decedent, that is an athlete and a soccer player, at Zolotonosha and band of the person born as Tracey Elizabeth McSween and band of the writer of the work, that is a song, of Amba Shepherd.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Amba_Shepherd> . ?v0 <http://dbpedia.org/property/writer> ?v7 . ?v7 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v5 <http://dbpedia.org/ontology/birthDate> ?v4 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v5 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Zolotonosha> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?result <http://dbpedia.org/ontology/birthDate> ?v4 . ?v3 <http://dbpedia.org/property/birthName> ""Tracey Elizabeth McSween""@en . }","```sparql
# Step 1: Find Tracey Elizabeth McSween's band
SELECT ?band WHERE {
  ?person dbo:name ""Tracey Elizabeth McSween""@en .
  ?person dbo:musicalBand ?band .
}

# Step 2: Find the writer of a song by Amba Shepherd
SELECT ?writer WHERE {
  ?song dbo:lyricsBy ?writer ;
        dbo:artist ""Amba Shepherd""@en .
}

# Step 3: Identify the decedent and their birth date
SELECT ?decedent ?birthDate WHERE {
  ?decedent dbo:dateOfBirth ?birthDate .
  FILTER NOT EXISTS { ?decedent dbo:dateOfDeath ?deathDate }
}

# Step 4: Find an athlete and soccer player born in Zolotonosha on the decedent's birth date
SELECT ?athlete WHERE {
  ?athlete dbo:birthPlace dbr:Zolotonosha ;
           dbo:sport dbr:Soccer ;
           dbo:dateOfBirth ?birthDate .
  FILTER EXISTS { 
    SELECT ?decedent WHERE {
      ?decedent dbo:dateOfBirth ?birthDate .
      FILTER NOT EXISTS { ?decedent dbo:dateOfDeath ?deathDate }
    }
  }
}

# Step 5: Combine information to find the person
SELECT ?person WHERE {
  # Assuming we have variables from previous queries: $band1, $band2, and $athlete
  ?person dbo:musicalBand $band1 ;
          dbo:musicalBand $band2 .
  FILTER (?person = $athlete)
}
```",8,11,9,3,3,3,3,71,0,0,1,0,0.0,0
427,47,test,Give me the party of the father of the alumnus of Massachusetts Institute of Technology and reference to the name of Italian People's Party (1994).,SELECT ?result WHERE { <http://dbpedia.org/resource/Italian_People's_Party_(1994)> <http://xmlns.com/foaf/0.1/name> ?v2 . ?v0 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Massachusetts_Institute_of_Technology> . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v4 <http://dbpedia.org/ontology/party> ?result . ?v0 <http://dbpedia.org/property/father> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?alumnus ?father ?party WHERE {
  # Step 1: Find an MIT alumnus
  ?alumnus dbo:almaMater dbr:Massachusetts_Institute_of_Technology .
  
  # Step 2: Identify the father of the alumnus
  ?alumnus dbp:father ?father .

  # Step 3: Find any political party affiliation related to the father
  OPTIONAL { ?father dbo:partyAffiliation ?party . }

  # Filter for a specific well-known MIT alumnus (e.g., Barack Obama)
  FILTER(?alumnus = dbr:Barack_Obama)

  # Step 4: Reference the Italian People's Party from 1994
  OPTIONAL { 
    ?italianParty dbp:name ""Italian People's Party"" .
    ?italianParty dbo:foundingDate ?foundingDate .
    FILTER(year(?foundingDate) = 1994)
  }
}
```",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
994,66,test,"Give me the band member of the person born, that is a musical artist, as the persona of Don Dokken and associated musical artist of the associated musical artist of Watchtower (band) and associated musical artist of the band member, that is a band and a group and an organisation, of Meshuggah.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Don_Dokken> <http://xmlns.com/foaf/0.1/givenName> ?v5 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. <http://dbpedia.org/resource/Watchtower_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v0 <http://dbpedia.org/property/birthName> ?v5 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v6 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Meshuggah> . ?v6 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
# Step 1: Identify associated musical artists of Watchtower and Anthrax
SELECT ?watchtowerMember WHERE {
    wd:Q1234568 wdt:P106 wd:Q33999 . # Watchtower (band) has a member who is a musician
    ?watchtowerMember wdt:P31 wd:Q5;       # The person is an instance of human
                    wdt:P50 wd:Q1234568 .  # The person is a member of Watchtower
}

SELECT ?anthraxMember WHERE {
    wd:Q7890123 wdt:P106 wd:Q33999 .     # Anthrax (band) has a member who is a musician
    ?anthraxMember wdt:P31 wd:Q5;         # The person is an instance of human
                    wdt:P50 wd:Q7890123 . # The person is a member of Anthrax
}

# Step 2: Identify associated musical artist of the band member that is a band/group/organization of Meshuggah
SELECT ?meshuggahMember WHERE {
    wd:Q3456789 wdt:P31 wd:Q215627 .     # Meshuggah (band) is an instance of band, group or organization
    ?meshuggahMember wdt:P31 wd:Q5;      # The person is an instance of human
                    wdt:P50 wd:Q3456789 .# The person is a member of Meshuggah
}

SELECT ?associatedArtist WHERE {
    ?anthraxMember wdt:P106 wd:Q33999 .  # Anthrax member who is a musician
    ?associatedArtist wdt:P106 wd:Q33999;# Associated artist who is a musician
                    wdt:P127* ?anthraxMember. # The associated artist has an affiliation with the Anthrax member
}

# Step 3: Identify band member of Don Dokken's persona
SELECT ?dokkenBandMember WHERE {
    wd:Q9876543 wdt:P106 wd:Q33999 .     # Don Dokken is a musician
    ?dokkenBand wdt:P31 wd:Q215627;       # The band is an instance of band, group or organization
                wdt:P127* wd:Q9876543 .  # Don Dokken has an affiliation with the band
    ?dokkenBandMember wdt:P31 wd:Q5;      # The person is an instance of human
                    wdt:P50 ?dokkenBand. # The person is a member of the band
}

# Final step: Combine to find George Lynch
SELECT DISTINCT ?bandMember WHERE {
    ?associatedArtist wdt:P106 wd:Q33999 .  # Associated artist who is a musician
    ?bandMember wdt:P31 wd:Q5;               # The person is an instance of human
                wdt:P50 ?dokkenBand.         # The person is a member of Dokken band
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
356,16,test,"Give me the team of the native, that is a soccer player and a soccer manager, of Wolverhampton and player in the successor of 2014 Sacramento Republic FC season.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/manager> ?v3 . ?v3 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Wolverhampton> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/2014_Sacramento_Republic_FC_season> <http://dbpedia.org/ontology/successor> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v2 <http://dbpedia.org/ontology/team> ?result . },"```sparql
SELECT ?person ?team WHERE {
  ?person dbo:nationality dbr:United_Kingdom .
  ?person dbo:birthPlace dbr:Wolverhampton .
  ?person dbo:occupation dbr:Soccer_player .
  ?person dbo:managerOf ?team .
  
  OPTIONAL { 
    ?playerPosition dbp:club dbr:Sacramento_Republic_FC ;
                    dbp:season ""2015""^^xsd:string .
    ?playerPosition dbo:agent ?person .
  }
}
```",4,6,5,2,2,3,2,20,0,0,1,0,0.0,0
92,66,test,"Give me the associated musical artist of the person born, that is an artist, as Jim Sheppard and band of the person born as the birth name of Joseph Michael and band member of the reference, that is an artist, to Nevermore.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?result <http://dbpedia.org/ontology/bandMember> ?v2 . ?v6 <http://dbpedia.org/property/birthName> ""Jim Sheppard""@en . ?v6 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Joseph_Michael> <http://dbpedia.org/property/birthName> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v3 <http://xmlns.com/foaf/0.1/name> ""Nevermore""@en . ?v2 <http://dbpedia.org/property/birthName> ?v1 . }","```sparql
SELECT ?artist WHERE {
  ?person1 foaf:name ""Jim Sheppard"" .
  ?person2 foaf:name ""Warrel Dane"" .
  ?band dbo:member ?person1 ;
        dbo:member ?person2 ;
        rdf:type dbo:Band .

  OPTIONAL { ?person2 foaf:birthday ?birthDate . FILTER(CONTAINS(LANG(?birthDate), ""en"")) }
  
  ?reference dbo:artist ?artist .
  ?reference dbo:bandName ""Nevermore"" .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
701,29,test,Give me the parent of Meritamen and spouse of Ramesses II and parent of the child of Ramesses II.,SELECT ?result WHERE { <http://dbpedia.org/resource/Meritamen> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Ramesses_II> . ?result <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ramesses_II> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  # Parent of Meritamen
  OPTIONAL { 
    dbr:Merenptah dbo:mother dbr:Nefertari_Meryetmut .
    dbr:Merenptah dbo:father dbr:Ramesses_II .
    FILTER (dbr:Merenptah = dbr:Meritamen) # Assuming Meritamen is the same as Merenptah
  }
  
  # Spouse of Ramesses II
  OPTIONAL {
    ?spouse dbo:spouse dbr:Ramesses_II .
    ?spouse rdfs:label ""Nefertari""@en .
  }

  # Parent of a child of Ramesses II
  OPTIONAL {
    ?child dbo:parent dbr:Ramesses_II .
  }
  
  UNION {
    VALUES ?parent {dbr:Ramesses_II}
  }
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
617,53,test,"Give me the parent of the child of Antiochus (son of Antiochus III the Great) and child of the child, that is a royalty, of the successor, that is a royalty, of Antiochus II Theos and spouse of Laodice IV.",SELECT ?result WHERE { <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/child> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> ?v1 . ?v2 <http://dbpedia.org/property/father> ?v3 . ?result <http://dbpedia.org/property/father> ?v2 . <http://dbpedia.org/resource/Antiochus_II_Theos> <http://dbpedia.org/ontology/successor> ?v3 . <http://dbpedia.org/resource/Laodice_IV> <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  # Antiochus IV Epiphanes (son of Antiochus III)
  ?antiochusIV dbo:father dbr:Antiochus_III_the_Great .
  
  # Child of Antiochus IV Epiphanes
  ?child1 dbo:parent ?antiochusIV .

  # Grandchild of Antiochus IV Epiphanes (royalty)
  ?grandchild1 dbo:parent ?child1 .
  FILTER EXISTS { ?grandchild1 a dbo:Monarch . }

  # Successor of Antiochus II Theos
  ?antiochusII dbo:succ dbr:Seleucus_II_Callinicus .

  # Child of Seleucus II Callinicus (royalty)
  ?child2 dbo:parent ?antiochusII .
  FILTER EXISTS { ?child2 a dbo:Monarch . }

  # Spouse of Laodice IV
  ?spouse dbr:Laodice_IV dbo:spouse ?child2 .

  # Parent of Seleucus IV Philopator (royalty)
  ?parent dbo:father ?child2 .
  
  # Child of Seleucus IV Philopator
  ?child3 dbo:parent ?parent .

  # Grandchild of Seleucus IV Philopator (royalty)
  ?grandchild2 dbo:parent ?child3 .
  FILTER EXISTS { ?grandchild2 a dbo:Monarch . }

  # Find the parent of Antiochus V Eupator
  ?antiochusV dbr:Antiochus_V_Eupator .
  ?antiochusV dbo:parent ?child3 .

  # Ensure the grandchild is Demetrius I Soter
  ?demetrius dbr:Demetrius_I_Soter .
  ?demetrius dbo:parent ?grandchild1 .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
161,33,test,"Give me the military force of Rif War and military force of the force, that is a societal event and a military conflict, of the predecessor of Indalecio Prieto.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Rif_War> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Indalecio_Prieto> . ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
# Query for the military force of Rif War
SELECT ?militaryForce WHERE {
  ?event dbo:wikiPageRedirects db:Q1234567; # Assuming Q1234567 is the DBpedia ID for Rif War
    dbo:militaryConflictOf ?conflict.
  ?conflict dbo:participatingMilitaryUnit ?unit;
            dbo:opposingMilitaryUnit ?militaryForce.
}

UNION

# Query for the military force of the Spanish Civil War (associated with Indalecio Prieto's predecessor)
SELECT ?civilWarMilitary WHERE {
  ?event dbo:wikiPageRedirects db:Q2345678; # Assuming Q2345678 is the DBpedia ID for Spanish Civil War
    dbo:militaryConflictOf ?conflict.
  ?conflict dbo:participatingMilitaryUnit ?unit;
            dbo:opposingMilitaryUnit ?civilWarMilitary.
}
```",4,6,5,3,2,3,3,71,0,0,34,0,0.0,0
801,26,test,"Give me the producer of the work, that is a musical work and a song and a work, of the professional, that is a musical artist, in Rapper.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/writer> ?v1 . ?v2 <http://dbpedia.org/ontology/producer> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v1 <http://dbpedia.org/property/occupation> ""Rapper""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?song ?producer WHERE {
  ?artist a dbo:MusicalArtist ;
          dbo:genre dbr:Rap_music .
  ?song dbo:performer ?artist ;
        a dbo:Song .
  OPTIONAL { ?song dbo:producer ?producer }
}
```",3,7,4,3,1,3,3,71,0,0,956,0,0.0,0
547,46,test,Give me the resting place of the child of the child of William Haliburton and resting place of the actor of Enemy at the Door.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Enemy_at_the_Door> <http://dbpedia.org/property/starring> ?v4 . ?v2 <http://dbpedia.org/ontology/child> ?v1 . ?v4 <http://dbpedia.org/ontology/restingPlace> ?result . ?v2 <http://dbpedia.org/property/father> ""William Haliburton""@en . ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . }","```sparql
# Query for the resting place of the child of the child of William Haliburton
SELECT ?grandchildRestingPlace WHERE {
  ?williamHaliburton dbo:spouse ?spouse .
  ?williamHaliburton foaf:name ""William Haliburton""@en .
  ?williamHaliburton dbo:child ?child1 .
  ?child1 dbo:child ?grandchild .
  ?grandchild dbo:deathPlace ?restingPlace .
  
  # Assuming we need to find a specific grandchild, we might need additional filtering
  # For now, let's assume we are interested in any grandchild
}

UNION

# Query for the resting place of the actor of ""Enemy at the Door""
SELECT ?actorRestingPlace WHERE {
  ?movie dbo:title ""Enemy at the Door""@en .
  ?movie dbo:starring ?actor .
  ?actor dbo:deathPlace ?restingPlace .
}
```",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
294,24,test,"Give me the resting place of the architect of P. D. Houston Jr. House and entity in the birth place, that is a settlement, of Marion James.",SELECT ?result WHERE { <http://dbpedia.org/resource/P._D._Houston_Jr._House> <http://dbpedia.org/ontology/architect> ?v2 . ?result <http://dbpedia.org/ontology/location> ?v0 . <http://dbpedia.org/resource/Marion_James> <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
# Part 1: Resting place of the architect of P. D. Houston Jr. House

SELECT ?architect ?restingPlace WHERE {
  ?house dbo:architect ?architect .
  ?house rdfs:label ""P. D. Houston Jr. House""@en .
  
  OPTIONAL { 
    ?architect dbo:deathPlace ?burialSite .
    ?burialSite dbo:type dbr:Burial_site .
    BIND(?burialSite AS ?restingPlace)
  }
}

UNION

SELECT ?entity ?birthPlace WHERE {
  # Part 2: Entity in the birthplace of Marion James
  ?person foaf:name ""Marion James""@en .
  ?person dbo:birthPlace ?birthPlace .
  
  OPTIONAL { 
    ?birthPlace dbo:location ?entity .
    FILTER(?entity != ?birthPlace)
  }
}
```",4,5,5,2,2,2,3,28,0,0,1,0,0.0,0
492,51,test,"Give me the commander in the war, that is a military conflict and an event, of Frédéric-Georges Herr and person decedent at the capital, that is a settlement, of the country of Khemis Miliana District.",SELECT ?result WHERE { <http://dbpedia.org/resource/Frédéric-Georges_Herr> <http://dbpedia.org/ontology/battle> ?v4 . <http://dbpedia.org/resource/Khemis_Miliana_District> <http://dbpedia.org/ontology/country> ?v1 . ?v4 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/capital> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?commander ?decedent WHERE {
  # Find the military conflict involving Frédéric-Georges Herr
  ?conflict dbo:participant dbr:Frédéric-Georges_Herr .
  
  # Identify the commander of that conflict
  ?conflict dbo:commander ?commander .

  # Find Khemis Miliana District's capital
  dbr:Khemis_Miliana_District dbo:capital ?capitalCity .

  # Ensure the decedent is a person who died in this capital city
  ?decedent dbo:deathPlace ?capitalCity .
  FILTER (dbo:Person(?decedent))
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
92,67,test,"Give me the associated musical artist of the person born, that is an artist, as the actor of Return to Nuke 'Em High Volume 1 and band member of Nevermore and band of the person born as the birth name of Joseph Michael.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/birthName> ?v1 . ?v6 <http://dbpedia.org/property/birthName> ?v0 . <http://dbpedia.org/resource/Return_to_Nuke_'Em_High_Volume_1> <http://dbpedia.org/property/starring> ?v0 . ?v6 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/bandMember> ?v3 . <http://dbpedia.org/resource/Joseph_Michael> <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Nevermore> . },"```sparql
# Step 1: Find the actor of ""Return to Nuke 'Em High Volume 1"" who is also an artist.
SELECT ?actor WHERE {
  ?movie dbo:title ""Return to Nuke 'Em High Volume 1""@en .
  ?movie dbo:starring ?actor .
  ?actor dbo:occupation dbp:Artist .
}

# Step 2: Find the band member of Nevermore.
SELECT ?member WHERE {
  ?band rdfs:label ""Nevermore""@en .
  ?band dbo:bandMember ?member .
}

# Step 3: Identify the person born as Joseph Michael.
SELECT ?person WHERE {
  ?person foaf:name ""Joseph Michael""@en ;
          foaf:birthName ""Joseph Michael""@en .
}

# Step 4: Connect these pieces to find the associated musical artist.
SELECT DISTINCT ?associatedArtist WHERE {
  # Assuming we found Jeff Loomis as a member of Nevermore
  VALUES (?actor) { <http://dbpedia.org/resource/Jeff_Loomis> }
  
  # Assuming we identified the person born as Joseph Michael is Joe Satriani
  VALUES (?person) { <http://dbpedia.org/resource/Joe_Satriani> }

  ?actor dbo:associatedBandMember ?member .
  ?member rdfs:label ""Nevermore""@en .

  ?person dbo:band ?band .
  ?band dbo:associatedArtist ?associatedArtist .
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
488,48,test,"Give me the birth place of the commander in the war, that is a military conflict and an event and a societal event, of Saitō Hajime and administration of the father of Emperor Go-Mizunoo.",SELECT ?result WHERE { <http://dbpedia.org/resource/Saitō_Hajime> <http://dbpedia.org/ontology/battle> ?v3 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Emperor_Go-Mizunoo> <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/property/leader> ?v1 . ?v3 <http://dbpedia.org/ontology/commander> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace WHERE {
  ?person a dbo:Sailor ;
          foaf:name ""Saitō Hajime""@en .
  ?person dbo:birthPlace ?birthPlace .
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
232,59,test,"Give me the child of the person born as the birth name of Jon Pertwee and actor of the claim to fame, that is a film and a military conflict, of the professional in Actor, narrator and producer.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/starring> ?result . ?v2 <http://dbpedia.org/property/birthName> ?v3 . ?v0 <http://dbpedia.org/property/occupation> ""Actor, narrator and producer""@en . ?v0 <http://dbpedia.org/ontology/knownFor> ?v5 . ?v2 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/property/birthName> ?v3 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. }","```sparql
SELECT ?child WHERE {
  # Step 1: Find Jon Pertwee's birth name
  dbpedia:Jon_Pertwee dbo:birthName ?birthName .
  
  # Step 2: Identify a person whose claim to fame is both a film and a military conflict
  ?person dbo:profession dbr:Actor ;
          dbo:famousFor ?fame .
  FILTER (
    (CONTAINS(LCASE(STR(?fame)), ""film"") && CONTAINS(LCASE(STR(?fame)), ""military conflict""))
  )
  
  # Step 3: Find the child of Jon Pertwee who matches the criteria
  ?birthName dbo:child ?child .
  FILTER (?child = ?person)
}
```",6,8,7,3,2,3,3,71,0,0,1,0,0.0,0
182,20,test,Give me the war of the work of Gotabhaya Rajapaksa and war of Mahesh Senanayake and entity in Sri Lanka.,SELECT ?result WHERE { <http://dbpedia.org/resource/Mahesh_Senanayake> <http://dbpedia.org/ontology/battle> ?result . ?v3 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Gotabhaya_Rajapaksa> . ?v3 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Sri_Lanka> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name ?role ?conflict WHERE {
  VALUES (?person ?name) {
    (dbr:Gotabhaya_Rajapaksa ""Gotabhaya Rajapaksa"")
    (dbr:Mahesh_Senanayake ""Mahesh Senanayake"")
  }
  
  OPTIONAL { ?person dbo:name ?name . FILTER(lang(?name) = 'en') }
  OPTIONAL {
    ?person dbo:role ?role .
    ?conflict dbo:participatedIn ?person .
    ?conflict dbo:name ?conflictName .
    FILTER(CONTAINS(LCASE(STR(?conflictName)), ""sri lanka civil war""))
  }

  SERVICE <http://dbpedia.org/sparql> {
    ?conflict dbo:location dbr:Sri_Lanka .
  }
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
161,52,test,"Give me the military force of the force, that is a societal event and an event and a military conflict, of the person decedent at Francoist Spain and commander in Biscay Campaign and military force of the force, that is a societal event and a military conflict, of Francisco Largo Caballero.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v5 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . ?v3 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Francoist_Spain> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v5 . ?v2 <http://dbpedia.org/ontology/commander> ?v3 . <http://dbpedia.org/resource/Biscay_Campaign> <http://dbpedia.org/ontology/commander> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
# Query for the first individual (decedent at Francoist Spain and commander in Biscay Campaign)
SELECT ?militaryForce WHERE {
  ?person dbo:deathPlace dbr:Francoist_Spain ;
          dbo:militaryCommanderOf dbr:Biscay_Campaign .
  ?event dbo:type dbr:Societal_event ;
         dbo:participatedInMilitaryConflict ?conflict .
  ?conflict dbo:involvedMilitaryForce ?militaryForce .
  ?person dbo:participatedInEvent ?event .
}

# Query for Francisco Largo Caballero
SELECT ?militaryForce WHERE {
  dbr:Francisco_Largo_Caballero dbo:militaryCommanderOf ?force ;
                                dbo:participatedInEvent ?event .
  ?event dbo:type dbr:Societal_event ;
         dbo:participatedInMilitaryConflict ?conflict .
  ?conflict dbo:involvedMilitaryForce ?militaryForce .
}
```",6,11,7,3,3,3,3,71,0,0,3,0,0.0,0
391,20,test,"Give me the native of Compton, California and actor of the claim to fame, that is a work, of Michael Ballhaus.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Compton,_California> . <http://dbpedia.org/resource/Michael_Ballhaus> <http://dbpedia.org/ontology/knownFor> ?v2 . ?v2 <http://dbpedia.org/ontology/starring> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?work WHERE {
  # Find works by Michael Ballhaus
  ?work dbo:director dbr:Michael_Ballhaus .
  
  OPTIONAL {
    # Check if Ice Cube is mentioned in any context related to the work
    ?work dbo:actor dbr:Ice_Cube .
  }
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
345,16,test,"Give me the figure known as the nickname of FC Vaduz and team of the person born, that is a soccer player and a soccer manager, on 1978-09-15.","SELECT ?result WHERE { <http://dbpedia.org/resource/FC_Vaduz> <http://dbpedia.org/property/nickname> ?v2 . ?result <http://dbpedia.org/property/nickname> ?v2 . ?result <http://dbpedia.org/ontology/manager> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v3 <http://dbpedia.org/ontology/birthDate> ""1978-09-15""^^<http://www.w3.org/2001/XMLSchema#date> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. }","```sparql
# Query to get the nickname of FC Vaduz
SELECT ?nickname WHERE {
  wd:Q123456 rdfs:label ""FC Vaduz""@en .
  OPTIONAL { wd:Q123456 foaf:nick ?nickname . }
}

UNION

# Query to find a soccer player and manager born on 1978-09-15 and their team
SELECT DISTINCT ?team WHERE {
  ?person dbo:birthDate ""1978-09-15""^^xsd:date ;
          rdf:type wdno:SoccerPlayer ;
          rdf:type wdno:SoccerManager .
  OPTIONAL { ?person foaf:name ?name . }
  ?person wdt:P463 ?team .
}
```

Note: Replace `wd:Q123456` with the actual DBpedia resource identifier for FC Vaduz.",4,6,5,2,2,3,2,20,0,0,1,0,0.0,0
232,25,test,"Give me the native of the residence, that is a settlement and British, of Sylvie Bermann and actor of Dog Soldiers (film).",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . <http://dbpedia.org/resource/Dog_Soldiers_(film)> <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Sylvie_Bermann> <http://dbpedia.org/property/residence> ?v1 . },"```sparql
# Step 1: Find Sylvie Bermann's residence
SELECT ?residence WHERE {
  dbpedia:Sylvie_Bermann dbo:currentResidence ?residence .
  FILTER (strstarts(str(?residence), ""http://dbpedia.org/resource/""))
}

# Step 2: Find an actor from ""Dog Soldiers"" who shares the same residence
SELECT DISTINCT ?actor WHERE {
  # Assuming we found Sylvie Bermann's residence as a variable, replace `?sylviesResidence` with actual URI
  dbpedia:Sylvie_Bermann dbo:currentResidence ?sylviesResidence .
  
  ?film dbo:starring ?actor .
  ?film rdfs:label ""Dog Soldiers""@en .
  FILTER (lang(?film) = 'en')
  
  ?actor dbo:currentResidence ?residence .
  FILTER (?residence = ?sylviesResidence)
}

# Step 3: Find the native place of either Sylvie Bermann or the actor
SELECT DISTINCT ?nativePlace WHERE {
  # Replace `?actor` with actual URI from previous query result
  OPTIONAL { dbpedia:Sylvie_Bermann dbo:nativePlace ?nativePlace . }
  OPTIONAL { ?actor dbo:nativePlace ?nativePlace . }
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
404,50,test,"Give me the parent of the child, that is a royalty, of the parent, that is a royalty, of Prince George William of Hanover and child of the father of Ernest Augustus, Duke of Brunswick.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?v4 . ?result <http://dbpedia.org/ontology/child> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v3 . <http://dbpedia.org/resource/Prince_George_William_of_Hanover> <http://dbpedia.org/ontology/parent> ?v0 . <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/property/father> ?v3 . }","```sparql
SELECT ?finalParent WHERE {
  # Step 1: Identify Prince George William of Hanover
  ?princeGeorgeWilliam dbr:Prince_George_William_of_Hanover .

  # Step 2: Find his parent who is a royalty
  ?parent1 dbo:child ?princeGeorgeWilliam .
  ?parent1 rdf:type dbo:RoyalPerson .

  # Step 3: Identify the child of this royal parent
  ?child1 dbo:parent ?parent1 .

  # Step 4: Determine the father of Ernest Augustus, Duke of Brunswick
  ?ernestAugustus dbr:Ernest_Augustus,_Duke_of_Brunswick .
  ?father2 dbo:child ?ernestAugustus .

  # Step 5: Find the child of this father
  ?child2 dbo:parent ?father2 .

  # Step 6: Identify the royal parent of this child
  ?royalParent dbo:child ?child2 .
  ?royalParent rdf:type dbo:RoyalPerson .

  # Step 7: Determine the parent of this royalty
  ?finalParent dbo:child ?royalParent .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
16,64,test,Give me the professional in Actress and person born as the birth name of the alumnus of Ohio State University and spouse of the person born as the birth name of Ted McGinley.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Ohio_State_University> . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v2 <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/property/birthName> ?v3 . ?result <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/property/occupation> ""Actress""@en . }","```sparql
# Step 1: Get Ted McGinley's birth name
SELECT ?birthName WHERE {
  dbpedia:ted_mcginley dbo:birthName ?birthName .
}

# Step 2: Find Ted McGinley's spouse using his birth name
SELECT ?spouse WHERE {
  ?person dbo:birthName ?birthName .
  ?person foaf:surname ""McGinley"" .
  ?person dbo:spouse ?spouse .
}

# Step 3: Identify an Ohio State University alumnus with the same birth name as Ted McGinley
SELECT ?alumnus WHERE {
  ?alumnus dbo:birthName ?birthName .
  ?alumnus dbo:almaMater dbpedia:Ohio_State_University .
}

# Step 4: Find the spouse of this alumnus
SELECT ?spouseOfAlumnus WHERE {
  ?person dbo:birthName ?birthName .
  ?person dbo:almaMater dbpedia:Ohio_State_University .
  ?person dbo:spouse ?spouseOfAlumnus .
}

# Step 5: Identify the professional actress and person with the same birth name as this spouse
SELECT ?actress WHERE {
  ?person dbo:birthName ?birthName .
  ?person foaf:surname ?surname .
  ?actress dbo:birthName ?birthName .
  ?actress rdf:type dbpedia:Actor ;
           dbo:occupation ""Actress"" .
}
```",7,7,8,3,3,3,3,71,0,0,1,0,0.0,0
184,34,test,"Give me the parent of Archduchess Ilona of Austria and parent of the native of the landmark at elevation, that is a settlement, of 96.0.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/child> ?v1 . ?v2 <http://dbpedia.org/ontology/elevation> ""96.0""^^<http://www.w3.org/2001/XMLSchema#double> . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Ilona_of_Austria> . }","```sparql
# Query 1: Parent of Archduchess Ilona of Austria
SELECT ?parent WHERE {
  ?person dbo:name ""Ilona of Austria""@en .
  ?person rdf:type dbo:ArchdukeOrArchduchess .
  ?person dbo:parent ?parent .
}

UNION

# Query 2: Native of a Landmark at Elevation 96.0
SELECT ?native WHERE {
  ?place dbo:elevation ""96.0""^^xsd:float ;
         rdf:type dbo:Settlement .
  ?landmark dbo:location ?place .
  ?landmark dbo:native ?native .
}
```",4,5,5,3,2,3,3,71,0,0,2,0,0.0,0
617,61,test,"Give me the parent of the child of the commander in Battle of Panium and spouse of the child of the successor, that is a royalty, of Antiochus (son of Antiochus III the Great).",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://dbpedia.org/ontology/child> ?v3 . <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/successor> ?v0 . <http://dbpedia.org/resource/Battle_of_Panium> <http://dbpedia.org/ontology/commander> ?v1 . ?result <http://dbpedia.org/ontology/child> ?v3 . ?v0 <http://dbpedia.org/ontology/child> ?v5 . },"```sparql
# Step 1: Identify the commander in the Battle of Panium
SELECT ?commander WHERE {
  ?battle dbp:battleName ""Battle of Panium""@en.
  ?battle dbo:commander ?commander.
}

# Step 2: Find the child of this commander
SELECT ?child WHERE {
  ?commander dbo:child ?child.
}

# Step 3: Determine the parent of this child (should be the commander)
SELECT ?parent WHERE {
  ?child dbo:parent ?parent.
}

# Step 4: Identify Antiochus (son of Antiochus III the Great)
SELECT ?antiochus WHERE {
  ?antiochus rdfs:label ""Antiochus IV Epiphanes""@en .
  ?antiochus dbo:father ?father.
  ?father rdfs:label ""Antiochus III the Great""@en .
}

# Step 5: Find the successor of this Antiochus
SELECT ?successor WHERE {
  ?antiochus dbo:succeededBy ?successor.
}

# Step 6: Identify the child of this successor
SELECT ?childSuccessor WHERE {
  ?successor dbo:child ?childSuccessor.
}

# Step 7: Determine the spouse of this child (ensuring they are royalty)
SELECT ?spouse WHERE {
  ?childSuccessor dbo:spouse ?spouse.
  ?spouse rdf:type dbo:Monarch .
}

# Step 8: Find the parent of this spouse
SELECT ?parentSpouse WHERE {
  ?spouse dbo:parent ?parentSpouse.
}
```",6,7,7,3,2,3,3,71,0,0,2,0,0.0,0
659,56,test,"Give me the commander in Battle of Leipzig and commander in the force of Arthur Wellesley, 1st Duke of Wellington and military force of the force, that is a societal event and an event and a military conflict, of the reference to Rutger Jan Schimmelpenninck.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/ontology/commander> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Battle_of_Leipzig> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Rutger Jan Schimmelpenninck""@en . ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Arthur_Wellesley,_1st_Duke_of_Wellington> . ?result <http://dbpedia.org/ontology/battle> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commanderLeipzig ?commanderWellington ?militaryForce ?event ?conflict WHERE {
  # Commander in the Battle of Leipzig
  ?battle dbr:Battle_of_Leipzig ;
         dbo:commander ?commanderLeipzig .
  
  # Commanders associated with Arthur Wellesley, 1st Duke of Wellington
  ?wellingtonCommander dbo:commanderOf ?militaryForce ;
                      rdfs:label ""Arthur Wellesley""@en .

  # Military force and events related to the Battle of Leipzig and Wellington's forces
  ?militaryForce dbo:participatedIn ?event .
  ?event rdf:type dbo:SocietalEvent ;
         dbo:wikiPageRedirects ?conflict .
  
  # Reference to Rutger Jan Schimmelpenninck
  OPTIONAL { ?commanderLeipzig dbo:reference dbr:Rutger_Jan_Schimmelpenninck . }
  OPTIONAL { ?wellingtonCommander dbo:reference dbr:Rutger_Jan_Schimmelpenninck . }

  FILTER (lang(?event) = 'en')
}
```",6,9,7,3,3,3,3,71,0,0,6,0,0.0,0
747,34,test,"Give me the band of Shèna and person born on the birth date of the person decedent, that is an athlete and a soccer player, at Zolotonosha.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v2 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Zolotonosha> . ?v2 <http://dbpedia.org/ontology/birthDate> ?v1 . <http://dbpedia.org/resource/Shèna> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/birthDate> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. },"```sparql
# Step 1: Find the band associated with Shèna
SELECT ?band WHERE {
  ?s dbr:Shèna dbo:associatedBand ?band .
}

# Step 2: Find a decedent and their birthdate
SELECT DISTINCT ?decedent ?birthdate WHERE {
  ?decedent dbo:dateOfDeath ?deathDate ;
            dbo:birthDate ?birthdate .
}

# Step 3: Find an athlete who is a soccer player from Zolotonosha born on the same date as the decedent
SELECT DISTINCT ?athlete WHERE {
  ?athlete dbo:birthDate ?birthdate ;
           dbo:sport dbr:Soccer ;
           dbo:nationality dbr:Ukraine ;
           dbo:hometown dbr:Zolotonosha .
  
  # Join with the birthdate of a decedent found in Step 2
  VALUES ?birthdate { 
    SELECT DISTINCT ?birthdate WHERE {
      ?decedent dbo:dateOfDeath ?deathDate ;
                dbo:birthDate ?birthdate .
    }
  }
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
994,69,test,"Give me the associated musical artist of the band member, that is a band and a group and an organisation, of Meshuggah and associated musical artist of the associated musical artist of the reference to Watchtower and band member of the person born, that is a musical artist, as the persona of Don Dokken.","SELECT ?result WHERE { ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v4 <http://xmlns.com/foaf/0.1/name> ""Watchtower""@en . <http://dbpedia.org/resource/Don_Dokken> <http://xmlns.com/foaf/0.1/givenName> ?v5 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v0 <http://dbpedia.org/property/birthName> ?v5 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v6 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v6 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Meshuggah> . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?meshuggahMember ?associatedArtist1 ?watchtowerArtist ?donDokkenBandMember
WHERE {
  # Meshuggah band member who is also a band/group and an organization
  ?meshuggahMember dbo:memberOf dbr:Meshuggah .
  ?meshuggahMember dbo:memberOf ?otherBand ;
                  dbo:associatedMusicalArtist ?associatedArtist1 .

  # Associated musical artist of Watchtower reference
  ?watchtowerReference dbo:reference dbr:Watchtower .
  ?watchtowerReference dbo:associatedMusicalArtist ?watchtowerArtist .

  # Band member of Don Dokken persona
  ?donDokkenPersona dbo:birthPlace ?place ;
                    dbo:alias ""Don Dokken""^^xsd:string .
  ?donDokkenPersona dbo:memberOf ?band ;
                    dbo:bandMember ?donDokkenBandMember .
}
```",8,12,9,3,3,3,3,71,0,0,1,0,0.0,0
10,28,test,"Give me the professional in the birth name of Sharon Kao and associated musical artist of the person born, that is an artist, as Matt Colton and band member of the person born, that is an artist, as Luke Francis Vibert.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/property/occupation> ?v5 . ?v1 <http://dbpedia.org/property/birthName> ""Matt Colton""@en . ?v3 <http://dbpedia.org/property/birthName> ""Luke Francis Vibert""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Sharon_Kao> <http://dbpedia.org/property/birthName> ?v5 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
# Query to find Sharon Kao's professional name
SELECT ?professionalName WHERE {
  ?person foaf:name ""Sharon Kao""@en .
  OPTIONAL { ?person dbo:birthName ?birthName . }
  OPTIONAL { ?person foaf:name ?professionalName . FILTER(lang(?professionalName) = 'en') }
}

# Query to find the musical artist associated with Matt Colton
SELECT DISTINCT ?artist WHERE {
  ?colton foaf:name ""Matt Colton""@en .
  ?colton dbo:worksFor|dbo:collaboratesWith ?artist .
  ?artist a dbo:MusicalArtist .
}

# Query to find the band Luke Francis Vibert is a member of
SELECT DISTINCT ?band WHERE {
  ?vibert foaf:name ""Luke Francis Vibert""@en .
  ?vibert dbo:memberOf ?band .
  ?band a dbo:Band .
}
```",6,8,7,2,3,2,3,28,0,0,1,0,0.0,0
16,48,test,Give me the person born as the birth name of Gigi Rice and spouse of the person born as the birth name of Ted McGinley.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Gigi_Rice> <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/property/birthName> ?v3 . ?result <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
# Step 1: Find the birth name of Gigi Rice
SELECT ?birthName WHERE {
  ?person rdfs:label ""Gigi Rice""@en .
  ?person foaf:name ?birthName .
}

# Step 2: Find the birth name of Ted McGinley
SELECT ?birthName WHERE {
  ?person rdfs:label ""Ted McGinley""@en .
  ?person foaf:name ?birthName .
}

# Step 3: Find who is married to Ted McGinley (using his birth name)
SELECT ?spouse WHERE {
  ?person rdfs:label ?birthName .
  FILTER(?birthName = ""Ted McGinley""@en) # Replace with actual birth name from step 2
  ?person dbo:spouse ?spouse .
}

# Step 4: Check if this spouse was born as Gigi Rice (using her birth name)
SELECT ?spouseLabel WHERE {
  ?spouse rdfs:label ?spouseLabel .
  FILTER(?spouseLabel = ""Gigi Rice""@en) # Replace with actual birth name from step 1
}
```",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
328,52,test,Give me the commander in the force of Ferenc Szálasi and awardee of the award of the commander in Volcano and Ryukyu Islands campaign and leader of People's Commissariat of Defense of the Soviet Union.,SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://dbpedia.org/property/awards> ?v2 . <http://dbpedia.org/resource/Volcano_and_Ryukyu_Islands_campaign> <http://dbpedia.org/ontology/commander> ?v3 . ?v5 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Ferenc_Szálasi> . ?result <http://dbpedia.org/property/awards> ?v2 . <http://dbpedia.org/resource/People's_Commissariat_of_Defense_of_the_Soviet_Union> <http://dbpedia.org/ontology/leader> ?result . },"```sparql
SELECT ?person WHERE {
  ?person dbo:commanderOf ?szalasiForce .
  ?person dbo:recipientOfAward ?volcanoRyukyuAward .
  ?person dbo:leaderOf ?sovietDefenseCommissariat .

  FILTER (STR(?szalasiForce) = ""Ferenc Szálasi"" &&
          STR(?volcanoRyukyuAward) = ""Volcano and Ryukyu Islands campaign award"" &&
          STR(?sovietDefenseCommissariat) = ""People's Commissariat of Defense of the Soviet Union"")
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
314,20,test,Give me the awardee of the award of Sergei Makovetsky and person deceased at Madrid and commander in Spanish Civil War.,SELECT ?result WHERE { <http://dbpedia.org/resource/Spanish_Civil_War> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/restingPlace> <http://dbpedia.org/resource/Madrid> . ?result <http://dbpedia.org/property/awards> ?v3 . <http://dbpedia.org/resource/Sergei_Makovetsky> <http://dbpedia.org/property/awards> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person dbo:awardeeOf dbr:Sergei_Makovetsky .
  ?person dbo:deathPlace dbr:Madrid .
  ?person dbo:militaryConflict dbr:Spanish_Civil_War .
  ?person dbo:rank ""Commander""@en .
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
712,16,test,Give me the capital of the country of Armed Forces of South Russia and resting place of the awardee of Hero of the Soviet Union.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Armed_Forces_of_South_Russia> <http://dbpedia.org/ontology/country> ?v2 . ?v2 <http://dbpedia.org/ontology/capital> ?result . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Hero_of_the_Soviet_Union> . },"```sparql
# Query to get the capital of Ukraine
SELECT ?capital WHERE {
  wd:Q38 wdt:P36 ?capital .
}

# Query to get the resting place of Yuri Gagarin (a notable Hero of the Soviet Union)
SELECT ?restingPlace WHERE {
  wd:Q1196 wdt:P20 ?deathPlace .
  ?deathPlace wdt:P1269 ?restingPlace .
}
```",4,4,5,2,2,3,2,20,0,0,1,0,0.0,0
547,25,test,Give me the resting place of Simon Cadell and resting place of the awardee of Knight Grand Cross of the Order of St Michael and St George.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_St_Michael_and_St_George> . ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Simon_Cadell> <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
# Query to find the resting place of Simon Cadell
SELECT ?burialPlace WHERE {
  ?person foaf:name ""Simon Cadell""@en .
  ?person dbo:deathPlace ?burialPlace .
}

UNION

# Query to find a person awarded Knight Grand Cross of the Order of St Michael and St George and their resting place
SELECT ?awardeeName, ?burialPlace WHERE {
  ?person dbo:honoursReceived dbr:Knight_Grand_Cross_of_the_Order_of_St_Michael_and_St._George .
  ?person foaf:name ?awardeeName .
  ?person dbo:deathPlace ?burialPlace .
}
```",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
659,31,test,"Give me the commander in the force of the native, that is an office holder, of Kingdom of Ireland and commander in Battle of Leipzig.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/commander> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Battle_of_Leipzig> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Kingdom_of_Ireland> . ?v0 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name WHERE {
  ?person a dbo:MilitaryPerson .
  ?person dbo:nationality dbr:Ireland .
  
  # Commander in the force of the native, Kingdom of Ireland
  OPTIONAL { 
    ?person dbo:militaryCommanderOf dbr:Kingdom_of_Ireland .
  }
  
  # Commander in Battle of Leipzig
  OPTIONAL {
    ?battle dbo:commander ?person ;
            a dbo:MilitaryEngagement ;
            rdfs:label ""Battle of Leipzig""@en .
  }

  # Ensure the person is linked to both roles
  FILTER EXISTS { ?person dbo:militaryCommanderOf dbr:Kingdom_of_Ireland }
  FILTER EXISTS { ?battle dbo:commander ?person ; rdfs:label ""Battle of Leipzig""@en }

  # Get the name of the person
  ?person foaf:name ?name .
}
ORDER BY ?name
```",4,5,5,3,2,3,3,71,0,0,19,0,0.0,0
328,22,test,"Give me the awardee of Order of Suvorov and leader of the office, that is a government agency, of Joseph Stalin.",SELECT ?result WHERE { <http://dbpedia.org/resource/Joseph_Stalin> <http://dbpedia.org/property/office> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v1 <http://dbpedia.org/ontology/leader> ?result . ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Order_of_Suvorov> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?awardee ?office WHERE {
  ?award dbo:recipient ?person .
  ?person foaf:name ""Joseph Stalin""@en .
  ?award dbo:name ""Order of Suvorov""@en .
  
  OPTIONAL {
    ?person dbo:positionHeld ?office .
    ?office dbo:organization dbr:Soviet_Union .
  }
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
339,16,test,Give me the child of the child of Christian IX of Denmark and father of the child of Grand Duchess Elena Vladimirovna of Russia.,SELECT ?result WHERE { <http://dbpedia.org/resource/Grand_Duchess_Elena_Vladimirovna_of_Russia> <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://dbpedia.org/property/father> ?result . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Christian_IX_of_Denmark> . ?v2 <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commonIndividual WHERE {
  # Step 1: Christian IX's children
  VALUES (?christianChild) { 
    dbr:Christian_IX_of_Denmark/dbo:child* .
  }

  # Step 2: Grandchildren of Christian IX (child of his child)
  ?grandchild dbo:parent ?christianChild .

  # Step 3: Children of Grand Duchess Elena Vladimirovna
  VALUES (?elenaChild) { 
    dbr:Grand_Duchess_Elena_Vladimirovna_of_Russia/dbo:child* .
  }

  # Step 4: Father of Elena's children
  ?father dbo:spouse ?mother ;
          dbo:child ?elenaChild .

  # Step 5: Find the common individual who is both a grandchild of Christian IX and father of one of Elena's children
  FILTER (?grandchild = ?father)
  
  BIND(?grandchild AS ?commonIndividual)
}
```",4,4,5,2,2,3,2,20,0,0,1,0,0.0,0
177,9,test,"Give me the headquarter of the office, that is an organisation, of Joo Don-sik and entity in the residence of Alexander Gamelin.",SELECT ?result WHERE { <http://dbpedia.org/resource/Alexander_Gamelin> <http://dbpedia.org/property/residence> ?v1 . <http://dbpedia.org/resource/Joo_Don-sik> <http://dbpedia.org/property/office> ?v3 . ?v3 <http://dbpedia.org/ontology/location> ?result . ?result <http://dbpedia.org/ontology/country> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
SELECT DISTINCT ?headquarters WHERE {
  # Find organization associated with Joo Don-sik
  ?organization dbo:employee ?person .
  ?person foaf:name ""Joo Don-sik""@en .

  # Get the headquarters of that organization
  ?organization dbo:headquarterLocation ?headquarters .

  # Check if Alexander Gamelin resided in this location
  ?gamelin dbo:residence ?location .
  ?gamelin foaf:name ""Alexander Gamelin""@en .
  
  FILTER (?headquarters = ?location)
}
```",4,5,5,2,2,2,2,9,0,0,1,0,0.0,0
617,47,test,"Give me the child of the child, that is a royalty, of Seleucus II Callinicus and spouse of the child of the successor, that is a royalty, of Antiochus (son of Antiochus III the Great).",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seleucus_II_Callinicus> . ?v4 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/father> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/child> ?v4 . <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/successor> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?childOfChild WHERE {
  # Seleucus II Callinicus and his royal child
  dbr:Seleucus_II_Callinicus dbo:spouse ?spouse1 .
  ?spouse1 dbo:child ?royalChild1 .
  
  # The spouse of the royal child (child of Seleucus II)
  ?royalChild1 dbo:spouse ?spouse2 .

  # Antiochus III the Great's successor and their royal child
  dbr:Antiochus_III_the_Great dbo:succeededBy ?successor .
  ?successor dbo:child ?royalChild2 .

  # The spouse of the royal child (child of the successor)
  ?royalChild2 dbo:spouse ?spouse3 .

  # Find the child of the first royal child and spouse of the second royal child
  ?spouse2 dbo:child ?childOfChild .
  FILTER (?spouse3 = ?spouse2)

  # Ensure all individuals are royalty
  ?royalChild1 a dbo:Monarch .
  ?royalChild2 a dbo:Monarch .
}
```",5,7,6,3,2,3,3,71,0,0,4,0,0.0,0
492,60,test,"Give me the person decedent at the capital, that is a settlement, of the country of Khemis Miliana District and person decedent at the work of the author of French Algeria.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . ?v2 <http://dbpedia.org/property/author> ?v3 . <http://dbpedia.org/resource/Khemis_Miliana_District> <http://dbpedia.org/ontology/country> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://dbpedia.org/ontology/capital> ?v1 . <http://dbpedia.org/resource/French_Algeria> <http://dbpedia.org/property/author> ?v3 . ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . },"```sparql
# Part 1: Find the capital of Khemis Miliana District and a notable person decedent there
SELECT ?capital ?personDecedent WHERE {
  ?district rdf:type dbo:District .
  ?district foaf:name ""Khemis Miliana""@en .
  ?district dbo:administrativeCapital ?capital .
  ?capital rdf:type dbo:Settlement .
  
  OPTIONAL {
    ?deathEvent dbo:place ?capital ;
                dbo:agent ?personDecedent .
    ?personDecedent rdf:type dbo:Person .
  }
}

UNION

# Part 2: Find the author of French Algeria and a notable person decedent at their work
SELECT ?author ?work ?personDecedent WHERE {
  ?author rdf:type dbo:Writer ;
          foaf:name ?name .
  
  OPTIONAL {
    ?work dbo:author ?author ;
          rdfs:label ?title .
    FILTER(CONTAINS(LCASE(?title), ""french algeria""))
  }
  
  OPTIONAL {
    ?deathEvent dbo:place ?work ;
                dbo:agent ?personDecedent .
    ?personDecedent rdf:type dbo:Person .
  }
}
```",6,7,7,3,2,3,3,71,0,0,16,0,0.0,0
391,57,test,"Give me the native of Compton, California and actor of the claim to fame, that is a work, of the spouse of Sherry Hormann and actor of the movie, that is a movie and a work and a television show, with Roz Ryan.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Sherry_Hormann> <http://dbpedia.org/ontology/spouse> ?v0 . ?v0 <http://dbpedia.org/ontology/knownFor> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v5 <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Compton,_California> . ?v3 <http://dbpedia.org/property/starring> ?result . ?v3 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Roz_Ryan> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. }","```sparql
# Step 1: Find Sherry Hormann's spouse
SELECT ?spouse WHERE {
  wd:Q1234567 wdt:P26 ?spouse .
}

# Step 2: Identify the claim to fame of Sherry Hormann's spouse (a work)
SELECT ?work WHERE {
  ?spouse wdt:P800 ?work .
}

# Step 3: Find actors in that work
SELECT DISTINCT ?actor WHERE {
  ?work wdt:P161 ?actor .
}

# Step 4: Identify movies that are also television shows with Roz Ryan as an actor
SELECT DISTINCT ?movie WHERE {
  wd:Q7890123 wdt:P161 ?movie .
  ?movie wdt:P31 wd:Q11424 . # Q11424 is the class for films
  ?movie wdt:P136 wd:Q1185214 . # Q1185214 is the class for television series
}

# Step 5: Find the native of Compton, California who fits all criteria
SELECT DISTINCT ?person WHERE {
  ?person wdt:P19 wd:Q123456 . # Q123456 is the entity for Compton, California
  ?person wdt:P161 ?actor .
  FILTER(?actor IN (?actorList)) # Replace ?actorList with results from step 3 and 4
}
```

Note: The above SPARQL queries are structured to be executed sequentially. You will need to replace `wd:Q1234567` with the actual DBpedia entity for Sherry Hormann, `wd:Q7890123` with Roz Ryan's DBpedia entity, and `wd:Q123456` with Compton, California's DBpedia entity. Additionally, you'll need to manually combine results from steps 3 and 4 to filter in step 5.",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
767,45,test,"Give me the alma mater of Carl L. Nippert and entity in Baden-Württemberg and reference to the alter ego of the persona, that is a fictional character, of Matthew Burland.","SELECT ?result WHERE { <http://dbpedia.org/resource/Carl_L._Nippert> <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v0 <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://dbpedia.org/ontology/state> <http://dbpedia.org/resource/Baden-Württemberg> . ?v0 <http://dbpedia.org/property/alterEgo> ""Matthew Burland""@en . }","```sparql
# Query to find the alma mater of Carl L. Nippert
SELECT ?almaMater WHERE {
  ?person dbo:givenName ""Carl"" .
  ?person dbo:familyName ""Nippert"" .
  ?person dbo:almaMater ?almaMater .
}

UNION

# Query to find an entity in Baden-Württemberg
SELECT ?entity WHERE {
  ?entity a dbo:Place .
  ?entity dbo:country dbc:Germany .
  ?entity dbo:state dbr:Baden-Württemberg .
}

UNION

# Query to find the alter ego of Matthew Burland's persona
SELECT ?alterEgo WHERE {
  ?person foaf:name ""Matthew Burland"" .
  ?person dbo:fictionalCharacter ?alterEgo .
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
92,26,test,"Give me the associated musical artist of the person born, that is an artist, as the actor of Return to Nuke 'Em High Volume 1.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Return_to_Nuke_'Em_High_Volume_1> <http://dbpedia.org/property/starring> ?v1 . ?v2 <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"```sparql
SELECT ?actor ?musicArtist WHERE {
  ?movie dbo:director ?director .
  ?movie dbo:title ""Return to Nuke 'Em High Volume 1"" .
  ?movie dbo:starring ?actor .
  ?actor dbo:birthPlace ?place .
  ?actor dbo:occupation ?occupation .
  FILTER(CONTAINS(LCASE(?occupation), ""actor"") && CONTAINS(LCASE(?occupation), ""musician""))
  OPTIONAL { ?actor foaf:musicArtist ?musicArtist . }
}
```",3,4,4,3,1,3,3,71,0,0,126,0,0.0,0
281,46,test,"Give me the entity in the birth place, that is a country, of Bob Heffron and war of the awardee of the award of Jonathon Band.",SELECT ?result WHERE { <http://dbpedia.org/resource/Bob_Heffron> <http://dbpedia.org/ontology/birthPlace> ?v4 . <http://dbpedia.org/resource/Jonathon_Band> <http://dbpedia.org/property/awards> ?v2 . ?v1 <http://dbpedia.org/property/awards> ?v2 . ?result <http://dbpedia.org/ontology/place> ?v4 . ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?entityInBirthPlace ?warOfAwardee
WHERE {
  # Find Bob Heffron's birthplace and check if it is a country
  dbr:Bob_Heffron dbo:birthPlace ?birthPlace .
  ?birthPlace rdf:type dbo:Country .

  # Find an entity in the birth place of Bob Heffron
  ?entityInBirthPlace dbo:location ?birthPlace .

  # Find Jonathon Band's award and related war
  dbr:Jonathon_Band dbo:award ?award .
  ?award dbo:relatedWar ?warOfAwardee .
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
161,55,test,"Give me the military force of the force, that is a societal event and a military conflict, of Francisco Largo Caballero and commander in the force, that is an event, of Emilio Mola and military force of the force, that is a societal event and an event and a military conflict, of Francisco Franco.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v5 . ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Franco> . ?v5 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Emilio_Mola> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?militaryForce
WHERE {
  ?franciscoLargoCaballero dbo:nationality dbr:Spain ;
                           dbo:occupation dbr:Politician ;
                           dbo:spouse ?militaryForce .
  FILTER (strstarts(str(?militaryForce), ""Spanish Civil War""))

  ?emilioMola dbo:nationality dbr:Spain ;
             dbo:occupation dbr:Military_person ;
             dbp:commanded ?event .
  ?event rdfs:label ?eventName .
  FILTER (CONTAINS(LCASE(?eventName), ""coup d'état"") || CONTAINS(LCASE(?eventName), ""Spanish Civil War""))

  ?franciscoFranco dbo:nationality dbr:Spain ;
                   dbo:occupation dbr:Military_person ;
                   dbp:militaryConflict ?militaryForce .
  FILTER (strstarts(str(?militaryForce), ""Spanish Civil War""))
}
```",6,12,7,2,3,3,3,71,0,0,32,0,0.0,0
378,45,test,"Give me the war of Joaquín Blake and war of Carl Pontus Gahn and claim to fame of the commander in the war, that is a military conflict and a societal event and an event, of Thomas Trigge.",SELECT ?result WHERE { <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/knownFor> ?result . ?v0 <http://dbpedia.org/ontology/commander> ?v1 . <http://dbpedia.org/resource/Joaquín_Blake> <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Thomas_Trigge> <http://dbpedia.org/ontology/battle> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?warOfJoaquinBlake ?warOfCarlPontusGahn ?commanderClaimToFame WHERE {
  # Find the war associated with Joaquín Blake
  ?person1 a dbo:MilitaryPerson ;
           foaf:name ""Joaquín Blake"" ;
           dbo:participatedInMilitaryConflict ?warOfJoaquinBlake .
  
  # Ensure it is classified as a military conflict and societal event
  ?warOfJoaquinBlake a dbo:MilitaryConflict, dbo:SocietalEvent .

  # Find the war associated with Carl Pontus Gahn
  ?person2 a dbo:MilitaryPerson ;
           foaf:name ""Carl Pontus Gahn"" ;
           dbo:participatedInMilitaryConflict ?warOfCarlPontusGahn .
  
  # Ensure it is classified as a military conflict and societal event
  ?warOfCarlPontusGahn a dbo:MilitaryConflict, dbo:SocietalEvent .

  # Find Thomas Trigge's role in these wars
  ?person3 a dbo:MilitaryPerson ;
           foaf:name ""Thomas Trigge"" ;
           dbo:commandedMilitaryConflict ?warOfJoaquinBlake ;
           dbo:commandedMilitaryConflict ?warOfCarlPontusGahn .

  # Determine his claim to fame
  ?person3 dbo:claimToFame ?commanderClaimToFame .
}
```",5,8,6,3,3,3,3,71,0,0,2,0,0.0,0
161,32,test,"Give me the military force of the force, that is a societal event and an event and a military conflict, of Francisco Franco and military force of the force, that is a societal event and a military conflict, of Francisco Largo Caballero.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Franco> . ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
# Query for Francisco Franco's military force
SELECT ?militaryForce WHERE {
  wd:Q11940 wdt:P106 wd:Q82955 . # Francisco Franco is a military personnel
  wd:Q11940 wdt:P1020 ?event .   # Event associated with Francisco Franco
  ?event wdt:P31/wdt:P279* wd:Q118936 . # The event is a military conflict or societal event
  ?event wdt:P527 ?militaryForce . # The event involves a military force
}

UNION

# Query for Francisco Largo Caballero's military force
SELECT ?militaryForce WHERE {
  wd:Q11941 wdt:P106 wd:Q82955 . # Francisco Largo Caballero is a military personnel
  wd:Q11941 wdt:P1020 ?event .   # Event associated with Francisco Largo Caballero
  ?event wdt:P31/wdt:P279* wd:Q118936 . # The event is a military conflict or societal event
  ?event wdt:P527 ?militaryForce . # The event involves a military force
}
```",4,9,5,2,2,3,3,71,0,0,514,0,0.0,0
617,54,test,"Give me the parent of Nysa (wife of Pharnaces I of Pontus) and spouse of the child of the successor, that is a royalty, of Antiochus (son of Antiochus III the Great) and child of the child, that is a royalty, of Seleucus II Callinicus.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Nysa_(wife_of_Pharnaces_I_of_Pontus)> . ?v0 <http://dbpedia.org/ontology/child> ?v5 . ?result <http://dbpedia.org/property/father> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seleucus_II_Callinicus> . <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/successor> ?v0 . },"```sparql
SELECT ?parent ?spouse WHERE {
  # Nysa's parent
  ?nysa dbo:spouse ?pharnaces1 .
  ?pharnaces1 foaf:surname ""Pharnaces I of Pontus"" .
  ?nysa dbo:childOf ?parent .

  # Successor of Antiochus (son of Antiochus III the Great)
  ?antiochus3 dbo:child ?antiochus .
  ?antiochus foaf:surname ""Antiochus"" .
  ?antiochus2 dbo:successorOf ?antiochus .

  # Child of the successor
  ?antiochus2 dbo:child ?childSuccessor .

  # Spouse of Nysa's parent
  ?parent dbo:spouse ?spouse .

  # Antiochus II Theos and his child
  ?antiochus3 foaf:surname ""Antiochus III the Great"" .
  ?antiochus2 foaf:surname ""Seleucus II Callinicus"" .
  ?antiochus2 dbo:child ?royaltyChild .

  # Grandchild of Seleucus II Callinicus
  ?royaltyChild dbo:child ?grandchild .

  FILTER (?spouse = ?childSuccessor && ?spouse = ?grandchild)
}
```",6,8,7,3,3,3,3,71,0,0,2,0,0.0,0
617,19,test,"Give me the child of the child, that is a royalty, of Boleslaus I, Duke of Bohemia and parent of the father, that is a royalty, of the reference, that is a royalty, to Richeza of Poland.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?v4 . ?result <http://dbpedia.org/ontology/child> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Boleslaus_I,_Duke_of_Bohemia> . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Richeza of Poland""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?grandchild WHERE {
  # Step 1: Boleslaus I, Duke of Bohemia
  dbr:Boleslaus_I,_Duke_of_Bohemia dbo:spouse ?spouse .
  
  # Step 2: Child of Boleslaus I who is royalty
  ?child dbo:parent dbr:Boleslaus_I,_Duke_of_Bohemia ;
         a dbo:Monarch .

  # Step 3: Grandchild of Boleslaus I who is royalty
  ?grandchild dbo:parent ?child ;
              a dbo:Monarch .

  # Step 4: Richeza of Poland
  dbr:Richeza_of_Poland dbo:spouse ?richezaSpouse .
  
  # Step 5: Reference to Richeza (someone connected through father)
  ?reference dbo:parent ?father ;
             a dbo:Monarch .

  ?father dbo:spouse dbr:Richeza_of_Poland .

  # Step 6: Parent of that person's father
  ?grandparent dbo:child ?father .

  # Step 7: Ensure the grandchild is also this grandparent
  FILTER (?grandchild = ?grandparent)
}
```",5,8,6,3,2,3,2,20,0,0,1,0,0.0,0
666,17,test,"Give me the player in Steve Bruce and figure known as the nickname of the reference, that is an organisation and a soccer club and a sports club, to England.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ?v3 . ?v0 <http://dbpedia.org/property/nickname> ?v3 . ?v0 <http://xmlns.com/foaf/0.1/name> ""England""@en . <http://dbpedia.org/resource/Steve_Bruce> <http://dbpedia.org/ontology/team> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. }","```sparql
SELECT ?player WHERE {
  ?club dcterms:subject dbc:Sunderland_A.FC ;
        foaf:name ""Sunderland A.F.C.""@en .
  
  ?manager dbo:position ""Manager""@en ;
           dbo:managedTeam ?club ;
           foaf:name ""Steve Bruce""@en .

  ?club dbo:nickname ""The Black Cats""@en ;
        dbo:sport dbp:Soccer ;
        dbo:country dbc:England .

  OPTIONAL { ?player dbo:playsFor ?club . }
}
```",4,7,5,3,2,3,2,20,0,0,1,0,0.0,0
492,37,test,"Give me the commander in the war, that is a military conflict and an event, of the commander in Battle of Verdun and person decedent at Algiers.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/battle> ?v3 . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Algiers> . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Battle_of_Verdun> <http://dbpedia.org/ontology/commander> ?v0 . },"```sparql
# Step 1: Find the commander of the Battle of Verdun
SELECT ?commander WHERE {
  ?battle dcterms:title ""Battle of Verdun""@en .
  ?battle dbo:commander ?commander .
}

# Step 2: Identify a military conflict or event involving this commander
SELECT DISTINCT ?conflict WHERE {
  ?commander dbo:participatedInMilitaryConflictOrEvent ?conflict .
  FILTER(?conflict != <http://dbpedia.org/resource/Battle_of_Verdun>)
}

# Step 3: Find if the commander (or another relevant person) died in Algiers
SELECT DISTINCT ?person WHERE {
  OPTIONAL { 
    ?commander foaf:name ?name . 
    ?person foaf:name ?name .
  }
  ?person dbo:deathPlace <http://dbpedia.org/resource/Algiers> .
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
9,57,test,"Give me the alma mater of John Alderdice, Baron Alderdice and figure known as the nickname of Queen's University Belfast and alma mater of the awardee of the reference, that is an award, to Royal Medals.","SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""Royal Medals""@en . ?result <http://dbpedia.org/property/nickname> ?v3 . ?v5 <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Queen's_University_Belfast> <http://dbpedia.org/property/nickname> ?v3 . <http://dbpedia.org/resource/John_Alderdice,_Baron_Alderdice> <http://dbpedia.org/ontology/almaMater> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v5 <http://dbpedia.org/ontology/almaMater> ?result . }","```sparql
# Query to find the alma mater of John Alderdice
SELECT ?almaMater WHERE {
  ?person foaf:name ""John Alderdice""@en .
  ?person dbo:almaMater ?university .
  ?university rdfs:label ?almaMater .
  FILTER(LANG(?almaMater) = 'en')
}

# Query to find the nickname of Queen's University Belfast
SELECT ?nickname WHERE {
  ?university rdfs:label ""Queen's University Belfast""@en ;
              dbo:nickname ?nickname .
  FILTER(LANG(?nickname) = 'en')
}

# Query to find recent awardees of the Royal Medal and their alma maters
SELECT ?awardee ?almaMater WHERE {
  ?award rdf:type dbo:Award .
  ?award rdfs:label ""Royal Medal""@en .
  ?recipient dbo:recipientOf ?award ;
             foaf:name ?awardee .
  ?recipient dbo:almaMater ?university .
  ?university rdfs:label ?almaMater .
  FILTER(LANG(?almaMater) = 'en')
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
328,70,test,"Give me the awardee of the award of Bruce Fraser, 1st Baron Fraser of North Cape and commander in the force of the person decedent at Budapest and leader of the office, that is a government agency, of the leader, that is an office holder and a politician, of Gustav Jonson.","SELECT ?result WHERE { ?v7 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://dbpedia.org/ontology/leader> ?result . <http://dbpedia.org/resource/Gustav_Jonson> <http://dbpedia.org/property/leader> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Budapest> . ?v7 <http://dbpedia.org/ontology/commander> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?result <http://dbpedia.org/property/awards> ?v4 . <http://dbpedia.org/resource/Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape> <http://dbpedia.org/property/awards> ?v4 . ?v1 <http://dbpedia.org/property/office> ?v3 . }","```sparql
SELECT ?awardee WHERE {
  # Step 1: Find an award Bruce Fraser received
  ?award dbo:recipient dbr:Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape .
  
  # Step 2: Identify the awardee of that award who was a commander in the force of someone who died at Budapest
  ?awardee dbo:award ?award .
  ?commander foaf:name ?decedentName ;
             dbo:deathPlace dbr:Budapest .
  ?force dbo:commander ?commander .
  ?awardee dbo:militaryCommanderOf ?commander .

  # Step 3: Determine who this person (decedent) led as a government agency leader
  ?agency dbo:leader ?decedent .
  
  # Step 4: Confirm this leader is Gustav Jonson
  ?decedent foaf:name ""Gustav Jonson"" .
}
```",8,11,9,3,3,3,3,71,0,0,1,0,0.0,0
534,20,test,"Give me the headquarter of the owner of the location, that is a venue and an architectural structure, of 2012 Pro12 Grand Final and birth place of the child, that is a politician and an office holder, of the native, that is a politician, of Essex.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Venue>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/child> ?v2 . ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Essex> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ArchitecturalStructure>. <http://dbpedia.org/resource/2012_Pro12_Grand_Final> <http://dbpedia.org/ontology/location> ?v4 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v5 <http://dbpedia.org/ontology/headquarter> ?result . ?v4 <http://dbpedia.org/ontology/owner> ?v5 . },"```sparql
# Step 1: Find the 2012 Pro12 Grand Final venue
SELECT ?venue WHERE {
  ?event dcterms:title ""2012 Pro12 Grand Final""@en .
  ?event dbo:location ?venue .
  FILTER EXISTS { ?venue a dbo:SportsVenue . }
  FILTER EXISTS { ?venue a dbo:ArchitecturalStructure . }
}

# Step 2: Find the owner of this venue
SELECT ?owner WHERE {
  VALUES ?venue { <URI_of_venue> } # Replace with actual URI from step 1
  ?venue dbo:operator ?organization .
  ?organization dbo:headquarters ?headquarter .
  ?organization a dbo:Organization .
}

# Step 3: Find the headquarters of the owner
SELECT ?headquarter WHERE {
  VALUES ?owner { <URI_of_owner> } # Replace with actual URI from step 2
  ?owner dbo:headquarters ?headquarter .
}

# Step 4: Identify a politician native to Essex
SELECT ?politician WHERE {
  ?person dbo:nationality dbr:United_Kingdom ;
          dbo:birthPlace dbr:Essex ;
          a dbo:Politician .
}

# Step 5: Find their child who is also a politician and office holder
SELECT ?child WHERE {
  VALUES ?parent { <URI_of_politician> } # Replace with actual URI from step 4
  ?child dbo:parent ?parent ;
         dbo:officeHolder true ;
         a dbo:Politician .
}

# Step 6: Determine the birthplace of this child
SELECT ?birthPlace WHERE {
  VALUES ?child { <URI_of_child> } # Replace with actual URI from step 5
  ?child dbo:birthPlace ?birthPlace .
}
```",6,11,7,3,2,3,2,20,0,0,1,0,0.0,0
528,64,test,"Give me the war of the military force of the entity, that is a societal event, in Chile and war of Orozimbo Barbosa and force of the person born as the birth name of Narciso Campero.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/battle> ?v3 . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/commander> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Chile> . <http://dbpedia.org/resource/Narciso_Campero> <http://dbpedia.org/property/birthName> ?v0 . <http://dbpedia.org/resource/Orozimbo_Barbosa> <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/property/birthName> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?chileanWar ?tripleAllianceWar ?pacificWar WHERE {
  # War involving Chilean forces (societal event in Chile)
  ?chileanWar a dbo:MilitaryConflict ;
              dbo:participatingMilitaryForce dbr:Chile .

  # War of the Triple Alliance (involving Orozimbo Barbosa)
  ?tripleAllianceWar a dbo:MilitaryConflict ;
                    dbo:participatingMilitaryForce ?paraguay ;
                    dbo:participant dbr:Orozimbo_Barbosa .
  
  # War of the Pacific (involving Narciso Campero)
  ?pacificWar a dbo:MilitaryConflict ;
              dbo:participatingMilitaryForce ?bolivia ;
              dbo:participant dbr:Narciso_Campero .

  OPTIONAL { ?paraguay rdfs:label ""Paraguay""@en . }
  OPTIONAL { ?bolivia rdfs:label ""Bolivia""@en . }
}
```",7,8,8,3,3,3,3,71,0,0,2,0,0.0,0
421,27,test,Give me the band member of Senidah and person born as the birth name of Dino Merlin and native of the birthplace of Samir Bekrić.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v2 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Senidah> . <http://dbpedia.org/resource/Dino_Merlin> <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Samir_Bekrić> <http://dbpedia.org/ontology/birthPlace> ?v3 . ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . },"```sparql
SELECT ?person WHERE {
  # Find a person who is a band member of Senidah
  ?bandMember dbo:memberOf dbr:Senidah .
  
  # Ensure this person has the birth name Dino Karaman
  ?bandMember foaf:name ""Dino Karaman""@en .

  # Ensure this person is from Sarajevo
  ?bandMember dbo:birthPlace dbr:Sarajevo .
}
```",5,5,6,2,3,2,3,28,0,0,1,0,0.0,0
404,57,test,"Give me the parent of the child, that is a royalty, of the parent, that is a royalty, of Prince George William of Hanover and spouse of Princess Victoria Louise of Prussia and child of the father of Ernest Augustus, Duke of Brunswick.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v5 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/property/father> ?v3 . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/ontology/child> ?v5 . <http://dbpedia.org/resource/Prince_George_William_of_Hanover> <http://dbpedia.org/ontology/parent> ?v0 . ?result <http://dbpedia.org/ontology/parent> ?v3 . }","```sparql
SELECT ?parentOfChild WHERE {
  # Step 1: Prince George William of Hanover and his spouse
  ?princeGeorgeWilliam dbr:Prince_George_William_of_Hanover .
  ?princeGeorgeWilliam dbo:spouse ?princessVictoriaLouise .

  # Step 2: Princess Victoria Louise of Prussia
  ?princessVictoriaLouise dbr:Princess_Victoria_Louise_of_Prussia .

  # Step 3: Child of Prince George William and Princess Victoria Louise who is royalty
  ?child dbo:parent ?princeGeorgeWilliam .
  ?child dbo:parent ?princessVictoriaLouise .
  ?child rdf:type dbo:RoyalFamilyMember .

  # Step 4: Father of Ernest Augustus, Duke of Brunswick
  ?ernestAugustus dbr:Ernest_Augustus,_Duke_of_Brunswick-Lüneburg .
  ?fatherOfErnestAugustus dbo:child ?ernestAugustus .

  # Step 5: Child of the father identified in step 4 who is royalty
  ?royalChild dbo:parent ?fatherOfErnestAugustus .
  ?royalChild rdf:type dbo:RoyalFamilyMember .

  # Step 6: Parent of this child
  ?parentOfChild dbo:child ?royalChild .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
547,21,test,Give me the resting place of Alan Cunningham and resting place of the child of James Burton (property developer).,SELECT ?result WHERE { <http://dbpedia.org/resource/James_Burton_(property_developer)> <http://dbpedia.org/ontology/child> ?v1 . <http://dbpedia.org/resource/Alan_Cunningham> <http://dbpedia.org/ontology/restingPlace> ?result . ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
# Query for Alan Cunningham's resting place
SELECT ?restingPlace WHERE {
  ?person foaf:name ""Alan Cunningham""@en .
  ?person dbo:deathPlace ?restingPlace .
}

UNION

# Query for the child of James Burton (property developer) and their resting place
SELECT ?childRestingPlace WHERE {
  ?jamesBurton foaf:name ""James Burton""@en ;
               rdf:type dbo:PropertyDeveloper .
  ?jamesBurton dbo:child ?child .
  ?child dbo:deathPlace ?childRestingPlace .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
16,33,test,Give me the spouse of Ted McGinley and professional in the profession of the actor of Unnatural (TV series).,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/occupation> ?v3 . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Unnatural_(TV_series)> <http://dbpedia.org/property/starring> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v3 . },"```sparql
# Query to get Ted McGinley's spouse
SELECT ?spouse WHERE {
  dbpedia:ted_mcginley dbo:spouse ?spouse .
}

# Query to find the profession of an actor from ""Unnatural"" (TV series)
SELECT DISTINCT ?actor ?profession WHERE {
  # Find actors in the TV series ""Unnatural""
  ?series dbo:title ""Unnatural (TV series)""@en ;
          dbo:starring ?actor .
  
  # Get the profession of these actors
  ?actor a dbo:Actor ;
         dbo:profession ?profession .
}

# Query to find someone professional in that same field
SELECT DISTINCT ?person WHERE {
  ?person a dbo:Person ;
          dbo:profession ?profession .

  FILTER EXISTS {
    # Ensure this person is not the actor from ""Unnatural""
    ?actor a dbo:Actor ;
           dbo:title ""Unnatural (TV series)""@en .
    
    ?series dbo:starring ?actor .
    ?person != ?actor .
  }
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
696,16,test,Give me the landmark at elevation of the award of Nie Rongzhen and birth place of the member of Dropkick Murphys.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/elevation> ?v3 . <http://dbpedia.org/resource/Dropkick_Murphys> <http://dbpedia.org/ontology/bandMember> ?v2 . <http://dbpedia.org/resource/Nie_Rongzhen> <http://dbpedia.org/property/awards> ?v3 . },"```sparql
# Query for Nie Rongzhen's award and associated landmark
SELECT ?landmark WHERE {
  ?award dbo:recipient dbr:Nie_Rongzhen .
  ?award dbo:elevation ?elevation .
  ?location geo:hasElevation ?elevation ;
           dbo:landmark ?landmark .
}

UNION

# Query for Dropkick Murphys member's birthplace and associated landmark
SELECT ?landmark WHERE {
  ?member dbo:band dbr:Dropkick_Murphys .
  ?member dbo:birthPlace ?birthPlace .
  ?location dbo:city ?birthPlace ;
            dbo:landmark ?landmark .
}
```",4,4,5,2,2,3,2,20,0,0,1,0,0.0,0
767,39,test,"Give me the alma mater of Carl L. Nippert and reference to the alter ego of the persona, that is a fictional character, of Matthew Burland.","SELECT ?result WHERE { <http://dbpedia.org/resource/Carl_L._Nippert> <http://dbpedia.org/ontology/almaMater> ?result . ?v0 <http://dbpedia.org/property/alterEgo> ?v1 . ?v0 <http://dbpedia.org/property/alterEgo> ""Matthew Burland""@en . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. }","```sparql
# Query to find the alma mater of Carl L. Nippert
SELECT ?almaMater WHERE {
  ?person foaf:name ""Carl L. Nippert"" .
  ?person dbo:almaMater ?almaMater .
}

UNION

# Query to find the alter ego or fictional character associated with Matthew Burland
SELECT ?fictionalCharacter WHERE {
  ?person foaf:name ""Matthew Burland"" .
  ?work dbo:author ?person .
  ?work dbo:title ?title .
  ?character dbo:associatedWith ?work ;
             rdfs:label ?fictionalCharacter .
}
```",4,5,5,3,2,3,3,71,0,0,2,0,0.0,0
77,16,test,Give me the force of the mayor of Congress Poland and war of the awardee of Golden Weapon for Bravery.,SELECT ?result WHERE { <http://dbpedia.org/resource/Congress_Poland> <http://dbpedia.org/property/leader> ?v3 . ?result <http://dbpedia.org/ontology/commander> ?v3 . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Golden_Weapon_for_Bravery> . },"```sparql
# Query to find the force or influence of the mayor of Congress Poland
SELECT ?mayor ?force WHERE {
  ?mayor dbo:officeLabel ""Mayor""@en .
  ?mayor dbo:country dbr:Congress_Poland .
  OPTIONAL { ?mayor dbo:hasMilitaryForce ?force . }
}

UNION

# Query to find the war associated with an awardee of the Golden Weapon for Bravery
SELECT ?awardee ?war WHERE {
  ?awardee dbo:award dbr:Golden_Weapon_for_Bravery .
  OPTIONAL { ?awardee dbo:servedInWar ?war . }
}
```",4,4,5,2,2,3,2,20,0,0,13,0,0.0,0
54,55,test,"Give me the predecessor of the child, that is an office holder and a royalty, of Thihapate of Mohnyin and parent of the child of Narapati I of Ava and child of the father of Soe Min Wimala Dewi.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/successor> ?v2 . ?v5 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Soe_Min_Wimala_Dewi> <http://dbpedia.org/property/father> ?v3 . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Thihapate_of_Mohnyin> . ?v3 <http://dbpedia.org/ontology/child> ?result . ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Narapati_I_of_Ava> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?predecessor WHERE {
  # Thihapate of Mohnyin's child who is an office holder and royalty
  ?child dbo:parent dbr:Thihapate_of_Mohnyin ;
         a dbo:Monarch ;
         dbo:officeHolder ?office .

  # Narapati I of Ava's child's parent
  ?narapatichild dbo:parent ?parent .
  ?parent dbo:spouse dbr:Narapati_I_of_Ava .

  # Soe Min Wimala Dewi's father
  ?soeminwimaladewi dbo:father ?father .

  # Find the predecessor of the identified child
  ?office dbo:predecessor ?predecessor .
}
```",6,8,7,2,3,3,3,71,0,0,1,0,0.0,0
55,27,test,"Give me the band of the reference, that is a band, to Newsted and band member of the band member, that is a band and a group, of San Francisco Symphony and band member of Guns N' Roses.","SELECT ?result WHERE { ?v1 <http://xmlns.com/foaf/0.1/name> ""Newsted""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Guns_N'_Roses> . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/San_Francisco_Symphony> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band ?person WHERE {
  # Jason Newsted's band
  dbr:Metallica dbo:member dbr:Jason_Newsted .
  
  # Find a person who is a member of both San Francisco Symphony and Guns N' Roses
  ?person dbo:memberOf dbr:San_Francisco_Symphony ;
          dbo:memberOf dbr:Guns_N'_Roses .

  # Check if this person is associated with another band or group
  OPTIONAL { ?person dbo:member ?band . }
  
  FILTER(?band != dbr:Metallica) # Exclude Metallica to find other bands
}
```",5,8,6,2,3,2,3,28,0,0,1,0,0.0,0
492,47,test,"Give me the commander in the war, that is a military conflict and an event, of the commander in Battle of Verdun and person decedent at the work of US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://dbpedia.org/property/author> ""US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite""@en . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Battle_of_Verdun> <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://dbpedia.org/ontology/battle> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war ?commander WHERE {
  # Find Philippe Pétain as commander in Battle of Verdun
  dbr:Philippe_P%C3%A9tain dbo:commanded dbr:Battle_of_Verdun .
  
  # Find wars/events involving Philippe Pétain
  ?event dbo:commandedBy dbr:Philippe_P%C3%A9tain .
  
  # Find individuals who died while working under Joseph C. Satterthwaite
  ?decedent dbo:deathPlace ?place ;
           dbo:occupation dbr:US_Assistant_Secretary_of_State_for_African_Affairs ;
           dbo:employer dbr:Joseph_C._Satterthwaite .
  
  # Find common war/conflict/event involving both Philippe Pétain and the decedent
  ?event dbo:commandedBy ?decedent .
  
  # Return the war and commander
  ?war dbo:commandedBy ?commander .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
404,67,test,"Give me the spouse of Princess Victoria Louise of Prussia and parent of the child, that is a royalty, of the parent, that is a royalty, of Prince George William of Hanover and child of the father of the spouse of Princess Victoria Louise of Prussia.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> ?v3 . <http://dbpedia.org/resource/Prince_George_William_of_Hanover> <http://dbpedia.org/ontology/parent> ?v0 . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/child> ?v6 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?v1 . ?result <http://dbpedia.org/ontology/child> ?v6 . ?result <http://dbpedia.org/ontology/parent> ?v3 . },"```sparql
# Step 1: Find Princess Victoria Louise of Prussia's spouse
SELECT ?spouse WHERE {
  wd:Q123456 wdt:P26 ?spouse .
}

# Step 2: Identify a royal child from the spouse found in step 1
SELECT ?child WHERE {
  ?spouse wdt:P40 ?child .
  ?child wdt:P31 wd:Q5 . # Ensure the child is royalty (instance of human)
}

# Step 3: Find the parent of this royal child
SELECT ?parent WHERE {
  ?child wdt:P25|wdt:P22 ?parent .
  ?parent wdt:P31 wd:Q5 . # Ensure the parent is royalty
}

# Step 4: Identify Prince George William of Hanover's royal parent
SELECT ?royalParent WHERE {
  wd:Q654321 wdt:P25|wdt:P22 ?royalParent .
  ?royalParent wdt:P31 wd:Q5 . # Ensure the parent is royalty
}

# Step 5: Find the spouse (wife) of Princess Victoria Louise's spouse's father
SELECT ?spouseOfFather WHERE {
  ?spouse wdt:P21 ?father .
  ?father wdt:P26 ?spouseOfFather .
}

# Step 6: Identify the child of this spouse found in step 5
SELECT ?finalChild WHERE {
  ?spouseOfFather wdt:P40|wdt:P22 ?finalChild .
}
```

Note: Replace `Q123456` with the actual DBpedia ID for Princess Victoria Louise of Prussia and `Q654321` with the ID for Prince George William of Hanover.",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
378,65,test,"Give me the war of the person born as Carl Pontus Gahn and claim to fame of the commander in Great Siege of Gibraltar and war of the commander in the reference, that is a military conflict, to Peninsular War.","SELECT ?result WHERE { ?v6 <http://dbpedia.org/ontology/battle> ?result . ?v3 <http://dbpedia.org/ontology/knownFor> ?result . <http://dbpedia.org/resource/Great_Siege_of_Gibraltar> <http://dbpedia.org/ontology/commander> ?v3 . ?v0 <http://dbpedia.org/ontology/commander> ?v6 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v4 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Peninsular War""@en . ?v4 <http://dbpedia.org/property/birthName> ""Carl Pontus Gahn""@en . }","```sparql
# Step 1: Find Carl Pontus Gahn's claim to fame
SELECT ?person ?fame WHERE {
  ?person rdfs:label ""Carl Pontus Gahn""@en .
  ?person dbo:notableFor ?fame .
}

# Step 2: Identify the commander of the Great Siege of Gibraltar
SELECT ?commander WHERE {
  ?event dbo:wikiPageRedirects dbpedia:Great_Siege_of_Gibraltar .
  ?event dbo:commander ?commander .
}

# Step 3: Check if this commander was involved in the Peninsular War
SELECT ?war WHERE {
  ?commander dbo:participatedInMilitaryConflict ?conflict .
  ?conflict rdfs:label ""Peninsular War""@en .
}
```",7,8,8,3,3,3,3,71,0,0,2,0,0.0,0
54,32,test,Give me the child of the father of Soe Min Wimala Dewi and parent of the child of Narapati I of Ava.,SELECT ?result WHERE { <http://dbpedia.org/resource/Soe_Min_Wimala_Dewi> <http://dbpedia.org/property/father> ?v1 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Narapati_I_of_Ava> . ?v3 <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://dbpedia.org/ontology/child> ?result . },"```sparql
# Find Soe Min Wimala Dewi's father
SELECT ?father WHERE {
  wd:Q1234567 wdt:P22 ?father .
}

# Find Narapati I of Ava and his child
SELECT ?narapatiI ?child WHERE {
  wd:Q654321 wdt:P40 ?narapatiI .
  ?narapatiI wdt:P40 ?child .
}
```

Replace `wd:Q1234567` with the actual DBpedia identifier for Soe Min Wimala Dewi and `wd:Q654321` with the identifier for Narapati I of Ava. The query retrieves the father of Soe Min Wimala Dewi and Narapati I's child, confirming that Soe Min Wimala Dewi is indeed the answer.",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
161,64,test,"Give me the military force of Spanish Civil War and commander in the force, that is an event, of the figure known as El Director and military force of the force, that is a societal event and an event and a military conflict, of the person decedent at Francoist Spain.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Francoist_Spain> . ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v1 <http://dbpedia.org/ontology/commander> ?v0 . ?v2 <http://dbpedia.org/ontology/commander> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://xmlns.com/foaf/0.1/nick> ""El Director""@en . ?v1 <http://dbpedia.org/ontology/commander> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce ?commander ?event WHERE {
  # Identify Francisco Franco as El Director and his death during Francoist Spain
  dbr:Francisco_Franco dbo:nationality dbr:Spain ;
                       dbo:deathPlace dbr:Madrid, Spain ;
                       dbo:causeOfDeath dbr:Cancer_of_the_colon .

  # Identify the Spanish Civil War as a societal event and military conflict
  dbr:Spanish_Civil_War a dbo:MilitaryConflict, dbo:SocietalEvent .

  # Identify the Nationalist faction as the military force of Francisco Franco during the Spanish Civil War
  ?militaryForce dbo:commander dbr:Francisco_Franco ;
                dbo:partOfMilitaryConflicts dbr:Spanish_Civil_War .

  # The commander of this military force is Francisco Franco himself
  ?commander rdfs:label ""Francisco Franco""@en .
  
  # Link the event to the societal and military context
  ?event a dbo:MilitaryConflict, dbo:SocietalEvent ;
         dbo:partOfMilitaryConflicts dbr:Spanish_Civil_War .

}
```",7,11,8,3,3,3,3,71,0,0,32,0,0.0,0
92,49,test,"Give me the band member of the reference, that is an artist, to Nevermore and band of the person born as the birth name of Joseph Michael.","SELECT ?result WHERE { ?v2 <http://xmlns.com/foaf/0.1/name> ""Nevermore""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?result <http://dbpedia.org/ontology/bandMember> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Joseph_Michael> <http://dbpedia.org/property/birthName> ?v0 . }","```sparql
# Query to find members of Nevermore who are also artists
SELECT ?member WHERE {
  ?band dbr:Nevermore .
  ?band dbo:bandMember ?member .
  OPTIONAL { ?member dbo:occupation dbp:Artist . }
  FILTER EXISTS { ?member dbo:occupation dbp:Artist . }
}

# Query to find the band associated with a person born as Joseph Michael
SELECT ?person ?band WHERE {
  ?person foaf:name ""Joseph Michael"" .
  ?person dbo:birthName ""Joseph Michael"" .
  ?person dbo:memberOf ?band .
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
701,59,test,Give me the parent of the child of the child of Seti I and parent of the child of the spouse of Amun-her-khepeshef.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/ontology/child> ?v5 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seti_I> . ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v5 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Amun-her-khepeshef> <http://dbpedia.org/ontology/spouse> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commonEntity WHERE {
  # Seti I's child (Child A)
  ?childA dbo:parent dbr:Seti_I .
  
  # Child B is the child of Child A
  ?childB dbo:parent ?childA .

  # Parent of Child B is Child A
  BIND(?childA AS ?parentOfChildB)

  # Amun-her-khepeshef's spouse (Spouse C)
  ?spouseC dbo:spouse dbr:Amun-her-khepeshef .
  
  # Child D is the child of Spouse C
  ?childD dbo:parent ?spouseC .

  # Parent of Child D is Spouse C
  BIND(?spouseC AS ?parentOfChildD)

  # Find common entity between Child A and Spouse C
  VALUES (?commonEntity) {
    (?parentOfChildB)
    (?parentOfChildD)
  }
}
```",6,6,7,3,2,3,3,71,0,0,1,0,0.0,0
378,47,test,"Give me the war of the commander in the reference, that is a military conflict, to Peninsular War and war of the person born as Carl Pontus Gahn.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/property/birthName> ""Carl Pontus Gahn""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Peninsular War""@en . ?v0 <http://dbpedia.org/ontology/commander> ?v4 . }","```sparql
# Query to get information about the Peninsular War
SELECT ?peninsularWar WHERE {
  ?peninsularWar dbo:wikiPageRedirects dbpedia:Peninsular_War .
}

# Query to get wars associated with Carl Pontus Gahn
SELECT DISTINCT ?war WHERE {
  ?gahn foaf:name ""Carl Pontus Gahn""@en .
  ?gahn dbo:nationality dbr:Sweden .
  ?gahn dbo:dateOfBirth ?dob .
  ?gahn dbo:dateOfDeath ?dod .
  ?gahn dbo:occupation dbr:Military_person .
  ?gahn dbo:participatedIn ?war .
}

# Query to find common war
SELECT DISTINCT ?commonWar WHERE {
  VALUES ?peninsularWar { <http://dbpedia.org/resource/Peninsular_War> }
  ?gahn foaf:name ""Carl Pontus Gahn""@en .
  ?gahn dbo:participatedIn ?war .
  FILTER(?war = ?peninsularWar)
}
```",5,6,6,3,2,3,3,71,0,0,2,0,0.0,0
701,71,test,"Give me the parent of the child of the spouse of Amun-her-khepeshef and parent of the child of the child of Seti I and spouse of the father of the commander, that is a royalty, in Battle of Perire.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seti_I> . <http://dbpedia.org/resource/Amun-her-khepeshef> <http://dbpedia.org/ontology/spouse> ?v1 . ?v5 <http://dbpedia.org/property/father> ?v4 . ?result <http://dbpedia.org/ontology/child> ?v5 . ?v1 <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/ontology/spouse> ?v8 . ?v7 <http://dbpedia.org/property/father> ?v8 . <http://dbpedia.org/resource/Battle_of_Perire> <http://dbpedia.org/ontology/commander> ?v7 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?parent
WHERE {
  # Step 1: Find Amun-her-khepeshef's spouse
  ?amunherkhepeshef dbo:spouse ?spouse .
  FILTER(STR(?amunherkhepeshef) = ""Amun-her-khepeshef"")

  # Step 2: Find the child of Amun-her-khepeshef's spouse
  ?spouse dbo:child ?child1 .

  # Step 3: Identify Seti I's child and then that child's child
  ?setiI dbo:child ?childOfSeti .
  FILTER(STR(?setiI) = ""Seti_I"")
  
  ?childOfSeti dbo:child ?grandChildOfSeti .

  # Step 4: Find the parent of this grandchild
  ?parent2 dbo:spouse ?grandChildOfSeti .

  # Step 5: Identify the commander related to Battle of Perire
  ?battle dbp:commander ?commander .
  FILTER(STR(?battle) = ""Battle_of_Perire"")

  # Step 6: Find the father of this commander and his spouse
  ?father dbo:child ?commander .
  
  ?father dbo:spouse ?spouseOfFather .

  # Step 7: Determine the royalty among these connections
  FILTER((STR(?parent) = STR(?parent2)) && (dbo:royalty ?parent || dbo:royalty ?parent2))

  # Combine relationships to find the desired parent
  VALUES ?parent { ?child1 ?grandChildOfSeti }
}
```",9,10,10,3,3,3,3,71,0,0,1,0,0.0,0
92,61,test,"Give me the band of the person born as the birth name of Joseph Michael and associated musical artist of the person born, that is an artist, as the actor of Return to Nuke 'Em High Volume 1.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> ?v3 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Return_to_Nuke_'Em_High_Volume_1> <http://dbpedia.org/property/starring> ?v0 . <http://dbpedia.org/resource/Joseph_Michael> <http://dbpedia.org/property/birthName> ?v1 . ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v5 <http://dbpedia.org/property/birthName> ?v0 . ?v3 <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
# Query to get the band of Joseph Michael (Joe Satriani)
SELECT ?band WHERE {
  wd:Q1234 wdt:P106 wd:Q33999; # Joe Satriani is a musician
  wdt:P175 ?band.             # P175 is the musical genre or band associated with an artist
}

# Query to get the actor of ""Return to Nuke 'Em High Volume 1""
SELECT ?actor WHERE {
  wd:Q1234567 wdt:P161 ?actor. # Q1234567 represents ""Return to Nuke 'Em High Volume 1"" and P161 is a cast member
}

# Query to get the musical artist associated with Dee Wallace (assuming she's identified as an actor)
SELECT ?musicArtist WHERE {
  wd:Q12345 wdt:P106 wd:Q33999; # Dee Wallace is an actress
  wdt:P175 ?musicArtist.        # P175 for her musical genre or band
}
```

Note: The actual DBpedia IDs (e.g., Q1234, Q1234567) need to be replaced with the correct identifiers for Joe Satriani and ""Return to Nuke 'Em High Volume 1"" respectively.",6,7,7,3,2,3,3,71,0,0,1,0,0.0,0
701,58,test,"Give me the parent of the child of Ramesses II and parent of Meritamen and spouse of the father of the commander, that is a royalty, in Battle of Perire.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/ontology/child> ?v5 . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Battle_of_Perire> <http://dbpedia.org/ontology/commander> ?v1 . ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ramesses_II> . <http://dbpedia.org/resource/Meritamen> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
# Step 1: Find a child of Ramesses II who is also related to Meritamen
SELECT ?child WHERE {
    ?ramesses2 dbo:spouse ?wife .
    ?ramesses2 dbo:child ?child .
    ?meritamen dbo:parent ?child .
}

# Step 2: Find the parent of this child
SELECT ?parent WHERE {
    VALUES ?child { <http://dbpedia.org/resource/Child_of_Ramesses_II> } # Replace with actual URI from step 1
    ?child dbo:parent ?parent .
}

# Step 3: Identify commanders in the Battle of Perire and their fathers' spouses
SELECT DISTINCT ?spouse WHERE {
    ?battle dbo:commander ?commander .
    FILTER(STR(?battle) = ""Battle_of_Perire"") # Replace with actual URI if available
    ?commander dbo:father ?father .
    ?father dbo:spouse ?spouse .
}

# Step 4: Ensure the person is royalty
SELECT DISTINCT ?person WHERE {
    VALUES ?person { <http://dbpedia.org/resource/Parent_of_Child> } # Replace with actual URI from step 2
    ?person rdf:type dbo:Monarch .
}
```

Note: The above SPARQL queries are structured to guide the process. You will need to replace placeholder URIs (like `<http://dbpedia.org/resource/Child_of_Ramesses_II>`) with actual URIs obtained from intermediate query results.",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
251,24,test,"Give me the administration of the ruling party, that is a political party and an organisation, in Sicily and death place of the author of The Twelve Abbots of Challant.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. <http://dbpedia.org/resource/Sicily> <http://dbpedia.org/property/leaderParty> ?v2 . <http://dbpedia.org/resource/The_Twelve_Abbots_of_Challant> <http://dbpedia.org/property/author> ?v0 . ?result <http://dbpedia.org/property/leaderParty> ?v2 . ?v0 <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
# Query to find the administration of the ruling party in Sicily
SELECT ?party ?administration WHERE {
  ?s dcterms:isPartOf <http://dbpedia.org/resource/Sicily> .
  ?s dbo:politicalParty ?party .
  ?party dbo:head ?leader .
  OPTIONAL { ?party dbo:administration ?administration }
}

# Query to find the death place of Bartolomeo Sacchi (Placido)
SELECT ?deathPlace WHERE {
  <http://dbpedia.org/resource/Placido_(writer)> dbo:placeOfBirth ?birthPlace ;
                                                     dbo:deathPlace ?deathPlace .
}
```",4,6,5,2,2,2,3,28,0,0,1,0,0.0,0
994,45,test,"Give me the associated musical artist of Red Tide (band) and associated musical artist of S.A. Slayer and band member of the person born, that is a musical artist, as the persona of Don Dokken.",SELECT ?result WHERE { <http://dbpedia.org/resource/S.A._Slayer> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Don_Dokken> <http://xmlns.com/foaf/0.1/givenName> ?v3 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Red_Tide_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?associatedArtistRedTide ?associatedArtistSASlayer ?dokkenBandMember ?donDokken WHERE {
  # Associated musical artist of Red Tide (band)
  OPTIONAL { 
    dbr:Red_Tide_(band) dbo:member ?person1 .
    ?person1 dbo:occupation dbr:Musical_artist .
    BIND(?person1 AS ?associatedArtistRedTide)
  }

  # Associated musical artist of S.A. Slayer
  OPTIONAL {
    dbr:S_A_Slayer dbo:member ?person2 .
    ?person2 dbo:occupation dbr:Musical_artist .
    BIND(?person2 AS ?associatedArtistSASlayer)
  }
  
  # Band members of Dokken (Don Dokken's band)
  OPTIONAL {
    dbr:Dokken dbo:bandMember ?dokkenBandMember .
    ?dokkenBandMember dbo:occupation dbr:Musical_artist .
  }

  # Don Dokken as a musical artist
  BIND(dbr:Don_Dokken AS ?donDokken)
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
16,54,test,Give me the spouse of the person born as Ted Martin McGinley and professional in the profession of the actor of Unnatural (TV series) and person born as Georgeanne Marie Rice.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Unnatural_(TV_series)> <http://dbpedia.org/property/starring> ?v0 . ?v3 <http://dbpedia.org/property/birthName> ""Ted Martin McGinley""@en . ?result <http://dbpedia.org/property/occupation> ?v5 . ?result <http://dbpedia.org/property/birthName> ""Georgeanne Marie Rice""@en . ?v0 <http://dbpedia.org/property/occupation> ?v5 . ?v3 <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
SELECT ?spouse WHERE {
  dbpedia:ted_mcginley dbo:spouse ?spouse .
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
994,64,test,"Give me the associated musical artist of the associated musical artist of the reference to Watchtower and band member of the person born, that is a musical artist, as the persona of Don Dokken and associated musical artist of Red Tide (band).","SELECT ?result WHERE { <http://dbpedia.org/resource/Red_Tide_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v4 <http://xmlns.com/foaf/0.1/name> ""Watchtower""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . <http://dbpedia.org/resource/Don_Dokken> <http://xmlns.com/foaf/0.1/givenName> ?v5 . ?v0 <http://dbpedia.org/property/birthName> ?v5 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
# Step 1: Find a band member of Watchtower
SELECT ?member WHERE {
    wd:Q1234568 dbo:bandMember ?member .
}

# Step 2: Find an associated musical artist with John Bush (assuming Q1234569 is his DBpedia ID)
SELECT ?associatedArtist WHERE {
    wd:Q1234569 dbo:associatedMusicalArtist ?associatedArtist .
}

# Step 3: Identify Don Dokken as a persona and musical artist
SELECT ?dokken WHERE {
    wd:Q9876543 rdf:type dbo:MusicalArtist ;
                rdfs:label ""Don Dokken""@en .
}

# Step 4: Find an associated musical artist with Don Dokken
SELECT ?associatedArtist WHERE {
    wd:Q9876543 dbo:associatedMusicalArtist ?associatedArtist .
}

# Step 5: Find an associated musical artist with Red Tide (assuming Q2345678 is its DBpedia ID)
SELECT ?redTideMember WHERE {
    wd:Q2345678 dbo:bandMember ?redTideMember .
}

# Step 6: Find an associated musical artist with George Lynch (assuming Q3456789 is his DBpedia ID)
SELECT ?finalArtist WHERE {
    wd:Q3456789 dbo:associatedMusicalArtist ?finalArtist .
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
161,63,test,"Give me the military force of the force, that is a societal event and an event and a military conflict, of the person decedent at Francoist Spain and commander in the force, that is an event, of Emilio Mola and military force of the force, that is a societal event and a military conflict, of Francisco Largo Caballero.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/commander> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v4 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Francoist_Spain> . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v6 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v6 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Emilio_Mola> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?militaryForce1 ?militaryForce2 ?decedent WHERE {
  # Find the military force associated with Emilio Mola
  ?eventMola a dbo:MilitaryConflict ;
            dbo:commander dbr:Emilio_Mola .
  ?eventMola dbo:militaryForce ?militaryForce1 .

  # Find the military force associated with Francisco Largo Caballero
  ?eventCaballero a dbo:MilitaryConflict ;
                 dbo:participant dbr:Francoist_Spain ;
                 dbo:militaryForce ?militaryForce2 .
  
  # Ensure both forces are societal events and military conflicts
  FILTER (?militaryForce1 != ?militaryForce2)
  
  # Find the decedent who was part of both forces during Francoist Spain
  ?decedent dbo:deathPlace dbr:Francoist_Spain ;
           dbo:militaryService ?service .
  ?service dbo:militaryForce ?militaryForce1 ;
           dbo:militaryForce ?militaryForce2 .

}
```",7,13,8,3,3,3,3,71,0,0,32,0,0.0,0
54,69,test,"Give me the parent of the child of Narapati I of Ava and child of the father of the child of Thinkhaya of Pagan and predecessor of the child, that is an office holder and a royalty, of the reference to Thihapate of Mohnyin.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/child> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://xmlns.com/foaf/0.1/name> ""Thihapate of Mohnyin""@en . ?v4 <http://dbpedia.org/property/father> ?v3 . ?v7 <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v7 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Narapati_I_of_Ava> . ?result <http://dbpedia.org/ontology/successor> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  # Narapati I of Ava's parent
  OPTIONAL { 
    ?narapatiI dbo:child dbr:Narapati_I_of_Ava .
    ?narapatiI dbo:parent ?parentNarapati .
  }

  # Thinkhaya of Pagan's child and predecessor
  OPTIONAL {
    ?thinkhaya dbo:child ?thinkhayasChild .
    ?thinkhayasChild dbo:parent ?thinkhayasGrandparent .
    ?thinkhayasGrandparent rdfs:label ""Thinkhaya of Pagan""@en .
    
    # Predecessor of Thinkhaya's grandchild
    OPTIONAL {
      ?predecessor dbo:succeededBy ?thinkhayasChild .
      ?predecessor rdfs:label ?labelPredecessor .
    }
  }

  # Thihapate of Mohnyin connection
  OPTIONAL {
    ?thihapate dbo:officeHolder ?office .
    ?thihapate dbo:royalty ?royalty .
    ?thihapate rdfs:label ""Thihapate of Mohnyin""@en .
    
    # Find a common figure
    FILTER(?parentNarapati = ?thinkhayasChild || ?parentNarapati = ?predecessor)
  }

  # Return the parent that fits all criteria
  VALUES ?parent { ?parentNarapati }
}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
801,65,test,"Give me the associated musical artist of the writer, that is a musical artist and an artist, of 40 Dayz & 40 Nightz and producer of the work, that is a musical work and a song and a work, of the professional, that is a musical artist, in Rapper and professional in the alter ego of The Shadow.","SELECT ?result WHERE { ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v4 . ?v0 <http://dbpedia.org/property/occupation> ""Rapper""@en . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/40_Dayz_&_40_Nightz> <http://dbpedia.org/property/writer> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v6 <http://dbpedia.org/ontology/producer> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v6 <http://dbpedia.org/property/writer> ?v0 . }","```sparql
SELECT ?artist WHERE {
  ?album dcterms:title ""40 Dayz & 40 Nightz"" .
  ?album dbo:artist ?artist .
  ?artist rdf:type dbo:MusicalArtist .
  ?artist dbo:profession dbo:Rapper .
  ?artist foaf:name ""DMX""@en .
}
```",7,13,8,3,3,3,3,71,0,0,8,0,0.0,0
44,8,test,"Give me the band member of Undertow (band) and band member of the associated musical artist, that is a group and an organisation, of Queensrÿche.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Undertow_(band)> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. <http://dbpedia.org/resource/Queensrÿche> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
# Query for a band member of Undertow
SELECT ?member WHERE {
  ?band dbr:Undertow .
  ?band dbo:bandMember ?member .
}

UNION

# Query for a band member from an associated group and organization related to Queensrÿche
SELECT ?associatedGroupMember WHERE {
  ?queensryche dbr:Queensrÿche .
  ?queensryche dbo:associatedBandOrMusicalArtist ?associatedEntity .
  ?associatedEntity rdf:type dbp:MusicalGroup .
  ?associatedEntity rdf:type dbp:Organization .
  ?associatedEntity dbo:bandMember ?associatedGroupMember .
}
```",3,5,4,2,2,2,2,9,0,0,1,0,0.0,0
92,47,test,"Give me the band member of the reference, that is an artist, to Nevermore and associated musical artist of the person born, that is an artist, as the actor of Return to Nuke 'Em High Volume 1.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://dbpedia.org/property/birthName> ?v0 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v2 <http://xmlns.com/foaf/0.1/name> ""Nevermore""@en . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Return_to_Nuke_'Em_High_Volume_1> <http://dbpedia.org/property/starring> ?v0 . }","```sparql
# Find a band member of Nevermore who is also an artist
SELECT ?member WHERE {
  ?band dcterms:isPartOf dbpedia:Nevermore ;
        dbo:bandMember ?member .
  ?member dbo:occupation dbc:Musicians_from_Washington_(state) .
}

UNION

# Find the actor in ""Return to Nuke 'Em High Volume 1"" who is also a musical artist
SELECT ?actor WHERE {
  dbpedia:""Return_to_Nuke_'Em_High_Volume_1""@en dbo:starring ?actor .
  ?actor dbo:occupation dbc:Musicians .
}

# Find association between the two individuals as musical artists
SELECT DISTINCT ?member ?actor WHERE {
  # Member of Nevermore who is an artist
  ?band dcterms:isPartOf dbpedia:Nevermore ;
        dbo:bandMember ?member .
  ?member dbo:occupation dbc:Musicians_from_Washington_(state) .

  # Actor in ""Return to Nuke 'Em High Volume 1"" who is a musical artist
  dbpedia:""Return_to_Nuke_'Em_High_Volume_1""@en dbo:starring ?actor .
  ?actor dbo:occupation dbc:Musicians .

  # Check for any association between the two as musical artists
  OPTIONAL { ?member dbo:associatedBandMember ?actor . }
  OPTIONAL { ?actor dbo:associatedBandMember ?member . }
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
378,57,test,"Give me the war of Carl Pontus Gahn and war of the commander in the reference, that is a military conflict, to Peninsular War and claim to fame of the commander in Great Siege of Gibraltar.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/battle> ?result . ?v3 <http://dbpedia.org/ontology/knownFor> ?result . <http://dbpedia.org/resource/Great_Siege_of_Gibraltar> <http://dbpedia.org/ontology/commander> ?v3 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Peninsular War""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/ontology/commander> ?v5 . }","```sparql
# Query for the war involving Carl Pontus Gahn
SELECT ?war WHERE {
  ?person rdfs:label ""Carl Pontus Gahn""@en .
  ?person dbo:militaryConflict ?war .
}

UNION

# Query for the commander involved in both the Peninsular War and the Great Siege of Gibraltar
SELECT DISTINCT ?commander WHERE {
  ?commander dbo:participatedInMilitaryConflicts ?peninsularWar ;
             dbo:participatedInMilitaryConflicts ?gibraltarSiege .
  
  ?peninsularWar rdfs:label ""Peninsular War""@en .
  ?gibraltarSiege rdfs:label ""Great Siege of Gibraltar""@en .
}
```",6,7,7,3,3,3,3,71,0,0,2,0,0.0,0
801,51,test,"Give me the associated musical artist of the writer, that is a musical artist and an artist, of the album, that is a musical work and a work, of What U See Is What U Get and producer of the work, that is a musical work and a song and a work, of 50 Cent.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/50_Cent> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v1 <http://dbpedia.org/property/writer> ?v2 . ?v4 <http://dbpedia.org/ontology/producer> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. <http://dbpedia.org/resource/What_U_See_Is_What_U_Get> <http://dbpedia.org/ontology/album> ?v1 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
# Step 1: Find the album ""What U See Is What U Get"" and its associated artist
SELECT ?album ?artist WHERE {
  ?album dcterms:title ""What U See Is What U Get""@en .
  ?album dbo:artist ?artist .
}

# Step 2: Identify writer(s) of this album who are also musical artists and artists
SELECT DISTINCT ?writer WHERE {
  ?album dbo:artist ?writer .
  ?writer rdf:type dbo:MusicalArtist .
  ?writer rdf:type dbo:Artist .
}

# Step 3: Find the work produced by this writer for 50 Cent that is a song
SELECT DISTINCT ?work WHERE {
  ?writer dbo:producedWork ?work .
  ?work dbo:artist ""50 Cent""@en .
  ?work rdf:type dbo:Songs .
  ?work rdf:type dbo:MusicalWorks .
}

# Step 4: Identify the producer of this work
SELECT DISTINCT ?producer WHERE {
  ?work dbo:producer ?producer .
}
```",5,12,6,3,2,3,3,71,0,0,1,0,0.0,0
404,58,test,"Give me the parent of the child, that is a royalty, of Ernest Augustus, Duke of Brunswick and child of the father of the spouse of Princess Victoria Louise of Prussia and spouse of Princess Victoria Louise of Prussia.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?v1 . ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v1 <http://dbpedia.org/property/father> ?v2 . <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/ontology/child> ?v5 . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
SELECT ?parent WHERE {
  # Step 1: Identify Ernest Augustus, Duke of Brunswick
  ?ernestAugustus dbr:Ernest_Augustus,_Duke_of_Brunswick .

  # Step 2: Find his child who is royalty
  ?child dbo:spouse ?royalty .
  ?child dbo:parent ?ernestAugustus .
  
  # Step 3: Determine the spouse of Princess Victoria Louise of Prussia
  ?princessVictoriaLouise dbr:Princess_Victoria_Louise_of_Prussia .
  ?spouseOfPrincessVictoriaLouise dbo:spouse ?princessVictoriaLouise .

  # Step 4: Identify the father of this spouse
  ?fatherOfSpouse dbo:child ?spouseOfPrincessVictoriaLouise .

  # Step 5: Find a child of this father
  ?child2 dbo:parent ?fatherOfSpouse .
  
  # Step 6: Match the royalty from step 2 with the child from step 5
  FILTER (?child = ?child2)

  # Step 7: Identify the parent of this matched child
  ?parent dbo:spouse ?child .
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
767,29,test,Give me the reference to  and entity in Baden-Württemberg and alma mater of the administration of George K. Nash.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/state> <http://dbpedia.org/resource/Baden-Württemberg> . ?v3 <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://xmlns.com/foaf/0.1/name> """"@en . ?v3 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/George_K._Nash> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?entityInBadenWuerttemberg ?almaMater ?administrationRole WHERE {
  # Find George K. Nash
  ?nash a dbo:Person ;
        foaf:name ""George K. Nash""@en .

  OPTIONAL {
    # Look for an entity in Baden-Württemberg related to him
    ?relatedEntity dbo:location dbr:Baden-Württemberg ;
                  dbo:associatedWith ?nash .
    BIND(?relatedEntity AS ?entityInBadenWuerttemberg)
  }

  OPTIONAL {
    # Find his alma mater
    ?nash dbo:almaMater ?almaMater .
  }

  OPTIONAL {
    # Identify any administration role he held
    ?role a dbo:Position ;
          dbo:heldBy ?nash ;
          dbp:name ?administrationRole .
  }
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
232,57,test,"Give me the native of the residence, that is a settlement and British, of Sylvie Bermann and actor of the claim to fame, that is a film and a military conflict, of the professional in Actor, narrator and producer and child of Jon Pertwee.","SELECT ?result WHERE { <http://dbpedia.org/resource/Sylvie_Bermann> <http://dbpedia.org/property/residence> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v5 <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://dbpedia.org/ontology/knownFor> ?v5 . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/ontology/child> ?result . ?v0 <http://dbpedia.org/property/occupation> ""Actor, narrator and producer""@en . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. }","```sparql
# Step 1: Identify the professional who is Jon Pertwee's child and involved in film and military conflict.
SELECT ?actor WHERE {
  ?actor dbo:parent dbr:Jon_Pertwee ;
         rdf:type dbo:Actor .
}

# Assuming we identify the actor as ""Carole Ann Ford"" (hypothetical example for reasoning)

# Step 2: Find her claim to fame involving a film and military conflict.
SELECT ?film WHERE {
  ?film dbo:actor dbr:Carole_Ann_Ford ;
        rdf:type dbo:Film .
  FILTER EXISTS { ?film dbo:genre dbr:Military_Conflict }
}

# Assuming we identify the film as ""Doctor Who"" (hypothetical example for reasoning)

# Step 3: Find Sylvie Bermann's British settlement residence.
SELECT ?residence WHERE {
  dbr:Sylvie_Bermann dbo:residence ?residence .
  ?residence rdf:type dbo:Settlement ;
             dbo:country dbr:United_Kingdom .
}

# Assuming we identify the residence as ""London"" (hypothetical example for reasoning)

# Step 4: Find the native place of this British settlement.
SELECT ?native WHERE {
  ?residence dbo:nativePlace ?native .
}
```",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
801,64,test,"Give me the associated musical artist of the writer, that is a musical artist and an artist, of the album, that is a musical work and a work, of What U See Is What U Get and professional in the alter ego of the true self of The Shadow and producer of Westside Story (song).","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/writer> ?v1 . <http://dbpedia.org/resource/What_U_See_Is_What_U_Get> <http://dbpedia.org/ontology/album> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. <http://dbpedia.org/resource/Westside_Story_(song)> <http://dbpedia.org/ontology/producer> ?result . ?v3 <http://xmlns.com/foaf/0.1/givenName> ""The Shadow""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://dbpedia.org/property/alterEgo> ?v2 . }","```sparql
SELECT ?artist WHERE {
  ?album dcterms:title ""What U See Is What U Get"" .
  ?album dbo:performer ?artist .
  ?artist foaf:name ?name .
  FILTER EXISTS { 
    ?work dbo:producer ?artist ;
          dbo:title ""Westside Story (song)"" .
  }
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
281,63,test,"Give me the entity in the birth place, that is a country, of Bob Heffron and war of the awardee of the award of Jonathon Band and war of the profession, that is a military unit, of Heather Roy.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> ?v6 . <http://dbpedia.org/resource/Bob_Heffron> <http://dbpedia.org/ontology/birthPlace> ?v6 . <http://dbpedia.org/resource/Heather_Roy> <http://dbpedia.org/property/occupation> ?v2 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Jonathon_Band> <http://dbpedia.org/property/awards> ?v4 . ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v3 <http://dbpedia.org/property/awards> ?v4 . ?v2 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
SELECT DISTINCT ?entity WHERE {
  # Bob Heffron's birthplace that is a country
  ?bob dbo:birthPlace ?birthPlace .
  FILTER (isBlank(?birthPlace) && ?birthPlace dbp:type dbr:COUNTRY)
  
  # Jonathon Band's award and associated war
  ?jonathon dbo:award ?award .
  ?award dbo:associatedWar ?war .

  # Heather Roy's profession that is a military unit
  ?heather dbo:profession ?profession .
  FILTER (isBlank(?profession) && ?profession dbp:type dbr:MILITARY_UNIT)

  # Find the entity in the birth place of Bob Heffron, war of Jonathon Band's award, and profession of Heather Roy
  ?entity rdfs:label ?label .
  FILTER (
    ?birthPlace = ?entity ||
    ?war = ?entity ||
    ?profession = ?entity
  )
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
767,56,test,"Give me the entity in the administration, that is a settlement, of Green and reference to the alter ego of the persona, that is a fictional character, of Matthew Burland and alma mater of Carl L. Nippert.","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v1 . ?v0 <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://dbpedia.org/ontology/state> ?v2 . <http://dbpedia.org/resource/Carl_L._Nippert> <http://dbpedia.org/ontology/almaMater> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://dbpedia.org/property/leaderParty> ""Green""@en . ?v0 <http://dbpedia.org/property/alterEgo> ""Matthew Burland""@en . }","```sparql
SELECT ?entity WHERE {
  # Step 1: Find Matthew Burland's fictional alter ego
  ?fictionalCharacter dbo:creator dbr:Matthew_Burland .
  
  # Step 2: Find Carl L. Nippert's alma mater
  ?nippert dbo:almaMater ?almaMater .

  FILTER(?nippert = dbr:C._L._Nippert)

  # Step 3: Find a settlement in an administration related to Green
  ?settlement dbo:partOfAdministrativeTerritory ?administration .
  ?administration rdfs:label ""Green""@en .

  # Combine the elements
  ?entity rdf:type dbo:Settlement ;
          dbo:partOfAdministrativeTerritory ?administration ;
          dbo:relatedFictionalCharacter ?fictionalCharacter ;
          dbo:relatedAlmaMater ?almaMater .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
9,61,test,"Give me the alma mater of the awardee of the reference, that is an award, to Royal Medals and figure known as the nickname of the entity, that is an organisation and an educational institution, in Northern Ireland.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v5 <http://dbpedia.org/ontology/almaMater> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://dbpedia.org/property/nickname> ?v3 . ?v5 <http://dbpedia.org/property/awards> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Northern_Ireland> . ?result <http://dbpedia.org/property/nickname> ?v3 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Royal Medals""@en . }","```sparql
SELECT ?almaMater WHERE {
  # Step 1: Identify educational institutions in Northern Ireland
  ?university dbo:location dbr:Northern_Ireland .
  
  # Step 2: Find the nickname of the university
  OPTIONAL { ?university rdfs:label ?nickname . FILTER(CONTAINS(LCASE(?nickname), ""nickname"")) }
  
  # Step 3: Identify awards related to Royal Medals
  ?award dbo:relatedAward dbr:Royal_Medal .
  
  # Step 4: Find the awardee of this award
  ?awardee dbo:receivedAward ?award .
  
  # Step 5: Determine the alma mater of the awardee
  ?awardee dbo:almaMater ?university .
  
  # Retrieve the alma mater's name
  ?almaMater rdfs:label ?almaMaterLabel .
}
```",6,9,7,3,2,3,3,71,0,0,1,0,0.0,0
378,49,test,"Give me the war of the person born as Carl Pontus Gahn and claim to fame of the commander in the war, that is a military conflict and a societal event and an event, of Thomas Trigge.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://dbpedia.org/ontology/commander> ?v1 . ?v2 <http://dbpedia.org/property/birthName> ""Carl Pontus Gahn""@en . ?v1 <http://dbpedia.org/ontology/knownFor> ?result . <http://dbpedia.org/resource/Thomas_Trigge> <http://dbpedia.org/ontology/battle> ?v0 . }","```sparql
# Query for Carl Pontus Gahn's involvement in a war
SELECT ?war WHERE {
  ?person rdfs:label ""Carl Pontus Gahn""@en .
  ?person dbo:birthName ""Carl Pontus Gahn"" .
  ?person dbo:militaryConflict ?war .
}

UNION

# Query for Thomas Trigge's role as a commander in a war
SELECT ?war WHERE {
  ?person rdfs:label ""Thomas Trigge""@en .
  ?person dbo:role ""Commander""@en ;
          dbo:militaryConflict ?war .
}
```",5,8,6,3,2,3,3,71,0,0,2,0,0.0,0
996,18,test,Give me the force of the awardee of the elevation of Lac d'Avoriaz and entity in the award of Ekrem Akurgal.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> ?v2 . ?result <http://dbpedia.org/ontology/place> ?v3 . <http://dbpedia.org/resource/Lac_d'Avoriaz> <http://dbpedia.org/ontology/elevation> ?v1 . ?v2 <http://dbpedia.org/property/awards> ?v1 . <http://dbpedia.org/resource/Ekrem_Akurgal> <http://dbpedia.org/property/awards> ?v3 . },"```sparql
# Query to find the elevation of Lac d'Avoriaz
SELECT ?elevation WHERE {
  wd:Q123456 rdfs:label ""Lac d'Avoriaz""@en .
  wd:Q123456 dbo:elevationAboveSeaLevel ?elevation .
}

# Query to find Ekrem Akurgal's award
SELECT ?award WHERE {
  wd:Q654321 foaf:name ""Ekrem Akurgal""@en .
  wd:Q654321 dbo:receivedAward ?award .
}

# Assuming we have identified the elevation and award, we now look for entities related to both
# This part is more speculative due to the ambiguity of ""force"" in this context

# Query to find entities related to the elevation (e.g., geographical or thematic connections)
SELECT DISTINCT ?entity WHERE {
  wd:Q123456 dbo:elevationAboveSeaLevel ?elevation .
  ?entity wdt:P31/wdt:P279* wd:Q123456 . # Entities of type Lac d'Avoriaz
}

# Query to find entities related to the award and ""force""
SELECT DISTINCT ?entity WHERE {
  ?award dbo:recipient wd:Q654321 .
  ?entity wdt:P31/wdt:P279* ?award . # Entities of type Award
  OPTIONAL { ?entity wdt:P31/wdt:P279* wd:Q1234567 } # Assuming Q1234567 is a concept related to ""force""
}
```

Note: The above queries assume certain Wikidata IDs (`wd:Q123456` for Lac d'Avoriaz and `wd:Q654321` for Ekrem Akurgal) which need to be replaced with the actual IDs. Additionally, the concept of ""force"" is interpreted as a placeholder (e.g., `wd:Q1234567`) that should be identified based on context.",5,5,6,3,2,3,2,20,0,0,4,0,0.0,0
328,55,test,"Give me the commander in the force of Ferenc Szálasi and leader of the office, that is a government agency, of Joseph Stalin and awardee of the award of Bruce Fraser, 1st Baron Fraser of North Cape.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Ferenc_Szálasi> . ?result <http://dbpedia.org/property/awards> ?v3 . <http://dbpedia.org/resource/Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape> <http://dbpedia.org/property/awards> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. <http://dbpedia.org/resource/Joseph_Stalin> <http://dbpedia.org/property/office> ?v2 . ?v5 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://dbpedia.org/ontology/leader> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person dbo:commanderOf dbr:Ferenc_Szálasi .
  ?person dbo:leaderOfOffice dbr:Joseph_Stalin .
  ?person dbo:awardeeOf dbr:Victoria_Cross .
}
```",6,7,7,2,3,3,3,71,0,0,1,0,0.0,0
959,32,test,"Give me the member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of Eiji Ōtsuka and native of the residence, that is a country, of Yōichi Masuzoe.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?result <http://dbpedia.org/ontology/team> ?v1 . ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . <http://dbpedia.org/resource/Yōichi_Masuzoe> <http://dbpedia.org/property/residence> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. <http://dbpedia.org/resource/Eiji_Ōtsuka> <http://dbpedia.org/ontology/almaMater> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?member WHERE {
  # Step 1: Find Eiji Ōtsuka's alma mater
  ?eiji dbo:almaMater ?university .
  FILTER (str(?eiji) = ""Eiji_Otsuka"")

  # Step 2: Ensure the university is in Japan and is a university/educational institution
  ?university dbo:country ?country ;
             rdf:type ?type .
  VALUES ?type { <http://dbpedia.org/ontology/University> <http://dbpedia.org/ontology/EducationalOrganization> }
  FILTER (str(?country) = ""Japan"")

  # Step 3: Find Yōichi Masuzoe's native country
  ?yoshi dbo:nativePlace ?nativeCountry .
  FILTER (str(?yoshi) = ""Yōichi_Masuzoe"")

  # Step 4: Find members of the university who are Japanese and from the same country as Yōichi Masuzoe
  ?member dbo:almaMater ?university ;
          dbo:nationality <http://dbpedia.org/resource/Japan> ;
          dbo:nativePlace ?nativeCountry .
}
```",4,9,5,2,2,3,3,71,0,0,84,0,0.0,0
232,60,test,"Give me the child of the person born as the birth name of Jon Pertwee and native of the residence, that is a settlement and British, of the native, that is a politician and an office holder, of France.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/France> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v0 <http://dbpedia.org/property/residence> ?v1 . <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/property/birthName> ?v3 . ?v2 <http://dbpedia.org/property/birthName> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. },"```sparql
# Step 1: Find Jon Pertwee's birth name
SELECT ?birthName WHERE {
  dbpedia:Jon_Pertwee dbo:birthName ?birthName .
}

# Step 2: Find Jon Pertwee's place of residence or origin
SELECT ?residence WHERE {
  dbpedia:Jon_Pertwee dbo:nativePlace ?residence .
}

# Step 3: Identify a British settlement related to the birth name
SELECT DISTINCT ?settlement WHERE {
  ?person dbo:birthName ?birthName .
  ?person dbo:nationality dbr:United_Kingdom .
  ?person dbo:residence ?settlement .
  FILTER(?settlement IN (dbpedia:London, dbpedia:Birmingham, dbpedia:Manchester)) # Example British settlements
}

# Step 4: Find a French politician associated with this settlement
SELECT DISTINCT ?politician WHERE {
  ?politician dbo:nationality dbr:France .
  ?politician dbo:officeHolder ?office .
  ?politician dbo:residence ?settlement .
  FILTER(?settlement = ?settlementFromStep3) # Use the result from Step 3
}

# Step 5: Find the child of this French politician
SELECT DISTINCT ?child WHERE {
  ?politician dbo:child ?child .
  FILTER(?politician = ?politicianFromStep4) # Use the result from Step 4
}
```",6,10,7,3,2,3,3,71,0,0,1,0,0.0,0
959,41,test,"Give me the native of the residence, that is a country, of Yōichi Masuzoe and member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of Eiji Ōtsuka and manager of 2013 Júbilo Iwata season.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v4 . <http://dbpedia.org/resource/Yōichi_Masuzoe> <http://dbpedia.org/property/residence> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Eiji_Ōtsuka> <http://dbpedia.org/ontology/almaMater> ?v2 . ?result <http://dbpedia.org/ontology/team> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. <http://dbpedia.org/resource/2013_Júbilo_Iwata_season> <http://dbpedia.org/ontology/manager> ?result . },"```sparql
SELECT ?nativeCountry WHERE {
  # Yōichi Masuzoe's residence country
  wd:Q123456 wdt:P19 ?residence.
  ?residence wdt:P17 ?countryResidence.

  # Eiji Ōtsuka's alma mater
  wd:Q654321 wdt:P69 ?almaMater.
  ?almaMater wdt:P17 wd:Q36. # Japan

  # Manager of 2013 Júbilo Iwata season
  wd:Q789012 wdt:P39 ?managerPosition.
  ?managerPosition wdt:P1619 wd:Q123456. # Alain Perrin managed Yōichi Masuzoe's team

  FILTER(?countryResidence = wd:Q36) # Japan
}
```

Note: The above SPARQL query uses placeholder Wikidata IDs (`wd:Q123456`, `wd:Q654321`, `wd:Q789012`) for Yōichi Masuzoe, Eiji Ōtsuka, and Alain Perrin respectively. These should be replaced with the actual Wikidata item identifiers.",5,10,6,2,3,3,3,71,0,0,1,0,0.0,0
492,31,test,Give me the commander in Franco-Hova Wars and person decedent at the work of the author of French Algeria.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/author> ?v1 . ?result <http://dbpedia.org/ontology/deathPlace> ?v0 . <http://dbpedia.org/resource/French_Algeria> <http://dbpedia.org/property/author> ?v1 . <http://dbpedia.org/resource/Franco-Hova_Wars> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?decedent WHERE {
  # Commander in Franco-Hova Wars
  ?commander a dbo:MilitaryPerson ;
             foaf:name ""Joseph Gallieni"" .

  # Person decedent at the work of Albert Camus (author associated with French Algeria)
  ?work dbo:author dbr:Albert_Camus ;
        dbo:subject dbr:Algeria .
  
  ?decedent a dbo:Person ;
            foaf:name ""Jacques de Fonscolombe"" .

  # Linking the decedent to Camus' work context
  OPTIONAL { ?work dbo:relatedDecedent ?decedent }
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
378,69,test,"Give me the war of the person born as the birth name of Carl Pontus Gahn and war of the commander in Peninsular War and claim to fame of the commander in the war, that is a military conflict and a societal event and an event, of Thomas Trigge.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/commander> ?v2 . <http://dbpedia.org/resource/Peninsular_War> <http://dbpedia.org/ontology/commander> ?v7 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v7 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Thomas_Trigge> <http://dbpedia.org/ontology/battle> ?v1 . ?v3 <http://dbpedia.org/property/birthName> ?v4 . ?v3 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/property/birthName> ?v4 . ?v2 <http://dbpedia.org/ontology/knownFor> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"```sparql
# Query to find Carl Pontus Gahn's birth name
SELECT ?birthName WHERE {
  ?person rdfs:label ""Carl Pontus Gahn""@en .
  ?person foaf:name ?birthName .
}

# Query to find the war associated with Carl Pontus Gahn (assuming we have his birth name)
PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?war WHERE {
  ?person rdfs:label ""Carl Pontus Gahn""@en .
  ?person dbo:nationality ?nationality .
  ?event dbo:participant ?person ;
         a dbo:MilitaryConflict .
  ?event rdfs:label ?war .
}

# Query to find the commander in the Peninsular War
SELECT ?commander WHERE {
  ?war rdfs:label ""Peninsular War""@en .
  ?war dbo:commander ?commander .
}

# Query to find the claim to fame of the commander in the Peninsular War
SELECT ?claimToFame WHERE {
  ?commander dbo:occupation ?occupation ;
             dbo:knownFor ?claimToFame .
}

# Query to find Thomas Trigge's claim to fame involving a military conflict and societal event
SELECT ?event WHERE {
  ?person rdfs:label ""Thomas Trigge""@en .
  ?person dbo:knownFor ?event .
  FILTER EXISTS { ?event dbo:type ?type . 
                 VALUES ?type { dbo:MilitaryConflict dbo:SocietalEvent } }
}
```",8,11,9,3,3,3,3,71,0,0,2,0,0.0,0
391,63,test,"Give me the native of the figure known as the nick name of Jackson, Tennessee and actor of the claim to fame, that is a work, of Michael Ballhaus and actor of the movie, that is a movie and a work and a television show, with Roz Ryan.","SELECT ?result WHERE { <http://dbpedia.org/resource/Michael_Ballhaus> <http://dbpedia.org/ontology/knownFor> ?v6 . <http://dbpedia.org/resource/Jackson,_Tennessee> <http://xmlns.com/foaf/0.1/nick> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v2 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Roz_Ryan> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://dbpedia.org/property/nickname> ?v4 . ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v2 <http://dbpedia.org/property/starring> ?result . ?v6 <http://dbpedia.org/ontology/starring> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. }","```sparql
# Step 1: Find the nickname of Jackson, Tennessee
SELECT ?nickname WHERE {
  dbpedia:Jackson_Tennessee dbo:nickname ?nickname .
}

# Step 2: Identify a notable actor associated with this nickname
SELECT DISTINCT ?actor WHERE {
  ?actor dbo:birthPlace dbpedia:Jackson_Tennessee ;
         rdf:type dbo:Actor .
  
  # Assuming the nickname is ""Choo Choo""
  FILTER(CONTAINS(LCASE(?actorLabel), ""choo choo""))
} ORDER BY ?actor LIMIT 1

# Step 3: Find works by Michael Ballhaus featuring this actor
SELECT DISTINCT ?work WHERE {
  ?work dbo:director dbpedia:Michael_Ballhaus ;
        dbo:starring ?actor .
}

# Step 4: Identify movies or TV shows with both the actor and Roz Ryan
SELECT DISTINCT ?movie WHERE {
  ?movie dbo:starring ?actor, dbpedia:Roz_Ryan .
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
701,56,test,"Give me the parent of Henuttawy (19th dynasty) and parent of the child of Nefertari and spouse of the father of the commander, that is a royalty, in Battle of Perire.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Nefertari> <http://dbpedia.org/ontology/child> ?v2 . <http://dbpedia.org/resource/Battle_of_Perire> <http://dbpedia.org/ontology/commander> ?v0 . ?result <http://dbpedia.org/ontology/spouse> ?v1 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Henuttawy_(19th_dynasty)> . ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/property/father> ?v1 . },"```sparql
# Query 1: Parent of Henuttawy (19th dynasty)
SELECT ?parent WHERE {
  ?henuttawy dbo:spouse ?parent .
  ?henuttawy rdfs:label ""Henuttawy""@en .
  FILTER(CONTAINS(?henuttawy, ""19th Dynasty""))
}

# Query 2: Child of Nefertari
SELECT ?child WHERE {
  ?nefertari dbo:child ?child .
  ?nefertari rdfs:label ""Nefertari""@en .
}

# Query 3: Commander in Battle of Perire and his father's spouse
SELECT ?spouse WHERE {
  ?battle dbo:commander ?commander .
  ?battle rdfs:label ""Battle of Perire""@en .
  
  ?father dbo:child ?commander .
  ?father dbo:spouse ?spouse .
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
959,67,test,"Give me the native of the residence, that is a country, of the leader, that is a politician, of 2010 Japanese House of Councillors election and manager of the team of the manager, that is a sports manager, of 1998 Kashima Antlers season and member of University of Tsukuba.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://dbpedia.org/property/residence> ?v5 . ?result <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/University_of_Tsukuba> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v0 <http://dbpedia.org/ontology/manager> ?v4 . ?result <http://dbpedia.org/ontology/birthPlace> ?v5 . <http://dbpedia.org/resource/2010_Japanese_House_of_Councillors_election> <http://dbpedia.org/property/leader> ?v1 . <http://dbpedia.org/resource/1998_Kashima_Antlers_season> <http://dbpedia.org/ontology/manager> ?v4 . },"```sparql
SELECT ?nativePlace WHERE {
  # Step 1: Identify the politician leader in the 2009-2010 Japanese House of Councillors election
  ?politician dbo:occupation dbr:Politician ;
             dbo:officeHolderOf dbr:Japanese_House_of_Councillors_election,_2009–10 .
  
  # Step 2: Find the sports manager of the 1998 Kashima Antlers season
  ?sportsManager dbo:managerTeam dbr:Kashima_Antlers_season_1998 ;
                 dbo:occupation dbr:Soccer_manager .

  # Step 3: Determine the team managed by this sports manager and its subsequent manager
  ?team dbo:managedBy ?sportsManager .
  ?subsequentManager dbo:managerTeam ?team .

  # Step 4: Check if this person is associated with University of Tsukuba
  ?subsequentManager dbo:almaMater dbr:University_of_Tsukuba .

  # Step 5: Find the residence country of this manager and its native place
  ?subsequentManager dbo:residenceCountry ?country .
  ?country dbo:nativePlace ?nativePlace .
}
```",7,10,8,3,3,3,3,71,0,0,2,0,0.0,0
184,60,test,"Give me the parent of the child of the parent of Archduchess Margaret of Austria (born 1925) and parent of the native of the landmark at elevation, that is a settlement, of 96.0.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v3 <http://dbpedia.org/ontology/elevation> ""96.0""^^<http://www.w3.org/2001/XMLSchema#double> . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Margaret_of_Austria_(born_1925)> . ?result <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v1 <http://dbpedia.org/property/father> ?v0 . }","```sparql
# Step 1: Find the parent of the child of the parent of Archduchess Margaret of Austria (born 1925)
SELECT ?parentOfChild WHERE {
  ?margaret dbo:birthYear ""1925""^^xsd:gYear .
  ?margaret rdfs:label ""Archduchess Margaret of Austria""@en .
  ?margaret dbo:father ?father .
  ?child dbo:parent ?father .
  ?child dbo:parent ?parentOfChild .
}

# Step 2: Find the parent of the native of a landmark at elevation 96.0 that is a settlement
SELECT ?parentOfNative WHERE {
  ?landmark dbo:elevation ""96.0""^^xsd:float ;
            rdf:type dbo:Settlement .
  ?native dbo:nativePlace ?landmark .
  ?native dbo:parent ?parentOfNative .
}

# Step 3: Find the common parent of the two individuals identified
SELECT DISTINCT ?commonParent WHERE {
  VALUES (?individual1) { (<result_of_step_1>) }
  VALUES (?individual2) { (<result_of_step_2>) }
  ?individual1 dbo:parent ?commonParent .
  ?individual2 dbo:parent ?commonParent .
}
```

Note: Replace `<result_of_step_1>` and `<result_of_step_2>` with the actual URIs obtained from executing the first two queries.",6,7,7,3,2,3,3,71,0,0,2,0,0.0,0
747,23,test,"Give me the person born on the birth date of the person decedent, that is an athlete and a soccer player, at Zolotonosha.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Zolotonosha> . ?result <http://dbpedia.org/ontology/birthDate> ?v0 . ?v2 <http://dbpedia.org/ontology/birthDate> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. },"```sparql
SELECT ?athlete WHERE {
  # Step 1: Identify the decedent and get their birth date
  ?decedent dbo:dateOfDeath ?deathDate .
  
  # Get the birth date of the decedent
  ?decedent dbo:birthDate ?birthDate .

  # Step 2: Find athletes born on that same date
  ?athlete dbo:birthDate ?birthDate ;
           a dbo:Athlete .

  # Step 3: Filter for soccer players and those from Zolotonosha
  ?athlete dbo:sport dbr:Soccer .
  ?athlete dbo:birthPlace dbr:Zolotonosha .
}
```",3,5,4,3,1,3,3,71,0,0,30,0,0.0,0
16,53,test,Give me the person born as the birth name of Gigi Rice and spouse of the person born as the birth name of Ted McGinley and professional in Actress.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ?v3 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Gigi_Rice> <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/property/occupation> ""Actress""@en . ?result <http://dbpedia.org/property/birthName> ?v1 . }","```sparql
# Step 1: Find Gigi Rice's birth name
SELECT ?birthName WHERE {
  dbpedia:Gigi_Rice dbo:birthName ?birthName .
}

# Step 2: Find Ted McGinley's birth name
SELECT ?birthName WHERE {
  dbpedia:Ted_McGinley dbo:birthName ?birthName .
}

# Step 3: Find Ted McGinley's spouse and check if she is an actress
SELECT ?spouse ?spouseLabel WHERE {
  dbpedia:Ted_McGinley dbo:spouse ?spouse .
  ?spouse rdf:type dbo:Actress .
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
281,44,test,"Give me the war of the profession, that is a military unit, of Heather Roy and entity in the birth place, that is a country, of Bob Heffron and war of Beauchamp Seymour, 1st Baron Alcester.","SELECT ?result WHERE { <http://dbpedia.org/resource/Beauchamp_Seymour,_1st_Baron_Alcester> <http://dbpedia.org/ontology/battle> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Heather_Roy> <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/Bob_Heffron> <http://dbpedia.org/ontology/birthPlace> ?v4 . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?result <http://dbpedia.org/ontology/place> ?v4 . }","```sparql
# Step 1: Find Heather Roy's military unit or war
SELECT ?war WHERE {
  wd:Q1234567 dbo:profession ?occupation .
  ?occupation dbo:relatedMilitaryUnitOrWar ?war .
}

# Step 2: Find Bob Heffron's birthplace country
SELECT ?country WHERE {
  wd:Q2345678 dbo:birthPlace ?location .
  ?location rdf:type dbo:Country .
  BIND(?location AS ?country)
}

# Step 3: Find Beauchamp Seymour, 1st Baron Alcester's war
SELECT ?war WHERE {
  wd:Q3456789 dbo:militaryConflict ?war .
}

# Step 4: Combine the results to find a common entity
SELECT DISTINCT ?commonEntity WHERE {
  # Assuming we have variables from previous queries: ?heatherWar, ?bobCountry, ?beauchampWar
  VALUES (?heatherWar ?bobCountry ?beauchampWar) { (wd:QW1 wd:QC1 wd:QW2) }

  ?commonEntity dbo:relatedMilitaryUnitOrWar ?heatherWar .
  ?commonEntity rdf:type dbo:Country .
  FILTER(?commonEntity = ?bobCountry)
  
  ?commonEntity dbo:militaryConflict ?beauchampWar .
}
```

Note: Replace `wd:Q1234567`, `wd:Q2345678`, and `wd:Q3456789` with the actual DBpedia QIDs for Heather Roy, Bob Heffron, and Beauchamp Seymour, 1st Baron Alcester respectively. The placeholders `?heatherWar`, `?bobCountry`, and `?beauchampWar` should be replaced with the results from the respective queries.",5,7,6,2,3,3,3,71,0,0,1,0,0.0,0
294,21,test,"Give me the resting place of Edwin A. Keeble and resting place of Luke Lea (American politician, born 1879) and entity in the birth place, that is a settlement, of Marion James.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/location> ?v0 . <http://dbpedia.org/resource/Luke_Lea_(American_politician,_born_1879)> <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Marion_James> <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Edwin_A._Keeble> <http://dbpedia.org/ontology/restingPlace> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT DISTINCT ?restingPlaceEdwinKeeble ?restingPlaceLukeLea ?settlementMarionJames
WHERE {
  # Resting place of Edwin A. Keeble
  OPTIONAL { 
    dbr:Edwin_A._Keeble dbo:deathPlace ?restingPlaceEdwinKeeble .
  }

  # Resting place of Luke Lea (American politician, born 1879)
  OPTIONAL {
    ?lukeLea a dbo:Politician ;
             dbo:birthDate ""1879-01-01""^^xsd:date ;
             dbo:deathPlace ?restingPlaceLukeLea .
    FILTER EXISTS { ?lukeLea rdfs:label ""Luke Lea""@en }
  }

  # Entity in the birthplace of Marion James that is a settlement
  OPTIONAL {
    dbr:Marion_James dbo:birthPlace ?birthPlaceMarionJames .
    ?settlement rdf:type dbo:Settlement ;
                dbo:location ?birthPlaceMarionJames .
  }
}
```",4,5,5,2,3,2,3,28,0,1,1,0.0,0.0,0
328,69,test,"Give me the commander in the force of Ferenc Szálasi and awardee of the award of the commander in Volcano and Ryukyu Islands campaign and leader of the office, that is a government agency, of the leader, that is an office holder and a politician, of Gustav Jonson.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ?v3 . ?v1 <http://dbpedia.org/property/office> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v7 <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://dbpedia.org/property/awards> ?v3 . <http://dbpedia.org/resource/Gustav_Jonson> <http://dbpedia.org/property/leader> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Volcano_and_Ryukyu_Islands_campaign> <http://dbpedia.org/ontology/commander> ?v4 . ?v2 <http://dbpedia.org/ontology/leader> ?result . ?v7 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Ferenc_Szálasi> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Ferenc Szálasi's role
  OPTIONAL { 
    ?szalasi a dbo:Person ;
             foaf:name ""Ferenc Szálasi"" .
    ?force dbo:commander ?szalasi .
  }

  # Commander in the Volcano and Ryukyu Islands campaign
  OPTIONAL {
    ?campaign dbo:awardee ?person ;
              dbo:name ?campaignName .
    FILTER(CONTAINS(LCASE(?campaignName), ""volcano"") && CONTAINS(LCASE(?campaignName), ""ryukyu islands""))
  }

  # Leader of a government agency under Gustav Jonson
  OPTIONAL {
    ?jonson a dbo:Person ;
            foaf:name ""Gustav Jonson"" .
    ?agency dbo:head ?person ;
            a dbo:GovernmentAgency .
  }
  
  # Ensure the person is connected to all parts
  FILTER(?szalasi = ?person || ?campaign = ?person || ?jonson = ?person)
}
```",8,11,9,3,3,3,3,71,0,0,1,0,0.0,0
617,32,test,"Give me the child of the child, that is a royalty, of Seleucus II Callinicus and spouse of the child of Antiochus III the Great.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Antiochus_III_the_Great> <http://dbpedia.org/ontology/child> ?v3 . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seleucus_II_Callinicus> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Seleucus II Callinicus and his child who is royalty
  dbr:Seleucus_II_Callinicus dbo:child ?royalChild .
  
  # Ensure the child holds a royal title or position
  ?royalChild dbo:title ?title .
  FILTER(CONTAINS(LCASE(?title), ""king"") || CONTAINS(LCASE(?title), ""queen""))

  # Find the spouse of this royal child
  ?royalChild dbo:spouse ?spouse .

  # Antiochus III the Great and his children
  dbr:Antiochus_III_the_Great dbo:child ?antiochusChild .

  # Check if the spouse is one of Antiochus III's children
  FILTER(?spouse = ?antiochusChild)
}
```",4,5,5,2,2,3,3,71,0,0,4,0,0.0,0
392,27,test,"Give me the province of the residence, that is a settlement and Italian, of Sebastiano Bianchetti and region of the time zone, that is a sports event, of Aguilar de Segarra and entity in Italy.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsEvent>. ?result <http://dbpedia.org/ontology/timeZone> ?v3 . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. <http://dbpedia.org/resource/Aguilar_de_Segarra> <http://dbpedia.org/ontology/timeZone> ?v3 . ?v2 <http://dbpedia.org/ontology/province> ?result . <http://dbpedia.org/resource/Sebastiano_Bianchetti> <http://dbpedia.org/property/residence> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?province ?region ?entityInItaly WHERE {
  # Sebastiano Bianchetti's residence and its province
  ?person a dbo:Person ;
          foaf:name ""Sebastiano Bianchetti""@it .
  ?person dbo:residence ?settlement .
  ?settlement a dbo:Settlement ;
              dbo:country dbr:Italy ;
              dbo:administrativeTerritory ?province .

  # Aguilar de Segarra's sports event and its region
  ?place a dbo:Place ;
         foaf:name ""Aguilar de Segarra""@en .
  ?place dbo:timeZone ?timeZone .
  ?timeZone dbo:region ?region .
  ?event dbo:location ?place ;
         a dbo:SportsEvent .

  # Entity in Italy connecting the province and region
  ?entityInItaly a dbo:Place ;
                 dbo:country dbr:Italy ;
                 (dbo:administrativeTerritory|dbo:locatedIn) ?province ;
                 (dbo:relatedTo|dbo:location) ?event .
}
```",5,8,6,2,3,2,3,28,0,0,1,0,0.0,0
427,60,test,"Give me the reference to the name of the party of Michele Pinto and party of the person born, that is an office holder and a politician, as the birth name of Romano Prodi.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . <http://dbpedia.org/resource/Michele_Pinto> <http://dbpedia.org/ontology/party> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/ontology/party> ?result . ?v3 <http://xmlns.com/foaf/0.1/name> ?v2 . <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/property/birthName> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?micheleParty ?romanoBirthName WHERE {
  # Find the political party of Michele Pinto
  OPTIONAL { 
    dbr:Michele_Pinto dbo:party ?micheleParty .
  }

  # Find the birth name of Romano Prodi, ensuring he is an office holder and a politician
  OPTIONAL {
    dbr:Romano_Prodi dbo:birthName ?romanoBirthName ;
                     rdf:type ?type1, ?type2 .
    FILTER (?type1 = dbo:OfficeHolder && ?type2 = dbo:Politician)
  }
}
```",6,8,7,3,2,3,3,71,2,1,0,0.6666666666666666,1.0,0.8
404,26,test,"Give me the parent of the child, that is a royalty, of the parent, that is a royalty, of Prince George William of Hanover.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Prince_George_William_of_Hanover> <http://dbpedia.org/ontology/parent> ?v1 . ?v1 <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/ontology/child> ?v2 . },"```sparql
SELECT DISTINCT ?grandparent WHERE {
  # Step 1: Identify Prince George William of Hanover
  ?prince a dbo:Person ;
          foaf:name ""Prince George William of Hanover""@en .
  
  # Step 2: Find his parent who is a royalty
  ?prince dbo:childOf ?parent .
  ?parent a dbo:Monarch .

  # Step 3: Identify the child of this royal parent
  ?parent dbo:child ?child .

  # Step 4: Determine the parent of this child who is also a royalty
  ?child dbo:childOf ?grandparent .
  ?grandparent a dbo:Monarch .
}
```",3,5,4,3,1,3,3,71,0,0,2,0,0.0,0
767,57,test,Give me the entity in Baden-Württemberg and reference to the alter ego of Black Hood and alma mater of the administration of the reference to George Kilbon Nash.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Black_Hood> <http://dbpedia.org/property/alterEgo> ?v3 . ?v0 <http://xmlns.com/foaf/0.1/name> ""George Kilbon Nash""@en . ?result <http://dbpedia.org/ontology/state> <http://dbpedia.org/resource/Baden-Württemberg> . ?v5 <http://dbpedia.org/property/governor> ?v0 . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . ?v5 <http://dbpedia.org/ontology/almaMater> ?result . }","```sparql
# Step 1: Find the alter ego of Black Hood
SELECT ?alterEgo WHERE {
  ?blackHood dbo:alias ""Black Hood"" .
  ?blackHood foaf:name ?alterEgo .
}

# Step 2: Find the alma mater of the alter ego
SELECT ?almaMater WHERE {
  ?person foaf:name ?alterEgo .
  ?person dbo:almaMater ?almaMater .
}

# Step 3: Identify the institution associated with George Kilbon Nash
SELECT ?institution WHERE {
  ?nash foaf:name ""George Kilbon Nash"" .
  ?nash dbo:position ""administrator""@en ;
        dbo:worksFor ?institution .
}

# Step 4: Find an entity in Baden-Württemberg related to the alma mater or institution
SELECT DISTINCT ?entity WHERE {
  VALUES ?location { wd:Q1103 } # Q1103 is the DBpedia item for Baden-Württemberg

  OPTIONAL {
    ?almaMater dbo:location ?location .
    ?entity rdfs:label ?almaMaterLabel FILTER (lang(?almaMaterLabel) = ""en"") .
  }

  OPTIONAL {
    ?institution dbo:location ?location .
    ?entity rdfs:label ?institutionLabel FILTER (lang(?institutionLabel) = ""en"") .
  }
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
994,68,test,"Give me the associated musical artist of the band member, that is a band and a group and an organisation, of the band, that is an organisation, of Fredrik Thordendal and band member of the person born, that is a musical artist, as Donald Maynard Dokken and associated musical artist of the associated musical artist of the reference to Watchtower.","SELECT ?result WHERE { ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v6 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v6 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v0 <http://dbpedia.org/property/birthName> ""Donald Maynard Dokken""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Fredrik_Thordendal> . ?v4 <http://xmlns.com/foaf/0.1/name> ""Watchtower""@en . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. }","```sparql
# Step 1: Find a musical artist associated with Watchtower
SELECT ?watchtowerArtist WHERE {
  ?watchtower wdt:P31 wd:Q215380; # Instance of band
              wdt:P106 wd:Q901;    # Occupation is musician
              wdt:P463 ?artist.     # Part of (influenced by or associated with)
}

# Step 2: Find an artist associated with the result from step 1 (Meshuggah)
SELECT ?meshuggahArtist WHERE {
  VALUES ?watchtowerArtist { <http://dbpedia.org/resource/Meshuggah> }
  ?meshuggah wdt:P31 wd:Q215380; # Instance of band
              wdt:P106 wd:Q901;    # Occupation is musician
              wdt:P463 ?artist.
}

# Step 3: Find Don Dokken's birth information
SELECT ?dokken WHERE {
  ?dokken wdt:P31 wd:Q215380; # Instance of band
          wdt:P106 wd:Q901;    # Occupation is musician
          wdt:P569 ?birthDate;
          rdfs:label ""Dokken""@en.
}

# Step 4: Find a member of Dokken
SELECT ?dokkenMember WHERE {
  VALUES ?dokken { <http://dbpedia.org/resource/Dokken> }
  ?member wdt:P31 wd:Q215380; # Instance of band
          wdt:P106 wd:Q901;    # Occupation is musician
          wdt:P127 ?dokken.     # Member of
}

# Step 5: Find Fredrik Thordendal's band (Meshuggah)
SELECT ?thordendalBand WHERE {
  ?thordendal wdt:P31 wd:Q215380; # Instance of band
               wdt:P106 wd:Q901;    # Occupation is musician
               rdfs:label ""Fredrik Thordendal""@en;
               wdt:P127 ?band.
}

# Step 6: Find an artist associated with Meshuggah (already identified)
SELECT ?associatedArtist WHERE {
  VALUES ?meshuggah { <http://dbpedia.org/resource/Meshuggah> }
  ?artist wdt:P31 wd:Q215380; # Instance of band
          wdt:P106 wd:Q901;    # Occupation is musician
          wdt:P463 ?meshuggah.
}

# Step 7: Find a band member that is also a band/group/organisation (Lynch Mob)
SELECT ?lynchMob WHERE {
  VALUES ?dokkenMember { <http://dbpedia.org/resource/Lynch_Mob> }
  ?lynchMob wdt:P31 wd:Q215380; # Instance of band
             wdt:P106 wd:Q901;    # Occupation is musician
             rdfs:label ""Lynch Mob""@en.
}

# Step 8: Find an associated musical artist of Lynch Mob
SELECT ?associatedArtist WHERE {
  VALUES ?lynchMob { <http://dbpedia.org/resource/Lynch_Mob> }
  ?artist wdt:P31 wd:Q215380; # Instance",8,13,9,3,3,3,3,71,0,0,1,0,0.0,0
391,22,test,"Give me the native of Compton, California and actor of the movie, that is a movie and a work and a television show, with Roz Ryan.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Roz_Ryan> . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Compton,_California> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://dbpedia.org/property/starring> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?actor WHERE {
  # Find people native to Compton, California
  ?person dbo:nativePlace dbr:Compton,_California .
  
  # Identify movies that are both works and television shows
  ?movie a dbo:Film ;
         dbo:genre ?genre .
  FILTER EXISTS { ?genre rdfs:subClassOf* dbo:TelevisionShow . }
  
  # Check if Roz Ryan is associated with these movies
  ?movie dbo:starring dbr:Roz_Ryan .

  # Find actors in these movies who are native to Compton, California
  ?movie dbo:starring ?actor .
  FILTER (?person = ?actor)
}
```",3,6,4,2,2,3,3,71,0,0,1,0,0.0,0
232,46,test,"Give me the actor of the claim to fame, that is a film and a military conflict, of Sean Pertwee and child of the person born as the birth name of Jon Pertwee.",SELECT ?result WHERE { <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Sean_Pertwee> <http://dbpedia.org/ontology/knownFor> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://dbpedia.org/property/birthName> ?v2 . ?v1 <http://dbpedia.org/ontology/child> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v4 <http://dbpedia.org/ontology/starring> ?result . },"```sparql
# Step 1: Find Jon Pertwee's birth name
SELECT ?birthName WHERE {
  wd:Q123456 foaf:name ""Jon Pertwee""@en .
  ?person dbo:birthName ?birthName .
  FILTER(?person = wd:Q123456)
}

# Step 2: Identify Sean Pertwee as Jon Pertwee's child
SELECT ?seanPertwee WHERE {
  ?child foaf:name ""Sean Pertwee""@en .
  ?parent dbo:child ?child .
  ?parent foaf:name ""Jon Pertwee""@en .
}

# Step 3: Find Sean Pertwee's claim to fame (film or military conflict)
SELECT DISTINCT ?claimToFame WHERE {
  wd:Q789012 dbo:profession dbr:Actor ; # Assuming Q789012 is the DBpedia ID for Sean Pertwee
    dbo:notableWork ?work .
  ?work rdf:type ?type .
  FILTER(?type IN (dbr:Film, dbr:MilitaryConflict))
}

# Step 4: Identify the actor associated with this claim to fame
SELECT DISTINCT ?actor WHERE {
  ?claimToFame dbo:starring ?actor .
}
```

Note: The above SPARQL queries assume that we have the correct DBpedia IDs for Jon Pertwee and Sean Pertwee. You may need to adjust these based on actual DBpedia data.",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
701,67,test,"Give me the parent of Meritamen and spouse of the father of the commander, that is a royalty, in Battle of Perire and parent of the child of the child of Seti I.",SELECT ?result WHERE { <http://dbpedia.org/resource/Meritamen> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/spouse> ?v3 . <http://dbpedia.org/resource/Battle_of_Perire> <http://dbpedia.org/ontology/commander> ?v1 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seti_I> . ?result <http://dbpedia.org/ontology/child> ?v6 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> ?v3 . ?v6 <http://dbpedia.org/property/father> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent ?spouse WHERE {
  # Meritamen's parent (Nefertari)
  VALUES (?meritamen) { dbr:Meritamen }
  ?meritamen dbo:mother ?parent .
  
  # Seti I's spouse (Tuya)
  VALUES (?setiI) { dbr:Seti_I }
  ?setiI dbo:spouse ?spouse .

  FILTER(?parent = dbr:Nefertari && ?spouse = dbr:Tuya)
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
659,42,test,"Give me the military force of the force, that is a societal event and an event and a military conflict, of Rutger Jan Schimmelpenninck and commander in Battle of Leipzig and commander in the force of Arthur Wellesley, 1st Duke of Wellington.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Arthur_Wellesley,_1st_Duke_of_Wellington> . <http://dbpedia.org/resource/Battle_of_Leipzig> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?force WHERE {
  # Rutger Jan Schimmelpenninck's political role in the Batavian Republic
  OPTIONAL { 
    dbr:Rutger_Jan_Schimmelpenninck dbo:office dbr:Grand_Pensionary_of_the_Batavian_Republic .
    dbr:Batavian_Republic dbo:country dbr:Kingdom_of_Holland .
    dbr:Kingdom_of_Holland dbo:headOfState ?napoleon .
  }
  
  # Battle of Leipzig and involved forces
  OPTIONAL {
    dbr:Battle_of_Leipzig dbo:participatedInMilitaryConflict ?force .
  }

  # Arthur Wellesley, 1st Duke of Wellington's military command
  OPTIONAL {
    dbr:Arthur_Wellesley_1st_Duke_of_Wellington dbo:militaryCommanderOf ?britishForce .
    ?britishForce dbo:participatedInMilitaryConflict ?force .
  }

  # Filtering for forces opposing Napoleon
  FILTER EXISTS { 
    ?force dbo:opponent dbr:Napoleon_Bonaparte .
  }
}
```",5,8,6,2,3,3,3,71,0,0,6,0,0.0,0
547,23,test,Give me the resting place of the child of the child of William Haliburton.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://dbpedia.org/ontology/restingPlace> ?result . ?v2 <http://dbpedia.org/property/father> ""William Haliburton""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?grandchild ?restingPlace WHERE {
  # Step 1: Identify William Haliburton
  VALUES ?williamHaliburton { dbr:William_Haliburton }

  # Step 2: Find his children
  ?williamHaliburton dbo:child ?child .

  # Step 3: For each child, find their children (grandchildren of William)
  ?child dbo:child ?grandchild .

  # Step 4: Get the resting place for each grandchild
  OPTIONAL { 
    ?grandchild dbo:deathPlace ?restingPlace .
  }
}
```",3,3,4,3,1,3,3,71,0,0,2,0,0.0,0
314,28,test,"Give me the commander in the profession, that is an event and a societal event, of Lisa Gavrić and awardee of the award of Sergei Makovetsky and person deceased at the headquarter of House of Sombrerete.",SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/House_of_Sombrerete> <http://dbpedia.org/ontology/location> ?v1 . ?result <http://dbpedia.org/ontology/restingPlace> ?v1 . ?v5 <http://dbpedia.org/ontology/commander> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Sergei_Makovetsky> <http://dbpedia.org/property/awards> ?v3 . ?result <http://dbpedia.org/property/awards> ?v3 . <http://dbpedia.org/resource/Lisa_Gavrić> <http://dbpedia.org/property/occupation> ?v5 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?profession ?event ?award ?commander WHERE {
  # Find Lisa Gavrić's profession
  OPTIONAL { 
    dbr:Lisa_Gavrić dbo:occupation ?profession .
  }
  
  # Link the profession to an event and societal event
  OPTIONAL {
    ?profession dbo:relatedEvent ?event .
    ?event rdf:type dbo:SocietalEvent .
  }

  # Check if Lisa Gavrić received an award from Sergei Makovetsky
  OPTIONAL {
    dbr:Lisa_Gavrić dbo:awardReceived ?award .
    ?award dbo:awardedBy dbr:Sergei_Makovetsky .
  }
  
  # Find a commander in the profession who is deceased at House of Sombrerete
  OPTIONAL {
    ?commander dbo:occupation ?profession .
    ?commander dbo:deathPlace dbr:House_of_Sombrerete_Headquarters .
  }
}
```",6,8,7,2,3,2,3,28,0,3,1,0.0,0.0,0
184,35,test,Give me the parent of the child of Archduke Joseph Francis of Austria and parent of the native of Budapest.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v2 . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Francis_of_Austria> . ?result <http://dbpedia.org/ontology/child> ?v1 . ?v2 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Budapest> . },"```sparql
# Query for the parent of a child of Archduke Joseph Francis of Austria
SELECT ?parent WHERE {
  ?child dbo:parent dbc:Archduke_Joseph_Francis_of_Austria .
  ?child dbo:parent ?parent .
}

UNION

# Query for the parent of a native of Budapest (using László Bíró as an example)
SELECT ?parent WHERE {
  ?person dbo:nationality dbr:Hungary ;
          dbo:birthPlace dbr:Budapest .
  ?person dbo:parent ?parent .
}
```",4,4,5,2,2,3,3,71,0,0,2,0,0.0,0
801,55,test,"Give me the associated musical artist of the writer, that is a musical artist and an artist, of 40 Dayz & 40 Nightz and producer of the work, that is a musical work and a song and a work, of 50 Cent and professional in the alter ego of The Shadow.",SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v5 <http://dbpedia.org/ontology/producer> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v5 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/50_Cent> . <http://dbpedia.org/resource/40_Dayz_&_40_Nightz> <http://dbpedia.org/property/writer> ?v2 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v3 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?producer WHERE {
  ?song dbo:artist dbr:50_Cent ;
        dbo:title ""40 Dayz & 40 Nightz"" .
  ?song dbo:producer ?producer .
  ?producer a dbo:MusicalArtist ;
            rdfs:label ?name .
  FILTER(CONTAINS(LCASE(?name), ""dr. dre"") || CONTAINS(LCASE(?name), ""the shadow""))
}
```",6,11,7,2,3,3,3,71,0,0,1,0,0.0,0
488,42,test,Give me the death place of Tokugawa Ieyasu and administration of the father of Emperor Go-Mizunoo and birth place of the commander in Boshin War.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> ?v1 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Tokugawa_Ieyasu> <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Boshin_War> <http://dbpedia.org/ontology/commander> ?v2 . <http://dbpedia.org/resource/Emperor_Go-Mizunoo> <http://dbpedia.org/property/father> ?v1 . },"```sparql
SELECT ?deathPlace ?administration ?birthPlace WHERE {
  # Tokugawa Ieyasu's death place
  dbpedia:Tokugawa_Ieyasu dbo:deathPlace ?deathPlace .

  # Toyotomi Hideyoshi's administration (Kampaku)
  dbpedia:Toyotomi_Hideyoshi dbo:title ?administration .
  FILTER(CONTAINS(LCASE(str(?administration)), ""kampaku""))

  # Saigō Takamori's birth place
  dbpedia:Saigo_Takamori dbo:birthPlace ?birthPlace .
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
528,46,test,"Give me the war of the commander in Battle of La Rinconada de Ate and war of the military force of the entity, that is a societal event, in Chile.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/battle> ?v2 . ?v1 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Battle_of_La_Rinconada_de_Ate> <http://dbpedia.org/ontology/commander> ?v4 . ?v2 <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Chile> . ?v4 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
# Query to find the commander in Battle of La Rinconada de Ate
SELECT ?commander WHERE {
  ?battle dbp:officialName ""Battle of La Rinconada de Ate"" .
  ?battle dbo:commander ?commander .
}

# Query to find military force involved in a societal event in Chile
SELECT DISTINCT ?militaryForce WHERE {
  ?event dcterms:isPartOf <http://dbpedia.org/resource/Category:Societal_events_in_Chile> ;
         dbo:militaryForce ?militaryForce .
}
```",5,6,6,3,2,3,3,71,0,0,14,0,0.0,0
701,52,test,Give me the parent of the child of the spouse of Amun-her-khepeshef and spouse of Ramesses II and parent of the child of Ramesses II.,SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ramesses_II> . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Ramesses_II> . ?result <http://dbpedia.org/ontology/child> ?v5 . ?v3 <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Amun-her-khepeshef> <http://dbpedia.org/ontology/spouse> ?v3 . },"```sparql
# Step 1: Identify Amun-her-khepeshef's spouse
SELECT ?spouse WHERE {
  wd:Q123456 wdt:P26 ?spouse .
}

# Step 2: Find the child of Amun-her-khepeshef's spouse and Ramesses II
SELECT ?child WHERE {
  ?spouse wdt:P40 ?child .
  FILTER EXISTS { ?child wdt:P22 wd:Q123456 } # Assuming Q123456 is Ramesses II
}

# Step 3: Identify the parent of this child
SELECT ?parent WHERE {
  ?child wdt:P25 ?parent .
}

# Step 4: Find the child of Ramesses II
SELECT ?ramessesChild WHERE {
  wd:Q123456 wdt:P40 ?ramessesChild .
}

# Step 5: Identify the parent of Ramesses II's child
SELECT ?ramessesParent WHERE {
  ?ramessesChild wdt:P25 ?ramessesParent .
}

# Step 6: Determine the common parent
SELECT DISTINCT ?commonParent WHERE {
  { ?parent rdfs:label ?name1 . FILTER regex(?name1, ""Ramesses"", ""i"") }
  UNION
  { ?ramessesParent rdfs:label ?name2 . FILTER regex(?name2, ""Ramesses"", ""i"") }
}
```

Note: Replace `wd:Q123456` with the actual DBpedia ID for Ramesses II and `wd:Q123456` in the first query with the correct ID for Amun-her-khepeshef. The queries assume that the relationships are stored using properties like `P26` (spouse), `P40` (child), and `P25` (parent) which are common in DBpedia.",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
427,54,test,Give me the party of the father of the alumnus of Massachusetts Institute of Technology and reference to the name of Italian People's Party (1994) and party of Romano Prodi.,SELECT ?result WHERE { <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/ontology/party> ?result . ?v0 <http://dbpedia.org/property/father> ?v5 . <http://dbpedia.org/resource/Italian_People's_Party_(1994)> <http://xmlns.com/foaf/0.1/name> ?v3 . ?v5 <http://dbpedia.org/ontology/party> ?result . ?v0 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Massachusetts_Institute_of_Technology> . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father ?party WHERE {
  # Step 1 & 2: Identify an MIT alumnus and his father
  ?alumnus dbo:almaMater dbr:Massachusetts_Institute_of_Technology .
  ?alumnus dbo:father ?father .

  FILTER(?alumnus = dbr:Barack_Obama) # Barack Obama is a known MIT alumnus

  OPTIONAL {
    ?father dbo:politicalAffiliation ?party .
  }

  # Step 4 & 5: Reference to Italian People's Party (1994) and Romano Prodi
  ?italianParty dbr:Italian_People%27s_Party_(1994) .
  ?prodi dbo:memberOf ?party .

  FILTER(?prodi = dbr:Romano_Prodi)
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
963,16,test,"Give me the administration of the ruling party, that is a political party, in Sremski Karlovci and entity in the region, that is a country, of Central European Time.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/leaderParty> ?v3 . ?result <http://dbpedia.org/ontology/country> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Sremski_Karlovci> <http://dbpedia.org/property/leaderParty> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v2 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?party ?country
WHERE {
  # Find Sremski Karlovci and its administration
  ?sremskiKarlovci a dbo:Settlement ;
                  rdfs:label ""Sremski Karlovci""@en .
  
  # Identify the ruling party in Sremski Karlovci
  ?administration dbo:administrativeUnit ?sremskiKarlovci ;
                  dbo:governingParty ?party .

  # Ensure the country is Serbia and falls under CET
  ?country a dbo:Country ;
           dbo:timeZone dbr:Central_European_Time ;
           dbo:containsPlace ?sremskiKarlovci .
  
  FILTER (lang(?party) = ""en"")
}
```",4,6,5,2,2,3,2,20,0,0,84,0,0.0,0
435,27,test,Give me the territory administered from Reykjavík and work of the author of Iceland and region of the time zone in Bombali Shebora Chiefdom.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/timeZone> ?v3 . <http://dbpedia.org/resource/Iceland> <http://dbpedia.org/property/author> ?v2 . <http://dbpedia.org/resource/Bombali_Shebora_Chiefdom> <http://dbpedia.org/ontology/timeZone> ?v3 . ?result <http://dbpedia.org/property/author> ?v2 . ?result <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Reykjavík> . },"```sparql
# Query for territory administered from Reykjavík
SELECT ?territory WHERE {
  wd:Q40 wdt:P36 wd:Q40 .
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}

# Query for works of the author of ""Iceland""
SELECT DISTINCT ?author ?workLabel WHERE {
  ?book wdt:P31/wdt:P279* wd:Q571 . # Book
  ?book wdt:P1476 ?title .
  FILTER(CONTAINS(LCASE(?title), ""iceland"")) .
  ?book wdt:P50 ?author .
  ?otherBook wdt:P50 ?author .
  ?otherBook wdt:P1476 ?workLabel .
  FILTER(?book != ?otherBook) .
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}

# Query for region of the time zone in Bombali Shebora Chiefdom
SELECT DISTINCT ?region WHERE {
  wd:Q1044 wdt:P421 wd:Q6655 . # Sierra Leone has GMT timezone
  wd:Q1044 wdt:P131* ?region .
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
```",5,5,6,2,3,2,3,28,0,0,1,0,0.0,0
184,48,test,"Give me the parent of the child of Archduke Joseph Francis of Austria and parent of the native of the landmark at elevation, that is a settlement, of 96.0.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v1 . ?result <http://dbpedia.org/ontology/child> ?v2 . ?v3 <http://dbpedia.org/ontology/elevation> ""96.0""^^<http://www.w3.org/2001/XMLSchema#double> . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Francis_of_Austria> . ?v2 <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. }","```sparql
# Step 1: Find Archduke Joseph Francis of Austria's child
SELECT ?child WHERE {
  wd:Q123456 rdfs:label ""Archduke Joseph Francis of Austria""@en .
  ?child dbo:parent wd:Q123456 .
}

# Step 2: Find the parent of that child
SELECT ?grandParent WHERE {
  ?child dbo:parent ?grandParent .
}

# Step 3 & 4: Find a landmark at elevation 96.0 meters and confirm it is a settlement
SELECT ?settlement WHERE {
  ?landmark geo:elevation ""96.0""^^xsd:float ;
            rdf:type wd:Q515 . # Q515 is the class for settlements
}

# Step 5: Identify a notable native of this settlement
SELECT ?native WHERE {
  ?native dbo:birthPlace ?settlement .
}

# Step 6: Find the parent of this native
SELECT ?parent WHERE {
  ?native dbo:parent ?parent .
}
```

Note: Replace `wd:Q123456` with the actual DBpedia ID for Archduke Joseph Francis of Austria. The query assumes that the necessary properties and classes are correctly identified in DBpedia.",5,6,6,3,2,3,3,71,0,0,2,0,0.0,0
659,47,test,"Give me the commander in the force of Arthur Wellesley, 1st Duke of Wellington and commander in the war, that is an event and a military conflict, of the figure known, that is a military unit and an organisation, as 'Polish Horse'.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/property/nickname> ""'Polish Horse'""@en . ?v0 <http://dbpedia.org/ontology/battle> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Arthur_Wellesley,_1st_Duke_of_Wellington> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v4 <http://dbpedia.org/ontology/commander> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?battle ?unit WHERE {
  ?commander a dbo:MilitaryPerson ;
             foaf:name ""Arthur Wellesley, 1st Duke of Wellington""@en .
  
  ?battle a dbo:Battle ;
          dbo:commander ?commander ;
          rdfs:label ?battleLabel .

  FILTER(CONTAINS(LCASE(?battleLabel), ""waterloo""))

  ?unit a dbo:MilitaryUnit ;
        dbo:partOf ?army ;
        rdfs:label ?unitLabel .

  ?army dbo:commander ?commander .
  
  FILTER(CONTAINS(LCASE(?unitLabel), ""polish horse""))
}
```",5,9,6,3,2,3,3,71,0,0,71,0,0.0,0
534,16,test,"Give me the headquarter of the owner of RDS Arena and birth place of the child, that is a politician and an office holder, of Desmond FitzGerald (politician).",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/ontology/headquarter> ?result . <http://dbpedia.org/resource/RDS_Arena> <http://dbpedia.org/ontology/owner> ?v3 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Desmond_FitzGerald_(politician)> <http://dbpedia.org/ontology/child> ?v2 . },"```sparql
# Step 1: Find the owner of RDS Arena
SELECT ?owner WHERE {
  dbpedia:RDS_Arena dbo:operator ?owner .
}

# Step 2: Find the headquarters of the owner
SELECT ?headquarters WHERE {
  ?owner dbo:headquarters ?headquarters .
}

# Step 3: Identify Desmond FitzGerald's child who is a politician and office holder
SELECT DISTINCT ?child WHERE {
  dbpedia:Desmond_FitzGerald_(politician) dbo:child ?child .
  OPTIONAL { ?child dbo:occupation dbr:Politician . }
  OPTIONAL { ?child dbo:officeHolder true . }
}

# Step 4: Find the birthplace of that child
SELECT ?birthPlace WHERE {
  ?child dbp:birthPlace ?birthPlace .
}
```",4,6,5,2,2,3,2,20,0,0,1,0,0.0,0
754,16,test,Give me the parent of the child of Ram Khamhaeng and parent of the parent of May Hnin Htapi.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ram_Khamhaeng> <http://dbpedia.org/ontology/child> ?v3 . <http://dbpedia.org/resource/May_Hnin_Htapi> <http://dbpedia.org/ontology/parent> ?v2 . ?result <http://dbpedia.org/ontology/child> ?v3 . ?v2 <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT DISTINCT ?ramParentOfChild ?mayGrandparent WHERE {
  # Ram Khamhaeng's child and that child's parent
  ?child dbo:parent dbr:Ram_Khamhaeng .
  ?child dbo:parent ?ramParentOfChild .

  # May Hnin Htapi's grandparent
  ?parent dbo:parent dbr:May_Hnin_Htapi .
  ?parent dbo:parent ?mayGrandparent .
}
```",4,4,5,2,2,3,2,20,1,3,0,0.25,1.0,0.4
92,64,test,"Give me the band of the person born as the birth name of Joseph Michael and associated musical artist of Jim Sheppard and band member of the reference, that is an artist, to the name of Nevermore (2006 film).",SELECT ?result WHERE { ?v2 <http://xmlns.com/foaf/0.1/name> ?v3 . ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . <http://dbpedia.org/resource/Jim_Sheppard> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Joseph_Michael> <http://dbpedia.org/property/birthName> ?v0 . ?result <http://dbpedia.org/ontology/bandMember> ?v1 . <http://dbpedia.org/resource/Nevermore_(2006_film)> <http://xmlns.com/foaf/0.1/name> ?v3 . },"```sparql
SELECT ?band WHERE {
  # Joseph Michael's band
  ?person foaf:name ""Joe Satriani"" .
  ?person dbo:birthName ""Joseph Michael"" .
  ?person dbo:memberOfBand ?band .

  # Jim Sheppard's associated musical artist
  ?sheppard foaf:name ""Jim Sheppard"" .
  ?sheppard dbo:associatedMusicalArtist ?artist .

  # Band member of the reference (Nevermore)
  ?reference foaf:name ""Nevermore"" .
  ?member dbo:bandMemberOf ?reference .

  FILTER(?band = ?artist && ?band = ?reference)
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
391,30,test,"Give me the native of Compton, California and actor of the movie, that is a movie and a work and a television show, with Roz Ryan and actor of The Departed.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Roz_Ryan> . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Compton,_California> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/The_Departed> <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://dbpedia.org/property/starring> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  ?actor dbo:nationality dbr:United_States ;
         dbo:birthPlace dbr:Compton,_California .
  
  ?actor dbo:spouse ?rozRyan .
  ?rozRyan rdfs:label ""Roz Ryan""@en .

  ?actor dbo:film ?work .
  ?work rdf:type/rdfs:subClassOf* (dbr:Film dbr:Work dbr:Television_Show) ;
        dbo:starring ?diCaprio .
  
  ?diCaprio rdfs:label ""Leonardo DiCaprio""@en .

  OPTIONAL { 
    ?actor dbo:film dbr:The_Departed .
  }
}
```",4,7,5,2,3,3,3,71,0,0,1,0,0.0,0
92,59,test,"Give me the associated musical artist of the person born, that is an artist, as the actor of Return to Nuke 'Em High Volume 1 and band member of the reference, that is an artist, to the name of Nevermore (2006 film).",SELECT ?result WHERE { <http://dbpedia.org/resource/Nevermore_(2006_film)> <http://xmlns.com/foaf/0.1/name> ?v3 . <http://dbpedia.org/resource/Return_to_Nuke_'Em_High_Volume_1> <http://dbpedia.org/property/starring> ?v0 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v5 <http://dbpedia.org/property/birthName> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://xmlns.com/foaf/0.1/name> ?v3 . },"```sparql
SELECT DISTINCT ?actor ?band WHERE {
  # Find actor of ""Return to Nuke 'Em High Volume 1""
  ?film dbp:title ""Return to Nuke 'Em High Volume 1""@en .
  ?film dbo:starring ?actor .

  # Check if the actor is also a musician
  OPTIONAL { 
    ?actor dbo:musicArtistOf ?band .
  }

  # Find connection to ""Nevermore (2006 film)""
  ?movie dbp:title ""Nevermore (2006)""@en .
  ?movie dbo:starring ?actor .

  FILTER(?band != """")
}
```",6,8,7,3,2,3,3,71,0,0,1,0,0.0,0
801,63,test,"Give me the associated musical artist of the writer, that is a musical artist and an artist, of 40 Dayz & 40 Nightz and professional in the alter ego of the true self of The Shadow and producer of the work, that is a musical work and a song and a work, of 50 Cent.","SELECT ?result WHERE { ?v4 <http://xmlns.com/foaf/0.1/givenName> ""The Shadow""@en . ?v6 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/50_Cent> . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/property/occupation> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/40_Dayz_&_40_Nightz> <http://dbpedia.org/property/writer> ?v2 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v6 <http://dbpedia.org/ontology/producer> ?result . ?v4 <http://dbpedia.org/property/alterEgo> ?v3 . }","```sparql
SELECT ?artist WHERE {
  ?song1 dcterms:creator ?artist .
  ?song2 dcterms:creator ?artist .
  
  ?album1 dbo:musicalArtist ?artist ;
          rdfs:label ""40 Dayz & 40 Nightz""@en .

  ?album2 dbo:musicalArtist ?artist ;
          rdfs:label ""In Da Club""@en .

  FILTER(CONTAINS(LCASE(?album1), ""eminem"") || CONTAINS(LCASE(?album2), ""eminem""))
}
```",7,12,8,3,3,3,3,71,0,0,1,0,0.0,0
783,17,test,"Give me the associated musical artist of Appietus and band member of the person born, that is an artist and a musical artist, as the persona of Ebony Reigns.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . <http://dbpedia.org/resource/Appietus> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Ebony_Reigns> <http://xmlns.com/foaf/0.1/givenName> ?v0 . ?v3 <http://dbpedia.org/property/birthName> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"```sparql
# Step 1: Find Appietus and his associated musical artists
SELECT ?artist WHERE {
  ?appietus dbo:birthName ""Appietus"" .
  ?appietus dbo:associatedMusicalArtist ?artist .
}

UNION

# Step 2: Identify Ebony Reigns' persona and birth details
SELECT ?person WHERE {
  ?ebonyReigns rdfs:label ""Ebony Reigns""@en .
  ?ebonyReigns foaf:name ?persona .
  ?ebonyReigns dbo:birthName ?person .
  FILTER EXISTS { ?person dbo:occupation dbr:Musician . }
}

UNION

# Step 3: Find band members associated with the person born as an artist and musical artist
SELECT ?bandMember WHERE {
  ?person dbo:birthName ?name .
  ?person dbo:occupation dbr:Artist .
  ?person dbo:occupation dbr:MusicalArtist .
  ?person dbo:member ?band .
  ?band dbo:bandMember ?bandMember .
}
```",4,6,5,3,2,3,2,20,0,0,1,0,0.0,0
9,46,test,"Give me the alma mater of the mayor, that is a politician, of the entity, that is an organisation, in Belfast and alma mater of the awardee of Royal Medal.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/leader> ?v1 . ?v2 <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Belfast> . ?v4 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Medal> . ?v1 <http://dbpedia.org/ontology/almaMater> ?result . ?v4 <http://dbpedia.org/ontology/almaMater> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
# Query to get the mayor of Belfast who is a politician
SELECT ?mayor ?university WHERE {
  ?organization dbo:location dbr:Belfast ;
                dbo:positionTitle ""Mayor"" .
  ?mayor foaf:name ?name ;
         dbo:occupation dbr:Politician ;
         dbp:memberOf ?organization ;
         dbo:almaMater ?university .
}

# Query to get awardees of the Royal Medal and their alma maters
SELECT DISTINCT ?awardee ?awardeeUniversity WHERE {
  ?awardee dbo:award dbr:Royal_Medal ;
           dbo:almaMater ?awardeeUniversity .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
9,50,test,"Give me the figure known as the nickname of Queen's University Belfast and alma mater of the awardee of the reference, that is an award, to Royal Medals.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?result <http://dbpedia.org/property/nickname> ?v3 . ?v4 <http://dbpedia.org/property/awards> ?v0 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Royal Medals""@en . <http://dbpedia.org/resource/Queen's_University_Belfast> <http://dbpedia.org/property/nickname> ?v3 . ?v4 <http://dbpedia.org/ontology/almaMater> ?result . }","```sparql
# Step 1: Find the nickname of Queen's University Belfast
SELECT ?nickname WHERE {
  wd:Q1699 rdfs:label ?nickname .
  FILTER (lang(?nickname) = 'en')
}

# Step 2: Find Royal Medal awardees who are alumni of Queen's University Belfast
SELECT DISTINCT ?awardeeLabel WHERE {
  # Find individuals who have won a Royal Medal
  ?award wdt:P31 wd:Q134064 ;  # Instance of Royal Medal
         wdt:P921 ?recipient .  # Recipient of the award

  # Ensure the recipient is an alumni of Queen's University Belfast
  ?recipient wdt:P69 wd:Q1699 .

  # Get the label for the awardee
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""en"". }
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
547,18,test,Give me the resting place of Alan Cunningham and resting place of James Burton (Egyptologist) and resting place of Simon Cadell.,SELECT ?result WHERE { <http://dbpedia.org/resource/James_Burton_(Egyptologist)> <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Alan_Cunningham> <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Simon_Cadell> <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name ?deathPlace WHERE {
  VALUES ?person { 
    dbr:Alan_Cunningham_(explorer) 
    dbr:James_Burton_(Egyptologist) 
    dbr:Simon_Cadell
  }
  
  ?person dbo:name ?name .
  OPTIONAL { ?person dbo:deathPlace ?deathPlace . }
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
617,49,test,"Give me the child of the child, that is a royalty, of Seleucus II Callinicus and parent of the child of the commander in Battle of Panium.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v1 . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seleucus_II_Callinicus> . <http://dbpedia.org/resource/Battle_of_Panium> <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://dbpedia.org/ontology/child> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v2 . },"```sparql
# Step 1: Find children of Seleucus II Callinicus
SELECT ?child WHERE {
  wd:Q123456 wdt:P40 ?child .
}

# Step 2: Identify which child is a royalty
SELECT ?royalChild WHERE {
  ?child wdt:P39 wd:Q123457 . # Assuming P39 is the property for royal title or position
}

# Step 3: Find commander in Battle of Panium and their child's parent
SELECT ?commander, ?childOfCommander, ?parentOfChild WHERE {
  wd:Q987654 wdt:P1128 ?commander . # Assuming Q987654 is the Battle of Panium
  ?commander wdt:P40 ?childOfCommander .
  ?childOfCommander wdt:P22 ?parentOfChild .
}

# Step 4: Find the child of the royal child identified in step 2 who matches the parent from step 3
SELECT ?finalPerson WHERE {
  ?royalChild wdt:P40 ?finalPerson .
  ?finalPerson wdt:P22 ?parentOfChild .
}
```

Note: The above SPARQL query assumes certain properties (like `P40` for children, `P39` for royal titles, and `P1128` for commanders) based on typical DBpedia schema. You may need to adjust these property IDs (`wdt:P123`) according to the actual DBpedia ontology.",5,6,6,3,2,3,3,71,0,0,2,0,0.0,0
801,58,test,"Give me the professional in  and producer of the work, that is a musical work and a song and a work, of 50 Cent and associated musical artist of the writer, that is a musical artist and an artist, of the album, that is a musical work and a work, of What U See Is What U Get.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/What_U_See_Is_What_U_Get> <http://dbpedia.org/ontology/album> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/property/writer> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v5 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/50_Cent> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v5 <http://dbpedia.org/ontology/producer> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?professionalName ?producer ?associatedArtist ?album ?albumAssociatedArtist WHERE {
  # Find the professional name of 50 Cent
  dbr:Curtis_Jackson_II dbo:birthName ""Curtis James Jackson III"" .
  dbr:Curtis_Jackson_II dbo:profession ?professionalName .

  # Find the producer(s) of the song ""What U See Is What U Get""
  OPTIONAL {
    dbr:""What_U_See_Is_What_U_Get_(song)"" dbo:composer ?producer .
  }

  # Find associated musical artists with these producers
  OPTIONAL {
    ?producer dbo:associatedMusicalArtist ?associatedArtist .
  }

  # Find the album containing this song and any associated musical artist from that album
  dbr:""What_U_See_Is_What_U_Get_(song)"" dbo:album ?album .
  OPTIONAL {
    ?album dbo:associatedMusicalArtist ?albumAssociatedArtist .
  }
}
```",6,13,7,3,3,3,3,71,0,0,1,0,0.0,0
92,63,test,"Give me the band member of the reference, that is an artist, to the name of Nevermore (2006 film) and band of the person born as Joseph Michael Furney and associated musical artist of the person born, that is an artist, as Jim Sheppard.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v3 <http://xmlns.com/foaf/0.1/name> ?v4 . ?v6 <http://dbpedia.org/property/birthName> ""Jim Sheppard""@en . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Nevermore_(2006_film)> <http://xmlns.com/foaf/0.1/name> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/bandMember> ?v2 . ?v6 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/property/birthName> ""Joseph Michael Furney""@en . }","```sparql
# Query for the band member of the 2006 film ""Nevermore""
SELECT ?bandMember WHERE {
  ?film dbpedia-owl:title ""Nevermore (2006 film)""@en .
  ?film dbpedia-owl:cast ?actor .
  ?actor dbo:occupation dbc:Musicians .
  BIND(?actor AS ?bandMember)
}

UNION

# Query for the band of Joseph Michael Furney
SELECT ?band WHERE {
  ?person foaf:name ""Joseph Michael Furney""@en .
  ?person dbo:associatedBand ?band .
}

UNION

# Query for the associated musical artist of Jim Sheppard
SELECT ?artist WHERE {
  ?person foaf:name ""Jim Sheppard (musician)""@en .
  ?person dbo:associatedMusicalArtist ?artist .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
492,52,test,"Give me the commander in the war, that is a military conflict and an event, of Frédéric-Georges Herr and person decedent at Algiers and person decedent at the work of the author of French Algeria.",SELECT ?result WHERE { <http://dbpedia.org/resource/Frédéric-Georges_Herr> <http://dbpedia.org/ontology/battle> ?v5 . ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . <http://dbpedia.org/resource/French_Algeria> <http://dbpedia.org/property/author> ?v3 . ?v5 <http://dbpedia.org/ontology/commander> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Algiers> . ?v2 <http://dbpedia.org/property/author> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commander ?decedentAlgiers ?decedentAuthorWork WHERE {
  # Find Frédéric-Georges Herr's military conflict
  ?herr a dbo:MilitaryPerson ;
       foaf:name ""Frédéric-Georges Herr""@en .
  
  ?herr dbo:participatedInMilitaryConflict ?conflict .

  # Find the commander of that conflict
  ?conflict dbo:commander ?commander .

  # Find person decedent at Algiers related to this context
  ?decedentAlgiers a dbo:Person ;
                  dbo:placeOfBirth dbr:Algiers ;
                  dbo:dateOfDeath ?deathDate .
  
  # Find work of the author of French Algeria and related decedent
  ?author a dbo:Writer ;
          foaf:name ""Author of French Algeria""@en .
  
  ?work dbo:author ?author ;
        dbo:subject dbr:French_Algeria .

  ?decedentAuthorWork a dbo:Person ;
                      dbo:relatedTo ?work ;
                      dbo:dateOfDeath ?deathDate2 .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
626,17,test,Give me the awardee of the award of the military force of Battle of Borodino and commander in Battle of Leipzig.,SELECT ?result WHERE { <http://dbpedia.org/resource/Battle_of_Leipzig> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/property/awards> ?v3 . ?v0 <http://dbpedia.org/property/awards> ?v3 . ?v0 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Borodino> . },"```sparql
SELECT ?person WHERE {
  # Find individuals awarded by a military force involved in the Battle of Borodino
  ?battle dbo:wikiPageRedirects db:Borodino_battle .
  ?award dbo:recipient ?person ;
         dbo:awardingAuthority ?authority .
  ?authority dbo:participatedInBattle ?battle .

  # Find individuals who commanded at the Battle of Leipzig
  ?leipzigBattle dbo:wikiPageRedirects db:Battle_of_Leipzig .
  ?commander dbo:commanded ?leipzigBattle ;
             rdfs:label ?personLabel .
  
  FILTER(CONTAINS(LCASE(?personLabel), ""mikhail kutuzov"") || CONTAINS(LCASE(?personLabel), ""karl philipp schwarzenberg""))
}
```",4,4,5,3,2,3,2,20,0,0,9,0,0.0,0
701,49,test,"Give me the spouse of the father of the commander, that is a royalty, in Battle of Perire and parent of the child of Nefertari.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v1 . <http://dbpedia.org/resource/Nefertari> <http://dbpedia.org/ontology/child> ?v2 . <http://dbpedia.org/resource/Battle_of_Perire> <http://dbpedia.org/ontology/commander> ?v0 . ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> ?v1 . },"```sparql
# Step 1: Find the commander in Battle of Perire
SELECT ?commander WHERE {
    ?battle dbo:location ""Battle of Perire""@en .
    ?battle dbo:commander ?commander .
}

# Step 2: Find the father of the commander
SELECT ?father WHERE {
    ?commander dbo:father ?father .
}

# Step 3: Find the spouse of the father and check if they are royalty
SELECT DISTINCT ?spouse WHERE {
    ?father dbo:spouse ?spouse .
    OPTIONAL { ?spouse rdf:type dbo:RoyalPerson . }
    FILTER EXISTS { ?spouse rdf:type dbo:RoyalPerson . } # Ensure the spouse is royalty
}

# Step 4: Find Nefertari's child
SELECT DISTINCT ?child WHERE {
    ?nefertari dbo:child ?child .
    ?nefertari rdfs:label ""Nefertari""@en .
}

# Step 5: Verify if the spouse from step 3 is a parent of the child found in step 4
SELECT DISTINCT ?spouse WHERE {
    ?father dbo:spouse ?spouse .
    OPTIONAL { ?spouse rdf:type dbo:RoyalPerson . }
    FILTER EXISTS { ?spouse rdf:type dbo:RoyalPerson . } # Ensure the spouse is royalty

    ?child dbo:parent ?spouse .
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
994,60,test,"Give me the band member of the person born, that is a musical artist, as the persona of Don Dokken and associated musical artist of the associated musical artist of the reference to Watchtower.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ?v5 . ?v4 <http://xmlns.com/foaf/0.1/name> ""Watchtower""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Don_Dokken> <http://xmlns.com/foaf/0.1/givenName> ?v5 . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandMember ?associatedArtist
WHERE {
  # Step 1: Identify Don Dokken as a musical artist
  dbr:Don_Dokken dbo:musicalArtistOf ?donDokkenBand .

  # Step 2: Find band members of Don Dokken's band
  ?donDokkenBand dbo:bandMember ?bandMember .
  
  # Step 3: Identify associated artists of Watchtower
  dbr:Watchtower dbo:associatedMusicalArtist ?watchtowerAssociatedArtist .
  
  # Step 4: Link associations between the two sets
  ?bandMember dbo:musicalArtistOf ?associatedBand .
  ?associatedBand dbo:associatedMusicalArtist ?watchtowerAssociatedArtist .

  FILTER(?bandMember != dbr:Don_Dokken)
}
```",6,7,7,3,2,3,3,71,0,0,1,0,0.0,0
16,28,test,Give me the spouse of the person born as Ted Martin McGinley and person born as Georgeanne Marie Rice and professional in Actress.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ""Ted Martin McGinley""@en . ?v1 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/occupation> ""Actress""@en . ?result <http://dbpedia.org/property/birthName> ""Georgeanne Marie Rice""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?spouseTed ?spouseGeorgeanne WHERE {
  ?personTed foaf:givenName ""Ted"" .
  ?personTed foaf:surname ""McGinley"" .
  ?personTed dbo:spouse ?spouseTed .

  ?personGeorgeanne foaf:givenName ""Georgeanne"" .
  ?personGeorgeanne foaf:surname ""Rice"" .
  ?personGeorgeanne dbo:occupation <http://dbpedia.org/resource/Category:Actresses> .
  ?personGeorgeanne dbo:spouse ?spouseGeorgeanne .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
801,52,test,"Give me the professional in the alter ego of the true self of The Shadow and associated musical artist of Chris Taylor (music producer) and producer of the work, that is a musical work and a song and a work, of 50 Cent.","SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Chris_Taylor_(music_producer)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v5 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/50_Cent> . ?v3 <http://dbpedia.org/property/alterEgo> ?v2 . ?v5 <http://dbpedia.org/ontology/producer> ?result . ?result <http://dbpedia.org/property/occupation> ?v2 . ?v3 <http://xmlns.com/foaf/0.1/givenName> ""The Shadow""@en . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?song WHERE {
    ?producer a dbo:MusicProducer ;
              dbo:producedAlbum dbr:In_Da_Club .
    
    ?album dbo:artist dbr:50_Cent ;
           dbo:track ?song .

    FILTER EXISTS { ?song dbo:composer ?producer }
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
492,54,test,"Give me the person decedent at the work of US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite and commander in the war, that is a military conflict and an event, of the commander in Battle of Verdun and person decedent at Algiers.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> ?v3 . ?v3 <http://dbpedia.org/property/author> ""US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite""@en . <http://dbpedia.org/resource/Battle_of_Verdun> <http://dbpedia.org/ontology/commander> ?v0 . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Algiers> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://dbpedia.org/ontology/battle> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v5 <http://dbpedia.org/ontology/commander> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person1 ?person2 WHERE {
  # Joseph C. Satterthwaite's successor or associate
  ?satterthwaite dbo:office ""Assistant Secretary of State for African Affairs""@en .
  ?satterthwaite foaf:name ""Joseph C. Satterthwaite""@en .
  
  OPTIONAL { 
    ?successor dbo:predecessor ?satterthwaite .
    ?successor foaf:name ?person1 .
  }
  
  # Commander in the Battle of Verdun
  ?verdunCommander dbo:commandedBattle dbr:Battle_of_Verdun .
  ?verdunCommander foaf:name ?commanderName .

  OPTIONAL {
    ?algiersPerson dbo:placeOfBirth dbr:Algiers .
    ?algiersPerson dbo:decedent ?verdunCommander .
    ?algiersPerson foaf:name ?person2 .
  }
  
  FILTER(?person1 && ?person2)
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
767,61,test,"Give me the alma mater of the administration of the reference to George Kilbon Nash and reference to the alter ego of the persona, that is a fictional character, of Matthew Burland.","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v3 . ?v1 <http://dbpedia.org/property/alterEgo> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v5 <http://dbpedia.org/ontology/almaMater> ?result . ?v1 <http://dbpedia.org/property/alterEgo> ""Matthew Burland""@en . ?v5 <http://dbpedia.org/property/governor> ?v0 . ?v0 <http://xmlns.com/foaf/0.1/name> ""George Kilbon Nash""@en . }","```sparql
# Query to find George Kilbon Nash's alma mater
SELECT ?almaMater WHERE {
  ?person dbo:wikiPageID ""George_Kilbon_Nash"" .
  ?person dbo:almaMater ?almaMater .
}

UNION

# Query to find the fictional character associated with Matthew Burland and its administration
SELECT ?administration WHERE {
  ?fictionalCharacter dbo:alterEgoOfMatthewBurland true .
  ?fictionalCharacter dbo:associatedAdministration ?administration .
}

# Assuming we have identified both institutions, query for a common alma mater if applicable
SELECT DISTINCT ?commonAlmaMater WHERE {
  VALUES (?institution1 ?institution2) { 
    (?almaMater1 ?administration)
  }
  ?institution1 dbo:almaMater ?commonAlmaMater .
  ?institution2 dbo:almaMater ?commonAlmaMater .
}
```",6,7,7,3,2,3,3,71,0,0,2,0,0.0,0
365,8,test,Give me the band of Phil Alvin and reference to the real name of The Blasters.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Phil_Alvin> . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . <http://dbpedia.org/resource/The_Blasters> <http://xmlns.com/foaf/0.1/name> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band WHERE {
  ?person a dbo:Musician ;
          foaf:name ""Phil Alvin""@en .
  ?person dbo:memberOfBand ?band .
  FILTER(CONTAINS(LCASE(STR(?band)), ""the blasters""))
}
```",3,3,4,2,2,2,2,9,0,0,1,0,0.0,0
10,24,test,"Give me the professional in the birth name of Sharon Kao and band member of the person born, that is an artist, as Luke Francis Vibert.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://dbpedia.org/property/birthName> ""Luke Francis Vibert""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Sharon_Kao> <http://dbpedia.org/property/birthName> ?v1 . }","```sparql
# Query to find Sharon Kao's professional name
SELECT ?professionalName WHERE {
  ?person foaf:name ""Sharon Kao""@en .
  OPTIONAL { ?person foaf:alias ?professionalName . }
}

# Query to find the band Luke Francis Vibert is a member of
SELECT ?band WHERE {
  ?person foaf:name ""Luke Francis Vibert""@en .
  ?person dbo:memberOfBand ?band .
}
```",4,5,5,2,2,2,3,28,0,0,1,0,0.0,0
617,63,test,"Give me the child of the child, that is a royalty, of the successor, that is a royalty, of Antiochus II Theos and spouse of the child of Antiochus III the Great and parent of the child of Antiochus (son of Antiochus III the Great).",SELECT ?result WHERE { <http://dbpedia.org/resource/Antiochus_III_the_Great> <http://dbpedia.org/ontology/child> ?v6 . <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/child> ?v2 . <http://dbpedia.org/resource/Antiochus_II_Theos> <http://dbpedia.org/ontology/successor> ?v4 . ?result <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/property/father> ?v3 . ?v3 <http://dbpedia.org/property/father> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v6 <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
SELECT ?antiochusV WHERE {
  ?antiochusII dbo:spouse ?laodiceIIThree .
  ?antiochusII foaf:surname ""Antiochus II Theos"" .
  
  ?seleucusII dbo:childOf ?antiochusII .
  ?seleucusII foaf:surname ""Seleucus II Callinicus"" .

  ?laodiceIII dbo:spouse ?seleucusII .
  ?laodiceIII foaf:name ""Laodice III""@en .

  ?seleucusIV dbo:childOf ?laodiceIII .
  ?seleucusIV foaf:surname ""Seleucus IV Philopator"" .

  ?antiochusIV dbo:childOf ?seleucusIV .
  ?antiochusIV foaf:surname ""Antiochus IV Epiphanes"" .

  ?antiochusV dbo:childOf ?antiochusIV .
  ?antiochusV foaf:surname ""Antiochus V Eupator"" .
}
```",7,9,8,3,3,3,3,71,0,0,2,0,0.0,0
963,18,test,"Give me the entity in the region, that is a country, of the time zone of Herzegovina-Neretva Canton and administration of the ruling party, that is a political party, in Sremski Karlovci.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/leaderParty> ?v3 . <http://dbpedia.org/resource/Sremski_Karlovci> <http://dbpedia.org/property/leaderParty> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?result <http://dbpedia.org/ontology/country> ?v2 . ?v2 <http://dbpedia.org/property/timeZone> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Herzegovina-Neretva_Canton> <http://dbpedia.org/property/timeZone> ?v1 . },"```sparql
# Step 1: Find the time zone of Herzegovina-Neretva Canton
SELECT ?timeZone WHERE {
    dbpedia:Herzegovina-Neretva_Canton dbo:timezone ?timeZone .
}

# Step 2: Find all countries in that time zone
SELECT DISTINCT ?country WHERE {
    ?country dbo:timezone ?timeZone .
    FILTER(?timeZone = <URI_OF_TIMEZONE_FROM_STEP_1>)
}

# Step 3: Identify the ruling party in Sremski Karlovci
SELECT DISTINCT ?rulingParty WHERE {
    dbpedia:Sremski_Karlovci dbo:rulingParty ?rulingParty .
    ?rulingParty a dbo:PoliticalParty .
}

# Step 4: Find countries with the same ruling party as Sremski Karlovci
SELECT DISTINCT ?country WHERE {
    ?country dbo:timezone ?timeZone .
    ?country dbo:rulingParty ?rulingParty .
    FILTER(?timeZone = <URI_OF_TIMEZONE_FROM_STEP_1>)
    FILTER(?rulingParty = <URI_OF_RULING_PARTY_FROM_STEP_3>)
}
```

Note: Replace `<URI_OF_TIMEZONE_FROM_STEP_1>` and `<URI_OF_RULING_PARTY_FROM_STEP_3>` with the actual URIs obtained from steps 1 and 3.",5,7,6,3,2,3,2,20,0,0,84,0,0.0,0
528,61,test,Give me the force of the person born as the birth name of Narciso Campero and war of the commander in the work of --01-09.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> ?v3 . ?v5 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/ontology/commander> ?v5 . <http://dbpedia.org/resource/Narciso_Campero> <http://dbpedia.org/property/birthName> ?v1 . ?v3 <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/property/author> ""--01-09""^^<http://www.w3.org/2001/XMLSchema#gMonthDay> . }","```sparql
# Query to find Narciso Campero's birth name and associated military force
SELECT ?birthName ?force WHERE {
  ?person rdfs:label ""Narciso Campero""@en .
  ?person foaf:name ?birthName .
  OPTIONAL { ?person dbo:militaryCommanderOf ?command .
             ?command dbo:hasMilitaryUnit ?force . }
}

# Query to find the event on January 9th and its commander
SELECT ?event ?commander WHERE {
  ?event dbo:date ""2009-01-09""^^xsd:date ;
         dbo:commander ?commander .
}

# Query to find the war associated with the identified commander
SELECT ?war WHERE {
  ?commander dbo:participatedInWar ?war .
}
```",6,6,7,3,2,3,3,71,0,0,2,0,0.0,0
404,59,test,"Give me the parent of the child, that is a royalty, of the parent, that is a royalty, of Prince George William of Hanover and spouse of the person born, that is a royalty, as the birth name of Princess Victoria Louise of Prussia.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Prince_George_William_of_Hanover> <http://dbpedia.org/ontology/parent> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/property/birthName> ?v3 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/child> ?v5 . ?v2 <http://dbpedia.org/property/birthName> ?v3 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/child> ?v5 . },"```sparql
SELECT ?finalChild WHERE {
  # Step 1: Identify Prince George William of Hanover's Parent
  ?parent rdfs:label ""Prince Ernest Augustus of Hanover""@en .
  ?parent dbo:child ?princeGeorge .

  # Step 2: Find the Child of This Parent
  ?parent dbo:child ?intermediateChild .
  
  # Step 3: Spouse of a Person Born as Princess Victoria Louise of Prussia
  ?spouse rdfs:label ""Frederick Charles William, Duke of Schleswig-Holstein-Sonderburg-Glücksburg""@en .
  ?princessVictoriaLouise dbo:birthName ""Princess Victoria Louise of Prussia""@en ;
                          dbo:spouse ?spouse .

  # Step 4: Parent of This Spouse
  ?parentOfSpouse rdfs:label ""Christian IX of Denmark""@en .
  ?parentOfSpouse dbo:child ?spouse .

  # Step 5: The Child of This Parent
  ?parentOfSpouse dbo:child ?finalChild .
  
  FILTER(?intermediateChild = ?spouse) # Ensure the intermediate child is the spouse
}
```",6,9,7,3,2,3,3,71,0,0,1,0,0.0,0
427,38,test,"Give me the party of the father of Lamberto Andreotti and party of the person born, that is an office holder and a politician, as Romano Antonio Prodi.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/party> ?result . ?v2 <http://dbpedia.org/property/birthName> ""Romano Antonio Prodi""@en . ?v2 <http://dbpedia.org/ontology/party> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Lamberto_Andreotti> <http://dbpedia.org/property/father> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","```sparql
SELECT ?fatherPartyLabel ?prodiPartyLabel WHERE {
  # Find the father of Lamberto Andreotti and his party
  wd:Q123456 wdt:P22 ?giuseppeAndreotti. # Lamberto Andreotti's father (Giuseppe Andreotti)
  ?giuseppeAndreotti wdt:P102 ?party1.
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
  
  # Find Romano Prodi and his party
  wd:Q1234567 wdt:P102 ?party2. # Romano Prodi's political affiliation
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
  
  BIND (STR(?party1) AS ?fatherPartyLabel)
  BIND (STR(?party2) AS ?prodiPartyLabel)
}
```

Note: Replace `wd:Q123456` with the actual DBpedia entity ID for Giuseppe Andreotti and `wd:Q1234567` with the entity ID for Romano Prodi. These IDs can be found by searching their names in DBpedia.",4,6,5,2,2,3,3,71,0,0,3,0,0.0,0
645,16,test,"Give me the entity in the residence, that is a country, of James Wilkes Maurice and alma mater of the child of Richard Pankhurst.",SELECT ?result WHERE { <http://dbpedia.org/resource/Richard_Pankhurst> <http://dbpedia.org/ontology/child> ?v3 . ?result <http://dbpedia.org/ontology/country> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/James_Wilkes_Maurice> <http://dbpedia.org/property/residence> ?v2 . ?v3 <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
# Find the residence country of James Wilkes Maurice
SELECT ?residenceCountry WHERE {
  wd:Q123456 wdt:P19 ?residence. # Assuming Q123456 is the DBpedia ID for James Wilkes Maurice
  ?residence wdt:P31/wdt:P279* wd:Q6256. # P31/P279* to find instances of country (Q6256)
  BIND(str(?residence) AS ?residenceCountry)
}

# Find the alma mater of Richard Pankhurst's child
SELECT ?almaMater WHERE {
  wd:Q654321 wdt:P69 ?child. # Assuming Q654321 is the DBpedia ID for Richard Pankhurst
  ?child wdt:P108 ?university.
  BIND(str(?university) AS ?almaMater)
}

# Find the common entity that is both a country and an alma mater
SELECT DISTINCT ?entity WHERE {
  VALUES (?residenceCountry) { ""Q123"" } # Replace Q123 with actual country ID from first query
  VALUES (?almaMater) { ""Q456"" } # Replace Q456 with actual university ID from second query

  ?entity wdt:P31/wdt:P279* wd:Q6256. # Check if entity is a country
  FILTER(?entity = ?residenceCountry)
  
  ?entity wdt:P31 wd:Q391. # Check if entity is an educational institution (Q391)
  FILTER(?entity = ?almaMater)
}
```",4,5,5,2,2,3,2,20,0,0,1,0,0.0,0
435,22,test,"Give me the territory administered from the figure known, that is a settlement and a town and Icelandic, as Land of fire and ice and region of the time zone in Bombali Shebora Chiefdom.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/capital> ?v2 . ?v2 <http://dbpedia.org/property/nickname> ""Land of fire and ice""@en . <http://dbpedia.org/resource/Bombali_Shebora_Chiefdom> <http://dbpedia.org/ontology/timeZone> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Town>. ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Iceland>. ?result <http://dbpedia.org/ontology/timeZone> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?town WHERE {
  ?person dbo:nationality dbr:Iceland ;
          foaf:name ""Jón Sigurðsson""@en .
  
  ?town dbo:country dbr:Iceland ;
        a dbo:Settlement ;
        dbo:populationTotal ?population .
  
  FILTER(?population > 1000) # Ensures it's a town, not just a small settlement
  
  OPTIONAL {
    ?person dbo:placeOfBirth ?town .
  }
}
```",4,7,5,2,2,2,3,28,0,0,1,0,0.0,0
314,24,test,"Give me the commander in the profession, that is an event and a societal event, of Lisa Gavrić and awardee of the award of Sergei Makovetsky.",SELECT ?result WHERE { <http://dbpedia.org/resource/Lisa_Gavrić> <http://dbpedia.org/property/occupation> ?v0 . ?v0 <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/property/awards> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Sergei_Makovetsky> <http://dbpedia.org/property/awards> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  # Lisa Gavrić's profession and related event
  ?profession rdfs:label ""Lisa Gavrić""@en .
  ?event dbo:relatedTo ?profession ;
         a dbo:SocietalEvent .

  # Award by Sergei Makovetsky that Lisa Gavrić received
  ?award dbo:recipient dbr:Lisa_Gavrić ;
         dbo:givenBy dbr:Sergei_Makovetsky .

  # Commander associated with the event and award
  ?commander dbo:relatedTo ?event .
}
```",4,6,5,2,2,2,3,28,0,0,2,0,0.0,0
488,71,test,"Give me the administration of the father of the spouse, that is a royalty, of Tokugawa Masako and death place of the father, that is a politician, of the father, that is an office holder, of Matsudaira Tadamasa and birth place of the commander in the war, that is a military conflict and an event and a societal event, of Saitō Hajime.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> ?v2 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v4 <http://dbpedia.org/property/father> ?v5 . <http://dbpedia.org/resource/Saitō_Hajime> <http://dbpedia.org/ontology/battle> ?v1 . <http://dbpedia.org/resource/Matsudaira_Tadamasa> <http://dbpedia.org/property/father> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v7 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Tokugawa_Masako> . ?v5 <http://dbpedia.org/ontology/deathPlace> ?result . ?result <http://dbpedia.org/property/leader> ?v8 . ?v7 <http://dbpedia.org/property/father> ?v8 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
# Query for Tokugawa Masako's mother's administration if she is royalty
SELECT ?administration WHERE {
  wd:Q123456 wdt:P22 ?mother . # Tokugawa Masako's mother
  OPTIONAL { ?mother wdt:P39 ?administration . } # Administration of the mother if she is royalty
  FILTER EXISTS { ?mother wdt:P31 wd:Q5 . } # Check if the mother is a human (royalty)
}

# Query for Matsudaira Tadamasa's grandfather's death place
SELECT ?deathPlace WHERE {
  wd:Q654321 wdt:P22 ?father . # Matsudaira Tadamasa's father
  ?father wdt:P22 ?grandfather . # Matsudaira Tadamasa's grandfather
  OPTIONAL { ?grandfather wdt:D57 ?deathPlace . } # Death place of the grandfather if he is a politician
  FILTER EXISTS { ?grandfather wdt:P106 wd:Q82955 . } # Check if the grandfather was a politician
}

# Query for Saitō Hajime's commander's birthplace in the war
SELECT ?birthPlace WHERE {
  wd:Q789012 wdt:P1128 ?war . # War involving Saitō Hajime
  ?war wdt:P175 ?commander . # Commander of the war
  OPTIONAL { ?commander wdt:P19 ?birthPlace . } # Birthplace of the commander
}
```",9,15,10,3,3,3,3,71,0,0,1,0,0.0,0
485,22,test,"Give me the birth place of the awardee, that is a writer and a poet, of Eric Gregory Award and entity in the region, that is a country, of Western European Time.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/country> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Eric_Gregory_Award> . ?v2 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Western_European_Time> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Poet>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>. },"```sparql
SELECT ?birthPlace WHERE {
  ?person dbo:award ""Eric Gregory Award""@en .
  ?person rdf:type dbo:Writer .
  ?person dbo:occupation ""Poet""@en .
  ?person foaf:bornIn ?birthPlace .
  
  OPTIONAL { 
    ?region dcterms:isPartOf ?country .
    ?country dbo:timeZone ""Western European Time"" .
    ?birthPlace dcterms:isPartOf ?region .
  }
}
```",4,7,5,2,2,2,3,28,0,0,5,0,0.0,0
617,56,test,"Give me the parent of the child of the commander in Battle of Panium and child of the child, that is a royalty, of Seleucus II Callinicus and spouse of Laodice IV.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Laodice_IV> <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Battle_of_Panium> <http://dbpedia.org/ontology/commander> ?v0 . ?result <http://dbpedia.org/property/father> ?v2 . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seleucus_II_Callinicus> . ?v0 <http://dbpedia.org/ontology/child> ?v1 . ?result <http://dbpedia.org/ontology/child> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parentOfChild ?royalDescendant WHERE {
  # Step 1: Find the commander in the Battle of Panium
  ?battle dbo:commander ?commander .
  FILTER(STR(?battle) = ""Battle_of_Panium"")

  # Step 2: Find the child of this commander
  ?child dbo:parent ?commander .

  # Step 3: Determine the parent (grandparent on commander's side)
  ?parentOfChild dbo:child ?child .

  # Step 4: Identify Seleucus II Callinicus and his children who are royalty
  dbr:Seleucus_II_Callinicus dbo:spouse dbr:Laodice_IV .
  
  # Step 5: Find the royal children of Seleucus II Callinicus
  ?royalChild dbo:parent dbr:Seleucus_II_Callinicus ;
              a dbo:Monarch .

  # Step 6: Identify the child of this royalty who is also a royalty
  ?royalDescendant dbo:parent ?royalChild .
  
  # Ensure the royal descendant is indeed royalty
  ?royalDescendant a dbo:Monarch .
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
696,20,test,"Give me the birth place of the member of the associated musical artist, that is an organisation and a group and a band, of The Boils and landmark at elevation of the award of the commander in Battle of Chishui River.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/elevation> ?v5 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://dbpedia.org/ontology/bandMember> ?v2 . <http://dbpedia.org/resource/Battle_of_Chishui_River> <http://dbpedia.org/ontology/commander> ?v4 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v4 <http://dbpedia.org/property/awards> ?v5 . <http://dbpedia.org/resource/The_Boils> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . },"```sparql
# Step 1: Identify The Boils and find associated musical artist
SELECT ?associatedArtist WHERE {
  ?boils dbo:type dbr:Band .
  ?boils rdfs:label ""The Boils""@en .
  ?boils dbo:associatedMusicalArtist ?associatedArtist .
}

# Step 2: Find a member of the associated musical artist
SELECT DISTINCT ?member WHERE {
  ?artist dbo:type dbr:Band .
  ?artist ?p ?o .
  ?o dbo:birthPlace ?member .
}

# Step 3: Determine birthplace of this member
SELECT ?birthPlace WHERE {
  ?member dbo:birthPlace ?birthPlace .
}

# Step 4: Find information about the Battle of Chishui River and commander's award
SELECT DISTINCT ?commanderAward WHERE {
  ?battle dbo:type dbr:Battle_of_Chishui_River .
  ?battle dbo:commander ?commander .
  ?commander dbo:receivedAward ?award .
  ?award dbo:elevation ?elevation .
}

# Step 5: Find landmark associated with the elevation of the award
SELECT DISTINCT ?landmark WHERE {
  ?landmark dbo:elevation ?elevation .
}
```",6,9,7,3,2,3,2,20,0,0,1,0,0.0,0
959,69,test,"Give me the native of the residence, that is a country, of Yōichi Masuzoe and member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of the person born in 1958 and manager of the team of the manager, that is a sports manager, of 1998 Kashima Antlers season.","SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Yōichi_Masuzoe> <http://dbpedia.org/property/residence> ?v6 . ?result <http://dbpedia.org/ontology/team> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. <http://dbpedia.org/resource/1998_Kashima_Antlers_season> <http://dbpedia.org/ontology/manager> ?v5 . ?v0 <http://dbpedia.org/ontology/manager> ?result . ?v4 <http://dbpedia.org/ontology/almaMater> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v4 <http://dbpedia.org/ontology/birthYear> ""1958""^^<http://www.w3.org/2001/XMLSchema#gYear> . ?v0 <http://dbpedia.org/ontology/manager> ?v5 . ?result <http://dbpedia.org/ontology/birthPlace> ?v6 . }","```sparql
SELECT ?nativeCountry WHERE {
  ?person foaf:name ""Yōichi Masuzoe""@ja .
  ?person dbo:birthYear ""1958""^^xsd:gYear .
  ?person dbo:nationality ?nationality .
  ?nationality rdfs:label ?nativeCountryLabel .
  FILTER (lang(?nativeCountryLabel) = ""en"") .

  ?person dbo:almaMater ?university .
  ?university rdf:type dbo:EducationalInstitution ;
              dbo:country ?country .
  ?country rdfs:label ?countryLabel .
  FILTER (lang(?countryLabel) = ""ja"" && contains(str(?countryLabel), ""Japan"")) .

  ?manager foaf:name ?managerName .
  ?manager dbo:occupation ?occupation .
  ?occupation rdfs:label ?occupationLabel .
  FILTER (lang(?occupationLabel) = ""en"" && ?occupationLabel = ""sports manager"") .

  ?team dbp:season ""1998 Kashima Antlers season""@en ;
        dbo:manager ?manager .
}
```",8,14,9,3,3,3,3,71,0,0,3,0,0.0,0
251,28,test,"Give me the death place of the author of The Twelve Abbots of Challant and administration of the ruling party, that is a political party and an organisation, in Sicily and location of the war, that is a military conflict, of Louis François Félix Musnier.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/place> ?result . <http://dbpedia.org/resource/Sicily> <http://dbpedia.org/property/leaderParty> ?v3 . ?v5 <http://dbpedia.org/ontology/deathPlace> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/property/leaderParty> ?v3 . <http://dbpedia.org/resource/Louis_François_Félix_Musnier> <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/The_Twelve_Abbots_of_Challant> <http://dbpedia.org/property/author> ?v5 . },"```sparql
# Query to get the death place of the author of ""The Twelve Abbots of Challant""
SELECT ?deathPlace WHERE {
  ?author dbo:work ?work .
  ?work rdfs:label ""The Twelve Abbots of Challant""@en .
  ?author dbo:deathPlace ?deathPlace .
  FILTER(LANG(?work) = 'en')
}

UNION

# Query to get the administration of a political party in Sicily
SELECT ?party WHERE {
  ?party rdf:type dbo:PoliticalParty ;
         dbo:country dbr:Sicily ;
         dbo:isPartOf ?administration .
  FILTER EXISTS { ?administration dbo:politicalOrganization ?party }
}

UNION

# Query to get the location of a war associated with Louis François Félix Musnier
SELECT ?location WHERE {
  ?musnier dbo:name ""Louis François Félix Musnier""@en ;
           dbo:militaryConflict ?war .
  ?war dbo:location ?location .
}
```",6,9,7,2,3,2,3,28,0,0,1,0,0.0,0
747,65,test,"Give me the band of the person born as Tracey Elizabeth McSween and person born on the birth date of Pavlo Khudzik and band of the writer of the work, that is a song, of Amba Shepherd.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/birthName> ""Tracey Elizabeth McSween""@en . <http://dbpedia.org/resource/Pavlo_Khudzik> <http://dbpedia.org/ontology/birthDate> ?v4 . ?v6 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Amba_Shepherd> . ?v0 <http://dbpedia.org/property/writer> ?v6 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/birthDate> ?v4 . }","```sparql
# Query to find Tracey Elizabeth McSween's band
SELECT ?band WHERE {
  ?person foaf:name ""Tracey Elizabeth McSween""@en .
  ?person dbo:memberOfBand ?band .
}

UNION

# Query to find Pavlo Khudzik's birth date and associated band
SELECT ?band WHERE {
  ?pavlo dbo:birthDate ?date .
  ?otherPerson dbo:birthDate ?date ;
               dbo:memberOfBand ?band .
}
FILTER EXISTS { ?pavlo foaf:name ""Pavlo Khudzik""@en }

UNION

# Query to find the band of the writer of Amba Shepherd's song
SELECT ?band WHERE {
  ?song dbo:lyricsBy ?writer .
  ?song dbo:title ?title .
  ?work dbo:author ?writer ;
        rdf:type dbo:Songs .
  FILTER EXISTS { ?work dbo:wikiPageRedirects ?redirect .
                 ?redirect foaf:name ""Amba Shepherd""@en }
  ?writer dbo:memberOfBand ?band .
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
294,20,test,"Give me the entity in Nashville, Tennessee and resting place of the architect of P. D. Houston Jr. House and resting place of Luke Lea (American politician, born 1879).","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/restingPlace> ?result . ?result <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Nashville,_Tennessee> . <http://dbpedia.org/resource/P._D._Houston_Jr._House> <http://dbpedia.org/ontology/architect> ?v3 . <http://dbpedia.org/resource/Luke_Lea_(American_politician,_born_1879)> <http://dbpedia.org/ontology/restingPlace> ?result . }","```sparql
SELECT ?entity ?restingPlace WHERE {
  # Find the architect of P.D. Houston Jr. House and their resting place
  ?house dbo:architect ?architect .
  FILTER(STRSTARTS(LCASE(?house), ""p.d. houston jr. house""))
  
  OPTIONAL { ?architect dbo:deathPlace ?restingPlace . }
  FILTER(CONTAINS(LCASE(?restingPlace), ""nashville, tennessee""))

  UNION

  # Find Luke Lea and his resting place
  ?lealuke dbo:birthYear ?year .
  FILTER(?year = 1879)
  
  OPTIONAL { ?lealuke dbo:deathPlace ?restingPlace . }
  FILTER(CONTAINS(LCASE(?restingPlace), ""nashville, tennessee""))

  BIND(CONCAT(""Architect of P.D. Houston Jr. House or Luke Lea: "", ?entity) AS ?entity)
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
339,20,test,Give me the father of the child of the parent of Princess Olga of Greece and Denmark and child of the child of the predecessor of Frederick VIII of Denmark.,SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/child> ?v5 . ?v1 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Frederick_VIII_of_Denmark> . ?v4 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Princess_Olga_of_Greece_and_Denmark> . ?v2 <http://dbpedia.org/property/father> ?v1 . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v5 <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  # Princess Olga of Greece and Denmark's parent
  dbr:Princess_Olga_of_Greece_and_Denmark dbo:parent dbr:Paul_I_of_Greece .
  
  # Frederick VIII's predecessor
  dbr:Frederick_VIII_of_Denmark dbo:predecessor dbr:Christian_IX_of_Denmark .

  # Child of Christian IX (Edward VII)
  dbr:Edward_VII_of_the_UK dbo:parent dbr:Christian_IX_of_Denmark .
  
  # Grandchild of Christian IX (George V)
  dbr:George_V_of_the_UK dbo:parent dbr:Edward_VII_of_the_UK .

  # Olga's child
  ?olgasChild dbo:parent dbr:Princess_Olga_of_Greece_and_Denmark .
  
  # George V's child (e.g., Edward VIII)
  ?georgesChild dbo:parent dbr:George_V_of_the_UK .

  # Find the father of a common descendant
  ?commonDescendant dbo:parent ?olgasChild ;
                   dbo:parent ?georgesChild .
  
  ?commonDescendant dbo:father ?father .
}
```",6,6,7,3,2,3,2,20,0,0,1,0,0.0,0
142,8,test,Give me the entity in Japan and birthplace of the actor of Papa wa Newscaster.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan> . <http://dbpedia.org/resource/Papa_wa_Newscaster> <http://dbpedia.org/ontology/starring> ?v2 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
# Assuming we identified the actor as ""ActorName"" from external research

SELECT ?actor ?birthPlace ?nationality WHERE {
  ?actor dbo:birthName ""ActorName""@en .
  OPTIONAL { ?actor dbo:birthPlace ?birthPlace . }
  OPTIONAL { ?actor dbo:nationality ?nationality . FILTER (langMatches(lang(?nationality), ""ja"")) }
}
```",3,3,4,2,2,2,2,9,0,0,2,0,0.0,0
820,18,test,Give me the child of the parent of Jason Schwartzman and professional in the award of the author of Understanding Comics.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Jason_Schwartzman> . <http://dbpedia.org/resource/Understanding_Comics> <http://dbpedia.org/ontology/author> ?v1 . ?result <http://dbpedia.org/property/father> ?v3 . ?v1 <http://dbpedia.org/property/awards> ?v2 . ?result <http://dbpedia.org/property/occupation> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?child WHERE {
  # Step 1: Find Jason Schwartzman's parent
  ?parent dbo:spouse ?schwartzman .
  ?schwartzman foaf:name ""Jason Schwartzman""@en .

  # Step 2: Find all children of that parent
  ?parent dbo:child ?child .

  # Step 3: Identify Scott McCloud as the author of ""Understanding Comics""
  dbr:Scott_McCloud dbo:author dbr:Understanding_Comics .
  
  # Step 4: Find awards related to Scott McCloud
  OPTIONAL { 
    ?award dbo:recipient dbr:Scott_McCloud .
    ?child dbo:award ?award .
  }

  FILTER(?child != ?schwartzman) # Ensure the child is not Jason Schwartzman himself
}
```",5,5,6,3,2,3,2,20,0,0,1,0,0.0,0
10,23,test,"Give me the associated musical artist of the person born, that is an artist, as Matt Colton and professional in the birth name of Sharon Kao.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v3 <http://dbpedia.org/property/birthName> ""Matt Colton""@en . <http://dbpedia.org/resource/Sharon_Kao> <http://dbpedia.org/property/birthName> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?artist WHERE {
  # Find artists associated with Matt Colton as a mastering engineer
  ?masteringProject dbo:performer ?artist .
  ?masteringProject dbo:engineer dbr:Matt_Colton .

  UNION

  # Find artists associated with Sharon Kao
  ?sharonProject dbo:performer ?artist .
  ?sharonProject dbo:producer dbr:Sharon_Kao .
}
```",4,5,5,2,2,2,3,28,0,0,2,0,0.0,0
391,48,test,"Give me the native of the figure known as the nick name of Jackson, Tennessee and actor of the movie, that is a movie and a work and a television show, with Roz Ryan.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/nickname> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Roz_Ryan> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://dbpedia.org/property/starring> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . <http://dbpedia.org/resource/Jackson,_Tennessee> <http://xmlns.com/foaf/0.1/nick> ?v3 . }","```sparql
SELECT ?nativePlace WHERE {
  wd:Q1026 wdt:P19 ?nativePlace .
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
9,69,test,"Give me the figure known as the nickname of the entity, that is an organisation and an educational institution, in Northern Ireland and alma mater of the mayor, that is a politician, of the entity, that is an organisation, in Belfast and alma mater of the awardee of Royal Medal.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Belfast> . ?v1 <http://dbpedia.org/property/nickname> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v7 <http://dbpedia.org/ontology/almaMater> ?result . ?v4 <http://dbpedia.org/property/leader> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?result <http://dbpedia.org/property/nickname> ?v2 . ?v7 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Medal> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Northern_Ireland> . ?v3 <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?institution ?nickname WHERE {
  # Step 1: Find educational institutions in Belfast
  ?organization a dbo:EducationalOrganization ;
                dbo:location dbr:Belfast .

  # Step 2: Identify the mayor of Belfast and their alma mater
  ?mayor dbo:almaMater ?institution ;
         dbo:officeHolderOf dbr:Belfast_Mayor .
  
  # Step 3: Find awardees of the Royal Medal who attended the same institution
  ?awardee dbo:awardReceived dbr:Royal_Medal ;
           dbo:almaMater ?institution .

  # Optional: Retrieve nickname for the educational institution if available
  OPTIONAL { ?institution dbp:nickname ?nickname }
}
```",8,12,9,3,3,3,3,71,0,0,1,0,0.0,0
232,51,test,"Give me the native of the residence, that is a settlement and British, of the native, that is a politician and an office holder, of France and actor of the claim to fame, that is a film and a military conflict, of Sean Pertwee.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v4 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Sean_Pertwee> <http://dbpedia.org/ontology/knownFor> ?v4 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/property/residence> ?v2 . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/France> . },"```sparql
SELECT DISTINCT ?nativeOfBritishSettlement WHERE {
  # Step 1: Identify Sean Pertwee's claim to fame (films)
  ?film dbo:actor dbpedia:Sean_Pertwee .
  
  # Step 2: Find French politicians associated with these films
  ?politician dbo:nationality dbr:Fran%C3%A7ais ;
              dbo:occupation dbr:Politician ;
              dbo:officeHolderOf ?film .

  # Step 3: Determine the residence of this French politician in Britain
  ?residence dbo:resident ?politician .
  FILTER (strstarts(str(?residence), ""http://dbpedia.org/resource/"") && 
          strcontains(str(?residence), ""/Settlements_in_the_United_Kingdom""))

  # Step 4: Identify the native of that British settlement
  ?nativeOfBritishSettlement dbo:nativePlace ?residence .
}
```",5,11,6,3,2,3,3,71,0,0,1,0,0.0,0
378,67,test,"Give me the claim to fame of the commander in the war, that is a military conflict and a societal event and an event, of Thomas Trigge and war of Carl Pontus Gahn and war of the commander in the reference, that is a military conflict, to Peninsular War.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/ontology/knownFor> ?result . ?v0 <http://dbpedia.org/ontology/commander> ?v6 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Peninsular War""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Thomas_Trigge> <http://dbpedia.org/ontology/battle> ?v1 . <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v6 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/commander> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?war ?claimToFame WHERE {
  VALUES (?person) { (dbr:Thomas_Trigge) (dbr:Carl_Pontus_Gahn) }
  
  ?person dbo:militaryConflict ?war .
  OPTIONAL { ?war dbo:notableIncident ?claimToFame . }

  FILTER(?war != dbr:Peninsular_War)

  UNION

  {
    VALUES (?referenceWar) { (dbr:Peninsular_War) }
    ?person dbo:militaryConflict ?relatedWar .
    ?relatedWar dbo:partOf ?referenceWar .
    OPTIONAL { ?relatedWar dbo:notableIncident ?claimToFame . }
  }
}
```",7,11,8,3,3,3,3,71,0,0,2,0,0.0,0
659,51,test,"Give me the commander in the war, that is an event and a military conflict, of 1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish) and military force of the force, that is a societal event and an event and a military conflict, of the reference to Rutger Jan Schimmelpenninck.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v4 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/1st_Light_Cavalry_Lancers_Regiment_of_the_Imperial_Guard_(Polish)> <http://dbpedia.org/ontology/battle> ?v4 . ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://dbpedia.org/ontology/commander> ?v1 . ?v1 <http://xmlns.com/foaf/0.1/name> ""Rutger Jan Schimmelpenninck""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commander ?militaryForce WHERE {
  # Find wars or conflicts involving the 1st Light Cavalry Lancers Regiment
  ?event a dbo:MilitaryConflict ;
         dbo:participatingUnit dbr:1st_Light_Cavalry_Lancers_Regiment_of_the_Imperial_Guard_(Polish) .
  
  # Identify commanders of this regiment during those events
  ?commander dbo:commanded ?unit .
  ?unit rdfs:label ""1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish)""@en .

  OPTIONAL {
    # Find societal events involving Rutger Jan Schimmelpenninck
    ?societalEvent a dbo:SocietalEvent ;
                   dbo:participant dbr:Rutger_Jan_Schimmelpenninck .
    
    # Identify military forces associated with these societal events
    ?militaryForce dbo:participatedIn ?societalEvent .
  }
}
```",5,10,6,3,2,3,3,71,0,0,31,0,0.0,0
959,30,test,Give me the native of Japan and manager of the team of Takashi Sekizuka and member of University of Tsukuba.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Japan> . ?v0 <http://dbpedia.org/ontology/manager> ?result . ?v0 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Takashi_Sekizuka> . ?result <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/University_of_Tsukuba> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  ?person dbo:nationality dbr:Japan .
  ?person dbo:almaMater dbr:University_of_Tsukuba .

  # Assuming Takashi Sekizuka is associated with a team
  ?team dbp:player dbr:Takashi_Sekizuka .
  ?team dbo:manager ?person .

}
```",4,4,5,2,3,3,3,71,0,0,2,0,0.0,0
421,28,test,Give me the band member of the awardee of [[#Awards and nominations and native of the birthplace of Samir Bekrić and person born as the birth name of Dino Merlin.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v5 . <http://dbpedia.org/resource/Samir_Bekrić> <http://dbpedia.org/ontology/birthPlace> ?v3 . <http://dbpedia.org/resource/Dino_Merlin> <http://dbpedia.org/property/birthName> ?v5 . ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://dbpedia.org/property/awards> ""[[#Awards and nominations""@en . }","```sparql
# Step 1: Find Samir Bekrić's birthplace
SELECT ?birthPlace WHERE {
  dbpedia:Samir_Bekrić dbo:birthPlace ?birthPlace .
}

# Step 2: Find a notable person native to that birthplace
SELECT DISTINCT ?person WHERE {
  ?person dbo:nativePlace ?birthPlace .
  FILTER NOT EXISTS { ?person owl:sameAs dbpedia:Samir_Bekrić }
}

# Step 3: Get Dino Merlin's birth name
SELECT ?birthName WHERE {
  dbpedia:Dino_Merlin foaf:name ?birthName .
}

# Step 4: Find a person with that birth name
SELECT DISTINCT ?personWithBirthName WHERE {
  ?personWithBirthName foaf:name ?birthName .
  FILTER NOT EXISTS { ?personWithBirthName owl:sameAs dbpedia:Dino_Merlin }
}

# Step 5: Determine which of the two individuals has received an award
SELECT DISTINCT ?awardee WHERE {
  VALUES (?candidate) { ?person ?personWithBirthName }
  ?award dbo:recipient ?candidate .
}

# Step 6: Find a band member associated with this awardee
SELECT DISTINCT ?bandMember WHERE {
  ?band dbo:member ?bandMember .
  ?band dbo:performer ?awardee .
}
```",6,6,7,2,3,2,3,28,0,0,1,0,0.0,0
378,18,test,"Give me the war of Carl Pontus Gahn and claim to fame of Louis des Balbes de Berton de Crillon, 1st Duke of Mahón and war of Joaquín Blake.","SELECT ?result WHERE { <http://dbpedia.org/resource/Joaquín_Blake> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Louis_des_Balbes_de_Berton_de_Crillon,_1st_Duke_of_Mahón> <http://dbpedia.org/ontology/knownFor> ?result . <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/ontology/battle> ?result . }","```sparql
# Query for Carl Pontus Gahn's associated war
SELECT ?war WHERE {
  wd:Q123456 dbp:associatedWithWar ?war .
}

# Query for Louis des Balbes de Berton de Crillon, 1st Duke of Mahón's claim to fame
SELECT ?fame WHERE {
  wd:Q654321 dbo:notableAchievement ?fame .
}

# Query for Joaquín Blake's associated war
SELECT ?war WHERE {
  wd:Q789012 dbp:associatedWithWar ?war .
}
```

Note: The placeholders `wd:Q123456`, `wd:Q654321`, and `wd:Q789012` should be replaced with the actual DBpedia QIDs for Carl Pontus Gahn, Louis des Balbes de Berton de Crillon, 1st Duke of Mahón, and Joaquín Blake respectively. These can be found by searching their names in DBpedia.",3,3,4,1,3,3,3,71,0,0,2,0,0.0,0
767,50,test,Give me the alma mater of the administration of the reference to George Kilbon Nash and reference to the alter ego of Black Hood.,"SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/almaMater> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""George Kilbon Nash""@en . ?v4 <http://dbpedia.org/property/governor> ?v0 . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . <http://dbpedia.org/resource/Black_Hood> <http://dbpedia.org/property/alterEgo> ?v3 . }","```sparql
SELECT ?almaMater WHERE {
  # George Kilbon Nash's alma mater
  OPTIONAL { 
    dbpedia:George_Kilbon_Nash dbo:almaMater ?nashAlmaMater .
    BIND(?nashAlmaMater AS ?almaMater)
  }
  
  # Dick Grayson (alter ego of Black Hood) alma mater
  OPTIONAL {
    dbpedia:Dick_Grayson dbo:almaMater ?graysonAlmaMater .
    BIND(?graysonAlmaMater AS ?almaMater)
  }
}
```",5,5,6,3,2,3,3,71,0,0,2,0,0.0,0
328,68,test,"Give me the commander in the force of the person decedent at Budapest and leader of the office, that is a government agency, of Joseph Stalin and awardee of the award of the commander in Volcano and Ryukyu Islands campaign.",SELECT ?result WHERE { <http://dbpedia.org/resource/Volcano_and_Ryukyu_Islands_campaign> <http://dbpedia.org/ontology/commander> ?v5 . ?result <http://dbpedia.org/property/awards> ?v4 . ?v5 <http://dbpedia.org/property/awards> ?v4 . <http://dbpedia.org/resource/Joseph_Stalin> <http://dbpedia.org/property/office> ?v3 . ?v0 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Budapest> . ?v7 <http://dbpedia.org/ontology/commander> ?v0 . ?v7 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://dbpedia.org/ontology/leader> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:MilitaryPerson .
  ?person dbo:commanderOf ?force .
  ?force dbo:location dbr:Budapest .
  
  ?person dbo:leaderOf ?office .
  ?office dbo:head dbr:Joseph_Stalin .

  ?person dbo:awardRecipient ?award .
  ?award dbo:name ""Order of Victory"" ; # This is a high Soviet military award, relevant to the context
     dbo:awardedFor [
       dbo:description ?description .
       FILTER(CONTAINS(LCASE(?description), ""volcano"") || CONTAINS(LCASE(?description), ""ryukyu islands""))
     ] .

  FILTER(STRSTARTS(STR(?person), STR(dbr:Georgy_Zhukov)))
}
```",8,9,9,3,3,3,3,71,0,0,1,0,0.0,0
92,51,test,"Give me the band of the person born as the birth name of Joseph Michael and associated musical artist of the person born, that is an artist, as Jim Sheppard.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/birthName> ""Jim Sheppard""@en . ?v2 <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/ontology/bandMember> ?v2 . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Joseph_Michael> <http://dbpedia.org/property/birthName> ?v1 . }","```sparql
SELECT ?band1 ?band2 WHERE {
  # Find the band associated with Joe Jackson (birth name: Joseph Michael)
  ?person1 foaf:name ""Joe Jackson""@en .
  ?person1 dbo:birthName ""Joseph Michael""@en .
  ?person1 dbo:musicGroup ?band1 .

  # Find the band associated with Jim Kerr (birth name: Jim Sheppard)
  ?person2 foaf:name ""Jim Kerr""@en .
  ?person2 dbo:birthName ""Jim Sheppard""@en .
  ?person2 dbo:musicalArtist ?band2 .
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
427,52,test,Give me the reference to the name of the party of Michele Pinto and party of the father of Lamberto Andreotti and party of Romano Prodi.,SELECT ?result WHERE { <http://dbpedia.org/resource/Lamberto_Andreotti> <http://dbpedia.org/property/father> ?v5 . ?v5 <http://dbpedia.org/ontology/party> ?result . ?v3 <http://xmlns.com/foaf/0.1/name> ?v2 . <http://dbpedia.org/resource/Michele_Pinto> <http://dbpedia.org/ontology/party> ?v3 . <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/ontology/party> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . },"```sparql
SELECT ?person ?partyLabel WHERE {
  VALUES ?person { 
    dbr:Michele_Pinto (DBpedia entity for Michele Pinto)
    dbr:Giuseppe_Andreotti (DBpedia entity for Giuseppe Andreotti)
    dbr:Romano_Prodi (DBpedia entity for Romano Prodi)
  }
  
  OPTIONAL {
    ?person dbo:politicalParty ?party .
    SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
  }
}
```",6,6,7,3,3,3,3,71,0,0,2,0,0.0,0
184,65,test,"Give me the parent of the child of Archduke Joseph Francis of Austria and parent of the native of Budapest and child of the child of the parent, that is a royalty, of Archduke Ladislaus Philipp of Austria.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Francis_of_Austria> . <http://dbpedia.org/resource/Archduke_Ladislaus_Philipp_of_Austria> <http://dbpedia.org/ontology/parent> ?v0 . ?result <http://dbpedia.org/property/father> ?v6 . ?result <http://dbpedia.org/ontology/child> ?v3 . ?result <http://dbpedia.org/ontology/child> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v6 <http://dbpedia.org/property/father> ?v0 . ?v4 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Budapest> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commonParent WHERE {
  # Archduke Joseph Francis of Austria
  dbr:Archduke_Joseph_Francis_of_Austria dbo:child ?child1 .
  
  # Parent of the child of Archduke Joseph Francis (i.e., Archduke Joseph Francis himself)
  ?parent1 dbo:child ?child1 .

  # Archduke Ladislaus Philipp of Austria
  dbr:Archduke_Ladislaus_Philipp_of_Austria dbo:parent ?parent2 .
  
  # Child of the parent of Archduke Ladislaus Philipp (i.e., another royal figure)
  ?royalChild dbo:childOf ?parent2 .

  # Ensure this person is a royalty
  ?royalChild rdf:type dbo:Monarch .

  # Native of Budapest
  ?native dbr:Budapest dbo:nativePlace .
  
  # This native must be the same as the royal child
  FILTER (?native = ?royalChild)

  # Find the common parent between Archduke Joseph Francis and this royal figure
  ?commonParent dbo:child ?child1 .
  ?commonParent dbo:child ?royalChild .
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
9,64,test,"Give me the alma mater of the mayor, that is a politician, of the entity, that is an organisation, in Belfast and figure known as the nickname of the entity, that is an organisation and an educational institution, in Northern Ireland and alma mater of Allen Hill (scientist).",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/property/nickname> ?v1 . ?v3 <http://dbpedia.org/property/leader> ?v2 . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Northern_Ireland> . ?v3 <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Belfast> . <http://dbpedia.org/resource/Allen_Hill_(scientist)> <http://dbpedia.org/ontology/almaMater> ?result . ?v0 <http://dbpedia.org/property/nickname> ?v1 . ?v2 <http://dbpedia.org/ontology/almaMater> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. },"```sparql
SELECT DISTINCT ?organisation ?mayorAlmaMater WHERE {
  # Step 1: Find the educational institution in Northern Ireland that is Allen Hill's alma mater and has a nickname matching an organisation in Belfast.
  ?institution dbo:type dbr:Educational_institution ;
              foaf:name ?institutionName ;
              dbo:alumni dbr:Allen_Hill_(scientist) ;
              dbo:nickname ?nickname .
  
  # Step 2: Find the organisation in Belfast with the same nickname as the educational institution.
  ?organisation dbo:type dbr:Organisation ;
                foaf:name ?organisationName ;
                dbo:location dbr:Belfast ;
                rdfs:label ?nickname .

  # Step 3: Identify the current mayor of this organisation.
  ?mayor dbo:position ?organisation ;
         dbo:title ""Mayor""@en .
  
  # Step 4: Find the alma mater of the mayor.
  ?mayor dbo:almaMater ?mayorAlmaMater .

}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
487,20,test,"Give me the country of the administration of the person born on 1955-01-26 and administration of the person born, that is a soccer player, as the birth name of Phil Scott.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/birthName> ?v4 . ?v1 <http://dbpedia.org/ontology/birthDate> ""1955-01-26""^^<http://www.w3.org/2001/XMLSchema#date> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?result <http://dbpedia.org/property/governor> ?v5 . <http://dbpedia.org/resource/Phil_Scott> <http://dbpedia.org/property/birthName> ?v4 . ?v2 <http://dbpedia.org/property/leader> ?v1 . ?v2 <http://dbpedia.org/ontology/country> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>

SELECT ?person1 ?adminCountry1 ?person2 ?adminCountry2 WHERE {
  # Find the person born on 1955-01-26
  ?person1 dbo:birthDate ?date .
  FILTER (YEAR(?date) = 1955 && MONTH(?date) = 1 && DAY(?date) = 26)
  
  OPTIONAL { ?person1 dbo:countryOfAdministration ?adminCountry1 }
  
  # Find the soccer player with birth name Phil Scott
  ?person2 dbo:birthName dbr:Phil_Scott .
  ?person2 a dbo:SoccerPlayer .
  
  OPTIONAL { ?person2 dbo:countryOfAdministration ?adminCountry2 }
}
```",6,7,7,3,2,3,2,20,0,0,1,0,0.0,0
54,61,test,"Give me the predecessor of the child, that is an office holder and a royalty, of the reference to Thihapate of Mohnyin and parent of the child of the parent of Thado Minsaw of Prome.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v5 <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/ontology/successor> ?v3 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> . ?v1 <http://xmlns.com/foaf/0.1/name> ""Thihapate of Mohnyin""@en . ?v5 <http://dbpedia.org/property/father> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?predecessor WHERE {
  # Step 1: Identify Thihapate of Mohnyin
  ?thihapate a dbo:Person ;
             rdfs:label ""Thihapate of Mohnyin""@en .

  # Step 2: Find a child who is both an office holder and royalty
  ?child dbo:parent ?thihapate ;
         a dbo:Monarch, dbo:OfficeHolder .

  # Step 3: Determine the predecessor of this identified child
  ?predecessor dbo:successor ?child .

  # Step 4: Identify Thado Minsaw of Prome
  ?thadoMinsaw a dbo:Person ;
               rdfs:label ""Thado Minsaw of Prome""@en .

  # Step 5: Find the parent of Thado Minsaw of Prome
  ?parent dbo:child ?thadoMinsaw .

  # Step 6: Determine a child of this parent
  ?childOfParent dbo:parent ?parent .

  # Step 7: Match the predecessor with the child identified in step 6
  FILTER (?predecessor = ?childOfParent)
}
```",6,8,7,3,2,3,3,71,0,0,1,0,0.0,0
92,38,test,"Give me the band of the person born as Joseph Michael Furney and associated musical artist of the person born, that is an artist, as Jim Sheppard.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/bandMember> ?v2 . ?v3 <http://dbpedia.org/property/birthName> ""Jim Sheppard""@en . ?v2 <http://dbpedia.org/property/birthName> ""Joseph Michael Furney""@en . }","```sparql
# Query to find the band associated with Joseph Michael Furney (Joe Elliott)
SELECT ?band WHERE {
  ?person foaf:name ""Joe Elliott""@en .
  ?person dbo:birthName ""Joseph Michael Furney"" .
  ?person dbo:memberOfBand ?band .
}

UNION

# Query to find the musical artist associated with Jim Sheppard
SELECT ?artist WHERE {
  ?person foaf:name ""Jim Sheppard""@en .
  ?person dbo:occupation dbc:Musicians .
  ?person dbo:associatedMusicalArtist ?artist .
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
827,18,test,"Give me the father of the child, that is a royalty, of Charles Augustus, Hereditary Grand Duke of Saxe-Weimar-Eisenach (1844–1894) and child of the child, that is a royalty, of the parent of Charles Alexander, Grand Duke of Saxe-Weimar-Eisenach.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Charles_Alexander,_Grand_Duke_of_Saxe-Weimar-Eisenach> . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Charles_Augustus,_Hereditary_Grand_Duke_of_Saxe-Weimar-Eisenach_(1844–1894)> . ?v2 <http://dbpedia.org/ontology/parent> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  # Charles Augustus and his father
  dbr:Charles_Augustus,_Hereditary_Grand_Duke_of_Saxe-Weimar-Eisenach dbo:parent dbr:C_Friedrich,_Grand_Duke_of_Saxe-Weimar-Eisenach .
  
  # Charles Alexander and his parent
  dbr:Charles_Alexander,_Grand_Duke_of_Saxe-Weimar-Eisenach dbo:parent dbr:C_Friedrich,_Grand_Duke_of_Saxe-Weimar-Eisenach .

  # Find a child of Charles Augustus who is royalty
  ?child dbo:parent dbr:Charles_Augustus,_Hereditary_Grand_Duke_of_Saxe-Weimar-Eisenach .
  ?child dbo:occupation dbr:Royalty .

  # Find the grandchild (child of the child) who is royalty
  ?grandchild dbo:parent ?child .
  ?grandchild dbo:occupation dbr:Royalty .

  # Find the father of this grandchild
  ?father dbo:parent ?grandchild .
}
```",5,7,6,3,2,3,2,20,0,0,1,0,0.0,0
435,21,test,Give me the work of the author of Iceland and region of Greenwich Mean Time and territory administered from Reykjavík.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Reykjavík> . ?result <http://dbpedia.org/property/author> ?v1 . <http://dbpedia.org/resource/Iceland> <http://dbpedia.org/property/author> ?v1 . ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Greenwich_Mean_Time> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?author ?work ?gmtRegion ?territory 
WHERE {
  # Find the author and work titled ""Iceland""
  ?work dbo:title ""Iceland""@en .
  ?work dbo:author ?author .

  # Find regions using Greenwich Mean Time
  ?region dbo:timeZone dbr:Greenwich_Mean_Time ;
          rdfs:label ?gmtRegion .

  # Find territories administered from Reykjavík
  ?territory dbo:administrativeCapital dbr:Reykjavík ;
             rdfs:label ?adminTerritory .
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
547,64,test,Give me the resting place of the child of the child of William Haliburton and resting place of the awardee of the award of Gerald Graham and resting place of Simon Cadell.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Simon_Cadell> <http://dbpedia.org/ontology/restingPlace> ?result . ?v3 <http://dbpedia.org/property/father> ""William Haliburton""@en . <http://dbpedia.org/resource/Gerald_Graham> <http://dbpedia.org/property/awards> ?v0 . ?v3 <http://dbpedia.org/ontology/child> ?v2 . ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . ?v1 <http://dbpedia.org/property/awards> ?v0 . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . }","```sparql
# Query for the resting place of the child of the child of William Haliburton
SELECT DISTINCT ?grandchildRestingPlace WHERE {
  ?williamHaliburton dbo:spouse ?spouse .
  ?williamHaliburton foaf:name ""William Haliburton""@en .
  ?williamHaliburton dbo:child ?child .
  ?child dbo:child ?grandchild .
  ?grandchild dbo:deathPlace ?grandchildRestingPlace .
}

UNION

# Query for the resting place of the awardee of the award of Gerald Graham
SELECT DISTINCT ?awardeeRestingPlace WHERE {
  ?geraldGraham foaf:name ""Gerald Graham""@en .
  ?geraldGraham dbo:award ?award .
  ?award dbo:recipient ?awardee .
  ?awardee dbo:deathPlace ?awardeeRestingPlace .
}

UNION

# Query for the resting place of Simon Cadell
SELECT DISTINCT ?simonCadellRestingPlace WHERE {
  ?simonCadell foaf:name ""Simon Cadell""@en .
  ?simonCadell dbo:deathPlace ?simonCadellRestingPlace .
}
```",7,7,8,3,3,3,3,71,0,0,1,0,0.0,0
701,47,test,Give me the parent of the child of the child of Seti I and parent of the child of Nefertari.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seti_I> . ?result <http://dbpedia.org/ontology/child> ?v4 . ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v4 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Nefertari> <http://dbpedia.org/ontology/child> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT DISTINCT ?commonParent WHERE {
  # Seti I's child
  ?setiIChild dbo:childOf db:Seti_I .
  
  # Seti I's grandchild
  ?setiIGrandchild dbo:childOf ?setiIChild .

  # Parent of Seti I's grandchild (should be the same as Seti I's child)
  ?parentOfSetiIGrandchild dbo:spouse ?setiIChild .
  
  # Nefertari's child
  ?nefertariChild dbo:childOf db:Nefertari .

  # Nefertari's grandchild
  ?nefertariGrandchild dbo:childOf ?nefertariChild .

  # Parent of Nefertari's grandchild (should be the same as Nefertari's child)
  ?parentOfNefertariGrandchild dbo:spouse ?nefertariChild .
  
  # Common parent
  FILTER (?parentOfSetiIGrandchild = ?parentOfNefertariGrandchild)
  BIND(?parentOfSetiIGrandchild AS ?commonParent)
}
```",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
161,54,test,"Give me the commander in Biscay Campaign and military force of the force, that is a societal event and an event and a military conflict, of Francisco Franco and military force of the force, that is a societal event and a military conflict, of the predecessor of Indalecio Prieto.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Indalecio_Prieto> . ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Franco> . <http://dbpedia.org/resource/Biscay_Campaign> <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v5 <http://dbpedia.org/ontology/commander> ?v0 . ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?militaryForceFranco ?predecessor ?militaryForcePredecessor WHERE {
  # Francisco Franco as commander in Biscay Campaign
  dbr:Biscay_Campaign dbo:partOf dbr:Spanish_Civil_War .
  dbr:Francisco_Franco dbo:commanderIn dbr:Biscay_Campaign ;
                      dbo:militaryForce dbr:Nationalist_Forces_Spain .

  # Military force under Franco
  ?militaryForceFranco rdfs:label ""Nationalist Forces (Spain)""@en .
  
  # Indalecio Prieto's predecessor as Minister of War
  OPTIONAL {
    ?predecessor dbo:positionHeld dbr:Minister_of_War_Spain ;
                dbo:successor dbr:Indalecio_Prieto .
    
    # Military force under Prieto's predecessor
    ?militaryForcePredecessor rdfs:label ""Republican Forces (Spain)""@en .
  }
}
```",6,11,7,3,3,3,3,71,0,0,3,0,0.0,0
701,46,test,Give me the parent of the child of Ramesses II and parent of the child of the spouse of Amun-her-khepeshef.,SELECT ?result WHERE { <http://dbpedia.org/resource/Amun-her-khepeshef> <http://dbpedia.org/ontology/spouse> ?v2 . ?result <http://dbpedia.org/ontology/child> ?v4 . ?v2 <http://dbpedia.org/ontology/child> ?v1 . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ramesses_II> . ?v1 <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parent1 ?parent2 WHERE {
  # Ramesses II's child
  ?child1 dbo:father dbr:Ramesses_II .
  
  # Parent of Ramesses II's child is Ramesses II himself
  ?parent1 dbr:Ramesses_II .

  # Amun-her-khepeshef's spouse
  ?spouse dbo:spouse dbr:Amun-her-khepeshef .

  # Child of Amun-her-khepeshef's spouse
  ?child2 dbo:parent ?spouse .

  # Parent of that child is the spouse itself
  ?parent2 ?spouse .
  
  FILTER(?parent1 = ?parent2)
}
```",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
232,52,test,"Give me the native of London and child of the person born as the birth name of Jon Pertwee and actor of the claim to fame, that is a film and a military conflict, of Sean Pertwee.",SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Sean_Pertwee> <http://dbpedia.org/ontology/knownFor> ?v5 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/London> . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v5 <http://dbpedia.org/ontology/starring> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v2 <http://dbpedia.org/property/birthName> ?v3 . },"```sparql
# Step 1: Get Jon Pertwee's birth name
SELECT ?birthName WHERE {
  dbpedia:Jon_Pertwee dbo:birthName ?birthName .
}

# Step 2: Find Sean Pertwee's claim to fame (film and military conflict)
SELECT DISTINCT ?film ?conflict WHERE {
  dbpedia:Sean_Pertwee dbo:claimToFame ?fame .
  OPTIONAL { ?fame rdf:type dbo:Film . FILTER(CONTAINS(LCASE(?fame), ""film"")) }
  OPTIONAL { ?fame rdf:type dbo:MilitaryConflict . FILTER(CONTAINS(LCASE(?fame), ""conflict"")) }
}

# Step 3: Find the native of London and child of Jon Pertwee
SELECT DISTINCT ?child WHERE {
  dbpedia:Jon_Pertwee dbo:child ?child .
  ?child dbo:nativePlace dbr:London .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
801,37,test,"Give me the associated musical artist of Chris Taylor (music producer) and producer of the work, that is a musical work and a song and a work, of the professional, that is a musical artist, in Rapper.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. <http://dbpedia.org/resource/Chris_Taylor_(music_producer)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://dbpedia.org/property/writer> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://dbpedia.org/ontology/producer> ?result . ?v0 <http://dbpedia.org/property/occupation> ""Rapper""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artist ?song WHERE {
  # Identify Chris Taylor as a music producer
  dbr:Chris_Taylor (dbo:occupation) dbr:Music_Producer .
  
  # Find associated musical artists
  dbr:Chris_Taylor dbo:associatedMusicalArtist ?artist .

  # Filter for artists who are rappers
  ?artist dbo:occupation dbr:Rapper .

  # Find songs produced by both Chris Taylor and the rapper
  ?song dbo:producer dbr:Chris_Taylor ;
        dbo:performer ?artist .
}
```",4,8,5,3,2,3,3,71,0,0,2,0,0.0,0
778,17,test,"Give me the entity in United States and author of the work, that is a software, of the author of Pushd and popd.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/author> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Software>. <http://dbpedia.org/resource/Pushd_and_popd> <http://dbpedia.org/property/author> ?v0 . ?v3 <http://dbpedia.org/property/author> ?v0 . ?result <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/United_States> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?software ?author WHERE {
  ?software a dbo:Software ;
           dbo:creator ?person .
  ?person foaf:name ""Brian Fox""@en .
  FILTER(CONTAINS(LCASE(?software), ""bash""))
}
```",4,5,5,3,2,3,2,20,0,0,1,0,0.0,0
303,24,test,"Give me the party of the person born, that is a politician, as Arnulfo Arias Madrid and entity in the country, that is a country, of El Valle de Antón.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ""Arnulfo Arias Madrid""@en . ?result <http://dbpedia.org/ontology/country> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://dbpedia.org/ontology/party> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/El_Valle_de_Antón> <http://dbpedia.org/ontology/country> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?party ?country 
WHERE {
  # Find Arnulfo Arias Madrid's political party
  dbr:Arnulfo_Arias_Madrid dbo:politicalParty ?party .

  # Find the country of El Valle de Antón
  dbr:El_Valle_de_Antón dbo:country ?country .
}
```",4,6,5,2,2,2,3,28,0,0,1,0,0.0,0
378,59,test,"Give me the war of the commander in the reference, that is a military conflict, to Peninsular War and war of the person born as the birth name of Carl Pontus Gahn.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Peninsular War""@en . ?v0 <http://dbpedia.org/ontology/commander> ?v5 . <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/property/birthName> ?v3 . ?v5 <http://dbpedia.org/ontology/battle> ?result . }","```sparql
# Step 1: Get the birth name of Carl Pontus Gahn
SELECT ?birthName WHERE {
  ?person rdfs:label ""Carl Pontus Gahn""@en .
  ?person foaf:name ?fullName .
  OPTIONAL { ?person dbp:birthName ?birthName . }
}

# Step 2: Find military conflicts associated with Carl Pontus Gahn
SELECT DISTINCT ?conflict WHERE {
  ?person rdfs:label ""Carl Pontus Gahn""@en .
  ?person dbo:militaryConflict ?conflict .
}

# Step 3: Identify a conflict related to both the Peninsular War and the conflict involving Carl Pontus Gahn
SELECT DISTINCT ?relatedConflict WHERE {
  # Conflicts associated with Carl Pontus Gahn
  ?person rdfs:label ""Carl Pontus Gahn""@en .
  ?person dbo:militaryConflict ?conflict1 .

  # The Peninsular War
  ?peninsularWar rdfs:label ""Peninsular War""@en .

  # Find a conflict related to both
  ?relatedConflict dbo:reference ?conflict1 ;
                  dbo:reference ?peninsularWar .
}
```",6,7,7,3,2,3,3,71,0,0,2,0,0.0,0
232,71,test,"Give me the child of the person born as the birth name of Jon Pertwee and actor of the claim to fame, that is a film and a military conflict, of the professional in Actor, narrator and producer and native of the residence, that is a settlement and British, of the native, that is a politician and an office holder, of France.","SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v7 <http://dbpedia.org/property/residence> ?v8 . ?result <http://dbpedia.org/ontology/birthPlace> ?v8 . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v8 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v5 <http://dbpedia.org/ontology/starring> ?result . ?v2 <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v4 <http://dbpedia.org/ontology/knownFor> ?v5 . ?v7 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/France> . ?v4 <http://dbpedia.org/property/occupation> ""Actor, narrator and producer""@en . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/property/birthName> ?v1 . }","```sparql
SELECT ?child WHERE {
  # Jon Pertwee's birth name
  dbpedia:Jon_Pertwee foaf:name ""John Julian Pertwee""@en .
  
  # Laurence Olivier's claims to fame and residence
  dbpedia:Laurence_Olivier dbo:claimToFame ?film, ?militaryConflict ;
                            dbo:nativePlace ?residence .
  ?film rdf:type dbo:Film .
  ?militaryConflict rdf:type dbo:MilitaryConflict .
  ?residence rdfs:label ""Dorking""@en ;
             dbo:country dbpedia:United_Kingdom .

  # Charles de Gaulle as a French politician and office holder
  dbpedia:Charles_de_Gaulle dbo:nationality dbpedia:France ;
                            dbo:occupation dbpedia:Politician, dbpedia:OfficeHolder .

  # Find the child of John Julian Pertwee
  ?person foaf:name ""John Julian Pertwee""@en .
  ?person dbo:child ?child .
}
```",9,15,10,3,3,3,3,71,0,0,1,0,0.0,0
356,19,test,"Give me the team of the native, that is a soccer player and a soccer manager, of the birth place, that is English and a settlement, of Gary Williams (footballer, born 1960) and player in the successor of 2014 Sacramento Republic FC season.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v4 <http://dbpedia.org/ontology/birthPlace> ?v0 . <http://dbpedia.org/resource/Gary_Williams_(footballer,_born_1960)> <http://dbpedia.org/ontology/birthPlace> ?v0 . ?result <http://dbpedia.org/ontology/manager> ?v4 . ?v2 <http://dbpedia.org/ontology/team> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/2014_Sacramento_Republic_FC_season> <http://dbpedia.org/ontology/successor> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. }","```sparql
# Step 1: Find Gary Williams' birthplace
SELECT ?birthPlace WHERE {
    ?g wdt:P31 wd:Q5; # Person
        wdt:P569 ?dateOfBirth;
        wdt:P19 ?birthPlace.
    FILTER (YEAR(?dateOfBirth) = 1960)
    FILTER(CONTAINS(LCASE(STR(?birthPlace)), ""england""))
    SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
} LIMIT 1

# Step 2: Find teams associated with the birthplace
SELECT ?team WHERE {
    ?team wdt:P131* ?birthPlace; # Located in or part of
        wdt:P31 wd:Q11173. # Football club
}

# Step 3: Identify successor of Sacramento Republic FC in 2014
SELECT ?successorTeam WHERE {
    ?s wdt:P463 wd:Q12345678; # Part of league
        wdt:P1619 ?year.
    FILTER (?year = 2014)
    ?successorTeam wdt:P463 ?league;
                   wdt:P1619 ?nextYear.
    FILTER (?nextYear > 2014)
}

# Step 4: Find players from the successor team who are also managers and born in Gary's birthplace
SELECT DISTINCT ?player ?currentTeam WHERE {
    ?player wdt:P31 wd:Q33999; # Football player
            wdt:P106 wd:Q82955; # Football manager
            wdt:P19 ?birthPlace;
            wdt:P39 ?successorTeam. # Player for team

    OPTIONAL { ?player wdt:P39 ?currentTeam }.
}

# Step 5: Return the current team of this player/manager
SELECT DISTINCT ?currentTeam WHERE {
    ?player wdt:P31 wd:Q33999;
            wdt:P106 wd:Q82955;
            wdt:P19 ?birthPlace;
            wdt:P39 ?successorTeam.
    OPTIONAL { ?player wdt:P39 ?currentTeam }.
}
```",5,9,6,3,2,3,2,20,0,0,1,0,0.0,0
528,53,test,"Give me the force of the person born as Narciso Campero Leyes and war of Orozimbo Barbosa and war of the military force of the entity, that is a societal event, in Chile.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ""Narciso Campero Leyes""@en . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/commander> ?v1 . ?v2 <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Chile> . <http://dbpedia.org/resource/Orozimbo_Barbosa> <http://dbpedia.org/ontology/battle> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?narcisoRole ?orozimboWar ?chileEvent WHERE {
  # Find Narciso Campero Leyes and his role
  OPTIONAL { 
    dbr:Narciso_Campero_Leyes dbo:role ?narcisoRole .
  }

  # Find the war involving Orozimbo Barbosa
  OPTIONAL {
    dbr:Orozimbo_Barbosa dbo:participatedInWar ?orozimboWar .
  }

  # Find a societal event in Chile related to military force
  OPTIONAL {
    ?chileEvent dbo:location dbr:Chile ;
                dbo:type dbr:Military_Conflict .
  }
}
```",6,7,7,3,3,3,3,71,0,0,2,0,0.0,0
9,38,test,Give me the alma mater of the awardee of Royal Medal and figure known as the nickname of Queen's University Belfast.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ?v2 . <http://dbpedia.org/resource/Queen's_University_Belfast> <http://dbpedia.org/property/nickname> ?v2 . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Medal> . ?v3 <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?almaMater WHERE {
  ?person dbo:awardReceived dbr:Royal_Medal .
  ?person foaf:name ""William Rowan Hamilton""@en .
  OPTIONAL { ?person dbo:nickName ?nickname . FILTER(CONTAINS(LCASE(?nickname), ""queen's university belfast"")) }
  ?education dbo:almaMater ?almaMater .
  ?education dbo:student ?person .
}
```",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
487,19,test,"Give me the administration of the person born, that is a soccer player, as the birth name of Phil Scott and country of the administration of Patricia McCoy.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/country> ?result . <http://dbpedia.org/resource/Phil_Scott> <http://dbpedia.org/property/birthName> ?v0 . ?v4 <http://dbpedia.org/property/birthName> ?v0 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v2 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Patricia_McCoy> . ?result <http://dbpedia.org/property/governor> ?v4 . },"```sparql
# Step 1: Find Phil Scott's birth name and confirm he is a soccer player
SELECT ?birthName WHERE {
    ?person foaf:name ""Phil Scott""@en .
    ?person dbo:occupation dbr:Soccer_player .
    ?person foaf:birthday ?birthday .
    OPTIONAL { ?person foaf:name ?birthName . }
}

# Step 2: Find the administration of the region associated with Phil Scott's birth name
SELECT ?administration WHERE {
    ?person foaf:name ?birthName .
    ?place dbo:birthPlace ?person .
    ?place dbo:country ?country .
    ?country dbo:administrativeRegion ?administration .
}

# Step 3: Find Patricia McCoy's administrative role and country of administration
SELECT ?country WHERE {
    ?person foaf:name ""Patricia McCoy""@en .
    ?person dbo:occupation dbr:Politician .
    ?person dbo:country ?country .
}
```",5,6,6,3,2,3,2,20,0,0,1,0,0.0,0
404,56,test,"Give me the parent of Prince Ernest Augustus of Hanover (born 1914) and spouse of the person born, that is a royalty, as Princess Victoria Louise of Prussia and child of the father of the spouse of Princess Victoria Louise of Prussia.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Prince_Ernest_Augustus_of_Hanover_(born_1914)> . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?v0 . ?v0 <http://dbpedia.org/property/father> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/parent> ?v1 . ?v2 <http://dbpedia.org/property/birthName> ""Princess Victoria Louise of Prussia""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent ?spouse ?father ?child WHERE {
  # Prince Ernest Augustus of Hanover (born 1914)
  dbr:Prince_Ernst_August_of_Hanover_(1914) dbo:parent ?parent .
  
  # Princess Victoria Louise of Prussia's spouse
  dbr:Princess_Victoria_Louise_of_Prussia dbo:spouse ?spouse .

  # Spouse's father
  ?spouse dbo:father ?father .

  # Father's child
  ?father dbo:child ?child .
  
  FILTER(?parent = ?child)
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
251,20,test,"Give me the location of Battle of Marengo and administration of the ruling party, that is a political party and an organisation, in Sicily and death place of Laura Mancinelli.",SELECT ?result WHERE { <http://dbpedia.org/resource/Sicily> <http://dbpedia.org/property/leaderParty> ?v3 . <http://dbpedia.org/resource/Laura_Mancinelli> <http://dbpedia.org/ontology/deathPlace> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?result <http://dbpedia.org/property/leaderParty> ?v3 . <http://dbpedia.org/resource/Battle_of_Marengo> <http://dbpedia.org/ontology/place> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
# Query for the location of the Battle of Marengo
SELECT ?location WHERE {
  dbpedia:Battle_of_Marengo dbo:place dbpedia:P31 .
  dbpedia:P31 rdfs:label ?location .
  FILTER (lang(?location) = 'en')
}

UNION

# Query for the administration of the ruling party in Sicily
SELECT ?party WHERE {
  dbpedia:Sicily dbo:government dbpedia:Government_of_Sicily .
  dbpedia:Government_of_Sicily dbo:headOfState ?party .
  ?party a dbo:PoliticalParty ;
         rdfs:label ?partyLabel .
  FILTER (lang(?partyLabel) = 'en')
}

UNION

# Query for the death place of Laura Mancinelli
SELECT ?deathPlace WHERE {
  dbpedia:Laura_Mancinelli dbo:placeOfBirth ?birthPlace ;
                           dbo:deathPlace ?deathPlace .
  FILTER (lang(?deathPlace) = 'en')
}
```",4,6,5,2,3,2,3,28,0,0,1,0,0.0,0
528,27,test,Give me the force of the person born as the birth name of Narciso Campero.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> ?v2 . ?v2 <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Narciso_Campero> <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?force WHERE {
  ?person rdfs:label ""Andrés de Santa Cruz y Calahumana""@en .
  OPTIONAL { ?person dbo:militaryRank ?rank . }
  OPTIONAL { ?person dbo:armySize ?size . }
  FILTER (lang(?person) = 'en')
  
  # Assuming force could be related to military rank or army size
  BIND(COALESCE(str(?rank), str(?size)) AS ?force)
}
```",3,3,4,3,1,3,3,71,0,0,4,0,0.0,0
328,58,test,"Give me the awardee of Order of Suvorov and commander in the force of Ferenc Szálasi and leader of the office, that is a government agency, of the leader, that is an office holder and a politician, of Gustav Jonson.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Order_of_Suvorov> . ?v2 <http://dbpedia.org/ontology/leader> ?result . <http://dbpedia.org/resource/Gustav_Jonson> <http://dbpedia.org/property/leader> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/property/office> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v5 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Ferenc_Szálasi> . ?v5 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT DISTINCT ?person WHERE {
  # Step 1: Identify Gustav Jonson's office or leadership role
  ?gustavJonson dbo:officeHolder ?office .
  ?gustavJonson foaf:name ""Gustav Jonson"" .

  # Step 2: Find the leader of Gustav Jonson's office
  ?leader dbo:headOf ?office .
  
  # Step 3: Identify Ferenc Szálasi's commander in his force
  ?szalasiCommander dbo:commanderInForce ?ferencSzalasiForce .
  ?ferencSzalasiForce dbo:leader ?ferencSzalasi .

  # Step 4: Find the awardee of Order of Suvorov
  ?person dbo:awardeeOfOrderOfSuvorov true .

  # Linking all parts together
  FILTER(?leader = ?szalasiCommander && ?szalasiCommander = ?person)
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
404,30,test,"Give me the spouse of Princess Victoria Louise of Prussia and child of the father of Ernest Augustus, Duke of Brunswick and parent of Prince Ernest Augustus of Hanover (born 1914).","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Prince_Ernest_Augustus_of_Hanover_(born_1914)> . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/property/father> ?v1 . }","```sparql
SELECT ?spouse WHERE {
  wd:Q1234567 wdt:P26 ?spouse .
  FILTER EXISTS { ?spouse wdt:P31 wd:Q5 . } # Ensure the spouse is a person
}
```

In this query:
- `wd:Q1234567` should be replaced with the DBpedia identifier for Princess Victoria Louise of Prussia.
- The property `P26` represents ""spouse.""
- We filter to ensure that the result is indeed a person (`P31` is ""instance of"" and `Q5` is ""human"").",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
54,48,test,"Give me the child of the father of the child of Thinkhaya of Pagan and predecessor of the child, that is an office holder and a royalty, of Thihapate of Mohnyin.",SELECT ?result WHERE { <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/successor> ?v1 . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Thihapate_of_Mohnyin> . ?v3 <http://dbpedia.org/property/father> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?thinkhayaChild WHERE {
  # Thinkhaya of Pagan
  ?thinkhaya a dbo:Monarch ;
             foaf:name ""Thinkhaya""@en ;
             dbo:country dbr:Myanmar .

  # Thinkhaya's child (his successor)
  ?thinkhayaChild dbo:successorOf ?thinkhaya ;
                  a dbo:Monarch ;
                  dbo:officeHolder true ;
                  dbo:royalty true .

  # Thihapate of Mohnyin
  ?thihapate a dbo:Monarch ;
             foaf:name ""Thihapate""@en ;
             dbo:country dbr:Myanmar .

  # Thihapate's child
  ?thihapateChild dbo:successorOf ?thihapate ;
                  a dbo:Monarch ;
                  dbo:officeHolder true ;
                  dbo:royalty true .

  # Find the predecessor of Thihapate's child that is Thinkhaya's child
  ?thinkhayaChild dbo:predecessorOf ?thihapateChild .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
392,24,test,"Give me the province of the residence, that is a settlement and Italian, of Sebastiano Bianchetti and region of the time zone, that is a sports event, of Aguilar de Segarra.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/timeZone> ?v2 . ?v1 <http://dbpedia.org/ontology/province> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Sebastiano_Bianchetti> <http://dbpedia.org/property/residence> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsEvent>. <http://dbpedia.org/resource/Aguilar_de_Segarra> <http://dbpedia.org/ontology/timeZone> ?v2 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. },"```sparql
# Query for Sebastiano Bianchetti's province of residence
SELECT ?province WHERE {
  ?person dbo:birthPlace dbr:Italy .
  ?person foaf:name ""Sebastiano Bianchetti""@it .
  ?person dbo:residence ?settlement .
  ?settlement a dbo:Settlement ;
              dbo:country dbr:Italy ;
              dbo:administrativeTerritoryLevel1 ?province .
}

# Query for Aguilar de Segarra's time zone region and sports event
SELECT DISTINCT ?region ?event WHERE {
  # Find the time zone of Aguilar de Segarra
  ?place a dbo:Municipality ;
         foaf:name ""Aguilar de Segarra""@en ;
         dbo:timeZone ?timezone .
  
  # Find regions associated with this time zone
  ?timezone dbo:region ?region .

  # Find sports events in these regions
  ?event dbo:location ?region ;
         a dbo:SportsEvent .
}
```",4,7,5,2,2,2,3,28,0,0,1,0,0.0,0
314,23,test,"Give me the person deceased at the headquarter of House of Sombrerete and commander in the profession, that is an event and a societal event, of Lisa Gavrić.",SELECT ?result WHERE { <http://dbpedia.org/resource/Lisa_Gavrić> <http://dbpedia.org/property/occupation> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/House_of_Sombrerete> <http://dbpedia.org/ontology/location> ?v2 . ?v1 <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/restingPlace> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?deathEvent ?event
WHERE {
  # Find the person who died at the headquarter of House of Sombrerete and was a commander
  ?deathEvent dbo:place dbr:Headquarters_of_House_of_Sombrerete .
  ?deathEvent dbo:agent ?person .
  ?person dbo:occupation ""Commander"" .

  # Find events related to Lisa Gavrić that are both general and societal events
  ?event dbp:relatedTo dbr:Lisa_Gavrić .
  ?event rdf:type dbo:Event .
  ?event rdf:type dbo:SocietalEvent .

  # Link the death event to the events of Lisa Gavrić
  ?deathEvent dbp:relatedTo ?event .
}
```",4,6,5,2,2,2,3,28,0,0,1,0,0.0,0
9,51,test,"Give me the alma mater of the awardee of Royal Medal and figure known as the nickname of the entity, that is an organisation and an educational institution, in Northern Ireland.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?result <http://dbpedia.org/property/nickname> ?v2 . ?v4 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Medal> . ?v1 <http://dbpedia.org/property/nickname> ?v2 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Northern_Ireland> . ?v4 <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
SELECT ?almaMater WHERE {
  ?person dbo:award dbp:RoyalMedal .
  ?person rdfs:label ?nickname FILTER (CONTAINS(LCASE(?nickname), ""nickname"")) .
  ?person foaf:almaMater ?university .
  ?university rdfs:label ?almaMater .
  ?organisation rdf:type dbo:EducationalInstitution ;
                dbo:location dbpedia:Northern_Ireland ;
                rdfs:label ?orgLabel FILTER (CONTAINS(LCASE(?orgLabel), ""queen's university belfast"")).
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
617,58,test,Give me the child of Antiochus III the Great and spouse of the child of Antiochus III the Great and parent of the child of the commander in Battle of Panium.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Antiochus_III_the_Great> . ?v5 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/child> ?v2 . ?v1 <http://dbpedia.org/ontology/child> ?v2 . <http://dbpedia.org/resource/Antiochus_III_the_Great> <http://dbpedia.org/ontology/child> ?v5 . <http://dbpedia.org/resource/Battle_of_Panium> <http://dbpedia.org/ontology/commander> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child ?spouse WHERE {
  # Antiochus III the Great and his child
  dbr:Antiochus_III_the_Great dbo:child ?child .
  
  # Child of Antiochus III the Great (Seleucus IV Philopator)
  ?child rdfs:label ""Seleucus_IV_Philopator""@en .

  # Spouse of Seleucus IV Philopator
  ?spouse dbo:spouse ?child ;
          rdfs:label ?spouseLabel .
  
  FILTER(CONTAINS(LCASE(?spouseLabel), ""laodice iv""))
}
```",6,6,7,3,3,3,3,71,0,0,2,0,0.0,0
767,65,test,"Give me the entity in the administration, that is a settlement, of Green and reference to the alter ego of Black Hood and alma mater of the administration of the reference to George Kilbon Nash.","SELECT ?result WHERE { ?v6 <http://dbpedia.org/ontology/almaMater> ?result . ?v4 <http://dbpedia.org/property/leaderParty> ""Green""@en . <http://dbpedia.org/resource/Black_Hood> <http://dbpedia.org/property/alterEgo> ?v3 . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . ?v0 <http://xmlns.com/foaf/0.1/name> ""George Kilbon Nash""@en . ?result <http://dbpedia.org/ontology/state> ?v4 . ?v6 <http://dbpedia.org/property/governor> ?v0 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?settlement WHERE {
  # Step 1: Identify George Kilbon Nash's alma mater
  dbr:George_Kilbon_Nash dbo:almaMater dbr:Yale_University .

  # Step 2: Find the administration of Yale University
  dbr:Yale_University dbo:administration ?administration .

  # Step 3: Identify Black Hood's alter ego (assuming Batman)
  dbr:Bruce_Wayne dbo:fictionalAlterEgo dbr:Batman .

  # Step 4: Find a settlement in Green's administration related to Batman
  ?settlement dbo:partOf ?administration .
  ?settlement dbo:relatedTo dbr:Batman .
  
  FILTER regex(?settlement, ""Green"", ""i"") # Assuming 'Green' is part of the settlement name or description
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
182,22,test,Give me the war of the author of 2019 Sri Lanka Easter bombings and war of the work of Gotabhaya Rajapaksa.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v3 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Gotabhaya_Rajapaksa> . <http://dbpedia.org/resource/2019_Sri_Lanka_Easter_bombings> <http://dbpedia.org/property/author> ?v2 . ?v3 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
# Query to find an author related to the 2019 Sri Lanka Easter bombings
SELECT ?author WHERE {
  ?event dcterms:subject dbc:Sri_Lankan_Easter_bombings_2019 .
  ?event dbo:reporter ?person .
  ?person foaf:name ?author .
}

UNION

# Query to find the war associated with Gotabhaya Rajapaksa
SELECT ?war WHERE {
  wd:Q1596958 dbo:role ""Secretary of Defence""@en ;
              dbo:associatedWith ?event .
  ?event dbo:subject dbc:Sri_Lankan_Civil_War .
  ?event rdfs:label ?war .
}
```",4,4,5,2,2,2,3,28,0,0,1,0,0.0,0
659,46,test,"Give me the commander in the war, that is an event and a military conflict, of 1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish) and commander in the force of the native, that is an office holder, of Kingdom of Ireland.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/1st_Light_Cavalry_Lancers_Regiment_of_the_Imperial_Guard_(Polish)> <http://dbpedia.org/ontology/battle> ?v4 . ?v4 <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Kingdom_of_Ireland> . ?v1 <http://dbpedia.org/ontology/commander> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commander1 ?war1 ?commander2 ?officeHolder2 WHERE {
  # Find commander of the 1st Light Cavalry Lancers Regiment during a war or military conflict
  ?regiment dbo:partOfMilitaryUnit ?unit .
  ?unit dbo:commander ?commander1 .
  ?commander1 dbo:occupation dbr:Military_commander .
  ?war1 dbo:participant ?unit .
  
  FILTER (STRSTARTS(STR(?regiment), ""http://dbpedia.org/resource/1st_Light_Cavalry_Lancers_Regiment_of_the_Imperial_Guard_(Polish)""))

  # Find native office holder who was a commander in the Kingdom of Ireland
  ?person dbo:nationality dbr:Kingdom_of_Ireland .
  ?person dbo:occupation dbr:Military_commander .
  ?officeHolder2 dbo:officeHolder ?person .
  
  FILTER (STRSTARTS(STR(?officeHolder2), ""http://dbpedia.org/resource/""))
}
```",5,8,6,3,2,3,3,71,0,0,71,0,0.0,0
485,20,test,"Give me the entity in Nottinghamshire and birth place of the awardee, that is a writer and a poet, of Eric Gregory Award and entity in United Kingdom.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Poet>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Eric_Gregory_Award> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>. ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Nottinghamshire> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?writer ?birthPlace WHERE {
  ?writer dbo:award dbr:Eric_Gregory_Award .
  ?writer a dbo:Writer ;
          a dbo:Poet .
  ?writer dbp:birthPlace ?birthPlace .
  FILTER (CONTAINS(LCASE(str(?birthPlace)), ""nottinghamshire""))
}
```",4,6,5,2,3,2,3,28,0,0,1,0,0.0,0
528,68,test,"Give me the war of the commander in the work of --01-09 and force of the person born as Narciso Campero Leyes and war of the military force of the entity, that is a societal event, in Chile.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/commander> ?v7 . ?result <http://dbpedia.org/ontology/commander> ?v3 . ?v5 <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Chile> . ?v0 <http://dbpedia.org/property/author> ""--01-09""^^<http://www.w3.org/2001/XMLSchema#gMonthDay> . ?v3 <http://dbpedia.org/property/birthName> ""Narciso Campero Leyes""@en . ?v7 <http://dbpedia.org/ontology/battle> ?result . ?v4 <http://dbpedia.org/ontology/battle> ?result . ?v4 <http://dbpedia.org/ontology/battle> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?event ?commander ?militaryForce WHERE {
  # Find societal events or wars on 2009-01-09
  ?event dbo:date ""2009-01-09""^^xsd:date ;
         a dbo:SocietalEvent .

  OPTIONAL {
    # Identify Narciso Campero Leyes and his role as a commander
    ?commander dbp:birthName ""Narciso Campero Leyes"" ;
               dbo:role dbr:MilitaryCommander .
    
    # Find connection to military forces in Chile
    ?militaryForce dbo:country dbr:Chile ;
                   dbo:commander ?commander .

    # Link the event with the commander and military force
    ?event dbo:involvedMilitaryForce ?militaryForce ;
           dbo:commander ?commander .
  }
}
```",8,9,9,3,3,3,3,71,0,1,2,0.0,0.0,0
547,34,test,Give me the resting place of Alan Cunningham and resting place of the child of the child of William Haliburton.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> ""William Haliburton""@en . ?v2 <http://dbpedia.org/ontology/child> ?v1 . <http://dbpedia.org/resource/Alan_Cunningham> <http://dbpedia.org/ontology/restingPlace> ?result . ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . }","```sparql
# Query to find the resting place of Alan Cunningham
SELECT ?restingPlace WHERE {
  ?person dbo:birthName ""Alan Cunningham""@en .
  ?person dbo:deathPlace ?restingPlace .
}

UNION

# Query to find the resting place of the grandchild of William Haliburton
SELECT ?grandChildRestingPlace WHERE {
  # Find a child of William Haliburton
  ?williamHaliburton dbo:birthName ""William Haliburton""@en ;
                     dbo:child ?child .
  
  # From that child, find their own child (the grandchild)
  ?child dbo:child ?grandChild .

  # Get the resting place of this grandchild
  ?grandChild dbo:deathPlace ?grandChildRestingPlace .
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
767,58,test,"Give me the reference to the alter ego of the persona, that is a fictional character, of Matthew Burland and alma mater of the administration of George K. Nash and entity in Baden-Württemberg.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/alterEgo> ""Matthew Burland""@en . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v5 <http://dbpedia.org/ontology/almaMater> ?result . ?v5 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/George_K._Nash> . ?result <http://dbpedia.org/ontology/state> <http://dbpedia.org/resource/Baden-Württemberg> . ?v1 <http://dbpedia.org/property/alterEgo> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?alterEgo ?entityInBadenWuerttemberg WHERE {
  # Assuming Matthew Burland's alter ego is known and linked in DBpedia
  dbr:Matthew_Burland dbo:fictionalAlterEgo ?alterEgo .
  
  # Find the alma mater of George K. Nash
  dbr:George_K._Nash dbo:almaMater ?university .

  # Link the alter ego to an entity in Baden-Württemberg
  ?alterEgo dbo:location ?entityInBadenWuerttemberg .
  ?entityInBadenWuerttemberg dbo:country dbr:Germany ;
                             dbo:stateOrProvince dbr:Baden-Württemberg .

}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
392,20,test,"Give me the region of the time zone, that is a sports event, of Aguilar de Segarra and entity in Italy and province of Schio.",SELECT ?result WHERE { <http://dbpedia.org/resource/Schio> <http://dbpedia.org/ontology/province> ?result . <http://dbpedia.org/resource/Aguilar_de_Segarra> <http://dbpedia.org/ontology/timeZone> ?v3 . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy> . ?result <http://dbpedia.org/ontology/timeZone> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsEvent>. },"```sparql
# Step 1: Find the time zone for Aguilar de Segarra
SELECT ?timeZone WHERE {
  dbpedia-es:Aguilar_de_Segarra dbo:locationInTimezone ?timeZone .
}

# Step 2: Identify a sports event in that region/time zone
SELECT DISTINCT ?event WHERE {
  ?region dcterms:isPartOf ?country .
  ?country dbo:locationInTimezone ?timeZone .
  ?event dbo:location ?region ;
         rdf:type dbo:SportsEvent .
}

# Step 3: Find an entity in Italy within the same time zone
SELECT DISTINCT ?italianEntity WHERE {
  ?italianEntity dbo:locationInTimezone ?timeZone ;
                 dbo:country dbr:Italy .
}

# Step 4: Check if this Italian entity is in the province of Schio
SELECT DISTINCT ?entity WHERE {
  ?entity dbo:partOfProvince dbr:Schio ;
          dbo:locationInTimezone ?timeZone .
}
```",4,5,5,2,3,2,3,28,0,0,1,0,0.0,0
547,55,test,Give me the resting place of the awardee of Knight Grand Cross of the Order of St Michael and St George and resting place of the child of James Burton (property developer) and resting place of the actor of Enemy at the Door.,SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Enemy_at_the_Door> <http://dbpedia.org/property/starring> ?v5 . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_St_Michael_and_St_George> . ?v3 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/James_Burton_(property_developer)> <http://dbpedia.org/ontology/child> ?v3 . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
SELECT ?person ?restingPlace WHERE {
  # Awardee of Knight Grand Cross of the Order of St Michael and St George
  { 
    ?person dbo:award dbp:KnightGrandCrossOfTheOrderOfStMichaelAndStGeorge .
    OPTIONAL { ?person dbo:deathPlace ?restingPlace . }
  } UNION
  # Child of James Burton (property developer)
  {
    ?child dbo:parent dbr:James_Burton_(property_developer) .
    OPTIONAL { ?child dbo:deathPlace ?restingPlace . }
  } UNION
  # Actor of ""Enemy at the Door""
  {
    ?actor dbo:film dbp:Enemy_at_the_Door .
    OPTIONAL { ?actor dbo:deathPlace ?restingPlace . }
  }
}
```",6,6,7,2,3,3,3,71,0,0,1,0,0.0,0
232,48,test,"Give me the child of the person born as the birth name of Jon Pertwee and native of the residence, that is a settlement and British, of Sylvie Bermann.",SELECT ?result WHERE { <http://dbpedia.org/resource/Sylvie_Bermann> <http://dbpedia.org/property/residence> ?v1 . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v2 <http://dbpedia.org/property/birthName> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/property/birthName> ?v3 . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . },"```sparql
# Step 1: Find Jon Pertwee's birth name
SELECT ?birthName WHERE {
  wd:Q12345 foaf:name ""Jon Pertwee""@en .
  wd:Q12345 schema:birthName ?birthName .
}

# Step 2: Identify Sylvie Bermann's native British settlement
SELECT ?settlement WHERE {
  wd:Q67890 foaf:name ""Sylvie Bermann""@en .
  wd:Q67890 schema:nativePlace ?place .
  ?place wdt:P31/wdt:P279* wd:Q515 . # Q515 is the concept of a settlement
  ?place wdt:P17 wd:Q145 .          # Q145 is the identifier for the United Kingdom
}

# Step 3: Find the child of the person with Jon Pertwee's birth name from the identified British settlement
SELECT ?child WHERE {
  ?person schema:birthName ?birthName .
  ?person schema:nativePlace ?settlement .
  ?child schema:parent ?person .
}
```

Note: Replace `wd:Q12345` and `wd:Q67890` with the actual DBpedia identifiers for Jon Pertwee and Sylvie Bermann, respectively. The query assumes that these identifiers are known or can be found through additional queries.",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
488,39,test,"Give me the administration of the father of the spouse, that is a royalty, of Tokugawa Masako and death place of Tokugawa Ieyasu.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Tokugawa_Masako> . ?v0 <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Tokugawa_Ieyasu> <http://dbpedia.org/ontology/deathPlace> ?result . ?result <http://dbpedia.org/property/leader> ?v1 . },"```sparql
SELECT ?deathPlace WHERE {
  wd:Q12345 dbo:placeOfDeath ?deathPlace .
}
```

In this query:
- `wd:Q12345` is a placeholder for the DBpedia resource ID of Tokugawa Ieyasu. You would need to replace it with the actual resource ID from DBpedia.",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
9,71,test,"Give me the figure known as the nickname of the entity, that is an organisation and an educational institution, in Northern Ireland and alma mater of the mayor, that is a politician, of the entity, that is an organisation, in Belfast and alma mater of the awardee of the reference, that is an award, to Royal Medals.","SELECT ?result WHERE { ?v4 <http://xmlns.com/foaf/0.1/name> ""Royal Medals""@en . ?v7 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Northern_Ireland> . ?v7 <http://dbpedia.org/property/nickname> ?v8 . ?v1 <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Belfast> . ?v2 <http://dbpedia.org/ontology/almaMater> ?result . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v5 <http://dbpedia.org/property/awards> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v1 <http://dbpedia.org/property/leader> ?v2 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v5 <http://dbpedia.org/ontology/almaMater> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/property/nickname> ?v8 . }","```sparql
# Step 1: Find an organization in Belfast that is also an educational institution
SELECT ?institution WHERE {
  ?institution dbo:location dbr:Belfast .
  ?institution rdf:type dbo:EducationalInstitution .
}

# Step 2: Identify the mayor of Belfast and their alma mater
SELECT ?mayor ?almaMater WHERE {
  ?mayor dbo:office dbr:Maire_of_Belfast .
  ?mayor dbo:almaMater ?almaMater .
  ?almaMater rdf:type dbo:EducationalInstitution .
}

# Step 3: Find awards related to Royal Medals and their awardees
SELECT ?award ?awardee WHERE {
  ?award dbo:name ""Royal Medal""@en .
  ?awardee dbo:recipientOf ?award .
  ?awardee dbo:almaMater ?institution .
}

# Step 4: Verify if the same institution is linked to both the mayor and the awardee
SELECT DISTINCT ?institution ?nickname WHERE {
  VALUES (?mayor ?awardee) { (<mayorURI> <awardeeURI>) }
  
  ?mayor dbo:almaMater ?institution .
  ?awardee dbo:almaMater ?institution .

  OPTIONAL { ?institution skos:altLabel ?nickname . }
}
```

Note: Replace `<mayorURI>` and `<awardeeURI>` with the actual URIs obtained from previous queries.",9,14,10,3,3,3,3,71,0,0,1,0,0.0,0
427,49,test,"Give me the reference to the name of Italian People's Party (1994) and party of the person born, that is an office holder and a politician, as the birth name of Romano Prodi.",SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/property/birthName> ?v0 . <http://dbpedia.org/resource/Italian_People's_Party_(1994)> <http://xmlns.com/foaf/0.1/name> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/property/birthName> ?v0 . },"```sparql
# Query for Italian People's Party (1994)
SELECT ?party ?partyLabel WHERE {
  ?party a dbo:PoliticalParty ;
         rdfs:label ?partyLabel .
  FILTER(CONTAINS(LCASE(?partyLabel), ""italian people's party"") && 
         CONTAINS(LCASE(STR(?party)), ""1994""))
}

# Query for Romano Prodi's birth name and political affiliations
SELECT ?birthName ?politicalAffiliation WHERE {
  wd:Q12345 foaf:name ?birthName .
  OPTIONAL { wd:Q12345 dbo:memberOf ?affiliation . 
             ?affiliation a dbo:PoliticalParty ;
                          rdfs:label ?politicalAffiliation }
}
```

Note: Replace `wd:Q12345` with the actual DBpedia identifier for Romano Prodi.",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
747,63,test,"Give me the band of the person born as Tracey Elizabeth McSween and band of the writer of Apollo (Hardwell song) and person born on the birth date of the person decedent, that is an athlete and a soccer player, at Zolotonosha.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthDate> ?v3 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v6 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Apollo_(Hardwell_song)> <http://dbpedia.org/property/writer> ?v6 . ?v2 <http://dbpedia.org/property/birthName> ""Tracey Elizabeth McSween""@en . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v4 <http://dbpedia.org/ontology/birthDate> ?v3 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v4 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Zolotonosha> . }","```sparql
# Query for Tracey Elizabeth McSween's band
SELECT ?band WHERE {
  ?person foaf:name ""Tracey Elizabeth McSween""@en .
  OPTIONAL { ?person dbo:memberOfBand ?band . }
}

UNION

# Query for the writer of Apollo (Hardwell song) and their band
SELECT ?writerBand WHERE {
  ?song dbo:title ""Apollo""@en ;
        dbo:lyricsBy ?writer .
  OPTIONAL { ?writer dbo:memberOfBand ?writerBand . }
}

UNION

# Query for the decedent's birth date
SELECT ?decedentBirthDate WHERE {
  ?decedent dbo:birthDate ?decedentBirthDate ;
            dbo:sport ""soccer player""@en ;
            dbo:placeOfBirth dbpedia:Zolotonosha .
}

UNION

# Query for the person born on the decedent's birth date who is an athlete and soccer player
SELECT ?personBand WHERE {
  ?decedentBirthDate a dbo:BirthDate ;
                     dbo:birthDate ?date .
  ?person dbo:birthDate ?date ;
          dbo:sport ""soccer player""@en ;
          dbo:occupation ""athlete""@en .
  OPTIONAL { ?person dbo:memberOfBand ?personBand . }
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
328,62,test,Give me the commander in the force of the person decedent at Budapest and awardee of the award of the commander in Volcano and Ryukyu Islands campaign and leader of People's Commissariat of Defense of the Soviet Union.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ?v3 . ?v6 <http://dbpedia.org/ontology/commander> ?v0 . <http://dbpedia.org/resource/Volcano_and_Ryukyu_Islands_campaign> <http://dbpedia.org/ontology/commander> ?v4 . ?v4 <http://dbpedia.org/property/awards> ?v3 . ?v0 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Budapest> . <http://dbpedia.org/resource/People's_Commissariat_of_Defense_of_the_Soviet_Union> <http://dbpedia.org/ontology/leader> ?result . ?v6 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:MilitaryPerson .
  ?person dbo:commanderOf ?budapestOperation .
  ?buddapestOperation dbo:location dbr:Budapest .
  ?person dbo:award ?okinawaAward .
  ?okinawaAward dbo:name ""Order of the Red Banner"" ; # Assuming this award for Okinawa
                 dbo:recipient ?person .
  ?person dbo:positionHeld dbr:People's_Commissar_of_Defence_of_the_Soviet_Union .
}
```",7,7,8,3,3,3,3,71,0,0,1,0,0.0,0
528,37,test,Give me the war of the commander in the work of --01-09 and force of Narciso Campero.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/commander> ?v3 . ?v3 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Narciso_Campero> . ?v0 <http://dbpedia.org/property/author> ""--01-09""^^<http://www.w3.org/2001/XMLSchema#gMonthDay> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?battle ?commander ?force WHERE {
  ?battle dbo:partOf dbr:War_of_the_Pacific .
  ?battle dbo:date ""1881-01-18""^^xsd:date .
  ?battle dbo:commander dbr:Narciso_Campero .
  ?battle dbo:opposingCommander ?opponent .
  OPTIONAL { ?battle dbo:participatingMilitaryUnit ?force . }
}
```",4,4,5,3,2,3,3,71,0,0,2,0,0.0,0
378,71,test,"Give me the war of the person born as the birth name of Carl Pontus Gahn and claim to fame of the commander in the war, that is a military conflict and a societal event and an event, of Thomas Trigge and war of the commander in the reference, that is a military conflict, to Peninsular War.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ?v1 . ?v7 <http://dbpedia.org/ontology/commander> ?v8 . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v4 <http://xmlns.com/foaf/0.1/name> ""Peninsular War""@en . ?v5 <http://dbpedia.org/ontology/battle> ?result . ?v4 <http://dbpedia.org/ontology/commander> ?v5 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Thomas_Trigge> <http://dbpedia.org/ontology/battle> ?v7 . ?v8 <http://dbpedia.org/ontology/knownFor> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. }","```sparql
# Query to find the birth name of Carl Pontus Gahn
SELECT ?birthName WHERE {
  ?person rdfs:label ""Carl Pontus Gahn""@en .
  ?person foaf:name ?birthName .
}

# Query to find the war associated with Carl Pontus Gahn's claim to fame
SELECT DISTINCT ?war WHERE {
  ?person rdfs:label ""Carl Pontus Gahn""@en .
  ?person dbo:occupation dbo:MilitaryPerson .
  ?person dbo:militaryConflict ?war .
}

# Query to find the birth name of Thomas Trigge
SELECT ?birthName WHERE {
  ?person rdfs:label ""Thomas Trigge""@en .
  ?person foaf:name ?birthName .
}

# Query to find the war associated with Thomas Trigge's claim to fame
SELECT DISTINCT ?war WHERE {
  ?person rdfs:label ""Thomas Trigge""@en .
  ?person dbo:occupation dbo:MilitaryPerson .
  ?person dbo:militaryConflict ?war .
}

# Query to find a commander in the Peninsular War and their associated war
SELECT DISTINCT ?commander ?associatedWar WHERE {
  ?commander rdfs:label ?label .
  ?commander dbo:militaryConflict [ 
    rdf:type dbo:MilitaryConflict ;
    rdfs:label ""Peninsular War""@en ] .
  OPTIONAL { ?commander dbo:militaryConflict ?associatedWar . }
}
```",9,13,10,3,3,3,3,71,0,0,2,0,0.0,0
528,38,test,Give me the war of the commander in Battle of La Rinconada de Ate and force of the person born as Narciso Campero Leyes.,"SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Battle_of_La_Rinconada_de_Ate> <http://dbpedia.org/ontology/commander> ?v3 . ?result <http://dbpedia.org/ontology/commander> ?v2 . ?v2 <http://dbpedia.org/property/birthName> ""Narciso Campero Leyes""@en . }","```sparql
# Query to find the commander in the Battle of La Rinconada de Ate and the associated war
SELECT ?commander ?war WHERE {
  ?battle dbpedia-owl:wikiPageRedirects ?redirect .
  ?redirect rdfs:label ""Battle of La Rinconada de Ate""@en .
  ?battle dbo:commander ?commander .
  ?battle dbo:partOf ?conflict .
  ?conflict rdf:type dbo:MilitaryConflict .
  ?conflict rdfs:label ?war .
}

# Query to find the force commanded by Narciso Campero Leyes
SELECT ?force WHERE {
  ?person foaf:name ""Narciso Campero Leyes""@en .
  ?person dbo:militaryCommanderOf ?command .
  ?command dbo:commander ?person .
  ?command dbo:participatedIn ?conflict .
  ?conflict rdf:type dbo:MilitaryConflict .
  OPTIONAL { ?command dbo:forceSize ?size . }
  BIND(COALESCE(?size, ""Unknown"") AS ?force)
}
```",4,4,5,2,2,3,3,71,0,0,2,0,0.0,0
404,45,test,Give me the parent of Prince Ernest Augustus of Hanover (born 1914) and child of the father of the spouse of Princess Victoria Louise of Prussia and spouse of Princess Victoria Louise of Prussia.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/ontology/parent> ?v1 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Prince_Ernest_Augustus_of_Hanover_(born_1914)> . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?v0 . },"```sparql
SELECT ?parent ?child WHERE {
  # Find Prince Ernest Augustus of Hanover (born 1914)
  ?person rdfs:label ""Prince Ernest Augustus of Hanover""@en .
  ?person dbo:birthYear ""1914""^^xsd:gYear .

  # Get his parent
  ?person dbo:parent ?parent .

  # Find Princess Victoria Louise of Prussia and her spouse
  ?princess rdfs:label ""Princess Victoria Louise of Prussia""@en .
  ?princess dbo:spouse ?husband .

  # Get the father of the husband (who is also the parent of Prince Ernest Augustus)
  ?husband dbo:father ?parent .

  # Ensure the child of this person is Prince Ernest Augustus
  ?parent dbo:child ?person .
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
659,36,test,"Give me the military force of the force, that is a societal event and an event and a military conflict, of the reference to Rutger Jan Schimmelpenninck and commander in German campaign of 1813.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/commander> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/German_campaign_of_1813> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Rutger Jan Schimmelpenninck""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce ?commander WHERE {
  # Rutger Jan Schimmelpenninck's role in the German Campaign of 1813
  dbr:Rutger_Jan_Schimmelpenninck dbo:associatedWith ?event .
  
  # The event is the German Campaign of 1813
  ?event rdfs:label ""German campaign of 1813""@en .

  # Find the military force involved in this event
  ?event dbo:militaryConflict ?militaryConflict .
  ?militaryConflict dbo:participatingMilitaryForce ?militaryForce .

  # Identify the commander associated with this military force during the campaign
  ?militaryForce dbo:commander ?commander .
  
  FILTER (lang(?label) = 'en')
}
```",4,7,5,3,2,3,3,71,0,0,7,0,0.0,0
488,22,test,Give me the administration of the father of Emperor Go-Mizunoo and birth place of Enomoto Takeaki.,SELECT ?result WHERE { <http://dbpedia.org/resource/Emperor_Go-Mizunoo> <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/property/leader> ?v1 . <http://dbpedia.org/resource/Enomoto_Takeaki> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?administration ?birthPlace
WHERE {
  # Administration of Toyotomi Hideyoshi
  OPTIONAL { 
    dbr:Toyotomi_Hideyoshi dbo:office ?administration .
  }
  
  # Birthplace of Enomoto Takeaki
  OPTIONAL {
    dbr:Enomoto_Takeaki dbo:birthPlace ?birthPlace .
  }
}
```",3,3,4,2,2,3,3,71,1,1,0,0.5,1.0,0.6666666666666666
9,36,test,"Give me the figure known as the nickname of the entity, that is an organisation and an educational institution, in Northern Ireland and alma mater of John Alderdice, Baron Alderdice.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/property/nickname> ?v1 . ?result <http://dbpedia.org/property/nickname> ?v1 . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Northern_Ireland> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. <http://dbpedia.org/resource/John_Alderdice,_Baron_Alderdice> <http://dbpedia.org/ontology/almaMater> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?institution ?nickname WHERE {
  ?institution a dbo:EducationalInstitution ;
               dbo:location dbr:Northern_Ireland ;
               dbp:almaMaterOf dbr:John_Alderdice .
  
  OPTIONAL { ?institution rdfs:label ?nickname FILTER (lang(?nickname) = 'en') }
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
492,61,test,"Give me the person decedent at the capital, that is a settlement, of the country of Khemis Miliana District and commander in the war, that is a military conflict and an event, of the commander in Battle of Verdun.",SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/deathPlace> ?v3 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://dbpedia.org/ontology/battle> ?v5 . <http://dbpedia.org/resource/Khemis_Miliana_District> <http://dbpedia.org/ontology/country> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v5 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/ontology/capital> ?v3 . <http://dbpedia.org/resource/Battle_of_Verdun> <http://dbpedia.org/ontology/commander> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?decedent WHERE {
  # Step 1: Find Khemis Miliana District's country and capital
  dbr:Khemis_Miliana_District dbo:country dbr:Algeria .
  dbr:Algiers dbo:capitalOf dbr:Algeria .

  # Step 2: Identify decedent at the capital (Algiers) who was a commander in a war
  ?decedent dbo:deathPlace dbr:Algiers ;
            dbo:occupation ""military commander""^^xsd:string ;
            dbo:causeOfDeath ?war .

  # Step 3: Find the commander of the Battle of Verdun and their wars
  dbr:Battle_of_Verdun dbo:commander ?verdunCommander .
  ?verdunCommander dbo:militaryConflict ?war .

  # Step 4: Link decedent to the same war as the Battle of Verdun commander
  FILTER(?war = ?decedentCauseOfDeath)
}
```",6,9,7,3,2,3,3,71,0,0,1,0,0.0,0
54,26,test,Give me the parent of the child of the parent of Thado Minsaw of Prome.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> . ?v2 <http://dbpedia.org/property/father> ?v1 . },"```sparql
SELECT ?finalParent WHERE {
  # Step 1: Identify Thado Minsaw of Prome
  ?thadoMinsaw dbo:wikiPageRedirects db:Thado_Minsaw_of_Prome .
  
  # Step 2: Find the parent of Thado Minsaw
  ?parentOfThado dbo:child ?thadoMinsaw .

  # Step 3: Identify the child of this parent
  ?childOfParent dbo:parent ?parentOfThado .

  # Step 4: Determine the parent of this child
  ?finalParent dbo:child ?childOfParent .
}
```",3,3,4,3,1,3,3,71,0,0,2,0,0.0,0
959,71,test,"Give me the member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of the person born in 1958 and native of the residence, that is a country, of the leader, that is a politician, of 2010 Japanese House of Councillors election and manager of the team of the manager, that is a sports manager, of 1998 Kashima Antlers season.","SELECT ?result WHERE { ?v8 <http://dbpedia.org/ontology/manager> ?v7 . <http://dbpedia.org/resource/2010_Japanese_House_of_Councillors_election> <http://dbpedia.org/property/leader> ?v4 . ?v1 <http://dbpedia.org/ontology/almaMater> ?v2 . ?result <http://dbpedia.org/ontology/birthPlace> ?v5 . ?v8 <http://dbpedia.org/ontology/manager> ?result . <http://dbpedia.org/resource/1998_Kashima_Antlers_season> <http://dbpedia.org/ontology/manager> ?v7 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/team> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v4 <http://dbpedia.org/property/residence> ?v5 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v1 <http://dbpedia.org/ontology/birthYear> ""1958""^^<http://www.w3.org/2001/XMLSchema#gYear> . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
SELECT ?member WHERE {
  # Step 1: Identify the leader of the 2007 Japanese House of Councillors election
  ?leader dbo:officeHolderOf dbr:Japanese_House_of_Councillors_election,_2010 ;
          dbo:birthYear ""1958""^^xsd:gYear ;
          dbo:nativePlace ?country .

  # Step 2: Find the manager of the 1998 Kashima Antlers season
  ?manager dbo:managedTeam dbr:Kashima_Antlers_season_1998 .

  # Step 3: Identify the team managed by this sports manager
  ?team dbo:manager ?manager .

  # Step 4: Find a Japanese person born in 1958, native of the leader's residence country, and alumni of an organization/university/educational institution
  ?person dbo:birthYear ""1958""^^xsd:gYear ;
          dbo:nativePlace ?country ;
          dbo:almaMater ?institution .
  
  # Step 5: Ensure the person is Japanese and the institution is a university or educational organization
  ?person dbo:country dbr:Japan .
  ?institution rdf:type/(dbo:University|dbo:EducationalInstitution) .

  # Linking all together to find the member
  ?member dbo:almaMater ?institution ;
          dbo:nativePlace ?country ;
          dbo:birthYear ""1958""^^xsd:gYear .
}
```",9,16,10,3,3,3,3,71,0,0,3,0,0.0,0
959,68,test,"Give me the manager of the team of Takashi Sekizuka and member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of the person born in 1958 and native of the residence, that is a country, of the leader, that is a politician, of 2010 Japanese House of Councillors election.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?v4 <http://dbpedia.org/ontology/almaMater> ?v2 . ?v4 <http://dbpedia.org/ontology/birthYear> ""1958""^^<http://www.w3.org/2001/XMLSchema#gYear> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?result <http://dbpedia.org/ontology/team> ?v2 . ?v0 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Takashi_Sekizuka> . ?v0 <http://dbpedia.org/ontology/manager> ?result . ?result <http://dbpedia.org/ontology/birthPlace> ?v6 . <http://dbpedia.org/resource/2010_Japanese_House_of_Councillors_election> <http://dbpedia.org/property/leader> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?v1 <http://dbpedia.org/property/residence> ?v6 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
SELECT ?almaMater WHERE {
  # Step 1: Identify the leader of the 2010 Japanese House of Councillors election
  ?politician dbo:birthYear ""1958""^^xsd:gYear ;
             dbo:nationality dbr:Japan ;
             dbo:residence ?country .
  
  # Assuming we know the name or identifier of the politician, e.g., Shinzo Abe
  ?politician foaf:name ""Shinzo Abe""@en .

  # Step 2: Find Takashi Sekizuka's team manager
  ?team dbo:manager ?manager ;
        dbo:member takashi_sekizuka .
  
  # Assuming we know the identifier for Takashi Sekizuka, e.g., dbr:Takashi_Sekizuka
  ?takashi foaf:name ""Takashi Sekizuka""@en .

  # Step 3: Identify the alma mater of the manager
  ?manager dbo:almaMater ?almaMater .
  
  # Filter for Japanese organizations that are universities and educational institutions
  ?almaMater a dbr:University ;
             a dbr:Educational_institution ;
             dbo:country dbr:Japan .
}
```",8,14,9,3,3,3,3,71,0,0,3,0,0.0,0
232,38,test,"Give me the actor of the claim to fame, that is a film and a military conflict, of Sean Pertwee and native of the residence, that is a settlement and British, of Sylvie Bermann.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Sylvie_Bermann> <http://dbpedia.org/property/residence> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Sean_Pertwee> <http://dbpedia.org/ontology/knownFor> ?v3 . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v3 <http://dbpedia.org/ontology/starring> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . },"```sparql
# Step 1: Find films or military conflicts associated with Sean Pertwee
SELECT ?filmOrConflict WHERE {
  ?s dbpedia-owl:actor <http://dbpedia.org/resource/Sean_Pertwee> .
  OPTIONAL { ?s rdf:type <http://dbpedia.org/ontology/Film> . }
  OPTIONAL { ?s rdf:type <http://dbpedia.org/ontology/MilitaryConflict> . }
}

UNION

# Step 2: Find settlements in Britain where Sylvie Bermann is a native
SELECT ?settlement WHERE {
  ?s dbpedia-owl:nativePlace ?settlement .
  FILTER (CONTAINS(LCASE(?settlement), ""britain"") || CONTAINS(LCASE(?settlement), ""united kingdom""))
  ?s rdfs:label ""Sylvie Bermann""@en .
}

# Step 3: Find the common actor between Sean Pertwee's film/military conflict and Sylvie Bermann's settlement
SELECT DISTINCT ?actor WHERE {
  # Actors in films or military conflicts associated with Sean Pertwee
  { 
    ?filmOrConflict dbpedia-owl:actor ?actor .
    ?s dbpedia-owl:actor <http://dbpedia.org/resource/Sean_Pertwee> .
    OPTIONAL { ?s rdf:type <http://dbpedia.org/ontology/Film> . }
    OPTIONAL { ?s rdf:type <http://dbpedia.org/ontology/MilitaryConflict> . }
  }

  # Actors in settlements where Sylvie Bermann is a native
  UNION 
  {
    ?settlement dbpedia-owl:resident ?actor .
    ?s dbpedia-owl:nativePlace ?settlement .
    FILTER (CONTAINS(LCASE(?settlement), ""britain"") || CONTAINS(LCASE(?settlement), ""united kingdom""))
    ?s rdfs:label ""Sylvie Bermann""@en .
  }
}
```",4,8,5,2,2,3,3,71,0,0,1,0,0.0,0
378,21,test,"Give me the war of the person born as Carl Pontus Gahn and claim to fame of Louis des Balbes de Berton de Crillon, 1st Duke of Mahón.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Louis_des_Balbes_de_Berton_de_Crillon,_1st_Duke_of_Mahón> <http://dbpedia.org/ontology/knownFor> ?result . ?v1 <http://dbpedia.org/property/birthName> ""Carl Pontus Gahn""@en . }","```sparql
# Query for Carl Pontus Gahn's association with a war
SELECT ?war WHERE {
  wd:Q123456 rdfs:label ""Carl Pontus Gahn""@en .
  OPTIONAL { wd:Q123456 dbo:memberOf ?organization . }
  OPTIONAL { ?organization dbo:member ?person . }
  OPTIONAL { ?person dbo:participatedIn ?event . }
  OPTIONAL { ?event rdf:type dbo:MilitaryConflict . }
  BIND(IF(BOUND(?event), ?event, ""No specific war found"") AS ?war)
}

# Query for Louis des Balbes de Berton de Crillon's claim to fame
SELECT ?achievement WHERE {
  wd:Q654321 rdfs:label ""Louis des Balbes de Berton de Crillon, 1st Duke of Mahón""@en .
  OPTIONAL { wd:Q654321 dbo:hasOccupation ?occupation . }
  OPTIONAL { ?occupation dbo:fieldOfActivity ?activity . }
  OPTIONAL { ?activity rdf:type dbo:MilitaryConflict . }
  OPTIONAL { wd:Q654321 dbo:notableFor ?achievement . }
  BIND(IF(BOUND(?achievement), ?achievement, ""No specific claim to fame found"") AS ?achievement)
}
```

Note: Replace `wd:Q123456` and `wd:Q654321` with the actual DBpedia resource identifiers for Carl Pontus Gahn and Louis des Balbes de Berton de Crillon, respectively.",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
54,65,test,"Give me the child of the father of Soe Min Wimala Dewi and parent of the child of the parent of Thado Minsaw of Prome and predecessor of the child, that is an office holder and a royalty, of Thihapate of Mohnyin.",SELECT ?result WHERE { ?v6 <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v4 <http://dbpedia.org/ontology/child> ?result . ?v6 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/successor> ?v3 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Thihapate_of_Mohnyin> . <http://dbpedia.org/resource/Soe_Min_Wimala_Dewi> <http://dbpedia.org/property/father> ?v4 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?individual WHERE {
  # Soe Min Wimala Dewi's father and his child
  ?soeMinWimalaDewi dbo:parent ?fatherOfSoeMinWimalaDewi .
  ?fatherOfSoeMinWimalaDewi dbo:child ?childOfFather .

  # Thado Minsaw of Prome's parent and their child
  dbr:Thado_Minsaw_of_Prome dbo:parent ?parentOfThadoMinsaw .
  ?parentOfThadoMinsaw dbo:child ?childOfParentOfThadoMinsaw .

  # Thihapate of Mohnyin's child who is an office holder and royalty
  dbr:Thihapate_of_Mohnyin dbo:child ?thihapateChild .
  ?thihapateChild a dbo:Monarch ;
                 dbo:officeHolder ?office .

  # Find the individual fitting all criteria
  FILTER (?childOfFather = ?parentOfThadoMinsaw && 
          ?childOfParentOfThadoMinsaw = ?thihapateChild &&
          ?individual = ?childOfFather)
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
645,18,test,"Give me the entity in the residence, that is a country, of the commander in Battle of Diamond Rock and alma mater of the child of Richard Pankhurst.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://dbpedia.org/ontology/country> ?v2 . <http://dbpedia.org/resource/Richard_Pankhurst> <http://dbpedia.org/ontology/child> ?v3 . <http://dbpedia.org/resource/Battle_of_Diamond_Rock> <http://dbpedia.org/ontology/commander> ?v1 . ?v1 <http://dbpedia.org/property/residence> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
# Step 1: Find the commander in the Battle of Diamond Rock
SELECT ?commander WHERE {
  ?battle dbo:commander ?commander .
  ?battle rdfs:label ""Battle of Diamond Rock""@en .
}

# Step 2: Determine the residence country of this commander
SELECT DISTINCT ?country WHERE {
  ?commander dbo:residenceCountry ?country .
  FILTER(?commander IN (SELECT ?commander WHERE {
    ?battle dbo:commander ?commander .
    ?battle rdfs:label ""Battle of Diamond Rock""@en .
  }))
}

# Step 3: Find Richard Pankhurst's child
SELECT DISTINCT ?child WHERE {
  ?richard foaf:sibling ?parent .
  ?parent foaf:child ?child .
  ?richard rdfs:label ""Richard Pankhurst""@en .
}

# Step 4: Identify the alma mater of this child
SELECT DISTINCT ?almaMater WHERE {
  ?child dbo:almaMater ?almaMater .
  FILTER(?child IN (SELECT ?child WHERE {
    ?richard foaf:sibling ?parent .
    ?parent foaf:child ?child .
    ?richard rdfs:label ""Richard Pankhurst""@en .
  }))
}

# Step 5: Find the entity in common
SELECT DISTINCT ?entity WHERE {
  VALUES ?country { ?country }
  VALUES ?almaMater { ?almaMater }

  ?entity dbo:locationCountry ?country .
  ?entity dbo:almaMater ?almaMater .

  # Subqueries to get values for ?country and ?almaMater
  {
    SELECT DISTINCT ?country WHERE {
      ?commander dbo:residenceCountry ?country .
      FILTER(?commander IN (SELECT ?commander WHERE {
        ?battle dbo:commander ?commander .
        ?battle rdfs:label ""Battle of Diamond Rock""@en .
      }))
    }
  }

  {
    SELECT DISTINCT ?almaMater WHERE {
      ?child dbo:almaMater ?almaMater .
      FILTER(?child IN (SELECT ?child WHERE {
        ?richard foaf:sibling ?parent .
        ?parent foaf:child ?child .
        ?richard rdfs:label ""Richard Pankhurst""@en .
      }))
    }
  }
}
```",5,6,6,3,2,3,2,20,0,0,1,0,0.0,0
767,64,test,"Give me the entity in the administration, that is a settlement, of the writer of Where It's At (Dustin Lynch album) and alma mater of Carl L. Nippert and reference to the alter ego of the persona, that is a fictional character, of Matthew Burland.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://dbpedia.org/ontology/state> ?v2 . ?v0 <http://dbpedia.org/property/alterEgo> ""Matthew Burland""@en . ?v2 <http://dbpedia.org/property/leaderParty> ?v3 . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. <http://dbpedia.org/resource/Where_It's_At_(Dustin_Lynch_album)> <http://dbpedia.org/property/writer> ?v3 . <http://dbpedia.org/resource/Carl_L._Nippert> <http://dbpedia.org/ontology/almaMater> ?result . }","```sparql
# Step 1: Find the writer of ""Where It's At"" by Dustin Lynch
SELECT ?writer WHERE {
  ?song dcterms:title ""Where It's At""@en .
  ?song dbo:lyricsBy ?writer .
  FILTER EXISTS { ?album dbo:song ?song . ?album dbo:artist <http://dbpedia.org/resource/Dustin_Lynch> }
}

# Step 2: Find the alma mater of Carl L. Nippert
SELECT ?almaMater WHERE {
  ?person foaf:name ""Carl L. Nippert""@en .
  ?person dbo:almaMater ?almaMater .
}

# Step 3: Identify the alter ego of Matthew Burland
SELECT ?alterEgo WHERE {
  ?person foaf:name ""Matthew Burland""@en .
  ?person dbo:fictionalCharacter ?alterEgo .
}

# Step 4: Find a settlement related to these entities
SELECT DISTINCT ?settlement WHERE {
  VALUES (?entity) { ?writer ?almaMater ?alterEgo }
  ?entity dbo:locatedIn ?location .
  ?location rdf:type <http://dbpedia.org/ontology/Settlement> .
  ?location dbo:administrativeUnit ?admin .
  ?admin dbo:country <http://dbpedia.org/resource/United_States> . # Assuming the country is the US
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
528,55,test,Give me the force of the person born as Narciso Campero Leyes and war of the military force of Battle of Pisagua and war of the commander in Battle of La Rinconada de Ate.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ""Narciso Campero Leyes""@en . ?result <http://dbpedia.org/ontology/commander> ?v2 . ?v3 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Pisagua> . ?v5 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Battle_of_La_Rinconada_de_Ate> <http://dbpedia.org/ontology/commander> ?v5 . ?v3 <http://dbpedia.org/ontology/battle> ?result . }","```sparql
# Query for the force associated with Narciso Campero Leyes
SELECT ?force WHERE {
  ?person dbo:birthName ""Narciso Campero Leyes""@en .
  ?person dbo:militaryService ?service .
  ?service dbo:organization ?force .
}

# Query for the war of the Battle of Pisagua
SELECT ?war WHERE {
  dbpedia:Battle_of_Pisagua dbo:partOf ?event .
  ?event rdf:type dbo:MilitaryConflict .
  ?event rdfs:label ?war .
  FILTER(LANG(?war) = 'en')
}

# Query for the war of the Battle of La Rinconada de Ate
SELECT ?war WHERE {
  dbpedia:Battle_of_La_Rinconada_de_Ate dbo:partOf ?event .
  ?event rdf:type dbo:MilitaryConflict .
  ?event rdfs:label ?war .
  FILTER(LANG(?war) = 'en')
}
```",6,6,7,2,3,3,3,71,0,0,2,0,0.0,0
427,67,test,"Give me the party of the person born, that is an office holder and a politician, as the birth name of Romano Prodi and party of the father of the alumnus of Massachusetts Institute of Technology and reference to Partito Popolare Italiano.","SELECT ?result WHERE { ?v6 <http://dbpedia.org/ontology/party> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Massachusetts_Institute_of_Technology> . ?v3 <http://dbpedia.org/property/birthName> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> ""Partito Popolare Italiano""@en . ?v3 <http://dbpedia.org/ontology/party> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/property/father> ?v6 . <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/property/birthName> ?v1 . }","```sparql
# Query for Romano Prodi's birth name and political party at birth
SELECT ?birthName ?party WHERE {
  wd:Q12345 foaf:name ?fullName .
  OPTIONAL { wd:Q12345 schema:birthName ?birthName . }
  OPTIONAL {
    ?prodiParty dbo:member wd:Q12345 ;
                dbo:politicalOrganization ?party .
  }
}

# Query for an MIT alumnus who is a politician and office holder
SELECT DISTINCT ?alumnus ?father WHERE {
  ?alumnus wdt:P69 wd:Q159 . # Alumnus of MIT
  ?alumnus wdt:P39 ?office . # Office holder
  ?alumnus wdt:P106 wd:Q82955 . # Politician
  OPTIONAL { ?alumnus schema:parent ?father . }
}

# Query for the father's political party, specifically Partito Popolare Italiano
SELECT DISTINCT ?father ?party WHERE {
  ?alumnus wdt:P69 wd:Q159 .
  ?alumnus wdt:P39 ?office .
  ?alumnus wdt:P106 wd:Q82955 .
  ?alumnus schema:parent ?father .
  OPTIONAL {
    ?fatherParty dbo:member ?father ;
                 dbo:politicalOrganization ?party .
    FILTER(?party = wd:Q123456) # Partito Popolare Italiano
  }
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
177,8,test,"Give me the headquarter of the office, that is an organisation, of Joo Don-sik and entity in South Korea.",SELECT ?result WHERE { <http://dbpedia.org/resource/Joo_Don-sik> <http://dbpedia.org/property/office> ?v2 . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/South_Korea> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://dbpedia.org/ontology/location> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?organization ?headquarters WHERE {
  ?person foaf:name ""Joo Don-sik""@en .
  ?person dbo:memberOf ?organization .
  ?organization a dbo:Organization ;
                dbo:country dbr:South_Korea .
  OPTIONAL { ?organization dbp:headquarter ?headquarters }
}
```",3,4,4,2,2,2,2,9,0,0,1,0,0.0,0
328,54,test,"Give me the commander in the force of the person decedent at Budapest and leader of People's Commissariat of Defense of the Soviet Union and awardee of the award of Bruce Fraser, 1st Baron Fraser of North Cape.","SELECT ?result WHERE { <http://dbpedia.org/resource/Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape> <http://dbpedia.org/property/awards> ?v3 . ?v5 <http://dbpedia.org/ontology/commander> ?v0 . <http://dbpedia.org/resource/People's_Commissariat_of_Defense_of_the_Soviet_Union> <http://dbpedia.org/ontology/leader> ?result . ?result <http://dbpedia.org/property/awards> ?v3 . ?v5 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Budapest> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:MilitaryPerson .
  ?person dbo:commanderOf ?force .
  ?force dbo:location dbr:Budapest .
  
  ?person dbo:leaderOf ?defenseCommissariat .
  ?defenseCommissariat rdfs:label ""People's Commissariat of Defense""@en .

  ?person dbo:awardReceived ?award .
  ?award dbo:recipient ?recipient .
  ?recipient rdfs:label ""Bruce Fraser, 1st Baron Fraser of North Cape""@en .
  
  FILTER (lang(?forceLabel) = 'en' && lang(?defenseCommissariatLabel) = 'en')
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
547,56,test,Give me the resting place of the awardee of the award of Gerald Graham and resting place of Simon Cadell and resting place of the child of James Burton (property developer).,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Simon_Cadell> <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/James_Burton_(property_developer)> <http://dbpedia.org/ontology/child> ?v2 . ?v1 <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Gerald_Graham> <http://dbpedia.org/property/awards> ?v0 . },"```sparql
# Query for the awardee of an award named after Gerald Graham
SELECT ?awardee ?restingPlace WHERE {
  ?award dbo:name ""Gerald Graham Award""@en .
  ?award dbo:recipient ?awardee .
  OPTIONAL { ?awardee dbo:deathPlace ?restingPlace . }
}

UNION

# Query for the resting place of Simon Cadell
SELECT ?person ?restingPlace WHERE {
  ?person foaf:name ""Simon Cadell""@en .
  OPTIONAL { ?person dbo:deathPlace ?restingPlace . }
}

UNION

# Query for a child of James Burton (property developer) and their resting place
SELECT ?child ?restingPlace WHERE {
  ?james foaf:name ""James Burton (property developer)""@en .
  ?james dbo:child ?child .
  OPTIONAL { ?child dbo:deathPlace ?restingPlace . }
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
783,16,test,"Give me the band member of the person born, that is an artist and a musical artist, as Priscilla Opoku-Kwarteng and associated musical artist of the band member of Ofori Amponsah.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Ofori_Amponsah> . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v3 <http://dbpedia.org/property/birthName> ""Priscilla Opoku-Kwarteng""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
# Query to find Priscilla Opoku-Kwarteng's associated band
SELECT ?band WHERE {
  ?person dbo:birthName ""Priscilla Opoku-Kwarteng""@en .
  ?person a dbo:MusicalArtist .
  ?person dbo:associatedBand ?band .
}

# Query to get the members of Priscilla Opoku-Kwarteng's band
SELECT ?member WHERE {
  ?band dbo:bandMember ?member .
}

# Query to find Ofori Amponsah's associated band
SELECT ?band WHERE {
  ?person dbo:birthName ""Ofori Amponsah""@en .
  ?person a dbo:MusicalArtist .
  ?person dbo:associatedBand ?band .
}

# Query to get the members of Ofori Amponsah's band
SELECT ?member WHERE {
  ?band dbo:bandMember ?member .
}
```",4,6,5,2,2,3,2,20,0,0,1,0,0.0,0
827,19,test,"Give me the child of the child, that is a royalty, of Grand Duchess Maria Pavlovna of Russia (1786–1859) and father of the child, that is a royalty, of the spouse, that is a royalty, of Princess Pauline of Saxe-Weimar-Eisenach.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/property/father> ?v0 . ?v4 <http://dbpedia.org/property/father> ?result . ?v2 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Grand_Duchess_Maria_Pavlovna_of_Russia_(1786–1859)> . ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Princess_Pauline_of_Saxe-Weimar-Eisenach> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?grandchild ?father WHERE {
  # Step 1: Find Maria Pavlovna's children who are royalty
  ?mariaPavlovnaChild dbo:parent dbr:Grand_Duchess_Maria_Pavlovna_of_Russia ;
                      a dbo:Monarch .

  # Step 2: Find the grandchildren of Maria Pavlovna who are royalty
  ?grandchild dbo:parent ?mariaPavlovnaChild ;
              a dbo:Monarch .

  # Step 3: Identify Princess Pauline's spouse and their children
  ?paulineSpouse dbo:spouse dbr:Princess_Pauline_of_Saxe-Weimar-Eisenach ;
                 a dbo:Monarch .
  
  ?childOfPaulineSpouse dbo:parent ?paulineSpouse ;
                        a dbo:Monarch .

  # Step 4: Match the father of Pauline's child with Maria Pavlovna's grandchild
  ?father dbo:child ?childOfPaulineSpouse .

  FILTER (?grandchild = ?childOfPaulineSpouse)
}
```",5,8,6,3,2,3,2,20,0,0,1,0,0.0,0
747,46,test,"Give me the band of the writer of Apollo (Hardwell song) and person born on the birth date of the person decedent, that is an athlete and a soccer player, at Zolotonosha.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Zolotonosha> . ?v2 <http://dbpedia.org/ontology/birthDate> ?v1 . ?result <http://dbpedia.org/ontology/birthDate> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Apollo_(Hardwell_song)> <http://dbpedia.org/property/writer> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. },"```sparql
# Step 1: Find the writer of ""Apollo"" by Hardwell
SELECT ?writer WHERE {
  ?song dcterms:title ""Apollo""@en .
  ?song dbo:artist <http://dbpedia.org/resource/Hardwell> .
  ?song dbo:lyricist ?writer .
}

# Step 2: Find a person born on the birth date of a decedent who is an athlete and soccer player from Zolotonosha
SELECT DISTINCT ?person WHERE {
  ?decedent dbo:dateOfDeath ?deathDate ;
            foaf:birthDate ?birthDate .
  ?athlete dbo:nationality <http://dbpedia.org/resource/Ukraine> ;
           dbo:sport <http://dbpedia.org/resource/Soccer> ;
           dbo:placeOfBirth ?zolotonosha ;
           foaf:birthDate ?birthDate .
  FILTER (?zolotonosha = <http://dbpedia.org/resource/Zolotonosha>) .
  ?person foaf:birthDate ?birthDate .
}

# Step 3: Find the band of the writer
SELECT ?band WHERE {
  ?writer dbo:musicGroup ?band .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
701,61,test,"Give me the spouse of the father of the commander, that is a royalty, in Battle of Perire and parent of the child of the child of Seti I.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seti_I> . ?result <http://dbpedia.org/ontology/spouse> ?v3 . ?result <http://dbpedia.org/ontology/child> ?v5 . ?v1 <http://dbpedia.org/property/father> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Battle_of_Perire> <http://dbpedia.org/ontology/commander> ?v1 . ?v5 <http://dbpedia.org/property/father> ?v0 . },"```sparql
SELECT ?spouse WHERE {
  ?seti1 dbo:child ?ramesses2 .
  ?ramesses2 dbo:parent ?khaemwaset .
  ?seti1 foaf:name ""Seti I""@en .
  ?seti1 dbo:spouse ?spouse .
  ?spouse rdf:type dbo:Monarch .
  ?spouse dbo:child ?ramesses2 .
}
```",6,7,7,3,2,3,3,71,0,0,2,0,0.0,0
44,9,test,"Give me the band member of the associated musical artist, that is a group and an organisation, of Queensrÿche and band member of the band of John Pettibone.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/John_Pettibone> . <http://dbpedia.org/resource/Queensrÿche> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?member WHERE {
  # Get members of Queensrÿche
  ?band a dbo:Band ;
        dbo:bandMember ?member .
  
  FILTER (str(?band) = ""Queensrÿche"")

  # Ensure the member was part of the band during John Pettibone's time
  OPTIONAL {
    ?member dbo:associatedBand dbr:John_Pettibone .
  }
}
```",4,6,5,2,2,2,2,9,0,0,1,0,0.0,0
378,48,test,Give me the claim to fame of the commander in Great Siege of Gibraltar and war of the person born as the birth name of Carl Pontus Gahn.,SELECT ?result WHERE { <http://dbpedia.org/resource/Great_Siege_of_Gibraltar> <http://dbpedia.org/ontology/commander> ?v1 . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/ontology/knownFor> ?result . <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/property/birthName> ?v3 . ?v2 <http://dbpedia.org/property/birthName> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?eliottClaimToFame ?arrheniusClaimToFame WHERE {
  # George Augustus Eliott's claim to fame
  OPTIONAL {
    dbr:George_Augustus_Eliott dbo:role ""Commander"" .
    dbr:Great_Siege_of_Gibraltar dbo:commander dbr:George_Augustus_Eliott .
    ?eliottClaimToFame dbp:description ?descriptionEliott .
    FILTER(CONTAINS(LCASE(?descriptionEliott), ""great siege of gibraltar""))
  }
  
  # Svante Arrhenius' claim to fame
  OPTIONAL {
    dbr:Svante_Arrhenius dbo:award ""Nobel Prize in Chemistry"" ;
                        dbp:year ""1903"" .
    ?arrheniusClaimToFame dbp:description ?descriptionArrhenius .
    FILTER(CONTAINS(LCASE(?descriptionArrhenius), ""nobel prize""))
  }
}
```",5,5,6,3,2,3,3,71,0,0,2,0,0.0,0
996,17,test,Give me the force of Dagobert Sigmund von Wurmser and entity in the award of the native of Palestine (region).,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Palestine_(region)> . ?result <http://dbpedia.org/ontology/place> ?v3 . ?v0 <http://dbpedia.org/property/awards> ?v3 . ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Dagobert_Sigmund_von_Wurmser> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?force ?award ?entity
WHERE {
  # Find Dagobert Sigmund von Wurmser's military rank
  dbr:Dagobert_Sigmund_von_Wurmser dbo:militaryRank ?force .

  # Find awards received by Dagobert Sigmund von Wurmser
  OPTIONAL { 
    dbr:Dagobert_Sigmund_von_Wurmser dbo:award ?award .
    
    # Link the award to an entity related to Palestine (region)
    ?award dbo:recipient dbr:Palestine_(region) .
    ?award dbo:recipient ?entity .
  }
}
```",4,4,5,3,2,3,2,20,0,0,4,0,0.0,0
9,67,test,"Give me the alma mater of John Alderdice, Baron Alderdice and figure known as the nickname of the entity, that is an organisation and an educational institution, in Northern Ireland and alma mater of the awardee of the reference, that is an award, to Royal Medals.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v6 <http://dbpedia.org/ontology/almaMater> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Royal Medals""@en . ?result <http://dbpedia.org/property/nickname> ?v3 . ?v1 <http://dbpedia.org/property/nickname> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v6 <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/John_Alderdice,_Baron_Alderdice> <http://dbpedia.org/ontology/almaMater> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Northern_Ireland> . }","```sparql
SELECT ?person ?almaMater ?nickname ?award WHERE {
  ?person dbo:almaMater ?almaMater .
  FILTER(?almaMater = dbpedia:Trinity_College_Dublin) .
  
  ?institution dbo:nickname ?nickname ;
               rdf:type dbo:EducationalInstitution ;
               dbo:location dbc:Northern_Ireland .
  FILTER(?nickname = ""QUB"") .

  ?person dbo:award ?award .
  FILTER(STRSTARTS(LCASE(?award), ""royal medal"")) .
  
  OPTIONAL { ?person dbo:almaMater ?institution . }
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
838,18,test,"Give me the band member of the band, that is a group, of YU Grupa and band of the band member, that is an artist and a musical artist, of the band, that is a band and a group, of Žika Jelić.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v1 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Žika_Jelić> . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . <http://dbpedia.org/resource/YU_Grupa> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. },"```sparql
# Step 1: Find YU Grupa members who are artists and musical artists
SELECT ?member WHERE {
    ?yugrupa dbr:YU_Grupa .
    ?yugrupa dbo:bandMember ?member .
    ?member a dbo:MusicalArtist ;
            a dbo:Artist .
}

# Step 2: For each member found, find their other band affiliations
SELECT DISTINCT ?otherBand WHERE {
    VALUES ?member { 
        # Replace with actual URIs of members from step 1
    }
    ?member dbo:bandMember ?otherBand .
    ?otherBand a dbo:MusicalGroup ;
               a dbo:Band .
}

# Step 3: Find Žika Jelić's band affiliations
SELECT DISTINCT ?zikasBand WHERE {
    dbr:Žika_Jelić dbo:bandMember ?zikasBand .
    ?zikasBand a dbo:MusicalGroup ;
               a dbo:Band .
}

# Step 4: Identify members of Žika Jelić's band
SELECT DISTINCT ?memberOfZikasBand WHERE {
    VALUES ?zikasBand { 
        # Replace with actual URI from step 3
    }
    ?zikasBand dbo:bandMember ?memberOfZikasBand .
}
```",5,10,6,3,2,3,2,20,0,0,5,0,0.0,0
427,18,test,Give me the party of Giulio Andreotti and party of Romano Prodi and reference to Partito Popolare Italiano.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Partito Popolare Italiano""@en . <http://dbpedia.org/resource/Giulio_Andreotti> <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/ontology/party> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?andreottiPartyLabel ?prodiPartyLabel ?popiLabel WHERE {
  # Giulio Andreotti's party
  dbr:Giulio_Andreotti dbo:partyAffiliation ?andreottiParty .
  ?andreottiParty rdfs:label ?andreottiPartyLabel .

  # Romano Prodi's party
  dbr:Romano_Prodi dbo:partyAffiliation ?prodiParty .
  ?prodiParty rdfs:label ?prodiPartyLabel .

  # Partito Popolare Italiano reference
  dbr:Partito_Popolare_Italiano rdfs:label ?popiLabel .

  FILTER (lang(?andreottiPartyLabel) = 'en')
  FILTER (lang(?prodiPartyLabel) = 'en')
  FILTER (lang(?popiLabel) = 'en')
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
767,49,test,"Give me the reference to the alter ego of the persona, that is a fictional character, of Matthew Burland and entity in the administration, that is a settlement, of Green.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/alterEgo> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://xmlns.com/foaf/0.1/name> ?v1 . ?result <http://dbpedia.org/ontology/state> ?v2 . ?v0 <http://dbpedia.org/property/alterEgo> ""Matthew Burland""@en . ?v2 <http://dbpedia.org/property/leaderParty> ""Green""@en . }","```sparql
# Query for alter ego of Matthew Burland
SELECT ?character WHERE {
  ?person foaf:name ""Matthew Burland""@en .
  ?person dbo:alterEgo ?character .
  ?character rdf:type dbo:FictionalCharacter .
}

UNION

# Query for entity in the administration of Green
SELECT ?settlement ?adminEntity WHERE {
  ?place rdfs:label ""Green""@en ;
         a dbo:Settlement .
  OPTIONAL { ?place dbo:administrativeRegion ?adminEntity . }
}
```",5,7,6,3,2,3,3,71,0,0,7,0,0.0,0
488,47,test,"Give me the birth place of the commander in Boshin War and death place of the father, that is a politician, of the father, that is an office holder, of Matsudaira Tadamasa.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v4 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Matsudaira_Tadamasa> <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Boshin_War> <http://dbpedia.org/ontology/commander> ?v2 . ?v0 <http://dbpedia.org/property/father> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
SELECT ?birthPlaceOfSaigo ?deathPlaceOfPolitician WHERE {
  # Find Saigō Takamori's birthplace
  dbpedia:Saig%C5%8D_Takamori dbo:birthPlace ?saigoBirthPlace .
  BIND(STR(?saigoBirthPlace) AS ?birthPlaceOfSaigo)

  # Identify Matsudaira Tadamasa's father, grandfather, and great-grandfather
  dbpedia:Matsudaira_Tadamasa dbo:father ?katamori .
  ?katamori rdfs:label ""Matsudaira Katamori""@en .
  
  ?katamori dbo:father ?sadanobu .
  ?sadanobu rdfs:label ""Matsudaira Sadanobu""@en .

  ?sadanobu dbo:father ?nobuyoshi .
  ?nobuyoshi rdfs:label ""Matsudaira Nobuyoshi""@en .

  # Identify Matsudaira Nobuyoshi's father (the politician)
  ?nobuyoshi dbo:father ?politician .
  
  # Find the death place of the politician
  ?politician dbo:deathPlace ?deathPlace .
  BIND(STR(?deathPlace) AS ?deathPlaceOfPolitician)
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
492,71,test,"Give me the person decedent at the capital, that is a settlement, of the country of Khemis Miliana District and person decedent at the work of the author of French Algeria and commander in the war, that is a military conflict and an event, of the commander in Battle of Verdun.",SELECT ?result WHERE { ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/property/author> ?v1 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/French_Algeria> <http://dbpedia.org/property/author> ?v1 . ?v5 <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://dbpedia.org/ontology/battle> ?v5 . <http://dbpedia.org/resource/Battle_of_Verdun> <http://dbpedia.org/ontology/commander> ?v4 . ?v7 <http://dbpedia.org/ontology/capital> ?v8 . ?result <http://dbpedia.org/ontology/deathPlace> ?v8 . ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . <http://dbpedia.org/resource/Khemis_Miliana_District> <http://dbpedia.org/ontology/country> ?v7 . },"```sparql
# Step 1: Find the capital of Khemis Miliana District
SELECT ?capital WHERE {
  ?district dbr:Khemis_Miliana_District .
  ?district dbo:administrativeCapital ?capital .
}

# Step 2: Find person decedent at the capital
SELECT DISTINCT ?person WHERE {
  ?deathEvent dbo:location ?capital ;
              dbo:agent ?person ;
              rdf:type dbo:Death .
  
  # Assuming we have identified the capital from step 1
  FILTER(?capital = <URI_of_the_capital>)
}

# Step 3: Find author of French Algeria
SELECT ?author WHERE {
  ?work dbr:French_Algeria .
  ?work dbo:author ?author .
}

# Step 4: Find work of the author
SELECT DISTINCT ?work WHERE {
  ?author ?p ?work .
  FILTER(?p = dbo:author)
  
  # Assuming we have identified the author from step 3
  FILTER(?author = <URI_of_the_author>)
}

# Step 5: Find person decedent at the work
SELECT DISTINCT ?person WHERE {
  ?deathEvent dbo:location ?work ;
              dbo:agent ?person ;
              rdf:type dbo:Death .
  
  # Assuming we have identified the work from step 4
  FILTER(?work = <URI_of_the_work>)
}

# Step 6: Find commander in the war of French Algeria
SELECT DISTINCT ?commander WHERE {
  ?war dbr:French_Algerian_War ;
       dbo:commander ?commander .
}

# Step 7: Confirm war as military conflict and event
ASK {
  ?war rdf:type dbo:MilitaryConflict, dbo:Event .
}

# Step 8: Find commander in Battle of Verdun
SELECT DISTINCT ?verdunCommander WHERE {
  ?battle dbr:Battle_of_Verdun ;
          dbo:commander ?verdunCommander .
}

# Step 9: Find person decedent at the work of the commander
SELECT DISTINCT ?person WHERE {
  ?deathEvent dbo:location ?work ;
              dbo:agent ?person ;
              rdf:type dbo:Death .
  
  # Assuming we have identified the work related to the Verdun commander
  FILTER(?work = <URI_of_the_work_related_to_verdun_commander>)
}

# Step 10: Find common person decedent
SELECT DISTINCT ?commonPerson WHERE {
  VALUES (?person1) { (<URI_of_person_from_capital>) }
  VALUES (?person2) { (<URI_of_person_from_verdun_work>) }
  
  FILTER(?person1 = ?commonPerson && ?person2 = ?commonPerson)
}
```",9,12,10,3,3,3,3,71,0,0,1,0,0.0,0
328,43,test,Give me the commander in the force of the person decedent at Budapest and awardee of Order of Suvorov and leader of People's Commissariat of Defense of the Soviet Union.,SELECT ?result WHERE { <http://dbpedia.org/resource/People's_Commissariat_of_Defense_of_the_Soviet_Union> <http://dbpedia.org/ontology/leader> ?result . ?v4 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Budapest> . ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Order_of_Suvorov> . ?v4 <http://dbpedia.org/ontology/commander> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person dbo:birthPlace dbr:Budapest .
  ?person dbo:award [ a dbo:Award ; rdfs:label ""Order of Suvorov""@en ] .
  ?person dbo:occupation dbr:People's_Commissar_of_Defence_of_the_Soviet_Union .
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
378,43,test,"Give me the claim to fame of Louis des Balbes de Berton de Crillon, 1st Duke of Mahón and war of the commander in the reference, that is a military conflict, to Peninsular War and war of Carl Pontus Gahn.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/commander> ?v4 . <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/ontology/battle> ?result . ?v4 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Peninsular War""@en . <http://dbpedia.org/resource/Louis_des_Balbes_de_Berton_de_Crillon,_1st_Duke_of_Mahón> <http://dbpedia.org/ontology/knownFor> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?claimToFame ?peninsularWarRole ?gahnConnection
WHERE {
  # Louis des Balbes de Berton de Crillon, 1st Duke of Mahón
  VALUES ?crillon { dbr:Louis_des_Balbes_de_Berton_de_Crillon_1st_Duke_of_Mahón }

  # Claim to fame (notable achievements)
  OPTIONAL {
    ?crillon dbo:notableAward ?claimToFame .
  }
  
  # Role in the Peninsular War
  OPTIONAL {
    ?peninsularWar dbr:Peninsular_War ;
                   dbo:commander ?crillon .
    BIND(""Commander in the Peninsular War"" AS ?peninsularWarRole)
  }

  # Connection to Carl Pontus Gahn
  OPTIONAL {
    ?gahnConnection dbr:C_P_Gahn ;
                    dbo:relatedTo ?crillon .
  }
}
```",5,6,6,3,3,3,3,71,0,0,2,0,0.0,0
365,9,test,"Give me the reference to the real name of The Blasters and band of the professional, that is an artist and a musical artist, in Vocalist, musician, songwriter.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/occupation> ""Vocalist, musician, songwriter""@en . <http://dbpedia.org/resource/The_Blasters> <http://xmlns.com/foaf/0.1/name> ?v3 . ?result <http://dbpedia.org/ontology/bandMember> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
# Query 1: Get the real names of members of The Blasters
SELECT ?member ?realName WHERE {
  ?band dcterms:title ""The Blasters""@en .
  ?band dbo:member ?member .
  OPTIONAL { ?member foaf:name ?realName . }
}

# Query 2: Find an artist who is a vocalist, musician, and songwriter
SELECT DISTINCT ?artist WHERE {
  ?artist dbo:occupation dbc:Musicians_from_the_United_States ;
          dbo:genre dbc:Singer-songwriters ;
          dbo:profession dbc:Singers .
}
```",4,6,5,2,2,2,2,9,0,0,1,0,0.0,0
617,20,test,"Give me the parent of the father, that is a royalty, of the reference, that is a royalty, to Richeza of Poland and child of the child, that is a royalty, of the parent of Mlada (abbess).","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/child> ?v5 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Mlada_(abbess)> . ?v2 <http://dbpedia.org/ontology/parent> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://xmlns.com/foaf/0.1/name> ""Richeza of Poland""@en . ?v4 <http://dbpedia.org/property/father> ?v5 . }","```sparql
SELECT DISTINCT ?finalParent WHERE {
  # Step 1: Identify Mlada (abbess)
  ?mlada dbo:occupation dbr:Ancient_monasticism; 
         rdfs:label ""Mlada""@en.
  
  # Step 2: Find the parent of Mlada
  ?parent dbo:child ?mlada.

  # Step 3: Identify the child of this parent that is royalty
  ?royalChild dbo:parent ?parent;
              rdf:type dbo:Monarch.

  # Step 4: Identify Richeza of Poland
  ?richeza rdfs:label ""Richeza of Poland""@en;
           rdf:type dbo:Monarch.
  
  # Step 5: Find the reference (royalty) related to Richeza
  ?reference dbo:spouseOrPartner ?richeza;
             rdf:type dbo:Monarch.

  # Step 6: Determine the father of this reference
  ?father dbo:child ?reference.

  # Step 7: Identify the parent of this father that is royalty
  ?finalParent dbo:parent ?father;
               rdf:type dbo:Monarch.
}
```",6,9,7,3,2,3,2,20,0,0,1,0,0.0,0
392,23,test,"Give me the province of the residence, that is a settlement and Italian, of Sebastiano Bianchetti and entity in the region, that is a country, of Central European Time.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v1 . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. ?v2 <http://dbpedia.org/ontology/province> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Sebastiano_Bianchetti> <http://dbpedia.org/property/residence> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?province ?country WHERE {
  # Find Sebastiano Bianchetti's place of residence
  ?person dbo:name ""Sebastiano Bianchetti""@it.
  
  OPTIONAL { ?person dbo:birthPlace ?residence. }
  
  # Ensure the residence is a settlement in Italy
  ?residence rdf:type dbo:Settlement .
  ?residence dbo:country dbr:Italy .

  # Find the province of the residence
  ?residence dbo:administrativeTerritory ?province .

  # Identify the country associated with Central European Time
  ?province dbo:country ?country .
  
  FILTER (?country IN (dbr:Czech_Republic, dbr:Germany, dbr:Austria, dbr:Slovakia, dbr:Poland, dbr:Hungary))
}
```",4,7,5,2,2,2,3,28,0,0,1,0,0.0,0
767,33,test,Give me the entity in Baden-Württemberg and alma mater of the administration of the reference to George Kilbon Nash.,"SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/governor> ?v0 . ?v0 <http://xmlns.com/foaf/0.1/name> ""George Kilbon Nash""@en . ?result <http://dbpedia.org/ontology/state> <http://dbpedia.org/resource/Baden-Württemberg> . ?v3 <http://dbpedia.org/ontology/almaMater> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entityInBadenWurttemberg ?almaMater WHERE {
  # Identify the entity for George Kilbon Nash
  dbr:George_Kilbon_Nash a dbo:Person .

  OPTIONAL {
    # Find any association with an entity in Baden-Württemberg
    dbr:George_Kilbon_Nash dbo:birthPlace ?entityInBadenWurttemberg .
    FILTER (regex(str(?entityInBadenWurttemberg), ""Baden-Württemberg"", ""i""))
  }

  OPTIONAL {
    # Find the alma mater of George Kilbon Nash
    dbr:George_Kilbon_Nash dbo:almaMater ?almaMater .
  }
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
838,19,test,"Give me the band of the band member, that is an artist and a musical artist, of YU Grupa and band member of the band, that is a group, of the reference, that is a group and an organisation, to YU Grupa.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/YU_Grupa> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v0 <http://xmlns.com/foaf/0.1/name> ""YU Grupa""@en . }","```sparql
SELECT DISTINCT ?bandMemberBand WHERE {
  # Step 1: Identify YU Grupa
  dbpedia:YUGrupa a dbo:MusicalGroup ;
                  dbo:member ?member .

  # Step 2: Find band members who are artists and musical artists
  ?member a dbo:MusicArtist, foaf:Agent .

  # Step 3: Determine other bands of these members
  ?member dbo:bandMemberOf ?bandMemberBand .

  # Step 4: Ensure these bands are groups (and possibly organizations)
  ?bandMemberBand a dbo:MusicalGroup .
}
```",5,10,6,3,2,3,2,20,0,0,5,0,0.0,0
492,27,test,"Give me the person decedent at the capital, that is a settlement, of the country of Khemis Miliana District.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/capital> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Khemis_Miliana_District> <http://dbpedia.org/ontology/country> ?v1 . ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?deathPlace WHERE {
  # Find the capital of Khemis Miliana District
  ?district a dbo:District ;
            dbo:country dbr:Algeria ;
            dbo:capital ?capital .
  
  FILTER (str(?district) = ""Khemis_Miliana_District"")

  # Ensure the capital is a settlement
  ?capital a dbo:Settlement .

  # Find persons who died in this capital
  ?person dbo:deathPlace ?deathPlace .
  ?deathPlace rdfs:label ?placeLabel .
  
  FILTER (lang(?placeLabel) = ""en"" && contains(lcase(str(?placeLabel)), lcase(str(?capital))))
}
```",3,4,4,3,1,3,3,71,0,0,122,0,0.0,0
328,34,test,Give me the leader of People's Commissariat of Defense of the Soviet Union and awardee of the award of the commander in Volcano and Ryukyu Islands campaign.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> ?v1 . <http://dbpedia.org/resource/Volcano_and_Ryukyu_Islands_campaign> <http://dbpedia.org/ontology/commander> ?v2 . <http://dbpedia.org/resource/People's_Commissariat_of_Defense_of_the_Soviet_Union> <http://dbpedia.org/ontology/leader> ?result . ?result <http://dbpedia.org/property/awards> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name WHERE {
  ?person dbo:positionHeld dbr:People's_Commissariat_of_Defense_of_the_Soviet_Union .
  ?person dbo:award ?award .
  FILTER(CONTAINS(LCASE(STR(?award)), ""volcano and ryukyu islands campaign""))
  ?person rdfs:label ?name .
  FILTER (LANG(?name) = 'en')
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
391,58,test,"Give me the native of Compton, California and actor of the claim to fame, that is a work, of Michael Ballhaus and actor of the movie, that is a movie and a work and a television show, with the professional in .","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/starring> ?v1 . <http://dbpedia.org/resource/Michael_Ballhaus> <http://dbpedia.org/ontology/knownFor> ?v5 . ?v5 <http://dbpedia.org/ontology/starring> ?result . ?v2 <http://dbpedia.org/property/starring> ?result . ?v1 <http://dbpedia.org/property/occupation> """"@en . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Compton,_California> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. }","```sparql
# Step 1: Find Michael Ballhaus's works
SELECT ?work WHERE {
    wd:Q123456 foaf:name ""Michael Ballhaus"" .
    ?work dbo:director wd:Q123456 .
}

# Step 2: Find an actor from Compton, California in one of those works
SELECT DISTINCT ?actor WHERE {
    ?actor dbo:nationality dbr:United_States ;
           dbo:birthPlace dbr:Compton,_California .
    ?work dbo:starring ?actor .
    ?work dbo:director wd:Q123456 .  # Michael Ballhaus's work
}

# Step 3: Find a movie that is also a TV show involving the same actor
SELECT DISTINCT ?movie WHERE {
    ?movie rdf:type dbr:Film ;
           dbo:starring ?actor .
    ?tvShow rdf:type dbr:Television_Show ;
            dbo:starring ?actor .
    FILTER(?movie = ?tvShow)
}

# Step 4: Determine the professional field of this actor
SELECT DISTINCT ?profession WHERE {
    ?actor dbo:occupation ?profession .
}
```",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
617,22,test,Give me the parent of the child of Antiochus (son of Antiochus III the Great) and child of Antiochus III the Great.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v1 . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Antiochus_III_the_Great> . <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/child> ?v1 . },"```sparql
SELECT ?parent WHERE {
  wd:Q1116 wdt:P31 wd:Q5;       # Antiochus IV Epiphanes (Q1116) is a human (Q5)
         wdt:P22 wd:Q1120;      # Antiochus IV Epiphanes' father is Antiochus III the Great (Q1120)
         wdt:P40 ?child.        # Antiochus IV Epiphanes has children (?child)

  OPTIONAL { ?child wdt:P22 ?parent }.
}
```",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
142,9,test,Give me the birthplace of the actor of Papa wa Newscaster and entity in the region of Japan Standard Time.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Japan_Standard_Time> . <http://dbpedia.org/resource/Papa_wa_Newscaster> <http://dbpedia.org/ontology/starring> ?v3 . ?result <http://dbpedia.org/ontology/country> ?v1 . },"```sparql
SELECT ?actorBirthPlace ?entityName WHERE {
  # Query to find the birthplace of Ken Watanabe
  wd:Q12345 dbo:birthPlace ?actorBirthPlace .
  
  # Query to find an entity in Japan (e.g., Tokyo)
  wd:Q60 rdfs:label ?entityName .
}
```

Note: `wd:Q12345` is a placeholder for Ken Watanabe's DBpedia identifier, and `wd:Q60` is the identifier for Tokyo. You would need to replace these with the correct identifiers from DBpedia.",4,4,5,2,2,2,2,9,0,0,2,0,0.0,0
915,20,test,"Give me the resident of the birthplace, that is a settlement, of the director of Pipe Dreams (1976 film) and father of the child, that is a fictional character and a soap character, of the parent, that is a fictional character and a soap character, of Lizzie Spaulding.",SELECT ?result WHERE { <http://dbpedia.org/resource/Lizzie_Spaulding> <http://dbpedia.org/ontology/parent> ?v4 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v5 <http://dbpedia.org/property/father> ?result . ?result <http://dbpedia.org/ontology/residence> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v5 <http://dbpedia.org/property/father> ?v4 . <http://dbpedia.org/resource/Pipe_Dreams_(1976_film)> <http://dbpedia.org/ontology/director> ?v1 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoapCharacter>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoapCharacter>. },"```sparql
# Step 1: Identify Lizzie Spaulding's parent
SELECT ?parent WHERE {
  ?lizzie a dbo:FictionalCharacter ;
          dbo:spouseOrPartnerOf ?soapOpera .
  ?soapOpera dbo:character ?parent .
  FILTER(CONTAINS(LCASE(?parent), ""lizzie spaulding""))
}

# Step 2: Identify the child of this parent
SELECT ?child WHERE {
  ?parent a dbo:FictionalCharacter ;
          dbo:spouseOrPartnerOf ?soapOpera .
  ?soapOpera dbo:character ?child .
  FILTER(CONTAINS(LCASE(?child), ""lizzie spaulding""))
}

# Step 3: Identify the director of Pipe Dreams (1976 film)
SELECT ?director WHERE {
  ?film a dbo:Film ;
        dbo:title ""Pipe Dreams"" ;
        dbo:director ?director .
  ?director dbo:birthDate ?date .
  FILTER(YEAR(?date) = 1976)
}

# Step 4: Find the birthplace of this director
SELECT ?birthPlace WHERE {
  ?director a dbo:Person ;
            dbo:birthPlace ?birthPlace .
}

# Step 5: Get the resident of that birthplace
SELECT ?resident WHERE {
  ?birthPlace a dbo:Settlement ;
              dbo:resident ?resident .
}
```",6,11,7,3,2,3,2,20,0,0,1,0,0.0,0
328,67,test,"Give me the awardee of Order of Suvorov and leader of the office, that is a government agency, of the leader, that is an office holder and a politician, of Gustav Jonson and commander in the force of the person decedent at Budapest.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v6 <http://dbpedia.org/ontology/commander> ?v0 . ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Order_of_Suvorov> . ?v3 <http://dbpedia.org/ontology/leader> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Gustav_Jonson> <http://dbpedia.org/property/leader> ?v1 . ?v0 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Budapest> . ?v6 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v1 <http://dbpedia.org/property/office> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?awardee WHERE {
  # Step 1: Identify Gustav Jonson
  ?gustavJonson a dbo:Politician ;
                foaf:name ""Gustav Jonson""@en .

  # Step 2: Find the leader of Gustav Jonson's office
  ?office dbo:leader ?leader .
  ?gustavJonson dbo:headquarters ?office .

  # Step 3: Identify the commander in the force at Budapest
  ?commander a dbo:MilitaryPerson ;
             dbo:commanderOf ?force ;
             dbo:deathPlace dbr:Budapest .
  
  # Step 4: Find the awardee of Order of Suvorov who also leads the office
  ?awardee dbo:awardeeOf dbr:Order_of_Suvorov ;
           = ?leader .

}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
30,8,test,Give me the native of Paris and professional in the profession of Édouard Alphonse James de Rothschild.,SELECT ?result WHERE { <http://dbpedia.org/resource/Édouard_Alphonse_James_de_Rothschild> <http://dbpedia.org/property/occupation> ?v2 . ?result <http://dbpedia.org/property/occupation> ?v2 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Paris> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlaceLabel ?occupationLabel
WHERE {
  VALUES ?person { dbr:Édouard_Alphonse_James_de_Rothschild }
  
  ?person dbo:birthPlace ?birthPlace .
  ?birthPlace rdfs:label ?birthPlaceLabel .
  FILTER (lang(?birthPlaceLabel) = 'en')

  ?person dbo:occupation ?occupation .
  ?occupation rdfs:label ?occupationLabel .
  FILTER (lang(?occupationLabel) = 'en')
}
```",3,3,4,2,2,2,2,9,0,2,1,0.0,0.0,0
547,57,test,Give me the resting place of James Burton (Egyptologist) and resting place of the actor of the show with Emily Richard and resting place of the awardee of Knight Grand Cross of the Order of St Michael and St George.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/starring> ?v5 . ?v5 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/James_Burton_(Egyptologist)> <http://dbpedia.org/ontology/restingPlace> ?result . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_St_Michael_and_St_George> . ?v0 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emily_Richard> . ?v3 <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
# Query for James Burton (Egyptologist)
SELECT ?restingPlace WHERE {
  ?person dbo:birthName ""James Burton""@en .
  ?person dbo:occupation dbp:Egyptologist .
  ?person dbo:deathPlace ?restingPlace .
}

UNION

# Query for actor from the show with Emily Richard (""The Archers"")
SELECT ?actorRestingPlace WHERE {
  ?show dbo:title ""The Archers""@en .
  ?show dbo:castMember ?actor .
  ?actor foaf:name ?actorName .
  FILTER(CONTAINS(?actorName, ""Emily Richard"") || CONTAINS(?actorName, ""Richard Emily"")) .
  ?actor dbo:deathPlace ?actorRestingPlace .
}

UNION

# Query for awardee of Knight Grand Cross of the Order of St Michael and St George
SELECT ?awardeeRestingPlace WHERE {
  ?person dbo:honours dbp:KnightGrandCrossOfTheOrderOfStMichaelAndStGeorge .
  ?person dbo:deathPlace ?awardeeRestingPlace .
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
617,71,test,"Give me the spouse of the child of the successor, that is a royalty, of Antiochus (son of Antiochus III the Great) and parent of the child of the commander in Battle of Panium and child of the child, that is a royalty, of the successor, that is a royalty, of Antiochus II Theos.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v2 . <http://dbpedia.org/resource/Antiochus_II_Theos> <http://dbpedia.org/ontology/successor> ?v1 . <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/successor> ?v4 . ?v2 <http://dbpedia.org/property/father> ?v1 . ?v7 <http://dbpedia.org/ontology/child> ?v8 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://dbpedia.org/ontology/spouse> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Battle_of_Panium> <http://dbpedia.org/ontology/commander> ?v7 . ?v4 <http://dbpedia.org/ontology/child> ?v5 . ?result <http://dbpedia.org/ontology/child> ?v8 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?spouse WHERE {
  # Step 1: Find Antiochus (son of Antiochus III the Great)
  ?antiochusIII a dbo:Person ;
                rdfs:label ""Antiochus III the Great""@en .
  
  ?antiochusIV dbo:childOf ?antiochusIII ;
               rdfs:label ""Antiochus IV""@en .

  # Step 2: Find successor of Antiochus IV who is royalty
  ?successor dbo:successor ?antiochusIV ;
             a dbo:Monarch ;
             rdfs:label ?successorLabel .
  
  # Step 3: Find child of this successor who is royalty
  ?child dbo:childOf ?successor ;
         a dbo:Monarch .

  # Step 4: Find spouse of this child
  ?spouse dbo:spouse ?child .

  # Additional condition for commander in Battle of Panium
  ?commander rdfs:label ""Commander in Battle of Panium""@en .
  ?commandersChild dbo:childOf ?commander ;
                   a dbo:Person .
  
  # Ensure the spouse is also parent of commander's child
  ?spouse dbo:parent ?commandersChild .

  # Step 5: Chain back to Antiochus II Theos
  ?antiochusII a dbo:Monarch ;
               rdfs:label ""Antiochus II Theos""@en .
  
  ?successor2 dbo:successor ?antiochusII ;
              a dbo:Monarch .

  ?child2 dbo:childOf ?successor2 ;
          a dbo:Monarch .

  FILTER(?spouse = ?child2)
}
```",9,12,10,3,3,3,3,71,0,0,2,0,0.0,0
747,49,test,Give me the band of the person born as the persona of Shèna and person born on the birth date of Pavlo Khudzik.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/property/birthName> ?v0 . <http://dbpedia.org/resource/Pavlo_Khudzik> <http://dbpedia.org/ontology/birthDate> ?v2 . ?result <http://dbpedia.org/ontology/birthDate> ?v2 . <http://dbpedia.org/resource/Shèna> <http://xmlns.com/foaf/0.1/givenName> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?band WHERE {
  # Find Shena Easton using the alias ""Shèna""
  ?shena a dbo:MusicalArtist ;
         rdfs:label ""Shena Easton""@en ;
         foaf:name ?name .
  FILTER(CONTAINS(LCASE(?name), ""shena"")) .

  # Find Pavlo Khudzik by birth date
  ?pavlo a dbo:Person ;
         dbp:birthday ?birthday ;
         foaf:name ""Pavlo Khudzik""@en .

  # Check if there is any band they are both associated with
  OPTIONAL { ?shena dbo:bandMemberOf ?band . }
  OPTIONAL { ?pavlo dbo:bandMemberOf ?band . }

  FILTER(?band != dbpedia:Unknown)
}
```",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
115,9,test,Give me the alma mater of the awardee of National Order of Scientific Merit and alma mater of the alumnus of National University of San Marcos.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/almaMater> ?result . ?v1 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/National_University_of_San_Marcos> . ?v3 <http://dbpedia.org/ontology/almaMater> ?result . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/National_Order_of_Scientific_Merit> . },"```sparql
# Query for the alma mater of an awardee of the National Order of Scientific Merit
SELECT ?almaMater WHERE {
  ?person dbo:award dbpedia:National_Order_of_Scientific_Merit .
  ?person dbo:almaMater ?almaMater .
}

UNION

# Query for the alma mater of an alumnus of National University of San Marcos
SELECT ?almaMater WHERE {
  ?person dbo:alumniOf dbpedia:National_University_of_San_Marcos .
  ?person dbo:almaMater ?almaMater .
}
```",4,4,5,2,2,2,2,9,0,0,2,0,0.0,0
996,20,test,Give me the entity in the award of the native of Palestine (region) and force of the awardee of the elevation of Lac d'Avoriaz.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/ontology/commander> ?v2 . ?result <http://dbpedia.org/ontology/place> ?v5 . ?v4 <http://dbpedia.org/property/awards> ?v5 . <http://dbpedia.org/resource/Lac_d'Avoriaz> <http://dbpedia.org/ontology/elevation> ?v1 . ?v4 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Palestine_(region)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?entity WHERE {
  # Step 1: Find individuals native to Palestine
  ?person dbo:nationality dbr:Palestine .
  
  # Step 2: Identify awards received by these individuals
  ?person dbo:awardReceived ?award .

  # Step 3: Find the award related to Lac d'Avoriaz and its awardee's notable characteristic or role
  ?award dbp:elevation ""Lac d'Avoriaz"" .
  ?awardRecipient dbo:awardReceived ?award .
  
  # Step 4: Combine these elements to find the entity
  FILTER(?person = ?awardRecipient)
}
```",6,6,7,3,2,3,2,20,0,0,4,0,0.0,0
820,16,test,Give me the professional in the award of Scott McCloud and child of the parent of Jason Schwartzman.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v3 . <http://dbpedia.org/resource/Scott_McCloud> <http://dbpedia.org/property/awards> ?v2 . ?result <http://dbpedia.org/property/occupation> ?v2 . ?v3 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Jason_Schwartzman> . },"```sparql
# Step 1: Identify Scott McCloud's Award
SELECT ?award WHERE {
    dbpedia:Scott_McCloud dbo:awardReceived ?award .
}

# Step 2: Find the Parent of Jason Schwartzman
SELECT ?parent WHERE {
    dbpedia:Jason_Schwartzman dbo:childOf ?parent .
}

# Step 3: Determine the Child of that Parent (assuming it's Jason Schwartzman or another sibling)
SELECT DISTINCT ?child WHERE {
    ?parent dbo:child ?child .
    FILTER(?parent IN {<result_of_step_2>})
}

# Step 4: Identify the Professional in the Award
SELECT DISTINCT ?profession WHERE {
    ?award dbo:field ?profession .
    FILTER(?award IN {<result_of_step_1>})
}
```

Note: Replace `<result_of_step_1>` and `<result_of_step_2>` with actual URIs obtained from executing the first two queries.",4,4,5,2,2,3,2,20,0,0,1,0,0.0,0
701,35,test,Give me the parent of the child of Nefertari and spouse of the father of Merneptah.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v1 . ?v2 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Nefertari> <http://dbpedia.org/ontology/child> ?v2 . <http://dbpedia.org/resource/Merneptah> <http://dbpedia.org/property/father> ?v1 . },"```sparql
SELECT ?parent WHERE {
  ?nefertari dbo:spouse dbr:Ramesses_II .
  ?child dbo:parent ?nefertari ;
         dbo:parent ?ramessesII .
  ?merneptah dbo:father dbr:Ramesses_II .
  ?ramessesII dbo:spouse ?spouse .
  FILTER(?spouse = ?nefertari)
  BIND(?ramessesII AS ?parent)
}
```",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
767,46,test,"Give me the entity in the administration, that is a settlement, of the writer of Where It's At (Dustin Lynch album) and alma mater of the administration of George K. Nash.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://dbpedia.org/property/leaderParty> ?v2 . ?result <http://dbpedia.org/ontology/state> ?v1 . ?v4 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/George_K._Nash> . ?v4 <http://dbpedia.org/ontology/almaMater> ?result . <http://dbpedia.org/resource/Where_It's_At_(Dustin_Lynch_album)> <http://dbpedia.org/property/writer> ?v2 . },"```sparql
# Step 1: Find the writer of ""Where It's At"" from Dustin Lynch's album
SELECT ?writer WHERE {
  ?song dcterms:title ""Where It's At""@en .
  ?song dbo:lyricsBy ?writer .
  ?album dbo:song ?song .
  ?album dbo:artist <http://dbpedia.org/resource/Dustin_Lynch> .
}

# Step 2: Find George K. Nash's alma mater
SELECT ?almaMater WHERE {
  <http://dbpedia.org/resource/George_K._Nash> dbo:almaMater ?almaMater .
}

# Step 3: Identify any administration associated with this alma mater
SELECT DISTINCT ?administration WHERE {
  ?almaMater dbo:location ?location .
  ?location dbo:administrativeUnit ?administration .
}

# Step 4: Extract a settlement within that administration
SELECT DISTINCT ?settlement WHERE {
  ?administration dbo:settlement ?settlement .
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
547,61,test,Give me the resting place of the actor of the show with Emily Richard and resting place of the awardee of the award of Gerald Graham.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emily_Richard> . ?v3 <http://dbpedia.org/ontology/restingPlace> ?result . ?v3 <http://dbpedia.org/property/awards> ?v1 . <http://dbpedia.org/resource/Gerald_Graham> <http://dbpedia.org/property/awards> ?v1 . ?v5 <http://dbpedia.org/ontology/restingPlace> ?result . ?v0 <http://dbpedia.org/property/starring> ?v5 . },"```sparql
# Query 1: Resting place of actors from a show featuring Emily Richard

SELECT ?actor ?actorRestingPlace WHERE {
  # Find TV shows with an actress named Emily Richard
  ?show dbo:starring dbr:Emily_Richard .
  
  # Get the cast members (actors) of that show
  ?show dbo:castMember ?actor .

  OPTIONAL {
    ?actor foaf:deathPlace ?restingPlace .
    BIND(STR(?restingPlace) AS ?actorRestingPlace)
  }
}

UNION

# Query 2: Resting place of awardees associated with Gerald Graham

SELECT ?awardee ?awardeeRestingPlace WHERE {
  # Find awards linked to Gerald Graham
  ?award dbo:recipient dbr:Gerald_Graham .
  
  # Get the recipients (awardees) of those awards
  ?award dbo:recipient ?awardee .

  OPTIONAL {
    ?awardee foaf:deathPlace ?restingPlace .
    BIND(STR(?restingPlace) AS ?awardeeRestingPlace)
  }
}
```",6,6,7,3,2,3,3,71,0,0,2,0,0.0,0
54,67,test,"Give me the predecessor of the child, that is an office holder and a royalty, of the reference to Thihapate of Mohnyin and parent of the child of the parent of Thado Minsaw of Prome and child of Thinkhaya of Pagan.","SELECT ?result WHERE { ?v1 <http://xmlns.com/foaf/0.1/name> ""Thihapate of Mohnyin""@en . ?v6 <http://dbpedia.org/property/father> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v6 <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://dbpedia.org/property/father> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> . ?result <http://dbpedia.org/ontology/successor> ?v3 . <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?result . }","```sparql
SELECT ?predecessor WHERE {
  # Find Thihapate of Mohnyin's child who is an office holder and a royalty
  ?child dbo:parent dbr:Thihapate_of_Mohnyin ;
         rdf:type dbo:RoyalPerson, dbo:OfficeHolder .

  # Find the predecessor of this child
  ?predecessor dbo:successor ?child .

  # Thado Minsaw of Prome's parent and Thinkhaya of Pagan's child
  ?thadoMinsawParent dbo:parent dbr:Thado_Minsaw_of_Prome .
  ?thinkhayaChild dbo:parent dbr:Thinkhaya_of_Pagan .

  # Ensure the predecessor is related to both Thado Minsaw and Thinkhaya
  FILTER(?predecessor = ?thadoMinsawParent || ?predecessor = ?thinkhayaChild)
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
994,24,test,"Give me the band member of Don Dokken and associated musical artist of the band member, that is a band and a group and an organisation, of Meshuggah.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Meshuggah> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Don_Dokken> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandMember ?associatedBand WHERE {
  # Step 1: Identify a band member of Don Dokken
  ?donDokkenBand dbo:musicalArtist dbr:Don_Dokken .
  ?donDokkenBand dbo:member ?bandMember .

  # Ensure the band member is George Lynch
  FILTER(?bandMember = dbr:George_Lynch)

  # Step 2: Find associated musical artist (band) of this member
  ?associatedBand dbo:musicalArtist ?bandMember .
  
  # Step 3: Check if the band is recognized as both a group and an organization
  ?associatedBand rdf:type dbo:MusicalGroup ;
                 dbo:organization dbr:Lynch_Mob .

  # Step 4: Verify any connection to Meshuggah
  OPTIONAL {
    ?meshuggahRelation dbo:member ?bandMember .
    FILTER(?meshuggahRelation = dbr:Meshuggah)
  }
}
```",3,6,4,2,2,3,3,71,0,0,1,0,0.0,0
232,56,test,"Give me the actor of Dog Soldiers (film) and child of the person born as John Devon Roland Pertwee and native of the residence, that is a settlement and British, of the native, that is a politician and an office holder, of France.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v0 <http://dbpedia.org/property/residence> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/France> . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v2 <http://dbpedia.org/property/birthName> ""John Devon Roland Pertwee""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Dog_Soldiers_(film)> <http://dbpedia.org/ontology/starring> ?result . }","```sparql
# Step 1: Get the actor of ""Dog Soldiers""
SELECT ?actor WHERE {
    ?film dcterms:title ""Dog Soldiers""@en .
    ?film dbo:starring ?actor .
}

# Step 2: Find John Devon Roland Pertwee
SELECT ?pertwee WHERE {
    ?pertwee foaf:name ""John Devon Roland Pertwee"" .
}

# Step 3: Determine his child
SELECT ?child WHERE {
    ?pertwee dbo:child ?child .
}

# Step 4: Identify the residence (settlement) of this child
SELECT DISTINCT ?residence WHERE {
    ?child foaf:birthPlace ?residence .
    ?residence a dbo:Settlement ;
              dbo:country dbr:United_Kingdom .
}

# Step 5: Find a French politician who is an office holder and native to this settlement
SELECT ?politician WHERE {
    ?politician dbo:nationality dbr:France ;
               dbo:officeHolder true ;
               foaf:birthPlace ?residence .
}
```",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
547,47,test,Give me the resting place of the actor of the show with Emily Richard and resting place of the child of James Burton (property developer).,SELECT ?result WHERE { <http://dbpedia.org/resource/James_Burton_(property_developer)> <http://dbpedia.org/ontology/child> ?v2 . ?v4 <http://dbpedia.org/ontology/restingPlace> ?result . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . ?v0 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emily_Richard> . ?v0 <http://dbpedia.org/property/starring> ?v4 . },"```sparql
# Query for the resting place of Helena Bonham Carter (actor in ""The Crown"" with Emily Watson)
SELECT ?restingPlace WHERE {
  wd:Q1774 dbo:spouse ?person .
  ?person foaf:name ""Helena Bonham Carter""@en .
  ?person dbo:deathPlace ?restingPlace .
}

# Query for the resting place of a child of James Burton (property developer)
SELECT ?childRestingPlace WHERE {
  wd:Q1234567 dbo:spouseOrPartner ?partner .
  ?partner foaf:name ""James Burton""@en .
  ?partner dbo:child ?child .
  ?child dbo:deathPlace ?childRestingPlace .
}
```

Note: Replace `wd:Q1774` with the actual DBpedia ID for Helena Bonham Carter and `wd:Q1234567` with the correct DBpedia ID for James Burton (property developer) once identified.",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
427,66,test,"Give me the reference to the name of Italian People's Party (1994) and party of the father of Lamberto Andreotti and party of the person born, that is an office holder and a politician, as the birth name of Romano Prodi.",SELECT ?result WHERE { ?v6 <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Lamberto_Andreotti> <http://dbpedia.org/property/father> ?v6 . ?v2 <http://dbpedia.org/ontology/party> ?result . ?v2 <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Italian_People's_Party_(1994)> <http://xmlns.com/foaf/0.1/name> ?v3 . <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/property/birthName> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
# Query 1: Reference to the name of Italian People's Party (1994)
SELECT ?reference WHERE {
  ?party a dbo:PoliticalParty ;
         rdfs:label ""Italian People's Party""@en .
  OPTIONAL { ?party foaf:name ?reference }
} LIMIT 1

UNION

# Query 2: Political party associated with Giuseppe Andreotti
SELECT DISTINCT ?partyLabel WHERE {
  ?person dbo:birthName ""Giuseppe Andreotti""@it ;
          dbo:politicalParty ?party .
  ?party rdfs:label ?partyLabel .
} LIMIT 1

UNION

# Query 3: Birth name of Romano Prodi if it refers to another person
SELECT DISTINCT ?alternateBirthName WHERE {
  ?prodi a dbo:Person ;
         foaf:name ""Romano Prodi""@en ;
         dbo:birthName ?alternateBirthName .
  FILTER EXISTS { ?alternateBirthName rdfs:label ?nameLabel }
} LIMIT 1
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
184,51,test,Give me the parent of the child of the parent of Archduchess Margaret of Austria (born 1925) and child of the child of Archduke Joseph Karl of Austria.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v4 . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Margaret_of_Austria_(born_1925)> . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Karl_of_Austria> . ?result <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://dbpedia.org/property/father> ?v1 . },"```sparql
# Step 1: Find the parent of Archduchess Margaret of Austria (born 1925)
SELECT ?parent WHERE {
    ?margaret dbo:birthDate ""1925-01-01""^^xsd:date ;
              rdf:type dbo:Archduchess .
    ?margaret dbo:parent ?parent .
}

# Step 2: Find a child of the parent identified in step 1
SELECT DISTINCT ?child WHERE {
    ?parent dbo:child ?child .
}

# Step 3: Find the child of Archduke Joseph Karl of Austria
SELECT ?josephChild WHERE {
    ?joseph rdf:type dbo:Archduke ;
            foaf:name ""Joseph Karl of Austria"" .
    ?joseph dbo:child ?josephChild .
}

# Step 4: Find a grandchild of Archduke Joseph Karl (a child of the child identified in step 3)
SELECT DISTINCT ?grandchild WHERE {
    ?josephChild dbo:child ?grandchild .
}

# Final Step: Find the common ancestor (parent) of the individuals found in steps 2 and 4
SELECT DISTINCT ?commonAncestor WHERE {
    VALUES (?individual1 ?individual2) { 
        (:child1 :grandchild1) # Replace with actual URIs from previous queries
    }
    ?individual1 dbo:parent ?commonAncestor .
    ?individual2 dbo:parent ?commonAncestor .
}
```

Note: The placeholders `:child1` and `:grandchild1` in the final query should be replaced with the actual URIs obtained from the results of the previous queries.",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
547,50,test,Give me the resting place of the awardee of Knight Grand Cross of the Order of St Michael and St George and resting place of the actor of the show with Emily Richard.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emily_Richard> . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_St_Michael_and_St_George> . ?v4 <http://dbpedia.org/ontology/restingPlace> ?result . ?v3 <http://dbpedia.org/ontology/restingPlace> ?result . ?v0 <http://dbpedia.org/property/starring> ?v4 . },"```sparql
# Query to find the resting place of a Knight Grand Cross of the Order of St Michael and St George
SELECT ?person ?restingPlace WHERE {
  ?person dbo:award dbp:Order_of_St_Michael_and_St_George ""Knight Grand Cross""@en .
  OPTIONAL { ?person dbo:deathPlace ?restingPlace . }
}

UNION

# Query to find the resting place of an actor from Downton Abbey
SELECT ?actor ?restingPlace WHERE {
  ?actor dbo:spouse dbp:Downton_Abbey ""cast member""@en .
  OPTIONAL { ?actor dbo:deathPlace ?restingPlace . }
}
```",5,5,6,3,2,3,3,71,0,0,2,0,0.0,0
528,71,test,"Give me the war of the commander in the work of --01-09 and war of the military force of the entity, that is a societal event, in Chile and force of the person born as the birth name of Narciso Campero.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Chile> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/commander> ?v8 . <http://dbpedia.org/resource/Narciso_Campero> <http://dbpedia.org/property/birthName> ?v7 . ?v4 <http://dbpedia.org/ontology/commander> ?v5 . ?v4 <http://dbpedia.org/property/author> ""--01-09""^^<http://www.w3.org/2001/XMLSchema#gMonthDay> . ?v2 <http://dbpedia.org/ontology/battle> ?v1 . ?v8 <http://dbpedia.org/property/birthName> ?v7 . ?v5 <http://dbpedia.org/ontology/battle> ?result . }","```sparql
# Query for wars involving Chile
SELECT ?war WHERE {
  ?war dbo:location dbr:Chile .
  ?war rdf:type dbo:MilitaryConflict .
}

# Query for military force led by Narciso Campero
SELECT ?militaryForce WHERE {
  ?person foaf:name ""Narciso Campero""@en .
  ?person dbo:birthName ""Narciso Campero""@en .
  ?militaryForce dbo:commander ?person .
}
```",9,10,10,3,3,3,3,71,0,0,2,0,0.0,0
528,67,test,Give me the force of the person born as the birth name of Narciso Campero and war of the commander in the work of --01-09 and war of Irene Morales.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> ?v3 . ?v3 <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/ontology/commander> ?v6 . ?v0 <http://dbpedia.org/property/author> ""--01-09""^^<http://www.w3.org/2001/XMLSchema#gMonthDay> . <http://dbpedia.org/resource/Irene_Morales> <http://dbpedia.org/ontology/battle> ?result . ?v6 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Narciso_Campero> <http://dbpedia.org/property/birthName> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?birthName ?force ?work ?warCommander ?ireneWar WHERE {
  # Step 1: Find Narciso Campero's birth name
  VALUES ?narcisoCampero { dbr:Narciso_Campero }
  ?narcisoCampero dbo:birthName ?birthName .

  # Step 2: Find the force of the person with that birth name
  OPTIONAL {
    ?person dbp:birthName ?birthName .
    ?person dbo:militaryRank ?force .
  }

  # Step 3: Identify the work and date --01-09
  SELECT DISTINCT ?work WHERE {
    ?work dbo:datePublished ?date .
    FILTER (STRSTARTS(STR(?date), ""2000-01-09""^^xsd:date) || STRSTARTS(STR(?date), ""2010-01-09""^^xsd:date) || STRSTARTS(STR(?date), ""2020-01-09""^^xsd:date))
  }

  # Step 4: Find the war associated with the commander in that work
  ?work dbo:subject ?commander .
  ?commander dbo:militaryRank ?rank .
  ?commander dbo:participatedInWar ?warCommander .

  # Step 5: Identify Irene Morales and her associated war
  VALUES ?irene { dbr:Irene_Morales }
  ?irene dbo:participatedInWar ?ireneWar .
}
```",7,7,8,3,3,3,3,71,0,0,2,0,0.0,0
994,20,test,"Give me the associated musical artist of S.A. Slayer and associated musical artist of the band member, that is a band and a group and an organisation, of Meshuggah.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Meshuggah> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/S.A._Slayer> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
# Query for the associated musical artist of S.A. Slayer (Tom Araya)
SELECT ?band WHERE {
  wd:Q12345 wdt:P106 wd:Q82955 . # Tom Araya is a musician
  wd:Q12345 wdt:P175 ?band .      # Associated band
}

UNION

# Query for the associated musical artist of a Meshuggah member who is also part of another band or group that functions as an organization
SELECT ?memberBand WHERE {
  ?member wdt:P106 wd:Q82955 .    # Member is a musician
  ?member wdt:P463 wd:Q123456 .   # Member of Meshuggah
  ?member wdt:P175 ?otherGroup .  # Associated with another band/group
  ?otherGroup wdt:P31/wdt:P279* wd:Q43229 . # Other group is an organization

  OPTIONAL { ?member wdt:P175 ?memberBand } # Retrieve member's associated band
}
```

Note: Replace `wd:Q12345` with the actual DBpedia ID for Tom Araya and `wd:Q123456` with the DBpedia ID for Meshuggah. The query assumes that the organization type is represented by `wd:Q43229`.",3,6,4,2,2,3,3,71,0,0,2,0,0.0,0
626,19,test,"Give me the commander in the force, that is a military conflict, of Alexander I of Russia and awardee of the award of the military force of Battle of Borodino.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ?v4 . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/property/awards> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Borodino> . ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Alexander_I_of_Russia> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?award WHERE {
  # Identify the Battle of Borodino and its commander
  ?battle dbo:participatedInMilitaryConflict dbr:Napoleonic_Wars ;
          dbo:commander ?commander .
  
  FILTER (str(?battle) = ""Battle_of_Borodino"")

  # Ensure the commander is Mikhail Kutuzov
  ?commander rdfs:label ?name .
  FILTER (CONTAINS(LCASE(?name), ""mikhail kutuzov""))

  # Check for awards related to the battle
  OPTIONAL {
    ?award dbo:recipient ?commander ;
           dbo:relatedEvent ?battle .
  }
}
```",5,6,6,3,2,3,2,20,0,0,44,0,0.0,0
485,28,test,"Give me the entity in the birth place, that is a region, of Joseph Whitaker (naturalist) and birth place of the awardee, that is a writer and a poet, of Eric Gregory Award and entity in the region, that is a country, of Western European Time.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Joseph_Whitaker_(naturalist)> <http://dbpedia.org/ontology/birthPlace> ?v5 . ?v1 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Western_European_Time> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>. ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Eric_Gregory_Award> . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Poet>. ?result <http://dbpedia.org/ontology/country> ?v1 . },"```sparql
SELECT DISTINCT ?region WHERE {
  # Joseph Whitaker's birthplace as a region
  ?whitaker dbo:birthPlace ?birthPlace .
  FILTER(STRSTARTS(STR(?whitaker), ""http://dbpedia.org/resource/Joseph_Whitaker_(naturalist)"")) .
  ?birthPlace rdf:type dbo:Region .

  # Eric Gregory Award awardee's birthplace as a region
  ?awardee dbo:award <http://dbpedia.org/resource/Eric_Gregory_Award> ;
           dbo:occupation ?occupation1, ?occupation2 .
  FILTER(STRSTARTS(STR(?awardee), ""http://dbpedia.org/"")) .
  VALUES ?occupation1 { dbo:Writer }
  VALUES ?occupation2 { dbo:Poet }
  ?awardee dbo:birthPlace ?awardBirthPlace .
  ?awardBirthPlace rdf:type dbo:Region .

  # Western European Time country
  ?country dbo:timeZone <http://dbpedia.org/resource/Western_European_Time> .

  # Ensure all regions are the same
  FILTER(?birthPlace = ?awardBirthPlace)
  OPTIONAL { ?region rdfs:label ?regionLabel . }
}
```",6,10,7,2,3,2,3,28,0,0,1,0,0.0,0
92,53,test,"Give me the band member of the reference, that is an artist, to the name of Nevermore (2006 film) and associated musical artist of Jim Sheppard and band of the person born as Joseph Michael Furney.","SELECT ?result WHERE { <http://dbpedia.org/resource/Nevermore_(2006_film)> <http://xmlns.com/foaf/0.1/name> ?v3 . <http://dbpedia.org/resource/Jim_Sheppard> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://xmlns.com/foaf/0.1/name> ?v3 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?result <http://dbpedia.org/ontology/bandMember> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://dbpedia.org/property/birthName> ""Joseph Michael Furney""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?artist ?bandMember ?associatedArtist WHERE {
  # Part 1: Associated musical artist of the film ""Nevermore"" (2006)
  OPTIONAL {
    dbr:Nevermore_(film) dbo:musicalArtist ?artist .
  }

  # Part 2: Band members of Jim Sheppard
  OPTIONAL {
    dbr:Jim_Sheppard dbo:bandMember ?bandMember .
    ?bandMember dbo:associatedBandMember ?associatedArtist .
  }

  # Part 3: Band members of Joseph Michael Furney (Warrel Dane)
  OPTIONAL {
    dbr:Warrel_Dane dbo:birthName ""Joseph Michael Furney"" ;
                    dbo:bandMember ?bandMember .
    ?bandMember dbo:associatedBandMember ?associatedArtist .
  }
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
626,20,test,"Give me the commander in the force, that is a military conflict, of the commander in Battle of Paris (1814) and awardee of the award of the military force of Battle of Borodino.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/awards> ?v5 . ?v2 <http://dbpedia.org/ontology/commander> ?v1 . <http://dbpedia.org/resource/Battle_of_Paris_(1814)> <http://dbpedia.org/ontology/commander> ?v1 . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/property/awards> ?v5 . ?v4 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Borodino> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commanderInParis ?conflict ?awardeeBorodino WHERE {
  # Find the commander in Battle of Paris (1814)
  ?battle dbr:Battle_of_Paris_(1814) .
  ?battle dbo:commander ?commanderInParis .

  # Identify the military conflict associated with this commander
  ?conflict dbo:commander ?commanderInParis .

  # Find an awardee from the Battle of Borodino
  ?borodinoBattle dbr:Battle_of_Borodino .
  ?borodinoBattle dbo:militaryForce ?militaryForce .
  ?awardeeBorodino dbo:award ?award .
  ?award dbo:recipient ?awardeeBorodino .
  FILTER EXISTS { ?militaryForce dbo:participatedIn ?borodinoBattle }

  # Find the commander in the conflict associated with the awardee
  ?conflict dbo:commander ?awardeeBorodino .
}
```",6,7,7,3,2,3,2,20,0,0,62,0,0.0,0
767,48,test,"Give me the reference to the alter ego of Black Hood and entity in the administration, that is a settlement, of the writer of Where It's At (Dustin Lynch album).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/state> ?v2 . <http://dbpedia.org/resource/Where_It's_At_(Dustin_Lynch_album)> <http://dbpedia.org/property/writer> ?v3 . ?v2 <http://dbpedia.org/property/leaderParty> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Black_Hood> <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?alterEgo ?settlement WHERE {
  # Find the alter ego of Black Hood (Batman)
  dbr:Bruce_Wayne dbo:alias dbr:Black_Hood .
  
  # Find Gotham City as an entity in administration related to Bruce Wayne
  dbr:Gotham_City dbo:mayor dbr:Bruce_Wayne .

  # Find Nashville, Tennessee associated with Dallas Davidson
  dbr:Nashville_Tennessee dbo:birthPlace dbr:Dallas_Davidson .
  
  # Bind the alter ego and settlement to variables
  BIND(dbr:Bruce_Wayne AS ?alterEgo)
  BIND(dbr:Nashville_Tennessee AS ?settlement)
}
```",5,6,6,3,2,3,3,71,0,0,8,0,0.0,0
54,56,test,"Give me the predecessor of the child, that is an office holder and a royalty, of the reference to Thihapate of Mohnyin and parent of Thado Minsaw of Prome and child of the father of Soe Min Wimala Dewi.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Soe_Min_Wimala_Dewi> <http://dbpedia.org/property/father> ?v2 . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Thihapate of Mohnyin""@en . ?v1 <http://dbpedia.org/property/father> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?predecessor WHERE {
  # Thihapate of Mohnyin
  ?thihapate a dbo:Monarch ;
             foaf:name ""Thihapate of Mohnyin""@en .

  # Child of Thihapate who is an office holder and royalty
  ?child dbo:parent ?thihapate ;
         dbo:officeHolder true ;
         dbo:royalty true .

  # This child is the parent of Thado Minsaw of Prome
  ?child dbo:parent dbr:Thado_Minsaw_of_Prome .

  # This child is also a child of the father of Soe Min Wimala Dewi
  ?fatherOfSoeMinWimalaDewi dbo:child ?soeMinWimalaDewi .
  ?child dbo:parent ?fatherOfSoeMinWimalaDewi .

  # Find the predecessor of this office holder
  ?officeHolderPosition dbo:successor ?child ;
                       dbo:title ?predecessor .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
747,70,test,"Give me the band of the person born as the persona of Shèna and person born on the birth date of Pavlo Khudzik and band of the writer of the work, that is a song, of Amba Shepherd.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Amba_Shepherd> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. <http://dbpedia.org/resource/Pavlo_Khudzik> <http://dbpedia.org/ontology/birthDate> ?v4 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Shèna> <http://xmlns.com/foaf/0.1/givenName> ?v1 . ?v7 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/writer> ?v7 . ?result <http://dbpedia.org/ontology/birthDate> ?v4 . },"```sparql
# Query 1: Find the band of the person born as Shèna
SELECT ?person ?band WHERE {
  ?person dbo:birthName ""Shèna""@en .
  OPTIONAL { ?person dbo:associatedBand ?band . }
}

UNION

# Query 2: Find the band of the person born on Pavlo Khudzik's birth date
SELECT ?person ?band WHERE {
  ?pavlo dbo:birthDate ?date .
  FILTER (?pavlo = dbpedia:Pavlo_Khudzik) .
  ?otherPerson dbo:birthDate ?date .
  OPTIONAL { ?otherPerson dbo:associatedBand ?band . }
}

UNION

# Query 3: Find the band of the writer of a song by Amba Shepherd
SELECT ?song ?writer ?band WHERE {
  ?song dbo:composer ""Amba_Shepherd""@en ;
        dbo:composer ?writer .
  OPTIONAL { ?writer dbo:associatedBand ?band . }
}
```",8,9,9,3,3,3,3,71,0,0,1,0,0.0,0
801,57,test,"Give me the producer of the work, that is a musical work and a song and a work, of the professional, that is a musical artist, in Rapper and associated musical artist of the writer, that is a musical artist and an artist, of 40 Dayz & 40 Nightz and professional in .","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/property/occupation> """"@en . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/40_Dayz_&_40_Nightz> <http://dbpedia.org/property/writer> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v5 <http://dbpedia.org/ontology/producer> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v0 <http://dbpedia.org/property/occupation> ""Rapper""@en . ?v5 <http://dbpedia.org/property/writer> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?producer ?writer WHERE {
  # Identify ""40 Dayz & 40 Nightz"" as a work
  VALUES ?song { dbr:40_Dayz_%26_40_Nightz }

  # Find the producer of the song who is also a rapper or associated musical artist
  ?song dbo:producer ?producer .
  ?producer rdf:type ?producerType .
  FILTER (
    ?producerType IN (dbr:Rapper, dbr:Musical_artist) ||
    EXISTS { ?producer dbo:associatedActs ?artist . ?artist rdf:type dbr:Musical_artist }
  )

  # Identify the writer of the song who is also a musical artist
  ?song dbo:lyricist ?writer .
  ?writer rdf:type ?writerType .
  FILTER (
    ?writerType IN (dbr:Musical_artist, dbr:Artist)
  )
  
  # Ensure there's an association between the identified writer and other musical artists
  OPTIONAL { ?writer dbo:associatedActs ?artist . ?artist rdf:type dbr:Musical_artist }
}
```",6,12,7,3,3,3,3,71,0,0,8,0,0.0,0
528,47,test,Give me the war of the commander in the work of --01-09 and war of the military force of Battle of Pisagua.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/commander> ?v4 . ?v2 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Pisagua> . ?v0 <http://dbpedia.org/property/author> ""--01-09""^^<http://www.w3.org/2001/XMLSchema#gMonthDay> . ?v4 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/ontology/battle> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce WHERE {
  ?battle dbo:militaryConflict [dbo:participatingMilitaryUnit ?militaryForce] .
  ?battle rdfs:label ""Battle of Pisagua""@en .
}
```",5,5,6,3,2,3,3,71,0,0,8,0,0.0,0
617,59,test,"Give me the spouse of the child of the successor, that is a royalty, of Antiochus (son of Antiochus III the Great) and child of the child, that is a royalty, of the successor, that is a royalty, of Antiochus II Theos.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> ?v3 . ?v0 <http://dbpedia.org/ontology/child> ?v5 . ?result <http://dbpedia.org/property/father> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Antiochus_II_Theos> <http://dbpedia.org/ontology/successor> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/successor> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
SELECT ?spouse WHERE {
  # Identify Antiochus IV Epiphanes
  ?antiochusIV dbo:father dbc:Antiochus_III_the_Great .
  
  # Find his successor, Antiochus V Eupator
  ?antiochusV dbo:father ?antiochusIV .

  # Identify the child of this successor that is royalty, Antiochus VI Dionysus
  ?antiochusVI dbo:father ?antiochusV .
  
  # Find the spouse of Antiochus VI Dionysus
  ?marriage dbo:spouse ?antiochusVI ;
            dbo:spouse ?spouse .

  # Identify the successor of Antiochus II Theos, Seleucus II Callinicus
  ?seleucusII dbo:father dbc:Antiochus_II_theos .
  
  # Find a child of this successor that is royalty, Antiochus III the Great
  ?antiochusIII dbo:father ?seleucusII .

  # Find the child of this child (Antiochus III) that is royalty, Antiochus IV Epiphanes
  ?antiochusIV_2 dbo:father ?antiochusIII .
  
  FILTER(?antiochusIV = ?antiochusIV_2)
}
```",6,9,7,3,2,3,3,71,0,0,4,0,0.0,0
659,54,test,"Give me the military force of Napoleonic Wars and commander in the force of Arthur Wellesley, 1st Duke of Wellington and commander in the war, that is an event and a military conflict, of the figure known, that is a military unit and an organisation, as 'Polish Horse'.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v5 <http://dbpedia.org/ontology/commander> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://dbpedia.org/ontology/battle> ?v5 . ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Arthur_Wellesley,_1st_Duke_of_Wellington> . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/property/nickname> ""'Polish Horse'""@en . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Napoleonic_Wars> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?militaryForce ?commander ?conflict ?polishHorse WHERE {
  # Arthur Wellesley, 1st Duke of Wellington
  dbr:Arthur_Wellesley_1st_Duke_of_Wellington dbo:commander ?militaryForce .
  
  # Napoleonic Wars as the conflict
  ?militaryForce dbo:militaryConflict dbr:Napoleonic_Wars .

  # Commander in the force and war
  ?militaryForce dbo:commander dbr:Arthur_Wellesley_1st_Duke_of_Wellington .

  # Polish Horse unit or organization
  ?polishHorse rdfs:label ""Polish Horse""@en .
  
  # Linking the Polish Horse to the military force
  ?polishHorse dbo:militaryUnitOf ?militaryForce .
}
```",6,10,7,3,3,3,3,71,0,0,13,0,0.0,0
767,53,test,"Give me the entity in the administration, that is a settlement, of the writer of Where It's At (Dustin Lynch album) and alma mater of Carl L. Nippert and reference to the alter ego of Black Hood.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://dbpedia.org/property/leaderParty> ?v3 . <http://dbpedia.org/resource/Black_Hood> <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . <http://dbpedia.org/resource/Carl_L._Nippert> <http://dbpedia.org/ontology/almaMater> ?result . <http://dbpedia.org/resource/Where_It's_At_(Dustin_Lynch_album)> <http://dbpedia.org/property/writer> ?v3 . ?result <http://dbpedia.org/ontology/state> ?v2 . },"```sparql
# Query to find the writer of ""Where It's At"" by Dustin Lynch
SELECT ?writer WHERE {
  ?song dcterms:title ""Where It's At""@en .
  ?song dbo:lyricsBy ?writer .
  ?album dbo:track ?song .
  ?album dbo:artist ?dustinLynch .
  ?dustinLynch foaf:name ""Dustin Lynch"" .
}

# Query to find the alma mater of Carl L. Nippert
SELECT ?almaMater WHERE {
  ?carlLNippert foaf:name ""Carl L. Nippert""@en .
  ?carlLNippert dbo:almaMater ?almaMater .
}

# Query to find the alter ego of Black Hood
SELECT ?alterEgo WHERE {
  ?blackHood foaf:name ""Black Hood""@en .
  ?blackHood dbo:alterEgo ?alterEgo .
}

# Assuming we have identified entities from above queries, let's say:
# - Writer is ?writerEntity
# - Alma Mater is ?almaMaterEntity
# - Alter Ego is ?alterEgoEntity

# Query to find a settlement in the administration of these entities
SELECT DISTINCT ?settlement WHERE {
  VALUES (?entity) { (<writerEntityURI> <almaMaterEntityURI> <alterEgoEntityURI>) }
  
  ?entity dbo:locatedIn ?location .
  ?location rdf:type dbo:Settlement .
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
435,24,test,Give me the work of the author of Iceland and region of the time zone in Bombali Shebora Chiefdom.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/author> ?v1 . <http://dbpedia.org/resource/Iceland> <http://dbpedia.org/property/author> ?v1 . <http://dbpedia.org/resource/Bombali_Shebora_Chiefdom> <http://dbpedia.org/ontology/timeZone> ?v2 . ?result <http://dbpedia.org/ontology/timeZone> ?v2 . },"```sparql
# Query for works of the author of ""Iceland""
SELECT ?author ?work WHERE {
  ?book dcterms:title ""Iceland""@en .
  ?book dbo:author ?author .
  ?author dbo:works ?work .
}

# Query for region of time zone in Bombali Shebora Chiefdom
SELECT DISTINCT ?region WHERE {
  wd:Q11189 wdt:P131* wd:Q1103 . # Bombali is a district (P131) of Sierra Leone (Q1103)
  wd:Q1103 wdt:P421 ?timeZone .
  ?timeZone wdt:P300 ?region .
}
```",4,4,5,2,2,2,3,28,0,0,1,0,0.0,0
659,64,test,"Give me the commander in the force of the native, that is an office holder, of Kingdom of Ireland and military force of the force, that is a societal event and an event and a military conflict, of the reference to Rutger Jan Schimmelpenninck and commander in Battle of Leipzig.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/commander> ?v3 . <http://dbpedia.org/resource/Battle_of_Leipzig> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Kingdom_of_Ireland> . ?v0 <http://xmlns.com/foaf/0.1/name> ""Rutger Jan Schimmelpenninck""@en . ?v1 <http://dbpedia.org/ontology/commander> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?office ?event ?battle WHERE {
  ?commander a dbo:MilitaryPerson ;
             foaf:name ""Arthur Wellesley"" ;
             dbo:birthPlace dbr:Ireland .

  OPTIONAL { ?commander dbo:officeHolderOf dbr:Kingdom_of_Ireland . }
  
  OPTIONAL { ?commander dbo:militaryConflict ?event .
             ?event a dbo:MilitaryConflict ;
                    dbo:participatingMilitaryUnit ?unit .
             FILTER (CONTAINS(LCASE(?event), ""battle of leipzig"") || CONTAINS(LCASE(?event), ""leipzig"")) 
           }

  OPTIONAL { ?commander dbo:reference dbr:Rutger_Jan_Schimmelpenninck . }
}
```",7,11,8,3,3,3,3,71,0,0,6,0,0.0,0
959,64,test,"Give me the native of Japan and member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of the person born in 1958 and manager of the team of the manager, that is a sports manager, of 1998 Kashima Antlers season.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/manager> ?v5 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v4 <http://dbpedia.org/ontology/almaMater> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/ontology/manager> ?result . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?result <http://dbpedia.org/ontology/team> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Japan> . <http://dbpedia.org/resource/1998_Kashima_Antlers_season> <http://dbpedia.org/ontology/manager> ?v5 . ?v4 <http://dbpedia.org/ontology/birthYear> ""1958""^^<http://www.w3.org/2001/XMLSchema#gYear> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?almaMater WHERE {
  ?person a dbo:SportsManager ;
          dbo:nationality dbr:Japan ;
          dbo:birthDate ?birthDate ;
          dbo:almaMater ?almaMater .
  
  ?almaMater a dbo:EducationalOrganization, dbo:University ;
             dbp:country dbr:Japan .

  FILTER (YEAR(?birthDate) = 1958)

  ?person dbo:managerOfTeam ?teamManagerRole .
  ?teamManagerRole dbo:team dbr:Kashima_Antlers ;
                   dbo:season ""1998""^^xsd:string .
}
```",7,12,8,3,3,3,3,71,0,0,3,0,0.0,0
184,66,test,Give me the parent of the child of the parent of Archduchess Margaret of Austria (born 1925) and parent of the native of Budapest and child of the child of Archduke Joseph Karl of Austria.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v3 . ?result <http://dbpedia.org/ontology/child> ?v2 . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Margaret_of_Austria_(born_1925)> . ?v2 <http://dbpedia.org/property/father> ?v1 . ?v6 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Karl_of_Austria> . ?result <http://dbpedia.org/property/father> ?v6 . ?v3 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Budapest> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commonParent WHERE {
  # Archduchess Margaret of Austria (born 1925)
  ?margaret a dbo:Person ;
            dbo:birthYear ""1925""^^xsd:gYear ;
            dbo:parent ?parentMargaret .
  
  ?childOfParentMargaret dbo:parent ?parentChildOfParentMargaret .

  # Native of Budapest and child of the child of Archduke Joseph Karl
  ?archdukeJosephKarl a dbo:Person ;
                     rdfs:label ""Archduke Joseph Karl of Austria""@en .
  
  ?childOfArchduke dbo:parent ?archdukeJosephKarl ;
                   a dbo:Person .

  ?grandChildOfArchduke dbo:parent ?childOfArchduke ;
                        a dbo:Person .

  ?parentGrandChildOfArchduke dbo:parent ?grandChildOfArchduke ;
                              a dbo:Person .
  
  ?budaNative dbo:birthPlace dbr:Budapest ;
              dbo:parent ?parentGrandChildOfArchduke .

  # Find common parent
  FILTER (?parentChildOfParentMargaret = ?commonParent || 
          ?parentGrandChildOfArchduke = ?commonParent)
}
```",7,7,8,3,3,3,3,71,0,0,1,0,0.0,0
92,40,test,"Give me the band member of the reference, that is an artist, to the name of Nevermore (2006 film) and associated musical artist of Jim Sheppard and band of Joseph Michael.",SELECT ?result WHERE { ?v1 <http://xmlns.com/foaf/0.1/name> ?v2 . ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Joseph_Michael> . <http://dbpedia.org/resource/Nevermore_(2006_film)> <http://xmlns.com/foaf/0.1/name> ?v2 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . <http://dbpedia.org/resource/Jim_Sheppard> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"```sparql
# Find the musical artist associated with the 2006 film ""Nevermore""
SELECT ?artist WHERE {
  ?film dcterms:title ""Nevermore""@en .
  ?film dbo:subject <http://dbpedia.org/resource/Category:2006_films> .
  ?film dbo:musicalArtist ?artist .
}

# Find Jim Sheppard's band
SELECT ?band WHERE {
  ?person foaf:name ""Jim Sheppard"" .
  ?person dbo:memberOfBand ?band .
}

# Find Joseph Michael's band
SELECT ?band WHERE {
  ?person foaf:name ""Joseph Michael"" .
  ?person dbo:memberOfBand ?band .
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
959,66,test,"Give me the manager of the team of the manager, that is a sports manager, of 1998 Kashima Antlers season and member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of Eiji Ōtsuka and native of the residence, that is a country, of Yōichi Masuzoe.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v6 . ?result <http://dbpedia.org/ontology/team> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. <http://dbpedia.org/resource/Yōichi_Masuzoe> <http://dbpedia.org/property/residence> ?v6 . <http://dbpedia.org/resource/1998_Kashima_Antlers_season> <http://dbpedia.org/ontology/manager> ?v5 . ?v0 <http://dbpedia.org/ontology/manager> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Eiji_Ōtsuka> <http://dbpedia.org/ontology/almaMater> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/ontology/manager> ?result . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. },"```sparql
# Step 1: Find Eiji Ōtsuka's alma mater
SELECT ?university WHERE {
  ?eiji dbo:nationality dbr:Japan .
  ?eiji dbo:almaMater ?university .
  FILTER (STRSTARTS(STR(?university), ""http://dbpedia.org/resource/""))
}

# Step 2: Find Yōichi Masuzoe's country of origin
SELECT ?country WHERE {
  ?yoi dbr:Yōichi_Masuzoe .
  ?yoi dbo:nationality ?country .
  FILTER (STRSTARTS(STR(?country), ""http://dbpedia.org/resource/""))
}

# Step 3: Find the manager of the Kashima Antlers in 1998
SELECT ?manager WHERE {
  ?kashimaAntlers dbr:Kashima_Antlers .
  ?kashimaAntlers dbo:season1998 ?team .
  ?team dbo:manager ?manager .
  FILTER (STRSTARTS(STR(?manager), ""http://dbpedia.org/resource/""))
}

# Step 4: Confirm the manager is a sports manager and find their team
SELECT ?team WHERE {
  ?manager dbo:occupation dbr:Sports_manager .
  ?manager dbo:managesTeam ?team .
  FILTER (STRSTARTS(STR(?team), ""http://dbpedia.org/resource/""))
}

# Step 5: Find the manager of that team
SELECT ?finalManager WHERE {
  ?team dbo:manager ?finalManager .
  FILTER (STRSTARTS(STR(?finalManager), ""http://dbpedia.org/resource/""))
}
```",7,13,8,3,3,3,3,71,0,0,2,0,0.0,0
427,27,test,"Give me the party of the person born, that is an office holder and a politician, as the birth name of Romano Prodi.",SELECT ?result WHERE { <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/ontology/party> ?result . ?v2 <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthName ?party WHERE {
  ?person a dbo:Politician ;
          foaf:name ""Romano Prodi""@en .
  
  OPTIONAL { ?person dbo:birthName ?birthName . }
  OPTIONAL { ?person dbo:party ?party . }

  FILTER (lang(?birthName) = 'en')
}
```",3,5,4,3,1,3,3,71,7,1,0,0.875,1.0,0.9333333333333333
492,57,test,"Give me the person decedent at the capital, that is a settlement, of Algeria and person decedent at French Algeria and commander in the war, that is a military conflict and an event, of the commander in Battle of Verdun.",SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://dbpedia.org/ontology/battle> ?v5 . ?v5 <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/French_Algeria> . ?result <http://dbpedia.org/ontology/deathPlace> ?v3 . <http://dbpedia.org/resource/Algeria> <http://dbpedia.org/ontology/capital> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Battle_of_Verdun> <http://dbpedia.org/ontology/commander> ?v0 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?personDecedentAtAlgeria ?warCommander
WHERE {
  # Find the capital of Algeria
  dbr:Algiers dbo:capital dbr:Algeria .

  # Person decedent at French Algeria (historical context)
  ?personDecedentAtFrenchAlgeria dbo:decedentAtLocation dbr:French_Algeria .
  
  # Commander in the Battle of Verdun
  ?battleOfVerdunCommander dbo:commanderInBattle dbr:Battle_of_Verdun .

  # War in which this commander was a commander
  ?warCommander dbo:commanderInWar ?battleOfVerdunCommander .
  
  # Link the person decedent at French Algeria to the capital of Algeria
  ?personDecedentAtFrenchAlgeria dbo:decedentAtLocation dbr:Algiers .

  # Ensure that the commander in the war is also linked to the person decedent at French Algeria
  ?warCommander dbo:commanderInWar ?battleOfVerdunCommander .
  
  FILTER(?personDecedentAtFrenchAlgeria = ?warCommander)
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
617,17,test,"Give me the parent of the father, that is a royalty, of the reference, that is a royalty, to Richeza of Poland and child of Doubravka of Bohemia.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> ?v3 . ?result <http://dbpedia.org/ontology/child> ?v3 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Richeza of Poland""@en . <http://dbpedia.org/resource/Doubravka_of_Bohemia> <http://dbpedia.org/ontology/child> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
# Step 1: Find Richeza of Poland
SELECT ?richeza WHERE {
  ?richeza rdfs:label ""Richeza of Poland""@en .
}

# Step 2: Determine her father who is a royalty
SELECT DISTINCT ?father WHERE {
  VALUES ?richeza { <http://dbpedia.org/resource/Richeza_of_Poland> }
  ?richeza dbo:father ?father .
  ?father rdf:type dbo:Monarch .
}

# Step 3: Identify another royalty related to Richeza (e.g., her mother)
SELECT DISTINCT ?reference WHERE {
  VALUES ?richeza { <http://dbpedia.org/resource/Richeza_of_Poland> }
  ?richeza dbo:mother ?reference .
  ?reference rdf:type dbo:Monarch .
}

# Step 4: Find the child of Doubravka of Bohemia who matches this reference
SELECT DISTINCT ?child WHERE {
  VALUES ?reference { <http://dbpedia.org/resource/Boleslaus_I_of_Poland> } # Assuming Bolesław I is the reference from step 3
  ?doubravka dbo:child ?child .
  FILTER(?child = ?reference)
  ?doubravka rdfs:label ""Doubravka of Bohemia""@en .
}

# Step 5: Determine the parent of the father identified in step 2
SELECT DISTINCT ?parent WHERE {
  VALUES ?father { <http://dbpedia.org/resource/Boleslaus_I_of_Poland> } # Assuming Bolesław I is the father from step 2
  ?father dbo:father ?parent .
}
```",4,6,5,3,2,3,2,20,0,0,1,0,0.0,0
54,63,test,"Give me the parent of the child of Narapati I of Ava and child of the father of the child of Thinkhaya of Pagan and predecessor of the child, that is an office holder and a royalty, of Thihapate of Mohnyin.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/child> ?result . ?v4 <http://dbpedia.org/property/father> ?v3 . ?result <http://dbpedia.org/ontology/successor> ?v2 . ?v6 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Narapati_I_of_Ava> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?v4 . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Thihapate_of_Mohnyin> . ?v6 <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?parent WHERE {
  # Narapati I of Ava's child
  ?narapatiI dbo:child ?c1 .
  
  # Thinkhaya of Pagan's child and his father
  ?thinkhaya dbo:child ?c2 .
  ?thinkhaya rdfs:label ""Thinkhaya""@en .

  # Thihapate of Mohnyin's child and predecessor
  ?thihapate dbo:child ?c3 .
  ?p dbo:predecessor ?c3 .
  
  # Find the parent of C1, C2, and P who is an office holder and royalty
  ?parent dbo:child ?c1 ;
          dbo:child ?c2 ;
          dbo:child ?p .

  FILTER EXISTS { ?parent a dbo:OfficeHolder . }
  FILTER EXISTS { ?parent a dbo:Royalty . }
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
747,53,test,"Give me the band of Amba Shepherd and band of the person born as Tracey Elizabeth McSween and person born on the birth date of the person decedent, that is an athlete and a soccer player, at Zolotonosha.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v3 <http://dbpedia.org/ontology/birthDate> ?v2 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/birthDate> ?v2 . ?v3 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Zolotonosha> . ?v1 <http://dbpedia.org/property/birthName> ""Tracey Elizabeth McSween""@en . <http://dbpedia.org/resource/Amba_Shepherd> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
# Query for Amba Shepherd's band
SELECT ?band WHERE {
  ?person foaf:name ""Amba Shepherd""@en .
  ?person dbo:occupation ?occupation .
  ?occupation dbo:field dbr/Music .
  ?person dbo:musicalArtist ?band .
}

UNION

# Query for Tracey Elizabeth McSween's band
SELECT ?band WHERE {
  ?person foaf:name ""Tracey Elizabeth McSween""@en .
  ?person dbo:occupation ?occupation .
  ?occupation dbo:field dbr/Music .
  ?person dbo:musicalArtist ?band .
}

UNION

# Query for the athlete and soccer player from Zolotonosha
SELECT ?band WHERE {
  ?athlete dbo:nationality dbr/Ukraine ;
           dbo:sport dbr/Soccer ;
           dbo:birthPlace dbr/Zolotonosha ;
           dbo:birthDate ?birthDate .
  
  ?decedent dbo:deathDate ?deathDate .
  FILTER (?birthDate = ?deathDate)

  ?athlete dbo:musicalArtist ?band .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
16,41,test,Give me the professional in the profession of Satomi Ishihara and spouse of the person born as Ted Martin McGinley and person born as Georgeanne Marie Rice.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v4 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v2 <http://dbpedia.org/property/birthName> ""Ted Martin McGinley""@en . ?result <http://dbpedia.org/property/birthName> ""Georgeanne Marie Rice""@en . <http://dbpedia.org/resource/Satomi_Ishihara> <http://dbpedia.org/property/occupation> ?v4 . }","```sparql
# Step 1: Get Satomi Ishihara's profession
SELECT ?profession WHERE {
    dbpedia:Satomi_Ishihara dbo:occupation ?profession .
}

# Step 2: Find Ted Martin McGinley's spouse
SELECT ?spouse WHERE {
    dbpedia:Ted_McGinley dbo:birthName ""Ted Martin McGinley"" ;
                        foaf:spouse ?spouse .
}

# Step 3: Find Georgeanne Marie Rice's spouse
SELECT ?spouse WHERE {
    ?person foaf:name ""Georgeanne Marie Rice""@en ;
            foaf:spouse ?spouse .
}

# Step 4: Identify the common professional link
SELECT DISTINCT ?commonSpouse WHERE {
    # Assuming we have identified the profession from step 1 as ?profession
    ?commonSpouse dbo:occupation ?profession .
    
    # Ted Martin McGinley's spouse
    dbpedia:Ted_McGinley foaf:spouse ?commonSpouse .

    # Georgeanne Marie Rice's spouse
    ?person foaf:name ""Georgeanne Marie Rice""@en ;
            foaf:spouse ?commonSpouse .
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
404,40,test,"Give me the spouse of the person born, that is a royalty, as the birth name of Princess Victoria Louise of Prussia and parent of Prince Ernest Augustus of Hanover (born 1914) and child of Ernest Augustus, Crown Prince of Hanover.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Prince_Ernest_Augustus_of_Hanover_(born_1914)> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/property/birthName> ?v2 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ernest_Augustus,_Crown_Prince_of_Hanover> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  ?person dbo:birthName ""Victoria Louise Marie Elisabeth Anna""@en ;
          dbo:parent dbr:Ernest_Augustus,_Crown_Prince_of_Hanover ;
          dbo:child dbr:Prince_Ernest_Augustus_of_Hanover .
  ?person dbo:spouse ?spouse .
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
92,55,test,"Give me the associated musical artist of the person born, that is an artist, as Jim Sheppard and band member of the reference, that is an artist, to Nevermore and band of the person born as Joseph Michael Furney.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ""Joseph Michael Furney""@en . ?result <http://dbpedia.org/ontology/bandMember> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v3 <http://xmlns.com/foaf/0.1/name> ""Nevermore""@en . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v5 <http://dbpedia.org/property/birthName> ""Jim Sheppard""@en . ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . }","```sparql
SELECT ?artist WHERE {
  ?person foaf:name ""Jon Dette""@en .
  ?person dbo:birthName ""Joseph Michael Furney""@en .
  ?band dbo:member ?person ;
        rdfs:label ""Nevermore""@en .
  ?person dbo:associatedBandMember ?otherPerson .
  ?otherPerson foaf:name ?artist .
  FILTER(?artist != ""Jon Dette"")
}
```",6,8,7,2,3,3,3,71,0,0,1,0,0.0,0
488,52,test,"Give me the birth place of the commander in the war, that is a military conflict and an event and a societal event, of Saitō Hajime and death place of the father, that is a politician, of Yūki Hideyasu and administration of Emperor Go-Yōzei.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/commander> ?v2 . ?v5 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Yūki_Hideyasu> <http://dbpedia.org/property/father> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Saitō_Hajime> <http://dbpedia.org/ontology/battle> ?v3 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Emperor_Go-Yōzei> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
# Query to find the birthplace of Saitō Hajime
SELECT ?birthPlace WHERE {
  wd:Q123456 wdt:P19 ?birthPlace .
}

# Query to find Yūki Hideyasu's father and his death place
SELECT ?deathPlace WHERE {
  wd:Q234567 wdt:P22 ?father . # Assuming Q234567 is the entity for Yūki Hideyasu
  ?father wdt:P20 ?deathPlace .
}

# Query to find the administration of Emperor Go-Yōzei
SELECT ?administration WHERE {
  wd:Q345678 wdt:P39 ?administration . # Assuming Q345678 is the entity for Emperor Go-Yōzei
}
```

Note: The placeholders `wd:Q123456`, `wd:Q234567`, and `wd:Q345678` should be replaced with the actual DBpedia identifiers for Saitō Hajime, Yūki Hideyasu, and Emperor Go-Yōzei respectively. These can be found by searching DBpedia or using a SPARQL endpoint to resolve these entities.",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
404,63,test,"Give me the spouse of the person born, that is a royalty, as the birth name of Princess Victoria Louise of Prussia and child of the father of Ernest Augustus, Duke of Brunswick and parent of the child, that is a royalty, of Ernest Augustus, Duke of Brunswick.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v6 . <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/ontology/child> ?v6 . ?v3 <http://dbpedia.org/property/birthName> ?v4 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/property/father> ?v2 . ?v3 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/property/birthName> ?v4 . }","```sparql
SELECT ?spouse WHERE {
  ?person dbr:Victoria_Louise_of_Prussia dbo:birthName ""Victoria Louise Marie Elisabeth Anna Friederike Feodora von Preußen""@en .
  ?person a dbo:Monarch ;
          dbo:spouse ?spouse .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
404,34,test,"Give me the spouse of the person born, that is a royalty, as the birth name of Princess Victoria Louise of Prussia and child of Ernest Augustus, Crown Prince of Hanover.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/property/birthName> ?v2 . ?v1 <http://dbpedia.org/property/birthName> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ernest_Augustus,_Crown_Prince_of_Hanover> . }","```sparql
SELECT ?spouse WHERE {
  ?person rdfs:label ""Victoria Louise Marie Elisabeth""@en .
  ?person dbo:birthName ""Victoria Louise Marie Elisabeth"" .
  ?person dbo:parent dbr:Ernest_Augustus,_Crown_Prince_of_Hanover .
  ?person dbo:spouse ?spouse .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
959,51,test,"Give me the native of the residence, that is a country, of Yōichi Masuzoe and manager of the team of the manager, that is a sports manager, of 1998 Kashima Antlers season.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/manager> ?v3 . ?v0 <http://dbpedia.org/ontology/manager> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/1998_Kashima_Antlers_season> <http://dbpedia.org/ontology/manager> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. <http://dbpedia.org/resource/Yōichi_Masuzoe> <http://dbpedia.org/property/residence> ?v4 . ?result <http://dbpedia.org/ontology/birthPlace> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nativeCountry WHERE {
  # Step 1: Find Yōichi Masuzoe's residence
  dbr:Yōichi_Masuzoe dbo:residence ?residence .

  # Step 2: Check if the residence is a country
  ?residence rdf:type dbo:Country .
  
  # Get the native of the residence (country)
  ?residence dbo:nativeOf ?nativeCountry .

  # Step 3: Find the manager of the 1998 Kashima Antlers season
  dbr:Kashima_Antlers_1998_season dbo:manager ?teamManager .

  # Step 4: Find the manager of that sports manager
  ?teamManager dbo:manager ?sportsManager .
}
```",5,7,6,3,2,3,3,71,0,0,6,0,0.0,0
617,65,test,"Give me the parent of the child of Antiochus (son of Antiochus III the Great) and child of the child, that is a royalty, of Seleucus II Callinicus and spouse of the child of the successor, that is a royalty, of Antiochus (son of Antiochus III the Great).",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/successor> ?v0 . <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/child> ?v3 . ?result <http://dbpedia.org/property/father> ?v4 . ?v6 <http://dbpedia.org/ontology/spouse> ?result . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seleucus_II_Callinicus> . ?v0 <http://dbpedia.org/ontology/child> ?v6 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parent ?grandchildSpouse WHERE {
  # Antiochus (son of Antiochus III the Great)
  ?antiochus dbp:father dbr:Antiochus_III_the_Great ;
             a dbo:Monarch .

  # Child of Antiochus
  ?child dbo:parent ?antiochus ;
         a dbo:Monarch .

  # Parent of this child (which is Antiochus)
  ?parent dbo:child ?child .

  # Grandchild of Antiochus
  ?grandchild dbo:parent ?child .

  # Seleucus II Callinicus and his royal child
  ?seleucus dbp:father dbr:Seleucus_II_Callinicus ;
            a dbo:Monarch .
  ?royalChild dbo:parent ?seleucus ;
              a dbo:Monarch .

  # Successor of Antiochus (child of Antiochus)
  ?successor dbo:parent ?antiochus ;
             a dbo:Monarch .

  # Child of the successor
  ?successorsChild dbo:parent ?successor ;
                   a dbo:Monarch .

  # Spouse of the child of the successor
  ?spouse dbo:spouse ?successorsChild .

  # Find the spouse who is also a grandchild (from Seleucus II Callinicus)
  FILTER (?grandchild = ?spouse)

  # Ensure the spouse is royalty
  ?spouse a dbo:Monarch .
}
```",7,9,8,3,3,3,3,71,0,0,2,0,0.0,0
767,51,test,"Give me the alma mater of the administration of George K. Nash and reference to the alter ego of the persona, that is a fictional character, of Matthew Burland.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/almaMater> ?result . ?v4 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/George_K._Nash> . ?v1 <http://dbpedia.org/property/alterEgo> ""Matthew Burland""@en . ?v1 <http://dbpedia.org/property/alterEgo> ?v2 . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. }","```sparql
# Query for George K. Nash's Alma Mater
SELECT ?almaMater WHERE {
  ?person dbo:wikiPageID ""George_K._Nash"" .
  ?person dbo:almaMater ?almaMater .
}

UNION

# Query for Matthew Burland's Fictional Character and its Alter Ego
SELECT ?character, ?alterEgo WHERE {
  ?burland dbo:wikiPageID ""Matthew_Burland"" .
  ?burland dbo:work ?work .
  ?work dbo:subject ?character .
  OPTIONAL { ?character dbo:alterEgo ?alterEgo }
}
```",5,6,6,3,2,3,3,71,0,0,2,0,0.0,0
617,16,test,"Give me the child of the child, that is a royalty, of Boleslaus I, Duke of Bohemia and parent of the father, that is a royalty, of Richeza of Poland, Queen of Hungary.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Boleslaus_I,_Duke_of_Bohemia> . <http://dbpedia.org/resource/Richeza_of_Poland,_Queen_of_Hungary> <http://dbpedia.org/property/father> ?v3 . ?v2 <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/child> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?childOfChild WHERE {
  # Boleslaus I, Duke of Bohemia and his children who are royalty
  dbr:Boleslaus_I,_Duke_of_Bohemia dbo:spouse ?spouse .
  ?spouse dbo:child ?child .
  ?child a dbo:Monarch .

  # Richeza of Poland, Queen of Hungary and her father
  dbr:Richeza_of_Poland_Queen_of_Hungary dbo:father ?richezasFather .
  
  # Parent of Richeza's father (Richeza's grandfather)
  ?richezasFather dbo:parent ?grandParent .

  # Child of the grandparent who is royalty
  ?grandParent dbo:child ?royalChild .
  ?royalChild a dbo:Monarch .

  # Find common child of child from Boleslaus I and royal child from Richeza's grandfather
  FILTER(?child = ?royalChild)
  
  # Return the child of the child who is royalty
  ?child dbo:child ?childOfChild .
}
```",4,6,5,2,2,3,2,20,0,0,1,0,0.0,0
16,35,test,Give me the spouse of the person born as Ted Martin McGinley and person born as the birth name of Gigi Rice.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ""Ted Martin McGinley""@en . ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Gigi_Rice> <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
SELECT ?tedSpouse ?gigiSpouse WHERE {
  # Find Ted McGinley's spouse
  dbpedia:Ted_McGinley dbo:birthName ""Ted Martin McGinley"" .
  dbpedia:Ted_McGinley dbo:spouse ?tedSpouse .

  # Find Gigi Rice's spouse
  dbpedia:Gigi_Rice dbo:birthName ""Gigi Rice"" .
  dbpedia:Gigi_Rice dbo:spouse ?gigiSpouse .
}
```",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
959,65,test,"Give me the manager of the team of Takashi Sekizuka and member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of Eiji Ōtsuka and native of the residence, that is a country, of the leader, that is a politician, of 2010 Japanese House of Councillors election.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/residence> ?v5 . ?v0 <http://dbpedia.org/ontology/manager> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. <http://dbpedia.org/resource/Eiji_Ōtsuka> <http://dbpedia.org/ontology/almaMater> ?v2 . <http://dbpedia.org/resource/2010_Japanese_House_of_Councillors_election> <http://dbpedia.org/property/leader> ?v1 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/birthPlace> ?v5 . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?v0 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Takashi_Sekizuka> . ?result <http://dbpedia.org/ontology/team> ?v2 . },"```sparql
# Step 1: Find Takashi Sekizuka's team manager
SELECT ?manager WHERE {
  ?team dbo:member dbr:Takashi_Sekizuka .
  ?team dbo:coach ?manager .
}

UNION

# Step 2: Find Eiji Ōtsuka's alma mater
SELECT ?almaMater WHERE {
  ?person foaf:name ""Eiji Ōtsuka""@ja .
  ?person dbo:almaMater ?almaMater .
  FILTER (strstarts(str(?almaMater), str(dbr:)) && 
          ?almaMater rdf:type dbo:EducationalInstitution &&
          ?almaMater dbo:country dbr:Japan)
}

UNION

# Step 3: Identify the leader in the 2010 Japanese House of Councillors election
SELECT ?leader WHERE {
  ?election dbo:electionDate ?date .
  FILTER (YEAR(?date) = 2010 && 
          STRSTARTS(STR(?election), ""dbr:Japanese_House_of_Councillors_election_2010""))
  ?candidate dbo:positionHeld ?position .
  FILTER (?position = dbr:Leader_of_the_Opposition_(Japan))
  ?candidate foaf:name ?leader .
}

UNION

# Step 4: Determine the native country of the leader
SELECT ?country WHERE {
  ?person foaf:name ?leader .
  ?person dbo:nationality ?nationality .
  ?nationality dbo:countryName ?country .
}

# Final step: Combine all conditions to find the manager who is also a member of Eiji Ōtsuka's alma mater and native to the leader's country
SELECT DISTINCT ?manager WHERE {
  # Takashi Sekizuka's team manager
  ?team dbo:member dbr:Takashi_Sekizuka .
  ?team dbo:coach ?manager .

  # Manager is a member of Eiji Ōtsuka's alma mater
  ?almaMater dbo:alumni ?manager .
  ?person foaf:name ""Eiji Ōtsuka""@ja .
  ?person dbo:almaMater ?almaMater .
  FILTER (strstarts(str(?almaMater), str(dbr:)) && 
          ?almaMater rdf:type dbo:EducationalInstitution &&
          ?almaMater dbo:country dbr:Japan)

  # Manager is native to the leader's country
  ?leaderPerson foaf:name ?leader .
  ?election dbo:electionDate ?date .
  FILTER (YEAR(?date) = 2010 && 
          STRSTARTS(STR(?election), ""dbr:Japanese_House_of_Councillors_election_2010""))
  ?candidate dbo:positionHeld ?position .
  FILTER (?position = dbr:Leader_of_the_Opposition_(Japan))
  ?candidate foaf:name ?leader .

  ?person foaf:name ?manager .
  ?person dbo:nationality ?nationality .
  ?nationality dbo:countryName ?country .
}
```",7,13,8,3,3,3,3,71,0,0,2,0,0.0,0
378,50,test,"Give me the claim to fame of the commander in Great Siege of Gibraltar and war of the commander in the reference, that is a military conflict, to Peninsular War.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/knownFor> ?result . ?v4 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/ontology/commander> ?v4 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Peninsular War""@en . <http://dbpedia.org/resource/Great_Siege_of_Gibraltar> <http://dbpedia.org/ontology/commander> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?claimToFame WHERE {
  VALUES ?conflict { 
    dbr:Great_Siege_of_Gibraltar 
    dbr:Peninsular_War 
  }
  
  # For General Eliott and the Great Siege of Gibraltar
  OPTIONAL {
    ?person rdfs:label ""George Augustus Eliott""@en .
    ?person dbo:occupation dbo:Military_officer .
    ?person dbo:almaMater dbr:Royal_Military_Academy_Woolwich .
    ?event dbo:location ?conflict .
    ?event dbo:agent ?person .
    ?event rdfs:label ?claimToFame .
  }
  
  # For Arthur Wellesley and the Peninsular War
  OPTIONAL {
    ?person rdfs:label ""Arthur Wellesley, 1st Duke of Wellington""@en .
    ?person dbo:occupation dbo:Military_officer .
    ?event dbo:location ?conflict .
    ?event dbo:agent ?person .
    ?event rdfs:label ?claimToFame .
  }
  
  FILTER (lang(?claimToFame) = 'en')
}
```",5,6,6,3,2,3,3,71,0,0,2,0,0.0,0
659,57,test,"Give me the commander in German campaign of 1813 and commander in the war, that is an event and a military conflict, of the figure known, that is a military unit and an organisation, as 'Polish Horse' and military force of the force, that is a societal event and an event and a military conflict, of Rutger Jan Schimmelpenninck.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> . <http://dbpedia.org/resource/German_campaign_of_1813> <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://dbpedia.org/ontology/battle> ?v5 . ?v0 <http://dbpedia.org/property/nickname> ""'Polish Horse'""@en . ?v5 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commanderIn1813 ?commanderInPolishHorse WHERE {
  # German Campaign of 1813 commander
  ?campaign dbo:partOf dbr:Napoleonic_Wars ;
            dbo:commander ?commanderIn1813 .
  
  FILTER regex(str(?campaign), ""German_Campaign_of_1813"", ""i"")

  # Polish Horse (Polish Uhlans) commander
  ?unit rdfs:label ""Polish Uhlans""@en ;
        dbo:commander ?commanderInPolishHorse .

  # Rutger Jan Schimmelpenninck's military force
  ?force dbo:leader dbr:Rutger_Jan_Schimmelpenninck ;
         dbo:partOf ?campaign .

  FILTER regex(str(?unit), ""Uhlans"", ""i"")

  # Find common commander
  VALUES ?commonCommander { ?commanderIn1813 ?commanderInPolishHorse }
}
```",6,13,7,3,3,3,3,71,0,0,7,0,0.0,0
767,23,test,"Give me the entity in the administration, that is a settlement, of the writer of Where It's At (Dustin Lynch album).",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/leaderParty> ?v2 . <http://dbpedia.org/resource/Where_It's_At_(Dustin_Lynch_album)> <http://dbpedia.org/property/writer> ?v2 . ?result <http://dbpedia.org/ontology/state> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?settlement WHERE {
  # Identify Dustin Lynch as the writer of ""Where It's At""
  dbr:Dustin_Lynch dbo:album dbr:Where_It%27s_At_(Dustin_Lynch_album) .
  
  # Find his birthplace or residence
  OPTIONAL { dbr:Dustin_Lynch dbo:birthPlace ?settlement . }
  OPTIONAL { dbr:Dustin_Lynch dbo:residence ?settlement . }

  # Ensure the place is a settlement
  ?settlement rdf:type dbo:Settlement .
}
```",3,4,4,3,1,3,3,71,0,0,66,0,0.0,0
492,25,test,"Give me the person decedent at the capital, that is a settlement, of Algeria and commander in Franco-Hova Wars.",SELECT ?result WHERE { <http://dbpedia.org/resource/Franco-Hova_Wars> <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Algeria> <http://dbpedia.org/ontology/capital> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?deathPlace WHERE {
  ?person dbo:deathPlace dbr:Algiers .
  ?person dbo:occupation ""Military commander"" .
  ?person dbo:wikiPageWikiLink dbr:Franco-Hova_Wars .
  
  FILTER (STRSTARTS(STR(?deathPlace), STR(dbr:Algiers)))
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
294,23,test,"Give me the resting place of the awardee, that is a politician, of Distinguished Service Medal (U.S. Army) and entity in the birth place, that is a settlement, of Marion James.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/location> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Marion_James> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Distinguished_Service_Medal_(U.S._Army)> . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?politician ?birthPlace ?restingPlace WHERE {
  ?politician a dbo:Politician ;
             dbo:honoraryAward dbr:Distinguished_Service_Medal_(U.S._Army) .
  
  OPTIONAL { ?politician dbo:birthPlace ?birthPlace . }
  OPTIONAL { ?politician dbo:deathPlace ?restingPlace . }

  FILTER (str(?politician) = ""Marion_James"")
}
```",4,6,5,2,2,2,3,28,0,0,1,0,0.0,0
77,19,test,"Give me the force of the mayor of the territory administered, that is an organisation, from Warsaw and war of the awardee of Golden Weapon for Bravery.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> ?v4 . ?v0 <http://dbpedia.org/property/leader> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Warsaw> . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Golden_Weapon_for_Bravery> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?mayorName ?mayorRole ?awardeeName ?awardDescription WHERE {
  # Find the mayor of Warsaw
  ?mayor dbo:positionTitle ""Mayor""@en;
         dbo:city dbr:Warsaw.
  
  # Get the name and role of the mayor
  ?mayor foaf:name ?mayorName.
  OPTIONAL { ?mayor dbo:role ?mayorRole. }
  
  # Find individuals who received the Golden Weapon for Bravery
  ?person dbo:award dbr:Golden_Weapon_for_Bravery;
          foaf:name ?awardeeName.
  
  # Get a description of the award
  OPTIONAL { ?person dbo:description ?awardDescription. }
}
```",5,6,6,3,2,3,2,20,0,0,14,0,0.0,0
184,22,test,Give me the parent of the child of Archduke Joseph Francis of Austria and parent of Géza von Habsburg.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Géza_von_Habsburg> . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Francis_of_Austria> . ?result <http://dbpedia.org/ontology/child> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parentOfJoseph ?parentOfGéza WHERE {
  # Find children of Archduke Joseph Francis of Austria
  ?child dbr:Archduke_Joseph_Francis_of_Austria dbo:child . 
  ?child dbo:parent ?parentOfJoseph .

  # Find children of Géza von Habsburg
  ?child2 dbr:Géza_von_Habsburg dbo:child .
  ?child2 dbo:parent ?parentOfGéza .

  # Get the parents of these individuals (Archduke Joseph Francis and Géza von Habsburg)
  OPTIONAL { ?parentOfJoseph dbo:parent ?grandParentOfJoseph . }
  OPTIONAL { ?parentOfGéza dbo:parent ?grandParentOfGéza . }

  FILTER(?grandParentOfJoseph != dbr:Unknown && ?grandParentOfGéza != dbr:Unknown)
}
```",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
303,23,test,"Give me the party of the commander, that is a politician, in United States invasion of Panama and party of the person born, that is a politician, as Arnulfo Arias Madrid.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ""Arnulfo Arias Madrid""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/United_States_invasion_of_Panama> <http://dbpedia.org/ontology/commander> ?v2 . ?v1 <http://dbpedia.org/ontology/party> ?result . ?v2 <http://dbpedia.org/ontology/party> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
# Query to find the political party of General Maxwell R. Thurman if he is a politician
SELECT ?party WHERE {
  ?person rdfs:label ""Maxwell Davenport Thurman""@en .
  OPTIONAL { ?person dbo:politicalParty ?party . }
  FILTER (lang(?party) = 'en')
}

UNION

# Query to find the political party of Arnulfo Arias Madrid
SELECT ?party WHERE {
  ?person rdfs:label ""Arnulfo Arias Madrid""@en .
  OPTIONAL { ?person dbo:politicalParty ?party . }
  FILTER (lang(?party) = 'en')
}
```",4,6,5,2,2,2,3,28,0,0,1,0,0.0,0
9,58,test,"Give me the alma mater of the awardee of Royal Medal and figure known as the nickname of the entity, that is an organisation and an educational institution, in Northern Ireland and alma mater of John Alderdice, Baron Alderdice.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/nickname> ?v2 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Northern_Ireland> . ?result <http://dbpedia.org/property/nickname> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v5 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Medal> . <http://dbpedia.org/resource/John_Alderdice,_Baron_Alderdice> <http://dbpedia.org/ontology/almaMater> ?result . ?v5 <http://dbpedia.org/ontology/almaMater> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?almaMater WHERE {
  ?person dbo:awardReceived dbr:Royal_Medal .
  ?person dbo:almaMater dbr:Queen's_University_Belfast .
  OPTIONAL { ?person rdfs:label ?name FILTER (CONTAINS(LCASE(?name), ""qub"")) }
  ?johnAlderdice dbo:almaMater dbr:Trinity_College_Dublin .
  ?johnAlderdice foaf:name ""John Alderdice"" .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
281,48,test,"Give me the war of the profession, that is a military unit, of Heather Roy and war of the awardee of the award of Jonathon Band.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. <http://dbpedia.org/resource/Heather_Roy> <http://dbpedia.org/property/occupation> ?v1 . ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/property/awards> ?v3 . <http://dbpedia.org/resource/Jonathon_Band> <http://dbpedia.org/property/awards> ?v3 . },"```sparql
# Query for Heather Roy's profession related to a military unit
SELECT ?profession WHERE {
  wd:Q123456 wdt:P106 ?occupation . # Heather Roy's occupation
  ?occupation rdfs:label ?profession .
  FILTER(CONTAINS(LCASE(?profession), ""military""))
}

UNION

# Query for Jonathon Band's award and associated war
SELECT ?awardWar WHERE {
  wd:Q654321 wdt:P166 ?award . # Jonathon Band's award
  ?award wdt:P625 ?location .
  ?award wdt:P31/wdt:P279* wd:Q12345 . # Assuming Q12345 is a class for awards related to wars
  ?award wdt:P577 ?dateAwarded .
  ?war wdt:P166 ?award .
  ?war rdfs:label ?awardWar .
}
```

Note: Replace `wd:Q123456` with Heather Roy's DBpedia ID and `wd:Q654321` with Jonathon Band's DBpedia ID. The class for awards related to wars (`wd:Q12345`) should be replaced with the correct DBpedia class if known.",5,6,6,3,2,3,3,71,0,0,9,0,0.0,0
54,71,test,"Give me the predecessor of the child, that is an office holder and a royalty, of the reference to Thihapate of Mohnyin and parent of the child of the parent of Thado Minsaw of Prome and child of the father of the child of Thinkhaya of Pagan.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/father> ?v4 . ?v7 <http://xmlns.com/foaf/0.1/name> ""Thihapate of Mohnyin""@en . <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?v1 . ?result <http://dbpedia.org/ontology/successor> ?v8 . ?v1 <http://dbpedia.org/property/father> ?v2 . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/ontology/child> ?result . ?v4 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> . ?v5 <http://dbpedia.org/ontology/parent> ?result . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v8 <http://dbpedia.org/property/father> ?v7 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?predecessor WHERE {
  # Thihapate of Mohnyin's child who is an office holder and royalty
  ?child dbo:parent dbr:Thihapate_of_Mohnyin .
  ?child a dbo:Monarch ; 
         dbo:officeHolder ?office .

  # Predecessor of that child
  ?predecessor dbo:successor ?child .

  # Thado Minsaw of Prome's parent and his lineage
  ?thadoMinsawParent dbo:parent dbr:Thado_Minsaw_of_Prome .
  ?thadoMinsawChild dbo:parent ?thadoMinsawParent .

  # Thinkhaya of Pagan's child and his father
  ?thinkhayaChild dbo:parent dbr:Thinkhaya_of_Pagan .
  ?fatherOfThinkhayaChild dbo:child ?thinkhayaChild .
  
  FILTER(?predecessor = ?thadoMinsawChild || ?predecessor = ?fatherOfThinkhayaChild)
}
```",9,11,10,3,3,3,3,71,0,0,1,0,0.0,0
959,53,test,"Give me the manager of the team of Takashi Sekizuka and native of Japan and member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of the person born in 1958.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v3 <http://dbpedia.org/ontology/birthYear> ""1958""^^<http://www.w3.org/2001/XMLSchema#gYear> . ?v0 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Takashi_Sekizuka> . ?v3 <http://dbpedia.org/ontology/almaMater> ?v1 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Japan> . ?result <http://dbpedia.org/ontology/team> ?v1 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?v0 <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. }","```sparql
SELECT ?manager WHERE {
  # Find the team Takashi Sekizuka was part of
  ?team dbo:member ?player .
  ?player foaf:name ""Takashi Sekizuka""@en .

  # Find the manager of that team
  ?team dbo:coach ?manager .

  # Ensure the manager is native to Japan and born in 1958
  ?manager dbo:nationality dbr:Japan .
  ?manager dbo:birthDate ?birthDate .
  FILTER (YEAR(?birthDate) = 1958)

  # Ensure the manager attended a Japanese educational institution
  ?manager dbo:almaMater ?university .
  ?university dbo:country dbr:Japan ;
              rdf:type dbo:EducationalInstitution .

}
```",6,10,7,3,3,3,3,71,0,0,3,0,0.0,0
778,18,test,"Give me the author of the work, that is a software, of Bill Joy and entity in the award of the awardee, that is American, of Wolf Prize in Medicine.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/location> ?v2 . ?v3 <http://dbpedia.org/ontology/author> ?result . ?v1 <http://dbpedia.org/property/awards> ?v2 . ?v1 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/United_States>. ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Wolf_Prize_in_Medicine> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Software>. ?v3 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Bill_Joy> . },"```sparql
SELECT ?author ?entity WHERE {
  # Part 1: Find the author of software created by Bill Joy
  ?software dcterms:creator ?billJoy .
  ?billJoy foaf:name ""Bill Joy"" .
  ?software dbo:wikiPageRedirects db:Vi .
  ?software dbo:abstract ?description .
  ?author dbo:wikiPageDisambiguates ?software .

  # Part 2: Find an American awardee of the Wolf Prize in Medicine and their associated entity
  ?prize dbo:name ""Wolf Prize in Medicine"" .
  ?recipient dbo:award ?prize ;
             foaf:nationality db:Q30 ; # Q30 is the DBpedia resource for the United States
             dbo:wikiPageDisambiguates ?entity .

}
```",5,7,6,3,2,3,2,20,0,0,1,0,0.0,0
161,51,test,"Give me the military force of the force, that is a societal event and a military conflict, of Francisco Largo Caballero and commander in the force, that is an event, of the figure known as El Director.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v4 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://xmlns.com/foaf/0.1/nick> ""El Director""@en . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/commander> ?v1 . ?result <http://dbpedia.org/ontology/battle> ?v4 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce1 ?commander2 WHERE {
  # Francisco Largo Caballero and the Republican forces during the Spanish Civil War
  dbr:Francisco_Largo_Caballero dbo:spouse ?person .
  ?person dbo:occupation dbr:Prime_Minister_of_Spain .
  ?event dbo:participant ?person ;
         a dbo:MilitaryConflict ;
         rdfs:label ""Spanish Civil War""@en .
  ?event dbo:participatesInMilitaryForce ?militaryForce1 .

  # Francisco Franco (El Director) and the Nationalist forces during the Spanish Civil War
  dbr:Francisco_Franco dbo:nickname ""El_Director""@es ;
                       dbo:occupation dbr:Military_person .
  ?event2 dbo:participant dbr:Francisco_Franco ;
          a dbo:Event ;
          rdfs:label ""Spanish Civil War""@en .
  ?event2 dbo:commandedBy ?commander2 .

  FILTER(?militaryForce1 != ?commander2)
}
```",5,8,6,3,2,3,3,71,0,0,32,0,0.0,0
92,65,test,"Give me the associated musical artist of the person born, that is an artist, as the actor of Return to Nuke 'Em High Volume 1 and band member of the reference, that is an artist, to Nevermore and band of the person born as Joseph Michael Furney.","SELECT ?result WHERE { ?v6 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/bandMember> ?v3 . ?v4 <http://xmlns.com/foaf/0.1/name> ""Nevermore""@en . ?v6 <http://dbpedia.org/property/birthName> ?v0 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v3 <http://dbpedia.org/property/birthName> ""Joseph Michael Furney""@en . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Return_to_Nuke_'Em_High_Volume_1> <http://dbpedia.org/property/starring> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actorMusician ?associatedArtist WHERE {
  # Identify Warrel Dane and his association with Nevermore
  dbr:Warrel_Dane a dbo:MusicalArtist ;
                  dbo:bandMemberOf dbr:Nevermore .

  # Find the actor from ""Return to Nuke 'Em High Volume 1"" who is also a musician
  ?film dbo:title ""Return to Nuke 'Em High Volume 1""@en .
  ?actorMusician dbo:actedIn ?film ;
                 a dbo:MusicalArtist .

  # Link this actor-musician to Warrel Dane's other musical associations
  ?associatedArtist dbo:bandMemberOf ?band ;
                    dbo:member dbr:Warrel_Dane ;
                    a dbo:MusicalArtist .
  
  FILTER(?actorMusician != dbr:Warrel_Dane)
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
747,59,test,"Give me the person born on the birth date of the person decedent, that is an athlete and a soccer player, at Zolotonosha and band of the writer of the work, that is a song, of Amba Shepherd.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/birthDate> ?v2 . ?v0 <http://dbpedia.org/property/writer> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?result <http://dbpedia.org/ontology/birthDate> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Zolotonosha> . ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Amba_Shepherd> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?athlete WHERE {
  # Step 1: Find a song by Amba Shepherd
  ?song dbo:composer dbr:Amba_Shepherd .
  
  # Step 2: Find the band of the writer (Amba Shepherd)
  ?band dbo:member dbr:Amba_Shepherd .

  # Step 3: Identify a decedent and their birth date
  ?decedent dbo:dateOfBirth ?birthDate ;
            dbo:deathDate ?deathDate .
  
  FILTER EXISTS { ?decedent dbo:deathDate ?deathDate } .

  # Step 4: Find an athlete who is a soccer player born on that date in Zolotonosha
  ?athlete dbo:birthPlace dbr:Zolotonosha ;
           dbo:dateOfBirth ?birthDate ;
           dbo:sport dbr:Soccer ;
           dbo:occupation dbr:Athlete .
}
```",6,9,7,3,2,3,3,71,0,0,1,0,0.0,0
838,12,val,"Give me the band member of the band, that is a group, of YU Grupa and band of Raša Đelmaš.",SELECT ?result WHERE { <http://dbpedia.org/resource/Raša_Đelmaš> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . <http://dbpedia.org/resource/YU_Grupa> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . },"```sparql
# Query to find members of YU Grupa
SELECT ?member WHERE {
  ?band dbr:YU_Grupa ;
        dbo:bandMember ?member .
}

UNION

# Query to find bands Raša Đelmaš was part of and their members
SELECT ?member WHERE {
  ?band dbo:bandMember dbr:Raša_Đelmaš ;
        dbo:bandMember ?member .
}
```",3,4,4,2,2,3,2,20,0,0,4,0,0.0,0
10,14,val,"Give me the band member of the person born, that is an artist, as Luke Francis Vibert and associated musical artist of Matt Colton.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://dbpedia.org/property/birthName> ""Luke Francis Vibert""@en . <http://dbpedia.org/resource/Matt_Colton> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandMember WHERE {
  # Luke Francis Vibert (Wagon Christ)
  VALUES (?vibert) { 
    dbr:Luke_Francis_Vibert 
  }
  
  # Matt Colton
  VALUES (?colton) { 
    dbr:Matt_Colton 
  }

  ?vibert dbo:birthName ""Luke Francis Vibert""@en.
  ?vibert dbo:associatedMusicalArtist ?project.

  OPTIONAL {
    ?project dbo:associatedMusicalArtist ?colton.
  }
  
  ?project dbo:bandMember ?bandMember.
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
963,11,val,"Give me the administration of Serbian Progressive Party and entity in the region, that is a country, of Central European Time.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Serbian_Progressive_Party> . ?result <http://dbpedia.org/ontology/country> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . },"```sparql
SELECT ?leader ?country WHERE {
  # Find the leader of the Serbian Progressive Party
  ?party dbo:officialName ""Serbian Progressive Party""@en .
  ?party dbo:leader ?leader .

  # Find countries in the Central European Time zone
  ?country a dbo:Country ;
           dbo:timeZone dbr:Central_European_Time .

}
```",3,4,4,2,2,3,2,20,0,0,84,0,0.0,0
528,22,val,Give me the force of the person born as Narciso Campero Leyes and war of Irene Morales.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ""Narciso Campero Leyes""@en . ?result <http://dbpedia.org/ontology/commander> ?v1 . <http://dbpedia.org/resource/Irene_Morales> <http://dbpedia.org/ontology/battle> ?result . }","```sparql
# Query for Narciso Campero Leyes' military rank during the War of the Pacific
SELECT ?rank WHERE {
  ?person dbo:birthName ""Narciso Campero Leyes""@en .
  ?person dbo:militaryRank ?rank .
  ?person dbo:associatedWithWar dbr:War_of_the_Pacific .
}

# Query for Irene Morales related to any war (if available)
SELECT ?war WHERE {
  ?person dbo:birthName ""Irene Morales""@en .
  ?person dbo:associatedWithWar ?war .
}
```",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
294,18,val,"Give me the resting place of Edwin A. Keeble and entity in the birth place, that is a settlement, of Marion James.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/location> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Edwin_A._Keeble> <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Marion_James> <http://dbpedia.org/ontology/birthPlace> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?keeblesBurialPlace ?marionsBirthSettlement WHERE {
  # Find the burial place of Edwin A. Keeble
  OPTIONAL { 
    dbr:Edwin_A._Keeble dbo:deathPlace ?keeblesDeathPlace .
    ?keeblesDeathPlace dbo:burialPlace ?keeblesBurialPlace .
  }

  # Find the birthplace of Marion James and an entity that is a settlement
  OPTIONAL {
    dbr:Marion_James dbo:birthPlace ?marionsBirthPlace .
    ?marionsBirthPlace dbo:location ?settlementEntity .
    FILTER EXISTS { ?settlementEntity a dbo:Settlement }
    BIND(?settlementEntity AS ?marionsBirthSettlement)
  }
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
48,11,val,Give me the band of the writer of Emotion (Carly Rae Jepsen album) and band of Murda Mook.,SELECT ?result WHERE { <http://dbpedia.org/resource/Murda_Mook> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Emotion_(Carly_Rae_Jepsen_album)> <http://dbpedia.org/property/writer> ?v2 . },"```sparql
# Query to find the band of the writer(s) of ""Emotion"" from Carly Rae Jepsen's album
SELECT DISTINCT ?writerBand WHERE {
  ?song dcterms:title ""Emotion""@en .
  ?song dbo:lyricsBy ?writer .
  ?writer foaf:name ?writerName .
  OPTIONAL { 
    ?writer dbo:memberOf ?band .
    ?band dbo:name ?writerBand .
  }
  FILTER EXISTS { ?album dcterms:title ""Emotion""@en . ?album dbo:track ?song }
}

UNION

# Query to find the band of Murda Mook
SELECT DISTINCT ?bandName WHERE {
  ?person foaf:name ""Murda Mook""@en .
  OPTIONAL {
    ?person dbo:memberOf ?band .
    ?band dbo:name ?bandName .
  }
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
404,32,val,"Give me the spouse of the person born, that is a royalty, as Princess Victoria Louise of Prussia and parent of the child, that is a royalty, of Ernest Augustus, Duke of Brunswick.","SELECT ?result WHERE { <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/ontology/child> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/birthName> ""Princess Victoria Louise of Prussia""@en . ?v1 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/child> ?v3 . }","```sparql
SELECT ?spouse WHERE {
  ?princess rdf:type dbo:Princess ;
            foaf:name ""Victoria Louise of Prussia""@en .
  ?princess dbo:spouse ?spouse .

  OPTIONAL { 
    ?child dbo:parent ?princess ;
           dbo:parent ?spouse ;
           rdf:type dbo:RoyalFamilyMember .
    FILTER EXISTS {
      ?child foaf:name ""Ernest Augustus, Duke of Brunswick""@en .
    }
  }

  FILTER NOT EXISTS {
    ?princess dbo:spouse ?otherSpouse .
    FILTER (?spouse != ?otherSpouse)
  }
}
```",4,6,5,2,2,3,3,71,0,0,1,0,0.0,0
54,35,val,"Give me the predecessor of the child, that is an office holder and a royalty, of Thihapate of Mohnyin and child of the father of Soe Min Wimala Dewi.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Soe_Min_Wimala_Dewi> <http://dbpedia.org/property/father> ?v2 . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Thihapate_of_Mohnyin> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?predecessor WHERE {
  # Find Thihapate of Mohnyin and his children who are office holders and royalty
  ?thihapate a dbo:Monarch ;
             dbo:spouse ?spouse ;
             dbo:child ?child .
  
  FILTER (str(?thihapate) = ""Thihapate_of_Mohnyin"")

  # Ensure the child is an office holder and royalty
  ?child dbo:officeHolderOf ?office ;
         a dbo:Royal .

  # Find Soe Min Wimala Dewi's father
  ?soeminwimaladewi a dbo:Person ;
                    dbo:parent ?father .
  
  FILTER (str(?soeminwimaladewi) = ""Soe_Min_Wimala_Dewi"")

  # Match the child from both sets
  ?child2 dbo:parent ?father .

  # Ensure it's the same person
  FILTER (?child = ?child2)

  # Find the predecessor of this individual
  ?child dbo:predecessor ?predecessor .
}
```",4,6,5,2,2,3,3,71,0,0,1,0,0.0,0
626,12,val,Give me the awardee of the award of Aleksey Petrovich Yermolov and commander in Battle of Leipzig.,SELECT ?result WHERE { <http://dbpedia.org/resource/Aleksey_Petrovich_Yermolov> <http://dbpedia.org/property/awards> ?v0 . ?result <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Battle_of_Leipzig> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
# Query to find the award received by Aleksey Petrovich Yermolov
SELECT ?award WHERE {
  wd:Q123456 rdfs:label ""Aleksey Petrovich Yermolov""@en .
  OPTIONAL { wd:Q123456 dbo:awards ?award . }
}

# Query to confirm his role in the Battle of Leipzig
SELECT ?role WHERE {
  wd:Q123456 rdfs:label ""Aleksey Petrovich Yermolov""@en .
  OPTIONAL { wd:Q123456 dbo:commanderOf ?battle . }
  OPTIONAL { ?battle rdfs:label ""Battle of Leipzig""@en . }
}
```

Note: Replace `wd:Q123456` with the actual DBpedia resource identifier for Aleksey Petrovich Yermolov.",3,3,4,2,2,3,2,20,0,0,3,0,0.0,0
392,14,val,"Give me the region of the time zone, that is a sports event, of Aguilar de Segarra and entity in Italy.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsEvent>. ?result <http://dbpedia.org/ontology/timeZone> ?v1 . <http://dbpedia.org/resource/Aguilar_de_Segarra> <http://dbpedia.org/ontology/timeZone> ?v1 . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?region ?sportEvent ?italianEntity WHERE {
  # Find Aguilar de Segarra and its time zone region
  dbr:Aguilar_de_Segarra dbo:timeZoneRegion ?region .

  # Find sports events in that region
  ?sportEvent a dbo:Sport ;
              dbo:location ?location .
  ?location dbo:locatedIn ?region .

  # Find an entity in Italy related to the same sport or event type
  ?italianEntity a dbo:Sport ;
                 dbo:location ?italianLocation .
  ?italianLocation dbo:locatedIn dbr:Italy .
  
  FILTER(?sportEvent != ?italianEntity)
}
```",3,4,4,2,2,2,3,28,0,0,513,0,0.0,0
392,19,val,"Give me the entity in the region, that is a country, of Central European Time and region of Central European Time and province of Schio.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v1 . <http://dbpedia.org/resource/Schio> <http://dbpedia.org/ontology/province> ?result . ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Central_European_Time> . ?v1 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?country WHERE {
  ?country a dbo:Country .
  ?country dbo:timeZone ?tz .
  ?tz rdfs:label ""Central European Time""@en .
  OPTIONAL { ?place dbp:province ""Schio"" . }
  FILTER EXISTS { ?place dbp:country ?country }
}
```",4,5,5,2,3,2,3,28,0,0,1,0,0.0,0
9,39,val,"Give me the alma mater of Allen Hill (scientist) and figure known as the nickname of the entity, that is an organisation and an educational institution, in Northern Ireland.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?result <http://dbpedia.org/property/nickname> ?v1 . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Northern_Ireland> . ?v0 <http://dbpedia.org/property/nickname> ?v1 . <http://dbpedia.org/resource/Allen_Hill_(scientist)> <http://dbpedia.org/ontology/almaMater> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
# Query to find Allen Hill's alma mater
SELECT ?university WHERE {
  ?person dbo:wikiPageID ""Allen_Hill_(scientist)"" .
  ?person dbo:almaMater ?university .
}

UNION

# Query to find an organization and educational institution in Northern Ireland with a nickname
SELECT ?institution ?nickname WHERE {
  ?institution dbo:location dbc:Northern_Ireland ;
               rdf:type dbo:EducationalInstitution ;
               dbo:nickname ?nickname .
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
492,30,val,"Give me the person decedent at the capital, that is a settlement, of Algeria and person decedent at French Algeria and commander in Franco-Hova Wars.",SELECT ?result WHERE { <http://dbpedia.org/resource/Franco-Hova_Wars> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/French_Algeria> . ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . <http://dbpedia.org/resource/Algeria> <http://dbpedia.org/ontology/capital> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:MilitaryPerson ;
          dbo:deathPlace dbr:Algiers ;
          dbo:commanderOf dbr:Franco-Hova_Wars .
  
  OPTIONAL { 
    ?place dbo:country dbr:French_Algeria .
    ?person dbo:deathPlace ?place .
  }
  
  FILTER (?person = dbr:Joseph_Gallieni)
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
328,33,val,Give me the awardee of Order of Suvorov and commander in the force of the person decedent at Budapest.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/commander> ?v0 . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Budapest> . ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Order_of_Suvorov> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name WHERE {
  ?person dbo:award dbr:Order_of_Suvorov .
  ?person dbo:occupation dbr:Military_person .
  OPTIONAL { 
    ?event dbo:location dbr:Budapest .
    ?commander dbo:commanded ?event .
    FILTER(?commander = ?person)
  }
  ?person rdfs:label ?name .
  FILTER(LANG(?name) = 'en')
}
```",4,4,5,3,2,3,3,71,0,0,3,0,0.0,0
64,7,val,"Give me the alma mater of the person decedent, that is a writer, at Sremska Kamenica and entity in Serbia.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Sremska_Kamenica> . ?v0 <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Serbia> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?almaMater WHERE {
  ?person a dbo:Writer .
  ?person dbo:birthPlace dbr:Sremska_Kamenica .
  OPTIONAL { ?person dbo:almaMater ?almaMater . }
}
```",3,4,4,2,2,2,2,9,0,2,1,0.0,0.0,0
427,28,val,Give me the party of Romano Prodi and reference to the name of Italian People's Party (1994) and party of Giulio Andreotti.,SELECT ?result WHERE { <http://dbpedia.org/resource/Giulio_Andreotti> <http://dbpedia.org/ontology/party> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . <http://dbpedia.org/resource/Italian_People's_Party_(1994)> <http://xmlns.com/foaf/0.1/name> ?v1 . <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/ontology/party> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?prodiParty ?andreottiParty WHERE {
  # Romano Prodi's party in 1994
  OPTIONAL { 
    dbr:Romano_Prodi dbo:partyAffiliation ?prodiParty .
    FILTER(CONTAINS(LCASE(STR(?prodiParty)), ""partito popolare italiano""))
  }
  
  # Giulio Andreotti's party
  OPTIONAL {
    dbr:Giulio_Andreotti dbo:partyAffiliation ?andreottiParty .
    FILTER(CONTAINS(LCASE(STR(?andreottiParty)), ""democrazia cristiana"") ||
           CONTAINS(LCASE(STR(?andreottiParty)), ""forza italia"") ||
           CONTAINS(LCASE(STR(?andreottiParty)), ""unione dei democratici per l'europa""))
  }
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
801,27,val,"Give me the associated musical artist of the writer, that is a musical artist and an artist, of the album, that is a musical work and a work, of What U See Is What U Get.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v1 <http://dbpedia.org/property/writer> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/What_U_See_Is_What_U_Get> <http://dbpedia.org/ontology/album> ?v1 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT ?musicalArtist WHERE {
  # Step 1: Identify the album ""What U See Is What U Get""
  ?album dbo:title ""What U See Is What U Get"" ;
         a dbo:MusicalAlbum .

  # Step 2: Find artists associated with this album
  ?album dbo:artist ?artist .

  # Step 3: Check if any of these artists are also writers for the album
  OPTIONAL { ?album dbo:composer ?writer . }

  # Step 4: Ensure the writer is a musical artist and an artist
  FILTER (?writer = ?artist) .
  ?writer a dbo:MusicalArtist ;
          a dbo:Artist .

  # Return the musical artist who is also a writer for the album
  BIND(?artist AS ?musicalArtist)
}
```",3,7,4,3,1,3,3,71,0,0,50,0,0.0,0
328,28,val,"Give me the commander in Eastern Front (World War II) and leader of People's Commissariat of Defense of the Soviet Union and awardee of the award of Bruce Fraser, 1st Baron Fraser of North Cape.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ?v1 . <http://dbpedia.org/resource/Eastern_Front_(World_War_II)> <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape> <http://dbpedia.org/property/awards> ?v1 . <http://dbpedia.org/resource/People's_Commissariat_of_Defense_of_the_Soviet_Union> <http://dbpedia.org/ontology/leader> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person dbo:commanderOf ?easternFront .
  ?person dbo:leaderOf ?defenseCommissariat .
  ?person dbo:awardeeOf ?fraserAward .

  FILTER (CONTAINS(LCASE(?easternFront), ""world war ii eastern front""))
  FILTER (CONTAINS(LCASE(?defenseCommissariat), ""people's commissariat of defense""))
  FILTER (CONTAINS(LCASE(?fraserAward), ""bruce fraser""))

  ?person rdfs:label ?name .
  FILTER (LANGMATCHES(LANG(?name), ""en""))
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
488,35,val,Give me the administration of the father of Emperor Go-Mizunoo and birth place of the commander in Boshin War.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> ?v1 . <http://dbpedia.org/resource/Boshin_War> <http://dbpedia.org/ontology/commander> ?v2 . <http://dbpedia.org/resource/Emperor_Go-Mizunoo> <http://dbpedia.org/property/father> ?v1 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?administration ?birthPlace WHERE {
  # Administration of Toyotomi Hideyori (related to Osaka Castle)
  ?person rdfs:label ""Toyotomi Hideyori""@en .
  OPTIONAL { 
    ?osakaCastle dbo:administrator ?person ;
                dbo:location ?administration .
  }
  
  # Birthplace of Saigō Takamori
  ?saigoPerson rdfs:label ""Saigō Takamori""@en .
  ?saigoPerson dbo:birthPlace ?birthPlace .
}
```",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
345,12,val,"Give me the figure known as Stolz von Liechtenstein and team of the person born, that is a soccer player and a soccer manager, on 1978-09-15.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthDate> ""1978-09-15""^^<http://www.w3.org/2001/XMLSchema#date> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?result <http://dbpedia.org/ontology/manager> ?v0 . ?result <http://dbpedia.org/property/nickname> ""Stolz von Liechtenstein""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?image ?team WHERE {
  ?person a dbo:SoccerPlayer ;
          a dbo:SoccerManager ;
          dbo:birthDate ""1978-09-15""^^xsd:date .
  
  OPTIONAL { ?person dbp:image ?image . }
  
  OPTIONAL { 
    ?playerTeam dbo:member ?person ;
                a dbo:SoccerClub .
    BIND(str(?playerTeam) AS ?team)
  }

  OPTIONAL {
    ?managerTeam dbo:coach ?person ;
                 a dbo:SoccerClub .
    BIND(str(?managerTeam) AS ?team)
  }
}
```",3,5,4,2,2,3,2,20,0,3,1,0.0,0.0,0
488,40,val,"Give me the birth place of the commander in the war, that is a military conflict and an event and a societal event, of Saitō Hajime and death place of Tokugawa Ieyasu and administration of Emperor Go-Yōzei.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/commander> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Emperor_Go-Yōzei> . <http://dbpedia.org/resource/Saitō_Hajime> <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Tokugawa_Ieyasu> <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
SELECT ?birthPlace WHERE {
  ?saitoHajime a dbo:MilitaryPerson ;
               foaf:name ""Saitō Hajime""@en .
  ?saitoHajime dbo:birthPlace ?birthPlace .
}

UNION

SELECT ?deathPlace WHERE {
  ?tokugawaIeyasu a dbo:Monarch ;
                   foaf:name ""Tokugawa Ieyasu""@en .
  ?tokugawaIeyasu dbo:deathPlace ?deathPlace .
}

UNION

SELECT ?reign WHERE {
  ?goYozei a dbo:EmperorOfJapan ;
           foaf:name ""Go-Yōzei""@ja .
  ?goYozei dbo:reign ?reign .
}
```",5,8,6,3,3,3,3,71,0,0,1,0,0.0,0
360,15,val,"Give me the writer of the work, that is an album, of Dave Flett and reference to Manfred Mann.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/author> ""Dave Flett""@en . ?result <http://xmlns.com/foaf/0.1/name> ""Manfred Mann""@en . ?v1 <http://dbpedia.org/property/writer> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Album>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?album ?writer WHERE {
  ?album dbo:title ""The Roaring Silence""@en ;
         dbo:artist dbr:Manfred_Mann's_Earth_Band .
  
  ?album dbo:composer ?writer .
  
  OPTIONAL { 
    ?writer foaf:name ""Dave Flett""@en .
  }
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
314,12,val,Give me the commander in Spanish Civil War and awardee of 30 and person deceased at Madrid.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/restingPlace> <http://dbpedia.org/resource/Madrid> . <http://dbpedia.org/resource/Spanish_Civil_War> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/property/awards> ""30""^^<http://www.w3.org/2001/XMLSchema#integer> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?name WHERE {
  ?person a dbo:NobelPrizeWinner ;
          dbo:dateOfBirth ?dob ;
          dbo:placeOfDeath dbr:Madrid .
  
  OPTIONAL { ?person dbo:nationality dbr:Spain . }
  OPTIONAL { ?person dbo:occupation ?occupation . }

  FILTER (YEAR(?dob) < 1936 && YEAR(STRDT(?person/dbp:dateOfDeath, xsd:gYear)) > 1939)
  
  ?person rdfs:label ?name .
}
```",3,3,4,1,3,2,3,28,0,0,1,0,0.0,0
232,22,val,"Give me the native of the residence, that is a settlement and British, of Sylvie Bermann and child of Jon Pertwee.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/ontology/child> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Sylvie_Bermann> <http://dbpedia.org/property/residence> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?native WHERE {
  # Find Sylvie Bermann's residence
  ?sylvie a dbo:Person ;
          foaf:name ""Sylvie Bermann""@en .
  ?sylvie dbo:residenceLocation ?residence .

  # Ensure the residence is a settlement in Britain
  ?residence a dbo:Settlement ;
             dbo:country dbr:United_Kingdom .

  # Find Jon Pertwee's child who shares the same residence
  ?jon a dbo:Person ;
       foaf:name ""Jon Pertwee""@en .
  ?child dbo:parent ?jon ;
         dbo:residenceLocation ?residence .

  # Query for natives of the settlement
  ?native dbo:nativePlace ?residence .
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
838,13,val,"Give me the band of the band member, that is an artist and a musical artist, of the band, that is a band and a group, of Žika Jelić.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v0 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Žika_Jelić> . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT DISTINCT ?bandMemberBand WHERE {
  # Step 1: Identify the band(s) Žika Jelić is a member of
  ?band dbo:member dbr:Žika_Jelić .
  
  # Step 2: Ensure the band is both a ""band"" and a ""musical artist""
  ?band rdf:type dbo:Band ;
        rdf:type dbo:MusicalArtist .

  # Step 3: Find members of this band
  ?member dbo:member ?band .

  # Step 4: For each member, find the bands they are part of
  ?otherBand dbo:member ?member .
  
  # Step 5: Ensure these other bands are both a ""band"" and a ""musical artist""
  ?otherBand rdf:type dbo:Band ;
             rdf:type dbo:MusicalArtist .

  # Return the band(s) that meet all criteria
  BIND(?otherBand AS ?bandMemberBand)
}
```",3,7,4,3,1,3,2,20,0,0,21,0,0.0,0
16,23,val,Give me the spouse of the person born as the birth name of Ted McGinley.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/property/birthName> ?v2 . ?v0 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/property/birthName> ?v2 . },"```sparql
SELECT ?spouse WHERE {
  wd:Q123456 wdt:P26 ?spouse .
}
```

In this SPARQL query:
- `wd:Q123456` should be replaced with the actual DBpedia resource identifier for Ted McGinley. You would need to look up or know his specific DBpedia ID.
- `wdt:P26` is the property used in DBpedia to denote a spouse.",3,3,4,3,1,3,3,71,0,0,1,0,0.0,0
427,25,val,"Give me the party of the person born, that is an office holder and a politician, as Romano Antonio Prodi and party of Giulio Andreotti.","SELECT ?result WHERE { <http://dbpedia.org/resource/Giulio_Andreotti> <http://dbpedia.org/ontology/party> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/property/birthName> ""Romano Antonio Prodi""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/ontology/party> ?result . }","```sparql
SELECT ?person ?name ?party WHERE {
  VALUES (?person ?name) { 
    (dbpedia:Romano_Prodi ""Romano Prodi"") 
    (dbpedia:Giulio_Andreotti ""Giulio Andreotti"")
  }
  
  ?person dbo:officeHolder dbpedia:Category:Prime_Ministers_of_Italy .
  ?person dbo:party ?party .
  OPTIONAL { ?person rdfs:label ?name . FILTER(LANG(?name) = 'en') }
}
```",3,5,4,2,2,3,3,71,0,0,3,0,0.0,0
427,43,val,Give me the reference to Partito Popolare Italiano and party of Romano Prodi and party of the father of the alumnus of Massachusetts Institute of Technology.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Partito Popolare Italiano""@en . ?v0 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Massachusetts_Institute_of_Technology> . ?v4 <http://dbpedia.org/ontology/party> ?result . ?v0 <http://dbpedia.org/property/father> ?v4 . <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/ontology/party> ?result . }","```sparql
# Query for Partito Popolare Italiano
SELECT ?party WHERE {
  ?party dcterms:subject dbc:Partito_Popolare_Italiano .
}

# Query for the Democratic Party associated with Romano Prodi
SELECT ?party WHERE {
  ?prodi dbo:politicalParty ?party ;
         foaf:name ""Romano Prodi""@en .
  FILTER(CONTAINS(LCASE(?party), ""democratic party""))
}

# Query for the Republican Party associated with William H. Gates Sr.
SELECT ?party WHERE {
  ?gatesFamilyMember dbo:child ?billGates ;
                     dbo:spouse ?williamHGatesSr .
  ?williamHGatesSr dbo:politicalAffiliation ?party .
  FILTER(CONTAINS(LCASE(?party), ""republican party""))
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
30,7,val,"Give me the professional in Financier, businessman, vineyard owner, art collector, racehorse owner/breeder and native of the birthplace of Silvia Cohen.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Financier, businessman, vineyard owner, art collector, racehorse owner/breeder""@en . <http://dbpedia.org/resource/Silvia_Cohen> <http://dbpedia.org/ontology/birthPlace> ?v0 . ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . }","```sparql
# Step 1: Find the birthplace of Silvia Cohen
SELECT ?birthPlace WHERE {
    dbpedia:Silvia_Cohen dbo:birthPlace ?birthPlace .
}

# Step 2: Find a person matching all criteria and born in the same place as Silvia Cohen
SELECT DISTINCT ?person WHERE {
    # Replace ?birthPlace with the actual birthplace URI obtained from step 1
    ?person dbo:nationality dbpedia:Silvia_Cohen_born_in_place .
    ?person dbo:occupation dbpedia:Financier .
    ?person dbo:occupation dbpedia:Businessman .
    ?person dbo:occupation dbpedia:Vineyard_owner .
    ?person dbo:occupation dbpedia:Art_collector .
    ?person dbo:occupation dbpedia:Racehorse_owner_breeder .
}
```

Note: The actual birthplace URI of Silvia Cohen should replace `dbpedia:Silvia_Cohen_born_in_place` in the second query after executing the first query.",3,3,4,2,2,2,2,9,0,0,1,0,0.0,0
314,16,val,"Give me the person deceased at Madrid and commander in the profession, that is an event and a societal event, of Lisa Gavrić.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/restingPlace> <http://dbpedia.org/resource/Madrid> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Lisa_Gavrić> <http://dbpedia.org/property/occupation> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?deathDate ?event WHERE {
  ?person a dbo:MilitaryPerson ;
          dbo:deathPlace dbr:Madrid ;
          dbo:occupation ?commanderRole .
  
  FILTER EXISTS { 
    ?commanderRole rdfs:label ?roleLabel .
    FILTER(CONTAINS(LCASE(?roleLabel), ""commander"") || CONTAINS(LCASE(?roleLabel), ""general""))
  }
  
  OPTIONAL { ?person dbo:deathDate ?deathDate . }

  ?event dbo:location dbr:Madrid ;
         a dbo:SocietalEvent .

  ?person dbo:associatedWith ?event .
}
```",3,5,4,2,2,2,3,28,0,0,1,0,0.0,0
994,25,val,"Give me the associated musical artist of Red Tide (band) and band member of the person born, that is a musical artist, as Donald Maynard Dokken.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ""Donald Maynard Dokken""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . <http://dbpedia.org/resource/Red_Tide_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
# Part 1: Find the associated musical artist of Red Tide (band)
SELECT ?artist WHERE {
  ?redTide dbr:genre dbr:Hard_rock .
  ?redTide dbo:associatedBandMember ?artist .
}

UNION

# Part 2: Find a band member of Don Dokken who is also a musical artist
SELECT ?dokkenBandMember WHERE {
  ?donDokken foaf:name ""Don Dokken""@en .
  ?donDokken dbo:bandMemberOf ?dokkenBand .
  ?dokkenBand dbo:member ?dokkenBandMember .
  ?dokkenBandMember dbo:occupation dbr:Musician .
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
801,24,val,"Give me the associated musical artist of Chris Taylor (music producer) and producer of the work, that is a musical work and a song and a work, of 50 Cent.",SELECT ?result WHERE { <http://dbpedia.org/resource/Chris_Taylor_(music_producer)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v2 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/50_Cent> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v2 <http://dbpedia.org/ontology/producer> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?song WHERE {
    ?producer a dbo:MusicProducer ;
              foaf:name ""Chris Taylor (music producer)"" .
    
    ?production dbo:artist dbr:50_Cent ;
                dbo:producer ?producer ;
                dbo:work ?song .

    FILTER (?song != null)
}
```",3,6,4,2,2,3,3,71,0,0,1,0,0.0,0
696,11,val,Give me the landmark at elevation of 50 and birth place of the member of Dropkick Murphys.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Dropkick_Murphys> <http://dbpedia.org/ontology/bandMember> ?v2 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/elevation> ""50""^^<http://www.w3.org/2001/XMLSchema#integer> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?landmark ?birthPlace WHERE {
  # Find members of Dropkick Murphys and their birthplaces
  ?member dbo:musicalArtist dbr:Dropkick_Murphys .
  ?member dbo:birthPlace ?birthPlace .

  # Find landmarks at an elevation of 50 (assuming meters for this example)
  ?landmark a dbo:Lighthouse ;
            dbo:elevation ""50""^^xsd:float .
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
617,31,val,"Give me the spouse of Laodice IV and child of the child, that is a royalty, of the successor, that is a royalty, of Antiochus II Theos.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Antiochus_II_Theos> <http://dbpedia.org/ontology/successor> ?v1 . <http://dbpedia.org/resource/Laodice_IV> <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?successorChild ?spouseChild WHERE {
  # Step 1: Identify Antiochus II Theos and his successor
  ?antiochus2 a dbo:Monarch ;
              dbo:reignOver dbr:Selenkoue ;
              dbo:predecessor ?predecessor ;
              dbo:successor ?successor .
  
  FILTER (str(?antiochus2) = ""Antiochus II Theos"")

  # Step 2: Find the successor's royal child
  ?successorChild a dbo:Monarch ;
                  dbo:parent ?successor .

  # Step 3: Identify Laodice IV and her spouse
  ?laodiceIV a dbo:Person ;
             foaf:name ""Laodice IV""@en .
  
  ?spouse spousalRelationship ?laodiceIV ;
          a dbo:Monarch .

  # Step 4: Find the child of Laodice IV's spouse who is royalty
  ?spouseChild a dbo:Monarch ;
               dbo:parent ?spouse .
}

```",4,6,5,3,2,3,3,71,0,0,3,0,0.0,0
328,30,val,"Give me the commander in Eastern Front (World War II) and leader of the office, that is a government agency, of Joseph Stalin and awardee of Order of Suvorov.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Order_of_Suvorov> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. <http://dbpedia.org/resource/Joseph_Stalin> <http://dbpedia.org/property/office> ?v1 . <http://dbpedia.org/resource/Eastern_Front_(World_War_II)> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/ontology/leader> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:MilitaryPerson .
  ?person dbo:commanderOf ?easternFrontRole .
  FILTER(CONTAINS(LCASE(?easternFrontRole), ""eastern front"")) .
  
  ?person dbo:leaderOf ?office .
  ?office dbo:type dbr:Government_agency .
  ?office dbo:head dbr:Joseph_Stalin .

  ?person dbo:award dbr:Order_of_Suvorov .
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
427,23,val,Give me the reference to the name of the party of Michele Pinto.,SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v0 . <http://dbpedia.org/resource/Michele_Pinto> <http://dbpedia.org/ontology/party> ?v2 . ?v2 <http://xmlns.com/foaf/0.1/name> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?partyLabel WHERE {
  ?person foaf:name ""Michele Pinto""@en .
  ?person dbo:partyAffiliation ?party .
  ?party rdfs:label ?partyLabel .
  FILTER(LANG(?partyLabel) = 'en')
}
```",3,3,4,3,1,3,3,71,0,0,8,0,0.0,0
328,39,val,"Give me the leader of the office, that is a government agency, of the leader, that is an office holder and a politician, of Gustav Jonson and commander in Eastern Front (World War II).",SELECT ?result WHERE { <http://dbpedia.org/resource/Gustav_Jonson> <http://dbpedia.org/property/leader> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/ontology/leader> ?result . ?v0 <http://dbpedia.org/property/office> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Eastern_Front_(World_War_II)> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?agencyLeader WHERE {
  # Step 1: Identify Gustav Jonson's role in Eastern Front (World War II)
  ?gustavJonson a dbo:MilitaryPerson ;
                foaf:name ""Gustav Jonson"" ;
                dbo:officeHolderOf ?politicalRole .

  # Step 2: Find the political or leadership role associated with Gustav Jonson
  ?politicalRole dbo:positionHeldBy ?politician ;
                 dbo:role ""Commander in Eastern Front (World War II)"" .

  # Step 3: Determine the government agency associated with this politician
  ?governmentAgency a dbo:GovernmentAgency ;
                    dbo:head ?politician .

  # Step 4: Retrieve the leader of that government agency
  ?agencyLeader dbo:head ?governmentAgency .
}
```",4,7,5,3,2,3,3,71,0,0,1,0,0.0,0
232,34,val,Give me the child of the person born as the birth name of Jon Pertwee and native of London.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/London> . ?v1 <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/property/birthName> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  ?person a dbo:Person ;
          foaf:name ""John Julian Pertwee""@en ;
          dbo:birthPlace dbr:London .
  ?person dbo:child ?child .
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
281,31,val,Give me the war of the awardee of the award of Jonathon Band and entity in Colony of New Zealand.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Colony_of_New_Zealand> . <http://dbpedia.org/resource/Jonathon_Band> <http://dbpedia.org/property/awards> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?awardee ?award ?war WHERE {
  # Step 1: Identify Jonathon Band and the award he received
  ?jonathanBand a dbo:Person ;
               foaf:name ""Jonathon Band""@en .
  
  ?jonathanBand dbo:honoraryAwardReceived ?award .

  # Step 2: Find other awardees of the same award
  ?otherAwardee dbo:honoraryAwardReceived ?award .

  # Step 3: Identify wars involving New Zealand
  ?war a dbo:MilitaryConflict ;
      dbo:place dbr:New_Zealand .

  # Step 4: Check if any awardees were involved in these wars
  OPTIONAL {
    ?otherAwardee dbo:militaryService ?militaryService .
    ?militaryService dbo:conflict ?war .
  }
  
  FILTER(?jonathanBand != ?otherAwardee)
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
9,24,val,Give me the figure known as QUB and alma mater of the awardee of Royal Medal.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/almaMater> ?result . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Medal> . ?result <http://dbpedia.org/property/nickname> ""QUB""@en . }","```sparql
SELECT ?person ?almaMater WHERE {
  ?person dbo:award dbp:Royal_Medal .
  ?person dbo:almaMater ?education .
  ?education rdfs:label ""Queen's University Belfast""@en .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
404,38,val,"Give me the child of the father of Ernest Augustus, Duke of Brunswick and parent of the child, that is a royalty, of Ernest Augustus, Duke of Brunswick.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v3 . <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/ontology/parent> ?v2 . <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  # King George II was the father of Ernest Augustus, Duke of Brunswick
  dbr:Ernest_Augustus,_Duke_of_Brunswick dbo:father dbr:George_II_of_Great_Britain .
  
  # Find children of King George II who are royalty and have a child (parent)
  ?child dbo:father dbr:George_II_of_Great_Britain ;
         a dbo:Person ;
         dbo:spouse ?spouse .

  # Ensure the child is royalty
  ?child dbo:royaltyTitle ?title .
  
  # Check if this child has any children (parent)
  ?child dbo:child ?grandChild .

  FILTER EXISTS { ?title }
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
232,33,val,"Give me the actor of the claim to fame, that is a film and a military conflict, of the professional in Actor, narrator and producer and child of Jon Pertwee.","SELECT ?result WHERE { <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/ontology/child> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v3 <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://dbpedia.org/property/occupation> ""Actor, narrator and producer""@en . ?v0 <http://dbpedia.org/ontology/knownFor> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  # Identify Simon Pertwee
  ?simon a dbo:Actor ;
         foaf:name ""Simon Pertwee"" .

  # Find his claim to fame related to a film and military conflict
  ?work dbo:starring ?simon ;
        dbo:title ?title .
  
  FILTER CONTAINS(LCASE(?title), ""dad's army"") .

  # Identify the actors involved in this work
  ?work dbo:starring ?actor .
  
  # Ensure the actor is distinct from Simon Pertwee
  FILTER (?actor != ?simon)
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
281,40,val,Give me the war of the awardee of the award of Jonathon Band and entity in Colony of New Zealand and war of New Zealand Army.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Colony_of_New_Zealand> . ?v1 <http://dbpedia.org/property/awards> ?v2 . <http://dbpedia.org/resource/New_Zealand_Army> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Jonathon_Band> <http://dbpedia.org/property/awards> ?v2 . },"```sparql
# Query for Jonathon Band and his award
SELECT ?award WHERE {
  ?person foaf:name ""Jonathon Band""@en .
  ?person dbo:awardsReceived ?award .
}

# Query for wars related to the Colony of New Zealand
SELECT DISTINCT ?war WHERE {
  ?entity rdfs:label ""Colony of New Zealand""@en .
  ?entity dbo:participatedIn ?war .
}

# Query for wars involving the New Zealand Army
SELECT DISTINCT ?war WHERE {
  ?army rdfs:label ""New Zealand Army""@en .
  ?army dbo:participatedIn ?war .
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
421,17,val,Give me the person born as Edin Dervišhalidović and native of the birthplace of Samir Bekrić.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . <http://dbpedia.org/resource/Samir_Bekrić> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?result <http://dbpedia.org/property/birthName> ""Edin Dervišhalidović""@en . }","```sparql
# Part 1: Retrieve the birthplace of Samir Bekrić
SELECT ?birthPlace WHERE {
    wd:Q1234568 dbo:birthPlace ?birthPlace .
}

# Part 2: Find Edin Dervišhalidović with the same birthplace as Samir Bekrić
SELECT ?person WHERE {
    # Replace Q1234568 with the actual DBpedia ID of Samir Bekrić once known
    wd:Q1234568 dbo:birthPlace ?birthPlace .
    
    ?person rdfs:label ""Edin Dervišhalidović""@en ;
            dbo:birthPlace ?birthPlace .
}
```

Note: Replace `wd:Q1234568` with the actual DBpedia ID of Samir Bekrić once it is known.",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
827,14,val,"Give me the father of the child, that is a royalty, of the spouse, that is a royalty, of Princess Pauline of Saxe-Weimar-Eisenach.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> ?result . ?v0 <http://dbpedia.org/property/father> ?v2 . ?v2 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Princess_Pauline_of_Saxe-Weimar-Eisenach> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?father WHERE {
  ?princess rdf:type dbo:Princess ;
            foaf:name ""Pauline of Saxe-Weimar-Eisenach""@en .
  
  ?princess dbo:spouse ?spouse .
  ?spouse rdf:type dbo:Royal .

  ?child dbo:parent ?spouse ;
         dbo:parent ?father ;
         rdf:type dbo:Royal .

}
```",3,5,4,3,1,3,2,20,0,0,1,0,0.0,0
485,14,val,"Give me the birth place of the awardee, that is a writer and a poet, of Eric Gregory Award and entity in United Kingdom.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Poet>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Eric_Gregory_Award> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>. ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?birthPlace WHERE {
  ?person a dbo:Writer ;
          dbo:occupation ""Poet"" ;
          dbo:awardReceived dbr:Eric_Gregory_Award .
  ?person dbo:country dbr:United_Kingdom .
  OPTIONAL { ?person dbo:birthPlace ?birthPlace . }
}
```",3,5,4,2,2,2,3,28,0,0,5,0,0.0,0
404,18,val,"Give me the child of Ernest Augustus, Crown Prince of Hanover and parent of Prince Ernest Augustus of Hanover (born 1914) and spouse of Princess Victoria Louise of Prussia.","SELECT ?result WHERE { <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Prince_Ernest_Augustus_of_Hanover_(born_1914)> . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ernest_Augustus,_Crown_Prince_of_Hanover> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
    ?person dbo:child dbr:Ernest_Augustus,_Crown_Prince_of_Hanover .
    ?person dbo:spouse dbr:Victoria_Louise_of_Prussia .
    ?person dbo:parent dbr:Prince_Ernest_Augustus_of_Hanover_(1914-1987) .
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
767,26,val,Give me the alma mater of the administration of the reference to George Kilbon Nash.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/almaMater> ?result . ?v1 <http://xmlns.com/foaf/0.1/name> ""George Kilbon Nash""@en . ?v2 <http://dbpedia.org/property/governor> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?university WHERE {
  dbr:George_Kilbon_Nash dbo:almaMater ?university .
}
```",3,3,4,3,1,3,3,71,0,0,6,0,0.0,0
915,11,val,"Give me the father of Lizzie Spaulding and resident of the birthplace, that is a settlement, of Stephen Verona.",SELECT ?result WHERE { <http://dbpedia.org/resource/Lizzie_Spaulding> <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Stephen_Verona> <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/residence> ?v2 . },"```sparql
# Step 1: Find Lizzie Spaulding's father
SELECT ?father WHERE {
    ?lizzie dbo:spouse ?person .
    ?person foaf:name ""Lizzie Spaulding"" .
    ?person dbo:child ?child .
    ?child foaf:name ""Lizzie Spaulding"" .
    ?person dbo:parent ?father .
}

# Step 2: Find Stephen Verona's birthplace and ensure it is a settlement
SELECT DISTINCT ?birthPlace WHERE {
    ?stephen dbo:birthPlace ?birthPlace .
    ?stephen foaf:name ""Stephen Verona"" .
    ?birthPlace rdf:type dbo:Settlement .
}

# Step 3: Find the father of Lizzie Spaulding who is also a resident of Stephen Verona's birthplace
SELECT DISTINCT ?father WHERE {
    # Reuse results from step 1 and step 2
    ?lizzie dbo:spouse ?person .
    ?person foaf:name ""Lizzie Spaulding"" .
    ?person dbo:child ?child .
    ?child foaf:name ""Lizzie Spaulding"" .
    ?person dbo:parent ?father .

    ?stephen dbo:birthPlace ?birthPlace .
    ?stephen foaf:name ""Stephen Verona"" .
    ?birthPlace rdf:type dbo:Settlement .

    # Check if the father is a resident of Stephen Verona's birthplace
    ?father dbo:residence ?residence .
    FILTER (?residence = ?birthPlace)
}
```",3,4,4,2,2,3,2,20,0,0,1,0,0.0,0
617,40,val,"Give me the spouse of Laodice IV and child of the child, that is a royalty, of the successor, that is a royalty, of Antiochus II Theos and parent of Nysa (wife of Pharnaces I of Pontus).",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Antiochus_II_Theos> <http://dbpedia.org/ontology/successor> ?v2 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Nysa_(wife_of_Pharnaces_I_of_Pontus)> . <http://dbpedia.org/resource/Laodice_IV> <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://dbpedia.org/property/father> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?successor ?spouse ?child ?parentOfNysa WHERE {
  # Find Antiochus II Theos' successor
  ?antiochus2 dbo:successor ?successor .
  FILTER(STRSTARTS(STR(?antiochus2), ""http://dbpedia.org/resource/Antiochus_II_Theos""))

  # Find Laodice IV's spouse
  ?laodice4 dbo:spouse ?spouse .

  # Ensure the successor is a royalty and find their child who is also royalty
  ?successor rdf:type dbo:Monarch .
  ?child dbo:parent ?spouse ;
         rdf:type dbo:Monarch .

  # Find if this royal child is a parent of Nysa
  ?nysa dbo:fatherOrMother ?parentOfNysa .
  FILTER(STRSTARTS(STR(?nysa), ""http://dbpedia.org/resource/Nysa_(wife_of_Pharaces_I_of_Pontus)""))

  # Ensure the child is a royalty and matches the parent of Nysa
  FILTER(?child = ?parentOfNysa)
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
492,32,val,"Give me the person decedent at the work of US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite and commander in the war, that is a military conflict and an event, of Frédéric-Georges Herr.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Frédéric-Georges_Herr> <http://dbpedia.org/ontology/battle> ?v3 . ?v1 <http://dbpedia.org/property/author> ""US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite""@en . ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?successor ?conflict ?event
WHERE {
  # Find Joseph C. Satterthwaite's successor
  ?satterthwaite a dbo:GovernmentFunction ;
                 dbo:officeHolder ?person1 .
  FILTER(CONTAINS(LCASE(?person1), ""joseph c. satterthwaite""))
  
  ?successor a dbo:GovernmentFunction ;
            dbo:officeHolder ?person2 ;
            dbo:predecessor ?satterthwaite .

  # Find Frédéric-Georges Herr's military conflict and event
  ?herr a dbo:MilitaryPerson ;
        dbo:commanderOf ?conflict .
  FILTER(CONTAINS(LCASE(?herr), ""frédéric-georges herr""))

  OPTIONAL { ?conflict dbo:event ?event }
}
```",4,6,5,2,2,3,3,71,0,0,1,0,0.0,0
838,11,val,"Give me the band of the band member, that is an artist and a musical artist, of YU Grupa and band member of Kerber.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Kerber> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/YU_Grupa> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandMember WHERE {
  # Find members of YU Grupa
  ?yugrupaMember dbo:memberOf dbr:YU_Grupa .
  
  # Ensure the same member is part of Kerber
  ?kerberMember dbo:memberOf dbr:Kerber .
  
  # The person must be the same individual
  FILTER (?yugrupaMember = ?kerberMember)
  
  # Check if they are an artist and a musical artist
  ?bandMember rdf:type dbo:Artist ;
              rdf:type dbo:MusicalArtist ;
              owl:sameAs ?yugrupaMember .
}
```",3,5,4,2,2,3,2,20,0,0,1,0,0.0,0
659,27,val,"Give me the military force of the force, that is a societal event and an event and a military conflict, of the reference to Rutger Jan Schimmelpenninck.","SELECT ?result WHERE { ?v1 <http://xmlns.com/foaf/0.1/name> ""Rutger Jan Schimmelpenninck""@en . ?v2 <http://dbpedia.org/ontology/commander> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce WHERE {
  ?event dbo:type dbr:Military_conflict .
  ?event dbo:relatedThroughTime dbr:Batavian_Revolution .
  ?event dbo:place dbr:Netherlands .
  ?event dbo:participant ?person .
  ?person rdfs:label ""Rutger Jan Schimmelpenninck""@en .
  
  OPTIONAL {
    ?event dbo:militaryForce ?militaryForce .
  }
}
```",3,6,4,3,1,3,3,71,0,0,1127,0,0.0,0
767,37,val,Give me the alma mater of the administration of the reference to George Kilbon Nash and reference to .,"SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://xmlns.com/foaf/0.1/name> """"@en . ?v3 <http://dbpedia.org/property/governor> ?v0 . ?v0 <http://xmlns.com/foaf/0.1/name> ""George Kilbon Nash""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?university ?universityLabel WHERE {
  ?person a dbo:Person ;
          foaf:name ""George Kilbon Nash""@en .
  ?person dbo:almaMater ?university .
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
```",4,4,5,3,2,3,3,71,0,0,2,0,0.0,0
994,36,val,"Give me the associated musical artist of S.A. Slayer and band member of the person born, that is a musical artist, as the persona of Don Dokken.",SELECT ?result WHERE { <http://dbpedia.org/resource/S.A._Slayer> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Don_Dokken> <http://xmlns.com/foaf/0.1/givenName> ?v3 . ?v0 <http://dbpedia.org/property/birthName> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandMember WHERE {
  # Jeff Hanneman, known as S.A. Slayer
  dbr:Jeff_Hanneman dbo:musicalArtistOf dbr:Slayer .
  
  # Don Dokken's persona and band membership
  dbr:Don_Dokken dbo:leadVocalist dbr:Dokken ;
                 foaf:name ""Don Dokken"" .

  # George Lynch, who played in both Dokken and collaborated with Slayer members
  dbr:George_Lynch dbo:musicalArtistOf dbr:Dokken .
  
  # Check if George Lynch is associated with Jeff Hanneman through band membership or collaboration
  OPTIONAL { 
    ?bandMember dbo:musicalArtistOf dbr:Slayer ;
                dbo:associatedBandMember dbr:Jeff_Hanneman .
  }
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
981,15,val,"Give me the birth place of Novia Indriani Mamuaja and entity in the region of the time zone in Salak, North Sumatra.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/timeZone> ?v0 . <http://dbpedia.org/resource/Salak,_North_Sumatra> <http://dbpedia.org/ontology/timeZone> ?v0 . <http://dbpedia.org/resource/Novia_Indriani_Mamuaja> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/country> ?v1 . }","```sparql
# Query to get the birthplace of Novia Indriani Mamuaja
SELECT ?birthPlace WHERE {
  dbp:Novia_Indriani_Mamuaja dbo:birthPlace ?birthPlace .
}

# Query to find an entity in the region corresponding to the time zone ""Asia/Jakarta""
SELECT DISTINCT ?entity ?label WHERE {
  ?entity wdt:P421 wd:Q1192426 . # P421 is the property for Time Zone, and Q1192426 is the identifier for Asia/Jakarta
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
```",4,4,5,3,2,3,2,20,0,0,1,0,0.0,0
659,34,val,"Give me the commander in the force of the native, that is an office holder, of Kingdom of Ireland and military force of Napoleonic Wars.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Napoleonic_Wars> . ?v2 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Kingdom_of_Ireland> . ?v1 <http://dbpedia.org/ontology/commander> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person dbo:nationality dbr:Irish ;
          dbo:occupation dbr:Military_person ;
          dbo:almaMater dbr:Trinity_College_Dublin .
  
  OPTIONAL { 
    ?person dbo:officeHolderOf dbr:Kingdom_of_Ireland .
  }
  
  OPTIONAL {
    ?person dbo:militaryConflict dbr:Napoleonic_Wars .
  }

  FILTER EXISTS { ?person dbo:rank dbr:Field_Marshal }
}
```",4,5,5,3,2,3,3,71,0,0,34,0,0.0,0
184,37,val,"Give me the child of the child of the parent, that is a royalty, of Archduke Ladislaus Philipp of Austria and parent of Archduchess Ilona of Austria.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Ilona_of_Austria> . <http://dbpedia.org/resource/Archduke_Ladislaus_Philipp_of_Austria> <http://dbpedia.org/ontology/parent> ?v0 . ?v3 <http://dbpedia.org/property/father> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  # Step 1: Identify Archduke Ladislaus Philipp of Austria
  ?ladislaus a dbo:Person ;
             rdfs:label ""Archduke Ladislaus Philipp of Austria""@en .

  # Step 2: Find his parent
  ?parent dbo:child ?ladislaus .
  
  # Step 3: Find the sibling (child of the same parent)
  ?sibling dbo:child ?parent ;
           FILTER(?sibling != ?ladislaus) .

  # Step 4: Identify the child of this sibling who is royalty
  ?royalChild dbo:child ?sibling .
  
  # Ensure the person is royalty
  ?royalChild a dbo:Monarch ;
              dbp:title ?title .

  # Step 5: Check if they are parent of Archduchess Ilona of Austria
  ?ilona a dbo:Person ;
         rdfs:label ""Archduchess Ilona of Austria""@en .
  
  ?royalChild dbo:child ?ilona .

}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
182,17,val,Give me the entity in Sri Lanka and war of the work of Gotabhaya Rajapaksa.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Gotabhaya_Rajapaksa> . ?v1 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Sri_Lanka> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity ?war WHERE {
  VALUES ?person { dbr:Gotabhaya_Rajapaksa }
  
  ?person dbo:nationality dbr:Sri_Lanka .
  OPTIONAL { ?person dbo:occupation ?occupation . FILTER regex(?occupation, ""Defence"", ""i"") }

  ?work dbo:associatedWith ?entity .
  ?work dbo:subject ?war .

  VALUES ?war { dbr:Sri_Lankan_Civil_War }
}
```",3,3,4,2,2,2,3,28,0,0,5,0,0.0,0
161,36,val,"Give me the commander in the force, that is an event, of the figure known as El Director and military force of Rif War.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/ontology/commander> ?v0 . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Rif_War> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://xmlns.com/foaf/0.1/nick> ""El Director""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  ?event dbo:participatedIn dbr:Rif_War .
  ?event dbo:leader ?person .
  ?person rdfs:label ""El Director""@en .
  BIND(?person AS ?commander)
}
```",4,5,5,3,2,3,3,71,0,0,12,0,0.0,0
547,33,val,Give me the resting place of the actor of the show with Emily Richard and resting place of James Burton (Egyptologist).,SELECT ?result WHERE { <http://dbpedia.org/resource/James_Burton_(Egyptologist)> <http://dbpedia.org/ontology/restingPlace> ?result . ?v3 <http://dbpedia.org/ontology/restingPlace> ?result . ?v0 <http://dbpedia.org/property/starring> ?v3 . ?v0 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emily_Richard> . },"```sparql
# Query to get the resting place of David Boreanaz
SELECT ?restingPlace WHERE {
  ?person dbo:birthName ""David Michael Boreanaz"" .
  ?person dbo:profession dbr/Actor .
  OPTIONAL { ?person dbo:deathPlace ?restingPlace . }
  FILTER NOT EXISTS { ?person dbo:deathDate [] } # Ensure the person is deceased
}

UNION

# Query to get the resting place of James Burton (Egyptologist)
SELECT ?restingPlace WHERE {
  ?person foaf:name ""James Burton"" .
  ?person dbo:profession dbr/Egyptology .
  OPTIONAL { ?person dbo:deathPlace ?restingPlace . }
  FILTER NOT EXISTS { ?person dbo:deathDate [] } # Ensure the person is deceased
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
701,40,val,Give me the parent of Henuttawy (19th dynasty) and spouse of Ramesses II and parent of the child of the spouse of Amun-her-khepeshef.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Ramesses_II> . <http://dbpedia.org/resource/Amun-her-khepeshef> <http://dbpedia.org/ontology/spouse> ?v2 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Henuttawy_(19th_dynasty)> . ?v2 <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commonEntity WHERE {
  # Parent of Henuttawy (19th dynasty)
  ?henuttawy dbo:parent ?parentHenuttawy .
  ?henuttawy rdfs:label ""Henuttawy (19th dynasty)""@en .

  # Spouse of Ramesses II
  ?ramessesII dbo:spouse ?spouseRamessesII .
  ?ramessesII rdfs:label ""Ramesses II""@en .

  # Child of the spouse of Amun-her-khepeshef
  ?amunHerKhepeshef dbo:spouse ?spouseAmunHerKhepeshef .
  ?child dbr:parent ?spouseAmunHerKhepeshef .
  ?amunHerKhepeshef rdfs:label ""Amun-her-khepeshef""@en .

  # Find the common entity
  FILTER (?parentHenuttawy = ?spouseRamessesII)
  FILTER (?spouseRamessesII = ?spouseAmunHerKhepeshef)
  BIND(?spouseRamessesII AS ?commonEntity)
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
994,37,val,"Give me the band member of Don Dokken and associated musical artist of the band member, that is a band and a group and an organisation, of the band, that is an organisation, of Fredrik Thordendal.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Fredrik_Thordendal> . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Don_Dokken> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandMember ?associatedBand ?fredrikBand WHERE {
  # Step 1: Find a band member of Don Dokken
  ?bandMember dbo:memberOf dbr:Don_Dokken .
  
  # Step 2: Find an associated musical artist (band) that is both a group and an organization for this band member
  ?associatedBand dbo:leadArtist ?bandMember ;
                 a dbo:MusicalGroup, dbo:Organization .

  # Step 3: Identify Fredrik Thordendal's band, which must be both a group and an organization
  ?fredrikBand dbo:member dbr:Fredrik_Thordendal ;
               a dbo:MusicalGroup, dbo:Organization .
}
```",4,8,5,3,2,3,3,71,0,0,1,0,0.0,0
421,13,val,Give me the band member of the awardee of [[#Awards and nominations and native of Socialist Federal Republic of Yugoslavia.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://dbpedia.org/property/awards> ""[[#Awards and nominations""@en . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Socialist_Federal_Republic_of_Yugoslavia> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?bandMember ?band WHERE {
  ?person dbo:nationality dbr:SFRY .
  ?person dbo:award ?award .
  ?person dbo:musicGroup ?band .
  ?bandMember dbo:musicGroup ?band ;
              rdfs:label ?name .
  FILTER (LANG(?name) = 'en')
}
```",3,3,4,2,2,2,3,28,0,0,2,0,0.0,0
378,38,val,Give me the claim to fame of the commander in Great Siege of Gibraltar and war of the commander in Peninsular War.,SELECT ?result WHERE { <http://dbpedia.org/resource/Great_Siege_of_Gibraltar> <http://dbpedia.org/ontology/commander> ?v2 . <http://dbpedia.org/resource/Peninsular_War> <http://dbpedia.org/ontology/commander> ?v3 . ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/ontology/knownFor> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name ?fame WHERE {
  VALUES (?person ?name) {
    (dbr:George_Augustus_Eliott_1st_Baron_Heathfield ""George Augustus Eliott, 1st Baron Heathfield"")
    (dbr:Arthur_Wellesley_1st_Duke_of_Wellington ""Arthur Wellesley, 1st Duke of Wellington"")
  }
  
  ?person dbo:name ?name .
  
  OPTIONAL {
    ?person dbo:famousFor ?fame .
  }
}
```",4,4,5,2,2,3,3,71,0,0,2,0,0.0,0
626,13,val,"Give me the commander in the force, that is a military conflict, of the commander in Battle of Paris (1814).",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/commander> ?v0 . <http://dbpedia.org/resource/Battle_of_Paris_(1814)> <http://dbpedia.org/ontology/commander> ?v0 . },"```sparql
# Step 1: Find the commander in the Battle of Paris (1814)
SELECT ?commander WHERE {
    ?battle dbpedia-owl:wikiPageRedirects dbc:Battle_of_Paris_(1814) .
    ?battle dbpedia-owl:commander ?commander .
}

# Step 2: Use the result from step 1 to find another military conflict with the same commander
SELECT DISTINCT ?conflict WHERE {
    # Replace <Commander_URI> with the actual URI obtained from step 1
    BIND(<Commander_URI> AS ?commander) .

    ?conflict a dbo:MilitaryConflict .
    ?conflict dbpedia-owl:commander ?commander .
}
```

Note: In practice, you would replace `<Commander_URI>` in Step 2 with the actual URI obtained from Step 1.",3,4,4,3,1,3,2,20,0,0,364,0,0.0,0
356,11,val,Give me the player in the successor of 2014 Sacramento Republic FC season and team of Mark Briggs.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Mark_Briggs> . <http://dbpedia.org/resource/2014_Sacramento_Republic_FC_season> <http://dbpedia.org/ontology/successor> ?v2 . ?v2 <http://dbpedia.org/ontology/team> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?team WHERE {
    ?player dbo:nationality dbr:United_Kingdom ;
            rdfs:label ""Mark Briggs""@en .
    
    ?player dbo:playsForTeam ?team .

    FILTER (
        EXISTS { 
            ?team dbo:seasonStartYear ?year .
            ?team dbo:league dbr:USL_Championship .
            ?year > 2014
        }
    )
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
9,41,val,"Give me the figure known as QUB and alma mater of the mayor, that is a politician, of Northern Ireland Forum and alma mater of the awardee of Royal Medal.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Medal> . <http://dbpedia.org/resource/Northern_Ireland_Forum> <http://dbpedia.org/property/leader> ?v2 . ?v4 <http://dbpedia.org/ontology/almaMater> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://dbpedia.org/property/nickname> ""QUB""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?alumnus WHERE {
  # Find Queen's University Belfast
  VALUES ?university { dbr:Queen's_University_Belfast }

  # Check for alumni who are politicians and mayors in the Northern Ireland Forum
  ?alumnus dbo:almaMater ?university .
  ?alumnus dbo:occupation dbr:Politician .

  OPTIONAL {
    ?mayorRole dbo:positionTitle ""Mayor""@en ;
               dbo:person ?alumnus .
  }

  # Check for alumni who are awardees of the Royal Medal
  OPTIONAL {
    ?award dbo:recipient ?alumnus ;
           dbo:name dbr:Royal_Medal .
  }
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
54,33,val,Give me the parent of the child of the parent of Thado Minsaw of Prome and child of Thinkhaya of Pagan.,SELECT ?result WHERE { <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?result . ?v3 <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?finalParent WHERE {
  # Step 1: Identify Thado Minsaw of Prome
  ?thadoMinsaw a dbo:Person ;
               foaf:name ""Thado Minsaw""@en .

  # Step 2: Find Parent of Thado Minsaw
  ?parentOfThadoMinsaw dbo:child ?thadoMinsaw .

  # Step 3: Child of the Parent of Thado Minsaw
  ?siblingOrDescendant dbo:parent ?parentOfThadoMinsaw .

  # Step 4: Identify Thinkhaya of Pagan
  ?thinkhaya a dbo:Person ;
             foaf:name ""Thinkhaya""@en .

  # Step 5: Find Child of Thinkhaya
  ?childOfThinkhaya dbo:parent ?thinkhaya .

  # Step 6: Parent of the Child of Thinkhaya (should be Thinkhaya)
  ?thinkhayaParent dbo:child ?childOfThinkhaya .

  # Step 7: Combine Information
  FILTER(?siblingOrDescendant = ?childOfThinkhaya)

  # Step 8: Determine the parent of the entity identified in step 7
  ?finalParent dbo:parent ?siblingOrDescendant .
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
16,34,val,Give me the person born as Georgeanne Marie Rice and spouse of the person born as the birth name of Ted McGinley.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/birthName> ""Georgeanne Marie Rice""@en . ?v1 <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/property/birthName> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?spouse WHERE {
  ?rice a dbo:Person ;
        foaf:name ""Georgeanne Marie Rice""@en .
  
  ?ted a dbo:Person ;
       foaf:name ""Ted McGinley""@en .

  ?rice dbo:spouse ?spouse .
  OPTIONAL { ?spouse foaf:name ?name . }
  FILTER EXISTS {
    ?ted dbo:spouse ?spouse .
  }
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
356,14,val,"Give me the team of the native, that is a soccer player and a soccer manager, of the birth place, that is English and a settlement, of Gary Williams (footballer, born 1960).","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v0 <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/manager> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Gary_Williams_(footballer,_born_1960)> <http://dbpedia.org/ontology/birthPlace> ?v2 . }","```sparql
SELECT DISTINCT ?team WHERE {
  # Step 1: Find Gary Williams' birthplace
  dbpedia:Gary_Williams_(footballer,_born_1960) dbo:nationality dbr:England ;
    dbo:birthPlace ?birthPlace .

  # Step 2: Ensure the birthplace is an English settlement
  ?birthPlace a dbo:Settlement ;
              dbo:country dbr:England .

  # Step 3: Find individuals from this place who are both soccer players and managers
  ?person dbo:nationality dbr:England ;
          dbo:birthPlace ?birthPlace ;
          dbo:occupation dbr:Soccer_player ;
          dbo:occupation dbr:Soccer_manager .

  # Step 4: Identify the team managed by this person
  ?person dbo:currentTeam ?team .
}
```",3,7,4,3,1,3,2,20,0,0,46,0,0.0,0
617,35,val,"Give me the parent of the child of Antiochus (son of Antiochus III the Great) and child of the child, that is a royalty, of Seleucus II Callinicus.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v2 . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seleucus_II_Callinicus> . <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/child> ?v1 . },"```sparql
# Find Antiochus IV Epiphanes as the son of Antiochus III the Great
SELECT ?antiochusIV WHERE {
  ?antiochusIV dbo:parent dbc:Antiochus_III_the_Great .
  ?antiochusIV rdf:type dbo:Monarch .
}

# Find a child of Antiochus IV Epiphanes (likely Antiochus V Eupator)
SELECT ?child WHERE {
  VALUES ?antiochusIV { <http://dbpedia.org/resource/Antiochus_IV_Epiphanes> }
  ?child dbo:parent ?antiochusIV .
}

# Find the parent of this child
SELECT ?grandParent WHERE {
  ?child dbo:parent ?antiochusIV .
  ?grandParent dbo:parent ?child .
}

# Identify a grandchild of Seleucus II Callinicus who is royalty
SELECT ?grandChild WHERE {
  ?seleucusII dbo:child ?childOfSeleucusII .
  ?childOfSeleucusII dbo:child ?grandChild .
  ?grandChild rdf:type dbo:Monarch .
}

# Find the parent of this grandchild (to check if it matches with any royal lineage)
SELECT ?parent WHERE {
  ?grandChild dbo:parent ?parent .
}
```",4,5,5,2,2,3,3,71,0,0,2,0,0.0,0
232,39,val,"Give me the native of the residence, that is a settlement and British, of the native, that is a politician and an office holder, of France and actor of Dog Soldiers (film).",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/France> . ?v0 <http://dbpedia.org/property/residence> ?v1 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . <http://dbpedia.org/resource/Dog_Soldiers_(film)> <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
# Step 1: Find the actor of ""Dog Soldiers"" who is a politician and office holder from France
SELECT ?actor WHERE {
  ?film dbo:title ""Dog Soldiers""@en .
  ?film dbo:starring ?actor .
  ?actor dbo:nationality dbr:Francois; # Assuming we know the actor's name or can find it through DBpedia
         dbo:occupation dbr/Politician ;
         dbo:officeHolderOf dbr/France .
}

# Step 2: Get the birthplace of this actor
SELECT ?birthPlace WHERE {
  ?actor dbo:birthPlace ?birthPlace .
}

# Step 3: Find the current residence in Britain
SELECT ?residence WHERE {
  ?actor dbo:currentResidence ?residence ;
         dbo:nationality dbr:United_Kingdom .
  ?residence a dbo:Settlement .
}

# Step 4: Get the native of this British settlement
SELECT ?native WHERE {
  ?residence dbo:native ?native .
}
```

Note: The above queries assume that we can identify the actor's name or have some way to link them directly. In practice, you might need to refine these queries based on available data in DBpedia.",4,8,5,3,2,3,3,71,0,0,1,0,0.0,0
626,11,val,"Give me the awardee of Order of St. Andrew and commander in the force, that is a military conflict, of Alexander I of Russia.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Alexander_I_of_Russia> . ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Order_of_St._Andrew> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?awardee ?conflict WHERE {
  # Find Alexander I of Russia and check if he received the Order of St. Andrew
  ?person a dbo:Monarch ;
          foaf:name ""Alexander I""@en ;
          dbo:country dbr:Russia .
  
  OPTIONAL { 
    ?person dbo:award dbr:Order_of_St._Andrew .
    BIND(?person AS ?awardee)
  }
  
  # Find military conflicts where he was a commander
  OPTIONAL {
    ?conflict dbo:commander ?person ;
              a dbo:MilitaryConflict .
    BIND(?conflict AS ?conflict)
  }
}
```",3,4,4,2,2,3,2,20,0,0,9,0,0.0,0
547,22,val,Give me the resting place of James Burton (Egyptologist) and resting place of the awardee of Knight Grand Cross of the Order of St Michael and St George.,SELECT ?result WHERE { <http://dbpedia.org/resource/James_Burton_(Egyptologist)> <http://dbpedia.org/ontology/restingPlace> ?result . ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_St_Michael_and_St_George> . },"```sparql
# Query for the resting place of James Burton (Egyptologist)
SELECT ?person ?burialSite WHERE {
  ?person a dbo:Egyptologist ;
          foaf:name ""James Burton""@en .
  OPTIONAL { ?person dbo:deathPlace ?burialSite . }
}

UNION

# Query for the resting place of any Knight Grand Cross of the Order of St Michael and St George
SELECT ?person ?burialSite WHERE {
  ?person dbo:honoraryTitle dbr:Knight_Grand_Cross_of_the_Order_of_St_Michael_and_St_George ;
          foaf:name ?name .
  OPTIONAL { ?person dbo:deathPlace ?burialSite . }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
701,42,val,Give me the parent of Henuttawy (19th dynasty) and spouse of the father of Merneptah and parent of the child of Nefertari.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Merneptah> <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Henuttawy_(19th_dynasty)> . <http://dbpedia.org/resource/Nefertari> <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/ontology/spouse> ?v1 . },"```sparql
SELECT ?parent WHERE {
  ?henuttawy dbo:spouse ?ramessesII .
  ?ramessesII foaf:name ""Ramesses II""@en .
  ?merneptah dbo:father ?ramessesII .
  ?nephertari dbo:child ?child .
  ?nephertari dbo:spouse ?ramessesII .
  FILTER (STRSTARTS(LCASE(?henuttawy), LCASE(""Henuttawy"")))
  FILTER (STRSTARTS(LCASE(?merneptah), LCASE(""Merneptah"")))
  FILTER (STRSTARTS(LCASE(?nephertari), LCASE(""Nefertari"")))
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
959,18,val,Give me the member of University of Tsukuba and native of Japan and manager of 2013 Júbilo Iwata season.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Japan> . ?result <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/University_of_Tsukuba> . <http://dbpedia.org/resource/2013_Júbilo_Iwata_season> <http://dbpedia.org/ontology/manager> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  ?person dbo:nationality dbr:Japan .
  
  # Check if the person is a member of University of Tsukuba
  ?universityMember dbo:almaMater dbr:University_of_Tsukuba ;
                   dbp:name ?person .

  # Check if the person was manager of Júbilo Iwata in 2013
  ?managerPosition dbo:position ""Manager"" ;
                  dbo:agent ?person ;
                  dbo:endTime ?endTime .
  
  FILTER (?endTime >= ""2013-01-01T00:00:00Z""^^xsd:dateTime && 
          (?endTime <= ""2013-12-31T23:59:59Z""^^xsd:dateTime || 
           ?endTime > ""2013-12-31T23:59:59Z""^^xsd:dateTime))
  
  # Ensure the manager position is specifically for Júbilo Iwata
  ?managerPosition dbo:team dbr:Júbilo_Iwata .
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
404,20,val,"Give me the spouse of Princess Victoria Louise of Prussia and parent of the child, that is a royalty, of Ernest Augustus, Duke of Brunswick.","SELECT ?result WHERE { <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
SELECT ?spouse WHERE {
  wd:Q123456 wdt:P26 ?spouse . # Princess Victoria Louise of Prussia's spouse
  ?child wdt:P25 wd:Q123456 . # Child of Ernest Augustus, Duke of Brunswick
  ?child wdt:P22 ?parent .    # Parent of the child
  FILTER (?spouse = ?parent)
}
```

Note: Replace `wd:Q123456` with the actual DBpedia resource identifier for Princess Victoria Louise of Prussia and `wd:Q123456` in the second line with the identifier for Ernest Augustus, Duke of Brunswick.",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
232,26,val,"Give me the actor of the claim to fame, that is a film and a military conflict, of the professional in Actor, narrator and producer.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/occupation> ""Actor, narrator and producer""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/starring> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://dbpedia.org/ontology/knownFor> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  ?actor a dbo:Actor .
  ?actor dbo:profession dbr:Actor .
  ?actor dbo:profession dbr:Narrator .
  ?actor dbo:profession dbr:Producer .

  OPTIONAL { ?actor dbo:film dbr:Saving_Private_Ryan . }
  OPTIONAL { ?actor dbo:militaryConflict dbr:Military_Conflict_Name_Related_to_Saving_Private_Ryan . }

  FILTER EXISTS {
    ?actor dbo:film dbr:Saving_Private_Ryan .
  }
  FILTER EXISTS {
    ?actor dbo:militaryConflict ?militaryConflict .
    ?militaryConflict rdfs:label ""World War II""@en .
  }
}
```",3,5,4,3,1,3,3,71,0,0,3,0,0.0,0
281,21,val,Give me the war of the awardee of Knight Grand Cross of the Order of the Bath and war of New Zealand Army.,SELECT ?result WHERE { <http://dbpedia.org/resource/New_Zealand_Army> <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_the_Bath> . ?v1 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?war
WHERE {
  # Find individuals awarded Knight Grand Cross of the Order of the Bath
  ?person dbo:award [ 
    a dbo:Award ;
    dbo:name ""Knight Grand Cross of the Order of the Bath"" .
  ] .

  # Check if they were involved in any wars
  ?person dbo:militaryConflict ?war .

  # Find wars involving the New Zealand Army
  OPTIONAL {
    dbr:New_Zealand_Army dbo:militaryConflict ?nz_war .
    FILTER(?war = ?nz_war)
  }

  # Filter for World War II
  FILTER(STRSTARTS(STR(?war), ""World War II""))
}
```",3,3,4,2,2,3,3,71,0,0,9,0,0.0,0
488,41,val,"Give me the administration of Emperor Go-Yōzei and birth place of the commander in Boshin War and death place of the father, that is a politician, of Yūki Hideyasu.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Emperor_Go-Yōzei> . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Boshin_War> <http://dbpedia.org/ontology/commander> ?v2 . ?v4 <http://dbpedia.org/ontology/deathPlace> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Yūki_Hideyasu> <http://dbpedia.org/property/father> ?v4 . },"```sparql
# Query 1: Administration of Emperor Go-Yōzei
SELECT ?administration WHERE {
  dbpedia:Go_Yozei dbo:reignStartYear ?startYear .
  dbpedia:Go_Yozei dbo:reignEndYear ?endYear .
  BIND(CONCAT(""Emperor Go-Yōzei reigned from "", STR(?startYear), "" to "", STR(?endYear)) AS ?administration)
}

# Query 2: Birthplace of a Commander in the Boshin War (e.g., Saigō Takamori)
SELECT ?birthPlaceLabel WHERE {
  dbpedia:Saigo_Takamori dbo:birthPlace ?birthPlace .
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}

# Query 3: Death Place of Yūki Muneyoshi
SELECT ?deathPlaceLabel WHERE {
  dbpedia:Yuki_Muneyoshi dbo:deathPlace ?deathPlace .
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
767,31,val,"Give me the entity in the administration, that is a settlement, of the writer of Where It's At (Dustin Lynch album) and alma mater of Carl L. Nippert.",SELECT ?result WHERE { <http://dbpedia.org/resource/Where_It's_At_(Dustin_Lynch_album)> <http://dbpedia.org/property/writer> ?v1 . <http://dbpedia.org/resource/Carl_L._Nippert> <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://dbpedia.org/ontology/state> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://dbpedia.org/property/leaderParty> ?v1 . },"```sparql
SELECT ?settlement WHERE {
  ?entity dbo:birthPlace dbr:Madisonville,_Tennessee .
  FILTER EXISTS { ?entity dbo:writer dbr:Where_It's_At_(Dustin_Lynch_song) . }
  OPTIONAL { ?university dbo:almaMater dbr:Carl_L._Nippert . }
  ?settlement rdf:type dbo:Settlement .
  ?settlement dbo:partOf dbr:Madisonville,_Tennessee .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
994,34,val,Give me the band member of Don Dokken and associated musical artist of the associated musical artist of the reference to Watchtower.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Don_Dokken> . ?v3 <http://xmlns.com/foaf/0.1/name> ""Watchtower""@en . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
# Step 1: Find a band member of Don Dokken
SELECT ?bandMember WHERE {
  wd:Q123456 wdt:P106 wd:Q33999 . # Assuming Q123456 is Don Dokken and P106 is occupation (musician)
  wd:Q123456 wdt:P527 ?bandMember .
}

# Step 2: Find an associated musical artist of the band member
SELECT ?associatedArtist WHERE {
  ?bandMember wdt:P436 ?album . # Assuming P436 is album, to find collaborations
  ?album wdt:P175 ?associatedArtist .
}

# Step 3: Identify reference to Watchtower
SELECT ?artistWithWatchtowerRef WHERE {
  ?associatedArtist wdt:P463 wd:Q1234567 . # Assuming Q1234567 is Watchtower and P463 is member of band
}

# Step 4: Find the associated musical artist of the artist with Watchtower reference
SELECT ?finalAssociatedArtist WHERE {
  ?artistWithWatchtowerRef wdt:P436 ?album .
  ?album wdt:P175 ?finalAssociatedArtist .
}
```

Note: The above SPARQL queries are structured based on assumptions about DBpedia's data model and identifiers. You may need to adjust the property IDs (like P106, P527, etc.) and entity QIDs (like Q123456 for Don Dokken) according to actual DBpedia entries.",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
251,12,val,Give me the death place of Laura Mancinelli and location of Battle of Marengo and administration of Forza Italia (2013).,SELECT ?result WHERE { <http://dbpedia.org/resource/Laura_Mancinelli> <http://dbpedia.org/ontology/deathPlace> ?result . ?result <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Forza_Italia_(2013)> . <http://dbpedia.org/resource/Battle_of_Marengo> <http://dbpedia.org/ontology/place> ?result . },"```sparql
# Query to find the death place of Laura Mancinelli
SELECT ?deathPlace WHERE {
  dbpedia:en:Laura_Mancinelli dbo:deathPlace ?deathPlace .
}

UNION

# Query to find the location of the Battle of Marengo
SELECT ?location WHERE {
  dbpedia:Battle_of_Marengo dbo:location ?location .
}

UNION

# Query to find the administration associated with Forza Italia in 2013
SELECT DISTINCT ?administration WHERE {
  ?party rdf:type dbo:PoliticalParty ;
         rdfs:label ""Forza Italia""@en .
  ?administration dbo:member ?party ;
                  dbo:startDate ?start ;
                  dbo:endDate ?end .
  FILTER (?start <= ""2013-01-01""^^xsd:date && (?end >= ""2013-12-31""^^xsd:date || NOT EXISTS { ?administration dbo:endDate ?end }))
}
```",3,3,4,1,3,2,3,28,0,0,1,0,0.0,0
659,33,val,"Give me the commander in the war, that is an event and a military conflict, of the figure known, that is a military unit and an organisation, as 'Polish Horse' and commander in German campaign of 1813.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/German_campaign_of_1813> <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://dbpedia.org/property/nickname> ""'Polish Horse'""@en . ?v0 <http://dbpedia.org/ontology/battle> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?war WHERE {
  ?unit a dbo:MilitaryUnit ;
        rdfs:label ""Polish Horse""@en .
  
  ?unit dbo:commandedBy ?commander .

  ?commander dbo:participatedInMilitaryEngagement ?engagement .
  ?engagement dbo:conflict ?war .

  FILTER(CONTAINS(LCASE(?war), ""german campaign of 1813""))
}
```",4,8,5,3,2,3,3,71,0,0,30,0,0.0,0
547,42,val,Give me the resting place of the child of James Burton (property developer) and resting place of the awardee of Knight Grand Cross of the Order of St Michael and St George and resting place of Simon Cadell.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_St_Michael_and_St_George> . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/James_Burton_(property_developer)> <http://dbpedia.org/ontology/child> ?v2 . <http://dbpedia.org/resource/Simon_Cadell> <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
# Query for the resting place of John Wodehouse, 4th Earl of Kimberley (child of James Burton)
SELECT ?restingPlace WHERE {
  ?person dbo:parent dbc:James_Burton_(property_developer) .
  ?person rdfs:label ""John Wodehouse, 4th Earl of Kimberley""@en .
  ?person dbo:placeOfBurial ?restingPlace .
}

# Query for the resting place of a notable awardee of Knight Grand Cross of the Order of St Michael and St George
SELECT ?restingPlace WHERE {
  ?person dbo:awardTitle ""Knight Grand Cross of the Order of St Michael and St George""@en ;
          dbo:placeOfBurial ?restingPlace .
  FILTER(CONTAINS(LCASE(?person), ""notable person name"")) # Replace with a specific notable person's name
}

# Query for the resting place of Simon Cadell
SELECT ?restingPlace WHERE {
  ?person rdfs:label ""Simon Cadell""@en ;
          dbo:placeOfBurial ?restingPlace .
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
9,29,val,"Give me the alma mater of John Alderdice, Baron Alderdice and alma mater of the awardee of Royal Medal and figure known as QUB.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/almaMater> ?result . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Medal> . ?result <http://dbpedia.org/property/nickname> ""QUB""@en . <http://dbpedia.org/resource/John_Alderdice,_Baron_Alderdice> <http://dbpedia.org/ontology/almaMater> ?result . }","```sparql
# Query for John Alderdice, Baron Alderdice's alma mater
SELECT ?almaMater WHERE {
  wd:Q123456 dbp:almaMater ?almaMater .
}

UNION

# Query for a notable awardee of the Royal Medal (example: Richard P. Feynman)
SELECT ?almaMater WHERE {
  wd:Q678910 dbp:almaMater ?almaMater .
}

UNION

# Query for a prominent figure associated with QUB (example: Seamus Heaney)
SELECT ?almaMater WHERE {
  wd:Q135791 dbp:almaMater ?almaMater .
}
```

Note: Replace `wd:Q123456`, `wd:Q678910`, and `wd:Q135791` with the actual DBpedia IDs for John Alderdice, Baron Alderdice, a notable Royal Medal awardee, and a prominent figure associated with QUB, respectively.",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
9,30,val,"Give me the alma mater of Allen Hill (scientist) and alma mater of John Alderdice, Baron Alderdice and figure known as the nickname of Queen's University Belfast.","SELECT ?result WHERE { <http://dbpedia.org/resource/Queen's_University_Belfast> <http://dbpedia.org/property/nickname> ?v1 . <http://dbpedia.org/resource/John_Alderdice,_Baron_Alderdice> <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://dbpedia.org/property/nickname> ?v1 . <http://dbpedia.org/resource/Allen_Hill_(scientist)> <http://dbpedia.org/ontology/almaMater> ?result . }","```sparql
# Query for Allen Hill (scientist) alma mater
SELECT ?almaMater WHERE {
  ?person a dbo:Scientist ;
          foaf:name ""Allen Hill"" .
  ?person dbo:almaMater ?almaMater .
}

UNION

# Query for John Alderdice, Baron Alderdice alma mater
SELECT ?almaMater WHERE {
  ?person a dbo:Politician ;
          foaf:name ""John Alderdice"" ;
          schema:additionalName ""Baron Alderdice"" .
  ?person dbo:almaMater ?almaMater .
}

UNION

# Query for Queen's University Belfast nickname
SELECT ?nickname WHERE {
  ?university a dbo:CollegeOrUniversity ;
              foaf:name ""Queen's University Belfast"" .
  ?university dbo:nickname ?nickname .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
492,20,val,"Give me the person decedent at French Algeria and commander in the war, that is a military conflict and an event, of Frédéric-Georges Herr.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Frédéric-Georges_Herr> <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/French_Algeria> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?decedent ?war WHERE {
  # Find Frédéric-Georges Herr's related decedent in French Algeria
  ?herr a dbo:MilitaryPerson ;
       foaf:name ""Frédéric-Georges Herr""@en .
  
  OPTIONAL { 
    ?related dbr:French_Algeria dbo:deathPlace ?place ;
             dbo:decedent ?decedent .
    FILTER(CONTAINS(LCASE(STR(?place)), ""algeria""))
  }
  
  # Find the war he commanded
  ?herr dbo:militaryConflict ?war .
  ?war a dbo:MilitaryConflict, dbo:Event .
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
9,18,val,"Give me the figure known as QUB and alma mater of John Alderdice, Baron Alderdice and alma mater of Allen Hill (scientist).","SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ""QUB""@en . <http://dbpedia.org/resource/John_Alderdice,_Baron_Alderdice> <http://dbpedia.org/ontology/almaMater> ?result . <http://dbpedia.org/resource/Allen_Hill_(scientist)> <http://dbpedia.org/ontology/almaMater> ?result . }","```sparql
# Find the QID for Queen's University Belfast
SELECT ?qub WHERE {
  ?qub rdfs:label ""Queen's University Belfast""@en .
}

# Check if John Alderdice is an alumnus of Queen's University Belfast
SELECT ?johnAlderdice WHERE {
  ?johnAlderdice dbo:almaMater ?qub .
  ?qub rdfs:label ""Queen's University Belfast""@en .
  ?johnAlderdice foaf:name ""John Alderdice""@en .
}

# Check if Allen Hill is an alumnus of Queen's University Belfast
SELECT ?allenHill WHERE {
  ?allenHill dbo:almaMater ?qub .
  ?qub rdfs:label ""Queen's University Belfast""@en .
  ?allenHill foaf:name ""Allen Hill (scientist)""@en .
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
378,29,val,"Give me the claim to fame of Louis des Balbes de Berton de Crillon, 1st Duke of Mahón and war of the commander in Peninsular War and war of Carl Pontus Gahn.","SELECT ?result WHERE { <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Louis_des_Balbes_de_Berton_de_Crillon,_1st_Duke_of_Mahón> <http://dbpedia.org/ontology/knownFor> ?result . ?v3 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Peninsular_War> <http://dbpedia.org/ontology/commander> ?v3 . }","```sparql
# Query for Louis des Balbes de Berton de Crillon, 1st Duke of Mahón
SELECT ?achievement WHERE {
  wd:Q123456 rdfs:label ""Louis des Balbes de Berton de Crillon""@en .
  OPTIONAL { wd:Q123456 dbo:occupation dbr:Military_Commander . }
  OPTIONAL { wd:Q123456 dbo:knownFor ?achievement . }
}

# Query for Carl Pontus Gahn
SELECT ?contribution WHERE {
  wd:Q654321 rdfs:label ""Carl Pontus Gahn""@en .
  OPTIONAL { wd:Q654321 dbo:occupation dbr:Chemist . }
  OPTIONAL { wd:Q654321 dbo:knownFor ?contribution . }
}
```

Note: Replace `wd:Q123456` and `wd:Q654321` with the actual DBpedia resource identifiers for Louis des Balbes de Berton de Crillon and Carl Pontus Gahn, respectively. These can be found by searching their names on DBpedia.",4,4,5,2,3,3,3,71,0,0,2,0,0.0,0
10,15,val,"Give me the associated musical artist of the person born, that is an artist, as Matt Colton and professional in .","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> """"@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://dbpedia.org/property/birthName> ""Matt Colton""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artist WHERE {
  ?person a dbo:Person ;
          foaf:name ""Matt Colton""@en .
  ?person dbo:profession dbr:Musical_instrument_manufacturer ; # This is an approximation, as there's no direct 'mastering engineer' class
         dbo:associatedBandOrMusicalArtist ?artist .
  FILTER(?artist = dbr:Radiohead)
}
```",3,4,4,2,2,2,3,28,0,0,2,0,0.0,0
378,39,val,"Give me the war of Joaquín Blake and claim to fame of the commander in the war, that is a military conflict and a societal event and an event, of Thomas Trigge.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Joaquín_Blake> <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/ontology/commander> ?v1 . <http://dbpedia.org/resource/Thomas_Trigge> <http://dbpedia.org/ontology/battle> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/knownFor> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
SELECT ?war ?joaquinBlakeClaimToFame ?thomasTriggeClaimToFame WHERE {
  ?war dbo:wikiPageRedirects dbpedia-es:Guerra_de_la_Península .
  ?war rdf:type dbo:MilitaryConflict .

  OPTIONAL { 
    ?joaquinBlake dbo:participatedIn ?war ;
                   dbo:claimToFame ?joaquinBlakeClaimToFame .
  }

  OPTIONAL {
    ?thomasTrigge dbo:participatedIn ?war ;
                  dbo:claimToFame ?thomasTriggeClaimToFame .
  }
}
```",4,7,5,3,2,3,3,71,0,0,2,0,0.0,0
994,18,val,Give me the associated musical artist of Red Tide (band) and band member of Don Dokken and associated musical artist of S.A. Slayer.,SELECT ?result WHERE { <http://dbpedia.org/resource/S.A._Slayer> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Red_Tide_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Don_Dokken> . },"```sparql
# Query for Red Tide (band) and its association with Don Dokken
SELECT ?artist WHERE {
  ?redTide dbr:Red_Tide_(band) .
  ?redTide dbo:associatedMusicalArtist ?artist .
  OPTIONAL { 
    ?dokkenBand dbo:member ?artist ;
                rdfs:label ""Don_Dokken""@en .
  }
}

# Query for S.A. Slayer
SELECT ?artist WHERE {
  ?saSlayer dbr:S._A._Slayer ;
            dbo:associatedMusicalArtist ?artist .
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
783,12,val,"Give me the associated musical artist of Appietus and band member of the person born, that is an artist and a musical artist, as Priscilla Opoku-Kwarteng.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://dbpedia.org/property/birthName> ""Priscilla Opoku-Kwarteng""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . <http://dbpedia.org/resource/Appietus> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artist ?bandMember WHERE {
  # Find Appietus's associated musical artists
  OPTIONAL {
    ?appietus dbo:associatedMusicalArtist ?artist .
    FILTER (str(?appietus) = ""Appietus"")
  }

  # Identify Priscilla Opoku-Kwarteng and her band membership
  ?priscilla a dbo:Band ;
            dbo:member ?bandMember .

  FILTER (str(?priscilla) = ""Priscilla_Opoku-Kwarteng"" &&
          str(?bandMember) = ""FOKN_Bois"")

}
```",3,5,4,2,2,3,2,20,0,0,1,0,0.0,0
485,19,val,"Give me the birth place of Thomas Warner (poet) and entity in the region, that is a country, of Western European Time and entity in Nottinghamshire.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Nottinghamshire> . <http://dbpedia.org/resource/Thomas_Warner_(poet)> <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Western_European_Time> . ?result <http://dbpedia.org/ontology/country> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
# Query for birthplace of Thomas Warner (poet)
SELECT ?birthPlace WHERE {
  ?person a dbo:Poet ;
          foaf:name ""Thomas Warner"" .
  ?person dbo:birthPlace ?birthPlace .
}

UNION

# Query for country in Western European Time zone
SELECT DISTINCT ?country WHERE {
  ?country a dbo:Country ;
           dbo:timeZone ?tz .
  FILTER(CONTAINS(LCASE(str(?tz)), ""western european time""))
}

UNION

# Query for entity in Nottinghamshire
SELECT DISTINCT ?entity WHERE {
  ?entity dbo:location ?place .
  ?place rdfs:label ""Nottinghamshire""@en .
}
```",4,5,5,2,3,2,3,28,0,0,1,0,0.0,0
427,37,val,Give me the party of the father of the alumnus of Massachusetts Institute of Technology and party of Romano Prodi.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/ontology/party> ?result . ?v0 <http://dbpedia.org/property/father> ?v3 . ?v0 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Massachusetts_Institute_of_Technology> . },"```sparql
# Query for the political party of Bill Gates' father
SELECT ?fatherParty WHERE {
  ?alumnus dbo:almaMater dbr:Massachusetts_Institute_of_Technology .
  ?alumnus foaf:name ""Bill Gates""@en .
  ?alumnus dbo:parent ?father .
  ?father foaf:name ?fatherName .
  OPTIONAL { ?father dbo:partyAffiliation ?fatherParty . }
}

UNION

# Query for the political party of Romano Prodi
SELECT ?prodiParty WHERE {
  dbr:Romano_Prodi dbo:partyAffiliation ?prodiParty .
}
```",4,4,5,3,2,3,3,71,0,0,3,0,0.0,0
378,24,val,"Give me the war of the commander in Peninsular War and claim to fame of Louis des Balbes de Berton de Crillon, 1st Duke of Mahón.","SELECT ?result WHERE { <http://dbpedia.org/resource/Louis_des_Balbes_de_Berton_de_Crillon,_1st_Duke_of_Mahón> <http://dbpedia.org/ontology/knownFor> ?result . ?v2 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Peninsular_War> <http://dbpedia.org/ontology/commander> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?warCommanded ?claimToFame WHERE {
  # Find the war commanded by Louis des Balbes de Berton de Crillon during the Peninsular War
  OPTIONAL {
    ?crillon dbo:commanderOf ?peninsularWar .
    ?peninsularWar rdfs:label ?warLabel .
    FILTER(CONTAINS(LCASE(?warLabel), ""peninsular war""))
    BIND(""Peninsular War"" AS ?warCommanded)
  }

  # Find the claim to fame of Louis des Balbes de Berton de Crillon
  {
    dbr:Louis_des_Balbes_de_Berton_de_Crillon_1st_Duke_of_Mahón dbo:claimToFame ?fame .
    ?fame rdfs:label ?fameLabel .
    BIND(?fameLabel AS ?claimToFame)
  }
  
  UNION
  {
    dbr:Louis_des_Balbes_de_Berton_de_Crillon_1st_Duke_of_Mahón dbo:honoraryTitle ?title .
    ?title rdfs:label ?titleLabel .
    FILTER(CONTAINS(LCASE(?titleLabel), ""duke of mahón""))
    BIND(""Duke of Mahón"" AS ?claimToFame)
  }
  
  # Ensure we are querying about Louis des Balbes de Berton de Crillon
  VALUES ?crillon { dbr:Louis_des_Balbes_de_Berton_de_Crillon_1st_Duke_of_Mahón }
}
```",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
617,11,val,"Give me the child of the child, that is a royalty, of Boleslaus I, Duke of Bohemia and parent of Mieszko II Lambert.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/child> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Boleslaus_I,_Duke_of_Bohemia> . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Mieszko_II_Lambert> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?grandchild WHERE {
  # Boleslaus I, Duke of Bohemia
  ?boleslaus1 dbo:spouse ?spouse .
  ?boleslaus1 dbo:parent ?parentBoleslaus .

  # Child of Boleslaus I (Mieszko I)
  ?mieszko1 dbo:parent ?boleslaus1 ;
           dbp:spouse ?spouse2 .

  # Mieszko II Lambert's parent
  ?mieszko2 dbp:father ?mieszko1 .

  # Child of Mieszko I (Mieszko II)
  ?grandchild dbo:parent ?mieszko1 .
  
  FILTER EXISTS { ?grandchild a dbo:Monarch } # Ensure the grandchild is royalty
}
```",3,4,4,2,2,3,2,20,0,5,1,0.0,0.0,0
659,22,val,"Give me the military force of the force, that is a societal event and an event and a military conflict, of Rutger Jan Schimmelpenninck and commander in German campaign of 1813.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/German_campaign_of_1813> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce ?commander WHERE {
  # Rutger Jan Schimmelpenninck's involvement in military forces
  ?militaryForce dbo:member dbr:Rutger_Jan_Schimmelpenninck .
  
  # The military force is involved in a societal event, an event, and a military conflict
  ?event dbo:participatedIn ?militaryForce ;
         a dbo:SocietalEvent ;
         a dbo:Event ;
         a dbo:MilitaryConflict .

  # The event is related to the German campaign of 1813
  ?event dbo:date ?date .
  FILTER (YEAR(?date) = 1813 && CONTAINS(LCASE(str(?event)), ""german campaign""))

  # Find the commander of this military force during the campaign
  ?commander dbo:commanded ?militaryForce .

}
```",3,6,4,2,2,3,3,71,0,0,7,0,0.0,0
281,37,val,"Give me the war of New Zealand Army and entity in the birth place, that is a country, of the leader, that is a politician, of 1962 New South Wales state election.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://dbpedia.org/ontology/birthPlace> ?v3 . ?result <http://dbpedia.org/ontology/place> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/New_Zealand_Army> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/1962_New_South_Wales_state_election> <http://dbpedia.org/property/leader> ?v0 . },"```sparql
SELECT DISTINCT ?war WHERE {
  # Step 1: Identify politicians associated with the 1962 NSW state election
  ?politician dbo:office dbo:Premier_of_New_South_Wales .
  ?politician dbo:election dbr:New_South_Wales_state_election,_1962 .

  # Step 2: Get their birthplaces that are countries
  ?politician dbo:birthPlace ?country .
  FILTER (isLiteral(?country) && datatype(?country) = xsd:string)
  
  # Step 3: Find wars involving the New Zealand Army and these countries
  ?war dbo:participatingMilitaryUnit dbr:New_Zealand_Army ;
       dbo:participatingMilitaryUnit ?unit .
  ?unit dbo:location ?country .
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
378,37,val,"Give me the war of the commander in the reference, that is a military conflict, to Peninsular War and claim to fame of Louis des Balbes de Berton de Crillon, 1st Duke of Mahón.","SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""Peninsular War""@en . <http://dbpedia.org/resource/Louis_des_Balbes_de_Berton_de_Crillon,_1st_Duke_of_Mahón> <http://dbpedia.org/ontology/knownFor> ?result . ?v0 <http://dbpedia.org/ontology/commander> ?v3 . ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war WHERE {
  ?crillon dbo:nationality dbr:France ;
           foaf:name ""Louis des Balbes de Berton de Crillon, 1st Duke of Mahón""@en .
  
  ?crillon dbo:participatedInMilitaryConflict ?war .

  OPTIONAL { 
    ?peninsularWar dbo:wikiPageRedirects ?relatedWar .
    ?peninsularWar foaf:name ""Peninsular War""@en ;
                  dbo:wikiPageDisambiguates ?disambiguation .
    
    FILTER(?relatedWar = ?war || ?disambiguation = ?war)
  }
}
```",4,5,5,3,2,3,3,71,0,0,2,0,0.0,0
92,20,val,"Give me the associated musical artist of the person born, that is an artist, as Jim Sheppard and band member of Nevermore.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ""Jim Sheppard""@en . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Nevermore> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artist WHERE {
  ?person dbo:birthName ""Jim Sheppard"" .
  ?person dbo:memberOfBand dbr:Nevermore .
  ?person a dbo:Musician .
  ?person foaf:name ?artist .
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
54,41,val,Give me the parent of the child of Narapati I of Ava and child of the father of Soe Min Wimala Dewi and predecessor of Ameitta Thiri Maha Dhamma Dewi of Ava.,SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Narapati_I_of_Ava> . <http://dbpedia.org/resource/Soe_Min_Wimala_Dewi> <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Ameitta_Thiri_Maha_Dhamma_Dewi_of_Ava> . ?v4 <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?narapatiChild ?parentOfNarapatiChild ?soeMinFather ?childOfSoeMinFather ?predecessor
WHERE {
  # Narapati I of Ava and his child
  dbr:Narapati_I_of_Ava dbo:spouse ?narapatiSpouse .
  ?narapatiSpouse dbo:child ?narapatiChild .

  # Parent of Narapati I's child (should be Narapati I)
  ?narapatiChild dbo:parent ?parentOfNarapatiChild .

  # Soe Min Wimala Dewi and her father
  dbr:Soe_Min_Wimala_Dewi dbo:father ?soeMinFather .

  # Child of Soe Min Wimala Dewi's father
  ?soeMinFather dbo:child ?childOfSoeMinFather .

  # Predecessor of Ameitta Thiri Maha Dhamma Dewi
  dbr:Ameitta_Thiri_Maha_Dhamma_Dewi_of_Ava dbo:predecessor ?predecessor .
  
  # Ensure the child is also the predecessor
  FILTER (?childOfSoeMinFather = ?predecessor)
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
251,14,val,"Give me the location of Battle of Marengo and administration of the ruling party, that is a political party and an organisation, in Sicily.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/leaderParty> ?v2 . <http://dbpedia.org/resource/Sicily> <http://dbpedia.org/property/leaderParty> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. <http://dbpedia.org/resource/Battle_of_Marengo> <http://dbpedia.org/ontology/place> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
# Query to get the location of the Battle of Marengo
SELECT ?location WHERE {
  dbpedia:Battle_of_Marengo dbo:place dbpedia:Location .
  dbpedia:Location rdfs:label ?location .
  FILTER (lang(?location) = 'en')
}

UNION

# Query to find the ruling party in Sicily's administration
SELECT DISTINCT ?partyLabel WHERE {
  ?region dbr:Sicily ;
          dbo:government ?government .
  ?government dbo:headOfGovernment ?president .
  ?president dbo:politicalParty ?party .
  ?party rdfs:label ?partyLabel .
  FILTER (lang(?partyLabel) = 'en')
}
```",3,5,4,2,2,2,3,28,0,0,1,0,0.0,0
712,13,val,"Give me the capital of the country of the military force, that is an organisation and a military unit, of Vyoshenskaya Uprising.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/ontology/country> ?v1 . ?v0 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Vyoshenskaya_Uprising> . ?v1 <http://dbpedia.org/ontology/capital> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. },"```sparql
SELECT ?capital WHERE {
  ?uprising dbo:wikiPageRedirects db:Vyoshenskaya_Uprising .
  ?uprising dbo:militaryForce ?militaryForce .
  ?militaryForce a dbo:MilitaryUnit ;
                 dbo:country ?country .
  ?country dbo:capital ?capital .
}
```",3,5,4,3,1,3,2,20,0,0,3,0,0.0,0
9,31,val,"Give me the alma mater of Allen Hill (scientist) and alma mater of the mayor, that is a politician, of the entity, that is an organisation, in Belfast.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/leader> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Belfast> . ?v0 <http://dbpedia.org/ontology/almaMater> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Allen_Hill_(scientist)> <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
# Query to get the alma mater of Allen Hill (scientist)
SELECT ?almaMater WHERE {
  ?person foaf:name ""Allen Hill"" .
  ?person dbo:occupation dbp:Scientist .
  ?person dbo:almaMater ?almaMater .
}

UNION

# Query to find an organization in Belfast
SELECT DISTINCT ?organization WHERE {
  ?organization dbo:location dbr:Belfast ;
                a dbo:Organisation .
}

UNION

# Query to get the mayor of Belfast
SELECT ?mayor WHERE {
  ?mayor dbo:office ""Mayor of Belfast"" ;
         dbo:city dbr:Belfast .
}

UNION

# Query to get the alma mater of the mayor of Belfast
SELECT ?almaMater WHERE {
  ?person dbo:office ""Mayor of Belfast"" ;
          dbo:almaMater ?almaMater .
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
492,33,val,"Give me the person decedent at French Algeria and commander in the war, that is a military conflict and an event, of the commander in Battle of Verdun.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/ontology/battle> ?v3 . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/French_Algeria> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Battle_of_Verdun> <http://dbpedia.org/ontology/commander> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?deathPlace WHERE {
  ?person dbo:commanderOf ?verdunEvent .
  ?verdunEvent rdf:type dbo:MilitaryConflict ;
               rdfs:label ""Battle of Verdun""@en .

  OPTIONAL { ?person dbo:placeOfBirth ?birthPlace . }
  
  ?algeriaEvent rdf:type dbo:Event ;
                dbo:location dbr:French_Algeria ;
                dbo:participant ?person .
  
  ?deathEvent dbo:agent ?person ;
              dbo:place dbr:French_Algeria .

  FILTER (lang(?verdunEvent) = ""en"" && lang(?algeriaEvent) = ""en"")
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
427,36,val,"Give me the party of the person born, that is an office holder and a politician, as the birth name of Romano Prodi and reference to Partito Popolare Italiano.","SELECT ?result WHERE { <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/property/birthName> ?v0 . ?result <http://xmlns.com/foaf/0.1/name> ""Partito Popolare Italiano""@en . ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?v1 <http://dbpedia.org/ontology/party> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthName ?party 
WHERE {
  dbr:Romano_Prodi dbo:birthName ?birthName .
  OPTIONAL { dbr:Romano_Prodi dbo:politicalParty ?party . }
  FILTER (?party = dbr:Partito_Popolare_Italiano)
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
778,14,val,"Give me the author of the work, that is a software, of the author of Pushd and popd.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/author> ?v2 . <http://dbpedia.org/resource/Pushd_and_popd> <http://dbpedia.org/property/author> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Software>. ?v0 <http://dbpedia.org/ontology/author> ?result . },"```sparql
SELECT ?work ?author WHERE {
  ?person dbo:givenName ""Bill"" .
  ?person dbo:familyName ""Joy"" .
  ?person dbo:worksFor dbr:University_of_California,_Berkeley .
  
  ?software dbo:creator ?person .
  ?software rdf:type dbo:Software .
  FILTER(CONTAINS(LCASE(?software), ""bsd"")) .

  OPTIONAL { ?software dbo:author ?author . }
}
```",3,4,4,3,1,3,2,20,0,0,2,0,0.0,0
959,29,val,"Give me the native of the residence, that is a country, of Yōichi Masuzoe and member of University of Tsukuba and manager of 2013 Júbilo Iwata season.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Yōichi_Masuzoe> <http://dbpedia.org/property/residence> ?v3 . <http://dbpedia.org/resource/2013_Júbilo_Iwata_season> <http://dbpedia.org/ontology/manager> ?result . ?result <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/University_of_Tsukuba> . ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?country WHERE {
  ?person a dbo:Person ;
          foaf:name ""Yōichi Masuzoe""@en .
  OPTIONAL { ?person dbo:nationality ?nationality . }
  OPTIONAL { ?person dbo:residence ?residence . }
  FILTER (
    (strstarts(str(?nationality), str(dbr:)) || 
     strstarts(str(?residence), str(dbr:)))
  )
  BIND(
    IF(BOUND(?nationality), ?nationality, ?residence) AS ?country
  )
}
```",4,5,5,2,3,3,3,71,0,3,1,0.0,0.0,0
820,12,val,Give me the professional in  and child of the parent of Jason Schwartzman.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Jason_Schwartzman> . ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
SELECT ?parent ?sibling ?profession WHERE {
  # Find Jason Schwartzman and his parent(s)
  dbpedia:Jason_Schwartzman dbo:child ?parent .
  
  # For each parent, find their children (siblings of Jason or Jason himself)
  ?parent dbo:child ?sibling .

  # Get the profession of that sibling
  ?sibling dbo:occupation ?profession .
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
801,18,val,Give me the professional in  and producer of Westside Story (song) and associated musical artist of Chris Taylor (music producer).,"SELECT ?result WHERE { <http://dbpedia.org/resource/Chris_Taylor_(music_producer)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Westside_Story_(song)> <http://dbpedia.org/ontology/producer> ?result . ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
# Query for the professional in and producer of Westside Story (song)
SELECT ?producer ?profession WHERE {
  ?song dcterms:title ""West Side Story"" .
  ?song dbo:composer ?producer .
  OPTIONAL { ?producer dbo:occupation ?profession . }
}

UNION

# Query for associated musical artist(s) of Chris Taylor, the music producer
SELECT DISTINCT ?artist WHERE {
  ?producer foaf:name ""Chris Taylor (music producer)"" .
  ?production dbo:producer ?producer .
  ?production dbo:musicalArtist ?artist .
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
184,20,val,Give me the child of the child of Archduke Joseph Karl of Austria and parent of Géza von Habsburg.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Géza_von_Habsburg> . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Karl_of_Austria> . },"```sparql
SELECT ?greatGrandChild WHERE {
  # Archduke Joseph Karl of Austria's child
  ?child dbr:Archduke_Joseph_Karl_of_Austria dbo:child ?grandchild .
  
  # The grandchild (great-grandchild of Archduke Joseph Karl)
  ?grandchild a dbo:Person ;
             dbo:parent ?greatGrandChild .

  # Géza von Habsburg's parent
  ?parent dbr:Géza_von_Habsburg dbo:parent .
  
  # Match the great-grandchild with Géza's parent
  FILTER(?greatGrandChild = ?parent)
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
54,28,val,Give me the child of the father of Soe Min Wimala Dewi and predecessor of Ameitta Thiri Maha Dhamma Dewi of Ava and parent of Thado Minsaw of Prome.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Ameitta_Thiri_Maha_Dhamma_Dewi_of_Ava> . <http://dbpedia.org/resource/Soe_Min_Wimala_Dewi> <http://dbpedia.org/property/father> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Find Soe Min Wimala Dewi's father
  ?soeMinWimalaDewi dbo:father ?father .
  FILTER(STR(?soeMinWimalaDewi) = ""Soe_Min_Wimala_Dewi"")

  # Find Ameitta Thiri Maha Dhamma Dewi of Ava and her predecessor
  ?ameittaThiriMahaDhammaDewi dbo:predecessor ?predecessor .
  FILTER(STR(?ameittaThiriMahaDhammaDewi) = ""Ameitta_Thiri_Maha_Dhamma_Dewi_of_Ava"")

  # Find Thado Minsaw of Prome and his parent
  ?thadoMinsaw dbo:parent ?parent .
  FILTER(STR(?thadoMinsaw) = ""Thado_Minsaw_of_Prome"")

  # The person we are looking for is the child of Soe Min Wimala Dewi's father,
  # predecessor of Ameitta Thiri Maha Dhamma Dewi, and parent of Thado Minsaw
  ?father dbo:child ?person .
  ?predecessor = ?person .
  ?parent = ?person .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
161,21,val,"Give me the military force of the force, that is a societal event and an event and a military conflict, of Francisco Franco and commander in Biscay Campaign.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Franco> . <http://dbpedia.org/resource/Biscay_Campaign> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce WHERE {
  ?event dbo:participatedInMilitaryConflict dbr:Spanish_Civil_War .
  ?event dbo:commandedBy dbr:Franco_Francisco .
  ?event dbo:location dbr:Biscay_Campaign .
  ?event dbo:militaryForce ?militaryForce .
  FILTER(?militaryForce = dbr:Army_of_Africa)
}
```",3,6,4,2,2,3,3,71,0,0,3,0,0.0,0
435,13,val,"Give me the region of Greenwich Mean Time and territory administered from the figure known, that is a settlement and a town and Icelandic, as Land of fire and ice.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/capital> ?v1 . ?v1 <http://dbpedia.org/property/nickname> ""Land of fire and ice""@en . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Iceland>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Greenwich_Mean_Time> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Town>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?region ?administeredTerritory WHERE {
  VALUES ?settlement { dbr:Iceland }
  
  OPTIONAL {
    ?settlement dbo:timeZone ?region .
  }

  OPTIONAL {
    ?settlement dbo:administrativeRegion ?administeredTerritory .
  }
}
```",3,6,4,2,2,2,3,28,0,2,1,0.0,0.0,0
54,40,val,Give me the child of the father of the child of Thinkhaya of Pagan and parent of Thado Minsaw of Prome and predecessor of Ameitta Thiri Maha Dhamma Dewi of Ava.,SELECT ?result WHERE { <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Ameitta_Thiri_Maha_Dhamma_Dewi_of_Ava> . <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://dbpedia.org/ontology/child> ?result . ?v2 <http://dbpedia.org/property/father> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Thinkhaya of Pagan's child
  ?thinkhayaChild dbo:childOf dbr:Thinkhaya_of_Pagan .
  
  # Father of the child of Thinkhaya is Thinkhaya himself
  ?thinkhaya dbo:parent ?thinkhayaChild .

  # Parent of Thado Minsaw of Prome
  ?thadoMinsawParent dbo:parent dbr:Thado_Minsaw_of_Prome .
  
  # Predecessor of Ameitta Thiri Maha Dhamma Dewi of Ava
  ?ameittaPredecessor dbo:predecessor dbr:Ameitta_Thiri_Maha_Dhamma_Dewi_of_Ava .

  # Find the person who fits all criteria
  FILTER (?thinkhayaChild = ?thadoMinsawParent && ?thinkhayaChild = ?ameittaPredecessor)
  
  # Return the person
  BIND(?thinkhayaChild AS ?person)
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
161,37,val,"Give me the military force of the force, that is a societal event and a military conflict, of the predecessor of Indalecio Prieto and commander in Biscay Campaign.",SELECT ?result WHERE { <http://dbpedia.org/resource/Biscay_Campaign> <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Indalecio_Prieto> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://dbpedia.org/ontology/commander> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce WHERE {
  # Find Indalecio Prieto's predecessor in a relevant political role
  ?prieto dbo:predecessor ?predecessor .
  ?predecessor rdfs:label ""Indalecio Prieto""@en .

  # Identify the commander of the Biscay Campaign
  ?commander dbo:role ?biscayCampaignRole .
  ?biscayCampaignRole rdfs:label ""Biscay Campaign""@en .
  
  # Find the military force associated with both the societal event and military conflict
  ?militaryForce dbo:partOfMilitaryConflict ?conflict .
  ?conflict rdfs:label ""Spanish Civil War""@en .

  ?militaryForce dbo:commandedBy ?commander .
}
```",4,6,5,3,2,3,3,71,0,0,3,0,0.0,0
421,14,val,Give me the native of the birthplace of Samir Bekrić and band member of Senidah.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . <http://dbpedia.org/resource/Samir_Bekrić> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Senidah> . },"```sparql
SELECT ?birthPlaceLabel WHERE {
  wd:QXXXXX dbo:nationality dbr:Bosnia_and_Herzegovina .
  wd:QXXXXX dbo:birthPlace ?birthPlace .
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""en"". }
}
```

```sparql
SELECT ?nativeLanguageLabel WHERE {
  ?birthPlace wdt:P37 ?country .
  ?country p:P2937/ps:P2937 ?nativeLanguage .
  FILTER EXISTS { ?nativeLanguage wdt:P31 wd:Q34799 } # Instance of Language
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""en"". }
}
```

Note: Replace `wd:QXXXXX` with the actual DBpedia identifier for Samir Bekrić once it is known.",3,3,4,2,2,2,3,28,0,0,2,0,0.0,0
9,25,val,Give me the figure known as the nickname of Queen's University Belfast and alma mater of Allen Hill (scientist).,SELECT ?result WHERE { <http://dbpedia.org/resource/Allen_Hill_(scientist)> <http://dbpedia.org/ontology/almaMater> ?result . <http://dbpedia.org/resource/Queen's_University_Belfast> <http://dbpedia.org/property/nickname> ?v1 . ?result <http://dbpedia.org/property/nickname> ?v1 . },"```sparql
SELECT ?nickname WHERE {
  dbpedia:Queen's_University_Belfast rdfs:label ?nickname .
  FILTER (lang(?nickname) = 'en')
  
  OPTIONAL {
    dbpedia:Allen_Hill dbo:almaMater dbpedia:Queen's_University_Belfast .
  }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
404,43,val,"Give me the spouse of Princess Victoria Louise of Prussia and parent of the child, that is a royalty, of the parent, that is a royalty, of Prince George William of Hanover and child of Ernest Augustus, Crown Prince of Hanover.","SELECT ?result WHERE { <http://dbpedia.org/resource/Prince_George_William_of_Hanover> <http://dbpedia.org/ontology/parent> ?v0 . ?result <http://dbpedia.org/ontology/child> ?v4 . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/child> ?v4 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ernest_Augustus,_Crown_Prince_of_Hanover> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Princess Victoria Louise of Prussia's spouse
  dbr:Princess_Victoria_Louise_of_Prussia dbo:spouse ?princeErnstAugust .

  # Prince Ernst August of Hanover (child of Ernest Augustus, Crown Prince of Hanover)
  ?ernestAugustCrownPrince dbo:child ?princeErnstAugust1954 .
  dbr:Ernest_August,_Crown_Prince_of_Hanover ?ernestAugustCrownPrince .

  # Check if the spouse is royalty and has a child who is royalty
  ?princeErnstAugust1954 dbo:spouse ?spouse .
  FILTER EXISTS { ?spouse dbo:title ?title . FILTER(CONTAINS(LCASE(?title), ""royalty"")) }
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
959,26,val,"Give me the native of the residence, that is a country, of the leader, that is a politician, of 2010 Japanese House of Councillors election.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/property/residence> ?v0 . ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . <http://dbpedia.org/resource/2010_Japanese_House_of_Councillors_election> <http://dbpedia.org/property/leader> ?v2 . },"```sparql
SELECT DISTINCT ?native WHERE {
  # Step 1: Identify the leader associated with the 2010 Japanese House of Councillors election
  ?election dbo:electionDate ?date .
  FILTER (YEAR(?date) = 2010 && CONTAINS(LCASE(STR(?election)), ""japanese house of councillors""))
  
  ?leader dbo:officeHolderOf ?election ;
          rdf:type dbo:Politician .

  # Step 2: Find the residence of this leader
  ?leader dbo:residence ?residence .

  # Step 3: Check if the residence is a country
  ?residence rdf:type dbo:Country .
  
  # Get the native place or nationality (assuming it's related to their residence)
  ?leader dbo:nationality ?native .
}
```",3,5,4,3,1,3,3,71,0,0,8419,0,0.0,0
391,42,val,"Give me the actor of The Departed and native of the figure known as Hub City and actor of the movie, that is a movie and a work and a television show, with Roz Ryan.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Roz_Ryan> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://dbpedia.org/property/starring> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v2 <http://dbpedia.org/property/nickname> ""Hub City""@en . ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . <http://dbpedia.org/resource/The_Departed> <http://dbpedia.org/ontology/starring> ?result . }","```sparql
SELECT ?actor WHERE {
  # Find actor of The Departed
  ?movie dbpedia-owl:title ""The Departed""@en .
  ?movie dbo:starring ?actor .

  # Check if the actor has a connection to Pittsburgh (Hub City)
  OPTIONAL { 
    ?actor dbo:nativePlace dbr:Pittsburgh .
  }

  # Find works with Roz Ryan
  OPTIONAL {
    ?work dbo:creator ?rozRyan ;
          rdf:type ?type .
    FILTER (?type IN (dbpedia-owl:Film, dbpedia-owl:TVSeries))
    ?rozRyan rdfs:label ""Roz Ryan""@en .
    ?work dbo:starring ?actor .
  }
}
```",5,8,6,2,3,3,3,71,0,0,1,0,0.0,0
378,22,val,Give me the war of Carl Pontus Gahn and claim to fame of the commander in Great Siege of Gibraltar.,SELECT ?result WHERE { <http://dbpedia.org/resource/Great_Siege_of_Gibraltar> <http://dbpedia.org/ontology/commander> ?v1 . ?v1 <http://dbpedia.org/ontology/knownFor> ?result . <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
# Query to find the war Carl Pontus Gahn was involved in
SELECT ?war WHERE {
  ?person rdfs:label ""Carl Pontus Gahn""@en .
  ?person dbo:militaryConflict ?war .
}

# Query to find the commander of the Great Siege of Gibraltar and their claim to fame
SELECT ?commander ?fame WHERE {
  ?siege rdfs:label ""Great Siege of Gibraltar""@en ;
         dbo:commander ?commander .
  OPTIONAL { ?commander dbo:notableFor ?fame }
}
```",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
232,37,val,"Give me the actor of the claim to fame, that is a film and a military conflict, of the professional in Actor, narrator and producer and native of London.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/London> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/ontology/starring> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v0 <http://dbpedia.org/ontology/knownFor> ?v3 . ?v0 <http://dbpedia.org/property/occupation> ""Actor, narrator and producer""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  ?film dbo:starring ?actor .
  ?film rdfs:label ?title .
  FILTER CONTAINS(LCASE(?title), ""henry v"") .
  OPTIONAL { ?film dbo:genre ?genre . FILTER(CONTAINS(LCASE(STR(?genre)), ""war"")) }
  ?person dbo:birthPlace dbr:Belfast ;
          dbo:occupation dbr:Actor ;
          dbo:occupation dbr:Narrator ;
          dbo:occupation dbr:Film_producer .
  ?film dbo:starring ?person .
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
959,28,val,"Give me the native of Japan and manager of 2013 Júbilo Iwata season and member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of Eiji Ōtsuka.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/team> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/2013_Júbilo_Iwata_season> <http://dbpedia.org/ontology/manager> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Japan> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. <http://dbpedia.org/resource/Eiji_Ōtsuka> <http://dbpedia.org/ontology/almaMater> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?university WHERE {
  ?person rdfs:label ""Eiji Ōtsuka""@en .
  ?person dbo:nationality dbr:Japan .
  ?person dbo:managerOf dbr:Júbilo_Iwata_season_2013 .
  ?person dbo:almaMater ?university .
  FILTER (lang(?person) = 'en')
  ?university a dbo:EducationalInstitution ;
              dbo:country dbr:Japan .
}
```",4,8,5,2,3,3,3,71,0,0,1,0,0.0,0
232,40,val,Give me the actor of Dog Soldiers (film) and child of the person born as the birth name of Jon Pertwee and native of London.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ?v2 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/London> . <http://dbpedia.org/resource/Dog_Soldiers_(film)> <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/property/birthName> ?v2 . ?v1 <http://dbpedia.org/ontology/child> ?result . },"```sparql
SELECT ?actor ?child WHERE {
  # Find the actor of ""Dog Soldiers""
  ?film dcterms:title ""Dog Soldiers""@en .
  ?film dbo:starring ?actor .

  # Find Jon Pertwee's birth name and native place
  ?jonPertwee foaf:name ""John Julian Pertwee"" ;
              dbo:nativePlace ?london .

  FILTER (CONTAINS(LANG(?london), ""en"") && STRSTARTS(STR(?london), ""London""))

  # Find the child of Jon Pertwee
  ?jonPertwee dbo:child ?child .
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
77,11,val,Give me the force of Alexander I of Russia and war of the awardee of Golden Weapon for Bravery.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Golden_Weapon_for_Bravery> . ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Alexander_I_of_Russia> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?force ?awardee WHERE {
  # Find Alexander I's military force
  dbr:Alexander_I_of_Russia dbo:militaryServiceIn ?force .
  
  # Find a recipient of the Golden Weapon for Bravery during the Napoleonic Wars
  ?awardee dbo:awardReceived dbr:Golden_Weapon_for_Bravery ;
           dbo:participatedInMilitaryConflict dbr:Napoleonic_Wars .
}
```",3,3,4,2,2,3,2,20,0,0,11,0,0.0,0
959,33,val,"Give me the native of the residence, that is a country, of the leader, that is a politician, of 2010 Japanese House of Councillors election and member of University of Tsukuba.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?result <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/University_of_Tsukuba> . ?v0 <http://dbpedia.org/property/residence> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/2010_Japanese_House_of_Councillors_election> <http://dbpedia.org/property/leader> ?v0 . },"```sparql
SELECT ?nativeCountry WHERE {
  ?person dbo:almaMater dbr:University_of_Tsukuba ;
          dbo:officeHolder ?office .
  
  ?office dbo:election dbr:2010_Japanese_House_of_Councillors_election .

  OPTIONAL { 
    ?person dbo:residence ?residence .
    FILTER (isIRI(?residence) && strstarts(str(?residence), ""http://dbpedia.org/resource/""))
  }
  
  OPTIONAL {
    ?person dbo:nationality ?nativeCountry .
    FILTER (isIRI(?nativeCountry) && strstarts(str(?nativeCountry), ""http://dbpedia.org/resource/""))
  }

  # Ensure the residence is a country
  ?residence rdf:type dbr:Country .

  # Return only if nativeCountry is defined
  FILTER (!isBlank(?nativeCountry))
}
```",4,6,5,3,2,3,3,71,0,0,84,0,0.0,0
16,29,val,Give me the professional in the profession of Satomi Ishihara and person born as Georgeanne Marie Rice and spouse of Ted McGinley.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Satomi_Ishihara> <http://dbpedia.org/property/occupation> ?v3 . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/occupation> ?v3 . ?result <http://dbpedia.org/property/birthName> ""Georgeanne Marie Rice""@en . }","```sparql
# Query to find the profession of Satomi Ishihara
SELECT ?profession WHERE {
  wd:Q123456 rdfs:label ""Satomi Ishihara""@en .
  wd:Q123456 dbo:occupation ?occupation .
  ?occupation skos:prefLabel ?profession .
  FILTER(LANG(?profession) = 'en')
}

UNION

# Query to find the profession of Anne Heche (Georgeanne Marie Rice)
SELECT ?profession WHERE {
  wd:Q789012 rdfs:label ""Anne Heche""@en .
  wd:Q789012 dbo:occupation ?occupation .
  ?occupation skos:prefLabel ?profession .
  FILTER(LANG(?profession) = 'en')
}

UNION

# Query to find the spouse of Ted McGinley and their profession
SELECT ?spouseProfession WHERE {
  wd:Q345678 rdfs:label ""Ted McGinley""@en .
  wd:Q345678 dbo:spouse ?spouse .
  ?spouse dbo:occupation ?spouseOccupation .
  ?spouseOccupation skos:prefLabel ?spouseProfession .
  FILTER(LANG(?spouseProfession) = 'en')
}
```

Note: The `wd:Q123456`, `wd:Q789012`, and `wd:Q345678` are placeholders for the actual DBpedia resource identifiers of Satomi Ishihara, Anne Heche, and Ted McGinley respectively. You would need to replace these with the correct QIDs from DBpedia.",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
427,44,val,"Give me the party of the father of Lamberto Andreotti and party of the person born, that is an office holder and a politician, as Romano Antonio Prodi and reference to Partito Popolare Italiano.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Lamberto_Andreotti> <http://dbpedia.org/property/father> ?v4 . ?result <http://xmlns.com/foaf/0.1/name> ""Partito Popolare Italiano""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v4 <http://dbpedia.org/ontology/party> ?result . ?v2 <http://dbpedia.org/ontology/party> ?result . ?v2 <http://dbpedia.org/property/birthName> ""Romano Antonio Prodi""@en . }","```sparql
# Query for Lamberto Andreotti's father and his political party
SELECT ?father ?partyLabel WHERE {
  ?andreotti dbo:birthName ""Lamberto Andreotti""@it .
  ?andreotti dbo:father ?father .
  OPTIONAL { ?father dbo:politicalParty ?party . }
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}

# Query for Romano Prodi's birth details, office holding status, and political party
SELECT ?birthDate ?officeLabel ?partyLabel WHERE {
  wd:Q12345 dbo:birthDate ?birthDate .
  OPTIONAL { 
    ?prodiOffice dbo:agent wd:Q12345 ;
                 a dbo:PublicBody ;
                 rdfs:label ?officeLabel .
  }
  OPTIONAL { 
    ?prodiParty dbo:member wd:Q12345 ;
                a dbo:PoliticalParty ;
                rdfs:label ?partyLabel .
  }
  FILTER EXISTS {
    ?prodiParty rdfs:label ""Partito Popolare Italiano""@it
  }
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
```

Note: Replace `wd:Q12345` with the actual DBpedia identifier for Romano Prodi.",5,7,6,2,3,3,3,71,0,0,1,0,0.0,0
666,13,val,"Give me the player in the manager, that is a sports manager, of the team, that is a soccer club and a sports team season, of Leonid Slutsky (football coach).",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v0 <http://dbpedia.org/ontology/manager> ?v1 . ?v1 <http://dbpedia.org/ontology/team> ?result . ?v0 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Leonid_Slutsky_(football_coach)> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?player WHERE {
  ?coach rdf:type dbo:FootballManager ;
         foaf:name ""Leonid Slutsky""@en .
  
  ?team dbo:manager ?coach ;
        a dbo:SoccerClub, dbo:SportsTeamSeason .

  ?player dbo:playsFor ?team ;
          a dbo:Player .
}
```",3,6,4,3,1,3,2,20,0,0,28,0,0.0,0
801,43,val,"Give me the professional in  and producer of the work, that is a musical work and a song and a work, of the professional, that is a musical artist, in Rapper and associated musical artist of Chris Taylor (music producer).","SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/writer> ?v0 . ?v4 <http://dbpedia.org/ontology/producer> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?result <http://dbpedia.org/property/occupation> """"@en . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. <http://dbpedia.org/resource/Chris_Taylor_(music_producer)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/property/occupation> ""Rapper""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?rapper ?song WHERE {
  ?rapper a dbo:MusicalArtist ;
          dbo:genre dbr:Rap_music .
  
  ?rapper dbo:associatedMusicalArtist dbr:Chris_Taylor_(music_producer) .

  ?work dbo:artist ?rapper ;
        a dbo:Song, dbo:Work .

  BIND(?work AS ?song)
}
```",5,9,6,3,3,3,3,71,0,0,2,0,0.0,0
767,19,val,"Give me the entity in the administration, that is a settlement, of Green and alma mater of Carl L. Nippert.","SELECT ?result WHERE { <http://dbpedia.org/resource/Carl_L._Nippert> <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://dbpedia.org/ontology/state> ?v0 . ?v0 <http://dbpedia.org/property/leaderParty> ""Green""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?settlement WHERE {
  # Find the settlement that is part of Green's administration
  ?green dbo:administrativeTerritory ?settlement .
  
  FILTER (?green IN (dbr:Green_County_Ohio, dbr:Green_(city), dbr:Green_(township))) # Assuming ""Green"" could refer to these entities

  # Check if this settlement is the alma mater of Carl L. Nippert
  ?nippert dbo:almaMater ?settlement .
  
  FILTER (?nippert = dbr:C._L._Nippert) # Carl L. Nippert's DBpedia resource
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
427,35,val,"Give me the party of the person born, that is an office holder and a politician, as Romano Antonio Prodi and reference to the name of Italian People's Party (1994).","SELECT ?result WHERE { <http://dbpedia.org/resource/Italian_People's_Party_(1994)> <http://xmlns.com/foaf/0.1/name> ?v2 . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v1 <http://dbpedia.org/property/birthName> ""Romano Antonio Prodi""@en . ?v1 <http://dbpedia.org/ontology/party> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?partyName WHERE {
  ?prodi a dbo:Politician ;
         foaf:name ""Romano Prodi""@en .
  
  ?prodi dbo:memberOfParty ?party .

  ?party rdfs:label ?partyLabel .
  FILTER(CONTAINS(LCASE(?partyLabel), ""italian people's party (1994)""))

  BIND(REPLACE(STR(?partyLabel), ""(Italian People's Party \(1994\))"", """") AS ?partyName)
}
```",4,6,5,2,2,3,3,71,0,0,1,0,0.0,0
617,26,val,"Give me the spouse of the child of the successor, that is a royalty, of Antiochus (son of Antiochus III the Great).",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/successor> ?v1 . ?v1 <http://dbpedia.org/ontology/child> ?v2 . },"```sparql
SELECT ?spouse WHERE {
  # Step 1: Find Antiochus who is a son of Antiochus III the Great
  ?antiochus dbp:father dbr:Antiochus_III_the_Great .
  ?antiochus rdfs:label ""Antiochus""@en .

  # Step 2: Find his successor
  ?successor dbo:predecessor ?antiochus .

  # Step 3: Identify a child of the successor who is royalty
  ?child dbo:parent ?successor .
  ?child rdf:type dbo:Monarch .

  # Step 4: Find the spouse of this royal child
  ?spouse dbo:spouse ?child .
}
```",3,4,4,3,1,3,3,71,0,0,5,0,0.0,0
9,19,val,"Give me the alma mater of Allen Hill (scientist) and alma mater of the mayor, that is a politician, of Northern Ireland Forum.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/ontology/almaMater> ?result . <http://dbpedia.org/resource/Northern_Ireland_Forum> <http://dbpedia.org/property/leader> ?v0 . <http://dbpedia.org/resource/Allen_Hill_(scientist)> <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
SELECT ?scientistAlmaMater ?politicianAlmaMater WHERE {
  # Query for Allen Hill (Scientist)
  ?scientist a dbo:Person ;
             foaf:name ""Allen Hill"" ;
             dbo:almaMater ?scientistAlmaMater .
  
  # Query for the Mayor of Northern Ireland Forum
  ?politician a dbo:Politician ;
              dbo:positionHeld dbr:Northern_Ireland_Forum_Mayor ;
              dbo:almaMater ?politicianAlmaMater .
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
281,24,val,"Give me the entity in the birth place, that is a country, of Bob Heffron and war of New Zealand Army.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> ?v2 . <http://dbpedia.org/resource/Bob_Heffron> <http://dbpedia.org/ontology/birthPlace> ?v2 . <http://dbpedia.org/resource/New_Zealand_Army> <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
# Query to find Bob Heffron's birthplace that is a country
SELECT ?birthPlace WHERE {
  ?person dbo:birthPlace ?birthPlace .
  ?person rdfs:label ""Bob Heffron""@en .
  FILTER (isLiteral(?birthPlace) && langMatches(lang(?birthPlace), ""EN""))
  OPTIONAL { ?birthPlace rdf:type dbpedia-owl:Country . }
} LIMIT 1

# Query to find wars involving the New Zealand Army
SELECT DISTINCT ?war WHERE {
  ?army dbo:participatedInWar ?war .
  ?army rdfs:label ""New Zealand Army""@en .
  FILTER (isLiteral(?war) && langMatches(lang(?war), ""EN""))
} LIMIT 1000

# Combine the results to find a common entity
SELECT DISTINCT ?commonEntity WHERE {
  VALUES (?birthPlace) { (<http://dbpedia.org/resource/PLACE_OF_BIRTH>)} # Replace PLACE_OF_BIRTH with actual URI from first query result
  VALUES (?war) { (<http://dbpedia.org/resource/WAR_NAME>)} # Replace WAR_NAME with actual URIs from second query results

  ?commonEntity rdfs:label ?birthPlaceLabel .
  FILTER (langMatches(lang(?birthPlaceLabel), ""EN"") && ?birthPlaceLabel = ?birthPlace)
  
  OPTIONAL { ?commonEntity dbo:participatedInWar ?war . }
}
```

Note: The placeholders `<http://dbpedia.org/resource/PLACE_OF_BIRTH>` and `<http://dbpedia.org/resource/WAR_NAME>` need to be replaced with actual URIs obtained from the first two queries.",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
994,43,val,"Give me the associated musical artist of the band member, that is a band and a group and an organisation, of the band, that is an organisation, of Fredrik Thordendal and associated musical artist of S.A. Slayer and band member of Don Dokken.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Fredrik_Thordendal> . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. <http://dbpedia.org/resource/S.A._Slayer> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Don_Dokken> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. },"```sparql
# Query for Fredrik Thordendal's band (Meshuggah) and its associated artists
SELECT DISTINCT ?artist WHERE {
  ?band rdf:type dbo:Band .
  ?band rdfs:label ""Meshuggah""@en .
  ?band dbo:member ?person .
  ?person foaf:name ""Fredrik Thordendal""@en .
  
  OPTIONAL { 
    ?band dbo:associatedMusicalArtist ?artist .
  }
}

UNION

# Query for S.A. Slayer's band (Slayer) and its associated artists
SELECT DISTINCT ?artist WHERE {
  ?band rdf:type dbo:Band .
  ?band rdfs:label ""Slayer""@en .
  ?band dbo:member ?person .
  ?person foaf:name ""S.A. Slayer""@en .

  OPTIONAL { 
    ?band dbo:associatedMusicalArtist ?artist .
  }
}

UNION

# Query for Don Dokken's band (Dokken) and its associated artists
SELECT DISTINCT ?artist WHERE {
  ?band rdf:type dbo:Band .
  ?band rdfs:label ""Dokken""@en .
  ?band dbo:member ?person .
  ?person foaf:name ""Don Dokken""@en .

  OPTIONAL { 
    ?band dbo:associatedMusicalArtist ?artist .
  }
}
```",5,9,6,3,3,3,3,71,0,0,1,0,0.0,0
701,32,val,Give me the parent of the child of Nefertari and parent of the child of Ramesses II.,SELECT ?result WHERE { <http://dbpedia.org/resource/Nefertari> <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ramesses_II> . ?result <http://dbpedia.org/ontology/child> ?v3 . },"```sparql
SELECT ?parent WHERE {
  ?child dcterms:isPartOf <http://dbpedia.org/resource/Ramesses_II> .
  ?child dbo:parent ?parent .
  FILTER(?parent = <http://dbpedia.org/resource/Ramesses_II>)
}
```",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
55,18,val,"Give me the band of the reference, that is a band, to Newsted and band member of Metallica.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://xmlns.com/foaf/0.1/name> ""Newsted""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Metallica> . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band WHERE {
  ?band a dbo:Band ;
        rdfs:label ""Metallica""@en .
  OPTIONAL { 
    ?member dbo:member ?band ;
            foaf:name ""Jason Newsted""@en .
  }
}
```",3,4,4,2,2,2,3,28,0,1,3,0.0,0.0,0
92,25,val,Give me the band of the person born as Joseph Michael Furney and associated musical artist of Jim Sheppard.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Jim_Sheppard> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/bandMember> ?v1 . ?v1 <http://dbpedia.org/property/birthName> ""Joseph Michael Furney""@en . }","```sparql
SELECT ?band ?artist WHERE {
  # Find the band of Joseph Michael Furney (Joe Elliott)
  ?person rdfs:label ""Joseph Michael Furney""@en .
  ?person foaf:name ?name .
  FILTER(CONTAINS(LCASE(?name), ""joe elliot"")) .
  ?person dbo:memberOfBand ?band .

  # Find the musical artist associated with Jim Sheppard
  ?sheppard rdfs:label ""Jim Sheppard""@en .
  ?sheppard dbo:associatedMusicalArtist ?artist .
  FILTER(CONTAINS(LCASE(?artist), ""fish (musician)"")) .

}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
281,36,val,"Give me the war of the profession, that is a military unit, of the professional, that is an office holder and a politician, in New Zealand Army and war of Beauchamp Seymour, 1st Baron Alcester.","SELECT ?result WHERE { <http://dbpedia.org/resource/Beauchamp_Seymour,_1st_Baron_Alcester> <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/New_Zealand_Army> . ?v0 <http://dbpedia.org/property/occupation> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?unit ?war 
WHERE {
  # Identify Beauchamp Seymour, 1st Baron Alcester
  dbr:Beauchamp_Seymour_1st_Baron_Alcester dbo:profession ?profession .
  
  # Find military units associated with him in the New Zealand Army
  ?unit dbo:militaryUnitOf ?army ;
        dbo:commander ?person .
  FILTER (?army = dbr:New_Zealand_Army)
  FILTER (?person = dbr:Beauchamp_Seymour_1st_Baron_Alcester)

  # Find wars the unit was involved in
  ?unit dbo:participatedInWar ?war .
}
```",4,7,5,3,2,3,3,71,0,0,1,0,0.0,0
391,39,val,"Give me the actor of The Departed and actor of the movie, that is a movie and a work and a television show, with the professional in .","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/occupation> """"@en . ?v1 <http://dbpedia.org/property/starring> ?v0 . ?v1 <http://dbpedia.org/property/starring> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. <http://dbpedia.org/resource/The_Departed> <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. }","```sparql
# Step 1: Find actors of ""The Departed""
SELECT ?actor WHERE {
    ?movie dcterms:title ""The Departed""@en .
    ?movie dbo:starring ?actor .
}

UNION

# Step 2: Find a movie that is also a work and a television show
SELECT DISTINCT ?entity WHERE {
    ?entity rdf:type dbpedia-owl:Film ;
           rdf:type dbpedia-owl:Work ;
           rdf:type dbpedia-owl:TelevisionShow .
}

# Step 3: Find professionals associated with the entity found in step 2
SELECT ?professional WHERE {
    ?entity rdf:type dbpedia-owl:Film ;
           rdf:type dbpedia-owl:Work ;
           rdf:type dbpedia-owl:TelevisionShow .
    ?entity dbo:starring ?professional .
}
```",4,7,5,3,2,3,3,71,0,0,7,0,0.0,0
767,41,val,"Give me the alma mater of the administration of George K. Nash and entity in the administration, that is a settlement, of Green and reference to .","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> """"@en . ?v4 <http://dbpedia.org/ontology/almaMater> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://dbpedia.org/property/leaderParty> ""Green""@en . ?v4 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/George_K._Nash> . ?result <http://dbpedia.org/ontology/state> ?v2 . }","```sparql
# Query to get the alma mater of George K. Nash
SELECT ?almaMater WHERE {
  ?person foaf:name ""George K. Nash""@en .
  ?person dbo:almaMater ?almaMater .
}

UNION

# Query to find an entity in the administration of someone named Green and a settlement associated with them
SELECT DISTINCT ?settlement WHERE {
  ?green foaf:name ""Green""@en .
  ?administration dbo:member ?green .
  ?administration dbo:location ?settlement .
  FILTER(isIRI(?settlement) && (strstarts(str(?settlement), str(""http://dbpedia.org/resource/""))))
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
659,44,val,"Give me the military force of the force, that is a societal event and an event and a military conflict, of Rutger Jan Schimmelpenninck and commander in the war, that is an event and a military conflict, of 1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish) and commander in German campaign of 1813.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/1st_Light_Cavalry_Lancers_Regiment_of_the_Imperial_Guard_(Polish)> <http://dbpedia.org/ontology/battle> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v4 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v2 . <http://dbpedia.org/resource/German_campaign_of_1813> <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce ?event ?commander
WHERE {
    # Rutger Jan Schimmelpenninck's military force
    dbr:Rutger_Jan_Schimmelpenninck dbo:militaryService ?militaryForce .
    
    # Event that is a societal event, an event, and a military conflict
    ?event rdf:type dbo:MilitaryConflict ;
           dbo:participatedIn ?militaryForce ;
           dbo:socialEvent true .

    # 1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish)
    dbr:1st_Light_Cavalry_Lancers_Regiment_of_the_Imperial_Guard_(Polish) dbo:militaryConflict ?event2 .
    
    # German Campaign of 1813
    dbr:German_Campaign_of_1813 rdf:type dbo:MilitaryConflict ;
                                dbo:participatedIn ?event2 .

    # Commander in the German Campaign of 1813
    ?commander dbo:commanded dbr:1st_Light_Cavalry_Lancers_Regiment_of_the_Imperial_Guard_(Polish) .
}
```",5,10,6,2,3,3,3,71,0,0,7,0,0.0,0
528,32,val,Give me the war of the military force of Battle of Pisagua and war of the commander in Battle of La Rinconada de Ate.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Battle_of_La_Rinconada_de_Ate> <http://dbpedia.org/ontology/commander> ?v3 . ?v1 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Pisagua> . ?v1 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
# Query for the Battle of Pisagua
SELECT ?battle ?war ?commander WHERE {
  ?battle dbp:name ""Battle of Pisagua""@en .
  ?battle dbp:partOf ?war .
  ?battle dbp:commander ?commander .
}

UNION

# Query for the Battle of La Rinconada de Ate
SELECT ?battle ?war ?commander WHERE {
  ?battle dbp:name ""Battle of La Rinconada de Ate""@en .
  ?battle dbp:partOf ?war .
  ?battle dbp:commander ?commander .
}
```",4,4,5,2,2,3,3,71,0,0,8,0,0.0,0
294,12,val,"Give me the entity in Nashville, Tennessee and resting place of Luke Lea (American politician, born 1879) and resting place of Edwin A. Keeble.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Nashville,_Tennessee> . <http://dbpedia.org/resource/Luke_Lea_(American_politician,_born_1879)> <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Edwin_A._Keeble> <http://dbpedia.org/ontology/restingPlace> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?entity ?leasRestingPlace ?keebleRestingPlace WHERE {
  # Find the entity associated with Luke Lea and Edwin A. Keeble
  ?entity dbo:location dbr:Nashville,_Tennessee .
  
  OPTIONAL { 
    ?lea dbo:deathPlace ?leasRestingPlace ;
        foaf:name ""Luke Lea""^^xsd:string .
  }
  
  OPTIONAL {
    ?keeble dbo:deathPlace ?keebleRestingPlace ;
            foaf:name ""Edwin A. Keeble""^^xsd:string .
  }

  # Ensure the entity is related to both individuals
  VALUES (?lea ?keeble) { (dbr:Luke_Lea dbr:Edwin_A._Keeble) }
}
```",3,3,4,1,3,2,3,28,0,0,1,0,0.0,0
48,15,val,"Give me the band of Murda Mook and band of the writer of the work, that is a work, of Shellback (record producer).",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Murda_Mook> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Shellback_(record_producer)> . ?v0 <http://dbpedia.org/property/writer> ?v1 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
# Step 1: Find Murda Mook's Band
SELECT ?band WHERE {
  wd:Q1234567 dbo:musicArtist ?band .
}

UNION

# Step 2: Find a work produced by Shellback
SELECT DISTINCT ?work WHERE {
  wd:Q7890123 dbo:producedAlbum ?work .
}

UNION

# Step 3: Find the writer of that work
SELECT DISTINCT ?writer WHERE {
  ?work dbo:author ?writer .
}

UNION

# Step 4: Find the band of the writer
SELECT DISTINCT ?band WHERE {
  ?writer dbo:musicArtist ?band .
}
```

Note: Replace `wd:Q1234567` with Murda Mook's actual DBpedia QID and `wd:Q7890123` with Shellback's actual DBpedia QID. The properties `dbo:musicArtist`, `dbo:producedAlbum`, and `dbo:author` are used based on typical DBpedia schema, but may need adjustment if the exact property names differ.",4,5,5,3,2,3,2,20,0,0,1,0,0.0,0
547,40,val,Give me the resting place of Simon Cadell and resting place of Alan Cunningham and resting place of the child of the child of William Haliburton.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> ""William Haliburton""@en . ?v2 <http://dbpedia.org/ontology/child> ?v1 . <http://dbpedia.org/resource/Simon_Cadell> <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Alan_Cunningham> <http://dbpedia.org/ontology/restingPlace> ?result . ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . }","```sparql
# Query for Simon Cadell's resting place
SELECT ?restingPlace WHERE {
  ?s dbp:birthName ""Simon Cadell""@en .
  OPTIONAL { ?s dbo:deathPlace ?restingPlace . }
}

UNION

# Query for Alan Cunningham's resting place
SELECT ?restingPlace WHERE {
  ?s dbp:birthName ""Alan Cunningham""@en .
  OPTIONAL { ?s dbo:deathPlace ?restingPlace . }
}

UNION

# Query to find the child of the child of William Haliburton and their resting place
SELECT ?grandchildRestingPlace WHERE {
  ?parent1 dbp:father ""William Haliburton""@en .
  ?parent2 dbp:mother ""William Haliburton""@en .
  OPTIONAL { ?parent1 dbo:child ?child . }
  OPTIONAL { ?parent2 dbo:child ?child . }
  OPTIONAL { ?child dbo:child ?grandchild . }
  OPTIONAL { ?grandchild dbo:deathPlace ?grandchildRestingPlace . }
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
994,40,val,Give me the band member of Don Dokken and associated musical artist of Red Tide (band) and associated musical artist of the associated musical artist of the reference to Watchtower.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Red_Tide_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v3 <http://xmlns.com/foaf/0.1/name> ""Watchtower""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Don_Dokken> . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
# Query to get band members of Don Dokken's band (Dokken)
SELECT ?member WHERE {
  ?band rdf:type dbo:MusicalBand ;
        foaf:name ""Dokken"" .
  ?band dbo:bandMember ?member .
}

UNION

# Query to find associated musical artist of Red Tide
SELECT ?associatedArtist WHERE {
  ?redTide rdf:type dbo:MusicalBand ;
           foaf:name ""Red Tide (band)"" .
  ?redTide dbo:associatedMusicalArtist ?associatedArtist .
}

UNION

# Query to find associated musical artist of Watchtower's associated musical artist
SELECT ?finalAssociatedArtist WHERE {
  ?watchtower rdf:type dbo:MusicalBand ;
              foaf:name ""Watchtower"" .
  ?watchtower dbo:associatedMusicalArtist ?intermediateArtist .
  ?intermediateArtist dbo:associatedMusicalArtist ?finalAssociatedArtist .
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
345,15,val,"Give me the figure known as the nickname of the player, that is a sports club and an organisation and a soccer club, in Armando Heeb and team of Alessandro Mangiarratti.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v0 <http://dbpedia.org/property/nickname> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?result <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Alessandro_Mangiarratti> . <http://dbpedia.org/resource/Armando_Heeb> <http://dbpedia.org/ontology/team> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?club ?nickname WHERE {
  # Find clubs associated with Armando Heeb
  ?heeb dbo:team ?club1 .
  FILTER(?heeb = dbr:Armando_Heeb) .

  # Find clubs associated with Alessandro Mangiarratti
  ?mangiarratti dbo:team ?club2 .
  FILTER(?mangiarratti = dbr:Alessandro_Mangiarratti) .

  # Ensure the club is common to both players
  VALUES ?commonClub { ?club1 ?club2 }
  
  # Find the nickname of the common club
  ?commonClub dbo:nickname ?nickname .
  ?commonClub a dbo:SportsTeam ;
              a dbo:SoccerClub ;
              a dbo:Organization .
}
```",4,7,5,3,2,3,2,20,0,0,1,0,0.0,0
492,21,val,"Give me the person decedent at the work of US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite and person decedent at Algiers.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Algiers> . ?v1 <http://dbpedia.org/property/author> ""US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite""@en . }","```sparql
# Query for Joseph C. Satterthwaite's role and associated decedent
SELECT ?person WHERE {
  ?satterthwaite dbo:office ""Assistant Secretary of State for African Affairs""@en .
  ?satterthwaite foaf:name ""Joseph C. Satterthwaite""@en .
  OPTIONAL { 
    ?event dbo:agent ?satterthwaite ;
           dbo:death ?person .
  }
}

UNION

# Query for the decedent in Algiers (1957 bombing)
SELECT ?person WHERE {
  ?bombingEvent dbo:location ""Algiers""@en ;
                dbo:eventType ""Bombing""@en ;
                dbo:date ?date .
  FILTER(YEAR(?date) = 1957)
  ?bombingEvent dbo:victim ?person .
}
```",3,3,4,2,2,3,3,71,0,0,16,0,0.0,0
994,21,val,Give me the band member of Don Dokken and associated musical artist of the associated musical artist of Watchtower (band).,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Watchtower_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Don_Dokken> . },"```sparql
SELECT DISTINCT ?lynchMobArtist WHERE {
  # Step 1: Find George Lynch as a member of Dokken
  ?dokken dbo:musicalArtist <http://dbpedia.org/resource/George_Lynch> .
  
  # Step 2: Find associated musical artist (Lynch Mob) with George Lynch
  ?lynchMob dbo:member <http://dbpedia.org/resource/George_Lynch> .

  # Step 3: Identify Tom G. Warrior as a member of Watchtower
  ?watchtower dbo:musicalArtist <http://dbpedia.org/resource/Tom_G._Warrior> .
  
  # Step 4: Find associated musical artist (Hellhammer) with Tom G. Warrior
  ?hellhammer dbo:member <http://dbpedia.org/resource/Tom_G._Warrior> .

  # Get the associated musical artist of Hellhammer
  ?lynchMobArtist dbo:musicalArtist ?hellhammer .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
44,7,val,Give me the band member of the band of John Pettibone and band member of Sledgeback.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Sledgeback> . ?v0 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/John_Pettibone> . },"```sparql
# Query to find bands associated with John Pettibone and their members
SELECT DISTINCT ?band ?member WHERE {
  ?person dbo:birthName ""John Pettibone""@en .
  ?person dbo:bandMember ?band .
  ?band dbo:musicalArtist ?artist .
  ?artist dbo:member ?member .
}

UNION

# Query to find members of the band Sledgeback
SELECT DISTINCT ?band ?member WHERE {
  ?band rdfs:label ""Sledgeback""@en .
  ?band dbo:musicalArtist ?artist .
  ?artist dbo:member ?member .
}
```",3,3,4,2,2,2,2,9,0,0,1,0,0.0,0
645,11,val,"Give me the alma mater of Sylvia Pankhurst and entity in the residence, that is a country, of James Wilkes Maurice.",SELECT ?result WHERE { <http://dbpedia.org/resource/James_Wilkes_Maurice> <http://dbpedia.org/property/residence> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Sylvia_Pankhurst> <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://dbpedia.org/ontology/country> ?v2 . },"```sparql
# Query to find Sylvia Pankhurst's alma mater
SELECT ?university WHERE {
  dbpedia:Sylvia_Pankhurst dbo:almaMater ?university .
}

UNION

# Query to find James Wilkes Maurice's residence country
SELECT ?country WHERE {
  dbpedia:James_Wilkes_Maurice dbo:residence ?location .
  ?location rdf:type dbo:Country .
  BIND(?location AS ?country)
}
```",3,4,4,2,2,3,2,20,0,0,1,0,0.0,0
712,12,val,Give me the capital of South Russia (1919–1920) and resting place of the awardee of Hero of the Soviet Union.,SELECT ?result WHERE { <http://dbpedia.org/resource/South_Russia_(1919–1920)> <http://dbpedia.org/ontology/capital> ?result . ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Hero_of_the_Soviet_Union> . ?v0 <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?capital ?restingPlace WHERE {
  # Find Rostov-on-Don as the capital of South Russia (1919–1920)
  OPTIONAL {
    ?city dbo:country dbr:Russia ;
          rdfs:label ""Rostov-on-Don""@en .
    BIND(?city AS ?capital)
  }

  # Find resting place of Yuri Gagarin, a Hero of the Soviet Union
  ?person dbo:awardedBy dbr:Hero_of_the_Soviet_Union ;
          dbo:deathPlace ?restingPlace ;
          rdfs:label ""Yuri Gagarin""@en .
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
485,17,val,"Give me the birth place of the awardee, that is a writer and a poet, of Eric Gregory Award and entity in Nottinghamshire.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Poet>. ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Eric_Gregory_Award> . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Nottinghamshire> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace WHERE {
  ?person dbo:award ""Eric Gregory Award""@en .
  ?person dbo:nationality dbr:United_Kingdom .
  ?person dbo:birthPlace ?birthPlace .
  ?person dbo:residence dbr:Nottinghamshire .
  ?person rdf:type dbo:Writer ;
           dbo:occupation dbr:Poet .
}
```",3,5,4,2,2,2,3,28,0,0,1,0,0.0,0
488,44,val,"Give me the death place of the father, that is a politician, of Yūki Hideyasu and birth place of Enomoto Takeaki and administration of the father of Emperor Go-Mizunoo.",SELECT ?result WHERE { <http://dbpedia.org/resource/Emperor_Go-Mizunoo> <http://dbpedia.org/property/father> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Yūki_Hideyasu> <http://dbpedia.org/property/father> ?v4 . ?v4 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Enomoto_Takeaki> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/property/leader> ?v2 . },"```sparql
# Query to find the death place of Yūki Ujitomo
SELECT ?deathPlace WHERE {
  ?person dbo:birthName ""Yūki Ujitomo""@ja .
  ?person dbo:deathPlace ?deathPlace .
}

UNION

# Query to find the birthplace of Enomoto Takeaki
SELECT ?birthPlace WHERE {
  ?person dbo:birthName ""Enomoto Takeaki""@ja .
  ?person dbo:birthPlace ?birthPlace .
}

UNION

# Query to find the administration (domain) associated with Tokugawa Hidetada
SELECT ?administration WHERE {
  ?person dbo:birthName ""Tokugawa Hidetada""@ja .
  ?person dbo:positionHeld ?position .
  ?position dbo:administrativeArea ?administration .
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
303,18,val,"Give me the party of the person born, that is a politician, as Arnulfo Arias Madrid and entity in Panama.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Panama> . ?v2 <http://dbpedia.org/ontology/party> ?result . ?v2 <http://dbpedia.org/property/birthName> ""Arnulfo Arias Madrid""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?party WHERE {
  ?person a dbo:Politician ;
          foaf:name ""Arnulfo Arias Madrid""@en ;
          dbo:nationality dbr:Panama .
  OPTIONAL { ?person dbo:politicalParty ?party . }
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
10,17,val,"Give me the professional in  and band member of the person born, that is an artist, as Luke Francis Vibert.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ""Luke Francis Vibert""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?result <http://dbpedia.org/property/occupation> """"@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?professionalRole ?bandName WHERE {
  VALUES ?person { dbr:Luke_Vibert }
  
  # Find professional role as an artist
  OPTIONAL {
    ?person dbo:profession ?professionalRole .
    FILTER(CONTAINS(LCASE(STR(?professionalRole)), ""artist""))
  }

  # Find band membership
  OPTIONAL {
    ?bandMembership dbo:member ?person ;
                   dbo:name ?bandName .
  }
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
92,22,val,Give me the band member of Nevermore and band of the person born as Joseph Michael Furney.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Nevermore> . ?v1 <http://dbpedia.org/property/birthName> ""Joseph Michael Furney""@en . ?result <http://dbpedia.org/ontology/bandMember> ?v1 . }","```sparql
SELECT ?person ?band1Label ?band2Label WHERE {
  # Find a band member of Nevermore
  ?person dbo:memberOf dbr:Nevermore .
  
  # Get the birth name of that person
  ?person foaf:name ""Warrel Dane""@en .

  # Find another band associated with this person (Joseph Michael Furney)
  OPTIONAL { 
    ?person dbo:memberOf ?band2 .
    ?band2 rdfs:label ?band2Label .
    FILTER(LANG(?band2Label) = 'en')
  }
  
  # Get the label for Nevermore
  BIND(dbr:Nevermore AS ?band1)
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""en"". }

}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
251,18,val,Give me the administration of Forza Italia (2013) and death place of the author of The Twelve Abbots of Challant.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Twelve_Abbots_of_Challant> <http://dbpedia.org/property/author> ?v2 . ?v2 <http://dbpedia.org/ontology/deathPlace> ?result . ?result <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Forza_Italia_(2013)> . },"```sparql
# Query 1: Administration of Forza Italia in 2013
SELECT ?person WHERE {
  ?party dcterms:title ""Forza Italia""@en .
  ?party dbo:leader ?person .
  ?person dbo:officeOccupied [
    dbo:startDate ?start ;
    dbo:endDate ?end ;
    dbo:positionTitle ?title .
  ].
  FILTER (?start <= ""2013-01-01""^^xsd:date && (?end >= ""2013-12-31""^^xsd:date || !bound(?end)))
}

UNION

# Query 2: Death place of the author of The Twelve Abbots of Challant
SELECT ?deathPlace WHERE {
  ?book dbo:author ?author .
  ?book dcterms:title ""The Twelve Abbots of Challant""@en .
  ?author dbo:deathPlace ?deathPlace .
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
827,11,val,"Give me the father of William Ernest, Grand Duke of Saxe-Weimar-Eisenach and child of the child, that is a royalty, of Grand Duchess Maria Pavlovna of Russia (1786–1859).","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/William_Ernest,_Grand_Duke_of_Saxe-Weimar-Eisenach> <http://dbpedia.org/property/father> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Grand_Duchess_Maria_Pavlovna_of_Russia_(1786–1859)> . }","```sparql
# Query to get the father of William Ernest, Grand Duke of Saxe-Weimar-Eisenach
SELECT ?father WHERE {
  wd:Q1234567 wdt:P22 ?father .
}

# Query to find a child of Alexander II (child of Maria Pavlovna) who is royalty and their child
SELECT ?grandChild WHERE {
  # Find a royal child of Alexander II
  wd:Q67891011 wdt:P40 ?royalChild . 
  FILTER EXISTS { ?royalChild wdt:P31 wd:Q5 } # Ensure the child is a person

  # Find the child of that royal child
  ?royalChild wdt:P40 ?grandChild .
}
```

Note: Replace `wd:Q1234567` with the actual DBpedia identifier for William Ernest, Grand Duke of Saxe-Weimar-Eisenach and `wd:Q67891011` with the identifier for Alexander II of Russia.",3,4,4,2,2,3,2,20,0,0,1,0,0.0,0
184,43,val,"Give me the parent of Géza von Habsburg and parent of Archduchess Ilona of Austria and child of the child of the parent, that is a royalty, of Archduke Ladislaus Philipp of Austria.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Ilona_of_Austria> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v4 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Géza_von_Habsburg> . <http://dbpedia.org/resource/Archduke_Ladislaus_Philipp_of_Austria> <http://dbpedia.org/ontology/parent> ?v0 . },"```sparql
# Step 1: Find the parent of Géza von Habsburg
SELECT ?parent WHERE {
  wd:Q123456 wdt:P22 ?parent .
}

# Step 2: Find the parent of Archduchess Ilona of Austria
SELECT ?parent WHERE {
  wd:Q654321 wdt:P22 ?parent .
}

# Step 3: Find the child of the child of the parent of Archduke Ladislaus Philipp of Austria who is a royalty
SELECT DISTINCT ?grandchild WHERE {
  # Parent of Archduke Ladislaus Philipp of Austria
  wd:Q789012 wdt:P22 ?parent .

  # Children of this parent
  ?parent wdt:P40 ?child .

  # Check if the child is royal and find their children
  ?child wdt:P31/wdt:P279* wd:Q5 . # Assuming Q5 represents a human, adjust for royalty as needed
  ?child wdt:P40 ?grandchild .
}

# Note: Replace Q123456, Q654321, and Q789012 with the actual DBpedia IDs of Géza von Habsburg, Archduchess Ilona of Austria, and Archduke Ladislaus Philipp of Austria respectively.
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
488,23,val,"Give me the birth place of the commander in the war, that is a military conflict and an event and a societal event, of Saitō Hajime.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Saitō_Hajime> <http://dbpedia.org/ontology/battle> ?v2 . },"```sparql
SELECT ?birthPlace WHERE {
  ?person dbo:birthPlace ?birthPlace .
  ?person rdfs:label ""Saitō Hajime""@en .
  FILTER NOT EXISTS { ?person dbo:deathPlace ?deathPlace } # Ensure we are getting the person, not a place or event.
  
  OPTIONAL {
    ?event dbo:commander ?person .
    ?event rdf:type dbo:MilitaryConflict ;
           dbo:eventCategory dbc:SocietalEvents .
  }
}
```",3,6,4,3,1,3,3,71,0,0,17,0,0.0,0
492,39,val,"Give me the commander in Franco-Hova Wars and person decedent at the capital, that is a settlement, of the country of Khemis Miliana District.",SELECT ?result WHERE { <http://dbpedia.org/resource/Franco-Hova_Wars> <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/ontology/capital> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Khemis_Miliana_District> <http://dbpedia.org/ontology/country> ?v0 . ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?deceasedPerson WHERE {
  # Find a commander involved in the Franco-Hova Wars
  ?war dbo:wikiPageRedirects dbr:Franco-Hova_Wars .
  ?war dbo:participatedInMilitaryConflict ?militaryEvent .
  ?militaryEvent dbo:commander ?commander .

  # Find a person deceased at Khemis Miliana
  ?deceasedPerson dbo:deathPlace dbr:Khemis_Miliana .
  
  FILTER EXISTS { ?deceasedPerson dbo:occupation dbr:Military_person } # Optional filter for military relevance

}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
528,24,val,Give me the war of the commander in Battle of La Rinconada de Ate and force of Narciso Campero.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Battle_of_La_Rinconada_de_Ate> <http://dbpedia.org/ontology/commander> ?v2 . ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Narciso_Campero> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?battleCommander ?battleForce ?camperoForce WHERE {
  # Find commanders of the Battle of La Rinconada de Ate and their forces
  VALUES ?battle { dbr:Battle_of_La_Rinconada_de_Ate }
  
  ?battle dbo:commander ?battleCommander .
  OPTIONAL { ?battleCommander dbo:commanded ?battleForce . }

  # Find Narciso Campero's command in any battle and his force
  ?camperoBattle dbo:commander dbr:Narciso_Campero .
  OPTIONAL { dbr:Narciso_Campero dbo:commanded ?camperoForce . }
  
  FILTER(?battle = ?camperoBattle)
}
```",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
712,11,val,Give me the capital of the country of Armed Forces of South Russia and resting place of Nina Onilova.,SELECT ?result WHERE { <http://dbpedia.org/resource/Armed_Forces_of_South_Russia> <http://dbpedia.org/ontology/country> ?v2 . ?v2 <http://dbpedia.org/ontology/capital> ?result . <http://dbpedia.org/resource/Nina_Onilova> <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?capital ?burialPlace WHERE {
  # Find the capital of Ukraine
  dbr:Ukraine dbo:capital ?capital .

  # Find Nina Onilova and her burial place
  OPTIONAL {
    ?ninaOnilova a dbo:Person ;
                 foaf:name ""Nina Onilova"" ;
                 dbo:deathPlace ?burialPlace .
  }
}
```",3,3,4,2,2,3,2,20,0,1,1,0.0,0.0,0
281,43,val,"Give me the entity in the birth place, that is a country, of the leader, that is a politician, of 1962 New South Wales state election and war of Beauchamp Seymour, 1st Baron Alcester and war of New Zealand Army.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/ontology/birthPlace> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/New_Zealand_Army> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/1962_New_South_Wales_state_election> <http://dbpedia.org/property/leader> ?v0 . <http://dbpedia.org/resource/Beauchamp_Seymour,_1st_Baron_Alcester> <http://dbpedia.org/ontology/battle> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?leader ?birthPlaceCountry WHERE {
  # Find the leader of the 1962 NSW state election
  ?election dbo:state dbr:New_South_Wales .
  ?election dbo:electionDate ?date .
  FILTER (YEAR(?date) = 1962)
  
  ?candidate dbo:officeHolderOf ?election .
  ?candidate a dbo:Politician ;
             rdfs:label ?leaderLabel .

  # Get the birthplace of this leader
  ?candidate dbo:birthPlace ?birthPlace .
  
  # Ensure the birthplace is a country
  ?birthPlaceCountry dbo:countryName ?birthPlaceLabel .
  FILTER (strstarts(str(?birthPlace), str(?birthPlaceCountry)))

  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
318,7,val,Give me the person born in the founding year of Eel Pie Publishing and professional in Composer.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/Composer> . ?result <http://dbpedia.org/ontology/birthYear> ?v2 . <http://dbpedia.org/resource/Eel_Pie_Publishing> <http://dbpedia.org/ontology/foundingYear> ?v2 . },"```sparql
# Part 1: Get the founding year of Eel Pie Publishing
SELECT ?foundingYear WHERE {
    ?eelpiePublishing dbo:founded ?foundingDate .
    BIND(YEAR(?foundingDate) AS ?foundingYear)
} LIMIT 1

# Part 2: Find a person born in that year who is a composer
SELECT DISTINCT ?person ?birthDate WHERE {
    # Replace 'YYYY' with the actual founding year obtained from part 1
    VALUES (?year) { (YYYY) }
    
    ?person dbo:birthDate ?birthDate ;
            foaf:occupation ""Composer""@en .
    BIND(YEAR(?birthDate) AS ?birthYear)
    FILTER(?birthYear = ?year)
}
```

Note: Replace `YYYY` in the second query with the actual founding year obtained from the first part of the query.",3,3,4,2,2,2,2,9,0,0,7,0,0.0,0
404,39,val,Give me the parent of Prince Ernest Augustus of Hanover (born 1914) and child of the father of the spouse of Princess Victoria Louise of Prussia.,SELECT ?result WHERE { <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?v0 . ?result <http://dbpedia.org/ontology/parent> ?v1 . ?v0 <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Prince_Ernest_Augustus_of_Hanover_(born_1914)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
    # Step 1: Find Prince Ernest Augustus of Hanover (born 1914) and his parent
    ?ernestAugustus a dbo:Person ;
                   foaf:name ""Prince Ernest Augustus of Hanover""@en ;
                   dbo:birthDate ?birthDate .
    FILTER(YEAR(?birthDate) = 1914)
    
    ?parent dbo:child ?ernestAugustus .

    # Step 2: Identify Princess Victoria Louise of Prussia and her spouse
    ?princessVictoriaLouise a dbo:Person ;
                           foaf:name ""Princess Victoria Louise of Prussia""@en .
    
    ?wilhelmII dbo:spouse ?princessVictoriaLouise ;
               foaf:name ""Wilhelm II, German Emperor""@en .

    # Step 3: Determine the father of Wilhelm II
    ?frederickIII dbo:child ?wilhelmII ;
                  foaf:name ""Frederick III, German Emperor""@en .
    
    # Step 4: Find the child of Frederick III who is also the parent of Prince Ernest Augustus
    ?person dbo:child ?ernestAugustus ;
            dbo:parent ?frederickIII .
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
339,12,val,Give me the father of the child of Grand Duchess Elena Vladimirovna of Russia and child of George I of Greece.,SELECT ?result WHERE { <http://dbpedia.org/resource/George_I_of_Greece> <http://dbpedia.org/ontology/child> ?result . ?v0 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Grand_Duchess_Elena_Vladimirovna_of_Russia> <http://dbpedia.org/ontology/child> ?v0 . },"```sparql
SELECT ?father WHERE {
  # Identify the child of Grand Duchess Elena Vladimirovna of Russia
  ?child1 dbo:parent dbr:Grand_Duchess_Elena_Vladimirovna_of_Russia .
  
  # Identify the child of George I of Greece
  ?child2 dbo:parent dbr:George_I_of_Greece .

  # Find the father of both children
  ?child1 dbo:father ?father .
  ?child2 dbo:father ?father .
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
328,32,val,"Give me the commander in the force of Ferenc Szálasi and awardee of the award of Bruce Fraser, 1st Baron Fraser of North Cape.","SELECT ?result WHERE { <http://dbpedia.org/resource/Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape> <http://dbpedia.org/property/awards> ?v1 . ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Ferenc_Szálasi> . ?result <http://dbpedia.org/property/awards> ?v1 . ?v3 <http://dbpedia.org/ontology/commander> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Find the commander of Ferenc Szálasi's force
  ?szalasiForce dbo:commander ?person .
  FILTER(CONTAINS(LCASE(STR(?szalasiForce)), ""ferenc szálasi"")) .

  # Check if this person received an award from Bruce Fraser
  OPTIONAL {
    ?award dbo:recipient ?person ;
           dbo:awardedBy dbr:Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape .
  }

  FILTER(EXISTS { ?award . }) # Ensure the person has an award linked to Bruce Fraser
}
```",4,4,5,2,2,3,3,71,0,0,2,0,0.0,0
981,13,val,"Give me the entity in the region of the time zone in Salak, North Sumatra.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/timeZone> ?v0 . <http://dbpedia.org/resource/Salak,_North_Sumatra> <http://dbpedia.org/ontology/timeZone> ?v0 . ?result <http://dbpedia.org/ontology/country> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?entity ?name WHERE {
  # Find Salak or North Sumatra entity
  VALUES ?location { 
    dbr:Salak_(North_Sumatra) 
    dbr:North_Sumatra 
  }
  
  # Get the time zone of the location
  ?location dbo:timeZone ?timezone .
  
  # Find other entities in the same time zone
  ?entity dbo:timeZone ?timezone ;
          rdfs:label ?name .
  
  FILTER (LANG(?name) = 'en')
  FILTER (?entity != ?location)
}
```",3,3,4,3,1,3,2,20,0,0,2949,0,0.0,0
754,14,val,Give me the parent of the child of the reference to Ram Khamhaeng the Great.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/child> ?v0 . ?result <http://dbpedia.org/ontology/child> ?v0 . ?v2 <http://xmlns.com/foaf/0.1/name> ""Ram Khamhaeng the Great""@en . }","```sparql
SELECT ?grandParent WHERE {
  ?ramkhamhaeng dbo:name ""Ram Khamhaeng the Great""@en .
  ?ramkhamhaeng dbo:child ?child .
  ?child dbo:parent ?grandParent .
}
```",3,3,4,3,1,3,2,20,0,0,1,0,0.0,0
16,27,val,Give me the person born as the birth name of the alumnus of Ohio State University.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Ohio_State_University> . ?result <http://dbpedia.org/property/birthName> ?v2 . ?v1 <http://dbpedia.org/property/birthName> ?v2 . },"```sparql
SELECT DISTINCT ?person ?birthName WHERE {
  # Find alumni of Ohio State University
  ?alumnus dbo:almaMater dbr_Ohio_State_University .
  
  # Get the birth name of each alumnus
  OPTIONAL { 
    ?alumnus foaf:name ?fullName .
    FILTER regex(?fullName, ""^(.*?)\s"", ""i"") # Extracting first part as birth name
    BIND(REPLACE(?fullName, ""(.*?)(\\s.*)?$"", ""$1"") AS ?birthName)
  }
  
  # Find other people born with the same birth name
  ?person foaf:name ?otherFullName .
  FILTER regex(?otherFullName, ""^"" + str(?birthName) + ""\s"", ""i"")
}
```",3,3,4,3,1,3,3,71,0,0,90,0,0.0,0
303,19,val,"Give me the entity in Panama and party of Arnulfo Arias and party of the commander, that is a politician, in United States invasion of Panama.",SELECT ?result WHERE { <http://dbpedia.org/resource/Arnulfo_Arias> <http://dbpedia.org/ontology/party> ?result . ?v2 <http://dbpedia.org/ontology/party> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/United_States_invasion_of_Panama> <http://dbpedia.org/ontology/commander> ?v2 . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Panama> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity WHERE {
  # Entities related to Arnulfo Arias
  VALUES ?arnulfoArias { dbr:Arnulfo_Arias }
  
  # Entities related to Manuel Noriega (the commander)
  VALUES ?manuelNoriega { dbr:Manuel_Noriega }

  # Find entities that are politicians in Panama
  ?entity dbo:nationality dbr:Panama ;
          a dbo:Politician .

  # Ensure the entity is connected to Arnulfo Arias or Manuel Noriega
  OPTIONAL { ?entity dbo:spouse ?arnulfoArias . }
  OPTIONAL { ?entity dbo:spouse ?manuelNoriega . }

  FILTER (BOUND(?arnulfoArias) || BOUND(?manuelNoriega))
}
```",4,5,5,2,3,2,3,28,0,3,1,0.0,0.0,0
617,21,val,"Give me the child of the child, that is a royalty, of Seleucus II Callinicus and parent of Nysa (wife of Pharnaces I of Pontus).",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seleucus_II_Callinicus> . ?result <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Nysa_(wife_of_Pharnaces_I_of_Pontus)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?childOfChild WHERE {
  # Seleucus II Callinicus
  dbr:Seleucus_II_Callinicus dbo:spouse ?parent1 .
  
  # Find his children who are royalty
  ?parent1 dbo:child ?royalChild .
  ?royalChild a dbo:Monarch .

  # Identify which royal child is the parent of Nysa
  ?royalChild dbo:child dbr:Nysa_of_Pontus .

  # Get the child of this person (the grandchild of Seleucus II Callinicus)
  ?royalChild dbo:child ?childOfChild .
}
```",3,4,4,2,2,3,3,71,0,0,2,0,0.0,0
996,15,val,Give me the force of the awardee of the elevation of Lac d'Avoriaz and entity in France.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/awards> ?v0 . ?result <http://dbpedia.org/ontology/commander> ?v1 . <http://dbpedia.org/resource/Lac_d'Avoriaz> <http://dbpedia.org/ontology/elevation> ?v0 . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/France> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?elevation ?notableFeature WHERE {
  ?lake a dbo:Lake ;
        dbp:name ""Lac d'Avoriaz""@en ;
        dbp:elevationAboveSeaLevel ?elevation .
  
  OPTIONAL {
    ?lake dbo:notableFor ?notableFeature .
  }
}
```",4,4,5,3,2,3,2,20,0,0,4,0,0.0,0
92,36,val,Give me the band of the person born as the birth name of Joseph Michael and band member of Nevermore.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> ?v1 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Nevermore> . ?v1 <http://dbpedia.org/property/birthName> ?v0 . <http://dbpedia.org/resource/Joseph_Michael> <http://dbpedia.org/property/birthName> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band WHERE {
  ?person a dbo:Musician ;
          foaf:name ""Jason Christopher David Ritchie"" ;
          dbo:birthName ""Joseph Michael Ritchie"" .
  
  ?membership dbo:musicArtist ?person ;
              dbo:musicalBand ?band .

  FILTER EXISTS { 
    ?nevermoreMembership dbo:musicalBand dbr:Nevermore ;
                         dbo:musicArtist ?person .
  }
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
492,28,val,"Give me the commander in Franco-Hova Wars and person decedent at the work of US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite and person decedent at Algiers.","SELECT ?result WHERE { <http://dbpedia.org/resource/Franco-Hova_Wars> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . ?v1 <http://dbpedia.org/property/author> ""US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite""@en . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Algiers> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commander ?personDecedent WHERE {
  # Find the commander in the Franco-Hova Wars
  ?event dbo:wikiPageRedirects dbr:Franco-Hova_Wars .
  ?event dbo:participatedInMilitaryConflict ?conflict .
  ?conflict dbo:commander ?commander .

  # Find a person decedent at the work of Joseph C. Satterthwaite and in Algiers
  ?person dbo:occupation dbr:Assistant_Secretary_of_State_for_African_Affairs ;
          dbo:associatedWith dbr:Joseph_C._Satterthwaite .
  OPTIONAL { ?person dbo:placeOfBirth dbr:Algiers . }
  
  FILTER EXISTS {
    ?deathEvent dbo:deceased ?person .
    ?deathEvent dbo:location dbr:Algiers .
  }

} LIMIT 10
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
232,21,val,Give me the native of London and child of the person born as John Devon Roland Pertwee.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/London> . ?v1 <http://dbpedia.org/property/birthName> ""John Devon Roland Pertwee""@en . }","```sparql
SELECT ?child ?childName WHERE {
  ?person dbo:name ""John Pertwee""@en .
  ?person dbo:birthName ""John Devon Roland Pertwee""@en .
  ?person dbo:child ?child .
  ?child dbo:name ?childName .
  ?child dbo:birthPlace dbpedia:London .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
645,15,val,"Give me the entity in the residence, that is a country, of the commander in Battle of Diamond Rock and alma mater of Sylvia Pankhurst.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v1 . <http://dbpedia.org/resource/Sylvia_Pankhurst> <http://dbpedia.org/ontology/almaMater> ?result . ?v0 <http://dbpedia.org/property/residence> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Battle_of_Diamond_Rock> <http://dbpedia.org/ontology/commander> ?v0 . },"```sparql
SELECT ?entity WHERE {
  # Find Captain William Reid's residence
  ?reid dbo:occupation dbr:Navy_officer ;
        foaf:name ""William Reid""@en .
  
  OPTIONAL { 
    ?reid dbo:residenceLocation ?location1 .
  }
  
  # Find Sylvia Pankhurst's alma mater and residence
  ?pankhurst dbo:almaMater dbr:Royal_College_of_Art ;
             foaf:name ""Sylvia Pankhurst""@en .
  
  OPTIONAL { 
    ?pankhurst dbo:residenceLocation ?location2 .
  }
  
  # Find the country of these locations
  ?location1 dbo:country ?entity .
  ?location2 dbo:country ?entity .
  
  FILTER(?entity = dbr:United_Kingdom)
}
```",4,5,5,3,2,3,2,20,0,0,1,0,0.0,0
488,24,val,"Give me the death place of the father, that is a politician, of Yūki Hideyasu and administration of Emperor Go-Yōzei.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Yūki_Hideyasu> <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Emperor_Go-Yōzei> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
SELECT ?deathPlace WHERE {
  ?person dbo:fatherOf dbr:Yūki_Hideyasu .
  ?person dbo:deathPlace ?deathPlace .
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
435,15,val,"Give me the work of Article 62, Section IV of Constitution of Iceland and territory administered from the figure known, that is a settlement and a town and Icelandic, as Land of fire and ice.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/nickname> ""Land of fire and ice""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Town>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/capital> ?v1 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Iceland>. ?result <http://dbpedia.org/property/author> ""Article 62, Section IV of Constitution of Iceland""@en . }","```sparql
# Query to find information about Article 62, Section IV of the Constitution of Iceland
SELECT ?articleContent WHERE {
  ?article dcterms:title ""Article 62, Section IV of the Constitution of Iceland""@en .
  ?article dbo:abstract ?articleContent .
}

UNION

# Query to find territories administered by Iceland
SELECT DISTINCT ?territory WHERE {
  ?territory dbo:administeredBy db:Iceland .
}
```",3,6,4,2,2,2,3,28,0,0,1,0,0.0,0
838,15,val,"Give me the band of the band member, that is an artist and a musical artist, of the band, that is a band and a group, of Žika Jelić and band member of Kerber.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Kerber> . ?v0 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Žika_Jelić> . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
# Step 1: Find Žika Jelić's Band
SELECT ?band WHERE {
    ?person foaf:name ""Žika Jelić""@en .
    ?person dbo:memberOf ?band .
    FILTER (rdf:type(?band) = dbpedia-owl:Band)
}

# Step 2: Find Kerber's Members
SELECT ?member WHERE {
    ?kerber dbo:member ?member .
    ?kerber foaf:name ""Kerber""@en .
    FILTER (rdf:type(?member) = dbpedia-owl:MusicalArtist)
}

# Step 3: Identify Common Member
SELECT DISTINCT ?commonMember WHERE {
    # Žika Jelić's band members
    ?person1 dbo:memberOf ?band1 .
    ?person1 foaf:name ""Žika Jelić""@en .

    # Kerber's members
    ?kerber dbo:member ?member .
    ?kerber foaf:name ""Kerber""@en .

    # Common member condition
    FILTER (?person1 = ?member)
    BIND(?member AS ?commonMember)
}

# Step 4: Find the Band of the Common Member that is both an Artist and a Musical Artist
SELECT DISTINCT ?band WHERE {
    ?commonMember dbo:memberOf ?band .
    ?commonMember rdf:type dbpedia-owl:MusicalArtist .
    ?commonMember rdf:type dbpedia-owl:Artist .

    # Ensure it's a band/group
    FILTER (rdf:type(?band) = dbpedia-owl:Band)
}
```",4,8,5,3,2,3,2,20,0,0,1,0,0.0,0
161,35,val,"Give me the commander in the force, that is an event, of Emilio Mola and military force of the force, that is a societal event and an event and a military conflict, of Francisco Franco.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Emilio_Mola> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Franco> . ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?conflict WHERE {
  # Find the commander of Emilio Mola in a force related to Francisco Franco
  ?force dbo:commander ?commander .
  ?force dbo:member dbr:Emilio_Mola .
  ?force dbo:member dbr:Francisco_Franco .
  
  # Ensure the force is associated with a societal event and military conflict involving Francisco Franco
  ?event dbo:relatedEvent ?conflict .
  ?event dbo:participant dbr:Francisco_Franco .
  ?conflict rdf:type dbo:MilitaryConflict .

  FILTER(?commander != dbr:Emilio_Mola) # Exclude Emilio Mola himself as commander
}
```",4,8,5,2,2,3,3,71,0,0,34,0,0.0,0
421,12,val,Give me the native of Socialist Federal Republic of Yugoslavia and person born as Edin Dervišhalidović and band member of Senidah.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Socialist_Federal_Republic_of_Yugoslavia> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Senidah> . ?result <http://dbpedia.org/property/birthName> ""Edin Dervišhalidović""@en . }","```sparql
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?person WHERE {
  ?person foaf:givenName ""Edin"" .
  ?person foaf:surname ""Dervišhalidović"" .
  ?person dbo:memberOfBand dbr:Senidah .
  ?person dbo:nationality dbr:Yugoslavia ;
          dbo:nationality dbr:Socialist_Federal_Republic_of_Yugoslavia .
}
```",3,3,4,1,3,2,3,28,0,0,1,0,0.0,0
391,41,val,"Give me the actor of All About the Andersons and native of the figure known as Hub City and actor of the claim to fame, that is a work, of Michael Ballhaus.","SELECT ?result WHERE { <http://dbpedia.org/resource/Michael_Ballhaus> <http://dbpedia.org/ontology/knownFor> ?v4 . ?v4 <http://dbpedia.org/ontology/starring> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/All_About_the_Andersons> <http://dbpedia.org/property/starring> ?result . ?v2 <http://dbpedia.org/property/nickname> ""Hub City""@en . ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . }","```sparql
# Query to find the actor of ""All About the Andersons""
SELECT ?actor WHERE {
  ?film dcterms:title ""All About the Andersons""@en .
  ?film dbo:starring ?actor .
}

# Query to identify Hub City and its notable figure (Tim Allen)
SELECT ?city ?person WHERE {
  ?city rdfs:label ""Spartanburg, South Carolina""@en ;
        foaf:name ?name .
  FILTER(CONTAINS(LCASE(?name), ""hub city""))
  
  ?person dbo:birthPlace ?city ;
          rdf:type dbo:Actor .
  FILTER(CONTAINS(LCASE(STR(?person)), ""tim allen""))
}

# Query to find a work associated with Michael Ballhaus
SELECT ?work WHERE {
  ?ballhaus foaf:name ""Michael Ballhaus""@en .
  ?ballhaus dbo:worksForFilm ?work .
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
115,7,val,Give me the alma mater of the alumnus of National University of San Marcos and alma mater of Jorge Sotomayor Tello.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/almaMater> ?result . <http://dbpedia.org/resource/Jorge_Sotomayor_Tello> <http://dbpedia.org/ontology/almaMater> ?result . ?v0 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/National_University_of_San_Marcos> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?university WHERE {
  # Find the alma mater of Jorge Sotomayor Tello
  dbr:Jorge_Sotomayor_Tello dbo:almaMater ?jorgeAlmaMater .
  
  # Find alumni from National University of San Marcos and their alma maters
  ?alumnus dbo:almaMater dbr:National_University_of_San_Marcos ;
           dbo:almaMater ?university .

  # Check if the university is common between Jorge Sotomayor Tello's alma mater and an alumnus of National University of San Marcos
  FILTER (?jorgeAlmaMater = ?university)
}
```",3,3,4,2,2,2,2,9,2,0,0,1.0,1.0,1.0
303,12,val,Give me the party of Guillermo Endara and party of Arnulfo Arias and entity in Panama.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Panama> . <http://dbpedia.org/resource/Arnulfo_Arias> <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Guillermo_Endara> <http://dbpedia.org/ontology/party> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?endaraPartyLabel ?ariasPartyLabel ?entityLabel WHERE {
  # Guillermo Endara's political party
  OPTIONAL { 
    dbr:Guillermo_Endara dbo:party ?endaraParty .
    ?endaraParty rdfs:label ?endaraPartyLabel .
    FILTER (lang(?endaraPartyLabel) = ""en"")
  }

  # Arnulfo Arias's political parties during his terms
  OPTIONAL { 
    dbr:Arnulfo_Arias_Madrid dbo:party ?ariasParty .
    ?ariasParty rdfs:label ?ariasPartyLabel .
    FILTER (lang(?ariasPartyLabel) = ""en"")
  }

  # Notable entity in Panama
  OPTIONAL {
    dbr:Panama dbo:notableMember ?entity .
    ?entity rdfs:label ?entityLabel .
    FILTER (lang(?entityLabel) = ""en"")
  }
}
```",3,3,4,1,3,2,3,28,0,2,1,0.0,0.0,0
294,14,val,"Give me the resting place of Luke Lea (American politician, born 1879) and resting place of the architect of P. D. Houston Jr. House.","SELECT ?result WHERE { <http://dbpedia.org/resource/P._D._Houston_Jr._House> <http://dbpedia.org/ontology/architect> ?v2 . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Luke_Lea_(American_politician,_born_1879)> <http://dbpedia.org/ontology/restingPlace> ?result . }","```sparql
# Query for the resting place of Luke Lea
SELECT ?burialPlace WHERE {
  dbpedia:Luke_Lea_(American_politician) dbo:burialPlace ?burialPlace .
}

# Query to find the architect of P. D. Houston Jr. House and their resting place
SELECT ?architectBurialPlace WHERE {
  ?house dbo:architect ?architect .
  FILTER(STRSTARTS(STR(?house), ""http://dbpedia.org/resource/P._D._Houston_Jr._House""))
  ?architect dbo:burialPlace ?architectBurialPlace .
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
328,27,val,"Give me the leader of the office, that is a government agency, of the leader, that is an office holder and a politician, of Gustav Jonson.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/office> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/ontology/leader> ?result . <http://dbpedia.org/resource/Gustav_Jonson> <http://dbpedia.org/property/leader> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?leader ?officeName WHERE {
  ?gustavJonson a dbo:Politician ;
                foaf:name ""Gustav Jonson""@en .
  
  ?gustavJonson dbo:officeHolder ?office .

  ?office dbo:head ?leader .
  
  ?office rdfs:label ?officeName .
  
  FILTER (lang(?officeName) = 'en')
}
```",3,6,4,3,1,3,3,71,0,0,1,0,0.0,0
778,12,val,"Give me the entity in United States and author of the work, that is a software, of Bill Joy.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/United_States> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Software>. ?v0 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Bill_Joy> . ?v0 <http://dbpedia.org/ontology/author> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity ?author WHERE {
  ?work dbo:creator ?author .
  ?author foaf:name ""Bill Joy"" .
  ?work a dbo:Software .
  ?work dbo:country dbr:United_States .
  ?work rdfs:label ?entity .
  FILTER (lang(?entity) = 'en')
}
```",3,4,4,2,2,3,2,20,0,0,1,0,0.0,0
161,30,val,"Give me the military force of Rif War and military force of Spanish Civil War and commander in the force, that is an event, of Emilio Mola.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Emilio_Mola> . ?v1 <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Rif_War> . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . },"```sparql
# Query for the Rif War
SELECT ?militaryForce WHERE {
  ?event rdf:type dbo:Battle .
  ?event rdfs:label ""Rif War""@en .
  ?event dbo:militaryConflicts ?conflict .
  ?conflict dbo:participatingMilitaryUnit ?militaryForce .
}

UNION

# Query for the Spanish Civil War
SELECT ?militaryForce WHERE {
  ?event rdf:type dbo:Battle .
  ?event rdfs:label ""Spanish Civil War""@en .
  ?event dbo:militaryConflicts ?conflict .
  ?conflict dbo:participatingMilitaryUnit ?militaryForce .
}

UNION

# Query for Emilio Mola's command in the Rif War
SELECT DISTINCT ?militaryForce WHERE {
  ?event rdf:type dbo:Battle .
  ?event rdfs:label ""Rif War""@en .
  ?event dbo:militaryConflicts ?conflict .
  ?conflict dbo:commander ?commander .
  ?commander foaf:name ""Emilio Mola"" .
  ?conflict dbo:participatingMilitaryUnit ?militaryForce .
}

UNION

# Query for Emilio Mola's command in the Spanish Civil War
SELECT DISTINCT ?militaryForce WHERE {
  ?event rdf:type dbo:Battle .
  ?event rdfs:label ""Spanish Civil War""@en .
  ?event dbo:militaryConflicts ?conflict .
  ?conflict dbo:commander ?commander .
  ?commander foaf:name ""Emilio Mola"" .
  ?conflict dbo:participatingMilitaryUnit ?militaryForce .
}
```",4,5,5,2,3,3,3,71,0,0,11,0,0.0,0
994,30,val,"Give me the associated musical artist of Red Tide (band) and band member of the person born, that is a musical artist, as Donald Maynard Dokken and associated musical artist of S.A. Slayer.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://dbpedia.org/property/birthName> ""Donald Maynard Dokken""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Red_Tide_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/S.A._Slayer> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
# Query for the associated musical artist of Red Tide (band)
SELECT ?associatedArtist WHERE {
  ?redTide dbr:Red_Tide_(band) .
  ?redTide dbo:associatedMusicalArtist ?associatedArtist .
}

UNION

# Query for a band member of Don Dokken who is also a musical artist
SELECT ?bandMember WHERE {
  ?donDokken foaf:name ""Don Dokken""@en .
  ?donDokken dbo:memberOfBand ?band .
  ?band dbo:bandMember ?bandMember .
  ?bandMember dbo:associatedMusicalArtist ?artist .
}

UNION

# Query for the associated musical artist of Slayer
SELECT ?associatedArtist WHERE {
  ?slayer dbr:Slayer .
  ?slayer dbo:associatedMusicalArtist ?associatedArtist .
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
161,22,val,"Give me the military force of Rif War and commander in the force, that is an event, of Emilio Mola.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Emilio_Mola> . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Rif_War> . ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce ?commander WHERE {
  # Identify the Rif War event
  dbr:Rif_War dbo:location dbr:Spanish_protectorate_of_Morocco .
  
  # Find military force associated with Spain during the Rif War
  ?event dbo:militaryConflict dbr:Rif_War ;
         dbo:participatingMilitaryForce [
           a dbo:MilitaryUnit ;
           dbo:country dbr:Spain ;
           rdfs:label ?militaryForceLabel .
         ] .

  # Retrieve Emilio Mola as a commander
  ?commander rdfs:label ""Emilio Mola""@en ;
             dbo:positionHeld ?position ;
             dbo:militaryConflict ?event .
  
  FILTER (CONTAINS(LCASE(?position), ""commander""))
}
```",3,4,4,2,2,3,3,71,0,0,12,0,0.0,0
9,20,val,"Give me the alma mater of the awardee of Royal Medal and alma mater of John Alderdice, Baron Alderdice.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Medal> . ?v2 <http://dbpedia.org/ontology/almaMater> ?result . <http://dbpedia.org/resource/John_Alderdice,_Baron_Alderdice> <http://dbpedia.org/ontology/almaMater> ?result . }","```sparql
# Query to find the alma mater of a notable Royal Medal awardee (example: Richard Feynman)
SELECT ?almaMater WHERE {
  ?person dbo:award dbpedia:Royal_Medal .
  OPTIONAL { ?person foaf:almaMater ?almaMater . }
  FILTER(STRSTARTS(STR(?person), ""http://dbpedia.org/resource/Richard_Feynman""))
}

UNION

# Query to find the alma mater of John Alderdice, Baron Alderdice
SELECT ?almaMater WHERE {
  ?person foaf:almaMater ?almaMater .
  FILTER(STRSTARTS(STR(?person), ""http://dbpedia.org/resource/John_Alderdice,_Baron_Alderdice""))
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
360,17,val,"Give me the native of the death place, that is a settlement, of Winnie Madikizela-Mandela and reference to Manfred Mann.","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Manfred Mann""@en . <http://dbpedia.org/resource/Winnie_Madikizela-Mandela> <http://dbpedia.org/ontology/deathPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?native ?connectionToManfredMann WHERE {
  # Identify Winnie Madikizela-Mandela's death place
  dbr:Winnie_Madikizela-Mandela dbo:deathPlace ?deathPlace .
  
  # Ensure the death place is a settlement (city)
  ?deathPlace a dbo:Settlement .

  # Find natives of this settlement
  ?native dbo:nativePlace ?deathPlace ;
          dbo:occupation ?occupation .

  OPTIONAL {
    # Look for any connection to Manfred Mann
    ?native dbp:referenceToManfredMann ?connectionToManfredMann .
  }
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
378,33,val,"Give me the war of Carl Pontus Gahn and war of the commander in the reference, that is a military conflict, to Peninsular War.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Peninsular War""@en . ?v0 <http://dbpedia.org/ontology/commander> ?v3 . <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/ontology/battle> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?warGahn ?commanderPeninsularWar WHERE {
  # Find wars involving Carl Pontus Gahn
  ?gahn a dbo:MilitaryPerson ;
        foaf:name ""Carl Pontus Gahn"" .
  
  ?gahn dbo:militaryConflict ?warGahn .

  # Find commanders associated with the Peninsular War
  ?peninsularWar a dbo:Battle ;
                 dbo:participatedIn dbr:Peninsular_War .

  ?commanderPeninsularWar a dbo:MilitaryPerson ;
                          dbo:commanded ?peninsularWar .
}
```",4,5,5,3,2,3,3,71,0,0,2,0,0.0,0
996,13,val,Give me the force of the awardee of the elevation of Lac d'Avoriaz.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Lac_d'Avoriaz> <http://dbpedia.org/ontology/elevation> ?v0 . ?result <http://dbpedia.org/ontology/commander> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?lake ?elevation WHERE {
  ?lake rdf:type dbo:Lake .
  ?lake rdfs:label ""Lac d'Avoriaz""@en .
  OPTIONAL { ?lake dbo:elevationAboveSeaLevel ?elevation . }
}
```

This query retrieves the elevation of Lac d'Avoriaz. Further queries would be needed to explore any awards or notable entities associated with it, but given the ambiguity in the question, this is a starting point.",3,3,4,3,1,3,2,20,0,0,11,0,0.0,0
281,34,val,Give me the war of the awardee of the award of Jonathon Band and war of New Zealand Army.,SELECT ?result WHERE { <http://dbpedia.org/resource/Jonathon_Band> <http://dbpedia.org/property/awards> ?v2 . ?v1 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/New_Zealand_Army> <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/property/awards> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?award ?war WHERE {
  # Find Jonathan Band and any awards he received
  ?person rdfs:label ""Jonathan Band""@en .
  ?person dbo:honoraryTitle ?award .

  OPTIONAL {
    # Find the war associated with the award
    ?award dbo:relatedTo ?conflict .
    ?conflict rdf:type dbo:MilitaryConflict ;
              rdfs:label ?warLabel .
    FILTER(LANG(?warLabel) = ""en"")
    BIND(STR(?warLabel) AS ?war)
  }

  OPTIONAL {
    # Find wars involving the New Zealand Army
    ?nzArmy rdfs:label ""New Zealand Army""@en .
    ?conflict dbo:participatingMilitaryUnit ?nzArmy ;
              rdf:type dbo:MilitaryConflict ;
              rdfs:label ?nzWarLabel .
    FILTER(LANG(?nzWarLabel) = ""en"")
    BIND(STR(?nzWarLabel) AS ?war)
  }
}
```",4,4,5,3,2,3,3,71,0,0,9,0,0.0,0
55,15,val,"Give me the band member of the producer, that is a band, of Used to Love Her and band of Newsted.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. <http://dbpedia.org/resource/Newsted> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Used_to_Love_Her> <http://dbpedia.org/ontology/producer> ?v1 . },"```sparql
# Step 1: Find the producer of ""Used to Love Her""
SELECT ?producer WHERE {
  ?song dcterms:title ""Used to Love Her"" .
  ?song dbo:performer <http://dbpedia.org/resource/Metallica> .
  ?song dbo:producer ?producer .
}

# Step 2: Check if this producer is also a band
SELECT DISTINCT ?bandProducer WHERE {
  VALUES ?producer { ?producer } # Replace with actual producer URI from step 1
  ?producer rdf:type <http://dbpedia.org/ontology/Band> .
  BIND(?producer AS ?bandProducer)
}

# Step 3: Find members of this band-producer who were in Newsted
SELECT DISTINCT ?member WHERE {
  VALUES ?bandProducer { ?bandProducer } # Replace with actual band URI from step 2
  ?bandProducer dbo:member ?member .
  
  ?newstedBand rdf:type <http://dbpedia.org/ontology/Band> ;
               rdfs:label ""Newsted""@en .
  ?newstedBand dbo:member ?member .
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
981,12,val,"Give me the birth place of the person born, that is a beauty queen, as  and entity in Indonesia.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BeautyQueen>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Indonesia> . ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/birthName> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace WHERE {
  dbr:Ratu_Vienny_Fitrani dbo:birthPlace ?birthPlace .
}
```",3,4,4,2,2,3,2,20,0,0,19,0,0.0,0
534,11,val,"Give me the headquarter of Royal Dublin Society and birth place of the child, that is a politician and an office holder, of Desmond FitzGerald (politician).",SELECT ?result WHERE { <http://dbpedia.org/resource/Royal_Dublin_Society> <http://dbpedia.org/ontology/headquarter> ?result . <http://dbpedia.org/resource/Desmond_FitzGerald_(politician)> <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
# Query to find the headquarters of the Royal Dublin Society
SELECT ?headquarters WHERE {
  dbpedia:Royal_Dublin_Society dbo:location ?headquarters .
}

# Query to find the birthplace of a politician's child of Desmond FitzGerald
SELECT DISTINCT ?childBirthPlace WHERE {
  # Find children of Desmond FitzGerald
  dbpedia:Desmond_FitzGerald dbp:child ?child .

  # Filter for those who are politicians or office holders
  ?child dbo:occupation ?occupation .
  FILTER (
    CONTAINS(LCASE(?occupation), ""politician"") ||
    CONTAINS(LCASE(?occupation), ""office holder"")
  )

  # Get the birthplace of that child
  ?child dbp:birthPlace ?childBirthPlace .
}
```",3,5,4,2,2,3,2,20,0,0,1,0,0.0,0
161,42,val,"Give me the commander in the force, that is an event, of Emilio Mola and military force of Spanish Civil War and military force of the force, that is a societal event and an event and a military conflict, of Francisco Franco.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Franco> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Emilio_Mola> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?militaryForceEmilioMola ?societalEventFranciscoFranco ?militaryConflictFranciscoFranco
WHERE {
  # Find the military force associated with Emilio Mola during the Spanish Civil War
  ?militaryForceEmilioMola dbo:commander dbr:Emilio_Mola .
  ?militaryForceEmilioMola dbo:partOf dbr:Spanish_Civil_War .

  # Find the societal event and military conflict involving Francisco Franco
  ?societalEventFranciscoFranco dbo:participant dbr:Francisco_Franco .
  ?militaryConflictFranciscoFranco dbo:participant dbr:Francisco_Franco .
  ?militaryConflictFranciscoFranco rdf:type dbo:MilitaryConflict .

  FILTER(?societalEventFranciscoFranco != ?militaryConflictFranciscoFranco)
}
```",5,9,6,2,3,3,3,71,0,0,32,0,0.0,0
801,35,val,"Give me the associated musical artist of the writer, that is a musical artist and an artist, of 40 Dayz & 40 Nightz and professional in the alter ego of The Shadow.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/40_Dayz_&_40_Nightz> <http://dbpedia.org/property/writer> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v2 . ?result <http://dbpedia.org/property/occupation> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artist WHERE {
  ?album dbo:artist dbr:DMX .
  ?album rdfs:label ""40 Dayz & 40 Nightz""@en .
  
  OPTIONAL { 
    ?person dbo:birthName ""Earl Simmons"" .
    ?person dbo:stageName dbr:DMX .
    ?person dbo:alias dbr:The_Shadow_(rapper) .
    ?person dbo:profession dbr/Musician .
    
    FILTER EXISTS {
      ?person dbo:genre dbr/Hip_hop_music .
    }
  }

  ?artist rdfs:label ""DMX""@en .
}
```",4,6,5,2,2,3,3,71,0,0,22,0,0.0,0
801,32,val,"Give me the professional in the alter ego of The Shadow and producer of the work, that is a musical work and a song and a work, of 50 Cent.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/50_Cent> . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://dbpedia.org/ontology/producer> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?work WHERE {
    # Find a work by 50 Cent that is a song
    ?work dbo:artist dbr:50_Cent ;
          a dbo:Song .

    # Check if the work involves Lamont Cranston (The Shadow's alter ego)
    OPTIONAL { 
        ?work dbo:lyrics ?lyrics .
        FILTER(CONTAINS(LCASE(?lyrics), ""lamont cranston"") || CONTAINS(LCASE(?lyrics), ""the shadow""))
    }
}
```",4,7,5,2,2,3,3,71,0,50,27,0.0,0.0,0
534,12,val,Give me the birth place of Garret FitzGerald and headquarter of the owner of RDS Arena.,SELECT ?result WHERE { <http://dbpedia.org/resource/Garret_FitzGerald> <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/ontology/headquarter> ?result . <http://dbpedia.org/resource/RDS_Arena> <http://dbpedia.org/ontology/owner> ?v0 . },"```sparql
# Query for the birthplace of Garret FitzGerald
SELECT ?birthPlace WHERE {
  wd:Q123456 wdt:P19 ?birthPlace .
}

# Query for the headquarters of the owner of RDS Arena (Royal Dublin Society)
SELECT ?headquarters WHERE {
  wd:Q789012 wdt:P159 ?headquarters .
}
```

Note: `wd:Q123456` and `wd:Q789012` are placeholders for the actual DBpedia identifiers for Garret FitzGerald and the Royal Dublin Society, respectively. You would need to replace these with the correct QIDs from DBpedia.",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
392,16,val,"Give me the province of the residence, that is a settlement and Italian, of Sebastiano Bianchetti and entity in Italy.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://dbpedia.org/ontology/province> ?result . <http://dbpedia.org/resource/Sebastiano_Bianchetti> <http://dbpedia.org/property/residence> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?settlement ?province WHERE {
  ?person a dbo:Person ;
          foaf:name ""Sebastiano Bianchetti""@it .
  
  OPTIONAL { 
    ?person dbo:residenceLocation ?location .
    
    ?location a dbo:Settlement ;
              dbo:country dbr:Italy .

    ?location dbo:locatedInAdministrativeArea ?province .
  }
}
```",3,5,4,2,2,2,3,28,0,0,1,0,0.0,0
421,18,val,Give me the person born as the birth name of Dino Merlin and native of Socialist Federal Republic of Yugoslavia.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v0 . <http://dbpedia.org/resource/Dino_Merlin> <http://dbpedia.org/property/birthName> ?v0 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Socialist_Federal_Republic_of_Yugoslavia> . },"```sparql
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?person WHERE {
  ?person foaf:givenName ""Enis"" .
  ?person foaf:familyName ""Begović"" .
  ?person dbo:birthPlace ?place .
  ?place rdfs:label ?label .
  FILTER (CONTAINS(LCASE(?label), ""socialist federal republic of yugoslavia""))
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
488,25,val,Give me the death place of Tokugawa Ieyasu and administration of the father of Emperor Go-Mizunoo.,SELECT ?result WHERE { <http://dbpedia.org/resource/Emperor_Go-Mizunoo> <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/property/leader> ?v1 . <http://dbpedia.org/resource/Tokugawa_Ieyasu> <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
# Query to get the death place of Tokugawa Ieyasu
SELECT ?deathPlace WHERE {
  dbpedia:Tokugawa_Ieyasu dbo:deathPlace ?deathPlace .
}

UNION

# Query to find notable titles or roles held by Toyotomi Hideyori (father of Emperor Go-Mizunoo)
SELECT ?title WHERE {
  dbpedia:Toyotomi_Hideyori dbo:title ?title .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
232,23,val,Give me the child of the person born as the birth name of Jon Pertwee.,SELECT ?result WHERE { <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/property/birthName> ?v2 . ?v0 <http://dbpedia.org/ontology/child> ?result . ?v0 <http://dbpedia.org/property/birthName> ?v2 . },"```sparql
# Step 1: Find Jon Pertwee's birth name
SELECT ?birthName WHERE {
    dbpedia:Jon_Pertwee dbo:birthName ?birthName .
}

# Step 2: Find a person with the same birth name as Jon Pertwee
SELECT DISTINCT ?person WHERE {
    ?person dbo:birthName ?birthName .
    FILTER(?birthName = ""John Julian Pertwee"")
}

# Step 3: Check if this person has any children and list them
SELECT DISTINCT ?child WHERE {
    ?person dbo:child ?child .
}
```",3,3,4,3,1,3,3,71,0,0,1,0,0.0,0
488,18,val,Give me the birth place of Enomoto Takeaki and death place of Tokugawa Ieyasu and administration of Emperor Go-Yōzei.,SELECT ?result WHERE { <http://dbpedia.org/resource/Tokugawa_Ieyasu> <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Enomoto_Takeaki> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Emperor_Go-Yōzei> . },"```sparql
# Query for the birthplace of Enomoto Takeaki
SELECT ?birthPlace WHERE {
  dbpedia:Enomoto_Takeaki dbo:birthPlace ?birthPlace .
}

# Query for the death place of Tokugawa Ieyasu
SELECT ?deathPlace WHERE {
  dbpedia:Tokugawa_Ieyasu dbo:deathPlace ?deathPlace .
}

# Query for the administration period of Emperor Go-Yōzei
SELECT ?reign WHERE {
  dbpedia:Emperor_Go-Yozei dbo:reign ?reign .
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
820,13,val,Give me the professional in the award of the author of Understanding Comics.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v1 . ?v0 <http://dbpedia.org/property/awards> ?v1 . <http://dbpedia.org/resource/Understanding_Comics> <http://dbpedia.org/ontology/author> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award ?professional WHERE {
  # Find the author of ""Understanding Comics""
  dbr:Understanding_Comics dbo:author ?author .
  
  # Identify awards related to Scott McCloud
  ?author foaf:name ""Scott McCloud""@en ;
          dbo:awardsReceived ?award .

  # Get professionals associated with those awards
  OPTIONAL {
    ?award dbo:recipient ?professional .
  }
}
```",3,3,4,3,1,3,2,20,0,0,39650,0,0.0,0
378,25,val,Give me the war of Joaquín Blake and claim to fame of the commander in Great Siege of Gibraltar.,SELECT ?result WHERE { <http://dbpedia.org/resource/Great_Siege_of_Gibraltar> <http://dbpedia.org/ontology/commander> ?v1 . <http://dbpedia.org/resource/Joaquín_Blake> <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/ontology/knownFor> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war ?claimToFame WHERE {
  # Find wars Joaquín Blake participated in
  OPTIONAL {
    ?joaquinBlake dbo:participatedInWar ?war .
    FILTER(CONTAINS(LCASE(STR(?war)), ""peninsular war""))
  }
  
  # Find Joaquín Blake's claim to fame during the Great Siege of Gibraltar
  ?joaquinBlake dbo:claimToFame ?claimToFame .
  FILTER(CONTAINS(LCASE(STR(?claimToFame)), ""great siege of gibraltar""))

  VALUES ?joaquinBlake { dbr:Joaquín_Blake }
}
```",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
281,32,val,"Give me the entity in the birth place, that is a country, of Bob Heffron and war of the awardee of Knight Grand Cross of the Order of the Bath.",SELECT ?result WHERE { <http://dbpedia.org/resource/Bob_Heffron> <http://dbpedia.org/ontology/birthPlace> ?v3 . ?result <http://dbpedia.org/ontology/place> ?v3 . ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_the_Bath> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
# Step 1: Find Bob Heffron's birth place
SELECT ?birthPlace WHERE {
  dbpedia:Bob_Heffron dbo:birthPlace ?birthPlace .
}

# Step 2: Check if the birth place is a country
SELECT DISTINCT ?country WHERE {
  ?birthPlace rdf:type dbo:Country .
  FILTER(?birthPlace = <INSERT_BIRTH_PLACE_URI_HERE>)
}

# Step 3: Find wars associated with Knight Grand Cross of the Order of the Bath
SELECT DISTINCT ?war WHERE {
  ?recipient dbo:award dbpedia:Knight_Grand_Cross_of_the_Order_of_the_Bath ;
             dbo:participatedInWar ?war .
}

# Step 4: Combine information to find connection between country and war
SELECT DISTINCT ?country ?war WHERE {
  ?birthPlace rdf:type dbo:Country .
  FILTER(?birthPlace = <INSERT_BIRTH_PLACE_URI_HERE>)
  
  ?recipient dbo:award dbpedia:Knight_Grand_Cross_of_the_Order_of_the_Bath ;
             dbo:participatedInWar ?war .
  
  # Assuming there might be a connection through participation or other relations
  OPTIONAL { ?country dbo:relatedTo ?war . }
}
```

Note: Replace `<INSERT_BIRTH_PLACE_URI_HERE>` with the actual URI of Bob Heffron's birth place obtained from Step 1.",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
492,41,val,"Give me the commander in the war, that is a military conflict and an event, of Frédéric-Georges Herr and person decedent at Algiers and person decedent at the work of US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Algiers> . ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Frédéric-Georges_Herr> <http://dbpedia.org/ontology/battle> ?v4 . ?v2 <http://dbpedia.org/property/author> ""US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?war WHERE {
  ?war a dbo:MilitaryConflict ;
      dbo:commander ?commander .
  
  ?commander rdfs:label ""Frédéric-Georges Herr""@en .

  OPTIONAL { 
    ?satterthwaite dbo:deathPlace dbr:Algiers ;
                   rdf:type dbo:Person .
    FILTER(CONTAINS(LCASE(?satterthwaite), ""joseph c. satterthwaite""))
  }
  
  OPTIONAL {
    ?herr dbo:deathPlace dbr:Algiers ;
          rdf:type dbo:Person .
    FILTER(CONTAINS(LCASE(?herr), ""frédéric-georges herr""))
  }

  FILTER EXISTS { ?satterthwaite dbp:occupation dbr:US_Assistant_Secretary_of_State_for_African_Affairs }
}
```",5,7,6,2,3,3,3,71,0,0,1,0,0.0,0
232,43,val,"Give me the native of London and child of Jon Pertwee and actor of the claim to fame, that is a film and a military conflict, of the professional in Actor, narrator and producer.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/ontology/child> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v0 <http://dbpedia.org/ontology/knownFor> ?v4 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/London> . ?v4 <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://dbpedia.org/property/occupation> ""Actor, narrator and producer""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child ?film ?conflict WHERE {
  # Find Jon Pertwee's children
  ?person dbo:spouse ?partner .
  ?partner dbo:child ?child .
  FILTER(CONTAINS(LCASE(?partner), ""jon pertwee""))

  # Ensure the child is a native of London
  ?child dbo:nationality dbr:United_Kingdom ;
         dbo:birthPlace dbr:London .

  # Check if the child has roles as an actor, narrator, and producer
  ?child dbo:occupation dbr:Actor ;
         dbo:occupation dbr:Narrator ;
         dbo:occupation dbr:Producer .

  # Find a film they are known for
  ?film dbo:starring ?child .
  
  # Find a military conflict they are associated with (e.g., through narration or production)
  ?conflict dbo:narratedBy ?child ;
            a dbo:MilitaryConflict .

}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
747,19,val,Give me the person born on the birth date of Pavlo Khudzik and band of Amba Shepherd.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthDate> ?v0 . <http://dbpedia.org/resource/Pavlo_Khudzik> <http://dbpedia.org/ontology/birthDate> ?v0 . <http://dbpedia.org/resource/Amba_Shepherd> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?band 
WHERE {
  # Find Pavlo Khudzik's birth date
  VALUES (?pavloBirthDate) { (dbr:Pavlo_Khudzik dbo:birthday) }
  
  # Find Amba Shepherd's band
  VALUES (?ambaBand) { (dbr:Amba_Shepherd dbo:band) }

  # Retrieve people born on the same date as Pavlo Khudzik
  ?person dbo:birthday ?birthDate .
  FILTER(?birthDate = ?pavloBirthDate)

  OPTIONAL {
    ?person dbo:associatedBand ?band .
    FILTER(?band = ?ambaBand)
  }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
285,11,val,Give me the spouse of Aristotle Onassis and parent of the child of Tina Onassis Niarchos.,SELECT ?result WHERE { <http://dbpedia.org/resource/Tina_Onassis_Niarchos> <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Aristotle_Onassis> . ?v2 <http://dbpedia.org/ontology/parent> ?result . },"```sparql
SELECT ?person WHERE {
  ?onassis dbo:spouse dbr:Aristotle_Onassis .
  ?tina dbo:parent dbr:Tina_Onassis_Niarchos ;
        dbo:child ?child .
  ?person rdfs:label ""Jacqueline Kennedy""@en .
  FILTER(?onassis = ?person || ?tina = ?person)
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
547,43,val,Give me the resting place of James Burton (Egyptologist) and resting place of Alan Cunningham and resting place of the actor of the show with Emily Richard.,SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/restingPlace> ?result . ?v0 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emily_Richard> . <http://dbpedia.org/resource/Alan_Cunningham> <http://dbpedia.org/ontology/restingPlace> ?result . ?v0 <http://dbpedia.org/property/starring> ?v4 . <http://dbpedia.org/resource/James_Burton_(Egyptologist)> <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
# Query for James Burton (Egyptologist)
SELECT ?restingPlace WHERE {
  ?person dbo:name ""James Burton""@en .
  ?person dbo:occupation dbp:Egyptologist .
  OPTIONAL { ?person dbo:deathPlace ?restingPlace . }
  FILTER NOT EXISTS { ?person dbo:burialPlace ?otherPlace } # Prefer burial place if available
}

UNION

# Query for Alan Cunningham
SELECT ?restingPlace WHERE {
  ?person dbo:name ""Alan Cunningham""@en .
  OPTIONAL { ?person dbo:deathPlace ?restingPlace . }
  FILTER NOT EXISTS { ?person dbo:burialPlace ?otherPlace } # Prefer burial place if available
}

UNION

# Query for the actor of the show with Emily Richard
SELECT ?actorRestingPlace WHERE {
  ?show dbo:starring ?actor .
  ?actor dbo:name ""Emily Richard""@en .
  OPTIONAL { ?actor dbo:deathPlace ?actorRestingPlace . }
  FILTER NOT EXISTS { ?actor dbo:burialPlace ?otherActorPlace } # Prefer burial place if available
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
801,21,val,Give me the associated musical artist of Chris Taylor (music producer) and professional in the alter ego of The Shadow.,SELECT ?result WHERE { <http://dbpedia.org/resource/Chris_Taylor_(music_producer)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v1 . },"```sparql
SELECT ?artist WHERE {
  # Find the artist associated with Chris Taylor (music producer)
  ?person rdfs:label ""Chris Taylor (music producer)""@en .
  ?person dbo:associatedBand dbr:Grizzly_Bear .

  BIND(dbr:Grizzly_Bear AS ?artist1)

  # Find the artist associated with The Shadow (Jack White's alter ego)
  ?alterEgo rdfs:label ""The Shadow""@en .
  ?alterEgo dbo:aliasOf dbr:Jack_White .
  ?person dbo:associatedBand ?band .

  FILTER(?band IN (dbr:The_White_Stripes, dbr:Loretta_Lynn)) # Known bands of Jack White

  BIND(?band AS ?artist2)

  # Return the artists
  VALUES (?artist) { ?artist1 ?artist2 }
}
```",3,3,4,2,2,3,3,71,0,0,4,0,0.0,0
435,18,val,Give me the region of Greenwich Mean Time and work of the author of Iceland.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Greenwich_Mean_Time> . ?result <http://dbpedia.org/property/author> ?v0 . <http://dbpedia.org/resource/Iceland> <http://dbpedia.org/property/author> ?v0 . },"```sparql
# Query for regions using Greenwich Mean Time
SELECT ?region WHERE {
  ?region dbo:timeZone dbr:Greenwich_Mean_Time .
}

UNION

# Query for a work by the author of ""Iceland""
SELECT ?work WHERE {
  ?book dbo:author dbr:Halldór_Laxness ;
        rdfs:label ""Iceland""@en .
  
  OPTIONAL { 
    ?author dbo:notableWorks ?work .
  }
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
328,20,val,Give me the awardee of Order of Suvorov and commander in the force of Ferenc Szálasi.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Order_of_Suvorov> . ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Ferenc_Szálasi> . ?v2 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name WHERE {
  ?person dbo:awardedBy dbr:Order_of_Suvorov .
  ?person dbo:commanderOf dbr:Ferenc_Szálasi .
  ?person rdfs:label ?name .
  FILTER (LANG(?name) = 'en')
}
```",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
754,12,val,Give me the parent of the child of Ram Khamhaeng and parent of Loe Thai.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ram_Khamhaeng> <http://dbpedia.org/ontology/child> ?v0 . ?result <http://dbpedia.org/ontology/child> ?v0 . <http://dbpedia.org/resource/Loe_Thai> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?childOfRamKhamhaeng ?parentOfChildOfRamKhamhaeng 
         ?childOfLoeThai ?parentOfChildOfLoeThai
WHERE {
  # Find the child of Ram Khamhaeng and their parent
  dbr:Ram_Khamhaeng dbo:child ?childOfRamKhamhaeng .
  ?childOfRamKhamhaeng dbo:parent ?parentOfChildOfRamKhamhaeng .

  # Find the child of Loe Thai and their parent
  dbr:Loe_Thai dbo:child ?childOfLoeThai .
  ?childOfLoeThai dbo:parent ?parentOfChildOfLoeThai .
}
```",3,3,4,2,2,3,2,20,1,4,0,0.2,1.0,0.33333333333333337
994,32,val,"Give me the associated musical artist of the associated musical artist of Watchtower (band) and associated musical artist of the band member, that is a band and a group and an organisation, of Meshuggah.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Meshuggah> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Watchtower_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
# Step 1: Find an artist associated with Watchtower
SELECT ?associatedArtist WHERE {
  wd:Q1234568 dbo:influencedBy ?artist .
  ?artist rdfs:label ?associatedArtistLabel .
  FILTER (lang(?associatedArtistLabel) = 'en')
} LIMIT 1

# Step 2: Find an artist associated with the artist found in step 1
SELECT ?secondLevelAssociatedArtist WHERE {
  ?artist dbo:influencedBy ?secondLevelArtist .
  ?secondLevelArtist rdfs:label ?secondLevelAssociatedArtistLabel .
  FILTER (lang(?secondLevelAssociatedArtistLabel) = 'en')
} LIMIT 1

# Step 3: Find a Meshuggah member who is also a band/group/organization
SELECT ?member WHERE {
  wd:Q7890123 dbo:bandMember ?person .
  ?person rdf:type ?type .
  FILTER (?type IN (wd:Q4321, wd:Q5678)) # Assuming Q4321 and Q5678 are types for bands/groups/organizations
} LIMIT 1

# Step 4: Find an artist associated with the member found in step 3
SELECT ?memberAssociatedArtist WHERE {
  ?person dbo:influencedBy ?artist .
  ?artist rdfs:label ?memberAssociatedArtistLabel .
  FILTER (lang(?memberAssociatedArtistLabel) = 'en')
} LIMIT 1

# Combine results from steps 2 and 4
SELECT DISTINCT ?finalArtist WHERE {
  VALUES (?artist) { (<result_from_step_2>) }
  VALUES (?person) { (<result_from_step_3>) }
  OPTIONAL { ?artist rdfs:label ?finalArtistLabel . FILTER (lang(?finalArtistLabel) = 'en') }
  OPTIONAL { ?person dbo:influencedBy ?artist2 .
             ?artist2 rdfs:label ?finalArtistLabel2 .
             FILTER (lang(?finalArtistLabel2) = 'en')
           }
}
```

Note: Replace `Q1234568` with the actual DBpedia ID for Watchtower and `Q7890123` with the DBpedia ID for Meshuggah. Also, replace `Q4321` and `Q5678` with the correct types for bands/groups/organizations.",4,7,5,2,2,3,3,71,0,0,5,0,0.0,0
391,19,val,Give me the native of the figure known as Hub City and actor of The Departed.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . <http://dbpedia.org/resource/The_Departed> <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://dbpedia.org/property/nickname> ""Hub City""@en . }","```sparql
SELECT ?nativePlace WHERE {
  wd:Q3386 wdt:P19 ?nativePlace .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
161,18,val,Give me the commander in Biscay Campaign and military force of Spanish Civil War and military force of Rif War.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Rif_War> . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . <http://dbpedia.org/resource/Biscay_Campaign> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
# Query for Biscay Campaign commander and military force during the Spanish Civil War
SELECT ?commander ?militaryForce WHERE {
  ?event dcterms:subject dbc:Biscay_Campaign .
  ?event dbo:partOf dbc:Spanish_Civil_War .
  ?event dbo:commander ?commander .
  ?commander rdfs:label ?commanderLabel FILTER (lang(?commanderLabel) = ""en"") .
  ?event dbo:militaryForce ?militaryForce .
  ?militaryForce rdfs:label ?militaryForceLabel FILTER (lang(?militaryForceLabel) = ""en"") .
}

# Query for Rif War commander and military force
SELECT ?commander ?militaryForce WHERE {
  ?event dcterms:subject dbc:Rif_War .
  ?event dbo:commander ?commander .
  ?commander rdfs:label ?commanderLabel FILTER (lang(?commanderLabel) = ""en"") .
  ?event dbo:militaryForce ?militaryForce .
  ?militaryForce rdfs:label ?militaryForceLabel FILTER (lang(?militaryForceLabel) = ""en"") .
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
48,13,val,"Give me the band of the writer of the work, that is a work, of Shellback (record producer).",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Shellback_(record_producer)> . ?v0 <http://dbpedia.org/property/writer> ?v1 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. },"```sparql
SELECT DISTINCT ?band WHERE {
  # Find works produced by Shellback
  ?work dbo:producer dbr:Shellback .
  
  # Get the writer(s) of that work
  ?work dbo:lyricist ?writer ;
        dbo:musicalArtist ?artist .

  # Find bands associated with the writer
  OPTIONAL { ?writer dbo:band ?band . }
  FILTER(?band != """")
}
```",3,4,4,3,1,3,2,20,0,0,922,0,0.0,0
54,23,val,Give me the child of the father of the child of Thinkhaya of Pagan.,SELECT ?result WHERE { <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/ontology/child> ?result . },"```sparql
SELECT ?grandChild WHERE {
  ?thinkhaya dbo:spouse ?spouse .
  ?thinkhaya rdfs:label ""Thinkhaya of Pagan""@en .
  
  ?child dbo:parent ?thinkhaya ;
         a dbo:Person .

  ?grandChild dbo:parent ?child .
}
```",3,3,4,3,1,3,3,71,0,0,3,0,0.0,0
435,19,val,"Give me the territory administered from the figure known, that is a settlement and a town and Icelandic, as Land of fire and ice and region of Greenwich Mean Time and work of Article 62, Section IV of Constitution of Iceland.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Iceland>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Town>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Greenwich_Mean_Time> . ?v1 <http://dbpedia.org/property/nickname> ""Land of fire and ice""@en . ?result <http://dbpedia.org/ontology/capital> ?v1 . ?result <http://dbpedia.org/property/author> ""Article 62, Section IV of Constitution of Iceland""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?territory WHERE {
  ?person dbo:nationality dbr:Iceland ;
          dbo:officeHolderOf dbr:President_of_Iceland .
  
  ?territory dbo:administeredBy ?person ;
             dbo:location dbr:Iceland ;
             dbo:timeZone dbr/Greenwich_Mean_Time .

  FILTER EXISTS { ?territory dbo:name ""Þingeyri"" }
}
```",4,7,5,2,3,2,3,28,0,0,1,0,0.0,0
314,14,val,Give me the awardee of the award of Sergei Makovetsky and person deceased at Madrid.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ?v2 . <http://dbpedia.org/resource/Sergei_Makovetsky> <http://dbpedia.org/property/awards> ?v2 . ?result <http://dbpedia.org/ontology/restingPlace> <http://dbpedia.org/resource/Madrid> . },"```sparql
SELECT DISTINCT ?person WHERE {
  # Find awards associated with Sergei Makovetsky
  ?makovetsky dbo:awardReceived ?award .
  
  # Find persons who received the same award and died in Madrid
  ?person dbo:awardReceived ?award ;
          dbo:deathPlace dbr:Madrid ;
          dbo:deathDate ?date .

  FILTER EXISTS { ?makovetsky foaf:name ""Sergei Makovetsky""@en }
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
617,15,val,"Give me the parent of Mieszko II Lambert and child of the child, that is a royalty, of the parent of Mlada (abbess).",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Mlada_(abbess)> . ?v1 <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Mieszko_II_Lambert> . ?v1 <http://dbpedia.org/ontology/parent> ?v0 . },"```sparql
# Step 1: Find Mieszko II Lambert's parent
SELECT ?parent WHERE {
  wd:Q123456 wdt:P22 ?parent .
}

# Step 2: Identify Mlada (abbess)'s parent
SELECT ?mladaParent WHERE {
  wd:Q654321 wdt:P22 ?mladaParent .
}

# Step 3: Find the child of Mlada's parent and check if they are royalty
SELECT ?child WHERE {
  ?mladaParent wdt:P40 ?child .
  OPTIONAL { ?child wdt:P39 ?royaltyTitle . }
  FILTER EXISTS { ?child wdt:P39 ?royaltyTitle } # Ensure the child is royalty
}

# Step 4: Combine results to get the final answer
SELECT ?parentOfMieszkoII (GROUP_CONCAT(?child; separator="", "") AS ?royalChild) WHERE {
  wd:Q123456 wdt:P22 ?parentOfMieszkoII .
  ?mladaParent wdt:P40 ?child .
  OPTIONAL { ?child wdt:P39 ?royaltyTitle . }
  FILTER EXISTS { ?child wdt:P39 ?royaltyTitle } # Ensure the child is royalty
}
```

Note: Replace `wd:Q123456` with the actual DBpedia ID for Mieszko II Lambert and `wd:Q654321` with the DBpedia ID for Mlada (abbess).",4,5,5,3,2,3,2,20,0,0,1,0,0.0,0
303,17,val,"Give me the party of Arnulfo Arias and entity in the country, that is a country, of El Valle de Antón.",SELECT ?result WHERE { <http://dbpedia.org/resource/Arnulfo_Arias> <http://dbpedia.org/ontology/party> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/El_Valle_de_Antón> <http://dbpedia.org/ontology/country> ?v1 . ?result <http://dbpedia.org/ontology/country> ?v1 . },"```sparql
SELECT ?party ?country WHERE {
  # Query for Arnulfo Arias' political party
  wd:Q123456 foaf:name ""Arnulfo Arias""@en .
  OPTIONAL { wd:Q123456 dbo:politicalParty ?party . }
  
  # Query for the country of El Valle de Antón
  wd:Q654321 rdfs:label ""El Valle de Antón""@es .
  OPTIONAL { wd:Q654321 dbo:country ?country . }
}
```

Note: Replace `wd:Q123456` with the actual DBpedia resource ID for Arnulfo Arias and `wd:Q654321` with the resource ID for El Valle de Antón.",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
392,12,val,Give me the region of Central European Time and entity in Italy and province of Schio.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy> . <http://dbpedia.org/resource/Schio> <http://dbpedia.org/ontology/province> ?result . ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Central_European_Time> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?region ?province WHERE {
  ?entity dbo:timeZone dbr:Central_European_Time ;
          dbo:country dbr:Italy .
  
  OPTIONAL { 
    ?entity dbo:administrativeRegion ?region .
  }
  
  OPTIONAL {
    ?entity rdfs:label ""Schio""@en .
    ?entity dbo:administrativeUnit ?province .
  }
}
```",3,3,4,1,3,2,3,28,0,0,1,0,0.0,0
285,12,val,Give me the spouse of the professional in  and parent of Alexander Onassis.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v0 . <http://dbpedia.org/resource/Alexander_Onassis> <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/property/occupation> """"@en . }","```sparql
SELECT ?spouse WHERE {
  dbpedia:Aristotle_Onassis dbo:child dbpedia:Alexander_Onassis .
  dbpedia:Aristotle_Onassis dbo:spouse ?spouse .
}
```",3,3,4,2,2,3,2,20,0,0,2,0,0.0,0
492,22,val,"Give me the person decedent at French Algeria and person decedent at the capital, that is a settlement, of Algeria.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/French_Algeria> . <http://dbpedia.org/resource/Algeria> <http://dbpedia.org/ontology/capital> ?v1 . ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?personDecedentInFrenchAlgeria ?personDecedentInAlgiers WHERE {
  # Find person decedent in French Algeria
  ?personDecedentInFrenchAlgeria a dbo:Person ;
                               dbo:deathPlace dbr:French_Algeria .

  # Find person decedent in Algiers, the capital of Algeria
  ?personDecedentInAlgiers a dbo:Person ;
                          dbo:deathPlace dbr:Algiers .
}
```",3,4,4,2,2,3,3,71,16,120,0,0.11764705882352941,1.0,0.21052631578947367
16,32,val,Give me the spouse of the person born as Ted Martin McGinley and professional in the profession of Satomi Ishihara.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ""Ted Martin McGinley""@en . ?result <http://dbpedia.org/property/occupation> ?v3 . ?v1 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Satomi_Ishihara> <http://dbpedia.org/property/occupation> ?v3 . }","```sparql
# Query for the spouse of Ted Martin McGinley
SELECT ?spouse WHERE {
  ?person foaf:name ""Ted Martin McGinley""@en .
  ?person dbo:spouse ?spouse .
}

UNION

# Query for the spouse of Satomi Ishihara
SELECT ?spouse WHERE {
  ?person foaf:name ""Satomi Ishihara""@ja .
  ?person dbo:spouse ?spouse .
}
```",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
378,35,val,Give me the war of the person born as Carl Pontus Gahn and claim to fame of the commander in Great Siege of Gibraltar.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/ontology/knownFor> ?result . <http://dbpedia.org/resource/Great_Siege_of_Gibraltar> <http://dbpedia.org/ontology/commander> ?v1 . ?v2 <http://dbpedia.org/property/birthName> ""Carl Pontus Gahn""@en . }","```sparql
# Query for Carl Pontus Gahn's involvement in a war
SELECT ?war WHERE {
  wd:Q1234567 dbo:participatedIn ?event .
  ?event rdf:type dbo:MilitaryConflict .
  BIND(IRI(CONCAT(""http://dbpedia.org/resource/"", STR(?event))) AS ?war)
}

# Query for the commander of the Great Siege of Gibraltar
SELECT ?commander WHERE {
  wd:Q1234568 dbo:commanded ?siege .
  ?siege rdf:type dbo:MilitaryConflict ;
         rdfs:label ""Great Siege of Gibraltar""@en .
  BIND(IRI(CONCAT(""http://dbpedia.org/resource/"", STR(?commander))) AS ?commander)
}

# Query for the claim to fame of General George Augustus Eliott
SELECT ?fame WHERE {
  wd:Q1234569 dbo:famousFor ?achievement .
  ?achievement rdfs:label ""Defense of Gibraltar""@en .
}
```

Note: Replace `wd:Q1234567`, `wd:Q1234568`, and `wd:Q1234569` with the actual DBpedia identifiers for Carl Pontus Gahn, General George Augustus Eliott, and the Great Siege of Gibraltar respectively.",4,4,5,2,2,3,3,71,0,0,2,0,0.0,0
747,40,val,"Give me the band of Amba Shepherd and band of Shèna and person born on the birth date of the person decedent, that is an athlete and a soccer player, at Zolotonosha.",SELECT ?result WHERE { <http://dbpedia.org/resource/Shèna> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v2 <http://dbpedia.org/ontology/birthDate> ?v1 . ?v2 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Zolotonosha> . ?result <http://dbpedia.org/ontology/birthDate> ?v1 . <http://dbpedia.org/resource/Amba_Shepherd> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
# Query to find the band of Amba Shepherd
SELECT ?band WHERE {
  ?person foaf:name ""Amba Shepherd""@en .
  ?person dbo:memberOf ?band .
}

UNION

# Query to find the band of Shèna
SELECT ?band WHERE {
  ?person foaf:name ""Shèna""@en .
  ?person dbo:memberOf ?band .
}

UNION

# Query to find a deceased athlete and soccer player from Zolotonosha
SELECT ?deceasedPerson ?birthDate WHERE {
  ?deceasedPerson dbo:deathPlace dbr:Zolotonosha ;
                  dbo:sport dbr:Soccer ;
                  dbo:occupation dbr:Athlete ;
                  dbo:birthDate ?birthDate .
}

UNION

# Query to find a person born on the same date as the deceased athlete
SELECT ?person WHERE {
  ?deceasedPerson dbo:birthDate ?birthDate .
  ?person dbo:birthDate ?birthDate .
  FILTER(?person != ?deceasedPerson)
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
783,14,val,"Give me the band member of the person born, that is an artist and a musical artist, as the persona of Ebony Reigns.",SELECT ?result WHERE { <http://dbpedia.org/resource/Ebony_Reigns> <http://xmlns.com/foaf/0.1/givenName> ?v2 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://dbpedia.org/property/birthName> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandMember WHERE {
  ?person a dbo:MusicalArtist ;
          foaf:name ""Ebony Reigns""@en .
  
  OPTIONAL { 
    ?person dbo:member ?bandMember .
  }
}
```",3,5,4,3,1,3,2,20,0,0,7,0,0.0,0
161,27,val,"Give me the commander in the force, that is an event, of the figure known as El Director.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/commander> ?v1 . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://xmlns.com/foaf/0.1/nick> ""El Director""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  # Find the resource representing ""El Director""
  ?elDirector a dbo:Agent ;
              rdfs:label ""El Director""@en .

  # Identify the event associated with El Director
  ?event dbo:agent ?elDirector ;
         rdf:type dbo:Event .

  # Find the commander of the force involved in this event
  ?force dbo:commander ?commander .
  ?event dbo:participatesIn ?force .
}
```",3,4,4,3,1,3,3,71,0,0,85,0,0.0,0
427,31,val,Give me the party of Giulio Andreotti and reference to the name of the party of Michele Pinto.,SELECT ?result WHERE { <http://dbpedia.org/resource/Giulio_Andreotti> <http://dbpedia.org/ontology/party> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v0 . <http://dbpedia.org/resource/Michele_Pinto> <http://dbpedia.org/ontology/party> ?v1 . ?v1 <http://xmlns.com/foaf/0.1/name> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?andreottiPartyLabel ?pintoPartyLabel WHERE {
  # Query for Giulio Andreotti's party
  dbr:Giulio_Andreotti dbo:party ?andreottiParty .
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
  
  # Query for Michele Pinto's party (assuming we are looking for a specific Michele Pinto, e.g., an Italian politician)
  dbr:Michele_Pinto dbo:party ?pintoParty .
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
```",4,4,5,3,2,3,3,71,0,0,2,0,0.0,0
54,25,val,"Give me the parent of Thado Minsaw of Prome and predecessor of the child, that is an office holder and a royalty, of Thihapate of Mohnyin.",SELECT ?result WHERE { <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Thihapate_of_Mohnyin> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/successor> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?parentOfThadoMinsaw ?predecessorOfChild
WHERE {
  # Step 1: Find the parent of Thado Minsaw of Prome
  ?thadoMinsaw dbo:name ""Thado Minsaw""@en .
  ?thadoMinsaw dbo:placeOfBirth dbp:Prome .
  ?thadoMinsaw dbo:parent ?parentOfThadoMinsaw .

  # Step 2: Find a child of Thihapate of Mohnyin who is an office holder and royalty
  ?thihapate dbo:name ""Thihapate""@en .
  ?thihapate dbo:placeOfBirth dbp:Mohnyin .
  ?child dbo:parent ?thihapate ;
         a dbo:Monarch ; # Assuming Monarch indicates royalty
         dbo:officeHolder ?office . # Assuming officeHolder indicates an office

  # Step 3: Find the predecessor of that child in their office or title
  ?office dbo:predecessor ?predecessorOfChild .
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
820,11,val,Give me the child of Jack Schwartzman and professional in the award of Scott McCloud.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/Scott_McCloud> <http://dbpedia.org/property/awards> ?v2 . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Jack_Schwartzman> . },"```sparql
SELECT ?child ?award WHERE {
  # Find Jack Schwartzman's child
  ?person dbo:parent dbr:Jack_Schwartzman .
  ?person rdfs:label ?childLabel .
  FILTER(CONTAINS(LCASE(?childLabel), ""jack schwartzman""))
  
  # Find the award associated with Scott McCloud's profession
  ?award dbo:recipient dbr:Scott_McCloud ;
         dbo:profession dbr:Comics_artist .
  
  # Check if Jack Schwartzman's child is professionally involved in the same award
  OPTIONAL { ?child dbo:award ?award }
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
617,25,val,Give me the parent of the child of Antiochus (son of Antiochus III the Great) and spouse of Laodice IV.,SELECT ?result WHERE { <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/child> ?v1 . ?result <http://dbpedia.org/ontology/child> ?v1 . <http://dbpedia.org/resource/Laodice_IV> <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  ?antiochus a dbo:Person ;
             dbo:father dbr:Antiochus_III_the_Great ;
             dbo:spouse ?spouse .
  ?child dbo:parent ?antiochus, ?spouse .
  ?spouse rdfs:label ""Laodice IV""@en .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
427,39,val,"Give me the party of Giulio Andreotti and party of the person born, that is an office holder and a politician, as the birth name of Romano Prodi.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Giulio_Andreotti> <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/property/birthName> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/property/birthName> ?v0 . },"```sparql
SELECT ?andreottiParty ?prodiParty WHERE {
  # Get the political party for Giulio Andreotti
  dbpedia:Giulio_Andreotti dbo:party ?andreottiParty .
  
  # Get the political party for Romano Prodi
  dbpedia:Romano_Prodi dbo:party ?prodiParty .
}
```",4,6,5,3,2,3,3,71,0,0,3,0,0.0,0
54,43,val,Give me the parent of the child of the parent of Thado Minsaw of Prome and predecessor of Ameitta Thiri Maha Dhamma Dewi of Ava and child of Thinkhaya of Pagan.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Ameitta_Thiri_Maha_Dhamma_Dewi_of_Ava> . <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?result . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> . ?v4 <http://dbpedia.org/property/father> ?v0 . ?v4 <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parentOfParent WHERE {
  # Step 1: Find Thado Minsaw of Prome
  ?thadoMinsaw a dbo:Monarch ;
               dbo:spouse ?parentOfThadoMinsaw .

  # Step 2: Find the parent of Thado Minsaw
  ?parentOfThadoMinsaw a dbo:Person .

  # Step 3: Find the child of this new individual (parent of Thado Minsaw)
  ?childOfParent dbp:fatherOrMother ?parentOfThadoMinsaw .

  # Step 4 & 5: Identify Ameitta Thiri Maha Dhamma Dewi and her predecessor
  ?ameitta dbr:Ameitta_Thiri_Maha_Dhamma_Dewi ;
           dbo:predecessor ?predecessor .

  # Step 6: Ensure the predecessor is also a child of Thinkhaya of Pagan
  ?thinkhaya a dbo:Person ; 
             dbp:name ""Thinkhaya"" .
  
  ?childOfThinkhaya dbp:fatherOrMother ?thinkhaya ;
                    rdf:type dbo:Monarch .

  FILTER (?predecessor = ?childOfParent) # Ensure consistency

  # Step 7: Find the parent of the child identified in step 3
  ?parentOfChild dbp:fatherOrMother ?childOfParent .
  
  BIND(?parentOfChild AS ?parentOfParent)
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
184,38,val,Give me the parent of the child of Archduke Joseph Francis of Austria and child of the child of Archduke Joseph Karl of Austria.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v2 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Karl_of_Austria> . ?result <http://dbpedia.org/property/father> ?v3 . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Francis_of_Austria> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?commonAncestor WHERE {
  # Find the child of Archduke Joseph Francis of Austria
  ?child1 dbo:parent dbr:Archduke_Joseph_Francis_of_Austria .
  
  # Find the parent of this child (grandchild of Archduke Joseph Francis)
  ?grandchild1 dbo:parent ?child1 .

  # Find the child of Archduke Joseph Karl of Austria
  ?child2 dbo:parent dbr:Archduke_Joseph_Karl_of_Austria .
  
  # Find the child of this child (great-grandchild of Archduke Joseph Karl)
  ?greatGrandchild2 dbo:parent ?child2 .

  # Determine the common ancestor (parent) between these two individuals
  ?commonAncestor dbo:child ?grandchild1 ;
                  dbo:child ?greatGrandchild2 .
}
```",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
528,19,val,Give me the war of the military force of Battle of Pisagua and war of Orozimbo Barbosa.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Pisagua> . <http://dbpedia.org/resource/Orozimbo_Barbosa> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
# Query to find the war associated with the Battle of Pisagua
SELECT ?war WHERE {
  dbpedia:Battle_of_Pisagua dbo:partOf ?war .
}

# Query to find the war associated with Orozimbo Barbosa
SELECT ?war WHERE {
  dbpedia:Orozimbo_Barbosa dbo:associatedWithWar ?war .
}
```",3,3,4,2,2,3,3,71,0,0,4,0,0.0,0
659,30,val,"Give me the military force of the force, that is a societal event and an event and a military conflict, of Rutger Jan Schimmelpenninck and commander in German campaign of 1813 and commander in Battle of Leipzig.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Battle_of_Leipzig> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> . <http://dbpedia.org/resource/German_campaign_of_1813> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce WHERE {
  # Identify Rutger Jan Schimmelpenninck
  dbr:Rutger_Jan_Schimmelpenninck dbo:militaryConflict ?conflict .

  # Find the military force associated with him
  ?conflict dbo:participatingMilitaryUnit ?militaryForce .
  
  # Ensure it is a societal event, an event, and a military conflict
  ?conflict rdf:type dbo:SocietalEvent ;
            rdf:type dbo:Event ;
            rdf:type dbo:MilitaryConflict .

  # Confirm involvement in the German campaign of 1813 and Battle of Leipzig
  FILTER EXISTS {
    ?militaryForce dbo:participatingInMilitaryConflicts dbr:German_Campaign_of_1813 .
  }
  FILTER EXISTS {
    ?militaryForce dbo:participatingInMilitaryConflicts dbr:Battle_of_Leipzig .
  }
}
```",4,7,5,2,3,3,3,71,0,0,6,0,0.0,0
801,31,val,Give me the producer of Westside Story (song) and professional in the alter ego of the true self of The Shadow.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Westside_Story_(song)> <http://dbpedia.org/ontology/producer> ?result . ?v1 <http://dbpedia.org/property/alterEgo> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v0 . ?v1 <http://xmlns.com/foaf/0.1/givenName> ""The Shadow""@en . }","```sparql
# Query to get the producer of Westside Story (song)
SELECT ?producer WHERE {
  ?song dcterms:title ""West Side Story (song)"" .
  ?song dbo:producer ?producer .
}

UNION

# Query to get the profession of Lamont Cranston, alter ego of The Shadow
SELECT ?profession WHERE {
  ?character rdfs:label ""The Shadow""@en .
  ?character foaf:name ""Lamont Cranston"" .
  ?character dbo:occupation ?profession .
}
```",4,4,5,3,2,3,3,71,0,0,2,0,0.0,0
251,15,val,"Give me the death place of Laura Mancinelli and location of the war, that is a military conflict, of Louis François Félix Musnier.",SELECT ?result WHERE { <http://dbpedia.org/resource/Laura_Mancinelli> <http://dbpedia.org/ontology/deathPlace> ?result . ?v1 <http://dbpedia.org/ontology/place> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Louis_François_Félix_Musnier> <http://dbpedia.org/ontology/battle> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?deathPlace ?warLocation WHERE {
  # Query for Laura Mancinelli's death place
  OPTIONAL { 
    dbr:Laura_Mancinelli dbo:placeOfBirth ?deathPlace .
  }

  # Query for Louis François Félix Musnier's involvement in wars and their locations
  OPTIONAL {
    ?musnier dbo:occupation dbr:Military_person .
    ?musnier rdfs:label ""Louis François Félix Musnier""@en .
    ?war dbo:participant ?musnier .
    ?war dbo:location ?warLocation .
  }
}
```",3,4,4,2,2,2,3,28,0,0,2,0,0.0,0
996,12,val,Give me the entity in the award of Ekrem Akurgal and force of Dagobert Sigmund von Wurmser.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> ?v0 . ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Dagobert_Sigmund_von_Wurmser> . <http://dbpedia.org/resource/Ekrem_Akurgal> <http://dbpedia.org/property/awards> ?v0 . },"```sparql
SELECT ?award ?force WHERE {
  # Find the award associated with Ekrem Akurgal
  ?ekremAkurgal dbo:wikiPageRedirects dbpedia-tr:Ekrem_Akurgal .
  ?ekremAkurgal dbo:honoraryTitle ?award .

  # Find the military force associated with Dagobert Sigmund von Wurmser
  ?wurmser dbo:wikiPageRedirects dbpedia:Dagobert_Sigmund_von_Wurmser .
  ?wurmser dbo:militaryCommanderOf ?force .
}
```",3,3,4,2,2,3,2,20,0,0,4,0,0.0,0
404,35,val,"Give me the child of the father of Ernest Augustus, Duke of Brunswick and spouse of the person born, that is a royalty, as Princess Victoria Louise of Prussia.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/birthName> ""Princess Victoria Louise of Prussia""@en . ?result <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/property/father> ?v1 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
SELECT ?child WHERE {
  ?father rdf:type dbo:Person .
  ?father foaf:name ""George V of Hanover""@en .
  
  ?spouse rdf:type dbo:Person ;
          foaf:name ""Princess Victoria Louise of Prussia""@en ;
          dbo:spouse ?father .

  ?child dbo:parent ?father, ?spouse .
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
92,33,val,"Give me the associated musical artist of the person born, that is an artist, as the actor of Return to Nuke 'Em High Volume 1 and band member of Nevermore.",SELECT ?result WHERE { <http://dbpedia.org/resource/Return_to_Nuke_'Em_High_Volume_1> <http://dbpedia.org/property/starring> ?v0 . ?v3 <http://dbpedia.org/property/birthName> ?v0 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Nevermore> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artist WHERE {
  ?person a dbo:MusicArtist ;
          foaf:name ""Warrel Dane""@en .
  
  OPTIONAL { 
    ?person dbo:associatedBand dbr:Nevermore . 
  }
  
  OPTIONAL {
    ?person dbo:associatedMusicalArtist ?artist .
  }
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
232,29,val,"Give me the actor of the claim to fame, that is a film and a military conflict, of Sean Pertwee and native of London and child of Jon Pertwee.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/London> . <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/ontology/child> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Sean_Pertwee> <http://dbpedia.org/ontology/knownFor> ?v3 . ?v3 <http://dbpedia.org/ontology/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?filmOrSeries ?militaryConflict WHERE {
  # Sean Pertwee's claim to fame related to a film or series
  dbr:Sean_Pertwee dbo:profession dbr:Actor .
  
  OPTIONAL {
    ?work dbo:starring dbr:Sean_Pertwee ;
          rdf:type dbo:Film OR dbo:TelevisionSeries ;
          dbo:genre ?militaryConflict .
    
    FILTER (CONTAINS(LCASE(?militaryConflict), ""war"") || CONTAINS(LCASE(?militaryConflict), ""conflict""))
  }
  
  # Confirming Sean Pertwee's birthplace
  dbr:Sean_Pertwee dbo:birthPlace dbr:London .

  # Verifying that he is the child of Jon Pertwee
  OPTIONAL {
    ?parent foaf:name ""Jon Pertwee""@en .
    ?parent dbo:child dbr:Sean_Pertwee .
  }
}
```",4,6,5,2,3,3,3,71,0,0,1,0,0.0,0
161,34,val,"Give me the military force of the force, that is a societal event and an event and a military conflict, of the person decedent at Francoist Spain and commander in Biscay Campaign.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v1 . <http://dbpedia.org/resource/Biscay_Campaign> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/commander> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Francoist_Spain> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce WHERE {
  ?person a dbo:MilitaryPerson ;
          foaf:name ""Agustín Muñoz Grandes"" ;
          dbo:militaryConflict ?conflict .
  
  ?conflict dbo:partOf ?event .
  
  OPTIONAL { ?conflict dbo:place ?location . FILTER regex(?location, ""Biscay"", ""i"") }
  
  ?person dbo:memberOf ?militaryForce .
}
```",4,7,5,3,2,3,3,71,0,0,3,0,0.0,0
281,39,val,"Give me the entity in Colony of New Zealand and war of the profession, that is a military unit, of the professional, that is an office holder and a politician, in New Zealand Army.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/property/occupation> ?v1 . ?v0 <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/New_Zealand_Army> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Colony_of_New_Zealand> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?entity WHERE {
  ?entity dbo:country dbr:New_Zealand .
  ?entity dbo:profession ?profession .
  ?profession dbo:relatedToWar ?war .
  ?entity dbo:militaryUnit ?militaryUnit .
  ?militaryUnit dbo:partOfMilitaryOrganization dbr:New_Zealand_Army .
  ?entity dbo:officeHolder ?office .
  ?entity dbo:politicalPartyMember ?party .
}
```",4,7,5,3,2,3,3,71,0,0,1,0,0.0,0
77,15,val,Give me the force of Alexander I of Russia and war of the awardee of the award of Maxim Grigorievich Vlasov.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Maxim_Grigorievich_Vlasov> <http://dbpedia.org/property/awards> ?v0 . ?v1 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Alexander_I_of_Russia> . },"```sparql
# Query for Alexander I of Russia's military force
SELECT ?force WHERE {
  wd:Q1247 dbo:militaryForce ?force .
}

# Query for Maxim Grigorievich Vlasov's awards during World War II
SELECT ?award WHERE {
  wd:Q1234567 dbo:receivedAward ?award .
  ?award dbo:relatedEvent wd:Q318.
}
```

Note: `wd:Q1247` is the DBpedia identifier for Alexander I of Russia, and `wd:Q1234567` would be the identifier for Maxim Grigorievich Vlasov. The exact identifiers should be verified in DBpedia.",4,4,5,3,2,3,2,20,0,0,20,0,0.0,0
184,23,val,"Give me the parent of the native of the landmark at elevation, that is a settlement, of 96.0.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> ?v2 . ?result <http://dbpedia.org/ontology/child> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://dbpedia.org/ontology/elevation> ""96.0""^^<http://www.w3.org/2001/XMLSchema#double> . }","```sparql
SELECT DISTINCT ?parent WHERE {
  ?landmark a dbo:PopulatedPlace ;
            dbo:elevation ""96.0""^^xsd:float .
  
  ?native dbo:nativeOf ?landmark .

  OPTIONAL { ?native rdfs:subClassOf+ ?parent . }
}
```",3,4,4,3,1,3,3,71,0,0,31,0,0.0,0
404,28,val,"Give me the child of Ernest Augustus, Crown Prince of Hanover and parent of Prince Ernest Augustus of Hanover (born 1914) and spouse of the person born, that is a royalty, as Princess Victoria Louise of Prussia.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Prince_Ernest_Augustus_of_Hanover_(born_1914)> . ?v1 <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://dbpedia.org/property/birthName> ""Princess Victoria Louise of Prussia""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ernest_Augustus,_Crown_Prince_of_Hanover> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child ?spouse WHERE {
    # Find the child of Ernest Augustus, Crown Prince of Hanover
    ?parent dbr:Ernest_Augustus,_Crown_Prince_of_Hanover dbo:child ?child .
    
    # Ensure this child is married to Princess Victoria Louise of Prussia
    ?child dbo:spouse dbr:Victoria_Louise_of_Prussia .

    # Confirm the child is a parent of Prince Ernest Augustus of Hanover (born 1914)
    ?child dbo:parent dbr:Prince_Ernest_Augustus_of_Hanover_(1914-1987) .
    
    # Retrieve spouse information
    ?child dbo:spouse ?spouse .
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
487,12,val,"Give me the administration of the person born, that is a soccer player, as Philip Brian Scott and country of 2022 Vermont House of Representatives election.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v0 <http://dbpedia.org/property/birthName> ""Philip Brian Scott""@en . ?result <http://dbpedia.org/property/governor> ?v0 . <http://dbpedia.org/resource/2022_Vermont_House_of_Representatives_election> <http://dbpedia.org/ontology/country> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?administrationRole ?country
WHERE {
  # Find Philip Brian Scott and his administrative roles related to soccer
  ?person a dbo:SoccerPlayer ;
          foaf:name ""Philip Brian Scott"" ;
          dbo:birthName ""Philip Brian Scott"" .
  
  OPTIONAL { 
    ?person dbo:position ?administrationRole .
  }
  
  # Identify the country of the Vermont House of Representatives election
  ?electionEvent dbo:eventLocation dbr:Vermont ;
                 dbo:electionDate ?date .
  FILTER(YEAR(?date) = 2022)
  
  ?location dbo:country ?country .
  FILTER(STRSTARTS(STR(?country), ""http://dbpedia.org/resource/United_States""))
}
```",3,4,4,2,2,3,2,20,0,0,1,0,0.0,0
666,12,val,Give me the player in Steve Bruce and figure known as the nickname of England national beach soccer team.,SELECT ?result WHERE { <http://dbpedia.org/resource/England_national_beach_soccer_team> <http://dbpedia.org/property/nickname> ?v0 . ?result <http://dbpedia.org/property/nickname> ?v0 . <http://dbpedia.org/resource/Steve_Bruce> <http://dbpedia.org/ontology/team> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?player ?nickname
WHERE {
  # Find players associated with Steve Bruce as a manager or player
  ?player dbo:manager dbr:Steve_Bruce .
  
  # Get the nickname of the England national beach soccer team
  dbr:England_national_beach_soccer_team dbo:nickname ?teamNickname .

  # Check if any player is also associated with the nickname (hypothetical connection)
  OPTIONAL { ?player dbo:nickname ?nickname . FILTER(?nickname = ?teamNickname) }
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
994,23,val,Give me the associated musical artist of the associated musical artist of the reference to Watchtower.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v1 <http://xmlns.com/foaf/0.1/name> ""Watchtower""@en . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
# Step 1: Find the artist associated with ""Watchtower""
SELECT ?artist WHERE {
  ?song dcterms:title ""Watchtower""@en .
  ?song dbo:musicalArtist ?artist .
}

# Step 2: Use the result from step 1 to find another associated musical artist of Blue Öyster Cult
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?associatedArtist WHERE {
  VALUES (?blueOysterCult) { <http://dbpedia.org/resource/Blue_Oyster_Cult> }
  
  # Assuming the result from step 1 is stored in a variable or known
  BIND(<http://dbpedia.org/resource/Blue_Oyster_Cult> AS ?artist)

  ?artist dbo:associatedMusicalArtist ?associatedArtist .
}
```

Note: The actual execution of this query would require handling intermediate results, which might involve scripting outside SPARQL to pass the result from step 1 to step 2.",3,3,4,3,1,3,3,71,0,0,16,0,0.0,0
701,33,val,Give me the parent of Meritamen and parent of the child of the child of Seti I.,SELECT ?result WHERE { <http://dbpedia.org/resource/Meritamen> <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seti_I> . ?v3 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/child> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

# Query for the parent of Meritamen
SELECT ?parent WHERE {
  ?meritamen dbo:childOf ?parent .
  FILTER(STR(?meritamen) = ""Meritamen"")
}

UNION

# Query for the parent of the child of the child of Seti I
SELECT ?grandChildParent WHERE {
  ?setiI dbo:child ?ramessesII .
  ?ramessesII dbo:child ?meritamen .
  ?meritamen dbo:child ?grandChild .
  ?grandChild dbo:parent ?grandChildParent .
  FILTER(STR(?setiI) = ""Seti_I"")
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
285,13,val,Give me the parent of the child of the spouse of Aristotle Onassis.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Aristotle_Onassis> . },"```sparql
SELECT ?grandParent WHERE {
  ?onassis dbo:spouse ?spouse .
  FILTER (str(?onassis) = ""Aristotle_Onassis"") .

  ?spouse dbo:child ?child .
  
  ?child dbo:parent ?grandParent .
}
```",3,3,4,3,1,3,2,20,0,0,5,0,0.0,0
994,35,val,"Give me the band member of the person born, that is a musical artist, as Donald Maynard Dokken and associated musical artist of the associated musical artist of Watchtower (band).","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/birthName> ""Donald Maynard Dokken""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . <http://dbpedia.org/resource/Watchtower_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandMember ?associatedArtist WHERE {
  # Step 1 & 2: Identify Donald Maynard Dokken and his band
  dbr:Donald_Dokken a dbo:MusicalArtist ;
                     dbo:associatedBand dbr:Dokken .

  # Step 3: Find members of the band Dokken
  ?bandMember dbo:memberOf dbr:Dokken .
  
  # Step 4: Identify Watchtower and its associated artists
  dbr:Watchtower a dbo:MusicalBand ;
                 dbo:associatedBand ?watchtowerAssociatedArtist .

  # Step 5: Find any connection between Dokken's members and Watchtower-associated artists
  OPTIONAL { ?bandMember dbo:associatedBand ?watchtowerAssociatedArtist }
  
  FILTER(?bandMember != dbr:Donald_Dokken) # Exclude Donald Dokken himself from the results
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
328,36,val,"Give me the leader of the office, that is a government agency, of the leader, that is an office holder and a politician, of Gustav Jonson and awardee of Order of Suvorov.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Order_of_Suvorov> . ?v1 <http://dbpedia.org/ontology/leader> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v0 <http://dbpedia.org/property/office> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Gustav_Jonson> <http://dbpedia.org/property/leader> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
SELECT DISTINCT ?leader WHERE {
  # Step 1: Identify Gustav Jonson as a politician and office holder
  ?gustavJonson dbo:officeHolder ?office .
  ?gustavJonson rdf:type dbo:Politician .

  # Step 2: Determine the government agency or office he leads
  ?office dbo:headOfStateOrGovernment ?agencyLeader .

  # Step 3: Find the leader of that agency or office
  ?leader dbo:award ?orderSuvorov .
  
  # Step 4: Check if this leader has been awarded the Order of Suvorov
  ?orderSuvorov rdfs:label ""Order of Suvorov""@en .

  FILTER(?agencyLeader = ?leader)
}
```",4,7,5,3,2,3,3,71,0,0,1,0,0.0,0
312,7,val,"Give me the entity in Italy and entity in the administration, that is a settlement and a region and Italian and a state, of Democratic Party (Italy).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/province> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Democratic_Party_(Italy)> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?region ?state 
WHERE {
  # Find regions in Italy that might be associated with settlements
  ?region a dbo:Region ;
          dbo:country dbr:Italy ;
          rdfs:label ?regionLabel .
  
  FILTER (lang(?regionLabel) = 'it' && regex(str(?regionLabel), ""Regione""))

  OPTIONAL {
    # Find entities in the administration of Democratic Party that are states
    ?partyMember a dbo:PoliticalParty ;
                 dbo:country dbr:Italy ;
                 rdfs:label ?partyLabel .
    
    FILTER (lang(?partyLabel) = 'it' && regex(str(?partyLabel), ""Partito Democratico""))
    
    ?state a dbo:State ;
           dbo:governingBody ?partyMember ;
           rdfs:label ?stateLabel .
    
    FILTER (lang(?stateLabel) = 'it')
  }
}
```",3,7,4,2,2,2,2,9,0,0,587,0,0.0,0
747,27,val,Give me the band of the person born as the persona of Shèna.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Shèna> <http://xmlns.com/foaf/0.1/givenName> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band WHERE {
  ?person rdfs:label ""Shena""@en .
  ?person dbo:memberOfBand ?band .
}
```",3,3,4,3,1,3,3,71,0,0,8,0,0.0,0
391,44,val,"Give me the actor of the movie, that is a movie and a work and a television show, with Roz Ryan and actor of the claim to fame, that is a work, of Michael Ballhaus and native of Compton, California.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Roz_Ryan> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v4 <http://dbpedia.org/ontology/starring> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Compton,_California> . <http://dbpedia.org/resource/Michael_Ballhaus> <http://dbpedia.org/ontology/knownFor> ?v4 . ?v2 <http://dbpedia.org/property/starring> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. }","```sparql
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actor WHERE {
  ?movie rdf:type dbo:Film ;
         rdf:type dbo:TelevisionShow .
  
  ?movie dbp:starring dbr:Roz_Ryan .

  ?work dbo:director dbr:Michael_Ballhaus .
  FILTER EXISTS { ?work rdfs:label ?title . FILTER regex(?title, ""claim to fame"", ""i"") }
  
  ?movie dbp:starring ?actor .
  
  ?actor dbo:nativePlace dbr:Compton,_California .

}
```",5,9,6,2,3,3,3,71,0,0,1,0,0.0,0
232,18,val,Give me the native of London and child of Jon Pertwee and actor of Dog Soldiers (film).,SELECT ?result WHERE { <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Dog_Soldiers_(film)> <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/London> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  # Find the child of Jon Pertwee
  ?child dbo:parent dbr:Jon_Pertwee .
  
  # Check if this person is native to London
  ?child dbo:nativePlace dbr:London .

  # Verify their role as an actor in ""Dog Soldiers""
  ?film dbp:starring ?person ;
        rdfs:label ""Dog Soldiers""@en .
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
547,27,val,Give me the resting place of the awardee of the award of Gerald Graham.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> ?v1 . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Gerald_Graham> <http://dbpedia.org/property/awards> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?restingPlace WHERE {
  ?person rdfs:label ""Gerald Graham""@en .
  ?person dbo:awardReceived ?award .
  OPTIONAL { ?person dbo:deathPlace ?restingPlace . }
}
```",3,3,4,3,1,3,3,71,0,0,704,0,0.0,0
16,19,val,Give me the spouse of the person born as Ted Martin McGinley and professional in Actress.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/property/birthName> ""Ted Martin McGinley""@en . ?result <http://dbpedia.org/property/occupation> ""Actress""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?spouse WHERE {
  ?person foaf:name ""Ted Martin McGinley""@en .
  ?person dbo:birthName ""Ted Martin McGinley"" .
  ?person dbo:spouse ?spouse .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
285,15,val,Give me the spouse of Aristotle Onassis and parent of the child of the spouse of Aristotle Onassis.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Aristotle_Onassis> . ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/ontology/child> ?v1 . ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Aristotle_Onassis> . },"```sparql
SELECT ?spouse WHERE {
  dbpedia:Aristotle_Onassis dbo:spouse ?spouse .
}
```",4,4,5,3,2,3,2,20,0,0,2,0,0.0,0
696,12,val,Give me the birth place of Tim Brennan and landmark at elevation of the award of Nie Rongzhen.,SELECT ?result WHERE { <http://dbpedia.org/resource/Tim_Brennan> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Nie_Rongzhen> <http://dbpedia.org/property/awards> ?v0 . ?result <http://dbpedia.org/ontology/elevation> ?v0 . },"```sparql
# Query for Tim Brennan's birthplace
SELECT ?birthPlace WHERE {
  ?person foaf:name ""Tim Brennan""@en .
  ?person dbo:birthPlace ?birthPlace .
}

UNION

# Assuming we know the elevation associated with Nie Rongzhen's award, e.g., 1000 meters
SELECT ?landmark WHERE {
  ?landmark geo:elevation ?elevation .
  FILTER(?elevation = 1000) # Replace 1000 with the actual known elevation if available
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
328,37,val,Give me the leader of People's Commissariat of Defense of the Soviet Union and commander in the force of the person decedent at Budapest.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/commander> ?v0 . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Budapest> . <http://dbpedia.org/resource/People's_Commissariat_of_Defense_of_the_Soviet_Union> <http://dbpedia.org/ontology/leader> ?result . },"```sparql
SELECT ?person ?role ?location WHERE {
  VALUES (?name1 ?name2) { (""Joseph Stalin"" ""Rodion Malinovsky"") }
  
  ?person rdfs:label ?name .
  FILTER (CONTAINS(LCASE(?name), LCASE(?name1)) || CONTAINS(LCASE(?name), LCASE(?name2)))
  
  OPTIONAL {
    ?person dbo:positionHeld ?role .
    ?role dbo:title ""People's Commissar for Defence""@en ;
          rdfs:label ?roleLabel .
  }
  
  OPTIONAL {
    ?person dbo:placeOfBirth ?location .
    FILTER(CONTAINS(LCASE(?location), ""Budapest""))
  }

  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
356,12,val,"Give me the player in 2015 Sacramento Republic FC season and team of the native, that is a soccer player and a soccer manager, of Wolverhampton.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/2015_Sacramento_Republic_FC_season> <http://dbpedia.org/ontology/team> ?result . ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Wolverhampton> . ?result <http://dbpedia.org/ontology/manager> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?player ?team WHERE {
  # Find players in the 2015 Sacramento Republic FC team
  ?player dbo:memberOfTeam dbr:Sacramento_Republic_FC.
  
  # Filter by birthplace Wolverhampton
  ?player dbo:birthPlace dbr:Wolverhampton.

  # Ensure they have roles as both a player and manager
  ?player dbo:occupation dbr:Soccer_player .
  OPTIONAL { ?player dbo:occupation dbr:Soccer_manager . }

  # Get the team of the player (for confirmation)
  ?team dbo:member ?player.
}
```",3,5,4,2,2,3,2,20,0,0,1,0,0.0,0
492,18,val,Give me the commander in Franco-Hova Wars and person decedent at French Algeria and person decedent at Algiers.,SELECT ?result WHERE { <http://dbpedia.org/resource/Franco-Hova_Wars> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Algiers> . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/French_Algeria> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?description WHERE {
  # Commander in Franco-Hova Wars
  VALUES (?role) { ""commander"" }
  ?person dbo:occupation ?role .
  ?person rdfs:label ?name .
  FILTER CONTAINS(LCASE(?name), ""joseph gallieni"") .

  UNION

  # Person decedent at French Algeria
  ?person dbo:deathPlace dbr:French_Algeria .
  ?person rdfs:label ?nameAlgeria .

  UNION

  # Person decedent at Algiers
  ?person dbo:deathPlace dbr:Algiers .
  ?person rdfs:label ?nameAlgiers .
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
55,14,val,"Give me the band member of Guns N' Roses and band member of the band member, that is a band and a group, of San Francisco Symphony.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Guns_N'_Roses> . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/San_Francisco_Symphony> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandMember ?associatedBand ?connectionToSymphony WHERE {
  # Step 1: Identify a band member of Guns N' Roses
  VALUES ?gunsNRosesMember { dbr:Saul_Hudson }

  # Step 2: Find bands associated with that member
  ?bandMember dbo:member ?gunsNRosesMember .
  ?associatedBand dbo:member ?bandMember .

  # Step 3: Check for connection to San Francisco Symphony
  OPTIONAL {
    ?connectionToSymphony dbo:performer ?associatedBand ;
                         dbo:location dbr:San_Francisco_Symphony .
  }
  
  FILTER(?connectionToSymphony != """")
}
```",3,5,4,2,2,2,3,28,0,0,1,0,0.0,0
16,30,val,Give me the person born as the birth name of Gigi Rice and professional in Actress and spouse of Ted McGinley.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Actress""@en . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Gigi_Rice> <http://dbpedia.org/property/birthName> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person WHERE {
  ?person foaf:name ""Gigi Rice""@en .
  ?person dbo:birthName ""Gigi Rice"" .
  ?person dbo:occupation dbr:Actress .
  ?marriage dbo:spouse ?person ;
            dbo:spouse <http://dbpedia.org/resource/Ted_McGinley> .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
92,44,val,"Give me the associated musical artist of the person born, that is an artist, as Jim Sheppard and band of the person born as Joseph Michael Furney and band member of Nevermore.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/bandMember> ?v2 . ?v4 <http://dbpedia.org/property/birthName> ""Jim Sheppard""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Nevermore> . ?v2 <http://dbpedia.org/property/birthName> ""Joseph Michael Furney""@en . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
SELECT ?artist1 ?band1 ?artist2 ?band2 WHERE {
  # Find the artist associated with Jim Sheppard
  ?person1 foaf:name ""Jim Sheppard""@en .
  ?person1 dbo:birthName ""Jim Sheppard"" .
  OPTIONAL { ?person1 dbo:musicArtist ?artist1 . }
  OPTIONAL { ?artist1 dbo:band ?band1 . }

  # Find the artist associated with Joseph Michael Furney (Warrel Dane)
  ?person2 foaf:name ""Joseph Michael Furney""@en .
  ?person2 dbo:birthName ""Joseph Michael Furney"" .
  OPTIONAL { ?person2 dbo:musicArtist ?artist2 . }
  OPTIONAL { ?artist2 dbo:band ?band2 . }

  # Ensure the person is associated with Nevermore
  ?person2 dbo:memberOfBand ?nevermore .
  ?nevermore foaf:name ""Nevermore""@en .

  FILTER(?artist1 != ?artist2)
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
404,23,val,"Give me the spouse of the person born, that is a royalty, as the birth name of Princess Victoria Louise of Prussia.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/property/birthName> ?v2 . ?v0 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
SELECT ?spouse WHERE {
  ?person rdfs:label ""Princess Victoria Louise of Prussia""@en .
  FILTER NOT EXISTS { ?person dbo:birthName ?name . FILTER (lang(?name) != 'de') }
  OPTIONAL { ?person dbo:royaltyTitle ?title . }
  ?person dbo:spouse ?spouse .
}
```",3,4,4,3,1,3,3,71,1,0,0,1.0,1.0,1.0
161,40,val,"Give me the commander in Biscay Campaign and military force of Spanish Civil War and military force of the force, that is a societal event and an event and a military conflict, of the person decedent at Francoist Spain.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Biscay_Campaign> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . ?v2 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Francoist_Spain> . ?v1 <http://dbpedia.org/ontology/commander> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?militaryForce ?decedent ?forceOfDecedent WHERE {
  # Biscay Campaign and its commander
  ?campaign dbo:partOf dbr:Spanish_Civil_War ;
            dbo:commander ?commander .
  
  FILTER(STRSTARTS(STR(?campaign), ""http://dbpedia.org/resource/Biscay_Campaign""))

  # Military force of the Spanish Civil War
  ?commander dbo:militaryBranch ?militaryForce .

  # Decedent at Francoist Spain
  ?decedent dbo:deathPlace dbr:Spain ;
            dbo:causeOfDeath ?cause .
  
  FILTER(STRSTARTS(STR(?cause), ""http://dbpedia.org/resource/Francoist_Spain""))

  # Military force of the decedent's force
  ?decedent dbo:militaryBranch ?forceOfDecedent .

}
```",5,8,6,3,3,3,3,71,0,0,3,0,0.0,0
184,19,val,Give me the parent of the native of Budapest and child of Archduke Joseph August of Austria.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Budapest> . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_August_of_Austria> . },"```sparql
SELECT ?person ?parent WHERE {
  ?person dbo:birthPlace dbr:Budapest .
  ?person dbo:parent ?archduke .
  ?archduke rdfs:label ""Archduke Joseph August of Austria""@en .
  OPTIONAL { ?person dbo:parent ?parent . }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
303,14,val,"Give me the entity in the country, that is a country, of El Valle de Antón and party of Guillermo Endara.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/country> ?v2 . <http://dbpedia.org/resource/Guillermo_Endara> <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/El_Valle_de_Antón> <http://dbpedia.org/ontology/country> ?v2 . },"```sparql
SELECT ?entity WHERE {
  ?entity dbo:country dbr:Panama .
  ?entity dbo:memberParty dbr:Panameñista_Party .
}
```",3,4,4,2,2,2,3,28,0,0,2,0,0.0,0
645,12,val,Give me the alma mater of the child of Richard Pankhurst and entity in United Kingdom.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . <http://dbpedia.org/resource/Richard_Pankhurst> <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
SELECT ?almaMater WHERE {
  ?person dbo:spouse ?richardPankhurst .
  ?richardPankhurst foaf:name ""Richard Pankhurst"" .
  ?child dbo:parent ?person ;
         dbo:parent ?richardPankhurst ;
         foaf:name ""Emmeline Pankhurst"" .
  ?emChild dbo:almaMater ?almaMater .
  FILTER(?emChild = ?child)
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
701,22,val,Give me the spouse of the father of Merneptah and parent of Meritamen.,SELECT ?result WHERE { <http://dbpedia.org/resource/Merneptah> <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Meritamen> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/spouse> ?v1 . },"```sparql
SELECT ?spouse WHERE {
  ?merneptah dbo:father ?ramessesII .
  ?ramessesII dbo:child ?meritamen .
  ?ramessesII dbo:spouse ?spouse .
}
```",3,3,4,2,2,3,3,71,0,264,1,0.0,0.0,0
492,43,val,"Give me the commander in the war, that is a military conflict and an event, of the commander in Battle of Verdun and person decedent at French Algeria and person decedent at Algiers.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v4 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Battle_of_Verdun> <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://dbpedia.org/ontology/battle> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/French_Algeria> . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Algiers> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commander ?conflict WHERE {
  # Step 1: Get the commander of the Battle of Verdun
  ?battle dbo:commander ?commander .
  FILTER(STRSTARTS(STR(?battle), ""http://dbpedia.org/resource/Battle_of_Verdun""))

  # Step 2: Check for other military conflicts or events involving this commander
  ?conflict dbo:commander ?commander .
  FILTER(?battle != ?conflict)

  # Step 3: Identify individuals who died in both French Algeria and Algiers
  ?person dbo:deathPlace ?place1, ?place2 .
  VALUES ?place1 { dbr:French_Algeria }
  VALUES ?place2 { dbr:Algiers }

  # Step 4: Find overlap between commanders and decedents
  OPTIONAL {
    ?commander rdfs:label ?name .
    FILTER(CONTAINS(LCASE(?name), ""commander""))
  }
}
```",5,7,6,3,3,3,3,71,0,174,1,0.0,0.0,0
77,13,val,Give me the war of the awardee of the award of Maxim Grigorievich Vlasov.,SELECT ?result WHERE { <http://dbpedia.org/resource/Maxim_Grigorievich_Vlasov> <http://dbpedia.org/property/awards> ?v0 . ?v1 <http://dbpedia.org/property/awards> ?v0 . ?v1 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award ?war 
WHERE {
  VALUES ?vlasov { dbr:Maxim_Vlasov }
  
  ?vlasov dbo:receivedAward ?award .
  OPTIONAL { ?award dbo:relatedToWar ?war . }
}
```",3,3,4,3,1,3,2,20,0,0,436,0,0.0,0
701,44,val,Give me the parent of the child of Ramesses II and spouse of the father of Merneptah and parent of Meritamen.,SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ramesses_II> . ?result <http://dbpedia.org/ontology/spouse> ?v2 . <http://dbpedia.org/resource/Meritamen> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/child> ?v4 . <http://dbpedia.org/resource/Merneptah> <http://dbpedia.org/property/father> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  # Ramesses II's child is Merneptah
  dbr:Merneptah dbo:childOf dbr:Ramesses_II .

  # Spouse of Ramesses II (father of Merneptah)
  dbr:Nefertari dbo:spouse dbr:Ramesses_II .

  # Parent of Meritamen is Nefertari
  dbr:Meritamen dbo:childOf dbr:Ramesses_II .
  dbr:Meritamen dbo:parent dbr:Nefertari .

  # Ramesses II is the parent of Merneptah
  dbr:Merneptah dbo:parent dbr:Ramesses_II .

  # Nefertari is the spouse of Ramesses II's father (Seti I)
  dbr:Seti_I dbo:spouse dbr:Nefertari .
  
  # Nefertari is also a parent of Meritamen
  dbr:Meritamen dbo:parent dbr:Nefertari .

  # The query result should be the parent of Merneptah (Ramesses II) who is also Nefertari
  ?parent rdfs:label ""Nefertari""@en .
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
801,42,val,"Give me the associated musical artist of the writer, that is a musical artist and an artist, of 40 Dayz & 40 Nightz and professional in the alter ego of The Shadow and producer of Westside Story (song).",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/Westside_Story_(song)> <http://dbpedia.org/ontology/producer> ?result . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v2 . <http://dbpedia.org/resource/40_Dayz_&_40_Nightz> <http://dbpedia.org/property/writer> ?v1 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
SELECT ?artist WHERE {
  ?song1 dcterms:title ""40 Dayz & 40 Nightz""@en .
  ?song2 dcterms:title ""Westside Story (song)""@en .
  
  ?song1 dbo:lyricsBy ?writer .
  ?song2 dbo:producer ?producer .

  ?artist foaf:name ""Jay-Z""@en ;
          dbo:alias ""The Shadow"" ;
          ?role ?entity .

  FILTER(?writer = ?artist || ?producer = ?artist)
}
```",5,7,6,2,3,3,3,71,0,0,1,0,0.0,0
328,21,val,"Give me the leader of People's Commissariat of Defense of the Soviet Union and awardee of the award of Bruce Fraser, 1st Baron Fraser of North Cape.","SELECT ?result WHERE { <http://dbpedia.org/resource/Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape> <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/property/awards> ?v1 . <http://dbpedia.org/resource/People's_Commissariat_of_Defense_of_the_Soviet_Union> <http://dbpedia.org/ontology/leader> ?result . }","```sparql
SELECT ?person WHERE {
  ?person dbo:position ""People's Commissar for Defence""@en .
  ?person dbo:awardedBy <http://dbpedia.org/resource/Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape> .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
391,37,val,"Give me the actor of the claim to fame, that is a work, of the spouse of Sherry Hormann and actor of All About the Andersons.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/knownFor> ?v3 . <http://dbpedia.org/resource/All_About_the_Andersons> <http://dbpedia.org/property/starring> ?result . ?v3 <http://dbpedia.org/ontology/starring> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Sherry_Hormann> <http://dbpedia.org/ontology/spouse> ?v0 . },"```sparql
# Step 1: Find Sherry Hormann's spouse
SELECT ?spouse WHERE {
  wd:Q123456 wdt:P26 ?spouse. # Assuming Q123456 is the DBpedia ID for Sherry Hormann
}

# Step 2: Identify the actor of ""All About the Andersons""
SELECT ?actor WHERE {
  wd:Q789012 wdt:P161 ?actor. # Assuming Q789012 is the DBpedia ID for ""All About the Andersons""
}

# Step 3: Find a claim to fame (work) of Sherry Hormann's spouse
SELECT ?work WHERE {
  ?spouse wdt:P800 ?work.
}

# Step 4: Identify the actor associated with this work
SELECT ?actorOfWork WHERE {
  ?work wdt:P161 ?actorOfWork.
}
```

Note: The actual DBpedia IDs for Sherry Hormann and ""All About the Andersons"" need to be determined before executing the query. Replace `Q123456` and `Q789012` with the correct identifiers.",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
365,7,val,"Give me the band of the professional, that is an artist and a musical artist, in Vocalist, musician, songwriter and reference to The Blasters.","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""The Blasters""@en . ?result <http://dbpedia.org/ontology/bandMember> ?v2 . ?v2 <http://dbpedia.org/property/occupation> ""Vocalist, musician, songwriter""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band WHERE {
  ?person dbo:memberOfBand dbr:The_Blasters .
  ?person dbo:occupation ?occupation .
  FILTER (
    CONTAINS(LCASE(?occupation), ""vocalist"") ||
    CONTAINS(LCASE(?occupation), ""musician"") ||
    CONTAINS(LCASE(?occupation), ""songwriter"")
  ) .
  OPTIONAL { 
    ?person dbo:profession dbr:Artist . 
  }
  ?band dbo:member ?person .
}
```",3,5,4,2,2,2,2,9,0,0,1,0,0.0,0
339,14,val,Give me the father of the child of the parent of Princess Olga of Greece and Denmark.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?result . ?v2 <http://dbpedia.org/ontology/child> ?v0 . ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Princess_Olga_of_Greece_and_Denmark> . },"```sparql
SELECT DISTINCT ?father WHERE {
    # Step 1: Identify Princess Olga of Greece and Denmark
    ?olga dbo:wikiPageRedirects db:Princess_Olga_of_Greece_and_Denmark .
    
    # Step 2: Find her parent(s)
    ?olga dbo:parent ?parent .

    # Step 3: Determine the child(ren) of her parent(s)
    ?parent dbo:child ?child .

    # Step 4: Identify the father of that child
    ?child dbo:father ?father .
}
```",3,3,4,3,1,3,2,20,0,0,1,0,0.0,0
360,18,val,Give me the reference to the author of Blinded by the Light and native of Johannesburg.,SELECT ?result WHERE { <http://dbpedia.org/resource/Blinded_by_the_Light> <http://dbpedia.org/property/author> ?v2 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Johannesburg> . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . },"```sparql
SELECT ?author ?birthPlace WHERE {
  ?song dcterms:creator ?author .
  ?author foaf:bornIn ?birthPlace .
  FILTER (str(?song) = ""Blinded by the Light"")
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
345,11,val,Give me the figure known as the nickname of FC Vaduz and team of Alessandro Mangiarratti.,SELECT ?result WHERE { <http://dbpedia.org/resource/FC_Vaduz> <http://dbpedia.org/property/nickname> ?v2 . ?result <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Alessandro_Mangiarratti> . ?result <http://dbpedia.org/property/nickname> ?v2 . },"```sparql
# Query for FC Vaduz's nickname
SELECT ?nickname WHERE {
  dbpedia:FC_Vaduz rdfs:label ?label .
  OPTIONAL { dbpedia:FC_Vaduz foaf:nick ?nickname . }
  FILTER (lang(?label) = 'en')
}

# Query for Alessandro Mangiarratti's team
SELECT ?teamLabel WHERE {
  ?player dbo:birthName ""Alessandro Mangiarratti""@it .
  ?player dbo:playsFor ?team .
  ?team rdfs:label ?teamLabel .
  FILTER (lang(?teamLabel) = 'en')
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
303,15,val,"Give me the party of the commander, that is a politician, in United States invasion of Panama and party of Arnulfo Arias.",SELECT ?result WHERE { <http://dbpedia.org/resource/Arnulfo_Arias> <http://dbpedia.org/ontology/party> ?result . ?v1 <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/United_States_invasion_of_Panama> <http://dbpedia.org/ontology/commander> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?partyLabel WHERE {
  VALUES ?person { 
    dbr:George_H._W._Bush 
    dbr:Arnulfo_Arias
  }
  
  OPTIONAL {
    ?person dbo:politicalParty ?party .
    SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
  }

  FILTER(?party != """")
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
391,18,val,"Give me the actor of The Departed and native of Compton, California and actor of All About the Andersons.","SELECT ?result WHERE { <http://dbpedia.org/resource/The_Departed> <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/All_About_the_Andersons> <http://dbpedia.org/property/starring> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Compton,_California> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?actor WHERE {
  # Find actors in ""The Departed""
  ?film dbo:starring ?actor .
  FILTER(STRSTARTS(STR(?film), STR(dbr:The_Departed))) .

  # Check if the actor is from Compton, California
  OPTIONAL { ?actor dbp:birthPlace dbr:Compton,_California . }
  UNION
  OPTIONAL { ?actor dbo:hometown dbr:Compton,_California . }

  # Find actors in ""All About the Andersons""
  ?film2 dbo:starring ?actor .
  FILTER(STRSTARTS(STR(?film2), STR(dbr:All_About_the_Andersons))) .

  # Ensure the actor is from Compton and acted in both films
  FILTER(EXISTS { ?actor dbp:birthPlace dbr:Compton,_California . } ||
         EXISTS { ?actor dbo:hometown dbr:Compton,_California . })
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
465,7,val,Give me the administration of Czech Pirate Party and death place of the native of Prague.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/deathPlace> ?result . ?result <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Czech_Pirate_Party> . ?v2 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Prague> . },"```sparql
# Query for administration of Czech Pirate Party
SELECT ?person ?position WHERE {
  ?party dcterms:isPartOf dbc:Czech_Pirate_Party .
  ?party dbo:leader ?person .
  ?person dbo:positionHeld ?position .
}

UNION

# Query for death place of Franz Kafka, a native of Prague
SELECT ?deathPlace WHERE {
  dbpedia:franz_kafka dbo:birthPlace dbr:Prague .
  dbpedia:franz_kafka dbo:deathPlace ?deathPlace .
}
```",3,3,4,2,2,2,2,9,0,0,1,0,0.0,0
92,27,val,Give me the band of the person born as the birth name of Joseph Michael.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> ?v2 . <http://dbpedia.org/resource/Joseph_Michael> <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
SELECT ?band WHERE {
  ?person foaf:name ""Joseph Michael""@en .
  ?person dbo:birthName ""Joseph Michael Mele"" .
  ?person dbo:memberOfBand ?band .
  FILTER(CONTAINS(LCASE(STR(?band)), ""europe""))
}
```",3,3,4,3,1,3,3,71,0,0,1,0,0.0,0
392,18,val,"Give me the province of the residence, that is a settlement and Italian, of Sebastiano Bianchetti and region of Central European Time.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://dbpedia.org/ontology/province> ?result . ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Central_European_Time> . <http://dbpedia.org/resource/Sebastiano_Bianchetti> <http://dbpedia.org/property/residence> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?settlement ?province ?region WHERE {
  # Find Sebastiano Bianchetti's residence
  ?person dbo:name ""Sebastiano Bianchetti""@it.
  ?person dbo:residence ?residence.

  # Ensure the residence is a settlement in Italy
  ?residence rdf:type dbo:Settlement;
             dbp:country ""Italy"".

  # Get the province and region of the settlement
  OPTIONAL { ?residence dbo:administrativeTerritory ?province. }
  OPTIONAL { ?province dbo:partOf ?region. }

  # Filter regions under Central European Time (CET)
  FILTER EXISTS {
    ?region dbp:timeZone ""Central European Time"".
  }

  BIND(?residence AS ?settlement) 
}
```",3,5,4,2,2,2,3,28,0,0,1,0,0.0,0
626,14,val,Give me the awardee of the award of the military force of Battle of Borodino.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Borodino> . ?v2 <http://dbpedia.org/property/awards> ?v0 . ?result <http://dbpedia.org/property/awards> ?v0 . },"```sparql
SELECT ?award ?recipient WHERE {
  ?battle dbo:wikiPageRedirects db:Battle_of_Borodino .
  ?battle dbo:awardsReceived ?award .
  ?award dbo:recipient ?recipient .
}
```",3,3,4,3,1,3,2,20,0,0,7855,0,0.0,0
392,17,val,"Give me the region of the time zone, that is a sports event, of Aguilar de Segarra and province of Schio.",SELECT ?result WHERE { <http://dbpedia.org/resource/Aguilar_de_Segarra> <http://dbpedia.org/ontology/timeZone> ?v1 . <http://dbpedia.org/resource/Schio> <http://dbpedia.org/ontology/province> ?result . ?result <http://dbpedia.org/ontology/timeZone> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsEvent>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?location ?timeZone ?sportEvent ?region WHERE {
  # For Aguilar de Segarra
  VALUES (?location) { dbr:Aguilar_de_Segarra }
  
  OPTIONAL { ?location dbo:timeZone ?tzAguilar . }
  OPTIONAL { ?tzAguilar dbo:sportEvent ?eventAguilar . }
  OPTIONAL { ?tzAguilar dbo:region ?regionAguilar . }

  # For Schio
  VALUES (?province) { dbr:Schio }
  
  OPTIONAL { ?province dbo:timeZone ?tzSchio . }
  OPTIONAL { ?tzSchio dbo:sportEvent ?eventSchio . }
  OPTIONAL { ?tzSchio dbo:region ?regionSchio . }

  # Return results
  {
    SELECT ?location ?timeZone ?sportEvent ?region WHERE {
      VALUES (?location) { dbr:Aguilar_de_Segarra }
      ?location dbo:timeZone ?timeZone .
      ?timeZone dbo:sportEvent ?sportEvent .
      ?timeZone dbo:region ?region .
    }
  }

  UNION

  {
    SELECT ?province ?timeZone ?sportEvent ?region WHERE {
      VALUES (?province) { dbr:Schio }
      ?province dbo:timeZone ?timeZone .
      ?timeZone dbo:sportEvent ?sportEvent .
      ?timeZone dbo:region ?region .
    }
  }
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
328,31,val,Give me the commander in Eastern Front (World War II) and awardee of the award of the commander in Volcano and Ryukyu Islands campaign.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Eastern_Front_(World_War_II)> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Volcano_and_Ryukyu_Islands_campaign> <http://dbpedia.org/ontology/commander> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name WHERE {
  ?person a dbo:MilitaryPerson .
  ?person dbo:commanded ?easternFrontCommand .
  ?person dbo:awarded ?volcanoRyukyuAward .

  ?easternFrontCommand dbo:location dbr:Eastern_Front_(World_War_II) .
  ?volcanoRyukyuAward dbo:campaign dbr:Battle_of_the_Volcano_Ryukyu_Islands .

  ?person rdfs:label ?name .
  FILTER (lang(?name) = 'en')
}
```",4,4,5,3,2,3,3,71,0,0,5,0,0.0,0
55,19,val,"Give me the band member of Metallica and band of Newsted and band member of the producer, that is a band, of Used to Love Her.",SELECT ?result WHERE { <http://dbpedia.org/resource/Used_to_Love_Her> <http://dbpedia.org/ontology/producer> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. <http://dbpedia.org/resource/Newsted> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Metallica> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?metallicaMember ?newstedBand ?producer ?producersBand WHERE {
  # Metallica member
  VALUES ?metallicaMember { dbr:James_Hetfield }

  # Jason Newsted's band after Metallica
  VALUES ?newstedBand { 
    dbr:Echobrain 
    dbr:Voivod 
  }
  
  # Producer of ""Used to Love Her""
  ?song dbo:producer ?producer .
  FILTER(STRSTARTS(STR(?song), STR(dbr:)) && ?song = dbr:Used_to_Love_Her)

  # Brendan O'Brien's band
  VALUES ?producersBand { 
    dbr:The_Hold_Steelyard 
  }
  
  OPTIONAL {
    ?producer dbo:bandMember ?producersBand .
  }
}
```",4,5,5,2,3,2,3,28,0,6,1,0.0,0.0,0
528,43,val,Give me the war of Irene Morales and war of the commander in the work of --01-09 and force of Narciso Campero.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Irene_Morales> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Narciso_Campero> . ?v0 <http://dbpedia.org/property/author> ""--01-09""^^<http://www.w3.org/2001/XMLSchema#gMonthDay> . ?v0 <http://dbpedia.org/ontology/commander> ?v4 . ?v4 <http://dbpedia.org/ontology/battle> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?work WHERE {
  ?work dbo:wikiPageDisambiguates ?disambiguation .
  ?disambiguation rdfs:label ""Irene Morales""@en .
  ?work dbo:wikiPageDisambiguates ?disambiguation2 .
  ?disambiguation2 rdfs:label ""Narciso Campero""@en .
  OPTIONAL {
    ?work dbo:subject ?subject .
    ?subject rdfs:label ?warLabel .
    FILTER(CONTAINS(LCASE(?warLabel), ""war""))
  }
}
```",5,5,6,3,3,3,3,71,0,0,2,0,0.0,0
184,27,val,Give me the parent of the child of the parent of Archduchess Margaret of Austria (born 1925).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v2 . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Margaret_of_Austria_(born_1925)> . ?v2 <http://dbpedia.org/property/father> ?v1 . },"```sparql
SELECT ?finalParent WHERE {
    # Step 1: Identify Archduchess Margaret of Austria (born 1925)
    ?margaret dbo:birthDate ?date .
    FILTER (YEAR(?date) = 1925 && STRSTARTS(STR(?margaret), ""http://dbpedia.org/resource/Archduchess_Margaret_of_Austria_(1925)""))
    
    # Step 2: Find her parent
    ?margaret dbo:parent ?parent .

    # Step 3: Find a child of this parent
    ?child dbo:parent ?parent .
    
    # Step 4: Identify the parent of that child
    ?child dbo:parent ?finalParent .
}
```",3,3,4,3,1,3,3,71,0,0,2,0,0.0,0
281,28,val,Give me the entity in Colony of New Zealand and war of New Zealand Army and war of the awardee of Knight Grand Cross of the Order of the Bath.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_the_Bath> . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Colony_of_New_Zealand> . <http://dbpedia.org/resource/New_Zealand_Army> <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?entity WHERE {
  # Entities related to Colony of New Zealand
  VALUES ?colony { dbr:Colony_of_New_Zealand }
  
  # Wars involving the New Zealand Army
  ?war dbo:participatingMilitaryUnit dbr:New_Zealand_Army .
  
  # Awardees of Knight Grand Cross of the Order of the Bath
  ?awardee dbo:award dbr:Knight_Grand_Cross_of_the_Order_of_the_Bath .

  # Find entities that are common across all three categories
  VALUES ?entity {
    ?colony
    ?war
    ?awardee
  }
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
767,43,val,Give me the alma mater of the administration of the reference to George Kilbon Nash and reference to  and entity in Baden-Württemberg.,"SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""George Kilbon Nash""@en . ?result <http://dbpedia.org/ontology/state> <http://dbpedia.org/resource/Baden-Württemberg> . ?v4 <http://dbpedia.org/ontology/almaMater> ?result . ?v4 <http://dbpedia.org/property/governor> ?v0 . ?result <http://xmlns.com/foaf/0.1/name> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?almaMater WHERE {
  # Find George Kilbon Nash's alma mater
  OPTIONAL { 
    dbr:George_Kilbon_Nash dbo:almaMater ?almaMater .
  }
  
  # Look for connections to entities in Baden-Württemberg
  OPTIONAL {
    ?entity dbo:location dbr:Baden-Württemberg ;
            dbo:associatedWith dbr:George_Kilbon_Nash .
    ?entity dbo:almaMater ?almaMater .
  }
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
783,15,val,Give me the band member of Ebony Reigns and associated musical artist of the band member of the person born as Samuel Ofori Amponsah.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://dbpedia.org/property/birthName> ""Samuel Ofori Amponsah""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Ebony_Reigns> . }","```sparql
# Step 1: Find the birth name of Ebony Reigns (Samuel Ofori Amponsah)
SELECT ?person WHERE {
  ?person rdfs:label ""Ebony Reigns""@en .
  ?person foaf:name ?name .
}

# Step 2: Find band members of Ebony Reigns
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?bandMember WHERE {
  VALUES ?ebony { <http://dbpedia.org/resource/Ebony_Reigns> }
  ?ebony dbo:musicalArtist ?bandMember .
}

# Step 3: Find associated musical artists of each band member
PREFIX dbp-artist: <http://dbpedia.org/property/>

SELECT DISTINCT ?bandMember ?associatedArtist WHERE {
  VALUES ?bandMember { 
    # Replace with actual URIs found from step 2
  }
  ?bandMember dbo:musicalArtist ?associatedArtist .
}
```

Note: The SPARQL query for Step 3 requires the actual URIs of band members obtained from Step 2, which are not known beforehand and need to be filled in after executing the first two queries.",4,4,5,3,2,3,2,20,0,0,1,0,0.0,0
485,15,val,"Give me the entity in the region, that is a country, of Western European Time and entity in Nottinghamshire.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Nottinghamshire> . ?v1 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Western_European_Time> . },"```sparql
# Query for countries in the Western European Time zone
SELECT ?country WHERE {
  ?country a dbo:Country .
  ?country dbo:timeZone ""Western European Time"" .
}

UNION

# Query for entities located in Nottinghamshire
SELECT ?entity WHERE {
  ?entity dbo:location dbr:Nottinghamshire .
}
```",3,4,4,2,2,2,3,28,0,0,357,0,0.0,0
659,32,val,"Give me the commander in the war, that is an event and a military conflict, of 1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish) and commander in the force of Arthur Wellesley, 1st Duke of Wellington.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Arthur_Wellesley,_1st_Duke_of_Wellington> . <http://dbpedia.org/resource/1st_Light_Cavalry_Lancers_Regiment_of_the_Imperial_Guard_(Polish)> <http://dbpedia.org/ontology/battle> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commanderNapoleon ?commanderWellington WHERE {
  # Find the commander of the 1st Light Cavalry Lancers Regiment during a Napoleonic War
  ?regiment dbo:partOf ?conflict .
  ?regiment rdfs:label ""1st Light Cavalry Lancers Regiment""@en .
  ?conflict rdf:type dbo:MilitaryConflict .
  ?commanderNapoleon dbo:commander ?regiment .

  # Find Arthur Wellesley, 1st Duke of Wellington's command
  dbr:Arthur_Wellesley_1st_Duke_of_Wellington dbo:commander ?forceWellington .
  
  FILTER(CONTAINS(LCASE(?conflict), ""napoleonic war""))
}
```",4,6,5,2,2,3,3,71,0,0,71,0,0.0,0
701,21,val,Give me the spouse of Ramesses II and parent of the child of Nefertari.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Nefertari> <http://dbpedia.org/ontology/child> ?v1 . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Ramesses_II> . },"```sparql
SELECT ?spouse WHERE {
  wd:Q1513 wdt:P26 ?spouse .
  FILTER EXISTS { 
    ?child wdt:P25 wd:Q1513 ;
           wdt:P22 ?nephertari .
    ?nephertari rdfs:label ""Nefertari""@en .
  }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
391,28,val,Give me the native of the figure known as Hub City and actor of All About the Andersons and actor of The Departed.,"SELECT ?result WHERE { <http://dbpedia.org/resource/The_Departed> <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://dbpedia.org/property/nickname> ""Hub City""@en . <http://dbpedia.org/resource/All_About_the_Andersons> <http://dbpedia.org/property/starring> ?result . }","```sparql
SELECT ?nativePlace WHERE {
  ?person dbo:birthPlace ?nativePlace .
  ?person foaf:name ""Matt Damon""@en .
  ?film1 dbo:starring ?person ;
         rdfs:label ""All About the Andersons""@en .
  ?film2 dbo:starring ?person ;
         rdfs:label ""The Departed""@en .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
492,38,val,"Give me the commander in the war, that is a military conflict and an event, of Frédéric-Georges Herr and person decedent at the capital, that is a settlement, of Algeria.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Algeria> <http://dbpedia.org/ontology/capital> ?v2 . ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . ?v3 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Frédéric-Georges_Herr> <http://dbpedia.org/ontology/battle> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
SELECT ?commander WHERE {
  # Step 1: Identify Frédéric-Georges Herr's involvement in a military conflict/event
  ?conflict dbo:type dbr:Military_conflict .
  ?conflict dbo:type dbr:Event .
  ?herr foaf:name ""Frédéric-Georges Herr""@en .
  ?herr dbo:commanderOf ?conflict .

  # Step 2: Identify a person who died in Algiers, Algeria
  ?person dbo:deathPlace dbr:Algiers .
  ?person dbo:dateOfDeath ?date .
  
  # Ensure the person was involved in the same conflict as Herr
  ?person dbo:commanderOf ?conflict .

  # Step 3: Find the commander of that specific war/conflict
  ?conflict dbo:commander ?commander .
}
```",4,7,5,2,2,3,3,71,0,0,1,0,0.0,0
427,21,val,Give me the party of Romano Prodi and reference to the name of Italian People's Party (1994).,SELECT ?result WHERE { <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Italian_People's_Party_(1994)> <http://xmlns.com/foaf/0.1/name> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?party ?partyName WHERE {
  # Find Romano Prodi's political affiliation in 1994
  dbr:Romano_Prodi dbo:politicalAffiliation ?affiliation .
  
  # Filter for the Italian People's Party (PPI) around 1994
  ?affiliation dbo:name ?party ;
               dbo:foundingDate ?foundingDate .

  FILTER (?foundingDate <= ""1994-12-31""^^xsd:date && 
          ?foundingDate >= ""1994-01-01""^^xsd:date)

  # Get the name of the party
  BIND(?affiliation AS ?party)
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
659,20,val,"Give me the commander in the war, that is an event and a military conflict, of 1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish) and commander in German campaign of 1813.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/German_campaign_of_1813> <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/1st_Light_Cavalry_Lancers_Regiment_of_the_Imperial_Guard_(Polish)> <http://dbpedia.org/ontology/battle> ?v2 . },"```sparql
# Query to find the commander of the 1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish)
SELECT ?commander WHERE {
  ?regiment rdf:type dbo:MilitaryUnit .
  ?regiment rdfs:label ""1st Light Cavalry Lancers Regiment of the Imperial Guard""@en .
  ?regiment dbo:commander ?commander .
  FILTER(CONTAINS(LANG(?regiment), ""en""))
}

UNION

# Query to find Napoleon as the commander in the German campaign of 1813
SELECT ?narrative WHERE {
  ?campaign rdf:type dbo:MilitaryConflict .
  ?campaign rdfs:label ""German campaign of 1813""@en .
  ?campaign dbo:narrative ?narrative .
  ?narrative dbo:commander ?commander .
  FILTER(CONTAINS(LANG(?campaign), ""en""))
  ?commander rdfs:label ""Napoleon Bonaparte""@en .
}
```",3,5,4,2,2,3,3,71,0,0,30,0,0.0,0
294,16,val,"Give me the resting place of Luke Lea (American politician, born 1879) and entity in the birth place, that is a settlement, of Marion James.","SELECT ?result WHERE { <http://dbpedia.org/resource/Luke_Lea_(American_politician,_born_1879)> <http://dbpedia.org/ontology/restingPlace> ?result . ?result <http://dbpedia.org/ontology/location> ?v2 . <http://dbpedia.org/resource/Marion_James> <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. }","```sparql
SELECT ?restingPlace WHERE {
  ?lukeLea dbo:birthDate ""1879-01-01""^^xsd:date ;
           dbo:deathPlace ?deathPlace .
  ?deathPlace dbo:burialLocation ?restingPlace .
  FILTER (str(?lukeLea) = ""Luke Lea (American politician, born 1879)"")

} UNION

SELECT ?settlement WHERE {
  ?marionJames dbo:birthPlace ?birthPlace .
  ?birthPlace a dbo:Settlement .
  FILTER (str(?marionJames) = ""Marion James"")
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
54,29,val,Give me the parent of the child of Narapati I of Ava and predecessor of Ameitta Thiri Maha Dhamma Dewi of Ava and child of Thinkhaya of Pagan.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Narapati_I_of_Ava> . ?v3 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Ameitta_Thiri_Maha_Dhamma_Dewi_of_Ava> . <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  # Narapati I of Ava's child
  ?narapatiI dbr:Narapati_I_of_Ava ;
             dbo:child ?childOfNarapatiI .

  # Ameitta Thiri Maha Dhamma Dewi's predecessor
  ?ameittaThiriMahaDhammaDewi dbr:Ameitta_Thiri_Maha_Dhamma_Dewi ;
                             dbo:predecessor ?predecessorOfAmeitta .

  # Thinkhaya of Pagan's child
  ?thinkhaya dbr:Thinkhaya_of_Pagan ;
             dbo:child ?childOfThinkhaya .

  # Find the common individual
  FILTER(?childOfNarapatiI = ?predecessorOfAmeitta && ?childOfNarapatiI = ?childOfThinkhaya)

  # Get the parent of this individual
  ?parent dbo:child ?commonIndividual .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
528,25,val,Give me the force of the person born as Narciso Campero Leyes and war of Orozimbo Barbosa.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> ?v1 . <http://dbpedia.org/resource/Orozimbo_Barbosa> <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/property/birthName> ""Narciso Campero Leyes""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name ?role WHERE {
  VALUES (?person ?name) {
    (dbr:Narciso_Campero_Leyes ""Narciso Campero Leyes"")
    (dbr:Orozimbo_Barbosa ""Orozimbo Barbosa"")
  }
  
  ?person dbo:name ?name .
  OPTIONAL { 
    ?person dbo:role ?role .
    FILTER(CONTAINS(LCASE(?role), ""war of the pacific""))
  }
}
```",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
959,42,val,"Give me the member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of Eiji Ōtsuka and manager of the team of Takashi Sekizuka and native of Japan.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?v0 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Takashi_Sekizuka> . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Japan> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. <http://dbpedia.org/resource/Eiji_Ōtsuka> <http://dbpedia.org/ontology/almaMater> ?v1 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/team> ?v1 . ?v0 <http://dbpedia.org/ontology/manager> ?result . },"```sparql
SELECT ?university WHERE {
  # Find Eiji Ōtsuka's alma mater
  ?eiji dbo:almaMater ?university.
  
  FILTER (str(?eiji) = ""Eiji_Otsuka"")

  # Ensure the university is in Japan and an organization, educational institution, and a university
  ?university rdf:type dbpedia-owl:University .
  ?university dbo:country dbc:Japan .
  ?university rdf:type dbpedia-owl:EducationalInstitution .
  ?university rdf:type dbpedia-owl:Organization .

  # Find the manager of Takashi Sekizuka's team
  ?manager dbo:managedTeam ?team.
  ?team dbo:member ?takashiSekizuka.

  FILTER (str(?takashiSekizuka) = ""Takashi_Sekizuka"")

  # Ensure this manager is the same as the university found above
  ?manager rdfs:label ?universityLabel .
  
  # Ensure the manager is native to Japan
  ?manager dbo:nationality dbc:Japan .

  FILTER (lang(?universityLabel) = ""en"")
}
```",5,9,6,2,3,3,3,71,0,0,2,0,0.0,0
328,23,val,Give me the awardee of the award of the commander in Volcano and Ryukyu Islands campaign.,SELECT ?result WHERE { <http://dbpedia.org/resource/Volcano_and_Ryukyu_Islands_campaign> <http://dbpedia.org/ontology/commander> ?v2 . ?result <http://dbpedia.org/property/awards> ?v0 . ?v2 <http://dbpedia.org/property/awards> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?recipient ?award WHERE {
  ?campaign dbo:name ""Volcano and Ryukyu Islands Campaign""@en .
  ?action dbo:partOf ?campaign .
  ?recipient dbo:receivedAward ?award .
  ?award dbo:awardedFor ?action .
}
```",3,3,4,3,1,3,3,71,0,0,13262,0,0.0,0
701,41,val,Give me the parent of the child of Ramesses II and spouse of Ramesses II and parent of the child of Nefertari.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Ramesses_II> . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ramesses_II> . <http://dbpedia.org/resource/Nefertari> <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/ontology/child> ?v4 . ?v2 <http://dbpedia.org/ontology/parent> ?result . },"```sparql
SELECT ?child ?spouse ?parent WHERE {
  ?ramesses2 rdf:type dbo:Monarch .
  ?ramesses2 foaf:name ""Ramesses II""@en .
  
  # Find a child of Ramesses II
  ?child dbo:father ?ramesses2 ;
         dbo:mother ?nefertari .

  # Identify Nefertari as the spouse of Ramesses II
  ?nefertari dbo:spouse ?ramesses2 ;
             foaf:name ""Nefertari""@en .
  
  # Confirm that Ramesses II is also a parent of the child of Nefertari (Merneptah)
  ?merneptah dbo:father ?ramesses2 ;
             dbo:mother ?nefertari .

  BIND(?ramesses2 AS ?parent)
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
488,26,val,"Give me the death place of the father, that is a politician, of the father, that is an office holder, of Matsudaira Tadamasa.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Matsudaira_Tadamasa> <http://dbpedia.org/property/father> ?v1 . ?v1 <http://dbpedia.org/property/father> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
SELECT ?deathPlace WHERE {
  # Find Matsudaira Tadamasa
  ?matsudairaTadamasa dbo:birthName ""Matsudaira Tadamasa""@en .
  
  # Identify his father, who is an office holder
  ?father dbo:child ?matsudairaTadamasa ;
          dbo:officeHolder true .

  # Find the grandfather (politician)
  ?grandfather dbo:child ?father ;
               dbo:occupation ""Politician"" .

  # Get the death place of the politician grandfather
  ?grandfather dbo:deathPlace ?deathPlace .
}
```",3,5,4,3,1,3,3,71,0,0,2,0,0.0,0
161,26,val,"Give me the military force of the force, that is a societal event and a military conflict, of the predecessor of Indalecio Prieto.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/commander> ?v1 . ?v1 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Indalecio_Prieto> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce WHERE {
  # Identify Indalecio Prieto's predecessor in a political role
  dbr:Indalecio_Prieto dbo:predecessor ?predecessor .
  
  # Determine the societal event and military conflict
  ?societalEvent dbo:relatedPoliticalEntity ?predecessor ;
                rdf:type dbo:SocietalEvent ;
                dbo:relatedMilitaryConflict ?militaryConflict .

  ?militaryConflict dbo:participatingMilitaryForce ?militaryForce .

  FILTER(?societalEvent = dbr:Spanish_Civil_War)
}
```",3,5,4,3,1,3,3,71,0,0,514,0,0.0,0
666,15,val,"Give me the player in the manager, that is a sports manager, of the team, that is a soccer club and a sports team season, of Leonid Slutsky (football coach) and figure known as The Three Lions.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?result <http://dbpedia.org/property/nickname> ""The Three Lions""@en . ?v1 <http://dbpedia.org/ontology/team> ?result . ?v0 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Leonid_Slutsky_(football_coach)> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v0 <http://dbpedia.org/ontology/manager> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?player WHERE {
  # Leonid Slutsky's managed club
  ?slutskyTeam dbo:manager dbr:Leonid_Slutsky .
  
  # The Three Lions (England national team)
  ?englandTeam a dbo:SoccerClub ;
               rdfs:label ""England national football team""@en .

  # Player who was manager of both teams and also played for them
  ?player dbo:manager ?slutskyTeam ;
          dbo:manager ?englandTeam ;
          dbo:position dbr:Association_football_position .
  
  FILTER (lang(?slutskyTeamLabel) = 'en' && lang(?englandTeamLabel) = 'en')
}
```",4,7,5,3,2,3,2,20,0,0,2,0,0.0,0
547,28,val,Give me the resting place of Alan Cunningham and resting place of Simon Cadell and resting place of the child of James Burton (property developer).,SELECT ?result WHERE { <http://dbpedia.org/resource/James_Burton_(property_developer)> <http://dbpedia.org/ontology/child> ?v1 . <http://dbpedia.org/resource/Simon_Cadell> <http://dbpedia.org/ontology/restingPlace> ?result . ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Alan_Cunningham> <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?individual ?name ?restingPlace WHERE {
  # Alan Cunningham's resting place
  { 
    VALUES (?individual) {(Alan_Cunningham)}
    OPTIONAL { ?individual dbo:name ?name . }
    OPTIONAL { ?individual dbo:deathPlace ?restingPlace . }
  } UNION
  # Simon Cadell's resting place
  { 
    VALUES (?individual) {(Simon_Cadell)}
    OPTIONAL { ?individual dbo:name ?name . }
    OPTIONAL { ?individual dbo:deathPlace ?restingPlace . }
  } UNION
  # Child of James Burton (property developer)
  {
    ?james dbp:child ?child .
    FILTER(?james = <http://dbpedia.org/resource/James_Burton_(property_developer)>)
    OPTIONAL { ?child dbo:name ?name . }
    OPTIONAL { ?child dbo:deathPlace ?restingPlace . }
  }
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
16,24,val,Give me the professional in the profession of Satomi Ishihara and person born as Georgeanne Marie Rice.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Georgeanne Marie Rice""@en . <http://dbpedia.org/resource/Satomi_Ishihara> <http://dbpedia.org/property/occupation> ?v2 . ?result <http://dbpedia.org/property/occupation> ?v2 . }","```sparql
# Query to get the profession of Satomi Ishihara
SELECT ?profession WHERE {
  wd:Q123456 rdfs:label ""Satomi Ishihara""@en .
  OPTIONAL { wd:Q123456 dbo:occupation ?profession . }
}

UNION

# Query to find a person born as Georgeanne Marie Rice and their profession
SELECT ?person ?profession WHERE {
  ?person foaf:name ""Georgeanne Marie Rice"" .
  ?person dbo:birthName ""Georgeanne Marie Rice"" .
  OPTIONAL { ?person dbo:occupation ?profession . }
}
```

Note: Replace `wd:Q123456` with the actual DBpedia resource identifier for Satomi Ishihara if known. The above query assumes a placeholder ID.",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
485,16,val,"Give me the entity in United Kingdom and entity in the birth place, that is a region, of Joseph Whitaker (naturalist).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?result <http://dbpedia.org/ontology/country> ?v2 . <http://dbpedia.org/resource/Joseph_Whitaker_(naturalist)> <http://dbpedia.org/ontology/birthPlace> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthPlaceRegion ?ukEntity
WHERE {
  # Find Joseph Whitaker's birthplace and ensure it is a region
  dbr:Joseph_Whitaker_(naturalist) dbo:birthPlace ?birthPlace .
  ?birthPlace rdf:type dbo:AdministrativeTerritory ;
              rdfs:label ?birthPlaceLabel .

  FILTER (CONTAINS(LCASE(?birthPlaceLabel), ""region""))

  # Find an entity in the United Kingdom associated with Joseph Whitaker
  OPTIONAL {
    dbr:Joseph_Whitaker_(naturalist) dbo:residence|dbo:workLocation ?ukEntity .
    ?ukEntity rdf:type dbo:AdministrativeTerritory ;
              dbp:country ""United Kingdom""^^xsd:string .
  }
}
```",3,4,4,2,2,2,3,28,0,0,357,0,0.0,0
712,15,val,"Give me the resting place of Nina Onilova and capital of the country of the military force, that is an organisation and a military unit, of Vyoshenskaya Uprising.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/capital> ?result . ?v0 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Vyoshenskaya_Uprising> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. <http://dbpedia.org/resource/Nina_Onilova> <http://dbpedia.org/ontology/restingPlace> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/ontology/country> ?v1 . },"```sparql
# Query to find the resting place of Nina Onilova
SELECT ?restingPlace WHERE {
  dbpedia:Nina_Onilova dbo:deathPlace ?restingPlace .
}

UNION

# Query to find the military force involved in Vyoshenskaya Uprising and its country's capital
SELECT ?capital WHERE {
  # Find the military unit involved in Vyoshenskaya Uprising
  ?uprising dbp:eventType ""Vyoshenskaya Uprising"" .
  ?uprising dbo:agent ?militaryUnit .

  # Determine the country of the military unit
  ?militaryUnit dbo:country ?country .

  # Get the capital of that country
  ?country dbo:capital ?capital .
}
```",4,6,5,3,2,3,2,20,0,0,1,0,0.0,0
378,19,val,Give me the war of the person born as Carl Pontus Gahn and war of Joaquín Blake.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Joaquín_Blake> <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/property/birthName> ""Carl Pontus Gahn""@en . }","```sparql
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT DISTINCT ?person ?war WHERE {
  VALUES (?personName) { 
    (""Carl Pontus Gahn"" ""Joaquín Blake y Joyes"")
  }
  
  ?person rdfs:label ?personLabel .
  FILTER (CONTAINS(LCASE(?personLabel), LCASE(?personName)))
  
  OPTIONAL {
    ?person dbp:participatedInWar ?war .
  }

  FILTER (!isBlank(?war))
}
```",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
617,39,val,Give me the spouse of Laodice IV and parent of the child of the commander in Battle of Panium.,SELECT ?result WHERE { <http://dbpedia.org/resource/Laodice_IV> <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/ontology/child> ?v1 . ?result <http://dbpedia.org/ontology/child> ?v1 . <http://dbpedia.org/resource/Battle_of_Panium> <http://dbpedia.org/ontology/commander> ?v0 . },"```sparql
SELECT ?spouse WHERE {
  dbpedia:Laodice_IV dbo:spouse ?spouse .
}

UNION

SELECT ?parent WHERE {
  ?child dbo:parent ?parent ;
         dbo:fatherOrMother <http://dbpedia.org/resource/Antiochus_III> .
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
328,25,val,"Give me the commander in Eastern Front (World War II) and leader of the office, that is a government agency, of Joseph Stalin.",SELECT ?result WHERE { <http://dbpedia.org/resource/Joseph_Stalin> <http://dbpedia.org/property/office> ?v1 . ?v1 <http://dbpedia.org/ontology/leader> ?result . <http://dbpedia.org/resource/Eastern_Front_(World_War_II)> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?office WHERE {
  ?commander a dbo:MilitaryPerson ;
             foaf:name ""Georgy Zhukov""@en .
  
  OPTIONAL { 
    ?commander dbo:positionHeld ?office .
    ?office dbo:head dbr:Georgy_Zhukov .
    ?office dbo:country dbr:Soviet_Union .
  }
}
```",3,4,4,2,2,3,3,71,0,1,1,0.0,0.0,0
827,12,val,"Give me the father of the child, that is a royalty, of Charles Augustus, Hereditary Grand Duke of Saxe-Weimar-Eisenach (1844–1894) and child of Charles Alexander, Grand Duke of Saxe-Weimar-Eisenach.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Charles_Alexander,_Grand_Duke_of_Saxe-Weimar-Eisenach> <http://dbpedia.org/ontology/child> ?result . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Charles_Augustus,_Hereditary_Grand_Duke_of_Saxe-Weimar-Eisenach_(1844–1894)> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  ?person a dbo:Person ;
          foaf:name ""Charles Augustus, Hereditary Grand Duke of Saxe-Weimar-Eisenach""@en .
  ?person dbo:child dbr:Charles_Alexander,_Grand_Duke_of_Saxe-Weimar-Eisenach .
  ?father dbo:spouse ?mother .
  ?mother dbo:child ?person .
}
```",3,4,4,2,2,3,2,20,0,0,1,0,0.0,0
492,24,val,"Give me the commander in the war, that is a military conflict and an event, of Frédéric-Georges Herr and person decedent at Algiers.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Algiers> . <http://dbpedia.org/resource/Frédéric-Georges_Herr> <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?conflict WHERE {
  ?herr a dbo:MilitaryPerson ;
        foaf:name ""Frédéric-Georges Herr""@en .
  
  ?commandership dbo:commander ?herr ;
                 dbo:event ?conflict .

  OPTIONAL { 
    ?herr dbp:placeOfDeath dbr:Algiers .
  }

  FILTER EXISTS {
    ?herr dbp:placeOfDeath dbr:Algiers .
  }
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
179,11,val,Give me the parent of Ubol Ratana and person born as the birth name of Sirikit.,SELECT ?result WHERE { <http://dbpedia.org/resource/Sirikit> <http://dbpedia.org/property/birthName> ?v2 . ?result <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Ubol_Ratana> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?ubolParent ?sirikitBirthName WHERE {
  # Find Ubol Ratana's parent (father)
  ?ubol a dbo:Person ;
        foaf:name ""Ubol Ratana""@en ;
        dbo:parent ?ubolParent .
  
  # Find Sirikit's birth name
  ?sirikit a dbo:Person ;
           foaf:name ""Sirikit""@en ;
           rdfs:label ""Queen Sirikit""@en ;
           dbo:birthName ?sirikitBirthName .

  # Ensure the parent of Ubol Ratana is the same as the person married to Sirikit
  FILTER (?ubolParent = dbr:Bhumibol_Adulyadej)
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
427,40,val,Give me the party of Giulio Andreotti and reference to the name of the party of Michele Pinto and party of Romano Prodi.,SELECT ?result WHERE { <http://dbpedia.org/resource/Michele_Pinto> <http://dbpedia.org/ontology/party> ?v2 . ?v2 <http://xmlns.com/foaf/0.1/name> ?v1 . <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Giulio_Andreotti> <http://dbpedia.org/ontology/party> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?partyLabel WHERE {
  VALUES ?person { 
    dbr:Giulio_Andreotti 
    dbr:Michele_Pinto_(politician) 
    dbr:Romano_Prodi
  }
  
  OPTIONAL { ?person dbo:partyAffiliation ?party . }
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }

} ORDER BY ?person
```",5,5,6,3,3,3,3,71,0,0,2,0,0.0,0
747,35,val,Give me the person born on the birth date of Pavlo Khudzik and band of the person born as Tracey Elizabeth McSween.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ""Tracey Elizabeth McSween""@en . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/birthDate> ?v2 . <http://dbpedia.org/resource/Pavlo_Khudzik> <http://dbpedia.org/ontology/birthDate> ?v2 . }","```sparql
# Query to get Pavlo Khudzik's birth date
SELECT ?birthDate WHERE {
  dbpedia:en:Pavlo_Khudzik dbo:birthDate ?birthDate .
}

# Assuming we have retrieved the birth date, let's call it ""YYYY-MM-DD"" for this example

# Query to find a person born on Pavlo Khudzik's birth date and Tracey Elizabeth McSween's band
SELECT DISTINCT ?personName (GROUP_CONCAT(?band; separator="", "") AS ?bands) WHERE {
  # Find a person with the same birth date as Pavlo Khudzik
  ?person dbo:birthDate ""YYYY-MM-DD""^^xsd:date .
  
  # Get the name of that person
  ?person rdfs:label ?personName .
  FILTER(LANG(?personName) = 'en')
  
  OPTIONAL {
    # Find Tracey Elizabeth McSween's band
    dbpedia:Tracey_Elizabeth_McSween dbo:band ?band .
    
    # Get the name of the band
    ?band rdfs:label ?bandLabel .
    FILTER(LANG(?bandLabel) = 'en')
  }
}
```

Replace `""YYYY-MM-DD""` with the actual birth date retrieved from the first query.",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
92,43,val,"Give me the associated musical artist of the person born, that is an artist, as the actor of Return to Nuke 'Em High Volume 1 and band member of Nevermore and band of Joseph Michael.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Joseph_Michael> . <http://dbpedia.org/resource/Return_to_Nuke_'Em_High_Volume_1> <http://dbpedia.org/property/starring> ?v0 . ?v4 <http://dbpedia.org/property/birthName> ?v0 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Nevermore> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person ?associatedArtist WHERE {
  # Find the actor of ""Return to Nuke 'Em High Volume 1""
  ?movie dbo:title ""Return to Nuke 'Em High Volume 1""@en .
  ?actor dbo:actor ?movie .

  # Check if this actor is a member of Nevermore
  ?band dbr:Nevermore ;
        dbo:member ?actor .

  # Verify if this person is associated with Joseph Michael as a band
  ?person dbr:Joseph_Michael ;
          dbo:associatedBandMember ?actor .

  # Retrieve their associated musical artists
  OPTIONAL { ?artist dbo:associatedMusicalArtist ?person . }
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
701,24,val,Give me the parent of the child of Ramesses II and spouse of Ramesses II.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ramesses_II> . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Ramesses_II> . ?result <http://dbpedia.org/ontology/child> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child ?parent ?spouse WHERE {
  # Ramesses II's children
  ?child dbo:father dbr:Ramesses_II .
  
  # The parent of the child (should be Ramesses II)
  ?child dbo:parent ?parent .

  # Ramesses II's spouse
  dbr:Ramesses_II dbo:spouse ?spouse .
}
```",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
959,23,val,"Give me the member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of the person born in 1958.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?result <http://dbpedia.org/ontology/team> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://dbpedia.org/ontology/birthYear> ""1958""^^<http://www.w3.org/2001/XMLSchema#gYear> . ?v1 <http://dbpedia.org/ontology/almaMater> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?almaMater WHERE {
  ?person dbo:birthYear ""1958""^^xsd:gYear .
  ?person dbo:almaMater ?almaMater .
  
  ?almaMater a dbo:EducationalInstitution ;
             dbo:country dbr:Japan ;
             rdf:type dbo:University ;
             rdf:type dbo:Organization .
}
```",3,7,4,3,1,3,3,71,0,0,524,0,0.0,0
251,19,val,"Give me the administration of Forza Italia (2013) and death place of Laura Mancinelli and location of the war, that is a military conflict, of Louis François Félix Musnier.",SELECT ?result WHERE { <http://dbpedia.org/resource/Laura_Mancinelli> <http://dbpedia.org/ontology/deathPlace> ?result . ?result <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Forza_Italia_(2013)> . ?v2 <http://dbpedia.org/ontology/place> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Louis_François_Félix_Musnier> <http://dbpedia.org/ontology/battle> ?v2 . },"```sparql
# Query 1: Administration of Forza Italia (2013)
SELECT ?person WHERE {
  ?party dcterms:title ""Forza Italia""@en .
  ?party dbo:leader ?person .
  ?person dbo:officePeriodStartYear ?startYear .
  ?person dbo:officePeriodEndYear ?endYear .
  FILTER (?startYear <= 2013 && (BOUND(?endYear) -> ?endYear >= 2013))
}

# Query 2: Death Place of Laura Mancinelli
SELECT ?deathPlace WHERE {
  ?mancinelli dbo:birthName ""Laura Mancinelli""@en .
  ?mancinelli dbo:placeOfDeath ?deathPlace .
}

# Query 3: Location of the War involving Louis François Félix Musnier
SELECT DISTINCT ?warLocation WHERE {
  ?musnier dbo:birthName ""Louis François Félix Musnier""@en .
  ?musnier dbo:militaryConflict ?conflict .
  ?conflict dbo:location ?warLocation .
}
```",4,5,5,2,3,2,3,28,0,0,1,0,0.0,0
547,26,val,Give me the resting place of the actor of the show with Emily Richard.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emily_Richard> . ?v1 <http://dbpedia.org/property/starring> ?v2 . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
SELECT ?actor ?restingPlace WHERE {
  ?show dbo:starring ?person .
  ?person foaf:name ""Emily Deschanel""@en .
  ?show dbo:starring ?coActor .
  ?coActor foaf:name ""David Boreanaz""@en .
  OPTIONAL { ?coActor dbo:placeOfBurial ?restingPlace . }
}
```",3,3,4,3,1,3,3,71,0,0,2,0,0.0,0
314,13,val,Give me the person deceased at the headquarter of House of Sombrerete and awardee of 30.,"SELECT ?result WHERE { <http://dbpedia.org/resource/House_of_Sombrerete> <http://dbpedia.org/ontology/location> ?v1 . ?result <http://dbpedia.org/property/awards> ""30""^^<http://www.w3.org/2001/XMLSchema#integer> . ?result <http://dbpedia.org/ontology/restingPlace> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?deathPlace ?awardCount WHERE {
  # Find the headquarters of the House of Sombrerete
  ?house dbr:House_of_Sombrerete ;
         dbo:headquarters ?headquarters .

  # Identify people who died at this location
  ?person dbo:placeOfDeath ?deathPlace .
  FILTER (?deathPlace = ?headquarters)

  # Check if the person has received 30 awards
  OPTIONAL { 
    ?person dbp:number_of_awards ?awardCount .
    FILTER (xsd:integer(?awardCount) = 30)
  }

  # Ensure we only get people with exactly 30 awards
  FILTER (!isBlank(?awardCount))
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
617,19,val,"Give me the spouse of Laodice IV and child of the child, that is a royalty, of Seleucus II Callinicus.",SELECT ?result WHERE { <http://dbpedia.org/resource/Laodice_IV> <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seleucus_II_Callinicus> . ?result <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
SELECT ?spouse ?child ?grandchild WHERE {
  # Find Laodice IV's spouse
  dbpedia:Laodice_IV dbo:spouse ?spouse .
  
  # Find their child
  ?spouse dbo:child ?child .

  # Ensure the child is royalty (e.g., a king or queen)
  OPTIONAL { ?child rdf:type dbo:Monarch . }

  # Find the grandchild who is also royalty
  ?child dbo:child ?grandchild .
  OPTIONAL { ?grandchild rdf:type dbo:Monarch . }
  
  FILTER EXISTS { ?child rdf:type dbo:Monarch } 
  FILTER EXISTS { ?grandchild rdf:type dbo:Monarch }
}
```",3,4,4,2,2,3,3,71,0,0,3,0,0.0,0
16,39,val,Give me the person born as the birth name of the alumnus of Ohio State University and professional in Actress.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Ohio_State_University> . ?result <http://dbpedia.org/property/occupation> ""Actress""@en . ?result <http://dbpedia.org/property/birthName> ?v1 . }","```sparql
SELECT ?person ?birthName WHERE {
  ?person dbo:almaMater dbr_Ohio_State_University ;
          dbo:occupation dbr_Actress .
  OPTIONAL { ?person foaf:name ?birthName . }
}
```",4,4,5,3,2,3,3,71,0,0,3,0,0.0,0
528,31,val,"Give me the war of the military force of the entity, that is a societal event, in Chile and war of Orozimbo Barbosa.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://dbpedia.org/ontology/battle> ?v1 . <http://dbpedia.org/resource/Orozimbo_Barbosa> <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Chile> . ?v0 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?chileWar ?militaryForceChile ?orozimboBarbosaWar ?militaryForceOrozimbo 
WHERE {
  # Find wars in Chile that are societal events
  ?chileWar dbo:type dbr:Societal_event .
  ?chileWar dbo:location dbr:Chile .
  ?chileWar dbo:military_force ?militaryForceChile .

  # Find the war associated with Orozimbo Barbosa
  ?orozimboBarbosaWar dbo:participant dbr:Orozimbo_Barbosa .
  ?orozimboBarbosaWar dbo:military_force ?militaryForceOrozimbo .
}
```",4,5,5,3,2,3,3,71,0,0,9,0,0.0,0
659,28,val,"Give me the commander in the force of Arthur Wellesley, 1st Duke of Wellington and commander in Battle of Leipzig and military force of Napoleonic Wars.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Battle_of_Leipzig> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Napoleonic_Wars> . ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Arthur_Wellesley,_1st_Duke_of_Wellington> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?battle ?role WHERE {
  VALUES (?person) { dbr:Arthur_Wellesley,_1st_Duke_of_Wellington }
  
  # Find Wellesley's role in the Napoleonic Wars
  ?person dbo:militaryConflict dbr:Napoleonic_Wars .
  
  # Find Wellesley's command at the Battle of Leipzig
  OPTIONAL {
    ?battle dbo:commander ?commander ;
            a dbo:MilitaryEngagement ;
            rdfs:label ""Battle of Leipzig""@en .
    
    FILTER(CONTAINS(LCASE(?battle), ""leipzig""))
  }
  
  # Find Wellesley's role in the Battle of Leipzig
  OPTIONAL {
    ?person dbo:militaryCommand ?commanderRole .
    ?commanderRole dbo:engagement ?battle .
    ?battle rdfs:label ?roleLabel .
    
    FILTER(CONTAINS(LCASE(?roleLabel), ""leipzig""))
  }
}
```",4,4,5,2,3,3,3,71,0,0,5,0,0.0,0
9,22,val,"Give me the alma mater of John Alderdice, Baron Alderdice and figure known as the nickname of Queen's University Belfast.","SELECT ?result WHERE { <http://dbpedia.org/resource/John_Alderdice,_Baron_Alderdice> <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://dbpedia.org/property/nickname> ?v1 . <http://dbpedia.org/resource/Queen's_University_Belfast> <http://dbpedia.org/property/nickname> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?almaMater ?nickname 
WHERE {
  # Find John Alderdice and his alma mater
  dbr:John_Alderdice dbp:almaMater ?almaMater .
  
  # Find nicknames of Queen's University Belfast
  OPTIONAL { 
    dbr:Queen's_University_Belfast dbo:nickName ?nickname .
  }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
281,27,val,"Give me the war of the profession, that is a military unit, of the professional, that is an office holder and a politician, in New Zealand Army.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/property/occupation> ?v2 . ?v1 <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/New_Zealand_Army> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?unit WHERE {
  ?unit a dbo:MilitaryUnit ;
        dbo:militaryBranch dbr:New_Zealand_Army .
  
  OPTIONAL { 
    ?profession dbo:wikiPageRedirects ?redirect .
    ?redirect rdfs:label ""politician""@en .
    
    ?unit dbo:memberOf ?profession .
  }
}
```",3,6,4,3,1,3,3,71,0,108,14,0.0,0.0,0
392,13,val,"Give me the entity in the region, that is a country, of Central European Time and region of Central European Time.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v1 . ?v1 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Central_European_Time> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?country WHERE {
  ?country a dbo:Country .
  ?country dbo:timeZone dbr:Central_European_Time ;
           dbo:region dbr:Central_Europe .
}
```",3,4,4,2,2,2,3,28,0,0,28787,0,0.0,0
360,12,val,Give me the writer of The Roaring Silence and native of Johannesburg and reference to Manfred Mann.,"SELECT ?result WHERE { <http://dbpedia.org/resource/The_Roaring_Silence> <http://dbpedia.org/property/writer> ?result . ?result <http://xmlns.com/foaf/0.1/name> ""Manfred Mann""@en . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Johannesburg> . }","```sparql
SELECT ?writer ?birthPlace WHERE {
  ?album dbo:composer ?writer .
  ?album dbo:title ""The Roaring Silence"" .
  ?writer foaf:name ""Mike d'Abo""@en .
  ?writer dbo:nationality dbc:South_African_musicians .
  ?writer dbo:birthPlace ?birthPlace .
  FILTER(CONTAINS(LCASE(STR(?birthPlace)), ""johannesburg""))
}
```",3,3,4,1,3,2,3,28,0,0,1,0,0.0,0
161,24,val,"Give me the commander in Biscay Campaign and military force of the force, that is a societal event and a military conflict, of Francisco Largo Caballero.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Biscay_Campaign> <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?militaryForce WHERE {
  # Identify the Biscay Campaign as part of the Spanish Civil War
  dbr:Biscay_Campaign dbo:partOf dbr:Spanish_Civil_War .
  
  # Link Francisco Largo Caballero to the Spanish Civil War
  dbr:Francisco_Largo_Caballero dbo:occupation dbr:Prime_Minister_of_Spain ;
                                 dbo:associatedWith dbr:Spanish_Civil_War .

  # Find the commander of the Biscay Campaign
  ?campaign dbo:commander ?commander .
  
  # Ensure the campaign is related to Francisco Largo Caballero's involvement
  ?campaign dbo:partOf dbr:Spanish_Civil_War ;
            dbo:associatedWith dbr:Francisco_Largo_Caballero .

  # Identify the military force associated with this commander
  ?commander dbo:militaryForce ?militaryForce .
}
```",3,5,4,2,2,3,3,71,0,0,3,0,0.0,0
915,15,val,"Give me the resident of the birthplace, that is a settlement, of the director of Pipe Dreams (1976 film) and father of Lizzie Spaulding.",SELECT ?result WHERE { <http://dbpedia.org/resource/Lizzie_Spaulding> <http://dbpedia.org/property/father> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Pipe_Dreams_(1976_film)> <http://dbpedia.org/ontology/director> ?v0 . ?result <http://dbpedia.org/ontology/residence> ?v1 . ?v0 <http://dbpedia.org/ontology/birthPlace> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?resident WHERE {
  # Step 1: Get the director of ""Pipe Dreams""
  ?director dbo:title ""Pipe Dreams""@en .
  ?director dbo:directedBy dbr:Robert_Altman .

  # Step 2 & 3: Confirm birthplace and that it is a settlement
  dbr:Robert_Altman dbo:birthPlace ?birthPlace .
  ?birthPlace rdf:type dbo:Settlement .
  
  FILTER (str(?birthPlace) = ""Kansas City, Missouri"")

  # Step 5: Find notable residents of Kansas City, Missouri
  ?resident dbo:residence ?birthPlace .
}
```",4,5,5,3,2,3,2,20,0,0,1,0,0.0,0
528,18,val,Give me the war of Orozimbo Barbosa and force of Narciso Campero and war of Irene Morales.,SELECT ?result WHERE { <http://dbpedia.org/resource/Irene_Morales> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Narciso_Campero> . <http://dbpedia.org/resource/Orozimbo_Barbosa> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
# Query for the war involving Orozimbo Barbosa (Paraguayan War)
SELECT ?event WHERE {
  ?event dbo:wikiPageRedirects db:Q1234567 ; # Assuming Q1234567 is the DBpedia ID for Paraguayan War
         rdf:type dbo:MilitaryConflict .
}

# Query for the war involving Narciso Campero (War of the Pacific)
SELECT ?event WHERE {
  ?event dbo:wikiPageRedirects db:Q2345678 ; # Assuming Q2345678 is the DBpedia ID for War of the Pacific
         rdf:type dbo:MilitaryConflict .
}
```

Note: The exact DBpedia IDs (`Q1234567` and `Q2345678`) should be replaced with the correct identifiers for the Paraguayan War and the War of the Pacific, respectively. These can be found by searching DBpedia or using a SPARQL endpoint to query for these events.",3,3,4,1,3,3,3,71,0,0,2,0,0.0,0
547,38,val,Give me the resting place of the actor of Enemy at the Door and resting place of the awardee of Knight Grand Cross of the Order of St Michael and St George.,SELECT ?result WHERE { <http://dbpedia.org/resource/Enemy_at_the_Door> <http://dbpedia.org/property/starring> ?v3 . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . ?v3 <http://dbpedia.org/ontology/restingPlace> ?result . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_St_Michael_and_St_George> . },"```sparql
# Query for the actor of ""Enemy at the Door""
SELECT ?actor ?restingPlace WHERE {
  ?film dcterms:title ""Enemy at the Door""@en .
  ?film dbo:starring ?actor .
  OPTIONAL { ?actor dbo:deathPlace ?restingPlace . }
}

UNION

# Query for awardees of Knight Grand Cross of the Order of St Michael and St George
SELECT ?person ?restingPlace WHERE {
  ?person dbo:honours ""Knight Grand Cross of the Order of St Michael and St George""@en .
  OPTIONAL { ?person dbo:deathPlace ?restingPlace . }
}
```",4,4,5,2,2,3,3,71,0,0,2,0,0.0,0
77,12,val,Give me the force of the mayor of Congress Poland and war of Alexander Chechenskiy.,SELECT ?result WHERE { <http://dbpedia.org/resource/Congress_Poland> <http://dbpedia.org/property/leader> ?v0 . ?result <http://dbpedia.org/ontology/commander> ?v0 . <http://dbpedia.org/resource/Alexander_Chechenskiy> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?mayor ?force WHERE {
  # Query for Congress Poland's mayor and any associated force
  OPTIONAL {
    ?congressPoland dbo:mayor ?mayor .
    ?mayor dbo:office ?office .
    FILTER(CONTAINS(LCASE(STR(?office)), ""mayor""))
    
    OPTIONAL {
      ?mayor dbo:force ?force .
    }
  }

  # Attempt to find any information related to Alexander Chechenskiy
  OPTIONAL {
    ?alexander dbr:Alexander_Chechenskiy .
    ?alexander dbo:war ?war .
  }

  # Bind Congress Poland entity
  VALUES ?congressPoland { dbr:Congress_Poland }
}
```",3,3,4,2,2,3,2,20,0,0,6,0,0.0,0
404,37,val,"Give me the parent of the child, that is a royalty, of the parent, that is a royalty, of Prince George William of Hanover and child of Ernest Augustus, Crown Prince of Hanover.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Prince_George_William_of_Hanover> <http://dbpedia.org/ontology/parent> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/child> ?v3 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ernest_Augustus,_Crown_Prince_of_Hanover> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?grandParent ?parent ?child ?finalChild ?finalParent
WHERE {
  # Step 1: Identify Prince George William of Hanover
  ?princeGeorgeWilliam a dbo:Person ;
                      foaf:name ""Prince George William of Hanover""@en .
  
  # Step 2: Find his Parent who is a Royalty
  ?parent dbo:child ?princeGeorgeWilliam ;
          dbo:royalTitle ?title1 .

  # Step 3: Identify the Child of this Royal Parent
  ?child dbo:parent ?parent ;
         dbo:royalTitle ?title2 .

  # Step 4: Determine the Parent of this Child if they are a Royalty
  ?finalParent dbo:child ?child ;
               dbo:royalTitle ?title3 .
  
  # Ensure Ernest Augustus, Crown Prince of Hanover is involved in the lineage
  ?parent foaf:name ""Ernest Augustus, Crown Prince of Hanover""@en .
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
285,14,val,Give me the spouse of the professional in the award of Stan Lee.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v0 . <http://dbpedia.org/resource/Stan_Lee> <http://dbpedia.org/property/awards> ?v2 . ?v0 <http://dbpedia.org/property/occupation> ?v2 . },"```sparql
SELECT ?spouse WHERE {
  ?award dbo:recipient ?person .
  ?award dbo:name ""Stan Lee Award"" .
  ?person foaf:mbox <mailto:someone@example.com> . # Replace with a known recipient's email or identifier if available
  OPTIONAL { ?person dbo:spouse ?spouse } .
}
```

Note: The query assumes we have some identifier for the recipient (like an email or unique identifier). If you know a specific year or recipient, replace `<mailto:someone@example.com>` with their DBpedia resource.",3,3,4,3,1,3,2,20,0,0,4149,0,0.0,0
659,21,val,"Give me the military force of Napoleonic Wars and commander in the force of Arthur Wellesley, 1st Duke of Wellington.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Napoleonic_Wars> . ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Arthur_Wellesley,_1st_Duke_of_Wellington> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce ?commander WHERE {
  # Find the military force commanded by Arthur Wellesley
  ?militaryForce dbo:commander dbr:Arthur_Wellesley,_1st_Duke_of_Wellington .
  
  # Ensure it is related to the Napoleonic Wars
  ?militaryForce dbo:militaryConflict dbr:Napoleonic_Wars .

  # Retrieve the commander of that military force
  OPTIONAL { ?militaryForce dbo:commander ?commander . }
}
```",3,3,4,2,2,3,3,71,0,0,32,0,0.0,0
92,29,val,"Give me the band of Joseph Michael and band member of Nevermore and associated musical artist of the person born, that is an artist, as Jim Sheppard.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v3 <http://dbpedia.org/property/birthName> ""Jim Sheppard""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Nevermore> . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Joseph_Michael> . }","```sparql
# Query to find Joseph Michael's band
SELECT ?band WHERE {
  dbpedia:Joseph_Michael dbo:musicalArtist ?band .
}

UNION

# Query to find a member of Nevermore
SELECT ?member WHERE {
  dbpedia:Nevermore dbo:member ?member .
}

UNION

# Query to find Jim Sheppard's associated musical artist
SELECT ?artist WHERE {
  dbpedia:Jim_Sheppard dbo:musicalArtist ?artist .
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
328,19,val,"Give me the commander in Eastern Front (World War II) and awardee of the award of Bruce Fraser, 1st Baron Fraser of North Cape.","SELECT ?result WHERE { <http://dbpedia.org/resource/Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape> <http://dbpedia.org/property/awards> ?v0 . ?result <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Eastern_Front_(World_War_II)> <http://dbpedia.org/ontology/commander> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?award
WHERE {
  ?commander dbo:rank ?rank .
  ?commander dbo:awardsReceived ?award .
  FILTER(CONTAINS(LCASE(?rank), ""eastern front"") || CONTAINS(LCASE(?rank), ""soviet commander""))
  
  ?award dbo:recipient ?recipient .
  ?award dbo:givenBy dbr:Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape .

  FILTER(?recipient = ?commander)
}
```",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
184,31,val,"Give me the parent of the native of the landmark at elevation, that is a settlement, of 96.0 and child of Archduke Joseph August of Austria.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> ?v1 . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_August_of_Austria> . ?v1 <http://dbpedia.org/ontology/elevation> ""96.0""^^<http://www.w3.org/2001/XMLSchema#double> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/child> ?v0 . }","```sparql
SELECT ?parent WHERE {
  # Step 1: Find the landmark at elevation 96.0 that is a settlement
  ?landmark dbo:elevation ""96.0""^^xsd:float ;
            dbo:isSettlementOf ?settlement .
  
  # Step 2: Ensure the landmark has a connection to Archduke Joseph August of Austria
  ?archduke foaf:name ""Archduke Joseph August of Austria""@en .
  ?landmark dbo:childOf ?archduke .

  # Step 3: Find the native of this landmark
  ?native dbo:nativePlace ?landmark .

  # Step 4: Determine the parent of this native
  ?parent foaf:parent ?native .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
487,14,val,"Give me the administration of the person born, that is a soccer player, as the birth name of Phil Scott.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/governor> ?v0 . ?v0 <http://dbpedia.org/property/birthName> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Phil_Scott> <http://dbpedia.org/property/birthName> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?administration WHERE {
  ?person rdfs:label ""Phil Scott""@en .
  ?person dbo:birthName ?birthName .
  ?person dbo:occupation dbo:SoccerPlayer .
  
  OPTIONAL { 
    ?person dbo:agent ?administration .
  }
}
```",3,4,4,3,1,3,2,20,0,0,14,0,0.0,0
294,17,val,"Give me the resting place of the architect of P. D. Houston Jr. House and entity in Nashville, Tennessee.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Nashville,_Tennessee> . <http://dbpedia.org/resource/P._D._Houston_Jr._House> <http://dbpedia.org/ontology/architect> ?v1 . ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . }","```sparql
# Step 1: Find the architect of the P. D. Houston Jr. House
SELECT ?architect WHERE {
  ?house dbo:location dbr:Nashville,_Tennessee .
  ?house dbo:architect ?architect .
  ?house rdfs:label ""P. D. Houston Jr. House""@en .
}

# Step 2: Find the burial place of the architect
SELECT ?burialPlace WHERE {
  ?architect dbo:deathPlace ?burialPlace .
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
547,41,val,Give me the resting place of the child of James Burton (property developer) and resting place of Alan Cunningham and resting place of the actor of Enemy at the Door.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Alan_Cunningham> <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Enemy_at_the_Door> <http://dbpedia.org/property/starring> ?v4 . ?v4 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/James_Burton_(property_developer)> <http://dbpedia.org/ontology/child> ?v2 . },"```sparql
# Query for the child of James Burton (property developer) and their resting place
SELECT ?child ?restingPlace WHERE {
  ?person foaf:name ""James Burton""@en .
  ?person dbo:spouse ?spouse .
  ?spouse dbo:child ?child .
  OPTIONAL { ?child dbo:deathPlace ?restingPlace . }
} LIMIT 1

UNION

# Query for Alan Cunningham and his resting place
SELECT ?person ?restingPlace WHERE {
  ?person foaf:name ""Alan Cunningham""@en .
  OPTIONAL { ?person dbo:deathPlace ?restingPlace . }
} LIMIT 1

UNION

# Query for the actor of ""Enemy at the Door"" and their resting place
SELECT ?actor ?restingPlace WHERE {
  ?film dbp:title ""Enemy at the Door""@en .
  ?film dbo:starring ?actor .
  OPTIONAL { ?actor dbo:deathPlace ?restingPlace . }
} LIMIT 1
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
645,14,val,Give me the alma mater of the child of the parent of Adela Pankhurst.,SELECT ?result WHERE { <http://dbpedia.org/resource/Adela_Pankhurst> <http://dbpedia.org/ontology/parent> ?v2 . ?v0 <http://dbpedia.org/ontology/almaMater> ?result . ?v2 <http://dbpedia.org/ontology/child> ?v0 . },"```sparql
# Step 1: Identify Adela Pankhurst's parents
SELECT ?parent WHERE {
    wd:Q123456 wdt:P40 ?parent .
}

# Step 2: Find out about the children of Emmeline and Richard Pankhurst (Adela is one)
SELECT ?child WHERE {
    ?parent wdt:P40 wd:Q123456 . # Adela Pankhurst
    ?parent wdt:P25 ?child .     # Children of the parent
}

# Step 3: Retrieve the alma mater for Adela Pankhurst
SELECT ?almaMater WHERE {
    wd:Q123456 wdt:P69 ?almaMater .
}
```

Note: Replace `wd:Q123456` with the actual DBpedia identifier for Adela Pankhurst.",3,3,4,3,1,3,2,20,0,0,2,0,0.0,0
281,33,val,"Give me the entity in the birth place, that is a country, of the leader, that is a politician, of 1962 New South Wales state election and war of Beauchamp Seymour, 1st Baron Alcester.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Beauchamp_Seymour,_1st_Baron_Alcester> <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/1962_New_South_Wales_state_election> <http://dbpedia.org/property/leader> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlaceCountry WHERE {
  # Find the leader during the 1962 New South Wales state election
  ?politician a dbo:Politician ;
              dbo:officeHolderOf dbr:Premier_of_New_South_Wales ;
              dbo:termStart ?startTerm .
  
  FILTER (?startTerm <= ""1962-12-01""^^xsd:date && 
          (OPTIONAL {?politician dbo:termEnd ?endTerm} || ""9999-12-31""^^xsd:date) >= ""1962-01-01""^^xsd:date)
  
  # Get the birthplace of this politician
  ?politician dbo:birthPlace ?birthPlace .
  
  # Check if the birthplace is a country
  ?birthPlace a dbo:Country .

  BIND(?birthPlace AS ?birthPlaceCountry)

  # Beauchamp Seymour, 1st Baron Alcester's war involvement
  OPTIONAL {
    dbr:Beauchamp_Seymour_1st_Baron_Alcester dbo:participatedInWar ?war .
  }
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
981,14,val,"Give me the birth place of the person born, that is a beauty queen, as the author of Kamikaze Girls.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BeautyQueen>. <http://dbpedia.org/resource/Kamikaze_Girls> <http://dbpedia.org/property/author> ?v2 . ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?birthPlace WHERE {
  ?person dbo:wikiPageRedirects db:Kyoko_Okazaki .
  ?person dbo:birthPlace ?birthPlace .
  OPTIONAL { 
    ?film dbo:basedOnBook ?book .
    ?book foaf:name ""Kamikaze Girls""@en .
  }
}
```",3,4,4,3,1,3,2,20,0,0,170,0,0.0,0
801,25,val,"Give me the associated musical artist of the writer, that is a musical artist and an artist, of 40 Dayz & 40 Nightz and producer of Westside Story (song).",SELECT ?result WHERE { <http://dbpedia.org/resource/40_Dayz_&_40_Nightz> <http://dbpedia.org/property/writer> ?v1 . <http://dbpedia.org/resource/Westside_Story_(song)> <http://dbpedia.org/ontology/producer> ?result . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artist WHERE {
  # Find the writer of ""40 Dayz & 40 Nightz""
  ?song dbo:lyricsBy dbr:The_Notorious_B.I.G. ;
        rdfs:label ""40 Dayz & 40 Nightz""@en .
  
  # Ensure this person is a musical artist
  ?artist dbo:birthName ""Christopher Wallace""^^xsd:string ;
          dbo:genre ?genre .

  # Check if the same person produced ""Westside Story""
  ?westsideSong dbo:producer ?artist ;
                rdfs:label ""Westside Story""@en .
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
747,18,val,Give me the band of Shèna and person born on 1985-04-29 and band of Amba Shepherd.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Shèna> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/birthDate> ""1985-04-29""^^<http://www.w3.org/2001/XMLSchema#date> . <http://dbpedia.org/resource/Amba_Shepherd> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
# Query for Shèna's band and a person born on 1985-04-29 in the same band
SELECT ?band ?person WHERE {
  ?sena dbo:associatedBand ?band .
  ?sena foaf:name ""Shèna"" .

  OPTIONAL {
    ?member dbo:birthDate ?date ;
            foaf:name ?person .
    FILTER (YEAR(?date) = 1985 && MONTH(?date) = 4 && DAY(?date) = 29)
    ?band dbo:associatedBandMember ?member .
  }
}

UNION

# Query for Amba Shepherd's band
SELECT ?band WHERE {
  ?ambashepherd dbo:associatedBand ?band .
  ?ambashepherd foaf:name ""Amba Shepherd"" .
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
645,13,val,"Give me the entity in the residence, that is a country, of the commander in Battle of Diamond Rock.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v1 . <http://dbpedia.org/resource/Battle_of_Diamond_Rock> <http://dbpedia.org/ontology/commander> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://dbpedia.org/property/residence> ?v1 . },"```sparql
SELECT ?country WHERE {
  ?battle dbo:commander ?commander .
  ?battle rdfs:label ""Battle of Diamond Rock""@en .
  
  OPTIONAL { ?commander dbo:residence ?residence . }
  
  ?residence dbo:country ?country .
}
```",3,4,4,3,1,3,2,20,0,0,42999,0,0.0,0
488,19,val,Give me the birth place of the commander in Boshin War and death place of Tokugawa Ieyasu.,SELECT ?result WHERE { <http://dbpedia.org/resource/Boshin_War> <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Tokugawa_Ieyasu> <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
# Query for the birth place of Saigō Takamori
SELECT ?birthPlace WHERE {
  dbpedia:Saig_Takamori dbo:birthPlace ?birthPlace .
}

# Query for the death place of Tokugawa Ieyasu
SELECT ?deathPlace WHERE {
  dbpedia:Tokugawa_Ieyasu dbo:deathPlace ?deathPlace .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
54,37,val,Give me the predecessor of Ameitta Thiri Maha Dhamma Dewi of Ava and parent of the child of the parent of Thado Minsaw of Prome.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Ameitta_Thiri_Maha_Dhamma_Dewi_of_Ava> . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> . ?v3 <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://dbpedia.org/property/father> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?predecessor ?parent
WHERE {
  # Find Ameitta Thiri Maha Dhamma Dewi of Ava and her predecessor
  ?ameitta a dbo:Monarch ;
           foaf:name ""Ameitta Thiri Maha Dhamma Dewi""@en .
  
  OPTIONAL { 
    ?predecessor dbo:successor ?ameitta .
  }

  # Find Thado Minsaw of Prome and trace his lineage
  ?thadoMinsaw a dbo:Monarch ;
               foaf:name ""Thado Minsaw""@en .

  ?parent dbo:child ?thadoMinsaw .
  
  OPTIONAL {
    ?grandChild dbo:parent ?parent .
  }
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
801,38,val,"Give me the associated musical artist of the writer, that is a musical artist and an artist, of 40 Dayz & 40 Nightz and producer of the work, that is a musical work and a song and a work, of 50 Cent.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/producer> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. <http://dbpedia.org/resource/40_Dayz_&_40_Nightz> <http://dbpedia.org/property/writer> ?v2 . ?v3 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/50_Cent> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?artist WHERE {
    # Find the song ""40 Dayz & 40 Nightz""
    dbr:40_Dayz_&_40_Nightz dbo:composer ?writer .
    
    # Ensure the writer is both a musical artist and an artist
    ?writer rdf:type dbo:MusicalArtist ;
            rdf:type dbo:Artist .

    # Check if this writer has produced any work by 50 Cent
    OPTIONAL {
        ?work dbo:producer ?artist .
        ?work dbo:artist dbr:50_Cent .
        FILTER (?artist = ?writer)
    }
    
    # Return the artist who meets all criteria
    BIND(?writer AS ?artist)
}
```",4,9,5,2,2,3,3,71,0,0,1,0,0.0,0
421,16,val,Give me the band member of Senidah and person born as the birth name of Dino Merlin.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Senidah> . <http://dbpedia.org/resource/Dino_Merlin> <http://dbpedia.org/property/birthName> ?v2 . ?result <http://dbpedia.org/property/birthName> ?v2 . },"```sparql
# Query to find the birth name of Dino Merlin
SELECT ?birthName WHERE {
  dbpedia:Merlin (dbpedia-owl:birthName) ?birthName .
}

# Query to find band members associated with Senidah
SELECT DISTINCT ?bandMember WHERE {
  # Assuming there is a direct association or collaboration entry for Senidah in DBpedia
  ?senidahEntry dbo:associatedBandMember ?bandMember .
  dbpedia:Senidah ?senidahEntry .
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
767,30,val,Give me the alma mater of Carl L. Nippert and entity in Baden-Württemberg and reference to the alter ego of Black Hood.,SELECT ?result WHERE { <http://dbpedia.org/resource/Carl_L._Nippert> <http://dbpedia.org/ontology/almaMater> ?result . <http://dbpedia.org/resource/Black_Hood> <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://dbpedia.org/ontology/state> <http://dbpedia.org/resource/Baden-Württemberg> . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . },"```sparql
# Query 1: Alma Mater of Carl L. Nippert
SELECT ?almaMater WHERE {
  ?person dbo:givenName ""Carl"" .
  ?person dbo:familyName ""Nippert"" .
  ?person dbo:almaMater ?almaMater .
}

UNION

# Query 2: Entity in Baden-Württemberg
SELECT ?entity WHERE {
  ?entity dbp:location dbpedia-de:Baden-Württemberg .
}

UNION

# Query 3: Alter Ego of Black Hood
SELECT ?alterEgo WHERE {
  ?character rdfs:label ""Black Hood""@en .
  ?character dbo:alias ?alterEgo .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
754,13,val,Give me the parent of the parent of the parent of Min Linka.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Min_Linka> <http://dbpedia.org/ontology/parent> ?v0 . ?v0 <http://dbpedia.org/ontology/parent> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?greatGrandparent WHERE {
  # Min Linka's parent (either mother or father)
  VALUES ?parentType { dbo:mother dbo:father }
  
  # Find Min Linka's parent
  ?minLinka dbo:birthName ""Min Linka""@en .
  ?minLinka ?parentType ?parent .

  # Find Min Linka's grandparent (parent of the parent)
  VALUES ?grandParentType { dbo:mother dbo:father }
  ?parent ?grandParentType ?grandparent .

  # Find Min Linka's great-grandparent (parent of the grandparent)
  VALUES ?greatGrandParentType { dbo:mother dbo:father }
  ?grandparent ?greatGrandParentType ?greatGrandparent .
}
```",3,3,4,3,1,3,2,20,0,0,1,0,0.0,0
528,21,val,Give me the war of the military force of Battle of Pisagua and force of Narciso Campero.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Pisagua> . ?v1 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Narciso_Campero> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?battleForce ?camperoForce WHERE {
  # Find the military force involved in the Battle of Pisagua
  OPTIONAL {
    ?battleEvent a dbo:MilitaryConflict ;
                 rdfs:label ""Battle of Pisagua""@en .
    ?battleEvent dbo:participatingMilitaryUnit ?battleForce .
  }

  # Find the military force associated with Narciso Campero
  OPTIONAL {
    ?campero dbr:Narciso_Campero ;
             dbo:militaryService ?militaryOrganization .
    ?militaryOrganization a dbo:MilitaryUnit ;
                          rdfs:label ?camperoForce .
  }
}
```",3,3,4,2,2,3,3,71,0,0,3,0,0.0,0
182,18,val,Give me the war of Jagath Dias and entity in the nationality of Tamara Kunanayakam.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> ?v2 . <http://dbpedia.org/resource/Tamara_Kunanayakam> <http://dbpedia.org/ontology/nationality> ?v2 . <http://dbpedia.org/resource/Jagath_Dias> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
# Step 1: Find wars involving Jagath Dias
SELECT ?war WHERE {
  ?entity rdfs:label ""Jagath Dias""@en .
  ?entity dbo:participatedIn ?war .
}

UNION

# Step 2: Determine Tamara Kunanayakam's nationality
SELECT ?nationality WHERE {
  ?entity rdfs:label ""Tamara Kunanayakam""@en .
  ?entity dbo:nationality ?nationality .
}

# Step 3: Find connection between the war and nationality
SELECT DISTINCT ?war ?nationality WHERE {
  ?entity1 rdfs:label ""Jagath Dias""@en .
  ?entity1 dbo:participatedIn ?war .
  
  ?entity2 rdfs:label ""Tamara Kunanayakam""@en .
  ?entity2 dbo:nationality ?nationality .
  
  # Assuming the connection is through a common country or entity
  OPTIONAL { ?war dbp:country ?country . }
  OPTIONAL { ?nationality dbp:country ?country . }
}
```",3,3,4,2,2,2,3,28,0,0,5,0,0.0,0
184,41,val,Give me the child of the child of Archduke Joseph Karl of Austria and parent of the native of Budapest and parent of Archduchess Ilona of Austria.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Budapest> . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Ilona_of_Austria> . ?result <http://dbpedia.org/property/father> ?v4 . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Karl_of_Austria> . ?result <http://dbpedia.org/ontology/child> ?v2 . },"```sparql
# Step 1: Find a direct child of Archduke Joseph Karl of Austria
SELECT ?child WHERE {
    wd:Q123456 rdfs:label ""Archduke Joseph Karl of Austria""@en .
    ?child dbo:parent wd:Q123456 ;
           rdf:type dbo:Person .
}

# Step 2: Find the grandchild (child of the child)
SELECT ?grandchild WHERE {
    ?child dbo:parent wd:Q123456 ;
           rdf:type dbo:Person .
    ?grandchild dbo:parent ?child ;
                rdf:type dbo:Person .
}

# Step 3: Identify parent of someone from Budapest
SELECT DISTINCT ?parent WHERE {
    ?person dbo:birthPlace dbr:Budapest ;
            dbo:parent ?parent .
}

# Step 4: Identify the parent of Archduchess Ilona of Austria
SELECT ?parent WHERE {
    wd:Q654321 rdfs:label ""Archduchess Ilona of Austria""@en .
    ?parent dbo:child wd:Q654321 ;
            rdf:type dbo:Person .
}

# Step 5: Find the common individual who is both parent from steps 3 and 4
SELECT DISTINCT ?commonParent WHERE {
    { ?person dbo:birthPlace dbr:Budapest ;
              dbo:parent ?commonParent . }
    UNION
    { ?parent dbo:child wd:Q654321 ;
              rdf:type dbo:Person .
      FILTER(?parent = ?commonParent) }
}

# Step 6: Find the child of this common individual
SELECT DISTINCT ?child WHERE {
    ?commonParent dbo:child ?child .
}
```

Note: Replace `wd:Q123456` with the actual DBpedia identifier for Archduke Joseph Karl of Austria and `wd:Q654321` with that for Archduchess Ilona of Austria. The identifiers need to be verified from DBpedia.",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
161,43,val,"Give me the military force of the force, that is a societal event and a military conflict, of the predecessor of Indalecio Prieto and military force of Rif War and commander in Biscay Campaign.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v4 <http://dbpedia.org/ontology/commander> ?v0 . <http://dbpedia.org/resource/Biscay_Campaign> <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Indalecio_Prieto> . ?result <http://dbpedia.org/ontology/battle> ?v4 . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Rif_War> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce WHERE {
  # Indalecio Prieto's predecessor in PSOE leadership
  ?predecessor dbo:leaderOf dbr:Spanish_Socialist_Workers'_Party ;
               rdfs:label ""Francisco Largo Caballero""@en .

  # Military force associated with Francisco Largo Caballero during the Spanish Civil War
  ?militaryForce dbo:commander ?predecessor ;
                 dbo:partOf dbr:Spanish_Civil_War ;
                 rdfs:label ?forceLabel .

  # Military force of the Rif War
  ?rifWarMilitaryForce dbo:participatedIn dbr:Rif_War ;
                       rdfs:label ?rifWarLabel .
  
  FILTER(CONTAINS(LCASE(?rifWarLabel), ""spanish army""))

  # Commander in Biscay Campaign
  ?biscayCommander dbo:commanded ?militaryForce ;
                   rdfs:label ""Manuel Azaña""@en .

  # Ensure the military force is common to all criteria
  FILTER(LCASE(?forceLabel) = LCASE(?rifWarLabel))
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
360,16,val,Give me the writer of The Roaring Silence and reference to the author of Blinded by the Light.,SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v2 . <http://dbpedia.org/resource/The_Roaring_Silence> <http://dbpedia.org/property/writer> ?result . <http://dbpedia.org/resource/Blinded_by_the_Light> <http://dbpedia.org/property/author> ?v2 . },"```sparql
SELECT ?writer ?author WHERE {
  # Query for The Roaring Silence writer
  OPTIONAL {
    ?album dcterms:title ""The Roaring Silence""@en .
    ?album dbo:artist ?person1 .
    ?person1 foaf:name ?writer .
  }
  
  # Query for Blinded by the Light author (screenplay)
  OPTIONAL {
    ?film dbp:title ""Blinded by the Light""@en .
    ?film dbo:writtenBy ?person2 .
    ?person2 foaf:name ?author .
  }
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
9,40,val,"Give me the alma mater of Allen Hill (scientist) and alma mater of the mayor, that is a politician, of the entity, that is an organisation, in Belfast and figure known as QUB.","SELECT ?result WHERE { <http://dbpedia.org/resource/Allen_Hill_(scientist)> <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://dbpedia.org/property/nickname> ""QUB""@en . ?v1 <http://dbpedia.org/ontology/almaMater> ?result . ?v2 <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Belfast> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/property/leader> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. }","```sparql
# Query to find the alma mater of Allen Hill (scientist)
SELECT ?almaMater WHERE {
  ?person foaf:name ""Allen Hill""@en .
  ?person dbo:occupation dbr:Scientist .
  ?person dbo:almaMater ?almaMater .
}

# Query to confirm Queen's University of Belfast as QUB
SELECT ?entity WHERE {
  ?entity rdfs:label ""Queen's University of Belfast""@en ;
          foaf:name ""QUB""@en .
}

# Query to find the current mayor of Belfast and their alma mater
SELECT ?mayorName ?almaMater WHERE {
  ?person dbo:office dbr:Municipality_of_Belfast_Mayoralty ;
          foaf:name ?mayorName ;
          dbo:almaMater ?almaMater .
  FILTER (YEAR(NOW()) - ?person dbo:birthdayYear < 5) # Assuming the mayor's term is less than 5 years
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
184,30,val,Give me the parent of the child of Archduke Joseph Francis of Austria and child of Archduke Joseph August of Austria and parent of Géza von Habsburg.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Géza_von_Habsburg> . ?result <http://dbpedia.org/ontology/child> ?v1 . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_August_of_Austria> . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Francis_of_Austria> . },"```sparql
# Find the child of Archduke Joseph Francis of Austria
SELECT ?child1 WHERE {
  wd:Q123456 foaf:parent ?person1 .
  ?person1 rdfs:label ""Archduke Joseph Francis of Austria""@en .
  ?child1 foaf:parent ?person1 .
}

# Find the child of Archduke Joseph August of Austria
SELECT ?child2 WHERE {
  wd:Q789012 foaf:parent ?person2 .
  ?person2 rdfs:label ""Archduke Joseph August of Austria""@en .
  ?child2 foaf:parent ?person2 .
}

# Find the parent of Géza von Habsburg
SELECT ?parent3 WHERE {
  wd:Q345678 foaf:parent ?parent3 .
  ?parent3 rdfs:label ""Géza von Habsburg""@en .
}

# Combine queries to find the common individual
SELECT DISTINCT ?commonIndividual WHERE {
  # Parent of child1 (child of Archduke Joseph Francis)
  ?child1 foaf:parent ?person1 .
  ?person1 rdfs:label ""Archduke Joseph Francis of Austria""@en .
  ?commonIndividual foaf:parent ?child1 .

  # Child of person2 (child of Archduke Joseph August)
  ?child2 foaf:parent ?person2 .
  ?person2 rdfs:label ""Archduke Joseph August of Austria""@en .
  FILTER (?commonIndividual = ?child2)

  # Parent of Géza von Habsburg
  wd:Q345678 foaf:parent ?commonIndividual .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
281,18,val,"Give me the war of Beauchamp Seymour, 1st Baron Alcester and entity in Colony of New Zealand and war of New Zealand Army.","SELECT ?result WHERE { <http://dbpedia.org/resource/New_Zealand_Army> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Beauchamp_Seymour,_1st_Baron_Alcester> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Colony_of_New_Zealand> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?beauchampWar ?newZealandEntity ?newZealandWar
WHERE {
  # Beauchamp Seymour's involvement in wars
  dbr:Beauchamp_Seymour_1st_Baron_Alcester dbo:participatedIn ?beauchampWar .
  
  # Entity from Colony of New Zealand involved in a war with the New Zealand Army
  ?newZealandEntity dbo:nationality dbr:New_Zealand ;
                   dbo:occupation dbr:Military_person ;
                   dbo:participatedIn ?newZealandWar .

  FILTER EXISTS { ?newZealandWar dbo:participatingOrganisation dbr:New_Zealand_Army }
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
747,30,val,Give me the person born on 1985-04-29 and band of the person born as Tracey Elizabeth McSween and band of Amba Shepherd.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Amba_Shepherd> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/birthDate> ""1985-04-29""^^<http://www.w3.org/2001/XMLSchema#date> . ?v1 <http://dbpedia.org/property/birthName> ""Tracey Elizabeth McSween""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?band WHERE {
  # Tracey Elizabeth McSween
  VALUES (?traceyName) { ""Tracey Elizabeth McSween"" }
  ?tracey dbo:birthDate ?date .
  FILTER (YEAR(?date) = 1985 && MONTH(?date) = 4 && DAY(?date) = 29)
  ?tracey rdfs:label ?traceyName .
  OPTIONAL {
    ?bandMember dbo:member ?tracey .
    ?bandMember dbo:band ?band .
    ?band rdfs:label ?bandLabel .
    BIND(CONCAT(""Band of "", STR(?tracey)) AS ?person)
    BIND(STR(?bandLabel) AS ?band)
  }

  # Amba Shepherd
  VALUES (?ambaName) { ""Amba Shepherd"" }
  ?amba dbo:birthDate ?date2 .
  ?amba rdfs:label ?ambaName .
  OPTIONAL {
    ?bandMember2 dbo:member ?amba .
    ?bandMember2 dbo:band ?band2 .
    ?band2 rdfs:label ?bandLabel2 .
    BIND(CONCAT(""Band of "", STR(?amba)) AS ?person)
    BIND(STR(?bandLabel2) AS ?band)
  }
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
184,26,val,"Give me the child of the child of the parent, that is a royalty, of Archduke Ladislaus Philipp of Austria.",SELECT ?result WHERE { <http://dbpedia.org/resource/Archduke_Ladislaus_Philipp_of_Austria> <http://dbpedia.org/ontology/parent> ?v1 . ?result <http://dbpedia.org/property/father> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/father> ?v1 . },"```sparql
SELECT DISTINCT ?grandchild WHERE {
  # Step 1: Identify Archduke Ladislaus Philipp of Austria
  wd:Q123456 dbo:parent ?parent .  # Replace Q123456 with the actual DBpedia ID for Archduke Ladislaus Philipp

  # Step 2: Find his parent(s)
  
  # Step 3: For each parent, find their child(ren)
  ?parent dbo:child ?child .

  # Step 4: For each child, find their child(ren) (grandchildren of Archduke Ladislaus Philipp)
  ?child dbo:child ?grandchild .

  # Step 5: Filter for royalty
  ?grandchild a dbo:RoyalFamilyMember .
}
```

Note: Replace `wd:Q123456` with the actual DBpedia ID for Archduke Ladislaus Philipp of Austria. You may need to look up this ID in DBpedia or use a query to find it if you don't have it.",3,4,4,3,1,3,3,71,0,0,1,0,0.0,0
838,14,val,"Give me the band member of the band, that is a group, of the reference, that is a group and an organisation, to YU Grupa.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v2 <http://xmlns.com/foaf/0.1/name> ""YU Grupa""@en . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?member WHERE {
  # Identify YU Grupa as a musical artist
  ?yuGrupa a dbo:MusicalArtist ;
           rdfs:label ""YU Grupa""@en .

  # Find the reference group that is both a group and an organization related to YU Grupa
  ?referenceGroup a dbo:Band, dbo:Organization ;
                  dbp:relatedTo ?yuGrupa .

  # Extract members of this referenced band
  ?member dbo:bandMember ?referenceGroup .
}
```",3,6,4,3,1,3,2,20,0,0,40,0,0.0,0
356,13,val,"Give me the player in the successor of the predecessor, that is a sports team season and a soccer club season, of 2015 Sacramento Republic FC season.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v0 <http://dbpedia.org/ontology/successor> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?v1 <http://dbpedia.org/ontology/team> ?result . ?v0 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/2015_Sacramento_Republic_FC_season> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?player WHERE {
    # Identify the 2015 Sacramento Republic FC season
    ?season a dbo:SoccerClubSeason ;
        dbo:club dbr:Sacramento_Republic_FC ;
        dbo:year ""2015""^^xsd:gYear .

    # Find its predecessor (2014)
    ?predecessor a dbo:SoccerClubSeason ;
        dbo:club dbr:Sacramento_Republic_FC ;
        dbo:year ""2014""^^xsd:gYear ;
        dbo:succeeds ?season .

    # Determine the successor of this predecessor (2016)
    ?successor a dbo:SoccerClubSeason ;
        dbo:club dbr:Sacramento_Republic_FC ;
        dbo:year ""2016""^^xsd:gYear ;
        dbo:succeeds ?predecessor .

    # Retrieve players associated with the 2016 season
    ?player dbo:playsFor ?successor .
}
```",3,5,4,3,1,3,2,20,0,0,1,0,0.0,0
754,15,val,Give me the parent of the parent of the parent of Min Linka and parent of May Hnin Thwe-Da.,SELECT ?result WHERE { <http://dbpedia.org/resource/Min_Linka> <http://dbpedia.org/ontology/parent> ?v0 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/May_Hnin_Thwe-Da> . ?v0 <http://dbpedia.org/ontology/parent> ?v1 . ?v1 <http://dbpedia.org/ontology/parent> ?result . },"```sparql
# Query for Min Linka's great-grandparent
SELECT ?greatGrandparentMinLinka WHERE {
  ?minLinka dbo:spouse ?partner .
  FILTER(STR(?minLinka) = ""Min_Linka"") .

  OPTIONAL { ?minLinka foaf:parent ?parent1 . }
  OPTIONAL { ?parent1 foaf:parent ?grandparent1 . }
  OPTIONAL { ?grandparent1 foaf:parent ?greatGrandparentMinLinka . }

  FILTER(EXISTS { ?greatGrandparentMinLinka a dbo:Person })
}

UNION

# Query for May Hnin Thwe-Da's great-grandparent
SELECT ?greatGrandparentMayHninThweDa WHERE {
  ?mayHninThweDa dbo:spouse ?partner .
  FILTER(STR(?mayHninThweDa) = ""May_Hnin_Thwe-Da"") .

  OPTIONAL { ?mayHninThweDa foaf:parent ?parent2 . }
  OPTIONAL { ?parent2 foaf:parent ?grandparent2 . }
  OPTIONAL { ?grandparent2 foaf:parent ?greatGrandparentMayHninThweDa . }

  FILTER(EXISTS { ?greatGrandparentMayHninThweDa a dbo:Person })
}

# Find common ancestor
SELECT DISTINCT ?commonAncestor WHERE {
  VALUES (?ancestor1) { 
    SELECT ?greatGrandparentMinLinka WHERE { ... } # Min Linka's great-grandparent query
  }
  VALUES (?ancestor2) { 
    SELECT ?greatGrandparentMayHninThweDa WHERE { ... } # May Hnin Thwe-Da's great-grandparent query
  }

  FILTER(?ancestor1 = ?ancestor2)
  BIND(?ancestor1 AS ?commonAncestor)
}
```",4,4,5,3,2,3,2,20,0,0,1,0,0.0,0
232,27,val,"Give me the native of the residence, that is a settlement and British, of the native, that is a politician and an office holder, of France.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://dbpedia.org/property/residence> ?v2 . ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/France> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
SELECT DISTINCT ?native WHERE {
  # Step 1: Find French politicians who are office holders
  ?politician dbo:nationality dbr_France ;
             rdf:type dbo:Politician ;
             dbo:officeHolder true .
  
  # Step 2: For each politician, find their British residence which is a settlement
  ?politician dbo:residence ?settlement .
  ?settlement dbo:country dbr_United_Kingdom ;
              rdf:type dbo:Settlement .

  # Step 3: Retrieve the birthplace of this settlement
  ?settlement dbo:nativePlace ?native .
}
```",3,7,4,3,1,3,3,71,0,0,9121,0,0.0,0
92,19,val,"Give me the associated musical artist of Jim Sheppard and band member of the reference, that is an artist, to Nevermore.","SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""Nevermore""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Jim_Sheppard> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artist ?band WHERE {
  ?person dbo:memberOfBand dbr:Nevermore .
  ?person rdfs:label ""Jim Sheppard""@en .
  
  OPTIONAL { 
    ?person dbo:memberOfBand ?otherBand .
    FILTER(?otherBand != dbr:Nevermore)
    ?otherBand rdfs:label ?band .
  }
  
  ?person foaf:name ?artist .
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
659,38,val,"Give me the military force of the force, that is a societal event and an event and a military conflict, of Rutger Jan Schimmelpenninck and commander in the war, that is an event and a military conflict, of 1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish).",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/1st_Light_Cavalry_Lancers_Regiment_of_the_Imperial_Guard_(Polish)> <http://dbpedia.org/ontology/battle> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce ?commander WHERE {
  # Rutger Jan Schimmelpenninck's military force
  dbr:Rutger_Jan_Schimmelpenninck dbo:militaryService [
    a dbo:MilitaryConflict ;
    dbo:participatingMilitaryUnit ?militaryForce .
  ] .

  # Societal event and military conflict involving Schimmelpenninck
  ?societalEvent a dbo:MilitaryConflict, dbo:SocietalEvent ;
                 dbo:participatingMilitaryUnit ?militaryForce .

  # 1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish)
  dbr:1st_Light_Cavalry_Lancers_Regiment_of_the_Imperial_Guard_(Polish) dbo:militaryService [
    a dbo:MilitaryConflict ;
    dbo:commander ?commander .
  ] .

  # War involving the regiment
  ?war a dbo:MilitaryConflict, dbo:Event ;
       dbo:participatingMilitaryUnit dbr:1st_Light_Cavalry_Lancers_Regiment_of_the_Imperial_Guard_(Polish) .
}
```",4,9,5,2,2,3,3,71,0,0,31,0,0.0,0
617,27,val,Give me the parent of the child of the commander in Battle of Panium.,SELECT ?result WHERE { <http://dbpedia.org/resource/Battle_of_Panium> <http://dbpedia.org/ontology/commander> ?v1 . ?result <http://dbpedia.org/ontology/child> ?v2 . ?v1 <http://dbpedia.org/ontology/child> ?v2 . },"```sparql
# Step 1: Identify the commander in the Battle of Panium
SELECT ?commander WHERE {
  ?battle dbp:name ""Battle of Panium""@en .
  ?battle dbo:participatedIn ?person .
  ?person dbo:occupation ""Military leader""@en .
}

# Assuming we identified John Hyrcanus I as the commander, proceed to find his child

# Step 2: Find a notable child of the commander
SELECT ?child WHERE {
  ?commander foaf:name ""John Hyrcanus I""@en ;
             dbo:child ?child .
}

# Assuming Aristobulus II is identified as the child, proceed to find his parent

# Step 3: Determine the parent of that child
SELECT ?parent WHERE {
  ?child foaf:name ""Aristobulus II""@en ;
         dbo:parent ?parent .
}
```",3,3,4,3,1,3,3,71,0,0,4,0,0.0,0
754,11,val,Give me the parent of May Hnin Thwe-Da and parent of the parent of May Hnin Htapi.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/May_Hnin_Thwe-Da> . <http://dbpedia.org/resource/May_Hnin_Htapi> <http://dbpedia.org/ontology/parent> ?v2 . ?v2 <http://dbpedia.org/ontology/parent> ?result . },"```sparql
# Query for the parent of May Hnin Thwe-Da
SELECT ?parent WHERE {
  ?person dbo:birthName ""May Hnin Thwe-Da""@en.
  ?person dbo:parent ?parent.
}

UNION

# Query for the grandparent of May Hnin Htapi (Parent of Parent)
SELECT ?grandparent WHERE {
  ?child dbo:birthName ""May Hnin Htapi""@en.
  ?child dbo:parent ?parent.
  ?parent dbo:parent ?grandparent.
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
182,14,val,Give me the war of the work of Gotabhaya Rajapaksa and war of Mahesh Senanayake.,SELECT ?result WHERE { <http://dbpedia.org/resource/Mahesh_Senanayake> <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Gotabhaya_Rajapaksa> . ?v2 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?workGotabhaya ?workMahesh WHERE {
  # Works by Gotabhaya Rajapaksa related to war
  ?workGotabhaya dbo:author dbr:Gotabhaya_Rajapaksa .
  ?workGotabhaya dbo:title ?titleGotabhaya .
  OPTIONAL { ?workGotabhaya dbo:abstract ?abstractGotabhaya . }
  
  FILTER CONTAINS(LCASE(?titleGotabhaya), ""war"" || CONTAINS(LCASE(?abstractGotabhaya), ""war""))

  # Works by Mahesh Senanayake related to war
  ?workMahesh dbo:author dbr:Mahesh_Senanayake .
  ?workMahesh dbo:title ?titleMahesh .
  OPTIONAL { ?workMahesh dbo:abstract ?abstractMahesh . }
  
  FILTER CONTAINS(LCASE(?titleMahesh), ""war"" || CONTAINS(LCASE(?abstractMahesh), ""war""))
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
485,18,val,"Give me the entity in the birth place, that is a region, of Joseph Whitaker (naturalist) and birth place of Thomas Warner (poet).",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. <http://dbpedia.org/resource/Joseph_Whitaker_(naturalist)> <http://dbpedia.org/ontology/birthPlace> ?v0 . ?result <http://dbpedia.org/ontology/country> ?v0 . <http://dbpedia.org/resource/Thomas_Warner_(poet)> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?region WHERE {
  # Birthplace of Joseph Whitaker (Naturalist)
  OPTIONAL { 
    dbr:Joseph_Whitaker_(naturalist) dbo:birthPlace ?whitakerBirth .
    FILTER(STRSTARTS(STR(?whitakerBirth), ""http://dbpedia.org/resource/Category:""))
  }
  
  # Birthplace of Thomas Warner (Poet)
  OPTIONAL { 
    dbr:Thomas_Warner_(poet) dbo:birthPlace ?warnerBirth .
    FILTER(STRSTARTS(STR(?warnerBirth), ""http://dbpedia.org/resource/Category:""))
  }

  # Ensure both birthplaces are regions
  OPTIONAL {
    ?whitakerBirth rdfs:subClassOf* dbr:Region .
  }
  
  OPTIONAL {
    ?warnerBirth rdfs:subClassOf* dbr:Region .
  }

  # Find common region
  FILTER(?whitakerBirth = ?warnerBirth)
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
767,28,val,"Give me the reference to  and entity in the administration, that is a settlement, of Green and alma mater of Carl L. Nippert.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/leaderParty> ""Green""@en . <http://dbpedia.org/resource/Carl_L._Nippert> <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://dbpedia.org/ontology/state> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://xmlns.com/foaf/0.1/name> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?almaMater ?greenEntity ?settlement WHERE {
  # Carl L. Nippert's alma mater
  dbr:C_L_Nippert dbo:almaMater ?almaMater .

  # Green entity related to Carl L. Nippert
  ?greenEntity rdfs:label ""Green""@en .
  ?greenEntity dbo:associatedWith dbr:C_L_Nippert .

  # Settlement in administration involving Green and alma mater
  ?settlement a dbo:Settlement ;
              dbo:administrativeUnit ?adminEntity .
  ?adminEntity dbo:member ?greenEntity ;
               dbo:member ?almaMater .
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
767,21,val,"Give me the entity in the administration, that is a settlement, of Green and reference to .","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/state> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://dbpedia.org/property/leaderParty> ""Green""@en . ?result <http://xmlns.com/foaf/0.1/name> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX wd: <http://www.wikidata.org/entity/>

SELECT ?settlement
WHERE {
  ?green dbo:administrativeUnit ?entity .
  FILTER (str(?green) = ""Green"") .
  ?entity rdf:type dbp:isSettlement .
}
```",3,4,4,2,2,3,3,71,0,0,7,0,0.0,0
427,30,val,"Give me the party of the person born, that is an office holder and a politician, as Romano Antonio Prodi and reference to Partito Popolare Italiano and party of Giulio Andreotti.","SELECT ?result WHERE { <http://dbpedia.org/resource/Giulio_Andreotti> <http://dbpedia.org/ontology/party> ?result . ?result <http://xmlns.com/foaf/0.1/name> ""Partito Popolare Italiano""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/property/birthName> ""Romano Antonio Prodi""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/ontology/party> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?partyLabel WHERE {
  ?prodi dbo:birthPlace dbr:Italy .
  ?prodi a dbo:Politician ;
         dbo:officeHolder true .
  ?prodi dbo:politicalParty ?party .
  ?party rdfs:label ?partyLabel .
  FILTER(CONTAINS(LCASE(?partyLabel), ""partito popolare italiano"") || CONTAINS(LCASE(?partyLabel), ""democratici di sinistra""))
  FILTER(STRSTARTS(STR(?prodi), STR(dbr:Romano_Prodi)))
}
```",4,6,5,2,3,3,3,71,0,0,1,0,0.0,0
712,14,val,Give me the resting place of the awardee of the show of Soviet Union.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/Soviet_Union> . ?v0 <http://dbpedia.org/property/awards> ?v2 . ?v0 <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?burialPlace WHERE {
  ?person dbo:award ""Nobel Peace Prize""@en .
  ?person rdfs:label ""Andrei Sakharov""@en .
  ?person dbo:deathPlace ?deathPlace .
  OPTIONAL { ?person dbo:burialPlace ?burialPlace }
}
```",3,3,4,3,1,3,2,20,0,0,63,0,0.0,0
528,44,val,Give me the war of the commander in Battle of La Rinconada de Ate and war of Irene Morales and force of the person born as Narciso Campero Leyes.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Battle_of_La_Rinconada_de_Ate> <http://dbpedia.org/ontology/commander> ?v4 . ?v2 <http://dbpedia.org/property/birthName> ""Narciso Campero Leyes""@en . ?v4 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/commander> ?v2 . <http://dbpedia.org/resource/Irene_Morales> <http://dbpedia.org/ontology/battle> ?result . }","```sparql
# Query for the war associated with the Battle of La Rinconada de Ate
SELECT ?war WHERE {
  dbpedia:Battle_of_La_Rinconada_de_Ate dbo:partOf ?war .
}

# Query for the war associated with Irene Morales
SELECT ?war WHERE {
  dbpedia:Irene_Morales dbo:associatedWithWar ?war .
}

# Query for the military force commanded by Narciso Campero Leyes
SELECT ?force WHERE {
  dbpedia:Narciso_Campero_Leyes dbo:commandedForce ?force .
}
```",5,5,6,2,3,3,3,71,0,0,2,0,0.0,0
963,15,val,"Give me the entity in the region, that is a country, of the time zone of Herzegovina-Neretva Canton and administration of Serbian Progressive Party.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Serbian_Progressive_Party> . ?result <http://dbpedia.org/ontology/country> ?v1 . <http://dbpedia.org/resource/Herzegovina-Neretva_Canton> <http://dbpedia.org/property/timeZone> ?v0 . ?v1 <http://dbpedia.org/property/timeZone> ?v0 . },"```sparql
# Step 1: Find the time zone of Herzegovina-Neretva Canton
SELECT ?timeZone WHERE {
    dbpedia:Herzegovina-Neretva_Canton dbo:timezone ?timeZone .
}

# Step 2: Find countries in that time zone
SELECT DISTINCT ?country WHERE {
    ?country dbo:timezone ?timeZone .
    FILTER(?timeZone = <URI_OF_TIMEZONE_FROM_STEP_1>)
}

# Step 3: Identify the country administering Serbian Progressive Party
SELECT DISTINCT ?adminCountry WHERE {
    dbpedia:Serbian_Progressive_Party dbo:administrativeRegion ?region .
    ?region dbo:country ?adminCountry .
}

# Step 4: Find common entity between countries in time zone and admin of Serbian Progressive Party
SELECT DISTINCT ?entity WHERE {
    VALUES (?entity) { 
        (<URI_OF_COUNTRY_FROM_STEP_2>) 
        (<URI_OF_ADMIN_COUNTRY_FROM_STEP_3>)
    }
}
```

Note: Replace `<URI_OF_TIMEZONE_FROM_STEP_1>`, `<URI_OF_COUNTRY_FROM_STEP_2>`, and `<URI_OF_ADMIN_COUNTRY_FROM_STEP_3>` with the actual URIs obtained from executing each respective query.",4,5,5,3,2,3,2,20,0,0,84,0,0.0,0
339,11,val,Give me the child of the child of Christian IX of Denmark and father of Princess Elizabeth of Greece and Denmark.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Christian_IX_of_Denmark> . <http://dbpedia.org/resource/Princess_Elizabeth_of_Greece_and_Denmark> <http://dbpedia.org/property/father> ?result . ?v2 <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?grandchild WHERE {
  # Christian IX's children
  ?child dbo:spouse ?parent .
  ?parent foaf:name ""Christian IX""@en .

  # Grandchildren of Christian IX (children of his children)
  ?grandchild dbo:father ?child .
  
  # Prince Andrew of Greece and Denmark is the father of Princess Elizabeth of Greece and Denmark
  ?princess dbo:father ?grandchild .
  ?princess foaf:name ""Princess Elizabeth of Greece and Denmark""@en .
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
391,31,val,"Give me the actor of The Departed and native of the figure known as the nick name of Jackson, Tennessee.","SELECT ?result WHERE { <http://dbpedia.org/resource/The_Departed> <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://dbpedia.org/property/nickname> ?v1 . ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . <http://dbpedia.org/resource/Jackson,_Tennessee> <http://xmlns.com/foaf/0.1/nick> ?v1 . }","```sparql
SELECT ?actor ?nativePlace WHERE {
  # Find actors in ""The Departed""
  ?movie dbo:starring ?actor .
  ?movie rdfs:label ""The Departed""@en .

  # Filter for native place related to Jackson, Tennessee nickname
  OPTIONAL { ?actor dbo:nativePlace ?place . }
  
  # Find the figure associated with a nickname from Jackson, Tennessee
  ?figure dbo:nickName ?nickname .
  ?figure dbo:nativePlace ?jacksonPlace .
  ?jacksonPlace rdfs:label ""Jackson, Tennessee""@en .

  FILTER(?actor = ?figure)
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
92,39,val,Give me the associated musical artist of Jim Sheppard and band of the person born as the birth name of Joseph Michael.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> ?v1 . <http://dbpedia.org/resource/Joseph_Michael> <http://dbpedia.org/property/birthName> ?v0 . <http://dbpedia.org/resource/Jim_Sheppard> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/property/birthName> ?v0 . },"```sparql
# Query for the band associated with Jim Sheppard
SELECT ?band WHERE {
  ?person foaf:name ""Jim Sheppard""@en .
  ?person dbo:associatedBand ?band .
}

UNION

# Query for the band of the person born as Joseph Michael
SELECT ?band WHERE {
  ?person foaf:name ?name .
  ?person dbo:birthName ""Joseph Michael""@en .
  ?person dbo:associatedBand ?band .
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
767,25,val,Give me the alma mater of Carl L. Nippert and reference to the alter ego of Black Hood.,SELECT ?result WHERE { <http://dbpedia.org/resource/Black_Hood> <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . <http://dbpedia.org/resource/Carl_L._Nippert> <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?almaMater ?alterEgo WHERE {
  OPTIONAL { 
    dbr:C_L._Nippert dbo:almaMater ?almaMater .
  }
  OPTIONAL {
    dbr:Black_Hood dbo:alterEgo ?alterEgo .
  }
}
```",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
801,44,val,"Give me the producer of the work, that is a musical work and a song and a work, of 50 Cent and professional in  and associated musical artist of the writer, that is a musical artist and an artist, of 40 Dayz & 40 Nightz.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/producer> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v4 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/50_Cent> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/40_Dayz_&_40_Nightz> <http://dbpedia.org/property/writer> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?producer ?associatedArtist WHERE {
  # Find the song ""40 Dayz & 40 Nightz"" by 50 Cent
  ?song dbo:title ""40 Dayz & 40 Nightz""@en .
  ?song dbo:artist dbr:50_Cent .

  # Get the producer of the song
  ?song dbo:producer ?producer .

  # Find associated musical artists for each producer
  OPTIONAL {
    ?producer dbo:associatedMusicalArtist ?associatedArtist .
  }
}
```",5,10,6,2,3,3,3,71,0,0,1,0,0.0,0
701,43,val,Give me the parent of Meritamen and spouse of Ramesses II and parent of the child of the child of Seti I.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v4 . ?v4 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Meritamen> <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seti_I> . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Ramesses_II> . },"```sparql
# Query for the parent of Meritamen
SELECT ?parent WHERE {
  ?meritamen dbo:parent ?parent .
  FILTER (str(?meritamen) = ""Meritamen"")
}

UNION

# Query for the spouse of Ramesses II
SELECT ?spouse WHERE {
  ?ramessesII dbo:spouse ?spouse .
  FILTER (str(?ramessesII) = ""Ramesses_II"")
}

UNION

# Query for the parent of the child of the child of Seti I
SELECT DISTINCT ?grandparent ?child ?grandchild ?parent WHERE {
  ?setiI dbo:child ?child .
  ?child dbo:child ?grandchild .
  ?grandchild dbo:parent ?parent .
  FILTER (str(?setiI) = ""Seti_I"")
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
701,25,val,Give me the parent of Henuttawy (19th dynasty) and spouse of the father of Merneptah.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v1 . <http://dbpedia.org/resource/Merneptah> <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Henuttawy_(19th_dynasty)> . },"```sparql
SELECT DISTINCT ?individual WHERE {
  # Find the parent of Henuttawy (19th dynasty)
  ?henuttawy dbo:spouse ?parent .
  ?henuttawy rdfs:label ""Henuttawy (19th dynasty)""@en .

  # Find Merneptah's father and his spouse
  ?merneptah dbo:father ?father .
  ?merneptah rdfs:label ""Merneptah""@en .
  ?father dbo:spouse ?individual .

  FILTER(?parent = ?individual)
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
547,19,val,Give me the resting place of the child of James Burton (property developer) and resting place of Simon Cadell.,SELECT ?result WHERE { <http://dbpedia.org/resource/Simon_Cadell> <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/James_Burton_(property_developer)> <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
SELECT ?person ?name ?restingPlace WHERE {
  # Query for Isambard Kingdom Brunel, child of James Burton
  VALUES ?person { dbr:Isambard_Kingdom_Brunel }
  OPTIONAL { ?person rdfs:label ?name . FILTER (lang(?name) = 'en') }
  OPTIONAL { ?person dbo:burialLocation ?restingPlace . }

  UNION

  # Query for Simon Cadell
  VALUES ?person { dbr:Simon_Cadell }
  OPTIONAL { ?person rdfs:label ?name . FILTER (lang(?name) = 'en') }
  OPTIONAL { ?person dbo:burialLocation ?restingPlace . }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
16,21,val,Give me the spouse of the person born as Ted Martin McGinley and person born as Georgeanne Marie Rice.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ""Ted Martin McGinley""@en . ?result <http://dbpedia.org/property/birthName> ""Georgeanne Marie Rice""@en . ?v1 <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
SELECT ?person ?spouse WHERE {
  VALUES ?person { 
    dbr:Ted_McGinley 
    dbr:Georgeanne_Rice 
  }
  ?person dbo:spouse ?spouse .
}
```",3,3,4,2,2,3,3,71,1,1,0,0.5,1.0,0.6666666666666666
659,41,val,"Give me the military force of Napoleonic Wars and commander in the force of Arthur Wellesley, 1st Duke of Wellington and commander in the war, that is an event and a military conflict, of 1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish).","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Napoleonic_Wars> . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Arthur_Wellesley,_1st_Duke_of_Wellington> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/1st_Light_Cavalry_Lancers_Regiment_of_the_Imperial_Guard_(Polish)> <http://dbpedia.org/ontology/battle> ?v4 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce ?commander ?event ?regiment WHERE {
  # Identify the Napoleonic Wars as an event
  dbr:Napoleonic_Wars a dbo:MilitaryConflict ;
                      rdfs:label ?event .

  # Find Arthur Wellesley's command role
  dbr:Arthur_Wellesley_1st_Duke_of_Wellington dbo:commander ?militaryForce .
  
  # Link the military force to the Napoleonic Wars
  ?militaryForce dbo:participatedIn ?event .

  # Identify the 1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish)
  dbr:1st_Light_Cavalry_Lancers_Regiment_of_the_Imperial_Guard_(Polish) a dbo:MilitaryUnit ;
                                                                  dbo:partOf ?militaryForce .
}
```",5,7,6,2,3,3,3,71,0,0,13,0,0.0,0
54,19,val,Give me the child of the father of Soe Min Wimala Dewi and parent of Thado Minsaw of Prome.,SELECT ?result WHERE { <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Soe_Min_Wimala_Dewi> <http://dbpedia.org/property/father> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?individual WHERE {
  # Find Soe Min Wimala Dewi's father
  ?soeMinWimalaDewi a dbo:Person ;
                   foaf:name ""Soe Min Wimala Dewi"" .
  
  ?father dbo:child ?soeMinWimalaDewi .

  # Find the child of Soe Min Wimala Dewi's father
  ?child dbo:parent ?father .

  # Find Thado Minsaw of Prome's parent
  ?thadoMinsaw a dbo:Person ;
               foaf:name ""Thado Minsaw of Prome"" .
  
  ?parent dbo:child ?thadoMinsaw .

  # Match the individual who is both the child and the parent
  FILTER (?child = ?parent)
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
16,36,val,Give me the spouse of Ted McGinley and person born as the birth name of the alumnus of Ohio State University.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Ohio_State_University> . ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
# Part 1: Find the spouse of Ted McGinley
SELECT ?spouse WHERE {
    ?person dbo:name ""Ted McGinley""@en .
    ?person dbo:spouse ?spouse .
}

UNION

# Part 2: Find a person born with the birth name of an Ohio State University alumnus
SELECT DISTINCT ?person WHERE {
    # Find alumni of Ohio State University and their birth names
    ?alumnus dbo:almaMater dbr_Ohio_State_University .
    ?alumnus foaf:name ?birthName .

    # Find a person with the same birth name
    ?person foaf:name ?birthName .
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
820,14,val,Give me the child of the parent of the professional in Actor.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://dbpedia.org/property/occupation> ""Actor""@en . ?result <http://dbpedia.org/property/father> ?v0 . }","```sparql
SELECT DISTINCT ?child WHERE {
  ?actor dbo:occupation dbr:Actor .
  ?actor dbo:parent ?parent .
  ?parent dbo:child ?child .
}
```",3,3,4,3,1,3,2,20,4,182,350,0.021505376344086023,0.011299435028248588,0.014814814814814815
547,20,val,Give me the resting place of the actor of Enemy at the Door and resting place of James Burton (Egyptologist).,SELECT ?result WHERE { <http://dbpedia.org/resource/James_Burton_(Egyptologist)> <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Enemy_at_the_Door> <http://dbpedia.org/property/starring> ?v2 . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
# Query to find the resting place of the actor from ""Enemy at the Door""
SELECT ?actor ?restingPlace WHERE {
  ?film dcterms:title ""Enemy at the Door""@en .
  ?film dbo:starring ?actor .
  OPTIONAL { ?actor dbo:deathPlace ?restingPlace . }
} LIMIT 1

UNION

# Query to find the resting place of James Burton (Egyptologist)
SELECT ?person ?restingPlace WHERE {
  ?person foaf:name ""James Burton""@en ;
          dbo:occupation dbp:Egyptologist .
  OPTIONAL { ?person dbo:deathPlace ?restingPlace . }
} LIMIT 1
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
528,26,val,Give me the war of the commander in the work of --01-09.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/author> ""--01-09""^^<http://www.w3.org/2001/XMLSchema#gMonthDay> . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/ontology/commander> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?work ?war ?commander WHERE {
  ?work dbo:genre dbr:Military_fiction .
  ?work dbo:event ?event .
  ?event dbo:subject ?war .
  ?work dbo:character ?commander .
  ?commander rdfs:label ?commanderLabel .
  FILTER(CONTAINS(LCASE(?commanderLabel), ""commander"") || CONTAINS(LCASE(?commanderLabel), ""general""))
  OPTIONAL { 
    ?event dbo:date ?date .
    FILTER(STRSTARTS(STR(?date), ""-01-09""))
  }
}
```",3,3,4,3,1,3,3,71,0,0,14,0,0.0,0
767,24,val,Give me the reference to  and alma mater of the administration of George K. Nash.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/George_K._Nash> . ?v2 <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://xmlns.com/foaf/0.1/name> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?administration ?almaMater WHERE {
  ?person foaf:name ""George K. Nash""@en .
  OPTIONAL { ?person dbo:positionHeld ?administration . }
  OPTIONAL { ?person dbo:almaMater ?almaMater . }
}
```",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
801,34,val,Give me the professional in the alter ego of the true self of The Shadow and associated musical artist of Chris Taylor (music producer).,"SELECT ?result WHERE { <http://dbpedia.org/resource/Chris_Taylor_(music_producer)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v1 . ?v2 <http://xmlns.com/foaf/0.1/givenName> ""The Shadow""@en . }","```sparql
# Query to find artists associated with Chris Taylor (music producer)
SELECT ?artist WHERE {
  ?artist dbo:associatedMusicalArtist dbr:Chris_Taylor_(musician).
}
```

Note: This query assumes that DBpedia has structured data linking musical artists to Chris Taylor. The connection to Lamont Cranston is metaphorical and not directly representable in a SPARQL query.",4,4,5,3,2,3,3,71,0,0,4,0,0.0,0
666,14,val,"Give me the figure known as the nickname of the reference, that is an organisation and a soccer club and a sports club, to England.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v2 <http://xmlns.com/foaf/0.1/name> ""England""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/property/nickname> ?v0 . ?v2 <http://dbpedia.org/property/nickname> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nickname WHERE {
  ?club a dbo:SoccerClub ;
        dbo:sportTeamInLeague dbr:Premier_League ;
        dbo:nickname ?nickname .
  FILTER(CONTAINS(LCASE(?nickname), ""red devils""))
}
```",3,6,4,3,1,3,2,20,0,0,12,0,0.0,0
492,23,val,Give me the person decedent at the work of the author of French Algeria.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/author> ?v2 . <http://dbpedia.org/resource/French_Algeria> <http://dbpedia.org/property/author> ?v2 . ?result <http://dbpedia.org/ontology/deathPlace> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?author ?decedent WHERE {
  ?book dbo:author ?author .
  ?author dbo:title ""French Algeria"" .
  
  OPTIONAL {
    ?author dbo:spouse ?spouse .
    ?spouse dbo:child ?decedent .
  }
  
  UNION
  
  OPTIONAL {
    ?author dbo:parent ?parent .
    ?parent dbo:child ?decedent .
  }
}
```",3,3,4,3,1,3,3,71,0,0,30,0,0.0,0
747,25,val,Give me the band of the person born as Tracey Elizabeth McSween and band of Amba Shepherd.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Amba_Shepherd> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/property/birthName> ""Tracey Elizabeth McSween""@en . }","```sparql
# Query for Tracey Elizabeth McSween's band
SELECT ?band WHERE {
  ?person dbo:birthName ""Tracey Elizabeth McSween""@en .
  ?person dbo:musicBand ?band .
  FILTER(CONTAINS(LCASE(STR(?band)), ""shams""))
}

UNION

# Query for Amba Shepherd's band
SELECT ?band WHERE {
  ?person foaf:name ""Amba Shepherd""@en .
  ?person dbo:memberOf ?band .
  FILTER(CONTAINS(LCASE(STR(?band)), ""haim""))
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
9,27,val,"Give me the figure known as the nickname of the entity, that is an organisation and an educational institution, in Northern Ireland.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Northern_Ireland> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?result <http://dbpedia.org/property/nickname> ?v2 . ?v1 <http://dbpedia.org/property/nickname> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?institution ?nickname WHERE {
  ?institution a dbo:EducationalInstitution ;
               dbo:type dbo:Organization ;
               dbp:location dbc:Northern_Ireland .
  OPTIONAL { ?institution rdfs:label ?nickname FILTER (lang(?nickname) = 'en') }
}
LIMIT 1
```",3,5,4,3,1,3,3,71,0,0,13,0,0.0,0
378,44,val,Give me the war of the commander in Peninsular War and claim to fame of the commander in Great Siege of Gibraltar and war of Carl Pontus Gahn.,SELECT ?result WHERE { <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/ontology/knownFor> ?result . <http://dbpedia.org/resource/Great_Siege_of_Gibraltar> <http://dbpedia.org/ontology/commander> ?v2 . <http://dbpedia.org/resource/Peninsular_War> <http://dbpedia.org/ontology/commander> ?v4 . ?v4 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
# Query for Arthur Wellesley and the Peninsular War
SELECT ?person ?peninsularWar WHERE {
  ?person dbo:wikiPageID ""Arthur_Wellesley,_1st_Duke_of_Wellington"" .
  ?person dbo:occupation dbr:Military_person .
  ?person dbo:participatedInEvent dbr:Peninsular_War .
  BIND(?person AS ?peninsularWar)
}

# Query for George Augustus Eliott and the Great Siege of Gibraltar
SELECT ?person ?greatSiege WHERE {
  ?person dbo:wikiPageID ""George_Augustus_Eliott,_1st_Baron_Heathfield"" .
  ?person dbo:occupation dbr:Military_person .
  ?person dbo:participatedInEvent dbr:Great_Siege_of_Gibraltar .
  BIND(?person AS ?greatSiege)
}

# Query for Carl Pontus Gahn and the Napoleonic Wars
SELECT ?person ?napoleonicWars WHERE {
  ?person dbo:wikiPageID ""Carl_Pontus_Gahn"" .
  ?person dbo:occupation dbr:Chemist .
  ?person dbo:participatedInEvent dbr:Napoleonic_Wars .
  BIND(?person AS ?napoleonicWars)
}
```",5,5,6,2,3,3,3,71,0,0,2,0,0.0,0
801,30,val,"Give me the associated musical artist of the writer, that is a musical artist and an artist, of 40 Dayz & 40 Nightz and producer of Westside Story (song) and professional in .","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/40_Dayz_&_40_Nightz> <http://dbpedia.org/property/writer> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Westside_Story_(song)> <http://dbpedia.org/ontology/producer> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artist WHERE {
  # Find the writer of ""40 Dayz & 40 Nightz""
  ?work dbo:writer ?person .
  ?work rdfs:label ""40 Dayz & 40 Nightz""@en .

  # Ensure this person is a musical artist and an artist
  ?person dbo:occupation dbr:Musical_artist ;
          dbo:occupation dbr:Artist .

  # Check if they are the producer of ""Westside Story""
  ?song dbo:producer ?person .
  ?song rdfs:label ""Westside Story (song)""@en .

  # Ensure they have another professional role
  ?person dbo:occupation ?otherRole .
  FILTER(?otherRole != dbr:Musical_artist && ?otherRole != dbr:Artist)
}
```",4,6,5,2,3,3,3,71,0,0,1,0,0.0,0
378,20,val,Give me the war of the commander in Peninsular War and war of Carl Pontus Gahn.,SELECT ?result WHERE { <http://dbpedia.org/resource/Peninsular_War> <http://dbpedia.org/ontology/commander> ?v2 . <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?warOfPeninsularWarCommander ?warOfCarlPontusGahn WHERE {
  # Find a notable commander in the Peninsular War
  OPTIONAL {
    ?commander dbo:nationality dbr:United_Kingdom ;
              dbo:occupation dbr:Military_person ;
              dbo:wikiPageDisambiguates ?disambiguation .
    FILTER(CONTAINS(LCASE(?disambiguation), ""arthur wellesley""))
    ?commander dbo:participatedInWar ?warOfPeninsularWarCommander .
    FILTER(STRSTARTS(STR(?warOfPeninsularWarCommander), ""http://dbpedia.org/resource/Peninsular_War"") || 
           STRSTARTS(STR(?warOfPeninsularWarCommander), ""http://dbpedia.org/resource/Napoleonic_Wars""))
  }

  # Find wars associated with Carl Pontus Gahn
  ?carlPontusGahn a dbo:Person ;
                  rdfs:label ""Carl Pontus Gahn""@en .
  ?carlPontusGahn dbo:participatedInWar ?warOfCarlPontusGahn .
}
```",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
9,44,val,"Give me the figure known as the nickname of Queen's University Belfast and alma mater of John Alderdice, Baron Alderdice and alma mater of the awardee of Royal Medal.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Medal> . ?result <http://dbpedia.org/property/nickname> ?v2 . <http://dbpedia.org/resource/Queen's_University_Belfast> <http://dbpedia.org/property/nickname> ?v2 . ?v4 <http://dbpedia.org/ontology/almaMater> ?result . <http://dbpedia.org/resource/John_Alderdice,_Baron_Alderdice> <http://dbpedia.org/ontology/almaMater> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?nickname WHERE {
  # Find the nickname of Queen's University Belfast
  ?university a dbo:EducationalInstitution ;
              foaf:name ""Queen's University Belfast"" ;
              foaf:nick ?nickname .

  # Confirm John Alderdice is an alumnus
  ?alderdice dbo:almaMater ?university ;
            foaf:name ""John Alderdice"" .

  # Find a notable awardee of the Royal Medal who attended Queen's University Belfast
  ?awardee dbo:almaMater ?university ;
          dbo:award ""Royal Medal"" .
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
339,15,val,Give me the father of Princess Elizabeth of Greece and Denmark and child of the child of the predecessor of Frederick VIII of Denmark.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Princess_Elizabeth_of_Greece_and_Denmark> <http://dbpedia.org/property/father> ?result . ?v0 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Frederick_VIII_of_Denmark> . ?v1 <http://dbpedia.org/property/father> ?v0 . },"```sparql
# Step 1: Find Princess Elizabeth of Greece and Denmark's father
SELECT ?father WHERE {
  wd:Q1234567 wdt:P22 ?father .
}

# Step 2: Identify Frederick VIII's predecessor (Christian IX)
SELECT ?predecessor WHERE {
  wd:Q1234568 wdt:P136 ?predecessor .
}

# Step 3: Find a child of Christian IX
SELECT ?child WHERE {
  ?child wdt:P31/wdt:P279* wd:Q5 ; # Person or descendant of person
         wdt:P22 wd:Q1234570 .    # Parent is Christian IX
}

# Step 4: Identify the father of Princess Elizabeth (King Constantine I)
SELECT ?father WHERE {
  wd:Q1234567 wdt:P22 ?father .
}
```

Note: Replace `wd:Q1234567` with the actual DBpedia identifier for Princess Elizabeth of Greece and Denmark, `wd:Q1234568` with Frederick VIII, and `wd:Q1234570` with Christian IX. The identifiers need to be looked up in DBpedia.",4,4,5,3,2,3,2,20,0,0,1,0,0.0,0
547,39,val,Give me the resting place of Simon Cadell and resting place of the awardee of the award of Gerald Graham.,SELECT ?result WHERE { <http://dbpedia.org/resource/Gerald_Graham> <http://dbpedia.org/property/awards> ?v0 . ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . ?v1 <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Simon_Cadell> <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
# Query to get the resting place of Simon Cadell
SELECT ?burialPlace WHERE {
  ?person dbo:birthName ""Simon Cadell""@en .
  ?person dbo:deathPlace ?burialPlace .
}

UNION

# Query to find the award associated with Gerald Graham and its awardee's resting place
SELECT ?awardeeBurialPlace WHERE {
  ?award dbo:recipient ?awardee .
  ?awardee dbo:birthName ""Gerald Graham""@en ;
          dbo:deathPlace ?awardeeBurialPlace .
}
```",4,4,5,3,2,3,3,71,0,0,2,0,0.0,0
528,36,val,Give me the war of Irene Morales and force of the person born as the birth name of Narciso Campero.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ?v0 . <http://dbpedia.org/resource/Narciso_Campero> <http://dbpedia.org/property/birthName> ?v0 . ?result <http://dbpedia.org/ontology/commander> ?v1 . <http://dbpedia.org/resource/Irene_Morales> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
# Query to find wars involving Irene Morales
SELECT ?war WHERE {
  ?person foaf:name ""Irene Morales""@en .
  ?person dbo:memberOf ?organization .
  ?organization dbo:member ?individual .
  ?individual dbo:occupation ?occupation .
  FILTER regex(?occupation, ""soldier|military"", ""i"") .
  ?individual dbo:participatedIn ?war .
}

# Query to find the force or group associated with Narciso Campero
SELECT ?force WHERE {
  ?person foaf:name ""Narciso Campero""@en ;
          foaf:birthName ""Narciso Campero""@en .
  ?person dbo:memberOf ?organization .
  ?organization a ?forceType .
}
```",4,4,5,3,2,3,3,71,0,0,2,0,0.0,0
617,24,val,Give me the spouse of the child of Antiochus III the Great and parent of Nysa (wife of Pharnaces I of Pontus).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Nysa_(wife_of_Pharnaces_I_of_Pontus)> . <http://dbpedia.org/resource/Antiochus_III_the_Great> <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
SELECT ?spouse WHERE {
  # Step 1: Find Antiochus III the Great
  wd:Q123456 rdfs:label ""Antiochus III the Great""@en. 

  # Step 2: Identify his children
  ?child wdt:P40 wd:Q123456.

  # Step 3: Find which child is a parent of Nysa (wife of Pharnaces I of Pontus)
  ?nysa wdt:P25 ?parent.
  ?parent rdfs:label ""Nysa (wife of Pharnaces I of Pontus)""@en.
  
  # Step 4: Find the spouse of this child
  ?child wdt:P26 ?spouse.
}
```

Note: Replace `wd:Q123456` with the actual DBpedia identifier for Antiochus III the Great, and ensure that ""Nysa (wife of Pharnaces I of Pontus)"" is correctly identified in DBpedia.",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
339,13,val,Give me the child of the child of the predecessor of Frederick VIII of Denmark.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Frederick_VIII_of_Denmark> . ?v1 <http://dbpedia.org/property/father> ?v0 . ?v1 <http://dbpedia.org/ontology/child> ?result . },"```sparql
SELECT ?grandchild WHERE {
  # Step 1: Identify Frederick VIII of Denmark
  ?frederickVIII dbo:predecessor ?predecessor .
  
  FILTER(?frederickVIII = dbpedia:Frederick_VIII_of_Denmark)

  # Step 2: Find the child of the predecessor
  ?predecessor dbo:child ?child .

  # Step 3: Find the grandchild (child of the child)
  ?child dbo:child ?grandchild .
}
```",3,3,4,3,1,3,2,20,0,0,32,0,0.0,0
16,20,val,Give me the professional in the profession of Satomi Ishihara and spouse of Ted McGinley.,SELECT ?result WHERE { <http://dbpedia.org/resource/Satomi_Ishihara> <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/occupation> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  ?satomi dbo:spouse ?ted .
  ?ted foaf:name ""Ted McGinley""@en .
  ?satomi foaf:name ""Satomi Ishihara""@en .
  ?satomi dbo:profession ?profession .

  ?person dbo:profession ?profession .
  ?person dbo:spouse ?ted .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
617,18,val,Give me the spouse of Laodice IV and child of Antiochus III the Great and parent of Nysa (wife of Pharnaces I of Pontus).,SELECT ?result WHERE { <http://dbpedia.org/resource/Laodice_IV> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Antiochus_III_the_Great> . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Nysa_(wife_of_Pharnaces_I_of_Pontus)> . },"```sparql
SELECT ?person WHERE {
  ?person dbo:spouse dbr:Laodice_IV .
  ?person dbo:child dbr:Antiochus_III_the_Great .
  ?person dbo:parent dbr:Nysa_(wife_of_Pharaces_I_of_Pontus) .
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
996,14,val,Give me the entity in the award of the native of Palestine (region).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> ?v0 . ?v2 <http://dbpedia.org/property/awards> ?v0 . ?v2 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Palestine_(region)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person ?award WHERE {
  ?person dbo:birthPlace dbr:Palestine .
  OPTIONAL { ?person dbo:honoraryTitle ?award . }
  FILTER EXISTS { ?person dbo:honoraryTitle ?award }
}
```",3,3,4,3,1,3,2,20,0,0,292,0,0.0,0
391,21,val,Give me the native of the figure known as Hub City and actor of All About the Andersons.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://dbpedia.org/property/nickname> ""Hub City""@en . <http://dbpedia.org/resource/All_About_the_Andersons> <http://dbpedia.org/property/starring> ?result . }","```sparql
SELECT ?actor ?nativePlace WHERE {
  ?actor dbo:birthPlace dbr:Spartanburg,_South_Carolina .
  ?actor dbo:spouseOrPartner ?show .
  ?show rdfs:label ""All About the Andersons""@en .
  FILTER (lang(?show) = 'en')
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
345,14,val,"Give me the team of the person born, that is a soccer player and a soccer manager, on the birth date of Eiður Guðjohnsen.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?result <http://dbpedia.org/ontology/manager> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. <http://dbpedia.org/resource/Eiður_Guðjohnsen> <http://dbpedia.org/ontology/birthDate> ?v2 . ?v0 <http://dbpedia.org/ontology/birthDate> ?v2 . },"```sparql
# Step 1: Get Eiður Guðjohnsen's birth date
SELECT ?birthDate WHERE {
    dbpedia:Æður_Guðjónsson dbo:birthDate ?birthDate .
}

# Step 2 and 3: Find soccer players/managers born on the same date and get their teams
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person ?team WHERE {
    # Replace 'YYYY-MM-DD' with Eiður Guðjohnsen's birth date obtained from Step 1
    VALUES (?birthDate) { (dbr:Eiður_Guðjónsson dbo:birthDate ""YYYY-MM-DD""^^xsd:date) }

    ?person a dbo:SoccerPlayer ;
            dbo:birthDate ?birthDate .

    OPTIONAL {
        ?person a dbo:Manager .
    }
    
    ?person dbo:team ?team .
}
```

Note: Replace `""YYYY-MM-DD""` with the actual birth date of Eiður Guðjohnsen obtained from Step 1.",3,5,4,3,1,3,2,20,0,0,2,0,0.0,0
9,37,val,"Give me the alma mater of the awardee of the reference, that is an award, to Royal Medals and figure known as QUB.","SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""Royal Medals""@en . ?result <http://dbpedia.org/property/nickname> ""QUB""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v3 <http://dbpedia.org/ontology/almaMater> ?result . ?v3 <http://dbpedia.org/property/awards> ?v0 . }","```sparql
SELECT ?almaMater WHERE {
  ?person dbo:award dbpedia:Royal_Medal_of_the_Royal_Society .
  ?person dbo:almaMater ?university .
  ?university rdfs:label ""Queen's University Belfast""@en .
  OPTIONAL { ?person foaf:almaMater ?almaMater . }
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
492,42,val,"Give me the commander in Franco-Hova Wars and person decedent at the capital, that is a settlement, of Algeria and person decedent at the work of US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . ?v2 <http://dbpedia.org/property/author> ""US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite""@en . ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . <http://dbpedia.org/resource/Algeria> <http://dbpedia.org/ontology/capital> ?v1 . <http://dbpedia.org/resource/Franco-Hova_Wars> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commander ?decedentAlgiers ?decedentSatterthwaite WHERE {
  # Find the commander in Franco-Hova Wars
  ?francoHovaWars dbo:participatedIn [
    a dbo:MilitaryConflict ;
    dbo:commander ?commander .
  ].
  
  FILTER regex(str(?francoHovaWars), ""Franco-Hova War"", ""i"").

  # Find person decedent at the capital of Algeria (Algiers)
  ?decedentAlgiers dbo:deathPlace dbr:Algiers ;
                   a dbo:Person .

  # Find person decedent associated with Joseph C. Satterthwaite's work
  ?satterthwaiteWork dbo:employee dbr:Joseph_C._Satterthwaite ;
                     dbo:placeOfWork ?workLocation .
  
  ?decedentSatterthwaite dbo:deathPlace ?workLocation ;
                         a dbo:Person .

}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
617,28,val,"Give me the spouse of Laodice IV and child of the child, that is a royalty, of Seleucus II Callinicus and parent of Nysa (wife of Pharnaces I of Pontus).",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Laodice_IV> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Nysa_(wife_of_Pharnaces_I_of_Pontus)> . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seleucus_II_Callinicus> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  # Laodice IV's spouse
  dbr:Laodice_IV dbo:spouse ?spouse .
  
  # Child of the spouse who is royalty and parent of Nysa
  ?spouse dbo:child ?child .
  ?child a dbo:Monarch .  # Ensuring the child is royalty
  
  # Parent of Nysa, wife of Pharnaces I of Pontus
  ?child dbo:parent dbr:Nysa_(wife_of_Pharaces_I_of_Pontus) .
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
534,13,val,"Give me the birth place of the child, that is a politician and an office holder, of the native, that is a politician, of Essex.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Essex> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/ontology/child> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?childBirthPlace WHERE {
  ?politician a dbo:Politician ;
             dbo:birthPlace dbr:Essex .
  
  ?politician dbo:child ?child .

  ?child a dbo:Politician ;
         dbo:officeHolder ?office .

  ?child dbo:birthPlace ?childBirthPlace .
}
```",3,6,4,3,1,3,2,20,0,0,6,0,0.0,0
701,23,val,Give me the parent of the child of the spouse of Amun-her-khepeshef.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/child> ?v0 . <http://dbpedia.org/resource/Amun-her-khepeshef> <http://dbpedia.org/ontology/spouse> ?v2 . ?v0 <http://dbpedia.org/ontology/parent> ?result . },"```sparql
SELECT ?grandParent WHERE {
  ?amunherkhepeshef dbo:spouse ?spouse .
  FILTER (str(?amunherkhepeshef) = ""Amun-her-khepeshef"") .

  ?spouse dbo:child ?child .
  
  ?child dbo:parent ?grandParent .
}
```",3,3,4,3,1,3,3,71,0,0,2,0,0.0,0
48,12,val,"Give me the band of Carl Falk and band of the actor, that is a musical artist, of Honor Up.",SELECT ?result WHERE { <http://dbpedia.org/resource/Honor_Up> <http://dbpedia.org/property/starring> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Carl_Falk> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band ?actor WHERE {
  # Find the band associated with Carl Falk
  ?person foaf:name ""Carl Falk""@en .
  ?person dbo:associatedBand dbr:A-Teens .
  BIND(dbr:A-Teens AS ?band)

  # Find the actor from ""Honor Up"" who is also a musical artist
  ?movie dbo:title ""Honor Up""@en .
  ?actor dbo:starring ?movie ;
         dbo:occupation dbr:Musical_artist .
  FILTER(CONTAINS(LCASE(?actor), ""vin diesel""))
  BIND(?actor AS ?actor)
}
```",3,4,4,2,2,3,2,20,0,0,1,0,0.0,0
182,15,val,Give me the entity in Sri Lanka and war of the author of 2019 Sri Lanka Easter bombings.,SELECT ?result WHERE { <http://dbpedia.org/resource/2019_Sri_Lanka_Easter_bombings> <http://dbpedia.org/property/author> ?v1 . ?v1 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Sri_Lanka> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entityInSriLanka ?war WHERE {
  ?person a dbo:Person ;
          foaf:name ""Zahran Hashim""@en .
  
  OPTIONAL { ?person dbo:nationality dbr:Sri_Lanka . }
  BIND(IF(BOUND(?nationality), dbr:Sri_Lanka, ""Unknown"") AS ?entityInSriLanka)
  
  OPTIONAL {
    ?person dbo:memberOf ?group .
    ?group dbo:participatedIn ?war .
  }
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
528,23,val,"Give me the war of the military force of the entity, that is a societal event, in Chile.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Chile> . ?v0 <http://dbpedia.org/ontology/battle> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?event ?description WHERE {
  ?event a dbo:SocietalEvent .
  ?event dbo:location dbr:Chile .
  ?event dbo:description ?description .
  FILTER(CONTAINS(LCASE(?description), ""military coup"") || CONTAINS(LCASE(?description), ""coup""))
}
```",3,4,4,3,1,3,3,71,0,0,235,0,0.0,0
429,7,val,Give me the administration of the father of Martha Johnson Patterson and country of 77th Ohio Infantry Regiment.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> ?v2 . <http://dbpedia.org/resource/Martha_Johnson_Patterson> <http://dbpedia.org/property/father> ?v2 . <http://dbpedia.org/resource/77th_Ohio_Infantry_Regiment> <http://dbpedia.org/ontology/country> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father ?administration ?country 
WHERE {
  # Find Martha Johnson Patterson's father
  ?martha a dbo:Person ;
          foaf:name ""Martha Johnson Patterson""@en .
  
  OPTIONAL { ?martha dbo:parent ?father . }
  
  # Get the administration of her father
  OPTIONAL { ?father dbo:officeHolderOf ?administration . }

  # Find the country associated with the 77th Ohio Infantry Regiment
  dbr:77th_Ohio_Infantry_Regiment dbo:nationality ?country .
}
```",3,3,4,2,2,2,2,9,0,0,1,0,0.0,0
54,34,val,Give me the child of the father of the child of Thinkhaya of Pagan and predecessor of Ameitta Thiri Maha Dhamma Dewi of Ava.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> ?v1 . ?v1 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Ameitta_Thiri_Maha_Dhamma_Dewi_of_Ava> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child
WHERE {
  # Thinkhaya of Pagan and his child
  dbr:Thinkhaya_of_Pagan dbo:spouse ?spouse .
  ?spouse dbo:child ?thinkhayasChild .

  # Predecessor of Ameitta Thiri Maha Dhamma Dewi
  dbr:Ameitta_Thiri_Maha_Dhamma_Dewi dbo:predecessor ?predecessor .

  # Child of the predecessor
  ?predecessor dbo:child ?child .
  
  FILTER(?thinkhayasChild = ?child)
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
959,20,val,"Give me the member of University of Tsukuba and native of the residence, that is a country, of Yōichi Masuzoe.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?result <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/University_of_Tsukuba> . <http://dbpedia.org/resource/Yōichi_Masuzoe> <http://dbpedia.org/property/residence> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
# Step 1: Find Yōichi Masuzoe's place of birth (native country)
SELECT ?country WHERE {
    dbpedia:Yōichi_Masuzoe dbo:nationality ?nationality .
    ?nationality rdfs:label ?country .
    FILTER(LANG(?country) = 'en')
}

# Step 2: Find members of the University of Tsukuba
SELECT DISTINCT ?member WHERE {
    ?member dbo:almaMater dbpedia:University_of_Tsukuba ;
            dbo:nationality ?nationality .
    OPTIONAL { ?nationality rdfs:label ?countryLabel . }
}

# Step 3: Filter members whose native country matches Yōichi Masuzoe's
SELECT DISTINCT ?member WHERE {
    # Assuming the result from step 1 is stored in a variable or known value, e.g., ""Japan""
    ?member dbo:nationality ?nationality .
    ?nationality rdfs:label ?countryLabel .
    FILTER(?countryLabel = ""Japan""@en) # Replace ""Japan"" with actual result from Step 1
}
```",3,4,4,2,2,3,3,71,0,0,84,0,0.0,0
435,14,val,Give me the territory administered from Reykjavík and region of the time zone in Bombali Shebora Chiefdom.,SELECT ?result WHERE { <http://dbpedia.org/resource/Bombali_Shebora_Chiefdom> <http://dbpedia.org/ontology/timeZone> ?v1 . ?result <http://dbpedia.org/ontology/timeZone> ?v1 . ?result <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Reykjavík> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?country ?timeZoneRegion
WHERE {
  # Find the country administered from Reykjavík
  ?capital dbo:capital ""Reykjavík""@en .
  ?country dbo:capital ?capital .
  
  # Find the time zone region for Bombali Shebora Chiefdom in Sierra Leone
  ?chiefdom dbp:name ""Bombali Shebora Chiefdom"" ;
            dbp:timeZone ?timeZone .
  ?region rdfs:label ?timeZoneRegion ;
          owl:sameAs ?timeZone .
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
747,21,val,Give me the person born on the birth date of Pavlo Khudzik and band of Shèna.,SELECT ?result WHERE { <http://dbpedia.org/resource/Shèna> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Pavlo_Khudzik> <http://dbpedia.org/ontology/birthDate> ?v1 . ?result <http://dbpedia.org/ontology/birthDate> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?band 
WHERE {
  # Get Pavlo Khudzik's birth date
  VALUES ?pavloBirthDate { 
    SELECT ?birthDate WHERE { 
      dbr:Pavlo_Khudzik dbo:birthday ?birthDate .
    }
  }

  # Find people born on the same date as Pavlo Khudzik
  ?person dbo:birthday ?sameBirthDate .

  FILTER (?sameBirthDate = ?pavloBirthDate)

  # Get Shèna's band
  VALUES ?shenaBand { 
    SELECT ?band WHERE {
      dbr:Shèna dbo:memberOf ?band .
    }
  }

  # Return the person and Shèna's band
  BIND(?shenaBand AS ?band)
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
994,29,val,"Give me the associated musical artist of the band member, that is a band and a group and an organisation, of Meshuggah and associated musical artist of S.A. Slayer and band member of Don Dokken.",SELECT ?result WHERE { <http://dbpedia.org/resource/S.A._Slayer> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Don_Dokken> . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Meshuggah> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
# Query for Meshuggah band member who is also a band/group/organization
SELECT ?member WHERE {
  ?band dbr:Meshuggah .
  ?band dbo:bandMember ?member .
  ?member rdf:type dbo:Band ;
          dbo:genre ?genre .
}

UNION

# Query for Slayer's S.A. (Tom Araya) associated musical artist
SELECT ?artist WHERE {
  ?person dbr:Tom_Araya .
  ?person dbo:associatedMusicalArtist ?artist .
}

UNION

# Query for Don Dokken band member and their associated musical artist
SELECT ?member ?artist WHERE {
  ?band dbr:Don_Dokken .
  ?band dbo:bandMember ?member .
  ?member dbo:associatedMusicalArtist ?artist .
}
```",4,7,5,2,3,3,3,71,0,0,1,0,0.0,0
528,29,val,Give me the war of Irene Morales and war of the commander in Battle of La Rinconada de Ate and force of Narciso Campero.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Battle_of_La_Rinconada_de_Ate> <http://dbpedia.org/ontology/commander> ?v3 . <http://dbpedia.org/resource/Irene_Morales> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Narciso_Campero> . },"```sparql
# Query for the Battle of La Rinconada de Ate and its commanders
SELECT ?battle ?commander WHERE {
  ?battle dbp:name ""Battle of La Rinconada de Ate""@en .
  OPTIONAL { ?battle dbo:commander ?commander . }
}

# Query for Narciso Campero's military force
SELECT ?campero ?force WHERE {
  ?campero foaf:name ""Narciso Campero""@en ;
           dbo:militaryForce ?force .
}
```",4,4,5,2,3,3,3,71,0,0,2,0,0.0,0
617,23,val,"Give me the child of the child, that is a royalty, of the successor, that is a royalty, of Antiochus II Theos.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> ?v2 . <http://dbpedia.org/resource/Antiochus_II_Theos> <http://dbpedia.org/ontology/successor> ?v2 . ?result <http://dbpedia.org/property/father> ?v0 . },"```sparql
SELECT ?grandchild WHERE {
  # Step 1: Identify Antiochus II Theos
  ?antiochus2 dbo:title ""King of the Seleucid Empire""@en .
  ?antiochus2 foaf:name ""Antiochus II Theos"" .

  # Step 2: Find His Successor who is a royalty
  ?successor dbo:successorOf ?antiochus2 ;
            dbo:title ?title .
  FILTER(CONTAINS(LCASE(?title), ""king"") || CONTAINS(LCASE(?title), ""queen""))

  # Step 3: Identify the Child of the Successor who is a royalty
  ?child dbo:parent ?successor ;
         dbo:title ?childTitle .
  FILTER(CONTAINS(LCASE(?childTitle), ""king"") || CONTAINS(LCASE(?childTitle), ""queen""))

  # Step 4: Find the Grandchild Who Is Royalty
  ?grandchild dbo:parent ?child ;
              dbo:title ?grandchildTitle .
  FILTER(CONTAINS(LCASE(?grandchildTitle), ""king"") || CONTAINS(LCASE(?grandchildTitle), ""queen""))
}
```",3,5,4,3,1,3,3,71,0,0,5,0,0.0,0
54,20,val,Give me the child of Thinkhaya of Pagan and parent of the child of Narapati I of Ava.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Narapati_I_of_Ava> . ?v2 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?individual WHERE {
  # Find the child of Thinkhaya of Pagan
  ?thinkhayaChild dbo:parent dbr:Thinkhaya_of_Pagan .
  
  # Find the parent of Narapati I's child
  ?narapatiIChild dbo:child ?narapatiIParent .
  ?narapatiIChild dbo:parent dbr:Narapati_I_of_Ava .

  # Check if there is an individual who satisfies both conditions
  VALUES ?individual { ?thinkhayaChild ?narapatiIParent }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
281,22,val,"Give me the war of the profession, that is a military unit, of Heather Roy and war of Beauchamp Seymour, 1st Baron Alcester.","SELECT ?result WHERE { <http://dbpedia.org/resource/Beauchamp_Seymour,_1st_Baron_Alcester> <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v1 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Heather_Roy> <http://dbpedia.org/property/occupation> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?unit WHERE {
  OPTIONAL { 
    dbr:Beauchamp_Seymour,_1st_Baron_Alcester dbo:militaryUnit ?unit .
  }
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
659,40,val,"Give me the commander in the force of the native, that is an office holder, of Kingdom of Ireland and commander in Battle of Leipzig and military force of Napoleonic Wars.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Kingdom_of_Ireland> . ?v1 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Battle_of_Leipzig> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Napoleonic_Wars> . ?v1 <http://dbpedia.org/ontology/commander> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?office ?battle WHERE {
  ?person a dbo:MilitaryPerson ;
          foaf:name ""Arthur Wellesley"" ;
          dbo:birthPlace dbr:Ireland .

  OPTIONAL { 
    ?person dbo:officeHolderOf dbr:Kingdom_of_Ireland .
  }

  OPTIONAL {
    ?person dbo:militaryCommanderOf dbr:Battle_of_Leipzig .
  }

  OPTIONAL {
    ?person dbo:militaryForceMember dbr:Napoleonic_Wars .
  }
}
```",5,6,6,3,3,3,3,71,0,0,5,0,0.0,0
184,40,val,"Give me the parent of Archduchess Ilona of Austria and child of Archduke Joseph August of Austria and parent of the native of the landmark at elevation, that is a settlement, of 96.0.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/elevation> ""96.0""^^<http://www.w3.org/2001/XMLSchema#double> . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_August_of_Austria> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://dbpedia.org/ontology/birthPlace> ?v2 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Ilona_of_Austria> . ?result <http://dbpedia.org/ontology/child> ?v1 . }","```sparql
# Step 1: Find Archduchess Ilona's parent
SELECT ?parent WHERE {
    ?ilona dbo:spouse ?parent .
    ?ilona foaf:name ""Ilona of Austria""@en .
}

UNION

# Step 2: Find Archduke Joseph August's child who is also related to Ilona
SELECT ?child WHERE {
    ?josephAugust dbo:child ?child .
    ?josephAugust foaf:name ""Joseph August of Austria""@en .

    # Ensure this child is also a parent of Ilona
    OPTIONAL { ?ilona dbo:spouse ?child . }
}

UNION

# Step 3: Find the settlement at elevation 96.0 meters
SELECT ?settlement WHERE {
    ?settlement geo:elevation ""96.0""^^xsd:float ;
                rdf:type dbo:Settlement .
}

UNION

# Step 4: Identify the native of this settlement
SELECT ?native WHERE {
    ?person dbo:nativePlace ?settlement .
    ?settlement geo:elevation ""96.0""^^xsd:float ;
                rdf:type dbo:Settlement .

    # Ensure this person is a parent of the child found in step 2
    OPTIONAL { ?child dbo:parent ?person . }
}

# Step 5: Combine all conditions to find the required individual
SELECT DISTINCT ?individual WHERE {
    {
        SELECT ?ilonaParent WHERE {
            ?ilona dbo:spouse ?ilonaParent .
            ?ilona foaf:name ""Ilona of Austria""@en .
        }

        SELECT ?josephChild WHERE {
            ?josephAugust dbo:child ?josephChild .
            ?josephAugust foaf:name ""Joseph August of Austria""@en .

            OPTIONAL { ?ilona dbo:spouse ?josephChild . }
        }

        SELECT ?nativeParent WHERE {
            ?person dbo:nativePlace ?settlement .
            ?settlement geo:elevation ""96.0""^^xsd:float ;
                        rdf:type dbo:Settlement .

            OPTIONAL { ?josephChild dbo:parent ?person . }
        }

        FILTER (?ilonaParent = ?josephChild && ?josephChild = ?nativeParent)
        BIND(?ilonaParent AS ?individual)
    }
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
378,26,val,"Give me the war of the commander in the reference, that is a military conflict, to Peninsular War.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://xmlns.com/foaf/0.1/name> ""Peninsular War""@en . ?v1 <http://dbpedia.org/ontology/commander> ?v2 . ?v2 <http://dbpedia.org/ontology/battle> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?conflict WHERE {
  # Find the Peninsular War
  VALUES ?peninsularWar { dbr:Peninsular_War }
  
  # Identify commanders of the Peninsular War, focusing on Arthur Wellesley
  ?commander dbo:participatedInMilitaryConflicts ?peninsularWar .
  FILTER(?commander = dbr:Arthur_Wellesley_1st_Duke_of_Wellington)
  
  # Find other military conflicts involving these commanders
  ?commander dbo:participatedInMilitaryConflicts ?conflict .
  FILTER(?conflict != ?peninsularWar) 
}
```",3,4,4,3,1,3,3,71,0,0,118,0,0.0,0
767,35,val,"Give me the entity in the administration, that is a settlement, of Green and reference to the alter ego of Black Hood.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://xmlns.com/foaf/0.1/name> ?v1 . <http://dbpedia.org/resource/Black_Hood> <http://dbpedia.org/property/alterEgo> ?v1 . ?v2 <http://dbpedia.org/property/leaderParty> ""Green""@en . ?result <http://dbpedia.org/ontology/state> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?settlement WHERE {
  ?entity dbo:color dbr:Green .
  ?entity a dbo:Settlement .
  ?entity dbo:partOf ?administration .
  
  OPTIONAL {
    ?administration dbo:wikiPageRedirects ?gothamCity .
    ?gothamCity rdfs:label ""Gotham City""@en
  }
}
```",4,5,5,2,2,3,3,71,0,0,7,0,0.0,0
747,38,val,Give me the band of the writer of Apollo (Hardwell song) and band of the person born as Tracey Elizabeth McSween.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/property/birthName> ""Tracey Elizabeth McSween""@en . <http://dbpedia.org/resource/Apollo_(Hardwell_song)> <http://dbpedia.org/property/writer> ?v3 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
# Query for the writer of Apollo (Hardwell song)
SELECT ?writer ?band WHERE {
  ?song dcterms:title ""Apollo"" ;
        dbo:lyricsBy ?writer .
  OPTIONAL { ?writer dbo:memberOfBand ?band . }
  FILTER regex(?song, ""Hardwell"", ""i"")
}

# Query for Tracey Elizabeth McSween (known as Avril Lavigne)
SELECT ?person ?band WHERE {
  ?person foaf:name ""Avril Lavigne"" ;
          dbp:birthday ""September 27, 1984"" .
  OPTIONAL { ?person dbo:memberOfBand ?band . }
}
```",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
360,19,val,"Give me the writer of the work, that is an album, of Dave Flett and reference to Manfred Mann and native of Johannesburg.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Album>. ?v2 <http://dbpedia.org/property/author> ""Dave Flett""@en . ?v2 <http://dbpedia.org/property/writer> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Johannesburg> . ?result <http://xmlns.com/foaf/0.1/name> ""Manfred Mann""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?album WHERE {
  ?album dbo:writer dbr:Dave_Flett .
  ?album dbo:performer dbr:Manfred_Mann's_Earth_Band .
  OPTIONAL { ?person dbo:birthPlace dbr:Johannesburg . 
             ?album dbo:performer ?person }
}
```",4,5,5,2,3,2,3,28,0,0,1,0,0.0,0
994,42,val,"Give me the associated musical artist of Red Tide (band) and band member of the person born, that is a musical artist, as Donald Maynard Dokken and associated musical artist of the associated musical artist of Watchtower (band).","SELECT ?result WHERE { <http://dbpedia.org/resource/Red_Tide_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/property/birthName> ""Donald Maynard Dokken""@en . <http://dbpedia.org/resource/Watchtower_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . }","```sparql
# Step 1: Find the associated musical artist of Red Tide (band)
SELECT ?artist WHERE {
    ?redTide dbo:associatedBand dbr:Red_Tide_(band) .
    ?redTide a dbo:MusicalArtist .
}

# Step 2: Identify band member born as Donald Maynard Dokken
SELECT ?dokken WHERE {
    ?dokken foaf:name ""Don Dokken""@en .
    ?dokken dbo:birthName ""Donald Maynard Dokken"" .
}

# Step 3: Find the associated musical artist of Watchtower (band)
SELECT ?artist WHERE {
    ?watchtower dbo:associatedBand dbr:Watchtower_(band) .
    ?watchtower a dbo:MusicalArtist .
}

# Step 4: Find the associated musical artist of the person identified in step 3
SELECT ?finalArtist WHERE {
    ?artist1 ?p ?person .
    ?person foaf:name ?name .
    FILTER(?name IN (VALUES ?name { ""Person from Step 3"" })) # Replace with actual name found in step 3
    ?person dbo:associatedBand ?band .
    ?band a dbo:MusicalArtist .
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
251,13,val,"Give me the administration of Forza Italia (2013) and location of the war, that is a military conflict, of Louis François Félix Musnier.",SELECT ?result WHERE { <http://dbpedia.org/resource/Louis_François_Félix_Musnier> <http://dbpedia.org/ontology/battle> ?v1 . ?result <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Forza_Italia_(2013)> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/place> ?result . },"```sparql
# Query to get the administration of Forza Italia in 2013
SELECT ?person WHERE {
  ?party dbo:wikiPageRedirects dbpedia-it:Forza_Italia.
  ?party dbo:leader ?person.
  ?person dbo:officePeriodStartYear ?startYear.
  ?person dbo:officePeriodEndYear ?endYear.
  FILTER (?startYear <= 2013 && (BOUND(?endYear) -> ?endYear >= 2013))
}

UNION

# Query to get the location of the military conflict involving Louis François Félix Musnier
SELECT DISTINCT ?location WHERE {
  dbpedia:Louis_François_Félix_Musnier dbo:militaryConflict ?conflict.
  ?conflict dbo:location ?location.
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
492,35,val,"Give me the person decedent at the capital, that is a settlement, of Algeria and person decedent at the work of US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . ?v2 <http://dbpedia.org/property/author> ""US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite""@en . <http://dbpedia.org/resource/Algeria> <http://dbpedia.org/ontology/capital> ?v1 . }","```sparql
# Query for the person who died at Algiers, the capital of Algeria
SELECT ?person WHERE {
  ?capital dbo:country dbr:Algeria .
  ?capital rdfs:label ""Algiers""@en .
  ?deathEvent dbo:place ?capital ;
              dbo:agent ?person .
  ?person rdf:type dbo:Person .
}

UNION

# Query for the person who died at the workplace of Joseph C. Satterthwaite
SELECT ?person WHERE {
  ?satterthwaite dbo:title dbr:US_Assistant_Secretary_of_State_for_African_Affairs ;
                  foaf:name ""Joseph C. Satterthwaite""@en .
  ?workplace dbo:employee ?satterthwaite .
  ?deathEvent dbo:place ?workplace ;
              dbo:agent ?person .
  ?person rdf:type dbo:Person .
}
```",4,5,5,2,2,3,3,71,0,0,16,0,0.0,0
161,25,val,"Give me the military force of Spanish Civil War and commander in the force, that is an event, of Emilio Mola.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Emilio_Mola> . ?v1 <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce ?commander WHERE {
  ?person a dbo:Person ;
          foaf:name ""Emilio Mola""@en .
  
  OPTIONAL { 
    ?person dbo:militaryCommanderOf ?militaryForce .
    ?militaryForce dbo:commander ?commander .
  }
  
  FILTER EXISTS {
    ?event dbo:participant ?person ;
           dbo:wikiPageRedirects dbr:Spanish_Civil_War .
  }
}
```",3,4,4,2,2,3,3,71,0,0,32,0,0.0,0
801,28,val,Give me the producer of Westside Story (song) and associated musical artist of Chris Taylor (music producer) and professional in the alter ego of The Shadow.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Westside_Story_(song)> <http://dbpedia.org/ontology/producer> ?result . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 . <http://dbpedia.org/resource/Chris_Taylor_(music_producer)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
# Query 1: Producer of ""West Side Story"" (song)
SELECT ?producer WHERE {
  dbpedia:West_Side_Story_(song) dbo:producer ?producer .
}

# Query 2: Associated musical artist of Chris Taylor (music producer)
SELECT DISTINCT ?artist WHERE {
  dbpedia:Chris_Taylor_(record_producer) dbo:associatedMusicalArtist ?artist .
}

# Query 3: Professional in the alter ego of The Shadow
SELECT ?professional WHERE {
  ?alias rdfs:label ""The Shadow""@en.
  ?alias foaf:name ?aliasName.
  ?person foaf:nick ?aliasName;
          rdf:type dbo:Person.
  ?person foaf:name ?professional .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
981,11,val,Give me the entity in the region of Time in Indonesia and birth place of Novia Indriani Mamuaja.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v2 . ?v2 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Time_in_Indonesia> . <http://dbpedia.org/resource/Novia_Indriani_Mamuaja> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
# Query for Time Zone in Indonesia
SELECT ?timeZone WHERE {
  ?place a dbo:Place .
  ?place rdfs:label ?label .
  FILTER(CONTAINS(LCASE(?label), ""indonesia"") && CONTAINS(LCASE(?label), ""timezone""))
  ?place dbo:country dbr:Indonesia .
  BIND(STR(?place) AS ?timeZone)
}

UNION

# Query for Birth Place of Novia Indriani Mamuaja
SELECT ?birthPlace WHERE {
  ?person a dbo:Person ;
          foaf:name ""Novia Indriani Mamuaja""@en ;
          dbo:birthPlace ?birthPlace .
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
232,19,val,Give me the child of the person born as John Devon Roland Pertwee and actor of Dog Soldiers (film).,"SELECT ?result WHERE { <http://dbpedia.org/resource/Dog_Soldiers_(film)> <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://dbpedia.org/ontology/child> ?result . ?v0 <http://dbpedia.org/property/birthName> ""John Devon Roland Pertwee""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  ?person a dbo:Person ;
          foaf:name ""Jon Pertwee"" ;
          dbo:birthName ""John Devon Roland Pertwee"" .
  
  ?film dbo:starring ?person .
  FILTER (str(?film) = ""Dog Soldiers"")

  ?person dbo:child ?child .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
617,13,val,"Give me the child of the child, that is a royalty, of the parent of Mlada (abbess).",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> ?result . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Mlada_(abbess)> . ?v1 <http://dbpedia.org/ontology/parent> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
SELECT ?child WHERE {
  # Step 1: Find Mlada (abbess)
  ?mlada dbo:occupation dbr:Abbess .
  ?mlada foaf:name ""Mlada""@en .

  # Step 2: Identify the parent of Mlada
  OPTIONAL { ?parent dbo:child ?mlada . }

  # Step 3: Find the child of the identified parent
  ?parent dbo:child ?child .

  # Step 4: Filter for royalty status in the child
  FILTER EXISTS {
    ?child dbo:occupation dbr:Royal_Titles .
  }
}
```",3,4,4,3,1,3,2,20,0,0,4,0,0.0,0
801,33,val,"Give me the professional in  and producer of the work, that is a musical work and a song and a work, of the professional, that is a musical artist, in Rapper.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/producer> ?result . ?v3 <http://dbpedia.org/property/writer> ?v0 . ?v0 <http://dbpedia.org/property/occupation> ""Rapper""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?song ?artist ?producer WHERE {
  ?song a dbo:Songs .
  ?song dbo:musicalArtist ?artist .
  ?artist dbo:genre dbr:Rapper .
  OPTIONAL { ?song dbo:producer ?producer . }
}
```",4,8,5,3,2,3,3,71,0,0,473,0,0.0,0
959,38,val,"Give me the native of the residence, that is a country, of Yōichi Masuzoe and manager of the team of Takashi Sekizuka.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v0 <http://dbpedia.org/ontology/manager> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Yōichi_Masuzoe> <http://dbpedia.org/property/residence> ?v3 . ?v0 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Takashi_Sekizuka> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?nativeCountry WHERE {
  # Find Yōichi Masuzoe's country of residence
  OPTIONAL { 
    ?yMasuzoe dbo:residence ?residence .
    ?residence a dbo:Country ;
               rdfs:label ?countryLabel .
    FILTER (lang(?countryLabel) = 'en')
  }

  # Find the team managed by Takashi Sekizuka
  ?tSekizuka dbo:managerOfTeam ?team .

  # Find the manager of that team and their native country
  ?team dbo:manager ?manager .
  ?manager dbo:nationality ?nativeCountry .
  
  # Ensure the native country matches Yōichi Masuzoe's residence
  FILTER (?nativeCountry = ?residence)
}
```",4,5,5,2,2,3,3,71,0,0,6,0,0.0,0
959,34,val,"Give me the manager of 2013 Júbilo Iwata season and member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of the person born in 1958.","SELECT ?result WHERE { <http://dbpedia.org/resource/2013_Júbilo_Iwata_season> <http://dbpedia.org/ontology/manager> ?result . ?v3 <http://dbpedia.org/ontology/almaMater> ?v1 . ?result <http://dbpedia.org/ontology/team> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?v3 <http://dbpedia.org/ontology/birthYear> ""1958""^^<http://www.w3.org/2001/XMLSchema#gYear> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?manager ?almaMater WHERE {
  # Find the manager of Júbilo Iwata in 2013
  ?team dbo:coach ?manager .
  ?manager dbo:birthYear ""1958""^^xsd:gYear .
  
  # Ensure the team is Júbilo Iwata and the season is 2013
  ?team rdfs:label ""Júbilo Iwata""@en .
  FILTER(CONTAINS(LCASE(?teamLabel), ""jubilo iwata""))
  ?manager dbp:birthDate ?birthDate .
  
  # Find alma mater which is a Japanese university or educational institution
  ?manager dbo:almaMater ?almaMater .
  ?almaMater dbo:country dbr:Japan ;
             rdf:type dbo:EducationalInstitution ;
             rdf:type dbo:University .

  # Ensure the manager's birth year matches 1958
  BIND(YEAR(?birthDate) AS ?birthYear)
  FILTER(?birthYear = 1958)

}
```",4,8,5,3,2,3,3,71,0,0,1,0,0.0,0
378,31,val,Give me the war of Joaquín Blake and war of the person born as the birth name of Carl Pontus Gahn.,SELECT ?result WHERE { <http://dbpedia.org/resource/Joaquín_Blake> <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
SELECT ?war WHERE {
  VALUES ?person1 ?person2 { 
    dbr:Joaquín_Blake_y_Joyes dbr:Carl_Pontus_Gahn
  }
  
  ?person1 dbo:nationality dbr:Spain .
  ?person2 dbo:nationality dbr:Sweden .

  OPTIONAL {
    ?person1 dbo:occupation dbr:Military_personnel .
  }

  OPTIONAL {
    ?person2 dbo:fieldOfStudy dbr:Chemistry .
  }
  
  ?war dbo:participatingCountries (dbr:Spain dbr:France) ;
       rdfs:label ?label .

  FILTER(CONTAINS(LCASE(?label), ""peninsular war""))
}
```",4,4,5,3,2,3,3,71,0,0,2,0,0.0,0
959,44,val,"Give me the manager of the team of Takashi Sekizuka and native of the residence, that is a country, of Yōichi Masuzoe and member of University of Tsukuba.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/University_of_Tsukuba> . ?result <http://dbpedia.org/ontology/birthPlace> ?v4 . <http://dbpedia.org/resource/Yōichi_Masuzoe> <http://dbpedia.org/property/residence> ?v4 . ?v0 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Takashi_Sekizuka> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://dbpedia.org/ontology/manager> ?result . },"```sparql
# Step 1: Find Takashi Sekizuka's team and its manager
SELECT ?team ?manager WHERE {
  ?person dbo:name ""Takashi Sekizuka""@ja .
  ?person dbo:memberOf ?team .
  ?team dbo:coach ?manager .
}

UNION

# Step 2: Find Yōichi Masuzoe's country of residence
SELECT ?country WHERE {
  ?person dbo:name ""Yōichi Masuzoe""@ja .
  ?person dbo:nationality ?nationality .
  ?nationality rdfs:label ?country .
  FILTER (lang(?country) = 'en')
}

# Step 3: Ensure the manager is a member of University of Tsukuba
SELECT DISTINCT ?manager WHERE {
  # Reuse results from step 1
  ?person dbo:name ""Takashi Sekizuka""@ja .
  ?person dbo:memberOf ?team .
  ?team dbo:coach ?manager .

  # Check if the manager is associated with University of Tsukuba
  ?manager dbo:almaMater <http://dbpedia.org/resource/University_of_Tsukuba> .
  
  # Ensure the country from step 2 matches the nationality of the manager
  ?manager dbo:nationality ?nationality .
  ?nationality rdfs:label ?country .
  FILTER (lang(?country) = 'en')
}
```",5,6,6,2,3,3,3,71,0,0,2,0,0.0,0
182,12,val,Give me the war of Mahesh Senanayake and entity in Sri Lanka and war of Jagath Dias.,SELECT ?result WHERE { <http://dbpedia.org/resource/Mahesh_Senanayake> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Jagath_Dias> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Sri_Lanka> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war ?description WHERE {
  VALUES ?person { 
    dbr:Mahesh_Senanayake 
    dbr:Jagath_Dias 
  }
  
  ?person dbo:nationality dbr:Sri_Lanka .
  OPTIONAL {
    ?person dbo:wikiPageDisambiguates ?disambiguation .
    ?disambiguation dbo:wikiPageRedirects ?relatedEntity .
    ?relatedEntity dbo:wikiPageWikiLink ?war .
    ?war a dbo:War .
    ?war dbo:description ?description .
  }
  
  FILTER EXISTS {
    ?war dbo:location dbr:Sri_Lanka .
  }
}
```",3,3,4,1,3,2,3,28,0,0,1,0,0.0,0
488,27,val,"Give me the administration of the father of the spouse, that is a royalty, of Tokugawa Masako.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Tokugawa_Masako> . ?v1 <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/property/leader> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
SELECT ?administration WHERE {
  ?masako dbo:spouse ?spouse .
  FILTER (str(?masako) = ""Tokugawa_Masako"") .

  ?spouse rdf:type dbo:Royalty .
  
  ?spouse dbo:father ?father .
  
  ?father dbo:positionHeld ?administration .
}
```",3,4,4,3,1,3,3,71,0,0,2,0,0.0,0
232,20,val,"Give me the actor of the claim to fame, that is a film and a military conflict, of Sean Pertwee and child of Jon Pertwee.",SELECT ?result WHERE { <http://dbpedia.org/resource/Sean_Pertwee> <http://dbpedia.org/ontology/knownFor> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/ontology/child> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v2 <http://dbpedia.org/ontology/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?film ?conflict WHERE {
  ?person rdfs:label ""Sean Pertwee""@en .
  ?person dbo:parent dbr:Jon_Pertwee .
  
  OPTIONAL { 
    ?film dbo:starring ?person ;
          rdf:type dbo:Film .
    FILTER (LANG(?film) = 'en')
  }
  
  OPTIONAL {
    ?conflict dbo:participant ?person ;
              rdf:type dbo:MilitaryConflict .
    FILTER (LANG(?conflict) = 'en')
  }
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
328,26,val,Give me the commander in the force of the person decedent at Budapest.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Budapest> . ?v2 <http://dbpedia.org/ontology/commander> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  ?event dbo:location dbr:Budapest .
  ?event dbo:date ""1956-10-23""^^xsd:date ; # Start date of the Soviet intervention
         dbo:agent dbr:Soviet_Armed_Forces .
  ?sovietCommander dbo:position ""Commander"" ;
                   dbo:memberOf dbr:Soviet_Armed_Forces ;
                   foaf:name ?commanderName .
  FILTER(CONTAINS(LCASE(?commanderName), ""ivan yakubovsky""))
}
```",3,3,4,3,1,3,3,71,0,0,306,0,0.0,0
16,25,val,Give me the professional in Actress and person born as the birth name of Gigi Rice.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Gigi_Rice> <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/property/occupation> ""Actress""@en . ?result <http://dbpedia.org/property/birthName> ?v1 . }","```sparql
# Step 1: Retrieve the birth name of Gigi Rice
SELECT ?birthName WHERE {
  dbpedia:Gigi_Rice dbo:birthName ?birthName .
}

# Step 2: Find an actress with the same birth name as Gigi Rice's birth name
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?actress WHERE {
  ?actress a dbo:Actor ;
           dbo:birthName ?birthName .
  FILTER(?birthName = ""Gigi Rice's Birth Name"") # Replace with actual birth name from Step 1
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
232,32,val,"Give me the actor of the claim to fame, that is a film and a military conflict, of Sean Pertwee and child of the person born as John Devon Roland Pertwee.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Sean_Pertwee> <http://dbpedia.org/ontology/knownFor> ?v3 . ?v1 <http://dbpedia.org/property/birthName> ""John Devon Roland Pertwee""@en . ?v1 <http://dbpedia.org/ontology/child> ?result . }","```sparql
SELECT ?actor WHERE {
  ?film dbo:starring Sean_Pertwee .
  ?film dbo:genre dbc:Military_films .
  OPTIONAL { ?film rdfs:label ?title FILTER (lang(?title) = ""en"") }
  OPTIONAL { ?tvSeries dbo:starring Sean_Pertwee . 
             ?tvSeries dbo:genre dbc:Military_television_series .
             ?tvSeries rdfs:label ?seriesTitle FILTER (lang(?seriesTitle) = ""en"") }
}
```",4,6,5,2,2,3,3,71,0,0,1,0,0.0,0
767,42,val,"Give me the entity in the administration, that is a settlement, of Green and reference to the alter ego of Black Hood and alma mater of Carl L. Nippert.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/state> ?v2 . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . <http://dbpedia.org/resource/Carl_L._Nippert> <http://dbpedia.org/ontology/almaMater> ?result . ?v2 <http://dbpedia.org/property/leaderParty> ""Green""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Black_Hood> <http://dbpedia.org/property/alterEgo> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?settlement WHERE {
  ?settlement a dbo:Settlement ;
              rdfs:label ?name .
  FILTER(CONTAINS(LCASE(?name), ""green"") && CONTAINS(LCASE(STR(?settlement)), ""ohio"")) .

  OPTIONAL { 
    ?settlement dbo:administrativeRegion dbr:Ohio .
  }

  OPTIONAL {
    ?university dbo:alumni dbr:C._L._Nippert ;
                dbo:location dbr:University_of_Cincinnati .
  }
}
```",5,6,6,2,3,3,3,71,0,68,1,0.0,0.0,0
747,22,val,Give me the band of the person born as Tracey Elizabeth McSween and person born on 1985-04-29.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ""Tracey Elizabeth McSween""@en . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/birthDate> ""1985-04-29""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT DISTINCT ?person1 ?person2 ?band WHERE {
  # Find Tracey Elizabeth McSween
  ?person1 a dbo:Person ;
           foaf:givenName ""Tracey"" ;
           foaf:surname ""McSween"" .

  # Find the person born on 1985-04-29
  ?person2 a dbo:Person ;
           dbo:birthDate ""1985-04-29""^^xsd:date .

  # Check if they are associated with any band
  OPTIONAL { ?band dbo:member ?person1 . }
  OPTIONAL { ?band dbo:member ?person2 . }

  FILTER (?person1 != ?person2)
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
404,29,val,"Give me the child of Ernest Augustus, Crown Prince of Hanover and parent of the child, that is a royalty, of Ernest Augustus, Duke of Brunswick and spouse of Princess Victoria Louise of Prussia.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ernest_Augustus,_Crown_Prince_of_Hanover> . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/ontology/child> ?v3 . ?result <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child ?parent WHERE {
  # Identify the child of Ernest Augustus, Crown Prince of Hanover
  ?child dbo:father dbr:Ernest_Augustus,_Crown_Prince_of_Hanover .
  
  # Check if this child is royalty and matches Ernest Augustus, Duke of Brunswick
  ?child a dbo:Monarch ;
        foaf:name ""Ernest Augustus"" .

  # Ensure the parent is also identified as Ernest Augustus, Crown Prince of Hanover
  ?parent dbo:spouse dbr:Princess_Victoria_Louise_of_Prussia .
  
  FILTER (?child = ?parent)
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
659,26,val,"Give me the commander in the war, that is an event and a military conflict, of the figure known, that is a military unit and an organisation, as 'Polish Horse'.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v1 <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/property/nickname> ""'Polish Horse'""@en . ?v2 <http://dbpedia.org/ontology/commander> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  ?event a dbo:MilitaryConflict ;
         dbo:participatingMilitaryUnit dbr:Polish_Hussars .
  
  ?commander dbo:commanded ?unit .
  ?unit rdfs:label ""Polish Hussars""@en .

  FILTER(CONTAINS(LCASE(?event), ""battle of vienna"") || CONTAINS(LCASE(?event), ""poland-lithuania""))
}
```",3,7,4,3,1,3,3,71,0,0,130,0,0.0,0
747,31,val,"Give me the person born on the birth date of the person decedent, that is an athlete and a soccer player, at Zolotonosha and band of Amba Shepherd.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?result <http://dbpedia.org/ontology/birthDate> ?v0 . ?v1 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Zolotonosha> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Amba_Shepherd> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/ontology/birthDate> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?band WHERE {
  # Step 1: Find the decedent's birth date
  ?decedent a dbo:Person ;
            dbp:birthday ?birthDate .

  # Step 2: Find an athlete and soccer player born on that date in Zolotonosha
  ?athlete a dbo:Athlete, dbo:SoccerPlayer ;
           dbp:birthday ?birthDate ;
           dbo:birthPlace dbr:Zolotonosha .

  # Step 3: Identify the band of Amba Shepherd
  ?ambashepherd a dbo:Person ;
                foaf:name ""Amba Shepherd"" .
  ?band a dbo:Band ;
        dbo:member ?ambashepherd .

  # Bind the athlete to the person variable for output
  BIND(?athlete AS ?person)
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
701,39,val,"Give me the parent of Henuttawy (19th dynasty) and spouse of the father of the commander, that is a royalty, in Battle of Perire.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Battle_of_Perire> <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Henuttawy_(19th_dynasty)> . ?result <http://dbpedia.org/ontology/spouse> ?v1 . },"```sparql
# Step 1: Identify Henuttawy (19th dynasty)
SELECT ?henuttawy WHERE {
  ?henuttawy dbo:nationality dbr:Ancient_Egypt.
  ?henuttawy dbo:era dbr:19th_dynasty_of_egypt.
  ?henuttawy rdfs:label ""Henuttawy""@en.
}

# Step 2: Find Henuttawy's Parent
SELECT ?parent WHERE {
  VALUES ?henuttawy { <[URI of Henuttawy]> }
  ?henuttawy dbo:childOf ?parent.
}

# Step 3: Identify the Commander in the Battle of Perire
SELECT ?commander WHERE {
  ?battle dbo:event dbr:Battle_of_Perire.
  ?battle dbo:commander ?commander.
}

# Step 4: Determine the Father of the Commander
SELECT ?father WHERE {
  VALUES ?commander { <[URI of Commander]> }
  ?commander dbo:childOf ?father.
}

# Step 5: Find the Spouse of the Commander's Father
SELECT ?spouse WHERE {
  VALUES ?father { <[URI of Commander's Father]> }
  ?father dbo:spouse ?spouse.
  ?spouse dbo:title dbr:Royal_Titles. # Assuming there is a property for royal titles
}
```

Note: The placeholders `<[URI of Henuttawy]>`, `<[URI of Commander]>`, and `<[URI of Commander's Father]>` need to be replaced with the actual URIs obtained from previous query results.",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
696,15,val,"Give me the landmark at elevation of 50 and birth place of the member of the associated musical artist, that is an organisation and a group and a band, of The Boils.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/The_Boils> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?result <http://dbpedia.org/ontology/elevation> ""50""^^<http://www.w3.org/2001/XMLSchema#integer> . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/ontology/bandMember> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?landmark WHERE {
  # Find members of The Boils
  ?band a dbo:Band ;
        foaf:name ""The Boils""@en .
  
  ?member dbo:memberOf ?band ;
          dbo:birthPlace ?birthplace .

  # Find landmarks at elevation 50 meters
  ?landmark a dbo:Landmark ;
            dbp:elevation ""50""^^xsd:float ;
            rdfs:label ?label .

  # Match birthplace with landmark
  FILTER (?birthplace = ?landmark)
}
```",4,7,5,3,2,3,2,20,0,0,1,0,0.0,0
404,42,val,"Give me the spouse of the person born, that is a royalty, as Princess Victoria Louise of Prussia and child of the father of Ernest Augustus, Duke of Brunswick and parent of Prince Ernest Augustus of Hanover (born 1914).","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/parent> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/birthName> ""Princess Victoria Louise of Prussia""@en . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Prince_Ernest_Augustus_of_Hanover_(born_1914)> . <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/property/father> ?v1 . }","```sparql
SELECT ?spouse WHERE {
  ?person dbo:birthName ""Princess Victoria Louise of Prussia""@en .
  ?person dbo:spouse ?spouse .
  FILTER EXISTS { ?spouse rdf:type dbo:Person . }
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
345,13,val,"Give me the figure known as the nickname of the player, that is a sports club and an organisation and a soccer club, in Armando Heeb.",SELECT ?result WHERE { <http://dbpedia.org/resource/Armando_Heeb> <http://dbpedia.org/ontology/team> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?result <http://dbpedia.org/property/nickname> ?v1 . ?v0 <http://dbpedia.org/property/nickname> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nickname WHERE {
  ?person rdfs:label ""Armando Heeb""@en.
  ?person dbo:nickname ?nicknameResource.
  ?nicknameResource rdfs:label ?nickname.

  OPTIONAL { 
    ?club rdf:type/(dbo:SportsClub|dbo:Organization|dbo:SoccerClub).
    ?club rdfs:label ?nickname.
  }
  
  FILTER(LANG(?nickname) = 'en')
}
```",3,6,4,3,1,3,2,20,0,0,1,0,0.0,0
492,29,val,"Give me the commander in the war, that is a military conflict and an event, of Frédéric-Georges Herr and person decedent at Algiers and person decedent at French Algeria.",SELECT ?result WHERE { <http://dbpedia.org/resource/Frédéric-Georges_Herr> <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/French_Algeria> . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Algiers> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?conflict WHERE {
  ?conflict a dbo:MilitaryConflict ;
           dbo:eventType ?eventType .
  
  FILTER(?eventType = dbo:Event) .

  ?conflict dbo:commander ?commander .
  ?commander rdfs:label ""Frédéric-Georges Herr""@en .

  OPTIONAL { 
    ?decedent dbo:placeOfDeath dbr:Algiers ;
              dbo:deathPlace dbr:French Algeria .
    ?conflict dbo:decedent ?decedent .
  }
}
```",4,6,5,2,3,3,3,71,0,0,1,0,0.0,0
184,29,val,Give me the child of the child of Archduke Joseph Karl of Austria and parent of Géza von Habsburg and parent of Archduchess Ilona of Austria.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v3 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Ilona_of_Austria> . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Karl_of_Austria> . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Géza_von_Habsburg> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?archdukeJosephKarl a dbo:Person ;
                     foaf:name ""Archduke Joseph Karl of Austria""@en .
  
  ?child dbo:parent ?archdukeJosephKarl ;
         foaf:name ""Archduke Otto Franz of Austria""@en .

  ?geza dbo:parent ?person .
  ?ilona dbo:parent ?person .

  ?geza foaf:name ""Géza von Habsburg""@en .
  ?ilona foaf:name ""Ilona, Archduchess of Austria""@en .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
9,21,val,"Give me the figure known as QUB and alma mater of the mayor, that is a politician, of Northern Ireland Forum.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/property/nickname> ""QUB""@en . ?v1 <http://dbpedia.org/ontology/almaMater> ?result . <http://dbpedia.org/resource/Northern_Ireland_Forum> <http://dbpedia.org/property/leader> ?v1 . }","```sparql
SELECT ?university WHERE {
  wd:Q1809 dbo:almaMater ?university .
  ?university rdfs:label ""Queen's University Belfast""@en .
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
778,11,val,Give me the author of Chroot and entity in the award of Ralph L. Brinster.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ralph_L._Brinster> <http://dbpedia.org/property/awards> ?v2 . <http://dbpedia.org/resource/Chroot> <http://dbpedia.org/ontology/author> ?result . ?result <http://dbpedia.org/ontology/location> ?v2 . },"```sparql
# Query for the author of ""Chroot""
SELECT ?author WHERE {
  ?work dcterms:title ""Chroot""@en .
  ?work dbo:creator ?author .
}

UNION

# Query for the entity in the award of Ralph L. Brinster
SELECT ?awardEntity WHERE {
  ?person foaf:name ""Ralph L. Brinster""@en .
  ?person dbo:award ?award .
  ?award dbo:recipient ?person ;
         dbo:entity ?awardEntity .
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
16,40,val,Give me the professional in Actress and spouse of the person born as the birth name of Ted McGinley and person born as Georgeanne Marie Rice.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Actress""@en . ?v1 <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/property/birthName> ?v2 . ?v1 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/birthName> ""Georgeanne Marie Rice""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?spouse ?spouseName WHERE {
  # Find Ted McGinley by birth name
  ?ted a dbo:Person ;
      foaf:name ""Ted McGinley"" ;
      dbo:birthName ""Ted McGinley"" .
  
  # Find Georgeanne Marie Rice by birth name
  ?georgeanne a dbo:Person ;
              foaf:name ""Georgeanne Marie Rice"" ;
              dbo:birthName ""Georgeanne Marie Rice"" .

  # Get spouses of Ted McGinley
  ?ted dbo:spouse ?spouse .
  
  # Get spouses of Georgeanne Marie Rice
  OPTIONAL { ?georgeanne dbo:spouse ?spouse . }

  # Filter for spouse who is an actress
  ?spouse a dbo:Person ;
          foaf:name ?spouseName ;
          dbo:occupation ?occupation .

  FILTER (CONTAINS(LCASE(?occupation), ""actress""))
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
994,22,val,"Give me the band member of the person born, that is a musical artist, as Donald Maynard Dokken and associated musical artist of S.A. Slayer.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ""Donald Maynard Dokken""@en . <http://dbpedia.org/resource/S.A._Slayer> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
# Query to find band members of Donald Maynard Dokken
SELECT ?member WHERE {
  wd:Q123456 a dbo:Band ; # Replace Q123456 with the DBpedia resource for Dokken
    dbo:bandMember ?member .
}

UNION

# Query to find band members associated with Jeff Hanneman (S.A. Slayer)
SELECT ?member WHERE {
  wd:Q654321 a dbo:Band ; # Replace Q654321 with the DBpedia resource for Slayer
    dbo:bandMember ?member .
}
```

Note: The placeholders `wd:Q123456` and `wd:Q654321` should be replaced with the actual DBpedia identifiers for Dokken and Slayer, respectively. You can find these identifiers by searching for ""Dokken"" and ""Slayer"" in DBpedia.",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
659,39,val,"Give me the commander in Battle of Leipzig and military force of the force, that is a societal event and an event and a military conflict, of the reference to Rutger Jan Schimmelpenninck.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Battle_of_Leipzig> <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Rutger Jan Schimmelpenninck""@en . ?v1 <http://dbpedia.org/ontology/commander> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?militaryForce WHERE {
  # Identify the Battle of Leipzig as an event
  dbr:Battle_of_Leipzig a dbo:MilitaryConflict ;
                        dbo:participatedInMilitaryEngagement ?event .

  # Ensure it is classified as a societal event and an event
  ?event rdf:type dbo:SocietalEvent, dbo:Event .

  # Find the commander involved in this battle
  ?commander dbo:commanded ?militaryForce .
  ?militaryForce dbo:participatedInMilitaryEngagement dbr:Battle_of_Leipzig .

  OPTIONAL {
    # Check for any reference to Rutger Jan Schimmelpenninck
    ?commander dbo:wikiPageRedirects dbr:Rutger_Jan_Schimmelpenninck .
  }
}
```",4,7,5,3,2,3,3,71,0,0,6,0,0.0,0
959,36,val,"Give me the member of University of Tsukuba and manager of the team of the manager, that is a sports manager, of 1998 Kashima Antlers season.",SELECT ?result WHERE { <http://dbpedia.org/resource/1998_Kashima_Antlers_season> <http://dbpedia.org/ontology/manager> ?v3 . ?result <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/University_of_Tsukuba> . ?v0 <http://dbpedia.org/ontology/manager> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v0 <http://dbpedia.org/ontology/manager> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?managerOfManager WHERE {
  ?person dbo:almaMater dbr:University_of_Tsukuba .
  ?person dbo:occupation dbr:Sports_manager .
  
  # Find the manager of the 1998 Kashima Antlers
  ?team dbr:Kashima_Antlers ;
        dbo:manager ?person .

  # Ensure it's for the 1998 season
  ?season dbo:team ?team ;
          dbo:year ""1998""^^xsd:gYear .
  
  # Find who managed this manager (if any)
  OPTIONAL {
    ?person dbo:managedBy ?managerOfManager .
  }
}
```",4,5,5,3,2,3,3,71,0,0,2,0,0.0,0
92,34,val,"Give me the band member of the reference, that is an artist, to the name of Nevermore (2006 film) and band of Joseph Michael.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://xmlns.com/foaf/0.1/name> ?v2 . ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Joseph_Michael> . <http://dbpedia.org/resource/Nevermore_(2006_film)> <http://xmlns.com/foaf/0.1/name> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandMember ?artistName WHERE {
  # Find reference related to ""Nevermore (2006 film)""
  ?film rdfs:label ""Nevermore (2006 film)""@en .
  
  # Identify Joseph Michael's band
  ?person dbo:associatedBand dbr:Nevermore_(band) ;
          foaf:name ""Joseph Michael""@en .

  # Find members of the band Nevermore
  ?member dbo:memberOf dbr:Nevermore_(band) .

  # Check if any member is also an artist
  OPTIONAL { 
    ?artist dbo:associatedBand dbr:Nevermore_(band) .
    ?artist foaf:name ?artistName .
  }

  FILTER(?member = ?artist)
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
701,30,val,Give me the parent of Meritamen and spouse of the father of Merneptah and parent of Henuttawy (19th dynasty).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v1 . <http://dbpedia.org/resource/Merneptah> <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Henuttawy_(19th_dynasty)> . <http://dbpedia.org/resource/Meritamen> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parentOfMeritamen ?spouseOfRamessesII ?parentOfHenuttawy WHERE {
  # Find the parent of Meritamen
  OPTIONAL { 
    dbr:Meritamen dbo:child dbr:Ramesses_II .
    BIND(dbr:Ramesses_II AS ?parentOfMeritamen)
  }
  
  # Find the spouse of Ramesses II (father of Merneptah and parent of Meritamen)
  OPTIONAL {
    dbr:Merneptah dbo:child dbr:Ramesses_II .
    dbr:Ramesses_II dbo:spouse ?spouseOfRamessesII .
    FILTER(?spouseOfRamessesII IN (dbr:Nefertari, dbr:Isetnofret))
  }
  
  # Find the parent of Henuttawy
  OPTIONAL {
    dbr:Henuttawy dbo:child dbr:Ramesses_II .
    BIND(dbr:Ramesses_II AS ?parentOfHenuttawy)
  }
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
488,37,val,"Give me the administration of Emperor Go-Yōzei and death place of the father, that is a politician, of the father, that is an office holder, of Matsudaira Tadamasa.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Matsudaira_Tadamasa> <http://dbpedia.org/property/father> ?v0 . ?v3 <http://dbpedia.org/ontology/deathPlace> ?result . ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Emperor_Go-Yōzei> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
# Step 1: Identify Matsudaira Tadamasa
SELECT ?matsudairaTadamasa WHERE {
  ?matsudairaTadamasa dbo:birthName ""Matsudaira Tadamasa""@en .
}

# Step 2: Find the Father of Matsudaira Tadamasa
SELECT ?father WHERE {
  ?matsudairaTadamasa dbo:father ?father .
}

# Step 3: Identify the Grandfather (Father's Father)
SELECT ?grandfather WHERE {
  ?father dbo:father ?grandfather .
}

# Step 4: Determine the Administration of Emperor Go-Yōzei
SELECT ?goYozeiStart ?goYozeiEnd WHERE {
  dbpedia:Emperor_Go-Yozei dbo:reignStart ?goYozeiStart ;
                            dbo:reignEnd ?goYozeiEnd .
}

# Step 5: Find the Death Place of the Grandfather
SELECT ?deathPlace WHERE {
  ?grandfather dbo:deathPlace ?deathPlace .
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
92,32,val,"Give me the band member of the reference, that is an artist, to Nevermore and associated musical artist of the person born, that is an artist, as Jim Sheppard.","SELECT ?result WHERE { ?v1 <http://xmlns.com/foaf/0.1/name> ""Nevermore""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v3 <http://dbpedia.org/property/birthName> ""Jim Sheppard""@en . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?member ?associatedArtist WHERE {
  # Find members of Nevermore who are also artists
  ?band dbr:Nevermore ;
        dbo:member ?member .
  ?member dbo:occupation ?occupation .
  FILTER(CONTAINS(LCASE(?occupation), ""artist""))

  OPTIONAL {
    # Find associated musical artist with Jim Sheppard
    ?sheppard dbr:Jim_Sheppard ;
              dbo:birthPlace ?place ;
              dbo:associatedBand ?band2 .
    ?band2 dbo:member ?associatedArtist .
  }
}
```",4,6,5,2,2,3,3,71,0,0,1,0,0.0,0
528,39,val,Give me the war of Orozimbo Barbosa and force of the person born as the birth name of Narciso Campero.,SELECT ?result WHERE { <http://dbpedia.org/resource/Narciso_Campero> <http://dbpedia.org/property/birthName> ?v0 . ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?result <http://dbpedia.org/ontology/commander> ?v1 . <http://dbpedia.org/resource/Orozimbo_Barbosa> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
# Query to find wars involving Orozimbo Barbosa
SELECT ?war WHERE {
  ?barbosa dbo:birthName ""Orozimbo Barbosa""@en .
  ?barbosa dbo:militaryConflict ?war .
}

# Query to find Narciso Campero's birth name and associated military force
SELECT ?birthName ?force WHERE {
  ?campero dbo:birthName ?birthName .
  FILTER(CONTAINS(LCASE(?birthName), ""narciso campero""))
  ?campero dbo:militaryConflict ?conflict .
  ?conflict dbo:participatingMilitaryUnit ?force .
}

# Query to find any common wars between Orozimbo Barbosa and Narciso Campero's force
SELECT DISTINCT ?war WHERE {
  { 
    ?barbosa dbo:birthName ""Orozimbo Barbosa""@en .
    ?barbosa dbo:militaryConflict ?war .
  }
  UNION
  {
    ?campero dbo:birthName ?birthName .
    FILTER(CONTAINS(LCASE(?birth_name), ""narciso campero""))
    ?conflict dbo:participatingMilitaryUnit ?force .
    ?conflict dbo:militaryConflict ?war .
  }
}
```",4,4,5,3,2,3,3,71,0,0,2,0,0.0,0
534,15,val,"Give me the headquarter of Royal Dublin Society and birth place of the child, that is a politician and an office holder, of the native, that is a politician, of Essex.",SELECT ?result WHERE { <http://dbpedia.org/resource/Royal_Dublin_Society> <http://dbpedia.org/ontology/headquarter> ?result . ?v0 <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Essex> . },"```sparql
# Step 1: Find politicians native to Essex
SELECT ?politician WHERE {
  ?politician dbo:nationality dbr:United_Kingdom ;
              dbo:birthPlace dbr:Essex .
  ?politician rdf:type dbo:Politician .
}

# Step 2 and 3: For each politician, find children who are politicians or office holders and their birthplace
SELECT DISTINCT ?childBirthPlace WHERE {
  ?politician dbo:nationality dbr:United_Kingdom ;
              dbo:birthPlace dbr:Essex .
  ?politician rdf:type dbo:Politician .
  ?politician dbo:child ?child .
  ?child rdf:type dbo:Politician ; # or dbo:OfficeHolder
         dbo:birthPlace ?birthPlace .
  BIND(?birthPlace AS ?childBirthPlace)
}

# Step 4: Find the headquarters of the Royal Dublin Society
SELECT ?headquarters WHERE {
  dbr:The_Royal_Dublin_Society dbo:headquarterLocation ?headquarters .
}
```",4,7,5,3,2,3,2,20,0,0,1,0,0.0,0
701,34,val,Give me the parent of the child of the spouse of Amun-her-khepeshef and spouse of Ramesses II.,SELECT ?result WHERE { <http://dbpedia.org/resource/Amun-her-khepeshef> <http://dbpedia.org/ontology/spouse> ?v2 . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Ramesses_II> . ?v2 <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/ontology/parent> ?result . },"```sparql
SELECT ?parent WHERE {
  wd:Q1234567 wdt:P26 wd:Q7890123 . # Amun-her-khepeshef's spouse (Meritamen)
  wd:Q7890123 wdt:P25 wd:Q987654321 . # Meritamen's parent (Ramesses II)
  wd:Q7890123 wdt:P25 wd:Q87654321 .   # Meritamen's other parent (Nefertari)
  BIND(CONCAT(wd:Q987654321, "" "", wd:Q87654321) AS ?parent)
}
```

Note: The placeholders `wd:Q1234567`, `wd:Q7890123`, `wd:Q987654321`, and `wd:Q87654321` should be replaced with the actual DBpedia identifiers for Amun-her-khepeshef, Meritamen, Ramesses II, and Nefertari respectively.",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
747,29,val,Give me the band of the writer of Apollo (Hardwell song) and person born on 1985-04-29 and band of Shèna.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthDate> ""1985-04-29""^^<http://www.w3.org/2001/XMLSchema#date> . <http://dbpedia.org/resource/Shèna> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Apollo_(Hardwell_song)> <http://dbpedia.org/property/writer> ?v3 . }","```sparql
# Query to find the writer of ""Apollo"" by Hardwell and their band
SELECT ?writer ?band WHERE {
  ?song dcterms:title ""Apollo""@en .
  ?song dbo:artist <http://dbpedia.org/resource/Hardwell> .
  ?song dbo:lyricist ?writer .
  OPTIONAL { ?writer dbo:memberOfBand ?band . }
}

UNION

# Query to find the person born on 1985-04-29 and their band
SELECT ?person ?band WHERE {
  ?person dbo:birthday ""1985-04-29""^^xsd:date .
  OPTIONAL { ?person dbo:memberOfBand ?band . }
}

UNION

# Query to find Shèna's band
SELECT ?sena ?band WHERE {
  ?sena rdfs:label ""Shèna""@en .
  OPTIONAL { ?sena dbo:memberOfBand ?band . }
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
179,14,val,Give me the parent of the child of the parent of Vajiralongkorn.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Vajiralongkorn> . ?v0 <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://dbpedia.org/ontology/child> ?v0 . },"```sparql
SELECT ?parent WHERE {
  wd:Q11980 wdt:P22 ?parent1 . # Vajiralongkorn's parent (King Bhumibol Adulyadej)
  ?child wdt:P22 ?parent1 .   # Child of King Bhumibol Adulyadej
  ?child wdt:P22 ?grandParent . # Parent of the child
  ?grandParent wdt:P22 ?greatGrandParent . # Parent of that parent (Prince Mahidol Adulyadej)
}
```",3,3,4,3,1,3,2,20,0,0,3,0,0.0,0
9,32,val,"Give me the alma mater of the awardee of Royal Medal and alma mater of the mayor, that is a politician, of Northern Ireland Forum.",SELECT ?result WHERE { <http://dbpedia.org/resource/Northern_Ireland_Forum> <http://dbpedia.org/property/leader> ?v1 . ?v1 <http://dbpedia.org/ontology/almaMater> ?result . ?v3 <http://dbpedia.org/ontology/almaMater> ?result . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Medal> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
# Query for the alma mater of a notable Royal Medal awardee (example: Richard Feynman)
SELECT ?almaMater WHERE {
  ?person dbo:award dbp:Royal_Medal .
  ?person foaf:name ""Richard Feynman""@en .
  ?person dbo:almaMater ?almaMater .
}

# Query for the alma mater of a politician who was mayor during the Northern Ireland Forum (example: David Trimble)
SELECT ?almaMater WHERE {
  ?person dbo:occupation dbp:Politician ;
          dbo:memberOf dbp:Northern_Ireland_Forum ;
          dbo:positionTitle ""Mayor""@en .
  ?person foaf:name ""David Trimble""@en .
  ?person dbo:almaMater ?almaMater .
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
747,44,val,Give me the band of the person born as Tracey Elizabeth McSween and band of the writer of Apollo (Hardwell song) and person born on 1985-04-29.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/property/birthName> ""Tracey Elizabeth McSween""@en . <http://dbpedia.org/resource/Apollo_(Hardwell_song)> <http://dbpedia.org/property/writer> ?v4 . ?result <http://dbpedia.org/ontology/birthDate> ""1985-04-29""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
# Query for Tracey Elizabeth McSween's band
SELECT ?band WHERE {
  ?person foaf:name ""Tracey Elizabeth McSween""@en .
  ?person dbo:memberOfBand ?band .
}

UNION

# Query for the writer of Apollo (Hardwell song) and their band
SELECT ?band WHERE {
  ?song dbo:lyricsBy ?writer .
  ?song rdfs:label ""Apollo (Hardwell song)""@en .
  ?writer dbo:memberOfBand ?band .
}

UNION

# Query for the person born on 1985-04-29 and their band
SELECT ?band WHERE {
  ?person dbo:birthday ""1985-04-29""^^xsd:date .
  ?person dbo:memberOfBand ?band .
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
528,33,val,Give me the war of Irene Morales and war of the commander in the work of --01-09.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/author> ""--01-09""^^<http://www.w3.org/2001/XMLSchema#gMonthDay> . ?v3 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Irene_Morales> <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/ontology/commander> ?v3 . }","```sparql
# This query assumes that ""--01-09"" can be mapped to a known work in DBpedia.
# Since we do not have enough information about the identifier, this is a hypothetical approach.

PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?work ?characterName ?event
WHERE {
  # Hypothetical resource for the work identified by ""--01-09""
  VALUES ?work { dbr:Some_Work }

  # Find characters involved in wars within this work
  ?character dbo:name ?characterName .
  ?character dbo:inWork ?work .

  # Check if these characters are involved in events classified as wars
  ?event dbo:type dbr:War .
  ?event dbo:hasParticipant ?character .

  FILTER (?characterName IN (""Irene Morales"", ""Commander""))
}
```",4,4,5,3,2,3,3,71,0,0,2,0,0.0,0
915,13,val,"Give me the resident of the birthplace, that is a settlement, of the director of Pipe Dreams (1976 film).",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> ?v1 . ?result <http://dbpedia.org/ontology/residence> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Pipe_Dreams_(1976_film)> <http://dbpedia.org/ontology/director> ?v0 . },"```sparql
# Step 1: Find the director of the film ""Pipe Dreams"" (1976)
SELECT ?director WHERE {
  ?film dbpedia-owl:title ""Pipe Dreams""@en .
  ?film dbpedia-owl:directedBy ?director .
  FILTER EXISTS { ?film dbo:releaseDate ?date . FILTER(YEAR(?date) = 1976) }
}

# Step 2: Get the birthplace of the director
SELECT ?birthPlace WHERE {
  ?director dbo:birthPlace ?birthPlace .
}

# Step 3: Confirm if the birthplace is a settlement
ASK WHERE {
  ?birthPlace rdf:type dbpedia-owl:PopulatedPlace .
}

# Step 4: List residents of that settlement
SELECT DISTINCT ?resident WHERE {
  ?birthPlace dbo:populationTotal ?population .
  ?resident dbo:birthPlace ?birthPlace .
}
```",3,4,4,3,1,3,2,20,0,0,15,0,0.0,0
498,7,val,"Give me the band of Will Rahmer and band of the band, that is an organisation and a band, of Solace of Requiem.",SELECT ?result WHERE { <http://dbpedia.org/resource/Will_Rahmer> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. <http://dbpedia.org/resource/Solace_of_Requiem> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandOfWillRahmer ?organizationBandSolaceOfRequiem WHERE {
  # Find the band associated with Will Rahmer
  ?willRahmer a dbo:Person ;
              foaf:name ""Will Rahmer"" .
  ?willRahmer dbo:member ?bandOfWillRahmer .

  # Find the organization that is also a band connected to Solace of Requiem
  ?solaceOfRequiem a dbo:Band ;
                   foaf:name ""Solace of Requiem"" .
  ?solaceOfRequiem dbo:member ?organizationBandSolaceOfRequiem .
  ?organizationBandSolaceOfRequiem a dbo:Organization, dbo:Band .
}
```",3,5,4,2,2,2,2,9,0,0,1,0,0.0,0
392,15,val,"Give me the entity in the region, that is a country, of Central European Time and province of Schio.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v1 . <http://dbpedia.org/resource/Schio> <http://dbpedia.org/ontology/province> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . },"```sparql
SELECT ?country WHERE {
  ?country dbo:timeZone dbr:Central_European_Time.
  ?place rdfs:label ""Schio""@en.
  ?place dbo:administrativeTerritory ?region.
  ?region rdfs:label ""Veneto""@en.
  ?region dbo:country ?country.
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
534,14,val,"Give me the headquarter of the owner of the location, that is a venue and an architectural structure, of 2012 Pro12 Grand Final.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Venue>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ArchitecturalStructure>. <http://dbpedia.org/resource/2012_Pro12_Grand_Final> <http://dbpedia.org/ontology/location> ?v2 . ?v2 <http://dbpedia.org/ontology/owner> ?v0 . ?v0 <http://dbpedia.org/ontology/headquarter> ?result . },"```sparql
SELECT ?headquarters WHERE {
  ?event dbo:location dbr:RDS_Arena .
  ?event dbp:eventName ""2012 Pro12 Grand Final"" .
  
  ?venue dbo:wikiPageRedirects ?rdsArena .
  ?venue rdf:type dbo:Venue .
  ?venue dbo:isPartOf dbr:Ireland .

  ?owner dbo:owns ?venue .
  ?owner rdfs:label ""Royal Dublin Society""@en .

  ?owner dbo:headquarters ?headquarters .
}
```",3,5,4,3,1,3,2,20,0,0,3,0,0.0,0
488,38,val,"Give me the death place of the father, that is a politician, of Yūki Hideyasu and administration of the father of Emperor Go-Mizunoo.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Yūki_Hideyasu> <http://dbpedia.org/property/father> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Emperor_Go-Mizunoo> <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/property/leader> ?v2 . },"```sparql
# Query for Yūki Ujitomo's death place
SELECT ?deathPlace WHERE {
  ?person a dbo:Person ;
          foaf:name ""Yūki Ujitomo""@en .
  OPTIONAL { ?person dbo:placeOfBirth ?birthPlace . }
  OPTIONAL { ?person dbo:deathPlace ?deathPlace . }
}

# Query for Toyotomi Hideyori's administration
SELECT ?administration WHERE {
  ?person a dbo:Person ;
          foaf:name ""Toyotomi Hideyori""@en .
  OPTIONAL { ?person dbo:spouse ?spouse . }
  OPTIONAL { ?person dbo:politicalAffiliation ?affiliation . }
  OPTIONAL { ?affiliation rdfs:label ?administration FILTER (lang(?administration) = 'en') . }
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
55,12,val,Give me the band member of Guns N' Roses and band member of Metallica and band of Newsted.,SELECT ?result WHERE { <http://dbpedia.org/resource/Newsted> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Guns_N'_Roses> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Metallica> . },"```sparql
# Query to find members of Guns N' Roses
SELECT ?member WHERE {
  ?band dbr:Guns_N'_Roses ;
        dbo:bandMember ?member .
}

# Query to find members of Metallica
SELECT ?metallicaMember WHERE {
  ?metallicaBand dbr:Metallica ;
                  dbo:bandMember ?metallicaMember .
}

# Find common member between Guns N' Roses and Metallica
SELECT DISTINCT ?commonMember WHERE {
  { 
    ?gnrBand dbr:Guns_N'_Roses ;
             dbo:bandMember ?commonMember .
  }
  UNION
  {
    ?metallicaBand dbr:Metallica ;
                   dbo:bandMember ?commonMember .
  }
}

# Find the band associated with Newsted
SELECT ?newstedBand WHERE {
  ?person dbr:Jason_Newsted ;
          dbo:bandMember ?newstedBand .
}
```",3,3,4,1,3,2,3,28,0,0,1,0,0.0,0
10,13,val,"Give me the associated musical artist of the person born, that is an artist, as Matt Colton and band member of Luke Vibert.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Luke_Vibert> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/birthName> ""Matt Colton""@en . }","```sparql
SELECT ?artist WHERE {
  ?person foaf:name ""Matt Colton""@en .
  ?person dbo:occupation dbp:AudioEngineer . # Assuming Matt Colton is known as an audio engineer, which fits his profile.
  ?person dbo:associatedBandMember ?band .
  ?band dbo:member ?vibert .
  ?vibert foaf:name ""Luke Vibert""@en .
  
  OPTIONAL {
    ?person foaf:worksFor ?artist .
  }
  
  FILTER EXISTS { ?person dbo:associatedBandMember ?band . } # Ensures Matt Colton is a band member of Luke Vibert
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
77,14,val,"Give me the force of the mayor of the territory administered, that is an organisation, from Warsaw.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> ?v0 . ?v2 <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Warsaw> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://dbpedia.org/property/leader> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?mayor ?force WHERE {
  # Find Warsaw in DBpedia
  dbr:Warsaw dbo:administrativeUnitOf ?organization .
  
  # Identify the mayor of this organization
  ?organization dbo:mayor ?mayor .

  # Retrieve information about the force under the mayor's jurisdiction
  OPTIONAL { 
    ?mayor dbo:policeForce ?force .
  }
}
```",3,4,4,3,1,3,2,20,0,0,40,0,0.0,0
963,12,val,"Give me the administration of the ruling party, that is a political party, in Sremski Karlovci and entity in Serbia.",SELECT ?result WHERE { <http://dbpedia.org/resource/Sremski_Karlovci> <http://dbpedia.org/property/leaderParty> ?v0 . ?result <http://dbpedia.org/property/leaderParty> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Serbia> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?party WHERE {
  # Find the ruling party in Serbia
  ?serbia dbo:government ?government .
  ?government dbo:member ?party .

  # Filter for Serbian Progressive Party as it is known to be dominant
  FILTER(CONTAINS(LCASE(?party), ""serbian progressive party""))

  # Check if Sremski Karlovci is part of Serbia
  dbr:Sremski_Karlovci dbo:country dbr:Serbia .
}
```",3,4,4,2,2,3,2,20,0,0,84,0,0.0,0
528,34,val,"Give me the war of the military force of the entity, that is a societal event, in Chile and force of Narciso Campero.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Narciso_Campero> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Chile> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war ?chileanForce ?bolivianLeader WHERE {
  # Find wars that are societal events in Chile
  ?war a dbo:MilitaryConflict ;
      dbo:location dbr:Chile ;
      rdfs:label ?warLabel .
  
  FILTER(CONTAINS(LCASE(?warLabel), ""war of the pacific""))

  # Find military forces involved in these wars from Chile
  ?chileanForce dbo:participatesIn ?war ;
                dbo:country dbr:Chile .

  # Find Narciso Campero and his involvement as a leader
  ?bolivianLeader dbo:leaderOf ?bolivianForce ;
                  rdfs:label ""Narciso Campero"" .
  
  # Check if the Bolivian force is involved in the same war
  ?bolivianForce dbo:participatesIn ?war .

}
```",4,5,5,3,2,3,3,71,0,0,4,0,0.0,0
404,33,val,"Give me the spouse of Princess Victoria Louise of Prussia and parent of the child, that is a royalty, of the parent, that is a royalty, of Prince George William of Hanover.",SELECT ?result WHERE { <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Prince_George_William_of_Hanover> <http://dbpedia.org/ontology/parent> ?v0 . ?v0 <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> ?v3 . },"```sparql
SELECT ?spouse WHERE {
  wd:Q123456 wdt:P26 ?spouse . # Princess Victoria Louise of Prussia's spouse
  ?child wdt:P25 wd:Q123456 ; # Child of Princess Victoria Louise of Prussia and Ernest Augustus, Prince of Hanover
         wdt:P31/wdt:P279* wd:Q118494 . # The child is a royalty
  ?parent wdt:P25 ?child . # Parent of the royal child
  FILTER(?parent = wd:Q123456) . # Ensure this parent is Ernest Augustus, Prince of Hanover
}
```

Note: Replace `wd:Q123456` with the actual DBpedia identifier for Princess Victoria Louise of Prussia and `wd:Q118494` with the class for royalty.",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
391,40,val,"Give me the native of the figure known as the nick name of Jackson, Tennessee and actor of The Departed and actor of All About the Andersons.","SELECT ?result WHERE { <http://dbpedia.org/resource/Jackson,_Tennessee> <http://xmlns.com/foaf/0.1/nick> ?v2 . ?v1 <http://dbpedia.org/property/nickname> ?v2 . <http://dbpedia.org/resource/The_Departed> <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . <http://dbpedia.org/resource/All_About_the_Andersons> <http://dbpedia.org/property/starring> ?result . }","```sparql
SELECT ?nativePlace WHERE {
  wd:Q1009 dbo:nativePlace ?nativePlace .
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
328,41,val,"Give me the awardee of the award of Bruce Fraser, 1st Baron Fraser of North Cape and commander in the force of Ferenc Szálasi and leader of People's Commissariat of Defense of the Soviet Union.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape> <http://dbpedia.org/property/awards> ?v2 . <http://dbpedia.org/resource/People's_Commissariat_of_Defense_of_the_Soviet_Union> <http://dbpedia.org/ontology/leader> ?result . ?v4 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Ferenc_Szálasi> . ?result <http://dbpedia.org/property/awards> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award WHERE {
  ?person a dbo:Person ;
          foaf:name ""Bruce Fraser"" .
  ?person dbo:honoraryTitle dbr:Order_of_Lenin .
  ?person dbo:nationality dbr:United_Kingdom .
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
281,23,val,Give me the war of the awardee of the award of Jonathon Band.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/awards> ?v2 . ?v0 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Jonathon_Band> <http://dbpedia.org/property/awards> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?award ?awardee ?war WHERE {
  # Find Jonathon Band's DBpedia resource
  VALUES ?jonathanBand { dbr:Jonathon_Band }

  # Get awards received by Jonathon Band
  ?jonathanBand dbo:award ?award .

  # For each award, find the awardee and check if they participated in a war
  OPTIONAL {
    ?award dbo:recipient ?awardee .
    ?awardee dbo:participatedIn ?war .
  }
}
```",3,3,4,3,1,3,3,71,0,1,450,0.0,0.0,0
963,13,val,"Give me the entity in the region, that is a country, of the time zone of Herzegovina-Neretva Canton.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://dbpedia.org/property/timeZone> ?v0 . ?result <http://dbpedia.org/ontology/country> ?v1 . <http://dbpedia.org/resource/Herzegovina-Neretva_Canton> <http://dbpedia.org/property/timeZone> ?v0 . },"```sparql
SELECT ?country WHERE {
  # Find the time zone for Herzegovina-Neretva Canton
  dbpedia:Herzegovina-Neretva_Canton dbo:timeZone ?timezone .
  
  # Find countries in that time zone
  ?country dbo:timeZone ?timezone ;
           a dbo:Country .

  # Check if any of these countries is also a region within another entity (country)
  OPTIONAL { 
    ?region rdfs:subClassOf* dbo:Region ;
            dbpedia-owl:wikiPageRedirects ?country .
  }
  
  FILTER EXISTS { ?region . } # Ensure the country is also listed as a region
}
```",3,4,4,3,1,3,2,20,0,0,173261,0,0.0,0
701,18,val,Give me the spouse of Ramesses II and parent of Henuttawy (19th dynasty) and parent of Meritamen.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Ramesses_II> . <http://dbpedia.org/resource/Meritamen> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Henuttawy_(19th_dynasty)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  ?ramesses2 a dbo:Person ;
             dbo:spouse ?spouse .
  
  ?henuttawy a dbo:Person ;
             dbo:parent ?spouse .
  
  ?meritamen a dbo:Person ;
             dbo:parent ?spouse .

  FILTER (str(?ramesses2) = ""Ramesses_II"")
  FILTER (str(?henuttawy) = ""Henuttawy_(19th_dynasty)"")
  FILTER (str(?meritamen) = ""Meritamen"")
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
9,42,val,"Give me the alma mater of the mayor, that is a politician, of Northern Ireland Forum and figure known as the nickname of Queen's University Belfast and alma mater of Allen Hill (scientist).",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/almaMater> ?result . <http://dbpedia.org/resource/Allen_Hill_(scientist)> <http://dbpedia.org/ontology/almaMater> ?result . <http://dbpedia.org/resource/Queen's_University_Belfast> <http://dbpedia.org/property/nickname> ?v1 . <http://dbpedia.org/resource/Northern_Ireland_Forum> <http://dbpedia.org/property/leader> ?v2 . ?result <http://dbpedia.org/property/nickname> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?university WHERE {
  # Find the mayor of Northern Ireland Forum and their alma mater
  ?mayor a dbo:Mayor ;
         dbo:almaMater ?university .

  FILTER EXISTS { 
    ?mayor dbo:politicalParty dbr:Northern_Ireland_Forum .
  }

  # Ensure the university is associated with Queen's University Belfast nickname
  OPTIONAL {
    ?university rdfs:label ?label .
    FILTER CONTAINS(LCASE(?label), ""queen's university belfast"")
  }
  
  # Find Allen Hill and his alma mater
  dbr:Allen_Hill dbo:almaMater ?hillUniversity .

  # Ensure the same university is linked to both the mayor and Allen Hill
  FILTER (?university = ?hillUniversity)
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
547,32,val,Give me the resting place of the actor of Enemy at the Door and resting place of the child of James Burton (property developer).,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . ?v3 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Enemy_at_the_Door> <http://dbpedia.org/property/starring> ?v3 . <http://dbpedia.org/resource/James_Burton_(property_developer)> <http://dbpedia.org/ontology/child> ?v1 . },"```sparql
# Query for the actor of ""Enemy at the Door"" and their resting place
SELECT ?actor ?restingPlaceActor WHERE {
  ?film dcterms:title ""Enemy at the Door""@en .
  ?film dbo:starring ?actor .
  OPTIONAL { ?actor dbo:placeOfBurial ?restingPlaceActor . }
} LIMIT 1

UNION

# Query for a child of James Burton (property developer) and their resting place
SELECT ?child ?restingPlaceChild WHERE {
  ?person foaf:name ""James Burton""@en ;
          dbo:spouse ?spouse .
  ?spouse dbo:child ?child .
  OPTIONAL { ?child dbo:placeOfBurial ?restingPlaceChild . }
} LIMIT 1
```",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
179,15,val,"Give me the person born as the birth name of the child, that is a royalty, of Nakkhatra Mangala and parent of Ubol Ratana.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Nakkhatra_Mangala> . <http://dbpedia.org/resource/Ubol_Ratana> <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
SELECT ?person WHERE {
  ?person dbo:parent dbc:Bhumibol_Adulyadej.
  ?person dbo:child dbc:Nakkhatra_Mangala.
  ?person dbo:child dbc:Ubol_Ratana.
}
```",4,5,5,3,2,3,2,20,0,0,1,0,0.0,0
184,32,val,Give me the child of the child of Archduke Joseph Karl of Austria and parent of the native of Budapest.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v1 . ?result <http://dbpedia.org/property/father> ?v3 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Karl_of_Austria> . ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Budapest> . },"```sparql
# Step 1: Find children of Archduke Joseph Karl of Austria
SELECT ?child WHERE {
    ?person dbo:spouse ?spouse .
    ?spouse foaf:name ""Joseph Karl, Archduke of Austria"" .
    ?person dbo:child ?child .
}

UNION

# Step 2: For each child found in step 1, find their children (grandchildren of Archduke Joseph Karl)
SELECT ?grandchild WHERE {
    ?child dbo:child ?grandchild .
    # Join with the previous result to ensure these are grandchildren of Archduke Joseph Karl
    VALUES ?child { 
        # Placeholder for actual child URIs found in step 1
    }
}

UNION

# Step 3: Find individuals who are natives of Budapest and their parents
SELECT ?parent WHERE {
    ?person dbo:nativePlace dbr:Budapest .
    ?person dbo:parent ?parent .
}

# Final step: Match the results from steps 2 and 3 to find a common individual
SELECT DISTINCT ?grandchild ?parent WHERE {
    VALUES ?grandchild { 
        # Placeholder for actual grandchild URIs found in step 2
    }
    VALUES ?parent { 
        # Placeholder for actual parent URIs found in step 3
    }
    FILTER(?grandchild = ?parent)
}
```

Note: The placeholders in the `VALUES` clauses need to be replaced with actual URIs obtained from executing the first two queries.",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
996,11,val,Give me the force of the awardee of 1778.0 and entity in France.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/France> . ?v2 <http://dbpedia.org/property/awards> ""1778.0""^^<http://www.w3.org/2001/XMLSchema#double> . ?result <http://dbpedia.org/ontology/commander> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?awardee ?force WHERE {
  ?award dbo:recipient ?awardee .
  ?awardee dbo:nationality dbr:Francois_I_of_France ; # Assuming the awardee is French
           dbo:militaryRank ?force .
  ?award dbo:date ""1778-01-01""^^xsd:date ;
         dbo:name ""Order of Saint Louis""@en .
}
```",3,3,4,2,2,3,2,20,0,0,4,0,0.0,0
915,12,val,"Give me the resident of Springfield, Illinois and father of the child, that is a fictional character and a soap character, of Phillip Spaulding.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?result . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Phillip_Spaulding> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?result <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Springfield,_Illinois> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoapCharacter>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?character WHERE {
  ?character dbo:residence dbr:Springfield_(The_Simpsons) .
  ?character dbo:genre dbr:Soap_opera .
  ?character dbo:spouse ?spouse .
  ?spouse dbo:child dbr:Phillip_Spaulding .
}
```",3,5,4,2,2,3,2,20,0,0,1,0,0.0,0
404,44,val,"Give me the parent of the child, that is a royalty, of Ernest Augustus, Duke of Brunswick and child of the father of Ernest Augustus, Duke of Brunswick and spouse of Princess Victoria Louise of Prussia.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v2 . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/property/father> ?v2 . <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/ontology/child> ?v4 . }","```sparql
SELECT ?parent WHERE {
  # Identify Ernest Augustus, Duke of Brunswick
  wd:Q1234567 wdt:P31/wdt:P279* wd:Q5; # Person and human
          wdt:P22 ?spouse. # Spouse

  # Confirm spouse is Princess Victoria Louise of Prussia
  ?spouse wdt:P735 wd:Q1234568. # Parent of Princess Victoria Louise of Prussia

  # Find children who are royalty
  wd:Q1234567 wdt:P40 ?child.
  ?child wdt:P31/wdt:P279* wd:Q5; # Person and human
         wdt:P39 ?royaltyTitle. # Title held

  # Determine the parent of one of these royalty children
  ?child wdt:P25 ?parent.
}
```

Note: Replace `wd:Q1234567` with the actual DBpedia ID for Ernest Augustus, Duke of Brunswick and `wd:Q1234568` with the ID for Princess Victoria Louise of Prussia.",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
391,27,val,"Give me the actor of the movie, that is a movie and a work and a television show, with the professional in .","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/starring> ?result . ?v1 <http://dbpedia.org/property/occupation> """"@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v2 <http://dbpedia.org/property/starring> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. }","```sparql
SELECT DISTINCT ?movie ?actor WHERE {
  ?movie rdf:type dbo:Film .
  ?movie rdf:type dbo:Work .
  ?movie rdf:type dbo:TelevisionShow .
  
  ?castMember dbo:castMember ?actor .
  FILTER (strstarts(str(?castMember), str(?movie)))
}
```",3,6,4,3,1,3,3,71,0,0,7061,0,0.0,0
963,14,val,"Give me the administration of the ruling party, that is a political party, in the location for 21205.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/leaderParty> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v2 <http://dbpedia.org/ontology/postalCode> ""21205"" . ?result <http://dbpedia.org/property/leaderParty> ?v0 . }","```sparql
# Step 1: Find the location associated with ZIP code 21205
SELECT ?location WHERE {
    ?zipCode a dbo:PostalCode ;
             dbp:postalCode ""21205"" .
    ?location dbo:postalCode ?zipCode ;
              a dbo:Place .
}

# Step 2: Determine the ruling political party in that location
SELECT DISTINCT ?party WHERE {
    ?location dbo:politicalParty ?party .
    FILTER EXISTS { 
        ?party a dbo:PoliticalParty .
    }
}

# Step 3: Query for the administration or leadership of that political party
SELECT ?administration WHERE {
    ?party dbo:leader ?administration .
    FILTER (?party IN (SELECT DISTINCT ?party WHERE {
        ?location dbo:politicalParty ?party .
        FILTER EXISTS { 
            ?party a dbo:PoliticalParty .
        }
    }))
}
```",3,4,4,3,1,3,2,20,0,0,86,0,0.0,0
55,16,val,"Give me the band member of Guns N' Roses and band of the reference, that is a band, to Newsted.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Newsted""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Guns_N'_Roses> . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
# Query to find members of Guns N' Roses
SELECT ?member WHERE {
  ?band dbr:Guns_N%27_Roses ;
        dbo:bandMember ?member .
}

# Query to find the band Newsted was a member of
SELECT ?band WHERE {
  ?person foaf:name ""James Newsted""@en ;
          dbo:bandMember ?band .
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
10,16,val,Give me the professional in the birth name of Sharon Kao and associated musical artist of Matt Colton.,SELECT ?result WHERE { <http://dbpedia.org/resource/Sharon_Kao> <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Matt_Colton> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
# Query to get the professional name of Sharon Kao
SELECT ?professionalName WHERE {
  ?person foaf:name ""Sharon Kao""@en .
  OPTIONAL { ?person dbo:birthName ?birthName . }
  OPTIONAL { ?person foaf:name ?professionalName . FILTER(lang(?professionalName) = 'en') }
}
```

```sparql
# Query to get the associated musical artist of Matt Colton
SELECT ?artist WHERE {
  ?colton foaf:name ""Matt Colton""@en .
  ?colton dbo:worksFor ?studio .
  ?studio dbo:associatedMusicalArtist ?artist .
}
```",3,3,4,2,2,2,3,28,0,0,2,0,0.0,0
547,37,val,Give me the resting place of Alan Cunningham and resting place of the actor of the show with Emily Richard.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/starring> ?v3 . ?v3 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Alan_Cunningham> <http://dbpedia.org/ontology/restingPlace> ?result . ?v0 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emily_Richard> . },"```sparql
# Query for Alan Cunningham's resting place
SELECT ?place WHERE {
  ?person dbo:birthName ""Alan Cunningham""@en .
  ?person dbo:deathPlace ?place .
}

UNION

# Assuming Emily Richard is an actress, we need to find a show she acted in and then find the actor from that show.
SELECT ?actorRestingPlace WHERE {
  # Find a TV series or movie featuring Emily Richard
  ?show dbo:starring ?emilyRichard .
  ?emilyRichard foaf:name ""Emily Richard""@en .

  # Find an actor from that show
  ?show dbo:starring ?actor .
  
  # Get the resting place of that actor
  ?actor dbo:deathPlace ?actorRestingPlace .
}
```",4,4,5,3,2,3,3,71,0,0,2,0,0.0,0
92,31,val,"Give me the associated musical artist of Jim Sheppard and band member of the reference, that is an artist, to the name of Nevermore (2006 film).",SELECT ?result WHERE { <http://dbpedia.org/resource/Jim_Sheppard> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Nevermore_(2006_film)> <http://xmlns.com/foaf/0.1/name> ?v1 . ?v0 <http://xmlns.com/foaf/0.1/name> ?v1 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"```sparql
# Query to find Jim Sheppard's associated musical artist (band)
SELECT ?band WHERE {
  ?person foaf:name ""Jim Sheppard""@en .
  ?person dbo:memberOf ?band .
}

UNION

# Query to find any connection between the band Nevermore and the film ""Nevermore"" (2006) through artists
SELECT DISTINCT ?artist WHERE {
  # Find the film ""Nevermore"" (2006)
  ?film dbp:title ""Nevermore""@en ;
        dbo:releaseDate ?date .
  
  FILTER(YEAR(?date) = 2006)

  # Check if any artist associated with this film is also a member of the band Nevermore
  ?artist dbo:memberOf <http://dbpedia.org/resource/Nevermore_(band)> ;
          dbo:actorIn ?film .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
356,15,val,"Give me the player in the successor of the predecessor, that is a sports team season and a soccer club season, of 2015 Sacramento Republic FC season and team of Mark Briggs.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v0 <http://dbpedia.org/ontology/successor> ?v1 . ?result <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Mark_Briggs> . ?v0 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/2015_Sacramento_Republic_FC_season> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?v1 <http://dbpedia.org/ontology/team> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?player WHERE {
  # Step 1: Identify the 2015 Sacramento Republic FC Season
  dbr:Sacramento_Republic_FC_season_2015 a dbo:SportsTeamSeason .

  # Step 2: Find the Predecessor Season
  OPTIONAL { 
    ?predecessorSeason dbo:succeededBy dbr:Sacramento_Republic_FC_season_2015 .
  }

  # Step 3: Determine the Successor Season
  OPTIONAL {
    ?successorSeason dbo:precededBy ?predecessorSeason .
  }

  # Step 4: Identify Mark Briggs' Team in the Successor Season
  ?player dbo:nationality dbr:United_Kingdom ;
          dbo:sport dbr:Soccer ;
          dbo:team ?successorTeam .

  # Ensure it is a Sports Team Season and Soccer Club Season
  ?successorTeam a dbo:SportsTeamSeason, dbo:SoccerClub .
}
```",4,6,5,3,2,3,2,20,0,0,1,0,0.0,0
92,23,val,"Give me the band member of the reference, that is an artist, to the name of Nevermore (2006 film).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Nevermore_(2006_film)> <http://xmlns.com/foaf/0.1/name> ?v2 . ?v0 <http://xmlns.com/foaf/0.1/name> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?memberName WHERE {
  ?band dbo:name ""Nevermore""@en .
  ?band dbo:bandMember ?member .
  ?member foaf:name ?memberName .
  
  OPTIONAL { 
    ?film dbo:title ""Nevermore (2006 film)""@en ;
          dbo:releaseDate ?date .
    FILTER(YEAR(?date) = 2006)
  }
}
```",3,4,4,3,1,3,3,71,0,0,12,0,0.0,0
251,17,val,"Give me the administration of the ruling party, that is a political party and an organisation, in Sicily and death place of Laura Mancinelli.",SELECT ?result WHERE { <http://dbpedia.org/resource/Laura_Mancinelli> <http://dbpedia.org/ontology/deathPlace> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?result <http://dbpedia.org/property/leaderParty> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Sicily> <http://dbpedia.org/property/leaderParty> ?v1 . },"```sparql
# Query for the administration of the ruling party in Sicily
SELECT ?party ?partyLabel WHERE {
  ?party a dbo:PoliticalParty ;
         dbo:isOrganizationOf dbr:Sicily ;
         dbo:officeHolder ?person .
  ?person dbo:positionTitle ""President"" .
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}

UNION

# Query for the death place of Laura Mancinelli
SELECT ?deathPlace ?deathPlaceLabel WHERE {
  ?mancinelli a dbo:Person ;
              foaf:name ""Laura Mancinelli""@en ;
              dbo:placeOfBirth ?birthPlace ;
              dbo:deathPlace ?deathPlace .
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
```",3,5,4,2,2,2,3,28,0,0,1,0,0.0,0
427,33,val,Give me the reference to Partito Popolare Italiano and party of the father of the alumnus of Massachusetts Institute of Technology.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Massachusetts_Institute_of_Technology> . ?v3 <http://dbpedia.org/ontology/party> ?result . ?v0 <http://dbpedia.org/property/father> ?v3 . ?result <http://xmlns.com/foaf/0.1/name> ""Partito Popolare Italiano""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?alumnus ?father ?party WHERE {
  # Find MIT alumni
  ?alumnus dbo:almaMater dbr:Massachusetts_Institute_of_Technology .

  # Get the father of each alumnus
  OPTIONAL { ?alumnus dbo:father ?father . }

  # Check if the father has a political party affiliation
  OPTIONAL { ?father dbo:partyAffiliation ?party . }

  # Filter for Partito Popolare Italiano
  FILTER (CONTAINS(LCASE(STR(?party)), ""partito popolare italiano""))
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
404,36,val,Give me the spouse of Princess Victoria Louise of Prussia and child of the father of the spouse of Princess Victoria Louise of Prussia.,SELECT ?result WHERE { <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?v0 . },"```sparql
SELECT ?spouse ?child WHERE {
  # Step 1: Identify Princess Victoria Louise of Prussia and her spouse
  wd:Q1234567 wdt:P26 ?spouse . # Q1234567 is a placeholder for the DBpedia item ID of Princess Victoria Louise of Prussia

  # Step 2: Find the father of that spouse (Ernest Augustus, Crown Prince of Hanover)
  ?spouse wdt:P22 ?father .

  # Step 3: Identify a child of this father
  ?father wdt:P40 ?child .
}
```

Note: The placeholder `wd:Q1234567` should be replaced with the actual DBpedia item ID for Princess Victoria Louise of Prussia. You can find this by searching DBpedia or using an appropriate SPARQL query to identify her entity.",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
161,23,val,"Give me the military force of the force, that is a societal event and an event and a military conflict, of the person decedent at Francoist Spain.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://dbpedia.org/ontology/commander> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Francoist_Spain> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce WHERE {
  ?person dbo:deathPlace dbr:Francoist_Spain .
  ?person rdfs:label ""Francisco Franco""@en .
  ?event dbo:participatedInMilitaryConflict ?conflict ;
         dbo:participant ?person .
  ?conflict dbo:militaryForce ?militaryForce .
}
```",3,6,4,3,1,3,3,71,0,0,1073,0,0.0,0
617,36,val,Give me the parent of the child of the commander in Battle of Panium and child of Antiochus III the Great.,SELECT ?result WHERE { <http://dbpedia.org/resource/Battle_of_Panium> <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://dbpedia.org/ontology/child> ?v1 . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Antiochus_III_the_Great> . ?result <http://dbpedia.org/ontology/child> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parent WHERE {
  # Step 1: Find the commander in the Battle of Panium
  ?battle dbo:commander ?commander .
  FILTER(STRSTARTS(STR(?battle), ""http://dbpedia.org/resource/Battle_of_Panium""))

  # Step 2: Find a child of this commander
  ?child dbo:parent ?commander .

  # Step 3: Identify a child of Antiochus III the Great
  ?antiochusChild dbo:parent dbr:Antiochus_III_the_Great .

  # Step 4: Determine the parent of these two individuals
  ?parent dbo:child ?child .
  ?parent dbo:child ?antiochusChild .
}
```",4,4,5,3,2,3,3,71,0,2,2,0.0,0.0,0
54,44,val,"Give me the predecessor of the child, that is an office holder and a royalty, of Thihapate of Mohnyin and parent of the child of Narapati I of Ava and child of Thinkhaya of Pagan.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Thihapate_of_Mohnyin> . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Narapati_I_of_Ava> . <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?result . ?v4 <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?predecessor WHERE {
  # Thihapate of Mohnyin's child who is an office holder and royalty
  ?child dbo:parent dbr:Thihapate_of_Mohnyin ;
         a dbo:Monarch ;  # Assuming royalty implies being a monarch
         dbo:officeHolder ?office .

  # Predecessor of this child
  ?predecessor dbo:successor ?child .

  # Narapati I's child
  ?narapatiChild dbo:parent dbr:Narapati_I_of_Ava .

  # Thinkhaya of Pagan's child
  ?thinkhayaChild dbo:parent dbr:Thinkhaya_of_Pagan .

  # Predecessor must be parent of Narapati I's child and child of Thinkhaya
  ?predecessor dbo:child ?narapatiChild .
  ?predecessor dbo:parent ?thinkhayaChild .
}
```",5,7,6,2,3,3,3,71,0,0,1,0,0.0,0
10,18,val,Give me the professional in the birth name of Sharon Kao and band member of Luke Vibert.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v1 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Luke_Vibert> . <http://dbpedia.org/resource/Sharon_Kao> <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?birthName WHERE {
  ?person a dbo:MusicalArtist .
  ?person dbo:birthName ?birthName .
  FILTER(CONTAINS(LCASE(?birthName), ""sharon kao"")) .

  OPTIONAL {
    ?collaboration dbo:artist dbr:Luke_Vibert ;
                  dbo:bandMember ?person .
  }
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
16,37,val,Give me the person born as Georgeanne Marie Rice and professional in the profession of the actor of Unnatural (TV series).,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v3 . ?v0 <http://dbpedia.org/property/occupation> ?v3 . <http://dbpedia.org/resource/Unnatural_(TV_series)> <http://dbpedia.org/property/starring> ?v0 . ?result <http://dbpedia.org/property/birthName> ""Georgeanne Marie Rice""@en . }","```sparql
# Step 1: Find the person born as Georgeanne Marie Rice
SELECT ?person WHERE {
  ?person dbo:birthName ""Georgeanne Marie Rice""@en .
}

# Step 2: Find the cast of the TV series ""Unnatural""
SELECT ?actor WHERE {
  ?series dbo:title ""Unnatural (TV series)""@en ;
          dbo:castMember ?actor .
}

# Step 3: Check if the person from step 1 is in the list from step 2
SELECT ?person WHERE {
  ?person dbo:birthName ""Georgeanne Marie Rice""@en .
  ?series dbo:title ""Unnatural (TV series)""@en ;
          dbo:castMember ?person .
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
92,18,val,Give me the band of Joseph Michael and associated musical artist of Jim Sheppard and band member of Nevermore.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Joseph_Michael> . <http://dbpedia.org/resource/Jim_Sheppard> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Nevermore> . },"```sparql
# Query to find the band associated with Joseph Michael
SELECT ?band WHERE {
  ?person foaf:name ""Joseph Michael""@en .
  ?person dbo:memberOf ?band .
}

UNION

# Query to find the musical artist associated with Jim Sheppard
SELECT ?artist WHERE {
  ?person foaf:name ""Jim Sheppard""@en .
  ?person dbo:associatedBandOrMusicalProject ?artist .
}

UNION

# Query to find a band member of Nevermore
SELECT ?member WHERE {
  ?band foaf:name ""Nevermore""@en .
  ?band dbo:member ?member .
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
915,14,val,"Give me the father of the child, that is a fictional character and a soap character, of the parent, that is a fictional character and a soap character, of Lizzie Spaulding.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoapCharacter>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. <http://dbpedia.org/resource/Lizzie_Spaulding> <http://dbpedia.org/ontology/parent> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoapCharacter>. ?v0 <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  # Lizzie Spaulding's father
  ?lizzie dbo:spouse ?parent .
  ?parent rdfs:label ""Jack Abbott""@en .

  # Jack Abbott's parent (Victor Newman)
  ?jack dbo:spouseOrPartner ?grandParent .
  ?grandParent rdfs:label ""Victor Newman""@en .

  # Victor Newman as the father
  ?victor dbo:child ?jack .
}
```",3,7,4,3,1,3,2,20,0,0,1,0,0.0,0
303,13,val,"Give me the entity in Panama and party of the commander, that is a politician, in United States invasion of Panama.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/party> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Panama> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/United_States_invasion_of_Panama> <http://dbpedia.org/ontology/commander> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity ?politician WHERE {
  ?event dbo:location dbr:Panama .
  ?event dbo:subject dbr:United_States_invasion_of_Panama .
  ?event dbo:participant ?politician .
  ?politician a dbo:Politician .
  OPTIONAL { ?entity dbo:location dbr:Panama . }
  FILTER (?politician = dbr:Manuel_Noriega)
}
```",3,4,4,2,2,2,3,28,0,0,2,0,0.0,0
488,33,val,"Give me the death place of the father, that is a politician, of the father, that is an office holder, of Matsudaira Tadamasa and birth place of Enomoto Takeaki.",SELECT ?result WHERE { <http://dbpedia.org/resource/Enomoto_Takeaki> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Matsudaira_Tadamasa> <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/property/father> ?v3 . ?v3 <http://dbpedia.org/ontology/deathPlace> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?deathPlace ?birthPlace
WHERE {
  # Matsudaira Tadamasa's father who was an office holder
  ?officeHolder a dbo:OfficeHolder ;
               dbo:father ?mat1Father .
  
  FILTER(?officeHolder = dbr:Matsudaira_Tadamasa)

  # The father of the office holder, who is a politician
  ?mat1Father dbo:father ?politicianFather .

  # Death place of the politician
  ?politicianFather dbo:deathPlace ?deathPlace .
  
  # Enomoto Takeaki's birthplace
  dbr:Enomoto_Takeaki dbo:birthPlace ?birthPlace .
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
281,26,val,"Give me the entity in the birth place, that is a country, of the leader, that is a politician, of 1962 New South Wales state election.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/birthPlace> ?v2 . <http://dbpedia.org/resource/1962_New_South_Wales_state_election> <http://dbpedia.org/property/leader> ?v1 . ?result <http://dbpedia.org/ontology/place> ?v2 . },"```sparql
SELECT DISTINCT ?country WHERE {
  ?election dcterms:isPartOf dbc:""1962_New_South_Wales_state_election"" .
  ?election dbo:leader ?politician .
  ?politician rdf:type dbo:Politician .
  ?politician foaf:birthPlace ?birthplace .
  ?birthplace rdf:type dbpedia-owl:Country .
  BIND(?birthplace AS ?country)
}
```",3,5,4,3,1,3,3,71,0,0,1,0,0.0,0
391,25,val,"Give me the actor of the movie, that is a movie and a work and a television show, with Roz Ryan and actor of The Departed.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/property/starring> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Roz_Ryan> . <http://dbpedia.org/resource/The_Departed> <http://dbpedia.org/ontology/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actor WHERE {
  # Find movies that are also works and television shows
  ?movie a dbo:Film ;
         dbo:basedOnWork ?work ;
         dbo:adaptationOfWork ?tvShow .

  # Ensure the movie features Roz Ryan
  ?appearance dbo:character ?role .
  ?appearance dbo:actor ?rozRyan .
  ?rozRyan rdfs:label ""Roz Ryan""@en .

  # Find actors of ""The Departed""
  ?departedActor dbo:actor ?theDeparted .
  ?theDeparted rdfs:label ""The Departed""@en .

  # Ensure the actor is in both the movie and ""The Departed""
  ?movieAppearance dbo:actor ?actor .
  ?actor dbo:actor ?theDeparted .
  
  FILTER (lang(?rozRyanLabel) = 'en' && lang(?departedActorLabel) = 'en')
}
```",3,6,4,2,2,3,3,71,0,0,1,0,0.0,0
994,28,val,Give me the associated musical artist of Red Tide (band) and associated musical artist of the associated musical artist of Watchtower (band) and band member of Don Dokken.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Don_Dokken> . <http://dbpedia.org/resource/Red_Tide_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Watchtower_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
# Query to find the associated musical artist of Red Tide (band)
SELECT ?associatedArtist WHERE {
  ?redTide dbr:Red_Tide_(band) .
  ?redTide dbo:associatedMusicalArtist ?associatedArtist .
}

UNION

# Query to find the associated musical artist of Watchtower (band)
SELECT ?watchtowerAssociatedArtist WHERE {
  ?watchtower dbr:Watchtower_(band) .
  ?watchtower dbo:associatedMusicalArtist ?watchtowerAssociatedArtist .
}

UNION

# Query to find band members of Don Dokken
SELECT ?donDokkenMember WHERE {
  ?donDokkenBand dbr:Don_Dokken .
  ?donDokkenBand dbo:bandMember ?donDokkenMember .
}

# Combine results to find overlap
SELECT DISTINCT ?resultArtist WHERE {
  { 
    ?redTide dbr:Red_Tide_(band) .
    ?redTide dbo:associatedMusicalArtist ?resultArtist .
  }
  
  UNION
  
  {
    ?watchtowerAssociatedArtist dbr:Watchtower_(band) .
    ?watchtowerAssociatedArtist dbo:associatedMusicalArtist ?intermediateArtist .
    
    ?donDokkenBand dbr:Don_Dokken .
    ?donDokkenBand dbo:bandMember ?donDokkenMember .
    
    FILTER(?intermediateArtist = ?donDokkenMember)
  }
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
378,27,val,"Give me the claim to fame of the commander in the war, that is a military conflict and a societal event and an event, of Thomas Trigge.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/commander> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Thomas_Trigge> <http://dbpedia.org/ontology/battle> ?v1 . ?v2 <http://dbpedia.org/ontology/knownFor> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?conflict ?claimToFame WHERE {
  ?person dbo:name ""Thomas Trigge""@en .
  ?person dbo:occupation dbr:Military_person .

  ?person dbo:participatedIn ?conflict .
  ?conflict a dbo:War ;
           a dbo:Societal_event ;
           a dbo:Event .

  OPTIONAL { ?conflict dbo:claimToFame ?claimToFame }
  
  FILTER(?person = dbr:Thomas_Trigge)
}
```",3,6,4,3,1,3,3,71,0,0,6,0,0.0,0
182,16,val,Give me the entity in the nationality of Tamara Kunanayakam and war of Mahesh Senanayake.,SELECT ?result WHERE { <http://dbpedia.org/resource/Mahesh_Senanayake> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Tamara_Kunanayakam> <http://dbpedia.org/ontology/nationality> ?v2 . ?result <http://dbpedia.org/ontology/place> ?v2 . },"```sparql
# Query to get Tamara Kunanayakam's nationality
SELECT ?nationality WHERE {
  dbpedia:en:Tamara_Kunanayakam dbo:nationality ?nationality .
}

# Query to get Mahesh Senanayake's war involvement
SELECT ?war WHERE {
  dbpedia:en:Mahesh_Senanayake dbo:occupation/dbp:occupation ""military"" ;
                                 dbo:memberOf ?organization .
  ?organization dbo:member ?war .
}

# Assuming we have the results from above queries, let's find a common entity
# Replace <Nationality> and <War> with actual URIs obtained from previous queries

SELECT DISTINCT ?entity WHERE {
  VALUES (?nationality ?war) { (<Nationality> <War>) }
  
  OPTIONAL { ?entity rdfs:label ?nationality . FILTER (lang(?nationality) = ""en"") }
  OPTIONAL { ?entity rdfs:label ?war . FILTER (lang(?war) = ""en"") }
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
827,13,val,"Give me the child of the child, that is a royalty, of the parent of Charles Alexander, Grand Duke of Saxe-Weimar-Eisenach.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Charles_Alexander,_Grand_Duke_of_Saxe-Weimar-Eisenach> . ?v1 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://dbpedia.org/ontology/parent> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
SELECT ?royalty WHERE {
  # Step 1: Identify Charles Alexander
  ?charlesAlexander dbo:givenName ""Charles"" .
  ?charlesAlexander dbo:familyName ""Alexander"" .
  ?charlesAlexander dbo:title ""Grand Duke of Saxe-Weimar-Eisenach""@en .

  # Step 2: Find his parent (likely father)
  ?parent dbo:child ?charlesAlexander .

  # Step 3: Determine another child of this parent
  ?anotherChild dbo:parent ?parent .
  FILTER(?anotherChild != ?charlesAlexander)

  # Step 4: Identify royalty among these children
  ?royalty dbo:parent ?parent .
  ?royalty a dbo:Monarch .

  # Ensure the royalty is not Charles Alexander himself
  FILTER(?royalty != ?charlesAlexander)
}
```",3,4,4,3,1,3,2,20,0,0,8,0,0.0,0
492,19,val,"Give me the person decedent at the work of US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite and commander in Franco-Hova Wars.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> ?v0 . ?v0 <http://dbpedia.org/property/author> ""US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite""@en . <http://dbpedia.org/resource/Franco-Hova_Wars> <http://dbpedia.org/ontology/commander> ?result . }","```sparql
# Query to find the predecessor of Joseph C. Satterthwaite as US Assistant Secretary of State for African Affairs
SELECT ?predecessor WHERE {
  ?satterthwaite dbo:office dbr:Assistant_Secretary_of_State_for_African_Affairs.
  ?satterthwaite foaf:name ""Joseph C. Satterthwaite""@en.
  ?satterthwaite dbo:predecessor ?predecessor.
}

UNION

# Query to find the French commander in the Franco-Hova Wars
SELECT ?commander WHERE {
  ?war dbo:participatedIn dbr:Franco-Hova_Wars.
  ?war dbo:commander ?commander.
  ?commander dbo:nationality dbr:France.
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
696,13,val,"Give me the birth place of the member of the associated musical artist, that is an organisation and a group and a band, of The Boils.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. <http://dbpedia.org/resource/The_Boils> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/ontology/bandMember> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?member ?birthPlace WHERE {
  # Identify The Boils as a musical artist
  dbr:The_Boils dbo:genre ?genre .
  
  FILTER (strstarts(str(?genre), ""MusicalArtist""))

  # Find members associated with The Boils
  ?bandMember dbo:associatedBand dbr:The_Boils .

  # Get the birthplace of each member
  ?bandMember dbo:birthPlace ?birthPlace .

  # Ensure we are dealing with individuals (members)
  ?bandMember a dbo:Person .
  
  # Return the member and their birthplace
  BIND(?bandMember AS ?member)
}
```",3,6,4,3,1,3,2,20,0,0,6,0,0.0,0
701,36,val,"Give me the spouse of the father of the commander, that is a royalty, in Battle of Perire and parent of Meritamen.",SELECT ?result WHERE { <http://dbpedia.org/resource/Meritamen> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/spouse> ?v1 . ?v0 <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Battle_of_Perire> <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?spouse WHERE {
  ?battle dbo:commander ?commander .
  FILTER(CONTAINS(LCASE(?battle), ""perire"")) .

  ?commander dbo:father ?father .
  
  ?father dbo:spouse ?spouse .
  ?spouse rdfs:label ?spouseLabel .
  ?spouse dbo:child ?child .
  ?child rdfs:label ""Meritamen"" .

  FILTER(CONTAINS(LCASE(?spouseLabel), ""royalty""))
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
328,29,val,Give me the commander in the force of Ferenc Szálasi and awardee of Order of Suvorov and leader of People's Commissariat of Defense of the Soviet Union.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Order_of_Suvorov> . ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Ferenc_Szálasi> . ?v3 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/People's_Commissariat_of_Defense_of_the_Soviet_Union> <http://dbpedia.org/ontology/leader> ?result . },"```sparql
SELECT ?person WHERE {
  ?person dbo:awardeeOf dbr:Order_of_Suvorov .
  ?person dbo:leaderOf dbr:People's_Commissariat_of_Defence_of_the_Soviet_Union .
  ?person dbo:militaryCommanderFor dbr:Ferenc_Szálasi .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
404,21,val,"Give me the spouse of the person born, that is a royalty, as Princess Victoria Louise of Prussia and child of Ernest Augustus, Crown Prince of Hanover.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ernest_Augustus,_Crown_Prince_of_Hanover> . ?v1 <http://dbpedia.org/property/birthName> ""Princess Victoria Louise of Prussia""@en . ?v1 <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  ?person a dbo:Person ;
          foaf:name ""Victoria Louise of Prussia"" ;
          dbo:parent dbr:Ernest_Augustus,_Crown_Prince_of_Hanover .
  
  ?person dbo:spouse ?spouse .
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
666,11,val,"Give me the player in the manager, that is a sports manager, of 2016–17 Hull City A.F.C. season and figure known as The Three Lions.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ""The Three Lions""@en . ?v2 <http://dbpedia.org/ontology/team> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. <http://dbpedia.org/resource/2016–17_Hull_City_A.F.C._season> <http://dbpedia.org/ontology/manager> ?v2 . }","```sparql
SELECT ?manager ?threeLions WHERE {
  # Find the manager of Hull City A.F.C. during the 2016–17 season
  ?team dcterms:isPartOf ?season ;
        dbp:manager ?manager .
  FILTER (?team = <http://dbpedia.org/resource/Hull_City_A.FC> &&
          ?season = <http://dbpedia.org/resource/2016%E2%80%9317_Hull_City_A.F.C._season>) .

  # Find the figure known as ""The Three Lions""
  ?entity rdfs:label ?threeLions .
  FILTER (CONTAINS(LCASE(?threeLions), ""the three lions"") &&
          ?entity != <http://dbpedia.org/resource/The_Three_Lions_(song)> &&
          ?entity != <http://dbpedia.org/resource/England_national_football_team>)

}
```",3,4,4,2,2,3,2,20,0,0,2,0,0.0,0
778,13,val,"Give me the entity in the award of the awardee, that is American, of Wolf Prize in Medicine.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Wolf_Prize_in_Medicine> . ?result <http://dbpedia.org/ontology/location> ?v1 . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/United_States>. ?v0 <http://dbpedia.org/property/awards> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?entity ?label WHERE {
  ?entity dbo:award dbr:Wolf_Prize_in_Medicine .
  ?entity dbo:nationality dbr:United_States .
  OPTIONAL { ?entity rdfs:label ?label . FILTER (lang(?label) = 'en') }
}
```",3,4,4,3,1,3,2,20,0,4,18629,0.0,0.0,0
161,44,val,"Give me the commander in the force, that is an event, of Emilio Mola and military force of the force, that is a societal event and a military conflict, of Francisco Largo Caballero and military force of Rif War.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v4 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Rif_War> . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Emilio_Mola> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?event1 ?force1 ?event2 ?force2 WHERE {
  # Event involving Emilio Mola as a commander in a military force
  ?molaEvent dbo:commander dbr:Emilio_Mola .
  ?molaEvent dbo:militaryForce ?force1 .

  # Event involving Francisco Largo Caballero in a societal event and military conflict
  ?caballeroEvent dbo:participant dbr:Fran%C3%A7isco_Largo_Caballero .
  ?caballeroEvent rdf:type dbo:MilitaryConflict .
  ?caballeroEvent dbo:militaryForce ?force2 .

  # Additional condition for Rif War involvement
  OPTIONAL { 
    ?rifWar dbo:participatedIn dbr:Fran%C3%A7isco_Largo_Caballero .
    ?rifWar dbo:militaryForce ?rifForce .
    FILTER(?rifForce = ?force2)
  }
}
```",5,8,6,2,3,3,3,71,0,0,11,0,0.0,0
48,14,val,"Give me the band of the actor, that is a musical artist, of the show with Stacey Dash.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Stacey_Dash> . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/property/starring> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor ?band WHERE {
  # Find actors in the show ""Clueless""
  ?show dbo:title ""Clueless""@en .
  ?show dbo:starring ?actor .

  # Check if the actor is also a musical artist
  OPTIONAL { 
    ?artist dbo:birthName ?actor .
    ?artist dbo:band ?band .
  }

  FILTER(?actor != dbr:Stacey_Dash) # Exclude Stacey Dash herself
}
```",3,4,4,3,1,3,2,20,0,0,36,0,0.0,0
659,25,val,"Give me the military force of the force, that is a societal event and an event and a military conflict, of Rutger Jan Schimmelpenninck and commander in Battle of Leipzig.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> . <http://dbpedia.org/resource/Battle_of_Leipzig> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce WHERE {
  # Rutger Jan Schimmelpenninck's involvement in the Battle of Leipzig
  ?battle a dbo:MilitaryConflict ;
          dbo:participatedIn ?event .
  
  ?event dbo:location dbr:Battle_of_Leipzig ;
         dbo:commander ?schimmelpenninck .

  # Identify Schimmelpenninck's role and associated military force
  ?schimmelpenninck a dbo:Person ;
                    foaf:name ""Rutger Jan Schimmelpenninck""@en ;
                    dbo:militaryForce ?militaryForce .
  
  FILTER(?battle = dbr:Battle_of_Leipzig)
}
```",3,6,4,2,2,3,3,71,0,0,6,0,0.0,0
92,42,val,"Give me the band member of the reference, that is an artist, to Nevermore and band of the person born as Joseph Michael Furney and associated musical artist of Jim Sheppard.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://xmlns.com/foaf/0.1/name> ""Nevermore""@en . ?v1 <http://dbpedia.org/property/birthName> ""Joseph Michael Furney""@en . <http://dbpedia.org/resource/Jim_Sheppard> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/bandMember> ?v1 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?member WHERE {
  # Find members of the band Nevermore
  ?band dbo:bandMember ?member .
  
  FILTER (str(?band) = ""Nevermore"")

  # Ensure the member is an artist
  ?member a dbo:MusicalArtist .

  # Check if the member is associated with Warrel Dane and Jim Sheppard
  OPTIONAL { ?dane dbo:associatedBand ?band . }
  OPTIONAL { ?sheppard dbo:associatedBand ?band . }

  FILTER (str(?dane) = ""Warrel_Dane"" && str(?sheppard) = ""Jim_Sheppard"")
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
747,32,val,Give me the person born on the birth date of Pavlo Khudzik and band of the writer of Apollo (Hardwell song).,SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Pavlo_Khudzik> <http://dbpedia.org/ontology/birthDate> ?v1 . ?result <http://dbpedia.org/ontology/birthDate> ?v1 . <http://dbpedia.org/resource/Apollo_(Hardwell_song)> <http://dbpedia.org/property/writer> ?v3 . },"```sparql
# Step 1: Get Pavlo Khudzik's birth date
SELECT ?birthDate WHERE {
  dbpedia:Pavlo_Khudzik dbo:birthday ?birthDate .
}

# Step 2: Find the writer of ""Apollo"" by Hardwell and their band
SELECT ?writer ?band WHERE {
  # Assuming there is a DBpedia entry for the song ""Apollo"" by Hardwell
  dbpedia:Apollo_(song_by_Hardwell) dbo:lyricsBy ?writer .
  
  # Find the band associated with this writer
  ?writer dbo:memberOfBand ?band .
}

# Step 3: Get the person born on Pavlo Khudzik's birth date and the band of the writer
SELECT ?person ?band WHERE {
  # Use the birth date from step 1
  VALUES (?birthDate) { 
    (dbpedia:Pavlo_Khudzik dbo:birthday ?birthDate)
  }
  
  # Find a person born on that date
  ?person dbo:birthday ?birthDate .
  
  # Get the band of the writer from step 2
  dbpedia:Apollo_(song_by_Hardwell) dbo:lyricsBy ?writer .
  ?writer dbo:memberOfBand ?band .
}
```",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
232,35,val,"Give me the child of the person born as John Devon Roland Pertwee and native of the residence, that is a settlement and British, of Sylvie Bermann.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . <http://dbpedia.org/resource/Sylvie_Bermann> <http://dbpedia.org/property/residence> ?v1 . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v2 <http://dbpedia.org/property/birthName> ""John Devon Roland Pertwee""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  # Find Jon Pertwee and his child
  ?person dbo:name ""Jon Pertwee""@en .
  ?person dbo:child ?child .

  # Find Sylvie Bermann's place of residence or origin that is a British settlement
  ?sylvie dbo:name ""Sylvie Bermann""@en .
  ?sylvie dbo:nationality dbr:France .
  ?sylvie dbo:residenceOrOrigin ?place .
  ?place dbo:country dbr:United_Kingdom ;
         rdf:type dbo:Settlement .

  # Ensure the child is linked to the place
  ?child dbo:birthPlace ?place .
}
```",4,6,5,2,2,3,3,71,0,0,1,0,0.0,0
617,29,val,Give me the spouse of the child of Antiochus III the Great and parent of Nysa (wife of Pharnaces I of Pontus) and child of Antiochus III the Great.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Antiochus_III_the_Great> . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Nysa_(wife_of_Pharnaces_I_of_Pontus)> . <http://dbpedia.org/resource/Antiochus_III_the_Great> <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  ?person a dbo:Person ;
          dbo:father dbr:Antiochus_III_the_Great ;
          dbo:child dbr:Nysa_(wife_of_Pharaces_I_of_Pontus) .
  ?person dbo:spouse ?spouse .
}
```",4,4,5,2,3,3,3,71,0,0,2,0,0.0,0
427,26,val,Give me the party of the father of the alumnus of Massachusetts Institute of Technology.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Massachusetts_Institute_of_Technology> . ?v2 <http://dbpedia.org/ontology/party> ?result . ?v1 <http://dbpedia.org/property/father> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?father ?party WHERE {
  ?alumnus dbo:almaMater dbr:Massachusetts_Institute_of_Technology .
  ?alumnus foaf:parent ?father .
  OPTIONAL { ?father dbp:politicalParty ?party . }
}
```",3,3,4,3,1,3,3,71,0,0,7,0,0.0,0
179,13,val,"Give me the person born as the birth name of the child, that is a royalty, of Nakkhatra Mangala.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Nakkhatra_Mangala> . },"```sparql
SELECT ?child ?birthName WHERE {
  ?nak NFOAF:child ?child .
  FILTER(CONTAINS(LCASE(?nak), ""nakkhatra mangala"")) .
  
  OPTIONAL { ?child dbo:title ?title . FILTER(CONTAINS(LCASE(STR(?title)), ""royalty"")) }
  
  OPTIONAL { ?child foaf:name ?birthName }
}
```",3,4,4,3,1,3,2,20,0,0,1,0,0.0,0
378,28,val,"Give me the claim to fame of Louis des Balbes de Berton de Crillon, 1st Duke of Mahón and war of the person born as Carl Pontus Gahn and war of Joaquín Blake.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ""Carl Pontus Gahn""@en . ?v1 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Joaquín_Blake> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Louis_des_Balbes_de_Berton_de_Crillon,_1st_Duke_of_Mahón> <http://dbpedia.org/ontology/knownFor> ?result . }","```sparql
SELECT ?person ?fame WHERE {
  VALUES (?person ?label) {
    (db:Q12345 ""Louis des Balbes de Berton de Crillon, 1st Duke of Mahón"") 
    (db:Q67890 ""Carl Pontus Gahn"")
    (db:Q13579 ""Joaquín Blake"")
  }
  
  ?person rdfs:label ?label .
  OPTIONAL {
    ?person dbo:notableFor ?fame .
  }
  FILTER(LANG(?label) = 'en')
}
```",4,4,5,2,3,3,3,71,0,0,2,0,0.0,0
783,11,val,Give me the associated musical artist of the band member of Ofori Amponsah and band member of Ebony Reigns.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Ofori_Amponsah> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Ebony_Reigns> . },"```sparql
SELECT ?bandMemberOforiAmponsah ?associatedArtistOforiAmponsah 
       ?bandMemberEbonyReigns ?associatedArtistEbonyReigns
WHERE {
  # Find a band member of Ofori Amponsah and their associated artist
  ?person dbo:memberOfBand dbr:Ofori_Amponsah ;
          dbo:associatedMusicalArtist ?associatedArtistOforiAmponsah .
  
  # Find a band member of Ebony Reigns and their associated artist
  ?person2 dbo:memberOfBand dbr:Ebony_Reigns ;
           dbo:associatedMusicalArtist ?associatedArtistEbonyReigns .

  BIND(?person AS ?bandMemberOforiAmponsah)
  BIND(?person2 AS ?bandMemberEbonyReigns)
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
659,37,val,"Give me the military force of Napoleonic Wars and commander in the war, that is an event and a military conflict, of the figure known, that is a military unit and an organisation, as 'Polish Horse'.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/property/nickname> ""'Polish Horse'""@en . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Napoleonic_Wars> . ?v0 <http://dbpedia.org/ontology/battle> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce ?commander WHERE {
  ?event a dbo:MilitaryConflict ;
        rdfs:label ""Napoleonic Wars""@en .
  
  ?unit dbo:militaryUnitOf ?militaryForce ;
        rdfs:label ""Polish Horse""@en .

  OPTIONAL { 
    ?militaryForce dbo:commander ?commander .
  }
}
```",4,8,5,3,2,3,3,71,0,0,29,0,0.0,0
421,15,val,Give me the band member of the awardee of [[#Awards and nominations and person born as Edin Dervišhalidović.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/awards> ""[[#Awards and nominations""@en . ?result <http://dbpedia.org/property/birthName> ""Edin Dervišhalidović""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . }","```sparql
SELECT ?band WHERE {
  ?person foaf:name ""Edo Maajka""@en .
  ?person dbo:birthName ""Edin Dervišhalidović""@en .
  ?person dbo:award ?award .
  ?person dbo:memberOfBand ?band .
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
487,15,val,Give me the country of the administration of the person born on 1955-01-26 and administration of Phil Scott.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/leader> ?v0 . ?result <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/Phil_Scott> . ?v0 <http://dbpedia.org/ontology/birthDate> ""1955-01-26""^^<http://www.w3.org/2001/XMLSchema#date> . ?v1 <http://dbpedia.org/ontology/country> ?result . }","```sparql
# Query for the person born on January 26, 1955
SELECT ?person ?administration ?country WHERE {
  ?person dbo:birthDate ""1955-01-26""^^xsd:date .
  OPTIONAL { ?person dbo:officeHolder ?holder . }
  OPTIONAL { ?holder dbo:positionHeld ?administration . }
  OPTIONAL { ?administration dbo:country ?country . }
} LIMIT 1

UNION

# Query for Phil Scott
SELECT ?philScott ?administration ?country WHERE {
  wd:Q1234567 dbo:officeHolder ?holder .
  ?holder dbo:positionHeld ?administration .
  ?administration dbo:country ?country .
}
```

Note: Replace `wd:Q1234567` with the actual DBpedia identifier for Phil Scott.",4,4,5,3,2,3,2,20,0,0,1,0,0.0,0
404,19,val,"Give me the parent of Prince Ernest Augustus of Hanover (born 1914) and spouse of the person born, that is a royalty, as Princess Victoria Louise of Prussia.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ""Princess Victoria Louise of Prussia""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Prince_Ernest_Augustus_of_Hanover_(born_1914)> . }","```sparql
SELECT ?parent ?spouse WHERE {
  # Find the parent of Prince Ernest Augustus of Hanover
  dbpedia:Prince_Ernst_August_of_Hanover_(1914) dbo:father ?parent .
  
  # Find the spouse of Princess Victoria Louise of Prussia
  dbpedia:Princess_Victoria_Louise_of_Prussia dbo:spouse ?spouse .

  # Ensure that the parent and spouse are the same person
  FILTER (?parent = ?spouse)
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
747,24,val,Give me the band of the writer of Apollo (Hardwell song) and band of Shèna.,SELECT ?result WHERE { <http://dbpedia.org/resource/Shèna> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Apollo_(Hardwell_song)> <http://dbpedia.org/property/writer> ?v2 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
# Query for the writer of ""Apollo"" by Hardwell and their band
SELECT ?writer ?band WHERE {
  ?song dcterms:title ""Apollo""@en .
  ?song dbo:artist <http://dbpedia.org/resource/Hardwell> .
  ?song dbo:lyricist ?writer .
  OPTIONAL { ?writer dbo:musicGroup ?band }
}

# Query for the band associated with Shèna
SELECT ?band WHERE {
  ?person foaf:name ""Shèna""@en .
  ?person dbo:musicGroup ?band
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
54,18,val,Give me the parent of Thado Minsaw of Prome and child of Thinkhaya of Pagan and predecessor of Ameitta Thiri Maha Dhamma Dewi of Ava.,SELECT ?result WHERE { <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Ameitta_Thiri_Maha_Dhamma_Dewi_of_Ava> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Thado Minsaw's parent
  ?thadoMinsaw dbo:parent ?person .
  FILTER(STRSTARTS(STR(?thadoMinsaw), ""http://dbpedia.org/resource/Thado_Minsaw_of_Prome""))

  # Thinkhaya of Pagan's child
  ?thinkhaya dbo:child ?person .
  FILTER(STRSTARTS(STR(?thinkhaya), ""http://dbpedia.org/resource/Thinkhaya_of_Pagan""))

  # Predecessor of Ameitta Thiri Maha Dhamma Dewi
  ?ameittaThiriMahaDhammaDewi dbo:predecessor ?person .
  FILTER(STRSTARTS(STR(?ameittaThiriMahaDhammaDewi), ""http://dbpedia.org/resource/Ameitta_Thiri_Maha_Dhamma_Dewi_of_Ava""))
}
```",3,3,4,1,3,3,3,71,1,0,0,1.0,1.0,1.0
427,19,val,Give me the party of Giulio Andreotti and reference to the name of Italian People's Party (1994).,SELECT ?result WHERE { <http://dbpedia.org/resource/Italian_People's_Party_(1994)> <http://xmlns.com/foaf/0.1/name> ?v0 . <http://dbpedia.org/resource/Giulio_Andreotti> <http://dbpedia.org/ontology/party> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?party ?reference WHERE {
  VALUES ?person { dbr:Giulio_Andreotti }
  
  ?person dbo:politicalParty ?party .
  FILTER EXISTS { 
    ?party rdfs:label ""Italian People's Party (1994)""@en .
  }

  OPTIONAL {
    ?party dbo:wikiPageRedirects ?reference .
  }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
747,37,val,"Give me the band of the writer of the work, that is a song, of Amba Shepherd and band of Shèna.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Amba_Shepherd> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Shèna> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/writer> ?v3 . },"```sparql
SELECT DISTINCT ?ambaBand ?shenaBand WHERE {
  # Find the band associated with Amba Shepherd's work
  ?work dbo:writer dbr:Amba_Shepherd .
  ?work dbo:performer ?ambaBand .

  # Find the band associated with Shèna
  ?band dbo:member dbr:Shèna .
  
  BIND(?band AS ?shenaBand)
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
747,36,val,Give me the band of the person born as the persona of Shèna and person born on 1985-04-29.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Shèna> <http://xmlns.com/foaf/0.1/givenName> ?v0 . ?result <http://dbpedia.org/ontology/birthDate> ""1985-04-29""^^<http://www.w3.org/2001/XMLSchema#date> . ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
SELECT ?band WHERE {
  # Find Shena Easton and check for any bands she might have been part of
  ?person rdfs:label ""Shena Easton""@en .
  OPTIONAL { ?person dbo:musicGroup ?band . }

  UNION

  # Find Kelly Clarkson and check for any bands she might have been part of
  ?person2 rdfs:label ""Kelly Clarkson""@en .
  FILTER (YEAR(?person2 dbo:birthDate) = 1985 && MONTH(?person2 dbo:birthDate) = 4 && DAY(?person2 dbo:birthDate) = 29)
  OPTIONAL { ?person2 dbo:musicGroup ?band . }
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
10,12,val,Give me the professional in  and associated musical artist of Matt Colton and band member of Luke Vibert.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Luke_Vibert> . <http://dbpedia.org/resource/Matt_Colton> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?artist ?band 
WHERE {
  # Matt Colton's professional role and associated artist
  OPTIONAL {
    ?mattColton a dbo:Person ;
                foaf:name ""Matt Colton"" .
    ?mattColton dbo:profession dbr:Mastering_engineer .
    ?collaboration dbo:artist dbr:Matt_Colton ;
                  dbo:associatedMusicalArtist ?artist .
  }
  
  # Luke Vibert's band membership
  OPTIONAL {
    ?lukeVibert a dbo:Person ;
                foaf:name ""Luke Vibert"" .
    ?bandMembership dbo:musicalArtist ?lukeVibert ;
                    dbo:band ?band .
  }
}
```",3,3,4,1,3,2,3,28,0,0,1,0,0.0,0
528,28,val,Give me the war of the military force of Battle of Pisagua and war of Orozimbo Barbosa and force of Narciso Campero.,SELECT ?result WHERE { <http://dbpedia.org/resource/Orozimbo_Barbosa> <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Pisagua> . ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Narciso_Campero> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war WHERE {
  VALUES ?battleOrPerson { 
    dbr:Battle_of_Pisagua 
    dbr:Orozimbo_Barrosa 
    dbr:Narciso_Campero
  }
  
  ?battleOrPerson dbo:partOf ?war .
  FILTER (strStarts(str(?war), ""War of the Pacific""))
}
```",4,4,5,2,3,3,3,71,0,0,2,0,0.0,0
435,12,val,"Give me the work of Article 62, Section IV of Constitution of Iceland and region of Greenwich Mean Time and territory administered from Reykjavík.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Greenwich_Mean_Time> . ?result <http://dbpedia.org/property/author> ""Article 62, Section IV of Constitution of Iceland""@en . ?result <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Reykjavík> . }","```sparql
# Query for Article 62, Section IV of the Constitution of Iceland
SELECT ?article WHERE {
  ?constitution dcterms:title ""Constitution of Iceland""@en .
  ?constitution dbo:section ?section .
  ?section rdfs:label ""Article 62, Section IV""@en .
  ?section dbo:textContent ?article .
}

# Query for regions associated with Greenwich Mean Time
SELECT DISTINCT ?region WHERE {
  ?timeZone dcterms:title ""Greenwich Mean Time""@en ;
            dbo:hasTimezoneRegion ?region .
}

# Query for territories administered from Reykjavík
SELECT DISTINCT ?territory WHERE {
  ?country dcterms:title ""Iceland""@en ;
           dbo:administrativeCapital <http://dbpedia.org/resource/Reykjavík> ;
           dbo:administers ?territory .
}
```",3,3,4,1,3,2,3,28,0,0,1,0,0.0,0
485,13,val,"Give me the birth place of Thomas Warner (poet) and entity in the region, that is a country, of Western European Time.",SELECT ?result WHERE { <http://dbpedia.org/resource/Thomas_Warner_(poet)> <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Western_European_Time> . ?result <http://dbpedia.org/ontology/country> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
SELECT ?birthPlace ?country WHERE {
  ?poet dbo:birthPlace ?birthPlace .
  ?poet rdfs:label ""Thomas Warner (poet)""@en .
  
  OPTIONAL { 
    ?region dbo:location ?birthPlace .
    ?country dbo:timeZone ?timezone ;
             dbo:locatedIn ?region .
    FILTER(CONTAINS(LCASE(str(?timezone)), ""western european time""))
  }
}
```",3,4,4,2,2,2,3,28,1,1,0,0.5,1.0,0.6666666666666666
487,11,val,Give me the country of the administration of Patricia McCoy and administration of Phil Scott.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/Phil_Scott> . ?v2 <http://dbpedia.org/ontology/country> ?result . ?v2 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Patricia_McCoy> . },"```sparql
SELECT DISTINCT ?country WHERE {
  VALUES ?person { 
    dbr:Patricia_McCoy (dbr:Phil_Scott) 
  }
  
  ?person dbo:office ?office .
  OPTIONAL { ?office dbo:country ?country . }
  UNION
  ?person foaf:nationality ?nationality .
  ?nationality dbp:countryName ?country .

  FILTER(?country IN (dbr:United_States))
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
959,37,val,"Give me the native of the residence, that is a country, of the leader, that is a politician, of 2010 Japanese House of Councillors election and manager of 2013 Júbilo Iwata season.",SELECT ?result WHERE { <http://dbpedia.org/resource/2013_Júbilo_Iwata_season> <http://dbpedia.org/ontology/manager> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v1 <http://dbpedia.org/property/residence> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/2010_Japanese_House_of_Councillors_election> <http://dbpedia.org/property/leader> ?v1 . },"```sparql
# Step 1: Identify the leader of the 2010 Japanese House of Councillors election
SELECT ?leader WHERE {
  ?event dcterms:title ""Japanese House of Councillors election, 2010"" .
  ?event dbo:winner ?leader .
  ?leader rdf:type dbo:Politician .
}

# Step 2: Identify the manager of Júbilo Iwata during the 2013 season
SELECT ?manager WHERE {
  ?team dcterms:title ""Júbilo Iwata"" .
  ?season dcterms:isPartOf ?team ;
          dbo:manager ?manager ;
          dbo:year ""2013""^^xsd:gYear .
}

# Step 3: Find the residences of these individuals
SELECT DISTINCT ?residence WHERE {
  VALUES ?individual { ?leader ?manager }
  ?individual foaf:currentHomeLocation ?residence .
}

# Step 4: Check if any residence is a country and find natives
SELECT DISTINCT ?nativeCountry WHERE {
  ?residence rdf:type dbo:Country .
  ?person dbo:nationality ?nativeCountry ;
          foaf:currentHomeLocation ?residence .
}
```",4,6,5,3,2,3,3,71,0,0,3,0,0.0,0
314,15,val,Give me the commander in Spanish Civil War and person deceased at the headquarter of House of Sombrerete.,SELECT ?result WHERE { <http://dbpedia.org/resource/House_of_Sombrerete> <http://dbpedia.org/ontology/location> ?v1 . ?result <http://dbpedia.org/ontology/restingPlace> ?v1 . <http://dbpedia.org/resource/Spanish_Civil_War> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
# Query for Francisco Franco as a commander in the Spanish Civil War
SELECT ?person WHERE {
  ?person dbo:occupation dbr:General_(Spain) .
  ?person dbo:wikiPageWikiLink dbr:Spanish_Civil_War .
  ?person rdfs:label ""Francisco Franco""@en .
}

UNION

# Query for José María Morelos deceased at the House of Sombrerete
SELECT ?person WHERE {
  ?person dbo:deathPlace dbr:Casa_de_la_Corregidora_(Zacatecas) .
  ?person rdfs:label ""José María Morelos""@en .
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
701,19,val,Give me the parent of the child of Nefertari and parent of Henuttawy (19th dynasty).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Henuttawy_(19th_dynasty)> . ?v0 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Nefertari> <http://dbpedia.org/ontology/child> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  # Nefertari's child (Meritamen)
  OPTIONAL { 
    dbr:Meritamen dbo:mother dbr:Nefertari .
    dbr:Meritamen dbo:father ?parent1 .
  }
  
  # Henuttawy
  OPTIONAL {
    dbr:Henuttawy dbo:mother dbr:Nefertari .
    dbr:Henuttawy dbo:father ?parent2 .
  }

  FILTER (?parent1 = ?parent2)
  BIND(?parent1 AS ?parent)
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
391,38,val,"Give me the actor of the movie, that is a movie and a work and a television show, with Roz Ryan and actor of the claim to fame, that is a work, of Michael Ballhaus.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. <http://dbpedia.org/resource/Michael_Ballhaus> <http://dbpedia.org/ontology/knownFor> ?v3 . ?v2 <http://dbpedia.org/property/starring> ?result . ?v3 <http://dbpedia.org/ontology/starring> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Roz_Ryan> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. },"```sparql
# Step 1: Find a movie that is also a work and a television show
SELECT ?movie WHERE {
  ?movie dbo:type dbr:Film .
  ?movie dbo:type dbr:TelevisionShow .
}

# Step 2: Find actors who played in this movie with Roz Ryan
SELECT DISTINCT ?actor WHERE {
  ?movie dbo:starring ?rozRyan .
  ?rozRyan foaf:name ""Roz Ryan"" .
  
  ?movie dbo:starring ?actor .
  FILTER(?actor != ?rozRyan)
}

# Step 3: Find Michael Ballhaus's claim to fame
SELECT DISTINCT ?work WHERE {
  ?ballhaus dbo:claimToFame ?work .
  ?ballhaus foaf:name ""Michael Ballhaus"" .
}

# Step 4: Find actors from Michael Ballhaus's claim to fame
SELECT DISTINCT ?actor WHERE {
  ?work dbo:starring ?actor .
}
```",4,8,5,2,2,3,3,71,0,0,1,0,0.0,0
142,7,val,Give me the birthplace of George Tokoro and entity in the region of Japan Standard Time.,SELECT ?result WHERE { <http://dbpedia.org/resource/George_Tokoro> <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Japan_Standard_Time> . ?result <http://dbpedia.org/ontology/country> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace ?jstEntity WHERE {
  # Query for George Tokoro's birthplace
  OPTIONAL { 
    dbr:George_Tokoro dbo:birthPlace ?birthPlace .
  }
  
  # Query for an entity in the Japan Standard Time region
  OPTIONAL {
    ?jstEntity dbo:timeZone dbr:Japan_Standard_Time ;
               a dbo:Place .
  }
}
```",3,3,4,2,2,2,2,9,1,2254,0,0.0004434589800443459,1.0,0.0008865248226950354
696,14,val,Give me the landmark at elevation of the award of the commander in Battle of Chishui River.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Battle_of_Chishui_River> <http://dbpedia.org/ontology/commander> ?v2 . ?result <http://dbpedia.org/ontology/elevation> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?battle ?commander ?award ?landmark WHERE {
  # Find the Battle of Chishui River and its commander
  ?battle a dbo:MilitaryConflict ;
          rdfs:label ""Battle of Chishui River""@en .
  
  OPTIONAL { 
    ?battle dbo:commander ?commander .
  }
  
  # Find awards associated with the commander
  OPTIONAL {
    ?award dbo:recipient ?commander ;
           dbo:name ?awardName .
  }
  
  # Find landmarks at a certain elevation (hypothetical, as DBpedia might not have this data)
  OPTIONAL {
    ?landmark dbo:elevation ?elevation .
    FILTER(?elevation = ?someElevation) # Placeholder for actual elevation value
  }
}
```

Note: The query assumes that there is some way to determine the ""elevation"" of an award, which might not be directly available in DBpedia. Adjustments may be needed based on the actual data available.",3,3,4,3,1,3,2,20,0,0,1731,0,0.0,0
55,17,val,"Give me the band of Newsted and band member of the band member, that is a band and a group, of San Francisco Symphony.",SELECT ?result WHERE { <http://dbpedia.org/resource/Newsted> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/San_Francisco_Symphony> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band WHERE {
  # Jason Newsted's band
  dbr:Jason_Newsted dbo:memberOf dbr:Metallica .
  
  # Metallica is a band and has performed with the San Francisco Symphony
  dbr:Metallica a dbo:Band ;
                dbo:performerIn dbr:San_Francisco_Symphony .

  # Ensure it's also considered a group
  dbr:Metallica a dbo:MusicalGroup .
  
  BIND(dbr:Metallica AS ?band)
}
```",3,5,4,2,2,2,3,28,0,0,3,0,0.0,0
54,42,val,"Give me the parent of Thado Minsaw of Prome and child of the father of Soe Min Wimala Dewi and predecessor of the child, that is an office holder and a royalty, of Thihapate of Mohnyin.",SELECT ?result WHERE { <http://dbpedia.org/resource/Soe_Min_Wimala_Dewi> <http://dbpedia.org/property/father> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Thihapate_of_Mohnyin> . <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/successor> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Step 1: Find the parent of Thado Minsaw of Prome
  ?thadoMinsaw dbo:parent ?parentOfThadoMinsaw .
  FILTER(STRSTARTS(STR(?thadoMinsaw), ""http://dbpedia.org/resource/Thado_Minsaw_of_Prome""))

  # Step 2: Find the father of Soe Min Wimala Dewi
  ?soeMinWimalaDewi dbo:father ?fatherOfSoeMinWimalaDewi .
  FILTER(STRSTARTS(STR(?soeMinWimalaDewi), ""http://dbpedia.org/resource/Soe_Min_Wimala_Dewi""))

  # Step 3: Find the child of Soe Min Wimala Dewi's father
  ?fatherOfSoeMinWimalaDewi dbo:child ?childOfFather .

  # Step 4: Find the predecessor of this child
  ?predecessor dbo:succeededBy ?childOfFather .

  # Step 5: Ensure the person is an office holder and royalty related to Thihapate of Mohnyin
  ?thihapate dbo:officeHolder ?person .
  ?thihapate dbo:royalty ?person .
  FILTER(STRSTARTS(STR(?thihapate), ""http://dbpedia.org/resource/Thihapate_of_Mohnyin""))

  # Step 6: Combine all conditions
  VALUES ?person { ?parentOfThadoMinsaw ?childOfFather ?predecessor }
}
```",5,7,6,2,3,3,3,71,0,0,1,0,0.0,0
378,23,val,Give me the war of the person born as the birth name of Carl Pontus Gahn.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ?v2 . ?v0 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/property/birthName> ?v2 . },"```sparql
SELECT ?war WHERE {
  ?person rdfs:label ""Carl Pontus Gahn""@en .
  ?person foaf:name ?birthName .
  FILTER(?birthName = ""Carl Pontus Hultén""@en)
  ?person dbo:militaryConflict ?war .
}
```",3,3,4,3,1,3,3,71,0,0,12,0,0.0,0
360,14,val,"Give me the writer of The Roaring Silence and native of the death place, that is a settlement, of Winnie Madikizela-Mandela.",SELECT ?result WHERE { <http://dbpedia.org/resource/Winnie_Madikizela-Mandela> <http://dbpedia.org/ontology/deathPlace> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . <http://dbpedia.org/resource/The_Roaring_Silence> <http://dbpedia.org/property/writer> ?result . },"```sparql
SELECT ?author ?deathPlace WHERE {
  # Finding the author of ""The Roaring Silence""
  ?book dcterms:title ""The Roaring Silence""@en .
  ?book dbo:author ?author .

  # Finding the death place of Winnie Madikizela-Mandela and ensuring it is a settlement
  wd:Q10569 dbo:deathPlace ?deathPlace .
  ?deathPlace wdt:P31/wdt:P279* wd:Q515 . # Ensuring it's a settlement (instance of or subclass of Q515, which represents ""settlement"")
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
391,34,val,"Give me the actor of All About the Andersons and native of the figure known as the nick name of Jackson, Tennessee.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/nickname> ?v2 . <http://dbpedia.org/resource/Jackson,_Tennessee> <http://xmlns.com/foaf/0.1/nick> ?v2 . <http://dbpedia.org/resource/All_About_the_Andersons> <http://dbpedia.org/property/starring> ?result . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . }","```sparql
# Step 1: Find the actor of ""All About the Andersons""
SELECT ?actor WHERE {
  ?movie dcterms:title ""All About the Andersons""@en .
  ?movie dbo:starring ?actor .
}

UNION

# Step 2: Identify Jackson, Tennessee's nickname and find natives
SELECT DISTINCT ?person WHERE {
  # Find the nickname of Jackson, TN
  ?city rdfs:label ""Jackson""@en ;
        dbo:nickname ?nickname .

  # Find people native to that city
  ?person dbo:birthPlace ?city .
  
  # Filter for actors (assuming they have a role in movies)
  ?person dbo:starring ?movie .
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
16,42,val,Give me the spouse of the person born as Ted Martin McGinley and professional in Actress and person born as the birth name of Gigi Rice.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/occupation> ""Actress""@en . ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Gigi_Rice> <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://dbpedia.org/property/birthName> ""Ted Martin McGinley""@en . }","```sparql
# Query to find the spouse of Brooke Shields (born as Ted Martin McGinley)
SELECT ?spouse WHERE {
  wd:Q1234 wdt:P26 ?spouse .
}

UNION

# Query to find the spouse of Gigi Rice's husband
SELECT ?spouse WHERE {
  ?person wdt:P735 wd:Q12345 . # Assuming Q12345 is the DBpedia ID for Gigi Rice
  ?person wdt:P26 ?husband .
  ?husband wdt:P26 ?spouse .
}
```

Note: Replace `wd:Q1234` with the actual DBpedia resource identifier for Brooke Shields and `wd:Q12345` with that of Gigi Rice. These identifiers can be found by searching their names on DBpedia.",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
314,17,val,Give me the awardee of the award of Sergei Makovetsky and commander in Spanish Civil War.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ?v1 . <http://dbpedia.org/resource/Spanish_Civil_War> <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Sergei_Makovetsky> <http://dbpedia.org/property/awards> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person WHERE {
  # Find the award received by Sergei Makovetsky
  dbr:Sergei_Makovetsky dbo:awardReceived ?award .

  # Find commanders in the Spanish Civil War
  ?commander a dbo:MilitaryPerson ;
             dbo:participatedInMilitaryConflict dbr:Spanish_Civil_War .

  # Check if any person is both an awardee of Sergei Makovetsky's award and a commander in the Spanish Civil War
  ?person dbo:awardReceived ?award .
  ?person = ?commander .
}
```",3,3,4,2,2,2,3,28,0,0,2,0,0.0,0
360,13,val,"Give me the writer of the work, that is an album, of Dave Flett and native of Johannesburg.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Album>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Johannesburg> . ?v1 <http://dbpedia.org/property/author> ""Dave Flett""@en . ?v1 <http://dbpedia.org/property/writer> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?album ?writer WHERE {
  ?artist a dbo:MusicArtist ;
          foaf:name ""Dave Flett"" .
  
  ?artist dbo:album ?album .

  ?person foaf:nationality <http://dbpedia.org/resource/Johannesburg> ;
          dbo:birthPlace <http://dbpedia.org/resource/Johannesburg> .

  ?album dbo:writer ?writer ;
         dbo:contributor ?person .
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
184,33,val,"Give me the child of the child of the parent, that is a royalty, of Archduke Ladislaus Philipp of Austria and parent of Géza von Habsburg.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v3 . ?v3 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Géza_von_Habsburg> . <http://dbpedia.org/resource/Archduke_Ladislaus_Philipp_of_Austria> <http://dbpedia.org/ontology/parent> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?grandchild WHERE {
  # Step 1: Identify Archduke Ladislaus Philipp of Austria
  ?ladislaus a dbo:Person ;
            foaf:name ""Archduke Ladislaus Philipp of Austria""@en .

  # Step 2: Find his parent
  ?parent dbo:spouse|dbo:child ?ladislaus .

  # Step 3: Find the child of that parent (sibling or another child)
  ?sibling dbo:spouse|dbo:child ?parent ;
           a dbo:Person .

  # Ensure this sibling is not Ladislaus himself
  FILTER(?sibling != ?ladislaus)

  # Step 4: Identify the child of this sibling
  ?grandchild dbo:spouse|dbo:child ?sibling ;
              a dbo:Person .

  # Step 5: Filter for royalty
  ?grandchild dbp:title ?title .
  FILTER(CONTAINS(LCASE(?title), ""royalty"") || CONTAINS(LCASE(?title), ""king"") || CONTAINS(LCASE(?title), ""queen"") || CONTAINS(LCASE(?title), ""prince"") || CONTAINS(LCASE(?title), ""princess""))

  # Step 6: Ensure the person is also a parent of Géza von Habsburg
  ?geza dbo:spouse|dbo:child ?grandchild .
  ?geza a dbo:Person ;
        foaf:name ""Géza von Habsburg""@en .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
427,32,val,Give me the party of the father of Lamberto Andreotti and reference to the name of Italian People's Party (1994).,SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v1 . <http://dbpedia.org/resource/Italian_People's_Party_(1994)> <http://xmlns.com/foaf/0.1/name> ?v1 . <http://dbpedia.org/resource/Lamberto_Andreotti> <http://dbpedia.org/property/father> ?v3 . ?v3 <http://dbpedia.org/ontology/party> ?result . },"```sparql
SELECT ?father ?party WHERE {
  ?person dbo:birthName ""Lamberto Andreotti""@it .
  ?person dbo:father ?father .
  ?father foaf:name ?name .
  OPTIONAL { 
    ?association dbo:agent ?father ;
                 dbo:politicalParty ?party .
    FILTER(CONTAINS(LCASE(?party), ""italian people's party""))
  }
}
```",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
16,31,val,Give me the spouse of the person born as the birth name of Ted McGinley and professional in Actress.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/occupation> ""Actress""@en . }","```sparql
SELECT ?spouse WHERE {
  ?person foaf:name ""Edward Joseph McGinley""@en .
  ?person dbo:profession dbr/Actress .
  ?person dbo:spouse ?spouse .
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
232,28,val,Give me the native of London and child of the person born as John Devon Roland Pertwee and actor of Dog Soldiers (film).,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ""John Devon Roland Pertwee""@en . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/London> . ?v1 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Dog_Soldiers_(film)> <http://dbpedia.org/ontology/starring> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child ?filmRole WHERE {
  # Find Jon Pertwee's birthplace and child
  VALUES (?actor) { dbr:Jon_Pertwee }
  ?actor dbo:birthPlace dbr:London .
  ?actor dbo:child ?child .

  # Check if the child acted in ""Dog Soldiers""
  ?filmRole dbo:starring ?child ;
            dbp:title ""Dog Soldiers""^^xsd:string .

  # Ensure the child is also native to London
  ?child dbo:birthPlace dbr:London .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
747,33,val,"Give me the band of the writer of the work, that is a song, of Amba Shepherd and person born on 1985-04-29.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/birthDate> ""1985-04-29""^^<http://www.w3.org/2001/XMLSchema#date> . ?v0 <http://dbpedia.org/property/writer> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Amba_Shepherd> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?band WHERE {
  ?person dbo:birthday ""1985-04-29""^^xsd:date .
  ?work dbo:writer dbr:Amba_Shepherd ;
        a dbo:Song .
  ?person dbo:work ?work .
  ?ambashepherd dbo:member ?band .
  FILTER(?ambashepherd = dbr:Amba_Shepherd)
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
959,40,val,"Give me the manager of 2013 Júbilo Iwata season and member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of the person born in 1958 and native of Japan.","SELECT ?result WHERE { <http://dbpedia.org/resource/2013_Júbilo_Iwata_season> <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v3 <http://dbpedia.org/ontology/birthYear> ""1958""^^<http://www.w3.org/2001/XMLSchema#gYear> . ?v3 <http://dbpedia.org/ontology/almaMater> ?v1 . ?result <http://dbpedia.org/ontology/team> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Japan> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. }","```sparql
SELECT ?manager ?university WHERE {
  # Find the manager of Júbilo Iwata in 2013
  ?team dcterms:isPartOf ?season ;
        dbp:clubName ""Júbilo Iwata""@en .
  ?season dbo:manager ?manager .

  FILTER(year(?season) = 2013)

  # Ensure the manager is Japanese and born in 1958
  ?manager foaf:nationality <http://dbpedia.org/resource/Japan> ;
           dbp:birthYear ""1958""^^xsd:gYear .
  
  # Find the alma mater of the manager that is a Japanese university
  ?manager dbo:almaMater ?university .
  ?university rdf:type <http://dbpedia.org/ontology/Organisation> ,
               <http://dbpedia.org/ontology/EducationalOrganization> ;
              dbp:country ""Japan"" .

}
```",5,9,6,3,3,3,3,71,0,0,1,0,0.0,0
378,34,val,"Give me the war of the person born as the birth name of Carl Pontus Gahn and claim to fame of Louis des Balbes de Berton de Crillon, 1st Duke of Mahón.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/property/birthName> ?v2 . ?v1 <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Louis_des_Balbes_de_Berton_de_Crillon,_1st_Duke_of_Mahón> <http://dbpedia.org/ontology/knownFor> ?result . }","```sparql
SELECT ?war WHERE {
  ?person1 foaf:name ""Carl Pontus Gahn""@en .
  ?person1 dbo:occupation dbr:Chemist .
  ?person2 foaf:name ""Louis des Balbes de Berton de Crillon, 1st Duke of Mahón""@en .
  ?person2 dbo:birthName ?birthName .
  ?person2 dbo:claimToFame ?fame .
  FILTER(?fame = dbr:War_of_the_Spanish_Succession)
  
  OPTIONAL { ?person1 dbo:participatedIn ?war . }
  OPTIONAL { ?person2 dbo:participatedIn ?war . }

  FILTER EXISTS { ?war rdfs:label ?label . FILTER(CONTAINS(LCASE(?label), ""spanish succession"")) }
}
```",4,4,5,3,2,3,3,71,0,0,2,0,0.0,0
485,12,val,Give me the birth place of Thomas Warner (poet) and entity in Nottinghamshire and entity in United Kingdom.,SELECT ?result WHERE { <http://dbpedia.org/resource/Thomas_Warner_(poet)> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Nottinghamshire> . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace WHERE {
  ?poet a dbo:Poet ;
        foaf:name ""Thomas Warner"" .
  
  ?poet dbo:birthPlace ?birthPlace .

  ?birthPlace dbo:locatedIn dbr:Nottinghamshire .
  dbr:Nottinghamshire dbo:country dbr:United_Kingdom .
}
```",3,3,4,1,3,2,3,28,0,0,1,0,0.0,0
767,36,val,"Give me the entity in Baden-Württemberg and reference to the alter ego of the persona, that is a fictional character, of Matthew Burland.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/state> <http://dbpedia.org/resource/Baden-Württemberg> . ?v0 <http://dbpedia.org/property/alterEgo> ""Matthew Burland""@en . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v0 <http://dbpedia.org/property/alterEgo> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?character ?entityInBadenWurttemberg WHERE {
  # Assuming Matthew Burland has a fictional alter ego, we need to find it first.
  # This part is hypothetical as there might not be direct data available.
  
  # Hypothetical query for Matthew Burland's alter ego
  OPTIONAL { 
    ?burland dbo:alterEgo ?character .
    FILTER (strstarts(str(?character), ""Matthew Burland""))
  }
  
  # Find entities in Baden-Württemberg related to the character
  ?entityInBadenWurttemberg dbo:location dbr:Baden-W%C3%BCrttemberg .
  OPTIONAL {
    ?entityInBadenWurttemberg dbo:relatedTo ?character .
  }
  
  # Ensure we get results only if both conditions are met
  FILTER(?character != """" && ?entityInBadenWurttemberg != """")
}
```",4,5,5,3,2,3,3,71,0,0,7,0,0.0,0
959,19,val,"Give me the native of Japan and member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of Eiji Ōtsuka.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Eiji_Ōtsuka> <http://dbpedia.org/ontology/almaMater> ?v2 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Japan> . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?result <http://dbpedia.org/ontology/team> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?almaMater WHERE {
  dbr:Eiji_Ōtsuka dbo:nationality dbr:Japan .
  dbr:Eiji_Ōtsuka dbo:almaMater ?almaMater .
  ?almaMater a dbo:University ;
             dbo:country dbr:Japan .
}
```",3,7,4,2,2,3,3,71,0,0,84,0,0.0,0
487,13,val,Give me the country of the administration of the person born on 1955-01-26.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthDate> ""1955-01-26""^^<http://www.w3.org/2001/XMLSchema#date> . ?v1 <http://dbpedia.org/ontology/country> ?result . ?v1 <http://dbpedia.org/property/leader> ?v0 . }","```sparql
SELECT ?country WHERE {
  ?person dbo:birthDate ""1955-01-26""^^xsd:date .
  ?person dbo:occupation dbr:Chancellor_of_Germany .
  ?person dbo:country dbr:Germany .
  OPTIONAL { ?person foaf:nationality ?nationality . }
  FILTER EXISTS {
    ?administration dbo:administrator ?person ;
                   dbo:country ?country .
  }
}
```",3,3,4,3,1,3,2,20,0,0,1,0,0.0,0
820,15,val,Give me the professional in the award of the author of Understanding Comics and child of Jack Schwartzman.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Jack_Schwartzman> . <http://dbpedia.org/resource/Understanding_Comics> <http://dbpedia.org/ontology/author> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child ?award WHERE {
  # Identify Scott McCloud
  VALUES (?author) { dbr:Scott_McCloud }
  
  # Find children of Scott McCloud
  ?author dbo:child ?child .
  
  # Check if the child has professional involvement in an award
  OPTIONAL {
    ?child dbo:award ?award .
  }

  FILTER(?award != """")
}
```",4,4,5,3,2,3,2,20,0,0,1,0,0.0,0
827,15,val,"Give me the father of William Ernest, Grand Duke of Saxe-Weimar-Eisenach and child of the child, that is a royalty, of the parent of Charles Alexander, Grand Duke of Saxe-Weimar-Eisenach.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/parent> ?v0 . ?v1 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/William_Ernest,_Grand_Duke_of_Saxe-Weimar-Eisenach> <http://dbpedia.org/property/father> ?result . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Charles_Alexander,_Grand_Duke_of_Saxe-Weimar-Eisenach> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father ?grandchild WHERE {
  # Step 1: Get the father of William Ernest, Grand Duke of Saxe-Weimar-Eisenach
  dbr:William_Ernst,_Grand_Duke_of_Saxe-Weimar-Eisenach dbo:father ?father .

  # Step 2: Get Charles Alexander's parent (William Ernest's grandfather)
  dbr:Charles_Alexander,_Grand_Duke_of_Saxe-Weimar-Eisenach dbo:parent ?grandfather .

  # Step 3: Find a royal descendant two generations down from Charles Alexander's parent
  ?grandchild dbo:parent ?intermediateParent .
  ?intermediateParent dbo:parent ?grandfather .
  FILTER EXISTS { ?grandchild dbo:royalty true } # Assuming there is a property indicating royalty

}
```",4,5,5,3,2,3,2,20,0,0,1,0,0.0,0
391,26,val,"Give me the actor of the claim to fame, that is a work, of the spouse of Sherry Hormann.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/knownFor> ?v2 . <http://dbpedia.org/resource/Sherry_Hormann> <http://dbpedia.org/ontology/spouse> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/ontology/starring> ?result . },"```sparql
# Step 1: Find Sherry Hormann's spouse
SELECT ?spouse WHERE {
  wd:Q1234567 wdt:P26 ?spouse .
}

# Assuming we find a spouse with QID ?spouse, proceed to step 2

# Step 2: Identify the claim to fame (a notable work) of the spouse
SELECT ?work WHERE {
  ?spouse wdt:P50 ?work .
  FILTER EXISTS { ?work wdt:P31 wd:Q11424 } # Filter for works that are films or books
}

# Assuming we find a work with QID ?work, proceed to step 3

# Step 3: Find the actors involved in that specific work
SELECT DISTINCT ?actor WHERE {
  ?work wdt:P161 ?cast .
  ?cast wdt:P175 ?actor .
}
```

Note: Replace `wd:Q1234567` with Sherry Hormann's actual DBpedia QID. The queries assume that the spouse has a notable work listed under property P50 (works) and that the work is either a film or book (P31). The actors are retrieved using properties P161 (cast member) and P175 (actor).",3,4,4,3,1,3,3,71,0,0,20,0,0.0,0
659,19,val,"Give me the commander in Battle of Leipzig and commander in the force of Arthur Wellesley, 1st Duke of Wellington.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Arthur_Wellesley,_1st_Duke_of_Wellington> . <http://dbpedia.org/resource/Battle_of_Leipzig> <http://dbpedia.org/ontology/commander> ?result . }","```sparql
# Query for the commander in the Battle of Leipzig
SELECT ?commander WHERE {
  ?battle dbp:name ""Battle of Leipzig""@en .
  ?battle dbo:participatedIn ?event .
  ?event dbo:commander ?commander .
}

UNION

# Query for a commander under Arthur Wellesley, 1st Duke of Wellington
SELECT ?subordinateCommander WHERE {
  ?welsh dbp:name ""Arthur Wellesley, 1st Duke of Wellington""@en ;
         dbo:commander ?subordinateCommander .
}
```",3,3,4,2,2,3,3,71,0,0,19,0,0.0,0
617,33,val,"Give me the child of Antiochus III the Great and spouse of the child of the successor, that is a royalty, of Antiochus (son of Antiochus III the Great).",SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Antiochus_III_the_Great> . ?v0 <http://dbpedia.org/ontology/child> ?v3 . <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/successor> ?v0 . ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
SELECT ?spouse WHERE {
  wd:Q1116 wdt:P31 wd:Q5;       # Antiochus III the Great is a human
           wdt:P40 ?child.      # Child of Antiochus III the Great

  ?child wdt:P31 wd:Q5;         # The child is a human
         rdfs:label ""Antiochus IV Epiphanes""@en. # Specifically, Antiochus IV Epiphanes

  ?successor wdt:P22 ?child;    # Successor of Antiochus IV Epiphanes
             wdt:P31 wd:Q5.      # The successor is a human

  ?successor rdfs:label ""Demetrius I Soter""@en. # Specifically, Demetrius I Soter

  ?successor wdt:P26 ?spouse;   # Spouse of Demetrius I Soter
             ?spouse wdt:P31 wd:Q5. # The spouse is a human (royalty)
}
```",4,5,5,3,2,3,3,71,0,0,4,0,0.0,0
617,12,val,"Give me the parent of the father, that is a royalty, of Richeza of Poland, Queen of Hungary and child of Doubravka of Bohemia.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v0 . <http://dbpedia.org/resource/Richeza_of_Poland,_Queen_of_Hungary> <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Doubravka_of_Bohemia> <http://dbpedia.org/ontology/child> ?result . }","```sparql
SELECT ?parent WHERE {
  wd:Q123456 wdt:P22 ?father . # Richeza of Poland, Queen of Hungary (replace Q123456 with the actual DBpedia ID)
  ?father wdt:P31/wdt:P279* wd:Q5 . # The father is a human or subclass thereof
  ?father wdt:P39 ?royaltyRole . # Check if the father has a royalty role
  FILTER EXISTS { ?royaltyRole wdt:P31 wd:Q11873 } # Ensure the role is related to royalty (replace Q11873 with the actual DBpedia ID for royalty)
  ?father wdt:P25 ?parent . # The parent of the father
}
```

Note: Replace `wd:Q123456` with the actual DBpedia identifier for Richeza of Poland, Queen of Hungary. Similarly, ensure that `wd:Q11873` is replaced with the correct identifier for royalty if different.",3,4,4,2,2,3,2,20,0,0,1,0,0.0,0
281,29,val,"Give me the war of Beauchamp Seymour, 1st Baron Alcester and entity in the birth place, that is a country, of Bob Heffron and war of New Zealand Army.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> ?v3 . <http://dbpedia.org/resource/Beauchamp_Seymour,_1st_Baron_Alcester> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Bob_Heffron> <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/New_Zealand_Army> <http://dbpedia.org/ontology/battle> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?warOfBeauchampSeymour ?birthCountryBobHeffron ?warNewZealandArmy
WHERE {
  # Find the war associated with Beauchamp Seymour, 1st Baron Alcester
  dbr:Beauchamp_Seymour,_1st_Baron_Alcester dbo:participatedIn ?warOfBeauchampSeymour .

  # Find Bob Heffron's birthplace and ensure it is a country
  dbr:Bob_Heffron dbo:birthPlace ?birthPlace .
  ?birthPlace rdf:type dbo:Country ;
              rdfs:label ?birthCountryBobHeffron .

  # Find a war involving the New Zealand Army
  dbr:New_Zealand_Army dbo:participatedIn ?warNewZealandArmy .
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
959,35,val,"Give me the manager of the team of Takashi Sekizuka and member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of Eiji Ōtsuka.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?result <http://dbpedia.org/ontology/team> ?v1 . ?v0 <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Eiji_Ōtsuka> <http://dbpedia.org/ontology/almaMater> ?v1 . ?v0 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Takashi_Sekizuka> . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. },"```sparql
# Step 1: Find Takashi Sekizuka's team and its manager
SELECT ?team ?manager WHERE {
  ?person dbo:nationality dbr:Japan .
  ?person rdfs:label ""Takashi Sekizuka""@en .
  ?person dbo:memberOfTeam ?team .
  ?team dbo:coach ?manager .
}

# Step 2: Find Eiji Ōtsuka's alma mater
SELECT DISTINCT ?university WHERE {
  ?person dbo:nationality dbr:Japan .
  ?person rdfs:label ""Eiji Ōtsuka""@en .
  ?person dbo:almaMater ?university .
  ?university a dbo:University ;
              a dbo:EducationalOrganization ;
              a dbo:Organisation .
}

# Step 3: Find if the manager is associated with any of these universities
SELECT DISTINCT ?manager WHERE {
  # Reuse results from step 1 and 2
  ?team dbo:coach ?manager .
  ?university dbo:alumni ?person .
  FILTER(?manager = ?person)
}
```",4,8,5,2,2,3,3,71,0,0,2,0,0.0,0
55,13,val,"Give me the band member of the producer, that is a band, of Used to Love Her and band member of Metallica.",SELECT ?result WHERE { <http://dbpedia.org/resource/Used_to_Love_Her> <http://dbpedia.org/ontology/producer> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Metallica> . },"```sparql
# Find the producer of ""Used to Love Her""
SELECT ?producer WHERE {
  ?song dcterms:title ""Used to Love Her"" .
  ?song dbo:producedBy ?producer .
}

# Check if any member of Queens of the Stone Age is also a member of Metallica
SELECT DISTINCT ?member WHERE {
  # Find members of Queens of the Stone Age
  ?band foaf:name ""Queens of the Stone Age""@en ;
        dbo:bandMember ?qosamember .

  # Find members of Metallica
  ?metallicaBand foaf:name ""Metallica""@en ;
                 dbo:bandMember ?metallicamember .

  # Check if any member is common between both bands
  FILTER (?qosamember = ?metallicamember)
  
  BIND(?qosamember AS ?member)
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
182,13,val,Give me the war of Jagath Dias and war of the author of 2019 Sri Lanka Easter bombings.,SELECT ?result WHERE { <http://dbpedia.org/resource/2019_Sri_Lanka_Easter_bombings> <http://dbpedia.org/property/author> ?v1 . ?v1 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Jagath_Dias> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
SELECT ?war1Label ?war2Label WHERE {
  # Find the war associated with Jagath Dias
  ?jagathDias dbo:occupation dbp:Sri_Lankan_Army_Commander .
  ?sriLankanCivilWar dbo:participatedIn ?jagathDias .
  ?sriLankanCivilWar rdfs:label ?war1Label .

  # Find the event associated with Zahran Hashim
  ?zahranHashim dbo:nationality dbr:Sri_Lanka ;
                dbo:occupation dbp:Terrorist_Leader .
  ?easterBombings dbo:perpetrator ?zahranHashim ;
                  rdfs:label ?eventLabel .

  # Find the war or conflict associated with the Easter bombings
  OPTIONAL {
    ?conflict dbo:relatedEvent ?easterBombings .
    ?conflict rdfs:label ?war2Label .
  }

  FILTER (lang(?war1Label) = ""en"")
  FILTER (lang(?eventLabel) = ""en"")
  FILTER (lang(?war2Label) = ""en"")
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
435,17,val,"Give me the work of Article 62, Section IV of Constitution of Iceland and region of the time zone in Bombali Shebora Chiefdom.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/author> ""Article 62, Section IV of Constitution of Iceland""@en . <http://dbpedia.org/resource/Bombali_Shebora_Chiefdom> <http://dbpedia.org/ontology/timeZone> ?v1 . ?result <http://dbpedia.org/ontology/timeZone> ?v1 . }","```sparql
# Query for Article 62, Section IV of the Constitution of Iceland
SELECT ?articleText WHERE {
  ?constitution dcterms:isPartOf <http://dbpedia.org/resource/Constitution_of_Iceland> .
  ?constitution dct:subject <http://dbpedia.org/resource/Article_62_(Iceland)> .
  ?constitution dbo:textValue ?articleText .
  FILTER(CONTAINS(LCASE(?articleText), ""section iv""))
}

UNION

# Query for the time zone and region of Bombali Shebora Chiefdom
SELECT DISTINCT ?chiefdomLabel ?timeZone ?region WHERE {
  ?chiefdom rdf:type <http://dbpedia.org/ontology/Place> .
  ?chiefdom rdfs:label ?chiefdomLabel .
  FILTER(CONTAINS(LCASE(?chiefdomLabel), ""bombali shebora chiefdom"")) .
  
  OPTIONAL { 
    ?chiefdom dbo:timeZone ?timeZone .
  }
  
  OPTIONAL {
    ?chiefdom dbo:administrativeRegion ?region .
  }
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
617,34,val,"Give me the parent of Nysa (wife of Pharnaces I of Pontus) and child of the child, that is a royalty, of the successor, that is a royalty, of Antiochus II Theos.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Nysa_(wife_of_Pharnaces_I_of_Pontus)> . ?result <http://dbpedia.org/property/father> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> ?v2 . <http://dbpedia.org/resource/Antiochus_II_Theos> <http://dbpedia.org/ontology/successor> ?v2 . },"```sparql
# Step 1: Find Nysa's parent
SELECT ?parent WHERE {
  wd:Q123456 wdt:P22 wd:Q789012 . # Assuming Q123456 is Nysa and P22 is spouse relation
  wd:Q789012 wdt:P40 ?parent .    # P40 is child relation
}

# Step 2: Find the royal child of Nysa's parent
SELECT ?royalChild WHERE {
  ?parent wdt:P40 ?child .
  ?child wdt:P31/wdt:P279* wd:Q5 . # Q5 is human, looking for royalty
}

# Step 3: Find Antiochus II Theos' successor who is royalty
SELECT ?successor WHERE {
  wd:Q987654 wdt:P39 ?successor . # Assuming Q987654 is Antiochus II Theos and P39 is position held
  ?successor wdt:P31/wdt:P279* wd:Q5 .
}

# Step 4: Find the royal child of the successor
SELECT ?royalChildSuccessor WHERE {
  ?successor wdt:P40 ?child .
  ?child wdt:P31/wdt:P279* wd:Q5 .
}

# Step 5: Find the parent of the royal child identified in step 2
SELECT ?finalParent WHERE {
  ?royalChild wdt:P40 ?parent .
}
```

Note: The above SPARQL queries assume certain Wikidata IDs (e.g., Q123456 for Nysa, Q789012 for Pharnaces I of Pontus, and Q987654 for Antiochus II Theos). These need to be replaced with the correct identifiers from DBpedia or Wikidata.",4,6,5,3,2,3,3,71,0,0,2,0,0.0,0
54,39,val,"Give me the parent of Thado Minsaw of Prome and predecessor of the child, that is an office holder and a royalty, of the reference to Thihapate of Mohnyin.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Thihapate of Mohnyin""@en . <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/successor> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parentOfThadoMinsaw ?predecessorOfChild
WHERE {
  # Find Thado Minsaw of Prome and his parent
  ?thadoMinsaw a dbo:Monarch ;
               foaf:name ""Thado Minsaw""@en ;
               dbo:country dbr:Prome_Region .

  ?parentOfThadoMinsaw dbo:child ?thadoMinsaw .

  # Find Thihapate of Mohnyin and his child
  ?thihapate a dbo:Monarch ;
             foaf:name ""Thihapate""@en ;
             dbo:country dbr:Mohnyin_Region .

  ?childOfThihapate dbo:parent ?thihapate ;
                    a dbo:Monarch ;
                    dbo:officeHolder true ;
                    dbo:royalty true .

  # Find the predecessor of Thihapate's child
  ?predecessorOfChild dbo:succeededBy ?childOfThihapate .
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
294,19,val,"Give me the entity in Nashville, Tennessee and resting place of the awardee, that is a politician, of Distinguished Service Medal (U.S. Army) and resting place of Edwin A. Keeble.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Nashville,_Tennessee> . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Distinguished_Service_Medal_(U.S._Army)> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Edwin_A._Keeble> <http://dbpedia.org/ontology/restingPlace> ?result . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?entity WHERE {
  ?entity a dbo:Politician ;
          dbo:honoraryAwardReceived dbr:Distinguished_Service_Medal_(U.S._Army) .
  
  ?entity dbo:placeOfRest dbr:Nashville_Tomb_of_the_Unknown_Soldier ; # Assuming this is the resting place in Nashville, Tennessee
          dbp:restingPlaceSameAs dbr:Edwin_A._Keeble .

}
```",4,5,5,2,3,2,3,28,0,0,1,0,0.0,0
767,22,val,Give me the reference to the alter ego of Black Hood and entity in Baden-Württemberg.,SELECT ?result WHERE { <http://dbpedia.org/resource/Black_Hood> <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://dbpedia.org/ontology/state> <http://dbpedia.org/resource/Baden-Württemberg> . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?alterEgo ?entityInBW WHERE {
  # Find the alter ego of Black Hood
  ?blackHood dbo:alias ""Black Hood"" .
  ?blackHood dbo:wikiPageRedirects ?alterEgo .

  # Find an entity in Baden-Württemberg
  ?entityInBW dbo:location dbr:Baden-Württemberg .
  
  # Return the alter ego and the entity in Baden-Württemberg
}
```",3,3,4,2,2,3,3,71,0,0,7,0,0.0,0
547,24,val,Give me the resting place of Alan Cunningham and resting place of the actor of Enemy at the Door.,SELECT ?result WHERE { <http://dbpedia.org/resource/Enemy_at_the_Door> <http://dbpedia.org/property/starring> ?v2 . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Alan_Cunningham> <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
# Query for the resting place of Alan Cunningham
SELECT ?burialPlace WHERE {
  ?person a dbo:Person ;
          foaf:name ""Alan Cunningham""@en .
  OPTIONAL { ?person dbo:deathPlace ?burialPlace . }
}
```

```sparql
# Query to find actors in ""Enemy at the Door""
SELECT DISTINCT ?actor WHERE {
  ?film dbo:title ""Enemy at the Door""@en ;
        dbo:starring ?actor .
}
```

```sparql
# Query for the resting place of each actor found in the previous query
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?actor ?burialPlace WHERE {
  VALUES (?film) { (dbo:Enemy_at_the_Door) }
  ?film dbo:title ""Enemy at the Door""@en ;
        dbo:starring ?actor .
  OPTIONAL { ?actor dbo:deathPlace ?burialPlace . }
}
```",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
391,24,val,"Give me the actor of the claim to fame, that is a work, of Michael Ballhaus and actor of All About the Andersons.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/All_About_the_Andersons> <http://dbpedia.org/property/starring> ?result . ?v2 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Michael_Ballhaus> <http://dbpedia.org/ontology/knownFor> ?v2 . },"```sparql
SELECT DISTINCT ?actor WHERE {
  # Find actors from ""All About the Andersons""
  ?movie1 dcterms:title ""All About the Andersons""@en .
  ?movie1 dbo:starring ?actor .

  # Find actors from ""Goodfellas"" (Michael Ballhaus's claim to fame)
  ?movie2 dcterms:title ""Goodfellas""@en .
  ?movie2 dbo:starring ?actor .
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
547,35,val,Give me the resting place of the awardee of Knight Grand Cross of the Order of St Michael and St George and resting place of the child of James Burton (property developer).,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_St_Michael_and_St_George> . <http://dbpedia.org/resource/James_Burton_(property_developer)> <http://dbpedia.org/ontology/child> ?v2 . ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
SELECT ?person ?restingPlace WHERE {
  # Query for Winston Churchill
  { 
    ?person rdfs:label ""Winston Churchill""@en .
    ?person dbo:awardedBy dbr:Order_of_St_Michael_and_St_George .
    ?person dbo:awardTitle dbr:Knight_Bachelor .
    OPTIONAL { ?person dbo:deathPlace ?restingPlace . }
  } UNION
  # Query for William Henry Playfair Burton
  {
    ?person rdfs:label ""William Henry Playfair Burton""@en .
    ?parent rdfs:label ""James Burton (property developer)""@en ;
            dbo:child ?person .
    OPTIONAL { ?person dbo:deathPlace ?restingPlace . }
  }
}
```",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
801,40,val,Give me the associated musical artist of Chris Taylor (music producer) and producer of Westside Story (song) and professional in the alter ego of the true self of The Shadow.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Westside_Story_(song)> <http://dbpedia.org/ontology/producer> ?result . ?v2 <http://xmlns.com/foaf/0.1/givenName> ""The Shadow""@en . <http://dbpedia.org/resource/Chris_Taylor_(music_producer)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v1 . ?v2 <http://dbpedia.org/property/alterEgo> ?v1 . }","```sparql
SELECT ?artist WHERE {
  ?producer foaf:name ""Mick Jagger"" .
  
  # Chris Taylor association with The Rolling Stones
  ?rollingStones dbo:member ?mickJagger ;
                 dbo:musicalArtist ?artist .
  
  # Mick Jagger as producer of Westside Story (song)
  ?westsideStory dbo:producer ?mickJagger ;
                 rdfs:label ""Westside Story"" .

  # The Shadow's alter ego
  ?shadow dbo:alterEgo ?lamontCranston .
  ?lamontCranston foaf:name ""Lamont Cranston"" .
  
  FILTER EXISTS { ?producer foaf:name ""Mick Jagger"" }
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
778,15,val,"Give me the author of Chroot and entity in the award of the awardee, that is American, of Wolf Prize in Medicine.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/location> ?v1 . ?v0 <http://dbpedia.org/property/awards> ?v1 . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/United_States>. ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Wolf_Prize_in_Medicine> . <http://dbpedia.org/resource/Chroot> <http://dbpedia.org/ontology/author> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?author ?awardEntity WHERE {
  # Find the author of Chroot
  ?chroot dbo:wikiPageWikiLink* dbr:Chroot .
  ?chroot dbo:author ?author .

  # Find American awardees of the Wolf Prize in Medicine
  ?prizeRecipient dbo:award dbp:Wolf_Prize_in_Medicine ;
                 dbo:nationality dbr:United_States_of_America .

  # Ensure the author is also an awardee
  FILTER (?author = ?prizeRecipient)
}
```",4,5,5,3,2,3,2,20,0,0,1,0,0.0,0
92,41,val,"Give me the band member of the reference, that is an artist, to Nevermore and associated musical artist of the person born, that is an artist, as Jim Sheppard and band of Joseph Michael.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Joseph_Michael> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://xmlns.com/foaf/0.1/name> ""Nevermore""@en . ?v4 <http://dbpedia.org/property/birthName> ""Jim Sheppard""@en . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
# Query for Nevermore band members who are artists
SELECT ?member WHERE {
  ?band dcterms:subject dbc:Nevermore .
  ?band dbo:bandMember ?member .
  ?member dbo:occupation dbp:musician .
  OPTIONAL { ?member dbo:abstract ?abstract . FILTER(CONTAINS(LCASE(?abstract), ""artist"")) }
} 

UNION

# Query for Jim Sheppard's associated musical artist
SELECT ?associatedArtist WHERE {
  ?person foaf:name ""Jim Sheppard""@en .
  ?person dbo:spouseOrPartner ?partner .
  ?partner dbo:occupation dbp:musician .
  OPTIONAL { ?partner dbo:abstract ?abstract . FILTER(CONTAINS(LCASE(?abstract), ""artist"")) }
}

UNION

# Query for Joseph Michael's band
SELECT ?band WHERE {
  ?person foaf:name ""Joseph Michael""@en .
  ?person dbo:memberOfBand ?band .
}
```",5,7,6,2,3,3,3,71,0,0,1,0,0.0,0
959,43,val,"Give me the member of University of Tsukuba and native of the residence, that is a country, of the leader, that is a politician, of 2010 Japanese House of Councillors election and manager of 2013 Júbilo Iwata season.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/University_of_Tsukuba> . <http://dbpedia.org/resource/2013_Júbilo_Iwata_season> <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/property/residence> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . <http://dbpedia.org/resource/2010_Japanese_House_of_Councillors_election> <http://dbpedia.org/property/leader> ?v1 . },"```sparql
# Step 1: Identify the leader of the 2007 Japanese House of Councillors election
SELECT ?politician WHERE {
  ?politician dbo:officeHolder dbr:Japanese_House_of_Councillors.
  ?politician dbo:electionDate ?date .
  FILTER (YEAR(?date) = 2010)
}

# Step 2: Determine the native country or place of birth of this politician
SELECT DISTINCT ?nativeCountry WHERE {
  ?politician dbo:nationality ?nationality .
  ?politician dbp:birthPlace ?placeOfBirth .
  OPTIONAL { ?placeOfBirth rdf:type dbr:Country . }
  FILTER (?politician = <POLITICIAN_URI>) # Replace with actual URI from Step 1
}

# Step 3: Find a member of the University of Tsukuba who is native to this country
SELECT DISTINCT ?member WHERE {
  ?member dbo:almaMater dbr:University_of_Tsukuba .
  ?member dbp:nationality ?nationality .
  FILTER (?nationality = <NATIVE_COUNTRY_URI>) # Replace with URI from Step 2
}

# Step 4: Check if this person was the manager of Júbilo Iwata in 2013
SELECT DISTINCT ?manager WHERE {
  ?manager dbo:position ""Manager""@en .
  ?manager dbp:team dbr:Júbilo_Iwata .
  ?manager dbp:season ""2013""@en .
  FILTER (?member = <MEMBER_URI>) # Replace with URI from Step 3
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
994,31,val,Give me the associated musical artist of the associated musical artist of the reference to Watchtower and associated musical artist of Red Tide (band).,"SELECT ?result WHERE { <http://dbpedia.org/resource/Red_Tide_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://xmlns.com/foaf/0.1/name> ""Watchtower""@en . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . }","```sparql
# Step 1: Find an associated artist of Watchtower
SELECT ?artist WHERE {
  wd:Q1234567 wdt:P175 ?artist .
}

# Step 2: Find an associated artist of the artist found in step 1
SELECT ?associatedArtist WHERE {
  ?artist wdt:P175 ?associatedArtist .
}

# Step 3: Find an associated artist of Red Tide (band)
SELECT ?redTideArtist WHERE {
  wd:Q6543210 wdt:P175 ?redTideArtist .
}
```

Note: Replace `wd:Q1234567` with the actual DBpedia resource ID for Watchtower and `wd:Q6543210` with the actual DBpedia resource ID for Red Tide (band). These IDs can be found by querying DBpedia or using a service like Wikidata to get the correct identifiers.",4,4,5,3,2,3,3,71,0,0,3,0,0.0,0
314,19,val,Give me the commander in Spanish Civil War and person deceased at the headquarter of House of Sombrerete and awardee of 30.,"SELECT ?result WHERE { <http://dbpedia.org/resource/House_of_Sombrerete> <http://dbpedia.org/ontology/location> ?v2 . <http://dbpedia.org/resource/Spanish_Civil_War> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/property/awards> ""30""^^<http://www.w3.org/2001/XMLSchema#integer> . ?result <http://dbpedia.org/ontology/restingPlace> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?person (GROUP_CONCAT(?role; separator="", "") AS ?roles) 
WHERE {
  # Find commanders in the Spanish Civil War
  { 
    ?person dbo:occupation dbr:Spanish_Civil_War_commander .
    ?person dbp:role ""Commander""@en .
    BIND(""Commander in Spanish Civil War"" AS ?role)
  }
  
  UNION
  
  # Find person deceased at House of Sombrerete
  { 
    ?person dbo:deathPlace dbr:House_of_Sombrerete .
    BIND(""Deceased at House of Sombrerete"" AS ?role)
  }
  
  UNION
  
  # Find awardee of the Order of the Golden Fleece (assuming ""30"" refers to a specific recipient or rank)
  { 
    ?person dbo:award dbr:Order_of_the_Golden_Fleece .
    FILTER(STRSTARTS(?person, ""Awardee_30"")) # Assuming there's a pattern like Awardee_30
    BIND(""Awardee of the Order of the Golden Fleece"" AS ?role)
  }
  
  # Ensure we get distinct persons with at least one role
  FILTER(EXISTS { ?person ?p ?o })
}
GROUP BY ?person
HAVING (COUNT(?role) > 0)
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
294,15,val,"Give me the entity in Nashville, Tennessee and resting place of the awardee, that is a politician, of Distinguished Service Medal (U.S. Army).","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Nashville,_Tennessee> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Distinguished_Service_Medal_(U.S._Army)> . ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?restingPlace WHERE {
  ?person dbo:recipientOfAward dbr:Distinguished_Service_Medal_(U.S._Army) .
  ?person dbo:occupation dbr:Politician .
  ?person dbo:finalRestingPlace ?restingPlace .
  FILTER(CONTAINS(LCASE(?restingPlace), ""nashville, tennessee""))
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
294,13,val,"Give me the resting place of Edwin A. Keeble and resting place of the awardee, that is a politician, of Distinguished Service Medal (U.S. Army).",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Distinguished_Service_Medal_(U.S._Army)> . <http://dbpedia.org/resource/Edwin_A._Keeble> <http://dbpedia.org/ontology/restingPlace> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
# Query for the resting place of Edwin A. Keeble
SELECT ?restingPlace WHERE {
  ?person dbo:birthName ""Edwin A. Keeble""@en .
  OPTIONAL { ?person dbo:deathPlace ?restingPlace . }
}

UNION

# Query for a politician who received the Distinguished Service Medal (U.S. Army) and their resting place
SELECT DISTINCT ?awardeeRestingPlace WHERE {
  ?awardee dbo:award ""Distinguished Service Medal (United States Army)""@en .
  ?awardee rdf:type dbo:Politician .
  OPTIONAL { ?awardee dbo:deathPlace ?awardeeRestingPlace . }
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
184,28,val,Give me the child of Archduke Joseph August of Austria and parent of Archduchess Ilona of Austria and parent of the native of Budapest.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Ilona_of_Austria> . ?result <http://dbpedia.org/ontology/child> ?v1 . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_August_of_Austria> . ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Budapest> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  # Find the child of Archduke Joseph August of Austria
  ?child dbo:parent dbr:Archduke_Joseph_August_of_Austria .
  
  # Check if this child is a parent of Archduchess Ilona of Austria
  ?child dbo:child dbr:Archduchess_Ilona_of_Austria .

  # Check if this child is also a parent of someone native to Budapest
  ?child dbo:child ?person .
  ?person dbo:nativePlace dbr:Budapest .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
767,40,val,"Give me the entity in the administration, that is a settlement, of the writer of Where It's At (Dustin Lynch album) and alma mater of Carl L. Nippert and reference to .","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://xmlns.com/foaf/0.1/name> """"@en . <http://dbpedia.org/resource/Carl_L._Nippert> <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://dbpedia.org/ontology/state> ?v1 . <http://dbpedia.org/resource/Where_It's_At_(Dustin_Lynch_album)> <http://dbpedia.org/property/writer> ?v2 . ?v1 <http://dbpedia.org/property/leaderParty> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?settlement WHERE {
  # Find the songwriter for ""Where It's At"" by Dustin Lynch
  ?song dbo:lyricsBy ?writer .
  ?song rdfs:label ?title .
  FILTER(CONTAINS(LCASE(?title), ""where it's at"")) .
  
  # Find Carl L. Nippert's alma mater
  ?person dbo:almaMater ?university .
  ?person rdfs:label ""Carl L. Nippert"" .

  # Find the settlement related to both entities
  ?writer dbo:nationality ?nationality .
  ?university dbo:locationCity ?city .
  
  OPTIONAL {
    ?settlement a dbo:Settlement ;
               dbo:partOfCountry ?country ;
               rdfs:label ?settlementLabel .
    FILTER(CONTAINS(LCASE(?settlementLabel), LCASE(?city)))
  }
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
179,12,val,Give me the parent of the child of Bhumibol Adulyadej and person born as Mom Rajawongse Sirikit Kitiyakara.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Mom Rajawongse Sirikit Kitiyakara""@en . <http://dbpedia.org/resource/Bhumibol_Adulyadej> <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://dbpedia.org/ontology/parent> ?result . }","```sparql
SELECT ?parent WHERE {
  wd:Q11980 wdt:P40 wd:Q11888 .
  wd:Q11888 wdt:P22 wd:Q11980 .
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
488,34,val,"Give me the administration of Emperor Go-Yōzei and birth place of the commander in the war, that is a military conflict and an event and a societal event, of Saitō Hajime.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/commander> ?v1 . ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Emperor_Go-Yōzei> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Saitō_Hajime> <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?administration ?birthPlace WHERE {
  # Find the administration of Emperor Go-Yōzei
  OPTIONAL {
    dbr:Emperor_Go-Yōzei dbo:administrator ?administration .
  }

  # Find Saitō Hajime's birthplace and his involvement in the Battle of Shiroyama
  OPTIONAL {
    dbr:Saitō_Hajime dbo:birthPlace ?birthPlace ;
                     dbo:participatedInEvent ?event .
    FILTER (str(?event) = ""Battle_of_Shiriya"")
  }
}
```",4,7,5,3,2,3,3,71,0,0,1,0,0.0,0
488,30,val,Give me the death place of Tokugawa Ieyasu and administration of the father of Emperor Go-Mizunoo and birth place of Enomoto Takeaki.,SELECT ?result WHERE { <http://dbpedia.org/resource/Tokugawa_Ieyasu> <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Emperor_Go-Mizunoo> <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Enomoto_Takeaki> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/property/leader> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?tokugawaDeathPlace ?emperorNijoTitle ?enomotoBirthPlace
WHERE {
  # Tokugawa Ieyasu's place of death
  dbr:Tokugawa_Ieyasu dbo:deathPlace ?tokugawaDeathPlace .

  # Emperor Go-Mizunoo's father is Emperor Nijō, find his title or administration
  dbr:Nijo_Emperor dbo:title ?emperorNijoTitle .

  # Enomoto Takeaki's place of birth
  dbr:Enomoto_Takeaki dbo:birthPlace ?enomotoBirthPlace .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
184,39,val,Give me the parent of the child of the parent of Archduchess Margaret of Austria (born 1925) and child of Archduke Joseph August of Austria.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v1 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Margaret_of_Austria_(born_1925)> . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_August_of_Austria> . ?v1 <http://dbpedia.org/property/father> ?v0 . },"```sparql
# Step 1: Find Archduchess Margaret of Austria (born 1925) and her parent
SELECT ?margaret ?parent WHERE {
  ?margaret dbo:birthYear ""1925""^^xsd:gYear ;
           foaf:name ""Margaret of Austria""@en ;
           dbo:motherOrFather ?parent .
}

# Step 2: Find the child of this parent (sibling or another child)
SELECT ?child WHERE {
  VALUES (?parent) { ?margaretParent } # Use result from step 1
  ?child dbo:motherOrFather ?parent .
  FILTER(?child != ?margaret) # Exclude Margaret herself
}

# Step 3: Find the parent of this child (grandparent of Margaret)
SELECT ?grandparent WHERE {
  VALUES (?child) { ?sibling } # Use result from step 2
  ?child dbo:motherOrFather ?grandparent .
}

# Step 4: Find Archduke Joseph August's children
SELECT ?josephChild WHERE {
  ?josephChild dbo:motherOrFather <http://dbpedia.org/resource/Archduke_Joseph_August_of_Austria> .
}

# Step 5: Identify the parent of this child (which is Archduke Joseph August)
SELECT ?parent WHERE {
  VALUES (?child) { ?josephChild } # Use result from step 4
  ?child dbo:motherOrFather ?parent .
}

# Final comparison to find the relationship between grandparent and Archduke Joseph August
SELECT DISTINCT ?grandparent ?parent WHERE {
  VALUES (?grandparent) { ?margaretGrandparent } # Result from step 3
  VALUES (?parent) { ?josephParent } # Result from step 5
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
16,43,val,Give me the person born as Georgeanne Marie Rice and spouse of Ted McGinley and professional in the profession of the actor of Unnatural (TV series).,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v4 . <http://dbpedia.org/resource/Unnatural_(TV_series)> <http://dbpedia.org/property/starring> ?v0 . ?v0 <http://dbpedia.org/property/occupation> ?v4 . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/birthName> ""Georgeanne Marie Rice""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  ?person dbo:birthName ""Georgeanne Marie Rice""@en .
  ?person dbo:spouse dbr:Ted_McGinley .
  ?person a dbo:Actor .
  OPTIONAL { 
    ?work dbo:starring ?person ;
          rdfs:label ?title .
    FILTER(CONTAINS(LCASE(?title), ""unnatural""))
  }
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
488,32,val,"Give me the birth place of the commander in Boshin War and death place of the father, that is a politician, of Yūki Hideyasu.",SELECT ?result WHERE { <http://dbpedia.org/resource/Yūki_Hideyasu> <http://dbpedia.org/property/father> ?v3 . <http://dbpedia.org/resource/Boshin_War> <http://dbpedia.org/ontology/commander> ?v1 . ?v3 <http://dbpedia.org/ontology/deathPlace> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
# Query for the birthplace of Saigō Takamori
SELECT ?birthPlace WHERE {
  wd:Q12345 wdt:P19 ?birthPlace .
}

UNION

# Query for the death place of Yūki Munetoshi
SELECT ?deathPlace WHERE {
  wd:Q67890 wdt:P20 ?deathPlace .
}
```

Note: `wd:Q12345` and `wd:Q67890` are placeholders for the actual DBpedia identifiers for Saigō Takamori and Yūki Munetoshi, respectively. You would need to replace these with the correct identifiers from DBpedia.",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
617,14,val,"Give me the parent of the father, that is a royalty, of the reference, that is a royalty, to Richeza of Poland.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/father> ?v0 . ?v2 <http://xmlns.com/foaf/0.1/name> ""Richeza of Poland""@en . ?result <http://dbpedia.org/ontology/child> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parentOfFather WHERE {
  # Step 1: Identify Richeza of Poland
  VALUES ?richeza { dbr:Richeza_of_Poland }

  # Step 2: Find the father of Richeza
  ?richeza dbo:father ?father .

  # Step 3: Determine if the father is royalty
  OPTIONAL {
    ?father dbo:title ?title .
    FILTER(CONTAINS(LCASE(?title), ""king"") || CONTAINS(LCASE(?title), ""queen"") || CONTAINS(LCASE(?title), ""prince"") || CONTAINS(LCASE(?title), ""princess""))
  }

  # Step 4: Identify the parent of the father
  ?father dbo:parent ?parentOfFather .

  # Step 5: Check if the parent is royalty
  OPTIONAL {
    ?parentOfFather dbo:title ?parentTitle .
    FILTER(CONTAINS(LCASE(?parentTitle), ""king"") || CONTAINS(LCASE(?parentTitle), ""queen"") || CONTAINS(LCASE(?parentTitle), ""prince"") || CONTAINS(LCASE(?parentTitle), ""princess""))
  }

  # Step 6: Ensure the parent is royalty
  FILTER EXISTS { ?parentOfFather dbo:title ?parentTitle . 
                 CONTAINS(LCASE(?parentTitle), ""king"") ||
                 CONTAINS(LCASE(?parentTitle), ""queen"") ||
                 CONTAINS(LCASE(?parentTitle), ""prince"") ||
                 CONTAINS(LCASE(?parentTitle), ""princess"")
               }
}
```",3,5,4,3,1,3,2,20,0,0,4,0,0.0,0
435,16,val,Give me the work of the author of Iceland and territory administered from Reykjavík.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Reykjavík> . <http://dbpedia.org/resource/Iceland> <http://dbpedia.org/property/author> ?v2 . ?result <http://dbpedia.org/property/author> ?v2 . },"```sparql
# Part 1: Find the author of a work titled ""Iceland""
SELECT ?author WHERE {
  ?work dcterms:title ""Iceland""@en .
  ?work dbo:author ?author .
}

# Part 2: Get works by this author
SELECT DISTINCT ?workTitle WHERE {
  ?author dbo:wikiPageID ?authorId .
  ?work dbo:author ?author ;
        dcterms:title ?workTitle .
}

# Part 3: Find the territory administered from Reykjavík
SELECT ?territory WHERE {
  ?territory dbo:administrativeTerritory ?adminTerritory .
  ?adminTerritory rdfs:label ""Reykjavík""@en ;
                  dbo:country dbr:Iceland .
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
182,19,val,Give me the war of Jagath Dias and entity in Sri Lanka and war of the author of 2019 Sri Lanka Easter bombings.,SELECT ?result WHERE { <http://dbpedia.org/resource/Jagath_Dias> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/2019_Sri_Lanka_Easter_bombings> <http://dbpedia.org/property/author> ?v2 . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Sri_Lanka> . },"```sparql
# Query for the war involving Jagath Dias
SELECT ?war WHERE {
  ?person foaf:name ""Jagath Dias""@en .
  ?person dbo:spouse ?spouse .
  ?spouse dbo:spouse ?person2 .
  ?person2 dbo:occupation ""Soldier""@en ;
           dbo:militaryConflict ?war .
  FILTER(CONTAINS(LCASE(STR(?war)), ""sri lankan civil war""))
}

# Query for the entity related to the author of the 2019 Sri Lanka Easter bombings
SELECT ?entity WHERE {
  ?person foaf:name ""Zahran Hashim""@en ;
          dbo:spouse ?spouse .
  ?spouse dbo:spouse ?person2 .
  ?person2 dbo:occupation ""Terrorist Leader""@en ;
           dbo:militaryConflict ?conflict .
  FILTER(CONTAINS(LCASE(STR(?conflict)), ""2019 sri lanka easter bombings""))
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
404,25,val,"Give me the parent of Prince Ernest Augustus of Hanover (born 1914) and child of the father of Ernest Augustus, Duke of Brunswick.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Prince_Ernest_Augustus_of_Hanover_(born_1914)> . <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/ontology/parent> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Find the father of Prince Ernest Augustus of Hanover (born 1914)
  ?prince a dbo:Person ;
          dbo:father ?father .
  
  FILTER(CONTAINS(LCASE(?prince), ""prince ernest augustus of hanover born 1914""))

  # Find the child of the father of Ernest Augustus, Duke of Brunswick
  ?duke dbr:Ernest_Augustus,_Duke_of_Brunswick ;
        dbo:father ?grandfather .
  
  ?child dbo:father ?grandfather .

  # Match both conditions
  FILTER(?father = ?child)
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
161,19,val,"Give me the military force of the force, that is a societal event and an event and a military conflict, of Francisco Franco and military force of Spanish Civil War.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Franco> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v0 . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?francoForce ?civilWarForces WHERE {
  # Find the military force associated with Francisco Franco
  ?francoForce dbo:commander dbr:Franco,_Francisco .
  
  # Find forces involved in the Spanish Civil War
  ?civilWarEvent a dbo:MilitaryConflict ;
                rdfs:label ""Spanish Civil War""@en .

  OPTIONAL {
    ?civilWarForces dbo:participatedIn ?civilWarEvent .
  }

  # Ensure that the military force associated with Franco is part of the Spanish Civil War
  FILTER EXISTS { ?francoForce dbo:participatedIn ?civilWarEvent }
}
```",3,6,4,2,2,3,3,71,0,0,514,0,0.0,0
10,19,val,"Give me the associated musical artist of the person born, that is an artist, as Matt Colton and band member of Luke Vibert and professional in .","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Luke_Vibert> . ?v3 <http://dbpedia.org/property/birthName> ""Matt Colton""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?artist ?associatedArtist WHERE {
  ?person a dbo:Person ;
          foaf:name ""Matt Colton"" ;
          dbo:bandMember ?band .
  
  ?band dbo:member ?bandMember .
  ?bandMember foaf:name ""Luke Vibert""@en .

  OPTIONAL { ?person dbp:associatedBand ?associatedArtist . }
}
```",4,5,5,2,3,2,3,28,0,0,1,0,0.0,0
767,20,val,Give me the alma mater of the administration of George K. Nash and entity in Baden-Württemberg.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://dbpedia.org/ontology/state> <http://dbpedia.org/resource/Baden-Württemberg> . ?v2 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/George_K._Nash> . },"```sparql
# Query to get the alma mater of George K. Nash
SELECT ?university WHERE {
  ?person dbo:almaMater ?university .
  ?person foaf:name ""George K. Nash""@en .
}

# Query to find an entity in Baden-Württemberg
SELECT ?entity WHERE {
  ?entity dbo:location ?place .
  ?place rdfs:label ""Baden-Württemberg""@en .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
783,13,val,Give me the associated musical artist of the band member of the person born as Samuel Ofori Amponsah.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ""Samuel Ofori Amponsah""@en . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . }","```sparql
SELECT ?artist WHERE {
  ?person foaf:name ""Shaggy""@en .
  ?person dbo:birthName ""Samuel Ofori Amponsah""@en .
  ?collaboration dbo:member ?person ;
                 dbo:member ?bandMember .
  ?bandMember dbo:associatedMusicalArtist ?artist .
}
```",3,3,4,3,1,3,2,20,0,0,35,0,0.0,0
54,21,val,Give me the predecessor of Ameitta Thiri Maha Dhamma Dewi of Ava and child of the father of Soe Min Wimala Dewi.,SELECT ?result WHERE { <http://dbpedia.org/resource/Soe_Min_Wimala_Dewi> <http://dbpedia.org/property/father> ?v1 . ?v1 <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Ameitta_Thiri_Maha_Dhamma_Dewi_of_Ava> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?predecessor ?father ?child WHERE {
  # Find the predecessor of Ameitta Thiri Maha Dhamma Dewi of Ava
  ?ameitta a dbo:Monarch ;
           dbo:predecessor ?predecessor .

  # Identify Soe Min Wimala Dewi and her father
  ?soeminwimala a dbo:Person ;
                foaf:name ""Soe Min Wimala Dewi"" ;
                foaf:parent ?father .

  # Find the child of this father who is also the predecessor of Ameitta Thiri Maha Dhamma Dewi
  ?child foaf:parent ?father .
  FILTER (?predecessor = ?child)
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
184,36,val,Give me the parent of Géza von Habsburg and parent of the child of the parent of Archduchess Margaret of Austria (born 1925).,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Géza_von_Habsburg> . ?result <http://dbpedia.org/ontology/child> ?v1 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Margaret_of_Austria_(born_1925)> . },"```sparql
# Query to get the parent of Géza von Habsburg
SELECT ?parent WHERE {
  wd:Q123456 wdt:P22 ?parent .
}

# Query to get the parent of Archduchess Margaret of Austria (born 1925)
SELECT ?parent WHERE {
  wd:Q789012 wdt:P22 ?parent .
}

# Assuming we find a child from the above query, replace `?child` with the actual URI
SELECT ?grandchild WHERE {
  ?parent wdt:P40 ?grandchild .
}

# Query to get the parent of that grandchild
SELECT ?greatGrandparent WHERE {
  ?grandchild wdt:P22 ?greatGrandparent .
}
```

Note: Replace `wd:Q123456` with the actual DBpedia URI for Géza von Habsburg and `wd:Q789012` with the URI for Archduchess Margaret of Austria (born 1925). The placeholder `?child` should be replaced with the actual child's URI obtained from the second query.",4,4,5,3,2,3,3,71,0,0,2,0,0.0,0
547,31,val,Give me the resting place of Simon Cadell and resting place of the child of the child of William Haliburton.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> ""William Haliburton""@en . <http://dbpedia.org/resource/Simon_Cadell> <http://dbpedia.org/ontology/restingPlace> ?result . ?v0 <http://dbpedia.org/ontology/restingPlace> ?result . ?v1 <http://dbpedia.org/ontology/child> ?v0 . }","```sparql
# Query for Simon Cadell's resting place
SELECT ?restingPlace WHERE {
  ?person foaf:name ""Simon Cadell""@en .
  OPTIONAL { ?person dbo:deathPlace ?restingPlace . }
}

UNION

# Query for the child of the child (great-grandchild) of William Haliburton's resting place
SELECT DISTINCT ?greatGrandChildRestingPlace WHERE {
  ?williamHaliburton foaf:name ""William Haliburton""@en .
  ?williamHaliburton dbo:child ?child .
  ?child dbo:child ?grandchild .
  ?grandchild dbo:deathPlace ?greatGrandChildRestingPlace .
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
767,34,val,"Give me the entity in the administration, that is a settlement, of the writer of Where It's At (Dustin Lynch album) and reference to .","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/leaderParty> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://xmlns.com/foaf/0.1/name> """"@en . ?result <http://dbpedia.org/ontology/state> ?v1 . <http://dbpedia.org/resource/Where_It's_At_(Dustin_Lynch_album)> <http://dbpedia.org/property/writer> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?settlement WHERE {
  ?dustinLynch dbo:album dbr:Where_It's_At_(Dustin_Lynch_album) .
  ?dustinLynch a dbo:MusicalArtist ;
               foaf:birthPlace ?settlement .
  FILTER (isLiteral(?settlement))
}
```",4,5,5,3,2,3,3,71,0,0,8,0,0.0,0
391,29,val,"Give me the actor of the claim to fame, that is a work, of Michael Ballhaus and native of Compton, California and actor of All About the Andersons.","SELECT ?result WHERE { <http://dbpedia.org/resource/All_About_the_Andersons> <http://dbpedia.org/property/starring> ?result . ?v3 <http://dbpedia.org/ontology/starring> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Michael_Ballhaus> <http://dbpedia.org/ontology/knownFor> ?v3 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Compton,_California> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  ?film dbo:director dbr:Michael_Ballhaus .
  ?film dbo:starring ?actor .
  ?actor dbo:birthPlace dbr:Compton,_California .
  ?actor dbo:title ""All About the Andersons""@en.
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
801,41,val,"Give me the producer of the work, that is a musical work and a song and a work, of 50 Cent and associated musical artist of Chris Taylor (music producer) and professional in the alter ego of The Shadow.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. <http://dbpedia.org/resource/Chris_Taylor_(music_producer)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/50_Cent> . ?v4 <http://dbpedia.org/ontology/producer> ?result . ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?producer WHERE {
    ?song dbo:artist dbr:50_Cent ;
          rdfs:label ""P.I.M.P.""@en .
    
    OPTIONAL { 
        ?song dbo:composer ?producer .
    }
    
    FILTER(CONTAINS(LCASE(STR(?producer)), ""chris taylor"") || CONTAINS(LCASE(STR(?producer)), ""the shadow""))
}
```",5,8,6,2,3,3,3,71,0,0,1,0,0.0,0
251,16,val,Give me the location of Battle of Marengo and death place of the author of The Twelve Abbots of Challant.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Twelve_Abbots_of_Challant> <http://dbpedia.org/property/author> ?v2 . <http://dbpedia.org/resource/Battle_of_Marengo> <http://dbpedia.org/ontology/place> ?result . ?v2 <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
# Query for the location of the Battle of Marengo
SELECT ?location WHERE {
  ?battle dcterms:subject dbc:Battles_of_the_Napoleonic_Wars ;
         foaf:name ""Battle of Marengo"" .
  ?battle dbp:location ?location .
}

UNION

# Query for the death place of the author of The Twelve Abbots of Challant
SELECT ?deathPlace WHERE {
  ?book dbo:author ?author ;
        foaf:name ""The Twelve Abbots of Challant""@en .
  ?author dbo:deathPlace ?deathPlace .
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
994,26,val,"Give me the associated musical artist of the band member, that is a band and a group and an organisation, of the band, that is an organisation, of Fredrik Thordendal.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Fredrik_Thordendal> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. },"```sparql
SELECT ?artist WHERE {
  ?fredrik dbo:memberOf ?meshuggah .
  ?meshuggah rdf:type dbo:Band ;
             rdfs:label ""Meshuggah""@en .

  ?jens dbo:memberOf ?pain .
  ?pain rdf:type dbo:Band ;
        rdfs:label ""Pain""@en .

  ?fredrik foaf:name ""Fredrik Thordendal""@en .
  ?jens foaf:name ""Jens Kidman""@en .

  ?meshuggah dbo:member ?jens .
  
  ?pain dbo:musicalArtist ?artist .
}
```",3,7,4,3,1,3,3,71,0,0,33,0,0.0,0
427,42,val,"Give me the party of Giulio Andreotti and party of the person born, that is an office holder and a politician, as Romano Antonio Prodi and reference to the name of Italian People's Party (1994).","SELECT ?result WHERE { <http://dbpedia.org/resource/Giulio_Andreotti> <http://dbpedia.org/ontology/party> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Italian_People's_Party_(1994)> <http://xmlns.com/foaf/0.1/name> ?v2 . ?v1 <http://dbpedia.org/property/birthName> ""Romano Antonio Prodi""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/party> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?andreottiPartyLabel ?prodiPartyLabel ?ippReference
WHERE {
  # Giulio Andreotti's party
  dbr:Giulio_Andreotti dbo:party ?andreottiParty .
  ?andreottiParty rdfs:label ?andreottiPartyLabel .

  # Romano Prodi's party
  dbr:Romano_Prodi dbo:party ?prodiParty .
  ?prodiParty rdfs:label ?prodiPartyLabel .

  # Italian People's Party (1994)
  OPTIONAL {
    dbr:Italian_People%27s_Party_(1994) dbo:reference ?ippReference .
  }
}
```",5,7,6,2,3,3,3,71,0,0,1,0,0.0,0
303,16,val,"Give me the party of the person born, that is a politician, as Arnulfo Arias Madrid and party of Guillermo Endara.","SELECT ?result WHERE { <http://dbpedia.org/resource/Guillermo_Endara> <http://dbpedia.org/ontology/party> ?result . ?v2 <http://dbpedia.org/property/birthName> ""Arnulfo Arias Madrid""@en . ?v2 <http://dbpedia.org/ontology/party> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name ?partyLabel WHERE {
  VALUES ?person { 
    dbr:Arnulfo_Arias_Madrid 
    dbr:Guillermo_Endara 
  }
  
  ?person dbo:name ?name .
  OPTIONAL {
    ?person dbo:memberOfParty ?party .
    ?party rdfs:label ?partyLabel .
    FILTER (lang(?partyLabel) = 'en')
  }
}
ORDER BY ?person
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
328,18,val,Give me the leader of People's Commissariat of Defense of the Soviet Union and awardee of Order of Suvorov and commander in Eastern Front (World War II).,SELECT ?result WHERE { <http://dbpedia.org/resource/People's_Commissariat_of_Defense_of_the_Soviet_Union> <http://dbpedia.org/ontology/leader> ?result . ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Order_of_Suvorov> . <http://dbpedia.org/resource/Eastern_Front_(World_War_II)> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name WHERE {
  ?person a dbo:MilitaryPerson .
  ?person dbo:officeTitle dbr:People's_Commissar_for_Defence_of_the_Soviet_Union ;
          dbo:award dbr:Order_of_Suvorov ;
          dbo:militaryCommanderOf dbr:Eastern_Front_(World_War_II) .
  ?person rdfs:label ?name .
  FILTER (LANG(?name) = 'en')
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
421,19,val,Give me the band member of the awardee of [[#Awards and nominations and native of Socialist Federal Republic of Yugoslavia and person born as Edin Dervišhalidović.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Socialist_Federal_Republic_of_Yugoslavia> . ?result <http://dbpedia.org/property/birthName> ""Edin Dervišhalidović""@en . ?v1 <http://dbpedia.org/property/awards> ""[[#Awards and nominations""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band ?member WHERE {
  # Identify the person Edin Dervišhalidović (Edo Maajka)
  VALUES ?person { dbr:Edo_Maajka }
  
  # Find bands associated with Edo Maajka
  ?band dbo:member ?person .
  
  # Get other members of those bands
  ?band dbo:member ?member .
  
  FILTER(?person != ?member)
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
626,15,val,"Give me the awardee of Order of St. Andrew and commander in the force, that is a military conflict, of the commander in Battle of Paris (1814).",SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Order_of_St._Andrew> . <http://dbpedia.org/resource/Battle_of_Paris_(1814)> <http://dbpedia.org/ontology/commander> ?v0 . ?v1 <http://dbpedia.org/ontology/commander> ?v0 . ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
SELECT ?person WHERE {
  ?person dbo:awardeeOf dbr:Order_of_St._Andrew .
  ?person dbo:militaryConflictCommander ?conflict .
  ?battle dbo:commander ?person ;
          rdf:type dbr:Battle_of_Paris_(1814) .
}
```",4,5,5,3,2,3,2,20,0,0,9,0,0.0,0
617,44,val,Give me the spouse of the child of Antiochus III the Great and child of Antiochus III the Great and parent of the child of Antiochus (son of Antiochus III the Great).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Antiochus_III_the_Great> . ?v4 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Antiochus_III_the_Great> <http://dbpedia.org/ontology/child> ?v4 . <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/child> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Identify Antiochus III the Great
  dbr:Antiochus_III_the_Great dbo:child ?child .
  
  # Find a child who has a child named Antiochus
  ?child dbo:spouse ?spouse .
  ?child dbo:child ?grandChild .
  ?grandChild rdfs:label ""Antiochus""@en .

  FILTER NOT EXISTS {
    ?child rdfs:label ?name .
    FILTER (CONTAINS(LCASE(?name), ""unknown""))
  }
}
```",5,5,6,2,3,3,3,71,0,0,2,0,0.0,0
959,31,val,"Give me the native of Japan and member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of the person born in 1958.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v2 <http://dbpedia.org/ontology/birthYear> ""1958""^^<http://www.w3.org/2001/XMLSchema#gYear> . ?v2 <http://dbpedia.org/ontology/almaMater> ?v0 . ?result <http://dbpedia.org/ontology/team> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Japan> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?university WHERE {
  ?person a dbo:Person ;
          dbo:birthYear ""1958""^^xsd:gYear ;
          dbo:nationality dbr:Japan .
  
  OPTIONAL { ?person dbo:almaMater ?university . }
  
  FILTER EXISTS { 
    ?university a dbo:EducationalOrganization ;
                dbo:country dbr:Japan .
  }

  FILTER NOT EXISTS {
    ?university rdf:type/rdfs:subClassOf* dbp:NonEducationalOrganization
  }
}
```",4,8,5,3,2,3,3,71,0,0,167,0,0.0,0
314,18,val,"Give me the awardee of 30 and commander in the profession, that is an event and a societal event, of Lisa Gavrić.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ""30""^^<http://www.w3.org/2001/XMLSchema#integer> . ?v2 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Lisa_Gavrić> <http://dbpedia.org/property/occupation> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?event ?awardName WHERE {
  ?person a dbo:Actor ;
          foaf:name ""Lisa Gavrić""@en .
  
  OPTIONAL { ?person dbo:birthdayYear ?birthYear . }
  
  ?event dbo:recipient ?person ;
         dbo:award ?award .

  ?award dbp:name ?awardName .

  FILTER (?awardName IN (""Academy Award"", ""Oscar"")) .

  BIND((?event as xsd:date - ?birthYear) AS ?ageAtAward)

  FILTER(?ageAtAward >= 29 && ?ageAtAward <= 31)
}
```",3,5,4,2,2,2,3,28,0,0,2,0,0.0,0
488,43,val,"Give me the death place of the father, that is a politician, of the father, that is an office holder, of Matsudaira Tadamasa and birth place of Enomoto Takeaki and administration of Emperor Go-Yōzei.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Enomoto_Takeaki> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Matsudaira_Tadamasa> <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Emperor_Go-Yōzei> . ?v0 <http://dbpedia.org/property/father> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
# Query for the death place of Matsudaira Tadamasa's father
SELECT ?deathPlace WHERE {
  wd:Q123456 wdt:P22 ?father. # Matsudaira Tadamasa's father
  ?father wdt:P106 wd:Q82955. # Politician or office holder
  ?father wdt:D19 ?deathPlace.
}

UNION

# Query for the birth place of Enomoto Takeaki
SELECT ?birthPlace WHERE {
  wd:Q123457 wdt:P19 ?birthPlace. # Enomoto Takeaki's birthplace
}

UNION

# Query for the administration of Emperor Go-Yōzei
SELECT ?administration WHERE {
  wd:Q123458 wdt:P35 ?administration. # Administration during Emperor Go-Yōzei's reign
}
```

Note: Replace `wd:Q123456`, `wd:Q123457`, and `wd:Q123458` with the actual DBpedia identifiers for Matsudaira Tadamasa, Enomoto Takeaki, and Emperor Go-Yōzei respectively.",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
197,7,val,Give me the birthplace of the member of FC Politehnica Timișoara and birthplace of George Lusztig.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/FC_Politehnica_Timișoara> . ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/George_Lusztig> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
# Query for the birthplace of Ciprian Deac (a notable player from FC Politehnica Timișoara)
SELECT ?birthPlace WHERE {
  wd:Q1234568 dbo:birthPlace ?birthPlace .
}

# Query for the birthplace of George Lusztig
SELECT ?birthPlace WHERE {
  wd:Q5678901 dbo:birthPlace ?birthPlace .
}
```

Note: The `wd:Q1234568` and `wd:Q5678901` are placeholders for the actual DBpedia entity IDs for Ciprian Deac and George Lusztig, respectively. You would need to replace these with the correct identifiers from DBpedia.",3,3,4,2,2,2,2,9,0,0,2,0,0.0,0
177,7,val,"Give me the headquarter of Ministry of Culture, Sports and Tourism and entity in the residence of Alexander Gamelin.","SELECT ?result WHERE { <http://dbpedia.org/resource/Alexander_Gamelin> <http://dbpedia.org/property/residence> ?v0 . ?result <http://dbpedia.org/ontology/country> ?v0 . <http://dbpedia.org/resource/Ministry_of_Culture,_Sports_and_Tourism> <http://dbpedia.org/ontology/location> ?result . }","```sparql
# Query 1: Headquarters of Ministry of Culture, Sports and Tourism
SELECT ?headquarters WHERE {
  ?ministry rdfs:label ""Ministry of Culture, Sports and Tourism""@en .
  ?ministry dbo:headquarters ?headquarters .
}

UNION

# Query 2: Entity in the Residence of Alexander Gamelin
SELECT ?residenceEntity WHERE {
  ?gamelin foaf:name ""Alexander Gamelin""@en .
  ?gamelin dbo:residenceLocation ?location .
  ?location dbo:locatedIn ?residenceEntity .
}
```",3,3,4,2,2,2,2,9,0,0,1,0,0.0,0
701,4,train,Give me the child of Nefertari.,SELECT ?result WHERE { <http://dbpedia.org/resource/Nefertari> <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child WHERE {
  ?person dbp:name ""Nefertari""@en .
  ?person dbo:spouse ?husband .
  ?husband dbo:spouse ?wife .
  FILTER(?wife = ?person) .
  ?person dbo:child ?child .
}
```",1,1,2,1,1,3,3,71,0,0,6,0,0.0,0
959,2,train,Give me the manager of 2013 Júbilo Iwata season.,SELECT ?result WHERE { <http://dbpedia.org/resource/2013_Júbilo_Iwata_season> <http://dbpedia.org/ontology/manager> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?manager WHERE {
  ?team a dbo:SoccerClub ;
        dbo:officialWebsite ?website .
  
  FILTER(CONTAINS(LCASE(?website), ""jubilo iwata""))
  
  ?team dbo:coach ?manager .
  
  OPTIONAL { 
    ?managementEvent dbo:startDate ?startDate .
    ?managementEvent dbo:endDate ?endDate .
    ?managementEvent dbo:agent ?manager .
    
    FILTER(
      EXISTS {
        ?managementEvent dbo:agent ?manager ;
                        dbo:subject ?team .
      }
    )
    
    FILTER (
      (?startDate <= ""2013-12-31""^^xsd:date) &&
      (?endDate >= ""2013-01-01""^^xsd:date)
    )
  }
}
```",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
485,5,train,"Give me the birth place, that is a region, of Joseph Whitaker (naturalist).",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. <http://dbpedia.org/resource/Joseph_Whitaker_(naturalist)> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace WHERE {
  ?person a dbo:Naturalist ;
          foaf:name ""Joseph Whitaker"" .
  ?person dbo:birthPlace ?birthPlace .
  FILTER EXISTS { ?birthPlace a dbo:Region }
}
```",1,2,2,1,1,2,3,28,0,0,1,0,0.0,0
339,6,train,Give me the father of Princess Elizabeth of Greece and Denmark and child of George I of Greece.,SELECT ?result WHERE { <http://dbpedia.org/resource/George_I_of_Greece> <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Princess_Elizabeth_of_Greece_and_Denmark> <http://dbpedia.org/property/father> ?result . },"```sparql
SELECT ?father WHERE {
  ?princess foaf:parent ?father .
  ?princess rdfs:label ""Princess Elizabeth of Greece and Denmark""@en .
  
  ?father dbo:spouse ?mother .
  ?father dbo:child ?georgeIChild .
  ?georgeIChild rdfs:label ""George I of Greece""@en .

  FILTER(LANG(?princessLabel) = 'en')
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
528,13,train,Give me the war of the commander in Battle of La Rinconada de Ate.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Battle_of_La_Rinconada_de_Ate> <http://dbpedia.org/ontology/commander> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  ?battle a dbo:MilitaryConflict ;
         rdfs:label ""Battle of La Rinconada de Ate""@en .
  
  OPTIONAL { 
    ?battle dbo:commander ?commander .
  }
}
```",2,2,3,2,1,3,3,71,0,2,14,0.0,0.0,0
994,0,train,Give me the associated musical artist of S.A. Slayer.,SELECT ?result WHERE { <http://dbpedia.org/resource/S.A._Slayer> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?band WHERE {
  ?person foaf:name ""S.A. Slayer""@en .
  ?person dbo:member ?band .
  FILTER(CONTAINS(LCASE(STR(?band)), ""slayer""))
}
```",1,1,2,1,1,3,3,71,0,0,5,0,0.0,0
48,10,train,"Give me the actor, that is a musical artist, of the show with Stacey Dash.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Stacey_Dash> . ?v0 <http://dbpedia.org/property/starring> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
SELECT ?show ?actor WHERE {
  ?show dbo:starring dbp:Stacey_Dash .
  ?show dbo:starring ?actor .
  OPTIONAL { 
    ?artist dbo:profession dbr:Musical_artist .
    ?actor foaf:name ?name .
    FILTER EXISTS { ?artist foaf:name ?name }
  }
  FILTER EXISTS { ?artist foaf:name ?name }
}
```",2,3,3,2,1,3,2,20,0,0,8,0,0.0,0
44,3,train,"Give me the associated musical artist, that is a group and an organisation, of Queensrÿche.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Queensrÿche> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artist WHERE {
  ?artist dbo:associatedBand dbr:Queensrÿche .
  ?artist a dbo:MusicalArtist .
  ?artist a dbo:Organization .
}
```",1,3,2,1,1,2,2,9,0,0,3,0,0.0,0
492,0,train,Give me the person decedent at French Algeria.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/French_Algeria> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?deathDate WHERE {
  dbr:Charles_de_Gaulle dbo:dateOfDeath ?deathDate .
}
```",1,1,2,1,1,3,3,71,0,0,30,0,0.0,0
747,1,train,Give me the band of Amba Shepherd.,SELECT ?result WHERE { <http://dbpedia.org/resource/Amba_Shepherd> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?band WHERE {
  ?person a dbpedia-owl:MusicalArtist .
  ?person rdfs:label ""Amba Shepherd""@en .
  OPTIONAL { ?person dbp:band ?band . }
}
```",1,1,2,1,1,3,3,71,0,0,13,0,0.0,0
645,10,train,Give me the child of the parent of Adela Pankhurst.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Adela_Pankhurst> <http://dbpedia.org/ontology/parent> ?v0 . },"```sparql
SELECT ?child WHERE {
  dbpedia:Adela_Pankhurst dbo:parent ?parent .
  ?parent dbo:child ?child .
  FILTER(?child != dbpedia:Adela_Pankhurst)
}
```",2,2,3,2,1,3,2,20,0,0,3,0,0.0,0
617,14,train,Give me the parent of the child of Antiochus (son of Antiochus III the Great).,SELECT ?result WHERE { <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/child> ?v1 . ?result <http://dbpedia.org/ontology/child> ?v1 . },"```sparql
SELECT ?antiochusChild ?parent WHERE {
  ?antiochus dbo:child ?antiochusChild .
  FILTER(STRSTARTS(LCASE(?antiochus), ""antiochus iii the great""))
  ?antiochusChild dbo:parent ?parent .
}
```",2,2,3,2,1,3,3,71,0,0,2,0,0.0,0
184,13,train,Give me the child of the child of Archduke Joseph Karl of Austria.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v1 . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Karl_of_Austria> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?grandchildLabel WHERE {
  ?archduke rdf:type dbo:Archduke ;
            rdfs:label ""Joseph Karl of Austria""@en .
  
  ?archdukeChild dbo:childOf ?archduke ;
                 rdf:type dbo:Person .

  ?grandchild dbo:childOf ?archdukeChild ;
              rdf:type dbo:Person .
  
  ?grandchild rdfs:label ?grandchildLabel .
}
```",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
177,3,train,"Give me the office, that is an organisation, of Joo Don-sik.",SELECT ?result WHERE { <http://dbpedia.org/resource/Joo_Don-sik> <http://dbpedia.org/property/office> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?office ?organization WHERE {
  ?person a dbo:Person ;
          foaf:name ""Joo Don-sik""@en .
  
  ?person dbo:positionHeld ?office .
  ?office dbo:organization ?organization .
}
```",1,2,2,1,1,2,2,9,0,0,1,0,0.0,0
838,0,train,Give me the band of Raša Đelmaš.,SELECT ?result WHERE { <http://dbpedia.org/resource/Raša_Đelmaš> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?bandName WHERE {
  ?person a dbo:Musician ;
          foaf:name ""Raša Đelmaš""@en .
  OPTIONAL { ?person dbp:band ?band . }
  ?band rdfs:label ?bandName .
  FILTER (lang(?bandName) = 'en')
}
```",1,1,2,1,1,3,2,20,0,0,4,0,0.0,0
161,16,train,"Give me the force, that is a societal event and a military conflict, of the predecessor of Indalecio Prieto.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Indalecio_Prieto> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/commander> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?predecessor ?event WHERE {
  # Find Indalecio Prieto's role
  dbr:Indalecio_Prieto dbo:positionHeld ?role .
  
  # Identify his predecessor in that role
  ?role dbo:previousPositionHolder ?predecessor .

  # Find societal events or military conflicts associated with the predecessor
  OPTIONAL { ?predecessor dbo:associatedWith ?event . FILTER (CONTAINS(LCASE(STR(?event)), ""societal event"") || CONTAINS(LCASE(STR(?event)), ""military conflict"")) }
}
```",2,4,3,2,1,3,3,71,0,0,1,0,0.0,0
487,9,train,Give me the administration of the person born on 1955-01-26.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> ?v0 . ?v0 <http://dbpedia.org/ontology/birthDate> ""1955-01-26""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>

SELECT ?person ?officeName ?termStart ?termEnd WHERE {
  ?person dbo:birthday ""1955-01-26""^^xsd:date .
  OPTIONAL { 
    ?person dbo:office ?office .
    ?office rdfs:label ?officeName .
    FILTER(LANG(?officeName) = 'en')
    ?office dbo:startDate ?termStart .
    ?office dbo:endDate ?termEnd .
  }
}
```",2,2,3,2,1,3,2,20,0,0,3,0,0.0,0
488,2,train,Give me the administration of Emperor Go-Yōzei.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Emperor_Go-Yōzei> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?startYear ?endYear WHERE {
  dbr:Emperor_Go-Yōzei dbo:reign ?reign .
  ?reign dbo:startYear ?startYear ;
         dbo:endYear ?endYear .
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
487,2,train,Give me the person born on 1955-01-26.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthDate> ""1955-01-26""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  ?person dbo:birthDate ?date .
  FILTER (YEAR(?date) = 1955 && MONTH(?date) = 1 && DAY(?date) = 26)
}
```",1,1,2,1,1,3,2,20,23,0,0,1.0,1.0,1.0
820,4,train,Who is the professional in Actor?,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Actor""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?actor ?actorLabel WHERE {
  ?actor a dbo:Actor .
  OPTIONAL { ?actor foaf:name ?actorLabel . }
  FILTER (lang(?actorLabel) = 'en')
}
ORDER BY ?actorLabel
LIMIT 10
```",1,1,2,1,1,3,2,20,1,10,21579,0.09090909090909091,4.633920296570899e-05,9.26311889213098e-05
392,9,train,Give me the province of Schio and region of Central European Time.,SELECT ?result WHERE { <http://dbpedia.org/resource/Schio> <http://dbpedia.org/ontology/province> ?result . ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Central_European_Time> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?province ?region WHERE {
  # Find the province of Schio
  OPTIONAL { 
    dbr:Schio dbo:locatedIn ?province .
  }
  
  # Find regions associated with Central European Time
  OPTIONAL {
    ?timeZone a dbo:TimeZone ;
              dbo:hasTimezoneName ""Central European Time"" ;
              dbo:country ?region .
  }
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
981,6,train,Give me the entity in Indonesia and birth place of Novia Indriani Mamuaja.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Indonesia> . <http://dbpedia.org/resource/Novia_Indriani_Mamuaja> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace ?nationality ?residence WHERE {
  VALUES ?person { dbr:Novia_Indriani_Mamuaja }
  
  ?person dbo:birthPlace ?birthPlace .
  OPTIONAL { ?person dbo:nationality ?nationality . FILTER(CONTAINS(LCASE(STR(?nationality)), ""indonesia"")) }
  OPTIONAL { ?person dbo:residence ?residence . FILTER(CONTAINS(LCASE(STR(?residence)), ""indonesia"")) }
}
```",2,2,3,1,2,3,2,20,1,1,0,0.5,1.0,0.6666666666666666
701,3,train,Give me the spouse of Amun-her-khepeshef.,SELECT ?result WHERE { <http://dbpedia.org/resource/Amun-her-khepeshef> <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?spouse WHERE {
  ?person dbo:name ""Amun-her-khepeshef""@en .
  ?person dbo:spouse ?spouse .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
747,6,train,Who is the writer of Apollo (Hardwell song)?,SELECT ?result WHERE { <http://dbpedia.org/resource/Apollo_(Hardwell_song)> <http://dbpedia.org/property/writer> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?writer WHERE {
  ?song dbo:title ""Apollo"" ;
        dbo:artist dbr:Hardwell .
  OPTIONAL { ?song dbo:composer ?writer . }
  OPTIONAL { ?song dbo:lyricist ?writer . }
}
```",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
378,17,train,"Who is the commander in the war, that is a military conflict and a societal event and an event, of Thomas Trigge?",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Thomas_Trigge> <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?event ?commander WHERE {
  ?person rdfs:label ""Thomas Trigge""@en .
  ?person dbo:commanderOf ?event .
  ?event a dbo:MilitaryConflict ;
         dbo:participatedIn ?societalEvent .
  ?societalEvent a dbo:Event .
  OPTIONAL { ?event dbo:commander ?commander . }
  FILTER (lang(?person) = 'en')
}
```",2,5,3,2,1,3,3,71,0,0,169,0,0.0,0
696,7,train,Give me the birth place of the member of Dropkick Murphys.,SELECT ?result WHERE { <http://dbpedia.org/resource/Dropkick_Murphys> <http://dbpedia.org/ontology/bandMember> ?v1 . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?member ?birthPlace WHERE {
  ?band dbo:bandMember ?member .
  ?member dbp:birthPlace ?birthPlace .
  FILTER (str(?band) = ""Dropkick_Murphys"")
}
```",2,2,3,2,1,3,2,20,0,0,6,0,0.0,0
55,8,train,"Give me the band member of the producer, that is a band, of Used to Love Her.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. <http://dbpedia.org/resource/Used_to_Love_Her> <http://dbpedia.org/ontology/producer> ?v1 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandMember WHERE {
  # Find the song ""Used to Love Her""
  ?song dbo:title ""Used to Love Her""@en .
  
  # Get the producer of the song
  ?song dbo:producer ?producer .

  # Check if the producer is a band
  ?producer rdf:type dbo:Band .

  # Retrieve members of the band
  ?producer dbo:bandMember ?bandMember .
}
```",2,3,3,2,1,2,3,28,0,0,55,0,0.0,0
318,2,train,Give me the founding year of Eel Pie Publishing.,SELECT ?result WHERE { <http://dbpedia.org/resource/Eel_Pie_Publishing> <http://dbpedia.org/ontology/foundingYear> ?result . },"```sparql
SELECT ?foundingYear WHERE {
  ?entity <http://dbpedia.org/ontology/foundingYear> ?foundingYear .
  ?entity <http://www.w3.org/2000/01/rdf-schema#label> ""Eel Pie Publishing""@en .
}
```",1,1,2,1,1,2,2,9,1,0,0,1.0,1.0,1.0
197,4,train,Give me the birthplace of Dumitru Nadu and birthplace of George Lusztig.,SELECT ?result WHERE { <http://dbpedia.org/resource/George_Lusztig> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Dumitru_Nadu> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person ?name ?birthPlace WHERE {
  VALUES ?person { 
    dbpedia:Dumitru_Nadu 
    dbpedia:George_Lusztig
  }
  
  ?person foaf:name ?name .
  OPTIONAL { ?person dbo:birthPlace ?birthPlace . }
}
ORDER BY ?person
```",2,2,3,1,2,2,2,9,0,0,1,0,0.0,0
429,6,train,"Give me the country of the military force, that is an organisation, of Camden Expedition.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/country> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Camden_Expedition> . },"```sparql
SELECT ?country WHERE {
  ?expedition dbo:partOf ?conflict .
  ?militaryForce dbo:participatedIn ?expedition ;
                 rdf:type dbo:MilitaryOrganization .
  ?militaryForce dbo:country ?country .
  FILTER(CONTAINS(LCASE(?expedition), ""camden expedition""))
}
```",2,3,3,2,1,2,2,9,0,0,7,0,0.0,0
994,15,train,Give me the associated musical artist of the reference to Watchtower.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://xmlns.com/foaf/0.1/name> ""Watchtower""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artist WHERE {
  ?song dbo:title ""Watchtower""@en .
  ?song dbo:artist ?artist .
}
```",2,2,3,2,1,3,3,71,0,0,6,0,0.0,0
404,14,train,"Give me the child of the father of Ernest Augustus, Duke of Brunswick.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/property/father> ?v1 . }","```sparql
SELECT ?child WHERE {
  wd:Q11916 wdt:P22 ?father .
  ?father wdt:P31 wd:Q5 . # Ensure the father is a human
  ?father wdt:P40 wd:Q1189 . # King George III's identifier in DBpedia
  ?father wdt:P40 ?child . # Children of King George III
}
```",2,2,3,2,1,3,3,71,0,0,3,0,0.0,0
328,2,train,Give me the leader of People's Commissariat of Defense of the Soviet Union.,SELECT ?result WHERE { <http://dbpedia.org/resource/People's_Commissariat_of_Defense_of_the_Soviet_Union> <http://dbpedia.org/ontology/leader> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?leader WHERE {
  ?organization a dbo:GovernmentAgency ;
                rdfs:label ""People's Commissariat of Defense""@en .
  ?organization dbo:head ?leader .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
659,1,train,Give me the commander in Battle of Leipzig.,SELECT ?result WHERE { <http://dbpedia.org/resource/Battle_of_Leipzig> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?commander WHERE {
  ?battle a dbpedia-owl:Battle .
  ?battle rdfs:label ""Battle of Leipzig""@en .
  OPTIONAL { ?battle dbp:commander ?commander . }
}
```",1,1,2,1,1,3,3,71,0,0,21,0,0.0,0
778,9,train,"Give me the award of the awardee, that is American, of Wolf Prize in Medicine.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Wolf_Prize_in_Medicine> . ?v0 <http://dbpedia.org/property/awards> ?result . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/United_States>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?awardee ?award WHERE {
  ?prize a dbo:WolfPrizeInMedicine .
  ?prize dbo:recipient ?awardee .
  ?awardee dbo:nationality dbr:United_States .
  ?prize rdfs:label ?award .
}
```",2,3,3,2,1,3,2,20,0,0,9,0,0.0,0
767,12,train,Give me the alma mater of Carl L. Nippert and reference to .,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> """"@en . <http://dbpedia.org/resource/Carl_L._Nippert> <http://dbpedia.org/ontology/almaMater> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?university WHERE {
  ?person a dbo:Person ;
          foaf:name ""Carl L. Nippert""@en .
  ?person dbo:almaMater ?university .
}
```",2,2,3,1,2,3,3,71,0,0,2,0,0.0,0
626,8,train,Give me the awardee of the award of Aleksey Petrovich Yermolov.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Aleksey_Petrovich_Yermolov> <http://dbpedia.org/property/awards> ?v0 . },"```sparql
SELECT ?recipient WHERE {
  ?award dbo:wikiPageRedirects db:Q1234567 . # Assuming Q1234567 is the DBpedia ID for the ""Order of Yermolov""
  ?award dbo:recipient ?recipient .
}
```",2,2,3,2,1,3,2,20,0,0,230,0,0.0,0
378,13,train,Give me the war of the commander in Peninsular War.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Peninsular_War> <http://dbpedia.org/ontology/commander> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war WHERE {
  dbr:Athur_Wellesley dbo:militaryConflict ?war .
  FILTER(CONTAINS(LCASE(STR(?war)), ""peninsular war""))
}
```",2,2,3,2,1,3,3,71,0,0,118,0,0.0,0
547,5,train,Give me the show with Emily Richard.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emily_Richard> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?show WHERE {
  ?person a dbo:Actor ;
          foaf:name ""Emily Richard""@en .
  ?film dbo:starring ?person ;
        a dbo:Film .
  OPTIONAL { ?film dbo:genre ?genre . }
  FILTER EXISTS { ?film dbo:type dbr:Television_series } .
  BIND (STR(?film) AS ?show)
}
```",1,1,2,1,1,3,3,71,0,0,4,0,0.0,0
712,9,train,"Give me the country of the military force, that is an organisation and a military unit, of Vyoshenskaya Uprising.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v0 <http://dbpedia.org/ontology/country> ?result . ?v0 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Vyoshenskaya_Uprising> . },"```sparql
SELECT DISTINCT ?country WHERE {
  ?event rdfs:label ""Vyoshenskaya Uprising""@en .
  ?event dbo:participatedInMilitaryForce ?militaryForce .
  ?militaryForce a dbo:MilitaryUnit ;
                 dbo:militaryBranchOf ?organization .
  ?organization dbo:country ?country .
}
```",2,4,3,2,1,3,2,20,0,0,2,0,0.0,0
534,1,train,Give me the headquarter of Royal Dublin Society.,SELECT ?result WHERE { <http://dbpedia.org/resource/Royal_Dublin_Society> <http://dbpedia.org/ontology/headquarter> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?headquarters WHERE {
  ?s rdfs:label ""Royal Dublin Society""@en .
  ?s dbo:headquarters ?headquarters .
}
```",1,1,2,1,1,3,2,20,0,0,3,0,0.0,0
488,14,train,Give me the administration of the father of Emperor Go-Mizunoo.,SELECT ?result WHERE { <http://dbpedia.org/resource/Emperor_Go-Mizunoo> <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/property/leader> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?administration WHERE {
  ?person a dbo:Person ;
          foaf:name ""Toyotomi Hideyoshi""@en .
  OPTIONAL { ?person dbo:office ?administration . }
}
```",2,2,3,2,1,3,3,71,0,0,2,0,0.0,0
356,7,train,Give me the player in the successor of 2014 Sacramento Republic FC season.,SELECT ?result WHERE { <http://dbpedia.org/resource/2014_Sacramento_Republic_FC_season> <http://dbpedia.org/ontology/successor> ?v1 . ?v1 <http://dbpedia.org/ontology/team> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?player WHERE {
  ?team dbo:leagueMemberOf dbr:Major_League_Soccer .
  ?team dbo:name ""Sacramento Republic FC""@en .
  ?season dbo:hasParticipant ?team .
  ?season dbo:year ""2019""^^xsd:gYear .
  ?roster dbo:member ?player .
  ?roster dbo:participant ?team .
}
```",2,2,3,2,1,3,2,20,0,0,1,0,0.0,0
356,9,train,"Give me the successor of the predecessor, that is a sports team season and a soccer club season, of 2015 Sacramento Republic FC season.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v0 <http://dbpedia.org/ontology/successor> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?v0 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/2015_Sacramento_Republic_FC_season> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?successorSeason WHERE {
  # Find the 2015 Sacramento Republic FC season
  ?season a dbo:SoccerClubSeason ;
          dbo:club dbr:Sacramento_Republic_FC ;
          dbo:year ""2015""^^xsd:gYear .

  # Find its predecessor
  ?predecessorSeason dbo:succeeds ?season .

  # Find the successor of the predecessor
  ?successorSeason dbo:precedes ?predecessorSeason .
}
```",2,4,3,2,1,3,2,20,0,0,1,0,0.0,0
712,5,train,Who is the awardee of Hero of the Soviet Union?,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Hero_of_the_Soviet_Union> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person dbo:award dbr:Hero_of_the_Soviet_Union .
}
```",1,1,2,1,1,3,2,20,819,68,18,0.923337091319053,0.978494623655914,0.9501160092807426
30,5,train,Give me the native of the birthplace of Silvia Cohen.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . <http://dbpedia.org/resource/Silvia_Cohen> <http://dbpedia.org/ontology/birthPlace> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nativeLanguage WHERE {
  ?silviaCohen a dbo:Person ;
               foaf:name ""Silvia Cohen""@en .
  ?silviaCohen dbo:birthPlace ?birthplace .

  OPTIONAL { 
    ?birthplace dbo:languageSpoken ?nativeLanguage .
  }
}
```",2,2,3,2,1,2,2,9,0,0,11488,0,0.0,0
251,1,train,Give me the administration of Forza Italia (2013).,SELECT ?result WHERE { ?result <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Forza_Italia_(2013)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?position WHERE {
    # Identify the political party ""Forza Italia""
    dbr:Forza_Italia a dbo:PoliticalParty .

    # Find individuals associated with Forza Italia in 2013
    ?person dbo:memberOf dbr:Forza_Italia .
    
    OPTIONAL { 
        ?government dbo:hasMember ?person ;
                    dbo:startDate ?start ;
                    dbo:endDate ?end .
        
        FILTER (?start <= ""2013-12-31""^^xsd:date && (?end >= ""2013-01-01""^^xsd:date || NOT EXISTS { ?end . }))
    }
    
    OPTIONAL {
        ?person dbo:positionHeld ?position .
    }

    # Filter to ensure we are looking at the administration in 2013
    FILTER (YEAR(?start) <= 2013 && (?end >= ""2013-01-01""^^xsd:date || NOT EXISTS { ?end . }))
}
ORDER BY ?person
```",1,1,2,1,1,2,3,28,0,0,5,0,0.0,0
179,3,train,Give me the birth name of Sirikit.,SELECT ?result WHERE { <http://dbpedia.org/resource/Sirikit> <http://dbpedia.org/property/birthName> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?birthName WHERE {
  ?person a dbo:Person ;
          rdfs:label ""Sirikit""@en .
  OPTIONAL { 
    ?person foaf:givenName ?birthName .
  }
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
232,4,train,Give me the person born as John Devon Roland Pertwee.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""John Devon Roland Pertwee""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person ?alias WHERE {
  ?person dbo:birthName ""John Devon Roland Pertwee"" .
  OPTIONAL { ?person foaf:name ?alias . }
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
285,2,train,Who is the spouse of Aristotle Onassis?,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Aristotle_Onassis> . },"```sparql
SELECT ?spouse WHERE {
  dbpedia:Aristotle_Onassis dbo:spouse ?spouse .
}
UNION
SELECT ?partner WHERE {
  dbpedia:Aristotle_Onassis dbo:partner ?partner .
}
```",1,1,2,1,1,3,2,20,0,0,2,0,0.0,0
184,5,train,"Give me the parent, that is a royalty, of Archduke Ladislaus Philipp of Austria.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Archduke_Ladislaus_Philipp_of_Austria> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent ?parentLabel WHERE {
  VALUES ?ladislaus { dbr:Ladislaus_Philipp_of_Austria }
  
  ?ladislaus dbo:parent ?parent .
  ?parent a dbo:Monarch .
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
```",1,2,2,1,1,3,3,71,0,0,2,0,0.0,0
778,10,train,"Give me the work, that is a software, of the author of Pushd and popd.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/author> ?v0 . <http://dbpedia.org/resource/Pushd_and_popd> <http://dbpedia.org/property/author> ?v0 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Software>. },"```sparql
SELECT ?work WHERE {
  ?person dbo:birthName ""William John Joy""@en .
  ?person dbo:profession dbr/Computer_programmer .
  ?person dbo:worksFor dbr/Sun_Microsystems .
  ?person dbo:software ?work .
}
```",2,3,3,2,1,3,2,20,0,0,5,0,0.0,0
16,0,train,Give me the spouse of Ted McGinley.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
SELECT ?spouse WHERE {
  dbpedia:en:Ted_McGinley dbo:spouse ?spouse .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
378,2,train,"Give me the claim to fame of Louis des Balbes de Berton de Crillon, 1st Duke of Mahón.","SELECT ?result WHERE { <http://dbpedia.org/resource/Louis_des_Balbes_de_Berton_de_Crillon,_1st_Duke_of_Mahón> <http://dbpedia.org/ontology/knownFor> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?claimToFame WHERE {
  VALUES ?person { dbr:Louis_des_Balbes_de_Berton_de_Crillon_1st_Duke_of_Mahón }
  ?person dbo:knownFor ?claimToFame .
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
498,2,train,"Give me the band, that is an organisation and a band, of Solace of Requiem.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Solace_of_Requiem> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?band WHERE {
  ?band a dbo:Band .
  ?band a dbo:Organization .
  ?band rdfs:label ""Solace of Requiem""@en .
}
```",1,3,2,1,1,2,2,9,0,0,4,0,0.0,0
391,9,train,"Give me the actor of The Departed and native of Compton, California.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Compton,_California> . <http://dbpedia.org/resource/The_Departed> <http://dbpedia.org/ontology/starring> ?result . }","```sparql
SELECT ?actor WHERE {
  ?film dcterms:title ""The Departed""@en .
  ?film dbo:starring ?actor .
  ?actor dbo:birthPlace ?place .
  FILTER (CONTAINS(LCASE(str(?place)), ""compton, california""))
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
994,3,train,Give me the reference to Watchtower.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Watchtower""@en . }","```sparql
SELECT ?entity ?label WHERE {
  ?entity rdfs:label ?label .
  FILTER(CONTAINS(LCASE(?label), ""watchtower"") && CONTAINS(LCASE(STR(?entity)), ""jehovah's witnesses""))
}
LIMIT 1
```",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
712,3,train,Give me the country of Armed Forces of South Russia.,SELECT ?result WHERE { <http://dbpedia.org/resource/Armed_Forces_of_South_Russia> <http://dbpedia.org/ontology/country> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?countryLabel WHERE {
  ?entity rdfs:label ""Armed Forces of South Russia""@en .
  ?entity dbo:country ?country .
  ?country rdfs:label ?countryLabel .
}
```",1,1,2,1,1,3,2,20,0,2,2,0.0,0.0,0
666,1,train,Give me the figure known as The Three Lions.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ""The Three Lions""@en . }","```sparql
SELECT ?entity ?description WHERE {
  ?entity dbo:country dbr:England .
  ?entity rdfs:label ?label .
  FILTER (CONTAINS(LCASE(?label), ""coat of arms"") || CONTAINS(LCASE(?label), ""national emblem""))
  OPTIONAL { ?entity dbo:description ?description . }
  FILTER(CONTAINS(LCASE(?description), ""three lions""))
}
```",1,1,2,1,1,3,2,20,0,0,5,0,0.0,0
64,3,train,"Give me the region, that is a country, of Central European Time.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?country WHERE {
  ?country a dbo:Country .
  ?country dbo:timeZone dbr:Central_European_Time_Zone .
}
```",1,2,2,1,1,2,2,9,0,0,56,0,0.0,0
10,5,train,Give me the birth name of Sharon Kao.,SELECT ?result WHERE { <http://dbpedia.org/resource/Sharon_Kao> <http://dbpedia.org/property/birthName> ?result . },"```sparql
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>

SELECT ?birthName WHERE {
  ?person foaf:name ""Sharon Kao"" .
  OPTIONAL { ?person foaf:givenName ?firstName . }
  OPTIONAL { ?person foaf:familyName ?lastName . }
  BIND(CONCAT(?firstName, "" "", ?lastName) AS ?birthName)
}
```",1,1,2,1,1,2,3,28,0,0,2,0,0.0,0
404,0,train,Give me the spouse of Princess Victoria Louise of Prussia.,SELECT ?result WHERE { <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  dbr:Princess_Victoria_Louise_of_Prussia dbo:spouse ?spouse .
}
```",1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
801,11,train,Give me the professional in the alter ego of The Shadow.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v0 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v0 . },"```sparql
SELECT ?person WHERE {
  ?character dbo:alterEgoOf dbr:The_Shadow .
  ?character dbo:creator ?person .
  ?person rdfs:label ""Walter B. Gibson""@en .
}
```",2,2,3,2,1,3,3,71,0,0,39640,0,0.0,0
485,10,train,"Give me the birth place of the awardee, that is a writer and a poet, of Eric Gregory Award.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Poet>. ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Eric_Gregory_Award> . },"```sparql
SELECT ?person ?birthPlace WHERE {
  ?award dcterms:isPartOf <http://dbpedia.org/resource/Society_of_Authors> .
  ?award dbo:recipient ?person .
  ?award rdfs:label ""Eric Gregory Award""@en .
  ?person dbo:occupation ?occupation .
  FILTER(CONTAINS(LCASE(?occupation), ""writer"") || CONTAINS(LCASE(?occupation), ""poet"")) .
  OPTIONAL { ?person dbp:birthPlace ?birthPlace . }
}
```",2,4,3,2,1,2,3,28,0,0,7,0,0.0,0
54,12,train,Give me the parent of Thado Minsaw of Prome and predecessor of Ameitta Thiri Maha Dhamma Dewi of Ava.,SELECT ?result WHERE { <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Ameitta_Thiri_Maha_Dhamma_Dewi_of_Ava> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commonIndividual WHERE {
  # Identify the parent of Thado Minsaw of Prome
  ?thadoMinsaw dbo:parent ?parentOfThado .
  ?parentOfThado rdfs:label ""Thado Minsaw""@en .

  # Identify Ameitta Thiri Maha Dhamma Dewi of Ava and her predecessor
  ?ameitta dbr:Ava dbo:predecessor ?predecessorOfAmeitta .
  ?ameitta rdfs:label ""Ameitta Thiri Maha Dhamma Dewi""@en .

  # Find the common individual who is both parent of Thado Minsaw and predecessor of Ameitta
  FILTER (?parentOfThado = ?predecessorOfAmeitta)
  
  # Return the common individual
  BIND(?parentOfThado AS ?commonIndividual)
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
666,9,train,"Give me the manager, that is a sports manager, of the team, that is a soccer club and a sports team season, of Leonid Slutsky (football coach).",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/manager> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v0 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Leonid_Slutsky_(football_coach)> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?team ?manager WHERE {
  # Find teams managed by Leonid Slutsky
  ?slutskyCoach a dbo:FootballManager ;
                foaf:name ""Leonid Slutsky""@en .
  
  ?slutskyCoach dbo:coach ?team .

  # Find the manager of those teams during the seasons he was coaching
  ?team dbo:manager ?manager .
}
```",2,5,3,2,1,3,2,20,0,0,5,0,0.0,0
435,5,train,Give me the author of Iceland.,SELECT ?result WHERE { <http://dbpedia.org/resource/Iceland> <http://dbpedia.org/property/author> ?result . },"```sparql
SELECT ?author WHERE {
  ?author dbo:birthPlace dbr:Iceland .
  ?author rdf:type dbo:Writer .
}
```",1,1,2,1,1,2,3,28,0,20,1,0.0,0.0,0
827,4,train,"Who is the spouse, that is a royalty, of Princess Pauline of Saxe-Weimar-Eisenach?",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Princess_Pauline_of_Saxe-Weimar-Eisenach> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
SELECT ?spouse WHERE {
  dbpedia:Pauline_of_Saxe-Weimar-Eisenach dbo:spouse ?spouse .
  OPTIONAL { ?spouse dbo:title ?title . FILTER(CONTAINS(LCASE(?title), ""duke"") || CONTAINS(LCASE(?title), ""grand duke"")) }
}
```",1,2,2,1,1,3,2,20,0,0,1,0,0.0,0
54,16,train,Give me the child of the parent of Thado Minsaw of Prome.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v1 . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> . },"```sparql
SELECT ?child WHERE {
  ?thadoMinsaw dbo:birthPlace dbr:Prome ;
               a dbo:Monarch .
  
  ?parent dbo:child ?thadoMinsaw .

  ?parent dbo:child ?child .
}
```",2,2,3,2,1,3,3,71,0,0,3,0,0.0,0
659,0,train,Give me the commander in German campaign of 1813.,SELECT ?result WHERE { <http://dbpedia.org/resource/German_campaign_of_1813> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
    ?campaign dbo:wikiPageRedirects dbr:German_Campaign_of_1813 .
    ?campaign dbo:militaryCommander ?commander .
}
```",1,1,2,1,1,3,3,71,0,0,31,0,0.0,0
617,7,train,Who is the commander in Battle of Panium?,SELECT ?result WHERE { <http://dbpedia.org/resource/Battle_of_Panium> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?commander WHERE {
  ?battle a dbo:Battle .
  ?battle rdfs:label ""Battle of Panium""@en .
  OPTIONAL { ?battle dbp:commander ?commander . }
}
```",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
801,15,train,Give me the alter ego of the true self of The Shadow.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/alterEgo> ?result . ?v1 <http://xmlns.com/foaf/0.1/givenName> ""The Shadow""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?trueSelfName WHERE {
  ?shadow dbo:alterEgo ?trueSelf .
  ?shadow rdfs:label ""The Shadow""@en .
  ?trueSelf rdfs:label ?trueSelfName .
}
```",2,2,3,2,1,3,3,71,0,0,3,0,0.0,0
915,1,train,Give me the father of Lizzie Spaulding.,SELECT ?result WHERE { <http://dbpedia.org/resource/Lizzie_Spaulding> <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?father WHERE {
  ?lizzie dbo:givenName ""Lizzie"" .
  ?lizzie dbo:familyName ""Spaulding"" .
  ?lizzie dbo:parent ?father .
  ?father a dbo:Person .
  FILTER NOT EXISTS { ?father dbp:gender ""female"" }
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
783,9,train,Give me the band member of the person born as Samuel Ofori Amponsah.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ""Samuel Ofori Amponsah""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?bandMember WHERE {
  ?person foaf:name ""Shaggy"" .
  ?person dbo:birthName ""Samuel Ofori Amponsah"" .
  ?person dbo:musicalBand ?band .
  ?band dbo:member ?bandMember .
}
```",2,2,3,2,1,3,2,20,0,0,5,0,0.0,0
701,1,train,Give me the parent of Henuttawy (19th dynasty).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Henuttawy_(19th_dynasty)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
    ?henuttawy a dbo:Person ;
               rdfs:label ""Henuttawy""@en .
    OPTIONAL { ?henuttawy dbo:spouse ?spouse . }
    OPTIONAL { ?henuttawy dbo:childOf ?parent . }
    FILTER (CONTAINS(LCASE(?henuttawy), ""henuttawy""))
    FILTER (CONTAINS(LCASE(STR(?parent)), ""19th dynasty""))
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
54,10,train,Give me the child of Thinkhaya of Pagan and predecessor of Ameitta Thiri Maha Dhamma Dewi of Ava.,SELECT ?result WHERE { <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Ameitta_Thiri_Maha_Dhamma_Dewi_of_Ava> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  # Thinkhaya of Pagan's child
  ?thinkhaya dbo:spouse ?parent .
  ?parent dbo:child ?child .

  FILTER(?thinkhaya = dbr:Thinkhaya_of_Pagan)

  # Predecessor of Ameitta Thiri Maha Dhamma Dewi of Ava
  ?predecessor dbo:successor dbr:Ameitta_Thiri_Maha_Dhamma_Dewi_of_Ava .
  
  FILTER(?child = ?predecessor)
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
778,5,train,"Give me the work, that is a software, of Bill Joy.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Bill_Joy> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Software>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?software WHERE {
  ?person a dbo:Person ;
          foaf:name ""Bill Joy""@en .
  
  ?software dbo:creator ?person ;
            a dbo:Software .
}
```",1,2,2,1,1,3,2,20,0,0,5,0,0.0,0
251,11,train,Give me the death place of the author of The Twelve Abbots of Challant.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/The_Twelve_Abbots_of_Challant> <http://dbpedia.org/property/author> ?v1 . },"```sparql
SELECT ?deathPlace WHERE {
  ?person dbo:birthName ""Aymon de Rivail""@en .
  ?person dbo:deathPlace ?deathPlace .
}
```",2,2,3,2,1,2,3,28,0,0,3,0,0.0,0
314,3,train,Give me the headquarter of House of Sombrerete.,SELECT ?result WHERE { <http://dbpedia.org/resource/House_of_Sombrerete> <http://dbpedia.org/ontology/location> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?headquarters WHERE {
  ?house a dbo:NobleHouse ;
         rdfs:label ""House of Sombrerete""@en .
  OPTIONAL { ?house dbo:headquarters ?headquarters . }
}
```",1,1,2,1,1,2,3,28,0,0,2,0,0.0,0
391,17,train,"Give me the movie, that is a movie and a work and a television show, with the professional in .","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/property/occupation> """"@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?result <http://dbpedia.org/property/starring> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?item WHERE {
  ?item dbo:film [] .
  ?item dbo:work [] .
  ?item dbo:televisionSeries [] .
}
```",2,5,3,2,1,3,3,71,0,0,1674,0,0.0,0
9,2,train,Give me the figure known as QUB.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ""QUB""@en . }","```sparql
SELECT ?entity ?label WHERE {
  ?entity rdfs:label ?label .
  FILTER(CONTAINS(LCASE(?label), ""qub""))
  FILTER(langMatches(lang(?label), ""en""))
}
```",1,1,2,1,1,3,3,71,0,1771,1,0.0,0.0,0
392,3,train,"Give me the region, that is a country, of Central European Time.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?country WHERE {
  ?country a dbo:Country .
  ?country dbo:timeZone dbr:Central_European_Time_Zone .
}
```",1,2,2,1,1,2,3,28,0,0,56,0,0.0,0
645,6,train,Give me the alma mater of Sylvia Pankhurst and entity in United Kingdom.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . <http://dbpedia.org/resource/Sylvia_Pankhurst> <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?almaMater WHERE {
  ?s dbr:Sylvia_Pankhurst .
  ?s dbo:almaMater ?almaMater .
  ?almaMater dbo:location ?location .
  FILTER (CONTAINS(LCASE(str(?location)), ""united kingdom""))
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
645,4,train,Give me the parent of Adela Pankhurst.,SELECT ?result WHERE { <http://dbpedia.org/resource/Adela_Pankhurst> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?parent WHERE {
  ?person dbo:name ""Adela Pankhurst""@en .
  ?person a dbo:Person .
  ?person dbo:parent ?parent .
}
```",1,1,2,1,1,3,2,20,0,0,2,0,0.0,0
959,15,train,"Give me the alma mater, that is Japanese and an organisation and a university and an educational institution, of the person born in 1958.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthYear> ""1958""^^<http://www.w3.org/2001/XMLSchema#gYear> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?v1 <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?almaMater WHERE {
  ?person dbo:birthYear ""1958""^^xsd:gYear .
  ?person dbo:almaMater ?almaMater .
  ?almaMater a dbo:EducationalOrganization ;
             a dbo:University ;
             a dbo:Organisation ;
             dbp:country dbr:Japan .
}
```",2,6,3,2,1,3,3,71,0,0,3,0,0.0,0
303,7,train,Give me the party of Arnulfo Arias and party of Guillermo Endara.,SELECT ?result WHERE { <http://dbpedia.org/resource/Guillermo_Endara> <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Arnulfo_Arias> <http://dbpedia.org/ontology/party> ?result . },"```sparql
# Query for Arnulfo Arias's party affiliation
SELECT ?party WHERE {
  wd:Q123456 dbr:political_party ?party .
}

# Query for Guillermo Endara's party affiliation
SELECT ?party WHERE {
  wd:Q789012 dbr:political_party ?party .
}
```

Note: Replace `wd:Q123456` with the actual DBpedia entity ID for Arnulfo Arias and `wd:Q789012` with the actual DBpedia entity ID for Guillermo Endara. You can find these IDs by searching their names on DBpedia.",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
16,10,train,Give me the person born as Georgeanne Marie Rice and spouse of Ted McGinley.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Georgeanne Marie Rice""@en . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?spouse WHERE {
  ?person dbr:Ted_McGinley .
  ?person dbo:spouse ?spouse .
  OPTIONAL { ?spouse foaf:name ""Georgeanne Marie Rice""@en }
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
251,6,train,Give me the administration of Forza Italia (2013) and location of Battle of Marengo.,SELECT ?result WHERE { <http://dbpedia.org/resource/Battle_of_Marengo> <http://dbpedia.org/ontology/place> ?result . ?result <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Forza_Italia_(2013)> . },"```sparql
# Query to find the leader/administration of Forza Italia in 2013
SELECT ?person WHERE {
  ?party dbo:wikiPageRedirects db:Q1116800 .
  ?party dbo:leader ?person .
  ?person dbo:birthYear ?year .
  FILTER (?year <= 2013 && (BOUND(?deathYear) ?deathYear >= 2013))
}

# Query to find the location of the Battle of Marengo
SELECT ?location WHERE {
  db:Q1116800 dbo:place ?battle .
  ?battle dbo:location ?location .
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
838,1,train,Give me the band member of Kerber.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Kerber> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?member WHERE {
  ?band a dbo:Band ;
        rdfs:label ""Kerber""@en .
  
  ?bandMember dbo:bandMember ?band ;
              a dbo:MusicArtist .

  ?bandMember rdfs:label ?member .
}
```",1,1,2,1,1,3,2,20,0,0,8,0,0.0,0
747,5,train,"Give me the work, that is a song, of Amba Shepherd.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Amba_Shepherd> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?song WHERE {
  ?artist rdfs:label ""Amba Shepherd""@en .
  ?artist a dbo:Artist .
  
  ?work dbo:artist ?artist ;
        a dbo:Songs .
        
  ?work rdfs:label ?song .
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
339,3,train,Who is the child of Christian IX of Denmark?,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Christian_IX_of_Denmark> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?child WHERE {
  ?child dbo:parent dbr:Christian_IX_of_Denmark .
}
```",1,1,2,1,1,3,2,20,5,1,1,0.8333333333333334,0.8333333333333334,0.8333333333333334
303,8,train,"Give me the party of the commander, that is a politician, in United States invasion of Panama.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/party> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/United_States_invasion_of_Panama> <http://dbpedia.org/ontology/commander> ?v1 . },"```sparql
SELECT ?party WHERE {
  ?operation dbo:commander ?commander .
  ?operation rdfs:label ""United States invasion of Panama""@en .
  ?commander foaf:name ""George H.W. Bush"" .
  ?commander dbo:politicalParty ?party .
}
```",2,3,3,2,1,2,3,28,0,0,4,0,0.0,0
312,0,train,Give me the entity in Province of Bergamo.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/province> <http://dbpedia.org/resource/Province_of_Bergamo> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?entity ?entityLabel WHERE {
  ?entity dbo:locatedIn ?location .
  ?location rdfs:label ""Province of Bergamo""@it .
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
```",1,1,2,1,1,2,2,9,0,0,228,0,0.0,0
48,0,train,Give me the band of Carl Falk.,SELECT ?result WHERE { <http://dbpedia.org/resource/Carl_Falk> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?band WHERE {
  ?person foaf:name ""Carl Falk""@en .
  ?person dbp:band ?band .
}
```",1,1,2,1,1,3,2,20,0,0,11,0,0.0,0
487,6,train,Give me the country of 2022 Vermont House of Representatives election and administration of Phil Scott.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/Phil_Scott> . <http://dbpedia.org/resource/2022_Vermont_House_of_Representatives_election> <http://dbpedia.org/ontology/country> ?result . },"```sparql
SELECT ?country ?governor WHERE {
  wd:Q1452 wdt:P17 ?country .
  OPTIONAL { 
    wd:Q1452 wdt:P6 ?governor .
    FILTER (str(?governor) = ""Phil Scott"")
  }
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
547,13,train,Give me the resting place of the actor of Enemy at the Door.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Enemy_at_the_Door> <http://dbpedia.org/property/starring> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?restingPlace WHERE {
  ?person a dbo:Actor ;
          foaf:name ""Ray Liotta""@en .
  OPTIONAL { ?person dbo:deathPlace ?restingPlace . }
}
```",2,2,3,2,1,3,3,71,0,0,2,0,0.0,0
184,2,train,Give me the parent of Archduchess Ilona of Austria.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Ilona_of_Austria> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?parent WHERE {
  ?ilona a dbo:Archduchess ;
         foaf:name ""Ilona of Austria""@en .
  ?ilona dbo:parent ?parent .
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
356,5,train,"Give me the native, that is a soccer player and a soccer manager, of Wolverhampton.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Wolverhampton> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name WHERE {
  ?person dbo:birthPlace dbr:Wolverhampton .
  ?person rdfs:label ?name .
  FILTER (CONTAINS(LCASE(?name), ""soccer player"") && CONTAINS(LCASE(?name), ""soccer manager""))
  FILTER (LANG(?name) = 'en')
}
```",1,3,2,1,1,3,2,20,0,0,17,0,0.0,0
959,4,train,"Give me the alma mater, that is Japanese and an organisation and a university and an educational institution, of Eiji Ōtsuka.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. <http://dbpedia.org/resource/Eiji_Ōtsuka> <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?university WHERE {
  ?person a dbo:Person ;
          foaf:name ""Eiji Ōtsuka""@en .
  
  ?person dbo:almaMater ?university .

  ?university a dbo:University ;
              dbo:country dbr:Japan ;
              rdf:type dbo:EducationalOrganization ;
              rdf:type dbo:Organisation .
}
```",1,5,2,1,1,3,3,71,0,0,1,0,0.0,0
179,1,train,Give me the parent of Ubol Ratana.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ubol_Ratana> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parentName WHERE {
  ?person a dbo:Person ;
          foaf:name ""Ubol Ratana""@en .
  
  OPTIONAL { ?person dbo:mother ?mother . }
  OPTIONAL { ?person dbo:father ?father . }

  BIND(COALESCE(?mother, ?father) AS ?parent)
  
  ?parent foaf:name ?parentName .
}
```",1,1,2,1,1,3,2,20,0,0,2,0,0.0,0
528,16,train,Give me the commander in the work of --01-09.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/author> ""--01-09""^^<http://www.w3.org/2001/XMLSchema#gMonthDay> . ?v1 <http://dbpedia.org/ontology/commander> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dct: <http://purl.org/dc/terms/>

SELECT ?event ?commander WHERE {
  ?event a dbo:MilitaryConflict ;
         dct:date ?date .
  FILTER (YEAR(?date) = 1815 && MONTH(?date) = 1 && DAY(?date) >= 8 && DAY(?date) <= 9)
  OPTIONAL { ?event dbo:commander ?commander }
}
```",2,2,3,2,1,3,3,71,0,0,2,0,0.0,0
177,6,train,"Give me the headquarter of the office, that is an organisation, of Joo Don-sik.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/location> ?result . <http://dbpedia.org/resource/Joo_Don-sik> <http://dbpedia.org/property/office> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
SELECT ?organization ?headquarters WHERE {
  ?person foaf:name ""Joo Don-sik""@en .
  ?person dbo:memberOf|dbo:employer ?organization .
  ?organization a dbo:Organization .
  OPTIONAL { ?organization dbo:headquarterLocation ?headquarters . }
}
```",2,3,3,2,1,2,2,9,0,0,2,0,0.0,0
528,7,train,Give me the birth name of Narciso Campero.,SELECT ?result WHERE { <http://dbpedia.org/resource/Narciso_Campero> <http://dbpedia.org/property/birthName> ?result . },"```sparql
SELECT ?birthName WHERE {
  ?person foaf:name ""Narciso Campero""@en .
  ?person dbo:birthName ?birthName .
}
```",1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
16,6,train,Give me the profession of Satomi Ishihara.,SELECT ?result WHERE { <http://dbpedia.org/resource/Satomi_Ishihara> <http://dbpedia.org/property/occupation> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?profession WHERE {
  ?person foaf:name ""Satomi Ishihara""@en .
  OPTIONAL { ?person dbo:occupation ?profession . }
}
```",1,1,2,1,1,3,3,71,0,1,1,0.0,0.0,0
617,5,train,"Who is the successor, that is a royalty, of Antiochus (son of Antiochus III the Great)?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/successor> ?result . },"```sparql
SELECT ?successor WHERE {
  dbpedia:Antiochus_IV_Epiphanes dbo:successor ?successor .
  OPTIONAL { ?successor rdf:type dbo:Monarch . }
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
161,1,train,Give me the military force of Spanish Civil War.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?force ?description WHERE {
  VALUES ?conflict { dbr:Spanish_Civil_War }
  
  ?force dbo:wikiPageWikiLink ?conflict .
  OPTIONAL { ?force dbo:description ?description . FILTER (lang(?description) = 'en') }

  FILTER (
    regex(str(?force), ""Republican"") ||
    regex(str(?force), ""Nationalist"")
  )
}
ORDER BY ?force
```",1,1,2,1,1,3,3,71,4,26,510,0.13333333333333333,0.007782101167315175,0.014705882352941176
404,10,train,"Give me the spouse of Princess Victoria Louise of Prussia and child of Ernest Augustus, Crown Prince of Hanover.","SELECT ?result WHERE { <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ernest_Augustus,_Crown_Prince_of_Hanover> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?princess a dbo:Person ;
            foaf:name ""Victoria Louise of Prussia""@en .
  ?marriage dbo:spouse ?princess ;
            dbo:spouse ?person .
  ?person dbo:childOf dbr:Ernest_Augustus,_Crown_Prince_of_Hanover .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
747,12,train,Give me the band of Shèna and band of Amba Shepherd.,SELECT ?result WHERE { <http://dbpedia.org/resource/Amba_Shepherd> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Shèna> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
# Query to find the band of Shèna
SELECT ?band WHERE {
  ?person dbo:birthName ""Shèna Marie Hlady"" .
  ?person dbo:associatedBand ?band .
  FILTER (CONTAINS(LCASE(str(?band)), ""the runaways""))
}

UNION

# Query to find the band of Amba Shepherd
SELECT ?band WHERE {
  ?person foaf:name ""Amba Shepherd""@en .
  ?person dbo:associatedBand ?band .
  FILTER (CONTAINS(LCASE(str(?band)), ""sugababes""))
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
421,2,train,Give me the person born as Edin Dervišhalidović.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Edin Dervišhalidović""@en . }","```sparql
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX schema: <http://schema.org/>

SELECT ?person ?name WHERE {
  ?person a foaf:Person .
  ?person schema:birthName ""Edin Dervišhalidović"" .
  OPTIONAL { ?person foaf:name ?name }
}
```",1,1,2,1,1,2,3,28,0,0,1,0,0.0,0
767,4,train,"Give me the administration, that is a settlement, of Green.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/leaderParty> ""Green""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. }","```sparql
SELECT ?settlement ?country ?state WHERE {
  ?settlement a dbo:PopulatedPlace ;
              rdfs:label ?name .
  OPTIONAL { ?settlement dbp:country ?country . }
  OPTIONAL { ?settlement dbp:state ?state . }
  FILTER (lang(?name) = 'en' && strContains(lcase(str(?name)), ""green""))
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
485,8,train,"Give me the entity in the region, that is a country, of Western European Time.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Western_European_Time> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/country> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?country WHERE {
  ?timeZone a dbo:TimeZone ;
            dbo:hasTimezoneName ""Western European Time"" .
  
  ?location dbo:timezone ?timeZone ;
            a dbo:Country .

  BIND(?location AS ?country)
}
```",2,3,3,2,1,2,3,28,0,0,46363,0,0.0,0
488,10,train,Give me the administration of Emperor Go-Yōzei and birth place of Enomoto Takeaki.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Emperor_Go-Yōzei> . <http://dbpedia.org/resource/Enomoto_Takeaki> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
# Query to get the administration (reign) of Emperor Go-Yōzei
SELECT ?administration WHERE {
  dbpedia:Emperor_Go-Yōzei dbo:reign ?administration .
}

# Query to get the birthplace of Enomoto Takeaki
SELECT ?birthPlace WHERE {
  dbpedia:Enomoto_Takeaki dbo:birthPlace ?birthPlace .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
16,15,train,Who is the person born as the birth name of Ted McGinley?,SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?fullName ?birthName WHERE {
  ?person a dbo:Actor ;
          foaf:name ""Ted McGinley""@en .
  
  OPTIONAL { ?person foaf:name ?fullName . }
  OPTIONAL { ?person dbo:birthName ?birthName . }
}
```",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
197,3,train,Who is the awardee of Leroy P. Steele Prize?,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ""Leroy P. Steele Prize""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?recipient WHERE {
  ?prize a dbo:Award .
  ?prize rdfs:label ""Leroy P. Steele Prize""@en .
  ?prize dbo:recipient ?recipient .
}
```",1,1,2,1,1,2,2,9,0,0,21,0,0.0,0
488,13,train,"Give me the death place of the father, that is a politician, of Yūki Hideyasu.",SELECT ?result WHERE { <http://dbpedia.org/resource/Yūki_Hideyasu> <http://dbpedia.org/property/father> ?v1 . ?v1 <http://dbpedia.org/ontology/deathPlace> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
SELECT ?deathPlace WHERE {
  ?person dbo:birthName ""Yūki Naoyoshi""@ja .
  ?person rdf:type dbo:Politician .
  ?person dbo:spouse ?yukiHideyasuFather .
  ?yukiHideyasuFather dbo:child ?yukiHideyasu .
  ?yukiHideyasu foaf:name ""Yūki Hideyasu""@en .
  ?person dbo:deathPlace ?deathPlace .
}
```",2,3,3,2,1,3,3,71,0,0,2,0,0.0,0
701,9,train,Give me the parent of Meritamen and parent of Henuttawy (19th dynasty).,SELECT ?result WHERE { <http://dbpedia.org/resource/Meritamen> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Henuttawy_(19th_dynasty)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?parent WHERE {
  { 
    ?person dbo:name ""Meritamen""@en .
    ?person dbo:child ?child .
    ?child dbo:name ""Meritamen""@en .
    ?person dbo:spouse ?parent .
  } UNION {
    ?person dbo:name ""Henuttawy""@en .
    ?person dbo:child ?child .
    ?child dbo:name ""Henuttawy""@en .
    ?person dbo:spouse ?parent .
  }
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
10,8,train,"Give me the associated musical artist of the person born, that is an artist, as Matt Colton.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ""Matt Colton""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artist WHERE {
  ?person a dbo:Person ;
          foaf:name ""Matt Colton""@en .
  OPTIONAL { ?person dbo:associatedBand ?band . }
  OPTIONAL { ?person dbo:worksFor ?artist . }
  
  FILTER (?band != dbr:None && ?artist != dbr:None)
}
```",2,3,3,2,1,2,3,28,0,0,4,0,0.0,0
528,8,train,Give me the person born as Narciso Campero Leyes.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Narciso Campero Leyes""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?birthDate ?deathDate WHERE {
  ?person dbo:birthName ""Narciso Campero Leyes"" .
  OPTIONAL { ?person dbo:birthday ?birthDate . }
  OPTIONAL { ?person dbo:deathDate ?deathDate . }
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
54,15,train,Give me the father of the child of Thinkhaya of Pagan.,SELECT ?result WHERE { <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/property/father> ?result . },"```sparql
SELECT ?child WHERE {
  ?thinkhaya dbo:spouse ?spouse .
  ?thinkhaya foaf:name ""Thinkhaya""@en .
  ?thinkhaya dbo:child ?child .
}
```",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
360,0,train,Give me the writer of The Roaring Silence.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Roaring_Silence> <http://dbpedia.org/property/writer> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?author WHERE {
  ?book a dbo:Book ;
        rdfs:label ""The Roaring Silence""@en .
  OPTIONAL { ?book dbo:author ?author . }
}
```",1,1,2,1,1,2,3,28,0,0,8,0,0.0,0
404,13,train,"Give me the parent of the child, that is a royalty, of Ernest Augustus, Duke of Brunswick.","SELECT ?result WHERE { <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  # Find Ernest Augustus, Duke of Brunswick
  dbr:Ernest_Augustus,_Duke_of_Brunswick a dbo:Person .

  # Find his children who are royalty
  ?child dbo:spouseOrPartner dbr:Ernest_Augustus,_Duke_of_Brunswick ;
         a dbo:RoyalFamilyMember .
  
  # Determine the parent of that child (which should be Ernest Augustus)
  ?parent dbo:child ?child .

}
```",2,3,3,2,1,3,3,71,0,0,2,0,0.0,0
547,6,train,Give me the actor of Enemy at the Door.,SELECT ?result WHERE { <http://dbpedia.org/resource/Enemy_at_the_Door> <http://dbpedia.org/property/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor ?actorLabel WHERE {
  VALUES ?film { dbr:Enemy_at_the_Door }
  ?film dbo:starring ?actor .
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
```",1,1,2,1,1,3,3,71,0,0,8,0,0.0,0
318,4,train,Give me the person born in 1970 and professional in Composer.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/Composer> . ?result <http://dbpedia.org/ontology/birthYear> ""1970""^^<http://www.w3.org/2001/XMLSchema#gYear> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name ?birthDate WHERE {
  ?person a dbo:Person .
  ?person dbo:birthDate ?birthDate .
  ?person dbo:occupation ?occupation .
  FILTER (YEAR(?birthDate) = 1970)
  FILTER CONTAINS(LCASE(str(?occupation)), ""composer"")
  OPTIONAL { ?person foaf:name ?name }
}
ORDER BY ?name
```",2,2,3,1,2,2,2,9,5,107,2,0.044642857142857144,0.7142857142857143,0.08403361344537816
626,6,train,Give me the commander in Battle of Leipzig and awardee of Order of St. Andrew.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Order_of_St._Andrew> . <http://dbpedia.org/resource/Battle_of_Leipzig> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person dbo:commanderOf dbr:Battle_of_Leipzig .
  ?person dbo:recipientOfOrder dbr:Order_of_St._Andrew .
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
767,13,train,Give me the alma mater of the administration of George K. Nash.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/almaMater> ?result . ?v1 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/George_K._Nash> . },"```sparql
SELECT ?university WHERE {
  wd:Q1116 dbo:almaMater ?university .
}
```",2,2,3,2,1,3,3,71,0,0,6,0,0.0,0
9,13,train,Give me the alma mater of the awardee of Royal Medal.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Medal> . ?v1 <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
SELECT ?recipient ?almaMater WHERE {
  ?recipient dbo:award dbp:Royal_Medal .
  ?recipient dbo:almaMater ?education.
  ?education rdfs:label ?almaMater.
  FILTER(LANG(?almaMater) = ""en"")
}
```",2,2,3,2,1,3,3,71,0,0,31,0,0.0,0
182,1,train,Give me the war of Jagath Dias.,SELECT ?result WHERE { <http://dbpedia.org/resource/Jagath_Dias> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?event WHERE {
  dbr:Jagath_Dias dbo:wikiPageDisambiguates ?disambiguation .
  ?disambiguation dbo:wikiPageRedirects ?resource .
  ?resource dbo:participatedIn ?event .
}
```",1,1,2,1,1,2,3,28,0,0,5,0,0.0,0
801,13,train,"Give me the producer of the work, that is a musical work and a song and a work, of 50 Cent.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v1 <http://dbpedia.org/ontology/producer> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/50_Cent> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?producer WHERE {
    ?work dbo:performer dbr:50_Cent .
    ?work a dbo:Songs .
    OPTIONAL { ?work dbo:producer ?producer . }
}
```",2,5,3,2,1,3,3,71,0,0,38,0,0.0,0
534,4,train,"Give me the location, that is a venue and an architectural structure, of 2012 Pro12 Grand Final.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ArchitecturalStructure>. <http://dbpedia.org/resource/2012_Pro12_Grand_Final> <http://dbpedia.org/ontology/location> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Venue>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?location WHERE {
  ?event dbo:eventLocation ?location .
  ?location a dbo:SportsVenue ;
            a dbo:ArchitecturalStructure .
  
  FILTER(CONTAINS(LCASE(STR(?event)), ""pro12 grand final 2012""))
}
```",1,3,2,1,1,3,2,20,0,0,1,0,0.0,0
645,3,train,"Give me the residence, that is a country, of James Wilkes Maurice.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/James_Wilkes_Maurice> <http://dbpedia.org/property/residence> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?residence WHERE {
  ?person foaf:name ""James Wilkes Maurice""@en .
  ?person dbo:residence ?residence .
  ?residence a dbo:Country .
}
```",1,2,2,1,1,3,2,20,0,0,1,0,0.0,0
747,3,train,"Who is the person decedent, that is an athlete and a soccer player, at Zolotonosha?",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Zolotonosha> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?name WHERE {
  ?person a dbo:Athlete .
  ?person dbo:sport dbp:Soccer .
  ?person dbp:placeOfDeath dbpedia:Zolotonosha .
  OPTIONAL { ?person foaf:name ?name . }
}
```",1,3,2,1,1,3,3,71,0,0,1,0,0.0,0
404,9,train,Give me the spouse of Princess Victoria Louise of Prussia and parent of Prince Ernest Augustus of Hanover (born 1914).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Prince_Ernest_Augustus_of_Hanover_(born_1914)> . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
    ?princess rdf:type dbo:Person ;
              rdfs:label ""Princess Victoria Louise of Prussia""@en .
    
    ?princess dbo:spouse ?spouse .

    ?child rdf:type dbo:Person ;
           rdfs:label ""Prince Ernest Augustus of Hanover (1914)""@en ;
           dbo:parent ?spouse .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
617,12,train,Give me the spouse of Laodice IV and parent of Nysa (wife of Pharnaces I of Pontus).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Nysa_(wife_of_Pharnaces_I_of_Pontus)> . <http://dbpedia.org/resource/Laodice_IV> <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
SELECT ?spouse WHERE {
  ?laodiceIV dbo:spouse ?spouse .
  FILTER (str(?laodiceIV) = ""Laodice_IV"")
  
  OPTIONAL { 
    ?nysa dbo:parent ?spouse .
    FILTER (str(?nysa) = ""Nysa_(wife_of_Pharaces_I_of_Pontus)"")
  }
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
712,10,train,Who is the awardee of the show of Soviet Union?,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ?v0 . ?v0 <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/Soviet_Union> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?awardee WHERE {
  ?award dbo:type dbr:Lenin_Prize .
  ?award dbo:recipient ?awardee .
}
```",2,2,3,2,1,3,2,20,0,0,1209,0,0.0,0
528,12,train,Give me the war of Orozimbo Barbosa and force of Narciso Campero.,SELECT ?result WHERE { <http://dbpedia.org/resource/Orozimbo_Barbosa> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Narciso_Campero> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war WHERE {
  ?barbosa dbo:nationality dbr:Brazil ;
           dbo:occupation dbr:Military_officer .
  ?campero dbo:nationality dbr:Bolivia ;
           dbo:occupation dbr:Military_officer .

  ?barbosa dbo:participatedIn ?war .
  ?campero dbo:participatedIn ?war .

  FILTER(CONTAINS(LCASE(STR(?war)), ""paraguayan war"") || CONTAINS(LCASE(STR(?war)), ""triple alliance""))
}
```",2,2,3,1,2,3,3,71,0,0,2,0,0.0,0
30,4,train,"Give me the native of Paris and professional in Financier, businessman, vineyard owner, art collector, racehorse owner/breeder.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Financier, businessman, vineyard owner, art collector, racehorse owner/breeder""@en . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Paris> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  ?person dbo:nationality dbr:Français .
  ?person dbo:birthPlace dbr:Paris .
  ?person dbo:occupation ?occupation .

  FILTER (
    (CONTAINS(LCASE(?occupation), ""financier"") ||
     CONTAINS(LCASE(?occupation), ""businessman"") ||
     CONTAINS(LCASE(?occupation), ""vineyard owner"") ||
     CONTAINS(LCASE(?occupation), ""art collector"") ||
     CONTAINS(LCASE(?occupation), ""racehorse owner/breeder""))
  )
}
```",2,2,3,1,2,2,2,9,0,0,1,0,0.0,0
303,0,train,Give me the party of Guillermo Endara.,SELECT ?result WHERE { <http://dbpedia.org/resource/Guillermo_Endara> <http://dbpedia.org/ontology/party> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?party WHERE {
  dbr:Guillermo_Endara dbo:partyAffiliation ?party .
}
```",1,1,2,1,1,2,3,28,0,0,2,0,0.0,0
754,5,train,Give me the child of Ram Khamhaeng.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ram_Khamhaeng> <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child ?childLabel WHERE {
  ?person dbp:name ""Ram Khamhaeng""@en .
  ?person a dbo:Person .
  ?person dbo:child ?child .
  ?child rdfs:label ?childLabel .
  FILTER(LANG(?childLabel) = 'en')
}
```",1,1,2,1,1,3,2,20,0,0,3,0,0.0,0
820,1,train,Give me the child of Jack Schwartzman.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Jack_Schwartzman> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child WHERE {
  ?person a dbo:Person ;
          foaf:name ""Jack Schwartzman""@en .
  ?person dbo:parent ?child .
}
```",1,1,2,1,1,3,2,20,0,0,2,0,0.0,0
10,1,train,Give me the band member of Luke Vibert.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Luke_Vibert> . },"```sparql
PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?band WHERE {
  ?artist a dbpedia-owl:MusicalArtist ;
          foaf:name ""Luke Vibert""@en .
  ?artist dbp:bandMember ?band .
}
```",1,1,2,1,1,2,3,28,0,0,3,0,0.0,0
959,11,train,"Give me the member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of Eiji Ōtsuka.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/team> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. <http://dbpedia.org/resource/Eiji_Ōtsuka> <http://dbpedia.org/ontology/almaMater> ?v1 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?university WHERE {
  ?eiji dbo:almaMater ?university .
  FILTER EXISTS { ?eiji rdfs:label ""Eiji Ōtsuka""@en }
  
  # Ensure the university is Japanese
  ?university dbo:wikiPageCategories [
    wd:Q11424 ; # Category:Japanese_universities_and_colleges
    rdf:type owl:Class ;
    owl:sameAs ?category .
  ]
  
  # Ensure it's an organization, a university, and an educational institution
  ?university rdf:type dbo:Organization .
  OPTIONAL { ?university rdf:type dbo:University . }
  OPTIONAL { ?university rdf:type dbo:EducationalInstitution . }
}
```",2,6,3,2,1,3,3,71,0,0,267,0,0.0,0
365,4,train,Give me the reference to The Blasters and band of Phil Alvin.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Phil_Alvin> . ?result <http://xmlns.com/foaf/0.1/name> ""The Blasters""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?band ?memberName WHERE {
  ?band a dbo:Band ;
        rdfs:label ""The Blasters""@en .
  
  OPTIONAL {
    ?band dbo:member ?person .
    ?person foaf:name ?memberName .
    FILTER(CONTAINS(LCASE(?memberName), ""phil alvin""))
  }
}
```",2,2,3,1,2,2,2,9,1,0,0,1.0,1.0,1.0
963,0,train,Give me the entity in Serbia.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Serbia> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?entity WHERE {
  ?entity a dbo:Place .
  ?entity dbp:country ""Serbia"" .
}
```",1,1,2,1,1,3,2,20,0,0,5428,0,0.0,0
994,4,train,Give me the associated musical artist of Watchtower (band).,SELECT ?result WHERE { <http://dbpedia.org/resource/Watchtower_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?associatedArtist WHERE {
  VALUES ?watchtower { dbr:Watchtower_(band) }
  ?watchtower dbo:member|dbo:associatedBand ?associatedArtist .
}
```",1,1,2,1,1,3,3,71,0,0,6,0,0.0,0
392,11,train,"Give me the province of the residence, that is a settlement and Italian, of Sebastiano Bianchetti.",SELECT ?result WHERE { <http://dbpedia.org/resource/Sebastiano_Bianchetti> <http://dbpedia.org/property/residence> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://dbpedia.org/ontology/province> ?result . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?province WHERE {
  ?person a dbo:Person ;
          foaf:name ""Sebastiano Bianchetti""@en .
  
  OPTIONAL { ?person dbo:birthPlace ?place . }
  OPTIONAL { ?person dbo:residence ?place . }

  FILTER(?place != dbpedia:undisclosed)

  ?place a dbo:Settlement ;
         dbo:country dbr:Italy .

  ?place dbo:administrativeTerritory ?province .
}
```",2,4,3,2,1,2,3,28,0,0,1,0,0.0,0
427,2,train,Give me the party of Romano Prodi.,SELECT ?result WHERE { <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/ontology/party> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?partyName WHERE {
  dbr:Romano_Prodi dbo:party ?party .
  ?party rdfs:label ?partyName .
  FILTER (lang(?partyName) = 'en')
}
```",1,1,2,1,1,3,3,71,0,7,7,0.0,0.0,0
92,2,train,Give me the band of Joseph Michael.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Joseph_Michael> . },"```sparql
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?bandName WHERE {
  ?person foaf:name ""Joseph Michael""@en .
  ?person dbp:band ?band .
  ?band foaf:name ?bandName .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
303,4,train,"Give me the country, that is a country, of El Valle de Antón.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/El_Valle_de_Antón> <http://dbpedia.org/ontology/country> ?result . },"```sparql
SELECT ?country WHERE {
  ?place rdfs:label ""El Valle de Antón""@en .
  ?place dbo:country ?country .
}
```",1,2,2,1,1,2,3,28,1,0,0,1.0,1.0,1.0
64,4,train,Give me the alma mater of Jovan Hristić and entity in Serbia.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Serbia> . <http://dbpedia.org/resource/Jovan_Hristić> <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
# Query to get the alma mater of Jovan Hristić
SELECT ?university WHERE {
  dbpedia:Jovan_Hristi? dbo:almaMater ?university .
}

# Query to get an entity in Serbia
SELECT ?entity WHERE {
  ?entity wdt:P17 wd:Q30 . # P17 is the property for country, Q30 is the DBpedia item for Serbia
}
```",2,2,3,1,2,2,2,9,0,0,1,0,0.0,0
534,8,train,Give me the headquarter of the owner of RDS Arena.,SELECT ?result WHERE { <http://dbpedia.org/resource/RDS_Arena> <http://dbpedia.org/ontology/owner> ?v0 . ?v0 <http://dbpedia.org/ontology/headquarter> ?result . },"```sparql
SELECT ?owner ?organization ?headquarters WHERE {
  dbpedia:RDS_Arena dbo:operator ?owner .
  OPTIONAL { ?owner dcterms:isPartOf ?organization . }
  OPTIONAL { ?organization dbp:headquarters ?headquarters . }
  OPTIONAL { ?owner dbp:headquarters ?headquarters . }
}
```",2,2,3,2,1,3,2,20,0,0,3,0,0.0,0
48,9,train,"Give me the writer of the work, that is a work, of Shellback (record producer).",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Shellback_(record_producer)> . ?v0 <http://dbpedia.org/property/writer> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?work ?writer WHERE {
  ?producer a dbo:RecordProducer ;
            foaf:name ""Shellback"" .
  
  ?producer dbo:produced ?work .

  OPTIONAL { 
    ?work dbo:writer ?writer .
  }
}
```",2,3,3,2,1,3,2,20,0,0,1065,0,0.0,0
820,9,train,Give me the award of the author of Understanding Comics.,SELECT ?result WHERE { <http://dbpedia.org/resource/Understanding_Comics> <http://dbpedia.org/ontology/author> ?v0 . ?v0 <http://dbpedia.org/property/awards> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?award WHERE {
  ?author foaf:name ""Scott McCloud""@en .
  ?author dbo:wikiPageRedirects ?redirect .
  OPTIONAL { ?redirect dbo:wikiPageRedirects ?finalAuthor . }
  BIND(COALESCE(?redirect, ?author) AS ?actualAuthor)
  ?actualAuthor dbo:award ?award .
}
```",2,2,3,2,1,3,2,20,0,0,4,0,0.0,0
281,3,train,Give me the award of Jonathon Band.,SELECT ?result WHERE { <http://dbpedia.org/resource/Jonathon_Band> <http://dbpedia.org/property/awards> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?awardLabel WHERE {
  ?person foaf:name ""Jonathan Band""@en.
  ?person dbo:award ?award.
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
77,6,train,Give me the war of Alexander Chechenskiy and force of Alexander I of Russia.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Alexander_I_of_Russia> . <http://dbpedia.org/resource/Alexander_Chechenskiy> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war WHERE {
  ?person dbo:spouse ?spouse .
  ?person rdfs:label ""Alexander I of Russia""@en .
  
  OPTIONAL { ?person dbo:memberOf ?organization . }
  OPTIONAL { ?person dbo:occupation ?occupation . }

  ?war dbo:participatedIn ?participant .
  ?participant rdfs:label ?name .

  FILTER(CONTAINS(LCASE(?name), ""alexander i of russia""))
}
```",2,2,3,1,2,3,2,20,0,0,6,0,0.0,0
285,7,train,Give me the parent of the child of Tina Onassis Niarchos.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Tina_Onassis_Niarchos> <http://dbpedia.org/ontology/child> ?v1 . },"```sparql
SELECT ?grandParent WHERE {
  ?tina dbr:Tina_Onassis_Niarchos .
  ?tina dbo:child ?child .
  ?child dbo:parent ?grandParent .
}
```",2,2,3,2,1,3,2,20,0,0,2,0,0.0,0
64,1,train,Give me the entity in Serbia.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Serbia> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?entity WHERE {
  ?entity a dbo:Place .
  ?entity dbp:country ""Serbia"" .
}
```",1,1,2,1,1,2,2,9,0,0,5428,0,0.0,0
404,8,train,"Who is the father of Ernest Augustus, Duke of Brunswick?","SELECT ?result WHERE { <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/property/father> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?father WHERE {
  ?person dbo:givenName ""Ernest"" .
  ?person dbo:familyName ""Augustus"" .
  ?person dbo:title ""Duke of Brunswick""@en .
  ?person dbo:father ?father .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
767,16,train,Give me the administration of the reference to George Kilbon Nash.,"SELECT ?result WHERE { ?v1 <http://xmlns.com/foaf/0.1/name> ""George Kilbon Nash""@en . ?result <http://dbpedia.org/property/governor> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?officeLabel ?termStart ?termEnd
WHERE {
  VALUES ?nash { dbr:George_Kilbon_Nash }
  
  ?nash dbo:office ?office .
  ?office rdfs:label ?officeLabel .
  OPTIONAL { ?office dbo:termStart ?termStart . }
  OPTIONAL { ?office dbo:termEnd ?termEnd . }
  
  FILTER (lang(?officeLabel) = 'en')
}
ORDER BY ?officeLabel
```",2,2,3,2,1,3,3,71,0,0,7,0,0.0,0
994,2,train,Give me the band member of Don Dokken.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Don_Dokken> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?member WHERE {
  ?member dbo:bandMember <http://dbpedia.org/resource/Dokken> .
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
182,8,train,Give me the war of the author of 2019 Sri Lanka Easter bombings.,SELECT ?result WHERE { <http://dbpedia.org/resource/2019_Sri_Lanka_Easter_bombings> <http://dbpedia.org/property/author> ?v1 . ?v1 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
SELECT ?author ?work WHERE {
  ?work dbo:subject dbc:Sri_Lanka_Easter_bombings_2019 .
  ?work dbo:author ?author .
  
  OPTIONAL {
    ?warWork dbo:subject ?warSubject .
    ?warWork dbo:author ?author .
    FILTER EXISTS { ?warSubject rdfs:label ?label . FILTER(CONTAINS(LCASE(?label), ""war"")) }
  }

  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
```",2,2,3,2,1,2,3,28,0,0,2,0,0.0,0
294,5,train,"Give me the birth place, that is a settlement, of Marion James.",SELECT ?result WHERE { <http://dbpedia.org/resource/Marion_James> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?birthPlace WHERE {
  ?person dbo:name ""Marion James""@en .
  ?person dbo:birthPlace ?birthPlace .
  ?birthPlace rdf:type dbo:Settlement .
}
```",1,2,2,1,1,2,3,28,0,0,1,0,0.0,0
64,2,train,"Give me the person decedent, that is a writer, at Sremska Kamenica.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>. ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Sremska_Kamenica> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?name WHERE {
  ?person a dbo:Writer .
  ?person dbo:deathPlace dbr:Sremska_Kamenica .
  OPTIONAL { ?person rdfs:label ?name FILTER (lang(?name) = 'en') }
}
```",1,2,2,1,1,2,2,9,2,2,0,0.5,1.0,0.6666666666666666
778,4,train,Give me the author of Pushd and popd.,SELECT ?result WHERE { <http://dbpedia.org/resource/Pushd_and_popd> <http://dbpedia.org/property/author> ?result . },"```sparql
SELECT ?author WHERE {
  ?command rdfs:label ""pushd""@en .
  ?command dbo:creator ?person .
  ?person foaf:name ?author .
}
UNION
SELECT ?author WHERE {
  ?command rdfs:label ""popd""@en .
  ?command dbo:creator ?person .
  ?person foaf:name ?author .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
16,8,train,Give me the birth name of Gigi Rice.,SELECT ?result WHERE { <http://dbpedia.org/resource/Gigi_Rice> <http://dbpedia.org/property/birthName> ?result . },"```sparql
SELECT ?birthName WHERE {
  <http://dbpedia.org/resource/Gigi_Rice> dbo:birthName ?birthName .
}
```",1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
996,0,train,Give me the force of Dagobert Sigmund von Wurmser.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Dagobert_Sigmund_von_Wurmser> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?rank WHERE {
  ?person a dbo:MilitaryPerson ;
          foaf:name ""Dagobert Sigmund von Wurmser"" .
  OPTIONAL { ?person dbo:militaryRank ?rank . }
}
```",1,1,2,1,1,3,2,20,0,0,11,0,0.0,0
659,8,train,"Give me the force, that is a societal event and an event and a military conflict, of Rutger Jan Schimmelpenninck.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?force WHERE {
  ?event dbo:associatedWith dbr:Rutger_Jan_Schimmelpenninck .
  ?event a ?type .
  
  FILTER (
    (CONTAINS(LCASE(STR(?type)), ""societal event"") ||
     CONTAINS(LCASE(STR(?type)), ""event"") ||
     CONTAINS(LCASE(STR(?type)), ""military conflict""))
  )
}
```",1,4,2,1,1,3,3,71,0,0,2,0,0.0,0
488,1,train,Give me the death place of Tokugawa Ieyasu.,SELECT ?result WHERE { <http://dbpedia.org/resource/Tokugawa_Ieyasu> <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?deathPlace WHERE {
  dbr:Tokugawa_Ieyasu dbo:deathPlace ?deathPlace .
}
```",1,1,2,1,1,3,3,71,2,0,0,1.0,1.0,1.0
197,6,train,Give me the birthplace of the awardee of Leroy P. Steele Prize.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/awards> ""Leroy P. Steele Prize""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?birthPlace WHERE {
  ?person dbo:award dbr:Leroy_P._Steele_Prize .
  ?person dbo:birthPlace ?birthPlace .
}
```",2,2,3,2,1,2,2,9,20,143,1,0.12269938650306748,0.9523809523809523,0.2173913043478261
378,14,train,Give me the claim to fame of the commander in Great Siege of Gibraltar.,SELECT ?result WHERE { <http://dbpedia.org/resource/Great_Siege_of_Gibraltar> <http://dbpedia.org/ontology/commander> ?v1 . ?v1 <http://dbpedia.org/ontology/knownFor> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?achievement WHERE {
  ?person a dbo:MilitaryPerson ;
          foaf:name ""George Augustus Eliott""@en .
  OPTIONAL { ?person dbo:role ""Commander of Gibraltar during the Great Siege""@en . }
  OPTIONAL { ?person dbo:accomplishment ?achievement . }
  FILTER(CONTAINS(LCASE(?achievement), ""great siege gibraltar""))
}
```",2,2,3,2,1,3,3,71,0,0,2,0,0.0,0
959,17,train,"Give me the team of the manager, that is a sports manager, of 1998 Kashima Antlers season.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/manager> ?v0 . <http://dbpedia.org/resource/1998_Kashima_Antlers_season> <http://dbpedia.org/ontology/manager> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. },"```sparql
SELECT ?manager ?team WHERE {
  ?season dcterms:isPartOf <http://dbpedia.org/resource/Kashima_Antlers>;
          dbp:sport ""association football"";
          dbp:year ""1998"" .
  
  ?season dbp:manager ?manager .

  OPTIONAL { 
    ?manager dbo:occupation <http://dbpedia.org/ontology/SportsManager> .
  }

  OPTIONAL {
    ?team dbp:manager ?manager ;
          dbp:sport ""association football"" .
  }
}
```",2,3,3,2,1,3,3,71,0,0,10,0,0.0,0
48,3,train,Give me the writer of Emotion (Carly Rae Jepsen album).,SELECT ?result WHERE { <http://dbpedia.org/resource/Emotion_(Carly_Rae_Jepsen_album)> <http://dbpedia.org/property/writer> ?result . },"```sparql
SELECT ?writer WHERE {
  ?album dbo:title ""Emotion""@en .
  ?album dbo:artist dbr:Carly_Rae_Jepsen .
  ?album dbo:composer ?writer .
}
```",1,1,2,1,1,3,2,20,0,0,48,0,0.0,0
547,3,train,Give me the child of William Haliburton.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ""William Haliburton""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child WHERE {
  ?person foaf:name ""William Haliburton""@en .
  ?person dbp:child ?child .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
959,3,train,Who is the person born in 1958?,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthYear> ""1958""^^<http://www.w3.org/2001/XMLSchema#gYear> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person ?name WHERE {
  ?person a dbo:Person .
  ?person dbo:birthYear ""1958""^^xsd:gYear .
  OPTIONAL { ?person foaf:name ?name . }
}
ORDER BY ?name
```",1,1,2,1,1,3,3,71,2515,2380,0,0.5137895812053116,1.0,0.678812415654521
778,3,train,Give me the award of Ralph L. Brinster.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ralph_L._Brinster> <http://dbpedia.org/property/awards> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?award WHERE {
  dbr:Ralph_L._Brinster dbo:award ?award .
}
```",1,1,2,1,1,3,2,20,9,0,0,1.0,1.0,1.0
547,4,train,Give me the child of James Burton (property developer).,SELECT ?result WHERE { <http://dbpedia.org/resource/James_Burton_(property_developer)> <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child WHERE {
  ?person a dbo:Person ;
          foaf:name ""James Burton"" ;
          dbp:occupation ""Property developer""@en .
  
  ?person dbo:child ?child .
}
```",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
10,11,train,Give me the professional in the birth name of Sharon Kao.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v0 . <http://dbpedia.org/resource/Sharon_Kao> <http://dbpedia.org/property/birthName> ?v0 . },"```sparql
# Step 1: Retrieve Sharon Kao's birth name
SELECT ?birthName WHERE {
  ?person foaf:name ""Sharon Kao""@en .
  ?person dbo:birthName ?birthName .
}

# Step 2: Use the retrieved birth name to find associated professions
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?profession WHERE {
  ?person dbo:birthName ?birthName .
  FILTER(?birthName = ""Sharon Kao"") # Replace with the actual birth name retrieved from Step 1
  ?person dbo:occupation ?profession .
}
```",2,2,3,2,1,2,3,28,0,0,39640,0,0.0,0
767,7,train,"Give me the persona, that is a fictional character, of Matthew Burland.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?result <http://dbpedia.org/property/alterEgo> ""Matthew Burland""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?character ?fictionalWork WHERE {
  ?person rdfs:label ""Matthew Burland""@en.
  OPTIONAL { ?person dbo:fictionalCharacter ?character. }
  OPTIONAL { ?character dbo:partOf ?fictionalWork. }
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
285,10,train,Who is the professional in the award of Stan Lee?,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v0 . <http://dbpedia.org/resource/Stan_Lee> <http://dbpedia.org/property/awards> ?v0 . },"```sparql
SELECT ?recipient WHERE {
  ?award dbo:wikiPageRedirects db:Stan_Lee_Award .
  ?award dbo:recipient ?recipient .
  ?recipient a dbo:Person .
}
```",2,2,3,2,1,3,2,20,0,0,39640,0,0.0,0
701,8,train,Give me the father of Merneptah.,SELECT ?result WHERE { <http://dbpedia.org/resource/Merneptah> <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?father WHERE {
  ?merneptah dbo:father ?father .
  FILTER (str(?merneptah) = ""Merneptah"")
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
626,7,train,"Give me the commander in the force, that is a military conflict, of Alexander I of Russia.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Alexander_I_of_Russia> . ?v1 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?conflict WHERE {
  ?person dbo:givenName ""Alexander"" .
  ?person dbo:familyName ""I of Russia""@en .
  ?person dbo:commanderOf ?conflict .
}
```",2,3,3,2,1,3,2,20,0,0,230,0,0.0,0
915,5,train,"Give me the child, that is a fictional character and a soap character, of Phillip Spaulding.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Phillip_Spaulding> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoapCharacter>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?child WHERE {
  ?spaulding dbo:name ""Phillip Spaulding""@en .
  ?spaulding dbo:child ?child .

  ?child rdf:type dbo:FictionalCharacter .
  
  # Check if the child is a soap character
  OPTIONAL { 
    ?child dbo:genre ?genre .
    FILTER(CONTAINS(LCASE(STR(?genre)), ""soap""))
  }

  # Ensure that the genre contains 'soap' indicating it's a soap opera character
  FILTER EXISTS {
    ?child dbo:genre ?genre .
    FILTER(CONTAINS(LCASE(STR(?genre)), ""soap""))
  }
}
```",1,3,2,1,1,3,2,20,0,0,1,0,0.0,0
838,6,train,Give me the band member of Kerber and band of Raša Đelmaš.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Kerber> . <http://dbpedia.org/resource/Raša_Đelmaš> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
# Query to find the band member associated with Kerber
SELECT ?member WHERE {
  ?kerber dbo:genre dbr:Power_metal .
  ?kerber dbo:bandMember ?member .
}

# Query to find the band Raša Đelmaš is a part of
SELECT ?band WHERE {
  ?rašaĐelmaš foaf:name ""Raša Đelmaš""@en .
  ?rašaĐelmaš dbo:bandMember ?band .
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
356,8,train,"Give me the team of the native, that is a soccer player and a soccer manager, of Wolverhampton.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Wolverhampton> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?result <http://dbpedia.org/ontology/manager> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?manager ?team WHERE {
  ?person a dbo:SoccerPlayer ;
          dbo:birthPlace dbr:Wolverhampton ;
          dbo:currentTeam ?team .
  ?person dbo:occupation [ 
            a dbo:SoccerManager ;
            dbp:name ?manager
          ] .
}
```",2,4,3,2,1,3,2,20,0,0,46,0,0.0,0
838,7,train,"Give me the band of the band member, that is an artist and a musical artist, of YU Grupa.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/YU_Grupa> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?member ?otherBand WHERE {
  # Find members of YU Grupa
  ?yugrupaMember dbo:bandMember dbr:YU_Grupa .
  
  # Filter those who are both an artist and a musical artist
  ?yugrupaMember dbo:occupation dbr:Artist ;
                dbo:occupation dbr:Musical_artist .

  # Find other bands they are members of
  ?otherBandMembership dbo:bandMember ?member .
  ?otherBandMembership dbo:band dbr:?
  
  FILTER(?otherBand != dbr:YU_Grupa)
}
```",2,4,3,2,1,3,2,20,0,0,21,0,0.0,0
827,9,train,"Who is the child, that is a royalty, of the parent of Charles Alexander, Grand Duke of Saxe-Weimar-Eisenach?","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v0 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Charles_Alexander,_Grand_Duke_of_Saxe-Weimar-Eisenach> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
SELECT DISTINCT ?royaltyChild WHERE {
  # Find Charles Alexander
  ?charlesAlexander dbo:spouseOrPartner* :Charles_Alexander_Grand_Duke_of_Saxe-Weimar-Eisenach ;
                    a dbo:Person .

  # Find his parent(s)
  ?parent dbo:child ?charlesAlexander .

  # Find the children of the parent who are royalty
  ?parent dbo:child ?royaltyChild .
  
  # Filter for royalty by checking if they have a title or role indicating royalty
  OPTIONAL { ?royaltyChild dbo:title ?title . }
  FILTER (
    EXISTS {
      VALUES ?royalTitles { 
        :King :Queen :Prince :Princess :Duke :Duchess :Grand_Duke :Grand_Duchess
      }
      ?royaltyChild dbo:title ?title .
      ?title rdfs:label ?label .
      FILTER (CONTAINS(LCASE(?label), LCASE(str(?royalTitles))))
    }
  )
}
```",2,3,3,2,1,3,2,20,0,0,3,0,0.0,0
778,1,train,Give me the author of Chroot.,SELECT ?result WHERE { <http://dbpedia.org/resource/Chroot> <http://dbpedia.org/ontology/author> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?author WHERE {
  dbr:Chroot dbo:author ?author .
}
```",1,1,2,1,1,3,2,20,2,0,0,1.0,1.0,1.0
285,5,train,Who is the professional in ?,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
# No specific query can be generated due to lack of context.
```",1,1,2,1,1,3,2,20,0,0,39640,0,0.0,0
617,10,train,Give me the child of Antiochus III the Great and parent of Nysa (wife of Pharnaces I of Pontus).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Nysa_(wife_of_Pharnaces_I_of_Pontus)> . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Antiochus_III_the_Great> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person dbo:parent dbr:Antiochus_III_the_Great .
  ?person dbo:child dbr:Nysa_(wife_of_Pharaces_I_of_Pontus) .
}
```",2,2,3,1,2,3,3,71,0,0,2,0,0.0,0
16,11,train,Give me the spouse of the person born as Ted Martin McGinley.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ""Ted Martin McGinley""@en . ?v0 <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?spouseName WHERE {
  ?person foaf:name ""Ted Martin McGinley""@en .
  ?person dbo:spouse ?spouse .
  ?spouse foaf:name ?spouseName .
}
```",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
747,9,train,Give me the person born on 1985-04-29 and band of Amba Shepherd.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Amba_Shepherd> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/birthDate> ""1985-04-29""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person ?band 
WHERE {
  ?person a dbo:Person ;
          foaf:name ""Amba Shepherd"" ;
          dbo:birthDate ?birthdate .
  
  OPTIONAL { ?person dbo:memberOfBand ?band . }
  
  FILTER (YEAR(?birthdate) = 1985 && MONTH(?birthdate) = 4 && DAY(?birthdate) = 29)
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
465,2,train,Give me the native of Prague.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Prague> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person dbo:birthPlace dbr:Prague .
}
```",1,1,2,1,1,2,2,9,1654,0,0,1.0,1.0,1.0
365,0,train,Give me the band of Phil Alvin.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Phil_Alvin> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band WHERE {
  dbr:Phil_Alvin dbo:band ?band .
}
```",1,1,2,1,1,2,2,9,0,0,1,0,0.0,0
328,7,train,"Who is the leader, that is an office holder and a politician, of Gustav Jonson?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Gustav_Jonson> <http://dbpedia.org/property/leader> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?leaderRole WHERE {
  ?person rdfs:label ""Gustav Jonson""@en .
  ?person a dbo:Person ;
          dbo:officeHolder ?office ;
          dbo:politician ?politics .
  OPTIONAL { ?office dbo:positionHeld ?leaderRole . }
}
```",1,3,2,1,1,3,3,71,0,0,1,0,0.0,0
404,12,train,"Give me the child of Ernest Augustus, Crown Prince of Hanover and parent of Prince Ernest Augustus of Hanover (born 1914).","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Prince_Ernest_Augustus_of_Hanover_(born_1914)> . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ernest_Augustus,_Crown_Prince_of_Hanover> . }","```sparql
SELECT ?child WHERE {
  ?parent dbr:Ernest_Augustus,_Crown_Prince_of_Hanover dbo:spouse ?spouse .
  ?parent dbo:child ?child .
  ?child rdfs:label ?name .
  FILTER(CONTAINS(LCASE(?name), ""ernest augustus duke of brunswick""))
  
  OPTIONAL {
    ?child dbo:child ?grandChild .
    ?grandChild rdfs:label ?grandChildName .
    FILTER(CONTAINS(LCASE(?grandChildName), ""prince ernest augustus of hanover"") && CONTAINS(LCASE(?grandChildName), ""1914""))
  }
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
177,4,train,"Give me the headquarter of Ministry of Culture, Sports and Tourism and entity in South Korea.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/South_Korea> . <http://dbpedia.org/resource/Ministry_of_Culture,_Sports_and_Tourism> <http://dbpedia.org/ontology/location> ?result . }","```sparql
SELECT ?headquarters WHERE {
  ?ministry a dbo:GovernmentMinistry ;
            rdfs:label ""Ministry of Culture, Sports and Tourism""@en .
  OPTIONAL { ?ministry dbo:headquarters ?headquarters . }
}
```",2,2,3,1,2,2,2,9,0,0,1,0,0.0,0
161,5,train,Who is the predecessor of Indalecio Prieto?,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Indalecio_Prieto> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?predecessor WHERE {
  ?prieto dbo:position dbr:Minister_of_Industry_and_Commerce_(Spain) .
  ?prieto dbo:officeHolder dbr:Indalecio_Prieto .
  ?term dbo:startDate ?startPrieto .
  ?term dbo:endDate ?endPrieto .

  ?predecessorTerm dbo:position dbr:Minister_of_Industry_and_Commerce_(Spain) .
  ?predecessorTerm dbo:officeHolder ?predecessor .
  ?predecessorTerm dbo:endDate ?endPredecessor .

  FILTER(?startPrieto > ?endPredecessor)
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
915,7,train,"Give me the resident of the birthplace, that is a settlement, of Stephen Verona.",SELECT ?result WHERE { <http://dbpedia.org/resource/Stephen_Verona> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/residence> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?resident WHERE {
  # Find Stephen Verona's birthplace
  dbr:Stephen_Verona dbo:birthPlace ?birthPlace .
  
  # Ensure the birthplace is a settlement (city or town)
  ?birthPlace a dbo:Settlement .

  # Find notable residents of that settlement
  ?birthPlace dbo:notableResidents ?resident .
}
```",2,3,3,2,1,3,2,20,0,0,15,0,0.0,0
339,9,train,Who is the child of the predecessor of Frederick VIII of Denmark?,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Frederick_VIII_of_Denmark> . ?result <http://dbpedia.org/property/father> ?v0 . },"```sparql
SELECT ?child WHERE {
  wd:Q1116 wdt:P35 wd:Q1103 . # Frederick VIII of Denmark (P35) was a monarch of Denmark (Q1103)
  wd:Q1103 wdt:P22 ?predecessor . # Frederick VIII's predecessor (P22)
  ?predecessor wdt:P31 wd:Q5 . # Predecessor is a human (Q5)
  ?predecessor wdt:P40 ?child . # Predecessor has children (P40)
}
```",2,2,3,2,1,3,2,20,0,0,6,0,0.0,0
345,5,train,"Who is the person born, that is a soccer player and a soccer manager, on 1978-09-15?","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?result <http://dbpedia.org/ontology/birthDate> ""1978-09-15""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name WHERE {
  ?person a dbo:SoccerPlayer .
  ?person a dbo:SoccerManager .
  ?person dbo:birthDate ?date .
  FILTER (YEAR(?date) = 1978 && MONTH(?date) = 9 && DAY(?date) = 15)
  OPTIONAL { ?person foaf:name ?name . }
}
```",1,3,2,1,1,3,2,20,3,6,0,0.3333333333333333,1.0,0.5
701,13,train,Give me the parent of the child of Ramesses II.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ramesses_II> . ?result <http://dbpedia.org/ontology/child> ?v1 . },"```sparql
SELECT ?child ?parent WHERE {
  ?ramesses2 dbo:spouse ?wife .
  ?ramesses2 dbo:child ?child .
  OPTIONAL { ?child dbo:parent ?parent . }
}
```

This query retrieves the children of Ramesses II and attempts to find their parent. Since we are interested in a specific child's parent, this will help us confirm that the parent is indeed Ramesses II.",2,2,3,2,1,3,3,71,0,0,2,0,0.0,0
485,1,train,Give me the birth place of Thomas Warner (poet).,SELECT ?result WHERE { <http://dbpedia.org/resource/Thomas_Warner_(poet)> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?birthPlace WHERE {
  ?person rdfs:label ""Thomas Warner (poet)""@en .
  ?person dbo:birthPlace ?birthPlace .
}
```",1,1,2,1,1,2,3,28,2,0,0,1.0,1.0,1.0
184,17,train,Give me the child of the parent of Archduchess Margaret of Austria (born 1925).,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v1 . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Margaret_of_Austria_(born_1925)> . },"```sparql
SELECT ?child WHERE {
  ?margaret dbo:birthYear ""1925""^^xsd:gYear .
  ?margaret rdfs:label ""Archduchess Margaret of Austria""@en .
  ?parent dbo:parent ?margaret .
  ?parent dbo:child ?child .
}
```",2,2,3,2,1,3,3,71,0,0,3,0,0.0,0
115,2,train,Who is the alumnus of National University of San Marcos?,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/National_University_of_San_Marcos> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?alumnus WHERE {
  ?university a dbo:University ;
              rdfs:label ""National University of San Marcos""@en .
  ?alumnus dbo:almaMater ?university .
}
```",1,1,2,1,1,2,2,9,74,0,0,1.0,1.0,1.0
161,17,train,"Give me the force, that is an event, of the figure known as El Director.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> ?v1 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://xmlns.com/foaf/0.1/nick> ""El Director""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?event WHERE {
  ?character rdfs:label ""El Director""@en .
  ?character dbo:spouseOrPartner ?relatedCharacter .
  ?relatedCharacter dbo:spouseOrPartner ?mentor .
  ?mentor rdfs:label ""Raiden""@en .
  
  OPTIONAL { 
    ?character dbo:participatedInEvent ?event .
  }
}
```",2,3,3,2,1,3,3,71,0,0,10,0,0.0,0
303,2,train,Give me the party of Arnulfo Arias.,SELECT ?result WHERE { <http://dbpedia.org/resource/Arnulfo_Arias> <http://dbpedia.org/ontology/party> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?party WHERE {
  dbr:Aarnulfo_Arias dbo:partyAffiliation ?party .
}
```",1,1,2,1,1,2,3,28,0,0,1,0,0.0,0
314,10,train,Give me the awardee of the award of Sergei Makovetsky.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ?v1 . <http://dbpedia.org/resource/Sergei_Makovetsky> <http://dbpedia.org/property/awards> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award ?recipient WHERE {
  VALUES ?makovetsky { dbr:Sergei_Makovetski }
  ?award dbo:recipient ?makovetsky .
  OPTIONAL { ?award dbo:recipient ?recipient . FILTER(?recipient != ?makovetsky) }
}
```",2,2,3,2,1,2,3,28,0,0,951,0,0.0,0
9,6,train,Who is the awardee of Royal Medal?,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Medal> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?recipient ?year WHERE {
  ?award a dbo:Award .
  ?award dbo:name ""Royal Medal""@en .
  ?award dbo:awardingBody dbr:The_Royal_Society_of_London_for_Improving_Natural_Knowledge .
  ?award dbo:recipient ?recipient .
  OPTIONAL { ?award dbo:dateAwarded ?date . BIND(YEAR(?date) AS ?year) }
}
ORDER BY ?year
```",1,1,2,1,1,3,3,71,0,0,45,0,0.0,0
161,13,train,"Give me the military force of the force, that is a societal event and a military conflict, of Francisco Largo Caballero.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . },"```sparql
SELECT ?militaryForce WHERE {
  ?person foaf:name ""Francisco Largo Caballero""@en .
  ?person dbo:spouse ?spouse .
  ?spouse dbo:spouse ?person .
  ?person dbo:positionHeld ?position .
  ?position dbo:officeHolder ?person .
  ?position dbo:officeName ?office .
  ?office rdfs:label ""Prime Minister of Spain""@en .
  ?person dbo:memberOf ?organization .
  ?organization dbo:member ?person .
  ?organization dbo:name ?name .
  FILTER(CONTAINS(LCASE(?name), ""republican"") || CONTAINS(LCASE(?name), ""popular front""))
  BIND(CONCAT(""Military force associated with Francisco Largo Caballero during the Spanish Civil War: "", ?name) AS ?militaryForce)
}
```",2,4,3,2,1,3,3,71,0,0,514,0,0.0,0
281,12,train,Give me the war of New Zealand Army and entity in Colony of New Zealand.,SELECT ?result WHERE { <http://dbpedia.org/resource/New_Zealand_Army> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Colony_of_New_Zealand> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war ?description WHERE {
  ?war a dbo:MilitaryConflict ;
      dbo:participatingMilitaryUnit dbr:New_Zealand_Army ;
      dbo:location dbr:Colony_of_New_Zealand .
  
  OPTIONAL { ?war rdfs:comment ?description }
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
701,11,train,Give me the parent of the child of Nefertari.,SELECT ?result WHERE { <http://dbpedia.org/resource/Nefertari> <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://dbpedia.org/ontology/parent> ?result . },"```sparql
SELECT ?child ?parent WHERE {
  wd:Q134064 wdt:P40 ?child .
  OPTIONAL { ?child wdt:P22 ?parent . }
}
```",2,2,3,2,1,3,3,71,0,0,2,0,0.0,0
161,4,train,"Give me the force, that is a societal event and an event and a military conflict, of Francisco Franco.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Franco> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
SELECT ?force WHERE {
  wd:Q1198 wdt:P136 ?force .
  ?force wdt:P31 wd:Q13442814 ; # Instance of Military conflict
         wdt:P31 wd:Q11803729 .   # Instance of Event
}
```",1,4,2,1,1,3,3,71,0,0,12,0,0.0,0
488,5,train,"Who is the father, that is an office holder, of Matsudaira Tadamasa?",SELECT ?result WHERE { <http://dbpedia.org/resource/Matsudaira_Tadamasa> <http://dbpedia.org/property/father> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
SELECT ?father ?office WHERE {
  ?matsudairaTadamasa dbo:father ?father .
  ?matsudairaTadamasa foaf:name ""Matsudaira Tadamasa"" .
  
  OPTIONAL { ?father dbo:officeHolder ?office . }
  
  FILTER (LANG(?matsudairaTadamasa) = 'en')
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
16,2,train,Give me the person born as Georgeanne Marie Rice.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Georgeanne Marie Rice""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person ?officialName WHERE {
  ?person dbo:birthName ""Georgeanne Marie Rice"" .
  OPTIONAL { ?person foaf:name ?officialName . }
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
328,10,train,Give me the leader of People's Commissariat of Defense of the Soviet Union and awardee of Order of Suvorov.,SELECT ?result WHERE { <http://dbpedia.org/resource/People's_Commissariat_of_Defense_of_the_Soviet_Union> <http://dbpedia.org/ontology/leader> ?result . ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Order_of_Suvorov> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person dbo:positionHeld dbr:People's_Commissariat_of_Defense_of_the_Soviet_Union .
  ?person dbo:awardReceived dbr:Order_of_Suvorov .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
492,14,train,"Give me the person decedent at the capital, that is a settlement, of Algeria.",SELECT ?result WHERE { <http://dbpedia.org/resource/Algeria> <http://dbpedia.org/ontology/capital> ?v1 . ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?deathPlace WHERE {
  # Find the capital of Algeria
  ?capital dbo:country dbr:Algeria .
  ?capital rdfs:label ""Algiers""@en .

  # Ensure it is a settlement
  ?capital rdf:type dbo:Settlement .

  # Find persons who died in this place
  ?person dbo:deathPlace ?deathPlace ;
          dbp:placeOfBirth ?birthPlace .
  
  FILTER (?deathPlace = ?capital)
}
```",2,3,3,2,1,3,3,71,0,0,122,0,0.0,0
404,3,train,Give me the birth name of Princess Victoria Louise of Prussia.,SELECT ?result WHERE { <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/property/birthName> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthName WHERE {
  dbr:Princess_Victoria_Louise_of_Prussia dbo:givenName ?birthName .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
701,12,train,Give me the parent of Henuttawy (19th dynasty) and spouse of Ramesses II.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Henuttawy_(19th_dynasty)> . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Ramesses_II> . },"```sparql
SELECT ?person WHERE {
  # Find the parent of Henuttawy (19th dynasty)
  ?henuttawy dbo:parent ?parent .
  ?henuttawy rdfs:label ""Henuttawy""@en .
  FILTER(CONTAINS(LCASE(?henuttawy), ""19th dynasty""))

  # Find the spouse of Ramesses II
  ?ramesses2 dbo:spouse ?spouse .
  ?ramesses2 rdfs:label ""Ramesses II""@en .

  # Check if the parent is also a spouse
  FILTER (?parent = ?spouse)
  
  # Return the person who satisfies both conditions
  BIND(?parent AS ?person)
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
421,11,train,Give me the person born as the birth name of Dino Merlin.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Dino_Merlin> <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
SELECT ?givenName ?familyName WHERE {
  ?person a foaf:Person ;
          foaf:name ""Dino Merlin"" .
  OPTIONAL { ?person foaf:givenName ?givenName . }
  OPTIONAL { ?person foaf:familyName ?familyName . }
}
```",2,2,3,2,1,2,3,28,0,0,1,0,0.0,0
492,12,train,Give me the person decedent at Algiers and commander in Franco-Hova Wars.,SELECT ?result WHERE { <http://dbpedia.org/resource/Franco-Hova_Wars> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Algiers> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:MilitaryPerson .
  ?person dbo:deathPlace dbr:Algiers .
  ?person dbo:occupation dbr:Military_Commander .
  ?event dbo:place dbr:Madagascar ;
         dbo:participant ?person .
  FILTER EXISTS { 
    ?event dbo:name ""Franco-Hova_Wars""^^xsd:string .
  }
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
783,5,train,"Give me the person born, that is an artist and a musical artist, as Priscilla Opoku-Kwarteng.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/birthName> ""Priscilla Opoku-Kwarteng""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  ?person dbo:birthName ""Priscilla Opoku-Kwarteng""@en .
  ?person dbo:occupation ?occupation1 .
  ?person dbo:occupation ?occupation2 .
  
  FILTER (
    (strstarts(str(?occupation1), str(dbo:Artist)) || 
     strstarts(str(?occupation1), str(dbo:MusicalArtist))) &&
    
    (strstarts(str(?occupation2), str(dbo:Artist)) || 
     strstarts(str(?occupation2), str(dbo:MusicalArtist)))
  )
}
```",1,3,2,1,1,3,2,20,0,0,1,0,0.0,0
963,5,train,"Give me the ruling party, that is a political party, in Sremski Karlovci.",SELECT ?result WHERE { <http://dbpedia.org/resource/Sremski_Karlovci> <http://dbpedia.org/property/leaderParty> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?party WHERE {
  ?municipality dbo:name ""Sremski Karlovci""@sr .
  ?municipality dbo:government ?government .
  ?government dbo:rulingParty ?party .
  ?party a dbo:PoliticalParty .
}
```",1,2,2,1,1,3,2,20,0,0,1,0,0.0,0
285,1,train,Give me the spouse of Aristotle Onassis.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Aristotle_Onassis> . },"```sparql
SELECT ?spouse WHERE {
  wd:Q1116 dbo:spouse ?spouse .
}
```",1,1,2,1,1,3,2,20,0,0,2,0,0.0,0
487,0,train,Give me the country of 2022 Vermont House of Representatives election.,SELECT ?result WHERE { <http://dbpedia.org/resource/2022_Vermont_House_of_Representatives_election> <http://dbpedia.org/ontology/country> ?result . },"```sparql
SELECT ?country WHERE {
    ?election dbo:wikiPageRedirects dbr:2022_Vermont_House_of_Representatives_election .
    ?election dbo:country ?country .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
177,5,train,Give me the entity in the residence of Alexander Gamelin.,SELECT ?result WHERE { <http://dbpedia.org/resource/Alexander_Gamelin> <http://dbpedia.org/property/residence> ?v0 . ?result <http://dbpedia.org/ontology/country> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?residence WHERE {
  ?person dbo:residence ?residence .
  FILTER(STR(?person) = ""Alexander_Gamelin"")
}
```",2,2,3,2,1,2,2,9,0,0,3065,0,0.0,0
465,0,train,Give me the death place of Jiřina Štěpničková.,SELECT ?result WHERE { <http://dbpedia.org/resource/Jiřina_Štěpničková> <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?deathPlace WHERE {
  dbr:Jiřina_Štěpničková dbo:deathPlace ?deathPlace .
}
```",1,1,2,1,1,2,2,9,2,0,0,1.0,1.0,1.0
404,11,train,"Give me the spouse of the person born, that is a royalty, as Princess Victoria Louise of Prussia.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/property/birthName> ""Princess Victoria Louise of Prussia""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
SELECT ?spouse WHERE {
  ?person dbo:birthName ""Princess Victoria Louise of Prussia""@en .
  ?person rdf:type dbo:Monarch .
  ?person dbo:spouse ?spouse .
}
```",2,3,3,2,1,3,3,71,0,0,1,0,0.0,0
328,12,train,Give me the commander in Eastern Front (World War II) and leader of People's Commissariat of Defense of the Soviet Union.,SELECT ?result WHERE { <http://dbpedia.org/resource/People's_Commissariat_of_Defense_of_the_Soviet_Union> <http://dbpedia.org/ontology/leader> ?result . <http://dbpedia.org/resource/Eastern_Front_(World_War_II)> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name WHERE {
  ?person a dbo:MilitaryPerson .
  ?person dbo:office ?office .
  ?office rdfs:label ""People's Commissar for Defence""@en .
  ?person dbo:rank ?rank .
  ?rank rdfs:label ""Marshal of the Soviet Union""@en .
  OPTIONAL { ?person foaf:name ?name . }
  FILTER(CONTAINS(LCASE(?person), ""stalin""))
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
492,5,train,Who is the commander in Battle of Verdun?,SELECT ?result WHERE { <http://dbpedia.org/resource/Battle_of_Verdun> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?person ?name WHERE {
  ?battle dbo:wikiPageRedirects dbp:Battle_of_Verdun .
  OPTIONAL { ?battle dbp:commander ?person . }
  OPTIONAL { ?person rdfs:label ?name FILTER (lang(?name) = 'en') . }
}
```",1,1,2,1,1,3,3,71,0,0,17,0,0.0,0
421,5,train,Give me the birth name of Dino Merlin.,SELECT ?result WHERE { <http://dbpedia.org/resource/Dino_Merlin> <http://dbpedia.org/property/birthName> ?result . },"```sparql
SELECT ?birthName WHERE {
  ?person foaf:name ""Dino Merlin""@en .
  ?person dbo:birthName ?birthName .
}
```",1,1,2,1,1,2,3,28,0,0,1,0,0.0,0
996,3,train,Who is the awardee of 1778.0?,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ""1778.0""^^<http://www.w3.org/2001/XMLSchema#double> . }","```sparql
SELECT ?recipient WHERE {
  ?award dbo:identifier ""1778.0"" .
  ?award dbo:recipient ?recipient .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
801,5,train,"Give me the professional, that is a musical artist, in Rapper.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Rapper""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?person ?name WHERE {
  ?person a dbo:MusicalArtist .
  ?person dbo:occupation ?occupation .
  ?occupation rdfs:label ""Rapper""@en .
  OPTIONAL { ?person rdfs:label ?name . FILTER (lang(?name) = 'en') }
}
ORDER BY ?name
```",1,2,2,1,1,3,3,71,125,1813,1238,0.06449948400412797,0.09170946441672781,0.0757346258709482
16,16,train,Give me the profession of the actor of Unnatural (TV series).,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/occupation> ?result . <http://dbpedia.org/resource/Unnatural_(TV_series)> <http://dbpedia.org/property/starring> ?v1 . },"```sparql
SELECT ?actor ?actorName WHERE {
  ?series dbo:genre dbc:American_television_dramas .
  ?series dbo:title ""Unnatural (TV series)""@en .
  ?series dbo:starring ?actor .
  ?actor rdfs:label ?actorName .
  FILTER(LANG(?actorName) = 'en')
}
```

This query retrieves the actors involved in the TV series ""Unnatural."" Once we have their names, we can use another SPARQL query to find out their professions:

```sparql
SELECT ?person ?profession WHERE {
  VALUES ?actor { 
    # Replace these with actual actor URIs obtained from the first query
    <http://dbpedia.org/resource/Actor1> 
    <http://dbpedia.org/resource/Actor2>
    # Add more actors as needed
  }
  ?person foaf:name ?actor .
  OPTIONAL {
    ?person dbo:occupation ?profession .
  }
}
```

Replace `<http://dbpedia.org/resource/Actor1>` and `<http://dbpedia.org/resource/Actor2>` with the actual URIs of the actors obtained from the first query.",2,2,3,2,1,3,3,71,0,0,3,0,0.0,0
391,12,train,Give me the actor of All About the Andersons and actor of The Departed.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Departed> <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/All_About_the_Andersons> <http://dbpedia.org/property/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor (GROUP_CONCAT(?movieLabel; separator="", "") AS ?movies)
WHERE {
  VALUES (?film) { 
    dbr:All_About_the_Andersons 
    dbr:The_Departed
  }
  
  ?film dbo:starring ?actor .
  ?film rdfs:label ?movieLabel .

  # Ensure we only get English labels for movies
  FILTER (LANG(?movieLabel) = 'en')

  # Get the actor's name
  ?actor rdfs:label ?actorLabel .
  FILTER (LANG(?actorLabel) = 'en')
}
GROUP BY ?actor
ORDER BY ?actorLabel
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
492,9,train,Give me the person decedent at French Algeria and commander in Franco-Hova Wars.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/French_Algeria> . <http://dbpedia.org/resource/Franco-Hova_Wars> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name WHERE {
  ?person dbo:occupation dbr:Military_person .
  ?person rdfs:label ?name .

  # French Algeria involvement
  OPTIONAL { 
    ?algeriaEvent dbo:location dbr:French_Algeria ;
                  dbo:agent ?person .
  }

  # Franco-Hova Wars involvement
  OPTIONAL {
    ?madagascarEvent dbo:location dbr:Madagascar ;
                    dbo:agent ?person ;
                    rdfs:label ?eventLabel FILTER regex(?eventLabel, ""Franco-Hova War"", ""i"") .
  }
  
  FILTER (CONTAINS(LCASE(?name), ""gallieni""))
}
ORDER BY ?name
LIMIT 1
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
421,7,train,Give me the band member of Senidah and person born as Edin Dervišhalidović.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Edin Dervišhalidović""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Senidah> . }","```sparql
# Query to find the band members of Senidah
SELECT ?bandMember WHERE {
  ?senidah dbo:birthName ""Senidah""@en .
  ?senidah dbo:memberOf ?band .
  ?bandMember dbo:memberOf ?band ;
              foaf:name ?name .
}

UNION

# Query to find the band members of Edin Dervišhalidović
SELECT ?bandMember WHERE {
  ?edin dbo:birthName ""Edin Dervišhalidović""@en .
  ?edin dbo:memberOf ?band .
  ?bandMember dbo:memberOf ?band ;
              foaf:name ?name .
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
184,7,train,Give me the parent of Archduchess Margaret of Austria (born 1925).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Margaret_of_Austria_(born_1925)> . },"```sparql
SELECT ?parent WHERE {
  ?person dbo:birthYear ""1925""^^xsd:gYear ;
          foaf:name ""Margaret of Austria"" .
  OPTIONAL { ?person dbo:parent ?parent . }
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
285,9,train,Who is the child of the spouse of Aristotle Onassis?,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?result . ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Aristotle_Onassis> . },"```sparql
SELECT ?child WHERE {
  wd:Q1116 wdt:P26 wd:Q1189 . # Aristotle Onassis (wd:Q1116) has spouse (wdt:P26) Jacqueline Kennedy (wd:Q1189)
  wd:Q1189 wdt:P40 ?child .   # Jacqueline Kennedy (wd:Q1189) has child (wdt:P40) ?child
}
```",2,2,3,2,1,3,2,20,0,0,5,0,0.0,0
547,0,train,Give me the resting place of James Burton (Egyptologist).,SELECT ?result WHERE { <http://dbpedia.org/resource/James_Burton_(Egyptologist)> <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?burialPlace WHERE {
  ?person a dbo:Egyptologist .
  ?person foaf:name ""James Burton"" .
  OPTIONAL { ?person dbo:deathPlace ?deathPlace . }
  OPTIONAL { ?person dbo:burialPlace ?burialPlace . }
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
9,14,train,Give me the figure known as the nickname of Queen's University Belfast.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ?v1 . <http://dbpedia.org/resource/Queen's_University_Belfast> <http://dbpedia.org/property/nickname> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?nickname WHERE {
  ?university a dbo:EducationalInstitution ;
              rdfs:label ""Queen's University Belfast""@en .
  OPTIONAL { ?university dbo:nickName ?nickname . }
  OPTIONAL { ?university rdfs:altLabel ?nickname . }
}
```",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
659,15,train,"Give me the force of the native, that is an office holder, of Kingdom of Ireland.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Kingdom_of_Ireland> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/commander> ?v1 . },"```sparql
SELECT ?office ?description WHERE {
  ?office dcterms:isPartOf <http://dbpedia.org/resource/Kingdom_of_Ireland> .
  ?office dbo:wikiPageDescription ?description .
  FILTER(CONTAINS(LCASE(?description), ""lord lieutenant of ireland""))
}
```",2,3,3,2,1,3,3,71,0,0,60,0,0.0,0
801,16,train,"Give me the work, that is a musical work and a song and a work, of the professional, that is a musical artist, in Rapper.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/property/occupation> ""Rapper""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?result <http://dbpedia.org/property/writer> ?v1 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?work WHERE {
  ?artist a dbo:MusicalArtist ;
          dbo:genre dbr:Rap_music .
  
  ?work dbo:performer ?artist ;
        a dbo:Song, dbo:MusicalWork .

}
```",2,6,3,2,1,3,3,71,0,0,2395,0,0.0,0
55,9,train,Give me the band member of Metallica and band of Newsted.,SELECT ?result WHERE { <http://dbpedia.org/resource/Newsted> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Metallica> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?metallicaMember ?newstedBand 
WHERE {
  # Find all members of Metallica
  ?metallicaMember a dbo:MusicalArtist ;
                   dbo:memberOfBand dbr:Metallica .

  # Find bands Jason Newsted was part of after leaving Metallica
  dbr:Jason_Newsted dbo:memberOfBand ?newstedBand .
}
```",2,2,3,1,2,2,3,28,0,0,3,0,0.0,0
429,0,train,Give me the administration of Andrew Johnson.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Andrew_Johnson> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?presidentOf ?termStart ?termEnd WHERE {
  dbr:Andrew_Johnson dbo:presidentOf ?presidentOf .
  OPTIONAL { dbr:Andrew_Johnson dbo:termStart ?termStart . }
  OPTIONAL { dbr:Andrew_Johnson dbo:termEnd ?termEnd . }
}
```",1,1,2,1,1,2,2,9,0,0,1,0,0.0,0
696,4,train,Who is the commander in Battle of Chishui River?,SELECT ?result WHERE { <http://dbpedia.org/resource/Battle_of_Chishui_River> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT ?commander WHERE {
  ?battle a dbo:Battle .
  ?battle rdfs:label ""Battle of Chishui River""@en .
  OPTIONAL { ?battle dbp:commander ?commander . }
  FILTER (lang(?battle) = 'en')
}
```",1,1,2,1,1,3,2,20,0,0,24,0,0.0,0
182,7,train,Give me the entity in Sri Lanka and war of Mahesh Senanayake.,SELECT ?result WHERE { <http://dbpedia.org/resource/Mahesh_Senanayake> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Sri_Lanka> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war WHERE {
  ?person rdfs:label ""Mahesh Senanayake""@en .
  ?person dbo:nationality dbr:Sri_Lanka .
  ?person dbo:occupation ?occupation .
  
  OPTIONAL { 
    ?person dbo:spouse ?spouse . 
    ?spouse dbo:birthPlace dbr:Sri_Lanka .
  }
  
  ?event dbo:location dbr:Sri_Lanka ;
         a dbo:MilitaryConflict ;
         rdfs:label ?warLabel .

  FILTER(CONTAINS(LCASE(?occupation), ""military"") || CONTAINS(LCASE(?occupation), ""politics""))
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
197,0,train,Give me the birthplace of Dumitru Nadu.,SELECT ?result WHERE { <http://dbpedia.org/resource/Dumitru_Nadu> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace WHERE {
  dbr:Dumitru_Nadu dbo:birthPlace ?birthPlace .
}
```",1,1,2,1,1,2,2,9,2,0,0,1.0,1.0,1.0
92,11,train,"Give me the band member of the reference, that is an artist, to Nevermore.","SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""Nevermore""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?member ?artistLabel WHERE {
  ?band a dbo:Band ;
        dbo:name ""Nevermore""@en .
  
  ?band dbo:bandMember ?member .
  
  OPTIONAL { 
    ?member dbo:occupation dbr:Musician .
  }
  
  SERVICE <http://dbpedia.org/sparql> {
    ?member rdfs:label ?artistLabel .
  }

  FILTER (lang(?artistLabel) = 'en')
}
```",2,3,3,2,1,3,3,71,0,0,12,0,0.0,0
391,2,train,Give me the actor of All About the Andersons.,SELECT ?result WHERE { <http://dbpedia.org/resource/All_About_the_Andersons> <http://dbpedia.org/property/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  ?film a dbo:Film .
  ?film dbo:title ""All About the Andersons""@en .
  ?film dbo:starring ?actor .
}
```",1,1,2,1,1,3,3,71,0,0,5,0,0.0,0
626,10,train,Give me the award of the military force of Battle of Borodino.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Borodino> . ?v0 <http://dbpedia.org/property/awards> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce ?award WHERE {
  # Identify the Battle of Borodino resource
  VALUES ?battle { dbr:Battle_of_Borodino }

  # Find military forces involved in the battle
  ?militaryForce dbo:participatedIn ?battle .

  OPTIONAL {
    # Look for awards associated with these military forces
    ?militaryForce dbo:award ?award .
  }
}
```",2,2,3,2,1,3,2,20,0,0,53,0,0.0,0
701,5,train,Give me the child of Seti I.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seti_I> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?child WHERE {
  ?child dbo:parent <http://dbpedia.org/resource/Seti_I> .
}
```",1,1,2,1,1,3,3,71,1,1,1,0.5,0.5,0.5
303,9,train,Give me the entity in Panama and party of Arnulfo Arias.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Panama> . <http://dbpedia.org/resource/Arnulfo_Arias> <http://dbpedia.org/ontology/party> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entityInPanama WHERE {
  # Find Arnulfo Arias and his political affiliation
  dbr:Arnulfo_Arias dbo:politicalParty ?party .
  
  # Find entities in Panama related to this party
  ?entityInPanama a dbo:PoliticalParty ;
                 dbo:country dbr:Panama ;
                 rdfs:label ?label .
                 
  FILTER(CONTAINS(LCASE(?label), LCASE(str(?party)))) 
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
435,1,train,Give me the region of Greenwich Mean Time.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Greenwich_Mean_Time> . },"```sparql
SELECT ?region WHERE {
  ?gmt dbp:name ""Greenwich Mean Time""@en .
  ?gmt dbo:timeZone ?tz .
  ?tz dbo:country ?country .
  ?country dbo:administrativeTerritory ?region .
}
```",1,1,2,1,1,2,3,28,0,0,2484,0,0.0,0
54,11,train,Give me the child of the father of Soe Min Wimala Dewi.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Soe_Min_Wimala_Dewi> <http://dbpedia.org/property/father> ?v0 . },"```sparql
SELECT ?child WHERE {
  # Find Soe Min Wimala Dewi and her father
  ?soeMinWimalaDewi dbo:parent ?father .
  
  # Get the father's name
  ?father foaf:name ?fatherName .

  # Filter to ensure we have a specific person (Soe Min Wimala Dewi)
  ?soeMinWimalaDewi foaf:name ""Soe Min Wimala Dewi""@en .
  
  # Find children of the father
  ?father dbo:child ?child .
}
```",2,2,3,2,1,3,3,71,3,0,0,1.0,1.0,1.0
9,3,train,"Give me the entity, that is an organisation, in Belfast.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Belfast> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?organization WHERE {
  ?organization a dbo:Organization .
  ?location dbo:location ?organization .
  ?location dbp:city ""Belfast"" .
}
```",1,2,2,1,1,3,3,71,0,0,57,0,0.0,0
492,1,train,Give me the commander in Franco-Hova Wars.,SELECT ?result WHERE { <http://dbpedia.org/resource/Franco-Hova_Wars> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war ?commander WHERE {
  VALUES ?war { 
    dbr:Franco-Hova_War_of_1883-1885 
    dbr:Franco-Hova_War_of_1894
  }
  
  ?war dbo:commander ?commander .
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
232,12,train,Give me the native of London and actor of Dog Soldiers (film).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/London> . <http://dbpedia.org/resource/Dog_Soldiers_(film)> <http://dbpedia.org/ontology/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?actorName WHERE {
  ?person a dbo:Actor ;
          dbo:birthPlace dbr:London ;
          dbo:film dbr:Dog_Soldiers_(2002_film) .
  
  ?person foaf:name ?actorName .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
645,0,train,Give me the entity in United Kingdom.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?entity WHERE {
  ?entity a dbo:Place .
  ?entity dbo:country dbpedia:United_Kingdom .
}
LIMIT 100
```",1,1,2,1,1,3,2,20,0,0,42999,0,0.0,0
488,11,train,Give me the birth place of the commander in Boshin War.,SELECT ?result WHERE { <http://dbpedia.org/resource/Boshin_War> <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?birthPlace WHERE {
  ?person dbo:occupation dbr:Boshin_War_commander .
  ?person foaf:name ""Saigō Takamori""@ja .
  ?person dbp:birthPlace ?birthPlace .
}
```",2,2,3,2,1,3,3,71,0,0,15,0,0.0,0
404,7,train,Who is the spouse of Princess Victoria Louise of Prussia?,SELECT ?result WHERE { <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  dbr:Princess_Victoria_Louise_of_Prussia dbo:spouse ?spouse .
}
```",1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
534,10,train,"Give me the owner of the location, that is a venue and an architectural structure, of 2012 Pro12 Grand Final.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/owner> ?result . <http://dbpedia.org/resource/2012_Pro12_Grand_Final> <http://dbpedia.org/ontology/location> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Venue>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ArchitecturalStructure>. },"```sparql
SELECT ?owner WHERE {
  ?event dbo:location ?venue .
  ?event dbp:name ""2012 Pro12 Grand Final""@en .
  
  ?venue a dbo:SportsVenue ;
         a dbo:ArchitecturalStructure .

  ?venue dbo:owner ?owner .
}
```",2,4,3,2,1,3,2,20,0,0,1,0,0.0,0
232,10,train,Give me the child of Jon Pertwee and native of London.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/London> . <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child ?nativePlace WHERE {
  ?person a dbo:Person ;
          foaf:name ""Jon Pertwee""@en .
  ?person dbo:child ?child .
  ?child dbo:nativePlace ?place .
  FILTER(CONTAINS(LCASE(?place), ""london""))
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
184,15,train,"Give me the native of the landmark at elevation, that is a settlement, of 96.0.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://dbpedia.org/ontology/elevation> ""96.0""^^<http://www.w3.org/2001/XMLSchema#double> . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?landmark ?nativeLabel WHERE {
  ?landmark a dbo:PopulatedPlace ;
            dbo:elevationAboveSeaLevel ""96.0""^^xsd:float .
  OPTIONAL { ?landmark rdfs:label ?nativeLabel . FILTER (lang(?nativeLabel) = 'en') }
}
```",2,3,3,2,1,3,3,71,0,0,3320,0,0.0,0
747,2,train,Give me the band of Shèna.,SELECT ?result WHERE { <http://dbpedia.org/resource/Shèna> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT ?band WHERE {
  ?person foaf:name ""Shèna""@en .
  ?person dbp:band ?band .
}
```",1,1,2,1,1,3,3,71,0,0,8,0,0.0,0
485,11,train,"Give me the entity in the birth place, that is a region, of Joseph Whitaker (naturalist).",SELECT ?result WHERE { <http://dbpedia.org/resource/Joseph_Whitaker_(naturalist)> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?result <http://dbpedia.org/ontology/country> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlaceEntity WHERE {
  ?person a dbo:Naturalist ;
          foaf:name ""Joseph Whitaker"" .
  
  ?person dbo:birthPlace ?birthPlace .

  ?birthPlace rdf:type dbo:Region .

  BIND(?birthPlace AS ?birthPlaceEntity)
}
```",2,3,3,2,1,2,3,28,0,0,369,0,0.0,0
754,9,train,Give me the parent of the parent of Min Linka.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Min_Linka> <http://dbpedia.org/ontology/parent> ?v0 . },"```sparql
SELECT ?grandparent WHERE {
  wd:Q1234567 wdt:P22 ?parent . # Min Linka's father (King Munjong)
  ?parent wdt:P22|wdt:P25 ?grandparent . # King Munjong's parents (Minjong of Goryeo and Queen Heonae)
}
```

Note: Replace `wd:Q1234567` with the actual DBpedia identifier for Min Linka.",2,2,3,2,1,3,2,20,0,0,3,0,0.0,0
177,0,train,Give me the entity in South Korea.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/South_Korea> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?entity ?name WHERE {
  ?entity a dbo:Place .
  OPTIONAL { ?entity dbo:country <http://dbpedia.org/resource/South_Korea> . }
  OPTIONAL { ?entity dbp:location <http://dbpedia.org/resource/South_Korea> . }
  ?entity rdfs:label ?name .
  FILTER (lang(?name) = 'en')
}
ORDER BY ?name
LIMIT 10
```",1,1,2,1,1,2,2,9,0,20,3065,0.0,0.0,0
701,0,train,Give me the parent of Meritamen.,SELECT ?result WHERE { <http://dbpedia.org/resource/Meritamen> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
SELECT ?parent WHERE {
  dbpedia:Meritamen dbo:parent ?parent .
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
365,3,train,Give me the real name of The Blasters.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Blasters> <http://xmlns.com/foaf/0.1/name> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?member ?realName WHERE {
  VALUES ?band { dbr:The_Blasters }
  ?band dbo:bandMember ?member .
  OPTIONAL { ?member foaf:name ?stageName . }
  OPTIONAL { ?member dbp:birthName ?realName . }
}
```",1,1,2,1,1,2,2,9,0,4,1,0.0,0.0,0
996,2,train,Give me the elevation of Lac d'Avoriaz.,SELECT ?result WHERE { <http://dbpedia.org/resource/Lac_d'Avoriaz> <http://dbpedia.org/ontology/elevation> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?elevation WHERE {
  ?lake a dbo:Lake ;
        rdfs:label ""Lac d'Avoriaz""@en .
  OPTIONAL { ?lake dbo:elevation ?elevation . }
}
```",1,1,2,1,1,3,2,20,1,0,0,1.0,1.0,1.0
9,8,train,Give me the nickname of Queen's University Belfast.,SELECT ?result WHERE { <http://dbpedia.org/resource/Queen's_University_Belfast> <http://dbpedia.org/property/nickname> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nickname WHERE {
  dbr:Queen's_University_Belfast dbo:nickName ?nickname .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
161,10,train,Give me the military force of Rif War and commander in Biscay Campaign.,SELECT ?result WHERE { <http://dbpedia.org/resource/Biscay_Campaign> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Rif_War> . },"```sparql
# Query for Rif War
SELECT ?militaryForce ?commander WHERE {
  ?event dcterms:subject dbc:Rif_War .
  OPTIONAL { ?event dbo:militaryCommander ?commander . }
  OPTIONAL { ?event dbo:participatingMilitaryUnit ?militaryForce . }
}

# Query for Biscay Campaign
SELECT ?militaryForce ?commander WHERE {
  ?event dcterms:subject dbc:Biscay_Campaign .
  OPTIONAL { ?event dbo:militaryCommander ?commander . }
  OPTIONAL { ?event dbo:participatingMilitaryUnit ?militaryForce . }
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
994,1,train,Give me the associated musical artist of Red Tide (band).,SELECT ?result WHERE { <http://dbpedia.org/resource/Red_Tide_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artist WHERE {
  VALUES ?band { dbr:Red_Tide_(band) }
  ?band dbo:associatedBand ?artist .
}
```",1,1,2,1,1,3,3,71,0,0,6,0,0.0,0
251,0,train,Give me the location of Battle of Marengo.,SELECT ?result WHERE { <http://dbpedia.org/resource/Battle_of_Marengo> <http://dbpedia.org/ontology/place> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?location WHERE {
  ?battle a dbo:Battle .
  ?battle rdfs:label ""Battle of Marengo""@en .
  ?battle dbo:place ?location .
}
```",1,1,2,1,1,2,3,28,0,0,3,0,0.0,0
915,4,train,"Give me the parent, that is a fictional character and a soap character, of Lizzie Spaulding.",SELECT ?result WHERE { <http://dbpedia.org/resource/Lizzie_Spaulding> <http://dbpedia.org/ontology/parent> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoapCharacter>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent ?parentLabel WHERE {
  # Lizzie Spaulding's parents from ""As the World Turns""
  VALUES ?lizzieSpauldingParent { 
    dbr:Liz_McCoy
    dbr:Tom_Spaulding
  }
  
  ?lizzieSpauldingParent dbo:spouse ?parent .
  ?parent a dbo:FictionalCharacter ;
          dbo:genre dbr:SoapOpera .

  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
```",1,3,2,1,1,3,2,20,0,0,2,0,0.0,0
16,13,train,Give me the professional in the profession of Satomi Ishihara.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Satomi_Ishihara> <http://dbpedia.org/property/occupation> ?v1 . },"```sparql
SELECT ?person ?personLabel WHERE {
  # Find Satomi Ishihara's profession
  dbpedia:Satomi_Ishihara dbo:occupation ?profession .
  
  # Find other people with the same profession
  ?person a dbo:Person ;
          dbo:occupation ?profession .
  
  FILTER(?person != dbpedia:Satomi_Ishihara) # Exclude Satomi Ishihara herself
  
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
```",2,2,3,2,1,3,3,71,0,0,19241,0,0.0,0
617,2,train,Give me the parent of Nysa (wife of Pharnaces I of Pontus).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Nysa_(wife_of_Pharnaces_I_of_Pontus)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?parent WHERE {
  ?nysa a dbo:Person ;
        foaf:name ""Nysa""@en .
  OPTIONAL { ?nysa dbo:parent ?parent . }
}
```",1,1,2,1,1,3,3,71,2,0,0,1.0,1.0,1.0
659,5,train,"Give me the figure known, that is a military unit and an organisation, as 'Polish Horse'.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?result <http://dbpedia.org/property/nickname> ""'Polish Horse'""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?entity ?label WHERE {
  ?entity rdfs:label ?label .
  FILTER(CONTAINS(LCASE(?label), ""polish horse""))
  OPTIONAL { ?entity a dbo:MilitaryUnit . }
  OPTIONAL { ?entity a dbo:Organization . }
}
```",1,3,2,1,1,3,3,71,0,4,1,0.0,0.0,0
391,7,train,Who is the professional in ?,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
# No specific query can be generated due to lack of context.
```",1,1,2,1,1,3,3,71,0,0,39640,0,0.0,0
659,10,train,Give me the military force of Napoleonic Wars and commander in German campaign of 1813.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Napoleonic_Wars> . <http://dbpedia.org/resource/German_campaign_of_1813> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce ?commander WHERE {
  # Find entities related to the Napoleonic Wars
  ?event dbo:wikiPageRedirects dbr:Napoleonic_Wars .
  
  # Filter for events specifically in the German campaign of 1813
  ?event dbo:date ""1813""^^xsd:gYear ;
         dbo:location dbr:Germany .

  # Identify military forces involved in these events
  ?militaryForce dbo:participatedIn ?event .

  OPTIONAL {
    # Find commanders associated with these military forces
    ?commander dbo:commanded ?militaryForce .
  }
}
```",2,2,3,1,2,3,3,71,0,0,6,0,0.0,0
179,6,train,Give me the person born as Mom Rajawongse Sirikit Kitiyakara and parent of Ubol Ratana.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Mom Rajawongse Sirikit Kitiyakara""@en . <http://dbpedia.org/resource/Ubol_Ratana> <http://dbpedia.org/ontology/parent> ?result . }","```sparql
SELECT ?person WHERE {
  ?person foaf:name ""Sirikit of Thailand""@en .
  ?person dbo:birthName ""Mom Rajawongse Sirikit Kitiyakara"" .
  ?person dbo:child ?child .
  ?child foaf:name ""Ubol Ratana""@en .
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
696,9,train,"Who is the member of the associated musical artist, that is an organisation and a group and a band, of The Boils?",SELECT ?result WHERE { <http://dbpedia.org/resource/The_Boils> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://dbpedia.org/ontology/bandMember> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?associatedArtist WHERE {
  # Identify The Boils entity
  VALUES ?theBoils { dbr:The_Boils }
  
  # Find associated artists, organizations, or groups
  ?theBoils dbo:bandMemberOrAssociate ?associatedEntity .
  
  # Filter for entities that are both an organization/group and a band
  ?associatedEntity rdf:type ?type1 .
  FILTER (?type1 IN (dbo:Band, dbo:MusicalGroup, dbo:Organization))
  
  # Ensure the entity is also classified as a group or organization
  ?associatedEntity rdf:type ?type2 .
  FILTER (?type2 IN (dbo:Organization, dbo:MusicalGroup))
  
  # Return the associated artist that meets both criteria
  BIND(?associatedEntity AS ?associatedArtist)
}
```",2,5,3,2,1,3,2,20,0,0,6,0,0.0,0
696,10,train,Give me the award of the commander in Battle of Chishui River.,SELECT ?result WHERE { <http://dbpedia.org/resource/Battle_of_Chishui_River> <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://dbpedia.org/property/awards> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?award WHERE {
  ?battle dbo:eventLocation ?location .
  ?battle dbo:participatedIn ?event .
  ?event rdfs:label ""Battle of Chishui River""@en .
  
  ?participant dbo:role ?role .
  ?participant dbo:agent ?commander .
  ?commander a dbo:MilitaryPerson .

  OPTIONAL {
    ?commander dbo:award ?award .
  }
}
```",2,2,3,2,1,3,2,20,0,0,9,0,0.0,0
492,4,train,"Give me the work of US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/author> ""US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?position ?startDate ?endDate ?description
WHERE {
  ?person rdfs:label ""Joseph C. Satterthwaite""@en .
  OPTIONAL { ?person dbo:office ?position . }
  OPTIONAL { ?position dbo:holder ?person . }
  OPTIONAL { ?position dbo:startDate ?startDate . }
  OPTIONAL { ?position dbo:endDate ?endDate . }
  OPTIONAL { ?position dbo:description ?description . }
  
  FILTER(CONTAINS(LCASE(?position), ""assistant secretary of state for african affairs""))
}
ORDER BY ?startDate
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
767,6,train,Give me the administration of George K. Nash.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/George_K._Nash> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?role ?administration WHERE {
  ?person rdfs:label ""George K. Nash""@en.
  OPTIONAL { ?person dbo:positionHeld ?role . }
  OPTIONAL { ?role dbo:partOfOrganization ?organization . }
  OPTIONAL { ?organization dbo:president ?administration . }
}
```",1,1,2,1,1,3,3,71,0,6191,7,0.0,0.0,0
747,10,train,Give me the band of Shèna and person born on 1985-04-29.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Shèna> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/birthDate> ""1985-04-29""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
# Query to find Shèna's band
SELECT ?band WHERE {
  ?artist foaf:name ""Shèna""@en .
  ?artist dbo:memberOf ?band .
}

UNION

# Query to find a person born on April 29, 1985
SELECT ?person WHERE {
  ?person dbo:birthday ?birthDate .
  FILTER (YEAR(?birthDate) = 1985 && MONTH(?birthDate) = 4 && DAY(?birthDate) = 29)
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
356,2,train,"Give me the predecessor, that is a sports team season and a soccer club season, of 2015 Sacramento Republic FC season.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/2015_Sacramento_Republic_FC_season> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?season WHERE {
    ?team dbo:sport dbr:Soccer .
    ?team rdfs:label ""Sacramento Republic FC""@en .
    ?season dbo:club ?team ;
            dbo:year 2014 .
}
```",1,3,2,1,1,3,2,20,0,0,1,0,0.0,0
177,1,train,"Give me the headquarter of Ministry of Culture, Sports and Tourism.","SELECT ?result WHERE { <http://dbpedia.org/resource/Ministry_of_Culture,_Sports_and_Tourism> <http://dbpedia.org/ontology/location> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?headquarters WHERE {
  ?ministry a dbo:GovernmentAgency ;
            rdfs:label ""Ministry of Culture, Sports and Tourism""@en .
  OPTIONAL { ?ministry dbo:headquarters ?headquarters . }
  
  FILTER (lang(?ministry) = 'en')
}
```",1,1,2,1,1,2,2,9,0,0,2,0,0.0,0
666,5,train,Give me the nickname of England national beach soccer team.,SELECT ?result WHERE { <http://dbpedia.org/resource/England_national_beach_soccer_team> <http://dbpedia.org/property/nickname> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?nickname WHERE {
  ?team a dbo:NationalSoccerTeam ;
        rdfs:label ""England national beach soccer team""@en .
  
  OPTIONAL { 
    ?team dbo:alias ?nickname .
  }
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
378,5,train,"Give me the reference, that is a military conflict, to Peninsular War.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://xmlns.com/foaf/0.1/name> ""Peninsular War""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?conflict WHERE {
  ?conflict a dbo:MilitaryConflict .
  ?conflict dbo:partOf dbr:Peninsular_War ;
           rdfs:label ?label .
  FILTER (lang(?label) = 'en')
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
435,7,train,"Give me the territory administered from Reykjavík and work of Article 62, Section IV of Constitution of Iceland.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Reykjavík> . ?result <http://dbpedia.org/property/author> ""Article 62, Section IV of Constitution of Iceland""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?territory WHERE {
  ?city rdfs:label ""Reykjavík""@en.
  ?city dbo:capitalOf dbr:Iceland.
  OPTIONAL { 
    ?city dbo:administrativeUnit ?territory .
  }
}

# Note: The second part regarding the Constitution of Iceland might not be directly available in DBpedia. 
# You may need to refer to external resources or databases that contain legal documents for precise information on Article 62, Section IV.
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
626,2,train,Who is the commander in Battle of Paris (1814)?,SELECT ?result WHERE { <http://dbpedia.org/resource/Battle_of_Paris_(1814)> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT ?commander WHERE {
  ?battle dbp:name ""Battle of Paris (1814)""@en .
  ?battle dbo:commander ?commander .
}
```",1,1,2,1,1,3,2,20,0,0,11,0,0.0,0
528,11,train,Give me the war of the military force of Battle of Pisagua.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Pisagua> . ?v0 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?force WHERE {
  VALUES ?battle { dbr:Battle_of_Pisagua }
  ?force dbo:participatedIn ?battle .
}
```",2,2,3,2,1,3,3,71,0,0,30,0,0.0,0
281,13,train,"Give me the entity in the birth place, that is a country, of Bob Heffron.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/place> ?v1 . <http://dbpedia.org/resource/Bob_Heffron> <http://dbpedia.org/ontology/birthPlace> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?country WHERE {
  ?person a dbo:Person ;
          foaf:name ""Bob Heffron""@en .
  ?person dbo:birthPlace ?birthPlace .
  OPTIONAL { ?birthPlace dbp:country ?country . }
}
```",2,3,3,2,1,3,3,71,0,0,1,0,0.0,0
783,4,train,Give me the persona of Ebony Reigns.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ebony_Reigns> <http://xmlns.com/foaf/0.1/givenName> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?fullName ?birthDate ?deathDate ?nationality ?occupation ?notableWorks ?awards
WHERE {
  VALUES ?ebony { dbr:Ebony_Reigns }
  
  ?ebony rdfs:label ?fullName ;
         dbo:birthDate ?birthDate ;
         dbo:deathDate ?deathDate ;
         dbo:nationality ?nationality ;
         dbo:occupation ?occupation .
         
  OPTIONAL {
    ?ebony dbo:notableWorks ?notableWorks .
  }
  
  OPTIONAL {
    ?ebony dbo:award ?awards .
  }
}
ORDER BY ?fullName
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
492,15,train,Give me the work of the author of French Algeria.,SELECT ?result WHERE { <http://dbpedia.org/resource/French_Algeria> <http://dbpedia.org/property/author> ?v1 . ?result <http://dbpedia.org/property/author> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?work WHERE {
  dbr:Albert_Camus dbo:nationality dbr:France .
  dbr:Albert_Camus dbo:notableworks ?work .
}
```",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
378,3,train,Give me the birth name of Carl Pontus Gahn.,SELECT ?result WHERE { <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/property/birthName> ?result . },"```sparql
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX schema: <http://schema.org/>

SELECT ?birthName WHERE {
  ?person a foaf:Person ;
          foaf:name ""Carl Pontus Gahn"" .
  OPTIONAL { 
    ?person schema:birthName ?birthName .
  }
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
435,2,train,"Give me the work of Article 62, Section IV of Constitution of Iceland.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/author> ""Article 62, Section IV of Constitution of Iceland""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?article ?description WHERE {
  ?constitution a dbo:Constitution .
  ?constitution dbo:country dbr:Iceland .
  ?section dbo:partOf ?constitution ;
           rdfs:label ""Article 62, Section IV""@en .
  OPTIONAL { ?section dbo:description ?description . }
  BIND(""Article 62, Section IV"" AS ?article)
}
```",1,1,2,1,1,2,3,28,0,0,1,0,0.0,0
281,14,train,"Give me the war of the profession, that is a military unit, of Heather Roy.",SELECT ?result WHERE { <http://dbpedia.org/resource/Heather_Roy> <http://dbpedia.org/property/occupation> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v1 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?profession ?militaryUnit WHERE {
  ?heatherRoy a dbo:Person ;
              foaf:name ""Heather Roy""@en .
  OPTIONAL { ?heatherRoy dbo:occupation ?profession . }
  OPTIONAL { ?profession dbp:militaryUnit ?militaryUnit . }
}
```",2,3,3,2,1,3,3,71,0,3,14,0.0,0.0,0
712,4,train,Give me the show of Soviet Union.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/Soviet_Union> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?show ?title WHERE {
  ?show a dbo:TelevisionSeries ;
        dbo:country dbr:Soviet_Union ;
        rdfs:label ?title .
  FILTER (lang(?title) = 'en')
}
ORDER BY ?title
LIMIT 10
```",1,1,2,1,1,3,2,20,0,0,8,0,0.0,0
48,7,train,Give me the band of the writer of Emotion (Carly Rae Jepsen album).,SELECT ?result WHERE { <http://dbpedia.org/resource/Emotion_(Carly_Rae_Jepsen_album)> <http://dbpedia.org/property/writer> ?v1 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT ?band WHERE {
  wd:Q134064 wdt:P50 wd:Q134064; # Carly Rae Jepsen's album ""Emotion""
  wdt:P577 ?releaseDate.
  
  ?song wdt:P175 wd:Q134064; # Song in the album ""Emotion""
        wdt:P86 ?writer. 

  ?writer wdt:P106 wd:Q33999; # Writer is a musician
          wdt:P463 ?band. # Member of band

  FILTER EXISTS { 
    ?song rdfs:label ""Emotion""@en .
  }
}
```",2,2,3,2,1,3,2,20,0,0,95,0,0.0,0
404,5,train,"Who is the parent, that is a royalty, of Prince George William of Hanover?",SELECT ?result WHERE { <http://dbpedia.org/resource/Prince_George_William_of_Hanover> <http://dbpedia.org/ontology/parent> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parent ?title WHERE {
  ?person rdf:type dbo:Person ;
          rdfs:label ""Prince George William of Hanover""@en .
  
  ?person dbo:parent ?parent .

  OPTIONAL { 
    ?parent dbo:title ?title .
    FILTER(CONTAINS(LCASE(?title), ""prince"") || CONTAINS(LCASE(?title), ""duke"") || CONTAINS(LCASE(?title), ""king"") || CONTAINS(LCASE(?title), ""queen""))
  }
  
  FILTER(langMatches(lang(?person), 'en'))
}
```",1,2,2,1,1,3,3,71,0,0,2,0,0.0,0
285,0,train,Give me the parent of Alexander Onassis.,SELECT ?result WHERE { <http://dbpedia.org/resource/Alexander_Onassis> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parentName WHERE {
  dbr:Alejandro_Onassis dbo:parent ?parent .
  ?parent rdfs:label ?parentName .
  FILTER (LANG(?parentName) = 'en')
}
```",1,1,2,1,1,3,2,20,0,0,2,0,0.0,0
281,0,train,"Give me the war of Beauchamp Seymour, 1st Baron Alcester.","SELECT ?result WHERE { <http://dbpedia.org/resource/Beauchamp_Seymour,_1st_Baron_Alcester> <http://dbpedia.org/ontology/battle> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?eventLabel ?personLabel WHERE {
  VALUES (?entity) { 
    dbpedia:War_of_Beauchamp_Seymour 
    dbpedia:Seymour,_1st_Baron_Alcester
  }
  
  ?entity rdfs:label ?label .
  FILTER (lang(?label) = 'en')
  
  OPTIONAL {
    ?event dbo:wikiPageRedirects ?redirect .
    ?redirect rdfs:label ?eventLabel .
    FILTER (lang(?eventLabel) = 'en')
  }

  OPTIONAL {
    ?person dbo:wikiPageDisambiguates ?disambiguation .
    ?disambiguation rdfs:label ?personLabel .
    FILTER (lang(?personLabel) = 'en')
  }
}
```",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
281,6,train,"Give me the birth place, that is a country, of Bob Heffron.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Bob_Heffron> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace WHERE {
  ?person a dbo:Person ;
          foaf:name ""Bob Heffron""@en .
  ?person dbo:birthPlace ?birthPlace .
  FILTER (isLiteral(?birthPlace) = false)
  ?birthPlace a dbo:Country .
}
```",1,2,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
754,3,train,Give me the parent of May Hnin Htapi.,SELECT ?result WHERE { <http://dbpedia.org/resource/May_Hnin_Htapi> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  VALUES ?person { dbr:May_Hnin_Htapi }
  ?person dbo:parent ?parent .
}
```",1,1,2,1,1,3,2,20,1,0,0,1.0,1.0,1.0
429,5,train,Give me the administration of the father of Martha Johnson Patterson.,SELECT ?result WHERE { <http://dbpedia.org/resource/Martha_Johnson_Patterson> <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/property/leader> ?v1 . },"```sparql
SELECT ?father ?administration WHERE {
  ?person dbo:parent ?father .
  ?person foaf:name ""Martha Johnson Patterson""@en .
  OPTIONAL { ?father dbo:positionHeld ?administration . }
}
```",2,2,3,2,1,2,2,9,0,0,1,0,0.0,0
48,6,train,Give me the band of Carl Falk and band of Murda Mook.,SELECT ?result WHERE { <http://dbpedia.org/resource/Murda_Mook> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Carl_Falk> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?person ?bandName WHERE {
  VALUES ?person { 
    <http://dbpedia.org/resource/Carl_Falk> 
    <http://dbpedia.org/resource/Murda_Mook>
  }
  
  OPTIONAL {
    ?person dbp:band ?band .
    ?band rdfs:label ?bandName .
    FILTER (lang(?bandName) = 'en')
  }
}
```",2,2,3,1,2,3,2,20,0,2,1,0.0,0.0,0
182,5,train,Give me the nationality of Tamara Kunanayakam.,SELECT ?result WHERE { <http://dbpedia.org/resource/Tamara_Kunanayakam> <http://dbpedia.org/ontology/nationality> ?result . },"```sparql
SELECT ?nationality WHERE {
  ?person foaf:name ""Tamara Kunanayakam"" .
  ?person dbo:nationality ?nationality .
}
```",1,1,2,1,1,2,3,28,0,0,1,0,0.0,0
44,5,train,Give me the band member of the band of John Pettibone.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/John_Pettibone> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?band ?member WHERE {
  ?person a dbo:Person ;
          foaf:name ""John Pettibone""@en .
  
  ?person dbo:bandMember ?band .

  ?band dbo:bandMember ?member .
}
```",2,2,3,2,1,2,2,9,0,0,2,0,0.0,0
666,10,train,"Give me the nickname of the reference, that is an organisation and a soccer club and a sports club, to England.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/nickname> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""England""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?club ?nickname WHERE {
  ?club a dbo:SoccerClub ;
        dbo:sport dbr:Soccer ;
        dbo:country dbr:England .
  
  OPTIONAL { 
    ?club dbo:memberOfSportsTeam dbr:Sports_Club .
  }
  
  OPTIONAL { 
    ?club rdfs:label ?nickname .
    FILTER (lang(?nickname) = 'en')
  }
}
```",2,5,3,2,1,3,2,20,0,0,3,0,0.0,0
232,6,train,"Give me the claim to fame, that is a film and a military conflict, of Sean Pertwee.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. <http://dbpedia.org/resource/Sean_Pertwee> <http://dbpedia.org/ontology/knownFor> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?film ?conflict WHERE {
  ?person dbo:birthName ""Sean Pertwee""@en .
  ?person dbo:profession dbr:Actor .
  
  OPTIONAL { 
    ?film dbo:starring ?person ;
          dbo:genre dbr:Military_film .
    ?film dbo:title ?title .
    FILTER(CONTAINS(LCASE(?title), ""dad's army""))
  }
  
  OPTIONAL {
    ?conflict dbo:name ?name .
    FILTER(CONTAINS(LCASE(?name), ""world war ii""))
  }

  VALUES ?person { dbr:Sean_Pertwee }
}
```",1,3,2,1,1,3,3,71,0,0,1,0,0.0,0
820,6,train,Give me the child of Jack Schwartzman and professional in .,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Jack_Schwartzman> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child ?profession WHERE {
  ?person rdfs:label ""Jack Schwartzman""@en .
  ?person dbo:spouse ?spouse .
  ?spouse dbo:child ?child .
  
  OPTIONAL { 
    ?child dbo:occupation ?profession .
  }
  
  FILTER (lang(?personLabel) = 'en')
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
54,0,train,Give me the child of Thinkhaya of Pagan.,SELECT ?result WHERE { <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  ?thinkhaya a dbo:Monarch ;
             foaf:name ""Thinkhaya""@en .
  ?thinkhaya dbo:spouse|dbo:child ?person .
  ?person dbo:parent ?thinkhaya .
  ?person a dbo:Person .
  FILTER NOT EXISTS { ?person dbo:spouse ?other . }
  BIND(?person AS ?child)
}
```",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
488,16,train,"Who is the father, that is a politician, of the father, that is an office holder, of Matsudaira Tadamasa?",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/property/father> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Matsudaira_Tadamasa> <http://dbpedia.org/property/father> ?v1 . },"```sparql
SELECT ?grandfather WHERE {
  ?matsudairaTadamasa dbo:father ?father1 .
  ?father1 dbo:father ?grandfather .

  # Ensure the father is an office holder
  ?father1 dbo:occupation ?officeHolderOccupation .
  FILTER(CONTAINS(LCASE(?officeHolderOccupation), ""office holder""))

  # Ensure the grandfather is a politician
  ?grandfather dbo:occupation ?politicianOccupation .
  FILTER(CONTAINS(LCASE(?politicianOccupation), ""politician""))

  # Identify Matsudaira Tadamasa in DBpedia
  ?matsudairaTadamasa rdfs:label ""Matsudaira Tadamasa""@en .
}
```",2,4,3,2,1,3,3,71,0,0,1,0,0.0,0
391,16,train,"Give me the claim to fame, that is a work, of the spouse of Sherry Hormann.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/knownFor> ?result . <http://dbpedia.org/resource/Sherry_Hormann> <http://dbpedia.org/ontology/spouse> ?v1 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. },"```sparql
SELECT ?spouse ?work WHERE {
  ?person foaf:name ""Sherry Hormann""@en .
  ?person dbo:spouse ?spouse .
  OPTIONAL { ?spouse dbo:notableWork ?work . }
}
```",2,3,3,2,1,3,3,71,0,1,4,0.0,0.0,0
666,8,train,Give me the figure known as the nickname of England national beach soccer team.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ?v0 . <http://dbpedia.org/resource/England_national_beach_soccer_team> <http://dbpedia.org/property/nickname> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nickname WHERE {
  ?team a dbo:NationalSoccerTeam ;
        dbo:sport dbr:Beach_soccer ;
        dbo:country dbr:England .
  OPTIONAL { ?team rdfs:label ?nickname . }
}
```",2,2,3,2,1,3,2,20,0,0,5,0,0.0,0
617,7,train,"Give me the child of the child, that is a royalty, of Boleslaus I, Duke of Bohemia.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Boleslaus_I,_Duke_of_Bohemia> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
SELECT ?grandchild WHERE {
  ?boleslaus1 dbo:spouse ?spouse .
  FILTER (str(?boleslaus1) = ""Boleslaus_I,_Duke_of_Bohemia"")
  
  ?boleslaus1 dbo:child ?child .
  
  ?child dbo:child ?grandchild .
  
  OPTIONAL { 
    ?grandchild dbo:title ?title .
    FILTER regex(str(?title), ""king|queen|duke|prince|princess"", ""i"") 
  }
  
  FILTER EXISTS {
    ?grandchild dbo:title ?title .
    FILTER regex(str(?title), ""king|queen|duke|prince|princess"", ""i"")
  }
}
```",2,3,3,2,1,3,2,20,0,0,4,0,0.0,0
328,14,train,"Give me the leader of the office, that is a government agency, of Joseph Stalin.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/leader> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. <http://dbpedia.org/resource/Joseph_Stalin> <http://dbpedia.org/property/office> ?v1 . },"```sparql
SELECT ?office ?leader WHERE {
  ?stalin dbo:birthName ""Ioseb Besarionis dze Jughashvili""@en .
  ?stalin foaf:name ""Joseph Stalin""@en .
  ?stalin dbo:positionHeld ?office .
  ?office dbo:head ?leader .
  FILTER(?leader != ?stalin)
}
```",2,3,3,2,1,3,3,71,0,0,1,0,0.0,0
9,15,train,"Who is the mayor, that is a politician, of the entity, that is an organisation, in Belfast?",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Belfast> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/property/leader> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?mayor ?mayorName WHERE {
  ?organisation dbo:location dbr:Belfast .
  ?organisation dbo:head ?mayor .
  ?mayor a dbo:Mayor ;
         rdfs:label ?mayorName .
  FILTER (LANG(?mayorName) = ""en"")
}
```",2,4,3,2,1,3,3,71,0,0,13,0,0.0,0
915,10,train,"Give me the child, that is a fictional character and a soap character, of the parent, that is a fictional character and a soap character, of Lizzie Spaulding.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoapCharacter>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoapCharacter>. <http://dbpedia.org/resource/Lizzie_Spaulding> <http://dbpedia.org/ontology/parent> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?result <http://dbpedia.org/property/father> ?v0 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  # Lizzie Spaulding's parent in ""The Young and the Restless""
  ?lizzie a dbo:FictionalCharacter ;
          dbo:spouseOrPartner ?parent .
  
  # Jill Foster is identified as Lizzie's mother
  ?parent rdfs:label ""Jill Foster""@en .

  # Find Jill Foster's child who is also a fictional character in the soap opera
  ?jill a dbo:FictionalCharacter ;
        dbo:spouseOrPartner ?child .
  
  FILTER(CONTAINS(LCASE(?child), ""jack abbott""))
}
```",2,6,3,2,1,3,2,20,0,0,1,0,0.0,0
820,2,train,Who is the author of Understanding Comics?,SELECT ?result WHERE { <http://dbpedia.org/resource/Understanding_Comics> <http://dbpedia.org/ontology/author> ?result . },"```sparql
SELECT ?authorLabel WHERE {
  ?comic dcterms:title ""Understanding Comics"" .
  ?comic dbo:author ?author .
  ?author rdfs:label ?authorLabel .
  FILTER (lang(?authorLabel) = 'en')
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
981,2,train,"Give me the time zone in Salak, North Sumatra.","SELECT ?result WHERE { <http://dbpedia.org/resource/Salak,_North_Sumatra> <http://dbpedia.org/ontology/timeZone> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?timeZone
WHERE {
  ?place a dbo:PopulatedPlace ;
        rdfs:label ""Salak""@en .
  OPTIONAL { ?place dbo:country dbr:Indonesia . }
  OPTIONAL { ?place dbo:administrativeRegion dbr:North_Sumatra_Province . }
  ?place dbo:timeZone ?timeZone .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
182,9,train,Give me the war of Jagath Dias and entity in Sri Lanka.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Sri_Lanka> . <http://dbpedia.org/resource/Jagath_Dias> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity WHERE {
  ?person rdfs:label ""Jagath Dias""@en .
  ?event dbo:location dbr:Sri_Lanka ;
         dbo:agent ?person ;
         dbo:subject ?entity .
}
```",2,2,3,1,2,2,3,28,0,0,5,0,0.0,0
184,3,train,"Give me the landmark at elevation, that is a settlement, of 96.0.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/elevation> ""96.0""^^<http://www.w3.org/2001/XMLSchema#double> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?landmark WHERE {
  ?landmark rdf:type ?settlementType .
  ?landmark dbo:elevation ?elevation .
  FILTER (?elevation = ""96.0""^^xsd:decimal) .
  
  # Ensure the entity is a type of settlement
  VALUES ?settlementType { 
    dbo:City 
    dbo:Town 
    dbo:Village 
    dbo:Settlement 
  }
  
  OPTIONAL {
    ?landmark dbo:landmark ?isLandmark .
  }
}
```",1,2,2,1,1,3,3,71,162,2,0,0.9878048780487805,1.0,0.9938650306748467
232,13,train,"Give me the actor of the claim to fame, that is a film and a military conflict, of Sean Pertwee.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. <http://dbpedia.org/resource/Sean_Pertwee> <http://dbpedia.org/ontology/knownFor> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?filmMilitaryConflict ?actor WHERE {
  ?person a dbo:Person ;
          foaf:name ""Sean Pertwee""@en .
  
  ?person dbo:claimToFame ?filmMilitaryConflict .

  FILTER (
    (EXISTS { ?filmMilitaryConflict a dbo:Film } && 
     EXISTS { ?filmMilitaryConflict a dbo:MilitaryConflict })
  )

  ?filmMilitaryConflict dbo:actor ?actor .
}
```",2,4,3,2,1,3,3,71,0,0,3,0,0.0,0
498,3,train,"Who is the member, that is an artist, of Mortician (band)?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Mortician_(band)> <http://dbpedia.org/ontology/bandMember> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?member ?name WHERE {
  ?band rdfs:label ""Mortician (band)""@en .
  ?band dbp:member ?member .
  ?member foaf:name ?name .
  OPTIONAL { 
    ?member dbo:occupation ?occupation .
    FILTER(CONTAINS(LCASE(?occupation), ""artist""))
  }
  FILTER(!isBlank(?member))
}
```",1,2,2,1,1,2,2,9,0,0,1,0,0.0,0
626,5,train,Give me the award of Aleksey Petrovich Yermolov.,SELECT ?result WHERE { <http://dbpedia.org/resource/Aleksey_Petrovich_Yermolov> <http://dbpedia.org/property/awards> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award WHERE {
  VALUES ?yermolov { dbr:Aleksey_Petrovich_Yermolov }
  ?yermolov dbo:award ?award .
}
```",1,1,2,1,1,3,2,20,6,0,0,1.0,1.0,1.0
392,0,train,Give me the entity in Italy.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?entity ?entityLabel WHERE {
  ?entity (dbo:country|dbp:location) dbr:Italy .
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
LIMIT 10
```",1,1,2,1,1,2,3,28,0,0,13092,0,0.0,0
328,0,train,Give me the awardee of Order of Suvorov.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Order_of_Suvorov> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?recipient WHERE {
  ?award a dbo:Award .
  ?award dbo:awardedBy dbr:Order_of_Suvorov .
  ?award dbo:recipient ?recipient .
}
```",1,1,2,1,1,3,3,71,0,0,22,0,0.0,0
487,3,train,Give me the administration of Patricia McCoy.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Patricia_McCoy> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?position ?startDate ?endDate WHERE {
  VALUES ?person { dbr:Patricia_McCoy }
  ?person dbo:office ?position .
  OPTIONAL { ?position dbo:startDate ?startDate . }
  OPTIONAL { ?position dbo:endDate ?endDate . }
}
```",1,1,2,1,1,3,2,20,0,0,3,0,0.0,0
9,7,train,"Give me the entity, that is an organisation and an educational institution, in Northern Ireland.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Northern_Ireland> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?entity WHERE {
  ?entity a dbo:EducationalInstitution .
  ?entity a dbo:Organization .
  OPTIONAL { ?entity dbp:country ""Northern Ireland""@en . }
}
```",1,3,2,1,1,3,3,71,0,0,134,0,0.0,0
92,16,train,"Give me the person born, that is an artist, as the actor of Return to Nuke 'Em High Volume 1.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Return_to_Nuke_'Em_High_Volume_1> <http://dbpedia.org/property/starring> ?v1 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  ?film dbo:title ""Return to Nuke 'Em High Volume 1""@en .
  ?film dbo:starring ?actor .
  ?actor dbo:occupation ?occupation .
  FILTER(CONTAINS(LCASE(?occupation), ""artist""))
}
```",2,3,3,2,1,3,3,71,0,0,205,0,0.0,0
30,0,train,Give me the native of Paris.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Paris> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name WHERE {
  ?person dbo:birthPlace dbr:Paris .
  ?person rdfs:label ?name .
  FILTER (LANG(?name) = 'en')
}
ORDER BY ?name
LIMIT 100
```",1,1,2,1,1,2,2,9,100,100,4385,0.5,0.022296544035674472,0.042689434364994665
754,4,train,Give me the reference to Ram Khamhaeng the Great.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Ram Khamhaeng the Great""@en . }","```sparql
SELECT ?subject WHERE {
  ?subject rdfs:label ""Ram Khamhaeng the Great""@en .
}
```",1,1,2,1,1,3,2,20,0,1,1,0.0,0.0,0
981,9,train,"Give me the region of the time zone in Salak, North Sumatra.","SELECT ?result WHERE { <http://dbpedia.org/resource/Salak,_North_Sumatra> <http://dbpedia.org/ontology/timeZone> ?v0 . ?result <http://dbpedia.org/property/timeZone> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?region WHERE {
  ?location dbo:country dbr:Indonesia .
  ?location rdfs:label ""Salak, North Sumatra""@en .
  OPTIONAL { ?location dbo:timeZone ?tz . }
  ?tz dbo:region ?region .
}
```",2,2,3,2,1,3,2,20,0,0,1,0,0.0,0
820,3,train,Give me the award of Scott McCloud.,SELECT ?result WHERE { <http://dbpedia.org/resource/Scott_McCloud> <http://dbpedia.org/property/awards> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award WHERE {
  VALUES ?person { dbr:Scott_McCloud }
  ?person dbo:award ?award .
}
```",1,1,2,1,1,3,2,20,0,4,4,0.0,0.0,0
488,6,train,"Who is the father, that is a politician, of Yūki Hideyasu?",SELECT ?result WHERE { <http://dbpedia.org/resource/Yūki_Hideyasu> <http://dbpedia.org/property/father> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?father ?fatherName WHERE {
  ?yuki a dbo:Person ;
        foaf:name ""Yūki Hideyasu""@en .
  
  ?yuki dbo:parent ?father .

  OPTIONAL { 
    ?father dbo:occupation ?occupation .
    FILTER(CONTAINS(LCASE(?occupation), ""politician""))
  }

  ?father foaf:name ?fatherName .
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
360,11,train,Give me the reference to the author of Blinded by the Light.,SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v1 . <http://dbpedia.org/resource/Blinded_by_the_Light> <http://dbpedia.org/property/author> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?author WHERE {
  ?song dbo:lyricsBy ?author .
  ?song rdfs:label ""Blinded by the Light""@en .
  FILTER NOT EXISTS { ?song a dbo:Album } # Ensure it's not an album
}
```",2,2,3,2,1,2,3,28,0,0,2,0,0.0,0
994,14,train,"Give me the band member of the person born, that is a musical artist, as Donald Maynard Dokken.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ""Donald Maynard Dokken""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . }","```sparql
SELECT ?bandMember WHERE {
  ?person foaf:name ""Donald Maynard Dokken""@en .
  ?person dbo:occupation dbr/Musician .
  ?album dbo:artist ?person ;
         dbo:genre dbr/Hard_rock .
  ?band dbo:member ?person ;
        rdfs:label ?bandLabel .
  FILTER(CONTAINS(LCASE(?bandLabel), ""dokken""))
  ?bandMember dbo:member ?band .
}
```",2,3,3,2,1,3,3,71,0,0,2,0,0.0,0
421,3,train,Who is the awardee of [[#Awards and nominations?,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ""[[#Awards and nominations""@en . }","```sparql
SELECT ?entity ?award WHERE {
  ?entity dbo:award ?award .
}
LIMIT 10
```",1,1,2,1,1,2,3,28,0,16,113,0.0,0.0,0
378,1,train,Give me the war of Joaquín Blake.,SELECT ?result WHERE { <http://dbpedia.org/resource/Joaquín_Blake> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war WHERE {
  ?person dbo:nationality dbr:Spain ;
          rdfs:label ""Joaquín Blake""@en .
  OPTIONAL { ?person dbo:spouse ?spouse . }
  OPTIONAL { ?person dbo:birthPlace ?birthPlace . }
  OPTIONAL { ?person dbo:deathPlace ?deathPlace . }
  OPTIONAL { ?person dbo:dateOfBirth ?dateOfBirth . }
  OPTIONAL { ?person dbo:dateOfDeath ?dateOfDeath . }
  ?person dbo:occupation dbr:Military_person .
  ?person dbo:participatedInWar ?war .
  FILTER(CONTAINS(LCASE(?war), ""peninsular war""))
}
```",1,1,2,1,1,3,3,71,0,0,11,0,0.0,0
617,6,train,Who is the child of Antiochus III the Great?,SELECT ?result WHERE { <http://dbpedia.org/resource/Antiochus_III_the_Great> <http://dbpedia.org/ontology/child> ?result . },"```sparql
SELECT ?child WHERE {
  ?child dbo:parent dbr:Antiochus_III_the_Great .
}
```",1,1,2,1,1,3,3,71,4,1,2,0.8,0.6666666666666666,0.7272727272727272
696,6,train,Give me the landmark at elevation of 50 and birth place of Tim Brennan.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/elevation> ""50""^^<http://www.w3.org/2001/XMLSchema#integer> . <http://dbpedia.org/resource/Tim_Brennan> <http://dbpedia.org/ontology/birthPlace> ?result . }","```sparql
SELECT ?landmark ?elevation WHERE {
  ?landmark dbo:elevationAboveSeaLevel ?elevation .
  FILTER (?elevation = ""50""^^xsd:integer)
}
UNION
SELECT ?birthPlace WHERE {
  ?person foaf:name ""Tim Brennan""@en .
  ?person dbp:birthPlace ?birthPlace .
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
92,17,train,Give me the person born as the birth name of Joseph Michael.,SELECT ?result WHERE { <http://dbpedia.org/resource/Joseph_Michael> <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  ?person foaf:givenName ""Joseph"" .
  ?person foaf:familyName ""Michael"" .
}
```",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
16,5,train,Who is the actor of Unnatural (TV series)?,SELECT ?result WHERE { <http://dbpedia.org/resource/Unnatural_(TV_series)> <http://dbpedia.org/property/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  VALUES ?show { dbr:Unnatural_(TV_series) }
  ?show dbo:starring|dbo:castMember ?actor .
}
```",1,1,2,1,1,3,3,71,0,0,5,0,0.0,0
312,6,train,Give me the entity in the birthplace of Giorgio Grigolli.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v1 . <http://dbpedia.org/resource/Giorgio_Grigolli> <http://dbpedia.org/ontology/birthPlace> ?v1 . },"```sparql
SELECT ?birthPlaceLabel WHERE {
  ?person foaf:name ""Giorgio Grigolli"" .
  ?person dbo:birthPlace ?birthPlace .
  ?birthPlace rdfs:label ?birthPlaceLabel .
  FILTER (lang(?birthPlaceLabel) = 'en')
}
```",2,2,3,2,1,2,2,9,0,0,13092,0,0.0,0
617,1,train,Give me the parent of Mieszko II Lambert.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Mieszko_II_Lambert> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?parent WHERE {
  ?person a dbo:Person ;
          foaf:name ""Mieszko II Lambert""@en .
  ?person dbo:parent ?parent .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
427,11,train,Give me the reference to the name of Italian People's Party (1994).,SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v0 . <http://dbpedia.org/resource/Italian_People's_Party_(1994)> <http://xmlns.com/foaf/0.1/name> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?party ?label WHERE {
  ?party a dbo:PoliticalParty ;
         rdfs:label ?label .
  FILTER(CONTAINS(LCASE(?label), ""italian people's party (1994)""))
}
```",2,2,3,2,1,3,3,71,1,1,1,0.5,0.5,0.5
92,7,train,Give me the birth name of Joseph Michael.,SELECT ?result WHERE { <http://dbpedia.org/resource/Joseph_Michael> <http://dbpedia.org/property/birthName> ?result . },"```sparql
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>

SELECT ?givenName ?familyName WHERE {
  ?person a dbpedia-owl:Person ;
          foaf:name ""Joe Biden""@en .
  OPTIONAL { ?person foaf:givenName ?givenName . }
  OPTIONAL { ?person foaf:familyName ?familyName . }
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
659,2,train,Give me the military force of Napoleonic Wars.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Napoleonic_Wars> . },"```sparql
SELECT ?militaryForce WHERE {
  ?event dbo:wikiPageRedirects db:Napoleonic_Wars .
  ?event dbo:militaryConflictOf ?army.
  ?army rdfs:label ?militaryForce .
  FILTER (lang(?militaryForce) = ""en"")
}
```",1,1,2,1,1,3,3,71,0,0,1051,0,0.0,0
392,10,train,"Give me the region of the time zone, that is a sports event, of Aguilar de Segarra.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsEvent>. ?result <http://dbpedia.org/ontology/timeZone> ?v0 . <http://dbpedia.org/resource/Aguilar_de_Segarra> <http://dbpedia.org/ontology/timeZone> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?region ?sportsEvent WHERE {
  # Find the time zone of Aguilar de Segarra
  dbr:Aguilar_de_Segarra dbo:timeZone ?timeZone .
  
  # Find the region associated with that time zone
  ?timeZone dbo:region ?region .

  # Find sports events related to that region
  OPTIONAL { ?region dbo:sportsEvent ?sportsEvent . }
}
```",2,3,3,2,1,2,3,28,0,0,49990,0,0.0,0
92,12,train,Give me the associated musical artist of Jim Sheppard and band of Joseph Michael.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Joseph_Michael> . <http://dbpedia.org/resource/Jim_Sheppard> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT ?artist WHERE {
  ?person foaf:name ""Jim Sheppard""@en .
  ?person dbo:associatedBand ?artist .
}

UNION

SELECT ?band WHERE {
  ?person foaf:name ""Joseph Michael""@en .
  ?person dbo:associatedBand ?band .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
378,11,train,Give me the war of the person born as Carl Pontus Gahn.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ""Carl Pontus Gahn""@en . ?v0 <http://dbpedia.org/ontology/battle> ?result . }","```sparql
SELECT ?film WHERE {
  ?person foaf:name ""Carl Pontus Gahn""@sv .
  ?film dbo:starring ?person .
}
```

This query attempts to find films in which Carl Pontus Gahn starred, as a starting point for further exploration. However, it does not directly answer the question about a war.",2,2,3,2,1,3,3,71,0,0,12,0,0.0,0
54,9,train,Give me the child of Thinkhaya of Pagan and parent of Thado Minsaw of Prome.,SELECT ?result WHERE { <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?person WHERE {
  ?thinkhaya dbo:child ?person .
  FILTER(STR(?thinkhaya) = ""Thinkhaya_of_Pagan"")
  
  ?person dbo:parent ?thadoMinsaw .
  FILTER(STR(?thadoMinsaw) = ""Thado_Minsaw_of_Prome"")
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
617,11,train,"Give me the child of the child, that is a royalty, of Seleucus II Callinicus.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seleucus_II_Callinicus> . ?result <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
SELECT DISTINCT ?grandchild WHERE {
  # Find children of Seleucus II Callinicus
  ?child dbo:parent dbr:Seleucus_II_Callinicus .
  
  # For each child, find their children (grandchildren of Seleucus II Callinicus)
  ?grandchild dbo:parent ?child .

  # Filter grandchildren who are royalty
  OPTIONAL { ?grandchild rdf:type dbp:Monarch . }
  FILTER EXISTS { ?grandchild rdf:type dbp:Monarch . }
}
```",2,3,3,2,1,3,3,71,0,0,5,0,0.0,0
747,0,train,Give me the person born on 1985-04-29.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthDate> ""1985-04-29""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  ?person dbo:birthDate ?date .
  FILTER (YEAR(?date) = 1985 && MONTH(?date) = 4 && DAY(?date) = 29)
}
```",1,1,2,1,1,3,3,71,30,0,0,1.0,1.0,1.0
318,5,train,Give me the person born in the founding year of Eel Pie Publishing.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthYear> ?v1 . <http://dbpedia.org/resource/Eel_Pie_Publishing> <http://dbpedia.org/ontology/foundingYear> ?v1 . },"```sparql
# Step 1: Find the founding year of Eel Pie Publishing
SELECT ?foundingYear WHERE {
  ?eepi dbpedia-owl:founded ?foundingEvent.
  ?foundingEvent dbo:date ?foundingYear.
  FILTER (str(?eepi) = ""Eel_Pie_Publishing"")
}

# Step 2: Find a person born in the founding year of Eel Pie Publishing
SELECT DISTINCT ?person WHERE {
  ?person dbo:birthDate ?birthDate.
  BIND(YEAR(?birthDate) AS ?birthYear)
  
  # Replace 'YYYY' with the actual founding year obtained from step 1
  FILTER (?birthYear = YYYY)

  ?person a dbo:Person.
}
```

Note: After executing the first query to find the founding year, replace `YYYY` in the second query with that specific year.",2,2,3,2,1,2,2,9,0,0,2810,0,0.0,0
232,11,train,Give me the child of the person born as John Devon Roland Pertwee.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?result . ?v0 <http://dbpedia.org/property/birthName> ""John Devon Roland Pertwee""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?childName WHERE {
  ?person dbr:John_Pertwee .
  ?person dbo:child ?child .
  ?child rdfs:label ?childName .
  FILTER(LANG(?childName) = 'en')
}
```",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
547,1,train,Give me the resting place of Simon Cadell.,SELECT ?result WHERE { <http://dbpedia.org/resource/Simon_Cadell> <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?burialPlace WHERE {
  ?person a dbo:Actor ;
          foaf:name ""Simon Cadell""@en .
  OPTIONAL { ?person dbo:deathPlace ?burialPlace . }
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
378,7,train,"Give me the war, that is a military conflict and a societal event and an event, of Thomas Trigge.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Thomas_Trigge> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war WHERE {
  ?trigge dbo:wikiPageDisambiguates dbr:Thomas_Trigge .
  ?trigge dbo:participatedIn ?event .
  ?event a dbo:MilitaryConflict ;
         a dbo:SocietalEvent ;
         a dbo:Event .
  
  FILTER(CONTAINS(LCASE(?event), ""english civil war""))
}
```",1,4,2,1,1,3,3,71,0,0,7,0,0.0,0
754,6,train,Give me the parent of Loe Thai and parent of May Hnin Thwe-Da.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/May_Hnin_Thwe-Da> . <http://dbpedia.org/resource/Loe_Thai> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
SELECT ?individual ?parent WHERE {
  VALUES (?individual ?label) { 
    (:Loe_Thai ""Loe Thai""@en)
    (:May_Hnin_Thwe-Da ""May Hnin Thwe-Da""@en)
  }
  
  ?individual rdfs:label ?label .
  ?individual rdf:type ?type .
  OPTIONAL {
    ?type rdfs:subClassOf+ ?parent .
  }
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
767,14,train,Give me the reference to the alter ego of Black Hood.,SELECT ?result WHERE { <http://dbpedia.org/resource/Black_Hood> <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . },"```sparql
SELECT ?alterEgo WHERE {
  ?character dbo:wikiPageRedirects db:Q1234567 . # Replace Q1234567 with the actual DBpedia ID for Black Hood
  ?character dbo:wikiPageDisambiguates ?alterEgo .
}
```

Note: The placeholder `db:Q1234567` should be replaced with the correct DBpedia resource identifier for ""Black Hood."" You can find this by searching DBpedia or using a SPARQL endpoint to query for the character's ID.",2,2,3,2,1,3,3,71,0,0,98447,0,0.0,0
626,3,train,"Give me the force, that is a military conflict, of Alexander I of Russia.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Alexander_I_of_Russia> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?conflict WHERE {
  ?person dbo:spouse ?spouse .
  ?spouse dbo:spouse ?person .
  
  FILTER(CONTAINS(LCASE(?person), ""alexander i of russia""))
  
  ?person dbo:memberOf ?organization .
  ?organization dbo:member ?militaryConflict .

  ?militaryConflict a dbo:MilitaryConflict .
}
```",1,2,2,1,1,3,2,20,0,0,25,0,0.0,0
996,9,train,Who is the awardee of the elevation of Lac d'Avoriaz?,SELECT ?result WHERE { <http://dbpedia.org/resource/Lac_d'Avoriaz> <http://dbpedia.org/ontology/elevation> ?v0 . ?result <http://dbpedia.org/property/awards> ?v0 . },"```sparql
SELECT ?awardee WHERE {
  ?event dbo:awardRecipient ?recipient .
  ?recipient foaf:name ?awardee .
  ?event rdfs:label ?label .
  FILTER(CONTAINS(LCASE(?label), ""lac d'avoriaz"") && CONTAINS(LCASE(?label), ""elevation""))
}
```",2,2,3,2,1,3,2,20,0,0,1,0,0.0,0
827,5,train,"Who is the child, that is a royalty, of Charles Augustus, Hereditary Grand Duke of Saxe-Weimar-Eisenach (1844–1894)?","SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Charles_Augustus,_Hereditary_Grand_Duke_of_Saxe-Weimar-Eisenach_(1844–1894)> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child ?childLabel WHERE {
  ?person dbr:Charles_Augustus,_Hereditary_Grand_Duke_of_Saxe-Weimar-Eisenach ;
          dbo:birthYear ""1844""^^xsd:gYear ;
          dbo:deathYear ""1894""^^xsd:gYear .
  
  ?person dbo:child ?child .

  OPTIONAL { ?child rdfs:label ?childLabel . FILTER (lang(?childLabel) = 'en') }

  # Filter for children who are royalty
  {
    ?child dbo:title ?title .
    FILTER regex(str(?title), ""King|Queen|Prince|Princess|Duke|Duchess"", ""i"")
  } UNION {
    ?child dbo:spouse ?spouse .
    ?spouse dbo:title ?title .
    FILTER regex(str(?title), ""King|Queen|Prince|Princess|Duke|Duchess"", ""i"")
  }
}
```",1,2,2,1,1,3,2,20,0,0,2,0,0.0,0
528,3,train,"Give me the entity, that is a societal event, in Chile.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Chile> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?event WHERE {
  ?event rdf:type dbo:Event .
  ?event dbo:location dbr:Chile .
  ?event dbo:category ?category .
  FILTER(CONTAINS(LCASE(STR(?category)), ""societal""))
}
```",1,2,2,1,1,3,3,71,0,0,34,0,0.0,0
392,5,train,"Give me the residence, that is a settlement and Italian, of Sebastiano Bianchetti.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Sebastiano_Bianchetti> <http://dbpedia.org/property/residence> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?residence WHERE {
  ?person dbo:birthPlace ?residence .
  FILTER (str(?person) = ""Sebastiano_Bianchetti"")
  ?residence a dbo:Settlement ;
             dbo:country dbr:Italy .
}
```",1,3,2,1,1,2,3,28,0,0,1,0,0.0,0
801,10,train,Give me the associated musical artist of Chris Taylor (music producer) and professional in .,"SELECT ?result WHERE { <http://dbpedia.org/resource/Chris_Taylor_(music_producer)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artist WHERE {
  ?person rdfs:label ""Chris Taylor (musician)""@en .
  ?person dbo:associatedBand dbr:Grizzly_Bear ;
          dbo:occupation dbr:Music_Production .
  ?person dbo:associatedMusicalArtist ?artist .
}
```",2,2,3,1,2,3,3,71,0,0,4,0,0.0,0
303,10,train,"Give me the entity in the country, that is a country, of El Valle de Antón.",SELECT ?result WHERE { <http://dbpedia.org/resource/El_Valle_de_Antón> <http://dbpedia.org/ontology/country> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/country> ?v1 . },"```sparql
SELECT ?entity WHERE {
  wd:Q123456 rdfs:label ""El Valle de Antón""@en .
  wd:Q123456 wdt:P17 ?country .
  
  ?entity wdt:P17 ?country ;
          wdt:P31/wdt:P279* wd:Q6256 . # Q6256 is the DBpedia class for 'Country'
}
```

Note: Replace `wd:Q123456` with the actual DBpedia identifier for El Valle de Antón if known. If not, you may need to first query for this identifier based on its label.",2,3,3,2,1,2,3,28,0,0,991,0,0.0,0
54,2,train,Give me the predecessor of Ameitta Thiri Maha Dhamma Dewi of Ava.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Ameitta_Thiri_Maha_Dhamma_Dewi_of_Ava> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?predecessor WHERE {
  ?queen a dbo:Queen ;
         dbo:spouse ?king .
  ?queen rdfs:label ""Ameitta Thiri Maha Dhamma Dewi""@en .
  OPTIONAL { ?queen dbo:succession ?predecessor . }
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
747,11,train,Give me the person born on the birth date of Pavlo Khudzik.,SELECT ?result WHERE { <http://dbpedia.org/resource/Pavlo_Khudzik> <http://dbpedia.org/ontology/birthDate> ?v0 . ?result <http://dbpedia.org/ontology/birthDate> ?v0 . },"```sparql
# Query to retrieve Pavlo Khudzik's birth date
SELECT ?birthDate WHERE {
  dbpedia:Павло_Худзик dbo:birthDate ?birthDate .
}

# Assuming we have retrieved the birth date, use it in this query to find other people with the same birth date
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbpedia: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person WHERE {
  ?person a dbo:Person ;
          dbo:birthDate ?birthDate .
  FILTER(?birthDate = ""YYYY-MM-DD""^^xsd:date) # Replace YYYY-MM-DD with the actual birth date retrieved from the first query
  FILTER(?person != dbpedia:Павло_Худзик)
}
```",2,2,3,2,1,3,3,71,0,0,30,0,0.0,0
404,16,train,"Who is the child, that is a royalty, of the parent, that is a royalty, of Prince George William of Hanover?",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Prince_George_William_of_Hanover> <http://dbpedia.org/ontology/parent> ?v1 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/child> ?result . },"```sparql
SELECT ?child WHERE {
  # Find Prince George William of Hanover's parent who is royalty
  ?parent dbo:child dbr:Prince_George_William_of_Hanover .
  ?parent dbo:title ?title .
  FILTER(CONTAINS(LCASE(?title), ""royal"") || CONTAINS(LCASE(?title), ""prince"") || CONTAINS(LCASE(?title), ""duke""))

  # Find the child of this parent who is royalty
  ?parent dbo:child ?child .
  ?child dbo:title ?childTitle .
  FILTER(CONTAINS(LCASE(?childTitle), ""royal"") || CONTAINS(LCASE(?childTitle), ""prince"") || CONTAINS(LCASE(?childTitle), ""duke""))
}
```",2,4,3,2,1,3,3,71,1,0,2,1.0,0.3333333333333333,0.5
421,1,train,Give me the native of Socialist Federal Republic of Yugoslavia.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Socialist_Federal_Republic_of_Yugoslavia> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name WHERE {
  ?person a dbo:Person ;
          dbo:nativePlace ?place .
  VALUES ?place { 
    dbr:Bosnia_and_Herzegovina
    dbr:Croatia
    dbr:Macedonia
    dbr:Montenegro
    dbr:Serbia
    dbr:Slovenia
    dbr:Kosovo
  }
  OPTIONAL {
    ?person rdfs:label ?name .
    FILTER (lang(?name) = 'en')
  }
}
ORDER BY ?name
LIMIT 100
```",1,1,2,1,1,2,3,28,0,0,5399,0,0.0,0
498,5,train,"Give me the band of the band, that is an organisation and a band, of Solace of Requiem.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Solace_of_Requiem> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?band WHERE {
  ?band rdfs:label ""Solace of Requiem""@en .
  FILTER NOT EXISTS { ?band a dbo:MusicalArtist . }
  ?band a dbo:Organization ;
        a dbo:Band .
}
```",2,4,3,2,1,2,2,9,0,0,11,0,0.0,0
427,17,train,"Who is the person born, that is an office holder and a politician, as the birth name of Romano Prodi?",SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/property/birthName> ?v1 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?person ?givenName ?familyName WHERE {
  ?person a dbo:Person .
  ?person foaf:givenName ?givenName .
  ?person foaf:familyName ?familyName .
  FILTER (?givenName = ""Romano"" && ?familyName = ""Prodi"") .
  
  OPTIONAL { 
    ?person dbo:occupation ?occupation .
    VALUES ?occupation { <http://dbpedia.org/ontology/OfficeHolder> <http://dbpedia.org/ontology/Politician> }
  }

  FILTER EXISTS {
    ?person dbo:occupation ?occupation .
    VALUES ?occupation { <http://dbpedia.org/ontology/OfficeHolder> <http://dbpedia.org/ontology/Politician> }
  }
}
```",2,4,3,2,1,3,3,71,0,0,1,0,0.0,0
360,4,train,"Give me the death place, that is a settlement, of Winnie Madikizela-Mandela.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Winnie_Madikizela-Mandela> <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?placeName ?placeURL
WHERE {
  dbr:Winnie_Madikizela-Mandela dbo:diedPlace ?place .
  ?place a dbo:Settlement ;
         rdfs:label ?placeName .
  FILTER (lang(?placeName) = 'en')
  OPTIONAL { ?place foaf:page ?placeURL }
}
```",1,2,2,1,1,2,3,28,0,0,2,0,0.0,0
547,11,train,Give me the resting place of the child of James Burton (property developer).,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/James_Burton_(property_developer)> <http://dbpedia.org/ontology/child> ?v0 . },"```sparql
SELECT ?burialPlace WHERE {
  ?person dbo:parent dbr:James_Burton_(property_developer) .
  ?person rdfs:label ""Isambard Kingdom Brunel""@en .
  ?person dbo:placeOfBurial ?burialPlace .
}
```",2,2,3,2,1,3,3,71,0,0,2,0,0.0,0
617,8,train,"Give me the parent of the father, that is a royalty, of Richeza of Poland, Queen of Hungary.","SELECT ?result WHERE { <http://dbpedia.org/resource/Richeza_of_Poland,_Queen_of_Hungary> <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
SELECT ?grandfather WHERE {
  # Step 1: Identify Richeza of Poland, Queen of Hungary
  dbpedia:Richeza_of_Poland,_Queen_of_Hungary dbo:father ?father .

  # Step 2: Determine her father's parent (her grandfather)
  ?father dbo:parent ?grandfather .

  # Step 3: Check if the grandfather is royalty
  ?grandfather a dbo:Monarch .
}
```",2,3,3,2,1,3,2,20,0,0,1,0,0.0,0
391,10,train,"Give me the actor of All About the Andersons and native of Compton, California.","SELECT ?result WHERE { <http://dbpedia.org/resource/All_About_the_Andersons> <http://dbpedia.org/property/starring> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Compton,_California> . }","```sparql
SELECT ?actor WHERE {
  ?film dbo:title ""All About the Andersons""@en .
  ?film dbo:starring ?actor .
  ?actor dbo:birthPlace dbr:Compton,_California .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
994,9,train,Give me the associated musical artist of Red Tide (band) and associated musical artist of S.A. Slayer.,SELECT ?result WHERE { <http://dbpedia.org/resource/S.A._Slayer> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Red_Tide_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
# Query for Red Tide (band)
SELECT ?associatedArtist WHERE {
  ?redTide dbr:Red_Tide_(band) .
  ?redTide dbo:associatedMusicalArtist ?associatedArtist .
}

UNION

# Query for S.A. Slayer
SELECT ?associatedArtist WHERE {
  ?saSlayer dbr:S._A._Slayer .
  ?saSlayer dbo:associatedMusicalArtist ?associatedArtist .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
547,10,train,Give me the resting place of James Burton (Egyptologist) and resting place of Alan Cunningham.,SELECT ?result WHERE { <http://dbpedia.org/resource/James_Burton_(Egyptologist)> <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Alan_Cunningham> <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name ?restingPlace WHERE {
  VALUES (?person ?name) {
    (dbr:James_Burton_(Egyptologist) ""James Burton (Egyptologist)"")
    (dbr:Alan_Cunningham_(explorer) ""Alan Cunningham"")
  }
  
  OPTIONAL { ?person dbo:name ?name . }
  OPTIONAL { ?person dbo:deathPlace ?restingPlace . }
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
251,4,train,"Give me the ruling party, that is a political party and an organisation, in Sicily.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Sicily> <http://dbpedia.org/property/leaderParty> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?party WHERE {
  ?s dbr:Sicily dbo:government ?g.
  ?g dbo:headOfGovernment ?leader.
  ?leader dbo:memberParty ?party.
  ?party a dbo:PoliticalParty .
}
```",1,3,2,1,1,2,3,28,0,0,1,0,0.0,0
915,0,train,"Give me the resident of Springfield, Illinois.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Springfield,_Illinois> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?resident WHERE {
  ?resident dbo:residence dbr:Springfield_(Illinois) .
}
```",1,1,2,1,1,3,2,20,0,0,15,0,0.0,0
294,9,train,"Give me the resting place of Edwin A. Keeble and entity in Nashville, Tennessee.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Nashville,_Tennessee> . <http://dbpedia.org/resource/Edwin_A._Keeble> <http://dbpedia.org/ontology/restingPlace> ?result . }","```sparql
# Query for Edwin A. Keeble's resting place
SELECT ?restingPlace WHERE {
  ?person dbo:name ""Edwin A. Keeble""@en .
  OPTIONAL { ?person dbo:deathPlace ?restingPlace . }
  OPTIONAL { ?person dbo:burialPlace ?restingPlace . }
}

# Query for an entity in Nashville, Tennessee
SELECT DISTINCT ?entity WHERE {
  ?entity dbo:location dbr:Nashville,_Tennessee .
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
9,5,train,"Give me the reference, that is an award, to Royal Medals.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?result <http://xmlns.com/foaf/0.1/name> ""Royal Medals""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?description WHERE {
  dbr:Royal_Medal dbo:description ?description .
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
754,1,train,Give me the parent of May Hnin Thwe-Da.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/May_Hnin_Thwe-Da> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?parent WHERE {
  ?person dbo:name ""May Hnin Thwe-Da""@en .
  OPTIONAL { ?person dbo:parent ?parent . }
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
77,7,train,Give me the war of the awardee of Golden Weapon for Bravery.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Golden_Weapon_for_Bravery> . },"```sparql
SELECT ?war WHERE {
  ?recipient dbpedia-owl:award <http://dbpedia.org/resource/Golden_Weapon_for_Bravery> .
  ?recipient dbo:participatedIn ?event .
  ?event rdf:type dbo:MilitaryConflict ;
         rdfs:label ?war .
}
```",2,2,3,2,1,3,2,20,0,0,22,0,0.0,0
142,3,train,Give me the actor of Papa wa Newscaster.,SELECT ?result WHERE { <http://dbpedia.org/resource/Papa_wa_Newscaster> <http://dbpedia.org/ontology/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  ?film rdf:type dbo:Film .
  ?film rdfs:label ""Papa wa Newscaster""@en .
  FILTER (LANG(?film) = 'en') .
  ?film dbo:starring ?actor .
}
```",1,1,2,1,1,2,2,9,0,0,4,0,0.0,0
115,3,train,Who is the awardee of National Order of Scientific Merit?,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/National_Order_of_Scientific_Merit> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?personLabel WHERE {
  ?person dbo:award dbr:National_Order_of_Scientific_Merit .
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
```",1,1,2,1,1,2,2,9,0,0,9,0,0.0,0
312,4,train,Give me the entity in Italy and entity in Province of Bergamo.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/province> <http://dbpedia.org/resource/Province_of_Bergamo> . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?italyEntity ?bergamoEntity WHERE {
  ?italyEntity dbo:country dbr:Italy .
  
  OPTIONAL {
    ?bergamoEntity dbo:country dbr:Italy ;
                   dbp:province dbr:Province_of_Bergamo .
  }
}
```",2,2,3,1,2,2,2,9,228,12864,0,0.017415215398716773,1.0,0.03423423423423423
754,2,train,Give me the parent of Min Linka.,SELECT ?result WHERE { <http://dbpedia.org/resource/Min_Linka> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  VALUES ?minLinka { dbr:Min_Linka }
  OPTIONAL { ?minLinka dbo:partOf ?parent . }
  FILTER(?parent != ?minLinka)
}
```",1,1,2,1,1,3,2,20,0,0,2,0,0.0,0
365,5,train,"Give me the band of the professional, that is an artist and a musical artist, in Vocalist, musician, songwriter.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/bandMember> ?v1 . ?v1 <http://dbpedia.org/property/occupation> ""Vocalist, musician, songwriter""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
SELECT ?band WHERE {
  ?person foaf:name ""David Bowie""@en .
  ?person dbo:occupation dbc:Musicians_from_England ;
          dbo:profession dbc:Singers ;
          dbo:genre dbc:Artists_by_genre .
  OPTIONAL { ?person dbo:memberOfBand ?band . }
}
```",2,4,3,2,1,2,2,9,0,0,2,0,0.0,0
44,4,train,Give me the band member of Undertow (band) and band member of Sledgeback.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Undertow_(band)> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Sledgeback> . },"```sparql
SELECT ?member WHERE {
  {
    # Query for band members of Undertow
    ?band dbr:Undertow_(band) .
    ?band dbo:bandMember ?member .
  }
  UNION
  {
    # Query for band members of Sledgeback
    ?band dbr:Sledgeback .
    ?band dbo:bandMember ?member .
  }
}
```",2,2,3,1,2,2,2,9,0,0,1,0,0.0,0
528,14,train,Give me the force of the person born as Narciso Campero Leyes.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ""Narciso Campero Leyes""@en . ?result <http://dbpedia.org/ontology/commander> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?rank WHERE {
  ?person a dbo:Person ;
          foaf:name ""Narciso Campero Leyes"" .
  OPTIONAL { ?person dbo:militaryRank ?rank . }
}
```",2,2,3,2,1,3,3,71,0,0,4,0,0.0,0
994,8,train,"Who is the person born, that is a musical artist, as Donald Maynard Dokken?","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/birthName> ""Donald Maynard Dokken""@en . }","```sparql
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?person WHERE {
  ?person foaf:givenName ""Donald"" .
  ?person foaf:familyName ""Dokken"" .
  OPTIONAL { ?person dbo:musicalArtist ?artist . }
  FILTER EXISTS { ?person dbo:musicalArtist ?artist }
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
435,10,train,Give me the region of the time zone in Bombali Shebora Chiefdom.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/timeZone> ?v0 . <http://dbpedia.org/resource/Bombali_Shebora_Chiefdom> <http://dbpedia.org/ontology/timeZone> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?region WHERE {
  # Find Bombali Shebora Chiefdom's location within Sierra Leone
  dbr:Bombali_Shebora_Chowa_County_Council dbo:locatedIn dbr:Northern_Province_(Sierra_Leone) .
  
  # Determine the time zone of Northern Province, which is GMT
  dbr:Northern_Province_(Sierra_Leone) dbo:timeZone dbr:Greenwich_Mean_Time .

  # Retrieve the region associated with Greenwich Mean Time (GMT)
  dbr:Greenwich_Mean_Time dbo:region ?region .
}
```",2,2,3,2,1,2,3,28,0,0,2484,0,0.0,0
996,4,train,Who is the native of Palestine (region)?,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Palestine_(region)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?person ?personLabel WHERE {
  ?person a dbo:Person .
  ?person dbo:birthPlace ?place .
  ?place rdfs:label ?placeLabel .
  FILTER (CONTAINS(LCASE(?placeLabel), ""palestine"") || CONTAINS(LCASE(?place), ""Palestine""))
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
ORDER BY ?personLabel
LIMIT 100
```",1,1,2,1,1,3,2,20,0,0,47,0,0.0,0
365,2,train,"Give me the professional, that is an artist and a musical artist, in Vocalist, musician, songwriter.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Vocalist, musician, songwriter""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name WHERE {
  ?person a dbo:MusicalArtist .
  ?person dbo:occupation ?occupation .
  FILTER (
    (str(?occupation) = ""Vocalist"") ||
    (str(?occupation) = ""Musician"") ||
    (str(?occupation) = ""Songwriter"")
  ) .
  ?person foaf:name ?name .
}
ORDER BY ?name
LIMIT 10
```",1,3,2,1,1,2,2,9,0,0,4,0,0.0,0
314,7,train,Give me the person deceased at Madrid and commander in Spanish Civil War.,SELECT ?result WHERE { <http://dbpedia.org/resource/Spanish_Civil_War> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/restingPlace> <http://dbpedia.org/resource/Madrid> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name WHERE {
  ?person a dbo:MilitaryPerson ;
          dbo:commanderOf ?event .
  ?event dbo:wikiPageRedirects ?redirect .
  ?redirect rdfs:label ""Spanish Civil War""@en .
  
  OPTIONAL { ?person dbo:deathPlace dbr:Madrid . }
  
  FILTER (BOUND(?person))
  
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
232,7,train,"Give me the native, that is a politician and an office holder, of France.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/France> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name WHERE {
  ?person dbo:nationality dbr:France .
  ?person rdfs:label ?name .
  FILTER (LANG(?name) = 'en')
  
  OPTIONAL { ?person dbo:occupation ?occupation . 
    FILTER(CONTAINS(LCASE(STR(?occupation)), ""politician"") || CONTAINS(LCASE(STR(?occupation)), ""officeholder"")) }
  
  OPTIONAL { ?person dbo:officeHolder ?office .
    FILTER(!isBlank(?office)) }

  FILTER (CONTAINS(LCASE(STR(?name)), ""politician"") || !isBlank(?office))
}
ORDER BY ?name
LIMIT 1
```",1,3,2,1,1,3,3,71,0,2,270,0.0,0.0,0
547,9,train,Give me the resting place of James Burton (Egyptologist) and resting place of Simon Cadell.,SELECT ?result WHERE { <http://dbpedia.org/resource/Simon_Cadell> <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/James_Burton_(Egyptologist)> <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name ?deathPlace ?restingPlace WHERE {
  VALUES (?person ?name) {
    (dbr:James_Burton_(Egyptologist) ""James Burton (Egyptologist)"")
    (dbr:Simon_Cadell ""Simon Cadell"")
  }
  
  OPTIONAL { ?person dbo:name ?name . }
  OPTIONAL { ?person dbo:deathPlace ?deathPlace . }
  
  # Check for any specific property related to burial or resting place
  OPTIONAL {
    ?person dbo:burialPlace ?restingPlace .
    FILTER (!bound(?deathPlace) || ?restingPlace != ?deathPlace)
  }

  UNION {
    ?person dbo:finalBurialPlace ?restingPlace .
    FILTER (!bound(?deathPlace) || ?restingPlace != ?deathPlace)
  }
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
429,2,train,Who is the father of Martha Johnson Patterson?,SELECT ?result WHERE { <http://dbpedia.org/resource/Martha_Johnson_Patterson> <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?fatherLabel WHERE {
  ?person rdfs:label ""Martha Johnson Patterson""@en .
  ?person dbo:father ?father .
  ?father rdfs:label ?fatherLabel .
}
```",1,1,2,1,1,2,2,9,0,0,1,0,0.0,0
328,9,train,Give me the awardee of Order of Suvorov and commander in Eastern Front (World War II).,SELECT ?result WHERE { <http://dbpedia.org/resource/Eastern_Front_(World_War_II)> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Order_of_Suvorov> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name WHERE {
  ?person a dbo:MilitaryPerson .
  ?person dbo:awardedBy dbr:Order_of_Suvorov .
  ?person dbo:commanderOf dbr:Eastern_Front_(World_War_II) .
  ?person rdfs:label ?name .
  FILTER (LANG(?name) = ""en"")
}
```",2,2,3,1,2,3,3,71,0,0,2,0,0.0,0
747,15,train,"Give me the birth date of the person decedent, that is an athlete and a soccer player, at Zolotonosha.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthDate> ?result . ?v1 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Zolotonosha> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?birthDate WHERE {
  ?person a dbo:Athlete .
  ?person dbo:sport dbr:Soccer .
  ?person dbo:birthPlace dbr:Zolotonosha .
  ?person dbo:birthday ?birthDate .
}
```",2,4,3,2,1,3,3,71,0,0,1,0,0.0,0
435,6,train,Give me the territory administered from Reykjavík and region of Greenwich Mean Time.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Reykjavík> . ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Greenwich_Mean_Time> . },"```sparql
SELECT DISTINCT ?territory ?gmtRegion WHERE {
  # Find the territory administered from Reykjavik (Iceland)
  ?city rdfs:label ""Reykjavík""@en .
  ?city dbo:country ?territory .

  # Find regions that use Greenwich Mean Time
  ?region rdfs:label ?label .
  FILTER(CONTAINS(LCASE(?label), ""greenwich mean time"") || CONTAINS(LCASE(?label), ""gmt""))
  
  OPTIONAL {
    ?region dbo:timeZone ?timezone .
    ?timezone rdfs:label ?tzLabel .
    FILTER(CONTAINS(LCASE(?tzLabel), ""gmt""))
  }

  # Bind the results to variables
  BIND(?territory AS ?administeredTerritory)
  BIND(?region AS ?gmtRegion)
}
```",2,2,3,1,2,2,3,28,1,249,0,0.004,1.0,0.00796812749003984
339,2,train,Who is the predecessor of Frederick VIII of Denmark?,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Frederick_VIII_of_Denmark> . },"```sparql
SELECT ?predecessor WHERE {
  wd:Q12345 dbo:predecessor ?predecessor .
}
```

Note: Replace `wd:Q12345` with the actual DBpedia resource identifier for Frederick VIII of Denmark. You can find this by searching DBpedia or using a SPARQL endpoint to query for his resource.",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
142,2,train,Give me the region of Japan Standard Time.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Japan_Standard_Time> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?region WHERE {
  ?timeZone a dbo:TimeZone ;
            rdfs:label ""Japan Standard Time""@en .
  OPTIONAL { ?timeZone dbo:country dbr:Japan . }
  ?region dbo:timeZone ?timeZone .
}
```",1,1,2,1,1,2,2,9,0,0,2255,0,0.0,0
747,16,train,"Who is the writer of the work, that is a song, of Amba Shepherd?",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v1 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Amba_Shepherd> . ?v1 <http://dbpedia.org/property/writer> ?result . },"```sparql
SELECT ?song ?writer WHERE {
  ?song dbo:lyricsBy dbr:Amba_Shepherd .
  ?song dbo:writer ?writer .
}
```",2,3,3,2,1,3,3,71,0,0,3,0,0.0,0
30,6,train,Give me the professional in the profession of Édouard Alphonse James de Rothschild.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v0 . <http://dbpedia.org/resource/Édouard_Alphonse_James_de_Rothschild> <http://dbpedia.org/property/occupation> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?profession 
WHERE {
  dbr:Édouard_Alphonse_James_de_Rothschild dbo:occupation ?profession .
}
```",2,2,3,2,1,2,2,9,0,2,1,0.0,0.0,0
55,0,train,Give me the band member of Guns N' Roses.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Guns_N'_Roses> . },"```sparql
SELECT ?member WHERE {
  ?band dbr:bandName ""Guns N' Roses""@en .
  ?band <http://dbpedia.org/ontology/member> ?member .
}
```",1,1,2,1,1,2,3,28,0,0,55,0,0.0,0
701,6,train,Give me the child of Ramesses II.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ramesses_II> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?child WHERE {
  ?s dbo:child ?child .
  FILTER(?s = dbpedia:Ramesses_II)
}
```",1,1,2,1,1,3,3,71,0,0,8,0,0.0,0
827,7,train,"Give me the child of the child, that is a royalty, of Grand Duchess Maria Pavlovna of Russia (1786–1859).",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Grand_Duchess_Maria_Pavlovna_of_Russia_(1786–1859)> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
SELECT DISTINCT ?grandchild ?title WHERE {
  # Step 1: Identify Maria Pavlovna's children
  ?mariaPavlovna dbo:child ?child .
  
  FILTER(?mariaPavlovna = dbpedia:Grand_Duchess_Maria_Pavlovna_of_Russia_(1786-1859))

  # Step 2: For each child, find their children (Maria Pavlovna's grandchildren)
  ?child dbo:child ?grandchild .

  # Step 3: Check if the grandchild has a royalty title
  OPTIONAL { ?grandchild dbo:royaltyTitle ?title }
  
  FILTER(?title != """")
}
```",2,3,3,2,1,3,2,20,0,0,6,0,0.0,0
528,1,train,Give me the war of Orozimbo Barbosa.,SELECT ?result WHERE { <http://dbpedia.org/resource/Orozimbo_Barbosa> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?war WHERE {
  ?person dbo:name ""Orozimbo Barbosa""@en .
  OPTIONAL { ?person dbo:participatedIn ?war . }
}
```",1,1,2,1,1,3,3,71,0,0,9,0,0.0,0
487,10,train,"Give me the person born, that is a soccer player, as the birth name of Phil Scott.",SELECT ?result WHERE { <http://dbpedia.org/resource/Phil_Scott> <http://dbpedia.org/property/birthName> ?v0 . ?result <http://dbpedia.org/property/birthName> ?v0 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?birthName WHERE {
  ?person foaf:name ""Phil Scott""@en .
  ?person dbo:occupation dbr:Soccer_player .
  ?person foaf:mbox ?email . # To ensure we get a specific individual
  OPTIONAL { ?person foaf:birthday ?birthday } # Optional to refine results if needed
  ?person foaf:name ?birthName .
}
```",2,3,3,2,1,3,2,20,0,0,1,0,0.0,0
303,1,train,Give me the entity in Panama.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Panama> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?entity ?label WHERE {
  {
    ?entity dbo:country dbr:Panama .
  } UNION {
    ?entity dbp:location dbr:Panama .
  }
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
```",1,1,2,1,1,2,3,28,0,0,991,0,0.0,0
492,8,train,"Give me the capital, that is a settlement, of Algeria.",SELECT ?result WHERE { <http://dbpedia.org/resource/Algeria> <http://dbpedia.org/ontology/capital> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?capital WHERE {
  ?capital dbo:country dbr:Algeria .
  ?capital rdf:type dbp:Settlement .
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
179,7,train,Give me the person born as the birth name of Sirikit.,SELECT ?result WHERE { <http://dbpedia.org/resource/Sirikit> <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
SELECT ?person WHERE {
  ?person dbo:birthName ""Sirikit""@en .
}
```",2,2,3,2,1,3,2,20,0,0,1,0,0.0,0
391,5,train,Who is the spouse of Sherry Hormann?,SELECT ?result WHERE { <http://dbpedia.org/resource/Sherry_Hormann> <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
  ?person rdfs:label ""Sherry Hormann""@en.
  ?person dbo:spouse ?spouse.
}
```",1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
963,2,train,Give me the time zone of Herzegovina-Neretva Canton.,SELECT ?result WHERE { <http://dbpedia.org/resource/Herzegovina-Neretva_Canton> <http://dbpedia.org/property/timeZone> ?result . },"```sparql
SELECT ?timeZone WHERE {
  ?canton rdf:type dbo:Canton .
  ?canton rdfs:label ""Herzegovina-Neretva Canton""@en .
  OPTIONAL { ?canton dbo:timeZone ?timeZone . }
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
232,14,train,"Give me the native of the residence, that is a settlement and British, of Sylvie Bermann.",SELECT ?result WHERE { <http://dbpedia.org/resource/Sylvie_Bermann> <http://dbpedia.org/property/residence> ?v1 . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?native WHERE {
  # Find Sylvie Bermann's residence
  dbr:Sylvie_Bermann dbo:residence ?residence .
  
  # Ensure the residence is a settlement in Britain (United Kingdom)
  ?residence a dbo:Settlement ;
             dbo:settlementType ?settlementType ;
             dbo:country dbr:United_Kingdom .

  # Get the native of this settlement
  ?native dbo:nativeOf ?residence .
}
```",2,4,3,2,1,3,3,71,0,0,9121,0,0.0,0
77,0,train,Give me the war of Alexander Chechenskiy.,SELECT ?result WHERE { <http://dbpedia.org/resource/Alexander_Chechenskiy> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war WHERE {
  ?person a dbo:Person ;
          foaf:name ""Alexander Chechenskiy""@en .
  
  OPTIONAL { 
    ?person dbo:nationality dbr:Russia . 
  }
  
  ?event dbo:agent ?person ;
         a dbo:MilitaryConflict .

  ?event rdfs:label ?war .
}
```",1,1,2,1,1,3,2,20,0,0,9,0,0.0,0
827,8,train,"Give me the father of the child, that is a royalty, of Charles Augustus, Hereditary Grand Duke of Saxe-Weimar-Eisenach (1844–1894).","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Charles_Augustus,_Hereditary_Grand_Duke_of_Saxe-Weimar-Eisenach_(1844–1894)> . }","```sparql
SELECT ?child ?father WHERE {
  # Step 1: Identify Charles Augustus and his children
  wd:Q1234567 dbo:child ?child .
  
  # Step 2: Filter for royal children
  ?child dbo:royalTitle ?title .

  # Step 3: Find the father of the royal child
  ?child dbo:father ?father .
}
```

Note: Replace `wd:Q1234567` with the actual DBpedia identifier for Charles Augustus, Hereditary Grand Duke of Saxe-Weimar-Eisenach.",2,3,3,2,1,3,2,20,0,0,1,0,0.0,0
115,0,train,Give me the alma mater of Vladimir Cerrón.,SELECT ?result WHERE { <http://dbpedia.org/resource/Vladimir_Cerrón> <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?university WHERE {
  ?person a dbo:Person ;
          foaf:name ""Vladimir Cerrón""@en .
  OPTIONAL { ?person dbo:almaMater ?university . }
}
```",1,1,2,1,1,2,2,9,2,0,0,1.0,1.0,1.0
16,4,train,Who is the person born as Ted Martin McGinley?,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Ted Martin McGinley""@en . }","```sparql
SELECT ?person WHERE {
  ?person dbo:birthName ""Ted Martin McGinley"" .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
44,2,train,Give me the band of John Pettibone.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/John_Pettibone> . },"```sparql
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?band WHERE {
  ?person foaf:name ""John Pettibone""@en .
  OPTIONAL { ?person dbp:band ?band . }
}
```",1,1,2,1,1,2,2,9,0,0,1,0,0.0,0
427,7,train,Give me the birth name of Romano Prodi.,SELECT ?result WHERE { <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/property/birthName> ?result . },"```sparql
SELECT ?birthName WHERE {
  dbpedia:Romano_Prodi dbo:birthName ?birthName .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
488,7,train,"Who is the spouse, that is a royalty, of Tokugawa Masako?",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Tokugawa_Masako> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse ?title WHERE {
  ?tokugawaMasako a dbo:Person ;
                  foaf:name ""Tokugawa Masako""@en .
  
  ?tokugawaMasako dbo:spouse ?spouse .

  OPTIONAL { 
    ?spouse dbp:title ?title .
  }
  
  FILTER (lang(?title) = 'en')
}
```",1,2,2,1,1,3,3,71,1,1,0,0.5,1.0,0.6666666666666666
701,17,train,"Give me the father of the commander, that is a royalty, in Battle of Perire.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Battle_of_Perire> <http://dbpedia.org/ontology/commander> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?father WHERE {
  ?battle dbo:event = db:Battle_of_Perire .
  ?person dbo:commanderOf ?battle ;
          a dbo:RoyalPerson ; # Assuming there's an ontology class for royalty
          dbo:father ?father .
}
```",2,3,3,2,1,3,3,71,0,0,1,0,0.0,0
959,12,train,Give me the manager of 2013 Júbilo Iwata season and native of Japan.,SELECT ?result WHERE { <http://dbpedia.org/resource/2013_Júbilo_Iwata_season> <http://dbpedia.org/ontology/manager> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Japan> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?manager ?birthPlace WHERE {
  ?team dbo:coach ?manager .
  ?manager dbo:nationality dbr:Japan .
  OPTIONAL { ?manager dbo:birthPlace ?birthPlace . }
  
  FILTER(CONTAINS(LCASE(STR(?team)), ""jubilo iwata""))
  FILTER(YEAR(?year) = 2013)
}
```",2,2,3,1,2,3,3,71,0,0,3,0,0.0,0
232,9,train,Give me the actor of Dog Soldiers (film) and child of Jon Pertwee.,SELECT ?result WHERE { <http://dbpedia.org/resource/Dog_Soldiers_(film)> <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/ontology/child> ?result . },"```sparql
# Query to find actors in the film ""Dog Soldiers""
SELECT ?actor WHERE {
  ?film dcterms:title ""Dog Soldiers""@en .
  ?film dbo:starring ?actor .
}

UNION

# Query to find children of Jon Pertwee
SELECT ?child WHERE {
  ?person foaf:name ""Jon Pertwee""@en .
  ?person dbo:child ?child .
}

# Combine results to find common individuals
SELECT DISTINCT ?commonIndividual WHERE {
  { 
    ?film dcterms:title ""Dog Soldiers""@en .
    ?film dbo:starring ?commonIndividual .
  }
  
  UNION
  
  {
    ?person foaf:name ""Jon Pertwee""@en .
    ?person dbo:child ?commonIndividual .
  }
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
617,4,train,"Who is the child, that is a royalty, of Seleucus II Callinicus?",SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seleucus_II_Callinicus> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child ?title WHERE {
  ?person a dbo:Person ;
          dbo:spouse ?spouse .
  ?spouse dbo:spouse ?person .
  ?person dbo:parent dbr:Seleucus_II_Callinicus .
  ?child dbo:parent ?person .
  OPTIONAL { ?child dbo:title ?title . FILTER regex(?title, ""King|Queen|Prince|Princess"", ""i"") }
}
```",1,2,2,1,1,3,3,71,0,6,2,0.0,0.0,0
294,3,train,"Who is the awardee, that is a politician, of Distinguished Service Medal (U.S. Army)?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Distinguished_Service_Medal_(U.S._Army)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name WHERE {
  ?person a dbo:AwardRecipient ;
          dbo:award dbr:Distinguished_Service_Medal_(United_States_Army) .
  ?person dbo:occupation dbr:Politician .
  OPTIONAL { ?person rdfs:label ?name FILTER (lang(?name) = 'en') }
}
```",1,2,2,1,1,2,3,28,0,0,11,0,0.0,0
547,16,train,Give me the actor of the show with Emily Richard.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emily_Richard> . ?v1 <http://dbpedia.org/property/starring> ?result . },"```sparql
SELECT DISTINCT ?actor WHERE {
  # Find the DBpedia resource for Emily Richard
  ?emily a dbo:Actor ;
         foaf:name ""Emily Richard""@en .
  
  # Identify TV shows or films she has acted in
  ?work dbo:starring ?emily .

  # For each work, find other actors involved
  ?work dbo:starring ?actor .
  
  FILTER(?actor != ?emily) # Exclude Emily Richard herself from the results
}
```",2,2,3,2,1,3,3,71,0,0,22,0,0.0,0
659,6,train,"Give me the war, that is an event and a military conflict, of 1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish).",SELECT ?result WHERE { <http://dbpedia.org/resource/1st_Light_Cavalry_Lancers_Regiment_of_the_Imperial_Guard_(Polish)> <http://dbpedia.org/ontology/battle> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war WHERE {
  ?regiment a dbo:MilitaryUnit ;
            rdfs:label ""1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish)""@en .
  
  ?event dbo:participatedIn ?regiment ;
         a dbo:MilitaryConflict .

  ?event rdfs:label ?warLabel .
  
  FILTER(CONTAINS(LCASE(?warLabel), ""napoleonic wars""))
}
```",1,3,2,1,1,3,3,71,0,0,19,0,0.0,0
182,0,train,Give me the war of Mahesh Senanayake.,SELECT ?result WHERE { <http://dbpedia.org/resource/Mahesh_Senanayake> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war ?description WHERE {
  ?war a dbo:MilitaryConflict ;
      rdfs:label ?label .
  FILTER(CONTAINS(LCASE(?label), ""sri lankan civil war""))
  
  OPTIONAL { ?war dbo:description ?description }
}
```",1,1,2,1,1,2,3,28,1,2,1,0.3333333333333333,0.5,0.4
54,14,train,"Give me the predecessor of the child, that is an office holder and a royalty, of Thihapate of Mohnyin.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Thihapate_of_Mohnyin> . ?result <http://dbpedia.org/ontology/successor> ?v1 . },"```sparql
SELECT ?child ?predecessor WHERE {
  ?thihapate rdf:type dbo:Person ;
             rdfs:label ""Thihapate of Mohnyin""@en .
  
  ?thihapate dbo:child ?child .

  ?child rdf:type dbo:RoyalPerson, dbo:OfficeHolder .

  ?child dbo:predecessor ?predecessor .
}
```",2,4,3,2,1,3,3,71,0,0,1,0,0.0,0
339,8,train,Give me the father of the child of Grand Duchess Elena Vladimirovna of Russia.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Grand_Duchess_Elena_Vladimirovna_of_Russia> <http://dbpedia.org/ontology/child> ?v0 . },"```sparql
SELECT ?child ?father WHERE {
  wd:Q1234567 wdt:P40 ?child .
  ?child wdt:P22 ?father .
}
```

In this query:
- `wd:Q1234567` should be replaced with the actual DBpedia identifier for Grand Duchess Elena Vladimirovna of Russia.
- `P40` is the property for ""children"".
- `P22` is the property for ""spouse"".

Note: You will need to replace `wd:Q1234567` with the correct DBpedia resource ID for Grand Duchess Elena Vladimirovna.",2,2,3,2,1,3,2,20,0,0,1,0,0.0,0
77,10,train,"Who is the mayor of the territory administered, that is an organisation, from Warsaw?",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/property/leader> ?result . ?v0 <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Warsaw> . },"```sparql
SELECT ?mayor WHERE {
  wd:Q1596 wdt:P131* wd:Q1107 .
  wd:Q1596 wdt:P6 ?mayor .
}
```

Explanation of the SPARQL query:
- `wd:Q1596` is the Wikidata item for Warsaw.
- `wdt:P131*` is used to find any administrative territory related to Warsaw, allowing us to capture hierarchical relationships (e.g., city within a country).
- `wd:Q1107` is the Wikidata item for Poland, ensuring we are looking at territories within this country.
- `wdt:P6` is the property that links an entity to its mayor.",2,3,3,2,1,3,2,20,0,0,8,0,0.0,0
318,3,train,Give me the profession of Robert Xavier Rodriguez.,SELECT ?result WHERE { <http://dbpedia.org/resource/Robert_Xavier_Rodriguez> <http://dbpedia.org/property/occupation> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?profession 
WHERE {
  VALUES ?person { dbr:Robert_Xavier_Rodriguez }
  ?person dbo:occupation ?profession .
}
```",1,1,2,1,1,2,2,9,1,1,1,0.5,0.5,0.5
963,7,train,"Give me the entity in the region, that is a country, of Central European Time.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?country WHERE {
  ?country a dbo:Country .
  ?country dbo:timeZone dbr:Central_European_Time .
}
```",2,3,3,2,1,3,2,20,29,65,173232,0.30851063829787234,0.00016737754024275515,0.00033457356292001964
435,4,train,Give me the time zone in Bombali Shebora Chiefdom.,SELECT ?result WHERE { <http://dbpedia.org/resource/Bombali_Shebora_Chiefdom> <http://dbpedia.org/ontology/timeZone> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?timeZone WHERE {
  ?chiefdom dbo:country dbr:Sierra_Leone .
  FILTER(STRSTARTS(STR(?chiefdom), ""http://dbpedia.org/resource/Bombali_Shebora_Chuulunkha_Chiefdom""))
  OPTIONAL { dbr:Sierra_Leone dbo:timeZone ?timeZone }
}
```",1,1,2,1,1,2,3,28,0,0,1,0,0.0,0
488,9,train,Give me the death place of Tokugawa Ieyasu and birth place of Enomoto Takeaki.,SELECT ?result WHERE { <http://dbpedia.org/resource/Enomoto_Takeaki> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Tokugawa_Ieyasu> <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
# Query for the death place of Tokugawa Ieyasu
SELECT ?deathPlace WHERE {
  wd:Q1234 dbo:deathPlace ?deathPlace .
}

UNION

# Query for the birth place of Enomoto Takeaki
SELECT ?birthPlace WHERE {
  wd:Q5678 dbo:birthPlace ?birthPlace .
}
```

Note: `wd:Q1234` is a placeholder for the DBpedia resource identifier for Tokugawa Ieyasu, and `wd:Q5678` is a placeholder for Enomoto Takeaki. You would need to replace these with the actual identifiers from DBpedia.",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
534,7,train,"Give me the birth place of the child, that is a politician and an office holder, of Desmond FitzGerald (politician).",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Desmond_FitzGerald_(politician)> <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
SELECT ?child ?birthPlace WHERE {
  ?desmond a dbo:Politician ;
           foaf:name ""Desmond FitzGerald""@en .
  
  ?desmond dbo:child ?child .

  OPTIONAL { 
    ?child dbo:occupation ?occupation .
    FILTER (
      ?occupation IN (dbo:Politician, dbo:OfficeHolder)
    )
  }

  ?child dbo:birthPlace ?birthPlace .
}
```",2,4,3,2,1,3,2,20,1,1,0,0.5,1.0,0.6666666666666666
285,4,train,Give me the award of Stan Lee.,SELECT ?result WHERE { <http://dbpedia.org/resource/Stan_Lee> <http://dbpedia.org/property/awards> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award WHERE {
  dbr:Stan_Lee dbo:award ?award .
}
```",1,1,2,1,1,3,2,20,0,4,5,0.0,0.0,0
534,2,train,"Who is the native, that is a politician, of Essex?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Essex> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name WHERE {
  ?person a dbo:Person .
  ?person dbo:birthPlace dbr:Essex .
  ?person dbo:occupation dbr:Politician .
  OPTIONAL { ?person foaf:name ?name . }
}
```",1,2,2,1,1,3,2,20,0,0,89,0,0.0,0
161,14,train,"Give me the commander in the force, that is an event, of Emilio Mola.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Emilio_Mola> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?event WHERE {
  dbr:Emilio_Mola dbo:commander ?person .
  ?person dbo:memberOf ?force .
  ?force dbo:event ?event .
  FILTER (isLiteral(?event) = false)
}
```",2,3,3,2,1,3,3,71,0,0,85,0,0.0,0
820,0,train,Give me the professional in .,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . }","```
# No valid query can be generated due to lack of specificity in the question.
```",1,1,2,1,1,3,2,20,0,0,39640,0,0.0,0
314,4,train,Give me the award of Sergei Makovetsky.,SELECT ?result WHERE { <http://dbpedia.org/resource/Sergei_Makovetsky> <http://dbpedia.org/property/awards> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award WHERE {
  VALUES ?person { dbr:Sergei_Makovetsky }
  ?person dbo:award ?award .
}
```",1,1,2,1,1,2,3,28,0,0,1,0,0.0,0
404,17,train,Who is the father of the spouse of Princess Victoria Louise of Prussia?,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?v1 . },"```sparql
SELECT ?father WHERE {
  ?princess a dbo:Princess ;
            foaf:name ""Victoria Louise of Prussia""@en .
  
  ?princess dbo:spouse ?spouse .

  ?spouse dbp:father ?father .
}
```",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
485,6,train,Give me the entity in United Kingdom and birth place of Thomas Warner (poet).,SELECT ?result WHERE { <http://dbpedia.org/resource/Thomas_Warner_(poet)> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace WHERE {
  ?person a dbo:Poet ;
          foaf:name ""Thomas Warner"" .
  ?person dbo:birthPlace ?birthPlace .
  ?birthPlace dbo:country dbr:United_Kingdom .
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
312,3,train,Give me the birthplace of Giorgio Grigolli.,SELECT ?result WHERE { <http://dbpedia.org/resource/Giorgio_Grigolli> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace WHERE {
  dbr:Giorgio_Grigolli dbo:birthPlace ?birthPlace .
}
```",1,1,2,1,1,2,2,9,2,0,0,1.0,1.0,1.0
232,8,train,"Give me the residence, that is a settlement and British, of Sylvie Bermann.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. <http://dbpedia.org/resource/Sylvie_Bermann> <http://dbpedia.org/property/residence> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?residence WHERE {
  ?person foaf:name ""Sylvie Bermann""@en .
  ?person dbo:office ?office .
  ?office dbo:location ?residence .
  ?residence a dbo:Settlement ;
             dbo:country dbr:United_Kingdom .
}
```",1,3,2,1,1,3,3,71,0,0,2,0,0.0,0
747,4,train,Give me the birth date of Pavlo Khudzik.,SELECT ?result WHERE { <http://dbpedia.org/resource/Pavlo_Khudzik> <http://dbpedia.org/ontology/birthDate> ?result . },"```sparql
SELECT ?birthDate WHERE {
  <http://dbpedia.org/resource/Pavlo_Khudzik> dbo:birthDate ?birthDate .
}
```",1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
197,1,train,Give me the birthplace of George Lusztig.,SELECT ?result WHERE { <http://dbpedia.org/resource/George_Lusztig> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?birthPlace WHERE {
  ?person a dbo:Person ;
          foaf:name ""George Lusztig""@en .
  ?person dbo:birthPlace ?birthPlace .
}
```",1,1,2,1,1,2,2,9,2,0,0,1.0,1.0,1.0
312,1,train,Give me the entity in Italy.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?entity ?entityLabel WHERE {
  ?entity (dbo:country|dbp:location) dbr:Italy .
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
LIMIT 10
```",1,1,2,1,1,2,2,9,0,0,13092,0,0.0,0
9,17,train,"Give me the nickname of the entity, that is an organisation and an educational institution, in Northern Ireland.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Northern_Ireland> . ?v1 <http://dbpedia.org/property/nickname> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp-owl: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?institution ?nickname WHERE {
  ?institution a dbp-owl:EducationalInstitution ;
               dbo:location dbr:Northern_Ireland .
  OPTIONAL { 
    ?institution rdfs:label ?nickname FILTER (lang(?nickname) = 'en') .
  }
}
```",2,4,3,2,1,3,3,71,0,0,5,0,0.0,0
16,17,train,Give me the birth name of the alumnus of Ohio State University.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Ohio_State_University> . ?v1 <http://dbpedia.org/property/birthName> ?result . },"```sparql
SELECT ?alumnus ?birthName WHERE {
  ?alumnus dbo:almaMater dbr:Ohio_State_University .
  OPTIONAL { ?alumnus foaf:name ?name . }
  OPTIONAL { ?alumnus dbp:birthName ?birthName . }
}
LIMIT 10
```",2,2,3,2,1,3,3,71,10,10,80,0.5,0.1111111111111111,0.1818181818181818
429,4,train,Give me the country of 77th Ohio Infantry Regiment and administration of Andrew Johnson.,SELECT ?result WHERE { <http://dbpedia.org/resource/77th_Ohio_Infantry_Regiment> <http://dbpedia.org/ontology/country> ?result . ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Andrew_Johnson> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?country ?administrationStart ?administrationEnd
WHERE {
  # Find the country of the 77th Ohio Infantry Regiment
  OPTIONAL { 
    ?regiment a dbo:MilitaryUnit ;
              rdfs:label ""77th Ohio Infantry Regiment""@en .
    ?regiment dbo:country ?country .
  }
  
  # Find Andrew Johnson's administration years
  OPTIONAL {
    ?presidency dbr:Andrew_Johnson ;
                dbo:president ?johnson ;
                dbo:presidencyStartYear ?administrationStart ;
                dbo:presidencyEndYear ?administrationEnd .
    ?johnson rdfs:label ""Andrew Johnson""@en .
  }
}
```",2,2,3,1,2,2,2,9,0,0,1,0,0.0,0
360,2,train,Give me the reference to Manfred Mann.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Manfred Mann""@en . }","```sparql
SELECT ?manfredMann WHERE {
  ?manfredMann rdfs:label ""Manfred Mann (musician)""@en .
  FILTER(lang(?manfredMann) = 'en')
}
```",1,1,2,1,1,2,3,28,0,0,2,0,0.0,0
487,5,train,"Give me the person born, that is a soccer player, as Philip Brian Scott.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Philip Brian Scott""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person ?birthDate WHERE {
  ?person a dbo:SoccerPlayer .
  ?person foaf:name ""Philip Brian Scott"" .
  OPTIONAL { ?person dbo:birthDate ?birthDate . }
}
```",1,2,2,1,1,3,2,20,0,0,1,0,0.0,0
994,6,train,"Give me the band member, that is a band and a group and an organisation, of Meshuggah.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Meshuggah> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?member WHERE {
  # Find all band members of Meshuggah
  ?meshuggahMember dbo:bandMember dbr:Meshuggah .
  
  # Ensure the member is also a band or organization
  ?member rdfs:label ?name .
  FILTER(CONTAINS(LCASE(?name), ""meshuggah""))
  OPTIONAL { ?member a dbo:Band . }
  OPTIONAL { ?member a dbo:Organization . }

  # Bind the member to the variable if they are a band or organization
  VALUES ?type { dbo:Band dbo:Organization }
  ?member a ?type .
}
```",1,4,2,1,1,3,3,71,0,0,6,0,0.0,0
427,8,train,"Who is the person born, that is an office holder and a politician, as Romano Antonio Prodi?","SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Romano Antonio Prodi""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
SELECT ?birthDate WHERE {
  ?person foaf:name ""Romano Prodi""@en .
  ?person dbo:occupation dbr/Politician ;
          dbo:officeHolder true .
  ?person dbo:birthDate ?birthDate .
}
```",1,3,2,1,1,3,3,71,0,0,1,0,0.0,0
747,13,train,Give me the band of the writer of Apollo (Hardwell song).,SELECT ?result WHERE { <http://dbpedia.org/resource/Apollo_(Hardwell_song)> <http://dbpedia.org/property/writer> ?v1 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT ?writer ?band WHERE {
  # Find the song ""Apollo"" by Hardwell
  ?song dbo:title ""Apollo""@en .
  ?song dbo:artist <http://dbpedia.org/resource/Hardwell> .

  # Identify the writer(s) of the song
  ?song dbo:composer ?writer ;
        (dbo:lyricist|dbo:composer) ?writer .

  # Find any bands associated with the writer
  OPTIONAL { 
    ?bandMember dbo:member ?writer .
    ?bandMember dbo:name ?band .
  }
}
```",2,2,3,2,1,3,3,71,0,0,13,0,0.0,0
626,9,train,"Give me the force, that is a military conflict, of the commander in Battle of Paris (1814).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> ?v0 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Battle_of_Paris_(1814)> <http://dbpedia.org/ontology/commander> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?force WHERE {
  ?battle dbp:name ""Battle of Paris (1814)"" .
  ?battle dbo:commander ?commander .
  ?commander rdfs:label ""Napoleon Bonaparte""@en .
  ?commander dbo:participatedIn ?conflict .
  ?conflict dbo:conflictingParty ?force .
  FILTER(CONTAINS(LCASE(?force), ""france"") || CONTAINS(LCASE(?force), ""french empire""))
}
```",2,3,3,2,1,3,2,20,0,0,77,0,0.0,0
754,7,train,Give me the parent of the parent of May Hnin Htapi.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/May_Hnin_Htapi> <http://dbpedia.org/ontology/parent> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?greatGrandparent WHERE {
  ?mayHninHtapi dbo:name ""May Hnin Htapi""@en .
  
  ?mayHninHtapi dbo:parent ?parent1 .
  
  ?parent1 dbo:parent ?grandparent .
  
  ?grandparent dbo:parent ?greatGrandparent .
}
```",2,2,3,2,1,3,2,20,0,0,1,0,0.0,0
92,8,train,Give me the person born as Joseph Michael Furney.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Joseph Michael Furney""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person ?personLabel WHERE {
  ?person dbo:birthName ""Joseph Michael Furney"" .
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
838,5,train,"Give me the band, that is a group, of YU Grupa.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. <http://dbpedia.org/resource/YU_Grupa> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band WHERE {
  ?group a dbo:MusicalGroup ;
         foaf:name ""YU Grupa""@en .
  ?member dbo:band ?group .
  ?member a dbo:Band .
  BIND(?member AS ?band)
}
```",1,2,2,1,1,3,2,20,0,0,8,0,0.0,0
659,11,train,"Give me the commander in the force of Arthur Wellesley, 1st Duke of Wellington.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Arthur_Wellesley,_1st_Duke_of_Wellington> . ?v0 <http://dbpedia.org/ontology/commander> ?result . }","```sparql
PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?subordinate WHERE {
  ?wellesley dbo:commander ?subordinate .
  FILTER (str(?wellesley) = ""Arthur_Wellesley,_1st_Duke_of_Wellington"")
}
```",2,2,3,2,1,3,3,71,0,0,175,0,0.0,0
963,8,train,"Give me the administration of the ruling party, that is a political party, in Sremski Karlovci.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. <http://dbpedia.org/resource/Sremski_Karlovci> <http://dbpedia.org/property/leaderParty> ?v0 . ?result <http://dbpedia.org/property/leaderParty> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?party ?leader WHERE {
  # Find political parties associated with Sremski Karlovci
  ?party dbo:location dbr:Sremski_Karlovci .
  
  # Ensure the party is a political party
  ?party rdf:type dbo:PoliticalParty .

  OPTIONAL {
    # Find the leader of the party
    ?party dbo:leader ?leader .
  }
}
```",2,3,3,2,1,3,2,20,0,0,86,0,0.0,0
77,5,train,Who is the mayor of Congress Poland?,SELECT ?result WHERE { <http://dbpedia.org/resource/Congress_Poland> <http://dbpedia.org/property/leader> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?viceroy ?viceroyName WHERE {
  ?viceroy a dbo:Viceroy ;
           dbo:country dbr:Congress_Poland ;
           rdfs:label ?viceroyName .
  FILTER (lang(?viceroyName) = ""en"")
}
```",1,1,2,1,1,3,2,20,0,0,2,0,0.0,0
54,17,train,"Give me the child, that is an office holder and a royalty, of the reference to Thihapate of Mohnyin.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/property/father> ?v1 . ?v1 <http://xmlns.com/foaf/0.1/name> ""Thihapate of Mohnyin""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?child WHERE {
  ?thihapate dbo:child ?child .
  FILTER(STRSTARTS(STR(?thihapate), ""http://dbpedia.org/resource/"") && STRCONTAINS(STR(?thihapate), ""Thihapate_of_Mohnyin""))
  
  ?child rdf:type dbo:RoyalPerson .
  ?child dbo:officeHolder ?office .
}
```",2,4,3,2,1,3,3,71,0,0,1,0,0.0,0
345,8,train,"Give me the team of the person born, that is a soccer player and a soccer manager, on 1978-09-15.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v0 <http://dbpedia.org/ontology/birthDate> ""1978-09-15""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://dbpedia.org/ontology/manager> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?team WHERE {
  ?person a dbo:SoccerPlayer ;
          dbo:birthDate ""1978-09-15""^^xsd:date ;
          dbo:sportsTeam ?team .
  
  OPTIONAL { 
    ?person a dbo:SoccerManager ;
            dbo:managedTeam ?team .
  }
}
```",2,4,3,2,1,3,2,20,0,0,2,0,0.0,0
251,9,train,Give me the administration of Forza Italia (2013) and death place of Laura Mancinelli.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Forza_Italia_(2013)> . <http://dbpedia.org/resource/Laura_Mancinelli> <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
# Query to find the administration of Forza Italia in 2013
SELECT ?person ?position WHERE {
  ?party dcterms:subject dbc:Forza_Italia ;
         dbo:leader ?person .
  ?person dbo:office ?position .
  FILTER (YEAR(?startDate) <= 2013 && (YEAR(?endDate) >= 2013 || NOT EXISTS { ?person dbo:endDate ?endDate }))
}

UNION

# Query to find the death place of Laura Mancinelli
SELECT ?deathPlace WHERE {
  dbpedia:en:Laura_Mancinelli dbo:placeOfBirth ?birthPlace ;
                               dbo:deathPlace ?deathPlace .
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
404,4,train,"Who is the person born, that is a royalty, as Princess Victoria Louise of Prussia?","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/birthName> ""Princess Victoria Louise of Prussia""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace ?parentName WHERE {
  VALUES ?person { dbr:Princess_Victoria_Louise_of_Prussia }
  
  ?person dbo:birthPlace ?birthPlace .
  OPTIONAL {
    ?person dbo:parent ?parent .
    ?parent rdfs:label ?parentName .
    FILTER (LANG(?parentName) = ""en"")
  }
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
617,3,train,"Give me the child, that is a royalty, of Boleslaus I, Duke of Bohemia.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Boleslaus_I,_Duke_of_Bohemia> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?child WHERE {
  ?boleslausI rdf:type dbo:Duke ;
              foaf:name ""Boleslaus I, Duke of Bohemia""@en .
  
  ?boleslausI dbo:child ?child .

  FILTER EXISTS { 
    ?child rdf:type dbo:Monarch .
  }
}
```",1,2,2,1,1,3,2,20,0,0,2,0,0.0,0
92,5,train,Give me the actor of Return to Nuke 'Em High Volume 1.,SELECT ?result WHERE { <http://dbpedia.org/resource/Return_to_Nuke_'Em_High_Volume_1> <http://dbpedia.org/property/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  ?movie dbo:title ""Return to Nuke 'Em High Volume 1""@en .
  ?movie dbo:starring ?actor .
}
```",1,1,2,1,1,3,3,71,0,0,19,0,0.0,0
345,7,train,Give me the figure known as the nickname of FC Vaduz.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ?v1 . <http://dbpedia.org/resource/FC_Vaduz> <http://dbpedia.org/property/nickname> ?v1 . },"```sparql
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
SELECT ?nickname WHERE {
  ?club rdf:type dbo:FootballClub .
  ?club rdfs:label ""FC Vaduz""@en .
  OPTIONAL { ?club foaf:altLabel ?nickname . }
}
```",2,2,3,2,1,3,2,20,0,0,1,0,0.0,0
959,7,train,"Who is the manager, that is a sports manager, of 1998 Kashima Antlers season?",SELECT ?result WHERE { <http://dbpedia.org/resource/1998_Kashima_Antlers_season> <http://dbpedia.org/ontology/manager> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. },"```sparql
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?managerName WHERE {
  ?team dbp:name ""Kashima Antlers""@en .
  ?team dbp:season ""1998""@en .
  ?team dbp:manager ?manager .
  ?manager foaf:name ?managerName .
  ?manager a dbo:SportsManager .
}
```",1,2,2,1,1,3,3,71,0,0,2,0,0.0,0
485,0,train,Give me the entity in United Kingdom.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?entity WHERE {
  ?entity a dbo:Place .
  ?entity dbo:country dbpedia:United_Kingdom .
}
LIMIT 100
```",1,1,2,1,1,2,3,28,0,0,42999,0,0.0,0
959,14,train,Give me the manager of the team of Takashi Sekizuka.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Takashi_Sekizuka> . ?v0 <http://dbpedia.org/ontology/manager> ?result . },"```sparql
SELECT ?manager WHERE {
  ?athlete dbp:name ""Takashi Sekizuka""@en .
  ?athlete dbo:team ?team .
  ?team dbo:manager ?manager .
}
```",2,2,3,2,1,3,3,71,0,1,10,0.0,0.0,0
701,15,train,Give me the child of the spouse of Amun-her-khepeshef.,SELECT ?result WHERE { <http://dbpedia.org/resource/Amun-her-khepeshef> <http://dbpedia.org/ontology/spouse> ?v1 . ?v1 <http://dbpedia.org/ontology/child> ?result . },"```sparql
SELECT ?child WHERE {
  ?amunherkhepeshef dbo:spouse ?spouse .
  FILTER (str(?amunherkhepeshef) = ""Amun-her-khepeshef"")
  
  ?spouse dbo:child ?child .
}
```",2,2,3,2,1,3,3,71,0,0,6,0,0.0,0
963,6,train,Give me the entity in Serbia and administration of Serbian Progressive Party.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Serbia> . ?result <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Serbian_Progressive_Party> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?role WHERE {
  ?person dbo:party dbr:Srpska_Progresivna_Stranka .
  OPTIONAL { ?person dbo:officeHolder ?office . }
  OPTIONAL { ?office dbo:title ?role . }
}
```",2,2,3,1,2,3,2,20,0,0,84,0,0.0,0
528,17,train,Give me the person born as the birth name of Narciso Campero.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Narciso_Campero> <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person ?name WHERE {
  ?person a dbo:Person .
  ?person foaf:name ?name .
  ?person dbo:birthName ""Narciso Campero"" .
}
```",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
659,7,train,Give me the reference to Rutger Jan Schimmelpenninck.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Rutger Jan Schimmelpenninck""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?description WHERE {
  ?person a dbo:Person .
  ?person rdfs:label ?name .
  FILTER(CONTAINS(LCASE(?name), ""rutger jan schimmelpenninck""))
  OPTIONAL { ?person dbo:description ?description }
}
```",1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
421,0,train,Give me the band member of Senidah.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Senidah> . },"```sparql
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?member WHERE {
  ?senidah dbo:associatedBand ?band .
  ?band dbp:bandMember ?member .
  FILTER (str(?senidah) = ""Senidah"")
}
```",1,1,2,1,1,2,3,28,0,0,2,0,0.0,0
281,10,train,"Give me the war of New Zealand Army and war of Beauchamp Seymour, 1st Baron Alcester.","SELECT ?result WHERE { <http://dbpedia.org/resource/New_Zealand_Army> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Beauchamp_Seymour,_1st_Baron_Alcester> <http://dbpedia.org/ontology/battle> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war ?description
WHERE {
  # Wars involving the New Zealand Army
  ?nzWar dbo:participatingOrganisation dbr:New_Zealand_Army .
  
  # Wars involving Beauchamp Seymour, 1st Baron Alcester
  ?beauchampWar dbo:participatingPerson dbr:Beauchamp_Seymour,_1st_Baron_Alcester .

  # Find common wars
  VALUES ?war { ?nzWar ?beauchampWar }
  
  # Get war descriptions
  ?war rdfs:label ?description .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
251,7,train,Give me the death place of Laura Mancinelli and location of Battle of Marengo.,SELECT ?result WHERE { <http://dbpedia.org/resource/Battle_of_Marengo> <http://dbpedia.org/ontology/place> ?result . <http://dbpedia.org/resource/Laura_Mancinelli> <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
# Query for Laura Mancinelli's death place
SELECT ?deathPlace WHERE {
  ?person a dbo:Writer ;
          foaf:name ""Laura Mancinelli""@en .
  ?person dbo:placeOfBirth ?birthPlace ; # Ensuring we have the correct person by checking another known property
         dbo:deathPlace ?deathPlace .
}

# Query for the location of the Battle of Marengo
SELECT ?location WHERE {
  ?battle a dbo:MilitaryEngagement ;
          foaf:name ""Battle of Marengo""@en ;
          dbo:place ?location .
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
498,4,train,Give me the band of Malevolent Creation and band of Will Rahmer.,SELECT ?result WHERE { <http://dbpedia.org/resource/Will_Rahmer> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Malevolent_Creation> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
# Query to find members of Malevolent Creation
SELECT ?member WHERE {
  wd:Q123456 dbo:member ?member .
}

# Query to find bands associated with Will Rahmer
SELECT ?band WHERE {
  wd:Q654321 dbo:bandMember ?band .
}
```

Note: Replace `wd:Q123456` with the actual DBpedia resource ID for Malevolent Creation and `wd:Q654321` with the resource ID for Will Rahmer. These IDs can be found by searching DBpedia or using a service like Wikidata to get the correct identifiers.",2,2,3,1,2,2,2,9,0,0,1,0,0.0,0
492,16,train,"Give me the war, that is a military conflict and an event, of the commander in Battle of Verdun.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Battle_of_Verdun> <http://dbpedia.org/ontology/commander> ?v1 . ?v1 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
SELECT ?war WHERE {
  ?battle dbo:commander ?commander .
  ?battle rdfs:label ""Battle of Verdun""@en .
  
  ?commander foaf:name ?name .
  FILTER(CONTAINS(LCASE(?name), ""petain"")) .

  ?commander dbo:militaryConflictOrEvent ?war .
  ?war a dbo:MilitaryConflict ;
      a dbo:Event .
}
```",2,4,3,2,1,3,3,71,0,0,11,0,0.0,0
465,1,train,Give me the administration of Czech Pirate Party.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Czech_Pirate_Party> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?leader WHERE {
  dbr:Czech_Pirate_Party dbo:leader ?leader .
}
```",1,1,2,1,1,2,2,9,0,1,2,0.0,0.0,0
528,0,train,Give me the war of Irene Morales.,SELECT ?result WHERE { <http://dbpedia.org/resource/Irene_Morales> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war WHERE {
  ?person rdfs:label ""Irene Morales""@en .
  OPTIONAL { ?person dbo:spouse ?relatedPerson . }
  OPTIONAL { ?person dbo:child ?relatedPerson . }
  OPTIONAL { ?person dbo:parent ?relatedPerson . }
  ?relatedPerson dbo:participatedIn ?war .
  FILTER (isLiteral(?war) = false)
}
```",1,1,2,1,1,3,3,71,0,0,6,0,0.0,0
487,7,train,Give me the country of the administration of Patricia McCoy.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Patricia_McCoy> . ?v1 <http://dbpedia.org/ontology/country> ?result . },"```sparql
SELECT DISTINCT ?country WHERE {
  ?person foaf:name ""Patricia McCoy""@en .
  ?person dbo:positionHeld ?position .
  ?position dbo:organization ?organization .
  ?organization dbo:country ?country .
}
```",2,2,3,2,1,3,2,20,0,0,1,0,0.0,0
994,12,train,Give me the band member of Don Dokken and associated musical artist of Red Tide (band).,SELECT ?result WHERE { <http://dbpedia.org/resource/Red_Tide_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Don_Dokken> . },"```sparql
# Query to get a member of Don Dokken's band
SELECT ?member WHERE {
  ?band dbo:leadArtist dbr:Don_Dokken ;
        dbo:member ?member .
}

# Query to find an associated artist with Red Tide (band)
SELECT ?associatedArtist WHERE {
  ?band dbr:Red_Tide_(band) ;
        dbo:associatedBand ?associatedArtist .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
465,3,train,"Give me the leader, that is a political party and an organisation, of Chamber of Deputies of the Czech Republic.",SELECT ?result WHERE { <http://dbpedia.org/resource/Chamber_of_Deputies_of_the_Czech_Republic> <http://dbpedia.org/property/leader> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?leader ?party ?organization WHERE {
  ?leader a dbo:Politician ;
          dbo:officeHolderOf dbr:Chamber_of_Deputies_of_the_Czech_Republic ;
          dbo:positionTitle ?title .
  
  FILTER (CONTAINS(LCASE(?title), ""speaker"") || CONTAINS(LCASE(?title), ""deputy speaker""))

  OPTIONAL { ?leader dbo:memberParty ?party . }
  OPTIONAL { ?leader dbo:memberOf ?organization . }

  FILTER EXISTS { ?party a dbo:PoliticalParty } .
  FILTER EXISTS { ?organization a dbo:Organization } .

  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
```",1,3,2,1,1,2,2,9,0,0,5,0,0.0,0
659,4,train,"Give me the force of Arthur Wellesley, 1st Duke of Wellington.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Arthur_Wellesley,_1st_Duke_of_Wellington> . }","```sparql
SELECT ?forceSize WHERE {
  ?battle dbp:commander ?commander .
  ?commander rdfs:label ""Arthur Wellesley, 1st Duke of Wellington""@en .
  ?battle dbp:name ""Battle of Waterloo"" .
  ?battle dbp:armyStrength ?forceSize .
}
```",1,1,2,1,1,3,3,71,0,0,52,0,0.0,0
827,1,train,"Give me the father of William Ernest, Grand Duke of Saxe-Weimar-Eisenach.","SELECT ?result WHERE { <http://dbpedia.org/resource/William_Ernest,_Grand_Duke_of_Saxe-Weimar-Eisenach> <http://dbpedia.org/property/father> ?result . }","```sparql
SELECT ?father WHERE {
  ?person dbo:givenName ""William"" .
  ?person dbo:familyName ""Ernest"" .
  ?person dbo:title ""Grand Duke of Saxe-Weimar-Eisenach""@en .
  ?person dbo:father ?father .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
465,4,train,Give me the death place of Jiřina Štěpničková and administration of Czech Pirate Party.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Czech_Pirate_Party> . <http://dbpedia.org/resource/Jiřina_Štěpničková> <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
# Query to find the death place of Jiřina Štěpničková
SELECT ?deathPlace WHERE {
  dbpedia:Ji%C5%99ina_%C5%A0t%C4%9Bpnickov%C3%A1 dbo:deathPlace ?deathPlace .
}

# Query to find the administration details of the Czech Pirate Party
SELECT ?leader WHERE {
  dbpedia:Czech_Pirate_Party dbo:leader ?leader .
}
```",2,2,3,1,2,2,2,9,0,0,1,0,0.0,0
492,17,train,"Give me the capital, that is a settlement, of the country of Khemis Miliana District.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Khemis_Miliana_District> <http://dbpedia.org/ontology/country> ?v1 . ?v1 <http://dbpedia.org/ontology/capital> ?result . },"```sparql
SELECT ?capital WHERE {
  wd:Q1105010 wdt:P36 ?capital .
  FILTER EXISTS { ?capital wdt:P31/wdt:P279* wd:Q515. }
}
```",2,3,3,2,1,3,3,71,0,0,1,0,0.0,0
427,1,train,Give me the party of Giulio Andreotti.,SELECT ?result WHERE { <http://dbpedia.org/resource/Giulio_Andreotti> <http://dbpedia.org/ontology/party> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?party WHERE {
  dbr:Giulio_Andreotti dbo:partyAffiliation ?party .
}
```",1,1,2,1,1,3,3,71,0,0,5,0,0.0,0
161,12,train,Give me the commander in Biscay Campaign and military force of Spanish Civil War.,SELECT ?result WHERE { <http://dbpedia.org/resource/Biscay_Campaign> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?militaryForce WHERE {
  # Find entities involved in the Biscay Campaign as commanders
  ?campaign dbo:partOf dbr:Spanish_Civil_War ;
            dbo:commander ?commander .
  
  FILTER (str(?campaign) = ""Biscay_Campaign"")

  # Get military force associated with the commander during the Spanish Civil War
  OPTIONAL {
    ?commander dbo:militaryService ?militaryForce .
    ?militaryForce dbo:partOf dbr:Spanish_Civil_War .
  }
}
```",2,2,3,1,2,3,3,71,0,0,3,0,0.0,0
994,13,train,"Give me the associated musical artist of the band member, that is a band and a group and an organisation, of Meshuggah.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Meshuggah> . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?member ?associatedBand WHERE {
  # Find members of Meshuggah
  ?bandMember dbo:memberOf dbr:Meshuggah .
  
  # Check if the member is associated with other bands, groups, or organizations
  ?bandMember dbo:memberOf ?associatedBand .

  FILTER(?associatedBand != dbr:Meshuggah) # Exclude Meshuggah itself

  # Ensure that the associated entity is a band, group, or organization
  ?associatedBand rdf:type/(dbo:Band|dbo:MusicalGroup|dbo:Organization) .
}
```",2,5,3,2,1,3,3,71,0,0,33,0,0.0,0
30,1,train,"Give me the professional in Financier, businessman, vineyard owner, art collector, racehorse owner/breeder.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Financier, businessman, vineyard owner, art collector, racehorse owner/breeder""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?name WHERE {
  ?person a dbo:Person .
  ?person dbo:name ?name .
  FILTER (
    EXISTS { ?person dbo:occupation dbp:financier . }
    && EXISTS { ?person dbo:occupation dbp:businessman . }
    && EXISTS { ?person dbo:occupation dbp:vineyard_owner . }
    && EXISTS { ?person dbo:occupation dbp:art_collector . }
    && EXISTS { ?person dbo:occupation dbp:racehorse_owner_breeder . }
  )
}
ORDER BY ?name
```",1,1,2,1,1,2,2,9,0,0,1,0,0.0,0
427,0,train,Give me the reference to Partito Popolare Italiano.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Partito Popolare Italiano""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?party ?label WHERE {
  VALUES ?name { ""Partito Popolare Italiano""@it }
  
  OPTIONAL {
    ?party rdfs:label ?name .
  }
  
  OPTIONAL {
    ?redirect dbo:wikiPageRedirects ?party .
    ?redirect rdfs:label ?name .
  }

  FILTER (lang(?label) = 'it')
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],it"". }
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
404,1,train,Give me the parent of Prince Ernest Augustus of Hanover (born 1914).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Prince_Ernest_Augustus_of_Hanover_(born_1914)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  VALUES ?person { dbr:Prince_Ernest_Augustus_of_Hanover_(1914) }
  OPTIONAL { ?person dbo:father ?parent . }
  OPTIONAL { ?person dbo:mother ?parent . }
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
659,13,train,"Give me the commander in the war, that is an event and a military conflict, of 1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish).",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/1st_Light_Cavalry_Lancers_Regiment_of_the_Imperial_Guard_(Polish)> <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?event ?commander WHERE {
  ?regiment a dbo:MilitaryUnit ;
            rdfs:label ""1st Light Cavalry Lancers Regiment of the Imperial Guard""@en .
  
  ?event dbo:participatingMilitaryUnit ?regiment ;
         a dbo:MilitaryConflict .

  OPTIONAL { 
    ?event dbo:commander ?commander .
  }
}
```",2,4,3,2,1,3,3,71,0,0,130,0,0.0,0
498,0,train,Give me the band of Malevolent Creation.,SELECT ?result WHERE { <http://dbpedia.org/resource/Malevolent_Creation> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT ?band WHERE {
  ?entity rdfs:label ""Malevolent Creation""@en .
  ?entity dbo:genre ?genre .
  FILTER(CONTAINS(LCASE(?genre), ""death metal""))
  ?entity dbo:band ?band .
}
```",1,1,2,1,1,2,2,9,0,0,8,0,0.0,0
996,10,train,Give me the award of the native of Palestine (region).,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Palestine_(region)> . ?v0 <http://dbpedia.org/property/awards> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?award WHERE {
  ?person a dbo:Person ;
          dbo:birthPlace dbr:Palestine .
  OPTIONAL { ?person dbo:honoraryTitle ?award . }
}
```",2,2,3,2,1,3,2,20,0,1,14,0.0,0.0,0
959,10,train,Give me the manager of 2013 Júbilo Iwata season and member of University of Tsukuba.,SELECT ?result WHERE { <http://dbpedia.org/resource/2013_Júbilo_Iwata_season> <http://dbpedia.org/ontology/manager> ?result . ?result <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/University_of_Tsukuba> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?manager ?name WHERE {
  # Find the manager of Júbilo Iwata in 2013
  ?team dbo:coach ?manager .
  ?manager foaf:name ?name .
  
  FILTER (?team = dbr:Júbilo_Iwata)
  FILTER (YEAR(?startDate) <= 2013 && (YEAR(?endDate) >= 2013 || !bound(?endDate)))
  
  # Check if the manager is an alumnus of University of Tsukuba
  ?manager dbo:almaMater dbr:University_of_Tsukuba .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
92,13,train,"Give me the associated musical artist of the person born, that is an artist, as Jim Sheppard.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/property/birthName> ""Jim Sheppard""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artist WHERE {
  ?person a dbo:Artist ;
          foaf:name ""Jim Sheppard""@en .
  
  OPTIONAL { 
    ?person dbo:associatedBand ?band .
    ?band dbo:leadArtist ?artist .
  }
  
  FILTER EXISTS { ?person dbo:birthPlace ?place } # Ensures the person is an artist with a birth place
}
```",2,3,3,2,1,3,3,71,0,0,2,0,0.0,0
197,5,train,Give me the birthplace of the member of FC Politehnica Timișoara.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/FC_Politehnica_Timișoara> . ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?player ?birthPlace WHERE {
  ?team rdf:type dbo:FootballClub .
  ?team rdfs:label ""FC Politehnica Timișoara""@en .
  
  ?player dbo:member ?team .
  ?player dbo:birthPlace ?birthPlace .
}
```",2,2,3,2,1,2,2,9,0,0,171,0,0.0,0
981,1,train,Give me the birth place of Novia Indriani Mamuaja.,SELECT ?result WHERE { <http://dbpedia.org/resource/Novia_Indriani_Mamuaja> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?birthPlace WHERE {
  ?person a dbo:Person ;
          foaf:name ""Novia Indriani Mamuaja""@en .
  ?person dbo:birthPlace ?birthPlace .
}
```",1,1,2,1,1,3,2,20,0,0,2,0,0.0,0
534,6,train,Give me the headquarter of Royal Dublin Society and birth place of Garret FitzGerald.,SELECT ?result WHERE { <http://dbpedia.org/resource/Garret_FitzGerald> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Royal_Dublin_Society> <http://dbpedia.org/ontology/headquarter> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?headquarters ?birthPlace WHERE {
  # Query for the headquarters of Royal Dublin Society
  dbr:Royal_Dublin_Society dbo:headquarters ?headquarters .
  
  # Query for the birthplace of Garret FitzGerald
  dbr:Garret_FitzGerald dbo:birthPlace ?birthPlace .
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
783,0,train,Give me the associated musical artist of Appietus.,SELECT ?result WHERE { <http://dbpedia.org/resource/Appietus> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artist WHERE {
  dbr:Appietus dbo:associatedMusicalArtist ?artist .
}
```",1,1,2,1,1,3,2,20,15,0,0,1.0,1.0,1.0
963,10,train,"Give me the ruling party, that is a political party, in the location for 21205.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/leaderParty> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v0 <http://dbpedia.org/ontology/postalCode> ""21205"" . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?mayorName ?party WHERE {
  # Find Baltimore based on postal code
  ?location a dbo:Place ;
            dbo:postalCode ""21205""^^xsd:string .
  
  # Get the mayor of Baltimore
  ?location dbo:mayor ?mayor .

  # Retrieve the name and party affiliation of the mayor
  ?mayor foaf:name ?mayorName ;
         dbp:partyAffiliation ?party .
}
```",2,3,3,2,1,3,2,20,0,0,1,0,0.0,0
427,15,train,Give me the name of the party of Michele Pinto.,SELECT ?result WHERE { <http://dbpedia.org/resource/Michele_Pinto> <http://dbpedia.org/ontology/party> ?v1 . ?v1 <http://xmlns.com/foaf/0.1/name> ?result . },"```sparql
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?partyName WHERE {
  ?person foaf:name ""Michele Pinto""@en .
  ?person dbp:party ?party .
  ?party rdfs:label ?partyName .
  FILTER (lang(?partyName) = 'en')
}
```",2,2,3,2,1,3,3,71,0,2,4,0.0,0.0,0
981,0,train,Give me the entity in Indonesia.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Indonesia> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?entity ?label WHERE {
  ?entity dbo:country dbr:Indonesia .
  OPTIONAL { ?entity rdfs:label ?label FILTER (lang(?label) = 'en') }
}
ORDER BY ?label
LIMIT 100
```",1,1,2,1,1,3,2,20,100,100,2849,0.5,0.0339097999321804,0.06351222610352493
360,6,train,Give me the writer of The Roaring Silence and native of Johannesburg.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Johannesburg> . <http://dbpedia.org/resource/The_Roaring_Silence> <http://dbpedia.org/property/writer> ?result . },"```sparql
SELECT ?author ?birthPlace WHERE {
  ?book dcterms:title ""The Roaring Silence"" .
  ?book dbo:author ?author .
  OPTIONAL { ?author dbo:birthPlace ?birthPlace . }
  FILTER (CONTAINS(LCASE(STR(?birthPlace)), ""johannesburg""))
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
492,6,train,"Give me the war, that is a military conflict and an event, of Frédéric-Georges Herr.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Frédéric-Georges_Herr> <http://dbpedia.org/ontology/battle> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war WHERE {
  ?event dbo:agent dbr:Frédéric-Georges_Herr .
  ?event a dbo:MilitaryConflict .
  BIND(?event AS ?war)
}
```",1,3,2,1,1,3,3,71,0,0,1,0,0.0,0
712,0,train,Give me the capital of South Russia (1919–1920).,SELECT ?result WHERE { <http://dbpedia.org/resource/South_Russia_(1919–1920)> <http://dbpedia.org/ontology/capital> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?capital WHERE {
  ?region a dbo:AdministrativeRegion ;
          dbo:country dbr:Ukraine ;
          rdfs:label ?name .
  
  FILTER(CONTAINS(LCASE(?name), ""south russia"") && CONTAINS(LCASE(STR(?region)), ""1919-1920""))
  
  OPTIONAL { ?region dbo:capital ?capital }
}
```",1,1,2,1,1,3,2,20,0,0,3,0,0.0,0
392,4,train,"Give me the time zone, that is a sports event, of Aguilar de Segarra.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsEvent>. <http://dbpedia.org/resource/Aguilar_de_Segarra> <http://dbpedia.org/ontology/timeZone> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?event ?timeZone WHERE {
  # Find sports events related to Aguilar de Segarra
  ?location rdfs:label ""Aguilar de Segarra""@en .
  OPTIONAL { ?location dbo:locatedIn dbr:Catalonia . }
  ?event dbo:location ?location ;
         a dbo:SportEvent .

  # Get the time zone of the location or event
  OPTIONAL {
    ?location dbp:timeZone ?timeZone .
  }

  FILTER (lang(?event) = 'en')
}
```",1,2,2,1,1,2,3,28,0,0,1,0,0.0,0
617,9,train,Give me the spouse of Laodice IV and child of Antiochus III the Great.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Antiochus_III_the_Great> . <http://dbpedia.org/resource/Laodice_IV> <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?spouse WHERE {
  ?laodiceIV a dbo:Person ;
             rdfs:label ""Laodice IV""@en .
  
  ?laodiceIV dbo:spouse ?spouse .

  ?antiochusIII a dbo:Person ;
                rdfs:label ""Antiochus III the Great""@en .

  ?spouse dbo:childOf ?antiochusIII .
}
```",2,2,3,1,2,3,3,71,0,0,3,0,0.0,0
378,6,train,Who is the commander in Peninsular War?,SELECT ?result WHERE { <http://dbpedia.org/resource/Peninsular_War> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?name WHERE {
  ?event dbo:wikiPageRedirects dbr:Peninsular_War .
  ?event dbo:participatedInMilitaryConflict ?war .
  ?war rdfs:label ""Peninsular War""@en .
  
  ?commander dbo:role ?role .
  ?role rdfs:label ?roleLabel .
  FILTER(CONTAINS(LCASE(?roleLabel), ""commander"") || CONTAINS(LCASE(?roleLabel), ""general"")) .

  OPTIONAL { ?commander foaf:name ?name . }
  FILTER(!isBlank(?commander))
}
ORDER BY ?name
```",1,1,2,1,1,3,3,71,0,0,37,0,0.0,0
281,4,train,Who is the awardee of Knight Grand Cross of the Order of the Bath?,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_the_Bath> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name WHERE {
  ?person dbo:award dbr:Knight_Grand_Cross_of_the_Order_of_the_Bath .
  ?person rdfs:label ?name .
  FILTER (LANG(?name) = 'en')
}
```",1,1,2,1,1,3,3,71,544,570,14,0.4883303411131059,0.974910394265233,0.6507177033492823
959,8,train,Give me the team of Takashi Sekizuka.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Takashi_Sekizuka> . },"```sparql
PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?teamName WHERE {
  ?person a dbpedia-owl:Person ;
          foaf:name ""Takashi Sekizuka""@en .
  OPTIONAL { ?person dbp:team ?team . }
  ?team rdfs:label ?teamName .
  FILTER (lang(?teamName) = 'en')
}
```",1,1,2,1,1,3,3,71,0,0,10,0,0.0,0
547,7,train,Give me the award of Gerald Graham.,SELECT ?result WHERE { <http://dbpedia.org/resource/Gerald_Graham> <http://dbpedia.org/property/awards> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award WHERE {
  ?person rdfs:label ""Gerald Graham""@en .
  ?person a dbo:Person .
  ?person dbo:award ?award .
}
```",1,1,2,1,1,3,3,71,5,0,0,1.0,1.0,1.0
838,2,train,"Give me the band, that is a band and a group, of Žika Jelić.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Žika_Jelić> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?bandLabel WHERE {
  ?person foaf:name ""Žika Jelić""@sr .
  ?person dbo:member ?group .
  ?group rdfs:label ?bandLabel .
  FILTER(LANG(?bandLabel) = 'en')
}
```",1,3,2,1,1,3,2,20,0,0,1,0,0.0,0
378,0,train,Give me the war of Carl Pontus Gahn.,SELECT ?result WHERE { <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?war WHERE {
  ?person rdfs:label ""Carl Pontus Gahn""@en .
  OPTIONAL { ?person dbo:associatedWith ?war . }
  OPTIONAL { ?person dbo:participatedIn ?war . }
  FILTER (isLiteral(?war) = false)
}
```",1,1,2,1,1,3,3,71,0,0,12,0,0.0,0
547,8,train,Give me the awardee of Knight Grand Cross of the Order of St Michael and St George.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_St_Michael_and_St_George> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person dbo:award dbr:Knight_Grand_Cross_of_the_Order_of_St_Michael_and_St_George .
}
```",1,1,2,1,1,3,3,71,59,3,2,0.9516129032258065,0.9672131147540983,0.959349593495935
485,3,train,"Give me the region, that is a country, of Western European Time.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Western_European_Time> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?country WHERE {
  ?timeZone a dbo:TimeZone ;
            dbo:hasTimezoneName ?tzName .
  
  FILTER regex(?tzName, ""Western European Time"", ""i"")
  
  ?location dbo:timezone ?timeZone ;
            a dbo:Country .

  BIND(str(?location) AS ?country)
}
```",1,2,2,1,1,2,3,28,0,0,6,0,0.0,0
778,6,train,Give me the entity in United States and author of Chroot.,SELECT ?result WHERE { <http://dbpedia.org/resource/Chroot> <http://dbpedia.org/ontology/author> ?result . ?result <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/United_States> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?description WHERE {
  ?person a dbo:Person ;
          dbo:nationality dbr:United_States ;
          foaf:name ""Dennis Ritchie""@en .
  
  OPTIONAL { 
    ?person dbo:wikiPageWikiLink dbr:Chroot .
  }
  
  ?person dbo:description ?description .
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
617,5,train,"Give me the father, that is a royalty, of Richeza of Poland, Queen of Hungary.","SELECT ?result WHERE { <http://dbpedia.org/resource/Richeza_of_Poland,_Queen_of_Hungary> <http://dbpedia.org/property/father> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
SELECT ?father ?title WHERE {
  wd:Q123456 wdt:P22 ?father .
  OPTIONAL { ?father wdt:P39 ?title . }
  FILTER(CONTAINS(LCASE(STR(?title)), ""king"") || CONTAINS(LCASE(STR(?title)), ""duke""))
}
```

Note: Replace `wd:Q123456` with the actual DBpedia entity ID for Richeza of Poland, Queen of Hungary. You can find this ID by searching for her in DBpedia or using a SPARQL query to identify it.",1,2,2,1,1,3,2,20,0,0,1,0,0.0,0
959,5,train,"Who is the leader, that is a politician, of 2010 Japanese House of Councillors election?",SELECT ?result WHERE { <http://dbpedia.org/resource/2010_Japanese_House_of_Councillors_election> <http://dbpedia.org/property/leader> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?leader WHERE {
    ?party dbo:leader ?leader .
    ?party rdfs:label ""Democratic Party of Japan""@en .
    FILTER EXISTS { ?leader a dbo:Politician . }
}
```",1,2,2,1,1,3,3,71,0,1,9,0.0,0.0,0
30,2,train,Give me the birthplace of Silvia Cohen.,SELECT ?result WHERE { <http://dbpedia.org/resource/Silvia_Cohen> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthPlace WHERE {
  ?person a dbo:Person ;
          foaf:name ""Silvia Cohen""@en .
  ?person dbo:birthPlace ?birthPlace .
}
```",1,1,2,1,1,2,2,9,2,0,0,1.0,1.0,1.0
77,3,train,Who is the awardee of Golden Weapon for Bravery?,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Golden_Weapon_for_Bravery> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?awardee WHERE {
  ?award a dbo:Award ;
        rdfs:label ?awardLabel .
  FILTER(CONTAINS(LCASE(?awardLabel), ""golden weapon for bravery""))
  OPTIONAL { ?award dbo:recipient ?awardee . }
}
```",1,1,2,1,1,3,2,20,0,0,10,0,0.0,0
232,16,train,"Give me the claim to fame, that is a film and a military conflict, of the professional in Actor, narrator and producer.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/occupation> ""Actor, narrator and producer""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/knownFor> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?film ?conflict WHERE {
  # Identify Morgan Freeman as an actor, narrator, and producer
  ?person a dbo:Actor ;
          dbo:narratorOf ?narration ;
          dbo:producer ?production .
  
  FILTER(?person = dbr:Morgan_Freeman)

  # Find the film ""The Shawshank Redemption""
  OPTIONAL {
    ?film a dbo:Film ;
         rdfs:label ?filmLabel .
    FILTER(CONTAINS(LCASE(STR(?filmLabel)), ""the shawshank redemption""))
    ?production dbo:workProduct ?film .
  }

  # Find the military conflict World War II
  OPTIONAL {
    ?conflict a dbo:MilitaryConflict ;
              rdfs:label ?conflictLabel .
    FILTER(CONTAINS(LCASE(STR(?conflictLabel)), ""world war ii""))
    ?narration dbo:narrates ?conflict .
  }
}
```",2,4,3,2,1,3,3,71,0,0,1,0,0.0,0
281,7,train,"Who is the professional, that is an office holder and a politician, in New Zealand Army?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/New_Zealand_Army> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name WHERE {
  ?person a dbo:Person .
  ?person dbo:member dbr:New_Zealand_Army .
  OPTIONAL { ?person dbo:officeHolder ?office . }
  OPTIONAL { ?person dbo:partyMember ?party . }
  FILTER EXISTS { ?person dbo:officeHolder ?office } || EXISTS { ?person dbo:partyMember ?party }
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
```",1,3,2,1,1,3,3,71,0,0,1,0,0.0,0
747,17,train,Who is the person born as the persona of Shèna?,SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Shèna> <http://xmlns.com/foaf/0.1/givenName> ?v1 . },"```sparql
SELECT ?person ?birthName WHERE {
  ?person foaf:givenName ""Shèna"" .
  OPTIONAL { ?person schema:name ?name . FILTER regex(?name, ""Shèna"", ""i"") }
}
```",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
783,8,train,"Give me the band member of the person born, that is an artist and a musical artist, as Priscilla Opoku-Kwarteng.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://dbpedia.org/property/birthName> ""Priscilla Opoku-Kwarteng""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band WHERE {
  ?person a dbo:Artist ;
          a dbo:MusicalArtist ;
          foaf:name ""Priscilla Opoku-Kwarteng"" .
  
  ?person dbo:bandMemberOf ?band .
}
```",2,4,3,2,1,3,2,20,0,0,7,0,0.0,0
378,9,train,Give me the war of Joaquín Blake and war of Carl Pontus Gahn.,SELECT ?result WHERE { <http://dbpedia.org/resource/Joaquín_Blake> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war ?description WHERE {
  # Wars involving Joaquin Blake
  { 
    dbr:Joaquín_Blake dbo:participatedIn ?war .
    ?war rdfs:label ?label ;
         dbo:description ?description .
    FILTER (lang(?label) = 'en' && lang(?description) = 'en')
  }
  
  UNION
  
  # Wars involving Sweden during Carl Pontus Gahn's lifetime
  { 
    dbr:Sweden dbo:participatedIn ?war .
    ?war rdfs:label ?label ;
         dbo:description ?description .
    FILTER (lang(?label) = 'en' && lang(?description) = 'en')
  }
}
ORDER BY ?label
```",2,2,3,1,2,3,3,71,0,0,2,0,0.0,0
391,13,train,"Give me the actor of the claim to fame, that is a work, of Michael Ballhaus.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Michael_Ballhaus> <http://dbpedia.org/ontology/knownFor> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  # Identify a notable work of Michael Ballhaus
  dbr:Michael_Ballhaus dbo:notableWork dbr:Goodfellas .
  
  # Find the main actors associated with that work
  dbr:Goodfellas dbo:starring ?actor .
}
```",2,3,3,2,1,3,3,71,0,0,20,0,0.0,0
534,9,train,"Who is the child, that is a politician and an office holder, of the native, that is a politician, of Essex?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Essex> . ?v0 <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child WHERE {
  ?person dbo:nationality dbr:United_Kingdom ;
          dbo:birthPlace dbr:Essex ;
          dbo:occupation dbr:Politician .
  
  ?person dbo:child ?child .

  ?child a dbo:Person ;
         dbo:occupation dbr:Politician ;
         (dbo:officeHolder|dbp:holdsOffice) ?office .
}
```",2,5,3,2,1,3,2,20,0,0,7,0,0.0,0
392,8,train,"Give me the entity in the region, that is a country, of Central European Time.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?country WHERE {
  ?country a dbo:Country .
  ?country dbo:timeZone dbr:Central_European_Time .
}
```",2,3,3,2,1,2,3,28,29,65,173232,0.30851063829787234,0.00016737754024275515,0.00033457356292001964
378,16,train,"Who is the commander in the reference, that is a military conflict, to Peninsular War?","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://xmlns.com/foaf/0.1/name> ""Peninsular War""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?name WHERE {
  # Identify the Peninsular War as a military conflict
  dbr:Peninsular_War dbo:partOf ?conflict .
  
  # Find individuals who were commanders in this conflict
  ?conflict dbo:commander ?commander .

  # Retrieve names of these commanders
  ?commander rdfs:label ?name .
  
  FILTER (LANG(?name) = 'en')
}
```",2,3,3,2,1,3,3,71,0,0,37,0,0.0,0
435,0,train,Give me the territory administered from Reykjavík.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Reykjavík> . },"```sparql
SELECT ?territory WHERE {
  ?city rdfs:label ""Reykjavík""@en .
  OPTIONAL { ?city dbo:administrativeCapital ?territory . }
  FILTER NOT EXISTS { ?city dbo:capital ?country } # To exclude if it's a national capital, focusing on administrative territories
}
```",1,1,2,1,1,2,3,28,0,0,2,0,0.0,0
251,10,train,"Give me the administration of the ruling party, that is a political party and an organisation, in Sicily.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/leaderParty> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Sicily> <http://dbpedia.org/property/leaderParty> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?party ?administration WHERE {
  ?party a dbo:PoliticalParty ;
         dbo:country dbr:Sicily ;
         dbo:organizationType dbr:Organization .
  
  OPTIONAL { 
    ?party dbo:leader ?administration .
  }
}
```",2,4,3,2,1,2,3,28,0,0,5,0,0.0,0
294,1,train,Give me the resting place of Edwin A. Keeble.,SELECT ?result WHERE { <http://dbpedia.org/resource/Edwin_A._Keeble> <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?burialPlace WHERE {
  ?person a dbo:Person ;
          foaf:name ""Edwin A. Keeble""@en .
  OPTIONAL { ?person dbo:deathPlace ?burialPlace . }
}
```",1,1,2,1,1,2,3,28,0,1,1,0.0,0.0,0
392,2,train,Give me the province of Schio.,SELECT ?result WHERE { <http://dbpedia.org/resource/Schio> <http://dbpedia.org/ontology/province> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?province WHERE {
  ?schio a dbo:Settlement .
  ?schio rdfs:label ""Schio""@en .
  ?schio dbo:country dbr:Italy .
  ?schio dbo:administrativeUnit ?province .
}
```",1,1,2,1,1,2,3,28,0,0,1,0,0.0,0
994,10,train,Give me the band member of Don Dokken and associated musical artist of S.A. Slayer.,SELECT ?result WHERE { <http://dbpedia.org/resource/S.A._Slayer> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Don_Dokken> . },"```sparql
# Query for a band member of Don Dokken
SELECT ?member WHERE {
  ?band dbo:leadArtist dbr:Don_Dokken ;
        dbo:bandMember ?member .
}

UNION

# Query for an artist associated with S.A. Slayer (Slayer)
SELECT ?artist WHERE {
  ?album dbo:performer dbr:Slayer ;
         rdfs:label ""Reign in Blood""@en .
  ?album dbo:associatedMusicalArtist ?artist .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
528,9,train,Give me the war of Orozimbo Barbosa and war of Irene Morales.,SELECT ?result WHERE { <http://dbpedia.org/resource/Orozimbo_Barbosa> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Irene_Morales> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war ?warLabel WHERE {
  # Query for Orozimbo Barbosa's associated war
  OPTIONAL {
    ?person rdfs:label ""Orozimbo Barbosa""@en.
    ?person dbo:nationality dbr:Brazil.
    ?person dbo:occupation dbr:Military_person.
    ?person dbo:participatedIn ?war.
    SERVICE <http://dbpedia.org/sparql> {
      ?war rdfs:label ?warLabel.
    }
  }

  # Query for Irene Morales' associated war
  OPTIONAL {
    ?person rdfs:label ""Irene Morales""@en.
    ?person dbo:occupation dbr:Military_person.
    ?person dbo:participatedIn ?war.
    SERVICE <http://dbpedia.org/sparql> {
      ?war rdfs:label ?warLabel.
    }
  }

  FILTER (lang(?warLabel) = 'en')
}
```",2,2,3,1,2,3,3,71,0,0,2,0,0.0,0
994,17,train,"Who is the person born, that is a musical artist, as the persona of Don Dokken?",SELECT ?result WHERE { <http://dbpedia.org/resource/Don_Dokken> <http://xmlns.com/foaf/0.1/givenName> ?v0 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/birthName> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person WHERE {
  ?person a dbo:MusicalArtist .
  ?person foaf:surname ""Dokken"" .
  ?person foaf:givenName ""Don"" .
}
```",2,3,3,2,1,3,3,71,0,0,1,0,0.0,0
488,0,train,Give me the birth place of Enomoto Takeaki.,SELECT ?result WHERE { <http://dbpedia.org/resource/Enomoto_Takeaki> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlaceLabel WHERE {
  ?person rdfs:label ""Enomoto Takeaki""@en .
  ?person dbo:birthPlace ?birthPlace .
  ?birthPlace rdfs:label ?birthPlaceLabel .
  FILTER(LANG(?birthPlaceLabel) = 'en')
}
```",1,1,2,1,1,3,3,71,0,2,2,0.0,0.0,0
391,8,train,"Give me the movie, that is a movie and a work and a television show, with Roz Ryan.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Roz_Ryan> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?movie WHERE {
  ?movie a dbo:Film .
  ?movie a dbo:Work .
  ?movie a dbo:TelevisionShow .

  ?movie dbo:starring dbr:Roz_Ryan .
}
```",1,4,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
294,11,train,"Give me the entity in the birth place, that is a settlement, of Marion James.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/location> ?v1 . <http://dbpedia.org/resource/Marion_James> <http://dbpedia.org/ontology/birthPlace> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlaceEntity WHERE {
  ?person a dbo:Person ;
          foaf:name ""Marion James""@en .
  ?person dbo:birthPlace ?birthPlaceEntity .
  ?birthPlaceEntity a dbo:Settlement .
}
```",2,3,3,2,1,2,3,28,0,1,340,0.0,0.0,0
92,1,train,Give me the associated musical artist of Jim Sheppard.,SELECT ?result WHERE { <http://dbpedia.org/resource/Jim_Sheppard> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?band WHERE {
  ?person a dbo:MusicalArtist ;
          foaf:name ""Jim Sheppard""@en .
  OPTIONAL { ?person dbo:associatedBand ?band . }
  OPTIONAL { ?person dbo:member ?band . }
}
```",1,1,2,1,1,3,3,71,2,0,0,1.0,1.0,1.0
92,10,train,Give me the band of Joseph Michael and band member of Nevermore.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Joseph_Michael> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Nevermore> . },"```sparql
# Query to find the band associated with Joseph Michael
SELECT ?band WHERE {
  ?person foaf:name ""Joseph Michael""@en .
  ?person dbo:associatedBand ?band .
}

UNION

# Query to find a member of the band Nevermore
SELECT ?member WHERE {
  ?band foaf:name ""Nevermore""@en .
  ?band dbo:member ?member .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
392,1,train,Give me the region of Central European Time.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Central_European_Time> . },"```sparql
PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?region WHERE {
  ?timeZone a dbpedia-owl:TimeZone ;
            rdfs:label ""Central European Time""@en .
  
  OPTIONAL { ?timeZone dbo:country ?country . }
  OPTIONAL { ?timeZone dbo:region ?region . }

  FILTER (lang(?region) = 'en' || lang(?region) = '')
}
```",1,1,2,1,1,2,3,28,0,0,49990,0,0.0,0
281,11,train,Give me the war of the awardee of Knight Grand Cross of the Order of the Bath.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_the_Bath> . ?v0 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?war WHERE {
  ?person dbo:orderOfMerit dbp:Order_of_the_Bath .
  ?person dbo:rank ""Knight Grand Cross"" .
  OPTIONAL { 
    ?person dbo:militaryConflict ?war .
  }
}
```",2,2,3,2,1,3,3,71,0,0,450,0,0.0,0
427,16,train,Who is the father of the alumnus of Massachusetts Institute of Technology?,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Massachusetts_Institute_of_Technology> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?alumnus ?father WHERE {
  ?alumnus dbo:almaMater dbr:Massachusetts_Institute_of_Technology .
  OPTIONAL { ?alumnus foaf:parent ?father . }
}
```",2,2,3,2,1,3,3,71,0,1559,12,0.0,0.0,0
617,0,train,Give me the child of Antiochus III the Great.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Antiochus_III_the_Great> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?child WHERE {
  ?person a dbo:Person ;
          foaf:name ""Antiochus III""@en .
  ?person dbo:child ?child .
}
```",1,1,2,1,1,3,3,71,4,4,1,0.5,0.8,0.6153846153846154
161,8,train,"Give me the force, that is an event, of Emilio Mola.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Emilio_Mola> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?event ?force WHERE {
  dbr:Emilio_Mola dbo:associatedEvent ?event .
  ?event dbo:agent ?force .
}
```",1,2,2,1,1,3,3,71,0,0,10,0,0.0,0
838,4,train,"Give me the reference, that is a group and an organisation, to YU Grupa.","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""YU Grupa""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?group WHERE {
  ?entity rdfs:label ""YU Grupa""@en .
  ?association dbo:associatedBand ?group .
  ?group rdf:type dbo:Band ;
         rdf:type dbo:Organization .
}
```",1,3,2,1,1,3,2,20,0,0,1,0,0.0,0
617,3,train,"Who is the successor, that is a royalty, of Antiochus II Theos?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Antiochus_II_Theos> <http://dbpedia.org/ontology/successor> ?result . },"```sparql
SELECT ?successor WHERE {
  dbpedia:Antiochus_II_the_Soter dbo:successor ?successor .
  ?successor a dbo:Monarch .
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
356,4,train,"Give me the birth place, that is English and a settlement, of Gary Williams (footballer, born 1960).","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. <http://dbpedia.org/resource/Gary_Williams_(footballer,_born_1960)> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace WHERE {
  VALUES ?garry_williams { dbr:Gary_Williams_(footballer,_born_1960) }
  
  ?garry_williams dbo:birthPlace ?birthPlace .
  ?birthPlace a dbo:PopulatedPlace ;
              dbo:country dbr:England .
}
```",1,3,2,1,1,3,2,20,0,0,1,0,0.0,0
55,5,train,"Give me the reference, that is a band, to Newsted.","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Newsted""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band WHERE {
  ?person a dbo:Musician ;
          foaf:name ""Jason Newsted""@en .
  ?band dbo:musicalArtist ?person ;
        foaf:name ?bandName .
  FILTER (CONTAINS(LCASE(?bandName), LCASE(""metallica"")))
}
```",1,2,2,1,1,2,3,28,0,0,1,0,0.0,0
915,2,train,Give me the director of Pipe Dreams (1976 film).,SELECT ?result WHERE { <http://dbpedia.org/resource/Pipe_Dreams_(1976_film)> <http://dbpedia.org/ontology/director> ?result . },"```sparql
SELECT ?director WHERE {
  ?film dbo:title ""Pipe Dreams""@en .
  ?film dbo:releaseDate ?date .
  FILTER(YEAR(?date) = 1976)
  ?film dbo:director ?director .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
488,3,train,"Give me the war, that is a military conflict and an event and a societal event, of Saitō Hajime.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Saitō_Hajime> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war WHERE {
  ?saito a dbo:Person ;
         foaf:name ""Saitō Hajime""@en .
  
  ?saito dbo:participatedIn ?event .
  ?event rdf:type dbo:MilitaryConflict ;
         dbo:wikiPageRedirects dbr:Boshin_War .

  FILTER NOT EXISTS {
    ?event rdf:type ?type .
    FILTER (?type != dbo:Event && ?type != dbo:SocietalEvent)
  }
}
```",1,4,2,1,1,3,3,71,0,0,4,0,0.0,0
9,0,train,"Give me the alma mater of John Alderdice, Baron Alderdice.","SELECT ?result WHERE { <http://dbpedia.org/resource/John_Alderdice,_Baron_Alderdice> <http://dbpedia.org/ontology/almaMater> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?almaMater WHERE {
  dbr:John_Alderdice_Baron_Alderdice dbo:almaMater ?almaMater .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
435,11,train,Give me the work of the author of Iceland.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/author> ?v1 . <http://dbpedia.org/resource/Iceland> <http://dbpedia.org/property/author> ?v1 . },"```sparql
SELECT ?work WHERE {
  wd:Q1234 dbo:literaryWork ?work .
}
```

Note: In this SPARQL query, `wd:Q1234` should be replaced with the actual DBpedia resource identifier for Halldór Laxness. You can find this by searching for ""Halldór Laxness"" in DBpedia to get the correct Q-number.",2,2,3,2,1,2,3,28,0,0,1,0,0.0,0
294,8,train,"Give me the resting place of the awardee, that is a politician, of Distinguished Service Medal (U.S. Army).",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Distinguished_Service_Medal_(U.S._Army)> . ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?politician ?restingPlace WHERE {
  ?politician a dbo:Politician ;
             dbo:award dbr:Distinguished_Service_Medal_(U.S._Army) .
  
  OPTIONAL { 
    ?politician dbo:placeOfBurial ?restingPlace .
  }
}
```",2,3,3,2,1,2,3,28,0,0,10,0,0.0,0
528,15,train,"Give me the military force of the entity, that is a societal event, in Chile.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Chile> . ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce WHERE {
  # Identify the coup as a societal event in Chile
  dbr:Coup_d'état_of_1973_in_Chile dbo:location dbr:Chile .
  
  # Find military forces involved in this event
  ?event dbo:militaryForce ?militaryForce .
  
  FILTER(?event = dbr:Coup_d'état_of_1973_in_Chile)
}
```",2,3,3,2,1,3,3,71,0,0,91,0,0.0,0
696,0,train,Give me the birth place of Tim Brennan.,SELECT ?result WHERE { <http://dbpedia.org/resource/Tim_Brennan> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace WHERE {
  ?person dbo:birthName ""Tim Brennan""@en.
  ?person dbo:birthPlace ?birthPlace.
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
996,1,train,Give me the entity in France.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/France> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity ?entityLabel WHERE {
  ?entity dbo:country dbr:France .
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
LIMIT 10
```",1,1,2,1,1,3,2,20,0,0,292,0,0.0,0
115,5,train,Give me the alma mater of the alumnus of National University of San Marcos.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/National_University_of_San_Marcos> . ?v0 <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?person ?previousAlmaMater WHERE {
  ?person dbo:almaMater dbpedia-es:Universidad_Nacional_Mayor_de_San_Marcos .
  ?person dbo:almaMater ?previousAlmaMater .
}
```",2,2,3,2,1,2,2,9,0,0,49,0,0.0,0
487,8,train,"Give me the administration of the person born, that is a soccer player, as Philip Brian Scott.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/governor> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v0 <http://dbpedia.org/property/birthName> ""Philip Brian Scott""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace ?adminName WHERE {
  ?person a dbo:SoccerPlayer ;
          foaf:name ""Philip Brian Scott""@en .
  ?person dbo:birthPlace ?birthPlace .
  OPTIONAL { 
    ?birthPlace dbo:administrativeRegion ?adminRegion .
    ?adminRegion rdfs:label ?adminName .
    FILTER (LANG(?adminName) = 'en')
  }
}
```",2,3,3,2,1,3,2,20,0,0,14,0,0.0,0
179,9,train,"Give me the birth name of the child, that is a royalty, of Nakkhatra Mangala.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Nakkhatra_Mangala> . ?v0 <http://dbpedia.org/property/birthName> ?result . },"```sparql
SELECT ?childBirthName WHERE {
  ?person dbo:spouse dbr:King_Bhumibol_Adulyadej ;
          foaf:name ""Nakkhatra Mangala""@en .
  ?person dbo:child ?child .
  ?child dbo:title ?title .
  FILTER(CONTAINS(LCASE(?title), ""princess"") || CONTAINS(LCASE(?title), ""royalty"")) .
  ?child foaf:name ?childName .
  OPTIONAL { ?child foaf:name ?childBirthName . }
  FILTER(STRSTARTS(LCASE(?childName), ""maha chakri sirindhorn""))
}
```",2,3,3,2,1,3,2,20,0,0,1,0,0.0,0
767,3,train,Give me the writer of Where It's At (Dustin Lynch album).,SELECT ?result WHERE { <http://dbpedia.org/resource/Where_It's_At_(Dustin_Lynch_album)> <http://dbpedia.org/property/writer> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?writer WHERE {
  ?album a dbo:MusicAlbum ;
         dbo:artist dbr:Dustin_Lynch ;
         dbo:title ""Where It's At"" .
  
  ?track dbo:fromAlbum ?album ;
         rdfs:label ?trackLabel .

  FILTER (CONTAINS(LCASE(?trackLabel), LCASE(""where it's at"")))

  OPTIONAL {
    ?track dbo:lyricist ?writer .
  }
}
```",1,1,2,1,1,3,3,71,0,0,35,0,0.0,0
427,12,train,Give me the party of Giulio Andreotti and party of Romano Prodi.,SELECT ?result WHERE { <http://dbpedia.org/resource/Giulio_Andreotti> <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/ontology/party> ?result . },"```sparql
# Query to get the party of Giulio Andreotti
SELECT ?party WHERE {
  dbpedia:Giulio_Andreotti dbo:partyAffiliation ?party .
}

UNION

# Query to get the party of Romano Prodi
SELECT ?party WHERE {
  dbpedia:Romano_Prodi dbo:partyAffiliation ?party .
}
```",2,2,3,1,2,3,3,71,0,0,3,0,0.0,0
617,2,train,Give me the parent of Mlada (abbess).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Mlada_(abbess)> . },"```sparql
SELECT ?parent WHERE {
  ?mlada dbo:wikiPageRedirects db:Mlada_(abbess) .
  ?mlada dbo:member ?convent .
  ?convent dbo:parentOrganization ?parent .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
360,5,train,Give me the author of Blinded by the Light.,SELECT ?result WHERE { <http://dbpedia.org/resource/Blinded_by_the_Light> <http://dbpedia.org/property/author> ?result . },"```sparql
SELECT ?author WHERE {
  ?song dcterms:title ""Blinded by the Light""@en .
  ?song dbo:composer ?person .
  ?person foaf:name ?author .
}
```",1,1,2,1,1,2,3,28,0,0,1,0,0.0,0
161,9,train,Give me the military force of Rif War and military force of Spanish Civil War.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Rif_War> . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?rifWarForce ?rifWarOpponent ?civilWarSide1 ?civilWarSide2 WHERE {
  # Rif War forces
  OPTIONAL { 
    ?rifWarEvent dbo:participatedIn [
      a dbo:MilitaryConflict ;
      dbo:participant dbr:Spanish_Army .
    ].
    ?rifWarEvent dbo:opponent [
      a dbo:MilitaryGroup ;
      rdfs:label ?rifWarOpponent .
    ].
  }
  
  OPTIONAL {
    ?rifWarEvent dbo:participatedIn [
      a dbo:MilitaryConflict ;
      dbo:participant dbr:French_Foreign_Legion .
    ].
  }

  # Spanish Civil War forces
  OPTIONAL { 
    ?civilWarEvent dbo:participatedIn [
      a dbo:MilitaryConflict ;
      dbo:participant dbr:Spanish_Republicans .
    ].
    BIND(""Republicans"" AS ?civilWarSide1)
  }
  
  OPTIONAL {
    ?civilWarEvent dbo:participatedIn [
      a dbo:MilitaryConflict ;
      dbo:participant dbr:Nationalists_(Spain) .
    ].
    BIND(""Nationalists"" AS ?civilWarSide2)
  }

  # Linking events to wars
  ?rifWarEvent rdfs:label ?rifWarLabel FILTER(CONTAINS(LCASE(?rifWarLabel), ""rif war"")).
  ?civilWarEvent rdfs:label ?civilWarLabel FILTER(CONTAINS(LCASE(?civilWarLabel), ""spanish civil war"")).

}
```",2,2,3,1,2,3,3,71,0,0,34,0,0.0,0
767,2,train,Give me the reference to .,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> """"@en . }","```
# No valid query can be constructed due to lack of specific input.
```",1,1,2,1,1,3,3,71,0,0,98447,0,0.0,0
421,9,train,Give me the person born as Edin Dervišhalidović and native of Socialist Federal Republic of Yugoslavia.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Socialist_Federal_Republic_of_Yugoslavia> . ?result <http://dbpedia.org/property/birthName> ""Edin Dervišhalidović""@en . }","```sparql
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?person WHERE {
  ?person foaf:givenName ""Edin"" .
  ?person foaf:surname ""Dervišhalidović"" .
  ?person dbo:birthPlace dbr:Socialist_Federal_Republic_of_Yugoslavia .
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
142,4,train,Give me the birthplace of George Tokoro and entity in Japan.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan> . <http://dbpedia.org/resource/George_Tokoro> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace ?birthPlaceLabel WHERE {
  VALUES ?person { dbr:George_Tokoro }
  ?person dbo:birthPlace ?birthPlace .
  ?birthPlace rdfs:label ?birthPlaceLabel .
  FILTER (lang(?birthPlaceLabel) = 'en')
  OPTIONAL {
    ?birthPlace dbo:country dbr:Japan .
  }
}
```",2,2,3,1,2,2,2,9,1,1,0,0.5,1.0,0.6666666666666666
617,1,train,Give me the spouse of Laodice IV.,SELECT ?result WHERE { <http://dbpedia.org/resource/Laodice_IV> <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
SELECT ?spouse WHERE {
  ?person rdfs:label ""Laodice IV""@en .
  OPTIONAL { ?person dbo:spouse ?spouse . }
  FILTER (lang(?person) = 'en')
}
```",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
281,8,train,"Give me the profession, that is a military unit, of Heather Roy.",SELECT ?result WHERE { <http://dbpedia.org/resource/Heather_Roy> <http://dbpedia.org/property/occupation> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?profession WHERE {
  VALUES ?person { dbr:Heather_Roy }
  ?person dbo:occupation ?profession .
  FILTER (strstarts(str(?profession), ""Military unit""))
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
360,7,train,Give me the reference to Manfred Mann and writer of The Roaring Silence.,"SELECT ?result WHERE { <http://dbpedia.org/resource/The_Roaring_Silence> <http://dbpedia.org/property/writer> ?result . ?result <http://xmlns.com/foaf/0.1/name> ""Manfred Mann""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?writer WHERE {
  ?album dbo:artist dbr:Manfred_Mann%27s_Earth_Band ;
         rdfs:label ""The Roaring Silence""@en .
  ?album dbo:writer ?writer .
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
487,1,train,Give me the administration of Phil Scott.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/Phil_Scott> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?administration WHERE {
  dbr:Phil_Scott dbo:officeTitle ""Governor of Vermont""@en .
  OPTIONAL { 
    dbr:Phil_Scott dbo:termStart ?start .
    FILTER(?start <= NOW())
    OPTIONAL { 
      dbr:Phil_Scott dbo:termEnd ?end .
      FILTER(?end > NOW() || !bound(?end))
    }
  }
  ?administration dbo:governor dbr:Phil_Scott .
}
```",1,1,2,1,1,3,2,20,0,0,14,0,0.0,0
184,10,train,Give me the parent of Géza von Habsburg and parent of Archduchess Ilona of Austria.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Ilona_of_Austria> . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Géza_von_Habsburg> . },"```sparql
# Query to find the parent(s) of Géza von Habsburg
SELECT ?parent WHERE {
  ?person dbo:child dbr:Géza_von_Habsburg .
  ?person a dbo:Person .
  ?person rdfs:label ?parentLabel .
  FILTER(LANG(?parentLabel) = ""en"")
}
```

```sparql
# Query to find the parent(s) of Archduchess Ilona of Austria
SELECT ?parent WHERE {
  ?person dbo:child dbr:Archduchess_Ilona_of_Austria .
  ?person a dbo:Person .
  ?person rdfs:label ?parentLabel .
  FILTER(LANG(?parentLabel) = ""en"")
}
```",2,2,3,1,2,3,3,71,0,0,2,0,0.0,0
294,0,train,"Give me the resting place of Luke Lea (American politician, born 1879).","SELECT ?result WHERE { <http://dbpedia.org/resource/Luke_Lea_(American_politician,_born_1879)> <http://dbpedia.org/ontology/restingPlace> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?burialPlace WHERE {
  VALUES ?lukeLea { dbr:Luke_Lea_(American_politician) }
  ?lukeLea dbo:deathPlace ?deathPlace .
  OPTIONAL { ?lukeLea dbo:burialPlace ?burialPlace . }
}
```",1,1,2,1,1,2,3,28,0,0,3,0,0.0,0
994,11,train,Give me the associated musical artist of the associated musical artist of Watchtower (band).,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Watchtower_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . },"```sparql
# Step 1: Find the associated musical artist of Watchtower (band)
SELECT ?artist WHERE {
    wd:Q123456 dbo:associatedBand wd:Q789012 .
    wd:Q789012 dbo:associatedMusicalArtist ?artist .
}

# Step 2: Find the associated musical artist of the resulting band/artist from step 1
SELECT ?finalArtist WHERE {
    ?intermediateArtist dbo:associatedMusicalArtist ?finalArtist .
}
```

Note: Replace `wd:Q123456` with the actual DBpedia QID for Watchtower (band) and `wd:Q789012` with the QID of the associated band/artist found in step 1.",2,2,3,2,1,3,3,71,0,0,16,0,0.0,0
232,15,train,Give me the person born as the birth name of Jon Pertwee.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?birthName WHERE {
  ?person foaf:givenName ""Jon"" .
  ?person foaf:surname ""Pertwee"" .
  OPTIONAL { ?person dbo:birthName ?birthName . }
}
```",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
314,6,train,Give me the person deceased at Madrid and awardee of 30.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ""30""^^<http://www.w3.org/2001/XMLSchema#integer> . ?result <http://dbpedia.org/ontology/restingPlace> <http://dbpedia.org/resource/Madrid> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name WHERE {
  ?person a dbo:Person ;
          dbo:deathPlace dbr:Madrid ;
          rdfs:label ?name .
  FILTER (lang(?name) = 'en')
  
  # Count the number of awards
  { SELECT ?person (COUNT(?award) AS ?numAwards)
    WHERE {
      ?person dbo:award ?award .
    }
    GROUP BY ?person
    HAVING (?numAwards = 30)
  } 
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
365,1,train,Give me the reference to The Blasters.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""The Blasters""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?entity ?label WHERE {
  ?entity a dbo:MusicalArtist .
  ?entity rdfs:label ?label .
  FILTER (CONTAINS(LCASE(?label), ""the blasters""))
}
```",1,1,2,1,1,2,2,9,0,0,1,0,0.0,0
617,4,train,"Give me the reference, that is a royalty, to Richeza of Poland.","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Richeza of Poland""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
SELECT ?title WHERE {
  wd:Q11150 wdt:P31/wdt:P279* wd:Q11696 ; # Richeza of Poland is a human and has royalty titles
  (wdt:P39|wdt:P54) ?person . # Look for her roles as spouse or consort
  ?person wdt:P131* wd:Q183 ; # Person associated with Germany
        wdt:P31/wdt:P279* wd:Q11696 .
  OPTIONAL { ?person wdt:P131* wd:Q1198 } . # Person associated with Poland
  ?person wdt:P39|wdt:P54 ?title . # Get the title of her role
}
```",1,2,2,1,1,3,2,20,0,0,3,0,0.0,0
10,4,train,"Give me the person born, that is an artist, as Luke Francis Vibert.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Luke Francis Vibert""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person ?birthDate WHERE {
  ?person a dbo:Artist .
  ?person foaf:name ""Luke Francis Vibert"" .
  ?person dbo:birthDate ?birthDate .
}
```",1,2,2,1,1,2,3,28,0,0,1,0,0.0,0
767,11,train,"Give me the entity in the administration, that is a settlement, of Green.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/state> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://dbpedia.org/property/leaderParty> ""Green""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?settlement WHERE {
  ?settlement a dbo:Settlement .
  ?settlement rdfs:label ?label .
  FILTER(CONTAINS(LCASE(?label), ""green"")) .
  OPTIONAL { ?settlement dbo:partOf ?administration . }
}
ORDER BY ?label
LIMIT 10
```",2,3,3,2,1,3,3,71,0,10,60,0.0,0.0,0
378,4,train,Who is the person born as Carl Pontus Gahn?,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Carl Pontus Gahn""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?person ?currentName WHERE {
  ?person dbo:birthName ""Carl Pontus Gahn"" .
  OPTIONAL { ?person rdfs:label ?currentName FILTER (lang(?currentName) = 'en') }
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
996,7,train,Give me the force of the awardee of 1778.0.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> ?v1 . ?v1 <http://dbpedia.org/property/awards> ""1778.0""^^<http://www.w3.org/2001/XMLSchema#double> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?recipient ?contribution WHERE {
  ?award dbo:year ""1778"" .
  ?award dbo:recipient ?recipient .
  FILTER (?award = dbr:Copley_Medal) .
  
  OPTIONAL { 
    ?recipient dbo:fieldDescription ?contribution .
    FILTER CONTAINS(LCASE(?contribution), ""electricity"")
  }
}
```",2,2,3,2,1,3,2,20,0,0,11,0,0.0,0
360,1,train,Give me the native of Johannesburg.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Johannesburg> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name WHERE {
  ?person dbo:birthPlace dbr:Johannesburg .
  ?person rdfs:label ?name .
  FILTER (LANG(?name) = 'en')
}
ORDER BY ?name
LIMIT 10
```",1,1,2,1,1,2,3,28,10,10,990,0.5,0.01,0.0196078431372549
617,9,train,"Give me the child, that is a royalty, of the parent of Mlada (abbess).",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Mlada_(abbess)> . ?result <http://dbpedia.org/ontology/parent> ?v0 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
SELECT ?royalChild WHERE {
  # Step 1: Find Mlada (abbess)
  ?mlada dbo:name ""Mlada""@en .
  ?mlada dbo:title ""Abbess""@en .

  # Step 2: Find her parent(s)
  ?parent dbo:child ?mlada .

  # Step 3: Check if any of these parents have children who are royalty
  ?parent dbo:child ?royalChild .
  
  # Filter for royal titles or roles
  ?royalChild dbo:title ?title .
  FILTER (
    regex(?title, ""King|Queen|Prince|Princess|Emperor|Empress"", ""i"")
  )
}
```",2,3,3,2,1,3,2,20,0,0,2,0,0.0,0
92,14,train,Give me the band of the person born as Joseph Michael Furney.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ""Joseph Michael Furney""@en . ?result <http://dbpedia.org/ontology/bandMember> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?band WHERE {
  ?person a dbo:Musician ;
          foaf:name ""Joe Perry"" ;
          dbo:birthName ""Joseph Michael Furney"" .
  
  ?person dbo:memberOfBand ?band .
}
```",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
659,17,train,"Give me the force, that is a societal event and an event and a military conflict, of the reference to Rutger Jan Schimmelpenninck.","SELECT ?result WHERE { ?v1 <http://xmlns.com/foaf/0.1/name> ""Rutger Jan Schimmelpenninck""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/commander> ?v1 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?event WHERE {
  ?event dbo:wikiPageRedirects dbr:Rutger_Jan_Schimmelpenninck .
  ?event a ?type .
  
  FILTER (
    (?type = dbo:SocietalEvent || 
     ?type = dbo:Event || 
     ?type = dbo:MilitaryConflict)
  )
}
```",2,5,3,2,1,3,3,71,0,0,2,0,0.0,0
184,6,train,Give me the child of Archduke Joseph Karl of Austria.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Karl_of_Austria> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child WHERE {
  ?person a dbo:Archduke ;
          foaf:name ""Joseph Karl of Austria""@en .
  ?person dbo:child ?child .
}
```",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
345,0,train,Give me the figure known as Stolz von Liechtenstein.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ""Stolz von Liechtenstein""@en . }","```sparql
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?entity ?label ?abstract ?type WHERE {
  ?entity rdfs:label ""Stolz von Liechtenstein""@en .
  OPTIONAL { ?entity rdfs:label ?label . FILTER (lang(?label) = 'en') }
  OPTIONAL { ?entity dbo:abstract ?abstract . FILTER (langMatches(lang(?abstract), ""EN"")) }
  OPTIONAL { ?entity rdf:type ?type . }
}
LIMIT 10
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
55,11,train,"Give me the band of the reference, that is a band, to Newsted.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://xmlns.com/foaf/0.1/name> ""Newsted""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandName WHERE {
  ?person a dbo:Musician ;
          foaf:name ""Jason Newsted""@en .
  
  ?membership dbo:musicArtist ?person ;
              dbo:musicalBand ?band .

  ?band a dbo:MusicalBand ;
        rdfs:label ?bandName .
  
  FILTER (lang(?bandName) = 'en')
}
```",2,3,3,2,1,2,3,28,0,0,9,0,0.0,0
701,10,train,Give me the spouse of Ramesses II and parent of Meritamen.,SELECT ?result WHERE { <http://dbpedia.org/resource/Meritamen> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Ramesses_II> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Ramesses II's spouse who is also a parent of Meritamen
  ?spouse dbo:spouse dbr:Ramesses_II .
  ?spouse dbo:child dbr:Merenptah . # Nefertari is known to be the mother of Merenptah, which helps confirm her as Ramesses II's spouse.
  ?spouse dbo:child dbr:Meritamen .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
767,10,train,Give me the entity in Baden-Württemberg and reference to .,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/state> <http://dbpedia.org/resource/Baden-Württemberg> . ?result <http://xmlns.com/foaf/0.1/name> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity ?entityLabel ?entityDescription WHERE {
  ?entity a dbo:Place .
  ?entity dbo:location dbr:Baden-Württemberg .
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
```",2,2,3,1,2,3,3,71,0,0,7,0,0.0,0
44,0,train,Give me the band member of Undertow (band).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Undertow_(band)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?member WHERE {
  ?band rdf:type dbo:Band .
  ?band rdfs:label ""Undertow (band)""@en .
  ?band dbo:bandMember ?member .
}
```",1,1,2,1,1,2,2,9,1,0,1,1.0,0.5,0.6666666666666666
915,8,train,"Give me the father of the child, that is a fictional character and a soap character, of Phillip Spaulding.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoapCharacter>. ?v0 <http://dbpedia.org/property/father> ?result . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Phillip_Spaulding> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  ?character a dbo:FictionalCharacter .
  ?character dbo:spouse ?spouse .
  ?character dbo:child ?child .
  
  ?character rdfs:label ""Phillip Spaulding""@en .
  FILTER(CONTAINS(LCASE(?character), ""the young and the restless""))
  
  OPTIONAL { ?child rdfs:label ?childLabel . }
}
```",2,4,3,2,1,3,2,20,0,0,1,0,0.0,0
783,10,train,"Give me the person born, that is an artist and a musical artist, as the persona of Ebony Reigns.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v0 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Ebony_Reigns> <http://xmlns.com/foaf/0.1/givenName> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthDate ?birthPlace WHERE {
  VALUES ?person { dbr:Ebony_Reigns }
  ?person dbo:birthDate ?birthDate .
  ?person dbo:birthPlace ?birthPlace .
  ?person a ?type .
  FILTER (
    (EXISTS {?person rdf:type dbo:Artist .}) &&
    (EXISTS {?person rdf:type dbo:MusicalArtist .})
  )
}
```",2,4,3,2,1,3,2,20,0,3,1,0.0,0.0,0
77,1,train,Give me the force of Alexander I of Russia.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Alexander_I_of_Russia> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?force WHERE {
  dbr:Alexander_I_of_Russia dbo:commander ?force .
}
```",1,1,2,1,1,3,2,20,0,0,25,0,0.0,0
115,1,train,Give me the alma mater of Jorge Sotomayor Tello.,SELECT ?result WHERE { <http://dbpedia.org/resource/Jorge_Sotomayor_Tello> <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
SELECT ?university WHERE {
  ?person dbo:birthName ""Jorge Sotomayor Tello"" .
  ?person dbo:almaMater ?university .
}
```",1,1,2,1,1,2,2,9,0,0,2,0,0.0,0
429,3,train,"Give me the military force, that is an organisation, of Camden Expedition.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Camden_Expedition> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce WHERE {
  ?event rdfs:label ""Camden Expedition""@en .
  ?event dbo:participatedIn ?battle.
  ?battle dbo:organizer ?militaryForce.
  FILTER (CONTAINS(LCASE(STR(?militaryForce)), ""confederate states army""))
}
```",1,2,2,1,1,2,2,9,0,0,22,0,0.0,0
285,6,train,Give me the parent of Alexander Onassis and spouse of Aristotle Onassis.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Aristotle_Onassis> . <http://dbpedia.org/resource/Alexander_Onassis> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parentOfAlexanderOnassis ?spouseOfAristotleOnassis WHERE {
  # Query for the parent of Alexander Onassis
  OPTIONAL { 
    dbr:Alexander_Onassis dbo:parent ?parentOfAlexanderOnassis .
  }
  
  # Query for the spouse of Aristotle Onassis
  OPTIONAL { 
    dbr:Aristotle_Onassis dbo:spouse ?spouseOfAristotleOnassis .
  }
}
```",2,2,3,1,2,3,2,20,1,2,0,0.3333333333333333,1.0,0.5
645,8,train,Give me the alma mater of the child of Richard Pankhurst.,SELECT ?result WHERE { <http://dbpedia.org/resource/Richard_Pankhurst> <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
SELECT DISTINCT ?child ?almaMater WHERE {
  # Find children of Richard Pankhurst
  ?person dbp:name ""Richard Pankhurst""@en .
  ?person dbo:spouse ?spouse .
  ?spouse dbo:child ?child .

  # Get alma mater for each child
  OPTIONAL { 
    ?child dbo:almaMater ?institution .
    ?institution rdfs:label ?almaMater .
    FILTER(LANG(?almaMater) = ""en"")
  }
}
```",2,2,3,2,1,3,2,20,0,5,2,0.0,0.0,0
328,4,train,"Give me the award of Bruce Fraser, 1st Baron Fraser of North Cape.","SELECT ?result WHERE { <http://dbpedia.org/resource/Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape> <http://dbpedia.org/property/awards> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award WHERE {
  dbr:Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape dbo:award ?award .
}
```",1,1,2,1,1,3,3,71,0,0,9,0,0.0,0
617,15,train,"Who is the child, that is a royalty, of the successor, that is a royalty, of Antiochus II Theos?",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Antiochus_II_Theos> <http://dbpedia.org/ontology/successor> ?v1 . ?result <http://dbpedia.org/property/father> ?v1 . },"```sparql
SELECT ?child WHERE {
  ?antiochus2 dbo:type dbr:Royal .
  ?antiochus2 foaf:name ""Antiochus II Theos""@en .

  ?successor dbo:successor ?antiochus2 ;
             dbo:type dbr:Royal .

  ?successor dbo:child ?child ;
             dbo:type dbr:Royal .
}
```",2,4,3,2,1,3,3,71,0,0,2,0,0.0,0
754,10,train,Give me the child of the reference to Ram Khamhaeng the Great.,"SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""Ram Khamhaeng the Great""@en . ?v0 <http://dbpedia.org/ontology/child> ?result . }","```sparql
SELECT ?child WHERE {
  ?person rdfs:label ""Ram Khamhaeng the Great""@en .
  ?person dbo:child ?child .
}
```",2,2,3,2,1,3,2,20,0,0,3,0,0.0,0
356,3,train,Give me the successor of 2014 Sacramento Republic FC season.,SELECT ?result WHERE { <http://dbpedia.org/resource/2014_Sacramento_Republic_FC_season> <http://dbpedia.org/ontology/successor> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?season WHERE {
    ?team dbo:sportTeamLeague dbr:USL_Professional_League .
    ?team rdfs:label ""Sacramento Republic FC""@en .
    
    OPTIONAL { 
        ?team dbo:participatedInSeason ?season .
        FILTER(CONTAINS(LCASE(STR(?season)), ""2015""))
    }
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
996,8,train,Give me the entity in the award of Ekrem Akurgal.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> ?v0 . <http://dbpedia.org/resource/Ekrem_Akurgal> <http://dbpedia.org/property/awards> ?v0 . },"```sparql
SELECT ?entity WHERE {
  ?award dcterms:isPartOf <http://dbpedia.org/resource/Order_of_Merit_of_the_Federal_Republic_of_Germany> .
  ?person dbo:receivedAward ?award ;
          foaf:name ""Ekrem Akurgal""@en .
  ?entity rdfs:label ?label .
  FILTER (LANG(?label) = 'en')
}
```",2,2,3,2,1,3,2,20,0,0,292,0,0.0,0
778,2,train,"Give me the awardee, that is American, of Wolf Prize in Medicine.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Wolf_Prize_in_Medicine> . ?result <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/United_States>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person dbo:award dbr:Wolf_Prize_in_Medicine .
  ?person dbo:nationality dbr:United_States .
}
```",1,2,2,1,1,3,2,20,1,1,0,0.5,1.0,0.6666666666666666
801,6,train,"Give me the work, that is a musical work and a song and a work, of 50 Cent.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/50_Cent> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?song WHERE {
  ?album dbo:artist dbr:50_Cent .
  ?album dbo:song ?song .
  ?song a dbo:Song .
}
```",1,4,2,1,1,3,3,71,0,0,58,0,0.0,0
488,15,train,"Who is the commander in the war, that is a military conflict and an event and a societal event, of Saitō Hajime?",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Saitō_Hajime> <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war WHERE {
  dbr:Sait%C5%8D_Hajime dbo:commanderOf ?person .
  ?person dbo:participatedIn ?war .
  ?war a dbo:MilitaryConflict ;
      rdfs:label ?label .
  FILTER(CONTAINS(LCASE(?label), ""boshin war""))
}
```",2,5,3,2,1,3,3,71,0,0,29,0,0.0,0
981,8,train,"Give me the birth place of the person born, that is a beauty queen, as .","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> """"@en . ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BeautyQueen>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace WHERE {
  dbr:Aishwarya_Rai_Bachchan dbo:birthPlace ?birthPlace .
}
```",2,3,3,2,1,3,2,20,0,2,170,0.0,0.0,0
547,14,train,Give me the resting place of the awardee of Knight Grand Cross of the Order of St Michael and St George.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_St_Michael_and_St_George> . ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
SELECT ?restingPlace WHERE {
  wd:Q76 dbo:award wd:Q111470 .
  wd:Q76 dbo:deathPlace ?restingPlace .
}
```",2,2,3,2,1,3,3,71,0,0,28,0,0.0,0
64,6,train,"Give me the entity in the region, that is a country, of Central European Time.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v0 . ?v0 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?country WHERE {
  ?country a dbo:Country .
  ?country dbo:timeZone dbr:Central_European_Time .
}
```",2,3,3,2,1,2,2,9,29,65,173232,0.30851063829787234,0.00016737754024275515,0.00033457356292001964
666,6,train,Give me the figure known as The Three Lions and player in Steve Bruce.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Steve_Bruce> <http://dbpedia.org/ontology/team> ?result . ?result <http://dbpedia.org/property/nickname> ""The Three Lions""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?player ?team ?nickname WHERE {
  ?player dbo:nationality dbr:England ;
          foaf:name ""Steve Bruce""@en .
  
  ?player dbo:memberOfTeam ?team .

  ?team rdfs:label ?teamLabel .
  FILTER (CONTAINS(LCASE(?teamLabel), ""england national football team""))

  OPTIONAL {
    ?team dbo:nickname ?nickname .
    FILTER(CONTAINS(LCASE(STR(?nickname)), ""three lions""))
  }
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
55,7,train,Give me the band member of Guns N' Roses and band of Newsted.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Guns_N'_Roses> . <http://dbpedia.org/resource/Newsted> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
# Query to find a member of Guns N' Roses
SELECT ?member WHERE {
  ?band dbr:Guns_N'_Roses ;
        dbo:bandMember ?member .
}

# Query to find the band associated with Jason Newsted
SELECT ?band WHERE {
  ?person foaf:name ""Jason Newsted""@en ;
          dbo:associatedBand ?band .
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
488,4,train,Who is the commander in Boshin War?,SELECT ?result WHERE { <http://dbpedia.org/resource/Boshin_War> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT ?person ?name WHERE {
  ?event dbo:wikiPageRedirects db:Boshin_War .
  ?event dbo:commander ?person .
  OPTIONAL { ?person foaf:name ?name . }
}
```",1,1,2,1,1,3,3,71,0,0,26,0,0.0,0
142,1,train,Give me the birthplace of George Tokoro.,SELECT ?result WHERE { <http://dbpedia.org/resource/George_Tokoro> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?birthPlace WHERE {
  dbpedia:George_Tokoro dbo:birthPlace ?birthPlace .
}
```",1,1,2,1,1,2,2,9,0,0,1,0,0.0,0
339,10,train,Who is the child of the parent of Princess Olga of Greece and Denmark?,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?result . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Princess_Olga_of_Greece_and_Denmark> . },"```sparql
SELECT ?olga ?parent ?child WHERE {
  ?olga dbo:spouse ?husband .
  ?olga rdfs:label ""Princess Olga of Greece and Denmark""@en .
  
  OPTIONAL { ?olga dbo:parent ?parent . }
  
  OPTIONAL { ?parent dbo:child ?child . }

  FILTER (lang(?olga) = 'en')
}
```",2,2,3,2,1,3,2,20,0,0,3,0,0.0,0
659,3,train,"Give me the native, that is an office holder, of Kingdom of Ireland.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Kingdom_of_Ireland> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name ?birthPlace ?occupation WHERE {
  ?person a dbo:Person .
  ?person dbo:birthPlace ?birthPlace .
  ?person rdfs:label ?name .
  FILTER (CONTAINS(LCASE(?birthPlace), ""ireland"") || CONTAINS(LCASE(?birthPlace), ""kingdom of ireland""))
  OPTIONAL { ?person dbo:occupation ?occupation . }
  FILTER (?occupation != """")
  FILTER NOT EXISTS {
    ?person dbo:deathDate ?deathDate .
    FILTER (YEAR(?deathDate) < 1541 || YEAR(?deathDate) > 1800)
  }
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
ORDER BY ?name
LIMIT 100
```",1,2,2,1,1,3,3,71,0,0,23,0,0.0,0
161,2,train,Give me the commander in Biscay Campaign.,SELECT ?result WHERE { <http://dbpedia.org/resource/Biscay_Campaign> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?commander WHERE {
  ?campaign dbo:partOf ?war .
  ?campaign dbp:name ""Biscay Campaign""@en .
  ?campaign dbp:commander ?commander .
  
  OPTIONAL { 
    ?war dbp:name ?warName .
    FILTER(CONTAINS(LCASE(?warName), ""peninsular war""))
  }
}
```",1,1,2,1,1,3,3,71,0,0,5,0,0.0,0
435,8,train,"Give me the territory administered from the figure known, that is a settlement and a town and Icelandic, as Land of fire and ice.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Iceland>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Town>. ?v1 <http://dbpedia.org/property/nickname> ""Land of fire and ice""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/capital> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?territory WHERE {
  ?territory dbo:country dbr:Iceland .
}
```",2,5,3,2,1,2,3,28,0,541,2,0.0,0.0,0
54,6,train,Give me the child of Narapati I of Ava.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Narapati_I_of_Ava> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?child WHERE {
  ?person a dbo:Monarch ;
          foaf:name ""Narapati I of Ava""@en .
  ?person dbo:child ?child .
}
```",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
345,2,train,"Give me the player, that is a sports club and an organisation and a soccer club, in Armando Heeb.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Armando_Heeb> <http://dbpedia.org/ontology/team> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?club WHERE {
  ?person foaf:name ""Armando Heeb""@en .
  ?person dbo:member|dbo:president|dbo:coach ?club .

  ?club a dbo:SportsClub ;
        a dbo:Organization ;
        a dbo:FootballClub .

  FILTER (strstarts(str(?club), str(dbpedia:)))
}
```",1,4,2,1,1,3,2,20,0,0,8,0,0.0,0
314,5,train,"Give me the profession, that is an event and a societal event, of Lisa Gavrić.",SELECT ?result WHERE { <http://dbpedia.org/resource/Lisa_Gavrić> <http://dbpedia.org/property/occupation> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?occupation WHERE {
  ?person foaf:name ""Lisa Gavrić""@en .
  ?person dbo:occupation ?occupation .

  FILTER EXISTS { 
    ?occupation a dbo:Event .
    ?occupation a dbo:SocietalEvent .
  }
}
```",1,3,2,1,1,2,3,28,2,0,0,1.0,1.0,1.0
801,2,train,Give me the associated musical artist of Chris Taylor (music producer).,SELECT ?result WHERE { <http://dbpedia.org/resource/Chris_Taylor_(music_producer)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artist WHERE {
  dbr:Chris_Taylor_(musician) dbo:associatedMusicalArtist ?artist .
}
```",1,1,2,1,1,3,3,71,0,0,7,0,0.0,0
64,0,train,Give me the alma mater of Jovan Hristić.,SELECT ?result WHERE { <http://dbpedia.org/resource/Jovan_Hristić> <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
SELECT ?university WHERE {
  ?person dbo:name ""Jovan Hristić""@en .
  ?person dbo:almaMater ?university .
}
```",1,1,2,1,1,2,2,9,0,0,1,0,0.0,0
339,0,train,Give me the child of George I of Greece.,SELECT ?result WHERE { <http://dbpedia.org/resource/George_I_of_Greece> <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  dbr:George_I_of_Greece dbo:child ?child .
}
```",1,1,2,1,1,3,2,20,7,0,0,1.0,1.0,1.0
48,5,train,"Give me the actor, that is a musical artist, of Honor Up.",SELECT ?result WHERE { <http://dbpedia.org/resource/Honor_Up> <http://dbpedia.org/property/starring> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor ?musicArtist WHERE {
  # Find the DBpedia resource for ""Honor Up""
  ?movie rdfs:label ""Honor Up""@en .
  
  # Get the cast of the movie
  ?movie dbo:starring ?actor .

  # Filter actors who are also musical artists
  OPTIONAL { 
    ?actor dbo:musicArtist dbr:Musical_artist .
  }
  
  FILTER (BOUND(?musicArtist))
}
```",1,2,2,1,1,3,2,20,0,0,2,0,0.0,0
54,8,train,"Give me the child, that is an office holder and a royalty, of Thihapate of Mohnyin.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Thihapate_of_Mohnyin> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?child WHERE {
  ?thihapate dbo:child ?child .
  FILTER(STRSTARTS(STR(?thihapate), ""http://dbpedia.org/resource/Thihapate_of_Mohnyin""))
  
  OPTIONAL { ?child dbo:officeHolder ?office . }
  OPTIONAL { ?child rdf:type dbo:RoyalPerson . }

  FILTER EXISTS { ?child dbo:officeHolder ?office } .
  FILTER EXISTS { ?child rdf:type dbo:RoyalPerson . }
}
```",1,3,2,1,1,3,3,71,0,0,1,0,0.0,0
184,8,train,Give me the child of Archduke Joseph Francis of Austria.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Francis_of_Austria> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  VALUES ?archduke { dbr:Archduke_Joseph_Francis_of_Austria }
  ?archduke dbo:child ?child .
}
```",1,1,2,1,1,3,3,71,3,1,0,0.75,1.0,0.8571428571428571
294,4,train,Who is the architect of P. D. Houston Jr. House?,SELECT ?result WHERE { <http://dbpedia.org/resource/P._D._Houston_Jr._House> <http://dbpedia.org/ontology/architect> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?architect WHERE {
  ?house a dbo:Building ;
         rdfs:label ""P. D. Houston Jr. House""@en .
  OPTIONAL { ?house dbo:architect ?architect . }
}
```",1,1,2,1,1,2,3,28,1,0,0,1.0,1.0,1.0
161,15,train,"Give me the force, that is a societal event and an event and a military conflict, of the person decedent at Francoist Spain.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Francoist_Spain> . ?result <http://dbpedia.org/ontology/commander> ?v1 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?event WHERE {
  ?person a dbo:Person ;
          foaf:name ""Francisco Franco""@en .
  
  OPTIONAL { ?person dbo:spouse ?spouse . }
  OPTIONAL { ?person dbo:child ?child . }

  ?event dbo:agent ?person ;
         (dbo:socialEvent | dbo:event | dbo:militaryConflict) .

  FILTER(?event != dbr:Spanish_Civil_War)
}
```",2,5,3,2,1,3,3,71,0,0,29,0,0.0,0
356,1,train,Give me the team of Mark Briggs.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Mark_Briggs> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?team WHERE {
  ?person rdfs:label ""Mark Briggs""@en.
  ?person a dbo:Person.
  OPTIONAL { ?person dbo:team ?team. }
}
```",1,1,2,1,1,3,2,20,1,14,4,0.06666666666666667,0.2,0.1
378,15,train,Who is the person born as the birth name of Carl Pontus Gahn?,SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
SELECT ?person ?label WHERE {
  ?person dbp:birthName ""Carl Pontus Gahn"" .
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
```",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
963,4,train,Give me the location for 21205.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/postalCode> ""21205"" . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?location WHERE {
  ?location dbo:postalCode ""21205"" .
}
```",1,1,2,1,1,3,2,20,6,0,0,1.0,1.0,1.0
666,0,train,Give me the player in Steve Bruce.,SELECT ?result WHERE { <http://dbpedia.org/resource/Steve_Bruce> <http://dbpedia.org/ontology/team> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?player WHERE {
  # Find clubs where Steve Bruce is a manager
  ?club dbo:manager dbr:Steve_Bruce .
  
  # For each club, find players who are part of the team
  ?teamMember dbo:memberOfTeam ?club ;
              a dbo:Player .

  # Return distinct player entities
  BIND(?teamMember AS ?player)
}
```",1,1,2,1,1,3,2,20,0,0,7,0,0.0,0
30,3,train,Give me the profession of Édouard Alphonse James de Rothschild.,SELECT ?result WHERE { <http://dbpedia.org/resource/Édouard_Alphonse_James_de_Rothschild> <http://dbpedia.org/property/occupation> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?occupation WHERE {
  dbr:Édouard_Alphonse_James_de_Rothschild dbo:occupation ?occupation .
}
```",1,1,2,1,1,2,2,9,0,2,1,0.0,0.0,0
767,5,train,Give me the reference to George Kilbon Nash.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""George Kilbon Nash""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?entity WHERE {
  ?entity rdfs:label ""George Kilbon Nash""@en .
}
```",1,1,2,1,1,3,3,71,0,1,1,0.0,0.0,0
232,3,train,Give me the birth name of Jon Pertwee.,SELECT ?result WHERE { <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/property/birthName> ?result . },"```sparql
SELECT ?birthName WHERE {
  dbpedia:Jon_Pertwee dbo:birthName ?birthName .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
55,10,train,"Give me the band member of the band member, that is a band and a group, of San Francisco Symphony.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/San_Francisco_Symphony> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?person WHERE {
  # Find individuals associated with the San Francisco Symphony
  ?symphony dbo:performer ?person .
  
  FILTER(?symphony = dbpedia:San_Francisco_Symphony)

  # Check if these individuals are also linked to a band or group
  OPTIONAL { ?person dbo:bandMember ?band . }
  OPTIONAL { ?person dbo:groupMember ?group . }

  # Ensure the person is both a band member and a group member
  FILTER(BOUND(?band) && BOUND(?group))
}
```",2,4,3,2,1,2,3,28,0,0,15,0,0.0,0
696,5,train,Give me the award of Nie Rongzhen.,SELECT ?result WHERE { <http://dbpedia.org/resource/Nie_Rongzhen> <http://dbpedia.org/property/awards> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award WHERE {
  dbr:Nie_Rongzhen dbo:award ?award .
}
```",1,1,2,1,1,3,2,20,0,3,2,0.0,0.0,0
701,7,train,"Give me the commander, that is a royalty, in Battle of Perire.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Battle_of_Perire> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  ?battle dbo:event = dbr:Battle_of_Perire .
  ?battle dbo:commander = ?commander .
  OPTIONAL { ?commander dbo:title ?title . FILTER regex(?title, ""King|Queen|Prince|Princess"", ""i"") }
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
314,11,train,"Give me the commander in the profession, that is an event and a societal event, of Lisa Gavrić.",SELECT ?result WHERE { <http://dbpedia.org/resource/Lisa_Gavrić> <http://dbpedia.org/property/occupation> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?profession WHERE {
  ?person rdfs:label ""Lisa Gavrić""@en.
  ?person dbo:occupation ?profession.
  
  FILTER EXISTS { ?profession a dbo:Event. }
  FILTER EXISTS { ?profession a dbo:SocietalEvent. }
}
```",2,4,3,2,1,2,3,28,0,2,28,0.0,0.0,0
281,17,train,"Give me the profession, that is a military unit, of the professional, that is an office holder and a politician, in New Zealand Army.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/occupation> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v1 <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/New_Zealand_Army> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?profession WHERE {
  ?person dbo:officeHolderOf dbr:New_Zealand ;
          dbo:occupation dbr:Politician .
  
  OPTIONAL { 
    ?person dbo:militaryUnit ?militaryRole .
    ?militaryRole a dbo:MilitaryUnit .
  }
  
  FILTER EXISTS { ?person dbo:militaryUnit ?militaryRole }
  
  BIND(IF(BOUND(?militaryRole), ?militaryRole, ""No military unit role found"") AS ?profession)
}
```",2,5,3,2,1,3,3,71,0,0,1,0,0.0,0
10,2,train,Give me the professional in .,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . }","```
# No valid SPARQL query can be generated due to lack of specificity in the question.
```",1,1,2,1,1,2,3,28,0,0,39640,0,0.0,0
645,7,train,"Give me the entity in the residence, that is a country, of James Wilkes Maurice.",SELECT ?result WHERE { <http://dbpedia.org/resource/James_Wilkes_Maurice> <http://dbpedia.org/property/residence> ?v1 . ?result <http://dbpedia.org/ontology/country> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?country WHERE {
  ?person a dbo:Person ;
          foaf:name ""James Wilkes Maurice""@en .
  
  OPTIONAL { 
    ?person dbo:residence ?residence .
  }
  
  FILTER EXISTS { ?residence a dbo:Country . }
  
  BIND(?residence AS ?country)
}
```",2,3,3,2,1,3,2,20,0,0,42999,0,0.0,0
421,4,train,Give me the birthplace of Samir Bekrić.,SELECT ?result WHERE { <http://dbpedia.org/resource/Samir_Bekrić> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?birthPlace WHERE {
  ?person a dbo:Person ;
          foaf:name ""Samir Bekrić""@en .
  ?person dbo:birthPlace ?birthPlace .
}
```",1,1,2,1,1,2,3,28,2,0,0,1.0,1.0,1.0
421,8,train,Give me the band member of the awardee of [[#Awards and nominations.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://dbpedia.org/property/awards> ""[[#Awards and nominations""@en . }","```sparql
# Step 1: Find the winner of the Grammy Award for Best New Artist in 2020
SELECT ?winner WHERE {
  ?award dcterms:title ""Grammy Award for Best New Artist""@en .
  ?award dbo:year ""2020""^^xsd:gYear .
  ?award dbo:recipient ?winner .
}

# Step 2: Check if the winner is a band and find its members
SELECT ?bandMember WHERE {
  # Assuming ?winner from the previous query is known, replace <WinnerURI> with actual URI
  OPTIONAL { 
    ?winner foaf:name ?bandName .
    ?band owl:sameAs ?bandResource .
    ?bandResource dbo:member ?bandMember .
  }
}
```",2,2,3,2,1,2,3,28,0,0,582,0,0.0,0
232,2,train,Give me the native of London.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/London> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name WHERE {
  ?person a dbo:Person .
  ?person dbo:birthPlace dbr:London .
  OPTIONAL { ?person rdfs:label ?name . FILTER (lang(?name) = 'en') }
}
ORDER BY ?name
LIMIT 100
```",1,1,2,1,1,3,3,71,100,100,8839,0.5,0.011186933661483387,0.0218842324105482
92,3,train,Give me the name of Nevermore (2006 film).,SELECT ?result WHERE { <http://dbpedia.org/resource/Nevermore_(2006_film)> <http://xmlns.com/foaf/0.1/name> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?title WHERE {
    ?film a dbo:Film .
    ?film dbo:title ?title .
    ?film dbo:releaseDate ?date .
    FILTER (CONTAINS(LCASE(?title), ""nevermore"") && YEAR(?date) = 2006)
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
528,5,train,Give me the work of --01-09.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/author> ""--01-09""^^<http://www.w3.org/2001/XMLSchema#gMonthDay> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>

SELECT ?work ?type WHERE {
  {
    ?work a ?type .
    ?work dbo:releaseDate ?date .
    FILTER (YEAR(?date) = 0 || MONTH(?date) = 1 && DAY(?date) = 9)
  }
  UNION
  {
    ?work a ?type .
    ?work dbr:publication_date ?date .
    FILTER (YEAR(?date) = 0 || MONTH(?date) = 1 && DAY(?date) = 9)
  }
}
ORDER BY ?type
```",1,1,2,1,1,3,3,71,0,388,1,0.0,0.0,0
659,16,train,"Give me the war, that is an event and a military conflict, of the figure known, that is a military unit and an organisation, as 'Polish Horse'.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/property/nickname> ""'Polish Horse'""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war WHERE {
  ?unit a dbo:MilitaryUnit ;
        rdfs:label ""Polish Hussars""@en .
  
  ?event a dbo:MilitaryConflict ;
         dbo:participatingMilitaryUnit ?unit .

  BIND(?event AS ?war)
}
```",2,6,3,2,1,3,3,71,0,0,19,0,0.0,0
328,8,train,"Give me the office, that is a government agency, of Joseph Stalin.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. <http://dbpedia.org/resource/Joseph_Stalin> <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?office WHERE {
  VALUES ?stalin { dbr:Joseph_Stalin }
  
  ?stalin dbo:positionHeld ?office .
  ?office a dbo:GovernmentAgency .
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
427,10,train,Give me the reference to Partito Popolare Italiano and party of Romano Prodi.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/ontology/party> ?result . ?result <http://xmlns.com/foaf/0.1/name> ""Partito Popolare Italiano""@en . }","```sparql
# Query to get the reference for Partito Popolare Italiano
SELECT ?partitoPopolareItaliano WHERE {
  ?partitoPopolareItaliano rdfs:label ""Partito Popolare Italiano""@it .
  FILTER (lang(?partitoPopolareItaliano) = 'it')
}

# Query to find the political party of Romano Prodi
SELECT ?party WHERE {
  ?prodi dbo:birthPlace ?place ;
         foaf:name ""Romano Prodi"" .
  ?prodi dbo:party ?party .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
981,10,train,"Who is the person born, that is a beauty queen, as the author of Kamikaze Girls?",SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v0 . <http://dbpedia.org/resource/Kamikaze_Girls> <http://dbpedia.org/property/author> ?v0 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BeautyQueen>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?title WHERE {
  ?book dbo:author ?person .
  ?book rdfs:label ""Kamikaze Girls""@en .
  
  OPTIONAL { 
    ?person dbo:title ?title .
    FILTER(CONTAINS(LCASE(?title), ""beauty queen""))
  }
}
```",2,3,3,2,1,3,2,20,0,1,120,0.0,0.0,0
328,1,train,Give me the commander in Eastern Front (World War II).,SELECT ?result WHERE { <http://dbpedia.org/resource/Eastern_Front_(World_War_II)> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?name WHERE {
  VALUES ?front { 
    dbr:Eastern_Front_(World_War_II) 
  }
  
  ?commander dbo:position ?position .
  ?commander foaf:name ?name .
  OPTIONAL { ?commander dbo:spouse ?spouse . } # To filter out non-military roles
  FILTER EXISTS {
    ?front dbo:hasMilitaryCommander ?commander .
  }
}
ORDER BY ?name
LIMIT 10
```",1,1,2,1,1,3,3,71,0,0,63,0,0.0,0
318,0,train,Give me the person born in 1970.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthYear> ""1970""^^<http://www.w3.org/2001/XMLSchema#gYear> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person ?name WHERE {
  ?person a dbo:Person .
  ?person dbo:birthYear ""1970""^^xsd:gYear .
  OPTIONAL { ?person foaf:name ?name . }
}
ORDER BY ?name
```",1,1,2,1,1,2,2,9,2810,2664,0,0.5133357690902448,1.0,0.6784162240463544
404,6,train,"Who is the child, that is a royalty, of Ernest Augustus, Duke of Brunswick?","SELECT ?result WHERE { <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/ontology/child> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child ?title WHERE {
  ?person a dbo:Duke ;
          foaf:name ""Ernest Augustus, Duke of Brunswick""@en .
  
  ?person dbo:child ?child .

  OPTIONAL { 
    ?child dbo:title ?title .
    FILTER(CONTAINS(LCASE(?title), ""king"") || CONTAINS(LCASE(?title), ""queen"") ||
           CONTAINS(LCASE(?title), ""prince"") || CONTAINS(LCASE(?title), ""duke"") ||
           CONTAINS(LCASE(?title), ""princess""))
  }
}
```",1,2,2,1,1,3,3,71,0,0,3,0,0.0,0
339,7,train,Give me the child of the child of Christian IX of Denmark.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Christian_IX_of_Denmark> . },"```sparql
SELECT ?grandchild WHERE {
  ?christianIX dbo:spouse ?consort .
  ?christianIX foaf:name ""Christian IX""@en .
  ?christianIX dbo:child ?child .
  ?child foaf:name ""Frederick VIII, King of Denmark""@en .
  ?child dbo:child ?grandchild .
}
```",2,2,3,2,1,3,2,20,0,0,32,0,0.0,0
492,2,train,Give me the person decedent at Algiers.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Algiers> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name WHERE {
  ?person a dbo:Person ;
          dbo:deathPlace dbr:Algiers .
  OPTIONAL { ?person foaf:name ?name . }
}
```",1,1,2,1,1,3,3,71,122,132,0,0.48031496062992124,1.0,0.648936170212766
959,9,train,Give me the native of Japan and member of University of Tsukuba.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/University_of_Tsukuba> . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Japan> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name WHERE {
  ?person a dbo:Person .
  ?person dbo:birthPlace dbr:Japan .
  ?person dbo:almaMater dbr:University_of_Tsukuba ;
          rdfs:label ?name .
  FILTER (lang(?name) = 'en')
}
```",2,2,3,1,2,3,3,71,0,6,84,0.0,0.0,0
48,1,train,Give me the band of Murda Mook.,SELECT ?result WHERE { <http://dbpedia.org/resource/Murda_Mook> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band WHERE {
  dbr:Murda_Mook dbo:musicalArtistGroup ?band .
}
```",1,1,2,1,1,3,2,20,0,0,10,0,0.0,0
392,6,train,Give me the region of Central European Time and entity in Italy.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy> . ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Central_European_Time> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?region ?regionLabel WHERE {
  ?region a dbo:AdministrativeRegion ;
          dbo:country dbr:Italy ;
          dbo:timeZone dbr:Central_European_Time .
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
```",2,2,3,1,2,2,3,28,0,0,513,0,0.0,0
427,6,train,Who is the father of Lamberto Andreotti?,SELECT ?result WHERE { <http://dbpedia.org/resource/Lamberto_Andreotti> <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?father WHERE {
  ?person dbo:father ?father .
  ?person rdfs:label ""Lamberto Andreotti""@en .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
701,14,train,Give me the spouse of the father of Merneptah.,SELECT ?result WHERE { <http://dbpedia.org/resource/Merneptah> <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/ontology/spouse> ?v1 . },"```sparql
SELECT ?spouse WHERE {
  wd:Q1513 wdt:P22 ?father .
  ?father rdfs:label ""Ramesses II""@en .
  ?father wdt:P26 ?spouse .
}
```",2,2,3,2,1,3,3,71,0,0,5,0,0.0,0
404,2,train,"Give me the child of Ernest Augustus, Crown Prince of Hanover.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ernest_Augustus,_Crown_Prince_of_Hanover> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?child WHERE {
  ?child dbo:parent dbr:Ernest_Augustus,_Crown_Prince_of_Hanover .
}
```",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
48,8,train,"Give me the band of the actor, that is a musical artist, of Honor Up.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Honor_Up> <http://dbpedia.org/property/starring> ?v0 . },"```sparql
# Step 1: Find the actor in ""Honor Up""
SELECT ?actor WHERE {
    ?movie dbo:title ""Honor Up""@en .
    ?movie dbo:starring ?actor .
}

# Step 2: Check if the actor is a musical artist and find their band
SELECT DISTINCT ?band WHERE {
    # Replace ?actor with the actual URI of the actor found in step 1
    ?actor dbo:occupation dbc:Musical_artist .

    OPTIONAL {
        ?artist dbo:member ?band .
        FILTER EXISTS { ?band rdf:type dbo:Band }
    }
}
```",2,3,3,2,1,3,2,20,0,0,10,0,0.0,0
184,14,train,Give me the parent of the child of Archduke Joseph Francis of Austria.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Francis_of_Austria> . },"```sparql
SELECT DISTINCT ?grandparent WHERE {
  ?archduke dbo:wikiPageID ""Archduke_Joseph_Francis_of_Austria"" .
  ?child dbo:childOf ?archduke .
  ?child dbo:child ?grandchild .
  ?grandchild dbo:childOf ?grandparent .
  FILTER(?grandparent != ?archduke)
}
```",2,2,3,2,1,3,3,71,0,0,2,0,0.0,0
318,6,train,Give me the professional in the profession of Robert Xavier Rodriguez.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Robert_Xavier_Rodriguez> <http://dbpedia.org/property/occupation> ?v1 . },"```sparql
SELECT ?person ?name WHERE {
  # Find the profession of Robert Xavier Rodriguez
  dbpedia:Robert_Xavier_Rodriguez foaf:profession ?profession .
  
  # Find other people with the same profession
  ?person a dbo:Person ;
          foaf:profession ?profession ;
          foaf:name ?name .

  FILTER(?person != dbpedia:Robert_Xavier_Rodriguez)
}
```",2,2,3,2,1,2,2,9,0,0,1942,0,0.0,0
996,5,train,Give me the award of Ekrem Akurgal.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ekrem_Akurgal> <http://dbpedia.org/property/awards> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award WHERE {
  dbr:Ekrem_Akurgal dbo:award ?award .
}
```",1,1,2,1,1,3,2,20,4,0,1,1.0,0.8,0.888888888888889
617,10,train,"Give me the father, that is a royalty, of the reference, that is a royalty, to Richeza of Poland.","SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""Richeza of Poland""@en . ?v0 <http://dbpedia.org/property/father> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
SELECT ?father WHERE {
  # Richeza of Poland's father
  wd:Q123456 wdt:P22 ?richezasFather.
  
  # Mieszko II Lambert (Richeza's father)
  wd:Q789012 rdf:type wd:Q5. # Assuming Q789012 is the entity for Mieszko II Lambert
  
  # Henry IV, Duke of Bavaria (Richeza's husband)
  ?richezasHusband wdt:P26 wd:Q123456.
  
  # Henry III, Holy Roman Emperor (Henry IV's father)
  ?henryIVFather wdt:P22 ?richezasHusband.
  ?henryIII rdf:type wd:Q5. # Assuming Q is the entity for Henry III
  
  # Conrad II, Holy Roman Emperor (Henry III's father)
  ?conradII wdt:P22 ?henryIII.
  
  # Return Conrad II as the result
  BIND(?conradII AS ?father)
}
```",2,4,3,2,1,3,2,20,0,0,3,0,0.0,0
281,9,train,"Give me the entity in Colony of New Zealand and war of Beauchamp Seymour, 1st Baron Alcester.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Colony_of_New_Zealand> . <http://dbpedia.org/resource/Beauchamp_Seymour,_1st_Baron_Alcester> <http://dbpedia.org/ontology/battle> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity WHERE {
    # Entities related to Colony of New Zealand
    { 
        ?nzEntity dbo:wikiPageRedirects dbr:Colony_of_New_Zealand .
        ?nzEntity dbo:partOf dbr:New_Zealand_War_Participation .
    }
    
    UNION
    
    # Entities related to Beauchamp Seymour, 1st Baron Alcester
    { 
        ?seymourEntity dbo:wikiPageRedirects dbr:Beauchamp_Seymour,_1st_Baron_Alcester .
        ?seymourEntity dbo:participatedIn dbr:World_War_I .
    }
    
    # Find common entities or connections
    {
        ?entity ?p1 ?nzEntity .
        ?entity ?p2 ?seymourEntity .
    }
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
339,5,train,Who is the child of Grand Duchess Elena Vladimirovna of Russia?,SELECT ?result WHERE { <http://dbpedia.org/resource/Grand_Duchess_Elena_Vladimirovna_of_Russia> <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?child WHERE {
  ?person dbo:givenName ""Elena"" .
  ?person dbo:familyName ""Vladimirovna of Russia"" .
  ?person dbo:child ?child .
}
```",1,1,2,1,1,3,2,20,0,0,3,0,0.0,0
801,3,train,Give me the true self of The Shadow.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/givenName> ""The Shadow""@en . }","```sparql
SELECT ?creator WHERE {
  wd:Q1234568 dbo:author ?creator .
}
```

Note: `wd:Q1234568` is a placeholder for the actual DBpedia resource identifier for ""The Shadow."" You would need to replace it with the correct QID from DBpedia.",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
783,6,train,Give me the band member of Ebony Reigns and associated musical artist of Appietus.,SELECT ?result WHERE { <http://dbpedia.org/resource/Appietus> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Ebony_Reigns> . },"```sparql
# Query to find the band member of Ebony Reigns
SELECT ?bandMember WHERE {
  wd:Q1234567 dbo:member ?bandMember .
}

# Query to find the associated musical artist of Appietus
SELECT ?artist WHERE {
  wd:Q6543210 dbo:associatedMusicalArtist ?artist .
}
```

Note: Replace `wd:Q1234567` with the actual DBpedia identifier for Ebony Reigns and `wd:Q6543210` with the identifier for Appietus. These identifiers can be found by searching their names in DBpedia.",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
696,1,train,Give me the landmark at elevation of 50.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/elevation> ""50""^^<http://www.w3.org/2001/XMLSchema#integer> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?landmark ?name WHERE {
    ?landmark a dbo:Landmark .
    OPTIONAL { ?landmark rdfs:label ?name . FILTER (lang(?name) = 'en') }
    ?landmark dbp:elevation ?elevation .
    FILTER (?elevation = ""50""^^xsd:decimal)
}
```",1,1,2,1,1,3,2,20,0,0,599,0,0.0,0
391,15,train,"Give me the figure known as the nick name of Jackson, Tennessee.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ?v1 . <http://dbpedia.org/resource/Jackson,_Tennessee> <http://xmlns.com/foaf/0.1/nick> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nickname WHERE {
  dbr:Jackson,_Tennessee dbo:nickName ?nickname .
}
```",2,2,3,2,1,3,3,71,0,0,4,0,0.0,0
184,9,train,Give me the child of Archduke Joseph August of Austria and parent of Géza von Habsburg.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_August_of_Austria> . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Géza_von_Habsburg> . },"```sparql
SELECT ?person WHERE {
  # Find the child of Archduke Joseph August of Austria
  ?child dbo:parent dbr:Archduke_Joseph_August_of_Austria .
  
  # Find the parent of Géza von Habsburg
  ?parent dbo:child dbr:G%C3%A9za_von_Habsburg .

  # The person who is both a child of Archduke Joseph August and a parent of Géza von Habsburg
  FILTER (?child = ?parent)
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
44,6,train,"Give me the band member of the associated musical artist, that is a group and an organisation, of Queensrÿche.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . <http://dbpedia.org/resource/Queensrÿche> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?member WHERE {
  VALUES ?queensryche { dbr:Queensr%C3%BDche }
  ?queensryche a dbo:Band .
  ?queensryche dbo:bandMember ?member .
}
```",2,4,3,2,1,2,2,9,0,0,13,0,0.0,0
485,7,train,Give me the entity in United Kingdom and entity in Nottinghamshire.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Nottinghamshire> . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity WHERE {
  ?entity dbo:location dbr:Nottinghamshire .
  OPTIONAL { ?entity dbo:country dbr:United_Kingdom . }
}
```",2,2,3,1,2,2,3,28,0,101,357,0.0,0.0,0
747,14,train,Give me the band of the person born as Tracey Elizabeth McSween.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/property/birthName> ""Tracey Elizabeth McSween""@en . }","```sparql
SELECT ?band WHERE {
  ?person foaf:name ""Tracey Elizabeth McSween"" .
  ?person dbo:band ?band .
}
```",2,2,3,2,1,3,3,71,0,0,8,0,0.0,0
314,8,train,Give me the person deceased at the headquarter of House of Sombrerete.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/restingPlace> ?v1 . <http://dbpedia.org/resource/House_of_Sombrerete> <http://dbpedia.org/ontology/location> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?deathPlace WHERE {
  ?person dbo:deathPlace ?deathLocation .
  ?deathLocation rdfs:label ""Headquarters of the House of Sombrerete""@en .
}
```

Note: This query assumes there is a DBpedia entry for the headquarters of the House of Sombrerete. If this is fictional, it may not exist in DBpedia, and additional context or data sources would be needed.",2,2,3,2,1,2,3,28,0,0,34,0,0.0,0
328,15,train,Give me the award of the commander in Volcano and Ryukyu Islands campaign.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/awards> ?result . <http://dbpedia.org/resource/Volcano_and_Ryukyu_Islands_campaign> <http://dbpedia.org/ontology/commander> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award WHERE {
  ?campaign dbo:name ""Volcano and Ryukyu Islands campaign""@en .
  ?campaign dbo:awardedBy ?award .
}
```",2,2,3,2,1,3,3,71,0,0,30,0,0.0,0
314,9,train,Give me the commander in Spanish Civil War and awardee of 30.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Spanish_Civil_War> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/property/awards> ""30""^^<http://www.w3.org/2001/XMLSchema#integer> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?role ?award WHERE {
  ?person a dbo:MilitaryPerson ;
          dbo:spouse ?spouse .
  
  OPTIONAL { ?person dbo:rank ?rank . }
  
  ?person dbo:occupation ""Military commander""@en .

  # Find individuals involved in the Spanish Civil War
  ?person dbo:wikiPageWikiLink dbr:Spanish_Civil_War .

  # Check for awards, specifically looking for any notable international recognition
  OPTIONAL { 
    ?award dbo:recipient ?person ;
           dbo:name ?awardName .
    
    FILTER regex(?awardName, ""Order of Merit"", ""i"")
  }

  # Filter to find Francisco Franco
  FILTER (?person = dbr:Franco)
}
```",2,2,3,1,2,2,3,28,0,0,2,0,0.0,0
328,6,train,Give me the force of Ferenc Szálasi.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Ferenc_Szálasi> . },"```sparql
SELECT ?title WHERE {
  wd:Q123456 wdt:P39 ?position.
  ?position rdfs:label ?title.
  FILTER (lang(?title) = ""en"")
}
```

In this query, `wd:Q123456` should be replaced with the actual DBpedia resource identifier for Ferenc Szálasi. This SPARQL query retrieves the title or position (`?title`) that Ferenc Szálasi held, which can give us insight into his political force or influence.",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
827,6,train,"Give me the father of William Ernest, Grand Duke of Saxe-Weimar-Eisenach and child of Charles Alexander, Grand Duke of Saxe-Weimar-Eisenach.","SELECT ?result WHERE { <http://dbpedia.org/resource/Charles_Alexander,_Grand_Duke_of_Saxe-Weimar-Eisenach> <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/William_Ernest,_Grand_Duke_of_Saxe-Weimar-Eisenach> <http://dbpedia.org/property/father> ?result . }","```sparql
SELECT ?father WHERE {
  wd:Q1234567 wdt:P22 ?father .
  FILTER (?father = wd:Q654321)
}
```

In this query:
- `wd:Q1234567` should be replaced with the DBpedia identifier for William Ernest, Grand Duke of Saxe-Weimar-Eisenach.
- `wdt:P22` is the property used in DBpedia to denote ""father.""
- `wd:Q654321` should be replaced with the DBpedia identifier for Charles Alexander, Grand Duke of Saxe-Weimar-Eisenach.",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
767,0,train,Give me the entity in Baden-Württemberg.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/state> <http://dbpedia.org/resource/Baden-Württemberg> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity ?name WHERE {
  ?entity dbo:location dbr:Baden-Württemberg .
  ?entity rdfs:label ?name .
  FILTER (lang(?name) = 'en')
}
LIMIT 10
```",1,1,2,1,1,3,3,71,0,20,60,0.0,0.0,0
161,7,train,Who is the figure known as El Director?,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/nick> ""El Director""@en . }","```sparql
SELECT ?person ?name WHERE {
  ?person dbo:alias ""El Director""@en .
  OPTIONAL { ?person foaf:name ?name . }
  FILTER EXISTS { ?person dbp:characterName ""Gustavo Fring""@en . }
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
10,3,train,"Give me the person born, that is an artist, as Matt Colton.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Matt Colton""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  ?person foaf:name ""Matt Colton"" .
  ?person dbo:occupation ?occupation .
  FILTER(CONTAINS(LCASE(?occupation), ""artist""))
}
```",1,2,2,1,1,2,3,28,0,0,1,0,0.0,0
345,10,train,"Who is the person born, that is a soccer player and a soccer manager, on the birth date of Eiður Guðjohnsen?",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthDate> ?v0 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Eiður_Guðjohnsen> <http://dbpedia.org/ontology/birthDate> ?v0 . },"```sparql
# Part 1: Get Eiður Guðjohnsen's birth date
SELECT ?birthDate WHERE {
    dbpedia:Æður_Guðjónsson dbo:birthDate ?birthDate .
}

# Part 2: Find people who are both soccer players and managers born on the same date
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?person WHERE {
    # Replace 'Eiður_Guðjohnsen_birthDate' with the actual birth date obtained from Part 1
    ?person dbo:birthDate ""Eiður_Guðjohnsen_birthDate""^^xsd:date .
    ?person a dbo:SoccerPlayer ;
            a dbo:FootballManager .
}
```

Note: In practice, you would replace `""Eiður_Guðjohnsen_birthDate""` with the actual birth date obtained from the first query.",2,4,3,2,1,3,2,20,0,0,3,0,0.0,0
184,1,train,Give me the child of Archduke Joseph August of Austria.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_August_of_Austria> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?child WHERE {
  ?person a dbo:Archduke ;
          foaf:name ""Joseph August of Austria""@en .
  ?person dbo:child ?child .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
666,4,train,"Give me the reference, that is an organisation and a soccer club and a sports club, to England.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?result <http://xmlns.com/foaf/0.1/name> ""England""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?club WHERE {
  ?club a dbo:SportsClub ;
        dbo:location dbr:England ;
        dbo:sport dbr:Football .
}
```",1,4,2,1,1,3,2,20,0,0,4,0,0.0,0
712,6,train,Give me the resting place of Nina Onilova and capital of South Russia (1919–1920).,SELECT ?result WHERE { <http://dbpedia.org/resource/South_Russia_(1919–1920)> <http://dbpedia.org/ontology/capital> ?result . <http://dbpedia.org/resource/Nina_Onilova> <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
# Query to find the resting place of Nina Onilova
SELECT ?restingPlace WHERE {
  ?person dbo:birthName ""Nina Onilova""@en .
  OPTIONAL { ?person dbo:deathPlace ?restingPlace . }
}

# Query to find the capital of South Russia (1919–1920)
SELECT ?capital WHERE {
  ?place a dbo:City ;
         rdfs:label ?cityLabel ;
         dbo:country dbr/Russian_SFSR ;
         dbo:populationTotal ?population .
  FILTER(CONTAINS(LCASE(?cityLabel), ""ekaterinodar"") && 
         EXISTS { ?event dbo:dateStart ?dateStart . 
                  ?event dbo:place ?place . 
                  FILTER(YEAR(?dateStart) >= 1919 && YEAR(?dateStart) <= 1920) } )
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
16,3,train,Give me the birth name of Ted McGinley.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/property/birthName> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?birthName WHERE {
  ?person a dbo:Actor ;
          foaf:name ""Ted McGinley""@en .
  OPTIONAL { ?person dbo:birthName ?birthName . }
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
528,4,train,Give me the military force of Battle of Pisagua.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Pisagua> . },"```sparql
PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?combatant1Label ?combatant2Label WHERE {
  ?battle a dbpedia-owl:Battle .
  ?battle rdfs:label ""Battle of Pisagua""@en .
  OPTIONAL { ?battle dbp:combatant1 ?combatant1 . }
  OPTIONAL { ?battle dbp:combatant2 ?combatant2 . }
  SERVICE <http://dbpedia.org/sparql> {
    ?combatant1 rdfs:label ?combatant1Label .
    FILTER (lang(?combatant1Label) = ""en"")
    ?combatant2 rdfs:label ?combatant2Label .
    FILTER (lang(?combatant2Label) = ""en"")
  }
}
```",1,1,2,1,1,3,3,71,0,0,7,0,0.0,0
838,9,train,"Give me the band member, that is an artist and a musical artist, of the band, that is a band and a group, of Žika Jelić.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v0 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Žika_Jelić> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?member WHERE {
  ?band dbo:bandMember Žika_Jelić ;
        rdf:type dbo:Band .
  
  ?member dbo:bandMember ?band ;
          rdf:type dbo:Artist, dbo:MusicalArtist .
}
```",2,6,3,2,1,3,2,20,0,0,4,0,0.0,0
801,14,train,"Give me the associated musical artist of the writer, that is a musical artist and an artist, of 40 Dayz & 40 Nightz.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/40_Dayz_&_40_Nightz> <http://dbpedia.org/property/writer> ?v1 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"```sparql
SELECT ?artist WHERE {
  ?song dcterms:title ""40 Dayz & 40 Nightz"" .
  ?song dbo:lyricsBy ?writer .
  ?writer foaf:name ""Lil Wayne""@en .
  ?writer dbo:associatedMusicalArtist ?artist .
  FILTER EXISTS { ?artist a dbo:MusicalArtist . }
}
```",2,4,3,2,1,3,3,71,0,0,50,0,0.0,0
232,1,train,Give me the actor of Dog Soldiers (film).,SELECT ?result WHERE { <http://dbpedia.org/resource/Dog_Soldiers_(film)> <http://dbpedia.org/ontology/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  ?film dbo:title ""Dog Soldiers""@en .
  ?film dbo:starring ?actor .
  FILTER (lang(?film) = 'en')
}
```",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
92,15,train,"Give me the reference, that is an artist, to the name of Nevermore (2006 film).",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Nevermore_(2006_film)> <http://xmlns.com/foaf/0.1/name> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artist WHERE {
  ?film a dbo:Film ;
        rdfs:label ""Nevermore""@en .
  
  OPTIONAL { 
    ?soundtrack dbo:soundtrackOf ?film ;
                dbo:performer ?artist .
  }
  
  FILTER (CONTAINS(LCASE(?artist), ""iron maiden""))
}
```",2,3,3,2,1,3,3,71,0,0,1,0,0.0,0
312,5,train,"Give me the entity in the administration, that is a settlement and a region and Italian and a state, of Democratic Party (Italy).",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v1 <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Democratic_Party_(Italy)> . ?result <http://dbpedia.org/ontology/province> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?entity WHERE {
  ?entity dbo:politicalParty dbr:Democratic_Party_(Italy) .
  ?entity a ?type .
  
  FILTER (
    (?type = dbo:City || ?type = dbo:Region || ?type = dbo:Country)
  )
  
  OPTIONAL { ?entity dbp:country dbr:Italy . }
}
```",2,6,3,2,1,2,2,9,0,0,587,0,0.0,0
177,2,train,Give me the residence of Alexander Gamelin.,SELECT ?result WHERE { <http://dbpedia.org/resource/Alexander_Gamelin> <http://dbpedia.org/property/residence> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?residence WHERE {
  ?person dbo:name ""Alexander Gamelin""@en .
  ?person dbo:residence ?residence .
}
```",1,1,2,1,1,2,2,9,0,0,2,0,0.0,0
959,16,train,"Give me the residence, that is a country, of the leader, that is a politician, of 2010 Japanese House of Councillors election.",SELECT ?result WHERE { <http://dbpedia.org/resource/2010_Japanese_House_of_Councillors_election> <http://dbpedia.org/property/leader> ?v0 . ?v0 <http://dbpedia.org/property/residence> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?leader ?residence WHERE {
  # Find politicians associated with Japan around the time of the 2010 election
  ?leader a dbo:Politician ;
          dbo:nationality dbr:Japan ;
          dbo:office ?office .
  
  # Filter for those who were prominent in the 2010 Japanese House of Councillors election
  FILTER(CONTAINS(LCASE(STR(?office)), ""house of councillors"") && 
         EXISTS { ?leader dbo:wikiPageWikiLink ?election . 
                  ?election rdfs:label ?label .
                  FILTER(CONTAINS(LCASE(?label), ""2010 japanese house of councillors election"")) } )

  # Find the residence of this leader
  ?leader dbo:residence ?residence .

  # Ensure that the residence is a country
  ?residence a dbo:Country .
}
```",2,4,3,2,1,3,3,71,0,0,1,0,0.0,0
182,3,train,Give me the author of 2019 Sri Lanka Easter bombings.,SELECT ?result WHERE { <http://dbpedia.org/resource/2019_Sri_Lanka_Easter_bombings> <http://dbpedia.org/property/author> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?group WHERE {
  ?event dbo:location dbr:Sri_Lanka .
  ?event dbo:date ?date .
  FILTER (CONTAINS(LCASE(STR(?event)), ""2019 sri lanka easter bombings"") && 
          CONTAINS(LCASE(STR(?date)), ""2019""))
  
  OPTIONAL { ?event dbo:perpetrator ?group . }
}
```",1,1,2,1,1,2,3,28,0,0,3,0,0.0,0
10,7,train,Give me the professional in  and associated musical artist of Matt Colton.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Matt_Colton> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artist WHERE {
  ?person a dbo:Person ;
          foaf:name ""Matt Colton"" .
  ?person dbo:profession dbr:Mastering_engineer .
  ?work dbo:performer ?artist .
  ?work dbo:masteredBy ?person .
}
```",2,2,3,1,2,2,3,28,0,0,2,0,0.0,0
696,3,train,Who is the member of Dropkick Murphys?,SELECT ?result WHERE { <http://dbpedia.org/resource/Dropkick_Murphys> <http://dbpedia.org/ontology/bandMember> ?result . },"```sparql
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?memberName WHERE {
  ?band a dbo:Band ;
        rdfs:label ""Dropkick Murphys""@en .
  
  ?bandMember dbp:bandMember ?band ;
              foaf:name ?memberName .
}
```",1,1,2,1,1,3,2,20,0,0,6,0,0.0,0
285,3,train,Who is the child of Tina Onassis Niarchos?,SELECT ?result WHERE { <http://dbpedia.org/resource/Tina_Onassis_Niarchos> <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?child WHERE {
  ?person rdfs:label ""Tina Onassis Niarchos""@en .
  ?person dbo:child ?child .
}
```",1,1,2,1,1,3,2,20,2,0,0,1.0,1.0,1.0
617,13,train,Give me the spouse of the child of Antiochus III the Great.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Antiochus_III_the_Great> <http://dbpedia.org/ontology/child> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?child ?spouse WHERE {
  # Identify Antiochus III the Great
  VALUES ?antiochus { dbr:Antiochus_III_the_Great }
  
  # Find his children
  ?antiochus dbo:child ?child .
  
  # For each child, find their spouse
  OPTIONAL {
    ?child dbo:spouse ?spouse .
  }
}
```",2,2,3,2,1,3,3,71,5,3,0,0.625,1.0,0.7692307692307693
994,7,train,Give me the persona of Don Dokken.,SELECT ?result WHERE { <http://dbpedia.org/resource/Don_Dokken> <http://xmlns.com/foaf/0.1/givenName> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?property ?value WHERE {
  VALUES ?resource { dbr:Don_Dokken }
  
  OPTIONAL { ?resource dbo:birthDate ?date . BIND(STR(?date) AS ?value) }
  OPTIONAL { ?resource dbo:birthPlace ?place . BIND(STR(?place) AS ?value) }
  OPTIONAL { ?resource dbo:genre ?genre . BIND(STR(?genre) AS ?value) }
  OPTIONAL { ?resource dbo:spouse ?spouse . BIND(STR(?spouse) AS ?value) }
  OPTIONAL { ?resource dbo:album ?album . FILTER (CONTAINS(LCASE(STR(?album)), ""dokken"")) . BIND(STR(?album) AS ?value) }
  OPTIONAL { ?resource dbo:award ?award . BIND(STR(?award) AS ?value) }
  
  ?property a ?type .
  FILTER (?property IN (dbo:birthDate, dbo:birthPlace, dbo:genre, dbo:spouse, dbo:album, dbo:award))
}
ORDER BY ?property
```",1,1,2,1,1,3,3,71,0,7,1,0.0,0.0,0
754,0,train,Give me the parent of Loe Thai.,SELECT ?result WHERE { <http://dbpedia.org/resource/Loe_Thai> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?parent WHERE {
  ?loethai dbo:wikiPageRedirects db:Loe_Thai .
  ?loethai dbo:partOf ?parent .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
77,2,train,Give me the award of Maxim Grigorievich Vlasov.,SELECT ?result WHERE { <http://dbpedia.org/resource/Maxim_Grigorievich_Vlasov> <http://dbpedia.org/property/awards> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award WHERE {
  VALUES ?person { dbr:Maxim_Grigorievich_Vlasov }
  ?person dbo:award ?award .
}
```",1,1,2,1,1,3,2,20,8,0,0,1.0,1.0,1.0
314,2,train,Give me the commander in Spanish Civil War.,SELECT ?result WHERE { <http://dbpedia.org/resource/Spanish_Civil_War> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?name WHERE {
  ?commander dbo:spouse ?spouse .
  ?commander dbo:role ?role .
  FILTER(CONTAINS(LCASE(STR(?role)), ""commander"") && CONTAINS(LCASE(STR(?commander)), ""spanish civil war""))
  OPTIONAL { ?commander rdfs:label ?name . FILTER (LANG(?name) = 'es') }
}
ORDER BY ?name
```",1,1,2,1,1,2,3,28,0,0,28,0,0.0,0
959,1,train,Give me the native of Japan.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Japan> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?name WHERE {
  ?person a dbo:Person .
  ?person dbo:birthPlace dbp:country ""Japan"" .
  OPTIONAL { ?person rdfs:label ?name . FILTER (lang(?name) = 'en') }
}
ORDER BY ?name
```",1,1,2,1,1,3,3,71,0,0,8419,0,0.0,0
534,3,train,"Who is the child, that is a politician and an office holder, of Desmond FitzGerald (politician)?",SELECT ?result WHERE { <http://dbpedia.org/resource/Desmond_FitzGerald_(politician)> <http://dbpedia.org/ontology/child> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child ?childName WHERE {
  ?desmond a dbo:Person ;
           foaf:name ""Desmond FitzGerald"" ;
           dbo:child ?child .
  
  ?child dbo:occupation ?occupation .
  FILTER(CONTAINS(LCASE(?occupation), ""politician""))
  
  OPTIONAL { 
    ?child dbo:officeHolder ?office .
    FILTER EXISTS { ?office a dbo:Office }
  }

  ?child foaf:name ?childName
}
```",1,3,2,1,1,3,2,20,0,0,1,0,0.0,0
365,6,train,Give me the reference to the real name of The Blasters.,SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v1 . <http://dbpedia.org/resource/The_Blasters> <http://xmlns.com/foaf/0.1/name> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?member ?realName WHERE {
  ?band dbo:name ""The Blasters""@en .
  ?band dbo:bandMember ?member .
  OPTIONAL { 
    ?member rdfs:label ?realName .
  }
}
```",2,2,3,2,1,2,2,9,0,0,1,0,0.0,0
360,3,train,"Give me the work, that is an album, of Dave Flett.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Album>. ?result <http://dbpedia.org/property/author> ""Dave Flett""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?album WHERE {
  ?artist a dbo:MusicArtist .
  ?artist foaf:name ""Dave Flett"" .
  ?artist dbo:album ?album .
}
```",1,2,2,1,1,2,3,28,0,0,1,0,0.0,0
54,7,train,Give me the reference to Thihapate of Mohnyin.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Thihapate of Mohnyin""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?birthDate ?deathDate ?description WHERE {
  ?person a dbo:Person ;
          rdfs:label ""Thihapate of Mohnyin""@en .
  OPTIONAL { ?person dbo:birthDate ?birthDate . }
  OPTIONAL { ?person dbo:deathDate ?deathDate . }
  OPTIONAL { ?person dbo:abstract ?description . FILTER (lang(?description) = 'en') }
}
```",1,1,2,1,1,3,3,71,1,1,0,0.5,1.0,0.6666666666666666
356,10,train,"Give me the native, that is a soccer player and a soccer manager, of the birth place, that is English and a settlement, of Gary Williams (footballer, born 1960).","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Gary_Williams_(footballer,_born_1960)> <http://dbpedia.org/ontology/birthPlace> ?v0 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . }","```sparql
SELECT DISTINCT ?native WHERE {
  # Find Gary Williams' birthplace
  dbpedia:Gary_Williams_(footballer,_born_1960) dbo:nationality dbr:England ;
    dbo:birthPlace ?birthPlace .

  # Ensure the birthplace is an English settlement
  ?birthPlace a dbo:Settlement ;
              dbo:country dbr:England .

  # Find natives who are both soccer players and managers
  ?native dbo:nationality dbr:England ;
          dbo:birthPlace ?birthPlace .
  
  OPTIONAL { 
    ?native dbo:occupation dbr:Soccer_player . 
  }
  OPTIONAL {
    ?native dbo:occupation dbr:Soccer_manager . 
  }

  FILTER EXISTS { ?native dbo:occupation dbr:Soccer_player } &&
               EXISTS { ?native dbo:occupation dbr:Soccer_manager }
}
```",2,6,3,2,1,3,2,20,0,0,17,0,0.0,0
429,1,train,Give me the country of 77th Ohio Infantry Regiment.,SELECT ?result WHERE { <http://dbpedia.org/resource/77th_Ohio_Infantry_Regiment> <http://dbpedia.org/ontology/country> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?country WHERE {
    ?regiment a dbo:MilitaryUnit ;
              rdfs:label ""77th Ohio Infantry Regiment""@en .
    OPTIONAL { ?regiment dbo:nationality ?country . }
}
```",1,1,2,1,1,2,2,9,0,0,2,0,0.0,0
48,2,train,"Give me the work, that is a work, of Shellback (record producer).",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Shellback_(record_producer)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?work WHERE {
  ?person a dbo:MusicProducer ;
          foaf:name ""Shellback"" .
  ?work dbo:producer ?person ;
        a dbo:Album .
}
```",1,2,2,1,1,3,2,20,0,0,57,0,0.0,0
281,5,train,"Who is the leader, that is a politician, of 1962 New South Wales state election?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/1962_New_South_Wales_state_election> <http://dbpedia.org/property/leader> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?leader ?party WHERE {
  ?election dbo:electionDate ?date .
  ?election dbo:politicalParty ?party .
  ?party dbo:leader ?leader .
  FILTER (YEAR(?date) = 1962)
  FILTER CONTAINS(LCASE(STR(?leader)), ""politician"")
}
```",1,2,2,1,1,3,3,71,0,0,2,0,0.0,0
281,2,train,Give me the war of New Zealand Army.,SELECT ?result WHERE { <http://dbpedia.org/resource/New_Zealand_Army> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war WHERE {
  ?army a dbo:MilitaryUnit ;
        dbo:country dbr:New_Zealand .
  ?engagement dbo:militaryEngagementOf ?army ;
              dbo:subject ?war .
}
```",1,1,2,1,1,3,3,71,0,0,14,0,0.0,0
179,4,train,Who is the parent of Vajiralongkorn?,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Vajiralongkorn> . },"```sparql
SELECT ?parent WHERE {
  dbpedia:Vajiralongkorn dbpedia-owl:parent ?parent .
}
```",1,1,2,1,1,3,2,20,0,0,2,0,0.0,0
328,16,train,Give me the force of the person decedent at Budapest.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> ?v1 . ?v1 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Budapest> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?role ?startYear ?endYear WHERE {
  ?person a dbo:Politician ;
          foaf:name ""Imre Nagy""@en .
  OPTIONAL { ?person dbo:office ?position . }
  OPTIONAL { ?position dbo:positionHeld ?role . }
  OPTIONAL { ?position dbo:startDate ?startYear . }
  OPTIONAL { ?position dbo:endDate ?endYear . }
  FILTER EXISTS {
    ?event dbo:location dbr:Budapest ;
           dbo:agent ?person .
  }
}
```",2,2,3,2,1,3,3,71,0,0,23,0,0.0,0
64,5,train,"Give me the alma mater of the person decedent, that is a writer, at Sremska Kamenica.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>. ?v0 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Sremska_Kamenica> . ?v0 <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
SELECT ?university WHERE {
  wd:Q1234 dbo:almaMater ?university .
}
```

In this query:
- `wd:Q1234` is the DBpedia identifier for Ivo Andrić. You would need to replace it with the correct QID if different.",2,3,3,2,1,2,2,9,0,0,1,0,0.0,0
767,15,train,"Give me the administration, that is a settlement, of the writer of Where It's At (Dustin Lynch album).",SELECT ?result WHERE { <http://dbpedia.org/resource/Where_It's_At_(Dustin_Lynch_album)> <http://dbpedia.org/property/writer> ?v1 . ?result <http://dbpedia.org/property/leaderParty> ?v1 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
# Step 1: Find the album ""Where It's At"" by Dustin Lynch
SELECT ?album WHERE {
    ?album dbo:artist dbr:Dustin_Lynch ;
           rdfs:label ""Where It's At""@en .
}

# Step 2: Confirm Dustin Lynch is associated with this album
SELECT DISTINCT ?writer WHERE {
    ?album dbo:artist dbr:Dustin_Lynch ;
           rdfs:label ""Where It's At""@en .
    ?album dbo:composer ?writer .
    FILTER (str(?writer) = str(dbr:Dustin_Lynch))
}

# Step 3: Find Dustin Lynch's place of residence
SELECT DISTINCT ?residence WHERE {
    dbr:Dustin_Lynch dbo:birthPlace ?residence .
}

# Step 4: Determine the administration governing his settlement
SELECT DISTINCT ?administration WHERE {
    ?residence dbo:governingBody ?administration .
}
```",2,3,3,2,1,3,3,71,0,0,31,0,0.0,0
251,5,train,Give me the author of The Twelve Abbots of Challant.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Twelve_Abbots_of_Challant> <http://dbpedia.org/property/author> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?author WHERE {
  ?book rdfs:label ""The Twelve Abbots of Challant""@en .
  ?book dbo:author ?author .
}
```",1,1,2,1,1,2,3,28,1,0,0,1.0,1.0,1.0
314,1,train,Give me the awardee of 30.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ""30""^^<http://www.w3.org/2001/XMLSchema#integer> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?awardee WHERE {
  ?award a dbo:Award ;
         rdfs:label ""30""@en .
  ?award dbo:recipient ?awardee .
}
```",1,1,2,1,1,2,3,28,0,0,951,0,0.0,0
184,12,train,Give me the parent of Archduchess Ilona of Austria and child of Archduke Joseph August of Austria.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_August_of_Austria> . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Ilona_of_Austria> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?individual WHERE {
  # Find the parent of Archduchess Ilona who is also a child of Archduke Joseph August
  ?ilona dbo:childOf ?parent .
  FILTER(STR(?ilona) = ""Archduchess_Ilona_of_Austria"") .

  ?parent dbo:child ?individual .
  
  ?josephAugust dbo:hasChild ?individual .
  FILTER(STR(?josephAugust) = ""Archduke_Joseph_August_of_Austria"")
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
328,5,train,Who is the person decedent at Budapest?,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Budapest> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name WHERE {
  ?person dbo:deathPlace dbr:Budapest .
  OPTIONAL { ?person foaf:name ?name . }
  FILTER (lang(?name) = 'en')
}
UNION
SELECT ?person ?name WHERE {
  ?person dbo:burialPlace dbr:Budapest .
  OPTIONAL { ?person foaf:name ?name . }
  FILTER (lang(?name) = 'en')
}
ORDER BY ?name
```",1,1,2,1,1,3,3,71,0,0,1147,0,0.0,0
184,11,train,Give me the parent of the native of Budapest.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Budapest> . ?result <http://dbpedia.org/ontology/child> ?v0 . },"```sparql
SELECT DISTINCT ?individual ?parentClass WHERE {
  ?individual dbo:birthPlace dbr:Budapest .
  ?individual a ?class .
  ?class rdfs:subClassOf+ ?parentClass .
}
```",2,2,3,2,1,3,3,71,7,2777,12,0.002514367816091954,0.3684210526315789,0.0049946485907955765
617,8,train,Who is the child of Antiochus (son of Antiochus III the Great)?,SELECT ?result WHERE { <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/child> ?result . },"```sparql
SELECT ?child WHERE {
  ?antiochus3 dbo:spouse ?spouse .
  ?antiochus3 foaf:name ""Antiochus III""@en .
  ?child dbo:parent ?antiochus3 ;
         foaf:name ?name .
  FILTER(CONTAINS(LCASE(?name), ""antiochus""))
}
```",1,1,2,1,1,3,3,71,0,2,1,0.0,0.0,0
492,11,train,"Give me the person decedent at the work of US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/author> ""US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite""@en . ?result <http://dbpedia.org/ontology/deathPlace> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?successor WHERE {
  ?satterthwaite a dbo:Person ;
                 foaf:name ""Joseph C. Satterthwaite""@en .
  
  ?position dbo:officeHolder ?satterthwaite ;
            dbo:title ""Assistant Secretary of State for African Affairs""@en .

  OPTIONAL { 
    ?position dbo:successor ?successor .
  }
}
```",2,2,3,2,1,3,3,71,0,0,30,0,0.0,0
645,2,train,Give me the commander in Battle of Diamond Rock.,SELECT ?result WHERE { <http://dbpedia.org/resource/Battle_of_Diamond_Rock> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT ?commander WHERE {
  ?battle a dbo:MilitaryEngagement ;
          rdfs:label ""Battle of Diamond Rock""@en .
  OPTIONAL { ?battle dbp:commander ?commander . }
}
```",1,1,2,1,1,3,2,20,0,0,2,0,0.0,0
16,1,train,Give me the professional in Actress.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Actress""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?person WHERE {
  ?person dbo:occupation ?occupation .
  ?occupation rdfs:label ""actress""@en .
}
```",1,1,2,1,1,3,3,71,0,0,19241,0,0.0,0
498,1,train,Give me the band of Will Rahmer.,SELECT ?result WHERE { <http://dbpedia.org/resource/Will_Rahmer> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?band WHERE {
  ?person foaf:name ""Will Rahmer""@en .
  ?person dbp:band ?band .
}
```",1,1,2,1,1,2,2,9,0,0,2,0,0.0,0
747,7,train,Give me the persona of Shèna.,SELECT ?result WHERE { <http://dbpedia.org/resource/Shèna> <http://xmlns.com/foaf/0.1/givenName> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?characterDescription WHERE {
  ?character a dbo:TelevisionCharacter .
  ?character dbo:name ""Shená"" .
  ?character dbo:tvSeries dbr:The_Young_and_the_Restless .
  ?character dbo:description ?characterDescription .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
915,6,train,"Give me the father of Lizzie Spaulding and resident of Springfield, Illinois.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Springfield,_Illinois> . <http://dbpedia.org/resource/Lizzie_Spaulding> <http://dbpedia.org/property/father> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  ?lizzie a dbo:Person ;
          foaf:name ""Lizzie Spaulding""@en .
  ?lizzie dbo:father ?father .

  OPTIONAL { 
    ?father dbo:residence ?residence .
    FILTER(CONTAINS(LCASE(str(?residence)), ""springfield, illinois""))
  }
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
161,0,train,Give me the military force of Rif War.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Rif_War> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?country ?militaryForce WHERE {
  ?event dbo:wikiPageRedirects ?riffWar .
  ?riffWar rdfs:label ""Rif War""@en .
  
  ?participant dbo:participatedIn ?event ;
               a dbo:MilitaryConflictParticipant .

  OPTIONAL { 
    ?participant dbp:militaryForce ?militaryForce .
  }

  ?participant rdfs:label ?countryLabel .
  FILTER (lang(?countryLabel) = ""en"")
  BIND(IRI(CONCAT(""http://dbpedia.org/resource/"", REPLACE(LCASE(?countryLabel), "" "", ""_""))) AS ?country)
}
```",1,1,2,1,1,3,3,71,0,0,56,0,0.0,0
179,2,train,"Who is the child, that is a royalty, of Nakkhatra Mangala?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Nakkhatra_Mangala> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  ?parent rdfs:label ""Nakkhatra Mangala""@en .
  ?parent dbo:child ?child .
  ?child a dbo:Royalty .
}
```",1,2,2,1,1,3,2,20,1,0,0,1.0,1.0,1.0
356,0,train,Give me the player in 2015 Sacramento Republic FC season.,SELECT ?result WHERE { <http://dbpedia.org/resource/2015_Sacramento_Republic_FC_season> <http://dbpedia.org/ontology/team> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?player ?playerLabel WHERE {
    ?team dbo:homeTeam dbr:Sacramento_Republic_FC .
    ?team dbo:season ""2015""^^xsd:gYear .
    ?team dbo:rosterMember ?player .
    
    FILTER NOT EXISTS { ?player a dbo:SportsAgent } # Exclude non-player entities
    SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
54,3,train,Give me the child of Thinkhaya of Pagan.,SELECT ?result WHERE { <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  ?thinkhaya a dbo:Monarch ;
             foaf:name ""Thinkhaya""@en .
  ?thinkhaya dbo:spouse|dbo:child ?person .
  ?person dbo:parent ?thinkhaya .
  ?person a dbo:Person .
  FILTER NOT EXISTS { ?person dbo:spouse ?other . }
  BIND(?person AS ?child)
}
```",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
9,4,train,"Who is the mayor, that is a politician, of Northern Ireland Forum?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Northern_Ireland_Forum> <http://dbpedia.org/property/leader> ?result . },"```sparql
# Since the Northern Ireland Forum does not have a mayor, this query would not yield relevant results.
SELECT ?person WHERE {
  ?forum rdf:type dbo:PoliticalBody .
  ?forum rdfs:label ""Northern Ireland Forum""@en .
  OPTIONAL { ?forum dbo:mayor ?person . }
}
```",1,2,2,1,1,3,3,71,0,0,10,0,0.0,0
626,4,train,Who is the military force of Battle of Borodino?,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Borodino> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?force ?commander WHERE {
  ?battle a dbo:Battle .
  ?battle rdfs:label ""Battle of Borodino""@en .
  
  OPTIONAL { 
    ?participation dbo:agent ?force .
    ?participation dbo:commander ?commander .
    ?participation dbo:participatedIn ?battle .
  }
}
```",1,1,2,1,1,3,2,20,0,0,52,0,0.0,0
10,9,train,Give me the professional in  and band member of Luke Vibert.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Luke_Vibert> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?profession ?band WHERE {
  ?person rdfs:label ""Luke Vibert""@en .
  ?person dbo:occupation ?profession .
  OPTIONAL { 
    ?person dbo:bandMember ?band .
  }
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
485,4,train,"Who is the awardee, that is a writer and a poet, of Eric Gregory Award?",SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Eric_Gregory_Award> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Poet>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?awardee WHERE {
  ?award dbo:recipient ?awardee .
  FILTER (strstarts(str(?award), ""http://dbpedia.org/resource/Eric_Gregory_Award""))
  OPTIONAL { ?awardee dbo:occupation ?occupation . }
  VALUES ?occupation { dbr:Writer dbr:Poet }
}
```",1,3,2,1,1,2,3,28,0,0,7,0,0.0,0
783,2,train,Give me the person born as Samuel Ofori Amponsah.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Samuel Ofori Amponsah""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person ?currentName WHERE {
  ?person dbo:birthName ""Samuel Ofori Amponsah"" .
  OPTIONAL { 
    ?person foaf:name ?currentName .
  }
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
182,11,train,Give me the entity in the nationality of Tamara Kunanayakam.,SELECT ?result WHERE { <http://dbpedia.org/resource/Tamara_Kunanayakam> <http://dbpedia.org/ontology/nationality> ?v1 . ?result <http://dbpedia.org/ontology/place> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity WHERE {
  ?entity dbo:nationality dbr:Sri_Lanka .
}
```",2,2,3,2,1,2,3,28,0,861,62,0.0,0.0,0
488,17,train,"Who is the father of the spouse, that is a royalty, of Tokugawa Masako?",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Tokugawa_Masako> . ?v1 <http://dbpedia.org/property/father> ?result . },"```sparql
SELECT ?father WHERE {
  ?masako dbo:spouse ?spouse .
  ?masako rdfs:label ""Tokugawa Masako""@en .
  
  ?spouse dbo:title ?title .
  FILTER(CONTAINS(LCASE(?title), ""prince"") || CONTAINS(LCASE(?title), ""royalty"")) .

  ?spouse foaf:parent ?father .
}
```",2,3,3,2,1,3,3,71,0,0,1,0,0.0,0
827,0,train,"Give me the child of Charles Alexander, Grand Duke of Saxe-Weimar-Eisenach.","SELECT ?result WHERE { <http://dbpedia.org/resource/Charles_Alexander,_Grand_Duke_of_Saxe-Weimar-Eisenach> <http://dbpedia.org/ontology/child> ?result . }","```sparql
SELECT ?child WHERE {
  ?person dbo:parent dbr:Charles_Alexander,_Grand_Duke_of_Saxe-Weimar-Eisenach .
  ?person a dbo:Person .
  ?person dbo:child ?child .
}
```",1,1,2,1,1,3,2,20,0,0,3,0,0.0,0
92,0,train,Give me the band member of Nevermore.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Nevermore> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?member WHERE {
  ?group rdfs:label ""Nevermore""@en .
  FILTER NOT EXISTS { ?group a dbo:MusicalArtist } # Ensure it's a group, not an individual artist
  ?group dbo:bandMember ?member .
}
```",1,1,2,1,1,3,3,71,0,0,12,0,0.0,0
115,6,train,Give me the alma mater of the awardee of National Order of Scientific Merit.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/almaMater> ?result . ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/National_Order_of_Scientific_Merit> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person ?almaMater WHERE {
  ?person dbo:award dbr:National_Order_of_Scientific_Merit .
  ?education dbo:alumnus ?person ;
             a dbo:EducationalInstitution ;
             dbo:highestDegree ?degree .
  OPTIONAL { 
    ?degree dbo:institution ?almaMater .
  }
}
```",2,2,3,2,1,2,2,9,0,0,5,0,0.0,0
701,2,train,Give me the spouse of Ramesses II.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Ramesses_II> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?spouse WHERE {
  ?person a dbo:Monarch ;
          foaf:name ""Ramesses II""@en .
  OPTIONAL { ?person dbo:spouse ?spouse . }
}
```",1,1,2,1,1,3,3,71,0,0,5,0,0.0,0
465,6,train,"Give me the administration of the leader, that is a political party and an organisation, of Chamber of Deputies of the Czech Republic.",SELECT ?result WHERE { <http://dbpedia.org/resource/Chamber_of_Deputies_of_the_Czech_Republic> <http://dbpedia.org/property/leader> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/property/leaderParty> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?leader ?party ?organization WHERE {
  # Find the leader of the Chamber of Deputies
  ?chamber a dbo:Parliament ;
           dbo:country dbr:Czech_Republic ;
           dbo:leader ?leader .
  
  FILTER (strstarts(str(?chamber), ""http://dbpedia.org/resource/Chamber_of_Deputies_(Czech_Republic)""))

  # Get the political party of the leader
  OPTIONAL { ?leader dbo:politicalParty ?party . }

  # Get the organization associated with the leader
  OPTIONAL { ?leader dbo:organization ?organization . }
}
```",2,4,3,2,1,2,2,9,0,0,50,0,0.0,0
285,8,train,Give me the spouse of the professional in .,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v0 . ?v0 <http://dbpedia.org/property/occupation> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?spouse WHERE {
  ?person a dbo:Person ;
          foaf:name ?name .
  
  FILTER regex(?name, ""Professional Name"", ""i"") # Replace ""Professional Name"" with the actual name of the professional

  ?person dbo:spouse ?spouse .
}
```",2,2,3,2,1,3,2,20,0,0,4149,0,0.0,0
820,8,train,Give me the child of the parent of Jason Schwartzman.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Jason_Schwartzman> . ?result <http://dbpedia.org/property/father> ?v0 . },"```sparql
SELECT ?grandchild WHERE {
  ?person dbo:birthName ""Jason Andrew Schwartzman"" .
  ?person dbo:parent ?parent .
  ?parent dbo:child ?grandchild .
}
```",2,2,3,2,1,3,2,20,0,0,2,0,0.0,0
778,0,train,Give me the entity in United States.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/United_States> . },"```sparql
SELECT ?entity WHERE {
  ?entity dbo:country <http://dbpedia.org/resource/United_States> .
}
LIMIT 10
```",1,1,2,1,1,3,2,20,0,10,13008,0.0,0.0,0
161,3,train,Who is the person decedent at Francoist Spain?,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Francoist_Spain> . },"```sparql
SELECT ?person WHERE {
  ?person dbo:spouse ?spouse .
  ?spouse foaf:name ""Franco""@en .
  FILTER EXISTS { ?person dbo:deathDate ?date . }
}
```

This query attempts to find individuals related to Francisco Franco, specifically looking for spouses or close associates who might be relevant in the context of his death. However, since the question directly pertains to Franco himself as the decedent, a more straightforward query would simply retrieve information about Francisco Franco's death.",1,1,2,1,1,3,3,71,0,0,125,0,0.0,0
303,6,train,Give me the entity in Panama and party of Guillermo Endara.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Panama> . <http://dbpedia.org/resource/Guillermo_Endara> <http://dbpedia.org/ontology/party> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity ?party WHERE {
  # Find Guillermo Endara's political party
  dbr:Guillermo_Endara dbo:politicalParty ?party .
  
  # Find entities in Panama related to Guillermo Endara
  OPTIONAL { 
    ?entity dbo:country dbr:Panama ;
            dbo:president dbr:Guillermo_Endara .
  }
}
```",2,2,3,1,2,2,3,28,0,0,2,0,0.0,0
547,17,train,Give me the awardee of the award of Gerald Graham.,SELECT ?result WHERE { <http://dbpedia.org/resource/Gerald_Graham> <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/property/awards> ?v1 . },"```sparql
SELECT ?award ?awardee WHERE {
  ?person foaf:name ""Gerald Graham""@en .
  ?person dbo:awardReceived ?award .
  ?award dbo:recipient ?awardee .
}
```",2,2,3,2,1,3,3,71,0,0,2075,0,0.0,0
959,13,train,"Give me the native of the residence, that is a country, of Yōichi Masuzoe.",SELECT ?result WHERE { <http://dbpedia.org/resource/Yōichi_Masuzoe> <http://dbpedia.org/property/residence> ?v1 . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
SELECT ?nativeCountry WHERE {
  wd:Q123456 wdt:P19 wd:Q60 . # Yōichi Masuzoe's residence (Tokyo)
  wd:Q60 wdt:P17 ?country .   # Tokyo is in Japan
  ?country wdt:P31/wdt:P279* wd:Q6256 . # Country is a type of country
  ?country wdt:P17 ?nativeCountry .    # Native country of the residence
}
```

Note: Replace `wd:Q123456` with Yōichi Masuzoe's actual DBpedia entity ID.",2,3,3,2,1,3,3,71,0,0,8419,0,0.0,0
251,3,train,"Give me the war, that is a military conflict, of Louis François Félix Musnier.",SELECT ?result WHERE { <http://dbpedia.org/resource/Louis_François_Félix_Musnier> <http://dbpedia.org/ontology/battle> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war WHERE {
  ?person a dbo:MilitaryPerson ;
          foaf:name ""Louis François Félix Musnier""@en .
  
  ?person dbo:participatedIn ?event .
  ?event rdf:type dbo:MilitaryConflict .

  BIND(?event AS ?war)
}
```",1,2,2,1,1,2,3,28,0,0,16,0,0.0,0
182,10,train,Give me the war of the work of Gotabhaya Rajapaksa.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Gotabhaya_Rajapaksa> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war ?description WHERE {
  ?person dbo:occupation dbr:Secretary_of_Defence_(Sri_Lanka) .
  ?person foaf:name ""Gotabhaya Rajapaksa""@en .
  ?person dbo:associatedWith ?war .
  ?war dbo:description ?description .
}
```",2,2,3,2,1,2,3,28,0,0,5,0,0.0,0
55,3,train,"Give me the producer, that is a band, of Used to Love Her.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. <http://dbpedia.org/resource/Used_to_Love_Her> <http://dbpedia.org/ontology/producer> ?result . },"```sparql
SELECT ?producer WHERE {
  ?song dcterms:title ""Used to Love Her"" .
  ?song dbo:artist <http://dbpedia.org/resource/Billie_Eilish> .
  ?song dbo:producer ?producer .
  FILTER(CONTAINS(LCASE(STR(?producer)), ""finneas""))
}
```",1,2,2,1,1,2,3,28,0,0,1,0,0.0,0
981,5,train,"Who is the person born, that is a beauty queen, as ?","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BeautyQueen>. ?result <http://dbpedia.org/property/birthName> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?birthDate WHERE {
  ?person dbo:award ?award .
  FILTER EXISTS { ?award rdf:type dbo:PageantAward . }
  ?person dbo:birthDate ?birthDate .
}
```",1,2,2,1,1,3,2,20,0,0,120,0,0.0,0
485,9,train,Give me the entity in Nottinghamshire and birth place of Thomas Warner (poet).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Nottinghamshire> . <http://dbpedia.org/resource/Thomas_Warner_(poet)> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthPlace WHERE {
  ?person a dbo:Person ;
          foaf:name ""Thomas Warner"" ;
          dbo:occupation dbo:Poet .
  ?person dbo:birthPlace ?birthPlace .
  ?birthPlace dbp:country ""England""@en .
  FILTER(CONTAINS(LCASE(?birthPlaceLabel), ""nottinghamshire""))
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
783,7,train,Give me the associated musical artist of the band member of Ofori Amponsah.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Ofori_Amponsah> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandMember ?associatedArtist WHERE {
  # Find entities related to Ofori Amponsah as band members
  ?bandMember dbo:memberOfBand dbr:Ofori_Amponsah .
  
  # Check if the band member has an associated musical artist
  OPTIONAL { 
    ?bandMember dbo:associatedMusicalArtist ?associatedArtist .
  }
}
```",2,2,3,2,1,3,2,20,0,0,35,0,0.0,0
251,8,train,"Give me the location of the war, that is a military conflict, of Louis François Félix Musnier.",SELECT ?result WHERE { <http://dbpedia.org/resource/Louis_François_Félix_Musnier> <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://dbpedia.org/ontology/place> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?war ?location WHERE {
  ?person dbo:name ""Louis François Félix Musnier""@en .
  ?person dbo:participatedIn ?event .
  ?event a dbo:MilitaryConflict ;
         rdfs:label ?war .
  OPTIONAL { ?event dbp:location ?location }
}
```",2,3,3,2,1,2,3,28,0,0,25,0,0.0,0
345,3,train,Give me the nickname of FC Vaduz.,SELECT ?result WHERE { <http://dbpedia.org/resource/FC_Vaduz> <http://dbpedia.org/property/nickname> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nickname WHERE {
  dbr:FC_Vaduz dbo:nickName ?nickname .
}
```",1,1,2,1,1,3,2,20,0,0,3,0,0.0,0
92,9,train,Give me the band member of Nevermore and associated musical artist of Jim Sheppard.,SELECT ?result WHERE { <http://dbpedia.org/resource/Jim_Sheppard> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Nevermore> . },"```sparql
# Part 1: Retrieve band members of Nevermore
SELECT ?member WHERE {
    ?band dbr:Nevermore .
    ?band dbo:bandMember ?member .
}

# Part 2: Find associated musical artists for Jim Sheppard if he is a member of Nevermore
SELECT DISTINCT ?associatedArtist WHERE {
    # Check if Jim Sheppard is a member of Nevermore
    ?band dbr:Nevermore .
    ?band dbo:bandMember dbr:Jim_Sheppard .

    # Retrieve other bands or projects associated with Jim Sheppard
    ?sheppardBand dbo:bandMember dbr:Jim_Sheppard .
    ?sheppardBand rdfs:label ?associatedArtist .
    
    FILTER(LANG(?associatedArtist) = 'en')
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
820,10,train,Who is the parent of the professional in Actor?,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://dbpedia.org/property/occupation> ""Actor""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?actor ?parentName WHERE {
  ?actor a dbo:Actor ;
         foaf:name ""Tom Hanks""@en .
  ?actor dbo:parent ?parent .
  ?parent foaf:name ?parentName .
}
```",2,2,3,2,1,3,2,20,0,0,921,0,0.0,0
626,1,train,Give me the awardee of Order of St. Andrew.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Order_of_St._Andrew> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?recipient WHERE {
  ?award dbo:officialName ""Order of St. Andrew""@en .
  ?award dbo:recipient ?recipient .
}
```",1,1,2,1,1,3,2,20,0,0,33,0,0.0,0
161,11,train,"Give me the military force of the force, that is a societal event and an event and a military conflict, of Francisco Franco.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v0 . ?v0 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Franco> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce WHERE {
  ?franco a dbo:Person ;
          foaf:name ""Francisco Franco""@en .
  
  ?conflict a dbo:MilitaryConflict ;
            dbo:participatedInMilitaryGroup ?militaryForce ;
            dbo:opposingMilitaryGroup ?opposingGroup .

  ?militaryForce dbo:leader ?franco ;
                 a dbo:SocietalEvent, dbo:Event .

  FILTER EXISTS { ?conflict dbo:name ""Spanish Civil War""@en }
}
```",2,5,3,2,1,3,3,71,0,0,545,0,0.0,0
666,3,train,"Give me the manager, that is a sports manager, of 2016–17 Hull City A.F.C. season.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. <http://dbpedia.org/resource/2016–17_Hull_City_A.F.C._season> <http://dbpedia.org/ontology/manager> ?result . },"```sparql
PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?manager WHERE {
  ?team a dbpedia-owl:FootballClub ;
        rdfs:label ""Hull City A.F.C.""@en .
  
  OPTIONAL { 
    ?team dbp:season ""2016–17""@en .
  }
  
  ?team dbp:manager ?manager .
}
```",1,2,2,1,1,3,2,20,0,0,4,0,0.0,0
232,5,train,"Give me the professional in Actor, narrator and producer.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Actor, narrator and producer""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?person WHERE {
  ?person a dbo:Person .
  ?person dbo:occupation ?occupation1 .
  ?occupation1 rdfs:label ?label1 .
  FILTER (lang(?label1) = 'en' && (?label1 = ""Actor"" || ?label1 = ""Narrator"" || ?label1 = ""Producer"")) .

  ?person dbo:occupation ?occupation2 .
  ?occupation2 rdfs:label ?label2 .
  FILTER (lang(?label2) = 'en' && (?label2 = ""Actor"" || ?label2 = ""Narrator"" || ?label2 = ""Producer"")) .

  ?person dbo:occupation ?occupation3 .
  ?occupation3 rdfs:label ?label3 .
  FILTER (lang(?label3) = 'en' && (?label3 = ""Actor"" || ?label3 = ""Narrator"" || ?label3 = ""Producer"")) .

  FILTER (
    ((?label1 = ""Actor"") && (?label2 = ""Narrator"") && (?label3 = ""Producer"")) ||
    ((?label1 = ""Actor"") && (?label2 = ""Producer"") && (?label3 = ""Narrator"")) ||
    ((?label1 = ""Narrator"") && (?label2 = ""Actor"") && (?label3 = ""Producer"")) ||
    ((?label1 = ""Narrator"") && (?label2 = ""Producer"") && (?label3 = ""Actor"")) ||
    ((?label1 = ""Producer"") && (?label2 = ""Actor"") && (?label3 = ""Narrator"")) ||
    ((?label1 = ""Producer"") && (?label2 = ""Narrator"") && (?label3 = ""Actor""))
  )
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
179,0,train,Give me the person born as Mom Rajawongse Sirikit Kitiyakara.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Mom Rajawongse Sirikit Kitiyakara""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person ?name ?description WHERE {
  ?person a dbo:Person .
  OPTIONAL { ?person foaf:name ?name . }
  OPTIONAL { ?person dbo:birthName ""Mom Rajawongse Sirikit Kitiyakara"" . }
  OPTIONAL { ?person dbo:description ?description . }
}
```",1,1,2,1,1,3,2,20,1,1540257,0,6.492418802564246e-07,1.0,1.2984829174833582e-06
318,1,train,Give me the professional in Composer.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/Composer> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?composer WHERE {
  ?composer a dbo:Person .
  ?composer dbo:occupation rdfs:subClassOf* dbo:Composer .
}
```",1,1,2,1,1,2,2,9,0,0,1916,0,0.0,0
838,10,train,"Give me the band, that is a group, of the reference, that is a group and an organisation, to YU Grupa.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""YU Grupa""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band WHERE {
  # Identify the DBpedia resource for YU Grupa
  VALUES ?yuGrupa { dbr:YU_Grupa }

  # Find entities that are both bands and organizations
  ?band a dbo:Band ;
        a dbo:Organization .

  # Check if these entities have any relationship with YU Grupa
  OPTIONAL {
    ?yuGrupa dbo:associatedBand ?band .
  }
  UNION
  OPTIONAL {
    ?band dbo:associatedBand ?yuGrupa .
  }

  FILTER (?band != ?yuGrupa)
}
```",2,5,3,2,1,3,2,20,0,0,8,0,0.0,0
9,12,train,Give me the figure known as QUB and alma mater of Allen Hill (scientist).,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ""QUB""@en . <http://dbpedia.org/resource/Allen_Hill_(scientist)> <http://dbpedia.org/ontology/almaMater> ?result . }","```sparql
# Query to get the DBpedia resource for Queen's University Belfast (QUB)
SELECT ?qub WHERE {
  ?qub rdfs:label ""Queen's University Belfast""@en .
}

# Query to find Allen Hill's alma mater and check if it is QUB
SELECT ?almaMaterLabel WHERE {
  ?allenHill foaf:name ""Allen Hill""@en ;
             dbo:almaMater ?almaMater .
  ?almaMater rdfs:label ?almaMaterLabel .
  FILTER EXISTS { 
    SELECT ?qub WHERE {
      ?qub rdfs:label ""Queen's University Belfast""@en .
    }
  }
  BIND(IF(STR(?almaMater) = STR(?qub), ?almaMaterLabel, ""Not QUB"") AS ?result)
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
9,16,train,"Who is the awardee of the reference, that is an award, to Royal Medals?","SELECT ?result WHERE { ?v1 <http://xmlns.com/foaf/0.1/name> ""Royal Medals""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?result <http://dbpedia.org/property/awards> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?awardee WHERE {
  ?awardee dbo:award dbr:Royal_Medal .
}
```",2,3,3,2,1,3,3,71,41,233,4,0.14963503649635038,0.9111111111111111,0.25705329153605017
328,11,train,"Give me the awardee of the award of Bruce Fraser, 1st Baron Fraser of North Cape.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape> <http://dbpedia.org/property/awards> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?awardee WHERE {
  ?fraser a dbo:Person ;
          foaf:name ""Bruce Fraser, 1st Baron Fraser of North Cape""@en .
  ?fraser dbo:awardReceived ?award .
  ?award dbo:recipient ?fraser ;
         dbo:givenBy ?awardee .
}
```",2,2,3,2,1,3,3,71,0,0,1484,0,0.0,0
915,3,train,"Give me the birthplace, that is a settlement, of Stephen Verona.",SELECT ?result WHERE { <http://dbpedia.org/resource/Stephen_Verona> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?birthPlace WHERE {
  ?person dbo:name ""Stephen Verona""@en .
  ?person dbo:birthPlace ?birthPlace .
  ?birthPlace rdf:type ?type .
  FILTER (?type = dbo:Settlement || ?type = dbo:City || ?type = dbo:Town)
}
```",1,2,2,1,1,3,2,20,0,0,1,0,0.0,0
55,4,train,"Give me the band member, that is a band and a group, of San Francisco Symphony.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/San_Francisco_Symphony> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?member ?bandGroup WHERE {
  # Find the San Francisco Symphony entity
  ?symphony a dbo:SymphonyOrchestra ;
            rdfs:label ""San Francisco Symphony""@en .

  # Identify members of the San Francisco Symphony
  ?symphony dbo:musicArtist ?member .

  # Check if these members are also part of another band or group
  OPTIONAL {
    ?member dbo:bandMemberOf ?bandGroup .
  }

  FILTER(?bandGroup != ?symphony)
}
```",1,3,2,1,1,2,3,28,0,0,3,0,0.0,0
345,1,train,Give me the team of Alessandro Mangiarratti.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Alessandro_Mangiarratti> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?team WHERE {
  ?person a dbo:FootballPlayer .
  ?person foaf:name ""Alessandro Mangiarratti""@en .
  OPTIONAL { ?person dbo:nationality dbr:Italy . }
  ?person dbo:team ?team .
}
```",1,1,2,1,1,3,2,20,0,0,2,0,0.0,0
55,6,train,Give me the band member of Metallica and band member of Guns N' Roses.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Guns_N'_Roses> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Metallica> . },"```sparql
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>

SELECT DISTINCT ?person WHERE {
  # Find members of Metallica
  { 
    ?metallicaMember a foaf:Group ;
                     foaf:name ""Metallica""@en .
    ?metallicaMember foaf:member ?person .
  }
  
  UNION
  
  # Find members of Guns N' Roses
  { 
    ?gunsNRosesMember a foaf:Group ;
                      foaf:name ""Guns N' Roses""@en .
    ?gunsNRosesMember foaf:member ?person .
  }

  FILTER EXISTS {
    # Ensure the person is a member of both bands
    {
      ?metallicaMember a foaf:Group ;
                       foaf:name ""Metallica""@en .
      ?metallicaMember foaf:member ?person .
    }
    
    UNION
    
    {
      ?gunsNRosesMember a foaf:Group ;
                        foaf:name ""Guns N' Roses""@en .
      ?gunsNRosesMember foaf:member ?person .
    }
  }
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
827,2,train,"Who is the parent of Charles Alexander, Grand Duke of Saxe-Weimar-Eisenach?","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Charles_Alexander,_Grand_Duke_of_Saxe-Weimar-Eisenach> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent ?relation WHERE {
  VALUES ?person { dbr:Charles_Alexander,_Grand_Duke_of_Saxe-Weimar-Eisenach }
  OPTIONAL { ?person dbo:father ?parent . BIND(""Father"" AS ?relation) }
  OPTIONAL { ?person dbo:mother ?parent . BIND(""Mother"" AS ?relation) }
}
```",1,1,2,1,1,3,2,20,0,0,2,0,0.0,0
547,12,train,Give me the resting place of Simon Cadell and resting place of Alan Cunningham.,SELECT ?result WHERE { <http://dbpedia.org/resource/Simon_Cadell> <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Alan_Cunningham> <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?name ?deathPlace WHERE {
  VALUES (?person ?name) {
    (dbr:Simon_Cadell ""Simon Cadell"")
    (dbr:Alan_Cunningham_(actor) ""Alan Cunningham"")
  }
  
  ?person dbo:name ?name .
  OPTIONAL { ?person dbo:deathPlace ?deathPlace . }
}
```",2,2,3,1,2,3,3,71,0,0,2,0,0.0,0
92,4,train,"Give me the reference, that is an artist, to Nevermore.","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Nevermore""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artist WHERE {
  ?band a dbo:Band .
  ?band dbo:name ""Nevermore""@en .
  ?band dbo:member ?artist .
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
378,12,train,"Give me the war of Joaquín Blake and claim to fame of Louis des Balbes de Berton de Crillon, 1st Duke of Mahón.","SELECT ?result WHERE { <http://dbpedia.org/resource/Joaquín_Blake> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Louis_des_Balbes_de_Berton_de_Crillon,_1st_Duke_of_Mahón> <http://dbpedia.org/ontology/knownFor> ?result . }","```sparql
# Query for the war in which Joaquín Blake participated
SELECT ?war WHERE {
  wd:Q123456 dbo:militaryConflict ?war .
}
```

```sparql
# Query for the claim to fame of Louis des Balbes de Berton de Crillon, 1st Duke of Mahón
SELECT ?fame WHERE {
  wd:Q654321 dbo:notableAchievement ?fame .
}
```

Note: Replace `wd:Q123456` with the actual DBpedia resource ID for Joaquín Blake and `wd:Q654321` with the actual DBpedia resource ID for Louis des Balbes de Berton de Crillon, 1st Duke of Mahón.",2,2,3,1,2,3,3,71,0,0,2,0,0.0,0
645,1,train,Give me the alma mater of Sylvia Pankhurst.,SELECT ?result WHERE { <http://dbpedia.org/resource/Sylvia_Pankhurst> <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?institution WHERE {
  ?s dbp:name ""Sylvia Pankhurst""@en .
  ?s dbo:almaMater ?institution .
}
```",1,1,2,1,1,3,2,20,2,0,0,1.0,1.0,1.0
427,3,train,Give me the party of Michele Pinto.,SELECT ?result WHERE { <http://dbpedia.org/resource/Michele_Pinto> <http://dbpedia.org/ontology/party> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?party WHERE {
  ?person foaf:name ""Michele Pinto""@en .
  ?person dbo:partyAffiliation ?party .
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
498,6,train,"Give me the band of the member, that is an artist, of Mortician (band).",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Mortician_(band)> <http://dbpedia.org/ontology/bandMember> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?member ?artistBand WHERE {
  # Find all members of Mortician
  ?mortalMember dbo:band dbr:Mortician .
  
  # Filter those who are also artists
  ?mortalMember dbo:occupation dbr:Artist .

  # Get the bands these artist members belong to
  ?member dbo:band ?artistBand .
}
```",2,3,3,2,1,2,2,9,0,0,2,0,0.0,0
44,1,train,Give me the band member of Sledgeback.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Sledgeback> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?member WHERE {
  ?band a dbo:Band .
  ?band foaf:name ""Sledgeback"" .
  ?band dbo:bandMember ?member .
}
```",1,1,2,1,1,2,2,9,0,0,8,0,0.0,0
281,15,train,Who is the awardee of the award of Jonathon Band?,SELECT ?result WHERE { <http://dbpedia.org/resource/Jonathon_Band> <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/property/awards> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?awardee WHERE {
  ?person a dbo:Award ;
          dbo:recipient ?awardee .
  ?person rdfs:label ""Jonathon Band""@en .
}
```",2,2,3,2,1,3,3,71,0,0,558,0,0.0,0
435,3,train,"Give me the figure known, that is a settlement and a town and Icelandic, as Land of fire and ice.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ""Land of fire and ice""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Town>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Iceland>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?town WHERE {
  ?town a dbo:Town ;
        dbo:country dbr:Iceland .
  OPTIONAL { 
    ?town rdfs:label ?label FILTER (lang(?label) = 'en') .
  }
}
```",1,4,2,1,1,2,3,28,1,103,0,0.009615384615384616,1.0,0.01904761904761905
421,10,train,Give me the native of the birthplace of Samir Bekrić.,SELECT ?result WHERE { <http://dbpedia.org/resource/Samir_Bekrić> <http://dbpedia.org/ontology/birthPlace> ?v0 . ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . },"```sparql
SELECT ?nativeLabel WHERE {
  ?person dbo:birthPlace ?birthPlace .
  ?birthPlace rdfs:label ?nativeLabel .
  FILTER (lang(?nativeLabel) = ""sr"") # Assuming Serbian as a possible native language for Samir Bekrić's birthplace.
  
  VALUES ?person { 
    dbpedia:Samir_Bekrić
  }
}
```",2,2,3,2,1,2,3,28,0,0,5492,0,0.0,0
659,12,train,Give me the military force of Napoleonic Wars and commander in Battle of Leipzig.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Napoleonic_Wars> . <http://dbpedia.org/resource/Battle_of_Leipzig> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
# Part 1: Retrieve military forces involved in the Napoleonic Wars
SELECT ?force WHERE {
  ?war dbo:wikiPageRedirects db:Napoleonic_Wars .
  ?war dbo:militaryForce ?force .
}

UNION

# Part 2: Identify commanders at the Battle of Leipzig
SELECT DISTINCT ?commander WHERE {
  db:Battle_of_Leipzig dbo:commander ?commander .
}
```",2,2,3,1,2,3,3,71,0,0,5,0,0.0,0
712,1,train,Give me the resting place of Nina Onilova.,SELECT ?result WHERE { <http://dbpedia.org/resource/Nina_Onilova> <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?restingPlace WHERE {
  ?person a dbo:Person ;
          foaf:name ""Nina Onilova""@en .
  
  OPTIONAL { 
    ?person dbo:deathPlace ?place .
    ?place rdfs:label ?restingPlace .
    FILTER (lang(?restingPlace) = 'en')
  }
}
```",1,1,2,1,1,3,2,20,0,0,2,0,0.0,0
959,6,train,"Give me the residence, that is a country, of Yōichi Masuzoe.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Yōichi_Masuzoe> <http://dbpedia.org/property/residence> ?result . },"```sparql
SELECT ?country WHERE {
  ?person dbo:birthName ""Yōichi Masuzoe""@ja .
  ?person dbo:residence ?residence .
  ?residence a dbo:Country .
  BIND(?residence AS ?country)
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
712,2,train,"Give me the military force, that is an organisation and a military unit, of Vyoshenskaya Uprising.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Vyoshenskaya_Uprising> . },"```sparql
PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?militaryForce WHERE {
  ?uprising rdf:type dbo:Revolt .
  ?uprising rdfs:label ""Vyoshenskaya Uprising""@en .
  ?uprising dbp:militaryForce ?militaryForce .
  FILTER (lang(?militaryForce) = 'en')
}
```",1,3,2,1,1,3,2,20,0,0,1,0,0.0,0
783,3,train,Give me the band member of Ofori Amponsah.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Ofori_Amponsah> . },"```sparql
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?bandMember WHERE {
  ?artist a dbo:MusicArtist ;
          foaf:name ""Ofori Amponsah""@en .
  
  OPTIONAL { 
    ?artist dbp:member ?bandMember .
  }
}
```",1,1,2,1,1,3,2,20,0,0,5,0,0.0,0
232,17,train,"Give me the residence, that is a settlement and British, of the native, that is a politician and an office holder, of France.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/France> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://dbpedia.org/property/residence> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?residence WHERE {
  ?person a dbo:Politician ;
          dbo:nationality dbr:France ;
          dbo:officeHolder true .
  
  ?person dbo:residence ?residence .

  ?residence a dbo:Settlement ;
             dbp:country dbr:United_Kingdom .
}
```",2,6,3,2,1,3,3,71,0,0,2,0,0.0,0
179,10,train,Who is the child of the parent of Vajiralongkorn?,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Vajiralongkorn> . ?v0 <http://dbpedia.org/ontology/child> ?result . },"```sparql
SELECT ?child WHERE {
  ?vajiralongkorn dbo:parent ?parent .
  FILTER(STR(?vajiralongkorn) = ""Vajiralongkorn"")
  ?parent dbo:child ?child .
}
```",2,2,3,2,1,3,2,20,0,0,4,0,0.0,0
10,10,train,"Give me the band member of the person born, that is an artist, as Luke Francis Vibert.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ""Luke Francis Vibert""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band WHERE {
  ?person a dbo:Artist ;
          foaf:name ""Luke Francis Vibert"" .
  
  OPTIONAL { 
    ?person dbo:memberOfBand ?band .
  }
}
```",2,3,3,2,1,2,3,28,0,0,3,0,0.0,0
783,1,train,Give me the band member of Ebony Reigns.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Ebony_Reigns> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandMember WHERE {
  VALUES ?ebony { dbr:Ebony_Reigns }
  ?ebony dbo:memberOfBand ?band .
  ?band dbo:bandMember ?bandMember .
}
```",1,1,2,1,1,3,2,20,0,0,7,0,0.0,0
232,0,train,Give me the child of Jon Pertwee.,SELECT ?result WHERE { <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/ontology/child> ?result . },"```sparql
SELECT ?child WHERE {
  ?person rdfs:label ""Jon Pertwee""@en .
  ?person dbo:child ?child .
}
```",1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
182,4,train,Give me the work of Gotabhaya Rajapaksa.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Gotabhaya_Rajapaksa> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?work WHERE {
  VALUES ?person { dbr:Gotabhaya_Rajapaksa }
  ?person dbo:occupation ?occupation .
  OPTIONAL { ?person dbo:notableWork ?work . }
}
```",1,1,2,1,1,2,3,28,0,0,1,0,0.0,0
391,1,train,Give me the actor of The Departed.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Departed> <http://dbpedia.org/ontology/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor ?actorLabel WHERE {
  VALUES ?film { dbr:The_Departed }
  ?film dbo:starring ?actor .
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
```",1,1,2,1,1,3,3,71,0,0,9,0,0.0,0
547,2,train,Give me the resting place of Alan Cunningham.,SELECT ?result WHERE { <http://dbpedia.org/resource/Alan_Cunningham> <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?burialPlace WHERE {
  VALUES ?person { dbr:Alan_Cunningham_(British_Army_officer) }
  OPTIONAL { ?person dbo:placeOfBurial ?burialPlace . }
  OPTIONAL { ?person dbo:deathPlace ?deathPlace .
             ?deathPlace rdfs:label ?locationLabel .
             FILTER (CONTAINS(LCASE(?locationLabel), ""cemetery"") || CONTAINS(LCASE(?locationLabel), ""graveyard""))
           }
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
142,5,train,Give me the entity in the region of Japan Standard Time.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Japan_Standard_Time> . ?result <http://dbpedia.org/ontology/country> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity WHERE {
  ?entity dbo:timeZone dbr:Japan_Standard_Time .
}
```",2,2,3,2,1,2,2,9,2080,175,6842,0.9223946784922394,0.233131584846447,0.372192896125973
981,7,train,Give me the entity in the region of Time in Indonesia.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Time_in_Indonesia> . ?result <http://dbpedia.org/ontology/country> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity ?label WHERE {
  ?entity dbo:country dbr:Indonesia .
  OPTIONAL { ?entity rdfs:label ?label . FILTER (lang(?label) = 'en') }
  FILTER EXISTS { 
    ?entity a ?type .
    VALUES ?type { 
      dbo:TimeZone
      # Add other relevant types if necessary, such as events or temporal entities
    } 
  }
}
ORDER BY ?label
```",2,2,3,2,1,3,2,20,0,0,2949,0,0.0,0
659,9,train,Give me the commander in German campaign of 1813 and commander in Battle of Leipzig.,SELECT ?result WHERE { <http://dbpedia.org/resource/Battle_of_Leipzig> <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/German_campaign_of_1813> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commanderGermanCampaign ?commanderBattleOfLeipzig WHERE {
  # Napoleon Bonaparte as commander in German campaign of 1813
  OPTIONAL {
    ?event1 a dbo:MilitaryConflict ;
            dbo:participatedIn dbr:Napoleonic_Wars ;
            dbo:location dbr:Germany ;
            dbo:date ""1813""^^xsd:gYear .
    ?commanderGermanCampaign dbo:spouseOrPartner ?narrative ;
                             rdfs:label ?nameGermanCampaign .
    FILTER(CONTAINS(LCASE(?nameGermanCampaign), ""napoleon bonaparte""))
  }

  # Commanders in the Battle of Leipzig
  OPTIONAL {
    ?event2 a dbo:MilitaryConflict ;
            dbo:participatedIn dbr:Napoleonic_Wars ;
            dbo:location dbr:Leipzig ;
            dbo:date ""1813""^^xsd:gYear .
    ?commanderBattleOfLeipzig dbo:spouseOrPartner ?narrative ;
                              rdfs:label ?nameBattleOfLeipzig .
    FILTER(CONTAINS(LCASE(?nameBattleOfLeipzig), ""prince schwarzenberg"") ||
           CONTAINS(LCASE(?nameBattleOfLeipzig), ""napoleon bonaparte""))
  }
}
```",2,2,3,1,2,3,3,71,0,0,16,0,0.0,0
465,5,train,Give me the death place of the native of Prague.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/deathPlace> ?result . ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Prague> . },"```sparql
SELECT ?person ?deathPlace WHERE {
  ?person dbo:birthPlace dbr:Prague .
  ?person dbo:deathPlace ?deathPlace .
}
LIMIT 10
```",2,2,3,2,1,2,2,9,8,9,246,0.47058823529411764,0.031496062992125984,0.05904059040590405
963,9,train,"Give me the region, that is a country, of the time zone of Herzegovina-Neretva Canton.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/timeZone> ?v0 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Herzegovina-Neretva_Canton> <http://dbpedia.org/property/timeZone> ?v0 . },"```sparql
SELECT ?region WHERE {
  ?entity wdt:P421 wd:Q6655; # Europe/Sarajevo time zone
          wdt:P17 ?region. # country of the entity
}
```",2,3,3,2,1,3,2,20,0,0,56,0,0.0,0
801,1,train,Give me the producer of Westside Story (song).,SELECT ?result WHERE { <http://dbpedia.org/resource/Westside_Story_(song)> <http://dbpedia.org/ontology/producer> ?result . },"```sparql
SELECT ?producer WHERE {
  dbpedia:West_Side_Story_(song) dbo:producer ?producer .
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
617,16,train,"Who is the child of the successor, that is a royalty, of Antiochus (son of Antiochus III the Great)?",SELECT ?result WHERE { <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/successor> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/child> ?result . },"```sparql
SELECT ?successor ?child WHERE {
  # Find Antiochus III the Great and his son named Antiochus
  ?antiochusIII dbr:Antiochus_III_the_Great .
  ?son dbo:father ?antiochusIII ;
       rdfs:label ""Antiochus""@en .

  # Find who succeeded this Antiochus (the son)
  ?successor dbo:succeededBy ?son .

  # Check if the successor is a royalty
  ?successor dbo:royaltyStatus dbr:Royal_person .

  # Identify any children of that successor
  ?child dbo:parent ?successor .
}
```",2,3,3,2,1,3,3,71,0,0,6,0,0.0,0
820,7,train,Give me the professional in the award of Scott McCloud.,SELECT ?result WHERE { <http://dbpedia.org/resource/Scott_McCloud> <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v1 . },"```sparql
SELECT ?recipient WHERE {
  ?award dbo:recipient ?recipient .
  OPTIONAL { ?award dbo:name ""Eisner Award""@en . }
  FILTER EXISTS {
    ?award dbo:recipient <http://dbpedia.org/resource/Scott_McCloud> .
  }
}
```",2,2,3,2,1,3,2,20,0,0,39650,0,0.0,0
617,6,train,Give me the parent of Mieszko II Lambert and child of Doubravka of Bohemia.,SELECT ?result WHERE { <http://dbpedia.org/resource/Doubravka_of_Bohemia> <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Mieszko_II_Lambert> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?mieszko2 dbo:mother dbr:Doubravka_of_Bohemia .
  ?mieszko2 rdfs:label ""Mieszko II Lambert""@en .
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
801,0,train,Give me the professional in .,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

# Hypothetical query for professionals in medicine
SELECT ?person ?name WHERE {
  ?person a dbo:MedicalDoctor .
  ?person foaf:name ?name .
}
```

This example assumes we are looking for medical doctors. To tailor this to another profession, replace `dbo:MedicalDoctor` with the appropriate DBpedia class or property that represents the desired profession.",1,1,2,1,1,3,3,71,0,0,39640,0,0.0,0
328,13,train,Give me the commander in the force of Ferenc Szálasi.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Ferenc_Szálasi> . ?v1 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commanderRole WHERE {
  dbr:Ferenc_Szálasi dbo:militaryCommanderOf ?unit .
  ?unit dbo:leader ?commanderRole .
  FILTER (strstarts(str(?commanderRole), ""dbr:""))
}
```",2,2,3,2,1,3,3,71,0,0,73,0,0.0,0
391,4,train,Give me the figure known as Hub City.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ""Hub City""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?city WHERE {
  ?link a dbo:City .
  ?link rdfs:label ?label .
  FILTER (CONTAINS(LCASE(?label), ""hub city""))
}
```",1,1,2,1,1,3,3,71,0,0,4,0,0.0,0
659,14,train,"Give me the military force of the force, that is a societal event and an event and a military conflict, of Rutger Jan Schimmelpenninck.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> . ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce WHERE {
  ?event dbo:type dbr:Military_conflict .
  ?event dbo:relatedThroughTime dbr:Batavian_Revolution .
  ?event dbo:participant dbr:Rutger_Jan_Schimmelpenninck .
  
  OPTIONAL { 
    ?event dbo:militaryForce ?militaryForce .
  }
}
```",2,5,3,2,1,3,3,71,0,0,1127,0,0.0,0
617,17,train,Who is the child of the commander in Battle of Panium?,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Battle_of_Panium> <http://dbpedia.org/ontology/commander> ?v1 . },"```sparql
SELECT ?child WHERE {
  ?battle dbo:wikiPageRedirects db:Battle_of_Panium .
  ?battle dbo:commander ?commander .
  ?commander dbo:child ?child .
}
```",2,2,3,2,1,3,3,71,0,0,7,0,0.0,0
360,8,train,"Give me the writer of the work, that is an album, of Dave Flett.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Album>. ?v1 <http://dbpedia.org/property/author> ""Dave Flett""@en . ?v1 <http://dbpedia.org/property/writer> ?result . }","```sparql
SELECT DISTINCT ?album ?writer WHERE {
  ?album dbo:artist dbr:Dave_Flett .
  OPTIONAL { 
    ?album dbo:composer ?writer .
  }
}
```",2,3,3,2,1,2,3,28,0,0,8,0,0.0,0
294,6,train,"Give me the resting place of Luke Lea (American politician, born 1879) and resting place of Edwin A. Keeble.","SELECT ?result WHERE { <http://dbpedia.org/resource/Edwin_A._Keeble> <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Luke_Lea_(American_politician,_born_1879)> <http://dbpedia.org/ontology/restingPlace> ?result . }","```sparql
# Query for Luke Lea's resting place
SELECT ?restingPlace WHERE {
  ?person rdfs:label ""Luke Lea (American politician, born 1879)""@en .
  OPTIONAL { ?person dbo:deathPlace ?restingPlace . }
  FILTER(LANG(?person) = 'en')
}

# Query for Edwin A. Keeble's resting place
SELECT ?restingPlace WHERE {
  ?person rdfs:label ""Edwin A. Keeble""@en .
  OPTIONAL { ?person dbo:deathPlace ?restingPlace . }
  FILTER(LANG(?person) = 'en')
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
184,0,train,Give me the parent of Géza von Habsburg.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Géza_von_Habsburg> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  VALUES ?geza { dbr:Géza_von_Habsburg }
  ?geza dbo:parent ?parent .
}
```",1,1,2,1,1,3,3,71,2,0,0,1.0,1.0,1.0
328,3,train,Who is the commander in Volcano and Ryukyu Islands campaign?,SELECT ?result WHERE { <http://dbpedia.org/resource/Volcano_and_Ryukyu_Islands_campaign> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  ?campaign dbo:commandedBy ?commander .
  FILTER(CONTAINS(LCASE(STR(?campaign)), ""volcano and ryukyu islands campaign"") || CONTAINS(LCASE(STR(?campaign)), ""operation iceberg""))
}
```",1,1,2,1,1,3,3,71,0,0,20,0,0.0,0
626,0,train,Give me the commander in Battle of Leipzig.,SELECT ?result WHERE { <http://dbpedia.org/resource/Battle_of_Leipzig> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?commander WHERE {
  ?battle dbo:wikiPageRedirects dbp:Battle_of_Leipzig .
  ?battle dbp:commander ?commander .
}
```",1,1,2,1,1,3,2,20,0,0,21,0,0.0,0
838,3,train,"Give me the band member, that is an artist and a musical artist, of YU Grupa.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/YU_Grupa> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?memberName WHERE {
  ?band rdf:type dbo:Band .
  ?band rdfs:label ""YU Grupa""@en .

  ?band dbo:bandMember ?member .
  ?member dbo:occupation ?occupation .
  FILTER (?occupation IN (dbo:Artist, dbo:MusicalArtist)) .

  ?member foaf:name ?memberName .
}
```",1,3,2,1,1,3,2,20,0,0,4,0,0.0,0
747,8,train,Who is the person born as Tracey Elizabeth McSween?,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Tracey Elizabeth McSween""@en . }","```sparql
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX schema: <http://schema.org/>

SELECT ?person ?alias WHERE {
  ?person a foaf:Person .
  OPTIONAL { ?person foaf:name ?alias . }
  FILTER (CONTAINS(LCASE(?person), ""tracey"") && CONTAINS(LCASE(?person), ""elizabeth"") && CONTAINS(LCASE(?person), ""mcsween""))
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
345,6,train,Give me the figure known as Stolz von Liechtenstein and team of Alessandro Mangiarratti.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ""Stolz von Liechtenstein""@en . ?result <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Alessandro_Mangiarratti> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?stolz ?mangiarratti ?teamMember WHERE {
  # Find Stolz von Liechtenstein as a horse
  ?stolz a dbo:Horse ;
         rdfs:label ""Stolz von Liechtenstein""@en .

  # Find Alessandro Mangiarratti as a jockey
  ?mangiarratti a dbo:Jockey ;
               rdfs:label ""Alessandro Mangiarratti""@en .

  OPTIONAL {
    # Assuming team members are related through some property, e.g., worksFor or similar
    ?teamMember dbo:worksFor ?mangiarratti .
    ?teamMember a dbo:Jockey .
  }
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
801,8,train,"Give me the writer, that is a musical artist and an artist, of 40 Dayz & 40 Nightz.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/40_Dayz_&_40_Nightz> <http://dbpedia.org/property/writer> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?writer WHERE {
  ?album dbo:artist dbr:Lil_Wayne .
  ?album dbo:title ""40 Dayz & 40 Nightz"" .
  ?writer dbo:birthName ""Dwayne Michael Carter Jr."" .
  ?writer dbo:occupation ?occupation .
  FILTER (
    (CONTAINS(LCASE(?occupation), ""music"") || CONTAINS(LCASE(?occupation), ""artist""))
  )
}
```",1,3,2,1,1,3,3,71,0,0,12,0,0.0,0
666,7,train,"Give me the player in the manager, that is a sports manager, of 2016–17 Hull City A.F.C. season.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/2016–17_Hull_City_A.F.C._season> <http://dbpedia.org/ontology/manager> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?manager WHERE {
  ?team a dbo:AthleticClub .
  ?team dbo:sport dbr:Soccer .
  ?team rdfs:label ""Hull City A.F.C.""@en .
  
  ?season dbo:club ?team ;
          dbo:seasonStartYear ?startYear ;
          dbo:seasonEndYear ?endYear .

  FILTER (?startYear = 2016 && ?endYear = 2017)

  ?manager dbo:position dbr:Soccer_manager ;
           dbo:managedTeam ?team .
}
```",2,3,3,2,1,3,2,20,0,0,22,0,0.0,0
345,9,train,"Give me the nickname of the player, that is a sports club and an organisation and a soccer club, in Armando Heeb.",SELECT ?result WHERE { <http://dbpedia.org/resource/Armando_Heeb> <http://dbpedia.org/ontology/team> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v0 <http://dbpedia.org/property/nickname> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nickname WHERE {
  ?entity dbo:member dbr:Armando_Heeb .
  ?entity a dbo:SportsClub ;
          a dbo:FootballClub .
  OPTIONAL { ?entity rdfs:label ?nickname FILTER (lang(?nickname) = 'en') }
}
```",2,5,3,2,1,3,2,20,0,0,3,0,0.0,0
981,4,train,Give me the author of Kamikaze Girls.,SELECT ?result WHERE { <http://dbpedia.org/resource/Kamikaze_Girls> <http://dbpedia.org/property/author> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?author WHERE {
  ?book dbo:title ""Kamikaze Girls""@en .
  ?book dbo:author ?author .
}
```",1,1,2,1,1,3,2,20,0,0,3,0,0.0,0
391,6,train,"Give me the claim to fame, that is a work, of Michael Ballhaus.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Michael_Ballhaus> <http://dbpedia.org/ontology/knownFor> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?work WHERE {
  ?person a dbo:Cinematographer ;
          foaf:name ""Michael Ballhaus""@en .
  ?film dbo:director ?director ;
        dbo:starring ?actor ;
        dbo:cinematographer ?person ;
        dbo:title ?title .
  FILTER (CONTAINS(LCASE(?title), ""goodfellas""))
}
```",1,2,2,1,1,3,3,71,0,0,4,0,0.0,0
9,10,train,"Give me the figure known as QUB and alma mater of John Alderdice, Baron Alderdice.","SELECT ?result WHERE { <http://dbpedia.org/resource/John_Alderdice,_Baron_Alderdice> <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://dbpedia.org/property/nickname> ""QUB""@en . }","```sparql
SELECT ?almaMater WHERE {
  ?university dcterms:identifier ""Queen's University Belfast"" ;
              dbo:alumni ?person .
  ?person foaf:name ""John Alderdice""@en .
  BIND(?university AS ?almaMater)
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
197,2,train,Who is the member of FC Politehnica Timișoara?,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/FC_Politehnica_Timișoara> . },"```sparql
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?player WHERE {
  ?club rdfs:label ""FC Politehnica Timișoara""@en.
  ?club dbo:member|dbo:player ?player.
}
```",1,1,2,1,1,2,2,9,0,0,572,0,0.0,0
54,5,train,Give me the parent of Thado Minsaw of Prome.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?parent WHERE {
  ?person a dbo:Person ;
          foaf:name ""Thado Minsaw""@en .
  OPTIONAL { ?person dbo:parent ?parent . }
}
```",1,1,2,1,1,3,3,71,0,4,2,0.0,0.0,0
182,6,train,Give me the war of Mahesh Senanayake and war of Jagath Dias.,SELECT ?result WHERE { <http://dbpedia.org/resource/Jagath_Dias> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Mahesh_Senanayake> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
SELECT ?war ?description WHERE {
  ?war dbo:wikiPageRedirects dbpedia:Sri_Lankan_Civil_War .
  ?war rdfs:label ""Sri Lankan Civil War""@en .
  ?war dbo:description ?description .

  OPTIONAL { 
    ?person foaf:name ?name .
    ?person dbo:spouse|dbo:child|dbo:parent|dbo:employee|dbo:memberOf|dbo:almaMater ?organization .
    ?organization dbo:wikiPageRedirects ?war .
    FILTER (CONTAINS(LCASE(?name), ""mahesh senanayake"") || CONTAINS(LCASE(?name), ""jagath dias""))
  }
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
778,7,train,Give me the entity in the award of Ralph L. Brinster.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ralph_L._Brinster> <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/ontology/location> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award WHERE {
  ?person dbo:honorificTitle ""Ralph L. Brinster""@en .
  ?person dbo:award ?award .
}
```",2,2,3,2,1,3,2,20,0,0,18629,0,0.0,0
179,5,train,Who is the child of Bhumibol Adulyadej?,SELECT ?result WHERE { <http://dbpedia.org/resource/Bhumibol_Adulyadej> <http://dbpedia.org/ontology/child> ?result . },"```sparql
SELECT ?child WHERE {
  wd:Q11980 dbo:child ?child .
}
```",1,1,2,1,1,3,2,20,0,0,4,0,0.0,0
54,13,train,Give me the parent of the child of Narapati I of Ava.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Narapati_I_of_Ava> . },"```sparql
SELECT ?child ?parent WHERE {
  ?person dbo:spouse ?narapatiI .
  ?narapatiI foaf:name ""Narapati I of Ava""@en .
  ?person dbo:child ?child .
  ?child dbo:parent ?parent .
}
```",2,2,3,2,1,3,3,71,0,0,2,0,0.0,0
303,5,train,"Who is the person born, that is a politician, as Arnulfo Arias Madrid?","SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Arnulfo Arias Madrid""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person dbo:birthName ""Arnulfo Arias Madrid""@en .
  ?person dbo:occupation ?occupation .
  FILTER(CONTAINS(LCASE(?occupation), ""politician""))
}
```",1,2,2,1,1,2,3,28,0,0,1,0,0.0,0
534,5,train,Give me the owner of RDS Arena.,SELECT ?result WHERE { <http://dbpedia.org/resource/RDS_Arena> <http://dbpedia.org/ontology/owner> ?result . },"```sparql
SELECT ?owner WHERE {
  ?arena rdfs:label ""RDS Arena""@en .
  ?arena dbo:location dbr:Ireland .
  ?arena dbo:owner ?owner .
}
```",1,1,2,1,1,3,2,20,1,0,0,1.0,1.0,1.0
767,1,train,Give me the alma mater of Carl L. Nippert.,SELECT ?result WHERE { <http://dbpedia.org/resource/Carl_L._Nippert> <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?university WHERE {
  ?person a dbo:Person ;
          foaf:name ""Carl L. Nippert""@en .
  ?person dbo:almaMater ?university .
}
```",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
963,1,train,Give me the administration of Serbian Progressive Party.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Serbian_Progressive_Party> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?leader WHERE {
  ?party rdfs:label ""Serbian Progressive Party""@en .
  OPTIONAL { ?party dbo:leader ?leader . }
}
```",1,1,2,1,1,3,2,20,0,0,86,0,0.0,0
345,4,train,Give me the birth date of Eiður Guðjohnsen.,SELECT ?result WHERE { <http://dbpedia.org/resource/Eiður_Guðjohnsen> <http://dbpedia.org/ontology/birthDate> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?birthDate WHERE {
  ?person a foaf:Person ;
          foaf:name ""Eiður Guðjohnsen""@en .
  ?person dbo:birthDate ?birthDate .
}
```",1,1,2,1,1,3,2,20,1,0,0,1.0,1.0,1.0
10,6,train,Give me the associated musical artist of Matt Colton and band member of Luke Vibert.,SELECT ?result WHERE { <http://dbpedia.org/resource/Matt_Colton> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Luke_Vibert> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artist WHERE {
  # Check if the artist is associated with Matt Colton as a mastering engineer
  ?masteringProject dbo:performer dbr:Matt_Colton .
  
  # Check if the same artist is associated with Luke Vibert
  ?musicProject dbo:performer dbr:Luke_Vibert .
  
  # Ensure both projects are related to the same artist
  ?masteringProject dbo:subject ?artist .
  ?musicProject dbo:subject ?artist .

  FILTER(?artist != dbr:Matt_Colton && ?artist != dbr:Luke_Vibert)
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
391,3,train,"Give me the nick name of Jackson, Tennessee.","SELECT ?result WHERE { <http://dbpedia.org/resource/Jackson,_Tennessee> <http://xmlns.com/foaf/0.1/nick> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nickname WHERE {
  ?city a dbo:City ;
        dbo:officialName ""Jackson, Tennessee"" .
  OPTIONAL { ?city dbo:commonName ?nickname }
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
696,2,train,"Give me the associated musical artist, that is an organisation and a group and a band, of The Boils.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/The_Boils> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artist WHERE {
  VALUES ?boils { dbr:The_Boils }
  
  # Find associated bands, groups, or organizations
  OPTIONAL { ?boils dbo:associatedBand ?artist . }
  OPTIONAL { ?boils dbo:bandMember ?artist . }
  OPTIONAL { ?boils dbo:member ?artist . }

  FILTER EXISTS {
    ?artist a ?type .
    VALUES ?type { 
      dbo:MusicalGroup
      dbo:Organization
      dbo:Band
    }
  }
}
```",1,4,2,1,1,3,2,20,0,0,2,0,0.0,0
994,16,train,"Give me the band member, that is a band and a group and an organisation, of the band, that is an organisation, of Fredrik Thordendal.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Fredrik_Thordendal> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?member WHERE {
  # Fredrik Thordendal's band
  dbr:Fredrik_Thordendal dbo:bandMember dbr:Meshuggah .
  
  # Meshuggah as an organization
  dbr:Meshuggah a dbo:MusicalBand ;
                dbo:genre ?genre .

  # Find members of Meshuggah who are also groups and organizations
  ?member dbo:bandMember dbr:Meshuggah .
  ?member a dbo:MusicalGroup, dbo:Organization .
}
```",2,6,3,2,1,3,3,71,0,0,6,0,0.0,0
492,3,train,Give me the author of French Algeria.,SELECT ?result WHERE { <http://dbpedia.org/resource/French_Algeria> <http://dbpedia.org/property/author> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?authorName WHERE {
  ?work dbo:subject dbr:French_Algeria .
  ?work dbo:author ?author .
  ?author foaf:name ?authorName .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
9,1,train,Give me the alma mater of Allen Hill (scientist).,SELECT ?result WHERE { <http://dbpedia.org/resource/Allen_Hill_(scientist)> <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
SELECT ?university WHERE {
  ?person foaf:name ""Allen Hill"" .
  ?person dbo:occupation dbr:Scientist .
  ?person dbo:almaMater ?university .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
54,4,train,Give me the father of Soe Min Wimala Dewi.,SELECT ?result WHERE { <http://dbpedia.org/resource/Soe_Min_Wimala_Dewi> <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?father WHERE {
  ?person a dbo:Person ;
          foaf:name ""Soe Min Wimala Dewi""@en .
  OPTIONAL { ?person dbo:father ?father . }
  FILTER EXISTS { ?father a dbo:Male } # Assuming 'dbo:Male' is used to denote male individuals
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
492,13,train,"Give me the commander in the war, that is a military conflict and an event, of Frédéric-Georges Herr.",SELECT ?result WHERE { <http://dbpedia.org/resource/Frédéric-Georges_Herr> <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"```sparql
SELECT ?event ?commander WHERE {
  wd:Q1234567 wdt:P31/wdt:P279* wd:Q11424 . # Frédéric-Georges Herr is a military personnel
  wd:Q1234567 wdt:P1368 ?event .         # Participated in an event (war)
  ?event wdt:P39 ?commander .            # Event has a commander property
}
```

Note: Replace `wd:Q1234567` with the actual DBpedia entity ID for Frédéric-Georges Herr.",2,4,3,2,1,3,3,71,0,0,2,0,0.0,0
485,2,train,Give me the entity in Nottinghamshire.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Nottinghamshire> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity WHERE {
  ?entity dbo:locatedInRegion dbr:Nottinghamshire .
}
```",1,1,2,1,1,2,3,28,0,0,369,0,0.0,0
827,10,train,"Who is the child, that is a royalty, of the spouse, that is a royalty, of Princess Pauline of Saxe-Weimar-Eisenach?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Princess_Pauline_of_Saxe-Weimar-Eisenach> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
SELECT ?child WHERE {
  ?princess rdf:type dbo:Princess ;
            foaf:name ""Pauline of Saxe-Weimar-Eisenach""@en .
  
  ?princess dbo:spouse ?spouse .
  ?spouse rdf:type dbo:Royal .

  ?spouse dbo:child ?child .
  ?child rdf:type dbo:Royal .
}
```",2,4,3,2,1,3,2,20,0,0,2,0,0.0,0
142,0,train,Give me the entity in Japan.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan> . },"```sparql
SELECT ?entity WHERE {
  ?entity dbo:country dbr:Japan .
}
```",1,1,2,1,1,2,2,9,8916,0,0,1.0,1.0,1.0
55,2,train,Give me the band of Newsted.,SELECT ?result WHERE { <http://dbpedia.org/resource/Newsted> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band WHERE {
  dbr:Jason_Newsted dbo:memberOfBand ?band .
}
```",1,1,2,1,1,2,3,28,0,0,9,0,0.0,0
392,7,train,Give me the province of Schio and entity in Italy.,SELECT ?result WHERE { <http://dbpedia.org/resource/Schio> <http://dbpedia.org/ontology/province> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?province WHERE {
  ?schio dbo:locatedIn ?location .
  ?schio a dbo:Settlement .
  ?location dbo:administrativeDivision ?province .
  FILTER (str(?schio) = ""Schio"")
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
427,13,train,Give me the party of the father of Lamberto Andreotti.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Lamberto_Andreotti> <http://dbpedia.org/property/father> ?v1 . },"```sparql
SELECT ?party WHERE {
  ?person foaf:name ""Giuseppe Andreotti""@it .
  ?person dbo:spouse ?lambertoAndréotti .
  ?lambertoAndréotti foaf:name ""Lamberto Andreotti""@en .
  ?person dbo:politicalParty ?party .
}
```",2,2,3,2,1,3,3,71,0,0,5,0,0.0,0
294,2,train,"Give me the entity in Nashville, Tennessee.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Nashville,_Tennessee> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?entity WHERE {
  ?entity dbo:location ?loc .
  FILTER (str(?loc) = ""Nashville, Tennessee"")
}
```",1,1,2,1,1,2,3,28,0,0,340,0,0.0,0
303,11,train,"Give me the party of the person born, that is a politician, as Arnulfo Arias Madrid.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ""Arnulfo Arias Madrid""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/party> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX politics: <http://dbpedia.org/ontology/politics/>

SELECT ?party WHERE {
  ?person a dbo:Politician ;
          foaf:name ""Arnulfo Arias Madrid"" .
  OPTIONAL { ?person dbo:birthPlace ?birthPlace . }
  OPTIONAL { ?person politics:partyAffiliation ?party . }
}
```",2,3,3,2,1,2,3,28,0,0,1,0,0.0,0
767,9,train,Give me the alma mater of Carl L. Nippert and entity in Baden-Württemberg.,SELECT ?result WHERE { <http://dbpedia.org/resource/Carl_L._Nippert> <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://dbpedia.org/ontology/state> <http://dbpedia.org/resource/Baden-Württemberg> . },"```sparql
SELECT ?almaMater ?entityInBW WHERE {
  # Query for Carl L. Nippert's alma mater
  wd:Q123456 dbo:almaMater ?almaMater .
  
  # Query for an entity in Baden-Württemberg
  ?entityInBW wdt:P131* wd:Q1234 .
}
```

Note: Replace `wd:Q123456` with the actual DBpedia identifier for Carl L. Nippert and `wd:Q1234` with the identifier for Baden-Württemberg.",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
488,8,train,Who is the father of Emperor Go-Mizunoo?,SELECT ?result WHERE { <http://dbpedia.org/resource/Emperor_Go-Mizunoo> <http://dbpedia.org/property/father> ?result . },"```sparql
SELECT ?father WHERE {
  ?emperor rdf:type dbo:Emperor .
  ?emperor rdfs:label ""Go-Mizunoo""@en .
  ?emperor dbo:father ?father .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
838,8,train,"Give me the band member of the band, that is a group, of YU Grupa.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. <http://dbpedia.org/resource/YU_Grupa> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?member WHERE {
  ?band rdf:type dbo:Band .
  ?band rdfs:label ""YU Grupa""@en .
  ?band dbo:bandMember ?member .
}
```",2,3,3,2,1,3,2,20,2,0,38,1.0,0.05,0.09523809523809523
801,17,train,"Give me the writer, that is a musical artist and an artist, of the album, that is a musical work and a work, of What U See Is What U Get.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/property/writer> ?result . <http://dbpedia.org/resource/What_U_See_Is_What_U_Get> <http://dbpedia.org/ontology/album> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"```sparql
SELECT ?writer WHERE {
  ?album dcterms:title ""What U See Is What U Get"" .
  ?album dbo:artist ?writer .
  FILTER EXISTS { ?writer rdf:type dbo:MusicalArtist . }
  FILTER EXISTS { ?writer rdf:type dbo:Artist . }
}
```",2,6,3,2,1,3,3,71,0,0,12,0,0.0,0
48,4,train,Give me the show with Stacey Dash.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Stacey_Dash> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?show WHERE {
  ?actor a dbo:Actor ;
         foaf:name ""Stacey Dash""@en .
  
  ?show dbo:starring ?actor .
}
```",1,1,2,1,1,3,2,20,0,0,18,0,0.0,0
378,10,train,"Give me the claim to fame of Louis des Balbes de Berton de Crillon, 1st Duke of Mahón and war of Carl Pontus Gahn.","SELECT ?result WHERE { <http://dbpedia.org/resource/Louis_des_Balbes_de_Berton_de_Crillon,_1st_Duke_of_Mahón> <http://dbpedia.org/ontology/knownFor> ?result . <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/ontology/battle> ?result . }","```sparql
SELECT ?person ?name ?fame WHERE {
  VALUES (?person ?label) {
    (dbr:Louis_des_Balbes_de_Berton_de_Crillon dbr:Louis_des_Balbes_de_Berton_de_Crillon)
    (dbr:C_P_Gahn dbr:C._P._Gahn)
  }
  
  ?person rdfs:label ?name .
  FILTER(LANG(?name) = 'en')
  
  OPTIONAL {
    ?person dbo:notableWork ?fame .
    ?fame rdfs:label ?fameLabel .
    FILTER(LANG(?fameLabel) = 'en')
  }
}
```",2,2,3,1,2,3,3,71,0,2,2,0.0,0.0,0
328,17,train,"Give me the office, that is a government agency, of the leader, that is an office holder and a politician, of Gustav Jonson.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Gustav_Jonson> <http://dbpedia.org/property/leader> ?v1 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v1 <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?office ?governmentAgency WHERE {
  ?person rdfs:label ""Gustav Jonson""@en .
  FILTER (lang(?person) = 'en') .

  ?person dbo:office ?office .
  ?office a dbo:OfficeHolder ;
          dbo:positionHeld ?position .
  
  OPTIONAL { 
    ?office dbo:partOf ?governmentAgency .
    ?governmentAgency a dbo:GovernmentAgency .
  }
}
```",2,5,3,2,1,3,3,71,0,0,1,0,0.0,0
339,4,train,Who is the parent of Princess Olga of Greece and Denmark?,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Princess_Olga_of_Greece_and_Denmark> . },"```sparql
SELECT ?parent WHERE {
  dbpedia:Princess_Olga_of_Greece_and_Denmark dbo:parent ?parent .
}
```",1,1,2,1,1,3,2,20,0,0,2,0,0.0,0
701,16,train,Give me the child of the child of Seti I.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v1 . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seti_I> . },"```sparql
SELECT ?grandchild WHERE {
  ?setiI dbo:spouse ?spouse .
  ?setiI a dbo:Pharaoh .
  FILTER (str(?setiI) = ""Seti_I"")
  
  ?setiI dbo:child ?child1 .
  ?child1 dbo:child ?grandchild .
}
```",2,2,3,2,1,3,3,71,0,0,8,0,0.0,0
996,6,train,Give me the entity in France and force of Dagobert Sigmund von Wurmser.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Dagobert_Sigmund_von_Wurmser> . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/France> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entityInFrance ?force 
WHERE {
  # Find the entity for Dagobert Sigmund von Wurmser
  ?wurmser a dbo:MilitaryPerson ;
          foaf:name ""Dagobert Sigmund von Wurmser"" ;
          dbo:rank ?force .

  # Look for any French location associated with him
  OPTIONAL {
    ?event dbo:location ?entityInFrance .
    ?event dbo:participant ?wurmser .
    FILTER (STRSTARTS(STR(?entityInFrance), ""http://dbpedia.org/resource/France/""))
  }
}
```",2,2,3,1,2,3,2,20,0,0,4,0,0.0,0
492,10,train,Give me the person decedent at French Algeria and person decedent at Algiers.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Algiers> . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/French_Algeria> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person ?name WHERE {
  # People associated with French Algeria
  {
    ?person a dbo:Person ;
            dbo:countryOfCitizenship dbr:French_Algeria .
    OPTIONAL { ?person rdfs:label ?name FILTER (lang(?name) = 'en') }
  }

  UNION

  # People associated with Algiers
  {
    ?person a dbo:Person ;
            dbo:placeOfBirth dbr:Algiers .
    OPTIONAL { ?person rdfs:label ?name FILTER (lang(?name) = 'en') }
  }
}
ORDER BY ?name
LIMIT 100
```",2,2,3,1,2,3,3,71,0,0,16,0,0.0,0
421,6,train,Give me the band member of Senidah and native of Socialist Federal Republic of Yugoslavia.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Socialist_Federal_Republic_of_Yugoslavia> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Senidah> . },"```sparql
SELECT ?member ?birthPlace WHERE {
  ?band dcterms:subject dbc:Senidah .
  ?band dbo:bandMember ?member .
  ?member foaf:nationality ?nationality .
  OPTIONAL { ?member dbp:birthPlace ?birthPlace . }
  FILTER (
    ?nationality IN (dbpedia:Bosnia_and_Herzegovina, 
                     dbpedia:Croatia, 
                     dbpedia:Macedonia, 
                     dbpedia:Montenegro, 
                     dbpedia:Serbia, 
                     dbpedia:Slovenia, 
                     dbpedia:Kosovo)
    || ?birthPlace IN (dbpedia:Bosnia_and_Herzegovina, 
                       dbpedia:Croatia, 
                       dbpedia:Macedonia, 
                       dbpedia:Montenegro, 
                       dbpedia:Serbia, 
                       dbpedia:Slovenia, 
                       dbpedia:Kosovo)
  )
}
```",2,2,3,1,2,2,3,28,0,0,2,0,0.0,0
487,4,train,Give me the birth name of Phil Scott.,SELECT ?result WHERE { <http://dbpedia.org/resource/Phil_Scott> <http://dbpedia.org/property/birthName> ?result . },"```sparql
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?birthName WHERE {
  ?person a dbo:Governor ;
          dbo:stateOrProvinceVicePresidentOf dbr:Vermont ;
          foaf:name ""Phil Scott""@en .
  
  OPTIONAL { 
    ?person foaf:givenName ?givenName .
    ?person foaf:familyName ?familyName .
    
    BIND(CONCAT(?givenName, ' ', ?familyName) AS ?birthName)
  }
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
827,3,train,"Who is the child, that is a royalty, of Grand Duchess Maria Pavlovna of Russia (1786–1859)?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Grand_Duchess_Maria_Pavlovna_of_Russia_(1786–1859)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child ?title WHERE {
  ?person dbo:parent dbr:Grand_Duchess_Maria_Pavlovna_of_Russia_(1786–1859) .
  ?person a dbo:Person .
  ?person dbo:child ?child .
  
  OPTIONAL { 
    ?child dbo:title ?title .
    FILTER(CONTAINS(LCASE(?title), ""monarch"") || CONTAINS(LCASE(?title), ""prince"") || CONTAINS(LCASE(?title), ""duchess"") || CONTAINS(LCASE(?title), ""king"") || CONTAINS(LCASE(?title), ""queen""))
  }
  
  ?child a dbo:Person .
}
```",1,2,2,1,1,3,2,20,0,0,2,0,0.0,0
435,9,train,"Give me the region of Greenwich Mean Time and work of Article 62, Section IV of Constitution of Iceland.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/author> ""Article 62, Section IV of Constitution of Iceland""@en . ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Greenwich_Mean_Time> . }","```sparql
# Query for regions using Greenwich Mean Time (GMT)
SELECT ?region WHERE {
  ?timeZone dcterms:isPartOf ?region .
  ?timeZone rdfs:label ""Greenwich Mean Time""@en .
}

UNION

# General query for information about the Constitution of Iceland
SELECT ?article ?description WHERE {
  ?constitution dbo:title ""Constitution of Iceland""@en ;
                dbo:wikiPageWikiLink ?article .
  OPTIONAL { ?article dbo:description ?description . }
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
488,12,train,Give me the administration of Emperor Go-Yōzei and death place of Tokugawa Ieyasu.,SELECT ?result WHERE { <http://dbpedia.org/resource/Tokugawa_Ieyasu> <http://dbpedia.org/ontology/deathPlace> ?result . ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Emperor_Go-Yōzei> . },"```sparql
SELECT ?emperorGoYozeiReign ?tokugawaIeyasuDeathPlace WHERE {
  ?emperorGoYozei dbo:reign ?emperorGoYozeiReign .
  FILTER (str(?emperorGoYozei) = ""Emperor Go-Yōzei"") .

  ?tokugawaIeyasu dbo:deathPlace ?tokugawaIeyasuDeathPlace .
  FILTER (str(?tokugawaIeyasu) = ""Tokugawa Ieyasu"") 
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
666,2,train,"Give me the team, that is a soccer club and a sports team season, of Leonid Slutsky (football coach).",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?result <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Leonid_Slutsky_(football_coach)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?team ?season
WHERE {
  ?coach a dbo:FootballCoach ;
         foaf:name ""Leonid Slutsky""@en .
  
  ?coach dbo:coach ?team .
  ?team a dbo:SoccerClub .

  OPTIONAL { 
    ?team dbo:sportsTeamSeason ?season .
  }
}
```",1,3,2,1,1,3,2,20,0,0,3,0,0.0,0
767,8,train,Give me the alter ego of Black Hood.,SELECT ?result WHERE { <http://dbpedia.org/resource/Black_Hood> <http://dbpedia.org/property/alterEgo> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?alterEgo WHERE {
  ?character rdfs:label ""Black Hood""@en.
  ?character dbo:alterEgo ?alterEgo.
}
```",1,1,2,1,1,3,3,71,0,0,5,0,0.0,0
9,9,train,"Give me the alma mater of Allen Hill (scientist) and alma mater of John Alderdice, Baron Alderdice.","SELECT ?result WHERE { <http://dbpedia.org/resource/John_Alderdice,_Baron_Alderdice> <http://dbpedia.org/ontology/almaMater> ?result . <http://dbpedia.org/resource/Allen_Hill_(scientist)> <http://dbpedia.org/ontology/almaMater> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name ?almaMaterLabel WHERE {
  VALUES (?person ?name) {
    (dbr:Allen_Hill_(scientist) ""Allen Hill"") 
    (dbr:John_Alderdice_Baron_Alderdice ""John Alderdice, Baron Alderdice"")
  }
  
  ?person dbo:name ?name .
  OPTIONAL { ?person dbo:almaMater ?almaMater . }
  OPTIONAL { ?almaMater rdfs:label ?almaMaterLabel FILTER (lang(?almaMaterLabel) = ""en"") . }
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
281,1,train,Give me the entity in Colony of New Zealand.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Colony_of_New_Zealand> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity ?property WHERE {
  {
    ?entity ?property dbr:Colony_of_New_Zealand .
  }
  UNION
  {
    dbr:Colony_of_New_Zealand ?property ?entity .
  }
}
```",1,1,2,1,1,3,3,71,1,448,0,0.0022271714922048997,1.0,0.0044444444444444444
179,8,train,Give me the parent of the child of Bhumibol Adulyadej.,SELECT ?result WHERE { <http://dbpedia.org/resource/Bhumibol_Adulyadej> <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://dbpedia.org/ontology/parent> ?result . },"```sparql
SELECT ?child WHERE {
  dbpedia:King_Bhumibong_of_Thailand dbo:spouse ?spouse .
  ?spouse dbo:child ?child .
}
```

This query retrieves the children of Bhumibol Adulyadej by looking at his spouse's child relationships. The parent of any retrieved child will be Bhumibol Adulyadej.",2,2,3,2,1,3,2,20,0,0,3,0,0.0,0
142,6,train,Give me the birthplace of the actor of Papa wa Newscaster.,SELECT ?result WHERE { <http://dbpedia.org/resource/Papa_wa_Newscaster> <http://dbpedia.org/ontology/starring> ?v0 . ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?birthPlace WHERE {
  ?actor foaf:name ""Ken Watanabe""@en .
  ?actor dbo:birthPlace ?birthPlace .
}
```",2,2,3,2,1,2,2,9,0,2,3,0.0,0.0,0
778,8,train,"Give me the author of the work, that is a software, of Bill Joy.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Bill_Joy> . ?v0 <http://dbpedia.org/ontology/author> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Software>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?software WHERE {
  ?work dbo:author dbr:Bill_Joy .
  ?work a dbo:Software .
  BIND(?work AS ?software)
}
```",2,3,3,2,1,3,2,20,0,5,2,0.0,0.0,0
378,8,train,Who is the commander in Great Siege of Gibraltar?,SELECT ?result WHERE { <http://dbpedia.org/resource/Great_Siege_of_Gibraltar> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  ?event dbo:wikiPageRedirects dbr:Great_Siege_of_Gibraltar .
  ?event dbo:commander ?commander .
}
```",1,1,2,1,1,3,3,71,0,0,7,0,0.0,0
360,10,train,"Give me the native of the death place, that is a settlement, of Winnie Madikizela-Mandela.",SELECT ?result WHERE { <http://dbpedia.org/resource/Winnie_Madikizela-Mandela> <http://dbpedia.org/ontology/deathPlace> ?v1 . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?native WHERE {
  # Find Winnie Madikizela-Mandela's death place
  dbr:Winnie_Madikizela-Mandela dbo:deathPlace ?deathPlace .

  # Ensure the death place is a settlement
  ?deathPlace rdf:type dbo:Settlement .

  # Retrieve natives of this settlement
  ?native dbo:nativePlace ?deathPlace .
}
```",2,3,3,2,1,2,3,28,0,0,1099,0,0.0,0
391,0,train,"Give me the native of Compton, California.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Compton,_California> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name WHERE {
  ?person a dbo:Person .
  OPTIONAL { ?person dbo:birthPlace dbr:Compton,_California . }
  OPTIONAL { ?person dbo:hometown dbr:Compton,_California . }
  ?person foaf:name ?name .
}
ORDER BY ?name
```",1,1,2,1,1,3,3,71,0,0,97,0,0.0,0
534,0,train,Give me the birth place of Garret FitzGerald.,SELECT ?result WHERE { <http://dbpedia.org/resource/Garret_FitzGerald> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace WHERE {
  dbr:Garret_FitzGerald dbo:birthPlace ?birthPlace .
}
```",1,1,2,1,1,3,2,20,1,0,0,1.0,1.0,1.0
528,10,train,Give me the force of Narciso Campero and war of Irene Morales.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Narciso_Campero> . <http://dbpedia.org/resource/Irene_Morales> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
# Query to find Narciso Campero's military rank or role
SELECT ?rank WHERE {
  ?person foaf:name ""Narciso Campero""@en .
  OPTIONAL { ?person dbo:militaryRank ?rank . }
}

# Query to find any wars associated with Irene Morales
SELECT DISTINCT ?event WHERE {
  ?person foaf:name ""Irene Morales""@en .
  ?event dbo:agent ?person ;
         a dbo:MilitaryConflict .
}
```",2,2,3,1,2,3,3,71,0,0,2,0,0.0,0
303,3,train,"Who is the commander, that is a politician, in United States invasion of Panama?",SELECT ?result WHERE { <http://dbpedia.org/resource/United_States_invasion_of_Panama> <http://dbpedia.org/ontology/commander> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  ?operation dbo:commander ?commander .
  ?operation rdfs:label ""Operation Just Cause""@en .
  FILTER NOT EXISTS { ?commander dbo:occupation ?nonPoliticianOccupation . }
  OPTIONAL { ?commander dbo:occupation dbr:President_of_the_United_States . }
}
```",1,2,2,1,1,2,3,28,0,0,6,0,0.0,0
492,7,train,Give me the country of Khemis Miliana District.,SELECT ?result WHERE { <http://dbpedia.org/resource/Khemis_Miliana_District> <http://dbpedia.org/ontology/country> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?country WHERE {
  VALUES ?district { dbr:Khemis_Miliana_District }
  ?district dbo:country ?country .
}
```",1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
427,9,train,Give me the reference to Partito Popolare Italiano and party of Giulio Andreotti.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Partito Popolare Italiano""@en . <http://dbpedia.org/resource/Giulio_Andreotti> <http://dbpedia.org/ontology/party> ?result . }","```sparql
# Query to get the reference (URL) for Partito Popolare Italiano
SELECT ?partitoPopolareItaliano WHERE {
  ?partitoPopolareItaliano a dbo:PoliticalParty .
  ?partitoPopolareItaliano rdfs:label ""Partito Popolare Italiano""@en .
}

# Query to find the political party of Giulio Andreotti
SELECT ?party WHERE {
  dbpedia:Giulio_Andreotti dbo:politicalParty ?party .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
9,11,train,"Give me the alma mater of the mayor, that is a politician, of Northern Ireland Forum.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Northern_Ireland_Forum> <http://dbpedia.org/property/leader> ?v0 . ?v0 <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?mayorName ?universityName WHERE {
  ?mayor a dbo:Mayor ;
         foaf:name ?mayorName .
  ?mayor dbo:almaMater ?university .
  ?university foaf:name ?universityName .
  FILTER(CONTAINS(LCASE(?mayorName), ""northern ireland forum""))
}
```",2,3,3,2,1,3,3,71,0,0,6,0,0.0,0
427,4,train,Give me the name of Italian People's Party (1994).,SELECT ?result WHERE { <http://dbpedia.org/resource/Italian_People's_Party_(1994)> <http://xmlns.com/foaf/0.1/name> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?partyName WHERE {
  ?party a dbo:PoliticalParty ;
         rdfs:label ?partyLabel ;
         dbp:foundingYear ""1994""^^xsd:gYear .
  
  FILTER(CONTAINS(LCASE(?partyLabel), ""italian people's party""))
  
  BIND(CONCAT(""The "", STR(?partyLabel)) AS ?partyName)
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
182,2,train,Give me the entity in Sri Lanka.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Sri_Lanka> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?entity ?label WHERE {
  {
    ?entity dbo:country dbr:Sri_Lanka .
  } UNION {
    ?entity dbp:location dbr:Sri_Lanka .
  }
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
```",1,1,2,1,1,2,3,28,0,0,62,0,0.0,0
528,2,train,Give me the force of Narciso Campero.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Narciso_Campero> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?force ?forceLabel WHERE {
  ?commander a dbo:MilitaryPerson ;
             foaf:name ""Narciso Campero""@en .
  ?commander dbo:commander ?force .
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
```",1,1,2,1,1,3,3,71,0,0,4,0,0.0,0
645,9,train,"Give me the residence, that is a country, of the commander in Battle of Diamond Rock.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/residence> ?result . <http://dbpedia.org/resource/Battle_of_Diamond_Rock> <http://dbpedia.org/ontology/commander> ?v0 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
SELECT ?residence WHERE {
  ?battle dbo:location ""Diamond Rock"" .
  ?battle dbo:commander ?commander .
  ?commander dbp:residence ?residence .
  FILTER (isLiteral(?residence) && datatype(?residence) = xsd:string)
}
```",2,3,3,2,1,3,2,20,0,0,1,0,0.0,0
801,4,train,Give me the alter ego of The Shadow.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?result . },"```sparql
SELECT ?alterEgo WHERE {
  ?character rdfs:label ""The Shadow""@en .
  ?character dbo:aliasName ?alterEgo .
}
```",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
547,15,train,Give me the child of the child of William Haliburton.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> ""William Haliburton""@en . ?v1 <http://dbpedia.org/ontology/child> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?grandchildLabel WHERE {
  ?parent dbo:child ?child .
  FILTER (str(?parent) = ""http://dbpedia.org/resource/William_Haliburton"")
  
  ?child dbo:child ?grandchild .
  ?grandchild rdfs:label ?grandchildLabel .
}
```",2,2,3,2,1,3,3,71,0,0,3,0,0.0,0
10,0,train,Give me the associated musical artist of Matt Colton.,SELECT ?result WHERE { <http://dbpedia.org/resource/Matt_Colton> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?artist WHERE {
  ?person a dbo:Person ;
          foaf:name ""Matt Colton""@en .
  
  OPTIONAL { ?person foaf:worksFor ?artist . }
  UNION
  OPTIONAL { ?person dbo:associatedBand ?artist . }
  UNION
  OPTIONAL { ?person dbo:collaborator ?artist . }

  FILTER(?artist != ?person)
}
```",1,1,2,1,1,2,3,28,0,0,4,0,0.0,0
528,6,train,Give me the commander in Battle of La Rinconada de Ate.,SELECT ?result WHERE { <http://dbpedia.org/resource/Battle_of_La_Rinconada_de_Ate> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?commander WHERE {
  ?battle a dbpedia-owl:Battle .
  ?battle rdfs:label ""Battle of La Rinconada de Ate""@en .
  OPTIONAL { ?battle dbp:commander ?commander . }
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
294,7,train,"Give me the entity in Nashville, Tennessee and resting place of Luke Lea (American politician, born 1879).","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Nashville,_Tennessee> . <http://dbpedia.org/resource/Luke_Lea_(American_politician,_born_1879)> <http://dbpedia.org/ontology/restingPlace> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?restingPlace WHERE {
  ?lukeLea a dbo:Politician ;
           foaf:name ""Luke Lea"" ;
           dbo:birthDate ?birthDate .
  FILTER (YEAR(?birthDate) = 1879)
  
  OPTIONAL { ?lukeLea dbo:placeOfBurial ?restingPlace . }
  OPTIONAL { ?restingPlace dbp:location ?location . }
  
  FILTER regex(str(?location), ""Nashville, Tennessee"", ""i"")
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
754,8,train,Give me the parent of the child of Ram Khamhaeng.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ram_Khamhaeng> <http://dbpedia.org/ontology/child> ?v0 . ?result <http://dbpedia.org/ontology/child> ?v0 . },"```sparql
SELECT ?parent WHERE {
  ?child dbo:spouse|dbo:partner|dbo:childOf ?ramKhamhaeng .
  ?ramKhamhaeng foaf:name ""Ram Khamhaeng""@en.
  
  OPTIONAL { ?child dbo:parent ?parent . }
}
```",2,2,3,2,1,3,2,20,0,0,1,0,0.0,0
54,1,train,Give me the parent of Thado Minsaw of Prome.,SELECT ?result WHERE { <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?parent WHERE {
  ?person a dbo:Person ;
          foaf:name ""Thado Minsaw""@en .
  OPTIONAL { ?person dbo:parent ?parent . }
}
```",1,1,2,1,1,3,3,71,0,4,2,0.0,0.0,0
360,9,train,Give me the native of Johannesburg and reference to Manfred Mann.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Johannesburg> . ?result <http://xmlns.com/foaf/0.1/name> ""Manfred Mann""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace ?connection
WHERE {
  # Find the birthplace of Manfred Mann
  VALUES ?manfredMann { dbr:Manfred_Mann }
  
  ?manfredMann dbo:birthPlace ?birthPlace .
  
  OPTIONAL {
    # Check for any connection between Johannesburg and Manfred Mann
    VALUES ?johannesburg { dbr:Johannesburg }
    
    ?connection (dbo:residence|dbo:performerIn) ?johannesburg ;
                (dbo:residence|dbo:performerIn) ?manfredMann .
  }
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
645,5,train,Give me the child of Richard Pankhurst.,SELECT ?result WHERE { <http://dbpedia.org/resource/Richard_Pankhurst> <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?child WHERE {
  ?child dbo:parent dbr:Richard_Pankhurst .
}
```",1,1,2,1,1,3,2,20,2,0,1,1.0,0.6666666666666666,0.8
161,6,train,"Give me the force, that is a societal event and a military conflict, of Francisco Largo Caballero.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?force WHERE {
  ?person rdfs:label ""Francisco Largo Caballero""@en .
  ?person dbo:positionHeld ?position .
  ?position dbo:officeName ?office .
  FILTER(CONTAINS(LCASE(?office), ""prime minister"") || CONTAINS(LCASE(?office), ""president""))
  ?position dbo:startDate ?startDate .
  ?position dbo:endDate ?endDate .
  
  OPTIONAL {
    ?event dbo:place ?location .
    ?event rdfs:label ?eventName .
    FILTER(CONTAINS(LCASE(?eventName), ""spanish civil war"") || CONTAINS(LCASE(?eventName), ""guerra civil española""))
    ?person dbo:memberOf ?organization .
    ?organization dbo:member ?person .
  }
  
  BIND(CONCAT(""Prime Minister during the "", STR(?eventName)) AS ?force)
}
```",1,3,2,1,1,3,3,71,0,0,1,0,0.0,0
251,2,train,Give me the death place of Laura Mancinelli.,SELECT ?result WHERE { <http://dbpedia.org/resource/Laura_Mancinelli> <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
SELECT ?deathPlace WHERE {
  dbpedia:en:Laura_Mancinelli dbo:deathPlace ?deathPlace .
}
```",1,1,2,1,1,2,3,28,0,0,3,0,0.0,0
314,0,train,Give me the person deceased at Madrid.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/restingPlace> <http://dbpedia.org/resource/Madrid> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  ?person dbo:deathPlace dbr:Madrid .
}
```",1,1,2,1,1,2,3,28,12,1334,8,0.008915304606240713,0.6,0.017569546120058566
391,14,train,"Give me the actor of the movie, that is a movie and a work and a television show, with Roz Ryan.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/property/starring> ?result . ?v1 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Roz_Ryan> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?movie ?actor WHERE {
  ?movie a dbo:Film ;
         a dbo:CreativeWork ;
         a dbo:TelevisionShow .
  
  ?movie dbo:starring ?actor .

  OPTIONAL { 
    ?actor rdfs:label ""Roz Ryan""@en .
  }

  FILTER (BOUND(?actor))
}
```",2,5,3,2,1,3,3,71,0,0,5,0,0.0,0
712,7,train,Give me the capital of the country of Armed Forces of South Russia.,SELECT ?result WHERE { <http://dbpedia.org/resource/Armed_Forces_of_South_Russia> <http://dbpedia.org/ontology/country> ?v1 . ?v1 <http://dbpedia.org/ontology/capital> ?result . },"```sparql
SELECT ?capital WHERE {
  ?entity rdfs:label ""Armed Forces of South Russia""@en .
  OPTIONAL { ?entity dbo:country dbr:Crimea . }
  OPTIONAL { ?entity dbo:headquartersLocation dbr:Simferopol . }
  ?location dbo:administrativeCapital ?entity ;
            rdfs:label ?capital .
}
```",2,2,3,2,1,3,2,20,0,0,3,0,0.0,0
312,2,train,"Give me the administration, that is a settlement and a region and Italian and a state, of Democratic Party (Italy).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?result <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Democratic_Party_(Italy)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?region WHERE {
  ?region a dbo:Region ;
          dbo:country dbr:Italy ;
          dbo:capital ?settlement .
  
  OPTIONAL { ?settlement a dbo:Settlement . }
  
  ?administration dbo:party dbr:Democratic_Party_(Italy) ;
                  dbo:administrativeArea ?region .

}
```",1,5,2,1,1,2,2,9,0,0,14,0,0.0,0
801,9,train,Give me the producer of Westside Story (song) and professional in .,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . <http://dbpedia.org/resource/Westside_Story_(song)> <http://dbpedia.org/ontology/producer> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?producer ?profession 
WHERE {
  ?song dbo:title ""West Side Story"" .
  ?song dbo:producer ?producer .
  OPTIONAL { ?producer dbo:occupation ?profession . }
  
  FILTER (CONTAINS(LCASE(?song), 'westside story'))
}
```",2,2,3,1,2,3,3,71,0,0,2,0,0.0,0
404,15,train,"Who is the person born, that is a royalty, as the birth name of Princess Victoria Louise of Prussia?",SELECT ?result WHERE { <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/property/birthName> ?v1 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
SELECT ?birthName WHERE {
  ?person rdfs:label ""Princess Victoria Louise of Prussia""@en .
  ?person dbo:birthName ?birthName .
}
```",2,3,3,2,1,3,3,71,0,0,1,0,0.0,0
294,10,train,Give me the resting place of the architect of P. D. Houston Jr. House.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/P._D._Houston_Jr._House> <http://dbpedia.org/ontology/architect> ?v1 . },"```sparql
SELECT ?architect ?architectName WHERE {
  ?house dbo:designer ?architect .
  ?house rdfs:label ""P. D. Houston Jr. House""@en .
  ?architect foaf:name ?architectName .
}
```

Once we have the architect's name, we can use it to find their resting place:

```sparql
SELECT ?deathPlace WHERE {
  ?person dbo:birthName ?architectName .
  ?person dbo:deathPlace ?deathPlace .
  FILTER (str(?architectName) = ""Architect Name"") # Replace with actual architect's name found from the first query.
}
```",2,2,3,2,1,2,3,28,0,0,1,0,0.0,0
339,1,train,Give me the father of Princess Elizabeth of Greece and Denmark.,SELECT ?result WHERE { <http://dbpedia.org/resource/Princess_Elizabeth_of_Greece_and_Denmark> <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?fatherName WHERE {
  ?person rdfs:label ""Princess Elizabeth of Greece and Denmark""@en .
  ?person dbo:father ?father .
  ?father rdfs:label ?fatherName .
  FILTER(LANG(?fatherName) = 'en')
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
963,3,train,"Give me the region, that is a country, of Central European Time.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?country WHERE {
  ?country a dbo:Country .
  ?country dbo:timeZone dbr:Central_European_Time_Zone .
}
```",1,2,2,1,1,3,2,20,0,0,56,0,0.0,0
820,5,train,Who is the parent of Jason Schwartzman?,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Jason_Schwartzman> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parentName WHERE {
  ?person a dbo:Person ;
          foaf:name ""Jason Schwartzman""@en .
  ?person dbo:parent ?parent .
  ?parent foaf:name ?parentName .
}
```",1,1,2,1,1,3,2,20,0,0,2,0,0.0,0
994,5,train,"Give me the band, that is an organisation, of Fredrik Thordendal.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Fredrik_Thordendal> . },"```sparql
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?band WHERE {
  ?person dbp:name ""Fredrik Thordendal""@en .
  ?person dbp:band ?band .
  ?band a dbo:Band ;
        OPTIONAL { ?band a dbo:Organization . }
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
617,0,train,Give me the child of Doubravka of Bohemia.,SELECT ?result WHERE { <http://dbpedia.org/resource/Doubravka_of_Bohemia> <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?child WHERE {
  ?person a dbo:Person ;
          foaf:name ""Doubravka of Bohemia""@en .
  ?person dbo:child ?child .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
16,9,train,Give me the professional in Actress and spouse of Ted McGinley.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Actress""@en . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  ?person dbo:spouse ?ted .
  ?ted rdfs:label ""Ted McGinley""@en .
  FILTER NOT EXISTS { ?person a dbo:Agent } # Exclude non-human entities
  OPTIONAL { ?person dbo:occupation ?occupation . }
  VALUES ?occupation { <http://dbpedia.org/resource/Category:Actresses> }
}
```",2,2,3,1,2,3,3,71,1,0,0,1.0,1.0,1.0
915,9,train,"Give me the birthplace, that is a settlement, of the director of Pipe Dreams (1976 film).",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Pipe_Dreams_(1976_film)> <http://dbpedia.org/ontology/director> ?v0 . ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?director ?birthPlace WHERE {
  ?film dbo:director ?director .
  ?film rdfs:label ""Pipe Dreams""@en .
  FILTER (YEAR(?film) = 1976)
  
  OPTIONAL { ?director dbo:birthPlace ?birthPlace . }
  
  ?birthPlace a dbo:Settlement .
}
```",2,3,3,2,1,3,2,20,0,0,1,0,0.0,0
115,4,train,Give me the alma mater of Vladimir Cerrón and alma mater of Jorge Sotomayor Tello.,SELECT ?result WHERE { <http://dbpedia.org/resource/Jorge_Sotomayor_Tello> <http://dbpedia.org/ontology/almaMater> ?result . <http://dbpedia.org/resource/Vladimir_Cerrón> <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?person ?name ?almaMater WHERE {
  VALUES ?person { 
    dbpedia:Vladimir_Cerrón 
    dbpedia:Jorge_Sotomayor_Tello 
  }
  
  ?person rdfs:label ?name .
  OPTIONAL { ?person dbo:almaMater ?almaMater . FILTER (lang(?almaMater) = 'en') }

  FILTER (LANG(?name) = 'en')
}
ORDER BY ?person
```",2,2,3,1,2,2,2,9,0,0,1,0,0.0,0
184,4,train,Give me the native of Budapest.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Budapest> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name WHERE {
  ?person a dbo:Person ;
          dbo:birthPlace dbr:Budapest .
  OPTIONAL { ?person rdfs:label ?name . FILTER (lang(?name) = 'en') }
}
ORDER BY ?name
LIMIT 100
```",1,1,2,1,1,3,3,71,100,100,2651,0.5,0.03635041802980734,0.06777363605557438
801,7,train,"Give me the album, that is a musical work and a work, of What U See Is What U Get.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. <http://dbpedia.org/resource/What_U_See_Is_What_U_Get> <http://dbpedia.org/ontology/album> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?album WHERE {
  ?album a dbo:MusicAlbum ;
         rdfs:label ""What U See Is What U Get""@en .
}
```",1,3,2,1,1,3,3,71,0,0,1,0,0.0,0
427,5,train,Who is the alumnus of Massachusetts Institute of Technology?,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Massachusetts_Institute_of_Technology> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?personLabel WHERE {
  ?person a dbo:Person .
  ?person dbo:almaMater dbpedia:Massachusetts_Institute_of_Technology .
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
```",1,1,2,1,1,3,3,71,0,0,1559,0,0.0,0
16,12,train,Give me the professional in Actress and person born as Georgeanne Marie Rice.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Georgeanne Marie Rice""@en . ?result <http://dbpedia.org/property/occupation> ""Actress""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?givenName ?surname ?occupation WHERE {
  ?person a dbo:Person ;
          foaf:name ""Farrah Fawcett""@en .
  OPTIONAL { ?person foaf:givenName ?givenName . }
  OPTIONAL { ?person foaf:surname ?surname . }
  OPTIONAL { ?person dbo:occupation ?occupation . FILTER (CONTAINS(LCASE(?occupation), ""actress"")) }
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
16,14,train,Give me the person born as the birth name of Gigi Rice.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Gigi_Rice> <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person WHERE {
  ?person dbo:birthName ""Gigi Rice"" .
}
```",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
959,0,train,Give me the member of University of Tsukuba.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/University_of_Tsukuba> . },"```sparql
SELECT ?person WHERE {
  ?person dbo:almaMater dbr:University_of_Tsukuba .
}
```",1,1,2,1,1,3,3,71,0,25,267,0.0,0.0,0
712,8,train,Give me the resting place of the awardee of Hero of the Soviet Union.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Hero_of_the_Soviet_Union> . ?v0 <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name ?restingPlace WHERE {
  ?person a dbo:Person .
  ?person dbo:honorificTitle dbr:Hero_of_the_Soviet_Union .
  OPTIONAL { ?person foaf:name ?name . }
  OPTIONAL { ?person dbo:deathPlace ?restingPlace . }
}
```",2,2,3,2,1,3,2,20,0,0,49,0,0.0,0
767,17,train,"Give me the alter ego of the persona, that is a fictional character, of Matthew Burland.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/alterEgo> ""Matthew Burland""@en . ?v1 <http://dbpedia.org/property/alterEgo> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?alias WHERE {
  VALUES ?person { dbr:Matthew_Burland }
  ?person dbo:alsoKnownAs ?alias .
}
```",2,3,3,2,1,3,3,71,0,0,5,0,0.0,0
356,6,train,Give me the player in 2015 Sacramento Republic FC season and team of Mark Briggs.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Mark_Briggs> . <http://dbpedia.org/resource/2015_Sacramento_Republic_FC_season> <http://dbpedia.org/ontology/team> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?player ?team ?role WHERE {
    ?player a dbo:FootballPlayer ;
           foaf:name ""Mark Briggs""@en .
    
    OPTIONAL { 
        ?player dbo:playsForTeam ?team .
        FILTER (CONTAINS(LCASE(STR(?team)), ""sacramento republic fc""))
    }
    
    OPTIONAL {
        ?player dbo:position ?role .
    }

    FILTER (
        EXISTS {
            ?event dbo:participant ?player ;
                   dbo:season ""2015""@en ;
                   dbo:team dbr:Sacramento_Republic_FC
        }
    )
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
55,1,train,Give me the band member of Metallica.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Metallica> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?member WHERE {
  ?band rdf:type dbo:Band .
  ?band rdfs:label ""Metallica""@en .
  ?band dbo:bandMember ?member .
}
```",1,1,2,1,1,2,3,28,0,4,15,0.0,0.0,0
77,8,train,Give me the force of the mayor of Congress Poland.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> ?v0 . <http://dbpedia.org/resource/Congress_Poland> <http://dbpedia.org/property/leader> ?v0 . },"```sparql
SELECT ?person ?role WHERE {
  ?person dbo:country dbr:Congress_Poland .
  ?person dbo:occupation ?role .
  FILTER(CONTAINS(LCASE(?role), ""governor-general"") || CONTAINS(LCASE(?role), ""statesman""))
}
```",2,2,3,2,1,3,2,20,0,0,33,0,0.0,0
696,8,train,Give me the landmark at elevation of the award of Nie Rongzhen.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/elevation> ?v0 . <http://dbpedia.org/resource/Nie_Rongzhen> <http://dbpedia.org/property/awards> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award ?landmark ?elevation WHERE {
  # Find awards associated with Nie Rongzhen
  ?person dbo:name ""Nie Rongzhen""@en .
  ?person dbo:awardsReceived ?award .

  OPTIONAL {
    # Attempt to find a landmark related to the award and its elevation
    ?award dbo:associatedLandmark ?landmark .
    ?landmark dbo:elevationAboveSeaLevel ?elevation .
  }
  
  FILTER(?person = dbr:Nie_Rongzhen)
}
```",2,2,3,2,1,3,2,20,0,0,599,0,0.0,0
427,14,train,"Give me the party of the person born, that is an office holder and a politician, as Romano Antonio Prodi.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/ontology/party> ?result . ?v1 <http://dbpedia.org/property/birthName> ""Romano Antonio Prodi""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?partyName WHERE {
  ?person a dbo:Politician ;
          foaf:name ""Romano Prodi""@en ;
          dbo:birthPlace ?birthPlace .
  
  OPTIONAL { ?person dbo:politicalParty ?party . }
  
  ?party rdfs:label ?partyName .
  FILTER (lang(?partyName) = 'en')
}
```",2,4,3,2,1,3,3,71,0,0,7,0,0.0,0
77,4,train,"Give me the territory administered, that is an organisation, from Warsaw.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Warsaw> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?organisation WHERE {
  ?organisation a dbo:Organisation .
  OPTIONAL { ?organisation dbo:headquarters ?location . }
  FILTER (langMatches(lang(?location), ""en"") && contains(lcase(str(?location)), ""warsaw""))
}
```",1,2,2,1,1,3,2,20,0,0,7,0,0.0,0
281,16,train,"Give me the birth place, that is a country, of the leader, that is a politician, of 1962 New South Wales state election.",SELECT ?result WHERE { <http://dbpedia.org/resource/1962_New_South_Wales_state_election> <http://dbpedia.org/property/leader> ?v1 . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
SELECT ?birthPlace WHERE {
  ?election dbo:year ""1962"" ;
            dbo:stateOrTerritory dbr:New_South_Wales ;
            dbo:leader ?leader .
  
  ?leader rdf:type dbo:Politician ;
          foaf:birthPlace ?birthPlace .

  FILTER (isBlank(?birthPlace) && {
    SELECT DISTINCT ?birthPlace WHERE {
      ?birthPlace a dbo:Country .
    }
  })
}
```",2,4,3,2,1,3,3,71,0,0,1,0,0.0,0
801,12,train,Give me the associated musical artist of Chris Taylor (music producer) and producer of Westside Story (song).,SELECT ?result WHERE { <http://dbpedia.org/resource/Westside_Story_(song)> <http://dbpedia.org/ontology/producer> ?result . <http://dbpedia.org/resource/Chris_Taylor_(music_producer)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
# Step 1: Get Chris Taylor's associated artists as a music producer
SELECT ?artist WHERE {
    ?producer foaf:name ""Chris Taylor (music producer)"" .
    ?producer dbo:worksFor ?band .
    ?band dbo:musicalArtist ?artist .
}

UNION

# Step 2: Get the artist associated with the producer of ""Westside Story""
SELECT ?artist WHERE {
    ?song dcterms:title ""Westside Story"" .
    ?song dbo:composer ?producer .
    ?producer dbo:worksFor ?band .
    ?band dbo:musicalArtist ?artist .
}

# Step 3: Find common artists between the two sets
SELECT DISTINCT ?commonArtist WHERE {
    { 
        ?producer1 foaf:name ""Chris Taylor (music producer)"" .
        ?producer1 dbo:worksFor ?band1 .
        ?band1 dbo:musicalArtist ?commonArtist .
    }
    
    UNION
    
    {
        ?song dcterms:title ""Westside Story"" .
        ?song dbo:composer ?producer2 .
        ?producer2 dbo:worksFor ?band2 .
        ?band2 dbo:musicalArtist ?commonArtist .
    }
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
184,16,train,"Give me the child of the parent, that is a royalty, of Archduke Ladislaus Philipp of Austria.",SELECT ?result WHERE { <http://dbpedia.org/resource/Archduke_Ladislaus_Philipp_of_Austria> <http://dbpedia.org/ontology/parent> ?v1 . ?result <http://dbpedia.org/property/father> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
SELECT ?child WHERE {
  # Find Archduke Ladislaus Philipp of Austria
  wd:Q123456 dbo:parent ?parent . 

  # Check if the parent is royalty
  OPTIONAL { ?parent dbo:title ?title . FILTER(CONTAINS(LCASE(?title), ""royalty"")) }

  # Ensure the parent has a royal title
  FILTER EXISTS { ?parent dbo:title ?title . FILTER(CONTAINS(LCASE(?title), ""royalty"")) }

  # Find children of this royal parent
  ?parent dbo:child ?child .
}
```

Note: Replace `wd:Q123456` with the actual DBpedia identifier for Archduke Ladislaus Philipp of Austria.",2,3,3,2,1,3,3,71,0,0,3,0,0.0,0
391,11,train,Give me the native of the figure known as Hub City.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/nickname> ""Hub City""@en . ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name WHERE {
  ?person dbo:birthPlace dbr:Spartanburg,_South_Carolina .
  ?person rdfs:label ?name .
  FILTER (LANG(?name) = 'en')
}
```",2,2,3,2,1,3,3,71,0,0,176,0,0.0,0
77,9,train,Who is the awardee of the award of Maxim Grigorievich Vlasov?,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Maxim_Grigorievich_Vlasov> <http://dbpedia.org/property/awards> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?awardee WHERE {
  ?award dbo:name ?name .
  FILTER(CONTAINS(LCASE(?name), ""order of suvorov"") && CONTAINS(LCASE(?name), ""vlasov"")) .
  ?recipient dbo:receivedAward ?award .
  ?recipient rdfs:label ?awardee .
  FILTER(LANG(?awardee) = 'en')
}
```",2,2,3,2,1,3,2,20,0,0,416,0,0.0,0
16,7,train,Who is the alumnus of Ohio State University?,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Ohio_State_University> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?alumnus ?name WHERE {
  ?alumnus dbo:almaMater dbr:Ohio_State_University .
  OPTIONAL { ?alumnus rdfs:label ?name FILTER (lang(?name) = 'en') }
}
ORDER BY ?name
```",1,1,2,1,1,3,3,71,467,459,0,0.5043196544276458,1.0,0.6704953338119167
92,6,train,"Give me the person born, that is an artist, as Jim Sheppard.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Jim Sheppard""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?person WHERE {
  ?person a dbo:Artist .
  ?person foaf:name ""Jim Sheppard"" .
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
981,3,train,Give me the region of Time in Indonesia.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Time_in_Indonesia> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?region WHERE {
  ?time dbo:location ?office .
  ?office dbp:country ""Indonesia"" ;
          dbp:region ?region .
  FILTER(CONTAINS(LCASE(STR(?time)), ""time magazine""))
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
