id,subid,split,question,sparql,generated_sparql,num_edges,num_edges_full,num_nodes,depth,breadth,base_depth,base_breadth,subgraphs,TP,FP,FN,Precision,Recall,F1
392,21,test,"Give me the region of Central European Time and entity in Italy and province of the residence, that is a settlement and Italian, of Sebastiano Bianchetti.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/province> ?result . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Central_European_Time> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy> . <http://dbpedia.org/resource/Sebastiano_Bianchetti> <http://dbpedia.org/property/residence> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?region ?province ?settlement WHERE {
  # Find Sebastiano Bianchetti and his nationality
  ?person a dbo:Person ;
          foaf:name ""Sebastiano Bianchetti"" ;
          dbp:nationality dbr:Italy .

  # Identify the region with Central European Time
  ?timeZone dbo:timezoneName ""Central European Time"" .
  
  # Find the province in Italy where Sebastiano resides
  ?province a dbo:Province ;
            dbo:country dbr:Italy ;
            dbp:timeZone ?timeZone .

  # Ensure the residence is a settlement and Italian
  ?settlement a dbo:Settlement ;
              dbo:locatedInAdministrativeArea ?province ;
              dbo:inhabitant ?person .
}
```",4,6,5,2,3,2,3,28,0,0,1,0,0.0,0
421,24,test,Give me the person born as the birth name of Dino Merlin and native of the birthplace of Samir Bekrić.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . <http://dbpedia.org/resource/Dino_Merlin> <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Samir_Bekrić> <http://dbpedia.org/ontology/birthPlace> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Get Dino Merlin's birth name
  VALUES (?dinoBirthName) { 
    SELECT ?birthName WHERE { 
      dbr:Dino_Merlin dbo:birthName ?birthName .
    }
  }

  # Get Samir Bekrić's birthplace
  VALUES (?samirBirthPlace) {
    SELECT ?birthPlace WHERE {
      dbr:Samir_Bekrić dbo:birthPlace ?birthPlace .
    }
  }

  # Find a person with the same birth name and native place
  ?person dbo:birthName ?dinoBirthName ;
          dbo:nativePlace ?samirBirthPlace .
}
```",4,4,5,2,2,2,3,28,0,0,1,0,0.0,0
427,55,test,"Give me the party of the person born, that is an office holder and a politician, as Romano Antonio Prodi and reference to the name of Italian People's Party (1994) and party of the father of Lamberto Andreotti.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ""Romano Antonio Prodi""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Lamberto_Andreotti> <http://dbpedia.org/property/father> ?v5 . ?v2 <http://dbpedia.org/ontology/party> ?result . ?v5 <http://dbpedia.org/ontology/party> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Italian_People's_Party_(1994)> <http://xmlns.com/foaf/0.1/name> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?prodiParty ?italianPeoplePartyLabel ?andreottiFatherPartyLabel
WHERE {
  # Romano Prodi's party affiliation
  ?prodi a dbo:Person ;
         foaf:name ""Romano Antonio Prodi""@en .
  ?prodi dbo:partyAffiliation ?prodiParty .

  # Italian People's Party (1994)
  ?italianPeopleParty a dbo:PoliticalParty ;
                     foaf:name ""Italian People's Party (1994)""@en .
  
  # Lamberto Andreotti's father and his party affiliation
  ?andreotti a dbo:Person ;
             foaf:name ""Lamberto Andreotti""@en .
  ?father a dbo:Parent ;
          dbo:child ?andreotti .
  ?father dbo:partyAffiliation ?andreottiFatherParty .

  # Labels for the parties
  OPTIONAL { ?prodiParty rdfs:label ?prodiPartyLabel . FILTER (lang(?prodiPartyLabel) = ""en"") }
  OPTIONAL { ?italianPeopleParty rdfs:label ?italianPeoplePartyLabel . FILTER (lang(?italianPeoplePartyLabel) = ""en"") }
  OPTIONAL { ?andreottiFatherParty rdfs:label ?andreottiFatherPartyLabel . FILTER (lang(?andreottiFatherPartyLabel) = ""en"") }

  # Bind labels for output
  BIND(COALESCE(?prodiPartyLabel, ?prodiParty) AS ?prodiParty)
  BIND(COALESCE(?italianPeoplePartyLabel, ?italianPeopleParty) AS ?italianPeoplePartyLabel)
  BIND(COALESCE(?andreottiFatherPartyLabel, ?andreottiFatherParty) AS ?andreottiFatherPartyLabel)
}
```",6,8,7,2,3,3,3,71,0,0,1,0,0.0,0
996,19,test,Give me the force of the awardee of 1778.0 and entity in the award of the native of Palestine (region).,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> ""1778.0""^^<http://www.w3.org/2001/XMLSchema#double> . ?result <http://dbpedia.org/ontology/place> ?v4 . ?v0 <http://dbpedia.org/property/awards> ?v4 . ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Palestine_(region)> . ?result <http://dbpedia.org/ontology/commander> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?force WHERE {
  ?award dbo:yearReceived ""1778"" .
  ?award dbo:recipient ?awardee .
  
  OPTIONAL { 
    ?awardee dbo:nationality dbr:Palestine_(region) .
  }
  
  ?awardee dbo:militaryForce ?force .
}
```",5,5,6,3,2,3,2,20,0,0,4,0,0.0,0
184,64,test,"Give me the parent of the child of the parent of Archduchess Margaret of Austria (born 1925) and parent of the native of the landmark at elevation, that is a settlement, of 96.0 and child of Archduke Joseph August of Austria.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_August_of_Austria> . ?v3 <http://dbpedia.org/ontology/elevation> ""96.0""^^<http://www.w3.org/2001/XMLSchema#double> . ?v2 <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Margaret_of_Austria_(born_1925)> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/property/father> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commonEntity WHERE {
  # Step 1: Find Archduchess Margaret of Austria (born 1925)
  ?margaret a dbo:Person ;
            foaf:name ""Margaret of Austria"" ;
            dbo:birthDate ?birthDate .
  FILTER(YEAR(?birthDate) = 1925)

  # Step 2: Find her parent
  ?parentParent dbo:child ?margaret .

  # Step 3: Find the child of that parent (Archduchess Margaret's sibling)
  ?sibling dbo:parent ?parentParent .
  
  # Step 4: Identify Archduke Joseph August of Austria and his child
  ?josephAugust a dbo:Person ;
                foaf:name ""Joseph August of Austria"" .
  ?childOfJoseph dbo:parent ?josephAugust .

  # Step 5: Find the landmark at elevation 96.0 meters, which is also a settlement
  ?landmark a dbo:Settlement ;
            dbo:elevation ?elevation .
  FILTER(?elevation = ""96.0""^^xsd:float)

  # Step 6: Identify a native of that landmark
  ?native dbo:nativePlace ?landmark .

  # Step 7: Find the parent of that native
  ?parentOfNative dbo:child ?native .

  # Step 8: Combine to find the common entity
  VALUES (?entity1) { ?sibling ?childOfJoseph }
  VALUES (?entity2) { ?parentOfNative }

  ?commonEntity dbo:parent ?entity1 .
  ?commonEntity dbo:parent ?entity2 .
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
492,46,test,"Give me the person decedent at the work of the author of French Algeria and commander in the war, that is a military conflict and an event, of Frédéric-Georges Herr.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/property/author> ?v2 . ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . ?v4 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/French_Algeria> <http://dbpedia.org/property/author> ?v2 . <http://dbpedia.org/resource/Frédéric-Georges_Herr> <http://dbpedia.org/ontology/battle> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?decedent WHERE {
  # Identify Frédéric-Georges Herr
  dbr:Frédéric-Georges_Herr a dbo:Person .

  # Find the work ""French Algeria""
  ?work dbo:author dbr:Frédéric-Georges_Herr ;
        rdfs:label ""French Algeria""@en .
  
  # Identify wars where he was a commander
  ?war dbo:commander dbr:Frédéric-Georges_Herr ;
       a dbo:MilitaryConflict .

  # Find decedents related to his work or military command
  OPTIONAL {
    ?work dbo:decedent ?decedent .
  }
  
  OPTIONAL {
    ?war dbo:decedent ?decedent .
  }

  FILTER (lang(?work) = 'en' && lang(?war) = 'en')
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
427,20,test,Give me the reference to Partito Popolare Italiano and party of the father of Lamberto Andreotti.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Lamberto_Andreotti> <http://dbpedia.org/property/father> ?v2 . ?result <http://xmlns.com/foaf/0.1/name> ""Partito Popolare Italiano""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?partyReference ?fatherParty WHERE {
  # Find the DBpedia resource for Partito Popolare Italiano
  VALUES ?partyReference { 
    dbr:Partito_Popolare_Italiano 
  }

  # Identify Lamberto Andreotti and his father's name
  ?andreotti dbo:birthName ""Lamberto Andreotti""@en .
  ?andreotti dbo:father ?father .

  OPTIONAL {
    ?father dbo:partyAffiliation ?fatherParty .
  }
  
  FILTER(?fatherParty = ?partyReference)
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
747,61,test,"Give me the band of the person born as the persona of Shèna and band of the writer of the work, that is a song, of Amba Shepherd.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Amba_Shepherd> . ?v3 <http://dbpedia.org/property/birthName> ?v1 . ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/writer> ?v5 . <http://dbpedia.org/resource/Shèna> <http://xmlns.com/foaf/0.1/givenName> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?personBand ?songWriterBand WHERE {
  # Part 1: Find the band of the person born as ""Shèna""
  ?person dbo:birthName ""Shèna""@en .
  OPTIONAL { ?person dbo:band ?personBand . }

  # Part 2: Find the band of the writer of the song ""Amba Shepherd""
  ?song dbo:title ""Amba Shepherd""@en ;
        dbo:lyricist ?writer .
  OPTIONAL { ?writer dbo:band ?songWriterBand . }
}
```",6,7,7,3,2,3,3,71,0,0,1,0,0.0,0
328,44,test,"Give me the awardee of Order of Suvorov and commander in the force of Ferenc Szálasi and leader of the office, that is a government agency, of Joseph Stalin.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Ferenc_Szálasi> . ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Order_of_Suvorov> . <http://dbpedia.org/resource/Joseph_Stalin> <http://dbpedia.org/property/office> ?v2 . ?v4 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v2 <http://dbpedia.org/ontology/leader> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person dbo:award dbr:Order_of_Suvorov .
  
  ?commanderRole dbo:leader ?person ;
                 dbo:memberOf dbr:Ferenc_Szálasi#Military_Commanders .
  
  ?officeLeaderRole dbo:leader ?person ;
                    dbo:headOf dbr:Government_Agency_of_Joseph_Stalin .

  FILTER EXISTS { ?commanderRole a dbo:MilitaryCommander . }
  FILTER EXISTS { ?officeLeaderRole a dbo:GovernmentOfficeLeader . }
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
294,28,test,"Give me the resting place of the architect of P. D. Houston Jr. House and entity in the birth place, that is a settlement, of Marion James and resting place of the awardee, that is a politician, of Distinguished Service Medal (U.S. Army).",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . ?result <http://dbpedia.org/ontology/location> ?v5 . ?v3 <http://dbpedia.org/ontology/restingPlace> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/P._D._Houston_Jr._House> <http://dbpedia.org/ontology/architect> ?v3 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Marion_James> <http://dbpedia.org/ontology/birthPlace> ?v5 . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Distinguished_Service_Medal_(U.S._Army)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?architectRestingPlace ?marionBirthSettlement ?awardeeRestingPlace
WHERE {
  # Architect of P. D. Houston Jr. House and their resting place
  dbr:P._D._Houston_Jr._House dbo:architect ?architect .
  ?architect dbo:deathPlace ?architectRestingPlace .

  # Birthplace of Marion James that is a settlement
  dbr:Marion_James dbo:birthPlace ?marionBirthPlace .
  ?marionBirthPlace rdf:type dbo:Settlement .
  BIND(?marionBirthPlace AS ?marionBirthSettlement)

  # Awardee of Distinguished Service Medal who is a politician and their resting place
  ?awardee dbo:recipient dbr:Distinguished_Service_Medal_(U.S._Army) ;
           rdf:type dbo:Politician .
  ?awardee dbo:deathPlace ?awardeeRestingPlace .
}
```",6,8,7,2,3,2,3,28,0,0,1,0,0.0,0
528,41,test,Give me the war of the military force of Battle of Pisagua and war of the commander in Battle of La Rinconada de Ate and force of Narciso Campero.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Battle_of_La_Rinconada_de_Ate> <http://dbpedia.org/ontology/commander> ?v4 . ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Narciso_Campero> . ?v2 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Pisagua> . ?v4 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?pisaguaForce ?rinconadaWar ?camperoForce WHERE {
  # Battle of Pisagua and its military force
  ?battle1 a dbo:Battle ;
           rdfs:label ""Battle of Pisagua""@en .
  ?battle1 dbp:militaryForce ?pisaguaForce .

  # Battle of La Rinconada de Ate, its commander, and the war
  ?battle2 a dbo:Battle ;
           rdfs:label ""Battle of La Rinconada de Ate""@en .
  ?battle2 dbp:commander ?commander .
  ?commander rdfs:label ?commanderLabel .
  OPTIONAL { ?battle2 dbo:participatedIn ?rinconadaWar . }

  # Narciso Campero and his military force
  ?person rdfs:label ""Narciso Campero""@en ;
          dbp:militaryForce ?camperoForce .
}
```",5,5,6,2,3,3,3,71,0,0,2,0,0.0,0
9,49,test,"Give me the alma mater of the mayor, that is a politician, of Northern Ireland Forum and figure known as the nickname of the entity, that is an organisation and an educational institution, in Northern Ireland.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/nickname> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/property/nickname> ?v1 . ?v2 <http://dbpedia.org/ontology/almaMater> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Northern_Ireland_Forum> <http://dbpedia.org/property/leader> ?v2 . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Northern_Ireland> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?almaMater ?nickname WHERE {
  # Find the mayor of Northern Ireland Forum
  ?mayor a dbo:Mayor ;
         dbo:memberOf ?forum .
  
  FILTER regex(str(?forum), ""Northern Ireland Forum"", ""i"") .

  # Get the alma mater of this mayor
  ?mayor foaf:almaMater ?almaMater .

  # Find educational institutions in Northern Ireland with a nickname
  ?institution dbo:location ?location ;
              rdfs:label ?name .
  
  FILTER regex(str(?location), ""Northern Ireland"", ""i"") .
  OPTIONAL { ?institution dbo:nickname ?nickname } .

  # Match the alma mater to the institution known by its nickname
  FILTER (?almaMater = ?institution) .
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
281,41,test,"Give me the entity in the birth place, that is a country, of Bob Heffron and war of the awardee of Knight Grand Cross of the Order of the Bath and war of New Zealand Army.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> ?v4 . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_the_Bath> . <http://dbpedia.org/resource/New_Zealand_Army> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Bob_Heffron> <http://dbpedia.org/ontology/birthPlace> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?birthPlaceCountry ?war 
WHERE {
  # Find Bob Heffron's birth place and ensure it is a country
  dbr:Bob_Heffron dbo:birthPlace ?birthPlace .
  ?birthPlace rdf:type dbo:Country .

  # Get the name of the birth place country
  ?birthPlace rdfs:label ?birthPlaceCountry .

  # Find individuals awarded Knight Grand Cross of the Order of the Bath
  ?awardee dbo:award ?orderOfTheBath .
  ?orderOfTheBath rdf:type dbr:Knight_Grand_Cross_of_the_Order_of_the_Bath .

  # Find wars involving Bob Heffron and the awardee, with New Zealand Army involvement
  ?heffronWar dbo:participatedIn ?war ;
              rdfs:label ""Bob_Heffron""@en .
  ?awardeeWar dbo:participatedIn ?war ;
              rdfs:label ?awardeeLabel .

  # Ensure the war involves New Zealand Army
  ?war dbo:participatingOrganisation dbr:New_Zealand_Army .

  FILTER (lang(?birthPlaceCountry) = 'en')
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
485,21,test,"Give me the entity in the birth place, that is a region, of Joseph Whitaker (naturalist) and entity in United Kingdom and birth place of Thomas Warner (poet).",SELECT ?result WHERE { <http://dbpedia.org/resource/Thomas_Warner_(poet)> <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?result <http://dbpedia.org/ontology/country> ?v1 . <http://dbpedia.org/resource/Joseph_Whitaker_(naturalist)> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?entityJoseph ?birthPlaceJoseph ?entityThomas ?birthPlaceThomas
WHERE {
  # For Joseph Whitaker (naturalist)
  dbr:Joseph_Whitaker_(naturalist) dbo:birthPlace ?birthPlaceJoseph .
  ?birthPlaceJoseph rdf:type dbo:Region ;
                   dbo:country dbr:United_Kingdom .

  # Entity in the birth place of Joseph Whitaker
  ?entityJoseph rdf:type/rdfs:subClassOf* dbo:AdministrativeTerritory ;
                dbo:location ?birthPlaceJoseph .

  # For Thomas Warner (poet)
  dbr:Thomas_Warner_(poet) dbo:birthPlace ?birthPlaceThomas .
  
  # Entity in the birth place of Thomas Warner
  ?entityThomas rdf:type/rdfs:subClassOf* dbo:AdministrativeTerritory ;
                dbo:location ?birthPlaceThomas .
}
```",4,5,5,2,3,2,3,28,0,0,1,0,0.0,0
528,52,test,"Give me the war of the commander in Battle of La Rinconada de Ate and force of Narciso Campero and war of the military force of the entity, that is a societal event, in Chile.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Narciso_Campero> . ?v2 <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Battle_of_La_Rinconada_de_Ate> <http://dbpedia.org/ontology/commander> ?v5 . ?v3 <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Chile> . ?v5 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT DISTINCT ?commander ?war 
WHERE {
  # Find the commander of Narciso Campero in the Battle of La Rinconada de Ate
  dbr:Battle_of_La_Rinconada_de_Ate dbo:commander ?commander .
  ?commander rdf:type dbo:MilitaryPerson ;
             foaf:name ""Narciso Campero""@en .

  # Find a war involving a military force from an entity that is a societal event in Chile
  ?war dbo:participatedInMilitaryConflict ?battle .
  ?battle dbo:location dbr:Chile .
  ?societalEvent rdf:type dbo:SocietalEvent ;
                 dbo:place dbr:Chile .
  ?militaryForce dbo:partOfSociety ?societalEvent .
}
```",6,7,7,3,3,3,3,71,0,0,2,0,0.0,0
534,19,test,"Give me the birth place of the child, that is a politician and an office holder, of Desmond FitzGerald (politician) and headquarter of the owner of the location, that is a venue and an architectural structure, of 2012 Pro12 Grand Final.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/headquarter> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Venue>. <http://dbpedia.org/resource/Desmond_FitzGerald_(politician)> <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/ontology/owner> ?v4 . <http://dbpedia.org/resource/2012_Pro12_Grand_Final> <http://dbpedia.org/ontology/location> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ArchitecturalStructure>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace ?headquarters WHERE {
  # Step 1: Identify Desmond FitzGerald's child who is a politician and an office holder
  ?child dbo:parent dbr:Desmond_FitzGerald_(politician) .
  ?child (dbo:officeHolder|dbo:politicalPartyMember) _:a .

  # Step 2: Determine the birthplace of this child
  ?child dbo:birthPlace ?birthPlace .

  # Step 3: Identify the venue of the 2012 Pro12 Grand Final
  dbr:2012_Pro12_Grand_Final dbo:venue ?venue .

  # Step 4: Determine the owner of this venue
  ?venue dbo:owner ?owner .

  # Step 5: Find the headquarters of the owner
  ?owner dbo:headquarters ?headquarters .
}
```",5,9,6,3,2,3,2,20,0,0,1,0,0.0,0
391,33,test,"Give me the actor of the claim to fame, that is a work, of the spouse of Sherry Hormann and native of Compton, California.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Compton,_California> . <http://dbpedia.org/resource/Sherry_Hormann> <http://dbpedia.org/ontology/spouse> ?v0 . ?v0 <http://dbpedia.org/ontology/knownFor> ?v3 . ?v3 <http://dbpedia.org/ontology/starring> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?actor WHERE {
  # Find Sherry Hormann's spouse who is native to Compton, California
  ?spouse dbo:spouse dbr:Sherry_Hormann ;
          dbo:nationality dbr:United_States ;
          dbp:hometown dbr:Compton,_California .

  # Identify the claim to fame (work) of this person
  ?spouse dbo:claimToFame ?work .

  # Find the actor associated with this work
  ?work dbo:actor ?actor .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
54,54,test,Give me the child of the father of Soe Min Wimala Dewi and predecessor of Ameitta Thiri Maha Dhamma Dewi of Ava and parent of the child of the parent of Thado Minsaw of Prome.,SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/father> ?v0 . ?v5 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> . <http://dbpedia.org/resource/Soe_Min_Wimala_Dewi> <http://dbpedia.org/property/father> ?v3 . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Ameitta_Thiri_Maha_Dhamma_Dewi_of_Ava> . ?v3 <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?individual WHERE {
  # Step 1: Father of Soe Min Wimala Dewi
  ?father dbo:child dbr:Soe_Min_Wimala_Dewi .
  
  # Step 2: Predecessor of Ameitta Thiri Maha Dhamma Dewi of Ava
  ?predecessor dbo:succeededBy dbr:Ameitta_Thiri_Maha_Dhamma_Dewi_of_Ava .

  # Step 3: Child of the Father and Predecessor
  ?individual dbo:parent ?father .
  ?individual dbo:parent ?predecessor .

  # Step 4: Parent of the child of the parent of Thado Minsaw of Prome
  ?thadoParent dbo:child dbr:Thado_Minsaw_of_Prome .
  ?thadoChild dbo:parent ?thadoParent .
  ?individual dbo:parent ?thadoChild .
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
10,27,test,"Give me the professional in the birth name of Sharon Kao and associated musical artist of Matt Colton and band member of the person born, that is an artist, as Luke Francis Vibert.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Sharon_Kao> <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Matt_Colton> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://dbpedia.org/property/birthName> ""Luke Francis Vibert""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?sharonKaoBirthName ?mattColtonArtist ?bandMemberArtist
WHERE {
  # Find Sharon Kao's birth name
  ?sharonKao dbo:birthName ?sharonKaoBirthName .
  FILTER (str(?sharonKaoBirthName) = ""Sharon Kao"") .

  # Find Matt Colton's associated musical artist
  ?mattColton dbo:musicalArtist ?mattColtonArtist .

  # Find Luke Francis Vibert and his band members who are artists
  ?vibert foaf:name ""Luke Francis Vibert"" .
  ?bandMember dbo:memberOfBand ?vibert ;
              a dbo:MusicArtist .
  
  # Ensure the band member is also an artist
  ?bandMemberArtist dbo:artist ?bandMember .

}
```",5,6,6,2,3,2,3,28,0,0,1,0,0.0,0
528,65,test,Give me the war of the military force of Battle of Pisagua and war of the commander in the work of --01-09 and force of the person born as Narciso Campero Leyes.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> ?v3 . ?v3 <http://dbpedia.org/property/birthName> ""Narciso Campero Leyes""@en . ?v6 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/property/author> ""--01-09""^^<http://www.w3.org/2001/XMLSchema#gMonthDay> . ?v4 <http://dbpedia.org/ontology/battle> ?result . ?v4 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Pisagua> . ?v0 <http://dbpedia.org/ontology/commander> ?v6 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?battleForce ?war ?commanderForce
WHERE {
  # Find the military force involved in the Battle of Pisagua
  ?battleForce dbo:participatedIn dbr:Battle_of_Pisagua .

  # Find the war associated with a commander on the specific date
  ?war dbo:commander ?commander .
  ?commander dbo:birthDate ?birthDate .
  FILTER (STRSTARTS(STR(?birthDate), ""01-09""))

  # Find the military force associated with Narciso Campero Leyes
  ?commanderForce dbo:participatedIn ?war .
  ?commander dbr:Narciso_Campero_Leyes .
}
```",7,7,8,3,3,3,3,71,0,0,2,0,0.0,0
492,59,test,"Give me the person decedent at the work of the author of French Algeria and commander in the war, that is a military conflict and an event, of the commander in Battle of Verdun.",SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . ?v2 <http://dbpedia.org/property/author> ?v3 . <http://dbpedia.org/resource/Battle_of_Verdun> <http://dbpedia.org/ontology/commander> ?v0 . <http://dbpedia.org/resource/French_Algeria> <http://dbpedia.org/property/author> ?v3 . ?v0 <http://dbpedia.org/ontology/battle> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v5 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?decedent WHERE {
  # Find the author of ""French Algeria""
  ?author dbo:title ""French Algeria""@en .
  
  # Check if this person was a commander in a war
  ?author dbo:occupation dbr:Military_commander .

  # Identify the commander of the Battle of Verdun
  ?verdunCommander dbo:commandedBattle dbr:Battle_of_Verdun ;
                   rdfs:label ?verdunLabel .
  
  # Find if there is a connection between the author and the commander of Verdun
  OPTIONAL { ?author dbo:spouse ?verdunCommander . }
  OPTIONAL { ?author dbo:child ?verdunCommander . }

  # Check for decedent at work on ""French Algeria""
  ?decedent dbo:title ""French Algeria""@en ;
            dbo:deathPlace ?placeOfDeath .
  
  FILTER(?decedent != ?author)
}
```",6,8,7,3,2,3,3,71,0,0,1,0,0.0,0
488,58,test,"Give me the administration of the father of the spouse, that is a royalty, of Tokugawa Masako and birth place of Enomoto Takeaki and death place of the father, that is a politician, of Yūki Hideyasu.",SELECT ?result WHERE { <http://dbpedia.org/resource/Yūki_Hideyasu> <http://dbpedia.org/property/father> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v5 <http://dbpedia.org/ontology/deathPlace> ?result . ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Tokugawa_Masako> . ?v1 <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/property/leader> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Enomoto_Takeaki> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?administration ?enomotoBirthPlace ?yukiFatherDeathPlace WHERE {
  # Tokugawa Masako's spouse
  ?masako dbo:spouse ?spouse .
  FILTER(STRSTARTS(LCASE(?spouse), ""tokugawa yorinobu"")) .

  # Spouse's father (Royalty)
  ?spouse dbo:father ?royalFather .
  
  # Administration of the royal father
  OPTIONAL {
    ?royalFather dbo:office ?administration .
  }

  # Enomoto Takeaki's birthplace
  dbr:Enomoto_Takeaki dbo:birthPlace ?enomotoBirthPlace .

  # Yūki Hideyasu's father (Politician)
  dbr:Yuki_Hideyasu dbo:father ?yukiFather .
  
  # Death place of Yūki Hideyasu's father
  OPTIONAL {
    ?yukiFather dbo:deathPlace ?yukiFatherDeathPlace .
  }
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
801,56,test,"Give me the producer of Westside Story (song) and professional in the alter ego of The Shadow and associated musical artist of the writer, that is a musical artist and an artist, of the album, that is a musical work and a work, of What U See Is What U Get.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v2 . <http://dbpedia.org/resource/Westside_Story_(song)> <http://dbpedia.org/ontology/producer> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/What_U_See_Is_What_U_Get> <http://dbpedia.org/ontology/album> ?v0 . ?v0 <http://dbpedia.org/property/writer> ?v1 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?producer ?shadowAlterEgo ?associatedArtist ?albumArtist WHERE {
  # Producer of ""Westside Story (song)""
  OPTIONAL { 
    dbr:Westside_Story_(song) dbo:producer ?producer .
  }

  # Professional in the alter ego of The Shadow
  OPTIONAL {
    ?shadowAlterEgo rdfs:label ""The Shadow""@en ;
                    dbo:alterEgoOf ?professional .
  }
  
  # Writer of ""What U See Is What U Get"" and associated musical artist
  OPTIONAL {
    dbr:What_U_See_Is_What_U_Get dbo:writer ?writer .
    ?associatedArtist dbo:associatedWith ?writer .
  }

  # Musical artist and artist of the album ""What U See Is What U Get""
  OPTIONAL {
    dbr:What_U_See_Is_What_U_Get dbo:artist ?albumArtist ;
                                  a dbo:MusicalWork, dbo:Work .
    ?albumArtist a dbo:MusicalArtist, dbo:Artist .
  }
}
```",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
232,54,test,"Give me the actor of the claim to fame, that is a film and a military conflict, of the professional in Actor, narrator and producer and child of the person born as John Devon Roland Pertwee and native of London.","SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/property/birthName> ""John Devon Roland Pertwee""@en . ?v3 <http://dbpedia.org/ontology/child> ?result . ?v0 <http://dbpedia.org/property/occupation> ""Actor, narrator and producer""@en . ?v0 <http://dbpedia.org/ontology/knownFor> ?v5 . ?v5 <http://dbpedia.org/ontology/starring> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/London> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?actor WHERE {
  ?person dbo:parent dbr:John_Devon_Roland_Pertwee ;
          dbo:nationality dbr:United_Kingdom ;
          dbo:birthPlace dbr:London ;
          rdf:type dbo:Actor ;
          dbo:occupation ""Narrator""@en ;
          dbo:occupation ""Producer""@en .
  ?film dbo:starring ?actor ;
        dbo:title ?title .
  ?conflict dbo:name ?name .
  FILTER CONTAINS(?title, ""claim to fame"") .
  FILTER CONTAINS(?name, ""military conflict"") .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
184,18,test,Give me the parent of Archduchess Ilona of Austria and parent of Géza von Habsburg and child of Archduke Joseph August of Austria.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_August_of_Austria> . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Géza_von_Habsburg> . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Ilona_of_Austria> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?parentIlona ?parentGéza ?childJosephAugust
WHERE {
  # Find the parent(s) of Archduchess Ilona of Austria
  ?ilona a dbo:Person ;
         rdfs:label ""Archduchess Ilona of Austria""@en .
  ?ilona dbo:parent ?parentIlona .

  # Find the parent(s) of Géza von Habsburg
  ?geza a dbo:Person ;
        rdfs:label ""Géza von Habsburg""@en .
  ?geza dbo:parent ?parentGéza .

  # Find the child(ren) of Archduke Joseph August of Austria
  ?josephAugust a dbo:Person ;
                rdfs:label ""Archduke Joseph August of Austria""@en .
  ?josephAugust dbo:child ?childJosephAugust .
}
```",3,3,4,1,3,3,3,71,1,1,0,0.5,1.0,0.6666666666666666
994,33,test,"Give me the associated musical artist of the band member, that is a band and a group and an organisation, of the band, that is an organisation, of Fredrik Thordendal and associated musical artist of S.A. Slayer.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Fredrik_Thordendal> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/S.A._Slayer> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandMemberArtist ?sA_SlayerArtist WHERE {
  # Fredrik Thordendal's band (Meshuggah)
  dbr:Fredrik_Thordendal dbo:memberOf dbr:Meshuggah .
  
  # Find other bands or groups that members of Meshuggah are part of
  ?meshuggahMember dbo:memberOf dbr:Meshuggah ;
                  dbo:memberOf ?otherBand .

  # Ensure the other band is also a group and organization
  ?otherBand rdf:type dbo:MusicalGroup .
  
  # Find associated musical artists for these members
  ?bandMemberArtist dbo:associatedBandOrMusicalArtist ?meshuggahMember .

  # S.A. Slayer (Tom Araya) and his associated musical artist(s)
  dbr:Tom_Araya dbo:memberOf dbr:Slayer ;
                dbo:associatedBandOrMusicalArtist ?sA_SlayerArtist .
}
```",4,8,5,3,2,3,3,71,0,0,2,0,0.0,0
184,47,test,"Give me the parent of the native of Budapest and child of the child of the parent, that is a royalty, of Archduke Ladislaus Philipp of Austria.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Archduke_Ladislaus_Philipp_of_Austria> <http://dbpedia.org/ontology/parent> ?v0 . ?v2 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Budapest> . ?result <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/property/father> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  # Step 1: Identify Archduke Ladislaus Philipp of Austria's native city as Budapest.
  ?ladislaus dbo:birthPlace dbp:Budapest .
  
  # Step 2: Find the parent of Archduke Ladislaus Philipp of Austria.
  ?parent dbo:child ?ladislaus .

  # Step 3: Find the child of this parent (grandchild of Archduke).
  ?grandchild dbo:parent ?parent .
  
  # Step 4: Find the child of this grandchild (great-grandchild of Archduke).
  ?greatGrandchild dbo:parent ?grandchild .

  # Ensure that the great-grandchild is royalty.
  ?greatGrandchild a dbo:RoyalFamilyMember .
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
617,60,test,"Give me the child of the child, that is a royalty, of the successor, that is a royalty, of Antiochus II Theos and parent of the child of the commander in Battle of Panium.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Antiochus_II_Theos> <http://dbpedia.org/ontology/successor> ?v3 . ?v0 <http://dbpedia.org/ontology/child> ?v1 . <http://dbpedia.org/resource/Battle_of_Panium> <http://dbpedia.org/ontology/commander> ?v0 . ?result <http://dbpedia.org/property/father> ?v2 . ?v2 <http://dbpedia.org/property/father> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?childOfChild
WHERE {
  # Step 1: Find Antiochus II Theos' successor who is a royalty
  ?successor dbo:predecessor dbr:Antiochus_II_Theos ;
             rdf:type dbo:Monarch .

  # Step 2: Find the child of this successor who is also a royalty
  ?childOfSuccessor dbo:parent ?successor ;
                   rdf:type dbo:Monarch .

  # Step 3: Identify the commander in Battle of Panium
  ?battle dbr:Battle_of_Panium ;
         dbo:commander ?commander .

  # Step 4: Determine the parent of this commander's child
  ?childOfCommander dbo:parent ?commander .
  ?parentOfChildOfCommander dbo:child ?childOfCommander .

  # Step 5: Find the match between step 2 and step 4
  ?childOfSuccessorSameAsParent ?parentOfChildOfCommander ;
                                rdf:type dbo:Monarch .

  BIND(?childOfSuccessor AS ?childOfChild)
}
```",6,8,7,3,2,3,3,71,0,0,2,0,0.0,0
184,55,test,Give me the parent of the child of Archduke Joseph Francis of Austria and parent of the native of Budapest and child of the child of Archduke Joseph Karl of Austria.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v5 . ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Karl_of_Austria> . ?result <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Budapest> . ?result <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Francis_of_Austria> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commonParent WHERE {
  # Path 1: Parent of the child of Archduke Joseph Francis of Austria
  ?child1 dbo:parent dbr:Archduke_Joseph_Francis_of_Austria .
  ?parent1 dbo:parent ?child1 .

  # Path 2a: Native of Budapest and their parent
  ?native dbo:nativePlace dbr:Budapest .
  ?parent2 dbo:parent ?native .

  # Path 2b: Child of the child of Archduke Joseph Karl of Austria
  ?grandChild2 dbo:child ?child2 .
  ?child2 dbo:parent dbr:Archduke_Joseph_Karl_of_Austria .
  ?parent2 dbo:parent ?grandChild2 .

  # Find common parent
  FILTER (?parent1 = ?parent2)
  BIND(?parent1 AS ?commonParent)
}
```",6,6,7,2,3,3,3,71,0,0,1,0,0.0,0
92,37,test,"Give me the band of Joseph Michael and associated musical artist of the person born, that is an artist, as the actor of Return to Nuke 'Em High Volume 1.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Joseph_Michael> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v3 <http://dbpedia.org/property/birthName> ?v0 . <http://dbpedia.org/resource/Return_to_Nuke_'Em_High_Volume_1> <http://dbpedia.org/property/starring> ?v0 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?band ?associatedArtist WHERE {
  # Find Joseph Michael's band
  ?person a dbo:MusicalArtist ;
          foaf:name ""Joseph Michael"" .
  ?person dbo:bandMember ?band .

  # Find actors in ""Return to Nuke 'Em High Volume 1""
  ?actor a dbo:Actor ;
         dbo:film dbr:Return_to_Nuke_'Em_High_Volume_1 ;
         dbo:musicalArtist ?musicianPerson .

  # Find associated musical artist
  ?musicianPerson dbo:associatedMusicalArtist ?associatedArtist .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
528,69,test,"Give me the force of the person born as the birth name of Narciso Campero and war of the commander in Battle of La Rinconada de Ate and war of the military force of the entity, that is a societal event, in Chile.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/property/birthName> ?v1 . ?v7 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Battle_of_La_Rinconada_de_Ate> <http://dbpedia.org/ontology/commander> ?v7 . ?v4 <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Chile> . ?v3 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/commander> ?v2 . ?v3 <http://dbpedia.org/ontology/battle> ?v4 . <http://dbpedia.org/resource/Narciso_Campero> <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?forceOfPerson ?warOfBattle ?chileEvent WHERE {
  # Find Narciso Campero's birth name
  VALUES (?campero) { dbr:Narciso_Campero }
  ?campero dbo:birthName ?birthName .

  # Find the force associated with the person having that birth name
  ?person dbo:birthName ?birthName .
  OPTIONAL { ?person dbo:militaryForce ?forceOfPerson . }

  # Identify the commander of the Battle of La Rinconada de Ate and the war it was part of
  dbr:Battle_of_La_Rinconada_de_Ate dbo:commander ?battleCommander .
  ?battleCommander dbo:participatedInWar ?warOfBattle .

  # Determine a societal event in Chile involving a military force
  ?event dbo:location dbr:Chile ;
         a dbo:SocietalEvent ;
         dbo:militaryForce ?chileMilitaryForce .
}
```",8,9,9,3,3,3,3,71,0,0,2,0,0.0,0
48,20,test,"Give me the band of the actor, that is a musical artist, of the show with Stacey Dash and band of the writer of the work, that is a work, of Shellback (record producer).",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Stacey_Dash> . ?v1 <http://dbpedia.org/property/writer> ?v2 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Shellback_(record_producer)> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://dbpedia.org/property/starring> ?v5 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actorBand ?writerBand WHERE {
  # Find the show with Stacey Dash as an actor
  ?show dbo:starring dbr:Stacey_Dash .
  
  # Check if the actor is also a musical artist and find their band
  ?actor dbo:actorIn ?show ;
         a dbo:MusicalArtist ;
         dbo:band ?actorBand .

  # Find works produced by Shellback
  ?work dbo:producer dbr:Shellback .

  # Identify the writer of those works
  ?work dbo:writer ?writer .
  
  # Check if the writer is also a musical artist and find their band
  ?writer a dbo:MusicalArtist ;
          dbo:band ?writerBand .
}
```",6,8,7,3,2,3,2,20,0,0,3,0,0.0,0
314,21,test,"Give me the awardee of 30 and commander in the profession, that is an event and a societal event, of Lisa Gavrić and person deceased at Madrid.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Lisa_Gavrić> <http://dbpedia.org/property/occupation> ?v0 . ?result <http://dbpedia.org/property/awards> ""30""^^<http://www.w3.org/2001/XMLSchema#integer> . ?result <http://dbpedia.org/ontology/restingPlace> <http://dbpedia.org/resource/Madrid> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?event WHERE {
  # Lisa Gavrić's resource and her death in Madrid
  dbr:Lisa_Gavrić dbo:deathPlace dbr:Madrid .
  
  # Event where Lisa Gavrić is an awardee of the 30th award as a commander
  ?event dbo:awardRecipient dbr:Lisa_Gavrić ;
         dbp:awardNumber ""30""^^xsd:int ;
         dbo:profession dbr:Commander .

  # The event must be both an event and a societal event
  ?event rdf:type dbo:Event .
  ?event rdf:type dbo:SocietalEvent .
}
```",4,6,5,2,3,2,3,28,0,0,1,0,0.0,0
161,50,test,"Give me the commander in the force, that is an event, of Emilio Mola and military force of the force, that is a societal event and a military conflict, of the predecessor of Indalecio Prieto.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/commander> ?v0 . ?result <http://dbpedia.org/ontology/battle> ?v4 . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Emilio_Mola> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Indalecio_Prieto> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commanderEvent ?militaryForce ?societalEvent ?militaryConflict
WHERE {
  # Find events where Emilio Mola was a commander in a military force
  ?commanderEvent dbo:commander dbr:Emilio_Mola .
  ?commanderEvent dbo:militaryForce ?militaryForce .

  # Identify Niceto Alcalá-Zamora as Indalecio Prieto's predecessor
  ?societalEvent dbo:predecessor dbr:Niceto_Alcalá-Zamora .
  ?militaryConflict dbo:predecessor dbr:Niceto_Alcalá-Zamora .

  # Ensure the military force is associated with a societal event and military conflict of Niceto Alcalá-Zamora
  ?societalEvent dbo:militaryForce ?militaryForce .
  ?militaryConflict dbo:militaryForce ?militaryForce .
}
```",5,8,6,3,2,3,3,71,0,0,32,0,0.0,0
767,66,test,"Give me the entity in the administration, that is a settlement, of Green and reference to the alter ego of the persona, that is a fictional character, of Matthew Burland and alma mater of the administration of George K. Nash.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/alterEgo> ""Matthew Burland""@en . ?v1 <http://dbpedia.org/property/alterEgo> ?v2 . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v6 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/George_K._Nash> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v3 <http://dbpedia.org/property/leaderParty> ""Green""@en . ?v6 <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://dbpedia.org/ontology/state> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?settlement ?alterEgo ?almaMater
WHERE {
  ?admin dbo:type dbo:Settlement .
  ?admin foaf:name ""Green"" .
  
  ?burland dbo:alterEgo ?alterEgo .
  FILTER (str(?burland) = ""Matthew Burland"") .

  ?nash dbo:almaMater ?almaMater .
  FILTER (str(?nash) = ""George K. Nash"") .

  ?alterEgo dbo:almaMater ?almaMater .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
182,21,test,Give me the war of Jagath Dias and entity in the nationality of Tamara Kunanayakam and war of Mahesh Senanayake.,SELECT ?result WHERE { <http://dbpedia.org/resource/Tamara_Kunanayakam> <http://dbpedia.org/ontology/nationality> ?v0 . <http://dbpedia.org/resource/Mahesh_Senanayake> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Jagath_Dias> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?war WHERE {
  # Wars involving Jagath Dias
  { 
    ?person rdfs:label ""Jagath Dias""@en.
    ?person dbo:participatedIn ?war.
  }
  
  UNION
  
  # Nationality of Tamara Kunanayakam and related entities
  { 
    ?person rdfs:label ""Tamara Kunanayakam""@en.
    ?person dbo:nationality ?nationality.
    ?entity dbo:nationality ?nationality.
    FILTER(?entity != ?person)
  }
  
  UNION
  
  # Wars involving Mahesh Senanayake
  { 
    ?person rdfs:label ""Mahesh Senanayake""@en.
    ?person dbo:participatedIn ?war.
  }
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
92,71,test,"Give me the associated musical artist of the person born, that is an artist, as the actor of Return to Nuke 'Em High Volume 1 and band member of the reference, that is an artist, to the name of Nevermore (2006 film) and band of the person born as the birth name of Joseph Michael.",SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Joseph_Michael> <http://dbpedia.org/property/birthName> ?v7 . ?v8 <http://dbpedia.org/property/birthName> ?v7 . ?v2 <http://xmlns.com/foaf/0.1/name> ?v1 . <http://dbpedia.org/resource/Return_to_Nuke_'Em_High_Volume_1> <http://dbpedia.org/property/starring> ?v4 . ?v5 <http://dbpedia.org/property/birthName> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Nevermore_(2006_film)> <http://xmlns.com/foaf/0.1/name> ?v1 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?result <http://dbpedia.org/ontology/bandMember> ?v8 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?musicalArtist WHERE {
  # Step 1: Find actor of ""Return to Nuke 'Em High Volume 1""
  ?actor dbo:film dbr:Return_to_Nuke_'Em_High_Volume_1 .
  
  # Step 2: Find band member associated with the name ""Nevermore"" (2006 film)
  ?bandMember dbo:memberOf ?band ;
              dbo:associatedBand dbr:Nevermore_(2006_film) .

  # Step 3: Identify birth name of Joseph Michael
  ?person foaf:name ""Joseph Michael""@en .
  ?person dbo:birthName ?birthName .

  # Step 4: Find band associated with the person identified in step 3
  ?bandMember2 dbo:memberOf ?band2 ;
               foaf:name ?birthName .

  # Final association to find the musical artist
  ?actor dbo:musicalArtist ?musicalArtist .
}
```",9,11,10,3,3,3,3,71,0,0,1,0,0.0,0
92,30,test,Give me the band of the person born as Joseph Michael Furney and band member of Nevermore and associated musical artist of Jim Sheppard.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Jim_Sheppard> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Nevermore> . ?result <http://dbpedia.org/ontology/bandMember> ?v1 . ?v1 <http://dbpedia.org/property/birthName> ""Joseph Michael Furney""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?band WHERE {
  # Find Warrel Dane's association with Nevermore
  ?warrelDane a dbo:MusicalArtist ;
              foaf:name ""Warrel Dane"" .
  
  # Warrel Dane is a member of Nevermore
  ?nevermore dbo:member ?warrelDane ;
             foaf:name ""Nevermore"" .

  # Find Jim Sheppard's association with the same band as Warrel Dane
  ?jimSheppard a dbo:MusicalArtist ;
               foaf:name ""Jim Sheppard"" .
  
  ?band dbo:member ?jimSheppard ;
        dbo:member ?warrelDane .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
55,21,test,"Give me the band member of Metallica and band member of Guns N' Roses and band of the reference, that is a band, to Newsted.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://xmlns.com/foaf/0.1/name> ""Newsted""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Guns_N'_Roses> . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Metallica> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?personName WHERE {
  ?person dbo:bandMember dbr:Metallica .
  ?person dbo:bandMember dbr:Guns_N'_Roses .
  FILTER (?person = dbr:Jason_Newsted)
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
```",4,5,5,2,3,2,3,28,0,0,1,0,0.0,0
801,22,test,"Give me the associated musical artist of the writer, that is a musical artist and an artist, of 40 Dayz & 40 Nightz and professional in .","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/occupation> """"@en . <http://dbpedia.org/resource/40_Dayz_&_40_Nightz> <http://dbpedia.org/property/writer> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artist WHERE {
  ?book dbo:author dbr:Lil_Wayne .
  FILTER(STRSTARTS(STR(?book), ""http://dbpedia.org/resource/"") && STRCONTAINS(LCASE(STR(?book)), ""40_dayz_&_40_nightz""))
  
  ?artist dbo:birthName dbr:Lil_Wayne ;
          a dbo:MusicalArtist, dbo:Artist .
}
```",3,5,4,2,2,3,3,71,0,0,22,0,0.0,0
391,46,test,"Give me the actor of the claim to fame, that is a work, of Michael Ballhaus and native of the figure known as the nick name of Jackson, Tennessee.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/nickname> ?v2 . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Michael_Ballhaus> <http://dbpedia.org/ontology/knownFor> ?v4 . <http://dbpedia.org/resource/Jackson,_Tennessee> <http://xmlns.com/foaf/0.1/nick> ?v2 . ?v4 <http://dbpedia.org/ontology/starring> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  ?film dbo:director dbr:Michael_Ballhaus .
  ?film dbo:starring ?actor .
  ?actor dbo:birthPlace dbr:Jackson,_Tennessee .
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
378,55,test,Give me the war of the commander in Peninsular War and war of the person born as Carl Pontus Gahn and claim to fame of the commander in Great Siege of Gibraltar.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/knownFor> ?result . <http://dbpedia.org/resource/Peninsular_War> <http://dbpedia.org/ontology/commander> ?v5 . ?v3 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Great_Siege_of_Gibraltar> <http://dbpedia.org/ontology/commander> ?v2 . ?v3 <http://dbpedia.org/property/birthName> ""Carl Pontus Gahn""@en . ?v5 <http://dbpedia.org/ontology/battle> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?peninsularWarCommander ?greatSiegeCommander ?gahnClaimToFame
WHERE {
  # Arthur Wellesley's involvement in the Peninsular War
  dbr:Arthur_Wellesley dbo:nationality dbr:United_Kingdom ;
                       dbo:occupation dbr:Military_person .

  # George Augustus Eliott's role in the Great Siege of Gibraltar
  dbr:George_Augustus_Eliott dbo:nationality dbr:United_Kingdom ;
                            dbo:occupation dbr:Military_person ;
                            dbo:participatedInMilitaryEngagement ?greatSiege .

  # Carl Pontus Gahn's claim to fame
  dbr:C_P_Gahn dbo:nationality dbr:Sweden ;
               dbo:occupation dbr:Chemist ;
               dbo:famousFor ?gahnClaimToFame .
}
```",6,6,7,2,3,3,3,71,0,0,2,0,0.0,0
55,26,test,"Give me the band member of the producer, that is a band, of Used to Love Her and band member of Metallica and band of the reference, that is a band, to Newsted.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Used_to_Love_Her> <http://dbpedia.org/ontology/producer> ?v4 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Metallica> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?v1 <http://xmlns.com/foaf/0.1/name> ""Newsted""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandMember WHERE {
  # Step 1: Find the producer of ""Used to Love Her""
  ?song dbo:title ""Used to Love Her"" ;
        dbo:producer ?producer .

  # Step 2: Check if the producer is a band
  ?producer rdf:type dbr:Band ;
            dbo:bandMember ?producerMember .

  # Step 3: Find Metallica's members
  dbr:Metallica dbo:bandMember ?metallicaMember .

  # Step 4: Find overlap between producer band members and Metallica members
  FILTER (?producerMember = ?metallicaMember)

  # Step 5: Identify Newsted's reference band
  dbr:Jason_Newsted dbo:referenceBand ?newstedReferenceBand .
  
  # Step 6: Check if the reference band is a band
  ?newstedReferenceBand rdf:type dbr:Band .

  # Return the overlapping band member
  BIND(?producerMember AS ?bandMember)
}
```",5,7,6,2,3,2,3,28,0,0,1,0,0.0,0
161,39,test,"Give me the military force of Spanish Civil War and commander in the force, that is an event, of the figure known as El Director.","SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/nick> ""El Director""@en . ?v1 <http://dbpedia.org/ontology/commander> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce ?commander WHERE {
  ?event rdf:type dbo:MilitaryConflict .
  ?event rdfs:label ""Spanish Civil War""@en .
  
  ?force dbo:militaryForce ?militaryForce ;
         dbo:participatedIn ?event .

  ?commander rdfs:label ""Francisco Franco""@en ;
             dbo:commander ?force .

}
```",4,5,5,3,2,3,3,71,0,0,32,0,0.0,0
959,63,test,"Give me the manager of the team of Takashi Sekizuka and member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of the person born in 1958 and native of the residence, that is a country, of Yōichi Masuzoe.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?result <http://dbpedia.org/ontology/team> ?v1 . ?v0 <http://dbpedia.org/ontology/manager> ?result . ?v3 <http://dbpedia.org/ontology/birthYear> ""1958""^^<http://www.w3.org/2001/XMLSchema#gYear> . <http://dbpedia.org/resource/Yōichi_Masuzoe> <http://dbpedia.org/property/residence> ?v5 . ?v0 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Takashi_Sekizuka> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?result <http://dbpedia.org/ontology/birthPlace> ?v5 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?v3 <http://dbpedia.org/ontology/almaMater> ?v1 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?manager ?university WHERE {
  # Find Yōichi Masuzoe's birth year and native country
  dbr:Yōichi_Masuzoe dbo:birthYear ?birthYear .
  FILTER(?birthYear = ""1958""^^xsd:gYear)
  
  dbr:Yōichi_Masuzoe dbo:nationality ?country .
  FILTER(STRSTARTS(LCASE(?country), ""japan""))

  # Find Takashi Sekizuka's team
  ?team dbo:manager ?takashiSekizuka .
  dbr:Takashi_Sekizuka rdfs:label ?takashiLabel .
  FILTER(CONTAINS(LCASE(?takashiLabel), ""takashi sekizuka""))

  # Find the manager of Takashi Sekizuka's team
  ?team dbo:manager ?manager .

  # Check if the manager's alma mater is a Japanese university
  ?manager dbo:almaMater ?university .
  
  ?university rdf:type dbo:EducationalInstitution ;
              dbo:country dbr:Japan ;
              rdf:type dbo:Organization .
}
```",7,12,8,3,3,3,3,71,0,0,3,0,0.0,0
959,49,test,"Give me the manager of the team of the manager, that is a sports manager, of 1998 Kashima Antlers season and member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of Eiji Ōtsuka.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/team> ?v2 . <http://dbpedia.org/resource/Eiji_Ōtsuka> <http://dbpedia.org/ontology/almaMater> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. <http://dbpedia.org/resource/1998_Kashima_Antlers_season> <http://dbpedia.org/ontology/manager> ?v4 . ?v0 <http://dbpedia.org/ontology/manager> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?v0 <http://dbpedia.org/ontology/manager> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?managerOfTheTeam
WHERE {
  # Step 1: Find Eiji Ōtsuka's alma mater
  dbr:Eiji_Ōtsuka dbo:almaMater ?university .
  
  FILTER (
    ?university rdf:type dbo:University &&
    ?university rdf:type dbo:EducationalInstitution &&
    ?university dbp:nationality ""Japanese""
  )
  
  # Step 2: Find the manager of Kashima Antlers in 1998
  dbr:Kashima_Antlers_1998_season dbo:sportsManager ?sportsManager .
  
  # Step 3: Identify the team managed by this sports manager
  ?sportsManager dbo:manager ?team .
  
  # Step 4: Find the manager of that team
  ?team dbo:manager ?managerOfTheTeam .
}
```",5,10,6,3,2,3,3,71,0,0,2,0,0.0,0
391,32,test,"Give me the actor of the claim to fame, that is a work, of Michael Ballhaus and native of the figure known as Hub City.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/nickname> ""Hub City""@en . <http://dbpedia.org/resource/Michael_Ballhaus> <http://dbpedia.org/ontology/knownFor> ?v3 . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://dbpedia.org/ontology/starring> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?actor WHERE {
  # Michael Ballhaus's notable work
  ?film dbo:director dbr:Martin_Scorsese ;
        dbo:starring ?actor .

  # The film is ""Goodfellas""
  ?film rdfs:label ""Goodfellas""@en .

  # Actor born in Cincinnati (Hub City)
  ?actor dbo:birthPlace dbr:Cincinnati, Ohio, United States .
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
54,62,test,Give me the predecessor of Ameitta Thiri Maha Dhamma Dewi of Ava and parent of the child of the parent of Thado Minsaw of Prome and child of the father of the child of Thinkhaya of Pagan.,SELECT ?result WHERE { <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?v4 . ?v6 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> . ?v6 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Ameitta_Thiri_Maha_Dhamma_Dewi_of_Ava> . ?v3 <http://dbpedia.org/ontology/child> ?result . ?v4 <http://dbpedia.org/property/father> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT DISTINCT ?person WHERE {
  # Find the predecessor of Ameitta Thiri Maha Dhamma Dewi of Ava
  ?ameitta a dbo:Monarch ;
           dbo:predecessor ?predecessor .

  # Identify Thado Minsaw's parent and grandparent
  ?thadoMinsaw a dbo:Person ;
               rdfs:label ""Thado Minsaw""@en .
  ?thadoParent dbo:child ?thadoMinsaw .
  ?grandparent dbo:child ?thadoParent .

  # Identify Thinkhaya's child and Thinkhaya himself
  ?thinkhaya a dbo:Person ;
             rdfs:label ""Thinkhaya of Pagan""@en .
  ?thinkhayasChild dbo:parent ?thinkhaya .

  # Find the person who is both grandparent of Thado Minsaw and child of Thinkhaya
  FILTER (?grandparent = ?person && ?thinkhayasChild = ?person)
}
```",7,7,8,3,3,3,3,71,0,0,1,0,0.0,0
488,49,test,"Give me the birth place of the commander in Boshin War and administration of the father of the spouse, that is a royalty, of Tokugawa Masako.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Tokugawa_Masako> . <http://dbpedia.org/resource/Boshin_War> <http://dbpedia.org/ontology/commander> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/leader> ?v1 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/father> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthPlaceOfCommander ?administrationOfFather
WHERE {
  # Tokugawa Masako's spouse
  ?spouse a dbo:Spouse ;
          dbo:spouse ?masako .
  
  # Tokugawa Masako
  ?masako rdfs:label ""Tokugawa Masako""@en .

  # Spouse's father who is royalty
  ?father dbo:child ?spouse ;
          rdf:type dbo:Monarch .

  # Commander in the Boshin War and his birthplace
  ?commander dbo:occupation dbo:MilitaryPerson ;
             dbo:birthPlace ?birthPlaceOfCommander .
  
  # The commander of the Boshin War
  ?commander dbp:participatedInBattle <http://dbpedia.org/resource/Boshin_War> .

  # Administration or role of the father
  ?father dbo:office ?administrationOfFather .
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
747,71,test,"Give me the person born on the birth date of the person decedent, that is an athlete and a soccer player, at Zolotonosha and band of the person born as the persona of Shèna and band of the writer of the work, that is a song, of Amba Shepherd.",SELECT ?result WHERE { <http://dbpedia.org/resource/Shèna> <http://xmlns.com/foaf/0.1/givenName> ?v7 . ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v8 <http://dbpedia.org/property/birthName> ?v7 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v4 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Amba_Shepherd> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?result <http://dbpedia.org/ontology/birthDate> ?v2 . ?v1 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Zolotonosha> . ?v8 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://dbpedia.org/property/writer> ?v5 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v1 <http://dbpedia.org/ontology/birthDate> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?athlete ?band ?shenaBand ?writer WHERE {
  # Step 1: Find the decedent's birth date
  SELECT ?decedentBirthDate WHERE {
    ?decedent dbo:deathYear ?deathYear .
    FILTER NOT EXISTS { ?decedent dbo:deathYear NULL }
    ?decedent dbp:birthday ?decedentBirth .
    BIND (YEAR(?decedentBirth) AS ?decedentBirthDate)
  }

  # Step 2: Find an athlete and soccer player born on the same date as the decedent
  ?athlete dbo:nationality dbr:Soccer_player ;
           dbp:birthday ?birthDateAthlete .
  FILTER (YEAR(?birthDateAthlete) = ?decedentBirthDate)

  # Step 3: Check if the athlete was born in Zolotonosha and find their band
  OPTIONAL {
    ?athlete dbo:birthPlace dbr:Zolotonosha ;
             dbo:band ?band .
  }

  # Step 4: Identify Shèna's persona
  ?shena dbp:alsoKnownAs ""Shèna"" .

  # Step 5: Find the band associated with Shèna
  OPTIONAL {
    ?shena dbo:band ?shenaBand .
  }

  # Step 6: Locate Amba Shepherd's song
  ?song dbo:genre dbr:Song ;
        dbo:lyricsBy ?writer .

  # Step 7: Ensure the writer is linked to a work by Amba Shepherd
  FILTER EXISTS { ?work dbo:author dbr:Amba_Shepherd ; dbo:title ?song }
}
```",9,12,10,3,3,3,3,71,0,0,1,0,0.0,0
492,63,test,"Give me the commander in the war, that is a military conflict and an event, of Frédéric-Georges Herr and person decedent at the capital, that is a settlement, of Algeria and person decedent at the work of the author of French Algeria.",SELECT ?result WHERE { ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Algeria> <http://dbpedia.org/ontology/capital> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v3 <http://dbpedia.org/property/author> ?v4 . ?v6 <http://dbpedia.org/ontology/commander> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/French_Algeria> <http://dbpedia.org/property/author> ?v4 . ?result <http://dbpedia.org/ontology/deathPlace> ?v3 . ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . <http://dbpedia.org/resource/Frédéric-Georges_Herr> <http://dbpedia.org/ontology/battle> ?v6 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?commander WHERE {
  # Frédéric-Georges Herr's involvement in a war
  dbr:Frédéric-Georges_Herr dbo:militaryConflict ?war .
  
  # Commander of the war
  ?commander dbo:commanded ?unit ;
            dbo:participatedInMilitaryOperation ?operation .

  # War participation
  ?operation dbo:conflict ?war .

  # Death in the capital of Algeria (Algiers)
  ?commander dbo:deathPlace dbr:Algiers .

  # Connection to the author of ""French Algeria""
  ?author dbr:""French Algeria""@en dbo:author .
  ?work dbo:creator ?author ;
        dbo:subject ?commander .
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
617,68,test,"Give me the parent of the child of Antiochus (son of Antiochus III the Great) and child of the child, that is a royalty, of the successor, that is a royalty, of Antiochus II Theos and spouse of the child of the successor, that is a royalty, of Antiochus (son of Antiochus III the Great).",SELECT ?result WHERE { <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/child> ?v3 . ?v7 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/child> ?v3 . ?result <http://dbpedia.org/property/father> ?v4 . ?v0 <http://dbpedia.org/ontology/child> ?v7 . ?v4 <http://dbpedia.org/property/father> ?v5 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Antiochus_II_Theos> <http://dbpedia.org/ontology/successor> ?v5 . <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/successor> ?v0 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?parent
WHERE {
  # Step 1: Identify Antiochus (son of Antiochus III the Great)
  ?antiochus3 a dbo:Person ;
              dbp:spouse ?wifeAntiochus3 ;
              dbp:child ?antiochus4 .

  FILTER(STRSTARTS(LCASE(?antiochus3), ""antiochus iii the great"")).

  # Step 2: Identify child of Antiochus (son of Antiochus III)
  ?antiochus4 a dbo:Person ;
              dbp:child ?grandchild .

  # Step 3: Identify successor of Antiochus II Theos
  ?antiochus2 a dbo:Person ;
              dbp:succeededBy ?successorAntiochus2 .
  
  FILTER(STRSTARTS(LCASE(?antiochus2), ""antiochus ii theos"")).

  # Ensure successor is royalty
  ?successorAntiochus2 dbo:title ?titleSuccessor .

  # Step 4: Identify spouse of child of successor
  ?childSuccessor a dbo:Person ;
                  dbp:parent ?successorAntiochus2 ;
                  dbp:spouse ?spouseChildSuccessor .

  # Ensure spouse is royalty
  ?spouseChildSuccessor dbo:title ?titleSpouse .

  # Step 5: Find parent of the grandchild (from step 2)
  ?grandchild a dbo:Person ;
              dbp:parent ?parent .
  
  FILTER(STRSTARTS(LCASE(?antiochus4), ""antiochus iv"") || STRSTARTS(LCASE(?antiochus4), ""antiochus v""))
}
```",8,11,9,3,3,3,3,71,0,0,2,0,0.0,0
981,19,test,"Give me the birth place of the person born, that is a beauty queen, as the author of Kamikaze Girls and entity in the region of Time in Indonesia.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/birthName> ?v0 . <http://dbpedia.org/resource/Kamikaze_Girls> <http://dbpedia.org/property/author> ?v0 . ?v4 <http://dbpedia.org/ontology/birthPlace> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BeautyQueen>. ?result <http://dbpedia.org/ontology/country> ?v2 . ?v2 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Time_in_Indonesia> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace WHERE {
  ?person dbo:author dbr:Kamikaze_Girls.
  ?person dbo:title ""Miss Magazine""@en. # Assuming beauty queen title is linked to this pageant
  ?person dbo:country dbr:Indonesia. # This might be a thematic link, not literal residence
  ?person foaf:birthPlace ?birthPlace.
  
  FILTER (str(?person) = str(dbr:Novala_Takemoto))
}
```",5,6,6,3,2,3,2,20,0,0,19,0,0.0,0
378,60,test,"Give me the claim to fame of the commander in the war, that is a military conflict and a societal event and an event, of Thomas Trigge and war of the person born as the birth name of Carl Pontus Gahn.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/property/birthName> ?v3 . ?v2 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/property/birthName> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://dbpedia.org/ontology/commander> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/knownFor> ?result . <http://dbpedia.org/resource/Thomas_Trigge> <http://dbpedia.org/ontology/battle> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?triggeClaimToFame WHERE {
  # Find the war associated with Carl Pontus Gahn
  ?gahn dbo:nationality dbr:Sweden ;
        foaf:name ""Carl Pontus Gahn""@en .
  
  OPTIONAL { 
    ?event dbo:location ?location .
    ?event dbo:participant ?gahn .
    FILTER (?event a dbo:MilitaryConflict || ?event a dbo:SocietalEvent)
  }
  
  # Find Thomas Trigge's claim to fame in that war
  ?trigge dbo:nationality dbr:Sweden ;
          foaf:name ""Thomas Trigge""@en .
  
  OPTIONAL {
    ?war dbo:participant ?trigge .
    FILTER (?war = ?event)
    
    # Assuming 'claim to fame' is a notable role or achievement
    ?triggeClaimToFame dbo:role ?role .
    FILTER (CONTAINS(LCASE(?role), ""commander"") || CONTAINS(LCASE(?role), ""notable""))
  }
}
```",6,9,7,3,2,3,3,71,0,0,2,0,0.0,0
9,33,test,"Give me the alma mater of the awardee of the reference, that is an award, to Royal Medals and alma mater of John Alderdice, Baron Alderdice.","SELECT ?result WHERE { <http://dbpedia.org/resource/John_Alderdice,_Baron_Alderdice> <http://dbpedia.org/ontology/almaMater> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v3 <http://dbpedia.org/ontology/almaMater> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Royal Medals""@en . ?v3 <http://dbpedia.org/property/awards> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?almaMaterAwardee ?almaMaterAlderdice WHERE {
  # Part 1 and 2: Alma mater of awardees related to Royal Medals
  {
    SELECT DISTINCT ?awardee ?almaMaterAwardee WHERE {
      {
        ?award dbo:recipient ?awardee .
        FILTER EXISTS { ?award rdfs:label ""Royal Medal""@en }
      } UNION {
        # Assuming there might be other awards related to Royal Medals
        ?relatedAward dbo:recipient ?awardee .
        ?relatedAward dbo:relatedTo dbr:Royal_Medal .
      }
      OPTIONAL { ?awardee dbo:almaMater ?almaMaterAwardee . }
    }
  }

  # Part 3: Alma mater of John Alderdice
  {
    dbr:John_Alderdice_Baron_Alderdice dbo:almaMater ?almaMaterAlderdice .
  }
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
981,18,test,"Give me the birth place of the person born, that is a beauty queen, as  and entity in the region of the time zone in Salak, North Sumatra.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v2 . ?v2 <http://dbpedia.org/property/timeZone> ?v1 . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v3 <http://dbpedia.org/property/birthName> """"@en . <http://dbpedia.org/resource/Salak,_North_Sumatra> <http://dbpedia.org/ontology/timeZone> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BeautyQueen>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?birthPlace WHERE {
  ?person a dbo:Person .
  ?person dbo:title ?title .
  FILTER(CONTAINS(LCASE(str(?title)), ""beauty queen"")).
  
  ?person dbo:residence dbr:Salak,_North_Sumatra .
  
  ?person dbo:birthPlace ?birthPlace .
}
```",5,6,6,3,2,3,2,20,0,0,19,0,0.0,0
54,49,test,"Give me the child of the father of Soe Min Wimala Dewi and predecessor of the child, that is an office holder and a royalty, of the reference to Thihapate of Mohnyin.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/successor> ?v1 . <http://dbpedia.org/resource/Soe_Min_Wimala_Dewi> <http://dbpedia.org/property/father> ?v2 . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Thihapate of Mohnyin""@en . ?v1 <http://dbpedia.org/property/father> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  # Step 1: Find Soe Min Wimala Dewi's father
  ?soeMinWimalaDewi a dbo:Person ;
                   dbp:father ?father .

  # Step 2: Find the child of that father
  ?child dbo:parent ?father .

  # Step 3: Identify Thihapate of Mohnyin's reference
  ?thihapate a dbo:Person ;
             rdfs:label ""Thihapate of Mohnyin""@en .

  # Step 4: Find the predecessor of Thihapate's child
  ?thihapateChild dbo:parent ?thihapate .
  ?predecessor dbo:succeededBy ?thihapateChild .

  # Step 5: Filter for office holder and royalty
  FILTER EXISTS { ?person dbo:officeHolder true . }
  FILTER EXISTS { ?person dbo:royalty true . }

  # Ensure the person is both a child of Soe Min Wimala Dewi's father and predecessor of Thihapate's child
  VALUES ?person { ?child ?predecessor }
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
161,48,test,"Give me the military force of the force, that is a societal event and an event and a military conflict, of the person decedent at Francoist Spain and commander in the force, that is an event, of Emilio Mola.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v3 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Francoist_Spain> . ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Emilio_Mola> . ?v2 <http://dbpedia.org/ontology/commander> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce WHERE {
  ?conflict a dbo:MilitaryConflict ;
            dbo:commander dbr:Emilio_Mola ;
            rdf:type dbo:SocietalEvent, dbo:Event .
  
  ?conflict dbo:militaryForce ?militaryForce .

  FILTER EXISTS { 
    ?person dbo:decedentAt dbr:Francoist_Spain ;
            dbo:name ""Emilio Mola""@en .
  }
}
```",5,9,6,3,2,3,3,71,0,0,34,0,0.0,0
303,27,test,"Give me the party of Guillermo Endara and party of the person born, that is a politician, as Arnulfo Arias Madrid and entity in the country, that is a country, of El Valle de Antón.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Guillermo_Endara> <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/El_Valle_de_Antón> <http://dbpedia.org/ontology/country> ?v3 . ?v0 <http://dbpedia.org/property/birthName> ""Arnulfo Arias Madrid""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?endaraParty ?ariasParty ?ariasBirthPlace ?country
WHERE {
  # Political party of Guillermo Endara
  dbr:Guillermo_Endara dbo:politicalParty ?endaraParty .

  # Political party and birth details of Arnulfo Arias Madrid
  dbr:Arnulfo_Arias_Madrid dbo:politicalParty ?ariasParty .
  dbr:Arnulfo_Arias_Madrid dbo:birthPlace ?ariasBirthPlace .

  # Find the country associated with El Valle de Antón
  OPTIONAL {
    dbr:El_Valle_de_Antón dbo:country ?country .
  }
}
```",5,7,6,2,3,2,3,28,0,0,1,0,0.0,0
488,45,test,"Give me the administration of the father of the spouse, that is a royalty, of Tokugawa Masako and birth place of Enomoto Takeaki and death place of Tokugawa Ieyasu.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Tokugawa_Masako> . <http://dbpedia.org/resource/Enomoto_Takeaki> <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/property/leader> ?v1 . <http://dbpedia.org/resource/Tokugawa_Ieyasu> <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?administration ?enomotoBirthPlace ?ieyasuDeathPlace 
WHERE {
  # Tokugawa Masako's spouse and his father
  ?masako dbo:spouse ?spouse .
  ?spouse dbo:father ?royalFather .

  # Check if the father is a royalty
  OPTIONAL { ?royalFather dbo:royaltyTitle ?title . FILTER EXISTS { ?title } }

  # Administration of the royal father
  OPTIONAL { ?royalFather dbo:administrativeArea ?administration . }

  # Enomoto Takeaki's birthplace
  dbr:Enomoto_Takeaki dbo:birthPlace ?enomotoBirthPlace .

  # Tokugawa Ieyasu's death place
  dbr:Tokugawa_Ieyasu dbo:deathPlace ?ieyasuDeathPlace .
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
281,61,test,"Give me the war of the profession, that is a military unit, of the professional, that is an office holder and a politician, in New Zealand Army and entity in the birth place, that is a country, of the leader, that is a politician, of 1962 New South Wales state election.",SELECT ?result WHERE { <http://dbpedia.org/resource/1962_New_South_Wales_state_election> <http://dbpedia.org/property/leader> ?v0 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/New_Zealand_Army> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/property/occupation> ?v3 . ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/ontology/birthPlace> ?v5 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?result <http://dbpedia.org/ontology/place> ?v5 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?war ?birthPlaceCountry WHERE {
  ?profession dbo:fieldOfActivity dbr:Military_unit .
  ?profession dbo:occupation dbr:Office_holder .
  ?politician dbo:officeHolder ?profession ;
              dbo:memberOf dbr:New_Zealand_Army .
  ?election dbo:leader ?politician ;
            dbo:date ""1962-01-01""^^xsd:date ;
            dbo:state dbr:New_South_Wales .
  ?war dbo:relatedTo ?profession .
  ?politician dbp:birthPlace ?birthPlace .
  ?birthPlace dbo:country ?birthPlaceCountry .
}
```",6,11,7,3,2,3,3,71,0,0,1,0,0.0,0
421,23,test,Give me the person born as the birth name of Dino Merlin and band member of the awardee of [[#Awards and nominations.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?result <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Dino_Merlin> <http://dbpedia.org/property/birthName> ?v2 . ?v1 <http://dbpedia.org/property/awards> ""[[#Awards and nominations""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?band ?award WHERE {
  # Find Dino Merlin's birth name
  dbr:Dino_Merlin dbo:birthName ?birthName .

  # Find a person with the same birth name who is a band member
  ?person dbo:birthName ?birthName .
  ?person dbo:memberOfBand ?band .

  # Find awards associated with that band
  ?award dbo:recipient ?band .
}
```",4,4,5,2,2,2,3,28,0,0,1,0,0.0,0
801,19,test,Give me the producer of Westside Story (song) and professional in the alter ego of The Shadow.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v0 . <http://dbpedia.org/resource/Westside_Story_(song)> <http://dbpedia.org/ontology/producer> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?producer ?alterEgo
WHERE {
  # Query for the producer of ""Westside Story (song)""
  dbr:Westside_Story_(song) dbo:producer ?producer .

  # Query for the professional alter ego of ""The Shadow""
  dbr:The_Shadow dbo:profession ?alterEgo .
}
```",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
994,44,test,"Give me the band member of the person born, that is a musical artist, as Donald Maynard Dokken and associated musical artist of the band member, that is a band and a group and an organisation, of Meshuggah and associated musical artist of S.A. Slayer.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Meshuggah> . ?v0 <http://dbpedia.org/property/birthName> ""Donald Maynard Dokken""@en . <http://dbpedia.org/resource/S.A._Slayer> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandMember ?meshuggahBandMember ?sASlayerAssociation
WHERE {
  # Step 1: Identify Donald Maynard Dokken as a musical artist
  ?dokken dbo:birthName ""Donald Maynard Dokken""@en .
  
  # Step 2: Find band members associated with him
  ?bandMember dbo:associatedBand ?dokken .

  # Step 3: For each band member, find bands that are groups or organizations
  ?bandMember dbo:associatedBand ?band .
  FILTER EXISTS { ?band a dbo:MusicalGroup . }
  FILTER EXISTS { ?band a dbo:Organization . }

  # Step 4: Specifically look for the band ""Meshuggah""
  OPTIONAL {
    ?meshuggah dbr:Meshuggah .
    ?meshuggahBandMember dbo:associatedBand ?meshuggah .
    FILTER (?band = ?meshuggah)
  }
  
  # Step 5: Identify associated musical artists of Meshuggah
  OPTIONAL {
    ?sASlayerAssociation dbo:birthName ""S.A. Slayer""@en .
    ?meshuggahBandMember dbo:associatedMusicalArtist ?sASlayerAssociation .
  }
}
```",5,9,6,2,3,3,3,71,0,0,1,0,0.0,0
232,36,test,"Give me the child of Jon Pertwee and native of the residence, that is a settlement and British, of the native, that is a politician and an office holder, of France.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/France> . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/ontology/child> ?result . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v0 <http://dbpedia.org/property/residence> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child ?nativePerson WHERE {
  # Find Jon Pertwee's child
  ?person dbo:spouse ?partner .
  ?partner dbo:child ?child .
  FILTER (str(?person) = ""Jon_Pertwee"") .

  # Get the residence of that child
  ?child dbp:residence ?residence .

  # Ensure the residence is a settlement and British
  ?residence a dbo:Settlement ;
             dbo:country dbr:United_Kingdom .

  # Find who is native to this residence
  ?nativePerson dbo:nationality dbr:France ;
                dbp:birthPlace ?residence .

  # Ensure the person is a politician and an office holder in France
  ?nativePerson dbo:occupation dbr:Politician ;
                dbo:officeHolderOf dbr:France .
}
```",4,8,5,3,2,3,3,71,0,0,1,0,0.0,0
404,64,test,"Give me the child of the father of the spouse of Princess Victoria Louise of Prussia and spouse of the person born, that is a royalty, as the birth name of Princess Victoria Louise of Prussia and parent of Prince Ernest Augustus of Hanover (born 1914).",SELECT ?result WHERE { <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Prince_Ernest_Augustus_of_Hanover_(born_1914)> . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/property/birthName> ?v3 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/ontology/parent> ?v1 . ?v2 <http://dbpedia.org/property/birthName> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?childBirthName WHERE {
  # Princess Victoria Louise of Prussia's birth name
  dbr:Princess_Victoria_Louise_of_Prussia dbo:birthName ?princessBirthName .

  # Her spouse
  dbr:Princess_Victoria_Louise_of_Prussia dbo:spouse ?spouse .

  # Father of her spouse
  ?spouse dbo:father ?fatherOfSpouse .

  # Child of the father who is royalty and parent of Prince Ernest Augustus of Hanover (born 1914)
  ?fatherOfSpouse dbo:child ?child .
  ?child a dbo:Monarch ;
         dbo:birthName ?childBirthName .
  
  # Ensure this child is also a parent of Prince Ernest Augustus of Hanover
  ?child dbo:parent dbr:Prince_Ernest_Augustus_of_Hanover_(1914) .
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
391,36,test,"Give me the native of Compton, California and actor of the movie, that is a movie and a work and a television show, with the professional in .","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/starring> ?v0 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Compton,_California> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v0 <http://dbpedia.org/property/occupation> """"@en . ?v1 <http://dbpedia.org/property/starring> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actorName WHERE {
  ?person dbo:birthPlace dbr:Compton,_California .
  ?person foaf:name ?actorName .
  ?film dbo:actor ?person ;
        a dbo:Film, dbo:Work, dbo:TelevisionShow .
}
```",4,7,5,3,2,3,3,71,0,0,1,0,0.0,0
9,55,test,"Give me the alma mater of the awardee of Royal Medal and figure known as the nickname of Queen's University Belfast and alma mater of the mayor, that is a politician, of Northern Ireland Forum.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ?v2 . <http://dbpedia.org/resource/Queen's_University_Belfast> <http://dbpedia.org/property/nickname> ?v2 . <http://dbpedia.org/resource/Northern_Ireland_Forum> <http://dbpedia.org/property/leader> ?v3 . ?v5 <http://dbpedia.org/ontology/almaMater> ?result . ?v3 <http://dbpedia.org/ontology/almaMater> ?result . ?v5 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Medal> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?university WHERE {
  # Find individuals who have received the Royal Medal
  ?person dbo:award dbr:Royal_Medal .
  
  # Identify the nickname associated with Queen's University Belfast
  ?nickname rdfs:label ""Queen's""@en ;
            dbo:associatedWith dbr:Queen's_University_Belfast .

  # Find politicians who were mayors in the Northern Ireland Forum and their alma maters
  ?politician dbo:almaMater ?university ;
              dbo:occupation dbr:Politician ;
              dbo:officeHolder dbr:Northern_Ireland_Forum_Mayor .
  
  # Ensure the person is known by the nickname of Queen's University Belfast
  ?person foaf:name ?nickname .

  # The university must be common to all conditions
}
```",6,7,7,2,3,3,3,71,0,0,1,0,0.0,0
328,40,test,Give me the commander in Eastern Front (World War II) and leader of People's Commissariat of Defense of the Soviet Union and awardee of the award of the commander in Volcano and Ryukyu Islands campaign.,SELECT ?result WHERE { <http://dbpedia.org/resource/People's_Commissariat_of_Defense_of_the_Soviet_Union> <http://dbpedia.org/ontology/leader> ?result . ?v2 <http://dbpedia.org/property/awards> ?v1 . <http://dbpedia.org/resource/Eastern_Front_(World_War_II)> <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Volcano_and_Ryukyu_Islands_campaign> <http://dbpedia.org/ontology/commander> ?v2 . ?result <http://dbpedia.org/property/awards> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?role1 ?role2 ?award 
WHERE {
  ?person a dbo:Person ;
          foaf:name ""Joseph Stalin""@en .
  
  OPTIONAL { ?person dbo:officeHolderOf dbr:People's_Commissar_for_Defence_of_the_Soviet_Union . }
  BIND(""Leader of People's Commissariat of Defense"" AS ?role1)
  
  OPTIONAL { ?person dbo:militaryCommanderOf dbr:Eastern_Front_(World_War_II) . }
  BIND(""Commander in Eastern Front (World War II)"" AS ?role2)

  OPTIONAL {
    ?award dbo:recipient ?person ;
           dbo:name ?awardName .
    FILTER(CONTAINS(LCASE(?awardName), ""volcano"") || CONTAINS(LCASE(?awardName), ""ryukyu islands""))
  }
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
626,16,test,"Give me the awardee of the award of Aleksey Petrovich Yermolov and commander in the force, that is a military conflict, of Alexander I of Russia.",SELECT ?result WHERE { <http://dbpedia.org/resource/Aleksey_Petrovich_Yermolov> <http://dbpedia.org/property/awards> ?v3 . ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Alexander_I_of_Russia> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/property/awards> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

# Step 1: Find Aleksey Petrovich Yermolov's award
SELECT ?award WHERE {
    dbr:Aleksey_Petrovich_Yermolov dbo:award ?award .
}

# Step 2: Identify the awardee of that award
SELECT DISTINCT ?awardee WHERE {
    ?award dbo:recipient ?awardee .
    FILTER(?award IN (SELECT ?award WHERE {
        dbr:Aleksey_Petrovich_Yermolov dbo:award ?award .
    }))
}

# Step 3: Find military conflicts involving Alexander I of Russia as a commander
SELECT DISTINCT ?conflict WHERE {
    dbr:Alexander_I_of_Russia dbo:militaryConflictCommanderOf ?conflict .
}

# Step 4: Extract the name of the force commanded by Alexander I in that conflict
SELECT DISTINCT ?force WHERE {
    ?conflict dbo:commander ?commander .
    ?commander rdfs:label ""Alexander I""@en .
    ?conflict dbo:participatingMilitaryUnit ?force .
}
```",4,5,5,2,2,3,2,20,0,0,21,0,0.0,0
465,8,test,"Give me the death place of Jiřina Štěpničková and administration of the leader, that is a political party and an organisation, of Chamber of Deputies of the Czech Republic.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Chamber_of_Deputies_of_the_Czech_Republic> <http://dbpedia.org/property/leader> ?v0 . ?result <http://dbpedia.org/property/leaderParty> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. <http://dbpedia.org/resource/Jiřina_Štěpničková> <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?deathPlace ?politicalParty ?organization 
WHERE {
  # Query for Jiřina Štěpničková's death place
  dbr:Jiřina_Štěpničková dbo:deathPlace ?deathPlace .

  # Query for the current leader of the Chamber of Deputies and their political party
  ?leader dbo:positionHeld dbr:Chamber_of_Deputies_of_the_Czech_Republic ;
          dbo:partyAffiliation ?politicalParty .
  
  # Query for the organization associated with the political party
  ?politicalParty dbo:organization ?organization .
}
```",3,5,4,2,2,2,2,9,0,0,1,0,0.0,0
488,65,test,"Give me the death place of the father, that is a politician, of the father, that is an office holder, of Matsudaira Tadamasa and administration of the father of Emperor Go-Mizunoo and birth place of the commander in Boshin War.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> ?v3 . ?v6 <http://dbpedia.org/ontology/deathPlace> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Emperor_Go-Mizunoo> <http://dbpedia.org/property/father> ?v3 . ?v4 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Matsudaira_Tadamasa> <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/property/father> ?v6 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Boshin_War> <http://dbpedia.org/ontology/commander> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?deathPlace ?administration ?birthPlace WHERE {
  # Matsudaira Sadanobu's death place
  OPTIONAL { 
    dbr:Matsudaira_Sadanobu dbo:deathPlace ?deathPlace .
  }

  # Emperor Go-Yōzei's administration (as an office holder)
  OPTIONAL {
    dbr:Emperor_Go-Yōzei dbo:officeHolderOf ?administration .
  }
  
  # Saigō Takamori's birth place
  OPTIONAL {
    dbr:Saigō_Takamori dbo:birthPlace ?birthPlace .
  }
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
488,68,test,"Give me the birth place of the commander in the war, that is a military conflict and an event and a societal event, of Saitō Hajime and administration of the father of Emperor Go-Mizunoo and death place of the father, that is a politician, of the father, that is an office holder, of Matsudaira Tadamasa.",SELECT ?result WHERE { <http://dbpedia.org/resource/Matsudaira_Tadamasa> <http://dbpedia.org/property/father> ?v0 . ?v4 <http://dbpedia.org/ontology/birthPlace> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v5 <http://dbpedia.org/ontology/commander> ?v4 . <http://dbpedia.org/resource/Saitō_Hajime> <http://dbpedia.org/ontology/battle> ?v5 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/property/father> ?v7 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v7 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Emperor_Go-Mizunoo> <http://dbpedia.org/property/father> ?v3 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/property/leader> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace ?war ?deathPlace
WHERE {
  # Saitō Hajime's birthplace
  dbr:Saitō_Hajime dbo:birthPlace ?birthPlace .

  # War involving Saitō Hajime that is a military conflict, event, and societal event
  ?war dbo:commander dbr:Saitō_Hajime .
  ?war rdf:type dbo:MilitaryConflict ;
       rdf:type dbo:Event ;
       rdf:type dbo:SocietalEvent .

  # Toyotomi Hideyoshi as the father of Emperor Go-Mizunoo
  dbr:Emperor_Go-Mizunoo dbo:father dbr:Toyotomi_Hideyoshi .
  
  # Tokugawa Ieyasu's death place and his role as Matsudaira Tadamasa's father
  dbr:Matsudaira_Tadamasa dbo:father dbr:Tokugawa_Ieyasu .
  dbr:Tokugawa_Ieyasu dbo:deathPlace ?deathPlace ;
                     rdf:type dbo:Politician ;
                     rdf:type dbo:OfficeHolder .
}
```",8,13,9,3,3,3,3,71,0,0,1,0,0.0,0
184,57,test,"Give me the child of the child of the parent, that is a royalty, of Archduke Ladislaus Philipp of Austria and parent of Géza von Habsburg and parent of the child of Archduke Joseph Francis of Austria.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Géza_von_Habsburg> . ?result <http://dbpedia.org/property/father> ?v5 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Francis_of_Austria> . <http://dbpedia.org/resource/Archduke_Ladislaus_Philipp_of_Austria> <http://dbpedia.org/ontology/parent> ?v0 . ?result <http://dbpedia.org/ontology/child> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  # Find the child of Archduke Ladislaus Philipp who is a royalty and a parent
  ?ladislausChild dbo:childOf <http://dbpedia.org/resource/Ladislaus_Philipp_of_Austria> .
  ?ladislausChild dbp:title ?title .
  FILTER(CONTAINS(LCASE(?title), ""royalty"")) .
  
  # Ensure this child is a parent
  ?ladislausChild dbo:parentOf ?grandchild .

  # Check if this grandchild is the parent of Géza von Habsburg
  ?grandchild dbo:parentOf <http://dbpedia.org/resource/G%C3%A9za_von_Habsburg> .

  # Ensure this grandchild is also the parent of Archduke Joseph Francis's child
  ?josephChild dbo:childOf <http://dbpedia.org/resource/Archduke_Joseph_Francis_of_Austria> .
  ?grandchild dbo:parentOf ?josephChild .

  # Bind the grandchild to the result variable
  BIND(?grandchild AS ?person)
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
488,50,test,"Give me the death place of the father, that is a politician, of the father, that is an office holder, of Matsudaira Tadamasa and administration of the father of Emperor Go-Mizunoo.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Matsudaira_Tadamasa> <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/property/leader> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Emperor_Go-Mizunoo> <http://dbpedia.org/property/father> ?v3 . ?v0 <http://dbpedia.org/property/father> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?deathPlace ?administration 
WHERE {
  # Matsudaira Tadamasa's father (politician)
  dbr:Matsudaira_Tadamasa dbo:father ?matPolitician .
  
  # Death place of Matsudaira Tadamasa's father
  ?matPolitician dbo:placeOfBirth ?birthPlace ;
                dbo:deathPlace ?deathPlace .

  # Emperor Go-Mizunoo's father (office holder)
  dbr:Emperor_Go-Mizunoo dbo:father ?goFather .
  
  # Administration during which Emperor Go-Mizunoo's father held office
  ?goFather dbo:officeHolderOf ?administration .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
427,56,test,"Give me the party of the person born, that is an office holder and a politician, as the birth name of Romano Prodi and party of Giulio Andreotti and reference to the name of Italian People's Party (1994).",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://xmlns.com/foaf/0.1/name> ?v2 . <http://dbpedia.org/resource/Giulio_Andreotti> <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/property/birthName> ?v0 . ?v1 <http://dbpedia.org/ontology/party> ?result . ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Italian_People's_Party_(1994)> <http://xmlns.com/foaf/0.1/name> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?romanoBirthName ?giulioParty ?italianPeopleParty
WHERE {
  # Romano Prodi's birth name
  ?romano a dbo:Person ;
          foaf:name ?romanoFullName .
  OPTIONAL { ?romano foaf:surname ""Prodi""^^xsd:string . }
  BIND(SUBSTR(?romanoFullName, 1, STRLEN(?romanoFullName) - STRLEN(""Romano Prodi"")) AS ?romanoBirthName)

  # Giulio Andreotti's party
  ?giulio a dbo:Person ;
          foaf:name ""Giulio Andreotti""^^xsd:string .
  ?giulio dbo:partyAffiliation ?party .
  BIND(?party AS ?giulioParty)

  # Italian People's Party (1994)
  ?italianPeopleParty a dbo:PoliticalParty ;
                     rdfs:label ?label .
  FILTER(CONTAINS(LCASE(?label), ""italian people's party"") && CONTAINS(LCASE(?label), ""1994""))
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
232,66,test,"Give me the native of the residence, that is a settlement and British, of the native, that is a politician and an office holder, of France and actor of the claim to fame, that is a film and a military conflict, of Sean Pertwee and child of the person born as John Devon Roland Pertwee.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/birthName> ""John Devon Roland Pertwee""@en . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. <http://dbpedia.org/resource/Sean_Pertwee> <http://dbpedia.org/ontology/knownFor> ?v6 . ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/France> . ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v3 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://dbpedia.org/property/residence> ?v2 . ?v6 <http://dbpedia.org/ontology/starring> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?nativeOfResidence WHERE {
  # Step 1: Identify Sean Pertwee
  VALUES ?seanPertwee { dbr:Sean_Pertwee }
  
  # Step 2: Find his claim to fame (films and military conflicts)
  ?film dbo:actor ?seanPertwee .
  ?conflict dbo:participant ?seanPertwee .

  # Step 3: Identify the actor of these claims to fame
  ?actor dbo:actedIn ?film ;
         dbo:servedIn ?conflict .

  # Step 4: Determine the native of France who is both a politician and an office holder
  ?actor dbo:nationality dbr:France ;
         dbo:occupation dbr:Politician ;
         dbo:officeHolder true .

  # Step 5: Find the residence of this person
  ?actor dbo:residence ?residence .

  # Step 6: Check if the residence is a settlement and British
  ?residence a dbo:Settlement ;
             dbo:country dbr:United_Kingdom .

  # Step 7: Identify the native of this residence
  ?nativeOfResidence dbo:nativePlace ?residence .
}
```",7,13,8,3,3,3,3,71,0,0,1,0,0.0,0
378,64,test,"Give me the claim to fame of the commander in the war, that is a military conflict and a societal event and an event, of Thomas Trigge and war of Joaquín Blake and war of the person born as the birth name of Carl Pontus Gahn.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Joaquín_Blake> <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/ontology/commander> ?v1 . <http://dbpedia.org/resource/Thomas_Trigge> <http://dbpedia.org/ontology/battle> ?v0 . ?v1 <http://dbpedia.org/ontology/knownFor> ?result . <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/property/birthName> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?triggeClaimToFame ?blakeWar ?gahnEvent
WHERE {
  # Thomas Trigge's claim to fame in a military conflict
  ?trigge dbo:occupation dbr:Military_person .
  ?trigge dbo:knownFor ?triggeClaimToFame .

  # Joaquín Blake's war involvement
  ?blake dbo:occupation dbr:Military_person .
  ?blake dbo:knownFor ?blakeWar .
  
  FILTER(CONTAINS(LCASE(STR(?blakeWar)), ""war"") && CONTAINS(LCASE(STR(?triggeClaimToFame)), LCASE(STR(?blakeWar))))

  # Carl Pontus Gahn's birth name and related events
  ?gahn dbo:birthName ?birthName .
  ?gahn dbo:knownFor ?gahnEvent .

  FILTER(CONTAINS(LCASE(STR(?gahnEvent)), ""event"") && CONTAINS(LCASE(STR(?triggeClaimToFame)), LCASE(STR(?gahnEvent))))

  # Linking the individuals
  BIND(dbr:Thomas_Trigge AS ?trigge)
  BIND(dbr:Joaquín_Blake AS ?blake)
  BIND(dbr:C_P_Gahn AS ?gahn)
}
```",7,10,8,3,3,3,3,71,0,0,2,0,0.0,0
9,48,test,"Give me the alma mater of the mayor, that is a politician, of the entity, that is an organisation, in Belfast and figure known as the nickname of Queen's University Belfast.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/almaMater> ?result . <http://dbpedia.org/resource/Queen's_University_Belfast> <http://dbpedia.org/property/nickname> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Belfast> . ?result <http://dbpedia.org/property/nickname> ?v1 . ?v3 <http://dbpedia.org/property/leader> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?almaMater ?nickname WHERE {
  # Find the organization in Belfast and its mayor who is a politician
  ?organization dbo:location dbr:Belfast .
  ?mayor dbo:positionTitle ""Mayor""@en ;
         dbo:worksFor ?organization ;
         dbo:occupation dbr:Politician .

  # Get Queen's University Belfast and its nickname
  dbr:Queen's_University_Belfast dbp:nickname ?nickname .

  # Find the alma mater of the mayor
  ?mayor dbo:almaMater ?almaMater .
  
  FILTER(?almaMater = dbr:Queen's_University_Belfast)
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
528,54,test,Give me the war of the military force of Battle of Pisagua and war of the commander in the work of --01-09 and force of Narciso Campero.,"SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Pisagua> . ?v5 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/ontology/commander> ?v5 . ?v0 <http://dbpedia.org/property/author> ""--01-09""^^<http://www.w3.org/2001/XMLSchema#gMonthDay> . ?v3 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Narciso_Campero> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?battleForce ?war ?commander
WHERE {
    # Find the military force involved in the Battle of Pisagua
    dbr:Battle_of_Pisagua dbo:militaryConflicts ?battleWar .
    ?battleWar dbo:participatingMilitaryUnit ?battleForce .

    # Find wars associated with Narciso Campero
    dbr:Narciso_Campero dbo:commanded ?camperoWar .
    
    # Check if the same war is involved in both contexts
    FILTER (?battleWar = ?camperoWar)
    
    # Find a commander related to an event on January 9th
    ?event dbo:date ?date .
    ?event dbo:commander ?commander .
    FILTER (STRSTARTS(STR(?date), ""01-09""))
}
```",6,6,7,3,3,3,3,71,0,0,2,0,0.0,0
161,46,test,"Give me the military force of the force, that is a societal event and a military conflict, of Francisco Largo Caballero and military force of the force, that is a societal event and an event and a military conflict, of the person decedent at Francoist Spain.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Francoist_Spain> . ?v1 <http://dbpedia.org/ontology/commander> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?militaryForceFrancisco ?militaryForceDecedent
WHERE {
  # Francisco Largo Caballero's military force that is a societal event and a military conflict
  ?person dbr:Francisco_Largo_Caballero .
  ?person dbo:militaryService ?militaryForceFrancisco .
  ?militaryForceFrancisco rdf:type dbo:SocietalEvent ;
                         rdf:type dbo:MilitaryConflict .

  # Person decedent at Francoist Spain and their military force that is a societal event, an event, and a military conflict
  ?decedent dbo:deathPlace dbr:Francoist_Spain .
  ?decedent dbo:militaryService ?militaryForceDecedent .
  ?militaryForceDecedent rdf:type dbo:SocietalEvent ;
                         rdf:type dbo:Event ;
                         rdf:type dbo:MilitaryConflict .
}
```",5,10,6,3,2,3,3,71,0,0,514,0,0.0,0
184,25,test,Give me the child of Archduke Joseph August of Austria and parent of the child of Archduke Joseph Francis of Austria.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Francis_of_Austria> . ?result <http://dbpedia.org/ontology/child> ?v1 . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_August_of_Austria> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?individual WHERE {
  ?child dbo:parent <http://dbpedia.org/resource/Archduke_Joseph_August_of_Austria> .
  ?grandChild dbo:parent ?child .
  ?grandChild dbo:parent <http://dbpedia.org/resource/Archduke_Joseph_Francis_of_Austria> .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
659,67,test,"Give me the commander in German campaign of 1813 and military force of the force, that is a societal event and an event and a military conflict, of the reference to Rutger Jan Schimmelpenninck and commander in the war, that is an event and a military conflict, of the figure known, that is a military unit and an organisation, as 'Polish Horse'.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/German_campaign_of_1813> <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/property/nickname> ""'Polish Horse'""@en . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://dbpedia.org/ontology/battle> ?v6 . ?v1 <http://xmlns.com/foaf/0.1/name> ""Rutger Jan Schimmelpenninck""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/ontology/commander> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v6 <http://dbpedia.org/ontology/commander> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?militaryForce WHERE {
  # German campaign of 1813 as an event and military conflict
  dbr:German_Campaign_of_1813 dbo:type ?type1 .
  FILTER (?type1 IN (dbr:Military_Conflict, dbr:Event)) .

  # Commander in the German campaign of 1813
  dbr:German_Campaign_of_1813 dbo:commander ?commander .

  # Rutger Jan Schimmelpenninck association
  ?commander dbo:associatedWith dbr:Rutger_Jan_Schimmelpenninck .
  
  # War associated with Rutger Jan Schimmelpenninck as an event and military conflict
  ?war dbo:associatedWith dbr:Rutger_Jan_Schimmelpenninck ;
       a ?type2 .
  FILTER (?type2 IN (dbr:Military_Conflict, dbr:Event)) .

  # Commander in the war associated with Rutger Jan Schimmelpenninck
  ?war dbo:commander ?commander .

  # Polish Horse as a military unit and organization
  dbr:Polish_Horse dbo:type ?type3 .
  FILTER (?type3 IN (dbr:Military_Unit, dbr:Organization)) .

  # Commander associated with the Polish Horse
  ?commander dbo:commanded ?polishHorse .
  ?polishHorse rdfs:label ""Polish Horse""@en .

  # Military force commanded by the commander
  ?commander dbo:militaryForce ?militaryForce .
}
```",7,14,8,3,3,3,3,71,0,0,7,0,0.0,0
16,57,test,Give me the spouse of Ted McGinley and person born as the birth name of Gigi Rice and professional in the profession of the actor of Unnatural (TV series).,SELECT ?result WHERE { <http://dbpedia.org/resource/Unnatural_(TV_series)> <http://dbpedia.org/property/starring> ?v0 . <http://dbpedia.org/resource/Gigi_Rice> <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/property/occupation> ?v5 . ?result <http://dbpedia.org/property/birthName> ?v3 . ?result <http://dbpedia.org/property/occupation> ?v5 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?spouse ?personWithBirthName ?professionalInProfession
WHERE {
  # Spouse of Ted McGinley
  ?tedMcGinley a dbo:Person ;
               foaf:name ""Ted McGinley""@en .
  ?tedMcGinley dbo:spouse ?spouse .

  # Person with the birth name of Gigi Rice
  ?gigiRice a dbo:Person ;
            foaf:name ""Gigi Rice""@en .
  ?gigiRice dbo:birthName ?birthName .
  ?personWithBirthName a dbo:Person ;
                       dbo:birthName ?birthName .

  # Actor in Unnatural and their profession
  ?unnaturalSeries dbp:title ""Unnatural (TV series)""@en .
  ?actorInUnnatural dbo:actor ?unnaturalSeries ;
                    a dbo:Actor .
  ?actorInUnnatural dbo:profession ?profession .
  ?professionalInProfession a dbo:Person ;
                            dbo:profession ?profession .
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
492,56,test,"Give me the person decedent at the capital, that is a settlement, of the country of Khemis Miliana District and person decedent at the work of US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite and commander in Franco-Hova Wars.","SELECT ?result WHERE { <http://dbpedia.org/resource/Khemis_Miliana_District> <http://dbpedia.org/ontology/country> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://dbpedia.org/property/author> ""US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite""@en . ?v0 <http://dbpedia.org/ontology/capital> ?v1 . ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . <http://dbpedia.org/resource/Franco-Hova_Wars> <http://dbpedia.org/ontology/commander> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?person WHERE {
  # Find the capital of Khemis Miliana District
  ?district dbo:capital ?capital .
  FILTER (str(?district) = ""Khemis_Miliana_District"") .

  # Ensure the capital is a settlement
  ?capital rdf:type dbo:Settlement .

  # Find decedents at the capital
  ?decedentAtCapital dbo:placeOfDeath ?capital ;
                     rdf:type dbo:Person .

  # Joseph C. Satterthwaite's work as US Assistant Secretary of State for African Affairs
  dbr:Joseph_C._Satterthwaite dbo:occupation ""US_Assistant_Secretary_of_State_for_African_Affairs""^^xsd:string .
  
  # Find decedents at his work location or related events
  ?decedentAtWork dbo:placeOfWork dbr:Joseph_C._Satterthwaite ;
                  rdf:type dbo:Person .

  # Franco-Hova Wars commanders
  ?commanderInWars dbo:role ""Commander"" ;
                   dbo:war dbr:Franco_Hova_Wars ;
                   rdf:type dbo:Person .

  # Ensure the same person is linked to all conditions
  FILTER (?decedentAtCapital = ?decedentAtWork && ?decedentAtWork = ?commanderInWars)
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
696,18,test,"Give me the landmark at elevation of the award of Nie Rongzhen and birth place of the member of the associated musical artist, that is an organisation and a group and a band, of The Boils.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/bandMember> ?v2 . <http://dbpedia.org/resource/The_Boils> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Nie_Rongzhen> <http://dbpedia.org/property/awards> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/elevation> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?landmark WHERE {
  # Step 1: Find Nie Rongzhen's award
  dbr:Nie_Rongzhen dbo:honoraryTitle ?award .
  
  # Step 2: Find the birthplace of a member associated with The Boils
  ?member dbo:nationality dbr:The_Boils ;
          dbp:birthPlace ?birthPlace .

  # Step 3: Identify an organization/group/band associated with The Boils
  ?associatedGroup rdf:type/(dbo:Band|dbo:MusicalArtist) ;
                   dbo:associatedBand dbr:The_Boils .
  
  # Step 4: Find a landmark at the same elevation as the award and birthplace
  ?landmark dbo:elevation ?elevation .
  FILTER (?elevation = ?awardElevation && ?elevation = ?birthPlaceElevation)

  # Get the elevation of the award
  ?award dbo:elevation ?awardElevation .

  # Get the elevation of the birthplace
  ?birthPlace dbo:elevation ?birthPlaceElevation .
}
```",5,8,6,3,2,3,2,20,0,0,1,0,0.0,0
328,49,test,"Give me the leader of the office, that is a government agency, of the leader, that is an office holder and a politician, of Gustav Jonson and awardee of the award of Bruce Fraser, 1st Baron Fraser of North Cape.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/office> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/leader> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape> <http://dbpedia.org/property/awards> ?v2 . ?result <http://dbpedia.org/property/awards> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. <http://dbpedia.org/resource/Gustav_Jonson> <http://dbpedia.org/property/leader> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?leaderOfOfficeLeader
WHERE {
  # Find the award associated with Bruce Fraser, 1st Baron Fraser of North Cape
  ?fraserAward dbo:recipient ?fraser .
  ?fraser foaf:name ""Bruce Fraser, 1st Baron Fraser of North Cape""@en .

  # Identify Gustav Jonson
  ?gustavJonson foaf:name ""Gustav Jonson""@en .

  # Find the leader (office holder and politician) of Gustav Jonson
  ?leaderOfGustav dbo:positionHeld ?office .
  ?leaderOfGustav dbo:officeHolder ?gustavJonson .
  ?leaderOfGustav foaf:name ?nameLeaderOfGustav .

  # Ensure the office is a government agency
  ?office dbo:type dbr:Government_agency .

  # Find the leader of this office
  ?leaderOfOffice dbo:headOfStateOrGovernment ?office .
  ?leaderOfOffice foaf:name ?leaderOfOfficeLeader .
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
778,20,test,"Give me the entity in the award of the awardee, that is American, of Wolf Prize in Medicine and author of the work, that is a software, of the author of Pushd and popd.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/United_States>. ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Wolf_Prize_in_Medicine> . ?v5 <http://dbpedia.org/property/author> ?v4 . <http://dbpedia.org/resource/Pushd_and_popd> <http://dbpedia.org/property/author> ?v4 . ?result <http://dbpedia.org/ontology/location> ?v2 . ?v1 <http://dbpedia.org/property/awards> ?v2 . ?v5 <http://dbpedia.org/ontology/author> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Software>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?entity WHERE {
  # Step 1: Identify the author of ""Pushd"" and ""Popd""
  ?author dbo:work dbr:Pushd .
  ?author dbo:work dbr:Popd .

  # Step 2: Find an American who has won the Wolf Prize in Medicine
  ?awardee dbo:nationality dbr:United_States ;
          dbo:award dbr:Wolf_Prize_in_Medicine .

  # Ensure this person is Ken Thompson (author of Pushd and Popd)
  FILTER (?author = ?awardee)

  # Step 3: Ensure the awardee has authored software
  ?softwareWork dbo:creator ?awardee ;
               a dbo:Software .

  # Step 4: Retrieve the entity related to their award
  ?awardEntity dbo:recipient ?awardee .
  
  BIND(?awardEntity AS ?entity)
}
```",6,8,7,3,2,3,2,20,0,0,1,0,0.0,0
427,65,test,"Give me the party of the father of the alumnus of Massachusetts Institute of Technology and party of the person born, that is an office holder and a politician, as Romano Antonio Prodi and reference to the name of Italian People's Party (1994).","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v4 . ?v0 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Massachusetts_Institute_of_Technology> . ?v6 <http://dbpedia.org/ontology/party> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/ontology/party> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Italian_People's_Party_(1994)> <http://xmlns.com/foaf/0.1/name> ?v4 . ?v0 <http://dbpedia.org/property/father> ?v6 . ?v3 <http://dbpedia.org/property/birthName> ""Romano Antonio Prodi""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?fatherParty ?prodiParty WHERE {
  # Find fathers of MIT alumni and their political parties
  ?alumnus dbo:almaMater dbr:Massachusetts_Institute_of_Technology .
  ?alumnus dbo:father ?father .
  ?father dbp:politicalParty ?fatherParty .

  # Find Romano Prodi's party affiliation, specifically the Italian People's Party in 1994
  dbr:Romano_Prodi dbp:birthName ""Romano Antonio Prodi""@en ;
                   dbp:officeHolder true ;
                   dbp:politician true .
  OPTIONAL {
    ?prodiPartyMembership dbo:member dbr:Romano_Prodi ;
                          dbo:organization dbr:Italian_People's_Party_(1994) .
    ?prodiPartyMembership dbo:endDate ?endDate .
    FILTER (YEAR(?endDate) >= 1994)
    ?prodiPartyMembership dbo:organization ?prodiParty .
  }
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
161,53,test,"Give me the commander in the force, that is an event, of Emilio Mola and military force of the force, that is a societal event and an event and a military conflict, of the person decedent at Francoist Spain and military force of Spanish Civil War.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Emilio_Mola> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v3 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Francoist_Spain> . ?v2 <http://dbpedia.org/ontology/commander> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?event WHERE {
  ?event a dbo:MilitaryConflict ;
         dbo:participatedIn dbr:Spanish_Civil_War ;
         dbo:commander dbr:Emilio_Mola .
  
  ?event dbo:conflictWith ?conflict ;
         dbo:participant dbr:Francoist_Spain .

  FILTER EXISTS { ?conflict a dbo:SocietalEvent . }
}
```",6,10,7,3,3,3,3,71,0,0,32,0,0.0,0
645,20,test,"Give me the alma mater of the child of the parent of Adela Pankhurst and entity in the residence, that is a country, of the commander in Battle of Diamond Rock.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v2 . ?v1 <http://dbpedia.org/property/residence> ?v2 . <http://dbpedia.org/resource/Adela_Pankhurst> <http://dbpedia.org/ontology/parent> ?v4 . ?v4 <http://dbpedia.org/ontology/child> ?v5 . ?v5 <http://dbpedia.org/ontology/almaMater> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Battle_of_Diamond_Rock> <http://dbpedia.org/ontology/commander> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?almaMater ?countryResidence WHERE {
  # Find Adela Pankhurst's parent
  ?parent a dbo:Person ;
          dbp:child dbr:Adela_Pankhurst .

  # Find the child of that parent (another person)
  ?child a dbo:Person ;
         dbp:parent ?parent .

  # Get alma mater of this child
  ?child dbo:almaMater ?almaMater .

  # Identify commander in Battle of Diamond Rock
  ?battle dbo:commander ?commander .
  FILTER (str(?battle) = ""Battle_of_Diamond_Rock"")

  # Find residence that is a country for the commander
  ?commander dbp:residence ?residence .
  ?residence rdf:type dbo:Country ;
             rdfs:label ?countryResidence .

}
```",6,7,7,3,2,3,2,20,0,0,1,0,0.0,0
182,25,test,Give me the war of the work of Gotabhaya Rajapaksa and war of the author of 2019 Sri Lanka Easter bombings and entity in Sri Lanka.,SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/battle> ?result . ?v4 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Gotabhaya_Rajapaksa> . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Sri_Lanka> . ?v3 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/2019_Sri_Lanka_Easter_bombings> <http://dbpedia.org/property/author> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?war ?author ?entityInSriLanka
WHERE {
  # Gotabhaya Rajapaksa's war
  dbr:Gotabhaya_Rajapaksa dbo:role ""Secretary of Defence""@en .
  dbr:Sri_Lankan_Civil_War dbo:participatedIn dbr:Gotabhaya_Rajapaksa .

  # Author of the 2019 Sri Lanka Easter bombings
  ?author dbo:nationality dbr:Sri_Lanka ;
          dbo:occupation ""Leader""@en ;
          dbo:associatedWith dbr:National_Thowheeth_Jama'ath .
  
  FILTER(CONTAINS(LCASE(?author), ""zahran hashim""))

  # Entity in Sri Lanka related to these contexts
  ?entityInSriLanka a dbo:Place ;
                   dbo:country dbr:Sri_Lanka .

  OPTIONAL { ?entityInSriLanka dbo:wikiPageRedirects ?relatedEntity }
}
```",5,5,6,2,3,2,3,28,0,0,1,0,0.0,0
16,26,test,Give me the professional in the profession of the actor of Unnatural (TV series).,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/Unnatural_(TV_series)> <http://dbpedia.org/property/starring> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?actor ?name WHERE {
  ?tvSeries dbo:title ""Unnatural (TV series)"" .
  ?tvSeries dbo:starring ?actor .
  ?actor rdf:type dbo:Actor .
  OPTIONAL { ?actor foaf:name ?name . }
}
```",3,3,4,3,1,3,3,71,0,0,40872,0,0.0,0
184,44,test,Give me the child of the child of Archduke Joseph Karl of Austria and parent of the child of Archduke Joseph Francis of Austria and parent of Géza von Habsburg.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Francis_of_Austria> . ?result <http://dbpedia.org/property/father> ?v4 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Géza_von_Habsburg> . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Karl_of_Austria> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT DISTINCT ?commonEntity WHERE {
  # Step 1: Find a child of Archduke Joseph Karl of Austria
  ?grandchild1 dbo:childOf ?childJosephKarl .
  ?childJosephKarl rdfs:label ""Archduke Joseph Karl of Austria""@en .

  # Step 2: Find the grandchild (child of the child)
  ?greatGrandchild1 dbo:childOf ?grandchild1 .

  # Step 3: Find a child of Archduke Joseph Francis of Austria
  ?grandchild2 dbo:childOf ?childJosephFrancis .
  ?childJosephFrancis rdfs:label ""Archduke Joseph Francis of Austria""@en .

  # Step 4: Find the grandchild (child of the child)
  ?greatGrandchild2 dbo:childOf ?grandchild2 .

  # Step 5: Find a parent of Géza von Habsburg
  ?parentGéza dbo:parent ?géza .
  ?géza rdfs:label ""Géza von Habsburg""@en .

  # Step 6: Identify the common entity
  ?commonEntity dbo:childOf ?greatGrandchild1 .
  ?commonEntity dbo:parent ?greatGrandchild2 .
  ?commonEntity dbo:parent ?géza .
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
838,16,test,"Give me the band of the band member, that is an artist and a musical artist, of YU Grupa and band member of the band, that is a group, of YU Grupa.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/YU_Grupa> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/YU_Grupa> . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?bandMember ?otherBand WHERE {
  ?yugrupa dbo:member ?bandMember .
  FILTER (str(?yugrupa) = ""YU Grupa"") .

  ?bandMember a dbo:Artist ;
             a dbo:MusicalArtist .

  ?bandMember dbp:memberOf ?otherBand .
  FILTER EXISTS { ?otherBand a dbo:Group }
}
```",4,7,5,2,2,3,2,20,0,0,5,0,0.0,0
427,45,test,"Give me the party of the person born, that is an office holder and a politician, as the birth name of Romano Prodi and party of Giulio Andreotti and reference to Partito Popolare Italiano.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/party> ?result . ?result <http://xmlns.com/foaf/0.1/name> ""Partito Popolare Italiano""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/property/birthName> ?v0 . <http://dbpedia.org/resource/Giulio_Andreotti> <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/property/birthName> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthNameProdi ?partyProdi ?partyAndreotti WHERE {
  # Romano Prodi's birth name and party
  dbr:Romano_Prodi dbo:birthName ?birthNameProdi .
  OPTIONAL { dbr:Romano_Prodi dbo:politicalParty ?partyProdi . }

  # Giulio Andreotti's party
  dbr:Giulio_Andreotti dbo:politicalParty ?partyAndreotti .

  # Reference to Partito Popolare Italiano
  FILTER (
    EXISTS {
      ?partyProdi rdfs:label ""Partito Popolare Italiano""@it .
    } ||
    EXISTS {
      ?partyAndreotti rdfs:label ""Partito Popolare Italiano""@it .
    }
  )
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
994,54,test,"Give me the associated musical artist of the associated musical artist of Watchtower (band) and associated musical artist of the band member, that is a band and a group and an organisation, of the band, that is an organisation, of Fredrik Thordendal and band member of Don Dokken.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . <http://dbpedia.org/resource/Watchtower_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v1 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Fredrik_Thordendal> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Don_Dokken> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

# Step 1: Find an associated musical artist of Watchtower
WITH {
    SELECT ?artist WHERE {
        ?watchtower dbo:associatedBand ?artist .
        VALUES ?watchtower {<http://dbpedia.org/resource/Watchtower_(band)>}
    }
}

# Step 2: Find the associated musical artist of that artist
UNION {
    SELECT ?secondArtist WHERE {
        ?artist dbo:associatedBand ?secondArtist .
    }
}

# Step 3: Identify Fredrik Thordendal's organization (band)
UNION {
    SELECT ?thordendalOrg WHERE {
        ?thordendal dbp:member ?thordendalOrg .
        VALUES ?thordendal {<http://dbpedia.org/resource/Fredrik_Thordendal>}
    }
}

# Step 4: Find a band member who is also part of Don Dokken
UNION {
    SELECT ?commonMember WHERE {
        ?thordendalOrg dbo:bandMember ?commonMember .
        ?donDokken dbp:member ?commonMember .
        VALUES ?donDokken {<http://dbpedia.org/resource/Don_Dokken>}
    }
}

# Step 5: Identify the organization of that band member
UNION {
    SELECT ?finalOrg WHERE {
        ?commonMember dbo:member ?finalOrg .
    }
}

# Final step: Combine results to find intersection or connection
SELECT DISTINCT ?secondArtist ?finalOrg WHERE {
    VALUES (?artist) {?artist}
    VALUES (?commonMember) {?commonMember}
}
```",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
92,48,test,"Give me the band member of the reference, that is an artist, to the name of Nevermore (2006 film) and band of the person born as Joseph Michael Furney.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Nevermore_(2006_film)> <http://xmlns.com/foaf/0.1/name> ?v3 . ?result <http://dbpedia.org/ontology/bandMember> ?v1 . ?v1 <http://dbpedia.org/property/birthName> ""Joseph Michael Furney""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v2 <http://xmlns.com/foaf/0.1/name> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?bandMemberArtist ?furneyBand 
WHERE {
  # Find the artist associated with the film ""Nevermore"" (2006)
  ?film dbo:title ""Nevermore""@en .
  FILTER(YEAR(?film) = 2006) .
  
  ?artist dbo:associatedWith ?film .

  # Identify a band member of Nevermore who is also an artist related to this film
  ?bandMemberArtist dbo:memberOf dbr:Nevermore_(band) .
  ?bandMemberArtist dbo:associatedWith ?film .

  # Find Joseph Michael Furney's birth name and associated band
  ?furney dbp:birthName ""Joseph Michael Furney""@en ;
         dbo:memberOf ?furneyBand .
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
701,70,test,"Give me the parent of the child of the child of Seti I and spouse of the father of the commander, that is a royalty, in Battle of Perire and parent of the child of Nefertari.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> ?v3 . <http://dbpedia.org/resource/Battle_of_Perire> <http://dbpedia.org/ontology/commander> ?v1 . <http://dbpedia.org/resource/Nefertari> <http://dbpedia.org/ontology/child> ?v4 . ?v1 <http://dbpedia.org/property/father> ?v3 . ?v4 <http://dbpedia.org/ontology/parent> ?result . ?v7 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/child> ?v7 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seti_I> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?parent
WHERE {
  # Seti I's child
  ?setiI a dbo:Monarch ;
         foaf:name ""Seti I""@en .
  
  ?child1 dbo:childOf ?setiI .

  # Seti I's grandchild
  ?grandchild dbo:childOf ?child1 .

  # Commander in Battle of Perire
  ?battle dbp:battleName ""Battle of Perire"" ;
          dbo:commander ?commander .
  
  # Father of the commander
  ?father dbo:parent ?commander .

  # Spouse of the father
  ?spouse dbo:spouse ?father .

  # Ensure the spouse is royalty
  ?spouse a dbo:RoyalFamilyMember ;
          rdfs:label ?name .

  FILTER (CONTAINS(LCASE(?name), ""royalty""))

  # Parent of Nefertari's child
  ?nefertari a dbo:Monarch ;
             foaf:name ""Nefertari""@en .
  
  ?child2 dbo:childOf ?nefertari .
  
  FILTER (?spouse = ?parent)
}
```",8,9,9,3,3,3,3,71,0,0,1,0,0.0,0
281,45,test,"Give me the entity in Colony of New Zealand and war of the profession, that is a military unit, of the professional, that is an office holder and a politician, in New Zealand Army and war of Beauchamp Seymour, 1st Baron Alcester.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Colony_of_New_Zealand> . ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/New_Zealand_Army> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Beauchamp_Seymour,_1st_Baron_Alcester> <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v0 <http://dbpedia.org/property/occupation> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryUnit WHERE {
  ?militaryUnit a dbo:MilitaryUnit ;
                dbo:militaryBranch dbr:New_Zealand_Army ;
                dbo:member ?person .
  
  ?person dbo:profession ?profession ;
          dbo:officeHolder ?office ;
          dbo:politicalAffiliation ?politics .

  FILTER EXISTS { 
    ?war dbo:participatedIn ?militaryUnit ;
         dbo:participant dbr:Beauchamp_Seymour,_1st_Baron_Alcester .
  }

  FILTER EXISTS {
    ?context dbo:place dbr:Colony_of_New_Zealand ;
             dbo:event ?war .
  }
}
```",5,8,6,3,3,3,3,71,0,0,1,0,0.0,0
712,19,test,Give me the capital of the country of Armed Forces of South Russia and resting place of the awardee of the show of Soviet Union.,SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/restingPlace> ?result . ?v0 <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/Soviet_Union> . <http://dbpedia.org/resource/Armed_Forces_of_South_Russia> <http://dbpedia.org/ontology/country> ?v2 . ?v4 <http://dbpedia.org/property/awards> ?v0 . ?v2 <http://dbpedia.org/ontology/capital> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?capital ?restingPlace WHERE {
  # Part 1: Capital of Ukraine
  dbr:Ukraine dbo:capital ?capital .

  # Part 2: Resting place of a notable Soviet Union awardee (example: Olympic medalist)
  OPTIONAL {
    ?person dbo:nationality dbr:Soviet_Union ;
            dbo:awardReceived ?award .
    FILTER(CONTAINS(LCASE(STR(?award)), ""olympic""))
    ?person dbo:deathPlace ?restingPlace .
  }
}
```",5,5,6,3,2,3,2,20,0,1,1,0.0,0.0,0
959,56,test,"Give me the native of Japan and manager of the team of the manager, that is a sports manager, of 1998 Kashima Antlers season and member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of Eiji Ōtsuka.",SELECT ?result WHERE { <http://dbpedia.org/resource/1998_Kashima_Antlers_season> <http://dbpedia.org/ontology/manager> ?v4 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Japan> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. <http://dbpedia.org/resource/Eiji_Ōtsuka> <http://dbpedia.org/ontology/almaMater> ?v2 . ?v0 <http://dbpedia.org/ontology/manager> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v0 <http://dbpedia.org/ontology/manager> ?v4 . ?result <http://dbpedia.org/ontology/team> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?nativeOfJapan ?managerTeam WHERE {
  # Eiji Ōtsuka's alma mater
  dbr:Eiji_Ōtsuka dbo:almaMater ?university .
  
  FILTER (STRSTARTS(STR(?university), ""http://dbpedia.org/resource/"") &&
          EXISTS { ?university a dbo:University } &&
          EXISTS { ?university dbo:country dbr:Japan })

  # Manager of the 1998 Kashima Antlers season
  dbr:Kashima_Antlers_1998_season dbo:manager ?manager .
  
  # Check if manager is a sports manager
  ?manager dbo:occupation ?occupation .
  FILTER (CONTAINS(LCASE(STR(?occupation)), ""sports manager""))

  # Manager's native country
  ?manager dbo:nationality dbr:Japan .

  # Team currently managed by this manager
  ?manager dbp:teamManaged ?managerTeam .
  
  BIND(?manager AS ?nativeOfJapan)
}
```",6,11,7,3,3,3,3,71,0,0,2,0,0.0,0
404,61,test,"Give me the parent of the child, that is a royalty, of the parent, that is a royalty, of Prince George William of Hanover and child of the father of the spouse of Princess Victoria Louise of Prussia.",SELECT ?result WHERE { <http://dbpedia.org/resource/Prince_George_William_of_Hanover> <http://dbpedia.org/ontology/parent> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/child> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> ?v5 . ?v1 <http://dbpedia.org/property/father> ?v3 . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?v1 . ?result <http://dbpedia.org/ontology/parent> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?parentOfChild
WHERE {
  # Step 1: Prince George William of Hanover
  ?princeGeorgeWilliam a dbo:Person ;
                      foaf:name ""Prince George William of Hanover""@en .

  # Step 2: Parent who is royalty
  ?royalParent dbo:child ?princeGeorgeWilliam .
  ?royalParent dbo:title ?title .
  FILTER EXISTS { ?title dbp:isPartOf <http://dbpedia.org/resource/Category:Royalty> }

  # Step 3: Child of this royal parent
  ?childOfRoyalParent dbo:parent ?royalParent .

  # Step 4: Spouse of Princess Victoria Louise of Prussia
  ?princessVictoriaLouise a dbo:Person ;
                         foaf:name ""Princess Victoria Louise of Prussia""@en .
  ?spouse dbp:spouse ?princessVictoriaLouise .

  # Step 5: Father of this spouse
  ?fatherOfSpouse dbo:child ?spouse .

  # Step 6: Child of this father
  ?childOfFather dbo:parent ?fatherOfSpouse .

  # Step 7: Parent who is royalty
  ?royalParent2 dbo:child ?childOfFather .
  ?royalParent2 dbo:title ?title2 .
  FILTER EXISTS { ?title2 dbp:isPartOf <http://dbpedia.org/resource/Category:Royalty> }

  # Final result: Parent of the child who is royalty
  ?parentOfChild dbo:parent ?childOfFather .
}
```",6,8,7,3,2,3,3,71,0,0,1,0,0.0,0
294,27,test,"Give me the entity in the birth place, that is a settlement, of Marion James and resting place of the architect of P. D. Houston Jr. House and resting place of Luke Lea (American politician, born 1879).","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/P._D._Houston_Jr._House> <http://dbpedia.org/ontology/architect> ?v3 . ?result <http://dbpedia.org/ontology/location> ?v0 . ?v3 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Marion_James> <http://dbpedia.org/ontology/birthPlace> ?v0 . <http://dbpedia.org/resource/Luke_Lea_(American_politician,_born_1879)> <http://dbpedia.org/ontology/restingPlace> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?settlement WHERE {
  # Marion James' birthplace
  OPTIONAL { 
    dbr:Marion_James dbo:birthPlace ?marionBirthPlace .
    ?marionBirthPlace a dbo:Settlement ;
                     rdfs:label ?settlement .
  }

  # Architect of P. D. Houston Jr. House and their resting place
  OPTIONAL {
    dbr:P._D._Houston_Jr._House dbo:architect ?architect .
    ?architect dbo:deathPlace ?architectDeathPlace .
    ?architectDeathPlace a dbo:Settlement ;
                        rdfs:label ?settlement .
  }

  # Luke Lea's resting place
  OPTIONAL {
    dbr:Luke_Lea_(American_politician,_born_1879) dbo:deathPlace ?lukeDeathPlace .
    ?lukeDeathPlace a dbo:Settlement ;
                    rdfs:label ?settlement .
  }
}
```",5,6,6,2,3,2,3,28,0,0,1,0,0.0,0
92,69,test,"Give me the associated musical artist of the person born, that is an artist, as Jim Sheppard and band member of the reference, that is an artist, to the name of Nevermore (2006 film) and band of the person born as the birth name of Joseph Michael.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v3 <http://xmlns.com/foaf/0.1/name> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v7 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Joseph_Michael> <http://dbpedia.org/property/birthName> ?v1 . ?v7 <http://dbpedia.org/property/birthName> ""Jim Sheppard""@en . <http://dbpedia.org/resource/Nevermore_(2006_film)> <http://xmlns.com/foaf/0.1/name> ?v4 . ?result <http://dbpedia.org/ontology/bandMember> ?v2 . ?v2 <http://dbpedia.org/property/birthName> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?associatedArtist WHERE {
  # Step 1: Find the artist associated with ""Nevermore (2006 film)""
  ?film a dbo:Film ;
        rdfs:label ""Nevermore""@en .
  
  ?bandMember dbo:memberOf ?band ;
              dbo:occupation dbr:Musician ;
              dbo:associatedBand ?film .

  # Step 2: Find Jim Sheppard's associated artist
  ?jimSheppard a dbo:Person ;
               rdfs:label ""Jim Sheppard""@en .
  
  ?jimSheppard dbo:associatedBand ?artist1 .

  # Step 3: Identify Joseph Michael's birth name and band
  ?josephMichael a dbo:Person ;
                 rdfs:label ""Joseph Michael""@en ;
                 foaf:name ?birthName .
  
  ?josephMichael dbo:memberOf ?band2 .

  # Combine information to find the final associated artist
  ?artist1 = ?associatedArtist .
  ?band2 = ?film .
}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
701,57,test,Give me the spouse of the father of Merneptah and parent of the child of the child of Seti I and parent of Meritamen.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v3 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seti_I> . ?v5 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Merneptah> <http://dbpedia.org/property/father> ?v3 . <http://dbpedia.org/resource/Meritamen> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/child> ?v5 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  ?merneptah dbo:father dbr:Ramesses_II .
  ?ramesses2 dbo:spouse ?spouse .
  ?seti1 dbo:child ?ramesses2 .
  ?ramesses2 dbo:child ?meritamen .
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
281,68,test,"Give me the war of the awardee of the award of Jonathon Band and entity in the birth place, that is a country, of the leader, that is a politician, of 1962 New South Wales state election and war of the profession, that is a military unit, of Heather Roy.",SELECT ?result WHERE { <http://dbpedia.org/resource/Heather_Roy> <http://dbpedia.org/property/occupation> ?v3 . ?result <http://dbpedia.org/ontology/place> ?v7 . ?v4 <http://dbpedia.org/property/awards> ?v5 . <http://dbpedia.org/resource/Jonathon_Band> <http://dbpedia.org/property/awards> ?v5 . ?v0 <http://dbpedia.org/ontology/birthPlace> ?v7 . ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v4 <http://dbpedia.org/ontology/battle> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. <http://dbpedia.org/resource/1962_New_South_Wales_state_election> <http://dbpedia.org/property/leader> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?warOfAwardee ?countryOfBirth ?warOfMilitaryUnit
WHERE {
  # Jonathon Band's award and related war
  ?award dbo:recipient dbr:Jonathon_Band .
  ?awardee dbo:receivedAward ?award .
  ?awardee dbo:occupation ?profession .
  ?profession dbo:relatedTo ?warOfAwardee .

  # Leader of the 1962 New South Wales state election
  ?electionEvent dbo:leader ?leader .
  ?electionEvent dbo:date ""1962-01-01""^^xsd:date ;
                 dbo:electionType dbr/New_South_Wales_state_election_1962 .
  
  # Birthplace country of the leader
  ?leader dbo:birthPlace ?birthPlace .
  ?birthPlace a dbo:Country .

  # Heather Roy's profession as a military unit and related war
  ?heatherRoy dbo:occupation ?militaryUnit .
  ?militaryUnit dbo:relatedTo ?warOfMilitaryUnit .
  
  BIND(?birthPlace AS ?countryOfBirth)
}
```",8,11,9,3,3,3,3,71,0,0,1,0,0.0,0
161,31,test,"Give me the military force of the force, that is a societal event and an event and a military conflict, of the person decedent at Francoist Spain and military force of Spanish Civil War.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://dbpedia.org/ontology/commander> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . ?result <http://dbpedia.org/ontology/battle> ?v0 . ?v1 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Francoist_Spain> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?militaryForce ?personDecedent WHERE {
  # Find military forces involved in Francoist Spain and Spanish Civil War
  ?event1 a dbo:MilitaryConflict ;
          dbo:participatingMilitaryUnit ?militaryForce .
  
  ?event2 a dbo:SocietalEvent ;
          dbo:relatedTo ?militaryForce .

  FILTER(?event1 = dbr:Spanish_Civil_War || ?event2 = dbr:Francoist_Spain)

  # Find persons who died during Francoist Spain
  ?personDecedent dbo:dateOfDeath ?deathDate .
  ?personDecedent dbo:nationality dbr:Spain .

  FILTER(?deathDate >= ""1939-04-01""^^xsd:date && ?deathDate <= ""1975-11-20""^^xsd:date)

  # Find military force of the decedent
  OPTIONAL {
    ?personDecedent dbo:militaryService ?militaryForce .
  }
}
```",4,7,5,3,2,3,3,71,0,0,514,0,0.0,0
820,19,test,Give me the child of the parent of the professional in Actor and professional in the award of Scott McCloud.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/occupation> ""Actor""@en . ?v4 <http://dbpedia.org/ontology/child> ?v0 . <http://dbpedia.org/resource/Scott_McCloud> <http://dbpedia.org/property/awards> ?v2 . ?result <http://dbpedia.org/property/occupation> ?v2 . ?result <http://dbpedia.org/property/father> ?v4 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?childAward ?winner
WHERE {
  # Step 1: Identify Scott McCloud's profession as an Actor
  ?scott dbo:profession dbr:Actor .
  
  # Step 2: Find the award associated with Scott McCloud
  ?scott dbo:award ?award .

  # Step 3: Determine the parent of that award
  ?parent rdfs:subClassOf+ ?award .

  # Step 4: Identify the child of this parent
  ?childAward rdfs:subClassOf* ?parent .
  
  # Ensure the child is not the same as the original award
  FILTER(?childAward != ?award)

  # Step 5: Find professionals associated with winning this child award
  ?winner dbo:award ?childAward .
}
```",5,5,6,3,2,3,2,20,0,0,128,0,0.0,0
161,68,test,"Give me the military force of the force, that is a societal event and an event and a military conflict, of the person decedent at Francoist Spain and military force of the force, that is a societal event and a military conflict, of the predecessor of Indalecio Prieto and commander in the force, that is an event, of Emilio Mola.",SELECT ?result WHERE { ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v7 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v7 <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Indalecio_Prieto> . ?v4 <http://dbpedia.org/ontology/commander> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v5 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Francoist_Spain> . ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Emilio_Mola> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?militaryForce1 ?militaryForce2 ?commanderInForce
WHERE {
  # Decedent at Francoist Spain and their military force
  ?decedent dbo:decedent dbr:Francoist_Spain .
  ?decedent dbo:militaryConflict ?militaryForce1 .
  FILTER (dbo:SocietalEvent(?militaryForce1)) .

  # Predecessor of Indalecio Prieto and their military force
  ?predecessor dbo:predecessor dbr:Indalecio_Prieto .
  ?predecessor dbo:militaryConflict ?militaryForce2 .
  FILTER (dbo:SocietalEvent(?militaryForce2)) .

  # Commander in the force related to Emilio Mola
  ?commanderInForce dbo:commanderInForce dbr:Emilio_Mola .
}
```",8,14,9,3,3,3,3,71,0,0,32,0,0.0,0
16,50,test,Give me the professional in the profession of the actor of Unnatural (TV series) and person born as the birth name of Gigi Rice.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v4 . ?result <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Gigi_Rice> <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Unnatural_(TV_series)> <http://dbpedia.org/property/starring> ?v0 . ?v0 <http://dbpedia.org/property/occupation> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?professional WHERE {
  # Find the actor of ""Unnatural"" TV series
  ?series dbo:title ""Unnatural (TV series)""@en .
  ?series dbo:castMember ?actor .
  
  # Get the profession of the actor
  ?actor dbo:occupation dbr:Actor .

  # Find Gigi Rice's birth name
  dbr:Gigi_Rice dbp:birthName ?birthName .

  # Find a professional with the same birth name and profession as an actor
  ?professional dbo:occupation dbr:Actor .
  ?professional dbp:birthName ?birthName .
}
```",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
54,22,test,"Give me the predecessor of the child, that is an office holder and a royalty, of Thihapate of Mohnyin and child of Thinkhaya of Pagan.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/successor> ?v1 . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Thihapate_of_Mohnyin> . <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?predecessor WHERE {
  ?child dbo:parent dbr:Thihapate_of_Mohnyin ;
         dbo:parent dbr:Thinkhaya_of_Pagan .
  
  FILTER EXISTS { ?child dbo:officeHolder true . }
  FILTER EXISTS { ?child dbo:royalty true . }

  ?predecessor dbo:successor ?child .
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
492,50,test,"Give me the commander in the war, that is a military conflict and an event, of the commander in Battle of Verdun and person decedent at the capital, that is a settlement, of Algeria.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> ?v3 . <http://dbpedia.org/resource/Battle_of_Verdun> <http://dbpedia.org/ontology/commander> ?v0 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://dbpedia.org/ontology/battle> ?v4 . <http://dbpedia.org/resource/Algeria> <http://dbpedia.org/ontology/capital> ?v3 . ?v4 <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?commanderInConflict ?decedent
WHERE {
  # Commander in the Battle of Verdun
  dbr:Battle_of_Verdun dbo:commander ?verdunCommander .

  # Military conflict where this commander is also a commander and classified as an event
  ?conflict dbo:commander ?verdunCommander ;
           rdf:type dbo:MilitaryConflict, dbo:Event .

  # Capital of Algeria
  dbr:Algiers dbo:capitalOf dbr:Algeria .

  # Person who died in Algiers
  ?decedent dbo:placeOfBirth ?birthPlace ;
            dbo:deathPlace dbr:Algiers .

  # Ensure the commander is the same for both conflicts
  ?conflict dbo:commander ?commanderInConflict .
  
  FILTER (?verdunCommander = ?commanderInConflict)
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
488,67,test,"Give me the birth place of Enomoto Takeaki and administration of the father of the spouse, that is a royalty, of Tokugawa Masako and death place of the father, that is a politician, of the father, that is an office holder, of Matsudaira Tadamasa.",SELECT ?result WHERE { ?v6 <http://dbpedia.org/ontology/deathPlace> ?result . ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Tokugawa_Masako> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Matsudaira_Tadamasa> <http://dbpedia.org/property/father> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Enomoto_Takeaki> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/property/leader> ?v3 . ?v1 <http://dbpedia.org/property/father> ?v3 . ?v0 <http://dbpedia.org/property/father> ?v6 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?birthPlaceEnomoto ?administrationFatherSpouse ?deathPlacePoliticianFather
WHERE {
  # Birth place of Enomoto Takeaki
  dbr:Enomoto_Takeaki dbo:birthPlace ?birthPlaceEnomoto .

  # Administration of the father of the spouse (royalty) of Tokugawa Masako
  dbr:Tokugawa_Masako dbo:spouse ?spouseMasako .
  ?spouseMasako rdf:type dbo:Monarch .
  ?spouseMasako dbo:father ?fatherSpouse .
  ?fatherSpouse dbo:administrativePost ?administrationFatherSpouse .

  # Death place of the father (politician) of the father (office holder) of Matsudaira Tadamasa
  dbr:Matsudaira_Tadamasa dbo:father ?fatherTadamasa .
  ?fatherTadamasa rdf:type dbo:GovernmentOfficial .
  ?fatherTadamasa dbo:father ?grandFatherTadamasa .
  ?grandFatherTadamasa rdf:type dbo:Politician .
  ?grandFatherTadamasa dbo:deathPlace ?deathPlacePoliticianFather
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
184,59,test,"Give me the child of the child of the parent, that is a royalty, of Archduke Ladislaus Philipp of Austria and parent of the native of the landmark at elevation, that is a settlement, of 96.0.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/property/father> ?v5 . ?v5 <http://dbpedia.org/property/father> ?v0 . ?v3 <http://dbpedia.org/ontology/elevation> ""96.0""^^<http://www.w3.org/2001/XMLSchema#double> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Archduke_Ladislaus_Philipp_of_Austria> <http://dbpedia.org/ontology/parent> ?v0 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?finalChild
WHERE {
  # Step 1: Find Archduke Ladislaus Philipp's parent
  ?ladislaus a dbr:Archduke_Ladislaus_Philipp_of_Austria ;
            dbo:parent ?parent .

  # Step 2: Identify the child of this parent who is royalty
  ?royalChild dbo:childOf ?parent ;
              dbo:royalty true .

  # Step 3: Find the child of this royal person
  ?grandchild dbo:childOf ?royalChild .

  # Step 4: Locate a settlement native to a landmark with elevation 96.0 meters
  ?landmark dbo:elevation ""96.0""^^xsd:float ;
            dbo:settlement ?settlement .
  
  ?native dbo:nativePlace ?landmark ;
          dbo:parent ?finalParent .

  # Step 5: Identify the parent of this native
  ?finalChild dbo:childOf ?finalParent .
}
```",6,8,7,3,2,3,3,71,0,0,1,0,0.0,0
617,57,test,"Give me the spouse of the child of the successor, that is a royalty, of Antiochus (son of Antiochus III the Great) and parent of the child of Antiochus (son of Antiochus III the Great) and child of Antiochus III the Great.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?v5 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/successor> ?v0 . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Antiochus_III_the_Great> . ?result <http://dbpedia.org/ontology/child> ?v3 . <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/child> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?spouse WHERE {
  # Identify Antiochus (son of Antiochus III the Great)
  ?antiochus dbp:father dbr:Antiochus_III_the_Great .
  
  # Find his successor
  ?successor dbo:successor ?antiochus .

  # Find children of the successor who are royalty
  ?child dbo:childOf ?successor ;
         a dbo:Monarch ;  # Assuming Monarch is used for royalty

  # Spouse of this child
  ?spouse dbo:spouse ?child .

  # Ensure spouse is also parent of Antiochus's child and child of Antiochus III the Great
  ?antiochusChild dbp:parent ?spouse ;
                  dbp:parent ?antiochus .
  
  ?spouse dbp:father dbr:Antiochus_III_the_Great .
}
```",6,7,7,3,3,3,3,71,0,0,2,0,0.0,0
16,59,test,Give me the spouse of the person born as the birth name of Ted McGinley and professional in the profession of the actor of Unnatural (TV series).,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ?v3 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Unnatural_(TV_series)> <http://dbpedia.org/property/starring> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v5 . ?v0 <http://dbpedia.org/property/occupation> ?v5 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Step 1: Find Ted McGinley's birth name
  dbr:Ted_McGinley dbo:birthName ?birthName .

  # Step 2: Identify the actor of ""Unnatural"" (TV series) and their profession
  dbr:Unnatural_(TV_series) dbo:actor ?actor .
  ?actor dbo:profession ?profession .

  # Step 3: Find Ted McGinley's spouse using his birth name and the identified profession
  ?person dbo:birthName ?birthName ;
          dbo:spouse ?spouse .
  
  FILTER(?person != dbr:Ted_McGinley) .
}
```",6,6,7,3,2,3,3,71,0,0,1,0,0.0,0
994,53,test,"Give me the band member of the person born, that is a musical artist, as Donald Maynard Dokken and associated musical artist of Red Tide (band) and associated musical artist of the associated musical artist of the reference to Watchtower.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ""Donald Maynard Dokken""@en . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Red_Tide_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://xmlns.com/foaf/0.1/name> ""Watchtower""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandMember ?associatedArtist ?watchtowerReferenceArtist WHERE {
  # Step 1: Identify Donald Maynard Dokken and his band
  VALUES (?dokken) { dbr:Donald_Dokken }
  
  ?dokken dbo:musicalArtistOf ?band .
  ?band dbo:member ?bandMember .

  # Step 2: Find Red Tide and its associated musical artists
  ?redTide dbo:associatedMusicalArtist ?artist1 .
  ?artist1 dbo:associatedMusicalArtist ?associatedArtist .

  # Step 3: For each associated artist, find their associated artists with a reference to Watchtower
  OPTIONAL {
    ?associatedArtist dbo:referenceTo dbr:Watchtower .
    BIND(?associatedArtist AS ?watchtowerReferenceArtist)
  }
  
  FILTER EXISTS { ?redTide rdf:type dbo:Band . }
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
92,56,test,"Give me the band member of the reference, that is an artist, to Nevermore and associated musical artist of Jim Sheppard and band of the person born as the birth name of Joseph Michael.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Jim_Sheppard> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Joseph_Michael> <http://dbpedia.org/property/birthName> ?v0 . ?v2 <http://xmlns.com/foaf/0.1/name> ""Nevermore""@en . ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?result <http://dbpedia.org/ontology/bandMember> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?artistMember ?associatedArtist ?bandOfJosephMichael
WHERE {
  # Find the artist member from Nevermore
  ?member dbo:memberOf dbr:Nevermore .
  ?member dbo:occupation dbr:Musician .

  FILTER EXISTS { ?member dbo:wikiPageRedirects ?redirect . 
                 ?redirect rdfs:label ""Warrel Dane""@en }
  
  BIND(?member AS ?artistMember)

  # Find associated musical artist of Jim Sheppard
  OPTIONAL {
    ?sheppard dbo:associatedMusicalArtist ?associatedArtist .
    FILTER EXISTS { ?sheppard rdfs:label ""Jim Sheppard""@en }
  }

  # Find the band of the person born as Joseph Michael (Warrel Dane)
  OPTIONAL {
    ?person dbo:birthName dbr:Joseph_Michael_Dane ;
            dbo:memberOf ?bandOfJosephMichael .
    FILTER EXISTS { ?person rdfs:label ""Warrel Dane""@en }
  }
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
696,19,test,Give me the birth place of the member of Dropkick Murphys and landmark at elevation of the award of the commander in Battle of Chishui River.,SELECT ?result WHERE { <http://dbpedia.org/resource/Dropkick_Murphys> <http://dbpedia.org/ontology/bandMember> ?v2 . <http://dbpedia.org/resource/Battle_of_Chishui_River> <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://dbpedia.org/property/awards> ?v4 . ?result <http://dbpedia.org/ontology/elevation> ?v4 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
# Query 1: Birthplace of Dropkick Murphys Members
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?member ?birthPlace WHERE {
    ?band rdf:type dbo:Band .
    ?band foaf:name ""Dropkick Murphys"" .
    ?band dbo:member ?member .
    ?member dbo:birthPlace ?birthPlace .
}

# Query 2: Landmark at Elevation of Award for Commander in Battle of Chishui River
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?landmark WHERE {
    ?battle rdf:type dbo:MilitaryConflict ;
            foaf:name ""Battle of Chishui River"" .
    ?commander dbo:participatedIn ?battle ;
               dbo:receivedAward ?award .
    ?award dbo:elevation ?elevation .
    ?landmark dbo:elevation ?elevation .
}
```",5,5,6,3,2,3,2,20,0,0,1,0,0.0,0
345,17,test,"Give me the figure known as Stolz von Liechtenstein and team of the person born, that is a soccer player and a soccer manager, on the birth date of Eiður Guðjohnsen.","SELECT ?result WHERE { <http://dbpedia.org/resource/Eiður_Guðjohnsen> <http://dbpedia.org/ontology/birthDate> ?v0 . ?result <http://dbpedia.org/property/nickname> ""Stolz von Liechtenstein""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v3 <http://dbpedia.org/ontology/birthDate> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?result <http://dbpedia.org/ontology/manager> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?stolz ?team WHERE {
  # Step 1: Get Eiður Guðjohnsen's birth date
  VALUES (?eiðurBirthDate) { 
    SELECT ?birthDate WHERE {
      dbr:Eiður_Guðjohnsen dbo:birthday ?birthDate .
    }
  }

  # Step 2: Identify Stolz von Liechtenstein as a soccer player and manager
  ?stolz dbo:nationality dbr:Liechtenstein ;
         rdfs:label ""Stolz von Liechtenstein""@en ;
         dbo:occupation dbr:Soccer_player ;
         dbo:occupation dbr:Soccer_manager .

  # Step 3: Find the team associated with Stolz von Liechtenstein on Eiður Guðjohnsen's birth date
  ?stolz dbp:team ?team .
  
  FILTER (?stolz.dbp:startDate <= ?eiðurBirthDate && 
          (?stolz.dbp:endDate >= ?eiðurBirthDate || NOT EXISTS { ?stolz dbp:endDate . }))
}
```",4,6,5,3,2,3,2,20,0,0,1,0,0.0,0
64,9,test,"Give me the entity in the region, that is a country, of Central European Time and alma mater of the person decedent, that is a writer, at Sremska Kamenica.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . ?result <http://dbpedia.org/ontology/country> ?v3 . ?v1 <http://dbpedia.org/ontology/almaMater> ?result . ?v1 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Sremska_Kamenica> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?country WHERE {
  # Find countries in the Central European Time zone
  ?country dbo:timeZone ?timezone .
  FILTER (str(?timezone) = ""Central European Time"")

  # Find writers who have an alma mater in these countries and died at Sremska Kamenica
  ?writer a dbo:Writer ;
          foaf:almaMater ?university ;
          dbo:deathPlace ?deathPlace .
  
  FILTER (str(?deathPlace) = ""Sremska Kamenica"") .

  # Ensure the alma mater is in one of these countries
  ?university dbp:country ?country .
}
```",4,6,5,2,2,2,2,9,0,0,1,0,0.0,0
9,34,test,"Give me the figure known as QUB and alma mater of the mayor, that is a politician, of the entity, that is an organisation, in Belfast.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/almaMater> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://dbpedia.org/property/leader> ?v1 . ?v2 <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Belfast> . ?result <http://dbpedia.org/property/nickname> ""QUB""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?qub ?mayor WHERE {
  # Find QUB
  dbr:Queen's_University_Belfast a dbo:EducationalInstitution ;
                                 rdfs:label ""QUB""@en .

  # Find the mayor who is a politician and studied at QUB
  ?mayor dbo:almaMater dbr:Queen's_University_Belfast ;
         dbo:positionHeld ?position ;
         dbo:politicalParty ?party .
  
  # Ensure the position is related to an organization in Belfast
  ?position dbp:location dbr:Belfast .

  # Filter to ensure the mayor is a politician
  FILTER EXISTS { ?mayor dbo:occupation dbr:Politician }

  # Return QUB and the mayor
  BIND(dbr:Queen's_University_Belfast AS ?qub)
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
701,37,test,Give me the parent of the child of the child of Seti I and spouse of Ramesses II.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/child> ?v3 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seti_I> . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Ramesses_II> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT DISTINCT ?parent
WHERE {
  # Step 1: Find Seti I's children
  ?childSetiI dbo:spouse* <http://dbpedia.org/resource/Seti_I> .
  
  # Step 2: Find the grandchildren of Seti I (children of Seti I's children)
  ?grandChild dbo:parent ?childSetiI .

  # Step 3: Identify Ramesses II's spouse
  ?spouseRamessesII dbo:spouse <http://dbpedia.org/resource/Ramesses_II> .
  
  # Step 4: Find the parent of Seti I's grandchild (which is a child of Seti I's child)
  ?parent dbo:child ?grandChild .

  # Step 5: Check if this parent is also Ramesses II's spouse
  FILTER (?parent = ?spouseRamessesII)
}
```",4,4,5,3,2,3,3,71,0,0,2,0,0.0,0
356,17,test,"Give me the team of the native, that is a soccer player and a soccer manager, of the birth place, that is English and a settlement, of Gary Williams (footballer, born 1960) and player in 2015 Sacramento Republic FC season.","SELECT ?result WHERE { <http://dbpedia.org/resource/2015_Sacramento_Republic_FC_season> <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/Gary_Williams_(footballer,_born_1960)> <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v3 <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/manager> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?team WHERE {
  # Find Gary Williams' birthplace
  dbr:Gary_Williams_(footballer,_born_1960) dbo:nationality dbr:England ;
                                         dbo:birthPlace ?birthPlace .

  FILTER (isLiteral(?birthPlace)) .
  
  # Find natives of this place who are soccer players and managers
  ?person dbo:nationality dbr:England ;
          dbo:birthPlace ?birthPlace ;
          dbo:occupation ?occupation1, ?occupation2 .
  
  VALUES (?occupation1 ?occupation2) {
    (dbr:Soccer_player dbr:Soccer_manager)
  }
  
  # Check involvement with Sacramento Republic FC in 2015
  OPTIONAL { 
    ?person dbp:teamInSeason ""Sacramento_Republic_FC""@en ;
            dbp:season ""2015""@en .
  }

  FILTER EXISTS {
    ?person dbp:teamInSeason ""Sacramento_Republic_FC""@en ;
            dbp:season ""2015""@en
  }
  
  # Retrieve the team they are associated with
  ?person dbo:currentTeam ?team .
}
```",4,8,5,3,2,3,2,20,0,0,1,0,0.0,0
161,38,test,"Give me the commander in the force, that is an event, of Emilio Mola and military force of the force, that is a societal event and a military conflict, of Francisco Largo Caballero.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Emilio_Mola> . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  ?event dbo:commander ?commander .
  ?event dbo:participantEmilioMola dbr:Emilio_Mola .
  
  ?force dbo:partOf ?event .
  ?societalEvent dbo:militaryForce ?force .
  ?societalEvent dbo:participantFranciscoLargoCaballero dbr:Francisco_Largo_Caballero .

}
```",4,7,5,2,2,3,3,71,0,0,32,0,0.0,0
994,70,test,"Give me the band member of the person born, that is a musical artist, as the persona of Don Dokken and associated musical artist of the associated musical artist of Watchtower (band) and associated musical artist of the band member, that is a band and a group and an organisation, of the band, that is an organisation, of Fredrik Thordendal.",SELECT ?result WHERE { ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Watchtower_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v0 <http://dbpedia.org/property/birthName> ?v5 . <http://dbpedia.org/resource/Don_Dokken> <http://xmlns.com/foaf/0.1/givenName> ?v5 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Fredrik_Thordendal> . ?v6 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v6 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandMember
WHERE {
  # Don Dokken's band members
  ?dokkenBand dbo:member ?bandMember .
  FILTER EXISTS { ?dokkenBand dbr:Don_Dokken . }

  UNION

  # Associated artists of Watchtower's associated artists
  ?watchtowerAssociatedArtist dbo:associatedMusicalArtist ?artist1 .
  ?artist1 dbo:associatedMusicalArtist ?bandMember .
  FILTER EXISTS { ?watchtowerAssociatedArtist dbr:Watchtower_(band) . }

  UNION

  # Band members of Fredrik Thordendal's band
  ?thordendalBand dbo:member ?bandMember .
  FILTER EXISTS {
    ?thordendalBand dbo:type dbr:Musical_band ;
                    dbo:member dbr:Fredrik_Thordendal .
  }
}
```",8,13,9,3,3,3,3,71,0,0,1,0,0.0,0
54,38,test,"Give me the parent of the child of Narapati I of Ava and predecessor of the child, that is an office holder and a royalty, of Thihapate of Mohnyin.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Narapati_I_of_Ava> . ?result <http://dbpedia.org/ontology/successor> ?v2 . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Thihapate_of_Mohnyin> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person WHERE {
  # Narapati I of Ava's child
  ?narapatiI a dbo:Monarch ;
             dbo:spouse ?spouseNarapatiI .
  ?childNarapatiI dbo:parent ?narapatiI .

  # Predecessor of Narapati I's child
  ?predecessor dbo:successor ?childNarapatiI .

  # Thihapate of Mohnyin's child
  ?thihapate a dbo:Monarch ;
             dbo:spouse ?spouseThihapate .
  ?childThihapate dbo:parent ?thihapate .

  # Parent of Thihapate's child
  ?parentChildThihapate dbo:child ?childThihapate .

  # Match the conditions
  FILTER (?predecessor = ?parentChildThihapate)
  FILTER EXISTS { ?person dbo:officeHolder true . }
  FILTER EXISTS { ?person dbo:royalty true . }

  BIND(?predecessor AS ?person)
}
```",4,6,5,2,2,3,3,71,0,0,1,0,0.0,0
404,52,test,"Give me the child of Ernest Augustus, Crown Prince of Hanover and parent of the child, that is a royalty, of Ernest Augustus, Duke of Brunswick and spouse of the person born, that is a royalty, as the birth name of Princess Victoria Louise of Prussia.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/birthName> ?v3 . ?result <http://dbpedia.org/ontology/child> ?v5 . <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/ontology/child> ?v5 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ernest_Augustus,_Crown_Prince_of_Hanover> . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/property/birthName> ?v3 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?child ?parent ?spouse WHERE {
  # Ernest Augustus, Crown Prince of Hanover and his child
  dbr:Ernest_Augustus,_Crown_Prince_of_Hanover dbo:child ?child .
  
  # The child is royalty
  ?child a dbo:Monarch .

  # Parent of the child who is also royalty
  ?parent dbo:spouse ?child .
  ?parent a dbo:Monarch .

  # Princess Victoria Louise of Prussia's birth name
  dbr:Princess_Victoria_Louise_of_Prussia foaf:name ?birthName .

  # Spouse of the parent with the same birth name as Princess Victoria Louise of Prussia
  ?spouse foaf:name ?birthName .
  
  # Ernest Augustus, Duke of Brunswick and his spouse
  dbr:Ernest_Augustus,_Duke_of_Brunswick dbo:spouse ?spouse .

}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
232,55,test,"Give me the actor of the claim to fame, that is a film and a military conflict, of Sean Pertwee and child of the person born as John Devon Roland Pertwee and native of the residence, that is a settlement and British, of Sylvie Bermann.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/birthName> ""John Devon Roland Pertwee""@en . ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Sean_Pertwee> <http://dbpedia.org/ontology/knownFor> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v5 <http://dbpedia.org/ontology/starring> ?result . ?v3 <http://dbpedia.org/ontology/child> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Sylvie_Bermann> <http://dbpedia.org/property/residence> ?v2 . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?actor WHERE {
  # Sean Pertwee's notable works (films and military conflicts)
  ?work dbo:performer dbr:Sean_Pertwee .
  FILTER (
    EXISTS { ?work a dbo:Film . } ||
    EXISTS { ?work a dbo:MilitaryConflict . }
  )

  # Sean Pertwee's parent
  dbr:Sean_Pertwee dbo:parent dbr:John_Devon_Roland_Pertwee .

  # Sylvie Bermann's residence that is a British settlement
  ?residence dbp:nativeOf dbr:Sylvie_Bermann .
  FILTER EXISTS { ?residence a dbo:Settlement . }
  FILTER EXISTS { ?residence dbo:country dbr:United_Kingdom . }

  # Actor associated with the conditions
  ?work dbo:performer ?actor .
}
```",6,10,7,2,3,3,3,71,0,0,1,0,0.0,0
16,52,test,Give me the professional in the profession of Satomi Ishihara and spouse of the person born as the birth name of Ted McGinley and person born as Georgeanne Marie Rice.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Georgeanne Marie Rice""@en . ?result <http://dbpedia.org/property/occupation> ?v5 . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Satomi_Ishihara> <http://dbpedia.org/property/occupation> ?v5 . ?v2 <http://dbpedia.org/property/birthName> ?v3 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?professional WHERE {
  # Satomi Ishihara's profession
  ?satomiIshihara dbo:profession ?profession .

  # Ted McGinley's birth name
  ?tedMcGinley foaf:name ""Ted McGinley""@en ;
               dbo:birthName ?birthName .

  # Georgeanne Marie Rice
  ?georgeanneMarieRice foaf:name ""Georgeanne Marie Rice""@en .

  # Spouse of Ted McGinley and Georgeanne Marie Rice
  ?spouse foaf:mbox ?email .
  ?spouse dbo:spouse ?tedMcGinley ;
          dbo:spouse ?georgeanneMarieRice .

  # Professional in Satomi Ishihara's profession who is the spouse
  ?professional dbo:profession ?profession ;
                foaf:mbox ?email .
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
9,52,test,"Give me the figure known as QUB and alma mater of the awardee of Royal Medal and alma mater of the mayor, that is a politician, of the entity, that is an organisation, in Belfast.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ""QUB""@en . ?v5 <http://dbpedia.org/ontology/almaMater> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://dbpedia.org/property/leader> ?v2 . ?v3 <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Belfast> . ?v2 <http://dbpedia.org/ontology/almaMater> ?result . ?v5 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Medal> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?almaMater WHERE {
  # Identify QUB
  VALUES ?qub { dbr:Queen's_University_Belfast }

  # Find awardee of Royal Medal who attended QUB
  ?awardee dbo:award ?royalMedal .
  ?royalMedal dbp:name ""Royal Medal"" .
  ?awardee dbo:almaMater ?qub .

  # Find mayor of an organization in Belfast who is a politician and attended QUB
  ?mayor dbo:position ?organizationPosition .
  ?organizationPosition dbo:location dbr:Belfast .
  ?mayor rdf:type dbo:Politician .
  ?mayor dbo:almaMater ?qub .

  # Ensure both individuals share the same alma mater
  BIND(?qub AS ?almaMater)
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
666,19,test,"Give me the player in the manager, that is a sports manager, of 2016–17 Hull City A.F.C. season and figure known as the nickname of the reference, that is an organisation and a soccer club and a sports club, to England.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v0 <http://xmlns.com/foaf/0.1/name> ""England""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://dbpedia.org/ontology/team> ?result . ?result <http://dbpedia.org/property/nickname> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v0 <http://dbpedia.org/property/nickname> ?v4 . <http://dbpedia.org/resource/2016–17_Hull_City_A.F.C._season> <http://dbpedia.org/ontology/manager> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?managerName ?nickname WHERE {
  # Find the manager of Hull City A.F.C. for the 2016–17 season
  ?team dbo:manager ?manager .
  ?manager dbo:occupation dbr:Soccer_manager .
  
  # Ensure the team is Hull City A.F.C.
  ?team rdfs:label ""Hull City A.F.C.""@en .

  # Filter by the specific season (2016–17)
  ?team dbp:season ""2016–17""^^xsd:string .

  # Get the manager's name
  ?manager foaf:name ?managerName .
  
  # Find the nickname of Hull City A.F.C.
  ?team dbo:nickname ?nicknameEntity .
  ?nicknameEntity rdfs:label ?nickname .
  
  # Ensure the team is an organization, soccer club, and sports club in England
  ?team a dbo:Soccer_Club ;
        dbo:country dbr:England ;
        rdf:type dbo:Sports_Club .
}
```",5,9,6,3,2,3,2,20,0,0,2,0,0.0,0
659,55,test,"Give me the commander in the war, that is an event and a military conflict, of 1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish) and military force of the force, that is a societal event and an event and a military conflict, of Rutger Jan Schimmelpenninck and commander in the force of Arthur Wellesley, 1st Duke of Wellington.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v2 . <http://dbpedia.org/resource/1st_Light_Cavalry_Lancers_Regiment_of_the_Imperial_Guard_(Polish)> <http://dbpedia.org/ontology/battle> ?v5 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v5 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Arthur_Wellesley,_1st_Duke_of_Wellington> . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commander WHERE {
  # Find the war involving the 1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish)
  ?regiment a dbo:MilitaryUnit ;
            dbo:participatedIn ?war .
  FILTER (?regiment = dbr:1st_Light_Cavalry_Lancers_Regiment_of_the_Imperial_Guard_(Polish)) .

  # Find Rutger Jan Schimmelpenninck's military force and its commander
  ?schimmelpenninckForce a dbo:MilitaryUnit ;
                        dbo:commandedBy ?schimmelpenninckCommander .
  FILTER (?schimmelpenninckForce = dbr:Societal_event_and_military_conflict_of_Rutger_Jan_Schimmelpenninck) .

  # Find Arthur Wellesley's military force and its commander
  ?wellesleyForce a dbo:MilitaryUnit ;
                  dbo:commandedBy ?wellesleyCommander .
  FILTER (?wellesleyForce = dbr:Military_conflict_of_Arthur_Wellesley_1st_Duke_of_Wellington) .

  # Find the common commander in the war involving the regiment
  ?war dbo:commandedBy ?commander .

  # Ensure the commanders are the same across contexts
  FILTER (?commander = ?schimmelpenninckCommander && ?commander = ?wellesleyCommander)
}
```",6,11,7,2,3,3,3,71,0,0,15,0,0.0,0
488,31,test,"Give me the birth place of the commander in the war, that is a military conflict and an event and a societal event, of Saitō Hajime and death place of Tokugawa Ieyasu.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Saitō_Hajime> <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Tokugawa_Ieyasu> <http://dbpedia.org/ontology/deathPlace> ?result . ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?location WHERE {
  {
    # Query for Saitō Hajime's birthplace
    dbr:Saitō_Hajime dbo:birthPlace ?location .
    BIND(dbr:Saitō_Hajime AS ?person)
  }
  UNION
  {
    # Query for Tokugawa Ieyasu's death place
    dbr:Tokugawa_Ieyasu dbo:deathPlace ?location .
    BIND(dbr:Tokugawa_Ieyasu AS ?person)
  }
}
```",4,7,5,3,2,3,3,71,1,2,0,0.3333333333333333,1.0,0.5
391,56,test,"Give me the actor of The Departed and native of the figure known as Hub City and actor of the movie, that is a movie and a work and a television show, with the professional in .","SELECT ?result WHERE { <http://dbpedia.org/resource/The_Departed> <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://dbpedia.org/property/starring> ?v0 . ?v2 <http://dbpedia.org/property/nickname> ""Hub City""@en . ?v0 <http://dbpedia.org/property/occupation> """"@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://dbpedia.org/property/starring> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actor WHERE {
  # Find actors of ""The Departed""
  ?movie dbo:title ""The Departed""@en .
  ?movie dbo:starring ?actor .

  # Identify Hub City and its notable figures
  OPTIONAL { 
    ?city rdfs:label ""Hub City""@en .
    ?figure dbo:nativePlace ?city ;
            a dbo:Actor .
    FILTER(?figure = ?actor)
  }

  # Check if the actor has acted in both movies and television shows
  {
    SELECT DISTINCT ?actor WHERE {
      ?tvShow dbo:title ?title .
      ?tvShow dbo:starring ?actor .
    }
  } UNION {
    SELECT DISTINCT ?actor WHERE {
      ?movie dbo:title ?title .
      ?movie dbo:starring ?actor .
    }
  }

}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
981,17,test,"Give me the birth place of the person born, that is a beauty queen, as the author of Kamikaze Girls and entity in Indonesia.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BeautyQueen>. ?v3 <http://dbpedia.org/property/birthName> ?v0 . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Indonesia> . <http://dbpedia.org/resource/Kamikaze_Girls> <http://dbpedia.org/property/author> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace WHERE {
  ?person a dbo:Person ;
          foaf:name ""Ayu Utami""@en ;
          dbo:title ""Miss Indonesia""@en ;
          dbo:author dbr:Saman .
  ?person dbo:birthPlace ?birthPlace .
}
```",4,5,5,3,2,3,2,20,0,0,19,0,0.0,0
55,22,test,"Give me the band member of the producer, that is a band, of Used to Love Her and band member of the band member, that is a band and a group, of San Francisco Symphony.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/San_Francisco_Symphony> . <http://dbpedia.org/resource/Used_to_Love_Her> <http://dbpedia.org/ontology/producer> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandMember
WHERE {
  # Find producer of ""Used to Love Her""
  ?song dbo:title ""Used to Love Her"" .
  ?song dbo:producer ?producer .

  # Check if the producer is a band and get its members
  ?producer rdf:type dbo:Band .
  ?producer dbo:bandMember ?member1 .

  # Find which member is part of another band that includes someone in San Francisco Symphony
  ?member1 dbo:bandMember ?secondBand .
  ?secondBand rdf:type dbo:Band ;
              dbo:groupMember ?symphonyMember .
  
  # Check if the second band is also a group and find its members
  ?secondBand rdf:type dbo:MusicalGroup .

  ?symphonyMember dbo:memberOf dbr:San_Francisco_Symphony .

  # Get the member of this second band
  ?secondBand dbo:bandMember ?bandMember .
}
```",4,7,5,2,2,2,3,28,0,0,1,0,0.0,0
281,60,test,"Give me the war of the awardee of the award of Jonathon Band and war of the profession, that is a military unit, of the professional, that is an office holder and a politician, in New Zealand Army.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/occupation> ?v1 . ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/property/awards> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/New_Zealand_Army> . <http://dbpedia.org/resource/Jonathon_Band> <http://dbpedia.org/property/awards> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?war ?profession WHERE {
  # Find Jonathon Band's awards
  ?jonathonBand a dbo:Person ;
               foaf:name ""Jonathon Band"" .
  
  ?awardAwardedTo dbo:recipient ?jonathonBand ;
                  dbo:category ?awardCategory .

  # Find wars associated with the awardees of that award
  ?awardee dbo:award ?awardAwardedTo ;
          dbo:militaryConflict ?war .

  # Confirm Jonathon Band's profession as a military unit and his roles
  ?jonathonBand dbo:occupation ?profession .
  
  FILTER EXISTS { 
    ?profession dbo:isPartOf dbr:New_Zealand_Army .
  }
  
  FILTER EXISTS {
    ?jonathonBand dbo:officeHolder true .
  }

  FILTER EXISTS {
    ?jonathonBand dbo:politician true .
  }
}
```",6,9,7,3,2,3,3,71,0,0,9,0,0.0,0
184,67,test,"Give me the child of the child of the parent, that is a royalty, of Archduke Ladislaus Philipp of Austria and parent of the child of the parent of Archduchess Margaret of Austria (born 1925) and parent of Géza von Habsburg.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v3 . ?v6 <http://dbpedia.org/property/father> ?v0 . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Margaret_of_Austria_(born_1925)> . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Géza_von_Habsburg> . ?v3 <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/property/father> ?v6 . <http://dbpedia.org/resource/Archduke_Ladislaus_Philipp_of_Austria> <http://dbpedia.org/ontology/parent> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?individual WHERE {
  # Archduke Ladislaus Philipp of Austria's parent and sibling who is royalty
  ?ladislausParent dbo:child ?ladislaus .
  FILTER(STR(?ladislaus) = ""Archduke_Ladislaus_Philipp_of_Austria"") .
  
  ?ladislausSibling dbo:parent ?ladislausParent .
  ?ladislausSibling dbo:child ?royaltyChild .
  ?royaltyChild rdf:type dbo:Monarch .

  # Archduchess Margaret of Austria's parent and sibling who is a parent to Géza von Habsburg
  ?margaretParent dbo:child ?margaret .
  FILTER(STR(?margaret) = ""Archduchess_Margaret_of_Austria"") .
  
  ?sibling dbo:parent ?margaretParent .
  ?sibling dbo:child ?geza .
  FILTER(STR(?geza) = ""Géza_von_Habsburg"") .

  # Find the intersection of these two conditions
  ?royaltyChild rdf:type dbo:Monarch .
  ?individual owl:sameAs ?royaltyChild .
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
54,45,test,"Give me the parent of Thado Minsaw of Prome and child of Thinkhaya of Pagan and predecessor of the child, that is an office holder and a royalty, of the reference to Thihapate of Mohnyin.","SELECT ?result WHERE { <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> ?v1 . ?v1 <http://dbpedia.org/property/father> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Thihapate of Mohnyin""@en . <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity WHERE {
  # Find the parent of Thado Minsaw of Prome
  ?parent dbo:child dbr:Thado_Minsaw_of_Prome .
  
  # Find the child of Thinkhaya of Pagan
  ?child dbo:parent dbr:Thinkhaya_of_Pagan .

  # Intersection where the parent is a predecessor to the child
  ?parent dbo:predecessor ?entity .
  ?entity dbo:successor ?child .

  # Ensure the entity is an office holder and royalty
  ?entity rdf:type dbo:OfficeHolder ;
          rdf:type dbo:Royalty .

  # Reference to Thihapate of Mohnyin
  ?entity dbo:predecessor dbr:Thihapate_of_Mohnyin .
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
959,59,test,"Give me the member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of the person born in 1958 and native of the residence, that is a country, of the leader, that is a politician, of 2010 Japanese House of Councillors election.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/birthYear> ""1958""^^<http://www.w3.org/2001/XMLSchema#gYear> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v3 <http://dbpedia.org/ontology/almaMater> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/birthPlace> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?v0 <http://dbpedia.org/property/residence> ?v4 . ?result <http://dbpedia.org/ontology/team> ?v1 . <http://dbpedia.org/resource/2010_Japanese_House_of_Councillors_election> <http://dbpedia.org/property/leader> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?almaMater WHERE {
  ?person dbo:birthYear ""1958""^^xsd:gYear .
  ?person dbo:nationality dbr:Japan .
  ?person dbo:almaMater ?almaMater .

  FILTER EXISTS { ?almaMater a dbo:EducationalOrganization . }
  FILTER EXISTS { ?almaMater a dbo:University . }
  FILTER EXISTS { ?almaMater dbo:country dbr:Japan . }

  ?person dbo:residence ?residence .
  ?residence a dbo:Country .

  ?leader dbo:electedAs dbr:2010_Japanese_House_of_Councillors_election .
  ?leader dbo:nationality ?nationality .
  ?leader dbo:birthPlace ?birthPlace .
  ?person dbo:birthPlace ?birthPlace .
}
```",6,12,7,3,2,3,3,71,0,0,167,0,0.0,0
498,9,test,"Give me the band of the band, that is an organisation and a band, of Solace of Requiem and band of the member, that is an artist, of Mortician (band).",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. <http://dbpedia.org/resource/Mortician_(band)> <http://dbpedia.org/ontology/bandMember> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Solace_of_Requiem> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandOfSolace ?memberBand 
WHERE {
  # Find the band that includes Solace of Requiem and is both an organization and a band
  ?solace dbr:Solace_of_Requiem .
  ?solace dbo:band ?bandOfSolace .
  ?bandOfSolace rdf:type dbo:MusicalBand ;
                dbo:organization ?org .

  # Find members of Mortician who are artists
  ?morticianMember dbr:Mortician (band) ;
                   dbo:member ?artist .
  ?artist rdf:type dbo:Artist .

  # Find the band associated with each member
  ?artist dbo:band ?memberBand .
}
```",4,7,5,2,2,2,2,9,0,0,1,0,0.0,0
547,62,test,Give me the resting place of the child of the child of William Haliburton and resting place of Alan Cunningham and resting place of the actor of the show with Emily Richard.,"SELECT ?result WHERE { ?v6 <http://dbpedia.org/ontology/restingPlace> ?result . ?v4 <http://dbpedia.org/property/father> ""William Haliburton""@en . <http://dbpedia.org/resource/Alan_Cunningham> <http://dbpedia.org/ontology/restingPlace> ?result . ?v4 <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://dbpedia.org/ontology/restingPlace> ?result . ?v0 <http://dbpedia.org/property/starring> ?v6 . ?v0 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emily_Richard> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?grandchildRestingPlace ?alanCunninghamRestingPlace ?actorRestingPlace WHERE {
  # Resting place of the child of the child of William Haliburton
  {
    ?williamHaliburton dbo:child ?child .
    FILTER (str(?williamHaliburton) = ""William_Haliburton"")
    
    ?child dbo:child ?grandchild .
    
    ?grandchild dbo:restingPlace ?grandchildRestingPlace .
  }
  
  UNION
  
  # Resting place of Alan Cunningham
  {
    ?alanCunningham dbo:restingPlace ?alanCunninghamRestingPlace .
    FILTER (str(?alanCunningham) = ""Alan_Cunningham"")
  }
  
  UNION
  
  # Resting place of the actor of the show with Emily Richard
  {
    ?show dbo:actor ?actor .
    
    ?show dbo:starring dbr:Emily_Richard .
    
    ?actor dbo:restingPlace ?actorRestingPlace .
  }
}
```",7,7,8,3,3,3,3,71,0,0,1,0,0.0,0
251,26,test,"Give me the administration of Forza Italia (2013) and location of the war, that is a military conflict, of Louis François Félix Musnier and death place of the author of The Twelve Abbots of Challant.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/place> ?result . ?result <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Forza_Italia_(2013)> . <http://dbpedia.org/resource/The_Twelve_Abbots_of_Challant> <http://dbpedia.org/property/author> ?v1 . ?v1 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Louis_François_Félix_Musnier> <http://dbpedia.org/ontology/battle> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?administration ?warLocation ?deathPlace WHERE {
  # Administration of Forza Italia in 2013
  OPTIONAL {
    ?party a dbo:PoliticalParty ;
           rdfs:label ""Forza Italia""@en .
    ?office dbo:positionHeldBy ?person ;
            dbo:startDate ?start ;
            dbo:endDate ?end .
    FILTER (?start <= ""2013-12-31""^^xsd:date && (?end >= ""2013-01-01""^^xsd:date || NOT EXISTS { ?office dbo:endDate ?end }))
    BIND(""Forza Italia administration in 2013"" AS ?administration)
  }

  # Location of the war involving Louis François Félix Musnier
  OPTIONAL {
    ?musnier a dbo:Person ;
             rdfs:label ""Louis François Félix Musnier""@en .
    ?conflict dbo:participant ?musnier ;
              dbo:place ?warLocation .
    BIND(""War location for Louis François Félix Musnier"" AS ?administration)
  }

  # Death place of the author of The Twelve Abbots of Challant
  OPTIONAL {
    ?author a dbo:Person ;
            rdfs:label ""Boniface II, Marquis of Saluzzo""@en .
    ?work dbo:author ?author ;
          rdfs:label ""The Twelve Abbots of Challant""@en .
    ?author dbo:deathPlace ?deathPlace .
    BIND(""Death place of the author of The Twelve Abbots of Challant"" AS ?administration)
  }
}
```",5,6,6,2,3,2,3,28,0,0,1,0,0.0,0
92,28,test,"Give me the band member of the reference, that is an artist, to Nevermore and band of Joseph Michael and associated musical artist of Jim Sheppard.","SELECT ?result WHERE { ?v1 <http://xmlns.com/foaf/0.1/name> ""Nevermore""@en . ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Joseph_Michael> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . <http://dbpedia.org/resource/Jim_Sheppard> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandMember ?associatedBand ?musicalArtist
WHERE {
  # Find band members of Nevermore who are artists
  ?bandMember dbo:bandMember dbr:Nevermore .
  ?bandMember a dbo:MusicalArtist .

  OPTIONAL {
    # Find the band associated with Joseph Michael
    ?josephMichael dbo:associatedBand ?associatedBand .
    FILTER (str(?josephMichael) = ""Joseph_Michael"")
  }

  OPTIONAL {
    # Find musical artists associated with Jim Sheppard
    ?jimSheppard dbo:musicalArtist ?musicalArtist .
    FILTER (str(?jimSheppard) = ""Jim_Sheppard"")
  }
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
488,54,test,"Give me the death place of the father, that is a politician, of the father, that is an office holder, of Matsudaira Tadamasa and administration of Emperor Go-Yōzei and birth place of the commander in Boshin War.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Matsudaira_Tadamasa> <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Boshin_War> <http://dbpedia.org/ontology/commander> ?v3 . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/father> ?v5 . ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Emperor_Go-Yōzei> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?deathPlace ?birthPlace
WHERE {
  # Matsudaira Tadamasa's father who was an office holder
  ?matsudairaTadamasa dbo:child ?father1 .
  ?father1 dbo:occupation ""Office Holder"" .

  # Father's father (Matsudaira Tadamasa's grandfather) who was a politician
  ?father1 dbo:child ?grandfather .
  ?grandfather dbo:occupation ""Politician"" .

  # Death place of Matsudaira Tadamasa's grandfather
  ?grandfather dbp:deathPlace ?deathPlace .

  # Administration during Emperor Go-Yōzei's reign (contextual information)
  ?emperorGoYozei dbo:reignStart ?start .
  ?emperorGoYozei dbo:reignEnd ?end .
  FILTER (?emperorGoYozei = dbpedia:Emperor_Go-Yozei) .

  # Commander in the Boshin War
  ?boshinWar dbo:commander ?commander .
  ?commander dbp:birthPlace ?birthPlace .
  FILTER (STRSTARTS(STR(?boshinWar), ""http://dbpedia.org/resource/Boshin_War"")) .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
391,50,test,"Give me the actor of the claim to fame, that is a work, of the spouse of Sherry Hormann and actor of the movie, that is a movie and a work and a television show, with Roz Ryan.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Roz_Ryan> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v3 <http://dbpedia.org/property/starring> ?result . ?v4 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Sherry_Hormann> <http://dbpedia.org/ontology/spouse> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v0 <http://dbpedia.org/ontology/knownFor> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  # Step 1: Find Sherry Hormann's spouse and their claim to fame
  dbr:Sherry_Hormann dbo:spouse ?spouse .
  
  ?spouse dbo:notableWork ?claimToFame .
  ?claimToFame a dbo:Film ; dbo:starring ?actor .

  # Step 2: Find the movie that is both a movie and TV show with Roz Ryan
  ?movie a dbo:Film, dbo:TelevisionShow ;
         dbo:starring dbr:Roz_Ryan .
  
  # Ensure the actor from the claim to fame work also acted in this dual-format movie
  ?actor dbo:actedIn ?movie .
}
```",5,9,6,3,2,3,3,71,0,0,1,0,0.0,0
54,50,test,"Give me the parent of the child of the parent of Thado Minsaw of Prome and predecessor of the child, that is an office holder and a royalty, of Thihapate of Mohnyin.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/successor> ?v3 . ?v4 <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Thihapate_of_Mohnyin> . ?v4 <http://dbpedia.org/property/father> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?parentOfChild
WHERE {
  ?thadoMinsaw dbo:name ""Thado Minsaw""@en .
  ?thadoMinsaw dbo:placeOfBirth ?prome .
  
  ?parentOfThadoMinsaw dbo:child ?thadoMinsaw .
  ?parentOfThadoMinsaw dbo:parent ?grandParent .

  ?childOfGrandParent dbo:parent ?grandParent .
  ?predecessor dbo:successor ?childOfGrandParent .
  
  ?predecessor rdf:type/rdfs:subClassOf* dbo:OfficeHolder ;
               rdf:type/rdfs:subClassOf* dbo:Royalty .
  
  ?thihapate dbo:name ""Thihapate""@en .
  ?thihapate dbo:placeOfBirth ?mohnyin .

  FILTER(?predecessor != ?childOfGrandParent)
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
251,22,test,"Give me the administration of the ruling party, that is a political party and an organisation, in Sicily and location of the war, that is a military conflict, of Louis François Félix Musnier.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Sicily> <http://dbpedia.org/property/leaderParty> ?v3 . ?v2 <http://dbpedia.org/ontology/place> ?result . <http://dbpedia.org/resource/Louis_François_Félix_Musnier> <http://dbpedia.org/ontology/battle> ?v2 . ?result <http://dbpedia.org/property/leaderParty> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?administration ?warLocation
WHERE {
  # Find the ruling party's administration in Sicily
  ?party a dbo:PoliticalParty ;
         dbo:headquarters ?location .
  FILTER (str(?location) = ""Sicily"" || str(?location) = ""dbr:Sicily"")

  ?party dbo:administration ?administration .

  # Find Louis François Félix Musnier's involvement in a war
  dbr:Louis_François_Félix_Musnier dbo:militaryConflict ?war .
  
  ?war dbo:location ?warLocation .
}
```",4,7,5,2,2,2,3,28,0,0,1,0,0.0,0
328,65,test,"Give me the awardee of the award of Bruce Fraser, 1st Baron Fraser of North Cape and leader of the office, that is a government agency, of Joseph Stalin and commander in the force of the person decedent at Budapest.","SELECT ?result WHERE { ?v6 <http://dbpedia.org/ontology/commander> ?result . ?v6 <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Budapest> . <http://dbpedia.org/resource/Joseph_Stalin> <http://dbpedia.org/property/office> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v3 <http://dbpedia.org/ontology/leader> ?result . ?result <http://dbpedia.org/property/awards> ?v4 . <http://dbpedia.org/resource/Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape> <http://dbpedia.org/property/awards> ?v4 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?award ?agency ?force WHERE {
  ?person rdfs:label ""Bruce Fraser, 1st Baron Fraser of North Cape""@en .
  
  # Find awards associated with Bruce Fraser
  ?person dbo:award ?award .

  # Check if he was a leader in an agency related to Joseph Stalin's government
  OPTIONAL { 
    ?agency dbo:leader ?person ;
            dbp:government ""Soviet Union"" .
  }

  # Check for command role at Budapest
  OPTIONAL {
    ?force dbo:commanderInForce ?person ;
           dbp:location ""Budapest""@en .
  }
}
```",7,8,8,3,3,3,3,71,0,9,1,0.0,0.0,0
251,23,test,"Give me the location of the war, that is a military conflict, of Louis François Félix Musnier and death place of the author of The Twelve Abbots of Challant.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Louis_François_Félix_Musnier> <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/The_Twelve_Abbots_of_Challant> <http://dbpedia.org/property/author> ?v1 . ?v2 <http://dbpedia.org/ontology/place> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?warLocation ?authorDeathPlace WHERE {
  # Find the war involving Louis François Félix Musnier
  ?musnier a dbo:MilitaryPerson ;
           foaf:name ""Louis François Félix Musnier"" .
  
  ?musnier dbo:participant ?war .
  ?war dbo:location ?warLocation .

  # Find the author of ""The Twelve Abbots of Challant""
  dbr:The_Twelve_Abbots_of_Challant dbo:author ?author .
  ?author dbo:deathPlace ?authorDeathPlace .
}
```",4,5,5,2,2,2,3,28,0,0,2,0,0.0,0
528,66,test,Give me the war of the military force of Battle of Pisagua and force of the person born as the birth name of Narciso Campero and war of the commander in Battle of La Rinconada de Ate.,SELECT ?result WHERE { <http://dbpedia.org/resource/Battle_of_La_Rinconada_de_Ate> <http://dbpedia.org/ontology/commander> ?v6 . ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/property/birthName> ?v1 . ?v6 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/commander> ?v2 . ?v3 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Pisagua> . <http://dbpedia.org/resource/Narciso_Campero> <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?pisaguaMilitaryForce ?camperoBirthName ?camperoMilitaryForce ?rinconadaWar ?rinconadaCommanderMilitaryForce
WHERE {
  # Battle of Pisagua military force
  ?battle dbo:name ""Battle of Pisagua""@en .
  ?battle dbo:militaryForce ?pisaguaMilitaryForce .

  # Narciso Campero's birth name and military force
  ?person foaf:name ""Narciso Campero""@en ;
          foaf:givenName ?camperoBirthName .
  ?person dbo:militaryForce ?camperoMilitaryForce .

  # Battle of La Rinconada de Ate war and commander's military force
  ?battle2 dbo:name ""Battle of La Rinconada de Ate""@en .
  ?battle2 dbo:partOf ?rinconadaWar .
  ?battle2 dbo:commander ?commander .
  ?commander dbo:militaryForce ?rinconadaCommanderMilitaryForce .
}
```",7,7,8,3,3,3,3,71,0,0,2,0,0.0,0
547,66,test,Give me the resting place of the awardee of the award of Gerald Graham and resting place of the child of James Burton (property developer) and resting place of the actor of Enemy at the Door.,SELECT ?result WHERE { <http://dbpedia.org/resource/James_Burton_(property_developer)> <http://dbpedia.org/ontology/child> ?v3 . <http://dbpedia.org/resource/Enemy_at_the_Door> <http://dbpedia.org/property/starring> ?v6 . ?v2 <http://dbpedia.org/property/awards> ?v1 . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . ?v6 <http://dbpedia.org/ontology/restingPlace> ?result . ?v3 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Gerald_Graham> <http://dbpedia.org/property/awards> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?restingPlace
WHERE {
  # Resting place of the awardee of the award named after Gerald Graham
  {
    ?person dbo:award dbr:Gerald_Graham_Award .
    ?person dbo:deathPlace ?restingPlace .
  }
  
  UNION
  
  # Resting place of the child of James Burton (property developer)
  {
    ?jamesBurton a dbo:Person ;
                 foaf:name ""James Burton"" ;
                 dbo:occupation dbr/Property_developer .
    ?child dbo:parent ?jamesBurton ;
           dbo:deathPlace ?restingPlace .
  }
  
  UNION
  
  # Resting place of the actor in the film ""Enemy at the Door""
  {
    ?film a dbo:Film ;
          foaf:name ""Enemy at the Door"" .
    ?actor dbo:actedIn ?film ;
           dbo:deathPlace ?restingPlace .
  }
}
```",7,7,8,3,3,3,3,71,0,0,1,0,0.0,0
184,68,test,"Give me the parent of the native of the landmark at elevation, that is a settlement, of 96.0 and parent of the child of Archduke Joseph Francis of Austria and child of the child of the parent, that is a royalty, of Archduke Ladislaus Philipp of Austria.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/birthPlace> ?v5 . ?v5 <http://dbpedia.org/ontology/elevation> ""96.0""^^<http://www.w3.org/2001/XMLSchema#double> . ?result <http://dbpedia.org/ontology/child> ?v3 . ?result <http://dbpedia.org/ontology/child> ?v4 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Francis_of_Austria> . <http://dbpedia.org/resource/Archduke_Ladislaus_Philipp_of_Austria> <http://dbpedia.org/ontology/parent> ?v0 . ?v7 <http://dbpedia.org/property/father> ?v0 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/property/father> ?v7 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?parent
WHERE {
  # Step 1: Find landmark at elevation 96.0 that is a settlement
  ?landmark dbo:elevation ""96.0""^^xsd:float ;
            a dbo:Settlement .

  # Step 2: Find native of this landmark
  ?native foaf:nativePlace ?landmark .

  # Step 3: Find parent of this native
  ?parent1 dbo:child ?native .

  # Step 4: Identify Archduke Joseph Francis's child
  ?archduke_joseph a dbo:Person ;
                   foaf:name ""Archduke Joseph Francis of Austria"" .
  ?child_joseph dbo:child ?archduke_joseph .

  # Step 5: Find the grandchild (child of this child)
  ?grandchild dbo:child ?child_joseph .

  # Step 6: Identify parent of this grandchild
  ?parent2 dbo:child ?grandchild .

  # Step 7: Determine Archduke Ladislaus Philipp's royalty parent
  ?archduke_ladislaus a dbo:Person ;
                      foaf:name ""Archduke Ladislaus Philipp of Austria"" .
  ?royalty_parent dbo:child ?archduke_ladislaus ;
                  a dbo:Royalty .

  # Step 8: Find the child of this royalty parent
  ?child_royalty_parent dbo:child ?royalty_parent .

  # Step 9: Identify common parent
  FILTER (?parent1 = ?parent2)
  FILTER (?parent1 = ?child_royalty_parent)

}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
767,47,test,"Give me the alma mater of the administration of the reference to George Kilbon Nash and entity in the administration, that is a settlement, of Green.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/state> ?v2 . ?v2 <http://dbpedia.org/property/leaderParty> ""Green""@en . ?v4 <http://dbpedia.org/property/governor> ?v0 . ?v0 <http://xmlns.com/foaf/0.1/name> ""George Kilbon Nash""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v4 <http://dbpedia.org/ontology/almaMater> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?almaMater
WHERE {
  # Step 1: Identify George Kilbon Nash
  ?nash a dbo:Person ;
        foaf:name ""George Kilbon Nash""@en .

  # Step 2: Find his Alma Mater
  ?nash dbo:almaMater ?almaMaterNash .

  # Step 3: Identify the Administration Entity
  ?adminRole dbo:agent ?nash ;
             a dbo:GovernmentFunction .

  # Step 4: Find a Settlement Named Green
  ?greenSettlement a dbo:Settlement ;
                   foaf:name ""Green""@en .

  # Step 5: Link the Administration and the Settlement
  ?adminRole dbo:location ?greenSettlement .

  # Step 6: Extract Alma Mater of the Linked Entity
  ?linkedEntity dbo:agent ?adminRole ;
                dbo:almaMater ?almaMater .
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
92,58,test,"Give me the band of the person born as the birth name of Joseph Michael and associated musical artist of the person born, that is an artist, as Jim Sheppard and band member of Nevermore.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Nevermore> . ?v5 <http://dbpedia.org/property/birthName> ""Jim Sheppard""@en . ?result <http://dbpedia.org/ontology/bandMember> ?v2 . <http://dbpedia.org/resource/Joseph_Michael> <http://dbpedia.org/property/birthName> ?v1 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band1 ?band2 WHERE {
  # Find Joseph Michael's birth name and his associated band
  ?person1 a dbo:MusicalArtist ;
           foaf:name ""Joseph Michael"" ;
           dbo:birthName ?birthName .
  ?person1 dbo:memberOfBand ?band1 .

  # Find Jim Sheppard's associated musical artist
  ?person2 a dbo:MusicalArtist ;
           foaf:name ""Jim Sheppard"" .
  ?person2 dbo:associatedBandMember ?band2 .

  # Ensure the band is Nevermore for both individuals
  FILTER (?band1 = dbr:Nevermore && ?band2 = dbr:Nevermore)
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
959,22,test,Give me the member of University of Tsukuba and manager of the team of Takashi Sekizuka.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/University_of_Tsukuba> . ?v0 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Takashi_Sekizuka> . ?v0 <http://dbpedia.org/ontology/manager> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?manager WHERE {
  ?team dbp:member <http://dbpedia.org/resource/Takashi_Sekizuka> .
  ?manager dbp:manager ?team .
  ?person dbo:almaMater <http://dbpedia.org/resource/University_of_Tsukuba> .
  FILTER (?manager = ?person)
}
```",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
617,52,test,"Give me the parent of Nysa (wife of Pharnaces I of Pontus) and spouse of the child of Antiochus III the Great and child of the child, that is a royalty, of the successor, that is a royalty, of Antiochus II Theos.",SELECT ?result WHERE { <http://dbpedia.org/resource/Antiochus_III_the_Great> <http://dbpedia.org/ontology/child> ?v5 . ?v5 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/father> ?v2 . <http://dbpedia.org/resource/Antiochus_II_Theos> <http://dbpedia.org/ontology/successor> ?v3 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Nysa_(wife_of_Pharnaces_I_of_Pontus)> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/father> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent ?spouse WHERE {
  # Nysa (wife of Pharnaces I of Pontus)
  ?nysa a dbo:Person ;
        foaf:name ""Nysa""@en ;
        dbo:spouse ?pharnacesI .
  
  # Parent of Nysa
  ?parent dbo:child ?nysa .

  # Antiochus III the Great and his child
  ?antiochusIII a dbo:Person ;
                foaf:name ""Antiochus III""@en ;
                dbo:child ?childOfAntiochusIII .
  
  # Spouse of the child of Antiochus III
  ?spouse dbo:spouse ?childOfAntiochusIII .

  # Successor of Antiochus II Theos who is royalty
  ?antiochusII a dbo:Person ;
               foaf:name ""Antiochus II""@en .
  
  ?successor dbo:succeededBy ?antiochusII ;
             a dbo:Monarch ;
             dbo:child ?royalChildOfSuccessor .

  # Child of the royal child of the successor
  ?grandchild dbo:parent ?royalChildOfSuccessor ;
              a dbo:Person .
  
  FILTER (?spouse = ?grandchild)
}
```",6,8,7,3,3,3,3,71,0,0,2,0,0.0,0
92,52,test,"Give me the band member of the reference, that is an artist, to the name of Nevermore (2006 film) and associated musical artist of the person born, that is an artist, as Jim Sheppard and band of Joseph Michael.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Joseph_Michael> . ?v5 <http://dbpedia.org/property/birthName> ""Jim Sheppard""@en . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://xmlns.com/foaf/0.1/name> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Nevermore_(2006_film)> <http://xmlns.com/foaf/0.1/name> ?v3 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandMemberArtist ?associatedMusicalArtist ?jimSheppardBand ?josephMichaelBand
WHERE {
  # Find band members associated with Nevermore (2006 film)
  ?film dbr:Nevermore_(2006_film) .
  
  # Ensure the band member is an artist
  ?bandMember dbo:memberOf ?film .
  ?bandMember dbo:occupation dbr:Musician .

  BIND(?bandMember AS ?bandMemberArtist)

  # Find associated musical artist of Jim Sheppard
  ?jimSheppard dbr:Jim_Sheppard_(musician) .
  ?associatedMusicalArtist dbo:memberOf ?jimBand .
  ?jimSheppard dbo:memberOf ?jimBand .

  BIND(?associatedMusicalArtist AS ?associatedMusicalArtist)

  # Find band of Joseph Michael
  ?josephMichael dbr:Joseph_Michael_(musician) .
  ?josephMichaelBand dbo:memberOf ?band .
  ?josephMichael dbo:memberOf ?band .

  BIND(?josephMichaelBand AS ?josephMichaelBand)
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
747,51,test,Give me the band of the person born as the persona of Shèna and band of the writer of Apollo (Hardwell song).,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Apollo_(Hardwell_song)> <http://dbpedia.org/property/writer> ?v4 . <http://dbpedia.org/resource/Shèna> <http://xmlns.com/foaf/0.1/givenName> ?v1 . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?band1 ?band2 WHERE {
  # Marina Diamandis, known as Shèna
  dbr:Marina_and_the_Diamonds dbo:leadArtist dbr:Marina_Diamandis .
  
  # Band of Marina Diamandis
  OPTIONAL { dbr:Marina_and_the_Diamonds dbo:bandName ?band1 . }
  
  # Writer of Apollo (Hardwell song)
  dbr:Apollo_(song) dbo:lyricist ?writer .

  # Band associated with the writer
  OPTIONAL { ?writer dbo:associatedBand ?band2 . }
}
```",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
9,53,test,"Give me the figure known as the nickname of Queen's University Belfast and alma mater of Allen Hill (scientist) and alma mater of the mayor, that is a politician, of the entity, that is an organisation, in Belfast.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/leader> ?v2 . <http://dbpedia.org/resource/Allen_Hill_(scientist)> <http://dbpedia.org/ontology/almaMater> ?result . ?v3 <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Belfast> . ?v2 <http://dbpedia.org/ontology/almaMater> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Queen's_University_Belfast> <http://dbpedia.org/property/nickname> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/property/nickname> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?nickname WHERE {
  # Get the nickname of Queen's University Belfast
  dbr:Queen's_University_Belfast dbo:nickname ?nickname .

  OPTIONAL {
    # Check if Allen Hill is an alumnus
    dbr:Allen_Hill dbo:almaMater dbr:Queen's_University_Belfast .
  }

  OPTIONAL {
    # Find organizations in Belfast with a mayor who is a politician
    ?organization dbo:location dbr:Belfast ;
                  dbo:mayor ?mayor .

    ?mayor rdf:type dbo:Politician ;
           dbo:almaMater dbr:Queen's_University_Belfast .
  }
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
701,63,test,Give me the parent of the child of the spouse of Amun-her-khepeshef and parent of the child of Ramesses II and spouse of the father of Merneptah.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?result <http://dbpedia.org/ontology/child> ?v6 . ?v6 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ramesses_II> . ?v4 <http://dbpedia.org/ontology/child> ?v3 . <http://dbpedia.org/resource/Amun-her-khepeshef> <http://dbpedia.org/ontology/spouse> ?v4 . ?v3 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Merneptah> <http://dbpedia.org/property/father> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT DISTINCT ?result WHERE {
  # Step 1: Find the spouse of Amun-her-khepeshef
  ?spouseAmun a dbo:Person ;
              dbo:spouse ?amunHerKhepeshef .
  
  FILTER(?amunHerKhepeshef = dbpedia:Amun_her_khepeshef) .

  # Step 2: Find the child of that spouse
  ?child1 dbo:parent ?spouseAmun ;
         a dbo:Person .

  # Step 3: Determine the parent of this child (should include the spouse)
  ?parent1 dbo:child ?child1 .
  
  # Step 4: Identify the spouse of Ramesses II
  ?spouseRamesses a dbo:Person ;
                  dbo:spouse ?ramessesII .

  FILTER(?ramessesII = dbpedia:Ramses_II) .

  # Step 5: Find the child of that spouse
  ?child2 dbo:parent ?spouseRamesses ;
         a dbo:Person .

  # Step 6: Determine the parent of this child (should include the spouse)
  ?parent2 dbo:child ?child2 .
  
  # Step 7: Identify the father of Merneptah
  ?fatherMerneptah dbo:child dbpedia:Merneptah ;
                   a dbo:Person .

  # Step 8: Find the spouse of that father
  ?spouseFatherMerneptah dbo:spouse ?fatherMerneptah .
  
  # Combine results
  {
    VALUES (?result) { ?parent1 ?parent2 }
  } UNION {
    VALUES (?result) { ?spouseFatherMerneptah }
  }
}
```",7,7,8,3,3,3,3,71,0,0,1,0,0.0,0
378,58,test,"Give me the war of the commander in Peninsular War and war of Carl Pontus Gahn and claim to fame of the commander in the war, that is a military conflict and a societal event and an event, of Thomas Trigge.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Peninsular_War> <http://dbpedia.org/ontology/commander> ?v5 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Thomas_Trigge> <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v5 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/ontology/knownFor> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?commander ?warOfGahn ?claimToFame
WHERE {
  # Find the commander of the Peninsular War
  ?peninsularWar dbo:name ""Peninsular War""@en .
  ?peninsularWar dbo:commander ?commander .

  # Find wars involving Carl Pontus Gahn
  ?warOfGahn dbo:participatedIn ?carlPontusGahn .
  ?carlPontusGahn rdfs:label ""Carl Pontus Gahn""@en .

  # Find the claim to fame of the commander, which is a military conflict and societal event
  ?commander dbo:notableFor ?claimToFame .
  ?claimToFame rdf:type dbo:MilitaryConflict ;
               dbo:societalEvent true .

  # Additional condition for Thomas Trigge's events
  OPTIONAL {
    ?thomasTrigge rdfs:label ""Thomas Trigge""@en .
    ?event dbo:relatedTo ?thomasTrigge .
    FILTER (?claimToFame = ?event)
  }
}
```",6,9,7,3,3,3,3,71,0,0,2,0,0.0,0
427,68,test,"Give me the party of the father of the alumnus of Massachusetts Institute of Technology and reference to the name of the party of Michele Pinto and party of the person born, that is an office holder and a politician, as Romano Antonio Prodi.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/birthName> ""Romano Antonio Prodi""@en . ?v5 <http://xmlns.com/foaf/0.1/name> ?v4 . ?result <http://xmlns.com/foaf/0.1/name> ?v4 . <http://dbpedia.org/resource/Michele_Pinto> <http://dbpedia.org/ontology/party> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/property/father> ?v7 . ?v7 <http://dbpedia.org/ontology/party> ?result . ?v0 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Massachusetts_Institute_of_Technology> . ?v3 <http://dbpedia.org/ontology/party> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT DISTINCT ?fatherParty ?michelePintoParty ?romanoProdiParty
WHERE {
  # Find MIT alumni and their fathers
  ?alumnus dbo:almaMater dbp:Mit.
  ?alumnus dbo:father ?father.
  
  OPTIONAL { 
    ?father dbo:partyAffiliation ?fatherParty.
  }
  
  # Party of Michele Pinto
  dbp:Michele_Pinto dbo:partyAffiliation ?michelePintoParty.

  # Party of Romano Prodi
  dbp:Romano_Prodi dbo:partyAffiliation ?romanoProdiParty.
}
```",8,10,9,3,3,3,3,71,0,0,2,0,0.0,0
391,61,test,"Give me the actor of the movie, that is a movie and a work and a television show, with the professional in  and actor of the claim to fame, that is a work, of the spouse of Sherry Hormann.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v3 <http://dbpedia.org/property/starring> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://dbpedia.org/property/starring> ?v1 . <http://dbpedia.org/resource/Sherry_Hormann> <http://dbpedia.org/ontology/spouse> ?v0 . ?v1 <http://dbpedia.org/property/occupation> """"@en . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v5 <http://dbpedia.org/ontology/starring> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v0 <http://dbpedia.org/ontology/knownFor> ?v5 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?actor WHERE {
  ?sherryHormann dbo:spouse ?spouse .
  
  FILTER (str(?sherryHormann) = ""Sherry_Hormann"") .

  ?spouse dbo:claimToFame ?famousWork .
  
  ?famousWork dbo:actor ?actor .
  
  OPTIONAL { ?movie dbo:type dbr:Film . 
             ?movie dbo:actor ?actor . }
  
  OPTIONAL { ?work dbo:type dbr:CreativeWork . 
             ?work dbo:actor ?actor . }
  
  OPTIONAL { ?tvShow dbo:type dbr:TelevisionProgram .
             ?tvShow dbo:actor ?actor . }
}
```",6,10,7,3,2,3,3,71,0,0,11,0,0.0,0
528,57,test,Give me the war of the commander in the work of --01-09 and war of Irene Morales and force of the person born as Narciso Campero Leyes.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/commander> ?v5 . ?v0 <http://dbpedia.org/property/author> ""--01-09""^^<http://www.w3.org/2001/XMLSchema#gMonthDay> . ?v5 <http://dbpedia.org/ontology/battle> ?result . ?v3 <http://dbpedia.org/property/birthName> ""Narciso Campero Leyes""@en . ?result <http://dbpedia.org/ontology/commander> ?v3 . <http://dbpedia.org/resource/Irene_Morales> <http://dbpedia.org/ontology/battle> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?war ?commander WHERE {
  # Find wars involving Irene Morales
  ?person1 rdfs:label ""Irene Morales""@en .
  ?event dbo:agent ?person1 ;
         a dbo:MilitaryConflict .

  # Find wars involving Narciso Campero Leyes
  ?person2 rdfs:label ""Narciso Campero Leyes""@en .
  ?event2 dbo:agent ?person2 ;
          a dbo:MilitaryConflict .

  # Ensure the same war is found for both individuals
  FILTER (?event = ?event2)

  # Find the commander of the identified war
  ?event dbo:commander ?commander .
}
```",6,6,7,3,3,3,3,71,0,0,2,0,0.0,0
48,19,test,"Give me the band of the writer of Emotion (Carly Rae Jepsen album) and band of the actor, that is a musical artist, of the show with Stacey Dash.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Stacey_Dash> . <http://dbpedia.org/resource/Emotion_(Carly_Rae_Jepsen_album)> <http://dbpedia.org/property/writer> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/property/starring> ?v4 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

# Part 1: Find the band of the writer(s) of ""Emotion"" by Carly Rae Jepsen
SELECT DISTINCT ?writerBand WHERE {
  # Identify songs from the album ""Emotion""
  ?song dbo:album dbr:Emotion_(Carly_Rae_Jepsen_album) .
  
  # Get the writers of these songs
  ?song dbo:composer ?writer .

  # Find if the writer is a member of any band
  OPTIONAL { ?writer dbo:bandMember ?band . }
  BIND(IF(BOUND(?band), STR(?band), ""No Band Found"") AS ?writerBand)
}

UNION

# Part 2: Find the band of an actor who is also a musical artist from a show with Stacey Dash
SELECT DISTINCT ?actorBand WHERE {
  # Identify shows featuring Stacey Dash
  ?show dbo:starring dbr:Stacey_Dash .
  
  # Get actors in these shows
  ?show dbo:starring ?actor .

  # Check if the actor is also a musical artist
  OPTIONAL { ?actor dbo:musicalArtist true . }
  
  # Find if this musical artist actor has any band associated with them
  OPTIONAL { ?actor dbo:bandMember ?band . }
  BIND(IF(BOUND(?band), STR(?band), ""No Band Found"") AS ?actorBand)
}
```",5,6,6,3,2,3,2,20,0,0,1,0,0.0,0
391,65,test,"Give me the actor of the movie, that is a movie and a work and a television show, with Roz Ryan and actor of the claim to fame, that is a work, of the spouse of Sherry Hormann and native of the figure known as Hub City.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/starring> ?result . ?v6 <http://dbpedia.org/ontology/starring> ?result . ?v3 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Roz_Ryan> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?result <http://dbpedia.org/ontology/birthPlace> ?v4 . ?v4 <http://dbpedia.org/property/nickname> ""Hub City""@en . ?v0 <http://dbpedia.org/ontology/knownFor> ?v6 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. <http://dbpedia.org/resource/Sherry_Hormann> <http://dbpedia.org/ontology/spouse> ?v0 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?actor WHERE {
  # Step 1: Find the movie that is also a work and television show
  ?movie a dbo:Film ;
         a dbo:CreativeWork ;
         a dbo:TelevisionShow .

  # Step 2: Ensure Roz Ryan is associated with this movie
  ?role dbo:agent dbr:Roz_Ryan ;
        dbo:work ?movie .

  # Step 3: Find Sherry Hormann's spouse and their claim to fame
  ?spouse dbo:spouse dbr:Sherry_Hormann .
  ?claimToFame dbo:creator ?spouse ;
               a dbo:CreativeWork .

  # Step 4: Identify the actor of this claim to fame
  ?actorRole dbo:agent ?actor ;
             dbo:work ?claimToFame .

  # Step 5: Ensure the actor is from Hub City
  ?actor dbo:nativePlace dbr:Hub_City .

  # Step 6: Find an actor in the movie identified in step 1
  ?movieRole dbo:agent ?actor ;
             dbo:work ?movie .
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
617,66,test,"Give me the child of the child, that is a royalty, of Seleucus II Callinicus and parent of the child of the commander in Battle of Panium and spouse of the child of Antiochus III the Great.",SELECT ?result WHERE { <http://dbpedia.org/resource/Battle_of_Panium> <http://dbpedia.org/ontology/commander> ?v1 . ?v6 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Antiochus_III_the_Great> <http://dbpedia.org/ontology/child> ?v6 . ?v1 <http://dbpedia.org/ontology/child> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/property/father> ?v3 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seleucus_II_Callinicus> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?grandchild WHERE {
  # Seleucus II Callinicus and his child
  dbr:Seleucus_II_Callinicus dbo:child ?child1 .
  
  # Child of the child who is royalty
  ?child1 dbo:child ?grandchild .
  ?grandchild a dbo:Monarch .

  # Commander in Battle of Panium and their child's parent
  ?commander dbr:Battle_of_Panium dbo:commander ?commanderRole .
  ?commanderRole dbo:child ?child2 .
  ?parentOfChild2 dbo:child ?child2 .
  
  FILTER (?grandchild = ?parentOfChild2)

  # Antiochus III the Great and his child's spouse
  dbr:Antiochus_III_the_Great dbo:child ?child3 .
  ?spouse dbo:spouse ?child3 .

  FILTER (?grandchild = ?spouse)
}
```",7,8,8,3,3,3,3,71,0,0,2,0,0.0,0
251,21,test,Give me the death place of the author of The Twelve Abbots of Challant and administration of Forza Italia (2013) and location of Battle of Marengo.,SELECT ?result WHERE { <http://dbpedia.org/resource/Battle_of_Marengo> <http://dbpedia.org/ontology/place> ?result . ?result <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Forza_Italia_(2013)> . ?v0 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/The_Twelve_Abbots_of_Challant> <http://dbpedia.org/property/author> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?deathPlace ?administration ?battleLocation WHERE {
  # Death place of Bartolomeo Sacchi da Pavia (Platina)
  ?platina a dbo:Writer ;
           foaf:name ""Bartolomeo Sacchi da Pavia""@en .
  ?platina dbo:deathPlace ?deathPlace .

  # Administration of Forza Italia in 2013
  ?administration dbp:leader ""Silvio Berlusconi""@en ;
                  dbp:startDate ?startYear ;
                  dbp:endDate ?endYear .
  FILTER (?startYear <= ""2013-01-01""^^xsd:date && ?endYear >= ""2013-12-31""^^xsd:date)

  # Location of the Battle of Marengo
  ?battle a dbo:MilitaryEngagement ;
          foaf:name ""Battle of Marengo""@en .
  ?battle dbp:location ?battleLocation .
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
747,54,test,"Give me the band of the writer of the work, that is a song, of Amba Shepherd and person born on the birth date of Pavlo Khudzik and band of Shèna.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/writer> ?v5 . ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Shèna> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Amba_Shepherd> . ?result <http://dbpedia.org/ontology/birthDate> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. <http://dbpedia.org/resource/Pavlo_Khudzik> <http://dbpedia.org/ontology/birthDate> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?writerBand ?personBornOnSameDate ?shenaBand
WHERE {
  # Find the writer of Amba Shepherd's songs
  ?song dbo:lyricsBy dbr:Amba_Shepherd .
  ?song dbo:composer ?writer .

  # Get the band of the writer
  ?writer dbo:band ?writerBand .

  # Find Pavlo Khudzik's birth date
  dbr:Pavlo_Khudzik dbo:birthDate ?pavloBirthDate .

  # Find people born on the same date as Pavlo Khudzik
  ?person dbo:birthDate ?sameBirthDate .
  FILTER (?sameBirthDate = ?pavloBirthDate)

  # Get the band of Shèna
  dbr:Shèna dbo:band ?shenaBand .

}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
404,53,test,"Give me the child of the father of Ernest Augustus, Duke of Brunswick and spouse of the person born, that is a royalty, as the birth name of Princess Victoria Louise of Prussia and parent of Prince Ernest Augustus of Hanover (born 1914).","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/property/father> ?v1 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/parent> ?v1 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Prince_Ernest_Augustus_of_Hanover_(born_1914)> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/property/birthName> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  ?father dbo:spouse ?mother .
  ?father dbr:Ernest_Augustus,_Duke_of_Brunswick#Father .
  ?mother a dbo:Person ;
          dbo:spouse ?father .
  
  ?child dbo:parent ?father ;
         dbo:parent ?mother ;
         a dbo:RoyalFamilyMember .

  ?child rdfs:label ""Victoria Louise, Princess Royal""@en .
  ?child dbo:birthName ?birthName .
  ?child dbo:child dbr:Prince_Ernest_Augustus_of_Hanover_(1914-1987) .
  
  FILTER (CONTAINS(LCASE(?birthName), ""princess victoria louise of prussia""))
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
404,55,test,"Give me the parent of the child, that is a royalty, of Ernest Augustus, Duke of Brunswick and spouse of the person born, that is a royalty, as Princess Victoria Louise of Prussia and child of the father of Ernest Augustus, Duke of Brunswick.","SELECT ?result WHERE { <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/property/father> ?v2 . ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?v3 <http://dbpedia.org/property/birthName> ""Princess Victoria Louise of Prussia""@en . ?result <http://dbpedia.org/ontology/child> ?v5 . <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/ontology/child> ?v5 . ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  # Ernest Augustus, Duke of Brunswick
  ?ernestAugustus dbr:Ernest_Augustus,_Duke_of_Brunswick .
  
  # His children who are royalty
  ?child dbo:childOf ?ernestAugustus ;
         a dbo:RoyalFamilyMember .

  # Spouse of the child, born as Princess Victoria Louise of Prussia
  ?spouse dbo:spouse ?child ;
          dbr:Victoria_Louise_of_Prussia .
  
  # Parent of the child (likely mother)
  ?parent dbo:parentOf ?child .
}
```",6,8,7,2,3,3,3,71,0,0,1,0,0.0,0
994,61,test,"Give me the band member of the person born, that is a musical artist, as the persona of Don Dokken and associated musical artist of the band member, that is a band and a group and an organisation, of the band, that is an organisation, of Fredrik Thordendal.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Don_Dokken> <http://xmlns.com/foaf/0.1/givenName> ?v3 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v1 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Fredrik_Thordendal> . ?v0 <http://dbpedia.org/property/birthName> ?v3 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandMember WHERE {
  # Step 1: Find Fredrik Thordendal's band (Meshuggah)
  dbr:Fredrik_Thordendal dbo:memberOfBand dbr:Meshuggah .

  # Step 2: Identify musical artists associated with Don Dokken
  ?artist dbo:associatedMusicalArtist dbr:Don_Dokken .
  
  # Step 3: Find band members of those identified artists
  ?artist dbo:bandMember ?bandMember .
}
```",6,11,7,3,2,3,3,71,0,0,1,0,0.0,0
182,26,test,Give me the war of Jagath Dias and entity in the nationality of Tamara Kunanayakam and war of the author of 2019 Sri Lanka Easter bombings.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> ?v1 . <http://dbpedia.org/resource/Jagath_Dias> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/2019_Sri_Lanka_Easter_bombings> <http://dbpedia.org/property/author> ?v2 . <http://dbpedia.org/resource/Tamara_Kunanayakam> <http://dbpedia.org/ontology/nationality> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?warOfJagathDias ?entityInNationality ?warOfAuthor
WHERE {
  # Wars associated with Jagath Dias
  OPTIONAL {
    ?person rdfs:label ""Jagath Dias""@en .
    ?person dbo:participatedIn ?warOfJagathDias .
  }

  # Tamara Kunanayakam's nationality and related entities
  OPTIONAL {
    ?tamara dbr:Tamara_Kunanayakam .
    ?tamara dbo:nationality ?nationality .
    ?entityInNationality dbo:country ?nationality .
  }

  # Author of a work related to the 2019 Sri Lanka Easter bombings and associated wars
  OPTIONAL {
    ?work rdfs:label ""2019 Sri Lanka Easter bombings""@en .
    ?work dbo:author ?author .
    ?author dbo:participatedIn ?warOfAuthor .
  }
}
```",5,5,6,2,3,2,3,28,0,0,1,0,0.0,0
404,62,test,"Give me the child of Ernest Augustus, Crown Prince of Hanover and parent of the child, that is a royalty, of the parent, that is a royalty, of Prince George William of Hanover and spouse of the person born, that is a royalty, as the birth name of Princess Victoria Louise of Prussia.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v6 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Prince_George_William_of_Hanover> <http://dbpedia.org/ontology/parent> ?v0 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ernest_Augustus,_Crown_Prince_of_Hanover> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/birthName> ?v4 . ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/ontology/child> ?v6 . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/property/birthName> ?v4 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child ?parent ?spouse WHERE {
  # Ernest Augustus, Crown Prince of Hanover's child who is royalty
  ?child dbo:father dbr:Ernest_Augustus,_Crown_Prince_of_Hanover .
  ?child a dbo:RoyalFamily .

  # Parent of the child (royalty) who is also a child of Prince George William of Hanover
  ?parent dbo:child ?child .
  ?parent dbo:father dbr:Prince_George_William_of_Hanover .
  
  # Spouse of the identified person whose birth name matches Princess Victoria Louise of Prussia's birth name
  ?spouse dbo:spouse ?parent .
  ?princessBirthName dbo:birthName dbr:Princess_Victoria_Louise_of_Prussia .
  ?spouse dbo:birthName ?princessBirthName .
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
421,25,test,Give me the person born as Edin Dervišhalidović and native of the birthplace of Samir Bekrić and band member of the awardee of [[#Awards and nominations.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Samir_Bekrić> <http://dbpedia.org/ontology/birthPlace> ?v4 . ?v2 <http://dbpedia.org/property/awards> ""[[#Awards and nominations""@en . ?result <http://dbpedia.org/property/birthName> ""Edin Dervišhalidović""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?result <http://dbpedia.org/ontology/birthPlace> ?v4 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Step 1: Identify Edin Dervišhalidović
  VALUES ?edin { dbr:Edin_Dervišhalidović }
  
  # Step 2: Find the birthplace of Samir Bekrić
  SELECT DISTINCT ?birthPlace WHERE {
    ?samir dbo:birthPlace ?birthPlace .
    FILTER (str(?samir) = ""Samir_Bekrić"")
  } LIMIT 1
  
  # Step 3: Check if Edin Dervišhalidović's birthplace matches Samir Bekrić's
  ?edin dbo:birthPlace ?matchingBirthPlace .
  
  # Step 4: Identify the band and its award
  ?band dbo:member ?edin ;
        dbo:award ?award .
  
  # Ensure the birthplaces match and return the person
  FILTER (?matchingBirthPlace = ?birthPlace)
}
```",5,5,6,2,3,2,3,28,0,0,1,0,0.0,0
378,56,test,"Give me the claim to fame of the commander in the war, that is a military conflict and a societal event and an event, of Thomas Trigge and war of Joaquín Blake and war of the person born as Carl Pontus Gahn.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Joaquín_Blake> <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/property/birthName> ""Carl Pontus Gahn""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/knownFor> ?result . ?v0 <http://dbpedia.org/ontology/commander> ?v1 . <http://dbpedia.org/resource/Thomas_Trigge> <http://dbpedia.org/ontology/battle> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?triggeFame ?blakeFame ?gahnFame WHERE {
  # Thomas Trigge's claim to fame in a war
  ?war dbo:commander dbr:Thomas_Trigge .
  ?war dbo:name ?triggeWarName .
  OPTIONAL { ?war dbp:description ?triggeFame . }

  # Joaquín Blake's claim to fame in a war
  ?war2 dbo:commander dbr:Joaquín_Blake .
  ?war2 dbo:name ?blakeWarName .
  OPTIONAL { ?war2 dbp:description ?blakeFame . }

  # Carl Pontus Gahn's main claim to fame
  dbr:C_P_Gahn dbo:notableWork ?gahnFame .
}
```",6,9,7,3,3,3,3,71,0,0,2,0,0.0,0
994,52,test,"Give me the associated musical artist of the associated musical artist of the reference to Watchtower and associated musical artist of the band member, that is a band and a group and an organisation, of Meshuggah and band member of Don Dokken.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Meshuggah> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Don_Dokken> . ?v3 <http://xmlns.com/foaf/0.1/name> ""Watchtower""@en . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?finalArtist WHERE {
  # Step 1: Find associated artists of Watchtower
  ?watchtowerArtist dbo:associatedBand dbr:Watchtower .
  
  # Step 2: Find associated artists of the first artist found
  ?secondLevelArtist dbo:associatedBand ?watchtowerArtist .

  # Step 3: Identify Meshuggah band members who are also bands or organizations
  ?meshuggahMember dbo:memberOf dbr:Meshuggah .
  FILTER EXISTS { 
    ?meshuggahMember a (dbo:Band|dbo:Organization) .
  }

  # Step 4: Find Don Dokken's band member connection
  ?donDokkenMember dbo:associatedBand dbr:Don_Dokken .
  
  # Combine the associations to find the final artist
  FILTER (?secondLevelArtist = ?meshuggahMember && ?meshuggahMember = ?donDokkenMember)
  
  # Final associated artist
  ?finalArtist dbo:associatedBand ?secondLevelArtist .
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
747,42,test,Give me the person born on the birth date of Pavlo Khudzik and band of Amba Shepherd and band of the person born as Tracey Elizabeth McSween.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Pavlo_Khudzik> <http://dbpedia.org/ontology/birthDate> ?v2 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/birthDate> ?v2 . ?v1 <http://dbpedia.org/property/birthName> ""Tracey Elizabeth McSween""@en . <http://dbpedia.org/resource/Amba_Shepherd> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?personWithSameBirthDatePavlo ?bandAmbaShepherd ?traceyElizabethMcSweenBand ?personWithSameBirthDateTracey
WHERE {
  # Find Pavlo Khudzik's birth date
  dbr:Pavlo_Khudzik dbo:birthDate ?birthDatePavlo .

  # Find other persons with the same birth date as Pavlo Khudzik
  ?personWithSameBirthDatePavlo dbo:birthDate ?birthDatePavlo .
  
  # Find Amba Shepherd's band
  dbr:Amba_Shepherd dbo:band ?bandAmbaShepherd .

  # Identify Tracey Elizabeth McSween and her birth date
  dbr:Tracey_Elizabeth_McSween dbo:birthDate ?birthDateTracey .
  
  # Find the band associated with Tracey Elizabeth McSween
  OPTIONAL { dbr:Tracey_Elizabeth_McSween dbo:band ?traceyElizabethMcSweenBand . }

  # Find other persons with the same birth date as Tracey Elizabeth McSween
  ?personWithSameBirthDateTracey dbo:birthDate ?birthDateTracey .
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
281,20,test,"Give me the entity in the birth place, that is a country, of Bob Heffron and war of Beauchamp Seymour, 1st Baron Alcester.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/place> ?v2 . <http://dbpedia.org/resource/Bob_Heffron> <http://dbpedia.org/ontology/birthPlace> ?v2 . <http://dbpedia.org/resource/Beauchamp_Seymour,_1st_Baron_Alcester> <http://dbpedia.org/ontology/battle> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?birthPlaceCountry ?war 
WHERE {
  # Find the birthplace of Bob Heffron that is a country
  dbr:Bob_Heffron dbo:birthPlace ?birthPlace .
  ?birthPlace rdf:type dbo:Country .

  # Find the war associated with Beauchamp Seymour, 1st Baron Alcester
  dbr:Beauchamp_Seymour,_1st_Baron_Alcester dbo:participatedIn ?war .
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
747,43,test,"Give me the person born on 1985-04-29 and band of Shèna and band of the writer of the work, that is a song, of Amba Shepherd.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthDate> ""1985-04-29""^^<http://www.w3.org/2001/XMLSchema#date> . ?v0 <http://dbpedia.org/property/writer> ?v4 . ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Amba_Shepherd> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. <http://dbpedia.org/resource/Shèna> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person ?bandOfShena ?bandOfSongWriter
WHERE {
  # Find the person born on 1985-04-29
  ?person dbo:birthDate ""1985-04-29""^^xsd:date .

  # Find the band associated with Shèna
  ?shena a dbo:Person ;
         foaf:name ""Shèna""@en .
  ?bandOfShena dbo:bandMember ?shena .

  # Find the song written by Amba Shepherd
  ?song dbo:lyricsBy dbr:Amba_Shepherd ;
        a dbo:Song .

  # Find the writer of that song and their band
  ?writer dbo:lyricsBy ?song .
  ?bandOfSongWriter dbo:bandMember ?writer .
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
959,27,test,"Give me the manager of the team of the manager, that is a sports manager, of 1998 Kashima Antlers season.",SELECT ?result WHERE { <http://dbpedia.org/resource/1998_Kashima_Antlers_season> <http://dbpedia.org/ontology/manager> ?v1 . ?v0 <http://dbpedia.org/ontology/manager> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v0 <http://dbpedia.org/ontology/manager> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?managerOfManager WHERE {
  ?season a dbo:SoccerSeason ;
          dbo:sportsTeam ?team .
  
  FILTER(CONTAINS(LCASE(?season), ""kashima antlers"") && CONTAINS(LCASE(STR(?season)), ""1998"")) .

  ?team dbo:manager ?sportsManager .
  
  ?sportsManager rdf:type dbo:SportsManager .

  ?sportsManager dbo:manager ?managedTeam .
  ?managedTeam dbo:manager ?managerOfManager .
}
```",3,4,4,3,1,3,3,71,0,0,10,0,0.0,0
488,29,test,"Give me the death place of the father, that is a politician, of Yūki Hideyasu and administration of Emperor Go-Yōzei and birth place of Enomoto Takeaki.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/ontology/deathPlace> ?result . ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Emperor_Go-Yōzei> . <http://dbpedia.org/resource/Yūki_Hideyasu> <http://dbpedia.org/property/father> ?v3 . <http://dbpedia.org/resource/Enomoto_Takeaki> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?fatherDeathPlace ?enomotoBirthPlace WHERE {
  # Find Yūki Hideyasu's father who is a politician
  dbr:Yūki_Hideyasu dbo:father ?father .
  ?father dbo:occupation ?occupation .
  FILTER(CONTAINS(LCASE(STR(?occupation)), ""politician""))

  # Get the death place of Yūki Hideyasu's father
  ?father dbo:deathPlace ?fatherDeathPlace .

  # Find Enomoto Takeaki and his birthplace
  dbr:Enomoto_Takeaki dbo:birthPlace ?enomotoBirthPlace .
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
92,68,test,"Give me the band of the person born as Joseph Michael Furney and associated musical artist of the person born, that is an artist, as the actor of Return to Nuke 'Em High Volume 1 and band member of the reference, that is an artist, to the name of Nevermore (2006 film).","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?v7 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Nevermore_(2006_film)> <http://xmlns.com/foaf/0.1/name> ?v5 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v7 <http://dbpedia.org/property/birthName> ?v0 . <http://dbpedia.org/resource/Return_to_Nuke_'Em_High_Volume_1> <http://dbpedia.org/property/starring> ?v0 . ?result <http://dbpedia.org/ontology/bandMember> ?v3 . ?v4 <http://xmlns.com/foaf/0.1/name> ?v5 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v3 <http://dbpedia.org/property/birthName> ""Joseph Michael Furney""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band ?associatedArtist ?nevermoreMember WHERE {
  # Joe Satriani's band
  dbr:Joe_Satriani dbo:memberOf ?band .
  
  # Actor in ""Return to Nuke 'Em High Volume 1""
  OPTIONAL {
    dbr:Tom_Towles dbo:actorIn dbr:Return_to_Nuke_'Em_High_Volume_1 .
    ?associatedArtist dbo:associatedWith dbr:Tom_Towles .
  }
  
  # Band member of Nevermore
  dbr:Nevermore dbo:bandMember ?nevermoreMember .
}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
184,42,test,Give me the parent of the native of Budapest and child of Archduke Joseph August of Austria and parent of the child of Archduke Joseph Francis of Austria.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v2 . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Francis_of_Austria> . ?v2 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Budapest> . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_August_of_Austria> . ?result <http://dbpedia.org/ontology/child> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parent
WHERE {
  ?person dbo:birthPlace dbp:Budapest .
  ?person dbo:childOfArchdukeJosephAugustOfAustria _:a1 .
  ?person dbo:parentOfChildOfArchdukeJosephFrancisOfAustria _:a2 .
  
  ?person dbo:parent ?parent .

  _:a1 rdf:type <http://dbpedia.org/resource/Archduke_Joseph_August_of_Austria> .
  _:a2 rdf:type <http://dbpedia.org/resource/Archduke_Joseph_Francis_of_Austria> .
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
328,38,test,"Give me the commander in the force of Ferenc Szálasi and leader of the office, that is a government agency, of Joseph Stalin.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/leader> ?result . <http://dbpedia.org/resource/Joseph_Stalin> <http://dbpedia.org/property/office> ?v2 . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Ferenc_Szálasi> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?agencyLeader WHERE {
  # Ferenc Szálasi's military commander
  OPTIONAL { 
    dbr:Ferenc_Szálasi dbo:militaryCommander ?commander .
    FILTER (str(?commander) = ""Huba_von_Halmay"")
  }

  # Leader of a government agency under Joseph Stalin
  OPTIONAL {
    dbr:Joseph_Stalin dbo:headOfGovernmentAgency ?agencyLeader .
    FILTER (str(?agencyLeader) = ""Lavrentiy_Beria"")
  }
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
801,46,test,"Give me the producer of the work, that is a musical work and a song and a work, of 50 Cent and professional in the alter ego of the true self of The Shadow.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://dbpedia.org/ontology/producer> ?result . ?result <http://dbpedia.org/property/occupation> ?v1 . ?v2 <http://dbpedia.org/property/alterEgo> ?v1 . ?v2 <http://xmlns.com/foaf/0.1/givenName> ""The Shadow""@en . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v4 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/50_Cent> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?work ?producer WHERE {
  ?work a dbo:MusicalWork ;
        dbo:song true ;
        dbo:producer ?producer .
  
  ?producer rdfs:label ""50 Cent""@en .

  OPTIONAL { 
    ?work dbo:lyrics ?lyrics .
    ?lyrics rdfs:label ?label .
    FILTER(CONTAINS(LCASE(?label), ""the shadow""))
  }
}
```",5,8,6,3,2,3,3,71,0,0,27,0,0.0,0
232,58,test,"Give me the actor of the claim to fame, that is a film and a military conflict, of Sean Pertwee and child of Jon Pertwee and native of the residence, that is a settlement and British, of the native, that is a politician and an office holder, of France.",SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/France> . <http://dbpedia.org/resource/Sean_Pertwee> <http://dbpedia.org/ontology/knownFor> ?v5 . ?v5 <http://dbpedia.org/ontology/starring> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/property/residence> ?v2 . <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  # Sean Pertwee's claim to fame (film or military conflict)
  VALUES (?claimToFame) { 
    dbr:The_Warriors_(2008_film) 
    dbr:Battle_of_Britain
  }
  
  # Check if Sean Pertwee is associated with the claim to fame
  ?pertwee dbo:actorIn ?claimToFame .
  FILTER(?pertwee = dbr:Sean_Pertwee)
  
  # Find a French politician and their British residence
  ?politician dbo:nationality dbr:France ;
             dbo:officeHolderOf ?office .
  ?politician dbo:birthPlace ?residence .
  FILTER(STRSTARTS(STR(?residence), ""http://dbpedia.org/resource/"") && 
         EXISTS { ?residence a dbo:Settlement . } &&
         EXISTS { ?residence dbo:country dbr:United_Kingdom . })
  
  # Link the claim to fame with the residence
  ?claimToFame dbo:setting ?residence .
}
```",6,12,7,3,3,3,3,71,0,0,1,0,0.0,0
827,17,test,"Give me the child of Charles Alexander, Grand Duke of Saxe-Weimar-Eisenach and father of the child, that is a royalty, of the spouse, that is a royalty, of Princess Pauline of Saxe-Weimar-Eisenach.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Princess_Pauline_of_Saxe-Weimar-Eisenach> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Charles_Alexander,_Grand_Duke_of_Saxe-Weimar-Eisenach> <http://dbpedia.org/ontology/child> ?result . ?v3 <http://dbpedia.org/property/father> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?child ?father ?spouse WHERE {
  ?charlesAlexander a dbo:Monarch ;
                   foaf:name ""Charles Alexander, Grand Duke of Saxe-Weimar-Eisenach""@en .
  
  ?charlesAlexander dbo:child ?child .
  ?child rdf:type dbo:Monarch .

  ?child dbo:spouse ?spouse .
  ?spouse rdf:type dbo:Monarch .

  ?princessPauline a dbo:Person ;
                  foaf:name ""Princess Pauline of Saxe-Weimar-Eisenach""@en .
  
  ?princessPauline dbo:spouse ?spouse .
}
```",4,6,5,3,2,3,2,20,0,0,1,0,0.0,0
659,59,test,"Give me the commander in the force of the native, that is an office holder, of Kingdom of Ireland and commander in the war, that is an event and a military conflict, of the figure known, that is a military unit and an organisation, as 'Polish Horse'.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/commander> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Kingdom_of_Ireland> . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v0 <http://dbpedia.org/ontology/battle> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v5 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/property/nickname> ""'Polish Horse'""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  ?officeHolder a dbo:OfficeHolder ;
                dbo:positionHeld ?kingdomOfIrelandCommand ;
                dbo:memberOf ?polishHorse .
  
  ?kingdomOfIrelandCommand dbo:country dbr:Kingdom_of_Ireland .

  ?warEvent a dbo:MilitaryConflict ;
            dbo:commander ?commander .

  ?polishHorse a (dbo:MilitaryUnit|dbo:Organization) ;
               rdfs:label ""Polish Horse""@en .
  
  FILTER(?officeHolder = ?commander)
}
```",6,11,7,3,2,3,3,71,0,0,71,0,0.0,0
16,63,test,Give me the professional in the profession of Satomi Ishihara and spouse of the person born as the birth name of Ted McGinley and person born as the birth name of Gigi Rice.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v2 . ?result <http://dbpedia.org/property/occupation> ?v6 . <http://dbpedia.org/resource/Gigi_Rice> <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Satomi_Ishihara> <http://dbpedia.org/property/occupation> ?v6 . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/property/birthName> ?v4 . ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?v3 <http://dbpedia.org/property/birthName> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?professional WHERE {
    # Step 1: Find Satomi Ishihara's profession
    ?satomiIshihara dbo:profession ?profession .
    FILTER (str(?satomiIshihara) = ""Satomi_Ishihara"")

    # Step 2: Find Ted McGinley's birth name
    ?tedMcGinley dbp:birthName ?tedBirthName .
    FILTER (str(?tedMcGinley) = ""Ted_McGinley"")

    # Step 3: Find Gigi Rice's birth name
    ?gigiRice dbp:birthName ?gigiBirthName .
    FILTER (str(?gigiRice) = ""Gigi_Rice"")

    # Step 4: Find a common spouse for both individuals
    ?spouse dbo:spouse ?tedMcGinley ;
            dbo:spouse ?gigiRice .

    # Step 5: Check if this spouse has the same profession as Satomi Ishihara's profession
    ?spouse dbo:profession ?professional .
    FILTER (?professional = ?profession)
}
```",7,7,8,3,3,3,3,71,0,0,1,0,0.0,0
378,46,test,Give me the war of the person born as the birth name of Carl Pontus Gahn and war of the commander in Peninsular War.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Peninsular_War> <http://dbpedia.org/ontology/commander> ?v4 . <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/property/birthName> ?v2 . ?v4 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?war1 ?war2 WHERE {
  # Finding the war associated with Carl Pontus Gahn (Pontus de la Gardie)
  dbr:Pontus_de_la_Gardie dbo:birthName ?birthName .
  ?person dbo:birthName ?birthName ;
          dbo:participatedInMilitaryConflict ?war1 .

  # Finding the war associated with a commander from the Peninsular War
  dbr:Arthur_Wellesley dbo:participatedInMilitaryConflict ?peninsularWar .
  FILTER(?peninsularWar = dbr:Peninsular_War) .
  ?person dbo:participatedInMilitaryConflict ?war2 .

  # Ensuring the wars are distinct and relevant
  FILTER(?war1 != ?war2)
}
```",5,5,6,3,2,3,3,71,0,0,2,0,0.0,0
356,20,test,"Give me the player in the successor of the predecessor, that is a sports team season and a soccer club season, of 2015 Sacramento Republic FC season and team of the native, that is a soccer player and a soccer manager, of the birth place, that is English and a settlement, of Gary Williams (footballer, born 1960).","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/manager> ?v5 . ?v2 <http://dbpedia.org/ontology/team> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v5 <http://dbpedia.org/ontology/birthPlace> ?v4 . ?v4 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v1 <http://dbpedia.org/ontology/successor> ?v2 . ?v1 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/2015_Sacramento_Republic_FC_season> . <http://dbpedia.org/resource/Gary_Williams_(footballer,_born_1960)> <http://dbpedia.org/ontology/birthPlace> ?v4 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?player WHERE {
  # Step 1: Identify the 2015 Sacramento Republic FC season
  ?season a dbo:SoccerSeason ;
          dbo:team dbr:Sacramento_Republic_FC ;
          dbo:year ""2015""^^xsd:gYear .

  # Step 2: Find its predecessor and successor seasons
  OPTIONAL { ?predecessor dbo:succeeds ?season . }
  OPTIONAL { ?successor dbo:isSucceededBy ?season . }

  # Step 3: Determine the player involved in the successor of the predecessor
  ?playerSeason a dbo:SoccerSeason ;
                dbo:team dbr:Sacramento_Republic_FC ;
                dbo:succeeds ?predecessor .

  # Step 4: Identify Gary Williams' birthplace
  ?garyWilliams dbo:nationality dbr:England ;
               dbo:birthPlace ?birthPlace .
  
  FILTER (strstarts(str(?birthPlace), ""http://dbpedia.org/resource/"") && 
          strcontains(str(?birthPlace), ""/Settlement"")) .

  # Step 5: Find a soccer player and manager from this birthplace
  ?nativePlayer a dbo:SoccerPlayer, dbo:SoccerManager ;
                dbo:nationality dbr:England ;
                dbo:birthPlace ?birthPlace .
  
  # Combine these elements
  FILTER (?player = ?nativePlayer)
}
```",6,12,7,3,2,3,2,20,0,0,1,0,0.0,0
645,17,test,Give me the entity in United Kingdom and alma mater of the child of the parent of Adela Pankhurst.,SELECT ?result WHERE { <http://dbpedia.org/resource/Adela_Pankhurst> <http://dbpedia.org/ontology/parent> ?v0 . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . ?v0 <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?almaMater WHERE {
  ?adela a dbr:Adela_Pankhurst ;
         dbo:parent ?parent .
  ?parent dbo:child ?adela .
  ?adela dbo:almaMater ?almaMater .
  ?almaMater dbo:locationCountry dbr:United_Kingdom .
}
```",4,4,5,3,2,3,2,20,0,0,1,0,0.0,0
696,17,test,Give me the landmark at elevation of the award of the commander in Battle of Chishui River and birth place of Tim Brennan.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/elevation> ?v3 . <http://dbpedia.org/resource/Tim_Brennan> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Battle_of_Chishui_River> <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://dbpedia.org/property/awards> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?landmark WHERE {
  # Find the award associated with a commander in the Battle of Chishui River
  ?commander dbo:participatedInBattle dbr:Battle_of_Chishui_River .
  ?award dbo:recipient ?commander .
  
  # Get the elevation of the award (assuming awards have an elevation property)
  ?award dbp:elevation ?elevationAward .

  # Find Tim Brennan's birthplace
  dbr:Tim_Brennan dbo:birthPlace ?birthPlace .
  
  # Get the elevation of Tim Brennan's birthplace
  ?birthPlace dbp:elevation ?elevationBirthPlace .

  # Ensure the elevations match
  FILTER (?elevationAward = ?elevationBirthPlace)

  # Find a landmark at this elevation
  ?landmark dbo:elevation ?elevation .
  
  # Ensure the landmark's elevation matches the award and birthplace elevation
  FILTER (?elevation = ?elevationAward)
}
```",4,4,5,3,2,3,2,20,0,0,1,0,0.0,0
184,54,test,"Give me the parent of Archduchess Ilona of Austria and child of the child of the parent, that is a royalty, of Archduke Ladislaus Philipp of Austria and parent of the native of Budapest.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/property/father> ?v5 . ?v3 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Budapest> . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Ilona_of_Austria> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> ?v3 . <http://dbpedia.org/resource/Archduke_Ladislaus_Philipp_of_Austria> <http://dbpedia.org/ontology/parent> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?grandchild ?parentOfBudapestNative WHERE {
  # Step 1: Find the parent of Archduchess Ilona of Austria
  ?ilona a dbr:Archduchess_Ilona_of_Austria ;
         dbo:motherOrFather ?parentIlona .

  # Step 2: Find the child of the child (grandchild) of this parent
  ?childOfParentIlona dbo:motherOrFather ?parentIlona .
  ?grandchild dbo:motherOrFather ?childOfParentIlona .

  # Step 3: Filter for royalty among these grandchildren
  ?grandchild a ?royaltyClass .
  FILTER EXISTS { 
    VALUES ?royaltyClass {
      dbr:Monarch
      dbr:Royal_family_member
      dbr:Noble
    }
  }

  # Step 4: Find the parent of Archduke Ladislaus Philipp of Austria
  ?ladislaus a dbr:Archduke_Ladislaus_Philipp_of_Austria ;
             dbo:motherOrFather ?parentLadislaus .

  # Step 5: Identify the native of Budapest among the children of this parent
  ?childOfParentLadislaus dbo:motherOrFather ?parentLadislaus .
  ?nativeBudapest a ?childOfParentLadislaus ;
                  dbo:nativePlace dbr:Budapest .

  # Step 6: Identify the parent of the native of Budapest
  ?parentOfBudapestNative dbo:motherOrFather ?nativeBudapest .
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
767,63,test,"Give me the reference to the alter ego of Black Hood and alma mater of the administration of George K. Nash and entity in the administration, that is a settlement, of the writer of Where It's At (Dustin Lynch album).",SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v2 . <http://dbpedia.org/resource/Where_It's_At_(Dustin_Lynch_album)> <http://dbpedia.org/property/writer> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v6 <http://dbpedia.org/ontology/almaMater> ?result . ?v6 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/George_K._Nash> . ?v3 <http://dbpedia.org/property/leaderParty> ?v4 . <http://dbpedia.org/resource/Black_Hood> <http://dbpedia.org/property/alterEgo> ?v2 . ?result <http://dbpedia.org/ontology/state> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?alterEgo ?almaMater ?settlement WHERE {
  # Find the alter ego of Black Hood
  ?blackHood dbo:alias ""Black Hood"" .
  ?blackHood dbo:alterEgo ?alterEgo .

  # Find George K. Nash's alma mater
  dbr:George_K._Nash dbo:almaMater ?university .
  ?university dbp:name ?almaMater .

  # Find an entity in the administration of George K. NASH that is a settlement
  dbr:George_K._Nash dbo:positionHeld ?administrationRole .
  ?administrationRole dbo:member ?adminEntity .
  ?adminEntity rdf:type dbo:Settlement .
  ?adminEntity dbp:name ?settlement .

  # Find the writer of ""Where It's At"" by Dustin Lynch
  dbr:""Where_It's_At_(Dustin_Lynch_song)"" dbo:lyricsBy ?writer .
  
  FILTER(?alterEgo != """" && ?almaMater != """" && ?settlement != """")
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
54,53,test,"Give me the parent of Thado Minsaw of Prome and child of the father of the child of Thinkhaya of Pagan and predecessor of the child, that is an office holder and a royalty, of Thihapate of Mohnyin.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Thihapate_of_Mohnyin> . ?result <http://dbpedia.org/ontology/successor> ?v1 . ?v3 <http://dbpedia.org/property/father> ?v2 . <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?parent
WHERE {
  # Thado Minsaw of Prome's parent
  ?thadoMinsaw dbo:name ""Thado Minsaw""@en ;
               dbo:placeOfBirth ?prome ;
               dbo:parent ?parent .

  # Thinkhaya of Pagan's great-grandchild and predecessor
  ?thinkhaya dbo:name ""Thinkhaya""@en ;
             dbo:child ?child1 .
  ?child1 dbo:father ?thinkhaya ;
          dbo:child ?grandChild .
  ?grandChild dbo:child ?greatGrandChild .
  ?predecessor dbo:successor ?greatGrandChild .

  # Thihapate of Mohnyin's child who is an office holder and royalty
  ?thihapate dbo:name ""Thihapate""@en ;
             dbo:child ?officeHolderRoyalty .
  ?officeHolderRoyalty rdf:type/rdfs:subClassOf* dbo:OfficeHolder, dbo:Royal .

  # Matching the parent of Thado Minsaw with the predecessor and office holder
  FILTER (?parent = ?predecessor && ?parent = ?officeHolderRoyalty)
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
161,58,test,"Give me the commander in the force, that is an event, of the figure known as El Director and military force of the force, that is a societal event and a military conflict, of Francisco Largo Caballero and military force of Rif War.","SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v5 . ?v2 <http://dbpedia.org/ontology/commander> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://xmlns.com/foaf/0.1/nick> ""El Director""@en . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Rif_War> . ?v5 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  ?event a dbo:MilitaryConflict ;
         dbo:societalEvents ?societalEvent ;
         dbo:militaryConflicts dbr:Rif_War .
  
  ?societalEvent dbo:commander ?commander .

  FILTER EXISTS { 
    ?commander rdfs:label ""Francisco Largo Caballero""@en .
  }
}
```",6,9,7,3,3,3,3,71,0,0,11,0,0.0,0
9,43,test,"Give me the alma mater of John Alderdice, Baron Alderdice and alma mater of the awardee of the reference, that is an award, to Royal Medals and figure known as QUB.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v4 <http://dbpedia.org/ontology/almaMater> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Royal Medals""@en . ?v4 <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/John_Alderdice,_Baron_Alderdice> <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://dbpedia.org/property/nickname> ""QUB""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?almaMaterJohnAlderdice ?almaMaterAwardRecipient
WHERE {
  # Find John Alderdice's alma mater
  dbr:John_Alderdice_Baron_Alderdice dbo:almaMater ?almaMaterJohnAlderdice .

  # Identify the award related to Royal Medals and QUB
  ?award dbo:awardee ?recipient .
  ?award dbo:relatedTo dbr:Royal_Medals .
  ?award dbo:associatedWith dbr:Queen's_University_Belfast .

  # Find the alma mater of the awardee
  ?recipient dbo:almaMater ?almaMaterAwardRecipient .
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
645,19,test,"Give me the entity in the residence, that is a country, of James Wilkes Maurice and alma mater of the child of the parent of Adela Pankhurst.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v4 <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://dbpedia.org/ontology/country> ?v2 . <http://dbpedia.org/resource/James_Wilkes_Maurice> <http://dbpedia.org/property/residence> ?v2 . <http://dbpedia.org/resource/Adela_Pankhurst> <http://dbpedia.org/ontology/parent> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?entity WHERE {
  # Find the country associated with James Wilkes Maurice's residence
  ?mrs dbr:James_Wilkes_Maurice dbo:residenceLocation ?location .
  ?location dbo:country ?country .

  # Identify Adela Pankhurst's parent and child
  ?adela dbr:Adela_Pankhurst dbo:parent ?parent .
  ?parent rdfs:label ""Richard Pankhurst""@en .
  ?child dbo:parent ?parent ;
         rdfs:label ""Christabel Pankhurst""@en .

  # Find Christabel Pankhurst's alma mater
  ?child dbo:almaMater ?almaMater .

  # Check if the country and alma mater are the same entity
  FILTER (?country = ?almaMater)
  BIND(?country AS ?entity)
}
```",5,6,6,3,2,3,2,20,0,0,1,0,0.0,0
617,20,test,Give me the spouse of the child of Antiochus III the Great and child of Antiochus III the Great.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Antiochus_III_the_Great> <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Antiochus_III_the_Great> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?spouse WHERE {
  ?antiochus3 a dbo:Monarch ;
              foaf:name ""Antiochus III the Great""@en .
  
  ?child dbo:parent ?antiochus3 ;
         a dbo:Person .

  ?child dbo:spouse ?spouse .
}
```",3,3,4,2,2,3,3,71,0,0,4,0,0.0,0
547,29,test,Give me the resting place of Alan Cunningham and resting place of the actor of Enemy at the Door and resting place of James Burton (Egyptologist).,SELECT ?result WHERE { <http://dbpedia.org/resource/Enemy_at_the_Door> <http://dbpedia.org/property/starring> ?v3 . ?v3 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/James_Burton_(Egyptologist)> <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Alan_Cunningham> <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?name ?restingPlace WHERE {
  # Alan Cunningham's resting place
  { 
    ?person a dbo:Person ;
            foaf:name ""Alan Cunningham"" .
    OPTIONAL { ?person dbo:deathPlace ?restingPlace . }
  } UNION

  # Actor of ""Enemy at the Door""
  { 
    ?film dbp:title ""Enemy at the Door""@en ;
          dbo:starring ?actor .
    ?actor a dbo:Person ;
           foaf:name ?name .
    OPTIONAL { ?actor dbo:deathPlace ?restingPlace . }
  } UNION

  # James Burton (Egyptologist)
  {
    ?person a dbo:Person ;
            foaf:name ""James Burton"" ;
            dbo:occupation dbp:Egyptologist .
    OPTIONAL { ?person dbo:deathPlace ?restingPlace . }
  }

  FILTER(?name != """")
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
994,50,test,"Give me the associated musical artist of the band member, that is a band and a group and an organisation, of the band, that is an organisation, of Fredrik Thordendal and band member of the person born, that is a musical artist, as Donald Maynard Dokken.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v0 <http://dbpedia.org/property/birthName> ""Donald Maynard Dokken""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Fredrik_Thordendal> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?associatedMusicalArtist WHERE {
  # Step 1: Identify Fredrik Thordendal's band
  ?band a dbo:Band ;
        dbo:member ?fredrik .
  
  FILTER (?fredrik = dbr:Fredrik_Thordendal)

  # Step 2: Find Donald Maynard Dokken as a musical artist
  ?dokken a dbo:MusicalArtist ;
          foaf:name ""Donald Maynard Dokken"" .

  # Step 3: Identify the band member of Donald Maynard Dokken who is born (i.e., has birth information)
  ?band2 a dbo:Band ;
         dbo:member ?bandMember .
  
  ?bandMember dbo:birthDate ?birthDate .
  
  # Ensure this band member is associated with Donald Maynard Dokken
  ?dokken dbo:associatedBand ?band2 .

  # Step 4: Find the associated musical artist of this band member
  ?bandMember dbo:associatedMusicalArtist ?associatedMusicalArtist .
}
```",5,10,6,3,2,3,3,71,0,0,1,0,0.0,0
488,20,test,"Give me the birth place of Enomoto Takeaki and death place of the father, that is a politician, of Yūki Hideyasu.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/deathPlace> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Enomoto_Takeaki> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Yūki_Hideyasu> <http://dbpedia.org/property/father> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlaceLabel WHERE {
  VALUES (?person) { (dbr:Enomoto_Takeaki) }
  ?person dbo:birthPlace ?birthPlace .
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}

UNION

SELECT ?deathPlaceLabel WHERE {
  ?yuki dbr:Yūki_Hideyasu ;
        dbo:father ?father .
  FILTER EXISTS { ?father a dbo:Politician . }
  ?father dbo:deathPlace ?deathPlace .
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
392,26,test,"Give me the entity in the region, that is a country, of Central European Time and province of the residence, that is a settlement and Italian, of Sebastiano Bianchetti and region of Central European Time.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Sebastiano_Bianchetti> <http://dbpedia.org/property/residence> ?v2 . ?v1 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://dbpedia.org/ontology/province> ?result . ?result <http://dbpedia.org/ontology/country> ?v1 . ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Central_European_Time> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity
WHERE {
  ?person dbo:nationality dbr:Italy .
  ?person rdfs:label ""Sebastiano Bianchetti""@en .
  
  ?person dbo:residence ?settlement .
  ?settlement a dbo:Settlement .

  ?province dbo:country ?country .
  ?province dbo:settlement ?settlement .

  ?country dbo:timeZone dbr:Central_European_Time .
}
```",5,8,6,2,3,2,3,28,0,0,1,0,0.0,0
994,57,test,"Give me the associated musical artist of S.A. Slayer and associated musical artist of the band member, that is a band and a group and an organisation, of the band, that is an organisation, of Fredrik Thordendal and band member of the person born, that is a musical artist, as Donald Maynard Dokken.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ""Donald Maynard Dokken""@en . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/S.A._Slayer> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Fredrik_Thordendal> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?associatedArtistSASlayer ?bandMemberArtist ?fredrikBand ?dokkenBandMember
WHERE {
  # Step 1: Find associated artist of S.A. Slayer
  dbr:S_A_Slayer dbo:associatedMusicalArtist ?associatedArtistSASlayer .

  # Step 2: Identify band member who is also a band/group/organization
  ?bandMember dbo:memberOfBand ?band .
  ?band rdf:type dbo:Band ;
        dbo:genre ?genre .
  FILTER EXISTS { ?band dbo:genre dbr:Heavy_Metal }
  
  # Step 3: Find Fredrik Thordendal's organization (band)
  dbr:Fredrik_Thordendal dbo:memberOfBand ?fredrikBand .

  # Step 4: Locate Donald Maynard Dokken and his band membership
  ?dokkenArtist dbp:birthdayYear ?year ;
                rdfs:label ""Donald Maynard Dokken""@en .
  ?dokkenArtist dbo:bandMember ?dokkenBandMember .
}
```",6,11,7,3,3,3,3,71,0,0,1,0,0.0,0
838,17,test,"Give me the band member of the band, that is a group, of the reference, that is a group and an organisation, to YU Grupa and band of Raša Đelmaš.","SELECT ?result WHERE { <http://dbpedia.org/resource/Raša_Đelmaš> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v0 <http://xmlns.com/foaf/0.1/name> ""YU Grupa""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?bandMember WHERE {
  # Find bands that are both a group and an organization related to YU Grupa
  ?yugrupaGroup a dbo:Band ;
                dbo:member ?bandMember .

  ?yugrupaOrg a dbo:Organization ;
              dbp:name ""YU Grupa""@en .
  
  FILTER EXISTS { ?yugrupaGroup rdfs:label ?yugrupaLabel . 
                 ?yugrupaLabel bif:contains ""YU Grupa"" }
  
  # Find bands associated with Raša Đelmaš
  ?rasaBand a dbo:Band ;
            dbo:member ?rasaMember .
  
  ?rasaMember foaf:name ""Raša Đelmaš""@en .

  FILTER EXISTS { ?rasaBand rdfs:label ?rasaLabel . 
                 ?rasaLabel bif:contains ""YU Grupa"" }
  
  # Ensure the band is common to both conditions
  VALUES ?commonBand {
    ?yugrupaGroup
    ?rasaBand
  }

  FILTER (?bandMember != ?rasaMember)
}
```",4,7,5,3,2,3,2,20,0,0,4,0,0.0,0
994,27,test,"Give me the band member of the person born, that is a musical artist, as the persona of Don Dokken.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Don_Dokken> <http://xmlns.com/foaf/0.1/givenName> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?band WHERE {
  ?person foaf:name ""Don Dokken""@en .
  ?person a dbo:MusicalArtist .
  ?membership dbo:member ?person ;
              dbo:musicalGroup ?band .
}
```",3,4,4,3,1,3,3,71,0,0,2,0,0.0,0
281,54,test,"Give me the war of the awardee of Knight Grand Cross of the Order of the Bath and war of New Zealand Army and entity in the birth place, that is a country, of the leader, that is a politician, of 1962 New South Wales state election.",SELECT ?result WHERE { <http://dbpedia.org/resource/New_Zealand_Army> <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/ontology/birthPlace> ?v5 . ?result <http://dbpedia.org/ontology/place> ?v5 . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_the_Bath> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/1962_New_South_Wales_state_election> <http://dbpedia.org/property/leader> ?v0 . ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?warOfAwardee ?newZealandWar ?birthCountry
WHERE {
  # Find the awardee of Knight Grand Cross of the Order of the Bath
  ?person dbo:award dbr:Knight_Grand_Cross_of_the_Order_of_the_Bath .
  
  # Wars involving the awardee
  ?person dbo:militaryConflict ?warOfAwardee .
  ?person dbo:militaryConflict ?newZealandWar .
  
  # Filter for New Zealand Army involvement
  FILTER EXISTS { 
    ?newZealandWar dbp:participatingArmies dbr:New_Zealand_Army .
  }
  
  # Identify the leader of the 1962 NSW election
  ?leader dbo:electionResult dbr:1962_New_South_Wales_state_election ;
          a dbo:Politician .
  
  # Birthplace country of the leader
  ?leader dbp:birthPlace ?birthPlace .
  ?birthPlace dbo:country ?birthCountry .
  
  # Ensure the person is the same as the leader
  FILTER (?person = ?leader)
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
701,26,test,Give me the parent of the child of the child of Seti I.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://dbpedia.org/property/father> ?v1 . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seti_I> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT DISTINCT ?greatGrandparent WHERE {
  ?setiI a dbo:Person ;
         foaf:name ""Seti I""@en .
  
  ?child dbo:childOf ?setiI .
  ?grandChild dbo:childOf ?child .
  ?greatGrandchild dbo:childOf ?grandChild .
  ?greatGrandparent dbo:childOf ?greatGrandchild .
}
```",3,3,4,3,1,3,3,71,0,0,2,0,0.0,0
547,54,test,Give me the resting place of the child of James Burton (property developer) and resting place of the actor of the show with Emily Richard and resting place of Alan Cunningham.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/James_Burton_(property_developer)> <http://dbpedia.org/ontology/child> ?v3 . <http://dbpedia.org/resource/Alan_Cunningham> <http://dbpedia.org/ontology/restingPlace> ?result . ?v0 <http://dbpedia.org/property/starring> ?v5 . ?v0 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emily_Richard> . ?v5 <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?childRestingPlace ?actorRestingPlace ?alanCunninghamRestingPlace WHERE {
  # Resting place of the child of James Burton (property developer)
  ?jamesBurton a dbo:PropertyDeveloper ;
               foaf:name ""James Burton"" .
  ?child dbo:parent ?jamesBurton ;
         dbo:deathPlace ?childRestingPlace .

  # Resting place of an actor from the show with Emily Richard
  ?show dbo:actor ?actor ;
        dbo:spouse ?emilyRichard .
  ?emilyRichard foaf:name ""Emily Richard"" .
  ?actor dbo:deathPlace ?actorRestingPlace .

  # Resting place of Alan Cunningham
  ?alanCunningham foaf:name ""Alan Cunningham"" ;
                  dbo:deathPlace ?alanCunninghamRestingPlace .
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
294,22,test,"Give me the resting place of the awardee, that is a politician, of Distinguished Service Medal (U.S. Army) and resting place of the architect of P. D. Houston Jr. House.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Distinguished_Service_Medal_(U.S._Army)> . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/P._D._Houston_Jr._House> <http://dbpedia.org/ontology/architect> ?v3 . ?v3 <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?awardeeRestingPlace ?architectRestingPlace WHERE {
  # Find the politician who received the Distinguished Service Medal (U.S. Army)
  ?person a dbo:Politician ;
          dbo:honoraryTitle dbr:Distinguished_Service_Medal_(United_States_Army) .
  
  OPTIONAL { 
    ?person dbo:deathPlace ?awardeeRestingPlace .
  }
  
  # Find the architect of P. D. Houston Jr. House
  ?architect dbo:occupation dbr:Architect ;
             dbo:workForProject dbr:P._D._Houston_Jr._House .

  OPTIONAL { 
    ?architect dbo:deathPlace ?architectRestingPlace .
  }
}
```",4,5,5,2,2,2,3,28,0,0,1,0,0.0,0
232,47,test,"Give me the actor of the claim to fame, that is a film and a military conflict, of the professional in Actor, narrator and producer and child of the person born as John Devon Roland Pertwee.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/starring> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/ontology/knownFor> ?v4 . ?v0 <http://dbpedia.org/property/occupation> ""Actor, narrator and producer""@en . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v2 <http://dbpedia.org/ontology/child> ?result . ?v2 <http://dbpedia.org/property/birthName> ""John Devon Roland Pertwee""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  ?person dbo:name ""John Devon Roland Pertwee""@en .
  ?person dbo:child ?child .
  ?child dbo:profession dbr:Actor ;
         dbo:profession dbr:Narrator ;
         dbo:profession dbr:Producer .
  ?film dbo:title ""The Bill""@en ;
        dbo:actor ?actor .
  ?conflict dbo:name ""World War II""@en ;
            dbo:relatedWork ?film .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
161,29,test,"Give me the commander in Biscay Campaign and military force of Rif War and military force of the force, that is a societal event and a military conflict, of Francisco Largo Caballero.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Rif_War> . ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Biscay_Campaign> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commanderInBiscay ?rifWarForce ?caballeroMilitaryForce WHERE {
  # Commander in Biscay Campaign
  ?biscayCampaign dbo:partOf dbr:Spanish_Civil_War ;
                  dbo:commander ?commanderInBiscay .
  
  # Military force of Rif War
  ?rifWar dbo:participatingOrganisation ?rifWarForce .

  # Francisco Largo Caballero's military involvement
  ?caballeroMilitaryEvent dbo:agent dbr:Francisco_Largo_Caballero ;
                          a dbo:MilitaryConflict ;
                          dbo:participant ?caballeroMilitaryForce .
  
  FILTER EXISTS { ?biscayCampaign rdfs:label ?labelBiscay . FILTER(CONTAINS(LCASE(?labelBiscay), ""biscay campaign"")) }
  FILTER EXISTS { ?rifWar rdfs:label ?labelRif . FILTER(CONTAINS(LCASE(?labelRif), ""rif war"")) }
}
```",4,6,5,2,3,3,3,71,0,0,1,0,0.0,0
16,47,test,Give me the professional in the profession of the actor of Unnatural (TV series) and spouse of the person born as Ted Martin McGinley.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ""Ted Martin McGinley""@en . <http://dbpedia.org/resource/Unnatural_(TV_series)> <http://dbpedia.org/property/starring> ?v0 . ?v0 <http://dbpedia.org/property/occupation> ?v4 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/occupation> ?v4 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?professional WHERE {
  # Find the actor of ""Unnatural""
  ?actor dbo:performerIn dbr:Unnatural_(TV_series) .
  
  # Get the profession of this actor
  ?actor dbo:occupation ?profession .

  # Find Ted Martin McGinley
  ?ted a dbo:Person ;
      foaf:name ""Ted Martin McGinley""@en ;
      dbo:birthName ""Ted Martin McGinley"" .

  # Find his spouse
  ?ted dbo:spouse ?spouse .

  # Find another professional in the same profession as the actor
  ?professional dbo:occupation ?profession .
  
  FILTER(?actor != ?professional) # Ensure it's not the same person
}
```",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
427,24,test,Give me the party of Romano Prodi and party of the father of Lamberto Andreotti.,SELECT ?result WHERE { <http://dbpedia.org/resource/Lamberto_Andreotti> <http://dbpedia.org/property/father> ?v2 . <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/ontology/party> ?result . ?v2 <http://dbpedia.org/ontology/party> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?prodiPartyLabel ?andreottiFatherPartyLabel WHERE {
  # Romano Prodi's party affiliations
  dbr:Romano_Prodi dbo:partyAffiliation ?prodiParty .
  ?prodiParty rdfs:label ?prodiPartyLabel .

  # Giuseppe Andreotti (Lamberto Andreotti's father) and his party affiliations
  dbr:Lamberto_Andreotti dbo:father dbr:Giuseppe_Andreotti .
  dbr:Giuseppe_Andreotti dbo:partyAffiliation ?andreottiFatherParty .
  ?andreottiFatherParty rdfs:label ?andreottiFatherPartyLabel .

  # Filter to ensure labels are in English
  FILTER (lang(?prodiPartyLabel) = 'en')
  FILTER (lang(?andreottiFatherPartyLabel) = 'en')
}
```",3,3,4,2,2,3,3,71,0,0,3,0,0.0,0
801,45,test,"Give me the associated musical artist of the writer, that is a musical artist and an artist, of the album, that is a musical work and a work, of What U See Is What U Get and professional in  and producer of Westside Story (song).","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Westside_Story_(song)> <http://dbpedia.org/ontology/producer> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/What_U_See_Is_What_U_Get> <http://dbpedia.org/ontology/album> ?v0 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/writer> ?v1 . ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artist WHERE {
  ?album dbo:title ""What U See Is What U Get"" .
  ?album a dbo:Album .

  ?writer dbo:writerOf ?album ;
          a dbo:MusicalArtist, dbo:Artist .

  ?producer dbo:producerOf dbr:Westside_Story_(song) .
  
  FILTER (?writer = ?producer)
  
  BIND(?writer AS ?artist)
}
```",5,9,6,3,3,3,3,71,0,0,1,0,0.0,0
747,62,test,"Give me the person born on the birth date of the person decedent, that is an athlete and a soccer player, at Zolotonosha and band of the writer of the work, that is a song, of Amba Shepherd and band of Shèna.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Shèna> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v4 <http://dbpedia.org/ontology/birthDate> ?v3 . ?v4 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Zolotonosha> . ?v6 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Amba_Shepherd> . ?result <http://dbpedia.org/ontology/birthDate> ?v3 . ?v0 <http://dbpedia.org/property/writer> ?v6 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  # Step 1: Find the song written by Amba Shepherd
  ?song dbo:writer dbr:Amba_Shepherd ;
        a dbo:Song .

  # Step 2: Find Shèna's band
  ?shenaBand dbo:bandMember dbr:Shèna .

  # Step 3: Identify the writer of the song and their band
  ?songWriter dbo:writer ?song .
  ?songWriter dbo:member ?songBand .
  
  # Ensure the song band is Shèna's band
  FILTER(?songBand = ?shenaBand)

  # Step 4: Find a person born on the same date as the decedent
  ?decedent dbo:dateOfDeath ?deathDate ;
            dbo:birthDate ?birthDate .
  
  ?person dbo:birthDate ?sameBirthDate ;
          dbo:nationality dbr:Soccer_player ;
          dbo:sport dbr:Soccer .

  # Ensure birth dates match and person is from Zolotonosha
  FILTER(?sameBirthDate = ?birthDate)
  ?person dbo:placeOfBirth dbr:Zolotonosha .
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
328,45,test,"Give me the commander in Eastern Front (World War II) and awardee of Order of Suvorov and leader of the office, that is a government agency, of the leader, that is an office holder and a politician, of Gustav Jonson.",SELECT ?result WHERE { <http://dbpedia.org/resource/Gustav_Jonson> <http://dbpedia.org/property/leader> ?v0 . ?v1 <http://dbpedia.org/ontology/leader> ?result . ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Order_of_Suvorov> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/office> ?v1 . <http://dbpedia.org/resource/Eastern_Front_(World_War_II)> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commander ?officeLeader WHERE {
  # Find commander on Eastern Front during WWII who was awarded Order of Suvorov
  ?commander a dbo:MilitaryPerson ;
             dbo:rank ?rank ;
             dbo:awardsReceived ?award .
  
  FILTER CONTAINS(LCASE(?rank), ""eastern front"") .
  FILTER EXISTS { ?award dbr:Order_of_Suvorov . }

  # Find Gustav Jonson's role and associated office
  ?jonson a dbo:Politician ;
          foaf:name ""Gustav Jonson"" .

  ?office dbo:leader ?jonson ;
          a dbo:GovernmentAgency .
  
  # Find the leader of that office
  ?officeLeader a dbo:MilitaryPerson ;
                dbo:positionHeld ?position ;
                dbo:worksFor ?office .
}
```",5,8,6,3,3,3,3,71,0,0,1,0,0.0,0
492,36,test,"Give me the person decedent at the capital, that is a settlement, of the country of Khemis Miliana District and person decedent at French Algeria.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . ?v0 <http://dbpedia.org/ontology/capital> ?v1 . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/French_Algeria> . <http://dbpedia.org/resource/Khemis_Miliana_District> <http://dbpedia.org/ontology/country> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?personDecedent WHERE {
  ?personDecedent dbo:deathPlace ?place1 .
  ?place1 rdfs:label ""Khemis Miliana""@en .

  ?district dbo:capital ?capital .
  ?district dbr:Khemis_Miliana_District .
  
  ?capital rdf:type dbo:Settlement .
  ?capital rdfs:label ?capitalLabel .

  FILTER(CONTAINS(LCASE(?capitalLabel), LCASE(""khemis miliana"")))

  ?personDecedent dbo:deathPlace ?place2 .
  ?place2 rdfs:label ""Algeria""@en .
  
  OPTIONAL {
    ?place2 dbo:country dbr:French_Algeria .
  }
}
```",4,5,5,3,2,3,3,71,0,0,16,0,0.0,0
16,18,test,Give me the professional in Actress and spouse of Ted McGinley and person born as Georgeanne Marie Rice.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Georgeanne Marie Rice""@en . ?result <http://dbpedia.org/property/occupation> ""Actress""@en . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person WHERE {
  ?tedMcGinley a dbo:Person ;
               foaf:name ""Ted McGinley""@en .
  
  ?tedMcGinley dbo:spouse ?person .

  ?person dbo:occupation dbr:Actress ;
          foaf:name ""Georgeanne Marie Rice""@en .
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
404,65,test,"Give me the child of the father of Ernest Augustus, Duke of Brunswick and spouse of the person born, that is a royalty, as Princess Victoria Louise of Prussia and parent of the child, that is a royalty, of the parent, that is a royalty, of Prince George William of Hanover.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/parent> ?v3 . ?v4 <http://dbpedia.org/property/birthName> ""Princess Victoria Louise of Prussia""@en . <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/property/father> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> ?v6 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Prince_George_William_of_Hanover> <http://dbpedia.org/ontology/parent> ?v0 . ?v0 <http://dbpedia.org/ontology/child> ?v6 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?child WHERE {
  # Step 1: Identify the father of Ernest Augustus, Duke of Brunswick
  ?father dbo:child dbr:Ernest_Augustus,_Duke_of_Brunswick .
  
  # Step 2: Find the spouse of this father who is Princess Victoria Louise of Prussia
  ?spouse dbo:mother ?father ;
          foaf:name ""Victoria Louise, Princess Royal""@en ;
          dbo:birthPlace dbr:Prussia .

  # Step 3: Identify a child of this spouse who is royalty
  ?child dbo:parent ?spouse .
  
  # Step 4: Find the parent of this child who is also royalty
  ?royalParent dbo:child ?child ;
               foaf:name ?name ;
               dbo:birthPlace ?place .

  FILTER EXISTS { 
    VALUES ?place { dbr:Prussia } 
  }

  # Step 5: Identify Prince George William of Hanover as a child of this royal parent
  ?grandChild dbo:parent ?royalParent .
  FILTER (?grandChild = dbr:Prince_George_William_of_Hanover)
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
959,47,test,"Give me the member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of Eiji Ōtsuka and native of the residence, that is a country, of the leader, that is a politician, of 2010 Japanese House of Councillors election.",SELECT ?result WHERE { <http://dbpedia.org/resource/2010_Japanese_House_of_Councillors_election> <http://dbpedia.org/property/leader> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?result <http://dbpedia.org/ontology/team> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?v0 <http://dbpedia.org/property/residence> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Eiji_Ōtsuka> <http://dbpedia.org/ontology/almaMater> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?university WHERE {
  # Find Eiji Ōtsuka's alma mater
  dbr:Eiji_Ōtsuka dbo:almaMater ?university .
  
  # Ensure the university is Japanese, an organization, a university, and an educational institution
  ?university dbo:country dbr:Japan ;
              rdf:type dbo:Organisation ;
              rdf:type dbo:University ;
              rdf:type dbo:EducationalInstitution .

  # Find the leader of the 2010 Japanese House of Councillors election
  ?election dbp:electionDate ?date .
  FILTER (YEAR(?date) = 2010 && CONTAINS(LCASE(str(?election)), ""japanese house of councillors""))
  ?leader dbo:positionHeld ?election ;
          rdf:type dbo:Politician .

  # Find the country of residence for this leader
  ?leader dbp:nationality ?country .
}
```",5,11,6,3,2,3,3,71,0,0,84,0,0.0,0
427,63,test,"Give me the party of the father of Lamberto Andreotti and reference to the name of the party of Michele Pinto and party of the person born, that is an office holder and a politician, as Romano Antonio Prodi.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ""Romano Antonio Prodi""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Michele_Pinto> <http://dbpedia.org/ontology/party> ?v4 . <http://dbpedia.org/resource/Lamberto_Andreotti> <http://dbpedia.org/property/father> ?v6 . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . ?v4 <http://xmlns.com/foaf/0.1/name> ?v3 . ?v2 <http://dbpedia.org/ontology/party> ?result . ?v6 <http://dbpedia.org/ontology/party> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?fatherPartyLabel ?michelePintoPartyLabel ?prodiPartyLabel WHERE {
  # Lamberto Andreotti's father and his party
  OPTIONAL {
    dbr:Lamberto_Andreotti dbo:father ?father .
    ?father dbo:party ?fatherParty .
    ?fatherParty rdfs:label ?fatherPartyLabel .
  }

  # Michele Pinto's party
  OPTIONAL {
    dbr:Michele_Pinto dbo:party ?michelePintoParty .
    ?michelePintoParty rdfs:label ?michelePintoPartyLabel .
  }
  
  # Romano Antonio Prodi's party
  OPTIONAL {
    dbr:Romano_Antonio_Prodi dbo:party ?prodiParty .
    ?prodiParty rdfs:label ?prodiPartyLabel .
  }
}
```",7,9,8,3,3,3,3,71,0,2,2,0.0,0.0,0
778,16,test,"Give me the entity in the award of Ralph L. Brinster and author of the work, that is a software, of Bill Joy.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/location> ?v2 . ?v3 <http://dbpedia.org/ontology/author> ?result . <http://dbpedia.org/resource/Ralph_L._Brinster> <http://dbpedia.org/property/awards> ?v2 . ?v3 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Bill_Joy> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Software>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award ?software 
WHERE {
  # Find the award associated with Ralph L. Brinster
  ?person a dbo:Person ;
          foaf:name ""Ralph L. Brinster""@en .
  ?person dbo:honoraryTitle ?award .

  # Find software authored by Bill Joy
  ?work a dbo:Software ;
        dbo:author dbr:Bill_Joy ;
        rdfs:label ?softwareLabel .
  
  FILTER (lang(?softwareLabel) = 'en')
}
```",4,5,5,2,2,3,2,20,0,0,1,0,0.0,0
9,66,test,"Give me the alma mater of the mayor, that is a politician, of Northern Ireland Forum and alma mater of the awardee of Royal Medal and figure known as the nickname of the entity, that is an organisation and an educational institution, in Northern Ireland.",SELECT ?result WHERE { <http://dbpedia.org/resource/Northern_Ireland_Forum> <http://dbpedia.org/property/leader> ?v3 . ?result <http://dbpedia.org/property/nickname> ?v2 . ?v1 <http://dbpedia.org/property/nickname> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://dbpedia.org/ontology/almaMater> ?result . ?v6 <http://dbpedia.org/ontology/almaMater> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Northern_Ireland> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v6 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Medal> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?almaMater WHERE {
  # Find the mayor of Northern Ireland Forum and their alma mater
  ?mayor a dbo:Mayor ;
         dbo:officeHolderOf dbr:Northern_Ireland_Forum .
  ?mayor dbo:almaMater ?almaMater1 .

  # Find the awardee of Royal Medal and their alma mater
  ?awardee dbo:awardReceived dbr:Royal_Medal ;
           dbo:almaMater ?almaMater2 .

  # Ensure the alma mater is an organization and educational institution in Northern Ireland
  ?almaMater1 a dbo:EducationalInstitution, dbo:Organisation ;
              dbp:country dbr:Northern_Ireland .
  
  # Check if both individuals share the same alma mater
  FILTER (?almaMater1 = ?almaMater2)
  
  # Optional: Find any nicknames associated with these entities
  OPTIONAL { ?mayor dbo:nickName ?nickname . }
  OPTIONAL { ?awardee dbo:nickName ?awardNickname . }

  # Return the alma mater if it matches all conditions
  BIND(?almaMater1 AS ?almaMater)
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
281,66,test,"Give me the entity in the birth place, that is a country, of Bob Heffron and war of the profession, that is a military unit, of the professional, that is an office holder and a politician, in New Zealand Army and war of the awardee of Knight Grand Cross of the Order of the Bath.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Bob_Heffron> <http://dbpedia.org/ontology/birthPlace> ?v6 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_the_Bath> . ?v1 <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/New_Zealand_Army> . ?result <http://dbpedia.org/ontology/place> ?v6 . ?v1 <http://dbpedia.org/property/occupation> ?v2 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?entityInBirthPlace ?professionWar ?awardee
WHERE {
  # Step 1: Find Bob Heffron's birth place and ensure it is a country
  dbr:Bob_Heffron dbo:birthPlace ?birthPlace .
  ?birthPlace rdf:type dbo:Country .

  # Step 2: Find the profession related to a military unit in New Zealand Army
  ?professionWar dbo:relatedMilitaryUnit dbr:New_Zealand_Army ;
                rdf:type dbo:MilitaryUnit .

  # Step 3: Ensure the professional is an office holder and politician
  ?professional dbp:occupation ?professionWar ;
                dbo:officeHolder true ;
                dbo:politician true .

  # Step 4: Identify individuals awarded Knight Grand Cross of the Order of the Bath
  ?awardee dbo:award dbr:Knight_Grand_Cross_of_the_Order_of_the_Bath .
  
  # Linking the entities together
  ?professional dbp:birthPlace ?birthPlace .
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
747,69,test,"Give me the person born on the birth date of the person decedent, that is an athlete and a soccer player, at Zolotonosha and band of the person born as the persona of Shèna and band of the writer of Apollo (Hardwell song).",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v7 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Shèna> <http://xmlns.com/foaf/0.1/givenName> ?v1 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?result <http://dbpedia.org/ontology/birthDate> ?v3 . <http://dbpedia.org/resource/Apollo_(Hardwell_song)> <http://dbpedia.org/property/writer> ?v7 . ?v2 <http://dbpedia.org/property/birthName> ?v1 . ?v4 <http://dbpedia.org/ontology/birthDate> ?v3 . ?v4 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Zolotonosha> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?band
WHERE {
  # Step 1: Identify the decedent's birth date
  ?decedent a dbo:Person ;
            dbp:birthday ?birthDate .

  # Step 2: Find an athlete and soccer player born on that date at Zolotonosha
  ?athlete a dbo:Athlete, dbo:SoccerPlayer ;
           dbp:birthday ?birthDate ;
           dbp:placeOfBirth dbr:Zolotonosha .

  # Step 3: Identify Shèna's birth persona and their band
  ?shena a dbo:Person ;
         rdfs:label ""Shèna""@en ;
         dbp:band ?shenaBand .

  # Step 4: Find the writer of Apollo (Hardwell song)
  ?apolloSong dbo:lyricsBy ?writer .

  # Assuming we have a way to identify the specific song
  FILTER(STRSTARTS(?apolloSong, ""Apollo_(Hardwell_song)""))

  # Step 5: Determine band of the writer
  ?writer dbp:band ?writerBand .

  # Combine results
  BIND(?athlete AS ?person)
  OPTIONAL { ?person dbp:band ?band }
}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
92,21,test,"Give me the band member of the reference, that is an artist, to Nevermore and band of Joseph Michael.","SELECT ?result WHERE { ?v1 <http://xmlns.com/foaf/0.1/name> ""Nevermore""@en . ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Joseph_Michael> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?person WHERE {
  ?person dbo:bandMember <http://dbpedia.org/resource/Nevermore_(band)> .
  ?person dbo:bandMember <http://dbpedia.org/resource/Joseph_Michael> .
  ?person a dbo:Artist .
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
161,70,test,"Give me the commander in the force, that is an event, of the figure known as El Director and military force of the force, that is a societal event and an event and a military conflict, of Francisco Franco and military force of the force, that is a societal event and a military conflict, of the predecessor of Indalecio Prieto.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/ontology/commander> ?v1 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Indalecio_Prieto> . ?v7 <http://dbpedia.org/ontology/commander> ?v0 . ?v1 <http://xmlns.com/foaf/0.1/nick> ""El Director""@en . ?result <http://dbpedia.org/ontology/battle> ?v7 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v4 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Franco> . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?event WHERE {
  # Francisco Franco as a commander in societal or military conflict events
  {
    ?event dbo:commander dbr:Franco_Francisco .
    OPTIONAL { ?event rdf:type dbo:SocietalEvent . }
    OPTIONAL { ?event rdf:type dbo:MilitaryConflict . }
  }

  UNION

  # Manuel Azaña as a commander in societal or military conflict events
  {
    ?event dbo:commander dbr:Aza%C3%B1a_Manuel .
    OPTIONAL { ?event rdf:type dbo:SocietalEvent . }
    OPTIONAL { ?event rdf:type dbo:MilitaryConflict . }
  }
}
```",8,14,9,3,3,3,3,71,0,0,32,0,0.0,0
959,62,test,"Give me the member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of the person born in 1958 and manager of 2013 Júbilo Iwata season and native of the residence, that is a country, of the leader, that is a politician, of 2010 Japanese House of Councillors election.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/birthYear> ""1958""^^<http://www.w3.org/2001/XMLSchema#gYear> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. <http://dbpedia.org/resource/2013_Júbilo_Iwata_season> <http://dbpedia.org/ontology/manager> ?result . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?result <http://dbpedia.org/ontology/team> ?v2 . ?result <http://dbpedia.org/ontology/birthPlace> ?v5 . ?v4 <http://dbpedia.org/ontology/almaMater> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. <http://dbpedia.org/resource/2010_Japanese_House_of_Councillors_election> <http://dbpedia.org/property/leader> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/property/residence> ?v5 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?almaMater WHERE {
  # Step 1: Identify the leader of the 2010 Japanese House of Councillors election
  ?leader dbo:office ""Member of the House of Councillors""@en;
          dbo:election ""2010 Japanese House of Councillors election""@en;
          dbp:nationality dbr:Japan.

  # Step 2: Determine the native country of this leader
  ?leader dbp:nativePlace ?nativeCountry.
  
  # Step 3: Find the person born in 1958 and manager of the 2013 Júbilo Iwata season
  ?person dbo:birthdayYear ""1958""^^xsd:gyear;
          dbo:managerOf dbr:Júbilo_Iwata_2013_season.

  # Step 4: Identify the alma mater of this person
  ?person dbo:almaMater ?almaMater.
  
  # Step 5: Ensure the alma mater is an organization, a university, and an educational institution that is Japanese
  ?almaMater rdf:type dbo:Organisation;
             dbo:type dbr:University;
             dbo:type dbo:EducationalInstitution;
             dbp:country dbr:Japan.
  
  # Step 6: Ensure the alma mater is in the native country of the leader
  FILTER(?nativeCountry = dbr:Japan)
}
```",7,13,8,3,3,3,3,71,0,0,1,0,0.0,0
285,18,test,Give me the parent of the child of the spouse of Aristotle Onassis and spouse of the professional in .,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Aristotle_Onassis> . ?result <http://dbpedia.org/ontology/spouse> ?v3 . ?v3 <http://dbpedia.org/property/occupation> """"@en . ?v1 <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://dbpedia.org/ontology/parent> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parentOfChild ?spouseOfProfessional WHERE {
  # Step 1: Find Aristotle Onassis's spouse
  ?onassisSpouse dbo:spouse ?aristotleOnassis .
  
  FILTER(?aristotleOnassis = dbp:Aristotle_Onassis) .

  # Step 2: Determine the child of that spouse
  ?child dbo:parent ?onassisSpouse .
  
  # Step 3: Find the parent of that child
  ?parentOfChild dbo:parent ?child .

  # Step 4: Identify the professional (assuming a placeholder for now)
  ?professional dbp:profession ?someProfession .
  
  # Step 5: Find the spouse of that professional
  ?spouseOfProfessional dbo:spouse ?professional .
}
```",5,5,6,3,2,3,2,20,0,0,3,0,0.0,0
827,16,test,"Give me the child of the child, that is a royalty, of Grand Duchess Maria Pavlovna of Russia (1786–1859) and father of the child, that is a royalty, of Charles Augustus, Hereditary Grand Duke of Saxe-Weimar-Eisenach (1844–1894).","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Charles_Augustus,_Hereditary_Grand_Duke_of_Saxe-Weimar-Eisenach_(1844–1894)> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Grand_Duchess_Maria_Pavlovna_of_Russia_(1786–1859)> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> ?result . ?v2 <http://dbpedia.org/ontology/child> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?grandchild ?parent
WHERE {
  # Find Maria Pavlovna's children
  ?mariaChild dbo:childOf dbp:Maria_Pavlovna_of_Russia ;
              a dbo:Person .

  # Find grandchildren of Maria Pavlovna who are royalty
  ?grandchild dbo:childOf ?mariaChild ;
              a dbo:RoyalFamilyMember .

  # Find Charles Augustus' children
  ?charlesChild dbo:childOf dbp:Charles_Augustus_of_Saxe-Weimar-Eisenach ;
                a dbo:Person .

  # Find grandchildren of Charles Augustus who are royalty
  ?grandchild2 dbo:childOf ?charlesChild ;
               a dbo:RoyalFamilyMember .

  # Match the parent (royalty) of Charles' grandchild with Maria's grandchild
  ?parent dbo:child ?grandchild2 .
}
```",4,6,5,2,2,3,2,20,0,0,1,0,0.0,0
747,39,test,Give me the band of Amba Shepherd and band of the person born as the persona of Shèna.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ?v0 . <http://dbpedia.org/resource/Shèna> <http://xmlns.com/foaf/0.1/givenName> ?v0 . <http://dbpedia.org/resource/Amba_Shepherd> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band1 ?band2 WHERE {
  # Find the band associated with Amba Shepherd
  OPTIONAL { 
    ?person dbo:birthName ""Amba Shepherd""@en .
    ?person dbo:musicGroup ?band1 .
  }
  
  # Find the band associated with Shèna (born as Shèna Marie Thomas)
  OPTIONAL {
    ?person2 dbo:birthName ""Shèna Marie Thomas""@en .
    ?person2 dbo:musicGroup ?band2 .
  }

  FILTER(?band1 != dbr:Unknown && ?band2 != dbr:Unknown) # Ensure we have valid bands
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
281,51,test,"Give me the war of the profession, that is a military unit, of the professional, that is an office holder and a politician, in New Zealand Army and entity in the birth place, that is a country, of Bob Heffron.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/New_Zealand_Army> . ?v1 <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/Bob_Heffron> <http://dbpedia.org/ontology/birthPlace> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?profession ?militaryUnit WHERE {
  # Find Bob Heffron's birthplace
  dbr:Bob_Heffron dbo:birthPlace ?birthPlace .

  # Identify professions that are office holders and politicians in the birth place
  ?profession a dbo:OfficeHolder ;
             dbo:officeHolderOf ?office ;
             dbo:country ?birthPlace .
  
  FILTER EXISTS { ?office dbo:position dbr:Politician } .

  # Find military units in the New Zealand Army related to these professions
  ?militaryUnit a dbo:MilitaryUnit ;
                dbo:militaryBranch dbr:New_Zealand_Army ;
                dbo:profession ?profession .
}
```",5,9,6,3,2,3,3,71,0,0,1,0,0.0,0
294,25,test,"Give me the resting place of the awardee, that is a politician, of Distinguished Service Medal (U.S. Army) and resting place of the architect of P. D. Houston Jr. House and entity in Nashville, Tennessee.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Nashville,_Tennessee> . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Distinguished_Service_Medal_(U.S._Army)> . <http://dbpedia.org/resource/P._D._Houston_Jr._House> <http://dbpedia.org/ontology/architect> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/ontology/restingPlace> ?result . ?v4 <http://dbpedia.org/ontology/restingPlace> ?result . }","```sparql
# Query 1: Resting place of a politician who received the Distinguished Service Medal (U.S. Army)
SELECT ?person ?restingPlace WHERE {
  ?person dbo:award dbr:Distinguished_Service_Medal_(United_States_Army) .
  ?person rdf:type dbo:Politician .
  OPTIONAL { ?person dbo:deathPlace ?restingPlace . }
}

# Query 2: Resting place of the architect of P. D. Houston Jr. House
SELECT ?architect ?restingPlace WHERE {
  ?house dbo:architect ?architect ;
         rdfs:label ""P. D. Houston Jr. House""@en .
  OPTIONAL { ?architect dbo:deathPlace ?restingPlace . }
}

# Query 3: Notable entities in Nashville, Tennessee
SELECT DISTINCT ?entity WHERE {
  ?entity dbo:location dbr:Nashville,_Tennessee ;
          rdf:type ?type .
}
```",5,6,6,2,3,2,3,28,0,0,1,0,0.0,0
378,41,test,"Give me the war of the person born as Carl Pontus Gahn and war of the commander in Peninsular War and claim to fame of Louis des Balbes de Berton de Crillon, 1st Duke of Mahón.","SELECT ?result WHERE { <http://dbpedia.org/resource/Peninsular_War> <http://dbpedia.org/ontology/commander> ?v4 . <http://dbpedia.org/resource/Louis_des_Balbes_de_Berton_de_Crillon,_1st_Duke_of_Mahón> <http://dbpedia.org/ontology/knownFor> ?result . ?v2 <http://dbpedia.org/property/birthName> ""Carl Pontus Gahn""@en . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v4 <http://dbpedia.org/ontology/battle> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?warGahn ?commanderPeninsularWar ?fameCrillon WHERE {
  # Carl Pontus Gahn and the war he is associated with
  dbr:C._P._Gahn dbo:nationality dbr:Sweden ;
                 dbo:occupation dbr:Military_person .
  
  OPTIONAL { 
    ?person dbo:birthName ""Carl Pontus Gahn""@en .
    ?person dbo:associatedWith ?warGahn .
  }
  
  # Commander in the Peninsular War
  ?commanderPeninsularWar dbo:nationality ?nationality ;
                          dbo:occupation dbr:Military_person ;
                          dbo:participatedIn dbr:Peninsular_War .
  
  OPTIONAL {
    ?commanderPeninsularWar dbo:knownFor ?fameCommander .
  }
  
  # Louis des Balbes de Berton de Crillon, 1st Duke of Mahón
  dbr:Louis_des_Balbes_de_Berton_de_Crillon_1st_Duke_of_Mahón dbo:nationality ?nationality ;
                                                               dbo:occupation dbr:Military_person .
  
  OPTIONAL {
    dbr:Louis_des_Balbes_de_Berton_de_Crillon_1st_Duke_of_Mahón dbo:knownFor ?fameCrillon .
  }
}
```",5,5,6,2,3,3,3,71,0,0,2,0,0.0,0
303,21,test,"Give me the entity in Panama and party of the person born, that is a politician, as Arnulfo Arias Madrid and party of Guillermo Endara.","SELECT ?result WHERE { <http://dbpedia.org/resource/Guillermo_Endara> <http://dbpedia.org/ontology/party> ?result . ?v0 <http://dbpedia.org/property/birthName> ""Arnulfo Arias Madrid""@en . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Panama> . ?v0 <http://dbpedia.org/ontology/party> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?birthPlaceLabel ?partyLabel
WHERE {
  VALUES ?person { 
    dbr:Arnulfo_Arias_Madrid 
    dbr:Guillermo_Endara 
  }
  
  OPTIONAL { ?person dbo:birthPlace ?birthPlace . }
  OPTIONAL { ?person dbo:politicalParty ?party . }

  SERVICE <http://dbpedia.org/sparql> {
    ?birthPlace rdfs:label ?birthPlaceLabel .
    FILTER (lang(?birthPlaceLabel) = 'en')
    
    ?party rdfs:label ?partyLabel .
    FILTER (lang(?partyLabel) = 'en')
  }
}
```",4,5,5,2,3,2,3,28,0,0,1,0,0.0,0
701,27,test,"Give me the spouse of the father of the commander, that is a royalty, in Battle of Perire.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> ?v2 . <http://dbpedia.org/resource/Battle_of_Perire> <http://dbpedia.org/ontology/commander> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
  ?battle rdfs:label ""Battle of Perire""@en .
  ?battle dbo:commander ?commander .
  
  ?commander dbo:father ?father .
  
  ?father dbo:spouse ?spouse .
  
  FILTER EXISTS { 
    ?spouse dbp:title ?title .
    FILTER (CONTAINS(LCASE(?title), ""king"") || CONTAINS(LCASE(?title), ""queen"") || CONTAINS(LCASE(?title), ""prince"") || CONTAINS(LCASE(?title), ""princess""))
  }
}
```",3,4,4,3,1,3,3,71,0,0,5,0,0.0,0
959,58,test,"Give me the manager of the team of the manager, that is a sports manager, of 1998 Kashima Antlers season and member of University of Tsukuba and native of the residence, that is a country, of Yōichi Masuzoe.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/manager> ?v4 . <http://dbpedia.org/resource/Yōichi_Masuzoe> <http://dbpedia.org/property/residence> ?v5 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?result <http://dbpedia.org/ontology/birthPlace> ?v5 . ?result <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/University_of_Tsukuba> . <http://dbpedia.org/resource/1998_Kashima_Antlers_season> <http://dbpedia.org/ontology/manager> ?v4 . ?v0 <http://dbpedia.org/ontology/manager> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?teamManager WHERE {
  # Step 1: Identify Yōichi Masuzoe's native country
  dbr:Yōichi_Masuzoe dbo:nationality ?country .

  # Step 2: Find the manager of Kashima Antlers in 1998
  dbr:Kashima_Antlers_1998_season dbo:manager ?kashimaManager .
  
  # Step 3: Ensure this person is a sports manager
  ?kashimaManager rdf:type dbo:SportsManager .

  # Step 4: Check if the manager attended University of Tsukuba
  ?kashimaManager dbo:almaMater dbr:University_of_Tsukuba .
  
  # Step 5: Identify the team managed by this sports manager
  ?kashimaManager dbo:manager ?team .

  # Step 6: Find the manager of that team
  ?team dbo:manager ?teamManager .
}
```",6,8,7,3,3,3,3,71,0,0,2,0,0.0,0
421,20,test,Give me the band member of Senidah and native of the birthplace of Samir Bekrić and person born as Edin Dervišhalidović.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Edin Dervišhalidović""@en . <http://dbpedia.org/resource/Samir_Bekrić> <http://dbpedia.org/ontology/birthPlace> ?v3 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Senidah> . ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  # Find band members of Senidah
  ?bandMember dbo:memberOf dbr:Senidah .
  
  # Find the birthplace of Samir Bekrić
  ?samirBekric dbo:birthPlace ?birthPlace .
  FILTER(?samirBekric = dbr:Samir_Bekrić)
  
  # Find someone native to that birthplace
  ?person dbo:nativePlace ?birthPlace .
  
  # Find the person born as Edin Dervišhalidović
  ?edinDervis dbp:originalName ""Edin Dervišhalidović""@en .
  FILTER(?edinDervis = ?person)
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
767,44,test,Give me the alma mater of the administration of George K. Nash and reference to the alter ego of Black Hood and entity in Baden-Württemberg.,SELECT ?result WHERE { <http://dbpedia.org/resource/Black_Hood> <http://dbpedia.org/property/alterEgo> ?v2 . ?v4 <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v4 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/George_K._Nash> . ?result <http://dbpedia.org/ontology/state> <http://dbpedia.org/resource/Baden-Württemberg> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?almaMater ?alterEgo ?entityInBadenWurttemberg WHERE {
  # Alma mater of George K. Nash
  OPTIONAL {
    ?nash a dbo:Person ;
          foaf:name ""George K. Nash"" .
    ?nash dbo:almaMater ?almaMater .
  }

  # Alter ego of Black Hood
  OPTIONAL {
    ?character a dbo:FictionalCharacter ;
               dbp:alias ""Black Hood"" .
    ?character dbo:alterEgo ?alterEgo .
  }

  # Entity in Baden-Württemberg
  OPTIONAL {
    ?entityInBadenWurttemberg a dbo:Place ;
                              dbo:country dbr:Germany ;
                              dbo:stateOrProvince dbr:Baden-Württemberg .
  }
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
994,56,test,"Give me the associated musical artist of the associated musical artist of Watchtower (band) and associated musical artist of Red Tide (band) and band member of the person born, that is a musical artist, as the persona of Don Dokken.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Red_Tide_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/birthName> ?v4 . <http://dbpedia.org/resource/Don_Dokken> <http://xmlns.com/foaf/0.1/givenName> ?v4 . <http://dbpedia.org/resource/Watchtower_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?commonArtist WHERE {
  # Find associated musical artist of Watchtower
  ?watchtower dbo:musicalArtist ?artist1 .
  VALUES ?watchtower {<http://dbpedia.org/resource/Watchtower_(band)>} .

  # Find associated musical artist of Red Tide
  ?redTide dbo:musicalArtist ?artist2 .
  VALUES ?redTide {<http://dbpedia.org/resource/Red_Tide_(band)>} .

  # Ensure the artists are the same
  FILTER (?artist1 = ?artist2)
  BIND(?artist1 AS ?commonArtist)

  # Find band member of Don Dokken who is also a musical artist
  ?dokkenMember foaf:member ?person .
  ?person dbo:birthPlace ?place .
  ?person dbo:musicalArtist ?commonArtist .
  VALUES ?dokken {<http://dbpedia.org/resource/Don_Dokken>} .

  # Ensure the person is associated with Don Dokken
  ?band dbo:member ?dokkenMember .
  FILTER(?band = ?dokken)
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
488,64,test,"Give me the birth place of the commander in the war, that is a military conflict and an event and a societal event, of Saitō Hajime and administration of the father of the spouse, that is a royalty, of Tokugawa Masako and death place of Tokugawa Ieyasu.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v3 <http://dbpedia.org/ontology/commander> ?v2 . <http://dbpedia.org/resource/Saitō_Hajime> <http://dbpedia.org/ontology/battle> ?v3 . <http://dbpedia.org/resource/Tokugawa_Ieyasu> <http://dbpedia.org/ontology/deathPlace> ?result . ?v0 <http://dbpedia.org/property/father> ?v1 . ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Tokugawa_Masako> . ?result <http://dbpedia.org/property/leader> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?birthPlaceSaito ?war ?administration ?deathPlaceIeyasu WHERE {
  # Saitō Hajime's birthplace
  ?saito a dbo:Person ;
         foaf:name ""Saitō Hajime""@en ;
         dbo:birthPlace ?birthPlaceSaito .

  # War in which Saitō Hajime was a commander
  ?war a dbo:MilitaryConflict, dbo:Event, dbo:SocietalEvent ;
       dbo:commander ?saito .

  # Tokugawa Masako's spouse and her father (royalty)
  ?masako a dbo:Person ;
          foaf:name ""Tokugawa Masako""@en ;
          dbo:spouse ?spouse .
  
  ?spouse foaf:parent ?father .
  ?father a dbo:Royalty .

  # Administration of Tokugawa Masako's spouse's father
  ?administration dbo:administrator ?father .

  # Death place of Tokugawa Ieyasu
  ?ieyasu a dbo:Person ;
          foaf:name ""Tokugawa Ieyasu""@en ;
          dbo:deathPlace ?deathPlaceIeyasu .
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
528,51,test,Give me the force of the person born as the birth name of Narciso Campero and war of the commander in Battle of La Rinconada de Ate.,SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/commander> ?v2 . ?v2 <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Narciso_Campero> <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Battle_of_La_Rinconada_de_Ate> <http://dbpedia.org/ontology/commander> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?birthName ?force ?war
WHERE {
  # Find Narciso Campero's birth name and any associated force
  dbr:Narciso_Campero_Latorre dbo:birthName ?birthName .
  
  OPTIONAL {
    ?person dbo:birthName ?birthName .
    ?person dbo:militaryService ?force .
  }
  
  # Find the commander of the Battle of La Rinconada de Ate and associated war
  dbr:Battle_of_La_Rinconada_de_Ate dbo:commander ?commander .
  ?battle dbo:partOf ?war .
}
```",5,5,6,3,2,3,3,71,0,0,2,0,0.0,0
92,24,test,"Give me the associated musical artist of the person born, that is an artist, as Jim Sheppard and band of Joseph Michael.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Joseph_Michael> . ?v2 <http://dbpedia.org/property/birthName> ""Jim Sheppard""@en . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artist WHERE {
  VALUES (?person) { 
    dbr:Jim_Sheppard 
    dbr:Joseph_Michael_(musician)
  }
  
  ?person dbo:associatedBandOrMusicalArtist ?artist .
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
617,42,test,"Give me the child of the child, that is a royalty, of Seleucus II Callinicus and parent of the child of Antiochus (son of Antiochus III the Great) and spouse of Laodice IV.",SELECT ?result WHERE { <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/child> ?v1 . ?result <http://dbpedia.org/ontology/child> ?v1 . ?result <http://dbpedia.org/property/father> ?v2 . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seleucus_II_Callinicus> . <http://dbpedia.org/resource/Laodice_IV> <http://dbpedia.org/ontology/spouse> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?childOfChild WHERE {
  ?parent dbo:spouse ?laodice4 .
  ?parent dbp:spouse ?antiochus3 .
  
  ?antiochus3 dbo:child ?antiochusSon .
  ?antiochusSon dbo:child ?child .

  ?seleucus2 dbo:child ?childOfSeleucus2 .
  ?childOfSeleucus2 dbo:child ?childOfChild .

  FILTER (?parent = <http://dbpedia.org/resource/Laodice_IV> && 
          ?laodice4 = <http://dbpedia.org/resource/Laodice_IV> &&
          ?antiochus3 = <http://dbpedia.org/resource/Antiochus_III_the_Great> &&
          ?seleucus2 = <http://dbpedia.org/resource/Seleucus_II_Callinicus>)
  
  FILTER EXISTS { ?childOfChild dbo:royalty ?x . }
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
92,57,test,"Give me the associated musical artist of the person born, that is an artist, as the actor of Return to Nuke 'Em High Volume 1 and band member of Nevermore and band of the person born as Joseph Michael Furney.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Nevermore> . ?v5 <http://dbpedia.org/property/birthName> ?v0 . <http://dbpedia.org/resource/Return_to_Nuke_'Em_High_Volume_1> <http://dbpedia.org/property/starring> ?v0 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v3 <http://dbpedia.org/property/birthName> ""Joseph Michael Furney""@en . ?result <http://dbpedia.org/ontology/bandMember> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artist WHERE {
  # Find the actor of ""Return to Nuke 'Em High Volume 1""
  ?actor dbo:starringIn dbr:Return_to_Nuke_'Em_High_Volume_1 .
  
  # Ensure this person is a member of Nevermore
  ?actor dbo:memberOf dbr:Nevermore .

  # Check if the actor's birth name is Joseph Michael Furney
  ?actor dbo:birthName ""Joseph Michael Furney""@en .

  # Get the associated musical artist or band for this person
  ?artist dbo:associatedBand ?actor .
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
92,35,test,"Give me the band of the person born as Joseph Michael Furney and band member of the reference, that is an artist, to Nevermore.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v1 <http://dbpedia.org/property/birthName> ""Joseph Michael Furney""@en . ?result <http://dbpedia.org/ontology/bandMember> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://xmlns.com/foaf/0.1/name> ""Nevermore""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band WHERE {
  ?person rdfs:label ""Jon Davison""@en .
  ?person foaf:name ""Joseph Michael Furney"" .
  
  ?membership dbo:member ?person ;
              dbo:group ?band .
  
  OPTIONAL { 
    ?band dbo:reference dbr:Nevermore .
  }
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
345,19,test,"Give me the team of the person born, that is a soccer player and a soccer manager, on the birth date of Eiður Guðjohnsen and figure known as the nickname of FC Vaduz.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/FC_Vaduz> <http://dbpedia.org/property/nickname> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v4 <http://dbpedia.org/ontology/birthDate> ?v0 . <http://dbpedia.org/resource/Eiður_Guðjohnsen> <http://dbpedia.org/ontology/birthDate> ?v0 . ?result <http://dbpedia.org/property/nickname> ?v2 . ?result <http://dbpedia.org/ontology/manager> ?v4 . },"```sparql
# Step 1: Get Eiður Guðjohnsen's birth date
SELECT ?birthDate WHERE {
    dbpedia:þorsteinsson_eidur dbo:birthDate ?birthDate .
}

# Step 2: Find a soccer player and manager born on the same date
SELECT DISTINCT ?person WHERE {
    ?person dbo:birthDate ?birthDate ;
            rdf:type dbo:SoccerPlayer ;
            dbo:occupation dbpedia:Association_football_manager .
    FILTER (?birthDate = <Eiður_Guðjohnsen_birth_date>) # Replace with actual birth date from Step 1
}

# Step 3: Get FC Vaduz's nickname
SELECT ?nickname WHERE {
    dbpedia:FC_Vaduz dbo:nickname ?nickname .
}

# Step 4: Find the team of the person identified in Step 2
SELECT DISTINCT ?team WHERE {
    ?person dbo:currentTeam ?team .
    # Ensure ?person is the one found in Step 2
}
```

Note: Replace `<Eiður_Guðjohnsen_birth_date>` with the actual birth date obtained from Step 1.",5,7,6,3,2,3,2,20,0,0,1,0,0.0,0
801,29,test,"Give me the associated musical artist of Chris Taylor (music producer) and producer of the work, that is a musical work and a song and a work, of 50 Cent and professional in .","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/50_Cent> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?result <http://dbpedia.org/property/occupation> """"@en . ?v3 <http://dbpedia.org/ontology/producer> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. <http://dbpedia.org/resource/Chris_Taylor_(music_producer)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?song ?artist WHERE {
  # Find Chris Taylor as a music producer
  ?chrisTaylor a dbo:MusicProducer ;
              foaf:name ""Chris Taylor"" .

  # Find works associated with Chris Taylor and 50 Cent
  ?work dbo:producer ?chrisTaylor ;
        dbo:performer ?artist ;
        dbo:genre dbr:Songs .
  
  # Ensure the work is also produced by 50 Cent
  ?work dbo:producer dbr:50_Cent .

  # Filter to ensure it's a song and involves both artists
  FILTER EXISTS { ?work rdf:type dbo:Song }
}
```",4,7,5,2,3,3,3,71,0,0,1,0,0.0,0
184,69,test,"Give me the parent of the child of the parent of Archduchess Margaret of Austria (born 1925) and child of the child of Archduke Joseph Karl of Austria and parent of the native of the landmark at elevation, that is a settlement, of 96.0.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Margaret_of_Austria_(born_1925)> . ?v2 <http://dbpedia.org/property/father> ?v1 . ?v3 <http://dbpedia.org/ontology/birthPlace> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v7 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Karl_of_Austria> . ?result <http://dbpedia.org/property/father> ?v7 . ?v4 <http://dbpedia.org/ontology/elevation> ""96.0""^^<http://www.w3.org/2001/XMLSchema#double> . ?result <http://dbpedia.org/ontology/child> ?v3 . ?result <http://dbpedia.org/ontology/child> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?finalEntity WHERE {
  # Part 1: Archduchess Margaret of Austria (born 1925)
  ?margaret a dbo:Person ;
            dbo:birthYear ""1925""^^xsd:gYear ;
            dbo:parent ?parentMargaret .
  
  ?childOfParent dbr:Archduke_Joseph_Karl_of_Austria ;
                 dbo:parent ?parentChild .

  # Part 2: Landmark at elevation 96.0 meters
  ?landmark a dbo:Settlement ;
            dbo:elevation ""96.0""^^xsd:float .
  
  ?native dbr:Archduke_Joseph_Karl_of_Austria ;
          dbo:nativePlace ?landmark .

  # Find the parent of the child of Margaret's parent and the native of the landmark
  ?finalEntity dbo:parent ?childOfParent ;
               dbo:nativePlace ?landmark .
}
```",8,9,9,3,3,3,3,71,0,0,1,0,0.0,0
391,62,test,"Give me the native of the figure known as the nick name of Jackson, Tennessee and actor of the claim to fame, that is a work, of the spouse of Sherry Hormann and actor of All About the Andersons.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/nickname> ?v4 . ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . <http://dbpedia.org/resource/Jackson,_Tennessee> <http://xmlns.com/foaf/0.1/nick> ?v4 . ?v6 <http://dbpedia.org/ontology/starring> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/ontology/knownFor> ?v6 . <http://dbpedia.org/resource/Sherry_Hormann> <http://dbpedia.org/ontology/spouse> ?v0 . <http://dbpedia.org/resource/All_About_the_Andersons> <http://dbpedia.org/property/starring> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nativePlace WHERE {
  # Step 1: Identify Sherry Hormann's spouse and their claim to fame
  ?spouse a dbo:Person ;
          dbo:spouse dbr:Sherry_Hormann ;
          dbo:work ?claimToFame .

  # Step 2: Find the actor of ""All About the Andersons""
  ?actor a dbo:Actor ;
         dbo:film dbr:All_About_the_Andersons .

  # Step 3: Identify the nickname of Jackson, Tennessee
  dbr:Jackson,_Tennessee dbo:nickname ?nickname .

  # Step 4: Connect these elements to find a common figure
  FILTER(?spouse = ?actor && ?claimToFame = ?work)

  # Step 5: Determine the native place of this person
  ?spouse dbo:birthPlace ?nativePlace .
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
391,45,test,"Give me the actor of the movie, that is a movie and a work and a television show, with the professional in  and native of Compton, California and actor of The Departed.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/occupation> """"@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Compton,_California> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://dbpedia.org/property/starring> ?v0 . ?v1 <http://dbpedia.org/property/starring> ?result . <http://dbpedia.org/resource/The_Departed> <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  ?movie a dbo:Film ;
         dbo:genre ?genre .
  
  FILTER (?genre IN (dbr:Work, dbr:TelevisionShow))
  
  ?actor dbo:birthPlace dbr:Compton,_California ;
         dbo:film ?movie .

  ?actor dbo:film dbr:The_Departed .
}
```",5,8,6,3,3,3,3,71,0,0,1,0,0.0,0
427,59,test,Give me the reference to the name of the party of Michele Pinto and party of the father of the alumnus of Massachusetts Institute of Technology.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Massachusetts_Institute_of_Technology> . ?v3 <http://xmlns.com/foaf/0.1/name> ?v2 . <http://dbpedia.org/resource/Michele_Pinto> <http://dbpedia.org/ontology/party> ?v3 . ?v5 <http://dbpedia.org/ontology/party> ?result . ?v0 <http://dbpedia.org/property/father> ?v5 . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?micheleParty ?fatherParty WHERE {
  # Find Michele Pinto's party
  ?michele a dbo:Person ;
           foaf:name ""Michele Pinto""@en .
  OPTIONAL { ?michele dbp:party ?micheleParty . }

  # Find MIT alumni and their fathers' parties
  ?alumnus a dbo:Person ;
           dbo:almaMater <http://dbpedia.org/resource/Massachusetts_Institute_of_Technology> .
  OPTIONAL { ?father foaf:parentOf ?alumnus .
             ?father dbp:party ?fatherParty . }
}
```",6,6,7,3,2,3,3,71,2,0,0,1.0,1.0,1.0
754,18,test,Give me the parent of the parent of the parent of Min Linka and parent of the child of Ram Khamhaeng.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v3 . <http://dbpedia.org/resource/Min_Linka> <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/Ram_Khamhaeng> <http://dbpedia.org/ontology/child> ?v3 . ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://dbpedia.org/ontology/parent> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?ancestorMinLinka ?descendantRamKhamhaeng WHERE {
  # Min Linka's ancestor (parent of the parent of the parent)
  ?minLinka dbo:child ?grandparent1 .
  ?grandparent1 dbo:child ?greatGrandparent1 .
  ?greatGrandparent1 dbo:child ?ancestorMinLinka .

  FILTER(STRSTARTS(LCASE(?ancestorMinLinka), ""http://dbpedia.org/resource/""))

  # Ram Khamhaeng's descendant (parent of the child)
  ?ramKhamhaeng dbo:child ?child .
  ?child dbo:parent ?descendantRamKhamhaeng .

  FILTER(STRSTARTS(LCASE(?ramKhamhaeng), ""http://dbpedia.org/resource/Ram_Khamhaeng""))
  FILTER(STRSTARTS(LCASE(?child), ""http://dbpedia.org/resource/""))

  # Ensure both are human entities
  ?ancestorMinLinka a dbo:Human .
  ?descendantRamKhamhaeng a dbo:Human .

}
```",5,5,6,3,2,3,2,20,0,0,1,0,0.0,0
378,54,test,"Give me the war of the person born as Carl Pontus Gahn and claim to fame of Louis des Balbes de Berton de Crillon, 1st Duke of Mahón and war of the commander in the reference, that is a military conflict, to Peninsular War.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/birthName> ""Carl Pontus Gahn""@en . ?v0 <http://xmlns.com/foaf/0.1/name> ""Peninsular War""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/ontology/commander> ?v5 . ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v5 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Louis_des_Balbes_de_Berton_de_Crillon,_1st_Duke_of_Mahón> <http://dbpedia.org/ontology/knownFor> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person1War ?person2ClaimToFame ?person2War WHERE {
  # Carl Pontus Gahn's war involvement
  ?gahn a dbo:Person ;
        dbp:birthName ""Carl Pontus Gahn"" .
  ?gahn dbo:participatedIn ?person1War .

  # Louis des Balbes de Berton de Crillon, 1st Duke of Mahón's claim to fame and war involvement
  ?crillon a dbo:Person ;
           dbp:name ""Louis des Balbes de Berton de Crillon, 1st Duke of Mahón"" .
  ?crillon dbo:claimToFame ?person2ClaimToFame .
  ?crillon dbo:participatedIn ?person2War .

  # Ensure Peninsular War is included
  VALUES ?peninsularWar { <http://dbpedia.org/resource/Peninsular_War> }
  
  FILTER (?person1War = ?peninsularWar || ?person2War = ?peninsularWar)
}
```",6,7,7,3,3,3,3,71,0,0,2,0,0.0,0
701,65,test,Give me the parent of the child of the child of Seti I and spouse of the father of Merneptah and parent of the child of Nefertari.,SELECT ?result WHERE { <http://dbpedia.org/resource/Nefertari> <http://dbpedia.org/ontology/child> ?v4 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seti_I> . <http://dbpedia.org/resource/Merneptah> <http://dbpedia.org/property/father> ?v3 . ?result <http://dbpedia.org/ontology/spouse> ?v3 . ?v6 <http://dbpedia.org/property/father> ?v0 . ?v4 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/child> ?v6 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Seti I's child (Merenptah)
  ?merenptah dbo:childOf dbr:Seti_I .
  
  # Merenptah's spouse
  ?isetnofret dbo:spouse ?merenptah .

  # Ramesses II is the father of Merenptah and Nefertari's child
  ?ramessesII dbo:child dbr:Merenptah ;
              dbo:child ?nefertariChild .
  
  # Nefertari's child (Merenptah)
  ?nefertariChild dbo:parent dbr:Nefertari .

  # Ramesses II is the spouse of Tuya
  ?tuya dbo:spouse ?ramessesII .

  # Seti I's parent (Ramesses II)
  ?setiI dbo:childOf ?ramessesII .
  
  # Ensure all conditions are met for the same person
  FILTER (?isetnofret = dbr:Isetnofret && ?tuya = dbr:Tuya && ?merenptah = dbr:Merenptah && ?nefertariChild = dbr:Merenptah)
}
```",7,7,8,3,3,3,3,71,0,0,1,0,0.0,0
783,18,test,"Give me the band member of the person born, that is an artist and a musical artist, as Priscilla Opoku-Kwarteng and associated musical artist of the band member of the person born as Samuel Ofori Amponsah.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://dbpedia.org/property/birthName> ""Priscilla Opoku-Kwarteng""@en . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://dbpedia.org/property/birthName> ""Samuel Ofori Amponsah""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?priscillaBandMember ?stonebwoyBandMember WHERE {
  # Priscilla Opoku-Kwarteng (Ebony)
  ?priscilla a dbo:MusicalArtist ;
             foaf:name ""Priscilla Opoku-Kwarteng"" ;
             dbo:bandMember ?priscillaBandMember .

  # Samuel Ofori Amponsah (Stonebwoy)
  ?stonebwoy a dbo:MusicalArtist ;
              foaf:name ""Samuel Ofori Amponsah"" ;
              dbo:bandMember ?stonebwoyBandMember .
}
```",5,7,6,3,2,3,2,20,0,0,1,0,0.0,0
959,57,test,"Give me the member of University of Tsukuba and native of the residence, that is a country, of the leader, that is a politician, of 2010 Japanese House of Councillors election and manager of the team of Takashi Sekizuka.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/manager> ?result . ?result <http://dbpedia.org/ontology/birthPlace> ?v4 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Takashi_Sekizuka> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/2010_Japanese_House_of_Councillors_election> <http://dbpedia.org/property/leader> ?v1 . ?result <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/University_of_Tsukuba> . ?v1 <http://dbpedia.org/property/residence> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX wd: <http://www.wikidata.org/entity/>

SELECT DISTINCT ?person WHERE {
  # Step 1: Identify the leader of the 2010 Japanese House of Councillors election
  ?politician dbo:electionResult ""Japanese House of Councillors"" ;
             dbo:electionYear ""2010"" ;
             dbo:positionTitle ""Leader""@en .
  
  # Step 2: Determine the native country of this politician
  ?politician dbo:nationality ?country .

  # Step 3: Find a member of University of Tsukuba native to that country
  ?member dbo:almaMater dbr:University_of_Tsukuba ;
          dbo:nationality ?country .
  
  # Step 4: Identify managers of Takashi Sekizuka's team
  ?manager dbo:managesTeam dbr:Takashi_Sekizuka .

  # Combine conditions to find the person who satisfies all criteria
  FILTER (?member = ?person && ?person = ?manager)
}
```",6,8,7,3,3,3,3,71,0,0,2,0,0.0,0
328,46,test,Give me the awardee of the award of the commander in Volcano and Ryukyu Islands campaign and commander in the force of Ferenc Szálasi.,SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Ferenc_Szálasi> . <http://dbpedia.org/resource/Volcano_and_Ryukyu_Islands_campaign> <http://dbpedia.org/ontology/commander> ?v2 . ?v4 <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/property/awards> ?v1 . ?v2 <http://dbpedia.org/property/awards> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?awardee WHERE {
  # Part 1: Awardee for Commander in Volcano and Ryukyu Islands Campaign
  {
    ?award dbo:recipient ?person .
    ?award dbo:description ?description .
    FILTER(CONTAINS(LCASE(?description), ""volcano"") && CONTAINS(LCASE(?description), ""ryukyu islands"") && CONTAINS(LCASE(?description), ""commander""))
    BIND(?person AS ?awardee)
  }
  
  UNION
  
  # Part 2: Awardee for Commander in the Force of Ferenc Szálasi
  {
    ?award dbo:recipient ?person .
    ?award dbo:description ?description .
    FILTER(CONTAINS(LCASE(?description), ""ferenc szálasi"") && CONTAINS(LCASE(?description), ""commander""))
    BIND(?person AS ?awardee)
  }
}
```",5,5,6,3,2,3,3,71,0,0,5,0,0.0,0
404,66,test,"Give me the spouse of the person born, that is a royalty, as Princess Victoria Louise of Prussia and child of the father of the spouse of Princess Victoria Louise of Prussia and parent of the child, that is a royalty, of Ernest Augustus, Duke of Brunswick.","SELECT ?result WHERE { <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> ?v6 . <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/ontology/child> ?v6 . ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/birthName> ""Princess Victoria Louise of Prussia""@en . ?v1 <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/ontology/parent> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?spouse WHERE {
  # Step 1: Identify Princess Victoria Louise of Prussia and her spouse
  ?princess a dbo:Princess ;
           foaf:name ""Victoria Louise, Princess Royal""@en .
  
  ?princess dbo:spouse ?spouse .

  # Step 2: Find the father of that spouse
  ?spouse foaf:parent ?father .

  # Step 3: Identify the child of this father who is royalty and also a child of Ernest Augustus, Duke of Brunswick
  ?child foaf:parent ?father ;
         dbo:childOf ?ernestAugustus .
  
  ?ernestAugustus a dbo:Duke ;
                  foaf:name ""Ernest Augustus, Duke of Brunswick""@en .

  # Step 4: Determine the spouse of this identified person (the child)
  ?child dbo:spouse ?finalSpouse .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
161,66,test,"Give me the commander in the force, that is an event, of the figure known as El Director and military force of the force, that is a societal event and an event and a military conflict, of Francisco Franco and military force of the force, that is a societal event and a military conflict, of Francisco Largo Caballero.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v6 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/commander> ?v1 . ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Franco> . ?v1 <http://xmlns.com/foaf/0.1/nick> ""El Director""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v6 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  ?event dbo:participatedInMilitaryConflict [
    a dbo:MilitaryConflict ;
    dbo:commander ?commander .
  ].
  
  ?force dbo:commander ?commander ;
         dbo:involvedInEvent ?event .

  FILTER EXISTS { 
    ?event dbo:participant dbr:Franco_Francisco .
    ?event dbo:participant dbr:Largo_Caballero_Francisco .
  }
}
```",7,13,8,3,3,3,3,71,0,0,32,0,0.0,0
184,21,test,Give me the parent of Archduchess Ilona of Austria and parent of the native of Budapest.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v1 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Ilona_of_Austria> . ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Budapest> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

# Query for the parent(s) of Archduchess Ilona of Austria
SELECT ?parent WHERE {
  dbr:Ilona_of_Austria dbo:childOf ?parent .
}

UNION

# Query for the parent(s) of a native of Budapest
SELECT DISTINCT ?native ?parent WHERE {
  ?native dbo:birthPlace dbr:Budapest ;
          dbo:childOf ?parent .
}
```",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
959,70,test,"Give me the native of the residence, that is a country, of the leader, that is a politician, of 2010 Japanese House of Councillors election and manager of the team of the manager, that is a sports manager, of 1998 Kashima Antlers season and member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of Eiji Ōtsuka.",SELECT ?result WHERE { <http://dbpedia.org/resource/1998_Kashima_Antlers_season> <http://dbpedia.org/ontology/manager> ?v5 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/ontology/manager> ?result . ?result <http://dbpedia.org/ontology/birthPlace> ?v6 . <http://dbpedia.org/resource/Eiji_Ōtsuka> <http://dbpedia.org/ontology/almaMater> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://dbpedia.org/property/residence> ?v6 . ?result <http://dbpedia.org/ontology/team> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. <http://dbpedia.org/resource/2010_Japanese_House_of_Councillors_election> <http://dbpedia.org/property/leader> ?v1 . ?v0 <http://dbpedia.org/ontology/manager> ?v5 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?nativeCountry WHERE {
  # Step 1: Find the leader of the 2010 Japanese House of Councillors election
  ?politician dbo:office ""House of Councillors""@en .
  ?politician dbo:electionDate ?date .
  FILTER (YEAR(?date) = 2010 && CONTAINS(LCASE(STR(?politician)), ""japan"")) .

  # Step 2: Find the manager of the team managed by the sports manager of the 1998 Kashima Antlers season
  ?sportsManager dbo:teamManaged ?kashimaAntlers .
  ?kashimaAntlers dbo:seasonStartYear ?startYear .
  FILTER (?startYear = 1998) .

  ?sportsManager dbo:managerOf ?teamManager .
  ?teamManager dbo:managerOf ?finalManager .

  # Step 3: Find the alma mater of Eiji Ōtsuka
  ?eijiOotsuka foaf:name ""Eiji Ōtsuka""@en .
  ?eijiOotsuka foaf:almaMater ?almaMater .
  FILTER (CONTAINS(LCASE(STR(?almaMater)), ""japan"") && 
          (STR(?almaMater) IN (""university"", ""organisation"", ""educational institution"")))

  # Final step: Get the native country of the residence of the politician
  ?politician dbo:nativeCountry ?nativeCountry .
}
```",8,15,9,3,3,3,3,71,0,0,2,0,0.0,0
547,49,test,Give me the resting place of the child of James Burton (property developer) and resting place of the awardee of the award of Gerald Graham.,SELECT ?result WHERE { <http://dbpedia.org/resource/James_Burton_(property_developer)> <http://dbpedia.org/ontology/child> ?v2 . <http://dbpedia.org/resource/Gerald_Graham> <http://dbpedia.org/property/awards> ?v0 . ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . ?v1 <http://dbpedia.org/property/awards> ?v0 . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?childRestingPlace ?awardeeRestingPlace WHERE {
  # Part 1: Resting place of the child of James Burton (property developer)
  {
    ?james a dbo:PropertyDeveloper ;
           foaf:name ""James Burton"" .
    ?child dbo:parent ?james ;
           dbo:finalBurialPlace ?childRestingPlace .
  }
  
  UNION
  
  # Part 2: Resting place of the awardee of an award associated with Gerald Graham
  {
    ?gerald a dbo:Person ;
            foaf:name ""Gerald Graham"" .
    ?award dbo:recipient ?awardee ;
           dbo:givenTo ?gerald .
    ?awardee dbo:finalBurialPlace ?awardeeRestingPlace .
  }
}
```",5,5,6,3,2,3,3,71,0,0,2,0,0.0,0
378,66,test,"Give me the war of the person born as Carl Pontus Gahn and war of the commander in Peninsular War and claim to fame of the commander in the war, that is a military conflict and a societal event and an event, of Thomas Trigge.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Peninsular_War> <http://dbpedia.org/ontology/commander> ?v6 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Thomas_Trigge> <http://dbpedia.org/ontology/battle> ?v1 . ?v3 <http://dbpedia.org/property/birthName> ""Carl Pontus Gahn""@en . ?v6 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/ontology/commander> ?v2 . ?v2 <http://dbpedia.org/ontology/knownFor> ?result . ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?warOfGahn ?commanderInPeninsularWar ?claimToFame ?eventOfTrigge WHERE {
  # Find the war associated with Carl Pontus Gahn
  OPTIONAL {
    dbr:C._Pontus_Gahn dbo:militaryConflict ?warOfGahn .
  }

  # Find the commander in the Peninsular War and their claim to fame
  OPTIONAL {
    ?commanderInPeninsularWar dbo:participatedInMilitaryConflicts dbr:Peninsular_War ;
                              dbo:claimToFame ?claimToFame .
  }

  # Find notable events associated with Thomas Trigge
  OPTIONAL {
    dbr:Thomas_Trigge dbo:event ?eventOfTrigge .
  }
}
```",7,10,8,3,3,3,3,71,0,0,2,0,0.0,0
9,56,test,"Give me the alma mater of Allen Hill (scientist) and figure known as the nickname of the entity, that is an organisation and an educational institution, in Northern Ireland and alma mater of the mayor, that is a politician, of Northern Ireland Forum.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/nickname> ?v1 . <http://dbpedia.org/resource/Northern_Ireland_Forum> <http://dbpedia.org/property/leader> ?v2 . ?v2 <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://dbpedia.org/property/nickname> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Northern_Ireland> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. <http://dbpedia.org/resource/Allen_Hill_(scientist)> <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?almaMaterAllenHill ?nicknameEntity ?almaMaterMayor
WHERE {
  # Alma mater of Allen Hill (Scientist)
  OPTIONAL {
    ?allenHill a dbo:Person ;
               foaf:name ""Allen Hill"" ;
               dbo:almaMater ?almaMaterAllenHill .
  }

  # Entity that is both an organization and educational institution in Northern Ireland with a nickname
  OPTIONAL {
    ?entity a dbo:EducationalInstitution, dbo:Organization ;
            dbo:location dbr:Northern_Ireland ;
            foaf:nick ?nicknameEntity .
  }
  
  # Alma mater of the mayor of the Northern Ireland Forum (assuming we know who this is)
  OPTIONAL {
    ?mayor a dbo:Person ;
           foaf:name ""NameOfMayor"" ;  # Replace with actual name if known
           dbo:almaMater ?almaMaterMayor .
  }
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
312,9,test,"Give me the entity in the administration, that is a settlement and a region and Italian and a state, of Democratic Party (Italy) and entity in the birthplace of Giorgio Grigolli.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. ?v1 <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Democratic_Party_(Italy)> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Giorgio_Grigolli> <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?result <http://dbpedia.org/ontology/province> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT DISTINCT ?entity WHERE {
  # Entities in the administration that are settlements, regions, Italian, and states
  VALUES (?type) { 
    dbr:Settlement 
    dbr:Region 
    dbr:State 
  }
  
  ?entity rdf:type ?type .
  ?entity dbo:country dbr:Italy .
  
  # Entities associated with the Democratic Party (Italy)
  ?party dbr:Democratic_Party_(Italy) .
  ?entity dbo:hasMember ?party .

  UNION

  # Birthplace of Giorgio Grigolli
  ?grigolli dbr:Giorgio_Grigolli .
  ?grigolli dbo:birthPlace ?entity .
}
```",4,8,5,2,2,2,2,9,0,0,587,0,0.0,0
232,69,test,"Give me the actor of the claim to fame, that is a film and a military conflict, of Sean Pertwee and child of the person born as the birth name of Jon Pertwee and native of the residence, that is a settlement and British, of the native, that is a politician and an office holder, of France.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/property/birthName> ?v4 . ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/property/residence> ?v2 . ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/France> . <http://dbpedia.org/resource/Sean_Pertwee> <http://dbpedia.org/ontology/knownFor> ?v7 . ?v3 <http://dbpedia.org/property/birthName> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v7 <http://dbpedia.org/ontology/starring> ?result . ?v3 <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  # Sean Pertwee's claim to fame (film or military conflict)
  ?fame a dbo:Film ; 
        dbo:starring dbr:Sean_Pertwee .
  UNION
  ?fame a dbo:MilitaryConflict ;
        dbo:participant dbr:Sean_Pertwee .

  # Jon Pertwee's birth name and native place
  dbr:Jon_Pertwee dbo:birthName ?birthName .
  ?residence a dbo:Settlement ; 
             dbo:country dbr:United_Kingdom ;
             dbo:native dbr:Jon_Pertwee .

  # French politician with the same native place as Jon Pertwee
  ?politician a dbo:Politician, dbo:OfficeHolder ;
              dbo:nativePlace ?residence .
  
  # Actor of Sean Pertwee's claim to fame
  ?fame dbo:starring ?actor .
}
```",8,14,9,3,3,3,3,71,0,0,1,0,0.0,0
391,70,test,"Give me the actor of the movie, that is a movie and a work and a television show, with the professional in  and native of the figure known as Hub City and actor of the claim to fame, that is a work, of the spouse of Sherry Hormann.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v3 <http://dbpedia.org/property/starring> ?result . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://dbpedia.org/property/nickname> ""Hub City""@en . ?result <http://dbpedia.org/ontology/birthPlace> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v7 <http://dbpedia.org/ontology/starring> ?result . ?v3 <http://dbpedia.org/property/starring> ?v1 . ?v0 <http://dbpedia.org/ontology/knownFor> ?v7 . ?v1 <http://dbpedia.org/property/occupation> """"@en . <http://dbpedia.org/resource/Sherry_Hormann> <http://dbpedia.org/ontology/spouse> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actorName WHERE {
  # Step 1: Identify Sherry Hormann's spouse
  dbr:Sherry_Hormann dbo:spouse ?spouse .

  # Step 2: Find the claim to fame of Sherry Hormann's spouse
  ?spouse dbo:claimToFame ?work .

  # Step 3: Determine the actor associated with this work
  ?work dbo:actor ?actor .

  # Step 4: Identify the professional and native city of Hub City
  dbr:Hub_City dbo:nativePlace ?hubCity .
  dbr:Hub_City dbo:profession ?professional .

  # Step 5: Find the movie that fits all criteria
  ?movie a dbo:Film ;
         a dbo:CreativeWork ;
         a dbo:TelevisionShow ;
         dbo:actor ?actor ;
         dbo:director ?director .
  
  FILTER (?director = ?professional)

  # Extract the actor's name
  ?actor rdfs:label ?actorName .
}
```",8,12,9,3,3,3,3,71,0,0,1,0,0.0,0
161,28,test,"Give me the military force of Spanish Civil War and military force of the force, that is a societal event and an event and a military conflict, of Francisco Franco and commander in Biscay Campaign.",SELECT ?result WHERE { <http://dbpedia.org/resource/Biscay_Campaign> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Franco> . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce1 ?militaryForce2 WHERE {
  # Military forces of the Spanish Civil War
  ?event1 a dbo:MilitaryConflict ;
          rdfs:label ""Spanish Civil War""@en .
  
  ?event1 dbo:militaryParticipant ?militaryForce1 .

  # Francisco Franco's role in the Biscay Campaign
  ?campaign a dbo:MilitaryOperation ;
            rdfs:label ""Biscay Campaign""@en .
  
  ?franco a dbo:Person ;
          foaf:name ""Francisco Franco""@en ;
          dbo:commanderOf ?campaign .

  ?campaign dbo:militaryParticipant ?militaryForce2 .
}
```",4,7,5,2,3,3,3,71,0,0,3,0,0.0,0
783,20,test,"Give me the band member of the person born, that is an artist and a musical artist, as the persona of Ebony Reigns and associated musical artist of the band member of the person born as Samuel Ofori Amponsah.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v5 . <http://dbpedia.org/resource/Ebony_Reigns> <http://xmlns.com/foaf/0.1/givenName> ?v4 . ?v1 <http://dbpedia.org/property/birthName> ""Samuel Ofori Amponsah""@en . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v5 <http://dbpedia.org/property/birthName> ?v4 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?bandMember WHERE {
  # Find Ebony Reigns' birth name or persona
  ?ebony a dbo:MusicalArtist ;
         foaf:name ""Ebony Reigns"" .
  
  OPTIONAL { ?ebony dbo:birthName ?birthName . }
  
  # Find Samuel Ofori Amponsah's band member association
  ?samuel a dbo:Person ;
          foaf:name ""Samuel Ofori Amponsah"" .

  ?bandMember dbo:associatedBandMemberOf ?samuel .
  
  # Find the band member associated with Ebony Reigns' birth name or persona
  OPTIONAL { ?ebony dbo:associatedBandMemberOf ?bandMember . }
  
  # Ensure the band member is common to both associations
  FILTER EXISTS {
    ?bandMember a dbo:MusicalArtist .
  }
}
```",6,8,7,3,2,3,2,20,0,0,1,0,0.0,0
281,64,test,"Give me the war of the awardee of the award of Jonathon Band and war of the profession, that is a military unit, of the professional, that is an office holder and a politician, in New Zealand Army and entity in Colony of New Zealand.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Colony_of_New_Zealand> . ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v2 <http://dbpedia.org/property/awards> ?v3 . ?v0 <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/New_Zealand_Army> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Jonathon_Band> <http://dbpedia.org/property/awards> ?v3 . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/property/occupation> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?warOfAwardee ?militaryUnit
WHERE {
  # Find wars associated with Jonathon Band's awards
  ?award dbo:recipient dbr:Jonathon_Band .
  ?award dbo:awardedFor ?warOfAwardee .

  # Find military unit related to a politician who is an office holder in the New Zealand Army and connected to Colony of New Zealand
  ?politician dbo:officeHolder ?office .
  ?politician dbo:profession dbr:Military_unit .
  ?militaryUnit dbo:militaryBranch dbr:New_Zealand_Army ;
                dbo:location dbr:Colony_of_New_Zealand .

  # Ensure the politician is related to the military unit
  ?politician dbo:memberOf ?militaryUnit .
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
801,50,test,"Give me the associated musical artist of the writer, that is a musical artist and an artist, of 40 Dayz & 40 Nightz and producer of the work, that is a musical work and a song and a work, of the professional, that is a musical artist, in Rapper.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/writer> ?v0 . ?v4 <http://dbpedia.org/ontology/producer> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/40_Dayz_&_40_Nightz> <http://dbpedia.org/property/writer> ?v3 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v0 <http://dbpedia.org/property/occupation> ""Rapper""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?writer ?producer WHERE {
  # Find the song ""40 Dayz & 40 Nightz""
  dbr:40_Dayz_&_40_Nightz a dbo:Song .

  # Identify its writer who is also a musical artist
  dbr:40_Dayz_&_40_Nightz dbo:lyricsBy ?writer .
  ?writer rdf:type dbo:MusicalArtist ;
          rdf:type dbo:Artist .

  # Find the producer of this song, ensuring they are recognized as both a musical work (song) and a rapper
  dbr:40_Dayz_&_40_Nightz dbo:producer ?producer .
  ?producer rdf:type dbo:Song ;
            rdf:type dbo:MusicalWork ;
            rdf:type dbo:Rapper .
}
```",5,11,6,3,2,3,3,71,0,0,9,0,0.0,0
435,20,test,"Give me the work of Article 62, Section IV of Constitution of Iceland and territory administered from Reykjavík and region of the time zone in Bombali Shebora Chiefdom.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Reykjavík> . ?result <http://dbpedia.org/ontology/timeZone> ?v3 . ?result <http://dbpedia.org/property/author> ""Article 62, Section IV of Constitution of Iceland""@en . <http://dbpedia.org/resource/Bombali_Shebora_Chiefdom> <http://dbpedia.org/ontology/timeZone> ?v3 . }","```sparql
# Query for Article 62, Section IV of Constitution of Iceland
SELECT ?articleText WHERE {
  ?constitution dcterms:title ""Constitution of Iceland""@en .
  ?constitution dbo:hasPart ?section .
  ?section rdfs:label ""Article 62"" .
  ?section dbo:hasPart ?subsection .
  ?subsection rdfs:label ""Section IV"" .
  ?subsection dbo:textContent ?articleText .
}

UNION

# Query for territories administered from Reykjavík
SELECT DISTINCT ?territory WHERE {
  ?city dcterms:title ""Reykjavík""@en ;
        dbo:administrativeUnit ?territory .
}

UNION

# Query for the time zone of Bombali Shebora Chiefdom
SELECT ?timeZone WHERE {
  ?chiefdom rdfs:label ""Bombali Shebora Chiefdom"" ;
            geo:timezone ?timeZone .
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
232,64,test,"Give me the actor of Dog Soldiers (film) and native of the residence, that is a settlement and British, of the native, that is a politician and an office holder, of France and child of the person born as the birth name of Jon Pertwee.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/property/birthName> ?v3 . ?v0 <http://dbpedia.org/property/residence> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v2 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Dog_Soldiers_(film)> <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/France> . ?v2 <http://dbpedia.org/property/birthName> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?actor ?residence ?politician WHERE {
  # Step 1: Find the actor of ""Dog Soldiers"" (film)
  ?movie dbo:starring ?actor .
  FILTER(STRSTARTS(STR(?movie), STR(dbr:Dog_Soldiers_(2002_film))))

  # Step 2: Determine the native residence of this actor
  ?actor dbo:nativePlace ?residence .

  # Step 3: Ensure that the residence is a settlement and British
  ?residence rdf:type dbo:Settlement .
  ?residence dbo:country dbr:United_Kingdom .

  # Step 4: Verify if this person is also a politician in France
  OPTIONAL { ?actor dbo:officeHolder ?politician . }
  FILTER(STRSTARTS(STR(?politician), STR(dbr:France)))

  # Step 5: Confirm they are the child of someone with the birth name Jon Pertwee
  ?actor dbo:parent ?parent .
  ?parent dbp:birthName ""Jon Pertwee""^^xsd:string
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
232,49,test,"Give me the child of the person born as John Devon Roland Pertwee and native of the residence, that is a settlement and British, of the native, that is a politician and an office holder, of France.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/France> . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/residence> ?v1 . ?v2 <http://dbpedia.org/property/birthName> ""John Devon Roland Pertwee""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v2 <http://dbpedia.org/ontology/child> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child WHERE {
  # Step 1: Identify John Pertwee and his child
  dbr:John_Pertwee dbo:child ?child .

  # Step 2: Find the British settlement associated with John Pertwee
  dbr:John_Pertwee dbp:birthPlace ?settlement .
  ?settlement a dbo:Settlement ;
              dbo:country dbr:United_Kingdom .

  # Step 3: Identify a French politician and office holder whose native place is the settlement
  ?politician dbo:nationality dbr:France ;
             dbo:officeHolder true ;
             dbp:nativePlace ?settlement .
}
```",5,9,6,3,2,3,3,71,0,0,1,0,0.0,0
701,50,test,Give me the parent of the child of the child of Seti I and spouse of the father of Merneptah.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v3 . <http://dbpedia.org/resource/Merneptah> <http://dbpedia.org/property/father> ?v3 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seti_I> . ?result <http://dbpedia.org/ontology/child> ?v4 . ?v4 <http://dbpedia.org/property/father> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent
WHERE {
  # Seti I's child (Ramesses II)
  dbr:Seti_I dbo:child dbr:Ramesses_II .
  
  # Ramesses II's child (Merneptah)
  dbr:Ramesses_II dbo:child dbr:Merneptah .

  # Parent of Merneptah (Ramesses II and his spouse Isetnofret)
  dbr:Merneptah dbo:parent ?parent .
  
  # Spouse of Ramesses II
  dbr:Ramesses_II dbo:spouse ?spouse .

  FILTER (?parent = ?spouse)
}
```",5,5,6,3,2,3,3,71,0,0,2,0,0.0,0
328,47,test,"Give me the awardee of the award of Bruce Fraser, 1st Baron Fraser of North Cape and commander in the force of the person decedent at Budapest.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/commander> ?v0 . ?result <http://dbpedia.org/property/awards> ?v2 . ?v4 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape> <http://dbpedia.org/property/awards> ?v2 . ?v0 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Budapest> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award WHERE {
  ?person rdfs:label ""Bruce Fraser, 1st Baron Fraser of North Cape""@en .
  ?person dbo:awardsReceived ?award .

  OPTIONAL {
    ?commander rdfs:label ?label .
    ?commander dbo:placeOfBirth dbr:Budapest .
    ?commander dbo:positionHeld ?position .
    FILTER(CONTAINS(LCASE(?position), ""commander"") && CONTAINS(LCASE(?label), ""fraser""))
  }
}
```",5,5,6,3,2,3,3,71,0,0,5,0,0.0,0
747,66,test,Give me the band of the person born as the persona of Shèna and band of the writer of Apollo (Hardwell song) and person born on the birth date of Pavlo Khudzik.,SELECT ?result WHERE { ?v6 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/birthDate> ?v3 . <http://dbpedia.org/resource/Apollo_(Hardwell_song)> <http://dbpedia.org/property/writer> ?v6 . ?v2 <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Shèna> <http://xmlns.com/foaf/0.1/givenName> ?v1 . <http://dbpedia.org/resource/Pavlo_Khudzik> <http://dbpedia.org/ontology/birthDate> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?band1 ?band2 ?band3 WHERE {
  # Shèna's band
  OPTIONAL {
    ?person rdfs:label ""Shèna""@en .
    ?person dbo:musicGroup ?band1 .
  }

  # Apollo (Hardwell song) writer's band
  OPTIONAL {
    dbr:Apollo_(song_by_Hardwell) dbo:lyricsBy ?writer .
    ?writer dbo:musicGroup ?band2 .
  }

  # Pavlo Khudzik's birth date and another person born on the same date
  OPTIONAL {
    dbr:Pavlo_Khudzik dbo:birthday ?birthDate .
    ?person dbo:birthday ?sameBirthDate .
    FILTER(?sameBirthDate = ?birthDate)
    ?person dbo:musicGroup ?band3 .
  }
}
```",7,7,8,3,3,3,3,71,0,0,1,0,0.0,0
492,64,test,"Give me the person decedent at the work of the author of French Algeria and person decedent at the capital, that is a settlement, of the country of Khemis Miliana District and commander in Franco-Hova Wars.",SELECT ?result WHERE { <http://dbpedia.org/resource/Khemis_Miliana_District> <http://dbpedia.org/ontology/country> ?v0 . ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . ?v0 <http://dbpedia.org/ontology/capital> ?v1 . <http://dbpedia.org/resource/French_Algeria> <http://dbpedia.org/property/author> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . ?v2 <http://dbpedia.org/property/author> ?v3 . <http://dbpedia.org/resource/Franco-Hova_Wars> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?person WHERE {
  # Find the author of ""French Algeria""
  ?work dbo:title ""French Algeria""@en .
  ?work dbo:author ?author .

  # Get the decedent location of this author
  ?author dbo:deathPlace ?decedentLocation1 .

  # Find the capital city of Khemis Miliana District
  dbr:Khemis_Miliana_District dbo:capital ?capitalCity .
  
  # Get the decedent location at the capital city
  ?person dbo:deathPlace ?capitalCity .
  
  # Identify commanders in Franco-Hova Wars
  ?commander dbp:role ""Commander""@en ;
             dbo:participatedInWar dbr:Franco-Hova_Wars .

  # Ensure the person is common across all categories
  FILTER (?person = ?author || ?person = ?decedentLocation1 || ?person = ?commander)
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
184,53,test,"Give me the child of Archduke Joseph August of Austria and parent of the native of the landmark at elevation, that is a settlement, of 96.0 and parent of the child of Archduke Joseph Francis of Austria.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v1 . ?result <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_August_of_Austria> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Francis_of_Austria> . ?v3 <http://dbpedia.org/ontology/elevation> ""96.0""^^<http://www.w3.org/2001/XMLSchema#double> . ?v2 <http://dbpedia.org/ontology/birthPlace> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person
WHERE {
  # Archduke Joseph August of Austria's child
  ?child1 dbo:parent dbr:Archduke_Joseph_August_of_Austria .
  
  # Landmark that is a settlement at elevation 96.0 meters
  ?landmark dbo:elevation ""96.0""^^xsd:float ;
            rdf:type dbo:Settlement .

  # Native of the landmark
  ?native dbo:nativePlace ?landmark .

  # Parent of the native person
  ?person dbo:child ?native .

  # Child of Archduke Joseph Francis of Austria
  ?child2 dbo:parent dbr:Archduke_Joseph_Francis_of_Austria .
  
  # Ensure the person is also parent of this child
  ?person dbo:child ?child2 .

  # Linking conditions
  FILTER(?child1 = ?native)
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
701,31,test,Give me the parent of the child of the spouse of Amun-her-khepeshef and parent of Henuttawy (19th dynasty).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Henuttawy_(19th_dynasty)> . ?v0 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Amun-her-khepeshef> <http://dbpedia.org/ontology/spouse> ?v1 . ?v1 <http://dbpedia.org/ontology/child> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?parentOfChild ?parentOfHenuttawy
WHERE {
    # Step 1: Identify Amun-her-khepeshef
    ?amunherkhepeshef rdfs:label ""Amun-her-khepeshef""@en .
    
    # Step 2: Find the spouse of Amun-her-khepeshef
    ?spouse dbo:spouse ?amunherkhepeshef .

    # Step 3: Identify the child of the spouse
    ?child dbo:parent ?spouse .

    # Step 4: Find the parent of this child (should be the spouse)
    ?parentOfChild dbo:parent ?child .
    
    # Step 5: Identify Henuttawy from the 19th dynasty
    ?henuttawy rdfs:label ""Henuttawy""@en ;
               dbo:era <http://dbpedia.org/resource/19th_dynasty_of_Egypt> .

    # Step 6: Find the parent of Henuttawy
    ?parentOfHenuttawy dbo:child ?henuttawy .
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
328,50,test,"Give me the commander in the force of the person decedent at Budapest and leader of the office, that is a government agency, of Joseph Stalin.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Budapest> . ?v4 <http://dbpedia.org/ontology/commander> ?v0 . ?v4 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v3 <http://dbpedia.org/ontology/leader> ?result . <http://dbpedia.org/resource/Joseph_Stalin> <http://dbpedia.org/property/office> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?officeLeader WHERE {
  # Count István Tisza's assassination in Budapest
  dbr:István_Tisza dbo:deathPlace dbr:Budapest .
  
  # Find the commander involved with the force at that time
  ?force dbo:leader ?commander .
  ?force dbo:location dbr:Budapest .

  # Identify any connection to Joseph Stalin, particularly through a government agency or office
  OPTIONAL {
    ?officeLeader dbo:leader ?commander .
    ?officeLeader dbo:member dbr:Joseph_Stalin .
  }
}
```",5,6,6,3,2,3,3,71,0,12,1,0.0,0.0,0
179,19,test,Give me the parent of the child of the parent of Vajiralongkorn and person born as the birth name of Sirikit.,SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Sirikit> <http://dbpedia.org/property/birthName> ?v2 . ?v0 <http://dbpedia.org/ontology/child> ?v4 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Vajiralongkorn> . ?result <http://dbpedia.org/property/birthName> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parentOfPersonWithBirthName
WHERE {
  # Step 1: Identify Vajiralongkorn's parent (King Bhumibol Adulyadej)
  dbr:Vajiralongkorn dbo:father dbr:Bhumibol_Adulyadej .

  # Step 2: Identify the child of King Bhumibol Adulyadej (Vajiralongkorn)
  dbr:Bhumibol_Adulyadej dbo:child dbr:Vajiralongkorn .

  # Step 3: Identify Sirikit's birth name
  dbr:Sirikit dbo:birthName ""Sirikit Kitiyakara""@en .

  # Step 4: Find a person born as Sirikit's birth name
  ?person dbo:birthName ""Sirikit Kitiyakara""@en .
  
  # Step 5: Determine the parent of this person
  ?person dbo:parent ?parentOfPersonWithBirthName .
}
```",5,5,6,3,2,3,2,20,0,0,1,0,0.0,0
77,18,test,Give me the force of the mayor of Congress Poland and war of the awardee of the award of Maxim Grigorievich Vlasov.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> ?v3 . ?v2 <http://dbpedia.org/property/awards> ?v1 . <http://dbpedia.org/resource/Congress_Poland> <http://dbpedia.org/property/leader> ?v3 . <http://dbpedia.org/resource/Maxim_Grigorievich_Vlasov> <http://dbpedia.org/property/awards> ?v1 . ?v2 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?mayorForce ?war
WHERE {
  # Find the mayor of Congress Poland and their associated force
  ?mayor dbo:positionTitle ""Mayor""@en .
  ?mayor dbo:officeLocation dbr:Congress_Poland .
  ?mayor dbo:memberOf ?force .
  BIND(?force AS ?mayorForce)

  # Find Maxim Grigorievich Vlasov and his awards
  dbr:Maxim_Grigorievich_Vlasov dbo:award ?award .

  # Link the award to a war
  ?award dbo:relatedEvent ?war .
  
  # Ensure the force of the mayor is related to the wars involving Maxim Grigorievich Vlasov
  ?mayorForce dbo:participatedIn ?war .
}
```",5,5,6,3,2,3,2,20,0,0,24,0,0.0,0
303,20,test,"Give me the entity in the country, that is a country, of El Valle de Antón and party of Guillermo Endara and party of Arnulfo Arias.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/El_Valle_de_Antón> <http://dbpedia.org/ontology/country> ?v3 . <http://dbpedia.org/resource/Arnulfo_Arias> <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Guillermo_Endara> <http://dbpedia.org/ontology/party> ?result . },"```sparql
PREFIX wd: <http://www.wikidata.org/entity/>
PREFIX wdt: <http://www.wikidata.org/prop/direct/>

SELECT DISTINCT ?entity WHERE {
  # El Valle de Antón is in Panama
  wd:Q1116 wdt:P17 wd:Q52 .  # Panama (wd:Q52) is the country of El Valle de Antón (wd:Q1116)

  # Guillermo Endara's party
  wd:Q123456 wdt:P102 wd:Q789012 .  # Replace Q123456 with Guillermo Endara's Wikidata ID and Q789012 with PDC

  # Arnulfo Arias's party
  wd:Q654321 wdt:P102 wd:Q345678 .  # Replace Q654321 with Arnulfo Arias's Wikidata ID and Q345678 with Partido Panameñista

  # Find entities that are countries of El Valle de Antón and parties of Guillermo Endara and Arnulfo Arias
  ?entity wdt:P17 wd:Q52 .  # Entity is a country (Panama)
  OPTIONAL { ?entity wdt:P102 wd:Q789012 }  # Entity is a party of Guillermo Endara
  OPTIONAL { ?entity wdt:P102 wd:Q345678 }  # Entity is a party of Arnulfo Arias
}
```",4,5,5,2,3,2,3,28,0,0,1,0,0.0,0
959,24,test,"Give me the native of the residence, that is a country, of Yōichi Masuzoe and manager of 2013 Júbilo Iwata season.",SELECT ?result WHERE { <http://dbpedia.org/resource/Yōichi_Masuzoe> <http://dbpedia.org/property/residence> ?v2 . ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . <http://dbpedia.org/resource/2013_Júbilo_Iwata_season> <http://dbpedia.org/ontology/manager> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nativeCountry WHERE {
  # Find Yōichi Masuzoe's place of residence that is a country
  dbr:Yōichi_Masuzoe dbo:residence ?residence .
  ?residence rdf:type dbo:Country .

  # Identify the manager of Júbilo Iwata for the 2013 season
  OPTIONAL { 
    ?manager dbo:managedTeam dbr:Júbilo_Iwata ;
             dbo:managementPeriod ?period .
    FILTER (YEAR(?period) = 2013)
  }

  # Determine the native country of this manager
  ?manager dbo:nationality ?nativeCountry .

  # Check if the manager's native country matches Yōichi Masuzoe's residence
  FILTER (?residence = ?nativeCountry)
}
```",3,4,4,2,2,3,3,71,0,0,3,0,0.0,0
617,64,test,"Give me the child of the child, that is a royalty, of the successor, that is a royalty, of Antiochus II Theos and spouse of Laodice IV and parent of the child of the commander in Battle of Panium.",SELECT ?result WHERE { <http://dbpedia.org/resource/Antiochus_II_Theos> <http://dbpedia.org/ontology/successor> ?v3 . ?result <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/ontology/child> ?v1 . ?v0 <http://dbpedia.org/ontology/child> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Laodice_IV> <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Battle_of_Panium> <http://dbpedia.org/ontology/commander> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/father> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?childOfChild
WHERE {
  # Step 1: Find Antiochus II Theos' successor who is royalty
  ?successor dbo:successor dbr:Antiochus_II_Theos .
  ?successor a dbo:Monarch .

  # Step 2: Find the spouse of Laodice IV from the successor
  ?spouse dbo:spouse ?successor ;
          rdfs:label ""Laodice IV""@en .

  # Step 3: Identify the parent of the child of the commander in Battle of Panium
  ?commander dbr:Battle_of_Panium dbo:commander .
  ?childOfCommander dbo:parent ?commander ;
                    dbo:parent ?spouse .

  # Step 4: Find the child of the child from step 3 who is royalty
  ?childOfChild dbo:parent ?childOfCommander ;
                a dbo:Monarch .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
281,59,test,"Give me the entity in the birth place, that is a country, of the leader, that is a politician, of 1962 New South Wales state election and war of the awardee of the award of Jonathon Band.",SELECT ?result WHERE { <http://dbpedia.org/resource/1962_New_South_Wales_state_election> <http://dbpedia.org/property/leader> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/place> ?v5 . <http://dbpedia.org/resource/Jonathon_Band> <http://dbpedia.org/property/awards> ?v3 . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/ontology/birthPlace> ?v5 . ?v2 <http://dbpedia.org/property/awards> ?v3 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?entityInBirthPlaceCountry
WHERE {
  # Step 1: Identify the leader of the 1962 New South Wales state election
  ?leader dbo:officeHolderOf dbr:1962_New_South_Wales_state_election .
  ?leader a dbo:Politician .

  # Step 2: Determine the birthplace country of this leader
  ?leader dbp:birthPlace ?birthPlace .
  ?birthPlace dbo:country ?birthCountry .

  # Step 3: Identify Jonathon Band's award
  dbr:Jonathon_Band dbo:awardReceived ?jonathonAward .

  # Step 4: Find the war associated with the awardee of the same award
  ?awardee dbo:awardReceived ?jonathonAward .
  ?awardee dbo:war ?relatedWar .

  # Step 5: Get the entity in the birthplace country related to the war
  ?entityInBirthPlaceCountry dbo:country ?birthCountry ;
                            dbo:partOf ?relatedWar .
}
```",6,8,7,3,2,3,3,71,0,0,1,0,0.0,0
963,20,test,"Give me the administration of the ruling party, that is a political party, in the location for 21205 and entity in the region, that is a country, of the time zone of Herzegovina-Neretva Canton.","SELECT ?result WHERE { <http://dbpedia.org/resource/Herzegovina-Neretva_Canton> <http://dbpedia.org/property/timeZone> ?v1 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v2 <http://dbpedia.org/property/timeZone> ?v1 . ?result <http://dbpedia.org/ontology/country> ?v2 . ?v4 <http://dbpedia.org/property/leaderParty> ?v5 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/property/leaderParty> ?v5 . ?v4 <http://dbpedia.org/ontology/postalCode> ""21205"" . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?administration WHERE {
    # Find Herzegovina-Neretva Canton's time zone
    dbr:Herzegovina-Neretva_Canton dbo:timeZone ?timeZone .
    
    # Identify Bosnia and Herzegovina as the country of this canton
    dbr:Bosnia_and_Herzegovina dbo:country ?region .
    FILTER(?region = dbr:Herzegovina-Neretva_Canton)
    
    # Find entity with location 21205 in Bosnia and Herzegovina
    ?entity dbo:location ?location .
    ?location dbo:postalCode ""21205""^^xsd:string .
    ?entity dbo:country dbr:Bosnia_and_Herzegovina .

    # Determine the ruling political party in that entity
    ?party dbo:rulingPartyOf ?entity .
    
    # Retrieve information about the administration of this ruling party
    ?party dbo:administration ?administration .
}
```",6,8,7,3,2,3,2,20,0,0,84,0,0.0,0
328,42,test,"Give me the commander in Eastern Front (World War II) and leader of the office, that is a government agency, of Joseph Stalin and awardee of the award of Bruce Fraser, 1st Baron Fraser of North Cape.","SELECT ?result WHERE { <http://dbpedia.org/resource/Joseph_Stalin> <http://dbpedia.org/property/office> ?v1 . ?result <http://dbpedia.org/property/awards> ?v2 . ?v1 <http://dbpedia.org/ontology/leader> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. <http://dbpedia.org/resource/Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape> <http://dbpedia.org/property/awards> ?v2 . <http://dbpedia.org/resource/Eastern_Front_(World_War_II)> <http://dbpedia.org/ontology/commander> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Commander in Eastern Front (World War II)
  ?person dbo:commanderOf ?easternFront .
  
  # Leader of a government agency under Joseph Stalin
  ?agency dbo:head ?person ;
          dbo:country dbr:Soviet_Union ;
          dbo:leader dbr:Joseph_Stalin .

  # Awardee of an award associated with Bruce Fraser, 1st Baron Fraser of North Cape
  ?award dbo:recipient ?person .
  ?award dbo:awardedBy dbr:Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape .

  FILTER EXISTS { ?easternFront rdfs:label ""Eastern Front (World War II)""@en }
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
488,66,test,"Give me the death place of the father, that is a politician, of Yūki Hideyasu and birth place of the commander in Boshin War and administration of the father of the spouse, that is a royalty, of Tokugawa Masako.",SELECT ?result WHERE { ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/property/leader> ?v2 . <http://dbpedia.org/resource/Yūki_Hideyasu> <http://dbpedia.org/property/father> ?v6 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Boshin_War> <http://dbpedia.org/ontology/commander> ?v3 . ?v6 <http://dbpedia.org/ontology/deathPlace> ?result . ?v1 <http://dbpedia.org/property/father> ?v2 . ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Tokugawa_Masako> . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?deathPlace ?birthPlace ?administration 
WHERE {
  # Yūki Hideyasu's father who is a politician
  dbr:Yūki_Hideyasu dbo:father ?yukiFather .
  ?yukiFather rdf:type dbo:Politician .
  ?yukiFather dbo:deathPlace ?deathPlace .

  # Commander in Boshin War and their birthplace
  ?commander dbo:participatedIn dbr:Boshin_War ;
             dbo:birthPlace ?birthPlace .

  # Tokugawa Masako's spouse who is royalty
  dbr:Tokugawa_Masako dbo:spouse ?royaltySpouse .
  ?royaltySpouse rdf:type dbo:Royalty .
  ?royaltySpouse dbo:father ?spouseFather .
  ?spouseFather dbo:administers ?administration .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
10,22,test,"Give me the associated musical artist of the person born, that is an artist, as Matt Colton and band member of the person born, that is an artist, as Luke Francis Vibert.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/property/birthName> ""Matt Colton""@en . ?v0 <http://dbpedia.org/property/birthName> ""Luke Francis Vibert""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?artistColton ?bandVibert WHERE {
  # Find Matt Colton's associated artists
  OPTIONAL {
    ?colton a dbo:Person ;
            foaf:name ""Matt Colton"" .
    ?work dbo:performer ?artistColton ;
          dbo:producer ?colton .
    FILTER NOT EXISTS { ?artistColton dbo:birthName ? }
  }

  # Find Luke Francis Vibert's band associations
  OPTIONAL {
    ?vibert a dbo:Person ;
            foaf:name ""Luke Francis Vibert"" .
    ?band dbo:member ?vibert ;
          dbo:musicalArtist ?bandVibert .
  }
}
```",4,6,5,2,2,2,3,28,0,0,1,0,0.0,0
92,46,test,"Give me the associated musical artist of the person born, that is an artist, as Jim Sheppard and band member of the reference, that is an artist, to the name of Nevermore (2006 film).","SELECT ?result WHERE { <http://dbpedia.org/resource/Nevermore_(2006_film)> <http://xmlns.com/foaf/0.1/name> ?v2 . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://dbpedia.org/property/birthName> ""Jim Sheppard""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://xmlns.com/foaf/0.1/name> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?artist WHERE {
  # Step 1: Identify the film ""Nevermore (2006 film)""
  dbr:Nevermore_(2006_film) dbo:associatedMusicalArtist ?band .

  # Step 2: Find a band member named Jim Sheppard
  ?bandMember dbo:member ?band ;
              dbp:name ""Jim Sheppard""@en .
  
  FILTER(?bandMember = ?person)

  # Step 3: Determine the birth details of Jim Sheppard and link to an artist entity
  ?person dbo:birthPlace ?birthPlace ;
          dbo:birthDate ?birthDate .

  OPTIONAL {
    ?artist dbo:birthPlace ?birthPlace ;
            dbo:birthDate ?birthDate .
    FILTER(?artist != ?person)
  }

  # Ensure the person is Jim Sheppard and an artist
  ?person dbp:name ""Jim Sheppard""@en .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
767,69,test,"Give me the alma mater of the administration of George K. Nash and entity in the administration, that is a settlement, of the writer of Where It's At (Dustin Lynch album) and reference to the alter ego of the persona, that is a fictional character, of Matthew Burland.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/alterEgo> ""Matthew Burland""@en . ?result <http://dbpedia.org/ontology/state> ?v3 . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v3 <http://dbpedia.org/property/leaderParty> ?v4 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. <http://dbpedia.org/resource/Where_It's_At_(Dustin_Lynch_album)> <http://dbpedia.org/property/writer> ?v4 . ?v1 <http://dbpedia.org/property/alterEgo> ?v2 . ?v7 <http://dbpedia.org/ontology/almaMater> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v7 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/George_K._Nash> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?almaMater ?settlementInAdmin ?settlementForWriter ?alterEgo
WHERE {
  # Alma mater of George K. Nash
  dbr:George_K._Nash dbo:almaMater ?almaMater .

  # Entity in administration that is a settlement
  OPTIONAL { 
    ?adminRole dbo:agent dbr:George_K._Nash .
    ?adminRole dbo:location ?settlementInAdmin .
    FILTER (dbo:Settlement(?settlementInAdmin))
  }

  # Writer of ""Where It's At"" by Dustin Lynch
  dbr:""Where_It's_At_(Dustin_Lynch_song)"" dbo:lyricsBy ?writer .
  OPTIONAL {
    ?writer dbo:birthPlace ?settlementForWriter .
    FILTER (dbo:Settlement(?settlementForWriter))
  }

  # Alter ego of Matthew Burland
  dbr:Matthew_Burland dbo:fictionalCharacter ?alterEgo .
}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
16,44,test,Give me the person born as the birth name of Gigi Rice and spouse of Ted McGinley and professional in the profession of Satomi Ishihara.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Gigi_Rice> <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Satomi_Ishihara> <http://dbpedia.org/property/occupation> ?v4 . ?result <http://dbpedia.org/property/occupation> ?v4 . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  # Find Gigi Rice's birth name
  ?gigi a dbo:Person;
        foaf:name ""Gigi Rice"" ;
        dbo:birthName ?birthName .

  # Find Satomi Ishihara's profession
  ?satomi a dbo:Person;
          foaf:name ""Satomi Ishihara"" ;
          dbo:occupation ?profession .

  # Find the person who matches all conditions
  ?person a dbo:Person;
          foaf:name ?name;
          dbo:birthName ?birthName;
          dbo:spouse ?ted;
          dbo:occupation ?profession .
  
  # Ted McGinley's spouse must be this person
  ?ted foaf:name ""Ted McGinley"" .

}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
488,36,test,"Give me the birth place of Enomoto Takeaki and administration of the father of the spouse, that is a royalty, of Tokugawa Masako.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> ?v1 . ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Tokugawa_Masako> . <http://dbpedia.org/resource/Enomoto_Takeaki> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace ?administration
WHERE {
  # Birthplace of Enomoto Takeaki
  dbr:Enomoto_Takeaki dbo:birthPlace ?birthPlace .

  # Spouse of Tokugawa Masako
  OPTIONAL {
    dbr:Tokugawa_Masako dbo:spouse ?spouse .
    
    # Check if the spouse is royalty and find their father
    OPTIONAL {
      ?spouse rdf:type dbo:Monarch .
      
      ?spouse dbo:father ?father .
      
      # Find the administration or position of the father
      ?father dbo:positionHeld ?administration .
    }
  }
}
```",4,5,5,3,2,3,3,71,1,1,0,0.5,1.0,0.6666666666666666
161,57,test,"Give me the military force of the force, that is a societal event and a military conflict, of the predecessor of Indalecio Prieto and commander in the force, that is an event, of Emilio Mola and military force of Rif War.",SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Emilio_Mola> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v5 . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v5 <http://dbpedia.org/ontology/commander> ?v0 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Rif_War> . ?v0 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Indalecio_Prieto> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?militaryForce1 ?militaryForce2 ?militaryForce3
WHERE {
  # Find Indalecio Prieto's predecessor in a military or political role
  ?predecessor dbo:successor dbr:Indalecio_Prieto .
  
  # Identify the societal event and military conflict involving the predecessor
  ?event1 dbo:type dbr:Societal_event ;
         dbo:type dbr:Military_conflict ;
         dbo:participant ?predecessor .

  # Find Emilio Mola's commander role in an event
  ?event2 dbo:type dbr:Event ;
          dbo:commander dbr:Emilio_Mola .
  
  # Identify the military force of the Rif War
  ?rifWarEvent dbo:type dbr:Military_conflict ;
               rdfs:label ""Rif War""@en .

  ?rifWarEvent dbo:militaryForce ?militaryForce3 .

  # Retrieve the military forces involved in these contexts
  ?event1 dbo:militaryForce ?militaryForce1 .
  ?event2 dbo:militaryForce ?militaryForce2 .
}
```",6,9,7,3,3,3,3,71,0,0,11,0,0.0,0
767,32,test,"Give me the entity in the administration, that is a settlement, of Green and alma mater of the administration of George K. Nash.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/George_K._Nash> . ?result <http://dbpedia.org/ontology/state> ?v1 . ?v1 <http://dbpedia.org/property/leaderParty> ""Green""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v3 <http://dbpedia.org/ontology/almaMater> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity WHERE {
  # George K. Nash's alma mater
  dbr:George_K._Nash dbo:almaMater ?almaMater .

  # Alma mater is Green College, Oxford
  ?almaMater rdfs:label ""Green College, Oxford""@en .

  # Find individuals associated with the administration of Green College
  ?admin dbo:worksFor ?institution .
  ?institution rdfs:label ""Green College, Oxford""@en .

  # Ensure the entity is a settlement (location)
  ?entity dbo:location ?institution .
  ?entity rdf:type dbo:Settlement .

  # Link the administrative role to the alma mater
  ?admin dbo:almaMater ?almaMater .

  FILTER(?entity != ?institution) # Ensure it's not the institution itself
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
391,23,test,"Give me the native of the figure known as the nick name of Jackson, Tennessee.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v0 <http://dbpedia.org/property/nickname> ?v2 . <http://dbpedia.org/resource/Jackson,_Tennessee> <http://xmlns.com/foaf/0.1/nick> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?native WHERE {
  # Step 1: Find the nickname for Jackson, Tennessee
  dbr:Jackson,_Tennessee dbo:nickname ?nickname .

  # Step 2: Identify a notable figure associated with that nickname
  ?figure dbo:nickName ?nickname .
  
  # Step 3: Determine the native (place of birth) of this figure
  ?figure dbo:birthPlace ?native .
}
```",3,3,4,3,1,3,3,71,0,0,176,0,0.0,0
404,22,test,"Give me the child of the father of Ernest Augustus, Duke of Brunswick and spouse of Princess Victoria Louise of Prussia.","SELECT ?result WHERE { <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/parent> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?child WHERE {
  ?ernestAugustus a dbo:Duke ;
                  foaf:name ""Ernest Augustus, Duke of Brunswick""@en .
  
  ?father dbo:father ?ernestAugustus .
  
  ?spouse dbo:spouse ?father .

  ?spouse dbo:child ?child .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
427,58,test,"Give me the party of the father of Lamberto Andreotti and party of the person born, that is an office holder and a politician, as the birth name of Romano Prodi and reference to Partito Popolare Italiano.","SELECT ?result WHERE { <http://dbpedia.org/resource/Lamberto_Andreotti> <http://dbpedia.org/property/father> ?v5 . <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://dbpedia.org/property/birthName> ?v1 . ?v5 <http://dbpedia.org/ontology/party> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://xmlns.com/foaf/0.1/name> ""Partito Popolare Italiano""@en . ?v2 <http://dbpedia.org/ontology/party> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?fatherParty ?politicianBirthName ?politicianParty WHERE {
  # Find Lamberto Andreotti's father and his party
  dbr:Lamberto_Andreotti dbo:father ?father .
  ?father dbo:party ?fatherParty .

  # Get Romano Prodi's birth name
  dbr:Romano_Prodi dbo:birthName ?prodiBirthName .

  # Find a politician with the same birth name as Romano Prodi who is also an office holder
  ?politician dbo:birthName ?prodiBirthName .
  ?politician dbo:party ?politicianParty .
  FILTER EXISTS { ?politician dbo:officeHolder true . }
  FILTER EXISTS { ?politician dbo:politician true . }

  # Ensure the party is related to Partito Popolare Italiano
  OPTIONAL {
    ?politicianParty rdfs:label ?partyLabel .
    FILTER CONTAINS(LCASE(?partyLabel), ""partito popolare italiano"")
  }
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
701,38,test,Give me the parent of the child of Ramesses II and spouse of the father of Merneptah.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v3 . <http://dbpedia.org/resource/Merneptah> <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ramesses_II> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parentOfChild (SAMPLE(?spouse) AS ?spouseOfFather)
WHERE {
  # Find a child of Ramesses II
  ?child dbo:father dbr:Ramesses_II .
  
  # Identify the parent of this child
  ?child dbo:parent ?parentOfChild .

  # Confirm Merneptah as a child of Ramesses II
  dbr:Merneptah dbo:father dbr:Ramesses_II .

  # Retrieve the spouse of Ramesses II
  dbr:Ramesses_II dbo:spouse ?spouse .
}
```",4,4,5,2,2,3,3,71,0,0,2,0,0.0,0
281,62,test,"Give me the war of New Zealand Army and war of the awardee of the award of Jonathon Band and entity in the birth place, that is a country, of the leader, that is a politician, of 1962 New South Wales state election.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> ?v6 . ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v3 <http://dbpedia.org/property/awards> ?v4 . <http://dbpedia.org/resource/1962_New_South_Wales_state_election> <http://dbpedia.org/property/leader> ?v0 . ?v0 <http://dbpedia.org/ontology/birthPlace> ?v6 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Jonathon_Band> <http://dbpedia.org/property/awards> ?v4 . <http://dbpedia.org/resource/New_Zealand_Army> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?war ?birthCountry
WHERE {
  # Wars involving the New Zealand Army
  ?war dbo:participatingMilitaryUnit dbr:New_Zealand_Army .
  
  # Awardee of Jonathon Band's award
  ?award dbp:recipient ?awardee .
  ?award dbp:givenBy dbr:Jonathon_Band .

  # Leader in the 1962 NSW election
  ?election dbo:winner ?leader .
  ?election dbo:electionDate ?date .
  FILTER (YEAR(?date) = 1962 && CONTAINS(LCASE(STR(?election)), ""new south wales""))
  
  # Birthplace country of the leader
  ?leader dbp:birthPlace ?birthPlace .
  ?birthPlace a dbo:Country .

  # Linking wars with awardee and birthplace
  ?war dbo:participatingMilitaryUnit ?awardee .
  BIND(STR(?birthPlace) AS ?birthCountry)
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
994,39,test,"Give me the associated musical artist of Red Tide (band) and band member of the person born, that is a musical artist, as the persona of Don Dokken.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . <http://dbpedia.org/resource/Don_Dokken> <http://xmlns.com/foaf/0.1/givenName> ?v2 . <http://dbpedia.org/resource/Red_Tide_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/birthName> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?associatedArtist ?bandMember WHERE {
  # Find associated musical artist of Red Tide (band)
  OPTIONAL {
    dbr:Red_Tide_(band) dbo:associatedMusicalArtist ?associatedArtist .
  }

  # Find band members of Don Dokken
  OPTIONAL {
    dbr:Don_Dokken dbo:birthName ?dokkenBirthName ;
                   dbo:memberOfBand ?donDokkenBand .
    ?donDokkenBand dbo:bandMember ?bandMember .
  }
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
16,62,test,Give me the person born as Georgeanne Marie Rice and spouse of the person born as the birth name of Ted McGinley and professional in the profession of the actor of Unnatural (TV series).,"SELECT ?result WHERE { <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/property/birthName> ?v4 . ?result <http://dbpedia.org/property/birthName> ""Georgeanne Marie Rice""@en . ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?v3 <http://dbpedia.org/property/birthName> ?v4 . ?v0 <http://dbpedia.org/property/occupation> ?v6 . ?result <http://dbpedia.org/property/occupation> ?v6 . <http://dbpedia.org/resource/Unnatural_(TV_series)> <http://dbpedia.org/property/starring> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
  # Find Georgeanne Marie Rice
  ?rice a dbo:Person ;
        foaf:name ""Georgeanne Marie Rice""@en ;
        dbo:birthName ""Georgeanne Marie Rice""@en .

  # Find Ted McGinley's birth name
  ?tedMcGinley a dbo:Person ;
               foaf:name ""Ted McGinley""@en ;
               dbo:birthName ?birthName .

  # Find the actor in ""Unnatural"" and their profession
  ?unnaturalActor a dbo:Agent ;
                  dbp:profession ?actorProfession ;
                  dbo:workExample ?unnaturalWork .
  
  ?unnaturalWork rdfs:label ""Unnatural (TV series)""@en .

  # Find the spouse of Georgeanne Marie Rice who is married to someone with Ted McGinley's birth name
  ?rice dbo:spouse ?spouse .
  ?tedMcGinley dbo:birthName ?birthName .
  ?spouse dbp:profession ?actorProfession .
}
```",7,7,8,3,3,3,3,71,0,0,1,0,0.0,0
528,49,test,Give me the force of the person born as the birth name of Narciso Campero and war of the military force of Battle of Pisagua.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Pisagua> . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?result <http://dbpedia.org/ontology/commander> ?v1 . <http://dbpedia.org/resource/Narciso_Campero> <http://dbpedia.org/property/birthName> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

# Part 1 and 2: Find Narciso Campero and his associated force
SELECT ?person ?force WHERE {
    ?person dbo:birthName ""Narciso Campero""@en .
    OPTIONAL { ?person dbo:militaryForce ?force . }
}

UNION

# Part 3: Identify military forces involved in the Battle of Pisagua
SELECT ?battle ?militaryForce WHERE {
    dbr:Battle_of_Pisagua dbo:participatingMilitaryUnit ?militaryForce .
}
```",5,5,6,3,2,3,3,71,0,0,3,0,0.0,0
747,52,test,"Give me the band of the writer of Apollo (Hardwell song) and band of Shèna and person born on the birth date of the person decedent, that is an athlete and a soccer player, at Zolotonosha.",SELECT ?result WHERE { <http://dbpedia.org/resource/Shèna> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Zolotonosha> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v3 <http://dbpedia.org/ontology/birthDate> ?v2 . <http://dbpedia.org/resource/Apollo_(Hardwell_song)> <http://dbpedia.org/property/writer> ?v5 . ?result <http://dbpedia.org/ontology/birthDate> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX wd: <http://www.wikidata.org/entity/>
PREFIX wdt: <http://www.wikidata.org/prop/direct/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?writerBand ?shenaBand ?personBornOnSameDate
WHERE {
  # Find the writer of ""Apollo"" by Hardwell and their band
  OPTIONAL {
    ?song dbo:lyricsBy ?writer .
    ?song rdfs:label ""Apollo""@en .
    ?song dbo:artist dbr:Hardwell .
    ?writer dbo:band ?writerBand .
  }

  # Find Shèna's band
  OPTIONAL {
    ?shena dbo:band ?shenaBand .
    ?shena rdfs:label ""Shèna""@en .
  }

  # Find an athlete and soccer player from Zolotonosha, focusing on their birth date
  OPTIONAL {
    ?athlete wdt:P106 wd:Q33999 ; # occupation: athlete
              wdt:P138 wd:Q11169 ; # plays sport: association football (soccer)
              wdt:P19 wd:Q1109186 . # place of birth: Zolotonosha
    ?athlete wdt:P569 ?birthDate .
  }

  # Find any person born on the same date as the athlete
  OPTIONAL {
    ?person wdt:P569 ?sameBirthDate .
    FILTER (?sameBirthDate = ?birthDate)
  }
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
281,70,test,"Give me the war of the profession, that is a military unit, of the professional, that is an office holder and a politician, in New Zealand Army and entity in the birth place, that is a country, of the leader, that is a politician, of 1962 New South Wales state election and war of the awardee of Knight Grand Cross of the Order of the Bath.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/New_Zealand_Army> . <http://dbpedia.org/resource/1962_New_South_Wales_state_election> <http://dbpedia.org/property/leader> ?v0 . ?v4 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_the_Bath> . ?v0 <http://dbpedia.org/ontology/birthPlace> ?v7 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?result <http://dbpedia.org/ontology/place> ?v7 . ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/property/occupation> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?militaryUnit ?birthPlaceCountry ?war
WHERE {
  # Find military units in the New Zealand Army
  ?militaryUnit a dbo:MilitaryUnit ;
                dbo:militaryBranch dbr:New_Zealand_Army .

  # Find politicians who are office holders and their birthplaces
  ?politician a dbo:Politician, dbo:OfficeHolder ;
              dbo:birthPlace ?birthPlace .
  ?birthPlace rdfs:label ?birthPlaceLabel .
  
  # Leader of the 1962 NSW state election
  ?leader a dbo:Politician ;
          dbo:officeHeld dbr:Premier_of_New_South_Wales ;
          dbo:electedDuring dbr:1962_New_South_Wales_state_election .
  ?birthPlace rdfs:label ?birthPlaceLabel .

  # Awardee of Knight Grand Cross of the Order of the Bath and associated wars
  ?awardee a dbo:Person ;
           dbo:honoraryTitle dbr:Knight_Grand_Cross_of_the_Order_of_the_Bath ;
           dbo:participatedInWar ?war .
  
  # Filter to ensure birthplace is a country
  FILTER (strstarts(?birthPlaceLabel, ""Country:"") || strstarts(?birthPlaceLabel, ""State of""))
}
```",8,13,9,3,3,3,3,71,0,0,1,0,0.0,0
617,69,test,"Give me the spouse of the child of Antiochus III the Great and child of the child, that is a royalty, of the successor, that is a royalty, of Antiochus II Theos and parent of the child of the commander in Battle of Panium.",SELECT ?result WHERE { <http://dbpedia.org/resource/Battle_of_Panium> <http://dbpedia.org/ontology/commander> ?v1 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> ?v2 . ?v7 <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://dbpedia.org/ontology/child> ?v2 . ?v3 <http://dbpedia.org/property/father> ?v4 . <http://dbpedia.org/resource/Antiochus_II_Theos> <http://dbpedia.org/ontology/successor> ?v4 . ?result <http://dbpedia.org/property/father> ?v3 . <http://dbpedia.org/resource/Antiochus_III_the_Great> <http://dbpedia.org/ontology/child> ?v7 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?spouseOfChild WHERE {
  # Antiochus III the Great's child
  ?childAntiochusIII dbo:parent dbr:Antiochus_III_the_Great .
  
  # Spouse of Antiochus III the Great's child
  ?spouseOfChild dbo:spouse ?childAntiochusIII .

  # Child or grandchild of the spouse who is royalty
  {
    ?royalDescendant dbo:parent ?spouseOfChild .
    FILTER EXISTS { ?royalDescendant a dbo:Monarch }
  } UNION {
    ?grandchild dbo:parent ?descendant .
    ?descendant dbo:parent ?spouseOfChild .
    FILTER EXISTS { ?grandchild a dbo:Monarch }
  }

  # Successor of Antiochus II Theos who is royalty
  ?successorAntiochusII dbo:succeededBy dbr:Antiochus_II_theos .
  FILTER EXISTS { ?successorAntiochusII a dbo:Monarch }

  # Royal descendant from the successor
  {
    ?royalDescendantSuccessor dbo:parent ?successorAntiochusII .
    FILTER EXISTS { ?royalDescendantSuccessor a dbo:Monarch }
  } UNION {
    ?grandchildSuccessor dbo:parent ?descendantSuccessor .
    ?descendantSuccessor dbo:parent ?successorAntiochusII .
    FILTER EXISTS { ?grandchildSuccessor a dbo:Monarch }
  }

  # Commander in Battle of Panium
  ?commander dbo:commandedBattle dbr:Battle_of_Panium .

  # Child of the commander
  ?childCommander dbo:parent ?commander .

  # Parent of the child of the commander
  ?parentChildCommander dbo:child ?childCommander .

  # Ensure the parent matches the royal descendant from spouse's lineage
  FILTER (?royalDescendant = ?parentChildCommander || ?grandchild = ?parentChildCommander ||
          ?royalDescendantSuccessor = ?parentChildCommander || ?grandchildSuccessor = ?parentChildCommander)
}
```",8,10,9,3,3,3,3,71,0,0,2,0,0.0,0
801,71,test,"Give me the professional in the alter ego of the true self of The Shadow and producer of the work, that is a musical work and a song and a work, of the professional, that is a musical artist, in Rapper and associated musical artist of the writer, that is a musical artist and an artist, of the album, that is a musical work and a work, of What U See Is What U Get.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/occupation> ""Rapper""@en . ?result <http://dbpedia.org/property/occupation> ?v2 . ?v8 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v1 <http://dbpedia.org/property/alterEgo> ?v2 . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. <http://dbpedia.org/resource/What_U_See_Is_What_U_Get> <http://dbpedia.org/ontology/album> ?v7 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v7 <http://dbpedia.org/property/writer> ?v8 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v5 <http://dbpedia.org/ontology/producer> ?result . ?v1 <http://xmlns.com/foaf/0.1/givenName> ""The Shadow""@en . ?v5 <http://dbpedia.org/property/writer> ?v4 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?rapper WHERE {
  # The Shadow's alter ego
  dbr:The_Shadow dbo:alterEgo ?alterEgo .
  
  # Professional in the alter ego role
  ?alterEgo dbo:profession ?professional .

  # Producer of a musical work (song)
  ?professional dbo:producedWork ?musicalWork .
  ?musicalWork rdf:type dbr:Songs .

  # Rapper and associated musical artist with this producer
  ?rapper dbo:associatedMusicalArtist ?professional ;
          rdf:type dbr:Rappers .

  # Writer of the album ""What U See Is What U Get""
  dbr:What_U_See_Is_What_U_Get dbo:writer ?albumWriter .
  
  # Album's rapper and associated musical artist
  ?albumWriter dbo:associatedMusicalArtist ?rapper ;
               rdf:type dbr:Rappers .
}
```",9,17,10,3,3,3,3,71,0,0,8,0,0.0,0
767,54,test,"Give me the reference to  and alma mater of the administration of the reference to George Kilbon Nash and entity in the administration, that is a settlement, of Green.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://xmlns.com/foaf/0.1/name> """"@en . ?v3 <http://dbpedia.org/property/leaderParty> ""Green""@en . ?v5 <http://dbpedia.org/ontology/almaMater> ?result . ?v5 <http://dbpedia.org/property/governor> ?v0 . ?v0 <http://xmlns.com/foaf/0.1/name> ""George Kilbon Nash""@en . ?result <http://dbpedia.org/ontology/state> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?administration ?almaMater ?settlement WHERE {
  ?person rdfs:label ""George Kilbon Nash""@en .
  ?administration dbo:positionHeld ?person ;
                  dbo:location ?settlement .
  FILTER (CONTAINS(LCASE(?settlement), ""green"")) .
  OPTIONAL { ?administration dbo:almaMater ?almaMater }
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
179,16,test,Give me the parent of the child of Bhumibol Adulyadej and person born as the birth name of Sirikit.,SELECT ?result WHERE { <http://dbpedia.org/resource/Bhumibol_Adulyadej> <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Sirikit> <http://dbpedia.org/property/birthName> ?v2 . ?result <http://dbpedia.org/property/birthName> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parentOfChild ?personWithBirthName
WHERE {
  # Find a child of Bhumibol Adulyadej
  ?child dbo:parent dbr:Bhumibol_Adulyadej .

  # Find the parent of that child (should be either Bhumibol or Sirikit)
  ?child dbo:parent ?parentOfChild .

  # Get Sirikit's birth name
  dbr:Sirikit dbp:birthName ?sirikitBirthName .

  # Find any person with that birth name
  ?person foaf:name ?sirikitBirthName .
}
```",4,4,5,2,2,3,2,20,0,0,1,0,0.0,0
801,53,test,"Give me the producer of Westside Story (song) and professional in the alter ego of the true self of The Shadow and associated musical artist of the writer, that is a musical artist and an artist, of 40 Dayz & 40 Nightz.","SELECT ?result WHERE { <http://dbpedia.org/resource/40_Dayz_&_40_Nightz> <http://dbpedia.org/property/writer> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v3 <http://xmlns.com/foaf/0.1/givenName> ""The Shadow""@en . ?result <http://dbpedia.org/property/occupation> ?v2 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Westside_Story_(song)> <http://dbpedia.org/ontology/producer> ?result . ?v3 <http://dbpedia.org/property/alterEgo> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?producer ?alterEgoProfessional ?associatedArtist WHERE {
  # Producer of ""Westside Story (song)""
  ?song dbo:title ""Westside Story"" ;
        dbo:producer ?producer .

  # Professional in the alter ego of The Shadow's true self
  dbr:Lamont_Cranston dbo:alias dbr:The_Shadow ;
                      dbo:profession ?alterEgoProfessional .

  # Writer and associated artist of ""40 Dayz & 40 Nightz""
  ?song2 dbo:title ""40 Dayz & 40 Nightz"" ;
         dbo:writer ?writer .
  ?writer dbo:associatedMusicalArtist ?artist .
  FILTER (?artist = ?associatedArtist) .
  ?associatedArtist a dbo:Musician, dbo:Artist .

  # Ensure the song is correctly identified
  FILTER(STRSTARTS(STR(?song), ""http://dbpedia.org/resource/Westside_Story_(song)""))
  FILTER(STRSTARTS(STR(?song2), ""http://dbpedia.org/resource/40_Dayz_%26_40_Nightz""))
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
747,55,test,Give me the band of the writer of Apollo (Hardwell song) and band of the person born as Tracey Elizabeth McSween and person born on the birth date of Pavlo Khudzik.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ""Tracey Elizabeth McSween""@en . <http://dbpedia.org/resource/Pavlo_Khudzik> <http://dbpedia.org/ontology/birthDate> ?v3 . ?result <http://dbpedia.org/ontology/birthDate> ?v3 . ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Apollo_(Hardwell_song)> <http://dbpedia.org/property/writer> ?v5 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

# Part 1: Band of the writer of ""Apollo"" by Hardwell
SELECT ?writerBand WHERE {
    ?song dbo:title ""Apollo""@en .
    ?song dbo:artist ""Hardwell""@en .
    ?song dbo:writer ?writer .
    ?writer foaf:name ?writerName .
    OPTIONAL { ?writer dbo:band ?writerBand . }
}

UNION

# Part 2: Band of the person born as Tracey Elizabeth McSween
SELECT ?personBand WHERE {
    ?person foaf:name ""Tracey Elizabeth McSween""@en .
    OPTIONAL { ?person dbo:band ?personBand . }
}

UNION

# Part 3: Person born on Pavlo Khudzik's birth date and their band
SELECT ?personBornOnSameDateBand WHERE {
    ?pavloKhudzik foaf:name ""Pavlo Khudzik""@en .
    ?pavloKhudzik dbo:birthDate ?birthDate .

    ?otherPerson dbo:birthDate ?birthDate .
    OPTIONAL { ?otherPerson dbo:band ?personBornOnSameDateBand . }
}
```",6,6,7,2,3,3,3,71,0,0,1,0,0.0,0
404,54,test,"Give me the parent of the child, that is a royalty, of the parent, that is a royalty, of Prince George William of Hanover and spouse of the person born, that is a royalty, as Princess Victoria Louise of Prussia and child of Ernest Augustus, Crown Prince of Hanover.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Prince_George_William_of_Hanover> <http://dbpedia.org/ontology/parent> ?v0 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ernest_Augustus,_Crown_Prince_of_Hanover> . ?result <http://dbpedia.org/ontology/child> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/child> ?v5 . ?v3 <http://dbpedia.org/property/birthName> ""Princess Victoria Louise of Prussia""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parentOfParent
WHERE {
  # Step 1: Identify Prince George William of Hanover
  ?princeGeorgeWilliam a dbo:Person ;
                      foaf:name ""Prince George William of Hanover""@en .

  # Step 2: Find his parent who is royalty
  ?parentGeorgeWilliam dbo:child ?princeGeorgeWilliam ;
                       dbo:title ?title1 .
  FILTER(CONTAINS(LCASE(?title1), ""royalty""))

  # Step 3: Identify spouse of Princess Victoria Louise of Prussia
  ?princessVictoriaLouise a dbo:Person ;
                         foaf:name ""Princess Victoria Louise of Prussia""@en .
  ?spouse dbp:spouse ?princessVictoriaLouise ;
          dbo:title ?title2 .
  FILTER(CONTAINS(LCASE(?title2), ""royalty""))

  # Step 4: Determine child of Ernest Augustus, Crown Prince of Hanover
  ?ernestAugustus a dbo:Person ;
                  foaf:name ""Ernest Augustus, Crown Prince of Hanover""@en .
  ?child dbp:parent ?ernestAugustus ;
         dbo:title ?title3 .
  FILTER(CONTAINS(LCASE(?title3), ""royalty""))

  # Step 5: Find the parent of this child (royalty)
  ?parentChild dbo:child ?child ;
               dbo:title ?title4 .
  FILTER(CONTAINS(LCASE(?title4), ""royalty""))

  # Step 6: Identify the parent of the initial child from step 2
  ?parentOfParent dbo:child ?parentGeorgeWilliam ;
                  dbo:title ?title5 .
  FILTER(CONTAINS(LCASE(?title5), ""royalty""))
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
485,24,test,"Give me the entity in the birth place, that is a region, of Joseph Whitaker (naturalist) and birth place of the awardee, that is a writer and a poet, of Eric Gregory Award.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Poet>. ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Eric_Gregory_Award> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?result <http://dbpedia.org/ontology/country> ?v1 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Joseph_Whitaker_(naturalist)> <http://dbpedia.org/ontology/birthPlace> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?whitakerBirthPlace ?awardRecipientBirthPlace WHERE {
  # Find Joseph Whitaker's birthplace that is a region
  dbr:Joseph_Whitaker_(naturalist) dbo:birthPlace ?whitakerBirthPlace .
  FILTER (isBlank(?whitakerBirthPlace) || (
    ?whitakerBirthPlace rdf:type dbo:Region ||
    ?whitakerBirthPlace rdf:type dbo:AdministrativeTerritory
  ))

  # Find an awardee of the Eric Gregory Award who is a writer and poet, and their birthplace that is a region
  ?awardRecipient dbo:award <http://dbpedia.org/resource/Eric_Gregory_Award> .
  ?awardRecipient rdf:type dbo:Writer .
  ?awardRecipient rdf:type dbo:Poet .
  ?awardRecipient dbo:birthPlace ?awardRecipientBirthPlace .
  FILTER (isBlank(?awardRecipientBirthPlace) || (
    ?awardRecipientBirthPlace rdf:type dbo:Region ||
    ?awardRecipientBirthPlace rdf:type dbo:AdministrativeTerritory
  ))
}
```",4,7,5,2,2,2,3,28,0,0,1,0,0.0,0
767,18,test,Give me the alma mater of Carl L. Nippert and reference to  and entity in Baden-Württemberg.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Carl_L._Nippert> <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://xmlns.com/foaf/0.1/name> """"@en . ?result <http://dbpedia.org/ontology/state> <http://dbpedia.org/resource/Baden-Württemberg> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?almaMater ?entityInBadenWuerttemberg WHERE {
  # Find the alma mater of Carl L. Nippert
  { 
    ?person dbo:almaMater ?almaMater .
    FILTER (str(?person) = ""Carl_L._Nippert"")
  }
  
  UNION
  
  # Find an entity located in Baden-Württemberg
  {
    ?entity dbp:state ?state .
    FILTER (str(?state) = ""Baden-Württemberg"" || str(?state) = ""Bade-Wurtemberg"") 
    BIND(?entity AS ?entityInBadenWuerttemberg)
  }
}
```",3,3,4,1,3,3,3,71,0,1262,1,0.0,0.0,0
801,23,test,Give me the professional in the alter ego of the true self of The Shadow.,"SELECT ?result WHERE { ?v2 <http://xmlns.com/foaf/0.1/givenName> ""The Shadow""@en . ?result <http://dbpedia.org/property/occupation> ?v0 . ?v2 <http://dbpedia.org/property/alterEgo> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?profession 
WHERE {
  dbr:Lamont_Cranston dbo:occupation ?profession .
}
```",3,3,4,3,1,3,3,71,0,0,39640,0,0.0,0
485,26,test,"Give me the entity in the region, that is a country, of Western European Time and entity in the birth place, that is a region, of Joseph Whitaker (naturalist) and birth place of Thomas Warner (poet).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v1 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Western_European_Time> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Joseph_Whitaker_(naturalist)> <http://dbpedia.org/ontology/birthPlace> ?v2 . <http://dbpedia.org/resource/Thomas_Warner_(poet)> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/country> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?country WHERE {
  ?timeZone a dbo:TimeZone ;
            rdfs:label ""Western European Time""@en .
  ?location dbo:timeZone ?timeZone ;
            a dbo:Country .
  BIND(?location AS ?country)
}

UNION

SELECT DISTINCT ?region WHERE {
  dbr:Joseph_Whitaker (dbo:birthPlace) ?birthPlace .
  ?birthPlace a dbo:Region .
  BIND(?birthPlace AS ?region)
}

UNION

SELECT DISTINCT ?birthplace WHERE {
  dbr:Thomas_Warner dbo:birthPlace ?birthplace .
}
```",5,7,6,2,3,2,3,28,0,0,1,0,0.0,0
360,28,test,"Give me the writer of the work, that is an album, of Dave Flett and reference to the author of Blinded by the Light and native of the death place, that is a settlement, of Winnie Madikizela-Mandela.","SELECT ?result WHERE { <http://dbpedia.org/resource/Blinded_by_the_Light> <http://dbpedia.org/property/author> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://dbpedia.org/property/author> ""Dave Flett""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Album>. ?v1 <http://dbpedia.org/property/writer> ?result . <http://dbpedia.org/resource/Winnie_Madikizela-Mandela> <http://dbpedia.org/ontology/deathPlace> ?v3 . ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?result <http://xmlns.com/foaf/0.1/name> ?v5 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?albumWriter ?deathPlace WHERE {
  # Find the writer of an album by Dave Flett
  ?album dbo:artist dbr:Dave_Flett ;
         dbo:writer ?albumWriter .
  
  # Identify Bruce Springsteen as the author of ""Blinded by the Light""
  OPTIONAL { 
    ?song dbo:lyricist dbr:Bruce_Springsteen .
    FILTER (str(?song) = ""Blinded_by_the_Light"")
  }
  
  # Find the death place of Winnie Madikizela-Mandela
  dbr:Winnie_Madikizela-Mandela dbo:deathPlace ?deathPlace ;
                                 dbo:nativePlace ?nativePlace .
}
```",6,8,7,2,3,2,3,28,0,0,1,0,0.0,0
378,62,test,"Give me the war of the person born as the birth name of Carl Pontus Gahn and claim to fame of Louis des Balbes de Berton de Crillon, 1st Duke of Mahón and war of the commander in the reference, that is a military conflict, to Peninsular War.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v3 <http://dbpedia.org/property/birthName> ?v4 . <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/property/birthName> ?v4 . ?v6 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Louis_des_Balbes_de_Berton_de_Crillon,_1st_Duke_of_Mahón> <http://dbpedia.org/ontology/knownFor> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Peninsular War""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/ontology/commander> ?v6 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?war WHERE {
  # Carl Pontus Gahn's birth name and associated wars
  VALUES (?gahn) { dbr:C._P._G%C3%A5h }
  ?gahn dbo:birthName ?birthName .
  ?gahn dbo:participatedInMilitaryConflict ?war .

  # Louis des Balbes de Berton de Crillon, 1st Duke of Mahón's claim to fame and associated wars
  VALUES (?crillon) { dbr:Louis_des_Balbes_de_Berton_de_Crillon,_1st_Duke_of_Mah%C3%B3n }
  ?crillon dbo:claimToFame ?fame .
  ?crillon dbo:participatedInMilitaryConflict ?war .

  # Include the Peninsular War explicitly
  VALUES (?peninsularWar) { dbr:Peninsular_War }
  OPTIONAL { ?peninsularWar ?p ?o . FILTER(?p = dbo:participatedInMilitaryConflict) }

  UNION {
    ?peninsularWar dbo:participatedInMilitaryConflict ?war .
  }
}
```",7,8,8,3,3,3,3,71,0,0,2,0,0.0,0
528,20,test,Give me the war of Irene Morales and war of the commander in Battle of La Rinconada de Ate.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Battle_of_La_Rinconada_de_Ate> <http://dbpedia.org/ontology/commander> ?v2 . <http://dbpedia.org/resource/Irene_Morales> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war ?battle WHERE {
  OPTIONAL {
    ?person rdfs:label ""Irene Morales""@en .
    ?person dbo:participatedIn ?war .
  }
  OPTIONAL {
    ?commander rdfs:label ""Commander""@en .
    ?commander dbo:participatedIn ?battle .
    FILTER(CONTAINS(LCASE(STR(?battle)), ""la rinconada de ate""))
  }
}
```",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
488,61,test,"Give me the administration of the father of the spouse, that is a royalty, of Tokugawa Masako and death place of the father, that is a politician, of the father, that is an office holder, of Matsudaira Tadamasa.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/deathPlace> ?result . ?result <http://dbpedia.org/property/leader> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Matsudaira_Tadamasa> <http://dbpedia.org/property/father> ?v0 . ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Tokugawa_Masako> . ?v1 <http://dbpedia.org/property/father> ?v3 . ?v0 <http://dbpedia.org/property/father> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?administration ?deathPlace WHERE {
  # Tokugawa Masako's spouse
  dbr:Tokugawa_Masako dbo:spouse ?spouse .
  
  # Spouse is royalty
  ?spouse dbo:royaltyTitle ?title .

  # Administration of the father of the spouse (Royalty)
  ?spouse dbo:father ?fatherOfSpouse .
  ?fatherOfSpouse dbo:officeHolder ?administration .

  # Matsudaira Tadamasa's father
  dbr:Matsudaira_Tadamasa dbo:father ?fatherOfTadamasa .

  # Father of the father (Office Holder)
  ?fatherOfTadamasa dbo:father ?grandFatherOfTadamasa .
  ?grandFatherOfTadamasa a dbo:OfficeHolder .

  # Grandfather is a politician
  ?grandFatherOfTadamasa a dbo:Politician .

  # Death place of the grandfather (Politician)
  ?grandFatherOfTadamasa dbo:deathPlace ?deathPlace .
}
```",6,9,7,3,2,3,3,71,0,0,1,0,0.0,0
747,56,test,Give me the band of Amba Shepherd and person born on the birth date of Pavlo Khudzik and band of the person born as the persona of Shèna.,SELECT ?result WHERE { <http://dbpedia.org/resource/Amba_Shepherd> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Pavlo_Khudzik> <http://dbpedia.org/ontology/birthDate> ?v2 . <http://dbpedia.org/resource/Shèna> <http://xmlns.com/foaf/0.1/givenName> ?v0 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?result <http://dbpedia.org/ontology/birthDate> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?bandOfAmba ?personWithSameBirthDate ?bandOfPersonWithShenaPersona
WHERE {
  # Find Amba Shepherd's band
  ?amba a dbo:MusicalArtist ;
        foaf:name ""Amba Shepherd""@en .
  ?amba dbo:band ?bandOfAmba .

  # Find Pavlo Khudzik's birth date and another person with the same birth date
  ?pavlo a dbo:Person ;
         foaf:name ""Pavlo Khudzik""@en ;
         dbo:birthDate ?birthDate .
  ?personWithSameBirthDate a dbo:Person ;
                           dbo:birthDate ?birthDate .

  # Find Shèna's persona (birth name) and the band of that person
  ?shena a dbo:MusicalArtist ;
         foaf:name ""Shèna""@en .
  OPTIONAL { ?shena foaf:nick ?personaName . }
  OPTIONAL {
    ?personWithPersona a dbo:Person ;
                       foaf:name ?personaName ;
                       dbo:band ?bandOfPersonWithShenaPersona .
  }
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
54,36,test,"Give me the child of Thinkhaya of Pagan and predecessor of the child, that is an office holder and a royalty, of the reference to Thihapate of Mohnyin.","SELECT ?result WHERE { <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Thihapate of Mohnyin""@en . ?result <http://dbpedia.org/ontology/successor> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?predecessor WHERE {
  # Find Thinkhaya of Pagan's child
  ?child dbo:parent dbr:Thinkhaya_of_Pagan .
  
  # Find the predecessor of that child
  ?officeHolder dbo:predecessor ?predecessor .
  ?officeHolder rdfs:label ?childLabel .

  FILTER(CONTAINS(LCASE(?childLabel), ""thinkhaya of pagan's child""))

  # Ensure the predecessor is an office holder and royalty
  ?predecessor a dbo:Monarch ;
               dbo:officeHolder true .

  # Reference to Thihapate of Mohnyin
  ?predecessor dbo:relatedTo dbr:Thihapate_of_Mohnyin .
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
427,29,test,Give me the party of the father of Lamberto Andreotti and reference to Partito Popolare Italiano and party of Romano Prodi.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Lamberto_Andreotti> <http://dbpedia.org/property/father> ?v3 . <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/ontology/party> ?result . ?result <http://xmlns.com/foaf/0.1/name> ""Partito Popolare Italiano""@en . ?v3 <http://dbpedia.org/ontology/party> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father ?fathersParty ?prodisParty WHERE {
  # Lamberto Andreotti and his father
  dbr:Lamberto_Andreotti dbo:father ?father .
  
  OPTIONAL { 
    ?father dbo:member ?fathersParty .
  }
  
  # Reference to Partito Popolare Italiano
  FILTER EXISTS { 
    ?party dbr:Partito_Popolare_Italiano .
  }

  # Romano Prodi's party affiliation
  dbr:Romano_Prodi dbo:member ?prodisParty .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
492,53,test,"Give me the person decedent at the work of the author of French Algeria and commander in Franco-Hova Wars and person decedent at the capital, that is a settlement, of Algeria.",SELECT ?result WHERE { <http://dbpedia.org/resource/French_Algeria> <http://dbpedia.org/property/author> ?v3 . <http://dbpedia.org/resource/Algeria> <http://dbpedia.org/ontology/capital> ?v1 . ?v2 <http://dbpedia.org/property/author> ?v3 . <http://dbpedia.org/resource/Franco-Hova_Wars> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Find the author of ""French Algeria""
  ?work dbo:title ""French Algeria""@en .
  ?work dbo:author ?person .

  # Check if this person was a commander in the Franco-Hova Wars
  ?conflict dbo:name ?warName .
  FILTER(?warName IN (""Franco-Hova Wars"", ""Madagascar Expedition (1895)"")) .
  ?conflict dbo:commander ?person .

  # Find individuals who died in Algiers, ensuring it is a settlement
  dbr:Algiers dbo:capitalOf dbr:Algeria ;
              rdf:type dbo:Settlement .

  ?death dbo:place ?location .
  FILTER(?location = dbr:Algiers) .
  ?death dbo:deceased ?person .
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
485,25,test,"Give me the entity in the region, that is a country, of Western European Time and entity in Nottinghamshire and birth place of the awardee, that is a writer and a poet, of Eric Gregory Award.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v4 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Eric_Gregory_Award> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Poet>. ?v2 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Western_European_Time> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>. ?v4 <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Nottinghamshire> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?country ?nottinghamshireEntity ?birthPlace WHERE {
  # Find countries in the Western European Time zone
  ?country a dbo:Country ;
           dbo:timeZone dbr:Western_European_Time .

  # Find entities located in Nottinghamshire
  ?nottinghamshireEntity dbo:locatedIn dbr:Nottinghamshire .

  # Find awardees of the Eric Gregory Award who are writers and poets, and their birthplaces
  ?person dbo:award dbr:Educational_Award_for_the_Eric_Gregory_Prize ;
          dbo:occupation [ a dbo:Writer ; a dbo:Poet ] .
  ?person dbo:birthPlace ?birthPlace .

  # Ensure the person is an awardee of the Eric Gregory Award
  ?award dbo:name ""Eric Gregory Award""@en ;
         dbo:recipient ?person .
}
```",5,8,6,2,3,2,3,28,0,0,1,0,0.0,0
994,38,test,"Give me the band member of the person born, that is a musical artist, as Donald Maynard Dokken and associated musical artist of the band member, that is a band and a group and an organisation, of Meshuggah.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ""Donald Maynard Dokken""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Meshuggah> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?member ?associatedBand WHERE {
  # Step 1: Identify Donald Maynard Dokken as a musical artist
  ?dokken a dbo:MusicalArtist ;
          foaf:name ""Donald Maynard Dokken"" .

  # Step 2: Find the band he is associated with
  ?band a dbo:Band ;
        dbo:bandMember ?dokken .
  
  # Step 3: Determine members of that band
  ?member a dbo:MusicalArtist ;
          dbo:bandMember ?band .

  # Step 4: For each member, find other bands they are associated with
  ?otherBand a dbo:Band ;
             dbo:bandMember ?member .
  
  # Step 5: Filter to include only associations where the band is Meshuggah
  FILTER(?otherBand = dbr:Meshuggah)
}
```",4,8,5,2,2,3,3,71,0,0,1,0,0.0,0
10,21,test,Give me the associated musical artist of Matt Colton and band member of Luke Vibert and professional in the birth name of Sharon Kao.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Luke_Vibert> . ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Matt_Colton> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Sharon_Kao> <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?artist ?bandMember ?professional WHERE {
  # Associated musical artist of Matt Colton
  { 
    ?entity dbo:associatedMusicalArtist ?artist .
    FILTER(STRSTARTS(LCASE(?entity), ""matt colton""))
  }
  
  UNION
  
  # Band member of Luke Vibert
  { 
    ?entity dbo:bandMember ?bandMember .
    FILTER(STRSTARTS(LCASE(?entity), ""luke vibert""))
  }

  UNION

  # Professional in the birth name of Sharon Kao
  {
    ?person foaf:name ?name .
    ?person dbo:birthName ?birthName .
    ?person dbo:profession ?professional .
    FILTER(STRSTARTS(LCASE(?birthName), ""sharon kao""))
  }
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
488,69,test,"Give me the birth place of the commander in the war, that is a military conflict and an event and a societal event, of Saitō Hajime and administration of the father of the spouse, that is a royalty, of Tokugawa Masako and death place of the father, that is a politician, of Yūki Hideyasu.",SELECT ?result WHERE { <http://dbpedia.org/resource/Yūki_Hideyasu> <http://dbpedia.org/property/father> ?v7 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Tokugawa_Masako> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Saitō_Hajime> <http://dbpedia.org/ontology/battle> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/property/father> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v7 <http://dbpedia.org/ontology/deathPlace> ?result . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://dbpedia.org/ontology/commander> ?v3 . ?result <http://dbpedia.org/property/leader> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?birthPlaceSaito ?administrationRoyalFather ?deathPlaceYukiFather
WHERE {
  # Saitō Hajime's birth place and war classification
  dbr:Saitō_Hajime dbo:birthPlace ?birthPlaceSaito .
  
  # War as a military conflict, event, and societal event
  ?war dbo:type dbr:Military_conflict ;
       dbo:wikiPageWikiLink dbr:Event ;
       dbo:wikiPageWikiLink dbr:Societal_event .
  dbr:Saitō_Hajime dbo:militaryConflict ?war .

  # Tokugawa Masako's spouse's father's administration
  dbr:Tokugawa_Masako dbo:spouse ?spouse .
  ?spouse dbo:father ?royalFather .
  ?royalFather a dbo:Monarch ;
              dbo:administrativePost ?administrationRoyalFather .

  # Yūki Hideyasu's father's death place
  dbr:Yūki_Hideyasu dbo:father ?yukiFather .
  ?yukiFather a dbo:Politician ;
             dbo:deathPlace ?deathPlaceYukiFather .
}
```",8,13,9,3,3,3,3,71,0,0,1,0,0.0,0
54,68,test,"Give me the child of the father of the child of Thinkhaya of Pagan and predecessor of the child, that is an office holder and a royalty, of Thihapate of Mohnyin and parent of the child of the parent of Thado Minsaw of Prome.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/father> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> . <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?v5 . ?v7 <http://dbpedia.org/property/father> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v7 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/successor> ?v3 . ?v4 <http://dbpedia.org/ontology/child> ?result . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Thihapate_of_Mohnyin> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?finalEntity WHERE {
  # Step 1: Thinkhaya's child
  ?thinkhayaChild dbo:childOf ?thinkhaya .
  
  # Step 2 & 3: Predecessor of Thinkhaya's child is Thinkhaya himself
  ?thinkhaya dbo:predecessor ?thinkhayaPredecessor .

  # Step 4: Child of Thinkhaya and his predecessor (Thinkhaya's child)
  ?thinkhayaChild rdf:type/rdfs:subClassOf* dbo:Person .
  
  # Step 5: Thihapate's child who is an office holder and royalty
  ?thihapateChild dbo:childOf ?thihapate .
  ?thihapateChild rdf:type/rdfs:subClassOf* dbo:Royalty ;
                  rdf:type/rdfs:subClassOf* dbo:OfficeHolder .

  # Step 6: Parent of the child of Thado Minsaw
  ?thadoParent dbo:parentOf ?thadoMinsaw .
  ?thadoChild dbo:childOf ?thadoParent .

  # Step 7: Final entity - Child of Thinkhaya's child and parent from step 6
  ?finalEntity dbo:childOf ?thinkhayaChild ;
               dbo:parentOf ?thadoChild .
}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
427,48,test,"Give me the party of the person born, that is an office holder and a politician, as Romano Antonio Prodi and reference to the name of the party of Michele Pinto.","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v1 <http://dbpedia.org/ontology/party> ?result . ?v1 <http://dbpedia.org/property/birthName> ""Romano Antonio Prodi""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Michele_Pinto> <http://dbpedia.org/ontology/party> ?v3 . ?v3 <http://xmlns.com/foaf/0.1/name> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?prodiParty ?pintoParty WHERE {
  # Find Romano Prodi's party
  OPTIONAL {
    ?prodi dbo:birthPlace ?place .
    ?prodi dbo:officeHolder ?office .
    ?prodi dbo:party ?prodiParty .
    FILTER (str(?prodi) = ""Romano_Prodi"")
  }
  
  # Find Michele Pinto's party
  OPTIONAL {
    ?pinto dbo:party ?pintoParty .
    FILTER (str(?pinto) = ""Michele_Pinto_(politician)"")
  }
}
```",5,7,6,3,2,3,3,71,0,0,2,0,0.0,0
281,53,test,"Give me the war of the awardee of the award of Jonathon Band and entity in Colony of New Zealand and war of the profession, that is a military unit, of Heather Roy.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> ?v3 . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Colony_of_New_Zealand> . ?v2 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Jonathon_Band> <http://dbpedia.org/property/awards> ?v3 . ?v1 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Heather_Roy> <http://dbpedia.org/property/occupation> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?warOfAwardee ?entityInNZColony ?warOfMilitaryUnit
WHERE {
  # Find Jonathon Band's award and its recipient
  ?award dbo:recipient dbr:Jonathon_Band .
  ?award dbo:recipient ?awardee .

  # Find the war related to the awardee of Jonathon Band's award
  ?awardee dbo:relatedTo ?warOfAwardee .

  # Find an entity in Colony of New Zealand
  ?entityInNZColony dbo:location dbr:Colony_of_New_Zealand .

  # Find Heather Roy's profession and related war if it is a military unit
  dbr:Heather_Roy dbo:profession ?militaryUnit .
  FILTER (isLiteral(?militaryUnit) && regex(str(?militaryUnit), ""Military Unit"", ""i""))
  ?militaryUnit dbo:relatedTo ?warOfMilitaryUnit .
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
404,41,test,"Give me the spouse of the person born, that is a royalty, as Princess Victoria Louise of Prussia and child of Ernest Augustus, Crown Prince of Hanover and parent of the child, that is a royalty, of Ernest Augustus, Duke of Brunswick.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/ontology/child> ?v4 . ?v2 <http://dbpedia.org/property/birthName> ""Princess Victoria Louise of Prussia""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ernest_Augustus,_Crown_Prince_of_Hanover> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?spouse WHERE {
  ?princess a dbo:Princess ;
           dbo:parent ?ernestAugustusCrownPrince ;
           dbo:spouse ?spouse .
  
  ?ernestAugustusCrownPrince rdfs:label ""Ernest Augustus, Crown Prince of Hanover""@en .

  ?spouse rdf:type dbo:RoyalFamilyMember ;
          dbo:child ?dukeChild .

  ?dukeChild dbo:parent ?ernestAugustusDuke .
  
  ?ernestAugustusDuke rdfs:label ""Ernest Augustus, Duke of Brunswick""@en .
}
```",5,7,6,2,3,3,3,71,0,0,1,0,0.0,0
915,18,test,"Give me the resident of the birthplace, that is a settlement, of the director of Pipe Dreams (1976 film) and father of the child, that is a fictional character and a soap character, of Phillip Spaulding.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoapCharacter>. ?v3 <http://dbpedia.org/property/father> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v1 <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Phillip_Spaulding> . ?result <http://dbpedia.org/ontology/residence> ?v2 . <http://dbpedia.org/resource/Pipe_Dreams_(1976_film)> <http://dbpedia.org/ontology/director> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?resident WHERE {
  # Step 1: Identify the director of ""Pipe Dreams"" (1976 film)
  ?film dbo:director ?director .
  ?film rdfs:label ""Pipe Dreams""@en .
  FILTER(CONTAINS(str(?film), ""1976""))

  # Step 2: Determine the birthplace of the director
  ?director dbp:birthPlace ?birthPlace .
  ?birthPlace a dbo:Settlement .

  # Step 3: Find the child of Phillip Spaulding
  ?spauldingChild dbo:parent dbr:Phillip_Spaulding ;
                  a dbo:FictionalCharacter, dbo:SoapCharacter .

  # Step 4: Identify the resident of the director's birthplace
  ?resident dbp:residence ?birthPlace .
}
```",5,8,6,3,2,3,2,20,0,0,1,0,0.0,0
487,17,test,"Give me the country of 2022 Vermont House of Representatives election and administration of the person born, that is a soccer player, as the birth name of Phil Scott.",SELECT ?result WHERE { <http://dbpedia.org/resource/Phil_Scott> <http://dbpedia.org/property/birthName> ?v0 . <http://dbpedia.org/resource/2022_Vermont_House_of_Representatives_election> <http://dbpedia.org/ontology/country> ?result . ?v3 <http://dbpedia.org/property/birthName> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?result <http://dbpedia.org/property/governor> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?country ?administrationRole
WHERE {
  # Identify Phil Scott by his birth name and profession as a soccer player
  ?philScott dbo:birthName ""Phil Scott""@en .
  ?philScott dbo:sport dbr:Soccer .

  # Link Phil Scott to the United States via Vermont
  ?vermontHouseElection dbp:electionCountry dbr:United_States .
  ?vermontHouseElection dbp:state dbr:Vermont .
  
  # Check if Phil Scott has any administrative role related to the election
  OPTIONAL {
    ?philScott dbo:officeHolder ?administrationRole .
    ?administrationRole dbp:election ?vermontHouseElection .
  }

  # Return the country and administration role
  BIND(dbr:United_States AS ?country)
}
```",4,5,5,3,2,3,2,20,0,0,1,0,0.0,0
801,62,test,"Give me the professional in the alter ego of the true self of The Shadow and associated musical artist of Chris Taylor (music producer) and producer of the work, that is a musical work and a song and a work, of the professional, that is a musical artist, in Rapper.","SELECT ?result WHERE { ?v4 <http://xmlns.com/foaf/0.1/givenName> ""The Shadow""@en . ?v0 <http://dbpedia.org/property/occupation> ""Rapper""@en . ?result <http://dbpedia.org/property/occupation> ?v3 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v6 <http://dbpedia.org/ontology/producer> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v6 <http://dbpedia.org/property/writer> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Chris_Taylor_(music_producer)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://dbpedia.org/property/alterEgo> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?alterEgo ?associatedArtist ?musicalWork WHERE {
  # Find The Shadow's alter ego
  dbr:The_Shadow dbo:alterEgo ?alterEgo .
  
  # Find the associated musical artist with Chris Taylor (music producer)
  dbr:Chris_Taylor_Musician dbo:associatedWith ?associatedArtist .

  # Ensure the alter ego is also a rapper and matches the associated artist
  ?alterEgo rdf:type dbo:MusicalArtist ;
            dbo:genre dbr:Rap_music .
  
  FILTER(?alterEgo = ?associatedArtist)

  # Find a musical work produced by this individual
  ?musicalWork dbo:producer ?alterEgo ;
               rdf:type dbo:Songs .
}
```",7,11,8,3,3,3,3,71,0,0,2,0,0.0,0
9,60,test,"Give me the alma mater of the mayor, that is a politician, of the entity, that is an organisation, in Belfast and figure known as the nickname of the entity, that is an organisation and an educational institution, in Northern Ireland.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Northern_Ireland> . ?result <http://dbpedia.org/property/nickname> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v3 <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Belfast> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/property/leader> ?v2 . ?v2 <http://dbpedia.org/ontology/almaMater> ?result . ?v0 <http://dbpedia.org/property/nickname> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?almaMater ?nickname WHERE {
  # Step 1: Find educational institutions in Belfast with nicknames
  ?org a dbo:EducationalOrganization ;
      dbo:location dbr:Belfast ;
      dbp:nickname ?nickname .
  
  # Step 2: Identify the mayor of Belfast who is also a politician
  ?mayor dbo:officeHolderOf dbr:MunicipalCouncil_of_Belfast ;
         a dbo:Politician ;
         dbo:almaMater ?almaMater .

  # Ensure the organization and educational institution are the same
  FILTER EXISTS { ?org dbp:nickname ?nickname }
}
```",6,10,7,3,2,3,3,71,0,0,1,0,0.0,0
994,58,test,"Give me the associated musical artist of S.A. Slayer and band member of the person born, that is a musical artist, as the persona of Don Dokken and associated musical artist of the band member, that is a band and a group and an organisation, of Meshuggah.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Meshuggah> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://dbpedia.org/property/birthName> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Don_Dokken> <http://xmlns.com/foaf/0.1/givenName> ?v4 . ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. <http://dbpedia.org/resource/S.A._Slayer> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?sASArtist ?bandMember ?personaDonDokken ?associatedArtistMeshuggah
WHERE {
  # Step 1: Identify S.A. Slayer and its associated musical artist
  ?sA_Slayer dbo:genre ?genre .
  FILTER(CONTAINS(LCASE(STR(?sA_Slayer)), ""s.a. slayer"")) .
  
  # Step 2: Find band member born as a musical artist
  ?bandMember dbo:memberOf ?sA_Slayer ;
              dbo:birthDate ?birthDate ;
              dbo:occupation dbr:Musical_artist .

  # Step 3: Persona of Don Dokken
  ?personaDonDokken dbo:associatedBand ?donDokkenBand .
  FILTER(CONTAINS(LCASE(STR(?personaDonDokken)), ""don dokken"")) .

  # Step 4: Associated musical artist of the band member
  ?bandMember dbo:associatedMusicalArtist ?sASArtist .

  # Step 5: Band and group of Meshuggah
  ?meshuggahBandMember dbo:memberOf dbr:Meshuggah ;
                       dbo:associatedMusicalArtist ?associatedArtistMeshuggah .
}
```",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
994,63,test,"Give me the associated musical artist of the associated musical artist of the reference to Watchtower and associated musical artist of the band member, that is a band and a group and an organisation, of Meshuggah and band member of the person born, that is a musical artist, as Donald Maynard Dokken.","SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://dbpedia.org/property/birthName> ""Donald Maynard Dokken""@en . ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Meshuggah> . ?v3 <http://xmlns.com/foaf/0.1/name> ""Watchtower""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?finalArtist WHERE {
  # Step 1: Find Watchtower member who is also an artist
  ?watchtowerMember dbo:memberOf dbr:Watchtower .
  ?watchtowerMember dbo:associatedMusicalArtist ?artist1 .

  # Step 2: Find associated musical artist of that member
  ?artist1 dbo:associatedMusicalArtist ?artist2 .

  # Step 3: Identify Meshuggah band members
  ?meshuggahMember dbo:memberOf dbr:Meshuggah .
  
  # Step 4: Find band member of Don Dokken
  ?dokkenMember dbo:memberOf ?dokkenBand .
  ?dokkenBand rdfs:label ""Dokken""@en .

  # Step 5: Combine relationships to find the final artist
  ?meshuggahMember dbr:Don_Dokken .
  
  # Final association
  ?artist2 dbo:associatedMusicalArtist ?finalArtist .
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
391,49,test,"Give me the actor of the movie, that is a movie and a work and a television show, with the professional in  and native of the figure known as Hub City.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/nickname> ""Hub City""@en . ?v0 <http://dbpedia.org/property/occupation> """"@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://dbpedia.org/property/starring> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://dbpedia.org/property/starring> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?actor WHERE {
  ?movie a dbo:Film ;
         a dbo:Work ;
         a dbo:TelevisionShow .
  
  ?movie dbo:starring ?actor .

  ?actor dbo:nativePlace dbr:Hub_City ;
         rdfs:label ?label .

  FILTER (CONTAINS(LCASE(?label), ""hub city""))
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
747,67,test,"Give me the band of the person born as the persona of Shèna and band of the writer of the work, that is a song, of Amba Shepherd and person born on 1985-04-29.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Shèna> <http://xmlns.com/foaf/0.1/givenName> ?v1 . ?v3 <http://dbpedia.org/property/birthName> ?v1 . ?v6 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Amba_Shepherd> . ?result <http://dbpedia.org/ontology/birthDate> ""1985-04-29""^^<http://www.w3.org/2001/XMLSchema#date> . ?v0 <http://dbpedia.org/property/writer> ?v6 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?bandOfShena ?writerOfSong ?bandOfBirthdatePerson WHERE {
  # Find the band of Shèna
  OPTIONAL {
    ?shena dbo:birthName ""Shèna""@en .
    ?shena dbo:musicalArtist dbr:BandX . # Replace BandX with actual resource once identified
    ?shena dbp:band ?bandOfShena .
  }

  # Find the writer of a song by Amba Shepherd
  OPTIONAL {
    ?song dbo:composer dbr:Amba_Shepherd .
    ?song dbo:lyricist ?writerOfSong .
  }
  
  # Find the band of the person born on 1985-04-29
  OPTIONAL {
    ?person dbp:birthday ""1985-04-29""^^xsd:date .
    ?person dbo:musicalArtist dbr:BandY . # Replace BandY with actual resource once identified
    ?person dbp:band ?bandOfBirthdatePerson .
  }
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
488,63,test,"Give me the birth place of the commander in the war, that is a military conflict and an event and a societal event, of Saitō Hajime and death place of the father, that is a politician, of Yūki Hideyasu and administration of the father of Emperor Go-Mizunoo.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Emperor_Go-Mizunoo> <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/property/leader> ?v2 . <http://dbpedia.org/resource/Saitō_Hajime> <http://dbpedia.org/ontology/battle> ?v4 . <http://dbpedia.org/resource/Yūki_Hideyasu> <http://dbpedia.org/property/father> ?v6 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v6 <http://dbpedia.org/ontology/deathPlace> ?result . ?v4 <http://dbpedia.org/ontology/commander> ?v3 . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>

SELECT DISTINCT ?birthPlaceSaito ?deathPlaceYukiFather ?administrationGoMizunooFather
WHERE {
  # Birthplace of Saitō Hajime
  dbr:Saitō_Hajime dbo:birthPlace ?birthPlaceSaito .

  # Death place of Yūki Hideyasu's father (a politician)
  dbr:Yūki_Hideyasu dbo:father ?yukiFather .
  ?yukiFather a dbo:Politician ;
             dbo:deathPlace ?deathPlaceYukiFather .

  # Administration of Emperor Go-Mizunoo's father
  dbr:Emperor_Go-Mizunoo dbo:father ?goMizunooFather .
  ?goMizunooFather dbo:positionHeld ?administrationGoMizunooFather .
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
994,67,test,"Give me the associated musical artist of the band member, that is a band and a group and an organisation, of the band, that is an organisation, of Fredrik Thordendal and band member of the person born, that is a musical artist, as the persona of Don Dokken and associated musical artist of S.A. Slayer.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Don_Dokken> <http://xmlns.com/foaf/0.1/givenName> ?v4 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/birthName> ?v4 . ?v1 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Fredrik_Thordendal> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. <http://dbpedia.org/resource/S.A._Slayer> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?associatedArtist WHERE {
  # Fredrik Thordendal's band
  dbr:Fredrik_Thordendal dbo:memberOf dbr:Meshuggah .
  
  # Dave Mustaine (persona of Don Dokken, associated with S.A. Slayer)
  dbr:Dave_Mustaine dbo:birthName ?donDokkenPersona ;
                    dbo:associatedBandMember dbr:Megadeth .

  # Find a band member of Megadeth that is also an organization
  ?bandMember dbo:memberOf dbr:Megadeth .
  
  # Ensure the band is both a group and an organization
  ?bandMember dbo:type ?type1, ?type2 .
  FILTER (?type1 = dbo:Band && (?type2 = dbo:MusicalGroup || ?type2 = dbo:Organization)) .

  # Find associated musical artist of this band member
  ?bandMember dbo:associatedMusicalArtist ?associatedArtist .
}
```",7,12,8,3,3,3,3,71,0,0,1,0,0.0,0
421,26,test,Give me the person born as the birth name of Dino Merlin and band member of the awardee of [[#Awards and nominations and native of Socialist Federal Republic of Yugoslavia.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v2 . ?v1 <http://dbpedia.org/property/awards> ""[[#Awards and nominations""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Socialist_Federal_Republic_of_Yugoslavia> . <http://dbpedia.org/resource/Dino_Merlin> <http://dbpedia.org/property/birthName> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?band WHERE {
  # Find Dino Merlin's birth name
  dbr:Dino_Merlin dbo:birthName ?birthName .

  # Find a band member with the same birth name as Dino Merlin
  ?person dbo:birthName ?birthName .
  
  # Ensure the person is from the Socialist Federal Republic of Yugoslavia
  ?person dbo:nationality dbr:Socialist_Federal_Republic_of_Yugoslavia .

  # Find bands that have received awards or nominations and are native to SFRY
  ?band dbo:award ?award ;
        dbo:member ?person ;
        dbo:nativeCountry dbr:Socialist_Federal_Republic_of_Yugoslavia .
}
```",5,5,6,2,3,2,3,28,0,0,1,0,0.0,0
378,68,test,"Give me the war of the person born as the birth name of Carl Pontus Gahn and claim to fame of the commander in Great Siege of Gibraltar and war of the commander in the reference, that is a military conflict, to Peninsular War.","SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""Peninsular War""@en . ?v4 <http://dbpedia.org/property/birthName> ?v5 . ?v4 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/ontology/commander> ?v7 . ?v3 <http://dbpedia.org/ontology/knownFor> ?result . ?v7 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Great_Siege_of_Gibraltar> <http://dbpedia.org/ontology/commander> ?v3 . <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/property/birthName> ?v5 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war WHERE {
  # Find Carl Pontus Gahn's birth name
  dbr:C._P._Gahn dbo:birthName ?birthName .
  
  # Find the commander of the Great Siege of Gibraltar and their claim to fame
  dbr:Great_Siege_of_Gibraltar dbo:commander ?commander ;
                               dbo:claimToFame ?claimToFame .

  # Check if this commander was involved in a war related to the Peninsular War
  ?war dbo:participatedIn ?commander .
  FILTER(?war != dbr:Peninsular_War) .
}
```",8,9,9,3,3,3,3,71,0,0,2,0,0.0,0
360,26,test,"Give me the reference to the author of Blinded by the Light and native of Johannesburg and writer of the work, that is an album, of Dave Flett.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Album>. ?v2 <http://dbpedia.org/property/author> ""Dave Flett""@en . <http://dbpedia.org/resource/Blinded_by_the_Light> <http://dbpedia.org/property/author> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . ?v2 <http://dbpedia.org/property/writer> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Johannesburg> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?author WHERE {
  # Find the author of ""Blinded by the Light""
  ?song dbo:lyricsBy ?author .
  ?song rdfs:label ""Blinded by the Light""@en .

  # Ensure the author is native to Johannesburg
  ?author dbo:birthPlace dbr:Johannesburg .

  # Find albums written by Dave Flett and check if this author contributed
  ?album dbo:writer ?contributor .
  ?album dbo:artist dbr:Dave_Flett .
  FILTER (?contributor = ?author)
}
```",5,6,6,2,3,2,3,28,0,0,1,0,0.0,0
435,26,test,"Give me the work of the author of Iceland and region of Greenwich Mean Time and territory administered from the figure known, that is a settlement and a town and Icelandic, as Land of fire and ice.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Greenwich_Mean_Time> . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Iceland>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Iceland> <http://dbpedia.org/property/author> ?v2 . ?v1 <http://dbpedia.org/property/nickname> ""Land of fire and ice""@en . ?result <http://dbpedia.org/ontology/capital> ?v1 . ?result <http://dbpedia.org/property/author> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Town>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?work ?region ?territory 
WHERE {
  # Find works by Halldór Laxness
  dbr:Halld%C3%B3r_Laxness dbo:authorOf ?work .

  # Find regions using Greenwich Mean Time
  ?region dbo:timeZone dbr:Greenwich_Mean_Time .

  # Confirm Iceland as a territory known for its settlement and town characteristics
  dbr:Iceland a dbo:Settlement ;
              a dbo:Town ;
              rdfs:label ""Land of Fire and Ice""@en .
}
```",5,8,6,2,3,2,3,28,0,0,1,0,0.0,0
427,70,test,"Give me the reference to the name of Italian People's Party (1994) and party of the father of the alumnus of Massachusetts Institute of Technology and party of the person born, that is an office holder and a politician, as the birth name of Romano Prodi.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://dbpedia.org/property/birthName> ?v1 . ?v7 <http://dbpedia.org/ontology/party> ?result . ?v0 <http://dbpedia.org/property/father> ?v7 . <http://dbpedia.org/resource/Italian_People's_Party_(1994)> <http://xmlns.com/foaf/0.1/name> ?v4 . <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/property/birthName> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Massachusetts_Institute_of_Technology> . ?v3 <http://dbpedia.org/ontology/party> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?partyName ?fatherParty ?prodiBirthName ?prodiParty
WHERE {
  # Italian People's Party (1994)
  VALUES ?italianPeopleParty { dbr:Italian_People%27s_Party_(1994) }
  ?italianPeopleParty dbo:name ?partyName .

  # Father of an alumnus of MIT and his party
  ?alumnus dbo:almaMater dbr:Massachusetts_Institute_of_Technology ;
           dbo:father ?father .
  ?father dbo:memberOf ?fatherParty .

  # Romano Prodi's birth name and political affiliation
  ?prodi a dbo:Politician ;
         dbp:name ""Romano Prodi""@en ;
         dbp:birthday ?birthDate ;
         dbo:memberOf ?prodiParty .
  OPTIONAL { ?prodi dbp:birthName ?prodiBirthName . }
}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
360,20,test,"Give me the reference to Manfred Mann and native of the death place, that is a settlement, of Winnie Madikizela-Mandela and writer of The Roaring Silence.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . <http://dbpedia.org/resource/Winnie_Madikizela-Mandela> <http://dbpedia.org/ontology/deathPlace> ?v3 . ?result <http://xmlns.com/foaf/0.1/name> ""Manfred Mann""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/The_Roaring_Silence> <http://dbpedia.org/property/writer> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?manfredMannReference ?deathPlaceName WHERE {
  # Find Manfred Mann's reference and check if he wrote ""The Roaring Silence""
  dbr:Manfred_Mann a dbo:MusicArtist ;
                  dbo:work dbr:The_Roaring_Silence .

  # Get the death place of Winnie Madikizela-Mandela
  dbr:Winnie_Madikizela-Mandela dbo:deathPlace ?deathPlace .
  
  # Ensure the death place is a settlement
  ?deathPlace rdf:type dbo:Settlement ;
              rdfs:label ?deathPlaceName .

  # Bind Manfred Mann's reference to the result
  BIND(dbr:Manfred_Mann AS ?manfredMannReference)
}
```",4,5,5,2,3,2,3,28,0,0,1,0,0.0,0
92,45,test,Give me the band member of Nevermore and associated musical artist of Jim Sheppard and band of the person born as the birth name of Joseph Michael.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Nevermore> . <http://dbpedia.org/resource/Joseph_Michael> <http://dbpedia.org/property/birthName> ?v0 . <http://dbpedia.org/resource/Jim_Sheppard> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/bandMember> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandMemberOfNevermore ?associatedArtist ?personBand WHERE {
  # Find Jim Sheppard's associated musical artist
  OPTIONAL { 
    dbr:Jim_Sheppard dbo:musicalArtist ?associatedArtist .
  }
  
  # Check if he is a member of Nevermore
  OPTIONAL {
    ?bandMemberOfNevermore dbo:member ?person ;
                           rdfs:label ""Nevermore""@en .
    FILTER (?person = dbr:Jim_Sheppard)
  }

  # Find the birth name of Joseph Michael
  OPTIONAL {
    ?person dbo:birthName ?birthName .
    ?person rdfs:label ""Joseph Michael""@en .
  }
  
  # Determine the band of the person with that birth name
  OPTIONAL {
    ?personBand dbo:member ?personWithBirthName ;
                rdfs:label ?bandLabel .
    FILTER (?personWithBirthName = ?person)
  }

  # Bind results to variables for output
  BIND(?associatedArtist AS ?associatedArtistResult)
  BIND(?bandMemberOfNevermore AS ?bandMemberOfNevermoreResult)
  BIND(?personBand AS ?personBandResult)
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
161,45,test,"Give me the commander in the force, that is an event, of the figure known as El Director and military force of Rif War and military force of Spanish Civil War.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> ?v0 . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Rif_War> . ?v0 <http://xmlns.com/foaf/0.1/nick> ""El Director""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  # Francisco Franco as El Director
  dbr:Franco_Francisco ""El Director""@en.
  
  # Military force involved in both the Rif War and Spanish Civil War
  ?militaryForce dbo:participatedIn [
    a dbo:MilitaryConflict;
    rdf:first dbr:Rif_War ;
    rdf:rest* [ rdf:first dbr:Spanish_Civil_War ] .
  ];
  
  # Commander of the military force
  dbo:commander ?commander.
  
  # Ensure the commander is Francisco Franco
  FILTER (?commander = dbr:Franco_Francisco)
}
```",5,6,6,3,3,3,3,71,0,0,11,0,0.0,0
232,44,test,"Give me the child of Jon Pertwee and native of the residence, that is a settlement and British, of Sylvie Bermann and actor of the claim to fame, that is a film and a military conflict, of Sean Pertwee.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v4 <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . <http://dbpedia.org/resource/Sean_Pertwee> <http://dbpedia.org/ontology/knownFor> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Sylvie_Bermann> <http://dbpedia.org/property/residence> ?v2 . <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/ontology/child> ?result . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  # Jon Pertwee and his child
  dbr:Jon_Pertwee dbo:child ?child .

  # Sylvie Bermann's residence
  dbr:Sylvie_Bermann dbo:residence ?settlement .
  
  FILTER (dbo:type(?settlement, dbo:Settlement) && 
          dbo:nationality(dbo:country(?settlement), dbr:United_Kingdom)) .

  # Sean Pertwee's claim to fame
  dbr:Sean_Pertwee dbo:claimToFame ?film .
  
  FILTER (dbo:type(?film, dbo:Film) && 
          dbo:relatedToMilitaryConflict(?film, ?conflict)) .

  # The child must be native of the settlement and actor in the film
  ?child dbo:nativePlace ?settlement ;
         dbo:actorInFilm ?film .
}
```",5,9,6,2,3,3,3,71,0,0,1,0,0.0,0
617,37,test,"Give me the parent of Nysa (wife of Pharnaces I of Pontus) and spouse of the child of the successor, that is a royalty, of Antiochus (son of Antiochus III the Great).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Nysa_(wife_of_Pharnaces_I_of_Pontus)> . <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/successor> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?parentOfNysaSpouse WHERE {
  ?nysa a dbo:Person ;
        rdfs:label ""Nysa (wife of Pharnaces I of Pontus)""@en .
  
  ?pharnacesI a dbo:Person ;
              rdfs:label ""Pharnaces I of Pontus""@en .
  
  ?nysa dbo:spouse ?pharnacesI .

  ?parentOfNysa dbo:child ?nysa .

  ?antiochusIII a dbo:Person ;
                rdfs:label ""Antiochus III the Great""@en .

  ?antiochus a dbo:Person ;
             rdfs:label ""Antiochus (son of Antiochus III the Great)""@en .
  
  ?antiochus dbo:childOf ?antiochusIII .

  ?successor a dbo:Person ;
             dbo:successorOf ?antiochus .

  ?childOfSuccessor dbo:child ?successor ;
                    a dbo:RoyalFamilyMember .

  ?spouseOfChild dbo:spouse ?childOfSuccessor ;
                 a dbo:RoyalFamilyMember .

  ?parentOfNysaSpouse dbo:spouse ?spouseOfChild .
}
```",4,5,5,3,2,3,3,71,0,0,2,0,0.0,0
54,70,test,"Give me the predecessor of the child, that is an office holder and a royalty, of the reference to Thihapate of Mohnyin and child of the father of Soe Min Wimala Dewi and parent of the child of the parent of Thado Minsaw of Prome.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/ontology/child> ?result . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> . ?v1 <http://xmlns.com/foaf/0.1/name> ""Thihapate of Mohnyin""@en . ?v7 <http://dbpedia.org/ontology/parent> ?result . ?v7 <http://dbpedia.org/property/father> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Soe_Min_Wimala_Dewi> <http://dbpedia.org/property/father> ?v4 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?predecessor WHERE {
  # Thihapate of Mohnyin's child who is an office holder and royalty
  ?thihapateChild dbo:childOf ?thihapate .
  ?thihapate rdfs:label ""Thihapate of Mohnyin""@en .

  ?thihapateChild dbo:officeHolder true .
  ?thihapateChild dbo:royalty true .

  # Soe Min Wimala Dewi's father
  ?soeMinFather dbo:parentOf ?soeMinWimalaDewi .
  ?soeMinWimalaDewi rdfs:label ""Soe Min Wimala Dewi""@en .

  # Thado Minsaw of Prome's parent
  ?thadoParent dbo:parentOf ?thadoMinsaw .
  ?thadoMinsaw rdfs:label ""Thado Minsaw of Prome""@en .

  # Linking the father to Thihapate's child
  ?soeMinFather = ?thihapateChild .

  # Finding predecessor in a royal or office context
  ?predecessor dbo:successorOf ?thihapateChild .
}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
48,17,test,"Give me the band of the actor, that is a musical artist, of the show with Stacey Dash and band of Carl Falk.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/property/starring> ?v3 . ?v0 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Stacey_Dash> . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Carl_Falk> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?show ?actor ?actorBand WHERE {
  # Find shows with Stacey Dash as an actor
  ?show dbo:starring dbp:name ""Stacey Dash""@en .
  
  # Get all actors from those shows
  ?show dbo:actor ?actor .

  # Check if the actor is also a musical artist and get their band
  OPTIONAL {
    ?actor dbo:musicalArtist true ;
           dbo:band ?actorBand .
  }

  # Find Carl Falk's band
  ?carlFalk dbo:name ""Carl Falk""@en ;
            dbo:musicalArtist true ;
            dbo:band ?falkBand .

  FILTER(?actor != ?carlFalk) # Ensure we don't mix up the bands

} ORDER BY ?show ?actor
```",4,5,5,3,2,3,2,20,0,0,1,0,0.0,0
9,68,test,"Give me the alma mater of the mayor, that is a politician, of the entity, that is an organisation, in Belfast and figure known as the nickname of Queen's University Belfast and alma mater of the awardee of the reference, that is an award, to Royal Medals.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Belfast> . <http://dbpedia.org/resource/Queen's_University_Belfast> <http://dbpedia.org/property/nickname> ?v3 . ?v4 <http://dbpedia.org/ontology/almaMater> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v7 <http://dbpedia.org/ontology/almaMater> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?result <http://dbpedia.org/property/nickname> ?v3 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v5 <http://dbpedia.org/property/leader> ?v4 . ?v7 <http://dbpedia.org/property/awards> ?v0 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Royal Medals""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?almaMater ?nickname WHERE {
  # Find the current mayor of Belfast and their alma mater
  ?mayor a dbo:Mayor ;
         dbo:officeLocation dbr:Belfast ;
         dbo:almaMater ?almaMater .

  # Get the nickname for Queen's University Belfast
  dbr:""Queen's University Belfast"" dbo:nickname ?nickname .

  # Find awardees of Royal Medals and their alma maters
  ?awardee dbo:awardReceived dbr:Royal_Medals ;
          dbo:almaMater ?almaMater .
  
  FILTER (?almaMater = ?mayorAlmaMater && ?almaMater = ?awardeeAlmaMater)
}
```",8,11,9,3,3,3,3,71,0,0,1,0,0.0,0
48,16,test,"Give me the band of the actor, that is a musical artist, of Honor Up and band of the writer of Emotion (Carly Rae Jepsen album).",SELECT ?result WHERE { <http://dbpedia.org/resource/Honor_Up> <http://dbpedia.org/property/starring> ?v3 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Emotion_(Carly_Rae_Jepsen_album)> <http://dbpedia.org/property/writer> ?v2 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?band1 ?band2 WHERE {
  # Part 1: Find the band of an actor who is a musical artist in ""Honor Up""
  ?actor dbo:role ?role .
  ?role dbo:title dbr:Honor_Up .
  ?actor dbo:musicalArtist ?musicalArtist .
  ?musicalArtist dbo:band ?band1 .

  # Part 2: Find the band of the writer(s) of ""Emotion"" by Carly Rae Jepsen
  ?song dbo:lyricist ?writer .
  ?song rdfs:label ""Emotion""@en .
  ?song dbo:album dbr:Emotion_(Carly_Rae_Jepsen_album) .
  ?writer dbo:band ?band2 .

}
```",4,5,5,2,2,3,2,20,0,0,1,0,0.0,0
801,48,test,"Give me the professional in the alter ego of the true self of The Shadow and associated musical artist of the writer, that is a musical artist and an artist, of 40 Dayz & 40 Nightz.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/alterEgo> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/occupation> ?v2 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://xmlns.com/foaf/0.1/givenName> ""The Shadow""@en . <http://dbpedia.org/resource/40_Dayz_&_40_Nightz> <http://dbpedia.org/property/writer> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artist WHERE {
  ?album dbo:performer dbr:Rick_Ross .
  ?album rdfs:label ""40 Dayz & 40 Nightz""@en .
  
  OPTIONAL { 
    ?person dbo:profession dbr:Musical_artist .
    ?person dbo:profession dbr:Artist .
    ?person foaf:name ""Rick Ross"" .
  }
}
```",5,7,6,3,2,3,3,71,0,0,22,0,0.0,0
488,57,test,"Give me the birth place of Enomoto Takeaki and death place of the father, that is a politician, of the father, that is an office holder, of Matsudaira Tadamasa and administration of the father of Emperor Go-Mizunoo.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?v5 . ?result <http://dbpedia.org/property/leader> ?v3 . <http://dbpedia.org/resource/Enomoto_Takeaki> <http://dbpedia.org/ontology/birthPlace> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Emperor_Go-Mizunoo> <http://dbpedia.org/property/father> ?v3 . <http://dbpedia.org/resource/Matsudaira_Tadamasa> <http://dbpedia.org/property/father> ?v0 . ?v5 <http://dbpedia.org/ontology/deathPlace> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?birthPlace ?deathPlace ?administration WHERE {
  # Birth place of Enomoto Takeaki
  dbr:Enomoto_Takeaki dbo:birthPlace ?birthPlace .

  # Death place of Matsudaira Tadamasa's father
  dbr:Matsudaira_Tadamasa dbo:father ?matsudairaFather .
  ?matsudairaFather a dbo:Politician ;
                   dbo:officeHolderOf ?office .
  ?matsudairaFather dbo:deathPlace ?deathPlace .

  # Administration of Emperor Go-Mizunoo's father
  dbr:Emperor_Go-Mizunoo dbo:father ?goMizunooFather .
  ?goMizunooFather dbo:administers ?administration .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
427,50,test,"Give me the party of the father of the alumnus of Massachusetts Institute of Technology and party of the person born, that is an office holder and a politician, as Romano Antonio Prodi.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/birthName> ""Romano Antonio Prodi""@en . ?v0 <http://dbpedia.org/property/father> ?v4 . ?v3 <http://dbpedia.org/ontology/party> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://dbpedia.org/ontology/party> ?result . ?v0 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Massachusetts_Institute_of_Technology> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?fatherParty ?prodiParty WHERE {
  # Part 1: Party of the father of an MIT alumnus
  ?alumnus dbo:almaMater dbr:Massachusetts_Institute_of_Technology .
  ?alumnus dbo:parent ?father .
  ?father dbp:party ?fatherParty .

  # Part 2: Party of Romano Prodi
  dbr:Romano_Prodi a dbo:Politician ;
                   dbp:officeHolder ""true""^^xsd:boolean ;
                   dbp:party ?prodiParty .
}
```",5,7,6,3,2,3,3,71,0,0,3,0,0.0,0
492,67,test,"Give me the person decedent at French Algeria and person decedent at the capital, that is a settlement, of the country of Khemis Miliana District and commander in the war, that is a military conflict and an event, of the commander in Battle of Verdun.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/French_Algeria> . ?v0 <http://dbpedia.org/ontology/battle> ?v6 . ?v6 <http://dbpedia.org/ontology/commander> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/deathPlace> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Khemis_Miliana_District> <http://dbpedia.org/ontology/country> ?v1 . ?v1 <http://dbpedia.org/ontology/capital> ?v3 . <http://dbpedia.org/resource/Battle_of_Verdun> <http://dbpedia.org/ontology/commander> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person WHERE {
  ?person dbo:deceasedAt dbr:French_Algeria .
  
  ?capital dbo:country dbr:Khemis_Miliana_District ;
           rdf:type dbo:Settlement .
  
  ?person dbo:deceasedAt ?capital .

  ?war dbo:commander ?person ;
       rdf:type dbo:MilitaryConflict, dbo:Event ;
       dbo:partOf dbr:Battle_of_Verdun .
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
701,60,test,"Give me the spouse of the father of the commander, that is a royalty, in Battle of Perire and parent of the child of the spouse of Amun-her-khepeshef.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v1 . <http://dbpedia.org/resource/Battle_of_Perire> <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://dbpedia.org/property/father> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://dbpedia.org/ontology/child> ?v2 . <http://dbpedia.org/resource/Amun-her-khepeshef> <http://dbpedia.org/ontology/spouse> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
  # Step 1: Identify the commander involved in the Battle of Perire
  ?commander dbo:battle [dbo:name ""Battle of Perire""] .
  
  # Step 2: Find the father of this commander
  ?father dbo:child ?commander .

  # Step 3: Determine the spouse of this father
  ?spouse dbo:spouse ?father .

  # Step 4: Check if this spouse is a royalty
  ?spouse rdf:type dbo:Monarch .
  
  # Step 5: Identify Amun-her-khepeshef and their spouse
  ?amunHerKhepeshef dbp:name ""Amun-her-khepeshef"" .
  ?amunSpouse dbo:spouse ?amunHerKhepeshef .

  # Step 6: Find the child of this spouse
  ?child dbo:parent ?amunSpouse .

  # Step 7: Determine the parent of this child (should match with ?spouse)
  ?parent dbo:child ?child .
  
  FILTER (?spouse = ?parent)
}
```",6,7,7,3,2,3,3,71,0,0,1,0,0.0,0
747,28,test,Give me the band of Shèna and person born on the birth date of Pavlo Khudzik and band of Amba Shepherd.,SELECT ?result WHERE { <http://dbpedia.org/resource/Shèna> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Amba_Shepherd> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Pavlo_Khudzik> <http://dbpedia.org/ontology/birthDate> ?v1 . ?result <http://dbpedia.org/ontology/birthDate> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandShena ?personSameBirthday ?bandAmbaShepherd WHERE {
  # Find Shèna's band
  OPTIONAL { 
    dbr:Shèna dbo:band ?bandShena .
  }
  
  # Get Pavlo Khudzik's birth date
  BIND (EXISTS { dbr:Pavlo_Khudzik dbo:birthday ?birthDate } AS ?hasBirthDate)
  FILTER (?hasBirthDate = true)

  OPTIONAL {
    # Find other persons with the same birthday as Pavlo Khudzik
    ?personSameBirthday dbo:birthday ?sameBirthDate .
    FILTER(?sameBirthDate = ?birthDate)
  }
  
  # Find Amba Shepherd's band
  OPTIONAL { 
    dbr:Amba_Shepherd dbo:band ?bandAmbaShepherd .
  }
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
659,50,test,"Give me the commander in the war, that is an event and a military conflict, of the figure known, that is a military unit and an organisation, as 'Polish Horse' and military force of the force, that is a societal event and an event and a military conflict, of Rutger Jan Schimmelpenninck.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/property/nickname> ""'Polish Horse'""@en . ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://dbpedia.org/ontology/battle> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v4 <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?commander WHERE {
  # Find the military unit ""Polish Horse""
  ?polishHorse dbo:type dbr:Military_Unit ;
               rdfs:label ""Polish Horse""@en .

  # Identify events (military conflicts) associated with Rutger Jan Schimmelpenninck
  ?event dbo:participatedIn ?schimmelpenninckEvent .
  ?schimmelpenninckEvent dbo:agent dbr:Rutger_Jan_Schimmelpenninck ;
                         rdf:type dbo:Military_Conflict .

  # Find the commander of these events
  ?event dbo:commander ?commander .

  # Ensure the Polish Horse was involved in the event
  ?polishHorse dbo:participatedIn ?event .
}
```",5,12,6,3,2,3,3,71,0,0,31,0,0.0,0
182,27,test,Give me the war of Mahesh Senanayake and war of the work of Gotabhaya Rajapaksa and entity in the nationality of Tamara Kunanayakam.,SELECT ?result WHERE { <http://dbpedia.org/resource/Tamara_Kunanayakam> <http://dbpedia.org/ontology/nationality> ?v0 . ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v3 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Gotabhaya_Rajapaksa> . ?result <http://dbpedia.org/ontology/place> ?v0 . <http://dbpedia.org/resource/Mahesh_Senanayake> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war1 ?war2 ?nationality 
WHERE {
  # Mahesh Senanayake's war
  dbr:Mahesh_Senanayake dbo:militaryConflict ?war1 .
  
  # Gotabhaya Rajapaksa's war
  dbr:Gotabhaya_Rajapaksa dbo:militaryConflict ?war2 .

  # Tamara Kunanayakam's nationality
  dbr:Tamara_Kunanayakam dbo:nationality dbr:Sri_Lanka .
  
  FILTER (?war1 = ?war2) # Ensuring both are the same war, likely the Sri Lankan Civil War
}
```",5,5,6,2,3,2,3,28,0,0,1,0,0.0,0
701,64,test,"Give me the parent of Henuttawy (19th dynasty) and parent of the child of the spouse of Amun-her-khepeshef and spouse of the father of the commander, that is a royalty, in Battle of Perire.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> ?v1 . ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Henuttawy_(19th_dynasty)> . <http://dbpedia.org/resource/Battle_of_Perire> <http://dbpedia.org/ontology/commander> ?v0 . <http://dbpedia.org/resource/Amun-her-khepeshef> <http://dbpedia.org/ontology/spouse> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parentOfHenuttawy ?royaltyParent 
WHERE {
  # Parent of Henuttawy (19th dynasty)
  ?henuttawy a dbo:Person ;
             rdfs:label ""Henuttawy""@en .
  ?henuttawy dbo:spouse ?spouseHenuttawy .
  ?spouseHenuttawy dbo:parent ?parentOfHenuttawy .

  # Child of the spouse of Amun-her-khepeshef
  ?amunHerKhepeshef a dbo:Person ;
                    rdfs:label ""Amun-her-khepeshef""@en .
  ?amunHerKhepeshef dbo:spouse ?spouseAmunHerKhepeshef .
  ?spouseAmunHerKhepeshef dbo:child ?childOfSpouse .

  # Spouse of the father of the commander in Battle of Perire
  ?battlePerire a dbo:Battle ;
                rdfs:label ""Battle of Perire""@en .
  ?battlePerire dbo:commander ?commander .
  ?commander dbo:father ?fatherOfCommander .
  ?fatherOfCommander dbo:spouse ?spouseFather .

  # Ensure the final entity is royalty
  FILTER EXISTS { ?spouseFather a dbo:RoyalPerson }

  # Find the parent of the child of the spouse of Amun-her-khepeshef and spouse of the father of the commander
  ?childOfSpouse dbo:parent ?royaltyParent .
  
  # Ensure the royalty condition is met for the final entity
  FILTER EXISTS { ?royaltyParent a dbo:RoyalPerson }
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
232,53,test,"Give me the native of the residence, that is a settlement and British, of Sylvie Bermann and actor of Dog Soldiers (film) and child of the person born as the birth name of Jon Pertwee.",SELECT ?result WHERE { <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Sylvie_Bermann> <http://dbpedia.org/property/residence> ?v1 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v2 <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Dog_Soldiers_(film)> <http://dbpedia.org/ontology/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?nativePlace
WHERE {
    # Sylvie Bermann's residence that is a British settlement
    dbr:Sylvie_Bermann dbo:residence ?residence .
    ?residence dbo:country dbr:United_Kingdom ;
               a dbo:Settlement .

    # Actor of Dog Soldiers and their native place
    dbr:Dog_Soldiers (dbo:actor) ?actor .
    ?actor dbo:nativePlace ?nativePlace .

    # Jon Pertwee's child with the same birth name as the actor
    dbr:Jon_Pertwee dbo:child ?child .
    ?child dbp:birthName ?birthName .
    ?actor rdfs:label ?actorLabel .
    FILTER (CONTAINS(LCASE(?actorLabel), ""actor"") && LCASE(?birthName) = LCASE(?actorLabel))

    # Ensure the native place matches the British settlement
    FILTER (?nativePlace = ?residence)
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
197,8,test,Give me the birthplace of the awardee of Leroy P. Steele Prize and birthplace of Dumitru Nadu.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> ""Leroy P. Steele Prize""@en . <http://dbpedia.org/resource/Dumitru_Nadu> <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlaceLabel (GROUP_CONCAT(?recipientLabel; separator="", "") AS ?recipients)
WHERE {
  # Part 1: Birthplace of Leroy P. Steele Prize awardees
  {
    SELECT DISTINCT ?recipientLabel ?birthPlaceLabel WHERE {
      ?recipient dbo:award dbr:Leroy_P._Steele_Prize .
      ?recipient rdfs:label ?recipientLabel .
      FILTER (LANG(?recipientLabel) = ""en"")
      OPTIONAL { ?recipient dbo:birthPlace ?birthPlace . }
      OPTIONAL { ?birthPlace rdfs:label ?birthPlaceLabel . }
      FILTER (LANG(?birthPlaceLabel) = ""en"")
    } GROUP BY ?birthPlaceLabel
  }

  UNION

  # Part 2: Birthplace of Dumitru Nadu
  {
    dbr:Dumitru_Nadu dbo:birthPlace ?birthPlace .
    ?birthPlace rdfs:label ?birthPlaceLabel .
    FILTER (LANG(?birthPlaceLabel) = ""en"")
  }
}
```",3,3,4,2,2,2,2,9,0,0,1,0,0.0,0
747,45,test,Give me the person born on 1985-04-29 and band of Amba Shepherd and band of the person born as the persona of Shèna.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Amba_Shepherd> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Shèna> <http://xmlns.com/foaf/0.1/givenName> ?v0 . ?result <http://dbpedia.org/ontology/birthDate> ""1985-04-29""^^<http://www.w3.org/2001/XMLSchema#date> . ?v1 <http://dbpedia.org/property/birthName> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?ambaShepherdBand ?shenaPersonaBand ?personBornOn1985_04_29
WHERE {
  # Find Amba Shepherd and her band
  OPTIONAL {
    dbr:Amba_Shepherd dbo:band ?ambaShepherdBand .
  }

  # Find the persona of Shèna (Shèna is a stage name, so we look for related entities)
  OPTIONAL {
    ?shenaPersona foaf:name ""Shèna""@en ;
                  dbo:band ?shenaPersonaBand .
  }

  # Find person born on 1985-04-29
  ?person dbo:birthday ?birthDate .
  FILTER (YEAR(?birthDate) = 1985 && MONTH(?birthDate) = 4 && DAY(?birthDate) = 29)
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
963,17,test,"Give me the entity in Serbia and administration of the ruling party, that is a political party, in the location for 21205.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/leaderParty> ?v3 . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Serbia> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v0 <http://dbpedia.org/ontology/postalCode> ""21205"" . ?v0 <http://dbpedia.org/property/leaderParty> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?party WHERE {
  ?party rdf:type dbo:PoliticalParty .
  ?party dbo:country dbr:Serbia .
  ?party dbp:location ""21205""^^xsd:string .
}
```",4,5,5,3,2,3,2,20,0,0,84,0,0.0,0
391,47,test,"Give me the native of the figure known as Hub City and actor of the claim to fame, that is a work, of the spouse of Sherry Hormann.","SELECT ?result WHERE { <http://dbpedia.org/resource/Sherry_Hormann> <http://dbpedia.org/ontology/spouse> ?v0 . ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v4 <http://dbpedia.org/ontology/starring> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/property/nickname> ""Hub City""@en . ?v0 <http://dbpedia.org/ontology/knownFor> ?v4 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?nativeOf ?figureName WHERE {
  # Step 1: Find Sherry Hormann's spouse
  ?sherry a dbo:Person ;
          foaf:name ""Sherry Hormann""@en .
  ?spouse dbo:spouse ?sherry .

  # Step 2: Identify the claim to fame (a work) of that spouse
  ?spouse dbo:work ?claimToFame .

  # Step 3: Determine which city is known as ""Hub City""
  dbr:Columbus,_Ohio dbo:commonName ""Hub City""@en .

  # Step 4: Find a figure native to Columbus, Ohio who acted in the identified work
  ?figure dbo:nativePlace dbr:Columbus,_Ohio ;
          dbo:actedIn ?claimToFame .
  
  BIND(dbr:Columbus,_Ohio AS ?nativeOf)
  BIND(?figure foaf:name AS ?figureName)
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
392,22,test,"Give me the entity in the region, that is a country, of Central European Time and region of the time zone, that is a sports event, of Aguilar de Segarra.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/timeZone> ?v3 . ?result <http://dbpedia.org/ontology/country> ?v2 . ?v2 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . <http://dbpedia.org/resource/Aguilar_de_Segarra> <http://dbpedia.org/ontology/timeZone> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsEvent>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?country WHERE {
  ?country a dbo:Country .
  ?region dbo:country ?country .
  ?region dbp:timeZone ""Central European Time"" .
  ?event dbo:sportingEventLocation ?location .
  ?location rdfs:label ?placeLabel .
  FILTER (CONTAINS(LCASE(?placeLabel), LCASE(""Aguilar de Segarra"")))
}
```",4,6,5,2,2,2,3,28,0,0,28787,0,0.0,0
9,35,test,"Give me the alma mater of the mayor, that is a politician, of Northern Ireland Forum and figure known as the nickname of Queen's University Belfast.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/almaMater> ?result . <http://dbpedia.org/resource/Queen's_University_Belfast> <http://dbpedia.org/property/nickname> ?v1 . ?result <http://dbpedia.org/property/nickname> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Northern_Ireland_Forum> <http://dbpedia.org/property/leader> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?almaMater WHERE {
  ?person dbo:occupation dbr:Politician ;
          dbo:officeHolder dbr:Northern_Ireland_Forum_Mayor .
  
  ?person dbo:almaMater ?university .
  
  OPTIONAL { 
    ?university rdfs:label ?label .
    FILTER (CONTAINS(LCASE(?label), ""queen's university belfast""))
  }
  
  ?university rdfs:label ?almaMaterLabel .
  FILTER (LANG(?almaMaterLabel) = 'en')
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
488,62,test,"Give me the birth place of the commander in the war, that is a military conflict and an event and a societal event, of Saitō Hajime and administration of Emperor Go-Yōzei and death place of the father, that is a politician, of the father, that is an office holder, of Matsudaira Tadamasa.",SELECT ?result WHERE { <http://dbpedia.org/resource/Saitō_Hajime> <http://dbpedia.org/ontology/battle> ?v4 . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Emperor_Go-Yōzei> . <http://dbpedia.org/resource/Matsudaira_Tadamasa> <http://dbpedia.org/property/father> ?v0 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/father> ?v6 . ?v4 <http://dbpedia.org/ontology/commander> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v6 <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?birthPlace ?administrationPeriod ?deathPlace
WHERE {
  # Saitō Hajime's birthplace related to a military conflict
  dbr:Saitō_Hajime dbo:birthPlace ?birthPlace .
  
  OPTIONAL {
    ?militaryConflict dbo:participatedIn ?saitoHajimeEvent .
    ?saitoHajimeEvent rdf:type dbo:MilitaryConflict ;
                      rdfs:label ?conflictLabel .
    FILTER CONTAINS(LCASE(?conflictLabel), ""war"")
  }
  
  # Emperor Go-Yōzei's administration period
  dbr:Emperor_Go-Yōzei dbo:administrationPeriod ?administrationPeriod .

  # Matsudaira Tadamasa's father's death place
  dbr:Matsudaira_Tadamasa dbo:father ?father .
  ?father rdf:type dbo:Politician ;
          dbo:officeHolder true ;
          dbo:deathPlace ?deathPlace .
}
```",7,12,8,3,3,3,3,71,0,0,1,0,0.0,0
184,50,test,"Give me the parent of the child of Archduke Joseph Francis of Austria and child of the child of the parent, that is a royalty, of Archduke Ladislaus Philipp of Austria.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Francis_of_Austria> . <http://dbpedia.org/resource/Archduke_Ladislaus_Philipp_of_Austria> <http://dbpedia.org/ontology/parent> ?v0 . ?result <http://dbpedia.org/ontology/child> ?v3 . ?v4 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?result WHERE {
  # Step 1: Find a child of Archduke Joseph Francis of Austria
  ?child1 dbo:parent dbr:Archduke_Joseph_Francis_of_Austria .
  
  # Step 2: Find the parent of that child (grandchild of Archduke Joseph Francis)
  ?result dbo:parent ?child1 .

  # Step 3: Find a parent of Archduke Ladislaus Philipp of Austria
  ?parentLadislaus dbo:child dbr:Archduke_Ladislaus_Philipp_of_Austria .
  
  # Step 4: Find a child of that parent (sibling or another child)
  ?child2 dbo:parent ?parentLadislaus .

  # Step 5: Find the child of that child who is royalty
  ?royaltyChild dbo:parent ?child2 .
  FILTER EXISTS { ?royaltyChild dbp:title ?title . FILTER regex(?title, ""King|Queen|Prince|Princess|Archduke|Archduchess"", ""i"") }
  
  # Ensure the result matches the royalty child found
  FILTER (?result = ?royaltyChild)
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
161,49,test,"Give me the military force of the force, that is a societal event and an event and a military conflict, of Francisco Franco and commander in the force, that is an event, of the figure known as El Director.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://xmlns.com/foaf/0.1/nick> ""El Director""@en . ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Franco> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce ?commanderRole
WHERE {
  # Identify Francisco Franco (El Director)
  VALUES ?franco { dbr:Franco_Francisco }

  # Find military forces associated with him that are societal events, general events, and military conflicts
  ?militaryForce dbo:commander ?franco .
  ?militaryForce a ?class1 .
  ?militaryForce a ?class2 .
  ?militaryForce a ?class3 .

  FILTER (?class1 = dbo:SocietalEvent || ?class1 = dbo:Event)
  FILTER (?class2 = dbo:MilitaryConflict || ?class2 = dbo:Event)
  FILTER (?class3 = dbo:MilitaryConflict || ?class3 = dbo:SocietalEvent)

  # Determine his role as a commander in these forces
  ?militaryForce dbo:commander ?franco .
  ?militaryForce dbo:commanderRole ?commanderRole .

}
```",5,9,6,3,2,3,3,71,0,0,34,0,0.0,0
547,70,test,Give me the resting place of the awardee of the award of Gerald Graham and resting place of the actor of the show with Emily Richard and resting place of the child of James Burton (property developer).,SELECT ?result WHERE { <http://dbpedia.org/resource/James_Burton_(property_developer)> <http://dbpedia.org/ontology/child> ?v4 . ?v0 <http://dbpedia.org/property/starring> ?v7 . ?v3 <http://dbpedia.org/property/awards> ?v1 . ?v3 <http://dbpedia.org/ontology/restingPlace> ?result . ?v4 <http://dbpedia.org/ontology/restingPlace> ?result . ?v0 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emily_Richard> . ?v7 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Gerald_Graham> <http://dbpedia.org/property/awards> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?restingPlace WHERE {
  # Resting place of the awardee of the award of Gerald Graham
  {
    ?award dbo:recipient ?awardee .
    ?award dbo:name ""Gerald Graham"" .
    OPTIONAL { ?awardee dbo:deathPlace ?restingPlace . }
  }

  UNION

  # Resting place of the actor of the show with Emily Richard
  {
    ?show dbo:starring ?actor ;
          dbp:castMember dbr:Emily_Richard .
    OPTIONAL { ?actor dbo:deathPlace ?restingPlace . }
  }

  UNION

  # Resting place of the child of James Burton (property developer)
  {
    ?james a dbo:PropertyDeveloper ;
           foaf:name ""James Burton"" .
    ?child dbo:parent ?james .
    OPTIONAL { ?child dbo:deathPlace ?restingPlace . }
  }
}
```",8,8,9,3,3,3,3,71,0,0,1,0,0.0,0
488,53,test,"Give me the birth place of the commander in the war, that is a military conflict and an event and a societal event, of Saitō Hajime and administration of the father of Emperor Go-Mizunoo and death place of Tokugawa Ieyasu.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Tokugawa_Ieyasu> <http://dbpedia.org/ontology/deathPlace> ?result . ?v3 <http://dbpedia.org/ontology/commander> ?v2 . <http://dbpedia.org/resource/Saitō_Hajime> <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/property/leader> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Emperor_Go-Mizunoo> <http://dbpedia.org/property/father> ?v1 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?saitoBirthplace ?war ?toyotomiAdminLocation ?ieyasuDeathPlace
WHERE {
  # Saitō Hajime's birth place
  dbr:Saitō_Hajime dbo:birthPlace ?saitoBirthplace .

  # War involving Saitō Hajime (Boshin War)
  ?war a dbo:MilitaryConflict ;
      dbo:participatedIn ?hajime .
  FILTER(CONTAINS(LCASE(STR(?war)), ""boshin war""))

  # Toyotomi Hideyori's administration location
  dbr:Toyotomi_Hideyori dbo:administrativePost ?toyotomiAdminLocation .

  # Tokugawa Ieyasu's death place
  dbr:Tokugawa_Ieyasu dbo:deathPlace ?ieyasuDeathPlace .
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
754,17,test,Give me the parent of the child of the reference to Ram Khamhaeng the Great and parent of Loe Thai.,"SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""Ram Khamhaeng the Great""@en . ?v0 <http://dbpedia.org/ontology/child> ?v3 . <http://dbpedia.org/resource/Loe_Thai> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/child> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?commonAncestor WHERE {
  # Find Ram Khamhaeng the Great's child
  ?ramKhamhaeng a dbo:Person ;
                dbo:child ?childOfRam .

  # Find Loe Thai's parent
  ?loeThai a dbo:Person ;
          dbo:parent ?parentOfLoe .

  # Find the parent of Ram Khamhaeng the Great's child
  ?childOfRam dbo:parent ?parentOfChildOfRam .

  # Find the parent of Loe Thai's parent
  ?parentOfLoe dbo:parent ?commonAncestor .

  FILTER (?parentOfChildOfRam = ?commonAncestor)
}
```",4,4,5,3,2,3,2,20,1,7344,0,0.00013614703880190606,1.0,0.0002722570106180234
55,20,test,"Give me the band of Newsted and band member of the band member, that is a band and a group, of San Francisco Symphony and band member of Guns N' Roses.",SELECT ?result WHERE { <http://dbpedia.org/resource/Newsted> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/San_Francisco_Symphony> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Guns_N'_Roses> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?band WHERE {
  # Find members of Metallica (Newsted is a member)
  ?metallicaMember dbo:memberOf dbr:Metallica .
  
  # Find bands where the member is also in other groups
  ?otherBand dbo:member ?person .
  FILTER (?person != ?metallicaMember) .

  # Check if this person is part of San Francisco Symphony and Guns N' Roses
  ?person dbo:memberOf dbr:San_Francisco_Symphony ;
          dbo:memberOf dbr:Guns_N'_Roses .

  # Ensure the band found is also a group
  ?otherBand rdf:type dbo:MusicalGroup .
}
```",4,6,5,2,3,2,3,28,0,0,1,0,0.0,0
184,56,test,Give me the parent of the child of the parent of Archduchess Margaret of Austria (born 1925) and parent of the native of Budapest and child of Archduke Joseph August of Austria.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Margaret_of_Austria_(born_1925)> . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_August_of_Austria> . ?result <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Budapest> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commonParent WHERE {
  # Part 1: Archduchess Margaret of Austria (born 1925)
  ?margaret a dbo:Person ;
            dbo:birthDate ?dateMargaret .
  FILTER(YEAR(?dateMargaret) = 1925 && STRSTARTS(STR(?margaret), ""Archduchess_Margaret_of_Austria""))
  
  # Find her parent
  ?parent1 dbo:child ?margaret .

  # Find the child of that parent (grandchild of Margaret)
  ?grandchild dbo:parent ?parent1 .
  
  # Find the parent of this grandchild
  ?commonParent1 dbo:child ?grandchild .

  # Part 2: Native of Budapest and child of Archduke Joseph August of Austria
  ?josephAugust a dbo:Person ;
                dbo:child ?budaChild .
  FILTER(STRSTARTS(STR(?josephAugust), ""Archduke_Joseph_August_of_Austria""))

  # Find the native of Budapest
  ?budaChild dbo:birthPlace dbr:Budapest .

  # Find the parent of this individual
  ?commonParent2 dbo:child ?budaChild .

  # Find common parent between both parts
  FILTER(?commonParent1 = ?commonParent2)
  BIND(?commonParent1 AS ?commonParent)
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
427,69,test,"Give me the reference to the name of the party of Michele Pinto and party of the father of Lamberto Andreotti and party of the person born, that is an office holder and a politician, as the birth name of Romano Prodi.",SELECT ?result WHERE { ?v4 <http://xmlns.com/foaf/0.1/name> ?v3 . <http://dbpedia.org/resource/Michele_Pinto> <http://dbpedia.org/ontology/party> ?v4 . ?v7 <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Lamberto_Andreotti> <http://dbpedia.org/property/father> ?v7 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/property/birthName> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . ?v2 <http://dbpedia.org/ontology/party> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?micheleParty ?lambertoFatherParty ?romanoBirthName
WHERE {
  # Michele Pinto's party
  ?michele dbo:birthName ""Michele Pinto""@en .
  ?michele dbp:party ?micheleParty .

  # Lamberto Andreotti's father and his party
  ?lamberto dbo:birthName ""Lamberto Andreotti""@en .
  ?father dbo:parentOf ?lamberto ;
          dbp:party ?lambertoFatherParty .

  # Romano Prodi's birth name, ensuring he is an office holder and a politician
  ?romano dbo:birthName ?romanoBirthName ;
          dbo:officeHolder ?office ;
          dbo:politician ?politician .
}
```",8,10,9,3,3,3,3,71,0,0,2,0,0.0,0
617,41,test,"Give me the spouse of the child of Antiochus III the Great and parent of Nysa (wife of Pharnaces I of Pontus) and child of the child, that is a royalty, of Seleucus II Callinicus.",SELECT ?result WHERE { <http://dbpedia.org/resource/Antiochus_III_the_Great> <http://dbpedia.org/ontology/child> ?v4 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Nysa_(wife_of_Pharnaces_I_of_Pontus)> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seleucus_II_Callinicus> . ?result <http://dbpedia.org/property/father> ?v2 . ?v4 <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
  ?antiochus3 a dbo:Person ;
              dbp:name ""Antiochus III the Great""@en .
  
  ?child1 dbo:childOf ?antiochus3 ;
          dbo:parent ?nysaParent .

  ?nysaParent dbo:spouse ?pharnacesI ;
              dbp:name ""Pharnaces I of Pontus""@en .
  
  ?nysa a dbo:Person ;
        dbp:spouse ?pharnacesI ;
        dbp:name ""Nysa (wife of Pharnaces I of Pontus)""@en .

  ?nysaParent dbo:childOf ?seleucus2 ;
              a dbo:RoyalFamilyMember .
  
  ?seleucus2 a dbo:Person ;
             dbp:name ""Seleucus II Callinicus""@en .

  ?nysaParent dbo:spouse ?spouse .
}
```",5,6,6,2,3,3,3,71,0,0,2,0,0.0,0
232,42,test,"Give me the native of the residence, that is a settlement and British, of Sylvie Bermann and child of the person born as John Devon Roland Pertwee and actor of Dog Soldiers (film).","SELECT ?result WHERE { <http://dbpedia.org/resource/Sylvie_Bermann> <http://dbpedia.org/property/residence> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Dog_Soldiers_(film)> <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v2 <http://dbpedia.org/property/birthName> ""John Devon Roland Pertwee""@en . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?native WHERE {
  # Find Sylvie Bermann's residence that is a settlement in the UK
  dbr:Sylvie_Bermann dbo:residence ?settlement .
  ?settlement a dbo:Settlement ;
              dbo:country dbr:United_Kingdom .

  # Identify John Pertwee and his children
  dbr:John_Pertwee dbp:birthDate ""1919-02-07""^^xsd:date ;
                   dbo:child ?child .
  
  # Find the child who acted in Dog Soldiers
  ?actor dbo:film dbr:Dog_Soldiers ;
         a dbo:Actor ;
         owl:sameAs ?child .

  # Get the native place of this actor
  ?actor dbp:nativePlace ?native .
}
```",5,7,6,2,3,3,3,71,0,0,1,0,0.0,0
915,19,test,"Give me the father of the child, that is a fictional character and a soap character, of the parent, that is a fictional character and a soap character, of Lizzie Spaulding and resident of the birthplace, that is a settlement, of Stephen Verona.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/residence> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v4 <http://dbpedia.org/property/father> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoapCharacter>. ?v4 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Lizzie_Spaulding> <http://dbpedia.org/ontology/parent> ?v0 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. <http://dbpedia.org/resource/Stephen_Verona> <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoapCharacter>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  # Step 1: Find Lizzie Spaulding's child who is a fictional character and soap character
  ?child dbo:parent dbr:Lizzie_Spaulding ;
         dbo:characterType dbr:Fictional_Character ;
         dbo:genre dbr:Soap_Opera .

  # Step 2: Find the parent of that child, also a fictional character and soap character
  ?parent dbo:child ?child ;
          dbo:characterType dbr:Fictional_Character ;
          dbo:genre dbr:Soap_Opera .

  # Step 3: Determine Stephen Verona's birthplace
  dbr:Stephen_Verona dbo:birthPlace ?settlement .

  # Step 4: Find a resident of that settlement
  ?resident dbo:residence ?settlement .

  # Step 5: Identify the father of the child from step 2
  ?parent dbo:father ?father .
}
```",5,10,6,3,2,3,2,20,0,0,1,0,0.0,0
427,41,test,Give me the party of the father of Lamberto Andreotti and reference to the name of Italian People's Party (1994) and party of Romano Prodi.,SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/party> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . <http://dbpedia.org/resource/Lamberto_Andreotti> <http://dbpedia.org/property/father> ?v4 . <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Italian_People's_Party_(1994)> <http://xmlns.com/foaf/0.1/name> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?fatherName ?fatherPartyLabel ?ipep1994Label ?prodiPartyLabel
WHERE {
  # Lamberto Andreotti's father
  dbpedia:Lamberto_Andreotti dbo:father ?father .
  ?father rdfs:label ?fatherName .

  # Party of Giuseppe Andreotti (Lamberto's father)
  OPTIONAL { ?father dbo:partyAffiliation ?fatherParty . }
  OPTIONAL { ?fatherParty rdfs:label ?fatherPartyLabel . }

  # Italian People's Party (1994)
  dbpedia:Italian_People%27s_Party_(1994) rdfs:label ?ipep1994Label .

  # Romano Prodi's party
  dbpedia:Romano_Prodi dbo:partyAffiliation ?prodiParty .
  ?prodiParty rdfs:label ?prodiPartyLabel .
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
161,41,test,"Give me the military force of the force, that is a societal event and a military conflict, of Francisco Largo Caballero and military force of the force, that is a societal event and an event and a military conflict, of Francisco Franco and commander in Biscay Campaign.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Biscay_Campaign> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v4 . ?v4 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Franco> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?forceLargoCaballero ?forceFranco
WHERE {
  # Military force of Francisco Largo Caballero
  dbr:Francisco_Largo_Caballero dbo:militaryConflict ?forceLargoCaballero .
  ?forceLargoCaballero a dbo:MilitaryConflict ;
                      dbo:societalEvent ?societalEvent .

  # Military force of Francisco Franco with additional condition
  dbr:Francisco_Franco dbo:militaryConflict ?forceFranco .
  ?forceFranco a dbo:MilitaryConflict ;
              dbo:societalEvent ?societalEvent2 .
  
  # Ensure Francisco Franco was commander in the Biscay Campaign
  dbr:Biscay_Campaign dbo:commander dbr:Francisco_Franco .

}
```",5,10,6,2,3,3,3,71,0,0,3,0,0.0,0
404,47,test,"Give me the spouse of the person born, that is a royalty, as Princess Victoria Louise of Prussia and parent of the child, that is a royalty, of the parent, that is a royalty, of Prince George William of Hanover.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v2 <http://dbpedia.org/property/birthName> ""Princess Victoria Louise of Prussia""@en . <http://dbpedia.org/resource/Prince_George_William_of_Hanover> <http://dbpedia.org/ontology/parent> ?v0 . ?v0 <http://dbpedia.org/ontology/child> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> ?v4 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
  # Step 1: Identify Princess Victoria Louise of Prussia
  ?princess a dbo:Royal ;
           foaf:name ""Victoria Louise, Princess Royal""@en .
  
  # Step 2: Find her spouse who is royalty
  ?princess dbo:spouse ?spouse .
  ?spouse a dbo:Royal .

  # Step 3: Determine their child who is royalty
  ?child dbo:parent ?spouse ;
         a dbo:Royal .

  # Step 4: Identify that child's parent (who must be royalty) and find their child
  ?grandchild dbo:parent ?child .
  
  # Step 5: This final child should match Prince George William of Hanover
  ?grandchild foaf:name ""Prince George William of Hanover""@en .
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
959,55,test,"Give me the manager of the team of Takashi Sekizuka and native of the residence, that is a country, of Yōichi Masuzoe and member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of Eiji Ōtsuka.",SELECT ?result WHERE { <http://dbpedia.org/resource/Eiji_Ōtsuka> <http://dbpedia.org/ontology/almaMater> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/ontology/manager> ?result . ?result <http://dbpedia.org/ontology/team> ?v2 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Takashi_Sekizuka> . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. <http://dbpedia.org/resource/Yōichi_Masuzoe> <http://dbpedia.org/property/residence> ?v5 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?result <http://dbpedia.org/ontology/birthPlace> ?v5 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?manager WHERE {
  # Takashi Sekizuka's team and its manager
  ?team dbo:player dbr:Takashi_Sekizuka ;
        dbo:coach ?manager .

  # Yōichi Masuzoe's country of residence
  dbr:Yōichi_Masuzoe dbp:nativePlace ?countryResidence .
  
  # Eiji Ōtsuka's alma mater
  dbr:Eiji_Ōtsuka dbo:almaMater ?almaMater .

  # Alma mater conditions
  FILTER EXISTS { ?almaMater a dbo:University . }
  FILTER EXISTS { ?almaMater a dbo:EducationalOrganization . }
  FILTER EXISTS { ?almaMater dbp:country dbr:Japan . }

  # Linking the manager, country, and alma mater
  ?manager dbp:nativePlace ?countryResidence .
  ?almaMater dbp:location ?countryResidence .
}
```",6,11,7,2,3,3,3,71,0,0,2,0,0.0,0
179,17,test,Give me the parent of the child of the parent of Vajiralongkorn and person born as Mom Rajawongse Sirikit Kitiyakara.,"SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Vajiralongkorn> . ?v0 <http://dbpedia.org/ontology/child> ?v3 . ?result <http://dbpedia.org/property/birthName> ""Mom Rajawongse Sirikit Kitiyakara""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?grandparent
WHERE {
  # Vajiralongkorn's parent (Queen Sirikit)
  dbr:Maha_Vajiralongkorn dbo:mother dbr:Sirikit .
  
  # Queen Sirikit's child (e.g., Princess Bajrakitiyabha)
  dbr:Sirikit dbo:child ?child1 .

  # Parent of that child (King Bhumibol Adulyadej)
  ?child1 dbo:father dbr:Bhumibol_Adulyadej .
  
  # Person born as Mom Rajawongse Sirikit Kitiyakara
  dbr:Sirikit rdfs:label ""Mom Rajawongse Sirikit Kitiyakara""@en .

  # Queen Sirikit's parent (Mom Luang Bhanubandh Kitiyakara)
  dbr:Sirikit dbo:father dbr:Bhanubandh_Kitiyakara .
  
  # Child of Mom Luang Bhanubandh Kitiyakara (Queen Sirikit)
  dbr:Bhanubandh_Kitiyakara dbo:child dbr:Sirikit .

  # Parent of Queen Sirikit (Mom Chao Phanomwasan Kitiyakara)
  dbr:Sirikit dbo:mother ?grandparent .
}
```",4,4,5,3,2,3,2,20,0,0,1,0,0.0,0
303,28,test,"Give me the party of the person born, that is a politician, as Arnulfo Arias Madrid and entity in the country, that is a country, of El Valle de Antón and party of the commander, that is a politician, in United States invasion of Panama.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/country> ?v3 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/United_States_invasion_of_Panama> <http://dbpedia.org/ontology/commander> ?v1 . ?v5 <http://dbpedia.org/ontology/party> ?result . ?v1 <http://dbpedia.org/ontology/party> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/El_Valle_de_Antón> <http://dbpedia.org/ontology/country> ?v3 . ?v5 <http://dbpedia.org/property/birthName> ""Arnulfo Arias Madrid""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?arnulfoParty ?elValleCountry ?commanderParty WHERE {
  # Arnulfo Arias Madrid's party
  dbr:Arnulfo_Arias_Madrid dbo:party ?arnulfoParty .
  
  # El Valle de Antón's country
  dbr:El_Valle_de_Antón dbo:country ?elValleCountry .

  # Commander of the United States invasion of Panama and their party
  {
    SELECT DISTINCT ?commander WHERE {
      dbr:United_States_invasion_of_Panama dbo:commander ?commander .
      ?commander rdf:type dbo:Politician .
    }
  } UNION {
    SELECT DISTINCT ?commander WHERE {
      dbr:United_States_invasion_of_Panama dbo:commander ?commander .
      ?commander rdf:type dbo:Person .
      ?commander dbp:occupation ""politician"" .
    }
  }

  # Commander's party
  OPTIONAL { ?commander dbo:party ?commanderParty . }
}
```",6,9,7,2,3,2,3,28,0,0,1,0,0.0,0
659,69,test,"Give me the commander in the war, that is an event and a military conflict, of 1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish) and military force of the force, that is a societal event and an event and a military conflict, of the reference to Rutger Jan Schimmelpenninck and commander in the force of the native, that is an office holder, of Kingdom of Ireland.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v7 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://dbpedia.org/ontology/commander> ?v4 . ?v1 <http://xmlns.com/foaf/0.1/name> ""Rutger Jan Schimmelpenninck""@en . ?v4 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Kingdom_of_Ireland> . <http://dbpedia.org/resource/1st_Light_Cavalry_Lancers_Regiment_of_the_Imperial_Guard_(Polish)> <http://dbpedia.org/ontology/battle> ?v7 . ?v2 <http://dbpedia.org/ontology/commander> ?v1 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?commanderInWar ?commanderInForce ?officeHolderCommander
WHERE {
  # Find the war involving the 1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish)
  ?regiment a dbo:MilitaryUnit ;
            dbp:participatedIn ?war .
  
  FILTER(?regiment = <http://dbpedia.org/resource/1st_Light_Cavalry_Lancers_Regiment_of_the_Imperial_Guard_(Polish)>)

  # Find the commander of this regiment in that war
  ?war dbo:commander ?commanderInWar .

  # Rutger Jan Schimmelpenninck's involvement in a societal event and military conflict
  ?force dbp:participatedIn ?event .
  
  FILTER(?event = <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck>)

  # Find the commander of this force
  ?event dbo:commander ?commanderInForce .

  # Office holder from Kingdom of Ireland and their associated commander
  ?officeHolder a dbo:Office ;
               dbp:nativeCountry <http://dbpedia.org/resource/Kingdom_of_Ireland> .
  
  ?officeHolder dbo:commander ?officeHolderCommander .
}
```",8,14,9,3,3,3,3,71,0,0,15,0,0.0,0
281,56,test,"Give me the war of the profession, that is a military unit, of the professional, that is an office holder and a politician, in New Zealand Army and entity in Colony of New Zealand and war of the awardee of Knight Grand Cross of the Order of the Bath.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/New_Zealand_Army> . ?v1 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Colony_of_New_Zealand> . ?v0 <http://dbpedia.org/property/occupation> ?v1 . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_the_Bath> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?war
WHERE {
  ?profession a dbo:MilitaryUnit ;
              dbo:officeHolder ?office ;
              dbo:politician ?politics .
  
  ?office dbo:heldBy ?person .
  ?politics dbo:heldBy ?person .

  ?profession dbp:militaryBranch dbp:NewZealandArmy ;
              dbp:participatedInWar ?war .

  ?war dbp:location dbp:ColonyOfNewZealand .

  ?person dbo:awarded <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_the_Bath> .
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
404,24,test,"Give me the parent of the child, that is a royalty, of Ernest Augustus, Duke of Brunswick and child of Ernest Augustus, Crown Prince of Hanover.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ernest_Augustus,_Crown_Prince_of_Hanover> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?parent WHERE {
  ?child dbo:childOf <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> .
  ?child dbo:childOf <http://dbpedia.org/resource/Ernest_Augustus,_Crown_Prince_of_Hanover> .
  ?child dbo:royaltyStatus ?status .
  FILTER EXISTS { ?status rdfs:label ?label . FILTER regex(?label, ""royal"", ""i"") }
  ?parent dbo:parentOf ?child .
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
492,62,test,"Give me the person decedent at Algiers and person decedent at the work of the author of French Algeria and commander in the war, that is a military conflict and an event, of the commander in Battle of Verdun.",SELECT ?result WHERE { ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v6 <http://dbpedia.org/ontology/commander> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://dbpedia.org/property/author> ?v4 . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Algiers> . <http://dbpedia.org/resource/Battle_of_Verdun> <http://dbpedia.org/ontology/commander> ?v0 . ?result <http://dbpedia.org/ontology/deathPlace> ?v3 . <http://dbpedia.org/resource/French_Algeria> <http://dbpedia.org/property/author> ?v4 . ?v0 <http://dbpedia.org/ontology/battle> ?v6 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person WHERE {
  # Person decedent at Algiers
  ?person dbo:deathPlace dbr:Algiers .
  
  # Person decedent related to the work of the author of ""French Algeria""
  ?work dbo:author ?author .
  ?author foaf:name ?name .
  FILTER(CONTAINS(LCASE(?name), ""french algeria"")) .
  ?person dbo:deathPlace ?placeOfWork .
  ?placeOfWork dbo:wikiPageRedirects ?work .

  # Person commander in a military conflict and an event
  ?conflict rdf:type dbo:MilitaryConflict ;
            dbo:event ?event .
  ?person dbo:commander ?conflict .

  # Person commander in the Battle of Verdun
  dbr:Battle_of_Verdun dbo:commander ?person .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
391,67,test,"Give me the actor of the movie, that is a movie and a work and a television show, with the professional in  and native of Compton, California and actor of the claim to fame, that is a work, of the spouse of Sherry Hormann.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Compton,_California> . ?v1 <http://dbpedia.org/property/occupation> """"@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v6 <http://dbpedia.org/ontology/starring> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://dbpedia.org/property/starring> ?result . ?v3 <http://dbpedia.org/property/starring> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/ontology/knownFor> ?v6 . <http://dbpedia.org/resource/Sherry_Hormann> <http://dbpedia.org/ontology/spouse> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  # Find Sherry Hormann's spouse
  dbr:Sherry_Hormann dbo:spouse ?spouse .

  # Identify the claim to fame of her spouse, which is a work
  ?spouse dbo:claimToFame ?work .

  # Ensure the work is also classified as a movie and television show
  ?work rdf:type dbo:Film .
  ?work rdf:type dbo:TelevisionShow .

  # Find an actor associated with this work who is native to Compton, California
  ?actor dbo:actor ?work ;
         dbo:nativePlace dbr:Compton,_California ;
         a dbo:Actor .

  # Ensure the actor has a professional role related to acting
  OPTIONAL { ?actor dbo:profession dbr:Acting }
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
547,51,test,Give me the resting place of the actor of Enemy at the Door and resting place of the awardee of the award of Gerald Graham.,SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/restingPlace> ?result . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Enemy_at_the_Door> <http://dbpedia.org/property/starring> ?v4 . <http://dbpedia.org/resource/Gerald_Graham> <http://dbpedia.org/property/awards> ?v1 . ?v2 <http://dbpedia.org/property/awards> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?actorRestingPlace ?awardeeRestingPlace WHERE {
  # Find the actor of ""Enemy at the Door"" and their resting place
  ?movie dbo:title ""Enemy at the Door""@en .
  ?movie dbo:starring ?actor .
  OPTIONAL { ?actor dbp:burialPlace ?actorRestingPlace . }
  
  # Find the awardee associated with Gerald Graham's award and their resting place
  ?award dbo:recipient ?awardee .
  ?award dbo:name ""Gerald Graham""@en .
  OPTIONAL { ?awardee dbp:burialPlace ?awardeeRestingPlace . }

}
```",5,5,6,3,2,3,3,71,0,0,2,0,0.0,0
820,20,test,Give me the child of the parent of the professional in Actor and professional in the award of the author of Understanding Comics.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Understanding_Comics> <http://dbpedia.org/ontology/author> ?v1 . ?v5 <http://dbpedia.org/ontology/child> ?v4 . ?result <http://dbpedia.org/property/father> ?v5 . ?result <http://dbpedia.org/property/occupation> ?v2 . ?v1 <http://dbpedia.org/property/awards> ?v2 . ?v4 <http://dbpedia.org/property/occupation> ""Actor""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child
WHERE {
  # Step 1: Find the author of ""Understanding Comics""
  dbr:Understanding_Comics dbo:author ?author .

  # Step 2: Find awards associated with this author
  ?award dbo:recipient ?author .
  
  # Step 3: Identify professionals in that award
  ?professional dbo:profession dbr:Actor ;
                dbo:parent ?parent .

  # Step 4: Find the child of this parent
  ?parent dbo:child ?child .
}
```",6,6,7,3,2,3,2,20,0,0,128,0,0.0,0
701,54,test,Give me the parent of the child of the child of Seti I and spouse of Ramesses II and parent of the child of Nefertari.,SELECT ?result WHERE { <http://dbpedia.org/resource/Nefertari> <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Ramesses_II> . ?result <http://dbpedia.org/ontology/child> ?v5 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seti_I> . ?v5 <http://dbpedia.org/property/father> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Seti I's child is Ramesses II
  ?setiI dbo:child dbr:Ramesses_II .
  
  # Ramesses II's spouse who is also a parent of Nefertari's child (Merneptah)
  ?ramessesII dbo:spouse ?person .
  ?person dbo:parent dbr:Merneptah .

  # Ensure the person is indeed married to Ramesses II
  FILTER (?ramessesII = dbr:Ramesses_II)

  # Nefertari's child (Merneptah)
  dbr:Nefertari dbo:child dbr:Merneptah .
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
547,63,test,Give me the resting place of the child of the child of William Haliburton and resting place of the awardee of Knight Grand Cross of the Order of St Michael and St George and resting place of the actor of Enemy at the Door.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Enemy_at_the_Door> <http://dbpedia.org/property/starring> ?v6 . ?v6 <http://dbpedia.org/ontology/restingPlace> ?result . ?v3 <http://dbpedia.org/ontology/restingPlace> ?result . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_St_Michael_and_St_George> . ?v4 <http://dbpedia.org/property/father> ""William Haliburton""@en . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . ?v4 <http://dbpedia.org/ontology/child> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

# Resting place of the child of the child of William Haliburton
SELECT DISTINCT ?grandchildRestingPlace WHERE {
  VALUES ?williamHaliburton { dbr:William_Haliburton }
  ?williamHaliburton dbo:child ?child .
  ?child dbo:child ?grandchild .
  ?grandchild dbo:deathPlace ?grandchildDeathPlace .
  OPTIONAL { ?grandchildDeathPlace dbo:location ?grandchildRestingPlace . }
}

UNION

# Resting place of the awardee of Knight Grand Cross of the Order of St Michael and St George
SELECT DISTINCT ?awardeeRestingPlace WHERE {
  ?person dbo:award dbr:Knight_Grand_Cross_of_the_Order_of_St_Michael_and_St_George .
  ?person dbo:deathPlace ?awardeeDeathPlace .
  OPTIONAL { ?awardeeDeathPlace dbo:location ?awardeeRestingPlace . }
}

UNION

# Resting place of the actor of ""Enemy at the Door""
SELECT DISTINCT ?actorRestingPlace WHERE {
  dbr:Enemy_at_the_Door dbo:starring ?actor .
  ?actor dbo:deathPlace ?actorDeathPlace .
  OPTIONAL { ?actorDeathPlace dbo:location ?actorRestingPlace . }
}
```",7,7,8,3,3,3,3,71,0,0,1,0,0.0,0
659,60,test,"Give me the commander in the force of the native, that is an office holder, of Kingdom of Ireland and military force of the force, that is a societal event and an event and a military conflict, of the reference to Rutger Jan Schimmelpenninck.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Kingdom_of_Ireland> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/commander> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://dbpedia.org/ontology/commander> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Rutger Jan Schimmelpenninck""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  ?commander dbo:officeHolderOf dbr:Kingdom_of_Ireland .
  ?commander dbo:militaryCommanderOf ?force .
  ?force dbo:type dbr:Military_Conflict ;
         dbo:societalEvent true .
  
  OPTIONAL { 
    ?connection dbo:relatedTo dbr:Rutger_Jan_Schimmelpenninck .
    ?commander ?p ?connection .
  }
}
```",6,10,7,3,2,3,3,71,0,0,40,0,0.0,0
783,19,test,"Give me the band member of the person born, that is an artist and a musical artist, as the persona of Ebony Reigns and associated musical artist of the band member of Ofori Amponsah.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v4 <http://dbpedia.org/property/birthName> ?v0 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . <http://dbpedia.org/resource/Ebony_Reigns> <http://xmlns.com/foaf/0.1/givenName> ?v0 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Ofori_Amponsah> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandMember ?associatedArtist
WHERE {
  # Find Ebony Reigns and her roles
  dbr:Ebony_Reigns a dbo:MusicalArtist ;
                   dbo:birthPlace ?ebonyBirthPlace ;
                   dbo:genre ?ebonyGenre .

  # Find Ofori Amponsah's band members
  ?bandMember a dbo:Band ;
              dbo:member ?ofoMember .
  
  ?ofoMember dbr:Ofori_Amponsah .

  # Check if the band member is associated with Ebony Reigns as an artist or musical artist
  OPTIONAL {
    ?associatedArtist dbo:associatedMusicalArtist ?bandMember ;
                     a dbo:MusicalArtist ;
                     rdfs:label ?artistLabel .
  }

  FILTER (?ebonyGenre = ""Gospel"" || ?ebonyGenre = ""Hiplife"") # Assuming genres based on typical artist roles
}
```",5,7,6,3,2,3,2,20,0,0,1,0,0.0,0
232,30,test,"Give me the child of Jon Pertwee and actor of Dog Soldiers (film) and native of the residence, that is a settlement and British, of Sylvie Bermann.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . <http://dbpedia.org/resource/Dog_Soldiers_(film)> <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Sylvie_Bermann> <http://dbpedia.org/property/residence> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  # Jon Pertwee's children
  ?person dbo:parent dbr:Jon_Pertwee .
  
  # Actor of Dog Soldiers (film)
  ?actor dbo:actedIn dbr:Dog_Soldiers_(2002_film) .

  # Sylvie Bermann's residence that is a settlement and British
  dbr:Sylvie_Bermann dbo:nativePlace ?residence ;
                     dbo:nationality dbr:United_Kingdom .
  
  FILTER (dbo:Settlement ?residence)
  
  # Find common entity
  VALUES ?child { ?person ?actor }
}
```",4,6,5,2,3,3,3,71,0,0,1,0,0.0,0
492,44,test,"Give me the person decedent at French Algeria and person decedent at the capital, that is a settlement, of Algeria and commander in the war, that is a military conflict and an event, of Frédéric-Georges Herr.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/French_Algeria> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v4 <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Algeria> <http://dbpedia.org/ontology/capital> ?v2 . <http://dbpedia.org/resource/Frédéric-Georges_Herr> <http://dbpedia.org/ontology/battle> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person dbo:deceasedPlace dbr:French_Algeria .
  ?person dbo:deceasedPlace dbr:Algiers .
  
  ?conflict dbo:commander ?person ;
            dbo:participant dbr:Frédéric-Georges_Herr .

  FILTER EXISTS { ?conflict a dbo:MilitaryConflict }
}
```",5,8,6,2,3,3,3,71,0,0,1,0,0.0,0
767,59,test,"Give me the alma mater of the administration of the reference to George Kilbon Nash and entity in the administration, that is a settlement, of the writer of Where It's At (Dustin Lynch album).","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://xmlns.com/foaf/0.1/name> ""George Kilbon Nash""@en . ?v2 <http://dbpedia.org/property/leaderParty> ?v3 . ?result <http://dbpedia.org/ontology/state> ?v2 . <http://dbpedia.org/resource/Where_It's_At_(Dustin_Lynch_album)> <http://dbpedia.org/property/writer> ?v3 . ?v5 <http://dbpedia.org/property/governor> ?v0 . ?v5 <http://dbpedia.org/ontology/almaMater> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?almaMater
WHERE {
  # Step 1: Find George Kilbon Nash's alma mater
  dbr:George_Kilbon_Nash dbo:almaMater ?nashAlmaMater .

  # Step 2: Identify the administration entity associated with George Kilbon Nash
  OPTIONAL { ?administrationEntity dbo:member ?nash . FILTER(?nash = dbr:George_Kilbon_Nash) }

  # Step 3: Find the writer of ""Where It's At"" by Dustin Lynch
  dbr:""Where_It%27s_At_(Dustin_Lynch_song)"" dbo:lyricsBy ?writer .

  # Step 4: Determine a settlement in the administration related to the writer
  OPTIONAL { ?settlement dbo:partOf ?administrationEntity . FILTER(?writer = ?settlement) }

  # Step 5: Find the alma mater of both the administration entity and the settlement
  ?administrationEntity dbo:almaMater ?adminAlmaMater .
  ?settlement dbo:almaMater ?settleAlmaMater .

  BIND(CONCAT(?nashAlmaMater, "" "", ?adminAlmaMater, "" "", ?settleAlmaMater) AS ?almaMater)
}
```",6,7,7,3,2,3,3,71,0,0,1,0,0.0,0
16,71,test,Give me the professional in the profession of the actor of Unnatural (TV series) and spouse of the person born as the birth name of Ted McGinley and person born as the birth name of the alumnus of Ohio State University.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/birthName> ?v8 . ?v7 <http://dbpedia.org/property/birthName> ?v8 . ?v7 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Ohio_State_University> . ?v4 <http://dbpedia.org/property/occupation> ?v5 . <http://dbpedia.org/resource/Unnatural_(TV_series)> <http://dbpedia.org/property/starring> ?v4 . ?result <http://dbpedia.org/property/occupation> ?v5 . ?v2 <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?commonSpouse ?profession WHERE {
  # Step 1: Identify the actor of ""Unnatural""
  ?actor dbo:starringIn dbr:Unnatural_(TV_series) .
  
  # Step 2: Determine the profession of that actor
  ?actor dbo:occupation ?actorProfession .

  # Step 3: Find Ted McGinley's birth name and spouse
  dbr:Ted_McGinley dbo:birthName ?tedBirthName ;
                   dbo:spouse ?tedSpouse .

  # Step 4: Identify an alumnus of Ohio State University by birth name
  ?alumnus dbo:almaMater dbr:Ohio_State_University ;
           dbo:birthName ?alumnusBirthName .

  # Step 5: Find the common spouse
  FILTER(?tedSpouse = ?commonSpouse) .
  OPTIONAL { ?alumnus dbo:spouse ?commonSpouse . }

  # Step 6: Determine the profession of this common spouse
  ?commonSpouse dbo:occupation ?profession .
}
```",9,9,10,3,3,3,3,71,0,0,1,0,0.0,0
285,19,test,Give me the spouse of the professional in the award of Stan Lee and parent of the child of Tina Onassis Niarchos.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Tina_Onassis_Niarchos> <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/ontology/spouse> ?v4 . ?v4 <http://dbpedia.org/property/occupation> ?v0 . <http://dbpedia.org/resource/Stan_Lee> <http://dbpedia.org/property/awards> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
    # Step 1: Identify Stan Lee's award
    ?award dbo:recipient dbr:Stan_Lee .
    
    # Step 2: Find the professional related to this award
    ?professional dbo:award ?award .

    # Step 3: Identify Tina Onassis Niarchos' child
    ?child dbo:parent dbr:Tina_Onassis_Niarchos .

    # Step 4: Determine the parent of that child
    ?parent dbo:child ?child .
    
    # Step 5: Find the spouse of the professional from step 2
    ?professional dbo:spouse ?spouse .
}
```",5,5,6,3,2,3,2,20,0,0,2,0,0.0,0
391,64,test,"Give me the native of the figure known as the nick name of Jackson, Tennessee and actor of The Departed and actor of the movie, that is a movie and a work and a television show, with the professional in .","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. <http://dbpedia.org/resource/Jackson,_Tennessee> <http://xmlns.com/foaf/0.1/nick> ?v3 . ?v2 <http://dbpedia.org/property/nickname> ?v3 . ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/property/starring> ?v0 . ?v1 <http://dbpedia.org/property/starring> ?result . ?v0 <http://dbpedia.org/property/occupation> """"@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. <http://dbpedia.org/resource/The_Departed> <http://dbpedia.org/ontology/starring> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nativePlace WHERE {
  ?actor dbo:nationality dbr:United_States ;
         foaf:name ""Leonardo DiCaprio""@en .
  OPTIONAL { ?actor dbo:birthPlace ?nativePlace . }
  FILTER EXISTS {
    ?film dbo:starring ?actor .
    VALUES ?film { 
      dbr:The_Departed 
      dbr:The_Wolf_of_Wall_Street
    }
  }
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
528,45,test,Give me the war of Orozimbo Barbosa and war of Irene Morales and force of the person born as the birth name of Narciso Campero.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> ?v1 . <http://dbpedia.org/resource/Irene_Morales> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Narciso_Campero> <http://dbpedia.org/property/birthName> ?v0 . <http://dbpedia.org/resource/Orozimbo_Barbosa> <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/property/birthName> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?warOrozimbo ?warIrene ?birthNameNarciso ?forceNarciso
WHERE {
  # Wars associated with Orozimbo Barbosa
  OPTIONAL { 
    ?person1 a dbo:Person ;
             foaf:name ""Orozimbo Barbosa"" ;
             dbo:associatedWith ?warOrozimbo .
  }
  
  # Wars associated with Irene Morales
  OPTIONAL { 
    ?person2 a dbo:Person ;
             foaf:name ""Irene Morales"" ;
             dbo:associatedWith ?warIrene .
  }

  # Birth name of Narciso Campero
  ?person3 a dbo:Person ;
           foaf:name ""Narciso Campero"" ;
           dbo:birthName ?birthNameNarciso .

  # Force associated with Narciso Campero (assuming 'force' is represented by a role or position)
  OPTIONAL {
    ?person3 dbo:positionHeld ?forceNarciso .
  }
}
```",5,5,6,3,3,3,3,71,0,0,2,0,0.0,0
251,25,test,"Give me the location of the war, that is a military conflict, of Louis François Félix Musnier and administration of the ruling party, that is a political party and an organisation, in Sicily and death place of Laura Mancinelli.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Sicily> <http://dbpedia.org/property/leaderParty> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v3 <http://dbpedia.org/ontology/place> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Laura_Mancinelli> <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Louis_François_Félix_Musnier> <http://dbpedia.org/ontology/battle> ?v3 . ?result <http://dbpedia.org/property/leaderParty> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX owl: <http://www.w3.org/2002/07/owl#>

SELECT DISTINCT ?warLocation ?administration ?deathPlace
WHERE {
  # Find the war involving Louis François Félix Musnier in Sicily
  ?person rdfs:label ""Louis François Félix Musnier""@en .
  ?war dbo:participatedInMilitaryConflict ?person ;
       dbo:location dbr:Sicily .

  # Find the administration of a ruling party linked to this context
  ?party dbo:member ?administration ;
         rdf:type owl:Thing, dbo:PoliticalParty .
  
  # Find Laura Mancinelli's death place
  ?laura rdfs:label ""Laura Mancinelli""@en .
  ?laura dbo:deathPlace ?deathPlace .

}
```",5,8,6,2,3,2,3,28,0,0,1,0,0.0,0
281,49,test,"Give me the war of the profession, that is a military unit, of the professional, that is an office holder and a politician, in New Zealand Army and war of the awardee of Knight Grand Cross of the Order of the Bath.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/occupation> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v0 <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/New_Zealand_Army> . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_the_Bath> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?militaryUnit ?war
WHERE {
  # Find military units in the New Zealand Army associated with politicians or office holders
  ?politician a dbo:Politician ;
              dbo:officeHolderOf ?office .
  ?office dbo:heldBy ?person .
  ?person dbo:militaryService ?militaryUnit .
  ?militaryUnit dbo:partOfMilitaryOrganization dbr:New_Zealand_Army .

  # Find wars involving awardees of the Knight Grand Cross of the Order of the Bath
  ?awardee dbo:awardReceived dbr:Knight_Grand_Cross_of_the_Order_of_the_Bath .
  ?war dbo:hasParticipant ?awardee .

  # Link military units to wars
  ?militaryUnit dbo:participatedInWar ?war .
}
```",5,8,6,3,2,3,3,71,0,0,9,0,0.0,0
9,62,test,"Give me the alma mater of the mayor, that is a politician, of the entity, that is an organisation, in Belfast and figure known as QUB and alma mater of the awardee of the reference, that is an award, to Royal Medals.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Royal Medals""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v6 <http://dbpedia.org/property/awards> ?v0 . ?v3 <http://dbpedia.org/ontology/almaMater> ?result . ?v4 <http://dbpedia.org/property/leader> ?v3 . ?result <http://dbpedia.org/property/nickname> ""QUB""@en . ?v4 <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Belfast> . ?v6 <http://dbpedia.org/ontology/almaMater> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?almaMater WHERE {
  # Step 1: Identify QUB (Queen's University of Belfast)
  VALUES (?qub) { dbr:Queen's_University_of_Belfast }
  
  # Step 2: Find the mayor of Belfast who is a politician and has an alma mater that matches QUB
  ?mayor dbo:almaMater ?almaMater ;
         dbo:officeHolderOf dbr:Belfast ;
         rdf:type dbo:Politician .
  FILTER (?almaMater = ?qub)
  
  # Step 3: Find the award associated with Royal Medals and its awardees
  ?award dbp:name ""Royal Medal""@en ;
         dbo:awardee ?awardee .
  
  # Step 4: Check if any of these awardees have QUB as their alma mater
  OPTIONAL { ?awardee dbo:almaMater ?qub }
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
994,51,test,"Give me the band member of the person born, that is a musical artist, as the persona of Don Dokken and associated musical artist of the band member, that is a band and a group and an organisation, of Meshuggah.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. <http://dbpedia.org/resource/Don_Dokken> <http://xmlns.com/foaf/0.1/givenName> ?v3 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Meshuggah> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/property/birthName> ?v3 . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandMember ?associatedArtist WHERE {
  # Find Don Dokken's band
  ?dokken a dbo:MusicalArtist ;
          foaf:name ""Don Dokken"" .
  
  ?dokken dbo:memberOfBand ?band .

  # Ensure the person is born and is a musical artist
  ?dokken dbo:birthDate ?birthDate .

  # Find Meshuggah as a band, group, or organization
  ?meshuggah a (dbo:Band|dbo:MusicalGroup|dbo:Organization) ;
             foaf:name ""Meshuggah"" .
  
  # Get the members of Meshuggah
  ?meshuggah dbo:member ?bandMember .

  # Find associated musical artists for each band member
  ?bandMember dbo:associatedActs ?associatedArtist .
}
```",5,9,6,3,2,3,3,71,0,0,1,0,0.0,0
528,56,test,Give me the war of Orozimbo Barbosa and war of the military force of Battle of Pisagua and force of the person born as the birth name of Narciso Campero.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?v2 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Orozimbo_Barbosa> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Narciso_Campero> <http://dbpedia.org/property/birthName> ?v0 . ?v2 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Pisagua> . ?result <http://dbpedia.org/ontology/commander> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?war1 ?war2 WHERE {
  # Orozimbo Barbosa's involvement in wars
  OPTIONAL { 
    dbr:Orozimbo_Barbosa dbo:participatedIn ?war1 .
  }
  
  # Battle of Pisagua and its military forces
  OPTIONAL {
    dbr:Battle_of_Pisagua dbo:militaryForce ?forcePisagua .
    ?forcePisagua dbo:participatedIn ?war2 .
  }

  # Narciso Campero's birth name and his involvement in wars
  OPTIONAL {
    ?campero dbo:birthName ""Narciso Campero""@en ;
             dbo:participatedIn ?war3 .
  }
  
  FILTER(?war1 != dbr:Unknown && ?war2 != dbr:Unknown)
}
```",6,6,7,3,3,3,3,71,0,0,2,0,0.0,0
55,24,test,"Give me the band member of the band member, that is a band and a group, of San Francisco Symphony and band of the reference, that is a band, to Newsted.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/San_Francisco_Symphony> . ?v1 <http://xmlns.com/foaf/0.1/name> ""Newsted""@en . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?person WHERE {
  # Find members associated with the San Francisco Symphony
  ?member dbo:performerOf <http://dbpedia.org/resource/San_Francisco_Symphony> .
  
  # Ensure this member is also a band or group leader/member
  ?member dbo:bandMember ?band1 .
  ?band1 rdf:type dbo:Band .

  # Find bands connected to Jason Newsted
  ?band2 dbp:members <http://dbpedia.org/resource/Jason_Newsted> .
  
  # Ensure the person is also a member of this band
  ?member dbo:bandMember ?band2 .
  
  # Check if the person leads or is part of multiple groups
  ?person dbo:bandLeader ?group1 .
  ?person dbo:bandMember ?group2 .
  FILTER(?group1 != ?group2)
}
```",4,7,5,2,2,2,3,28,0,0,3,0,0.0,0
16,70,test,Give me the professional in the profession of the actor of Unnatural (TV series) and spouse of the person born as Ted Martin McGinley and person born as the birth name of the alumnus of Ohio State University.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v7 . ?v4 <http://dbpedia.org/property/birthName> ""Ted Martin McGinley""@en . ?v4 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/property/occupation> ?v7 . ?v1 <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Unnatural_(TV_series)> <http://dbpedia.org/property/starring> ?v0 . ?result <http://dbpedia.org/property/birthName> ?v3 . ?v1 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Ohio_State_University> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?professional WHERE {
  # Find the actor of ""Unnatural"" TV series
  ?unnaturalActor dbo:actorIn dbr:Unnatural_(TV_series) .
  
  # Identify Ted Martin McGinley
  ?tedMcGinley foaf:name ""Ted Martin McGinley""@en ;
               dbo:spouse ?commonSpouse .

  # Find alumni of Ohio State University and their birth names
  ?alumnus dbo:almaMater dbr:Ohio_State_University ;
           foaf:name ?birthName .
  
  # Check if the alumnus has a common spouse with Ted Martin McGinley
  ?alumnus dbo:spouse ?commonSpouse .

  # Ensure the actor of ""Unnatural"" shares this spouse
  ?unnaturalActor dbo:spouse ?commonSpouse .

  # Return the professional occupation of the common spouse
  ?commonSpouse a ?professional .
}
```",8,8,9,3,3,3,3,71,0,0,1,0,0.0,0
404,68,test,"Give me the spouse of the person born, that is a royalty, as the birth name of Princess Victoria Louise of Prussia and child of the father of Ernest Augustus, Duke of Brunswick and parent of the child, that is a royalty, of the parent, that is a royalty, of Prince George William of Hanover.","SELECT ?result WHERE { <http://dbpedia.org/resource/Prince_George_William_of_Hanover> <http://dbpedia.org/ontology/parent> ?v0 . ?v4 <http://dbpedia.org/property/birthName> ?v5 . ?result <http://dbpedia.org/ontology/parent> ?v3 . ?v4 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/ontology/child> ?v7 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/property/father> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/property/birthName> ?v5 . ?result <http://dbpedia.org/ontology/child> ?v7 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Princess Victoria Louise of Prussia's birth name
  dbr:Princess_Victoria_Louise_of_Prussia dbo:birthName ?birthName .

  # Her spouse who is royalty
  ?person dbo:birthName ?birthName .
  ?person dbo:spouse ?spouse .
  ?spouse a dbo:Monarch .

  # Ernest Augustus, Duke of Brunswick's father
  dbr:Ernest_Augustus,_Duke_of_Brunswick dbo:father ?fatherOfErnestAugustus .

  # Prince George William of Hanover's parent who is royalty
  dbr:Prince_George_William_of_Hanover dbo:parent ?parentOfGeorgeWilliam .
  ?parentOfGeorgeWilliam a dbo:Monarch .

  # Ensure the spouse fits into the lineage described
  FILTER (?spouse = ?person)
}
```",8,11,9,3,3,3,3,71,0,0,1,0,0.0,0
617,62,test,"Give me the parent of Nysa (wife of Pharnaces I of Pontus) and child of the child, that is a royalty, of the successor, that is a royalty, of Antiochus II Theos and spouse of the child of the successor, that is a royalty, of Antiochus (son of Antiochus III the Great).",SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v3 . <http://dbpedia.org/resource/Antiochus_II_Theos> <http://dbpedia.org/ontology/successor> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v6 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/successor> ?v0 . ?v0 <http://dbpedia.org/ontology/child> ?v6 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Nysa_(wife_of_Pharnaces_I_of_Pontus)> . ?v3 <http://dbpedia.org/property/father> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?grandchild ?spouse WHERE {
  # Step 1: Identify Nysa's parent
  ?nysa a dbo:Person ;
        foaf:name ""Nysa""@en .
  
  ?pharnacesI a dbo:Person ;
              foaf:name ""Pharnaces I of Pontus""@en ;
              dbo:spouse ?nysa .

  ?parent a dbo:Person ;
          dbo:child ?nysa .

  # Step 2: Find the grandchild who is royalty
  ?grandchild a dbo:RoyalFamilyMember ;
              dbo:child ?child .
  ?child a dbo:Person ;
         dbo:child ?parent .

  # Step 3: Identify successor of Antiochus II Theos
  ?antiochusII a dbo:Person ;
               foaf:name ""Antiochus II Theos""@en .
  
  ?successor1 a dbo:RoyalFamilyMember ;
              dbo:predecessor ?antiochusII .

  # Step 4: Identify successor of Antiochus (son of Antiochus III the Great)
  ?antiochusIII a dbo:Person ;
                foaf:name ""Antiochus III""@en .
  
  ?antiochusSon a dbo:Person ;
                foaf:name ""Antiochus""@en ;
                dbo:childOf ?antiochusIII .

  ?successor2 a dbo:RoyalFamilyMember ;
              dbo:predecessor ?antiochusSon .

  # Step 5: Find the spouse of the child of successor2
  ?childSuccessor2 a dbo:Person ;
                   dbo:child ?successor2 .
  
  ?spouse a dbo:Person ;
          dbo:spouse ?childSuccessor2 .
}
```",7,10,8,3,3,3,3,71,0,0,2,0,0.0,0
659,18,test,Give me the military force of Napoleonic Wars and commander in Battle of Leipzig and commander in German campaign of 1813.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Napoleonic_Wars> . <http://dbpedia.org/resource/Battle_of_Leipzig> <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/German_campaign_of_1813> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?militaryForce ?battleOfLeipzigCommander ?germanCampaign1813Commander WHERE {
  # Military force involved in the Napoleonic Wars
  ?militaryForce dbo:participatedIn dbp:Napoleonic_Wars .
  
  # Commander at the Battle of Leipzig
  OPTIONAL { 
    ?battleOfLeipzig dbp:commander ?battleOfLeipzigCommander .
    FILTER (str(?battleOfLeipzig) = ""Battle_of_Leipzig"")
  }
  
  # Commander during the German campaign of 1813
  OPTIONAL {
    ?germanCampaign1813 dbp:commander ?germanCampaign1813Commander .
    FILTER (str(?germanCampaign1813) = ""German_campaign_of_1813"")
  }
}
```",3,3,4,1,3,3,3,71,0,0,5,0,0.0,0
391,69,test,"Give me the actor of the claim to fame, that is a work, of Michael Ballhaus and native of the figure known as the nick name of Jackson, Tennessee and actor of the movie, that is a movie and a work and a television show, with the professional in .","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Michael_Ballhaus> <http://dbpedia.org/ontology/knownFor> ?v7 . ?v3 <http://dbpedia.org/property/nickname> ?v4 . <http://dbpedia.org/resource/Jackson,_Tennessee> <http://xmlns.com/foaf/0.1/nick> ?v4 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/property/starring> ?result . ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v2 <http://dbpedia.org/property/starring> ?v1 . ?v7 <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://dbpedia.org/property/occupation> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?actor WHERE {
  # Michael Ballhaus's claim to fame (a notable work)
  dbr:Michael_Ballhaus dbo:notableWork ?work1 .
  
  # Find an actor from Jackson, Tennessee
  ?actor dbo:nationality dbr:Tennessee ;
         dbo:birthPlace dbr:Jackson,_Tennessee ;
         rdf:type dbo:Actor .

  # The movie that is also a television show
  ?work2 dbo:genre dbr:Film ;
         dbo:genre dbr:TelevisionShow .
  
  # Connect the actor to this work
  ?actor dbo:actedIn ?work2 .

  # Ensure there's a connection between Michael Ballhaus's work and the movie/TV show
  ?work1 dbo:relatedWork ?work2 .
}
```",8,12,9,3,3,3,3,71,0,0,1,0,0.0,0
959,60,test,"Give me the manager of the team of the manager, that is a sports manager, of 1998 Kashima Antlers season and member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of the person born in 1958.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/manager> ?result . <http://dbpedia.org/resource/1998_Kashima_Antlers_season> <http://dbpedia.org/ontology/manager> ?v5 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v4 <http://dbpedia.org/ontology/almaMater> ?v2 . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?result <http://dbpedia.org/ontology/team> ?v2 . ?v4 <http://dbpedia.org/ontology/birthYear> ""1958""^^<http://www.w3.org/2001/XMLSchema#gYear> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v0 <http://dbpedia.org/ontology/manager> ?v5 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?managerName ?universityName ?personBorn1958
WHERE {
  # Step 1: Find the manager of the 1998 Kashima Antlers team
  ?team dbo:coach ?manager .
  ?manager foaf:name ?managerName .

  FILTER (?team = dbr:Kashima_Antlers_season_1998)

  # Step 2: Ensure the manager is a sports manager
  ?manager dbo:occupation dbp:sports_manager .

  # Step 3: Find the alma mater of this manager
  ?manager dbo:almaMater ?university .
  ?university foaf:name ?universityName .
  
  FILTER (STRSTARTS(STR(?university), ""http://dbpedia.org/resource/"") && 
          EXISTS { ?university a dbo:University } &&
          EXISTS { ?university dbo:country dbr:Japan })

  # Step 4: Find persons born in 1958 who attended this university
  ?person dbp:birthdayYear ?birthYear .
  ?person dbo:almaMater ?university .
  
  FILTER (?birthYear = ""1958"")
}
```",6,11,7,3,2,3,3,71,0,0,3,0,0.0,0
281,38,test,"Give me the entity in the birth place, that is a country, of Bob Heffron and war of the profession, that is a military unit, of Heather Roy.",SELECT ?result WHERE { <http://dbpedia.org/resource/Bob_Heffron> <http://dbpedia.org/ontology/birthPlace> ?v3 . <http://dbpedia.org/resource/Heather_Roy> <http://dbpedia.org/property/occupation> ?v2 . ?result <http://dbpedia.org/ontology/place> ?v3 . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?birthCountry ?militaryUnit
WHERE {
  ?bobHeffron dbo:birthPlace ?birthPlace .
  ?birthPlace rdf:type dbo:Country .
  
  ?heatherRoy dbo:profession ?profession .
  ?profession dbo:isPartOf ?militaryUnit .
  ?militaryUnit rdf:type dbo:MilitaryUnit .
}
```",4,6,5,2,2,3,3,71,0,0,1,0,0.0,0
404,46,test,"Give me the parent of the child, that is a royalty, of Ernest Augustus, Duke of Brunswick and spouse of the person born, that is a royalty, as the birth name of Princess Victoria Louise of Prussia.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/property/birthName> ?v2 . ?v1 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/child> ?v4 . ?v1 <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/ontology/child> ?v4 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?parent WHERE {
  ?child dbo:childOf dbr:Ernest_Augustus,_Duke_of_Brunswick .
  ?child dbo:royalty true .
  
  ?spouse dbo:spouse ?child .
  
  ?princess foaf:name ""Victoria Louise of Prussia""@en .
  ?spouse foaf:birthday ?birthdayPrincess .
  
  ?parent dbo:parentOf ?spouse .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
959,45,test,"Give me the manager of the team of the manager, that is a sports manager, of 1998 Kashima Antlers season and native of Japan and member of University of Tsukuba.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Japan> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v0 <http://dbpedia.org/ontology/manager> ?v3 . ?result <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/University_of_Tsukuba> . ?v0 <http://dbpedia.org/ontology/manager> ?result . <http://dbpedia.org/resource/1998_Kashima_Antlers_season> <http://dbpedia.org/ontology/manager> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?finalManager WHERE {
  # Step 1: Find the manager of Kashima Antlers in 1998
  ?kashimaAntlersSeason dbo:manager ?manager1998 .
  FILTER(CONTAINS(LANG(?kashimaAntlersSeason), ""en"") && CONTAINS(STR(?kashimaAntlersSeason), ""Kashima Antlers"") && STRSTARTS(STR(?kashimaAntlersSeason), ""http://dbpedia.org/resource/"")) .
  FILTER(YEAR(?kashimaAntlersSeason) = 1998) .

  # Step 2: Ensure this manager is a sports manager
  ?manager1998 dbo:occupation dbr:Sports_manager .

  # Step 3: Find the team managed by this sports manager
  ?team dbo:manager ?manager1998 .

  # Step 4: Identify the manager of that team
  ?team dbo:manager ?finalManager .

  # Step 5: Filter for native of Japan and member of University of Tsukuba
  ?finalManager dbp:nationality dbr:Japan .
  ?finalManager dbo:almaMater dbr:University_of_Tsukuba .
}
```",5,6,6,3,3,3,3,71,0,0,2,0,0.0,0
378,40,test,"Give me the claim to fame of Louis des Balbes de Berton de Crillon, 1st Duke of Mahón and war of Joaquín Blake and war of the person born as the birth name of Carl Pontus Gahn.","SELECT ?result WHERE { <http://dbpedia.org/resource/Louis_des_Balbes_de_Berton_de_Crillon,_1st_Duke_of_Mahón> <http://dbpedia.org/ontology/knownFor> ?result . ?v1 <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Joaquín_Blake> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/property/birthName> ?v2 . ?v1 <http://dbpedia.org/ontology/battle> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

# Query for Louis des Balbes de Berton de Crillon, 1st Duke of Mahón
SELECT ?claimToFame WHERE {
  dbr:Louis_des_Balbes_de_Berton_de_Crillon_1st_Duke_of_Mahón dbo:notableFor ?claimToFame .
}

UNION

# Query for wars involving Joaquín Blake
SELECT DISTINCT ?war WHERE {
  dbr:Joaquín_Blake dbo:militaryConflict ?war .
}

UNION

# Query for birth name of Carl Pontus Gahn
SELECT ?birthName WHERE {
  dbr:Carl_Pontus_Gahn dbo:birthName ?birthName .
}
```",5,5,6,3,3,3,3,71,0,0,2,0,0.0,0
701,62,test,Give me the parent of the child of the spouse of Amun-her-khepeshef and spouse of Ramesses II and parent of the child of the child of Seti I.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Ramesses_II> . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seti_I> . ?v3 <http://dbpedia.org/ontology/parent> ?result . ?v6 <http://dbpedia.org/property/father> ?v0 . ?v4 <http://dbpedia.org/ontology/child> ?v3 . ?result <http://dbpedia.org/ontology/child> ?v6 . <http://dbpedia.org/resource/Amun-her-khepeshef> <http://dbpedia.org/ontology/spouse> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commonParent WHERE {
  # Step 1: Find Amun-her-khepeshef's spouse
  ?amunHerKhepeshef a dbr:Amun_her_khepeshef ;
                   dbo:spouse ?spouseOfAmun .

  # Step 2: Find the child of this spouse
  ?child1 dbo:parent ?spouseOfAmun .

  # Step 3: Identify the parent of this child (should be Amun-her-khepeshef or his spouse)
  ?parent1 dbo:parent ?child1 .
  
  # Step 4: Find Ramesses II's spouse
  dbr:Ramesses_II dbo:spouse ?spouseOfRamesses .

  # Step 5: Find the child of this spouse
  ?child2 dbo:parent ?spouseOfRamesses .

  # Step 6: Identify the parent of this child (should be Ramesses II or his spouse)
  ?parent2 dbo:parent ?child2 .
  
  # Step 7: Find Seti I's child
  dbr:Seti_I dbo:child ?setiChild .

  # Step 8: Find a child of Seti I’s child
  ?grandchild dbo:parent ?setiChild .

  # Step 9: Identify the parent of this grandchild (should be Seti I’s child or their spouse)
  ?parent3 dbo:parent ?grandchild .
  
  # Step 10: Find common parent among identified parents
  FILTER (?parent1 = ?parent2 || ?parent1 = ?parent3 || ?parent2 = ?parent3)
  BIND(?parent1 AS ?commonParent) 
}
```",7,7,8,3,3,3,3,71,0,0,1,0,0.0,0
801,67,test,"Give me the professional in  and producer of the work, that is a musical work and a song and a work, of the professional, that is a musical artist, in Rapper and associated musical artist of the writer, that is a musical artist and an artist, of the album, that is a musical work and a work, of What U See Is What U Get.","SELECT ?result WHERE { ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v6 <http://dbpedia.org/ontology/producer> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> """"@en . <http://dbpedia.org/resource/What_U_See_Is_What_U_Get> <http://dbpedia.org/ontology/album> ?v1 . ?v1 <http://dbpedia.org/property/writer> ?v3 . ?v0 <http://dbpedia.org/property/occupation> ""Rapper""@en . ?v6 <http://dbpedia.org/property/writer> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?producer ?song ?writer 
WHERE {
  # Find the album
  dbr:What_U_See_Is_What_U_Get a dbo:MusicalAlbum .

  # Identify producers of the album who are also musical artists
  dbr:What_U_See_Is_What_U_Get dbo:producer ?producer .
  ?producer a dbo:MusicalArtist ;
            (dbo:musicStyle|dbo:associatedMusicalArtist) ?rapper .

  # Find songs produced by these producers that are also works
  ?song dbo:work ?producer ;
        a dbo:Songs ;
        dbo:musicalWork ?musicalWork .
  
  # Identify writers of these songs who are musical artists
  ?song dbo:writer ?writer .
  ?writer a (dbo:MusicalArtist|dbo:Artist) .

  FILTER(?rapper != dbr:Rapper)
}
```",7,15,8,3,3,3,3,71,0,0,8,0,0.0,0
747,47,test,"Give me the band of the writer of the work, that is a song, of Amba Shepherd and person born on the birth date of Pavlo Khudzik.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Amba_Shepherd> . ?result <http://dbpedia.org/ontology/birthDate> ?v2 . ?v0 <http://dbpedia.org/property/writer> ?v4 . <http://dbpedia.org/resource/Pavlo_Khudzik> <http://dbpedia.org/ontology/birthDate> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?band WHERE {
  # Find works by Amba Shepherd that are songs
  ?work dbo:composer dbr:Amba_Shepherd ;
        a dbo:Songs .

  # Identify the writer of these songs
  ?writer dbo:worksForBand ?band ;
          dbo:birthDate ?writerBirthDate .

  # Get Pavlo Khudzik's birth date
  dbr:Pavlo_Khudzik dbo:birthDate ?pavloBirthDate .

  # Filter writers by matching birth dates with Pavlo Khudzik
  FILTER (?writerBirthDate = ?pavloBirthDate)

  # Ensure the writer is associated with the song
  ?work dbo:lyricsWriter ?writer .
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
77,20,test,"Give me the war of the awardee of the award of Maxim Grigorievich Vlasov and force of the mayor of the territory administered, that is an organisation, from Warsaw.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> ?v1 . ?v4 <http://dbpedia.org/property/leader> ?v5 . ?result <http://dbpedia.org/ontology/commander> ?v5 . ?v4 <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Warsaw> . <http://dbpedia.org/resource/Maxim_Grigorievich_Vlasov> <http://dbpedia.org/property/awards> ?v1 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war ?organization WHERE {
  # Find Maxim Grigorievich Vlasov and his award
  ?person a dbo:Person ;
          foaf:name ""Maxim Grigorievich Vlasov""@en .
  
  ?award dbo:recipient ?person ;
         dbo:relatedEvent ?event .

  ?event rdf:type dbo:MilitaryConflict ;
         rdfs:label ?war .

  # Find the mayor of Warsaw and their organization
  ?mayor a dbo:Mayor ;
         foaf:name ?mayorName ;
         dbo:city dbr:Warsaw .
  
  ?organization dbo:head ?mayor ;
                rdf:type dbo:Organization .

}
```",6,7,7,3,2,3,2,20,0,0,26,0,0.0,0
994,46,test,"Give me the associated musical artist of the band member, that is a band and a group and an organisation, of Meshuggah and associated musical artist of the associated musical artist of the reference to Watchtower.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://xmlns.com/foaf/0.1/name> ""Watchtower""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Meshuggah> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?artist WHERE {
  # Step 1: Find Meshuggah's band members
  VALUES (?meshuggah) { dbr:Meshuggah }
  
  ?member dbo:bandMember ?meshuggah .
  
  # Step 2 & 3: Find associated musical artists that are bands or groups for Meshuggah's members
  ?member dbo:musicalArtist ?associatedArtist1 .
  FILTER EXISTS {
    ?associatedArtist1 a ?type .
    VALUES ?type { dbo:Band dbo:MusicalGroup }
  }

  # Step 4: Find Watchtower's band members
  VALUES (?watchtower) { dbr:Watchtower }
  
  ?member2 dbo:bandMember ?watchtower .

  # Step 5 & 6: Find associated musical artists that are bands or groups for Watchtower's members
  ?member2 dbo:musicalArtist ?associatedArtist2 .
  FILTER EXISTS {
    ?associatedArtist2 a ?type2 .
    VALUES ?type2 { dbo:Band dbo:MusicalGroup }
  }

  # Combine results from both sets of associated artists
  UNION {
    ?artist = ?associatedArtist1
  }
  UNION {
    ?artist = ?associatedArtist2
  }
}
```",5,8,6,3,2,3,3,71,0,0,5,0,0.0,0
492,45,test,"Give me the commander in Franco-Hova Wars and person decedent at the capital, that is a settlement, of the country of Khemis Miliana District and person decedent at French Algeria.",SELECT ?result WHERE { <http://dbpedia.org/resource/Khemis_Miliana_District> <http://dbpedia.org/ontology/country> ?v0 . ?v0 <http://dbpedia.org/ontology/capital> ?v1 . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/French_Algeria> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . <http://dbpedia.org/resource/Franco-Hova_Wars> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?commander ?decedent
WHERE {
  # Find the commander in Franco-Hova Wars
  ?war dbp:name ""Franco-Hova Wars""@en .
  ?war dbo:commander ?commander .

  # Find a person who died at Khemis Miliana (capital of Khemis Miliana District)
  ?decedent dbo:deathPlace ?place .
  ?place rdfs:label ""Khemis Miliana""@en ;
         dbo:country <http://dbpedia.org/resource/Algeria> .

  # Ensure the place is a settlement
  ?place rdf:type dbo:Settlement .
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
184,61,test,"Give me the child of the child of the parent, that is a royalty, of Archduke Ladislaus Philipp of Austria and parent of the child of the parent of Archduchess Margaret of Austria (born 1925).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v3 . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Margaret_of_Austria_(born_1925)> . ?v3 <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Archduke_Ladislaus_Philipp_of_Austria> <http://dbpedia.org/ontology/parent> ?v0 . ?result <http://dbpedia.org/property/father> ?v5 . ?v5 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?cousin WHERE {
  # Archduke Ladislaus Philipp of Austria's parent
  ?ladislausParent dbo:child ?ladislaus .
  VALUES ?ladislaus {<http://dbpedia.org/resource/Ladislaus_Philipp_of_Austria>}

  # Child of Ladislaus's parent (Ladislaus's sibling)
  ?ladislausSibling dbo:parent ?ladislausParent .

  # Cousin of Archduke Ladislaus
  ?cousin dbo:parent ?ladislausSibling .
  
  # Archduchess Margaret of Austria's parent
  ?margaretParent dbo:child ?margaret .
  VALUES ?margaret {<http://dbpedia.org/resource/Margaret_of_Austria_(1925)>}

  # Child of Margaret's parent (Margaret's sibling)
  ?margaretSibling dbo:parent ?margaretParent .

  # Cousin of Archduchess Margaret
  ?cousin2 dbo:parent ?margaretSibling .
  
  # Ensure the cousin is the same person and is royalty
  FILTER (?cousin = ?cousin2)
  OPTIONAL { ?cousin dbp:title ?title . }
  FILTER EXISTS { ?cousin dbp:title ?title } 
}
```",6,7,7,3,2,3,3,71,0,0,1,0,0.0,0
16,49,test,Give me the person born as the birth name of the alumnus of Ohio State University and spouse of the person born as Ted Martin McGinley.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Ohio_State_University> . ?v2 <http://dbpedia.org/property/birthName> ""Ted Martin McGinley""@en . ?v0 <http://dbpedia.org/property/birthName> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthName
WHERE {
  ?alumnus dbo:almaMater dbr:Ohio_State_University .
  ?spouse dbp:birthday ""1961-10-30""^^xsd:date ; 
          foaf:name ""Ted Martin McGinley""@en .
  ?alumnus foaf:surname ?surname ;
           foaf:givenName ?firstName ;
           foaf:name ?birthName .
  ?alumnus dbo:spouse ?spouse .
}
```",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
16,65,test,Give me the person born as the birth name of Gigi Rice and spouse of the person born as Ted Martin McGinley and professional in the profession of the actor of Unnatural (TV series).,"SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/birthName> ""Ted Martin McGinley""@en . ?v4 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Gigi_Rice> <http://dbpedia.org/property/birthName> ?v3 . ?v0 <http://dbpedia.org/property/occupation> ?v6 . ?result <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Unnatural_(TV_series)> <http://dbpedia.org/property/starring> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v6 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person
WHERE {
  # Find Gigi Rice's birth name
  dbr:Gigi_Rice dbo:birthName ?birthName .

  # Find Ted Martin McGinley and his spouse
  dbr:Ted_Martin_McGinley dbo:spouse ?spouse .

  # Find the profession of an actor from ""Unnatural"" TV series
  {
    SELECT DISTINCT ?profession WHERE {
      ?actor dbo:role ?role .
      ?role dbp:title dbr:Unnatural_(TV_series) ;
            dbo:occupation ?profession .
      FILTER (STRSTARTS(STR(?profession), ""http://dbpedia.org/ontology/Actor""))
    }
  } AS ?subquery

  # Find the person who matches all criteria
  ?person dbo:birthName ?birthName ;
          dbo:spouse dbr:Ted_Martin_McGinley ;
          a ?profession .
}
```",7,7,8,3,3,3,3,71,0,0,1,0,0.0,0
16,60,test,Give me the person born as the birth name of the alumnus of Ohio State University and spouse of the person born as the birth name of Ted McGinley.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Ohio_State_University> . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/property/birthName> ?v3 . ?result <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  ?alumnus dbo:almaMater dbr:Ohio_State_University ;
           foaf:name ?birthName .
  
  ?spouse dbo:spouseOrPartner ?alumnus ;
          foaf:name ""Thomas Edward""@en .

  ?person foaf:name ?birthName .
}
```",6,6,7,3,2,3,3,71,0,0,1,0,0.0,0
547,60,test,Give me the resting place of the awardee of the award of Gerald Graham and resting place of the child of the child of William Haliburton.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Gerald_Graham> <http://dbpedia.org/property/awards> ?v0 . ?v1 <http://dbpedia.org/property/awards> ?v0 . ?v3 <http://dbpedia.org/ontology/child> ?v2 . ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . ?v3 <http://dbpedia.org/property/father> ""William Haliburton""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT DISTINCT ?restingPlace
WHERE {
  # Part 1: Resting place of an awardee of Gerald Graham
  {
    ?award dbo:awardedBy dbp:Gerald_Graham .
    ?award dbo:awardWinner ?person .
    ?person dbo:deathPlace ?restingPlace .
  }
  
  UNION
  
  # Part 2: Resting place of the grandchild of William Haliburton
  {
    ?grandparent foaf:name ""William Haliburton""@en .
    ?grandparent dbo:child ?parent .
    ?parent dbo:child ?grandchild .
    ?grandchild dbo:deathPlace ?restingPlace .
  }
}
```",6,6,7,3,2,3,3,71,0,0,2,0,0.0,0
659,49,test,"Give me the commander in the force of Arthur Wellesley, 1st Duke of Wellington and military force of the force, that is a societal event and an event and a military conflict, of the reference to Rutger Jan Schimmelpenninck.","SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""Rutger Jan Schimmelpenninck""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Arthur_Wellesley,_1st_Duke_of_Wellington> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/ontology/commander> ?v0 . ?result <http://dbpedia.org/ontology/battle> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?militaryForce ?event ?schimmelpenninckReference
WHERE {
  # Arthur Wellesley as a commander of a military force
  dbr:Arthur_Wellesley_1st_Duke_of_Wellington dbo:commander ?commander .
  
  # The military force he commanded
  ?commander dbo:militaryForce ?militaryForce .

  # Societal events and military conflicts related to him
  ?event a dbo:MilitaryConflict ;
         dbo:participatedIn ?commander ;
         (dbo:societalEvent|dbo:militaryConflict) ?relatedEvent .
  
  # Reference to Rutger Jan Schimmelpenninck in these contexts
  OPTIONAL {
    ?relatedEvent dbo:reference dbr:Rutger_Jan_Schimmelpenninck .
    BIND(dbr:Rutger_Jan_Schimmelpenninck AS ?schimmelpenninckReference)
  }
}
```",5,8,6,3,2,3,3,71,0,0,38,0,0.0,0
547,67,test,Give me the resting place of James Burton (Egyptologist) and resting place of the awardee of the award of Gerald Graham and resting place of the actor of the show with Emily Richard.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/awards> ?v1 . <http://dbpedia.org/resource/Gerald_Graham> <http://dbpedia.org/property/awards> ?v1 . ?v6 <http://dbpedia.org/ontology/restingPlace> ?result . ?v0 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emily_Richard> . <http://dbpedia.org/resource/James_Burton_(Egyptologist)> <http://dbpedia.org/ontology/restingPlace> ?result . ?v3 <http://dbpedia.org/ontology/restingPlace> ?result . ?v0 <http://dbpedia.org/property/starring> ?v6 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?restingPlace
WHERE {
  # Resting place of James Burton (Egyptologist)
  { 
    ?person a dbo:Egyptologist ;
            foaf:name ""James Burton"" .
    OPTIONAL { ?person dbo:deathPlace ?restingPlace . }
  }

  UNION

  # Resting place of the awardee of the Gerald Graham Award
  {
    ?award dbr:Gerald_Graham_Award ;
           dbo:recipient ?awardee .
    OPTIONAL { ?awardee dbo:deathPlace ?restingPlace . }
  }

  UNION

  # Resting place of an actor in a show with Emily Richard
  {
    ?show dbo:starring dbr:Emily_Richard ;
          dbo:starring ?actor .
    OPTIONAL { ?actor dbo:deathPlace ?restingPlace . }
  }
}
```",7,7,8,3,3,3,3,71,0,0,1,0,0.0,0
994,62,test,"Give me the associated musical artist of the associated musical artist of the reference to Watchtower and band member of Don Dokken and associated musical artist of the band member, that is a band and a group and an organisation, of the band, that is an organisation, of Fredrik Thordendal.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v4 <http://xmlns.com/foaf/0.1/name> ""Watchtower""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Don_Dokken> . ?v1 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Fredrik_Thordendal> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?finalArtist WHERE {
  # Step 1: Find a band member of Watchtower
  ?watchtowerMember dbo:bandMember <http://dbpedia.org/resource/Watchtower_(band)> .

  # Step 2: Find an associated musical artist who is also a band member of Don Dokken
  ?associatedArtist dbo:associatedBand ?watchtowerMember .
  ?associatedArtist dbo:bandMember <http://dbpedia.org/resource/Don_Dokken> .

  # Step 3: Identify a band that Fredrik Thordendal is part of, which is both a group and an organization
  ?meshuggahMember dbo:bandMember <http://dbpedia.org/resource/Meshuggah> .
  FILTER EXISTS { ?meshuggahMember rdf:type dbo:Band . }
  FILTER EXISTS { ?meshuggahMember rdf:type dbp:Organization . }

  # Final Step: Find the associated musical artist of the band member from Step 2 who is also part of Meshuggah
  ?finalArtist dbo:associatedBand ?meshuggahMember .
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
328,71,test,"Give me the commander in the force of the person decedent at Budapest and awardee of the award of the commander in Volcano and Ryukyu Islands campaign and leader of the office, that is a government agency, of the leader, that is an office holder and a politician, of Gustav Jonson.",SELECT ?result WHERE { ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/property/awards> ?v2 . ?v8 <http://dbpedia.org/ontology/leader> ?result . ?v5 <http://dbpedia.org/ontology/commander> ?v4 . ?v1 <http://dbpedia.org/property/awards> ?v2 . <http://dbpedia.org/resource/Gustav_Jonson> <http://dbpedia.org/property/leader> ?v7 . ?v5 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Volcano_and_Ryukyu_Islands_campaign> <http://dbpedia.org/ontology/commander> ?v1 . ?v4 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Budapest> . ?v7 <http://dbpedia.org/property/office> ?v8 . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  # Gustav Jonson as an office holder and politician
  ?gustavJonson a dbo:OfficeHolder ;
                foaf:name ""Gustav Jonson"" .

  # Commander in force at Budapest for Gustav Jonson's decedent
  ?decedent dbo:commanderInForce ?budaCommander .
  ?budaCommander dbo:location dbr:Budapest .

  # Awardee of the commander award for Volcano and Ryukyu Islands campaign
  ?awardee dbo:award dbr:Commander_Award ;
           dbo:campaign dbr:Volcano_Islands_Campaign ;
           dbo:campaign dbr:Ryukyu_Islands_Campaign .

  # Leader of a government agency
  ?leaderOfAgency a dbo:GovernmentAgency ;
                  dbo:leader ?commander .

  # Linking all conditions to find the commander
  FILTER (?budaCommander = ?awardee && ?awardee = ?commander)
}
```",9,12,10,3,3,3,3,71,0,0,1,0,0.0,0
391,66,test,"Give me the actor of the movie, that is a movie and a work and a television show, with the professional in  and actor of the claim to fame, that is a work, of Michael Ballhaus and native of the figure known as Hub City.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/nickname> ""Hub City""@en . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v6 <http://dbpedia.org/ontology/starring> ?result . ?v2 <http://dbpedia.org/property/starring> ?result . ?v1 <http://dbpedia.org/property/occupation> """"@en . ?v2 <http://dbpedia.org/property/starring> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . <http://dbpedia.org/resource/Michael_Ballhaus> <http://dbpedia.org/ontology/knownFor> ?v6 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?actor
WHERE {
  ?movie rdf:type dbo:Film .
  ?movie rdf:type dbo:TelevisionShow .
  ?movie dbo:starring ?actor .

  ?ballhausClaimToFame dbo:claimToFame dbr:Michael_Ballhaus ;
                       rdf:type dbo:Work .

  ?person dbo:nativePlace dbr:Hub_City .
  ?ballhausClaimToFame dbo:creator ?person .
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
801,69,test,"Give me the producer of the work, that is a musical work and a song and a work, of 50 Cent and professional in the alter ego of the true self of The Shadow and associated musical artist of the writer, that is a musical artist and an artist, of the album, that is a musical work and a work, of What U See Is What U Get.","SELECT ?result WHERE { <http://dbpedia.org/resource/What_U_See_Is_What_U_Get> <http://dbpedia.org/ontology/album> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v4 <http://xmlns.com/foaf/0.1/givenName> ""The Shadow""@en . ?v7 <http://dbpedia.org/ontology/producer> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v1 <http://dbpedia.org/property/writer> ?v2 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v7 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/50_Cent> . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v4 <http://dbpedia.org/property/alterEgo> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/property/occupation> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?producer WHERE {
    ?song a dbo:Song .
    ?song dbo:album ?album .
    ?album rdfs:label ""What U See Is What U Get""@en .
    
    ?song dbo:producer ?producer .
    ?producer rdfs:label ""50 Cent""@en .

    OPTIONAL { 
        ?producer dbo:alterEgo ?shadow .
        ?shadow rdfs:label ""The Shadow""@en .
    }
}
```",8,15,9,3,3,3,3,71,0,0,1,0,0.0,0
488,21,test,Give me the administration of Emperor Go-Yōzei and birth place of the commander in Boshin War.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Emperor_Go-Yōzei> . <http://dbpedia.org/resource/Boshin_War> <http://dbpedia.org/ontology/commander> ?v1 . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?reignPeriod ?birthPlace WHERE {
  # Part 1: Administration period of Emperor Go-Yōzei
  dbr:Emperor_Go-Yōzei dbo:reign ?reignPeriod .

  # Part 2: Birthplace of a commander in the Boshin War (e.g., Saigō Takamori)
  OPTIONAL {
    dbr:Saigō_Takamori dbo:birthPlace ?birthPlace .
  }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
429,9,test,"Give me the country of the military force, that is an organisation, of Camden Expedition and administration of the father of Martha Johnson Patterson.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://dbpedia.org/ontology/country> ?result . ?v3 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Camden_Expedition> . ?result <http://dbpedia.org/property/leader> ?v1 . <http://dbpedia.org/resource/Martha_Johnson_Patterson> <http://dbpedia.org/property/father> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?country1 ?country2 WHERE {
  # Find the military force involved in the Camden Expedition
  ?expedition dbo:partOf ?militaryForce .
  FILTER(STRSTARTS(LCASE(?expedition), ""camden expedition""))
  
  # Get the country of the military force
  ?militaryForce dbo:country ?country1 .

  # Find Martha Johnson Patterson's father and his administration
  dbr:Martha_Johnson_Patterson dbo:father ?father .
  ?father dbo:positionHeld ?administration .

  # Get the country of the administration
  ?administration dbo:country ?country2 .
}
```",4,5,5,2,2,2,2,9,0,0,1,0,0.0,0
427,53,test,"Give me the reference to the name of the party of Michele Pinto and party of Giulio Andreotti and party of the person born, that is an office holder and a politician, as Romano Antonio Prodi.","SELECT ?result WHERE { <http://dbpedia.org/resource/Giulio_Andreotti> <http://dbpedia.org/ontology/party> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/party> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://xmlns.com/foaf/0.1/name> ?v2 . ?v1 <http://dbpedia.org/property/birthName> ""Romano Antonio Prodi""@en . <http://dbpedia.org/resource/Michele_Pinto> <http://dbpedia.org/ontology/party> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?partyName
WHERE {
  VALUES ?person { 
    dbr:Michele_Pinto 
    dbr:Giulio_Andreotti 
    dbr:Romano_Prodi 
  }
  
  OPTIONAL { ?person dbo:party ?party . }
  
  FILTER (
    (?person = dbr:Romano_Prodi && 
     EXISTS { ?person dbo:officeHolder true } &&
     EXISTS { ?person dbo:politician true }) ||
    ?person != dbr:Romano_Prodi
  )
  
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
```",6,8,7,3,3,3,3,71,0,0,2,0,0.0,0
285,17,test,Give me the spouse of the professional in the award of Stan Lee and parent of Alexander Onassis.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/occupation> ?v0 . <http://dbpedia.org/resource/Stan_Lee> <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Alexander_Onassis> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/spouse> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  ?person dbo:child dbr:Alexander_Onassis .
  ?person dbo:spouse ?spouse .
}
```",4,4,5,3,2,3,2,20,2,3,0,0.4,1.0,0.5714285714285715
232,67,test,"Give me the actor of the claim to fame, that is a film and a military conflict, of the professional in Actor, narrator and producer and native of the residence, that is a settlement and British, of the native, that is a politician and an office holder, of France and child of Jon Pertwee.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/residence> ?v3 . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v0 <http://dbpedia.org/property/occupation> ""Actor, narrator and producer""@en . ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/France> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://dbpedia.org/ontology/knownFor> ?v6 . <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/ontology/child> ?result . ?v6 <http://dbpedia.org/ontology/starring> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actor WHERE {
  # Step 1: Identify Jon Pertwee
  dbr:Jon_Pertwee a dbo:Person .

  # Step 2: Find children of Jon Pertwee
  ?child dbo:parent dbr:Jon_Pertwee .
  
  # Step 3: Filter for French politicians and office holders
  ?child dbo:nationality dbr:France ;
         dbo:occupation dbr:Politician ;
         dbo:officeHolder true .

  # Step 4: Determine the British settlement where this politician resides
  ?politicianResidence a dbo:Settlement ;
                      dbo:country dbr:United_Kingdom ;
                      dbo:resident ?child .
  
  # Step 5: Identify professionals in Actor, Narrator, Producer from this settlement
  ?professional a dbo:Person ;
                dbo:residence ?politicianResidence ;
                (dbo:profession dbr:Actor ; 
                 dbo:profession dbr:Narrator ;
                 dbo:profession dbr:Producer) .

  # Step 6: Find the claim to fame of this professional
  ?claimToFame a dbo:Film ;
               dbo:actor ?professional ;
               dbo:militaryConflict ?militaryConflict .
  
  BIND(?professional AS ?actor)
}
```",7,13,8,3,3,3,3,71,0,0,1,0,0.0,0
281,67,test,"Give me the entity in the birth place, that is a country, of the leader, that is a politician, of 1962 New South Wales state election and war of the profession, that is a military unit, of the professional, that is an office holder and a politician, in New Zealand Army and war of Beauchamp Seymour, 1st Baron Alcester.","SELECT ?result WHERE { <http://dbpedia.org/resource/1962_New_South_Wales_state_election> <http://dbpedia.org/property/leader> ?v0 . ?v0 <http://dbpedia.org/ontology/birthPlace> ?v6 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://dbpedia.org/property/occupation> ?v3 . ?v1 <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/New_Zealand_Army> . <http://dbpedia.org/resource/Beauchamp_Seymour,_1st_Baron_Alcester> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> ?v6 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?birthPlaceCountry WHERE {
    # Find the leader of the 1962 New South Wales state election who is a politician
    ?leader dbo:officeHolderOf dbr:1962_New_South_Wales_state_election .
    ?leader rdf:type dbo:Politician .

    # Get the birthplace of this leader and ensure it's a country
    ?leader dbo:birthPlace ?birthPlace .
    ?birthPlace rdf:type dbo:Country .
    
    BIND(?birthPlace AS ?birthPlaceCountry)

    # Find Beauchamp Seymour, 1st Baron Alcester's war involvement in the New Zealand Army
    ?beauchamp dbr:Beauchamp_Seymour,_1st_Baron_Alcester ;
               dbo:militaryUnit ?militaryUnit ;
               dbo:war ?war .

    # Ensure the military unit is part of the New Zealand Army
    ?militaryUnit dbo:partOf dbr:New_Zealand_Army .
    
    # Link the war to the birthplace country
    ?war dbo:location ?birthPlaceCountry .
}
```",7,12,8,3,3,3,3,71,0,0,1,0,0.0,0
487,16,test,"Give me the administration of the person born, that is a soccer player, as Philip Brian Scott and country of the administration of Patricia McCoy.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/country> ?result . ?result <http://dbpedia.org/property/governor> ?v3 . ?v3 <http://dbpedia.org/property/birthName> ""Philip Brian Scott""@en . ?v2 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Patricia_McCoy> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?administration (GROUP_CONCAT(?countryLabel; separator="", "") AS ?countries)
WHERE {
  # Find Philip Brian Scott's administration
  OPTIONAL {
    ?person1 a dbo:SoccerPlayer ;
             foaf:name ""Philip Brian Scott"" .
    ?person1 dbo:position ?administration .
  }

  # Find Patricia McCoy's country of administration
  OPTIONAL {
    ?person2 a dbo:Politician ;  # Assuming she is a politician or similar role
             foaf:name ""Patricia McCoy"" .
    ?person2 dbo:country ?country .
    ?country rdfs:label ?countryLabel .
    FILTER (lang(?countryLabel) = 'en')
  }
}
```",4,5,5,2,2,3,2,20,0,1,1,0.0,0.0,0
232,50,test,"Give me the native of the residence, that is a settlement and British, of Sylvie Bermann and actor of the claim to fame, that is a film and a military conflict, of the professional in Actor, narrator and producer.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v4 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Sylvie_Bermann> <http://dbpedia.org/property/residence> ?v3 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/ontology/knownFor> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v0 <http://dbpedia.org/property/occupation> ""Actor, narrator and producer""@en . ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?nativeOfResidence ?actorName WHERE {
  # Sylvie Bermann's residence that is a settlement and British
  ?residence dbo:nationality dbr:United_Kingdom ;
             dbo:settlement true ;
             dbo:resident dbr:Sylvie_Bermann .
  
  # Get the native of this residence
  ?nativeOfResidence dbo:nativePlace ?residence .

  # Actor with a claim to fame in both film and military conflict, also a narrator and producer
  ?actor dbo:film ?film ;
         dbo:militaryConflict ?conflict ;
         rdf:type dbo:Actor ;
         dbo:narrator true ;
         dbo:producer true .
  
  # Link the actor's name for clarity
  ?actor rdfs:label ?actorName .

  FILTER (lang(?actorName) = 'en')
}
```",5,9,6,3,2,3,3,71,0,0,1,0,0.0,0
281,71,test,"Give me the war of the awardee of the award of Jonathon Band and entity in the birth place, that is a country, of the leader, that is a politician, of 1962 New South Wales state election and war of the profession, that is a military unit, of the professional, that is an office holder and a politician, in New Zealand Army.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/birthPlace> ?v5 . <http://dbpedia.org/resource/Jonathon_Band> <http://dbpedia.org/property/awards> ?v1 . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v8 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/1962_New_South_Wales_state_election> <http://dbpedia.org/property/leader> ?v4 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/place> ?v5 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/property/awards> ?v1 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v7 <http://dbpedia.org/property/occupation> ?v8 . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v7 <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/New_Zealand_Army> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?warOfAwardee ?countryOfBirth ?warOfMilitaryUnit
WHERE {
  # Jonathon Band's award and related war
  ?jonathonBand dbo:award ?award .
  ?award dbo:recipient ?awardee .
  ?awardee dbo:occupation ?occupation .
  OPTIONAL { ?occupation dbo:relatedWar ?warOfAwardee . }

  # Leader of the 1962 NSW state election and their birthplace country
  ?election dbp:electionDate ""1962"" ;
            dbo:leader ?leader .
  ?leader a dbo:Politician ;
          dbo:birthPlace ?birthPlace .
  FILTER (isBlank(?birthPlace) || ?birthPlace a dbo:Country)
  BIND(IF(isBlank(?birthPlace), """", ?birthPlace) AS ?countryOfBirth)

  # Politician/Office Holder in NZ Army and related war
  ?nzPolitician a dbo:Politician, dbo:OfficeHolder ;
                dbo:profession ?militaryUnit .
  FILTER (?militaryUnit a dbo:MilitaryUnit)
  OPTIONAL { ?militaryUnit dbo:relatedWar ?warOfMilitaryUnit }
}
```",9,14,10,3,3,3,3,71,0,0,1,0,0.0,0
30,9,test,Give me the professional in the profession of Édouard Alphonse James de Rothschild and native of the birthplace of Silvia Cohen.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v3 . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . <http://dbpedia.org/resource/Silvia_Cohen> <http://dbpedia.org/ontology/birthPlace> ?v1 . <http://dbpedia.org/resource/Édouard_Alphonse_James_de_Rothschild> <http://dbpedia.org/property/occupation> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?professional WHERE {
  # Find Édouard Alphonse James de Rothschild's profession
  dbr:Édouard_Alphonse_James_de_Rothschild dbo:profession ?edwardProfession .

  # Find Silvia Cohen's birthplace
  dbr:Silvia_Cohen dbo:birthPlace ?silviaBirthPlace .

  # Find a professional with the same profession and from the same birthplace
  ?professional dbo:profession ?edwardProfession ;
                dbo:birthPlace ?silviaBirthPlace .
}
```",4,4,5,2,2,2,2,9,0,0,1,0,0.0,0
528,58,test,Give me the war of the commander in Battle of La Rinconada de Ate and war of Irene Morales and force of the person born as the birth name of Narciso Campero.,SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Battle_of_La_Rinconada_de_Ate> <http://dbpedia.org/ontology/commander> ?v5 . <http://dbpedia.org/resource/Narciso_Campero> <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/ontology/commander> ?v2 . ?v2 <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Irene_Morales> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?war ?force WHERE {
  # Commanders in the Battle of La Rinconada de Ate
  ?battle dbo:wikiPageRedirects dbr:Battle_of_La_Rinconada_de_Ate .
  ?battle dbo:commander ?commander .

  UNION

  # Wars involving Irene Morales
  ?person foaf:name ""Irene Morales""@en .
  ?war dbo:participant ?person .
  BIND(?person AS ?war)

  UNION

  # Military force associated with Narciso Campero's birth name
  ?campero foaf:name ""Narciso Campero""@en .
  ?campero dbo:birthName ?birthName .
  ?force dbo:member ?campero .
  BIND(?force AS ?person)
}
```",6,6,7,3,3,3,3,71,0,0,2,0,0.0,0
617,45,test,Give me the spouse of Laodice IV and child of Antiochus III the Great and parent of the child of the commander in Battle of Panium.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?v1 . <http://dbpedia.org/resource/Laodice_IV> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Antiochus_III_the_Great> . ?result <http://dbpedia.org/ontology/child> ?v1 . <http://dbpedia.org/resource/Battle_of_Panium> <http://dbpedia.org/ontology/commander> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Laodice IV's spouse who is also a child of Antiochus III the Great
  dbr:Laodice_IV dbo:spouse ?spouse .
  
  FILTER EXISTS { ?spouse dbo:parent dbr:Antiochus_III_the_Great . }
  
  # Commander in Battle of Panium and his child
  ?commander dbo:commandedBattle dbr:Battle_of_Panium .
  ?child dbo:parent ?commander .

  # The spouse must be the parent of the commander's child
  FILTER EXISTS { ?spouse dbo:parent ?child . }
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
161,59,test,"Give me the military force of the force, that is a societal event and a military conflict, of the predecessor of Indalecio Prieto and military force of the force, that is a societal event and an event and a military conflict, of the person decedent at Francoist Spain.",SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Indalecio_Prieto> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v2 . ?result <http://dbpedia.org/ontology/battle> ?v5 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Francoist_Spain> . ?v5 <http://dbpedia.org/ontology/commander> ?v0 . ?v2 <http://dbpedia.org/ontology/commander> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?predecessorMilitaryForce ?decedentMilitaryForce 
WHERE {
  # Find Indalecio Prieto's predecessor
  ?prieto dbo:predecessor ?predecessor .
  
  # Military force related to the predecessor that is a societal event and military conflict
  ?predecessorMilitaryForce dbo:type dbr:Military_conflict ;
                            dbo:social_event ?socialEventPredecessor .

  # Find person decedent at Francoist Spain
  ?decedent dbo:deathPlace dbr:Francoist_Spain .
  
  # Military force related to the decedent that is a societal event, an event, and military conflict
  ?decedentMilitaryForce dbo:type dbr:Military_conflict ;
                         dbo:social_event ?socialEventDecedent ;
                         dbo:event ?eventDecedent .

}
```",6,11,7,3,2,3,3,71,0,0,514,0,0.0,0
801,70,test,"Give me the associated musical artist of the writer, that is a musical artist and an artist, of the album, that is a musical work and a work, of What U See Is What U Get and producer of the work, that is a musical work and a song and a work, of the professional, that is a musical artist, in Rapper and professional in the alter ego of The Shadow.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. <http://dbpedia.org/resource/What_U_See_Is_What_U_Get> <http://dbpedia.org/ontology/album> ?v1 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v7 <http://dbpedia.org/property/writer> ?v0 . ?v1 <http://dbpedia.org/property/writer> ?v3 . ?result <http://dbpedia.org/property/occupation> ?v4 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v4 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v7 <http://dbpedia.org/ontology/producer> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v0 <http://dbpedia.org/property/occupation> ""Rapper""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?associatedArtist WHERE {
  # Step 1: Identify the album ""What U See Is What U Get""
  ?album a dbo:MusicalWork ;
         rdfs:label ""What U See Is What U Get""@en .
  
  # Step 2: Find its producer who is also a rapper
  ?producer dbo:producedBy ?album ;
            a dbo:MusicalArtist, dbo:Person ;
            dbo:profession dbr:Rapper .

  # Step 3: Identify the alter ego of The Shadow for this producer
  OPTIONAL { ?producer rdfs:label ""The Shadow""@en . }

  # Step 4: Find any associated musical artists with this producer as a writer
  ?associatedArtist dbo:collaboratedWith ?producer ;
                   a dbo:MusicalArtist, dbo:Artist .
}
```",8,16,9,3,3,3,3,71,0,0,8,0,0.0,0
981,20,test,"Give me the birth place of the person born, that is a beauty queen, as the author of Kamikaze Girls and entity in the region of the time zone in Salak, North Sumatra.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/birthName> ?v4 . <http://dbpedia.org/resource/Kamikaze_Girls> <http://dbpedia.org/property/author> ?v4 . ?v2 <http://dbpedia.org/property/timeZone> ?v1 . ?v5 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Salak,_North_Sumatra> <http://dbpedia.org/ontology/timeZone> ?v1 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BeautyQueen>. ?result <http://dbpedia.org/ontology/country> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace WHERE {
  ?author a dbo:Writer ;
          foaf:name ""Hiromi Goto"" ;
          dbo:nationality ?nationality .
  
  ?book dbo:author ?author ;
        rdfs:label ""Kamikaze Girls""@en .

  OPTIONAL { 
    ?location dbo:timeZone dbr:Western_Indonesian_Time ;
              dbo:wikiPageRedirects ?entity .
    FILTER EXISTS {
      ?entity dbo:birthPlace ?birthPlace .
    }
  }

  FILTER EXISTS {
    ?author dbo:title ""Miss"" ; # Assuming beauty queen title
            dbo:award ?award .
  }
}
```",6,7,7,3,2,3,2,20,0,0,19,0,0.0,0
666,16,test,"Give me the figure known as the nickname of England national beach soccer team and player in the manager, that is a sports manager, of 2016–17 Hull City A.F.C. season.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v2 <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/2016–17_Hull_City_A.F.C._season> <http://dbpedia.org/ontology/manager> ?v2 . ?result <http://dbpedia.org/property/nickname> ?v3 . <http://dbpedia.org/resource/England_national_beach_soccer_team> <http://dbpedia.org/property/nickname> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?player WHERE {
    # Find the nickname of the England national beach soccer team
    ?team a dbo:NationalSoccerTeam ;
          rdfs:label ""England national beach soccer team""@en .
    
    OPTIONAL { 
        ?team dbo:nickname ?nickname . 
    }
    
    # Find the manager of Hull City A.F.C. during 2016-17 season
    ?manager a dbo:FootballManager ;
             dbo:managedTeam dbr:Hull_City_A.FC ;
             dbo:managementPeriod ?period .
             
    FILTER (CONTAINS(LCASE(?period), ""2016"") || CONTAINS(LCASE(?period), ""2017""))
    
    # Check if there is any player associated with both
    OPTIONAL {
        ?player a dbo:SoccerPlayer ;
                dbo:nationality dbr:England ;
                dbo:sportTeam ?team .
                
        FILTER (?nickname = ?player)
    }
}
```",4,5,5,2,2,3,2,20,0,0,2,0,0.0,0
427,22,test,"Give me the reference to Partito Popolare Italiano and party of the person born, that is an office holder and a politician, as Romano Antonio Prodi.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://xmlns.com/foaf/0.1/name> ""Partito Popolare Italiano""@en . ?v1 <http://dbpedia.org/ontology/party> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/property/birthName> ""Romano Antonio Prodi""@en . }","```sparql
PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?partitoPopolareItaliano ?partyOfProdi
WHERE {
  ?partitoPopolareItaliano rdfs:label ""Partito Popolare Italiano""@it .
  
  ?prodi a dbpedia-owl:Politician ;
         foaf:name ""Romano Antonio Prodi"" ;
         dbp:officeHolder true .

  OPTIONAL { ?prodi dbp:party ?partyOfProdi . }
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
528,40,test,"Give me the war of the military force of the entity, that is a societal event, in Chile and war of Orozimbo Barbosa and force of Narciso Campero.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> ?v2 . ?v1 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Orozimbo_Barbosa> <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Chile> . ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Narciso_Campero> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT DISTINCT ?war WHERE {
  # Find the military forces associated with Orozimbo Barbosa
  ?barbosa dbo:militaryService [
    a dbo:MilitaryUnit ;
    dbo:participatedIn ?war .
  ].
  
  # Find the military forces associated with Narciso Campero
  ?campero dbo:militaryService [
    a dbo:MilitaryUnit ;
    dbo:participatedIn ?war .
  ].

  # Ensure Orozimbo Barbosa and Narciso Campero are distinct individuals
  ?barbosa rdf:type dbo:Person ;
           rdfs:label ""Orozimbo Barbosa""@en.
  
  ?campero rdf:type dbo:Person ;
           rdfs:label ""Narciso Campero""@en.

  # Ensure the war is a societal event in Chile
  ?war rdf:type dbo:Battle ;
       dbo:place dbr:Chile .
}
```",5,6,6,3,3,3,3,71,0,0,2,0,0.0,0
328,63,test,"Give me the commander in the force of Ferenc Szálasi and leader of the office, that is a government agency, of Joseph Stalin and awardee of the award of the commander in Volcano and Ryukyu Islands campaign.",SELECT ?result WHERE { <http://dbpedia.org/resource/Joseph_Stalin> <http://dbpedia.org/property/office> ?v2 . ?result <http://dbpedia.org/property/awards> ?v3 . ?v6 <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://dbpedia.org/property/awards> ?v3 . <http://dbpedia.org/resource/Volcano_and_Ryukyu_Islands_campaign> <http://dbpedia.org/ontology/commander> ?v4 . ?v2 <http://dbpedia.org/ontology/leader> ?result . ?v6 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Ferenc_Szálasi> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person WHERE {
  # Ferenc Szálasi's commanders
  ?commander dbo:leader ?szalasi .
  ?szalasi dbr:Ferenc_Szálasi .

  # Leader of a government agency under Joseph Stalin
  ?agencyLeader dbo:headOfGovernmentAgency ?stalinOffice .
  ?stalinOffice dbo:leader ?stalin .
  ?stalin dbr:Joseph_Stalin .

  # Awardee in the Volcano and Ryukyu Islands campaign
  ?person dbo:awardeeOfMilitaryAward ?award .
  ?award dbo:campaign ?volcanoRyukyuCampaign .
  ?volcanoRyukyuCampaign rdfs:label ?campaignLabel .
  
  FILTER(CONTAINS(LCASE(?campaignLabel), ""volcano"") && CONTAINS(LCASE(?campaignLabel), ""ryukyu""))

  # Ensure the person is the same across all conditions
  FILTER (?commander = ?agencyLeader && ?commander = ?person)
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
659,29,test,"Give me the commander in the war, that is an event and a military conflict, of 1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish) and military force of Napoleonic Wars and commander in German campaign of 1813.",SELECT ?result WHERE { <http://dbpedia.org/resource/German_campaign_of_1813> <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/1st_Light_Cavalry_Lancers_Regiment_of_the_Imperial_Guard_(Polish)> <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Napoleonic_Wars> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
    ?regiment dbo:commander ?commander .
    ?regiment rdfs:label ""1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish)""@en .
    
    ?event dbo:participatedInMilitaryConflict ?conflict ;
           rdf:type dbo:MilitaryConflict .

    ?conflict dbo:hasParticipant ?commander .
    FILTER(CONTAINS(LCASE(?conflict), ""napoleonic wars"") || CONTAINS(LCASE(?conflict), ""german campaign of 1813"")).

    OPTIONAL {
        ?campaign dbo:commander ?commander ;
                  rdfs:label ""German campaign of 1813""@en .
    }
}
```",4,6,5,2,3,3,3,71,0,0,6,0,0.0,0
659,52,test,"Give me the commander in the force of the native, that is an office holder, of Kingdom of Ireland and military force of Napoleonic Wars and commander in the war, that is an event and a military conflict, of 1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish).",SELECT ?result WHERE { <http://dbpedia.org/resource/1st_Light_Cavalry_Lancers_Regiment_of_the_Imperial_Guard_(Polish)> <http://dbpedia.org/ontology/battle> ?v5 . ?v3 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Kingdom_of_Ireland> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Napoleonic_Wars> . ?v5 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://dbpedia.org/ontology/commander> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commander WHERE {
  ?commander a dbo:MilitaryPerson ;
             dbo:officeHolderOf dbr:Kingdom_of_Ireland ;
             dbo:militaryCommanderOf ?conflict .

  ?conflict dbo:participatingMilitaryUnit dbr:1st_Light_Cavalry_Lancers_Regiment_of_the_Imperial_Guard_(Polish) .
  
  FILTER EXISTS {
    ?conflict dbo:war dbr:Napoleonic_Wars
  }
}
```",6,9,7,3,3,3,3,71,0,0,13,0,0.0,0
404,71,test,"Give me the spouse of the person born, that is a royalty, as the birth name of Princess Victoria Louise of Prussia and child of the father of the spouse of Princess Victoria Louise of Prussia and parent of the child, that is a royalty, of the parent, that is a royalty, of Prince George William of Hanover.",SELECT ?result WHERE { <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?v7 . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v4 <http://dbpedia.org/ontology/child> ?v5 . ?result <http://dbpedia.org/ontology/child> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Prince_George_William_of_Hanover> <http://dbpedia.org/ontology/parent> ?v4 . ?v2 <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/ontology/parent> ?v8 . ?v7 <http://dbpedia.org/property/father> ?v8 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Step 1: Identify Princess Victoria Louise of Prussia
  ?princess a dbo:Princess ;
           foaf:name ""Victoria Louise of Prussia""@en ;
           dbo:birthName ?birthName ;
           dbo:royalty true .

  # Step 2: Find Her Spouse
  ?princess dbo:spouse ?spouse .

  # Step 3: Identify the Father of Her Spouse
  ?spouse dbo:father ?fatherOfSpouse .

  # Step 4: Determine the Child of This Father (Royalty)
  ?child a dbo:Person ;
         dbo:parent ?fatherOfSpouse ;
         dbo:royalty true .

  # Step 5: Find the Parent of This Child (Royalty)
  ?parent a dbo:Person ;
          dbo:child ?child ;
          dbo:royalty true .

  # Step 6: Identify the Child of This Parent (Royalty)
  ?finalChild a dbo:Person ;
              dbo:parent ?parent ;
              dbo:royalty true .

  # Step 7: Determine the Spouse of Prince George William of Hanover
  dbr:Prince_George_William_of_Hanover dbo:spouse ?georgeSpouse .

  # Step 8: Find the Father of This Spouse
  ?georgeSpouse dbo:father ?fatherOfGeorgeSpouse .

  # Step 9: Identify the Child of This Father (Royalty)
  ?royalChild a dbo:Person ;
              dbo:parent ?fatherOfGeorgeSpouse ;
              dbo:royalty true .

  # Final Output: The spouse of the person identified in step 9
  ?royalChild dbo:spouse ?finalSpouse .
}
```",9,12,10,3,3,3,3,71,0,0,1,0,0.0,0
16,55,test,Give me the person born as the birth name of Gigi Rice and professional in the profession of Satomi Ishihara and spouse of the person born as Ted Martin McGinley.,"SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Satomi_Ishihara> <http://dbpedia.org/property/occupation> ?v5 . ?result <http://dbpedia.org/property/occupation> ?v5 . <http://dbpedia.org/resource/Gigi_Rice> <http://dbpedia.org/property/birthName> ?v2 . ?result <http://dbpedia.org/property/birthName> ?v2 . ?v3 <http://dbpedia.org/property/birthName> ""Ted Martin McGinley""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  # Find Gigi Rice's birth name
  ?gigiResource a dbo:Person ;
                foaf:name ""Gigi Rice"" ;
                dbo:birthName ?birthName .

  # Find Satomi Ishihara's profession
  ?satomiResource a dbo:Person ;
                  foaf:name ""Satomi Ishihara"" ;
                  dbo:profession ?profession .

  # Find Ted Martin McGinley's spouse
  ?tedResource a dbo:Person ;
               foaf:name ""Ted Martin McGinley"" ;
               dbo:spouse ?spouse .

  # Match the person with all three conditions
  ?person a dbo:Person ;
          foaf:name ?name ;
          dbo:birthName ?birthName ;
          dbo:profession ?profession ;
          dbp:spouse ?tedResource .
}
```",6,6,7,2,3,3,3,71,0,0,1,0,0.0,0
404,51,test,"Give me the child of the father of the spouse of Princess Victoria Louise of Prussia and parent of the child, that is a royalty, of Ernest Augustus, Duke of Brunswick.","SELECT ?result WHERE { <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/ontology/child> ?v4 . ?result <http://dbpedia.org/ontology/parent> ?v2 . ?result <http://dbpedia.org/ontology/child> ?v4 . ?v1 <http://dbpedia.org/property/father> ?v2 . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?v1 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?child WHERE {
    # Step 1: Identify Princess Victoria Louise of Prussia's spouse
    ?princess a dbo:Princess ;
             dbp:spouse ?spouse .

    FILTER (str(?princess) = ""Victoria Louise, Princess Royal"")

    # Step 2: Find the spouse's father
    ?spouse dbo:father ?father .

    # Step 3: Determine the child of this father
    ?father dbo:child ?child1 .

    # Step 4: Identify Ernest Augustus, Duke of Brunswick's royal child
    ?ernestAugustus a dbo:Duke ;
                   dbp:parent ?parentErnest .
    
    FILTER (str(?ernestAugustus) = ""Ernest Augustus, Duke of Brunswick"")

    ?parentErnest dbo:child ?child2 .

    # Step 5: Match the two children
    FILTER (?child1 = ?child2)
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
161,20,test,"Give me the military force of the force, that is a societal event and a military conflict, of Francisco Largo Caballero and military force of Rif War.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . ?result <http://dbpedia.org/ontology/battle> ?v2 . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Rif_War> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce WHERE {
  # Military force associated with Francisco Largo Caballero during the Spanish Civil War
  ?event1 dbo:relatedThroughTime dbr:Spanish_Civil_War .
  ?event1 dbo:primeMinister dbr:Francisco_Largo_Caballero .
  ?event1 dbo:militaryForce ?militaryForce .

  # Military force associated with the Rif War
  ?event2 dbo:relatedThroughTime dbr:Rif_War .
  ?event2 dbo:militaryForce ?militaryForce .

  FILTER(?militaryForce != dbr:Unknown)
}
```",3,5,4,2,2,3,3,71,0,0,34,0,0.0,0
281,58,test,"Give me the war of the profession, that is a military unit, of the professional, that is an office holder and a politician, in New Zealand Army and entity in the birth place, that is a country, of Bob Heffron and war of Beauchamp Seymour, 1st Baron Alcester.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> ?v5 . ?v1 <http://dbpedia.org/property/occupation> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. <http://dbpedia.org/resource/Beauchamp_Seymour,_1st_Baron_Alcester> <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/New_Zealand_Army> . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Bob_Heffron> <http://dbpedia.org/ontology/birthPlace> ?v5 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX owl: <http://www.w3.org/2002/07/owl#>

SELECT ?war
WHERE {
  ?profession dbo:fieldOfActivity ?militaryUnit .
  ?militaryUnit dbo:militaryBranch dbr:New_Zealand_Army .
  ?profession rdfs:subClassOf* dbo:OfficeHolder .
  ?politician a ?profession ;
              dbo:officeHolderOf ?office .
  ?war dbo:participatedIn ?militaryUnit .
  
  ?heffron dbo:birthPlace dbr:?country .
  ?sirBeauchamp dbo:participatedIn ?war .
  FILTER (?sirBeauchamp = dbr:Beauchamp_Seymour_1st_Baron_Alcester)
  
  SERVICE <http://dbpedia.org/sparql> {
    SELECT ?country WHERE { 
      dbr:Bob_Heffron dbo:birthPlace ?country .
    }
  }
}
```",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
838,20,test,"Give me the band member of the band, that is a group, of the reference, that is a group and an organisation, to YU Grupa and band of the band member, that is an artist and a musical artist, of the band, that is a band and a group, of Žika Jelić.","SELECT ?result WHERE { ?v4 <http://xmlns.com/foaf/0.1/name> ""YU Grupa""@en . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v5 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Žika_Jelić> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v5 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?finalBand
WHERE {
  # Step 1: Find a reference that is both a group and an organization related to YU Grupa
  ?reference dbo:type/dbo:subClassOf* dbr:Group ;
             dbo:type/dbo:subClassOf* dbr:Organization ;
             dbo:band dbr:YU_Grupa .

  # Step 2: Find a band member of this reference who is an artist and musical artist
  ?member dbo:memberOf ?reference ;
          dbo:type/dbo:subClassOf* dbr:Artist ;
          dbo:type/dbo:subClassOf* dbr:MusicalArtist .

  # Step 3: Identify the band associated with Žika Jelić that is both a band and a group
  ?band dbo:type/dbo:subClassOf* dbr:Band ;
        dbo:type/dbo:subClassOf* dbr:Group ;
        dbo:member dbr:Žika_Jelić .

  # Step 4: Find the band of which this member is part
  ?finalBand dbo:bandMember ?member .
}
```",6,13,7,3,2,3,2,20,0,0,5,0,0.0,0
92,60,test,"Give me the band of the person born as the birth name of Joseph Michael and band member of the reference, that is an artist, to the name of Nevermore (2006 film).",SELECT ?result WHERE { ?v2 <http://xmlns.com/foaf/0.1/name> ?v3 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?result <http://dbpedia.org/ontology/bandMember> ?v1 . <http://dbpedia.org/resource/Joseph_Michael> <http://dbpedia.org/property/birthName> ?v0 . ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Nevermore_(2006_film)> <http://xmlns.com/foaf/0.1/name> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?band WHERE {
  ?person dbo:birthName ""Joseph Michael""@en .
  ?person dbo:memberOfBand ?band .
  OPTIONAL { 
    ?film dbp:title ""Nevermore (2006 film)""@en ;
          dbo:reference ?band .
  }
}
```",6,7,7,3,2,3,3,71,0,0,1,0,0.0,0
827,20,test,"Give me the father of the child, that is a royalty, of the spouse, that is a royalty, of Princess Pauline of Saxe-Weimar-Eisenach and child of the child, that is a royalty, of the parent of Charles Alexander, Grand Duke of Saxe-Weimar-Eisenach.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Charles_Alexander,_Grand_Duke_of_Saxe-Weimar-Eisenach> . ?v5 <http://dbpedia.org/property/father> ?v4 . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/parent> ?v1 . ?v4 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Princess_Pauline_of_Saxe-Weimar-Eisenach> . ?v5 <http://dbpedia.org/property/father> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?father WHERE {
    # Princess Pauline's spouse who is royalty
    ?spouse a dbo:Monarch ;
            dbp:spouse ?princess .
    FILTER (str(?princess) = ""Princess_Pauline_of_Saxe-Weimar-Eisenach"") .

    # Child of Princess Pauline's royal spouse
    ?child dbo:parent ?spouse ;
           a dbo:Monarch .

    # Charles Alexander's parent
    ?charlesAlexander dbp:fatherOrGuardian ?parent .
    FILTER (str(?charlesAlexander) = ""Charles_Alexander,_Grand_Duke_of_Saxe-Weimar-Eisenach"") .

    # Child of Charles Alexander's parent who is royalty
    ?royalChild dbo:parent ?parent ;
                a dbo:Monarch .

    # Find the father of the royal child from Princess Pauline's spouse
    ?father dbo:child ?child .
}
```",6,9,7,3,2,3,2,20,0,0,1,0,0.0,0
54,46,test,Give me the child of the father of the child of Thinkhaya of Pagan and parent of the child of Narapati I of Ava.,SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://dbpedia.org/ontology/child> ?result . ?v2 <http://dbpedia.org/property/father> ?v1 . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Narapati_I_of_Ava> . <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?individual WHERE {
  ?thinkhaya dbo:child ?thinkhayasChild .
  ?thinkhayasChild dbo:child ?grandchildOfThinkhaya .

  ?narapatiI dbo:child ?childOfNarapatiI .

  FILTER (?grandchildOfThinkhaya = ?childOfNarapatiI)
  
  VALUES ?thinkhaya { dbr:Thinkhaya_of_Pagan }
  VALUES ?narapatiI { dbr:Narapati_I_of_Ava }
}
```",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
994,71,test,"Give me the associated musical artist of the band member, that is a band and a group and an organisation, of the band, that is an organisation, of Fredrik Thordendal and band member of the person born, that is a musical artist, as the persona of Don Dokken and associated musical artist of the associated musical artist of the reference to Watchtower.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Don_Dokken> <http://xmlns.com/foaf/0.1/givenName> ?v7 . ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v8 <http://dbpedia.org/property/birthName> ?v7 . ?v4 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Fredrik_Thordendal> . ?v1 <http://xmlns.com/foaf/0.1/name> ""Watchtower""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v8 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?associatedArtist WHERE {
  # Fredrik Thordendal is a member of Meshuggah
  dbr:Fredrik_Thordendal dbo:bandMemberOf dbr:Meshuggah .
  
  # Meshuggah is an organisation and a band
  dbr:Meshuggah a dbo:Band ;
                a dbo:Organisation .

  # Find other members of Meshuggah who are associated with musical artists
  ?member dbo:bandMemberOf dbr:Meshuggah .
  ?member dbo:associatedMusicalArtist ?artist1 .

  # Don Dokken is a persona, find the person born as Don Dokken
  ?dokken dbo:birthName ""Don Dokken"" ;
          a dbo:MusicalArtist .

  # Find the associated musical artist of Don Dokken
  ?dokken dbo:associatedBandOrMusicalGroup ?bandDokken .
  
  # Reference to Watchtower, find its associated musical artist
  dbr:Watchtower dbo:associatedMusicalArtist ?artist2 .

  # Final association: Find the associated musical artist of the band member from Meshuggah
  ?artist1 dbo:associatedMusicalArtist ?associatedArtist .
}
```",9,14,10,3,3,3,3,71,0,0,1,0,0.0,0
179,20,test,"Give me the person born as the birth name of the child, that is a royalty, of Nakkhatra Mangala and parent of the child of the parent of Vajiralongkorn.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/birthName> ?v2 . ?v5 <http://dbpedia.org/ontology/parent> ?result . ?v4 <http://dbpedia.org/ontology/child> ?v5 . ?v4 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Vajiralongkorn> . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Nakkhatra_Mangala> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
    # Step 1: Find Vajiralongkorn's parent
    dbr:Maha_Vajiralongkorn dbo:parent ?vajiralongkornsParent .

    # Step 2: Find the child of that parent
    ?vajiralongkornsParent dbo:child ?childOfVajiralongsParent .

    # Step 3: Identify Nakkhatra Mangala's royal child
    dbr:Nakkhatra_Mangala dbo:child ?nakChild .
    FILTER EXISTS { ?nakChild a dbo:Monarch } 

    # Step 4: Match the birth name of the person with the child identified in step 3
    ?person dbo:birthName ?nakChild .
}
```",6,7,7,3,2,3,2,20,0,0,1,0,0.0,0
547,53,test,Give me the resting place of the awardee of Knight Grand Cross of the Order of St Michael and St George and resting place of the child of the child of William Haliburton and resting place of Simon Cadell.,"SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> ""William Haliburton""@en . <http://dbpedia.org/resource/Simon_Cadell> <http://dbpedia.org/ontology/restingPlace> ?result . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_St_Michael_and_St_George> . ?v3 <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?person ?restingPlace WHERE {
  # Knight Grand Cross of the Order of St Michael and St George
  { 
    ?person dbo:honours ""Knight Grand Cross of the Order of St Michael and St George""@en .
    ?person foaf:name ?name .
    ?person dbo:deathPlace ?restingPlace .
  }
  
  UNION
  
  # Child of the child of William Haliburton
  { 
    ?williamHaliburton foaf:name ""William Haliburton""@en .
    ?childOfWill dbp:parent ?williamHaliburton ;
                 dbo:deathPlace ?grandChildRestingPlace .
    ?grandChild dbp:parent ?childOfWill ;
                dbo:deathPlace ?grandChildRestingPlace .
  }
  
  UNION
  
  # Simon Cadell
  { 
    ?simonCadell foaf:name ""Simon Cadell""@en .
    ?simonCadell dbo:deathPlace ?restingPlace .
  }
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
617,48,test,"Give me the parent of the child of Antiochus (son of Antiochus III the Great) and child of the child, that is a royalty, of the successor, that is a royalty, of Antiochus II Theos.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> ?v3 . <http://dbpedia.org/resource/Antiochus_II_Theos> <http://dbpedia.org/ontology/successor> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/child> ?v1 . ?result <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/ontology/child> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parent
WHERE {
  # Step 1: Antiochus (son of Antiochus III the Great)
  ?antiochus3 a dbo:Monarch ;
              dbo:spouse ?mother .
  
  ?antiochus dbr:Antiochus_IV_Epiphanes ;
            dbo:father ?antiochus3 .

  # Step 2: Child of Antiochus (son of Antiochus III the Great)
  ?child1 dbo:parent ?antiochus .
  
  # Step 3: Grandchild
  ?grandchild dbo:parent ?child1 .

  # Step 4: Successor of Antiochus II Theos
  ?antiochus2 dbr:Antiochus_II_Theos ;
              dbo:succeededBy ?successor .
  
  FILTER (?successor a dbo:Monarch) .

  # Step 5: Child of the successor (Royalty)
  ?royalChild dbo:parent ?successor .
  FILTER (?royalChild a dbo:Monarch) .

  # Step 6: Parent of the grandchild
  ?parent dbo:parent ?grandchild .
}
```",5,7,6,3,2,3,3,71,0,0,2,0,0.0,0
659,23,test,"Give me the commander in the force of the native, that is an office holder, of Kingdom of Ireland.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/commander> ?v2 . ?v2 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Kingdom_of_Ireland> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?office WHERE {
  ?person a dbo:OfficeHolder .
  ?person dbo:country dbr:Kingdom_of_Ireland .
  ?person dbo:position ?office .
  FILTER regex(?office, ""commander|leader|military"", ""i"")
}
```",3,4,4,3,1,3,3,71,0,0,269,0,0.0,0
161,61,test,"Give me the military force of the force, that is a societal event and a military conflict, of the predecessor of Indalecio Prieto and commander in the force, that is an event, of the figure known as El Director.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v5 . ?v1 <http://xmlns.com/foaf/0.1/nick> ""El Director""@en . ?v3 <http://dbpedia.org/ontology/commander> ?v1 . ?v0 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Indalecio_Prieto> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v5 <http://dbpedia.org/ontology/commander> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce1 ?militaryForce2 WHERE {
  # Identify ""El Director""
  ?elDirector a dbo:Person ;
              rdfs:label ""El Director""@en .
  
  # Find the military force/event associated with ""El Director""
  ?event a dbo:MilitaryConflict ;
         dbo:commander ?elDirector .

  # Identify Indalecio Prieto
  ?indalecioPrieto a dbo:Person ;
                   rdfs:label ""Indalecio Prieto""@en .
  
  # Find the predecessor of Indalecio Prieto
  ?predecessor a dbo:Person ;
               dbo:predecessor ?indalecioPrieto .

  # Find the military force/event associated with the predecessor
  ?societalEvent a dbo:SocietalEvent, dbo:MilitaryConflict ;
                 dbo:commander ?predecessor .

  # Bind results to variables for output
  BIND(?event AS ?militaryForce1)
  BIND(?societalEvent AS ?militaryForce2)
}
```",6,9,7,3,2,3,3,71,0,0,32,0,0.0,0
161,60,test,"Give me the military force of the force, that is a societal event and an event and a military conflict, of the person decedent at Francoist Spain and commander in the force, that is an event, of the figure known as El Director.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> ?v0 . ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/ontology/commander> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Francoist_Spain> . ?v0 <http://xmlns.com/foaf/0.1/nick> ""El Director""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce WHERE {
  # Identify El Director as a decedent at Francoist Spain
  dbr:El_Director dbo:placeOfDeath dbr:Francoist_Spain .
  
  # Find the military force where El Director was a commander
  ?commandEvent dbo:agent dbr:El_Director ;
               dbo:commander dbr:El_Director .

  # Ensure this force is classified as an event and a societal event
  ?commandEvent rdf:type dbo:Event, dbo:SocietalEvent .
  
  # Confirm it is also a military conflict
  ?militaryForce rdf:type dbo:MilitaryConflict ;
                 rdfs:label ?forceLabel .
  
  # Link the command event to the military force
  ?commandEvent dbo:partOf ?militaryForce .

  FILTER (lang(?forceLabel) = 'en')
}
```",6,10,7,3,2,3,3,71,0,0,34,0,0.0,0
55,23,test,"Give me the band member of the producer, that is a band, of Used to Love Her and band of the reference, that is a band, to Newsted.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://xmlns.com/foaf/0.1/name> ""Newsted""@en . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Used_to_Love_Her> <http://dbpedia.org/ontology/producer> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandMember WHERE {
  # Part 1: Find the producer of ""Used to Love Her"" who is also a band
  ?song dbo:title ""Used to Love Her""@en .
  ?song dbo:producer ?producer .
  
  OPTIONAL { 
    ?producer rdf:type dbr:Band .
    ?producer dbo:member ?bandMember .
  }
  
  # Part 2: Find the band with a reference to Newsted
  ?reference dbo:title ""Newsted""@en ;
             dbo:referencedBy ?band .
  
  OPTIONAL {
    ?band rdf:type dbr:Band .
  }

  FILTER EXISTS { ?producer = ?band } 
}
```",4,6,5,2,2,2,3,28,0,0,1,0,0.0,0
659,61,test,"Give me the military force of the force, that is a societal event and an event and a military conflict, of the reference to Rutger Jan Schimmelpenninck and commander in the war, that is an event and a military conflict, of the figure known, that is a military unit and an organisation, as 'Polish Horse'.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/commander> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v5 <http://dbpedia.org/ontology/commander> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/property/nickname> ""'Polish Horse'""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://xmlns.com/foaf/0.1/name> ""Rutger Jan Schimmelpenninck""@en . ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://dbpedia.org/ontology/battle> ?v5 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce WHERE {
  # Rutger Jan Schimmelpenninck as a commander in wars
  ?war dbo:commander dbr:Rutger_Jan_Schimmelpenninck .
  
  # Ensure the war is classified as a military conflict and societal event
  ?war rdf:type dbo:MilitaryConflict ;
       rdf:type dbo:SocietalEvent .

  # Identify the Polish Horse as involved in this context
  ?polishHorse dbo:partOf ?war ;
               rdf:type dbo:MilitaryUnit, dbo:Organization .
  
  FILTER (str(?polishHorse) = ""Polish_Horse"") .

  # Find the military force associated with the event and conflict
  ?militaryForce dbo:participatedIn ?war .
}
```",6,13,7,3,2,3,3,71,0,0,31,0,0.0,0
328,35,test,"Give me the leader of the office, that is a government agency, of Joseph Stalin and awardee of the award of Bruce Fraser, 1st Baron Fraser of North Cape.","SELECT ?result WHERE { <http://dbpedia.org/resource/Joseph_Stalin> <http://dbpedia.org/property/office> ?v1 . ?v1 <http://dbpedia.org/ontology/leader> ?result . <http://dbpedia.org/resource/Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape> <http://dbpedia.org/property/awards> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?result <http://dbpedia.org/property/awards> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?leader WHERE {
  ?office dbo:type dbr:Government_agency .
  ?office dbo:head ?leader .
  
  # Filter for the time period of Joseph Stalin
  ?stalin dbo:birthDate ?dateStalinBirth .
  ?stalin dbo:deathDate ?dateStalinDeath .
  FILTER (?dateStalinBirth < ?dateLeaderStart && ?dateLeaderEnd < ?dateStalinDeath) .

  # Find the award associated with Bruce Fraser, 1st Baron Fraser of North Cape
  dbr:Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape dbo:awardReceived ?award .
  
  # Find another awardee of this award who was a leader of a government agency during Stalin's time
  ?leader dbo:awardReceived ?award .
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
328,51,test,"Give me the leader of the office, that is a government agency, of the leader, that is an office holder and a politician, of Gustav Jonson and commander in the force of Ferenc Szálasi.",SELECT ?result WHERE { <http://dbpedia.org/resource/Gustav_Jonson> <http://dbpedia.org/property/leader> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Ferenc_Szálasi> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/property/office> ?v2 . ?v4 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://dbpedia.org/ontology/leader> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?leaderOfLeader WHERE {
  # Find Gustav Jonson's office
  ?gustavJonson a dbo:OfficeHolder ;
                foaf:name ""Gustav Jonson""@en .
  
  ?office dbo:head ?gustavJonson ;
          a dbo:GovernmentAgency .

  # Find Ferenc Szálasi's command role
  ?ferencSzalasi a dbo:MilitaryPerson ;
                 foaf:name ""Ferenc Szálasi""@en .
  
  ?force dbo:commander ?ferencSzalasi .

  # Find the leader of Gustav Jonson's office
  ?office dbo:head ?leaderOfOffice .

  # Find who leads this office
  ?leaderOfLeader a dbo:GovernmentOfficial ;
                  dbo:positionHeld ?office .
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
92,54,test,"Give me the band of Joseph Michael and band member of the reference, that is an artist, to Nevermore and associated musical artist of the person born, that is an artist, as the actor of Return to Nuke 'Em High Volume 1.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/birthName> ?v0 . ?v3 <http://xmlns.com/foaf/0.1/name> ""Nevermore""@en . <http://dbpedia.org/resource/Return_to_Nuke_'Em_High_Volume_1> <http://dbpedia.org/property/starring> ?v0 . ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Joseph_Michael> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandMember ?nevermoreAssociation ?actor ?associatedArtist 
WHERE {
  # Step 1: Find Joseph Michael's band
  dbr:Joseph_Michael dbo:memberOf ?band .
  
  # Step 2: Identify a member of this band
  ?bandMember dbo:memberOf ?band .

  # Step 3: Check if the band member is associated with Nevermore
  OPTIONAL { ?bandMember dbo:associatedBand dbr:Nevermore . }
  
  # Step 4: Find actor in ""Return to Nuke 'Em High Volume 1""
  ?actor dbo:film dbr:Return_to_Nuke_'Em_High_Volume_1 .
  
  # Step 5: Identify associated musical artists of this actor
  OPTIONAL { ?actor dbo:associatedBand ?associatedArtist . }
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
281,19,test,Give me the war of the awardee of Knight Grand Cross of the Order of the Bath and entity in Colony of New Zealand.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Colony_of_New_Zealand> . ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_the_Bath> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?war ?recipient
WHERE {
  ?award a dbo:Award ;
         rdfs:label ""Knight Grand Cross of the Order of the Bath""@en .
  
  ?recipient dbo:recipient ?award .

  OPTIONAL { 
    ?recipient dbo:placeOfBirth dbr:New_Zealand_Colony ; # or other relevant properties
               dbo:participatedIn ?war .
  }

  FILTER EXISTS {
    ?recipient dbo:placeOfBirth dbr:New_Zealand_Colony . # Ensure connection to New Zealand Colony
  }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
391,68,test,"Give me the actor of the claim to fame, that is a work, of the spouse of Sherry Hormann and actor of the movie, that is a movie and a work and a television show, with Roz Ryan and native of the figure known as the nick name of Jackson, Tennessee.","SELECT ?result WHERE { <http://dbpedia.org/resource/Sherry_Hormann> <http://dbpedia.org/ontology/spouse> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://dbpedia.org/property/nickname> ?v5 . ?v7 <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/ontology/birthPlace> ?v4 . <http://dbpedia.org/resource/Jackson,_Tennessee> <http://xmlns.com/foaf/0.1/nick> ?v5 . ?v3 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Roz_Ryan> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v0 <http://dbpedia.org/ontology/knownFor> ?v7 . ?v3 <http://dbpedia.org/property/starring> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  # Step 1: Find Sherry Hormann's spouse
  ?sherry a dbo:Person ;
          foaf:name ""Sherry Hormann""@en .
  
  ?spouse dbo:spouseOf ?sherry .

  # Step 2: Get the claim to fame of Sherry Hormann's spouse
  ?work dbo:creator ?spouse ;
        rdf:type dbo:CreativeWork .

  # Step 3: Find Roz Ryan's movie and actor from Jackson, Tennessee
  ?movie dbo:starring ?actor ;
         dbo:starring dbr:Roz_Ryan ;
         rdf:type dbo:Film .
  
  ?actor dbo:nationality dbr:United_States ;
         dbo:birthPlace dbr:Jackson,_Tennessee .

  # Step 4: Find the nickname of Jackson, Tennessee
  ?jackson dbo:commonName ?nickname ;
           rdfs:label ""Jackson""@en .

  FILTER(?nickname = ""The City with Soul"" || ?nickname = ""Soulsville U.S.A."") # Example nicknames

  # Combine conditions to find the actor
  FILTER(?actor = ?spouse)
}
```",8,12,9,3,3,3,3,71,0,0,1,0,0.0,0
404,70,test,"Give me the parent of the child, that is a royalty, of the parent, that is a royalty, of Prince George William of Hanover and spouse of the person born, that is a royalty, as Princess Victoria Louise of Prussia and child of the father of the spouse of Princess Victoria Louise of Prussia.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v3 . ?v4 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/child> ?v7 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Prince_George_William_of_Hanover> <http://dbpedia.org/ontology/parent> ?v0 . ?v1 <http://dbpedia.org/property/father> ?v3 . ?v4 <http://dbpedia.org/property/birthName> ""Princess Victoria Louise of Prussia""@en . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?v1 . ?v0 <http://dbpedia.org/ontology/child> ?v7 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?parentOfChild
WHERE {
  # Step 1: Find Prince George William of Hanover's royal parent
  ?princeGeorge dbp:fatherOrMother ?parent1 .
  FILTER (STRSTARTS(LCASE(?parent1), ""http://dbpedia.org/resource/"") && 
          EXISTS { ?parent1 dbo:surname ?surname . FILTER(STRSTARTS(LCASE(?surname), ""royal"")) } )

  # Step 2: Find the child of that royal parent who is royalty
  ?parent1 dbp:child ?child .
  FILTER (EXISTS { ?child dbo:surname ?childSurname . FILTER(STRSTARTS(LCASE(?childSurname), ""royal"")) })

  # Step 3: Identify Princess Victoria Louise of Prussia's spouse
  ?princessVictoriaLouise foaf:name ""Princess Victoria Louise of Prussia""@en .
  ?princessVictoriaLouise dbo:spouse ?spouse .

  # Step 4: Determine the father of that spouse
  ?spouse dbp:fatherOrMother ?fatherOfSpouse .

  # Step 5: Find the child of this father
  ?fatherOfSpouse dbp:child ?childOfFather .

  # Step 6: Identify the parent of this child who is royalty and find that parent
  ?childOfFather dbo:parent ?parentOfChild .
  FILTER (EXISTS { ?parentOfChild dbo:surname ?parentSurname . FILTER(STRSTARTS(LCASE(?parentSurname), ""royal"")) })
}
```",8,11,9,3,3,3,3,71,0,0,1,0,0.0,0
659,45,test,"Give me the military force of the force, that is a societal event and an event and a military conflict, of the reference to Rutger Jan Schimmelpenninck and commander in Battle of Leipzig and commander in German campaign of 1813.","SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""Rutger Jan Schimmelpenninck""@en . ?result <http://dbpedia.org/ontology/battle> ?v1 . <http://dbpedia.org/resource/Battle_of_Leipzig> <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/German_campaign_of_1813> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/ontology/commander> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?militaryForce WHERE {
  # Rutger Jan Schimmelpenninck as a commander
  dbr:Rutger_Jan_Schimmelpenninck dbo:commanderOf ?battle .
  
  # Battle of Leipzig and German campaign of 1813
  VALUES ?battle { 
    dbr:Battle_of_Leipzig 
    dbr:German_campaign_of_1813 
  }
  
  # Ensure the events are societal, general events, and military conflicts
  ?battle a dbo:SocietalEvent ;
         a dbo:Event ;
         a dbo:MilitaryConflict .
  
  # Find the military force associated with these battles
  ?battle dbo:militaryForce ?militaryForce .
}
```",5,8,6,3,3,3,3,71,0,0,6,0,0.0,0
161,47,test,"Give me the military force of the force, that is a societal event and an event and a military conflict, of Francisco Franco and military force of the force, that is a societal event and a military conflict, of the predecessor of Indalecio Prieto.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/commander> ?v0 . ?result <http://dbpedia.org/ontology/battle> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v0 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Indalecio_Prieto> . ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Franco> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?francoMilitaryForce ?predecessorMilitaryForce
WHERE {
  # Francisco Franco's military force
  ?francoEvent a dbo:MilitaryConflict ;
               dbo:participatedIn [dbo:leader dbr:Franco] ;
               dbo:isPartOf dbr:Spanish_Civil_War .

  # Indalecio Prieto's predecessor (Juan Negrín)
  ?prietoPredecessor dbo:predecessor dbr:Indalecio_Prieto .
  
  # Juan Negrín's military force
  ?negrinEvent a dbo:MilitaryConflict ;
               dbo:participatedIn [dbo:leader ?negrinLeader] ;
               dbo:isPartOf dbr:Spanish_Civil_War .

  FILTER (?negrinLeader = dbr:Juan_Negrín)

  BIND(?francoEvent AS ?francoMilitaryForce)
  BIND(?negrinEvent AS ?predecessorMilitaryForce)
}
```",5,10,6,3,2,3,3,71,0,0,514,0,0.0,0
232,45,test,"Give me the native of the residence, that is a settlement and British, of the native, that is a politician and an office holder, of France and child of Jon Pertwee and actor of Dog Soldiers (film).",SELECT ?result WHERE { <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/ontology/child> ?result . ?v0 <http://dbpedia.org/property/residence> ?v1 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/France> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Dog_Soldiers_(film)> <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?nativeOfResidence WHERE {
  ?person dbo:nationality dbr:Francois_Philippe ; 
          dbo:parent dbr:Jon_Pertwee ;
          dbo:occupation dbr:Politician ;
          dbo:officeHolder true .
  
  ?film dbo:title ""Dog Soldiers"" ;
        dbo:actor ?person .

  ?person dbo:birthPlace ?nativeOfFrance .
  
  ?person dbo:residence ?residence .
  
  ?residence a dbo:Settlement ;
             dbo:country dbr:United_Kingdom .
  
  BIND(?residence AS ?nativeOfResidence)
}
```",5,9,6,3,3,3,3,71,0,0,1,0,0.0,0
617,55,test,"Give me the parent of the child of Antiochus (son of Antiochus III the Great) and spouse of the child of Antiochus III the Great and child of the child, that is a royalty, of Seleucus II Callinicus.",SELECT ?result WHERE { <http://dbpedia.org/resource/Antiochus_III_the_Great> <http://dbpedia.org/ontology/child> ?v5 . ?result <http://dbpedia.org/ontology/child> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://dbpedia.org/ontology/spouse> ?result . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seleucus_II_Callinicus> . <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/property/father> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  # Step 1: Identify Antiochus (son of Antiochus III the Great)
  ?antiochus dbo:father dbr:Antiochus_III_the_Great .
  
  # Step 2: Determine his child
  ?child dbo:father ?antiochus .

  # Step 3: Find the spouse of that child
  ?spouse dbo:spouse ?child .

  # Step 4: Identify the parent of this spouse
  ?parent dbo:child ?spouse .
  
  # Ensure this parent is a royalty and also a child of Seleucus II Callinicus
  FILTER EXISTS { ?parent dbo:royalty true . }
  FILTER EXISTS { ?parent dbo:father dbr:Seleucus_II_Callinicus . }
}
```",6,7,7,2,3,3,3,71,0,0,2,0,0.0,0
391,43,test,"Give me the actor of the claim to fame, that is a work, of the spouse of Sherry Hormann and native of Compton, California and actor of All About the Andersons.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://dbpedia.org/ontology/knownFor> ?v4 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Compton,_California> . <http://dbpedia.org/resource/Sherry_Hormann> <http://dbpedia.org/ontology/spouse> ?v0 . <http://dbpedia.org/resource/All_About_the_Andersons> <http://dbpedia.org/property/starring> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?actor ?work WHERE {
  ?spouse dbo:spouse dbr:Sherry_Hormann .
  ?spouse dbo:birthPlace dbr:Compton,_California .
  ?spouse dbo:film dbr:All_About_the_Andersons .
  ?spouse dbp:name ?actor .
  
  OPTIONAL {
    ?spouse dbo:notableWork ?work .
  }
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
184,71,test,"Give me the parent of the child of the parent of Archduchess Margaret of Austria (born 1925) and parent of the native of the landmark at elevation, that is a settlement, of 96.0 and child of the child of the parent, that is a royalty, of Archduke Ladislaus Philipp of Austria.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v2 . ?v7 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Margaret_of_Austria_(born_1925)> . ?v1 <http://dbpedia.org/ontology/elevation> ""96.0""^^<http://www.w3.org/2001/XMLSchema#double> . ?result <http://dbpedia.org/ontology/child> ?v8 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Archduke_Ladislaus_Philipp_of_Austria> <http://dbpedia.org/ontology/parent> ?v4 . ?result <http://dbpedia.org/property/father> ?v5 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v5 <http://dbpedia.org/property/father> ?v4 . ?v8 <http://dbpedia.org/property/father> ?v7 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT DISTINCT ?parentOfMargaretChild ?parentOfLandmarkNative ?commonParent
WHERE {
  # Archduchess Margaret of Austria (born 1925)
  ?margaret dbr:Archduchess_Margaret_of_Austria ;
            dbo:birthDate ?date .
  FILTER(YEAR(?date) = 1925)

  ?parentMargaret dbo:child ?margaret .
  ?grandchildMargaret dbo:child ?parentMargaret .

  # Landmark at elevation 96.0
  ?landmark dbo:elevation ""96.0""^^xsd:float ;
            dbo:nativePlace ?nativeSettlement .
  
  ?parentNative dbo:child ?nativeSettlement .

  # Archduke Ladislaus Philipp of Austria
  ?ladislaus dbr:Archduke_Ladislaus_Philipp_of_Austria ;
             dbo:child ?royaltyParent .
  FILTER(rdf:type(?royaltyParent, dbo:Royalty))

  ?grandchildLadislaus dbo:child ?royaltyParent .
  ?greatGrandchildLadislaus dbo:child ?grandchildLadislaus .

  # Find common parent
  ?commonParent dbo:child ?grandchildMargaret ;
                dbo:child ?parentNative .
}
```",9,11,10,3,3,3,3,71,0,0,1,0,0.0,0
617,18,test,"Give me the parent of the father, that is a royalty, of Richeza of Poland, Queen of Hungary and child of the child, that is a royalty, of the parent of Mlada (abbess).","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/parent> ?v1 . ?v2 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Richeza_of_Poland,_Queen_of_Hungary> <http://dbpedia.org/property/father> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Mlada_(abbess)> . ?result <http://dbpedia.org/ontology/child> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parentOfRichezasFather WHERE {
  # Richeza of Poland, Queen of Hungary
  ?richeza a dbo:Person ;
           foaf:name ""Richeza of Poland"" ;
           dbp:title ""Queen of Hungary""@en .

  # Her father
  ?richeza dbo:father ?richezasFather .

  # Check if her father is royalty
  OPTIONAL { ?richezasFather dbo:title ?title . FILTER regex(?title, ""King|Prince|Duke"", ""i"") }

  # Parent of Richeza's father
  ?richezasFather dbo:parent ?parentOfRichezasFather .

  # Mlada (abbess)
  ?mlada a dbo:Person ;
         foaf:name ""Mlada"" ;
         dbp:title ""Abbess""@en .

  # Parent of Mlada
  ?mlada dbo:parent ?mldasParent .

  # Child of Mlada's parent who is royalty
  ?mldasChild dbo:child ?mldasParent .
  OPTIONAL { ?mldasChild dbo:title ?childTitle . FILTER regex(?childTitle, ""King|Prince|Duke"", ""i"") }

  # Child of this royal child
  ?grandchild dbo:child ?mldasChild .

  # Ensure the paths meet the criteria
  FILTER EXISTS { ?richezasFather dbo:title ?title . FILTER regex(?title, ""King|Prince|Duke"", ""i"") }
  FILTER EXISTS { ?mldasChild dbo:title ?childTitle . FILTER regex(?childTitle, ""King|Prince|Duke"", ""i"") }
}
```",5,7,6,3,2,3,2,20,0,0,1,0,0.0,0
281,47,test,"Give me the entity in the birth place, that is a country, of the leader, that is a politician, of 1962 New South Wales state election and war of the awardee of Knight Grand Cross of the Order of the Bath.",SELECT ?result WHERE { <http://dbpedia.org/resource/1962_New_South_Wales_state_election> <http://dbpedia.org/property/leader> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/place> ?v4 . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/ontology/birthPlace> ?v4 . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_the_Bath> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?birthPlaceCountry WHERE {
  # Find the leader of the 1962 New South Wales state election
  ?leader dbo:officeTitle ?title .
  ?election dbo:incumbent ?leader .
  ?election dbo:date ""1962-03-05""^^xsd:date .

  # Ensure the leader is a politician
  ?leader rdf:type dbo:Politician .

  # Get the birthplace of the leader and ensure it's a country
  ?leader dbo:birthPlace ?birthPlace .
  ?birthPlace rdf:type dbo:Country ;
              rdfs:label ?birthPlaceCountry .

  # Find the awardee of Knight Grand Cross of the Order of the Bath
  ?awardee dbo:honoraryTitle dbr:Knight_Grand_Cross_of_the_Order_of_the_Bath .

  # Determine the war associated with this awardee
  ?awardee dbo:award ?order .
  ?war dbo:recipient ?awardee .

  # Ensure the birthplace country is involved in the identified war
  ?war dbo:location ?location .
  ?location rdf:type dbo:Country ;
            rdfs:label ?birthPlaceCountry .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
314,27,test,"Give me the person deceased at Madrid and awardee of the award of Sergei Makovetsky and commander in the profession, that is an event and a societal event, of Lisa Gavrić.",SELECT ?result WHERE { <http://dbpedia.org/resource/Sergei_Makovetsky> <http://dbpedia.org/property/awards> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/property/awards> ?v3 . ?result <http://dbpedia.org/ontology/restingPlace> <http://dbpedia.org/resource/Madrid> . <http://dbpedia.org/resource/Lisa_Gavrić> <http://dbpedia.org/property/occupation> ?v0 . ?v0 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person dbo:deathPlace dbr:Madrid .
  
  ?award dbo:recipient ?person ;
         dbo:givenBy dbr:Sergei_Makovetsky .

  ?person dbo:profession dbr:Commander .

  ?event dbo:relatedEvent dbr:Lisa_Gavrić ;
         a dbo:Event, dbo:SocietalEvent .

  ?person dbo:associatedWith ?event .
}
```",5,7,6,2,3,2,3,28,0,0,1,0,0.0,0
996,16,test,Give me the entity in the award of Ekrem Akurgal and force of the awardee of 1778.0.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> ""1778.0""^^<http://www.w3.org/2001/XMLSchema#double> . <http://dbpedia.org/resource/Ekrem_Akurgal> <http://dbpedia.org/property/awards> ?v3 . ?result <http://dbpedia.org/ontology/commander> ?v2 . ?result <http://dbpedia.org/ontology/place> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?awardEntity ?forceOfAwardee1778
WHERE {
  # Part 1: Find the award associated with Ekrem Akurgal
  dbr:Ekrem_Akurgal dbo:awardedBy ?awardEntity .

  # Part 2: Find the force of the awardee from 1778
  ?award1778 dbo:dateReceived ?date .
  FILTER (YEAR(?date) = 1778)
  ?award1778 dbo:recipient ?awardee1778 .
  ?awardee1778 dbo:memberOf ?forceOfAwardee1778 .
}
```",4,4,5,2,2,3,2,20,0,0,4,0,0.0,0
701,66,test,"Give me the spouse of the father of the commander, that is a royalty, in Battle of Perire and parent of the child of Ramesses II and parent of the child of Nefertari.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v6 . ?v6 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ramesses_II> . <http://dbpedia.org/resource/Nefertari> <http://dbpedia.org/ontology/child> ?v3 . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v1 <http://dbpedia.org/property/father> ?v2 . <http://dbpedia.org/resource/Battle_of_Perire> <http://dbpedia.org/ontology/commander> ?v1 . ?v3 <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
  ?battle rdfs:label ""Battle of Perire""@en .
  ?commander dbo:participatedIn ?battle ;
             dbo:father ?father .
  ?father dbo:spouse ?spouse .
  FILTER (dbo:royalty ?spouse) .

  ?ramesses dbp:child ?child1 ;
            rdfs:label ""Ramesses II""@en .
  ?nefertari dbp:child ?child2 ;
             rdfs:label ""Nefertari""@en .
  
  ?spouse dbo:parent ?child1 ;
          dbo:parent ?child2 .
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
378,61,test,"Give me the claim to fame of the commander in the war, that is a military conflict and a societal event and an event, of Thomas Trigge and war of the commander in the reference, that is a military conflict, to Peninsular War.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/ontology/commander> ?v5 . ?v1 <http://dbpedia.org/ontology/commander> ?v3 . ?v3 <http://dbpedia.org/ontology/knownFor> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Thomas_Trigge> <http://dbpedia.org/ontology/battle> ?v1 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Peninsular War""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v5 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?claimToFame WHERE {
  # Thomas Trigge's involvement in a military conflict
  ?trigge dbo:occupation dbr:Military_person .
  ?trigge rdfs:label ""Thomas Trigge""@en .

  # The claim to fame of Thomas Trigge
  ?trigge dbo:notableWork ?claimToFame .

  # Ensure the conflict is a military conflict and societal event
  ?conflict dbo:type dbr:Military_conflict ;
           dbo:socialEvent true .
  
  # Link the conflict to Peninsular War through reference or involvement
  ?conflict dbo:reference dbr:Peninsular_War .

  # Ensure Thomas Trigge is connected to this conflict
  ?trigge dbo:participatedIn ?conflict .
}
```",6,10,7,3,2,3,3,71,0,0,2,0,0.0,0
767,52,test,"Give me the alma mater of the administration of George K. Nash and reference to  and entity in the administration, that is a settlement, of the writer of Where It's At (Dustin Lynch album).","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/leaderParty> ?v3 . ?v5 <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://xmlns.com/foaf/0.1/name> """"@en . <http://dbpedia.org/resource/Where_It's_At_(Dustin_Lynch_album)> <http://dbpedia.org/property/writer> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/state> ?v2 . ?v5 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/George_K._Nash> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?almaMater ?administrationEntity ?settlement WHERE {
  # Find George K. Nash's alma mater
  dbr:George_K._Nash dbo:almaMater ?almaMater .

  # Find the administration he was part of (assuming a role or position)
  OPTIONAL { 
    ?administrationEntity dbo:member ?nashRole .
    ?nashRole dbo:agent dbr:George_K._Nash .
  }

  # Identify the writer of ""Where It's At"" by Dustin Lynch
  dbr:""Where_It%27s_At_(Dustin_Lynch_song)"" dbo:lyricsBy ?writer .

  # Check if any entity in that administration is a settlement
  OPTIONAL {
    ?administrationEntity rdf:type dbo:Settlement .
  }
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
528,70,test,Give me the war of the commander in the work of --01-09 and force of the person born as the birth name of Narciso Campero and war of the military force of Battle of Pisagua.,"SELECT ?result WHERE { ?v7 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Narciso_Campero> <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/ontology/commander> ?v7 . ?result <http://dbpedia.org/ontology/commander> ?v3 . ?v4 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Pisagua> . ?v4 <http://dbpedia.org/ontology/battle> ?result . ?v3 <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/property/author> ""--01-09""^^<http://www.w3.org/2001/XMLSchema#gMonthDay> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commander ?militaryForceNarcisoCampero ?warPisagua
WHERE {
  # Find the commander related to an event or work dated January 9th
  ?event dbo:date ""2000-01-09""^^xsd:date ;
         dbo:commander ?commander .
  
  # Find Narciso Campero's birth name and associated military force
  dbr:Narciso_Campero dbo:birthName ?birthName ;
                      dbo:militaryForce ?militaryForceNarcisoCampero .

  # Find the war related to the Battle of Pisagua
  dbr:Battle_of_Pisagua dbo:partOfWar ?warPisagua .
}
```",8,8,9,3,3,3,3,71,0,0,2,0,0.0,0
404,48,test,"Give me the spouse of the person born, that is a royalty, as the birth name of Princess Victoria Louise of Prussia and child of the father of Ernest Augustus, Duke of Brunswick.","SELECT ?result WHERE { <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/property/father> ?v1 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/property/birthName> ?v3 . ?result <http://dbpedia.org/ontology/parent> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/birthName> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Step 1: Get birth name of Princess Victoria Louise of Prussia
  VALUES (?birthName) { (dbr:Victoria_Louise_of_Prussia#Birth_name) }

  # Step 2: Identify father of Ernest Augustus, Duke of Brunswick
  ?father dbo:child dbr:Ernest_Augustus,_Duke_of_Brunswick .
  
  # Step 3: Find child with the same birth name and royalty status
  ?person dbo:birthName ?birthName ;
          a dbo:Monarch ;
          dbo:parent ?father .

  # Step 4: Get spouse of this person
  ?person dbo:spouse ?spouse .
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
617,38,test,Give me the spouse of the child of Antiochus III the Great and parent of the child of Antiochus (son of Antiochus III the Great).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v2 . <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/child> ?v2 . <http://dbpedia.org/resource/Antiochus_III_the_Great> <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?spouse WHERE {
  # Find a child of Antiochus III the Great
  ?child dbo:parent dbr:Antiochus_III_the_Great .
  
  # Find the spouse of this child
  ?child dbo:spouse ?spouse .

  # Ensure that this spouse is also a parent to another child of Antiochus III the Great
  ?anotherChild dbo:parent dbr:Antiochus_III_the_Great .
  ?anotherChild dbo:parent ?spouse .
}
```",4,4,5,2,2,3,3,71,0,0,2,0,0.0,0
528,63,test,"Give me the force of the person born as Narciso Campero Leyes and war of the military force of the entity, that is a societal event, in Chile and war of the commander in Battle of La Rinconada de Ate.","SELECT ?result WHERE { <http://dbpedia.org/resource/Battle_of_La_Rinconada_de_Ate> <http://dbpedia.org/ontology/commander> ?v6 . ?v2 <http://dbpedia.org/property/birthName> ""Narciso Campero Leyes""@en . ?v3 <http://dbpedia.org/ontology/battle> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/commander> ?v2 . ?v4 <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Chile> . ?v6 <http://dbpedia.org/ontology/battle> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?force ?chileWar ?battleCommander ?battleWar
WHERE {
  # Find Narciso Campero Leyes and his military force
  ?person dbo:birthName ""Narciso Campero Leyes""@en .
  ?person dbo:militaryUnit ?force .

  # Find wars involving societal events in Chile
  ?chileEvent a dbo:SocietalEvent ;
              dbo:location dbr:Chile ;
              dbo:war ?chileWar .

  # Find the commander of the Battle of La Rinconada de Ate and their wars
  ?battle dbr:Battle_of_La_Rinconada_de_Ate ;
         dbo:commander ?battleCommander .
  ?battleCommander dbo:war ?battleWar .
}
```",7,8,8,3,3,3,3,71,0,0,2,0,0.0,0
712,18,test,"Give me the resting place of the awardee of Hero of the Soviet Union and capital of the country of the military force, that is an organisation and a military unit, of Vyoshenskaya Uprising.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/capital> ?result . ?v1 <http://dbpedia.org/ontology/country> ?v2 . ?v3 <http://dbpedia.org/ontology/restingPlace> ?result . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Hero_of_the_Soviet_Union> . ?v1 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Vyoshenskaya_Uprising> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?awardee ?restingPlace ?countryCapital WHERE {
  # Find the awardee of Hero of the Soviet Union involved in Vyoshenskaya Uprising
  ?awardee dbo:honoraryTitle dbr:Hero_of_the_Soviet_Union ;
          dbo:wikiPageDisambiguates ?uprising .
  
  # Identify the uprising
  ?uprising rdfs:label ""Vyoshenskaya Uprising""@en .

  # Find the military force involved in the uprising
  ?militaryForce dbo:wikiPageDisambiguates ?uprising ;
                a dbo:MilitaryUnit, dbo:Organization .
  
  # Determine the country of the military force
  ?country dbo:militaryBranches ?militaryForce ;
           dbp:capital ?capitalCity .

  # Get the resting place of the awardee
  ?awardee dbo:finalRestingPlace ?restingPlace .

  # Bind the capital city to a variable
  ?capitalCity rdfs:label ?countryCapital .
  
  FILTER (lang(?countryCapital) = ""en"")
}
```",5,7,6,3,2,3,2,20,0,0,1,0,0.0,0
281,42,test,"Give me the war of the awardee of Knight Grand Cross of the Order of the Bath and entity in Colony of New Zealand and war of the profession, that is a military unit, of Heather Roy.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_the_Bath> . <http://dbpedia.org/resource/Heather_Roy> <http://dbpedia.org/property/occupation> ?v1 . ?v1 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Colony_of_New_Zealand> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?warOfAwardee ?warOfHeatherRoy
WHERE {
  # Find individuals awarded Knight Grand Cross of the Order of the Bath
  ?person dbo:award dbpedia:Knight_Grand_Cross_of_the_Order_of_the_Bath .
  
  # Wars involving these awardees and entities in Colony of New Zealand
  ?awardeeWar dbo:participatedIn ?warOfAwardee ;
              dbo:location dbpedia:Colony_of_New_Zealand .

  # Heather Roy's profession as a military unit
  dbpedia:Heather_Roy foaf:currentJobTitle ?militaryUnit .
  
  # Wars involving this military unit
  ?unitWar dbo:participatedIn ?warOfHeatherRoy ;
           rdfs:label ?militaryUnit .

}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
360,27,test,"Give me the writer of The Roaring Silence and native of the death place, that is a settlement, of Winnie Madikizela-Mandela and reference to the author of Blinded by the Light.",SELECT ?result WHERE { <http://dbpedia.org/resource/Blinded_by_the_Light> <http://dbpedia.org/property/author> ?v0 . ?result <http://xmlns.com/foaf/0.1/name> ?v0 . <http://dbpedia.org/resource/The_Roaring_Silence> <http://dbpedia.org/property/writer> ?result . <http://dbpedia.org/resource/Winnie_Madikizela-Mandela> <http://dbpedia.org/ontology/deathPlace> ?v3 . ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT DISTINCT ?writerOfRoaringSilence ?deathPlaceSettlement ?authorOfBlindedByTheLight
WHERE {
  # Find the writer of ""The Roaring Silence""
  dbr:The_Roaring_Silence dbo:author ?writerOfRoaringSilence .

  # Find Winnie Madikizela-Mandela's death place that is a settlement
  dbr:Winnie_Madikizela-Mandela dbo:deathPlace ?deathPlace .
  ?deathPlace rdf:type dbo:Settlement .

  # Find the author of ""Blinded by the Light""
  dbr:Blinded_by_the_Light dbo:author ?authorOfBlindedByTheLight .
}
```",5,6,6,2,3,2,3,28,0,0,1,0,0.0,0
701,69,test,"Give me the parent of the child of the spouse of Amun-her-khepeshef and parent of the child of Ramesses II and spouse of the father of the commander, that is a royalty, in Battle of Perire.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v7 . <http://dbpedia.org/resource/Battle_of_Perire> <http://dbpedia.org/ontology/commander> ?v1 . ?v7 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ramesses_II> . ?v4 <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Amun-her-khepeshef> <http://dbpedia.org/ontology/spouse> ?v4 . ?v1 <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?parent
WHERE {
  # Amun-her-khepeshef's spouse and their child's parent
  ?spouse1 dbo:spouse ?amunHerKhepeshef .
  FILTER(?amunHerKhepeshef = dbp:Amun_her_khepeshef) .
  
  ?child1 dbo:parent ?spouse1 ;
         dbo:parent ?parent1 .

  # Ramesses II's spouse and their child's parent
  ?spouse2 dbo:spouse ?ramessesII .
  FILTER(?ramessesII = dbp:Ramesses_II) .
  
  ?child2 dbo:parent ?spouse2 ;
         dbo:parent ?parent2 .

  # Commander in Battle of Perire and their father's spouse
  ?commander dbo:participatedInBattle ?battle .
  FILTER(?battle = dbp:Battle_of_Perire) .
  
  ?father dbo:child ?commander .
  ?spouse3 dbo:spouse ?father .

  # Ensure the final entity is royalty and involved in the battle
  FILTER((?parent1 = ?parent2) && (?parent1 = ?spouse3) &&
         (dbo:royalty ?parent1) && 
         EXISTS { ?parent1 dbo:participatedInBattle ?battle } )
}
```",8,9,9,3,3,3,3,71,0,0,1,0,0.0,0
528,50,test,Give me the war of the commander in the work of --01-09 and force of the person born as Narciso Campero Leyes.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> ?v3 . ?v0 <http://dbpedia.org/property/author> ""--01-09""^^<http://www.w3.org/2001/XMLSchema#gMonthDay> . ?v0 <http://dbpedia.org/ontology/commander> ?v4 . ?v4 <http://dbpedia.org/ontology/battle> ?result . ?v3 <http://dbpedia.org/property/birthName> ""Narciso Campero Leyes""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war ?force 
WHERE {
    ?person rdfs:label ""Narciso Campero Leyes""@en .
    ?person dbo:birthDate ?birthDate .
    
    FILTER (CONTAINS(str(?birthDate), ""01-09""))

    ?commanderOf dbo:commander ?person ;
                dbo:date ?date .

    FILTER (CONTAINS(str(?date), ""01-09""))
    
    ?commanderOf rdfs:label ?warLabel .
    BIND(IRI(CONCAT(""http://dbpedia.org/resource/"", REPLACE(LCASE(?warLabel), "" "", ""_""))) AS ?war)

    OPTIONAL {
        ?person dbo:militaryUnit ?force .
    }
}
```",5,5,6,3,2,3,3,71,0,0,2,0,0.0,0
16,51,test,Give me the professional in the profession of Satomi Ishihara and person born as the birth name of the alumnus of Ohio State University.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Ohio_State_University> . ?result <http://dbpedia.org/property/birthName> ?v2 . ?result <http://dbpedia.org/property/occupation> ?v4 . ?v1 <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Satomi_Ishihara> <http://dbpedia.org/property/occupation> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?professional WHERE {
  # Find Satomi Ishihara's profession
  ?satomiIshihara dbo:profession ?profession .
  FILTER(STR(?satomiIshihara) = ""Satomi_Ishihara"")

  # Find alumni of Ohio State University and their birth names
  ?alumnus dbp:almaMater <http://dbpedia.org/resource/Ohio_State_University> ;
           foaf:name ?birthName .

  # Find a professional with the same profession as Satomi Ishihara
  # and whose birth name matches an alumnus of Ohio State University
  ?professional dbo:profession ?profession ;
                foaf:name ?matchingBirthName .
  FILTER(?matchingBirthName = ?birthName)
}
```",5,5,6,3,2,3,3,71,0,0,3,0,0.0,0
378,63,test,Give me the war of the person born as the birth name of Carl Pontus Gahn and claim to fame of the commander in Great Siege of Gibraltar and war of the commander in Peninsular War.,SELECT ?result WHERE { <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/property/birthName> ?v4 . <http://dbpedia.org/resource/Peninsular_War> <http://dbpedia.org/ontology/commander> ?v6 . ?v3 <http://dbpedia.org/property/birthName> ?v4 . ?v6 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/ontology/knownFor> ?result . ?v3 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Great_Siege_of_Gibraltar> <http://dbpedia.org/ontology/commander> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war WHERE {
  # Carl Pontus Gahn's birth name
  dbr:C._W._Scheele dbo:birthName ""Carl Wilhelm Scheele"" .
  
  # George Augustus Eliott and the Great Siege of Gibraltar
  dbr:George_Augustus_Eliott dbo:claimToFame ?eliottClaim ;
                              dbo:commanderOf ?gibraltarSiege .
  ?gibraltarSiege dbo:name ""Great Siege of Gibraltar"" .

  # Arthur Wellesley in the Peninsular War
  dbr:Arthur_Wellesley_1st_Duke_of_Wellington dbo:commanderOf ?peninsularWar .
  ?peninsularWar dbo:name ""Peninsular War"" .

  # Wars involving these figures
  ?war dbo:participatedIn [
    a dbo:MilitaryConflict ;
    dbo:participant dbr:George_Augustus_Eliott ;
    dbo:participant dbr:Arthur_Wellesley_1st_Duke_of_Wellington
  ] .
}
```",7,7,8,3,3,3,3,71,0,0,2,0,0.0,0
767,27,test,"Give me the reference to the alter ego of the persona, that is a fictional character, of Matthew Burland.","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v1 <http://dbpedia.org/property/alterEgo> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v1 <http://dbpedia.org/property/alterEgo> ""Matthew Burland""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?character ?reference WHERE {
  ?person rdfs:label ""Matthew Burland""@en .
  OPTIONAL { ?person dbo:pseudonym ?alias . }
  FILTER(?alias = dbr:Matthew_Hughes)
  
  ?work dbo:author ?alias .
  ?work dbo:fictionalCharacter ?character .

  OPTIONAL { ?character dbo:wikiPageWikiLink ?reference }
}
```",3,4,4,3,1,3,3,71,0,0,98447,0,0.0,0
281,30,test,"Give me the war of Beauchamp Seymour, 1st Baron Alcester and war of the profession, that is a military unit, of Heather Roy and entity in Colony of New Zealand.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Beauchamp_Seymour,_1st_Baron_Alcester> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Colony_of_New_Zealand> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. <http://dbpedia.org/resource/Heather_Roy> <http://dbpedia.org/property/occupation> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?war ?militaryUnit ?entityInNewZealand
WHERE {
  # Wars involving Beauchamp Seymour, 1st Baron Alcester
  OPTIONAL {
    ?person rdfs:label ""Beauchamp Seymour, 1st Baron Alcester""@en .
    ?person dbo:participatedIn ?war .
  }

  # Military unit or profession of Heather Roy
  OPTIONAL {
    ?heatherPerson rdfs:label ""Heather Roy""@en .
    ?heatherPerson dbo:militaryUnit ?militaryUnit .
  }

  # Entities in the Colony of New Zealand
  OPTIONAL {
    ?entityInNewZealand dbp:country dbr:Colony_of_New_Zealand .
  }
}
```",4,5,5,2,3,3,3,71,0,4,1,0.0,0.0,0
488,56,test,"Give me the birth place of the commander in Boshin War and death place of Tokugawa Ieyasu and administration of the father of the spouse, that is a royalty, of Tokugawa Masako.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?v1 . ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Tokugawa_Masako> . <http://dbpedia.org/resource/Tokugawa_Ieyasu> <http://dbpedia.org/ontology/deathPlace> ?result . ?result <http://dbpedia.org/property/leader> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Boshin_War> <http://dbpedia.org/ontology/commander> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?birthPlace ?deathPlace ?administration
WHERE {
  # Birthplace of Saigō Takamori (Commander in Boshin War)
  { 
    ?saigo a dbo:Person ;
           foaf:name ""Saigō Takamori""@en .
    ?saigo dbo:birthPlace ?birthPlace .
  }
  
  UNION
  
  # Death place of Tokugawa Ieyasu
  {
    ?ieyasu a dbo:Person ;
            foaf:name ""Tokugawa Ieyasu""@en .
    ?ieyasu dbo:deathPlace ?deathPlace .
  }

  UNION

  # Administration of Matsudaira Katamori (Father of the spouse, royalty, of Tokugawa Masako)
  {
    ?masako a dbo:Person ;
             foaf:name ""Tokugawa Masako""@en .
    ?yoshinobu a dbo:Person ;
               foaf:name ""Tokugawa Yoshinobu""@en ;
               dbo:spouse ?masako .
    ?katamori a dbo:Person ;
              foaf:name ""Matsudaira Katamori""@en ;
              dbo:fatherOf ?yoshinobu .
    ?katamori dbp:administrated ?administration .
  }
}
```",6,7,7,3,3,3,3,71,1,1,0,0.5,1.0,0.6666666666666666
492,34,test,Give me the person decedent at the work of the author of French Algeria and person decedent at Algiers.,SELECT ?result WHERE { <http://dbpedia.org/resource/French_Algeria> <http://dbpedia.org/property/author> ?v2 . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Algiers> . ?v1 <http://dbpedia.org/property/author> ?v2 . ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?decedent WHERE {
  # Query for the decedent of the author of ""French Algeria""
  {
    ?book dbo:author ?author .
    ?author dbo:deathPlace ?deathPlace .
    ?author dbo:decedent ?decedent1 .
    FILTER(CONTAINS(LCASE(str(?book)), ""french algeria""))
  }
  
  UNION
  
  # Query for the decedent of a person associated with Algiers
  {
    ?person dbo:birthPlace dbr:Algiers .
    ?person dbo:deathPlace ?deathPlace .
    ?person dbo:decedent ?decedent2 .
  }

  BIND(IF(BOUND(?decedent1), ?decedent1, ?decedent2) AS ?decedent)
}
```",4,4,5,3,2,3,3,71,0,0,16,0,0.0,0
10,26,test,"Give me the band member of Luke Vibert and associated musical artist of the person born, that is an artist, as Matt Colton and professional in the birth name of Sharon Kao.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Luke_Vibert> . ?v4 <http://dbpedia.org/property/birthName> ""Matt Colton""@en . ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Sharon_Kao> <http://dbpedia.org/property/birthName> ?v1 . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandMember ?associatedArtist ?professionalRole
WHERE {
  # Find band members of Luke Vibert
  ?person dbo:memberOfBand dbr:Luke_Vibert .
  ?person rdfs:label ?bandMember .

  # Find associated musical artist for Matt Colton
  OPTIONAL {
    ?colton dbo:birthName ""Matt Colton""@en ;
            dbo:profession dbr:Musical_artist .
    ?colton dbo:associatedMusicalArtist ?artist .
    ?artist rdfs:label ?associatedArtist .
  }

  # Find professional role of Sharon Kao
  OPTIONAL {
    ?kao dbo:birthName ""Sharon Kao""@en ;
         dbo:profession ?role .
    ?role rdfs:label ?professionalRole .
  }
}
```",5,6,6,2,3,2,3,28,0,0,1,0,0.0,0
9,59,test,"Give me the alma mater of the mayor, that is a politician, of the entity, that is an organisation, in Belfast and alma mater of the awardee of the reference, that is an award, to Royal Medals.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/almaMater> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Royal Medals""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v5 <http://dbpedia.org/property/awards> ?v0 . ?v3 <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Belfast> . ?v2 <http://dbpedia.org/ontology/almaMater> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://dbpedia.org/property/leader> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?almaMater
WHERE {
  # Find the mayor of Belfast who is a politician
  ?mayor dbo:position dbr:Belfast_mayoralty ;
         rdf:type dbo:Politician .
  
  # Get the alma mater of this mayor
  ?mayor foaf:almaMater ?almaMater1 .

  # Find the awardee of the Royal Medal
  ?awardee dbo:recipient dbr:Royal_Medals ;
           foaf:almaMater ?almaMater2 .
  
  # Ensure both alma maters are the same
  FILTER (?almaMater1 = ?almaMater2)
}
```",6,9,7,3,2,3,3,71,0,0,1,0,0.0,0
115,8,test,Give me the alma mater of Vladimir Cerrón and alma mater of the awardee of National Order of Scientific Merit.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/almaMater> ?result . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/National_Order_of_Scientific_Merit> . <http://dbpedia.org/resource/Vladimir_Cerrón> <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

# Query for the alma mater of Vladimir Cerrón
SELECT ?almaMaterCerron WHERE {
  dbr:Vladimir_Cerrón dbo:almaMater ?almaMaterCerron .
}

UNION

# Query for the alma mater of awardees of the National Order of Scientific Merit
SELECT DISTINCT ?awardee ?almaMaterAwardee WHERE {
  ?awardee dbo:awardReceived dbr:National_Order_of_Scientific_Merit .
  ?awardee dbo:almaMater ?almaMaterAwardee .
}
```",3,3,4,2,2,2,2,9,0,0,1,0,0.0,0
232,65,test,"Give me the actor of the claim to fame, that is a film and a military conflict, of the professional in Actor, narrator and producer and child of the person born as John Devon Roland Pertwee and native of the residence, that is a settlement and British, of Sylvie Bermann.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. <http://dbpedia.org/resource/Sylvie_Bermann> <http://dbpedia.org/property/residence> ?v3 . ?v0 <http://dbpedia.org/property/occupation> ""Actor, narrator and producer""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v4 <http://dbpedia.org/property/birthName> ""John Devon Roland Pertwee""@en . ?v6 <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://dbpedia.org/ontology/knownFor> ?v6 . ?v4 <http://dbpedia.org/ontology/child> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?actor WHERE {
  # Jon Pertwee's child who is an actor, narrator, or producer
  ?child dbo:parent dbr:Jon_Pertwee ;
         (dbo:occupation dbr:Actor ; 
          dbo:occupation dbr:Narrator ; 
          dbo:occupation dbr:Producer) .

  # The film and military conflict associated with the child
  ?film dbo:starring ?actor .
  ?conflict dbo:relatedTo ?actor .

  # Sylvie Bermann's residence, likely Paris
  ?residence dbp:nativeOf dbr:Sylvie_Bermann ;
             a dbo:Settlement ;
             dbo:country dbr:France .

  # The actor is associated with the residence
  ?actor dbo:birthPlace ?residence .
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
328,24,test,Give me the leader of People's Commissariat of Defense of the Soviet Union and commander in the force of Ferenc Szálasi.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Ferenc_Szálasi> . <http://dbpedia.org/resource/People's_Commissariat_of_Defense_of_the_Soviet_Union> <http://dbpedia.org/ontology/leader> ?result . ?v2 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?stalinLeader ?szalasiCommander WHERE {
  # Find Joseph Stalin as the leader of the People's Commissariat of Defense
  ?stalinLeader a dbo:Person ;
                foaf:name ""Joseph Stalin""@en ;
                dbo:officeHolder dbr:People%27s_Commissar_for_Defence_of_the_Soviet_Union .

  # Find the commander in Ferenc Szálasi's force
  ?szalasiCommander a dbo:Person ;
                    dbo:commandedBy dbr:Ferenc_Sz%C3%A1lasi .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
9,63,test,"Give me the figure known as the nickname of Queen's University Belfast and alma mater of the mayor, that is a politician, of the entity, that is an organisation, in Belfast and alma mater of the awardee of Royal Medal.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v6 <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://dbpedia.org/property/nickname> ?v2 . ?v4 <http://dbpedia.org/property/leader> ?v3 . ?v6 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Medal> . <http://dbpedia.org/resource/Queen's_University_Belfast> <http://dbpedia.org/property/nickname> ?v2 . ?v4 <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Belfast> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?figure WHERE {
  # Find the nickname of Queen's University Belfast
  ?university a dbo:EducationalInstitution ;
              foaf:nick ?nickname .

  FILTER (str(?university) = ""http://dbpedia.org/resource/Queen's_University_Belfast"") .
  
  # Identify the mayor who is also a politician and associated with an organization in Belfast
  ?mayor a dbo:Politician ;
         dbp:almaMater ?university ;
         dbo:positionHeld ?organization .

  ?organization dbo:locationCity ""Belfast""^^xsd:string .
  
  # Find the awardee of the Royal Medal who also attended the same university
  ?awardee dbo:awardReceived ?royalMedal ;
          dbp:almaMater ?university .

  FILTER (str(?royalMedal) = ""http://dbpedia.org/resource/Royal_Medal"") .
  
  # Ensure the figure is the nickname of Queen's University Belfast
  ?figure foaf:nick ?nickname .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
747,57,test,"Give me the band of the person born as Tracey Elizabeth McSween and person born on 1985-04-29 and band of the writer of the work, that is a song, of Amba Shepherd.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/writer> ?v5 . ?v3 <http://dbpedia.org/property/birthName> ""Tracey Elizabeth McSween""@en . ?result <http://dbpedia.org/ontology/birthDate> ""1985-04-29""^^<http://www.w3.org/2001/XMLSchema#date> . ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Amba_Shepherd> . ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

# Find the band of Tracey Elizabeth McSween
SELECT ?band WHERE {
  ?person dbo:birthName ""Tracey Elizabeth McSween""@en .
  OPTIONAL { ?person dbo:band ?band . }
}

UNION

# Find the band of the person born on 1985-04-29
SELECT ?band WHERE {
  ?person dbo:dateOfBirth ?date .
  FILTER (YEAR(?date) = 1985 && MONTH(?date) = 4 && DAY(?date) = 29)
  OPTIONAL { ?person dbo:band ?band . }
}

UNION

# Find the band of the writer of the song ""Amba Shepherd""
SELECT ?writerBand WHERE {
  ?song dbp:title ""Amba Shepherd""@en .
  ?song dbo:lyricsWriter ?writer .
  OPTIONAL { ?writer dbo:band ?writerBand . }
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
328,61,test,"Give me the commander in the force of the person decedent at Budapest and leader of the office, that is a government agency, of the leader, that is an office holder and a politician, of Gustav Jonson.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/leader> ?result . ?v5 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Budapest> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v5 <http://dbpedia.org/ontology/commander> ?v0 . ?v1 <http://dbpedia.org/property/office> ?v3 . <http://dbpedia.org/resource/Gustav_Jonson> <http://dbpedia.org/property/leader> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?commander WHERE {
  ?gustavJonson a dbo:OfficeHolder ;
                foaf:name ""Gustav Jonson""@en .
  
  ?agency dbo:head ?leader ;
          a dbo:GovernmentAgency .

  ?gustavJonson dbo:memberOf ?agency .

  ?force dbo:commander ?commander ;
         dbo:location dbr:Budapest .

  ?leader dbo:headOf ?force .
}
```",6,9,7,3,2,3,3,71,0,0,1,0,0.0,0
994,48,test,"Give me the band member of the person born, that is a musical artist, as Donald Maynard Dokken and associated musical artist of the associated musical artist of the reference to Watchtower.","SELECT ?result WHERE { ?v3 <http://xmlns.com/foaf/0.1/name> ""Watchtower""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/birthName> ""Donald Maynard Dokken""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandMember WHERE {
  # Step 1: Identify Donald Maynard Dokken as a musician
  dbr:Don_Dokken dbo:birthName ""Donald Maynard Dokken"" .
  
  # Step 2: Find band members or collaborators of Don Dokken
  ?dokkenBandMember dbo:memberOf dbr:Dokken ;
                   a dbo:MusicArtist .

  # Step 3: Identify the band Watchtower
  dbr:Watchtower a dbo:MusicalBand .
  
  # Step 4: Find associated musical artists of Watchtower
  ?watchtowerAssociatedArtist dbo:associatedBandMember dbr:Watchtower ;
                             a dbo:MusicArtist .

  # Step 5: Determine commonality between the people associated with both Don Dokken and Watchtower
  ?commonArtist rdf:type dbo:MusicArtist .
  FILTER (?dokkenBandMember = ?commonArtist || ?watchtowerAssociatedArtist = ?commonArtist)
  
  # Return the band member of the person born who is a musical artist and is associated with both
  ?bandMember dbo:memberOf ?commonArtist ;
              a dbo:MusicArtist .
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
9,65,test,"Give me the alma mater of the awardee of the reference, that is an award, to Royal Medals and figure known as the nickname of Queen's University Belfast and alma mater of the mayor, that is a politician, of Northern Ireland Forum.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. <http://dbpedia.org/resource/Queen's_University_Belfast> <http://dbpedia.org/property/nickname> ?v3 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Royal Medals""@en . <http://dbpedia.org/resource/Northern_Ireland_Forum> <http://dbpedia.org/property/leader> ?v4 . ?v6 <http://dbpedia.org/ontology/almaMater> ?result . ?v6 <http://dbpedia.org/property/awards> ?v0 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://dbpedia.org/property/nickname> ?v3 . }","```sparql
# Query to get the alma mater of the awardee of an award related to Royal Medals
SELECT DISTINCT ?almaMater WHERE {
  ?award dbo:wikiPageRedirects db:Royal_Medals .
  ?recipient dbo:award ?award .
  ?recipient foaf:almaMater ?institution .
  ?institution rdfs:label ?almaMater .
  FILTER(LANG(?almaMater) = ""en"")
}

UNION

# Query to get the nickname of Queen's University Belfast
SELECT DISTINCT ?nickname WHERE {
  db:Queen's_University_Belfast dbo:nickname ?nickname .
  FILTER(LANG(?nickname) = ""en"")
}

UNION

# Query to get the alma mater of the mayor of Northern Ireland Forum
SELECT DISTINCT ?almaMater WHERE {
  ?mayor dbo:positionTitle ""Mayor""@en ;
         dbo:memberOf db:Northern_Ireland_Forum .
  ?mayor foaf:almaMater ?institution .
  ?institution rdfs:label ?almaMater .
  FILTER(LANG(?almaMater) = ""en"")
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
959,46,test,"Give me the native of the residence, that is a country, of Yōichi Masuzoe and member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of the person born in 1958.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v2 <http://dbpedia.org/ontology/birthYear> ""1958""^^<http://www.w3.org/2001/XMLSchema#gYear> . ?v2 <http://dbpedia.org/ontology/almaMater> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Yōichi_Masuzoe> <http://dbpedia.org/property/residence> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?result <http://dbpedia.org/ontology/team> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?nativePerson WHERE {
  # Identify Yōichi Masuzoe
  ?yoshiichi a dbo:Person ;
             dbp:birthday ""1958-01-01""^^xsd:date ;
             dbo:almaMater ?university ;
             dbo:residenceCountry ?country .

  # Ensure the alma mater is Japanese and an educational institution
  ?university a dbo:EducationalOrganization, dbo:University ;
              dbp:country dbr:Japan .

  # Find a person native to the residence country of Yōichi Masuzoe
  ?nativePerson dbo:nativeCountry ?country .
}
```",5,10,6,3,2,3,3,71,0,0,167,0,0.0,0
547,68,test,Give me the resting place of the child of the child of William Haliburton and resting place of the actor of the show with Emily Richard and resting place of the awardee of Knight Grand Cross of the Order of St Michael and St George.,"SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_St_Michael_and_St_George> . ?v5 <http://dbpedia.org/property/father> ""William Haliburton""@en . ?v4 <http://dbpedia.org/ontology/restingPlace> ?result . ?v0 <http://dbpedia.org/property/starring> ?v7 . ?v5 <http://dbpedia.org/ontology/child> ?v4 . ?v7 <http://dbpedia.org/ontology/restingPlace> ?result . ?v0 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emily_Richard> . ?v3 <http://dbpedia.org/ontology/restingPlace> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?grandchildRestingPlace ?actorRestingPlace ?awardeeRestingPlace WHERE {
  # Resting place of the child of the child of William Haliburton
  {
    SELECT ?grandchildRestingPlace WHERE {
      ?haliburton dbr:William_Haliburton .
      ?haliburton dbo:child ?child .
      ?child dbo:child ?grandchild .
      ?grandchild dbo:restingPlace ?grandchildRestingPlace .
    }
  }

  # Resting place of the actor of the show with Emily Richard
  {
    SELECT ?actorRestingPlace WHERE {
      ?show dbo:starring dbr:Emily_Richard .
      ?show dbo:castMember ?actor .
      ?actor dbo:restingPlace ?actorRestingPlace .
    }
  }

  # Resting place of the awardee of Knight Grand Cross of the Order of St Michael and St George
  {
    SELECT ?awardeeRestingPlace WHERE {
      ?order dbr:Knight_Grand_Cross_of_the_Order_of_St_Michael_and_St_George .
      ?order dbo:awardee ?awardee .
      ?awardee dbo:restingPlace ?awardeeRestingPlace .
    }
  }
}
```",8,8,9,3,3,3,3,71,0,0,1,0,0.0,0
659,62,test,"Give me the commander in the war, that is an event and a military conflict, of the figure known, that is a military unit and an organisation, as 'Polish Horse' and military force of Napoleonic Wars and commander in the force of the native, that is an office holder, of Kingdom of Ireland.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/property/nickname> ""'Polish Horse'""@en . ?v6 <http://dbpedia.org/ontology/commander> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v4 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Kingdom_of_Ireland> . ?v3 <http://dbpedia.org/ontology/commander> ?v4 . ?v0 <http://dbpedia.org/ontology/battle> ?v6 . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Napoleonic_Wars> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?event WHERE {
  ?unit a dbo:MilitaryUnit ;
        rdfs:label ""Polish Horse""@en .
  
  ?commander dbo:commandedMilitaryUnit ?unit ;
             rdfs:label ?name .

  ?event a dbo:MilitaryConflict, dbo:Event ;
         dbo:participatedIn ?commander ;
         rdfs:label ?eventName .

  FILTER CONTAINS(LCASE(?eventName), ""napoleonic wars"")

  OPTIONAL {
    ?leader dbo:nativeOf dbr:Kingdom_of_Ireland ;
            dbo:officeHolder ?office .
    
    ?force dbo:commandedBy ?leader ;
           dbo:participatedIn ?event .
  }
  
  FILTER (?name = ""Józef Poniatowski"")
}
```",7,12,8,3,3,3,3,71,0,0,13,0,0.0,0
54,60,test,"Give me the child of the father of the child of Thinkhaya of Pagan and predecessor of the child, that is an office holder and a royalty, of the reference to Thihapate of Mohnyin.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Thihapate of Mohnyin""@en . ?v2 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?v3 . ?v1 <http://dbpedia.org/property/father> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://dbpedia.org/property/father> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?predecessor WHERE {
  ?thinkhaya dbo:name ""Thinkhaya""@en .
  ?child dbo:parent ?thinkhaya ;
         dbo:predecessor ?predecessor .

  ?predecessor rdf:type/rdfs:subClassOf* dbo:Monarch ;
               rdf:type/rdfs:subClassOf* dbo:OfficeHolder .

  OPTIONAL { ?thihapate dbo:name ""Thihapate of Mohnyin""@en . }
}
```",6,8,7,3,2,3,3,71,0,0,1,0,0.0,0
427,64,test,"Give me the party of the person born, that is an office holder and a politician, as the birth name of Romano Prodi and reference to the name of the party of Michele Pinto and party of Giulio Andreotti.",SELECT ?result WHERE { <http://dbpedia.org/resource/Michele_Pinto> <http://dbpedia.org/ontology/party> ?v3 . <http://dbpedia.org/resource/Giulio_Andreotti> <http://dbpedia.org/ontology/party> ?result . ?v3 <http://xmlns.com/foaf/0.1/name> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?v1 <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/property/birthName> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?prodiParty ?pintoParty ?andreottiParty WHERE {
  # Romano Prodi's birth name and party
  OPTIONAL { 
    dbr:Romano_Prodi dbo:birthName ?birthName .
    FILTER EXISTS { ?birthName dbp:occupation ""Politician""@en }
    FILTER EXISTS { ?birthName dbo:officeHolder true }
    ?birthName dbo:partyAffiliation ?prodiParty .
  }

  # Michele Pinto's party
  OPTIONAL {
    dbr:Michele_Pinto dbo:partyAffiliation ?pintoParty .
  }

  # Giulio Andreotti's party
  OPTIONAL {
    dbr:Giulio_Andreotti dbo:partyAffiliation ?andreottiParty .
  }
}
```",7,9,8,3,3,3,3,71,0,0,2,0,0.0,0
9,47,test,"Give me the alma mater of the mayor, that is a politician, of Northern Ireland Forum and alma mater of the awardee of the reference, that is an award, to Royal Medals.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/almaMater> ?result . <http://dbpedia.org/resource/Northern_Ireland_Forum> <http://dbpedia.org/property/leader> ?v2 . ?v4 <http://dbpedia.org/property/awards> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/ontology/almaMater> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Royal Medals""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?almaMater
WHERE {
  # Find the mayor of Northern Ireland Forum who is a politician
  ?mayor dbo:positionTitle ""Mayor""@en .
  ?mayor dbo:isPolitician true .
  ?mayor foaf:isPrimaryTopicOf <http://dbpedia.org/resource/Northern_Ireland_Forum> .

  # Get the alma mater of the mayor
  ?mayor dbo:almaMater ?almaMater .

  # Find awardees of Royal Medals
  ?award dbo:name ""Royal Medal""@en .
  ?recipient dbo:receivedAward ?award .
  
  # Get the alma mater of the awardee
  ?recipient dbo:almaMater ?awardeeAlmaMater .

  # Filter to find common alma mater
  FILTER (?almaMater = ?awardeeAlmaMater)
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
184,63,test,"Give me the child of the child of Archduke Joseph Karl of Austria and parent of the native of the landmark at elevation, that is a settlement, of 96.0 and parent of the child of Archduke Joseph Francis of Austria.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v3 . ?v6 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Karl_of_Austria> . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Francis_of_Austria> . ?v4 <http://dbpedia.org/ontology/elevation> ""96.0""^^<http://www.w3.org/2001/XMLSchema#double> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/property/father> ?v6 . ?result <http://dbpedia.org/ontology/child> ?v2 . ?v3 <http://dbpedia.org/ontology/birthPlace> ?v4 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?result WHERE {
  # Step 1 & 2: Find the grandchild of Archduke Joseph Karl of Austria
  ?grandchild dbo:parent dbr:Archduke_Joseph_Karl_of_Austria .
  ?child dbo:parent ?grandchild .

  # Step 3, 4: Identify a native from a settlement with elevation 96.0 and find their parent
  ?settlement dbo:elevation ""96.0""^^xsd:float ;
              rdf:type dbo:Settlement .
  ?native dbo:nativePlace ?settlement .
  ?parent dbo:child ?native .

  # Step 5 & 6: Find the child of Archduke Joseph Francis and their parent
  ?archdukeChild dbo:parent dbr:Archduke_Joseph_Francis_of_Austria .
  ?archdukeParent dbo:child ?archdukeChild .

  # Combine conditions to find the result
  FILTER (?grandchild = ?native && ?parent = ?archdukeParent)
  BIND(?parent AS ?result)
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
994,65,test,"Give me the associated musical artist of the band member, that is a band and a group and an organisation, of the band, that is an organisation, of Fredrik Thordendal and band member of the person born, that is a musical artist, as Donald Maynard Dokken and associated musical artist of the associated musical artist of Watchtower (band).","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v1 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Fredrik_Thordendal> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v0 <http://dbpedia.org/property/birthName> ""Donald Maynard Dokken""@en . <http://dbpedia.org/resource/Watchtower_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?finalArtist WHERE {
  # Step 1: Fredrik Thordendal's band
  dbr:Fredrik_Thordendal dbo:bandMember ?meshuggah .
  
  # Step 2: Associated musical artists of Meshuggah that are bands/groups/organizations
  ?meshuggah dbo:associatedBand ?associatedArtist1 .
  FILTER EXISTS { ?associatedArtist1 a dbo:MusicalGroup . }
  FILTER EXISTS { ?associatedArtist1 a dbo:Organization . }

  # Step 3: Don Dokken's birth information
  dbr:Don_Dokken dbo:birthPlace ?bornPerson .

  # Step 4: Associated musical artists of Don Dokken
  dbr:Don_Dokken dbo:associatedBand ?associatedArtist2 .

  # Step 5: Associated musical artists of Watchtower
  dbr:Watchtower dbo:associatedBand ?watchtowerAssociatedArtist .

  # Step 6: Final associated musical artist
  ?watchtowerAssociatedArtist dbo:associatedBand ?finalArtist .
}
```",7,12,8,3,3,3,3,71,0,0,1,0,0.0,0
492,48,test,"Give me the person decedent at the work of the author of French Algeria and person decedent at the capital, that is a settlement, of Algeria.",SELECT ?result WHERE { <http://dbpedia.org/resource/French_Algeria> <http://dbpedia.org/property/author> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . <http://dbpedia.org/resource/Algeria> <http://dbpedia.org/ontology/capital> ?v1 . ?v2 <http://dbpedia.org/property/author> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?authorDecedent ?capitalDecedent WHERE {
  # Find the author of ""French Algeria""
  ?work dbo:title ""French Algeria""@en .
  ?work dbo:author ?author .

  # Find the decedent at the place associated with this author
  OPTIONAL { 
    ?author dbp:deathPlace ?place .
    ?person dbo:causeOfDeath ?place ;
            dbo:deceased ?authorDecedent .
  }

  # Find the capital of Algeria and its decedent
  dbr:Algeria dbo:capital ?capital .
  FILTER (isLiteral(?capital) && datatype(?capital) = xsd:string)
  
  OPTIONAL {
    ?person2 dbo:causeOfDeath ?capital ;
             dbo:deceased ?capitalDecedent .
  }
}
```",5,6,6,3,2,3,3,71,0,0,16,0,0.0,0
617,51,test,Give me the parent of the child of the commander in Battle of Panium and spouse of the child of Antiochus III the Great.,SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://dbpedia.org/ontology/child> ?v2 . <http://dbpedia.org/resource/Antiochus_III_the_Great> <http://dbpedia.org/ontology/child> ?v4 . <http://dbpedia.org/resource/Battle_of_Panium> <http://dbpedia.org/ontology/commander> ?v1 . ?result <http://dbpedia.org/ontology/child> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?parentOfChild ?spouseOfAntiochusChild
WHERE {
  # Step 1: Identify the commander in the Battle of Panium
  ?battle dbp:battleName ""Battle of Panium""@en .
  ?battle dbo:commander ?commander .

  # Step 2: Find the child of this commander
  ?child dbo:parent ?commander .

  # Step 3: Determine the parent of this child
  ?parentOfChild dbo:child ?child .

  # Step 4: Identify Antiochus III the Great's child
  ?antiochus dbp:name ""Antiochus III""@en .
  ?antiochusChild dbo:parent ?antiochus .

  # Step 5: Find the spouse of this child
  ?spouseOfAntiochusChild dbo:spouse ?antiochusChild .
}
```",5,5,6,3,2,3,3,71,0,0,2,0,0.0,0
16,61,test,Give me the professional in the profession of the actor of Unnatural (TV series) and person born as the birth name of the alumnus of Ohio State University.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Unnatural_(TV_series)> <http://dbpedia.org/property/starring> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v5 . ?v1 <http://dbpedia.org/property/birthName> ?v3 . ?v0 <http://dbpedia.org/property/occupation> ?v5 . ?v1 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Ohio_State_University> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?professional WHERE {
  # Step 1: Find the actor of ""Unnatural""
  ?unnaturalSeries dbr:Unnatural .
  ?unnaturalSeries dbo:actor ?actor .

  # Step 2: Get the profession of the actor
  ?actor dbo:occupation ?profession .

  # Step 3: Find alumni of Ohio State University and their birth names
  ?alumnus dbp:almaMater dbr:Ohio_State_University .
  ?alumnus dbp:birthName ?birthName .

  # Step 4: Find a person with the same birth name as an alumnus
  ?person dbp:birthName ?birthName .

  # Step 5: Match the profession of this person to that of the actor
  ?person dbo:occupation ?profession .
}
```",6,6,7,3,2,3,3,71,0,0,3,0,0.0,0
378,36,test,"Give me the war of Carl Pontus Gahn and claim to fame of the commander in the war, that is a military conflict and a societal event and an event, of Thomas Trigge.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/commander> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Thomas_Trigge> <http://dbpedia.org/ontology/battle> ?v0 . ?v1 <http://dbpedia.org/ontology/knownFor> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war ?triggeRole WHERE {
  ?person1 a dbo:MilitaryPerson ;
           foaf:name ""Carl Pontus Gahn""@en .
  
  ?person2 a dbo:MilitaryPerson ;
           foaf:name ""Thomas Trigge""@en .

  ?war a dbo:War ;
       dbo:participant ?person1, ?person2 .

  OPTIONAL {
    ?person2 dbo:roleIn ?triggeRole .
  }
}
```",4,7,5,3,2,3,3,71,0,0,2,0,0.0,0
801,68,test,"Give me the associated musical artist of the writer, that is a musical artist and an artist, of 40 Dayz & 40 Nightz and producer of the work, that is a musical work and a song and a work, of the professional, that is a musical artist, in Rapper and professional in the alter ego of the true self of The Shadow.","SELECT ?result WHERE { ?v7 <http://dbpedia.org/ontology/producer> ?result . <http://dbpedia.org/resource/40_Dayz_&_40_Nightz> <http://dbpedia.org/property/writer> ?v3 . ?v5 <http://dbpedia.org/property/alterEgo> ?v4 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v5 <http://xmlns.com/foaf/0.1/givenName> ""The Shadow""@en . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/occupation> ?v4 . ?v7 <http://dbpedia.org/property/writer> ?v0 . ?v0 <http://dbpedia.org/property/occupation> ""Rapper""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artist WHERE {
  ?work dbo:title ""40 Dayz & 40 Nightz"" ;
        dbo:writer ?writer .
  
  ?writer a dbo:MusicalArtist, dbo:Artist .

  ?work dbo:producer ?producer .
  
  ?producer a dbo:MusicalArtist ;
            dbo:profession dbr:Rapper .

  OPTIONAL { ?producer foaf:name ""The Shadow"" }
}
```",8,14,9,3,3,3,3,71,0,0,8,0,0.0,0
547,52,test,Give me the resting place of the child of the child of William Haliburton and resting place of Alan Cunningham and resting place of the actor of Enemy at the Door.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Enemy_at_the_Door> <http://dbpedia.org/property/starring> ?v5 . ?v5 <http://dbpedia.org/ontology/restingPlace> ?result . ?v3 <http://dbpedia.org/ontology/child> ?v2 . ?v3 <http://dbpedia.org/property/father> ""William Haliburton""@en . <http://dbpedia.org/resource/Alan_Cunningham> <http://dbpedia.org/ontology/restingPlace> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?grandchildRestingPlace ?alanCunninghamRestingPlace ?actorRestingPlace WHERE {
  # Resting place of the child of the child of William Haliburton
  {
    ?williamHaliburton dbo:child ?child .
    FILTER (str(?williamHaliburton) = ""William_Haliburton"")
    
    ?child dbo:child ?grandchild .
    
    OPTIONAL { ?grandchild dbo:restingPlace ?grandchildRestingPlace }
  }

  # Resting place of Alan Cunningham
  {
    ?alanCunningham a dbo:Person .
    FILTER (str(?alanCunningham) = ""Alan_Cunningham"")
    
    OPTIONAL { ?alanCunningham dbo:restingPlace ?alanCunninghamRestingPlace }
  }

  # Resting place of the actor of ""Enemy at the Door""
  {
    dbr:Enemy_at_the_Door dbo:actor ?actor .
    
    OPTIONAL { ?actor dbo:restingPlace ?actorRestingPlace }
  }
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
528,35,test,Give me the force of the person born as Narciso Campero Leyes and war of the military force of Battle of Pisagua.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> ?v1 . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/property/birthName> ""Narciso Campero Leyes""@en . ?v2 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Pisagua> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?force ?war 
WHERE {
  # Find the military force associated with Narciso Campero Leyes
  OPTIONAL { 
    dbr:Narciso_Campero_Leyes dbo:militaryService ?militaryEntity .
    ?militaryEntity dbo:member ?force .
  }
  
  # Find the war associated with the Battle of Pisagua
  dbr:Battle_of_Pisagua dbo:partOfWar ?war .
}
```",4,4,5,2,2,3,3,71,0,0,3,0,0.0,0
92,70,test,"Give me the band of the person born as the birth name of Joseph Michael and band member of the reference, that is an artist, to Nevermore and associated musical artist of the person born, that is an artist, as the actor of Return to Nuke 'Em High Volume 1.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/birthName> ?v1 . ?v4 <http://xmlns.com/foaf/0.1/name> ""Nevermore""@en . <http://dbpedia.org/resource/Joseph_Michael> <http://dbpedia.org/property/birthName> ?v1 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Return_to_Nuke_'Em_High_Volume_1> <http://dbpedia.org/property/starring> ?v0 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/bandMember> ?v3 . ?v7 <http://dbpedia.org/property/birthName> ?v0 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?v7 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band ?associatedArtist ?actor WHERE {
  # Geoff Tate's bands
  VALUES (?person) { dbr:Geoff_Tate }
  
  # Bands associated with Geoff Tate
  ?band dbo:member ?person .
  FILTER(?band IN (dbr:Queensrÿche, dbr:Nevermore))
  
  # Warrel Dane as an associated artist
  OPTIONAL {
    ?associatedArtist dbo:member ?band ;
                     foaf:name ""Warrel Dane""@en .
  }
  
  # Robert Englund's acting role
  VALUES (?actor) { dbr:Robert_Englund }
  ?actor dbo:profession dbr:Actor .

  # Check for any musical collaboration between Warrel Dane and Robert Englund
  OPTIONAL {
    ?collaboration dbo:artist ?associatedArtist ;
                  dbo:artist ?actor .
  }
}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
184,62,test,"Give me the parent of Archduchess Ilona of Austria and parent of the native of the landmark at elevation, that is a settlement, of 96.0 and child of the child of the parent, that is a royalty, of Archduke Ladislaus Philipp of Austria.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v6 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Archduke_Ladislaus_Philipp_of_Austria> <http://dbpedia.org/ontology/parent> ?v0 . ?v4 <http://dbpedia.org/ontology/elevation> ""96.0""^^<http://www.w3.org/2001/XMLSchema#double> . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Ilona_of_Austria> . ?v3 <http://dbpedia.org/ontology/birthPlace> ?v4 . ?result <http://dbpedia.org/ontology/child> ?v3 . ?result <http://dbpedia.org/property/father> ?v6 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parentIlona ?royalParentOfNative ?grandchildParent
WHERE {
  # Step 1: Find the parent of Archduchess Ilona of Austria
  ?ilona dbo:spouse|dbo:child dbr:Archduchess_Ilona_of_Austria .
  ?ilona a dbo:Person ;
         (dbo:parent) ?parentIlona .

  # Step 2: Find the native of a landmark at elevation 96.0 that is a settlement
  ?landmark dbo:elevation ""96.0""^^xsd:float ;
           dbo:settlement dbr:Settlement .
  ?native dbo:nativePlace ?landmark ;
          a dbo:Person .

  # Step 3: Find the parent of this native who is royalty
  ?native (dbo:parent) ?royalParentOfNative .
  FILTER EXISTS { ?royalParentOfNative dbo:occupation dbr:Royalty }

  # Step 4: Identify the child of the child of Archduke Ladislaus Philipp of Austria
  ?ladislaus dbo:child ?child1 .
  ?child1 dbo:child ?grandchild .

  # Step 5: Find the parent of this grandchild who is royalty
  ?grandchild (dbo:parent) ?grandchildParent .
  FILTER EXISTS { ?grandchildParent dbo:occupation dbr:Royalty }
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
303,22,test,"Give me the party of the commander, that is a politician, in United States invasion of Panama and entity in the country, that is a country, of El Valle de Antón.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/El_Valle_de_Antón> <http://dbpedia.org/ontology/country> ?v3 . <http://dbpedia.org/resource/United_States_invasion_of_Panama> <http://dbpedia.org/ontology/commander> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/ontology/party> ?result . ?result <http://dbpedia.org/ontology/country> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?commander ?party ?entityInCountry WHERE {
  # Find the commander of the United States invasion of Panama who is a politician
  ?invasion dbo:commander ?commander .
  FILTER(CONTAINS(LCASE(STR(?invasion)), ""united states invasion of panama"")) .
  
  ?commander dbo:occupation dbr:Politician .
  OPTIONAL { ?commander dbp:party ?party } .

  # Find entities related to El Valle de Antón that are countries
  ?location dbr:El_Valle_de_Antón ;
           dbo:country ?entityInCountry .
  FILTER(STR(?entityInCountry) = ""http://dbpedia.org/resource/Country"") .
}
```",4,6,5,2,2,2,3,28,0,0,2,0,0.0,0
547,44,test,Give me the resting place of the actor of Enemy at the Door and resting place of James Burton (Egyptologist) and resting place of the awardee of Knight Grand Cross of the Order of St Michael and St George.,SELECT ?result WHERE { <http://dbpedia.org/resource/Enemy_at_the_Door> <http://dbpedia.org/property/starring> ?v4 . ?v4 <http://dbpedia.org/ontology/restingPlace> ?result . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_St_Michael_and_St_George> . <http://dbpedia.org/resource/James_Burton_(Egyptologist)> <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?restingPlace WHERE {
  # Actor of ""Enemy at the Door""
  { 
    ?film dbo:title ""Enemy at the Door""@en .
    ?film dbo:starring ?actor .
    ?actor dbo:placeOfBurial ?restingPlace .
  }
  
  UNION
  
  # James Burton (Egyptologist)
  {
    ?person rdfs:label ""James Burton (Egyptologist)""@en .
    ?person dbo:occupation dbr:Egyptology .
    ?person dbo:placeOfBurial ?restingPlace .
  }

  UNION

  # Awardee of Knight Grand Cross of the Order of St Michael and St George
  {
    ?person dbo:honoraryTitle dbr:Knight_Brand_Cross_of_the_Order_of_St_Michael_and_St_George .
    ?person dbo:placeOfBurial ?restingPlace .
  }
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
492,26,test,"Give me the commander in the war, that is a military conflict and an event, of the commander in Battle of Verdun.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> ?v2 . <http://dbpedia.org/resource/Battle_of_Verdun> <http://dbpedia.org/ontology/commander> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT DISTINCT ?commander ?otherConflict WHERE {
  # Find the commander of the Battle of Verdun
  VALUES (?battle) { <http://dbpedia.org/resource/Battle_of_Verdun> }
  
  ?battle dbp:commander ?commander .
  
  # Check if this commander was also a commander in another military conflict that is an event
  ?otherConflict dbo:type/dbo:subClassOf* dbo:MilitaryConflict ;
                 dbp:commander ?commander ;
                 rdf:type dbo:Event .

}
```",3,5,4,3,1,3,3,71,0,0,92,0,0.0,0
339,17,test,Give me the father of the child of the parent of Princess Olga of Greece and Denmark and child of George I of Greece.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/George_I_of_Greece> <http://dbpedia.org/ontology/child> ?result . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Princess_Olga_of_Greece_and_Denmark> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?father WHERE {
  # Identify Princess Olga of Greece and Denmark
  ?olga dbo:name ""Princess Olga of Greece and Denmark""@en .
  
  # Find her parents
  ?parent dbo:child ?olga .
  
  # Find the child of one of her parents (who is also a child of George I)
  ?child dbo:parent ?parent .
  
  # Identify George I of Greece
  ?georgeI dbo:name ""George I of Greece""@en .
  
  # Ensure the child is also a child of George I
  ?child dbo:parent ?georgeI .
  
  # Find the father of this individual
  ?child foaf:father ?father .
}
```",4,4,5,3,2,3,2,20,0,0,1,0,0.0,0
959,21,test,"Give me the manager of 2013 Júbilo Iwata season and member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of Eiji Ōtsuka.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/team> ?v2 . <http://dbpedia.org/resource/Eiji_Ōtsuka> <http://dbpedia.org/ontology/almaMater> ?v2 . <http://dbpedia.org/resource/2013_Júbilo_Iwata_season> <http://dbpedia.org/ontology/manager> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?manager ?university WHERE {
  # Find Eiji Ōtsuka's role as manager of Júbilo Iwata in 2013
  ?person a dbo:Person ;
          foaf:name ""Eiji Ōtsuka""@en .
  
  ?team dbr:Júbilo_Iwata ;
        dbo:manager ?manager ;
        dbp:season ""2013"" .

  # Ensure the manager is an organization (typically, this would be a person in DBpedia)
  ?manager a dbo:Person .

  # Find Eiji Ōtsuka's alma mater
  ?person dbo:almaMater ?university .
  
  # Ensure the university is Japanese and an educational institution
  ?university a dbo:University ;
              dbo:country dbr:Japan ;
              rdf:type dbo:EducationalInstitution .
}
```",3,7,4,2,2,3,3,71,0,0,1,0,0.0,0
427,71,test,"Give me the party of the father of the alumnus of Massachusetts Institute of Technology and reference to the name of the party of Michele Pinto and party of the person born, that is an office holder and a politician, as the birth name of Romano Prodi.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/party> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v8 <http://dbpedia.org/property/birthName> ?v7 . ?v4 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Massachusetts_Institute_of_Technology> . ?v4 <http://dbpedia.org/property/father> ?v5 . <http://dbpedia.org/resource/Michele_Pinto> <http://dbpedia.org/ontology/party> ?v1 . ?v1 <http://xmlns.com/foaf/0.1/name> ?v2 . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/property/birthName> ?v7 . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v8 <http://dbpedia.org/ontology/party> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?fatherParty ?michelePintoParty ?romanoProdiParty WHERE {
  # Find MIT alumni and their fathers
  ?alumnus dbo:almaMater dbr:Massachusetts_Institute_of_Technology ;
           foaf:parent ?father .
  
  # Get the political party of the father
  OPTIONAL { ?father dbo:partyAffiliation ?fatherParty . }
  
  # Find Michele Pinto's political party
  dbr:Michele_Pinto dbo:partyAffiliation ?michelePintoParty .

  # Find Romano Prodi, ensuring he is an office holder and politician
  ?prodi foaf:name ""Romano Prodi""@en ;
         dbo:officeHolder true ;
         dbo:politician true .
  
  # Get the political party of Romano Prodi
  OPTIONAL { ?prodi dbo:partyAffiliation ?romanoProdiParty . }
}
```",9,11,10,3,3,3,3,71,0,0,2,0,0.0,0
281,55,test,"Give me the war of the profession, that is a military unit, of Heather Roy and war of the awardee of Knight Grand Cross of the Order of the Bath and entity in the birth place, that is a country, of Bob Heffron.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. <http://dbpedia.org/resource/Heather_Roy> <http://dbpedia.org/property/occupation> ?v2 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> ?v5 . <http://dbpedia.org/resource/Bob_Heffron> <http://dbpedia.org/ontology/birthPlace> ?v5 . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_the_Bath> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commonWar
WHERE {
  # Heather Roy's profession as a military unit and associated wars
  dbr:Heather_Roy dbo:militaryUnit ?heatherProfession .
  ?heatherProfession dbo:participatedIn ?war1 .

  # Awardee of Knight Grand Cross of the Order of the Bath and associated wars
  ?awardee dbo:title ""Knight Grand Cross of the Order of the Bath""@en ;
           dbo:participatedIn ?war2 .

  # Bob Heffron's birthplace country
  dbr:Bob_Heffron dbo:birthPlace ?heffronBirthPlace .
  ?heffronBirthPlace a dbo:Country .

  # Find common war between Heather Roy's profession and the awardee
  FILTER (?war1 = ?war2)
  BIND(?war1 AS ?commonWar)
}
```",6,8,7,2,3,3,3,71,0,0,1,0,0.0,0
16,46,test,Give me the professional in the profession of Satomi Ishihara and spouse of the person born as the birth name of Ted McGinley.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v4 . ?v1 <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Satomi_Ishihara> <http://dbpedia.org/property/occupation> ?v4 . ?v1 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/property/birthName> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?professional WHERE {
  # Find Satomi Ishihara's profession
  ?satomiIshihara a dbo:Person ;
                  foaf:name ""Satomi Ishihara""@en ;
                  dbo:occupation ?profession .

  # Find individuals with the same profession as Satomi Ishihara
  ?individual a dbo:Person ;
              dbo:occupation ?profession .

  # Ensure the individual is also spouse of Ted McGinley
  ?tedMcGinley a dbo:Person ;
               foaf:name ""Ted McGinley""@en ;
               dbp:spouse ?individual .
}
```",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
959,50,test,"Give me the manager of the team of Takashi Sekizuka and native of the residence, that is a country, of the leader, that is a politician, of 2010 Japanese House of Councillors election.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://dbpedia.org/property/residence> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/2010_Japanese_House_of_Councillors_election> <http://dbpedia.org/property/leader> ?v1 . ?v0 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Takashi_Sekizuka> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?manager WHERE {
  # Takashi Sekizuka's team
  ?team dbp:player ""Takashi Sekizuka""@en .
  
  # Manager of the team
  ?team dbo:manager ?manager .

  # Leader of the 2010 Japanese House of Councillors election
  ?leader foaf:name ?name ;
          dbo:election ""Japanese House of Councillors election, 2010""@en .

  # Leader's native residence country
  ?leader foaf:nationality ?country .
  
  FILTER (isLiteral(?country) && datatype(?country) = xsd:string)
}
```",5,7,6,3,2,3,3,71,0,0,6,0,0.0,0
161,65,test,"Give me the commander in the force, that is an event, of Emilio Mola and military force of the force, that is a societal event and an event and a military conflict, of Francisco Franco and military force of the force, that is a societal event and a military conflict, of the predecessor of Indalecio Prieto.",SELECT ?result WHERE { ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v6 <http://dbpedia.org/ontology/commander> ?v0 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v4 . ?v0 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Indalecio_Prieto> . ?v4 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Franco> . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v6 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Emilio_Mola> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commanderEmilioMolaEvent ?franciscoFrancoEvent ?indalecioPrietoPredecessorMilitaryForce
WHERE {
  # Find the event where Emilio Mola was a commander in a military force
  ?event1 dbo:commander dbr:Emilio_Mola .
  
  # Find the event involving Francisco Franco that is both a societal event and a military conflict
  ?event2 dbo:participatedIn dbr:Francisco_Franco ;
          rdf:type dbo:SocietalEvent , dbo:MilitaryConflict .

  # Identify Indalecio Prieto's predecessor (likely as Prime Minister)
  ?indalecioPrieto dbr:Indalecio_Prieto ;
                   dbo:predecessor ?predecessor .
  
  # Find the military force associated with this predecessor
  ?event3 dbo:participatedIn ?predecessor ;
          rdf:type dbo:MilitaryConflict .

}
```",7,13,8,3,3,3,3,71,0,0,32,0,0.0,0
492,69,test,"Give me the commander in the war, that is a military conflict and an event, of Frédéric-Georges Herr and person decedent at the work of the author of French Algeria and person decedent at the capital, that is a settlement, of the country of Khemis Miliana District.",SELECT ?result WHERE { <http://dbpedia.org/resource/French_Algeria> <http://dbpedia.org/property/author> ?v4 . <http://dbpedia.org/resource/Khemis_Miliana_District> <http://dbpedia.org/ontology/country> ?v1 . <http://dbpedia.org/resource/Frédéric-Georges_Herr> <http://dbpedia.org/ontology/battle> ?v7 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://dbpedia.org/ontology/capital> ?v2 . ?v7 <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/deathPlace> ?v3 . ?v3 <http://dbpedia.org/property/author> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?commander WHERE {
  ?war a dbo:MilitaryConflict ;
      a dbo:Event .
  
  ?commander dbo:commanderOf ?war ;
             dbo:deathPlace ?deathPlace1, ?deathPlace2 .

  ?author dbo:work dbr:French_Algeria ;
          dbo:deathPlace ?deathPlace1 .

  ?capital dbo:country dbr:Khemis_Miliana_District ;
           rdf:type dbo:Settlement .
  
  ?commander dbo:deathPlace ?deathPlace2, ?capital .

  FILTER (?deathPlace1 = ?deathPlace2)
}
```",8,11,9,3,3,3,3,71,0,0,1,0,0.0,0
54,57,test,"Give me the child of Thinkhaya of Pagan and parent of the child of the parent of Thado Minsaw of Prome and predecessor of the child, that is an office holder and a royalty, of Thihapate of Mohnyin.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Thihapate_of_Mohnyin> . ?v5 <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/successor> ?v3 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> . <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  # Thinkhaya of Pagan's child
  ?thinkhayaChild dbo:childOf dbp:Thinkhaya_of_Pagan .

  # Thado Minsaw of Prome's parent and their child
  ?thadoParent dbo:parentOf dbp:Thado_Minsaw_of_Prome .
  ?siblingOrOtherChild dbo:childOf ?thadoParent .

  # Thihapate of Mohnyin's child and predecessor
  ?thihapateChild dbo:childOf dbp:Thihapate_of_Mohnyin .
  ?predecessor dbo:predecessor ?thihapateChild .

  # The person must be an office holder and royalty
  ?person dbo:officeHolder true ;
          dbo:royalty true ;

  # Conditions to satisfy all relationships
  FILTER (?thinkhayaChild = ?person) .
  FILTER (?siblingOrOtherChild = ?person) .
  FILTER (?predecessor = ?person) .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
767,67,test,"Give me the entity in Baden-Württemberg and reference to the alter ego of the persona, that is a fictional character, of Matthew Burland and alma mater of the administration of the reference to George Kilbon Nash.","SELECT ?result WHERE { ?v6 <http://dbpedia.org/property/governor> ?v0 . ?v0 <http://xmlns.com/foaf/0.1/name> ""George Kilbon Nash""@en . ?v6 <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . ?v1 <http://dbpedia.org/property/alterEgo> ?v3 . ?v1 <http://dbpedia.org/property/alterEgo> ""Matthew Burland""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?result <http://dbpedia.org/ontology/state> <http://dbpedia.org/resource/Baden-Württemberg> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?entity WHERE {
  ?entity dbo:locatedIn dbpedia:Baden-W%C3%BCrttemberg .
  
  OPTIONAL { 
    ?fictionalCharacter foaf:alterEgo dbpedia:Matthew_Burland .
    ?entity dbo:associatedWith ?fictionalCharacter .
  }
  
  OPTIONAL {
    ?nash dbo:almaMater ?university .
    ?administration dbo:administeredBy ?nash .
    ?entity dbo:relatedTo ?administration .
  }
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
492,55,test,"Give me the commander in the war, that is a military conflict and an event, of Frédéric-Georges Herr and person decedent at the work of US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite and person decedent at the capital, that is a settlement, of Algeria.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . <http://dbpedia.org/resource/Algeria> <http://dbpedia.org/ontology/capital> ?v2 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/property/author> ""US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite""@en . ?v5 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Frédéric-Georges_Herr> <http://dbpedia.org/ontology/battle> ?v5 . ?result <http://dbpedia.org/ontology/deathPlace> ?v3 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?war WHERE {
  ?herr a dbo:MilitaryPerson ;
        foaf:name ""Frédéric-Georges Herr""@en .
  
  ?satterthwaite a dbo:GovernmentOfficial ;
                 foaf:name ""Joseph C. Satterthwaite""@en ;
                 dbo:placeOfDeath dbr:US_Assistant_Secretary_of_State_for_African_Affairs .

  ?algeriaCapital dbo:capital dbr:Algeria .
  
  ?war a dbo:MilitaryConflict, dbo:Event ;
       dbo:commander ?herr ;
       dbo:eventParticipant ?satterthwaite ;
       ?deathInWar dbo:placeOfDeath ?algeriaCapital .

  ?person dbo:deceasedAt ?algeriaCapital .
}
```",6,9,7,2,3,3,3,71,0,0,1,0,0.0,0
360,24,test,"Give me the reference to the author of Blinded by the Light and native of the death place, that is a settlement, of Winnie Madikizela-Mandela.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?result <http://xmlns.com/foaf/0.1/name> ?v0 . <http://dbpedia.org/resource/Blinded_by_the_Light> <http://dbpedia.org/property/author> ?v0 . <http://dbpedia.org/resource/Winnie_Madikizela-Mandela> <http://dbpedia.org/ontology/deathPlace> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?author WHERE {
  # Find the author of ""Blinded by the Light""
  ?song dbo:lyricsBy ?author .
  FILTER (str(?song) = ""Blinded_by_the_Light_(Bruce_Springsteen_song)"")

  # Ensure the death place is a settlement and matches Bizana
  OPTIONAL { 
    ?winnie dbo:birthPlace ?placeBirth .
    ?winnie dbo:deathPlace ?placeDeath .
    FILTER (?placeBirth = dbr:Bizana && ?placeDeath = dbr:Bizana)
    ?placeBirth rdf:type dbo:Settlement .
  }
}
```",4,5,5,2,2,2,3,28,0,0,1,0,0.0,0
959,39,test,"Give me the native of Japan and manager of the team of the manager, that is a sports manager, of 1998 Kashima Antlers season.",SELECT ?result WHERE { <http://dbpedia.org/resource/1998_Kashima_Antlers_season> <http://dbpedia.org/ontology/manager> ?v2 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Japan> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v0 <http://dbpedia.org/ontology/manager> ?result . ?v0 <http://dbpedia.org/ontology/manager> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?managerName ?teamManagedByManager WHERE {
  # Find the manager of Kashima Antlers in 1998
  ?kashimaAntlers dbr:Kashima_Antlers .
  ?kashimaAntlers dbo:season ?season .
  ?season dbp:year ""1998""^^xsd:gYear .
  ?kashimaAntlers dbo:manager ?manager .

  # Ensure the manager is a sports manager
  ?manager dbo:occupation dbr:Sports_manager .

  # Check if the manager is native to Japan
  ?manager dbo:nationality dbr:Japan .

  # Get the name of the manager
  ?manager rdfs:label ?managerName .
  
  # Find any team managed by this manager
  OPTIONAL {
    ?team dbp:manager ?manager .
    ?team rdfs:label ?teamManagedByManager .
  }
}
```",4,5,5,3,2,3,3,71,0,0,6,0,0.0,0
339,19,test,Give me the child of the child of Christian IX of Denmark and father of the child of the parent of Princess Olga of Greece and Denmark.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Princess_Olga_of_Greece_and_Denmark> . ?v4 <http://dbpedia.org/property/father> ?result . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v0 <http://dbpedia.org/ontology/child> ?v4 . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Christian_IX_of_Denmark> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Step 1: Identify children of Christian IX
  ?child1 dbo:spouse* dbr:Christian_IX_of_Denmark .
  
  # Step 2: Identify grandchildren (children of the child)
  ?grandchild dbo:parent ?child1 .

  # Step 3: Identify parent of Princess Olga
  ?olgaParent dbo:child dbr:Princess_Olga_of_Greece_and_Denmark .

  # Step 4: Identify father of Princess Olga (same as her parent)
  ?father dbo:parent dbr:Princess_Olga_of_Greece_and_Denmark .
  
  # Step 5: Find the person who is both a grandchild of Christian IX and the father of Princess Olga
  FILTER (?grandchild = ?father)
}
```",5,5,6,3,2,3,2,20,0,0,1,0,0.0,0
55,25,test,"Give me the band member of the band member, that is a band and a group, of San Francisco Symphony and band of Newsted and band member of the producer, that is a band, of Used to Love Her.",SELECT ?result WHERE { <http://dbpedia.org/resource/Used_to_Love_Her> <http://dbpedia.org/ontology/producer> ?v4 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/San_Francisco_Symphony> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. <http://dbpedia.org/resource/Newsted> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandMember WHERE {
  # Step 1: Find members of the San Francisco Symphony
  ?symphonyMember dbo:memberOf dbr:San_Francisco_Symphony .

  # Step 2: Check if these members are part of a band or group
  ?symphonyMember dbo:memberOf ?bandGroup .
  
  # Step 3: Identify bands associated with Newsted (Jason Newsted)
  ?newstedBand dbo:member dbr:Jason_Newsted .
  
  # Step 4: Find commonality between symphony members who are in a band and Newsted's bands
  FILTER (?bandGroup = ?newstedBand)

  # Step 5: Identify the producer of ""Used to Love Her""
  ?song dbo:producer ?producer .
  ?song rdfs:label ""Used to Love Her""@en .

  # Step 6: Find bands where this producer is a member
  ?producer dbo:memberOf ?bandProducer .

  # Step 7: Combine results to find the common band member
  FILTER (?bandGroup = ?bandProducer)
  
  # Return the band member
  ?symphonyMember rdfs:label ?bandMember .
}
```",5,8,6,2,3,2,3,28,0,0,1,0,0.0,0
547,58,test,Give me the resting place of the actor of Enemy at the Door and resting place of James Burton (Egyptologist) and resting place of the awardee of the award of Gerald Graham.,SELECT ?result WHERE { <http://dbpedia.org/resource/Enemy_at_the_Door> <http://dbpedia.org/property/starring> ?v5 . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/James_Burton_(Egyptologist)> <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Gerald_Graham> <http://dbpedia.org/property/awards> ?v1 . ?v2 <http://dbpedia.org/property/awards> ?v1 . ?v5 <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actorRestingPlace ?jamesBurtonRestingPlace ?awardeeRestingPlace WHERE {
  # Actor of ""Enemy at the Door""
  ?film dbo:title ""Enemy at the Door""@en .
  ?film dbo:starring ?actor .
  ?actor dbo:deathPlace ?actorDeathPlace .
  OPTIONAL { ?actor dbo:burialPlace ?actorRestingPlace }

  # James Burton (Egyptologist)
  ?jamesBurton a dbo:Egyptologist ;
               rdfs:label ""James Burton""@en .
  OPTIONAL { ?jamesBurton dbo:deathPlace ?jamesBurtonDeathPlace }
  OPTIONAL { ?jamesBurton dbo:burialPlace ?jamesBurtonRestingPlace }

  # Awardee of Gerald Graham's award
  ?award a dbo:Award ;
         dbo:recipient ?awardee .
  ?geraldGraham rdfs:label ""Gerald Graham""@en ;
                dbo:givenAward ?award .
  OPTIONAL { ?awardee dbo:deathPlace ?awardeeDeathPlace }
  OPTIONAL { ?awardee dbo:burialPlace ?awardeeRestingPlace }

}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
488,59,test,"Give me the birth place of the commander in the war, that is a military conflict and an event and a societal event, of Saitō Hajime and death place of the father, that is a politician, of the father, that is an office holder, of Matsudaira Tadamasa.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/commander> ?v2 . <http://dbpedia.org/resource/Matsudaira_Tadamasa> <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Saitō_Hajime> <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v5 <http://dbpedia.org/ontology/deathPlace> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/property/father> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthPlace ?deathPlace
WHERE {
  # Find Saitō Hajime's birthplace
  dbr:Saitō_Hajime dbo:birthPlace ?birthPlace .
  
  # Ensure the military conflict is also an event and societal event
  ?conflict dbo:commander dbr:Saitō_Hajime ;
            a dbo:MilitaryConflict, dbo:Event, dbo:SocietalEvent .

  # Find Matsudaira Tadamasa's father
  dbr:Matsudaira_Tadamasa dbp:father ?father .
  
  # Ensure the father is a politician and office holder
  ?father dbo:occupation ?occupation ;
          a dbo:Politician, dbo:OfficeHolder .
  
  # Find the death place of Matsudaira Tadamasa's father
  ?father dbo:deathPlace ?deathPlace .
}
```",6,11,7,3,2,3,3,71,0,0,1,0,0.0,0
528,48,test,"Give me the force of the person born as Narciso Campero Leyes and war of the military force of the entity, that is a societal event, in Chile.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/property/birthName> ""Narciso Campero Leyes""@en . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Chile> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?force ?war WHERE {
  # Find Narciso Campero Leyes and his birth name
  ?person a dbo:Person ;
          rdfs:label ""Narciso Campero Leyes""@en ;
          dbp:birthName ?birthName .

  # Identify the military force associated with him
  OPTIONAL { ?person dbo:militaryService ?force . }

  # Find wars involving this military force
  ?war a dbo:MilitaryConflict ;
       dbo:participatingMilitaryForce ?force ;
       dbo:location dbr:Chile ;
       dbo:type ""Societal event""@en .

}
```",5,6,6,3,2,3,3,71,0,0,4,0,0.0,0
488,51,test,"Give me the death place of the father, that is a politician, of Yūki Hideyasu and administration of the father of the spouse, that is a royalty, of Tokugawa Masako.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Tokugawa_Masako> . <http://dbpedia.org/resource/Yūki_Hideyasu> <http://dbpedia.org/property/father> ?v4 . ?v4 <http://dbpedia.org/ontology/deathPlace> ?result . ?v1 <http://dbpedia.org/property/father> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/property/leader> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?deathPlace ?administration 
WHERE {
  # Find Yūki Hideyasu's father and his death place
  ?yukiHideyasu dbo:father ?fatherYūki .
  ?fatherYūki dbo:occupation ?occupationYūki .
  FILTER(CONTAINS(LCASE(STR(?occupationYūki)), ""politician"")) .
  ?fatherYūki dbo:deathPlace ?deathPlace .

  # Find Tokugawa Masako's spouse and their administration
  ?tokugawaMasako dbo:spouse ?spouseTokugawa .
  ?spouseTokugawa dbo:occupation ?occupationSpouse .
  FILTER(CONTAINS(LCASE(STR(?occupationSpouse)), ""royalty"")) .
  ?spouseTokugawa dbo:administrativePost ?administration .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
427,57,test,"Give me the reference to Partito Popolare Italiano and party of the father of the alumnus of Massachusetts Institute of Technology and party of the person born, that is an office holder and a politician, as Romano Antonio Prodi.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/party> ?result . ?v3 <http://dbpedia.org/property/birthName> ""Romano Antonio Prodi""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://xmlns.com/foaf/0.1/name> ""Partito Popolare Italiano""@en . ?v5 <http://dbpedia.org/ontology/party> ?result . ?v0 <http://dbpedia.org/property/father> ?v5 . ?v0 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Massachusetts_Institute_of_Technology> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX politics: <http://politics.example.org/>

SELECT DISTINCT ?party1 ?party2 ?partyProdi
WHERE {
  # Partito Popolare Italiano reference
  dbr:Partito_Popolare_Italiano dbo:politicalParty ?party1 .

  # Father of an MIT alumnus and their party
  ?alumnus dbp:almaMater dbr:Massachusetts_Institute_of_Technology ;
           dbo:father ?father .
  OPTIONAL { ?father politics:party ?party2 . }

  # Romano Prodi's political party
  dbr:Romano_Prodi dbo:birthPlace ?_ ; 
                   dbo:officeHolder ?_ ;
                   dbo:politician ?_ ;
                   politics:party ?partyProdi .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
498,8,test,"Give me the band of the member, that is an artist, of Mortician (band) and band of Malevolent Creation.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Mortician_(band)> <http://dbpedia.org/ontology/bandMember> ?v0 . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Malevolent_Creation> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?memberBand WHERE {
  ?person dbo:bandMember dbp:Mortician .
  ?person a dbo:Artist .
  ?person dbo:band dbp:MalevolentCreation .
  ?person dbo:band ?memberBand .
}
```",3,4,4,2,2,2,2,9,0,0,1,0,0.0,0
485,23,test,"Give me the entity in the region, that is a country, of Western European Time and entity in the birth place, that is a region, of Joseph Whitaker (naturalist).",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Western_European_Time> . ?result <http://dbpedia.org/ontology/country> ?v1 . <http://dbpedia.org/resource/Joseph_Whitaker_(naturalist)> <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?result <http://dbpedia.org/ontology/country> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?country WHERE {
  ?region dbo:timeZone dbr:Western_European_Time .
  ?country a dbo:Country ;
           dbo:locatedIn ?region .
}

UNION

SELECT DISTINCT ?birthRegion WHERE {
  dbr:Joseph_Whitaker (dbo:naturalist|a) dbo:Naturalist ;
                        dbo:birthPlace ?birthLocation .
  ?birthLocation a dbo:Region ;
                 rdfs:label ?birthRegionLabel .
  FILTER(LANG(?birthRegionLabel) = ""en"")
}
```",4,6,5,2,2,2,3,28,0,0,357,0,0.0,0
547,30,test,Give me the resting place of James Burton (Egyptologist) and resting place of Simon Cadell and resting place of the awardee of Knight Grand Cross of the Order of St Michael and St George.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/James_Burton_(Egyptologist)> <http://dbpedia.org/ontology/restingPlace> ?result . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_St_Michael_and_St_George> . <http://dbpedia.org/resource/Simon_Cadell> <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?person ?restingPlace WHERE {
  # James Burton (Egyptologist)
  { 
    ?person rdfs:label ""James Burton (Egyptologist)""@en .
    ?person dbo:deathPlace ?restingPlace .
  }
  
  UNION
  
  # Simon Cadell
  { 
    ?person rdfs:label ""Simon Cadell""@en .
    ?person dbo:deathPlace ?restingPlace .
  }
  
  UNION
  
  # Awardee of Knight Grand Cross of the Order of St Michael and St George
  {
    ?awardee dbo:honoursReceived ?order .
    ?order rdfs:label ""Knight Grand Cross of the Order of St Michael and St George""@en .
    ?awardee dbo:deathPlace ?restingPlace .
  }
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
492,40,test,Give me the person decedent at the work of the author of French Algeria and person decedent at Algiers and commander in Franco-Hova Wars.,SELECT ?result WHERE { <http://dbpedia.org/resource/Franco-Hova_Wars> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . <http://dbpedia.org/resource/French_Algeria> <http://dbpedia.org/property/author> ?v2 . ?v1 <http://dbpedia.org/property/author> ?v2 . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Algiers> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?decedentAtWork ?decedentAtAlgiers ?commanderInWars
WHERE {
  # Find the author of ""French Algeria""
  ?work dbo:title ""French Algeria""@en .
  ?work dbo:author ?author .

  # Find decedents associated with this work (assuming a fictional property for demonstration)
  ?author dbo:decedentAtWork ?decedentAtWork .

  # Find persons who died in Algiers
  ?person dbo:deathPlace dbr:Algiers .
  BIND(?person AS ?decedentAtAlgiers)

  # Find commander in Franco-Hova Wars (assuming a fictional property for demonstration)
  ?warEvent dbo:commander ?commanderInWars .
  FILTER(CONTAINS(LCASE(STR(?warEvent)), ""franco-hova wars""))
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
54,66,test,"Give me the predecessor of the child, that is an office holder and a royalty, of the reference to Thihapate of Mohnyin and parent of the child of Narapati I of Ava and child of the father of Soe Min Wimala Dewi.","SELECT ?result WHERE { ?v6 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Narapati_I_of_Ava> . ?v2 <http://dbpedia.org/property/father> ?v1 . ?v6 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Soe_Min_Wimala_Dewi> <http://dbpedia.org/property/father> ?v3 . ?v3 <http://dbpedia.org/ontology/child> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://xmlns.com/foaf/0.1/name> ""Thihapate of Mohnyin""@en . ?result <http://dbpedia.org/ontology/successor> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?predecessor WHERE {
  # Thihapate of Mohnyin's child who is an office holder and royalty
  ?thihapateChild dbo:childOf dbr:Thihapate_of_Mohnyin ;
                  a dbo:Monarch ; # Assuming Monarch indicates royalty
                  dbo:officeHolder ?office .

  # Narapati I of Ava's child
  ?narapatiIChild dbo:childOf dbr:Narapati_I_of_Ava .

  # Soe Min Wimala Dewi's father and his child
  ?soeMinWimalaParent dbo:parentOf dbr:Soe_Min_Wimala_Dewi .
  ?soeMinWimalaChild dbo:childOf ?soeMinWimalaParent .

  # Find the predecessor of Thihapate's child who is an office holder and royalty
  ?thihapateChild dbo:predecessor ?predecessor .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
92,50,test,"Give me the associated musical artist of the person born, that is an artist, as the actor of Return to Nuke 'Em High Volume 1 and band of the person born as Joseph Michael Furney.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/bandMember> ?v3 . ?v3 <http://dbpedia.org/property/birthName> ""Joseph Michael Furney""@en . ?v4 <http://dbpedia.org/property/birthName> ?v0 . <http://dbpedia.org/resource/Return_to_Nuke_'Em_High_Volume_1> <http://dbpedia.org/property/starring> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actorArtist ?band 
WHERE {
  # Find the actor of ""Return to Nuke 'Em High Volume 1"" who is also a musician
  ?movie dbo:starring ?actor .
  ?actor dbo:birthName ?actorBirthName .
  ?actor dbo:occupation ?actorOccupation .
  
  FILTER (?movie = dbr/Return_to_Nuke_'Em_High_Volume_1)
  FILTER CONTAINS(?actorOccupation, ""musician"")
  OPTIONAL { ?actor dbo:musicArtist ?actorArtist . }
  
  # Find Joseph Michael Furney and his band
  ?person dbo:birthName ""Joseph Michael Furney"" .
  OPTIONAL { ?person dbo:band ?band . }
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
54,27,test,"Give me the predecessor of the child, that is an office holder and a royalty, of the reference to Thihapate of Mohnyin.","SELECT ?result WHERE { ?v1 <http://xmlns.com/foaf/0.1/name> ""Thihapate of Mohnyin""@en . ?v2 <http://dbpedia.org/property/father> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/successor> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?predecessor WHERE {
  # Identify Thihapate of Mohnyin
  VALUES ?thihapate { dbr:Thihapate_of_Mohnyin }

  # Find children of Thihapate of Mohnyin
  ?child dbo:parent ?thihapate .

  # Filter children who are office holders and royalty
  ?child a dbo:Monarch .
  ?child dbo:officeHolderOf ?office .

  # Find predecessor for each qualifying child
  ?predecessor dbo:succeededBy ?child .
}
```",3,5,4,3,1,3,3,71,0,0,1,0,0.0,0
314,25,test,Give me the awardee of the award of Sergei Makovetsky and commander in Spanish Civil War and person deceased at the headquarter of House of Sombrerete.,SELECT ?result WHERE { <http://dbpedia.org/resource/Spanish_Civil_War> <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Sergei_Makovetsky> <http://dbpedia.org/property/awards> ?v4 . ?result <http://dbpedia.org/ontology/restingPlace> ?v3 . ?result <http://dbpedia.org/property/awards> ?v4 . <http://dbpedia.org/resource/House_of_Sombrerete> <http://dbpedia.org/ontology/location> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  # Find the award Sergei Makovetsky received
  dbr:Sergei_Makovetsky dbo:awardReceived ?award .

  # Find commanders in the Spanish Civil War
  ?commander a dbo:MilitaryPerson ;
             dbo:rank ?rank ;
             dbp:conflict ?civilWar .
  
  FILTER (CONTAINS(LCASE(STR(?civilWar)), ""spanish civil war""))

  # Ensure the person is deceased at the headquarters of House of Sombrerete
  ?commander dbo:deathPlace dbr:Headquarters_of_House_of_Sombrerete .

  # Match the awardee of the same award as Sergei Makovetsky
  ?person dbo:awardReceived ?award .
  
  # Ensure the person is a commander in the Spanish Civil War and matches the death condition
  FILTER (?commander = ?person)
}
```",5,5,6,2,3,2,3,28,0,0,1,0,0.0,0
767,60,test,"Give me the entity in the administration, that is a settlement, of the writer of Where It's At (Dustin Lynch album) and reference to the alter ego of the persona, that is a fictional character, of Matthew Burland.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/alterEgo> ""Matthew Burland""@en . ?v2 <http://dbpedia.org/property/leaderParty> ?v3 . <http://dbpedia.org/resource/Where_It's_At_(Dustin_Lynch_album)> <http://dbpedia.org/property/writer> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://xmlns.com/foaf/0.1/name> ?v1 . ?v0 <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://dbpedia.org/ontology/state> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?settlement ?alterEgo WHERE {
  # Find the writer of ""Where It's At"" by Dustin Lynch
  dbr:Where_It%27s_At_(Dustin_Lynch_album) dbo:performer dbr:Dustin_Lynch .
  
  # Get settlements related to Dustin Lynch
  OPTIONAL { dbr:Dustin_Lynch dbo:placeOfBirth ?settlement . }
  OPTIONAL { dbr:Dustin_Lynch dbo:residence ?settlement . }

  # Find Matthew Burland's alter ego
  dbr:Matthew_Burland dbo:fictionalCharacter ?alterEgo .
  
  FILTER(?settlement != null)
}
```",6,8,7,3,2,3,3,71,0,0,8,0,0.0,0
547,59,test,Give me the resting place of the child of the child of William Haliburton and resting place of the actor of the show with Emily Richard.,"SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> ""William Haliburton""@en . ?v0 <http://dbpedia.org/property/starring> ?v5 . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . ?v0 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emily_Richard> . ?v5 <http://dbpedia.org/ontology/restingPlace> ?result . ?v3 <http://dbpedia.org/ontology/child> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

# Part 1: Resting place of the child of the child of William Haliburton
SELECT DISTINCT ?grandchild ?restingPlaceHaliburton WHERE {
  VALUES ?williamHaliburton { dbr:William_Haliburton }
  
  # Find children of William Haliburton
  ?child dbo:parent ?williamHaliburton .
  
  # Find grandchildren (children of the child)
  ?grandchild dbo:parent ?child .
  
  # Get resting place of each grandchild
  OPTIONAL { ?grandchild dbo:placeOfBurial ?restingPlaceHaliburton }
}

UNION

# Part 2: Resting place of the actor from a show with Emily Richard
SELECT DISTINCT ?actor ?restingPlaceActor WHERE {
  VALUES ?emilyRichard { dbr:Emily_Richard }
  
  # Find shows featuring Emily Richard
  ?show dbo:starring ?emilyRichard .
  
  # Find actors in those shows
  ?actor dbo:starring ?show .
  
  # Get resting place of each actor
  OPTIONAL { ?actor dbo:placeOfBurial ?restingPlaceActor }
}
```",6,6,7,3,2,3,3,71,0,0,1,0,0.0,0
251,27,test,"Give me the death place of the author of The Twelve Abbots of Challant and administration of the ruling party, that is a political party and an organisation, in Sicily and location of Battle of Marengo.",SELECT ?result WHERE { <http://dbpedia.org/resource/Sicily> <http://dbpedia.org/property/leaderParty> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/The_Twelve_Abbots_of_Challant> <http://dbpedia.org/property/author> ?v0 . <http://dbpedia.org/resource/Battle_of_Marengo> <http://dbpedia.org/ontology/place> ?result . ?result <http://dbpedia.org/property/leaderParty> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

# Query for the death place of the author of ""The Twelve Abbots of Challant""
SELECT ?deathPlace WHERE {
  ?author dbo:title ""The Twelve Abbots of Challant""@en .
  ?author dbo:deathPlace ?deathPlace .
}

UNION

# Query for the administration of the ruling party in Sicily
SELECT ?administration WHERE {
  ?party dbo:country dbr:Sicily .
  ?party dbo:isRulingParty true .
  ?party dbo:administration ?administration .
}

UNION

# Query for the location of the Battle of Marengo
SELECT ?location WHERE {
  ?battle dbo:title ""Battle of Marengo""@en ;
          dbo:place ?location .
}
```",5,7,6,2,3,2,3,28,0,0,1,0,0.0,0
747,20,test,Give me the person born on 1985-04-29 and band of the writer of Apollo (Hardwell song).,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthDate> ""1985-04-29""^^<http://www.w3.org/2001/XMLSchema#date> . <http://dbpedia.org/resource/Apollo_(Hardwell_song)> <http://dbpedia.org/property/writer> ?v2 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?band WHERE {
  # Find the person born on 1985-04-29
  ?person a dbo:Person ;
          dbo:birthDate ""1985-04-29""^^xsd:date .

  # Identify the songwriter for Hardwell's song ""Apollo""
  ?song dbo:lyricsBy ?writer .
  ?song dbp:title ""Apollo (Hardwell song)"" .
  
  # Ensure the writer is the same person found above
  FILTER (?person = ?writer)

  # Find the band associated with this writer
  OPTIONAL { ?band dbo:member ?writer . }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
712,17,test,Give me the capital of South Russia (1919–1920) and resting place of the awardee of the show of Soviet Union.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/awards> ?v0 . ?v3 <http://dbpedia.org/ontology/restingPlace> ?result . ?v0 <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/Soviet_Union> . <http://dbpedia.org/resource/South_Russia_(1919–1920)> <http://dbpedia.org/ontology/capital> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?capital ?restingPlace WHERE {
  # Part 1: Capital of South Russia (1919–1920)
  OPTIONAL {
    ?capital dbo:country dbr:South_Russia ;
             dbo:populationTotal ?population .
    FILTER (?population > 100000) # Assuming a significant city
  }

  # Part 2: Resting place of an awardee of the Hero of the Soviet Union
  ?person dbo:award dbr:Hero_of_the_Soviet_Union ;
          dbo:deathPlace ?restingPlace .
  
  FILTER EXISTS { ?person dbo:birthPlace ?birthPlace } # Ensuring it's a notable person

}
```",4,4,5,3,2,3,2,20,0,50,1,0.0,0.0,0
16,56,test,Give me the person born as the birth name of the alumnus of Ohio State University and spouse of the person born as Ted Martin McGinley and professional in Actress.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://dbpedia.org/property/birthName> ""Ted Martin McGinley""@en . ?result <http://dbpedia.org/property/occupation> ""Actress""@en . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Ohio_State_University> . ?result <http://dbpedia.org/property/birthName> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person ?birthName
WHERE {
  ?alumnus dbo:alumnusOf dbr:Ohio_State_University .
  ?spouse foaf:name ""Ted Martin McGinley""@en .
  ?alumnus dbo:spouse ?spouse .
  ?spouse dbo:profession dbr:Actress .
  ?person foaf:name ?birthName .
  ?person dbo:spouse ?spouse .
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
959,54,test,"Give me the member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of Eiji Ōtsuka and native of the residence, that is a country, of the leader, that is a politician, of 2010 Japanese House of Councillors election and manager of 2013 Júbilo Iwata season.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?v1 <http://dbpedia.org/property/residence> ?v4 . ?result <http://dbpedia.org/ontology/birthPlace> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. <http://dbpedia.org/resource/Eiji_Ōtsuka> <http://dbpedia.org/ontology/almaMater> ?v2 . ?result <http://dbpedia.org/ontology/team> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/2013_Júbilo_Iwata_season> <http://dbpedia.org/ontology/manager> ?result . <http://dbpedia.org/resource/2010_Japanese_House_of_Councillors_election> <http://dbpedia.org/property/leader> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?university WHERE {
  # Eiji Ōtsuka's alma mater
  dbr:Eiji_Ōtsuka dbo:almaMater ?university .
  
  # The university must be Japanese, an organization, a university, and an educational institution
  ?university dbo:country dbr:Japan ;
              rdf:type dbo:Organisation ;
              rdf:type dbo:University ;
              rdf:type dbo:EducationalInstitution .

  # Leader of the 2010 Japanese House of Councillors election
  ?leader dbp:electionLeaderOf dbr:2010_Japanese_House_of_Councillors_election .
  
  # The leader's native country
  ?leader dbo:nativeCountry ?country .

  # Manager of the 2013 Júbilo Iwata season
  ?manager dbp:managedTeam dbr:Júbilo_Iwata ;
           dbp:managementSeason ""2013""^^xsd:string .
  
  # The university must be in the leader's native country and associated with the manager
  ?university dbo:country ?country ;
              ?relation ?manager .
}
```",6,12,7,3,3,3,3,71,0,0,1,0,0.0,0
801,47,test,"Give me the producer of the work, that is a musical work and a song and a work, of the professional, that is a musical artist, in Rapper and professional in the alter ego of The Shadow.","SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?result <http://dbpedia.org/property/occupation> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/property/occupation> ""Rapper""@en . ?v4 <http://dbpedia.org/property/writer> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v4 <http://dbpedia.org/ontology/producer> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?producer WHERE {
  ?work a dbo:MusicalWork ;
        a dbo:Song ;
        a dbo:CreativeWork .
  
  ?work dbo:performer ?artist .
  ?artist dbo:alias dbr:The_Shadow ;
          dbo:occupation dbr:Rapper .

  ?work dbo:producer ?producer .
}
```",5,9,6,3,2,3,3,71,0,0,473,0,0.0,0
488,70,test,"Give me the administration of the father of the spouse, that is a royalty, of Tokugawa Masako and birth place of the commander in Boshin War and death place of the father, that is a politician, of the father, that is an office holder, of Matsudaira Tadamasa.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Tokugawa_Masako> . ?v1 <http://dbpedia.org/property/father> ?v3 . ?v7 <http://dbpedia.org/ontology/deathPlace> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Boshin_War> <http://dbpedia.org/ontology/commander> ?v4 . ?v4 <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/property/leader> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/father> ?v7 . <http://dbpedia.org/resource/Matsudaira_Tadamasa> <http://dbpedia.org/property/father> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?administration ?birthPlace ?deathPlace 
WHERE {
  # Tokugawa Masako's spouse and his father (royalty)
  ?spouse a dbo:Spouse ;
          dbo:spouse dbr:Tokugawa_Masako .
  
  ?fatherOfSpouse dbo:child ?spouse ;
                  rdf:type dbo:Person ;
                  dbo:royalty true .

  # Administration of the spouse's father
  OPTIONAL { 
    ?administration dbo:administrator ?fatherOfSpouse .
  }

  # Commander in Boshin War and their birthplace
  ?commanderInBoshinWar a dbo:Commander ;
                        dbo:battle dbr:Boshin_War .

  ?birthPlace dbo:birthPlace ?commanderInBoshinWar .

  # Father of Matsudaira Tadamasa (office holder) and his father (politician)
  ?fatherOfTadamasa dbo:child dbr:Matsudaira_Tadamasa ;
                    rdf:type dbo:OfficeHolder .

  ?grandFatherOfTadamasa dbo:child ?fatherOfTadamasa ;
                         rdf:type dbo:Politician .

  # Death place of the politician father
  OPTIONAL {
    ?deathPlace dbo:deathPlace ?grandFatherOfTadamasa .
  }
}
```",8,11,9,3,3,3,3,71,0,0,1,0,0.0,0
285,16,test,Give me the parent of the child of Tina Onassis Niarchos and spouse of the professional in .,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v3 . ?v3 <http://dbpedia.org/property/occupation> """"@en . ?v2 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Tina_Onassis_Niarchos> <http://dbpedia.org/ontology/child> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parent
WHERE {
  ?child dbo:parent <http://dbpedia.org/resource/Tina_Onassis_Niarchos> .
  ?child dbo:parent ?parent .
}
```",4,4,5,2,2,3,2,20,2,0,0,1.0,1.0,1.0
659,70,test,"Give me the military force of the force, that is a societal event and an event and a military conflict, of the reference to Rutger Jan Schimmelpenninck and commander in the force of Arthur Wellesley, 1st Duke of Wellington and commander in the war, that is an event and a military conflict, of the figure known, that is a military unit and an organisation, as 'Polish Horse'.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/nickname> ""'Polish Horse'""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v0 <http://dbpedia.org/ontology/battle> ?v7 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v4 <http://dbpedia.org/ontology/commander> ?result . ?v7 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v4 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Arthur_Wellesley,_1st_Duke_of_Wellington> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://xmlns.com/foaf/0.1/name> ""Rutger Jan Schimmelpenninck""@en . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://dbpedia.org/ontology/commander> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce WHERE {
  ?militaryConflict dbo:commander dbr:Rutger_Jan_Schimmelpenninck ;
                   dbo:commander dbr:Arthur_Wellesley_1st_Duke_of_Wellington .
  
  ?militaryConflict a dbo:MilitaryConflict ;
                   dbo:participatingOrganisation ?militaryForce .

  ?militaryForce a dbo:MilitaryUnit, dbo:Organization ;
                 rdfs:label ""Polish Horse""@en .

  FILTER (regex(str(?militaryConflict), ""societal event"", ""i"") &&
          regex(str(?militaryConflict), ""event"", ""i""))
}
```",8,15,9,3,3,3,3,71,0,0,15,0,0.0,0
328,59,test,Give me the commander in the force of the person decedent at Budapest and awardee of the award of the commander in Volcano and Ryukyu Islands campaign.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/awards> ?v2 . ?v0 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Budapest> . <http://dbpedia.org/resource/Volcano_and_Ryukyu_Islands_campaign> <http://dbpedia.org/ontology/commander> ?v3 . ?v5 <http://dbpedia.org/ontology/commander> ?v0 . ?v5 <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/property/awards> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  ?decedent dbo:deathPlace dbr:Budapest .
  ?force dbo:commanderOf ?commander .
  ?decedent dbo:memberOf ?force .
  
  ?award dbo:name ?awardName .
  FILTER (CONTAINS(LCASE(?awardName), ""volcano"") || CONTAINS(LCASE(?awardName), ""ryukyu islands""))
  ?commander dbo:award ?award .
}
```",6,6,7,3,2,3,3,71,0,0,15,0,0.0,0
54,64,test,"Give me the child of the father of the child of Thinkhaya of Pagan and predecessor of the child, that is an office holder and a royalty, of the reference to Thihapate of Mohnyin and parent of Thado Minsaw of Prome.","SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""Thihapate of Mohnyin""@en . ?v3 <http://dbpedia.org/property/father> ?v2 . ?v1 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?v3 . ?result <http://dbpedia.org/ontology/successor> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> <http://dbpedia.org/ontology/parent> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Thinkhaya of Pagan and his child
  ?thinkhaya a dbo:Monarch ;
             foaf:name ""Thinkhaya""@en ;
             dbo:country dbr:Pagan_Kingdom .
  
  ?child dbo:parent ?thinkhaya .

  # Child of Thinkhaya's child (grandchild)
  ?grandchild dbo:parent ?child .

  # Predecessor of the grandchild
  ?predecessor dbo:successor ?grandchild ;
               a dbo:Monarch ;
               dbo:officeHolder true ;
               dbo:royalty true .

  # Thihapate of Mohnyin and his reference
  ?thihapate a dbo:Monarch ;
             foaf:name ""Thihapate""@en ;
             dbo:country dbr:Mohnyin_Kingdom .
  
  ?reference owl:sameAs ?thihapate .

  # Parent of Thado Minsaw of Prome
  ?thadoMinsaw a dbo:Monarch ;
               foaf:name ""Thado Minsaw""@en ;
               dbo:country dbr:Prome_Kingdom .
  
  ?parent dbo:child ?thadoMinsaw .

  # Ensure the predecessor is also the parent of Thado Minsaw
  FILTER (?predecessor = ?reference && ?predecessor = ?parent)
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
232,61,test,"Give me the native of the residence, that is a settlement and British, of the native, that is a politician and an office holder, of France and actor of the claim to fame, that is a film and a military conflict, of the professional in Actor, narrator and producer.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/France> . ?v0 <http://dbpedia.org/ontology/knownFor> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v0 <http://dbpedia.org/property/occupation> ""Actor, narrator and producer""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v5 <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://dbpedia.org/property/residence> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?nativeOfResidence WHERE {
  # Step 1: Identify the professional in Actor, narrator, and producer
  ?actor a dbo:Actor ;
         dbo:narrator true ;
         dbo:producer true .

  # Step 2: Find their claim to fame (film or military conflict)
  ?fame dbo:actor ?actor .
  FILTER (?fame IN (dbr:Film, dbr:MilitaryConflict))

  # Step 3: Locate a politician and office holder from France
  ?politician dbo:nationality dbr:France ;
              dbo:officeHolder true .

  # Link the politician to the fame of the actor
  ?fame dbo:actor ?politician .

  # Step 4: Determine the native of this politician
  ?politician dbo:birthPlace ?nativeOfPolitician .

  # Step 5: Find the residence that is a settlement and British
  ?nativeOfPolitician dbo:residence ?residence .
  FILTER EXISTS { ?residence a dbo:Settlement . }
  FILTER EXISTS { ?residence dbo:country dbr:United_Kingdom . }

  # The native of this residence is what we want to find
  ?residence dbo:native ?nativeOfResidence .
}
```",6,12,7,3,2,3,3,71,0,0,1,0,0.0,0
184,45,test,Give me the parent of Géza von Habsburg and parent of the child of the parent of Archduchess Margaret of Austria (born 1925) and child of Archduke Joseph August of Austria.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Géza_von_Habsburg> . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_August_of_Austria> . ?v1 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/child> ?v1 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Margaret_of_Austria_(born_1925)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT DISTINCT ?gezaParent ?josephChild
WHERE {
  # Find Géza von Habsburg's parent
  ?geza dbo:parent ?gezaParent .
  FILTER(STR(?geza) = ""Géza von Habsburg"") .

  # Find Archduchess Margaret of Austria (born 1925)'s grandparent
  ?margaret dbo:birthDate ?date ;
           dbo:parent ?margaretParent .
  FILTER(year(?date) = 1925 && STR(?margaret) = ""Archduchess_Margaret_of_Austria_(1925)"") .

  ?margaretParent dbo:parent ?margaretGrandparent .

  # Find Archduke Joseph August of Austria's child
  ?joseph dbo:child ?josephChild .
  FILTER(STR(?joseph) = ""Archduke_Joseph_August_of_Austria"") .
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
747,58,test,Give me the person born on 1985-04-29 and band of the writer of Apollo (Hardwell song) and band of the person born as the persona of Shèna.,"SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/birthDate> ""1985-04-29""^^<http://www.w3.org/2001/XMLSchema#date> . ?v2 <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Apollo_(Hardwell_song)> <http://dbpedia.org/property/writer> ?v5 . <http://dbpedia.org/resource/Shèna> <http://xmlns.com/foaf/0.1/givenName> ?v1 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?person1985 ?bandOfApolloWriter ?bandOfShena
WHERE {
  # Find the person born on 1985-04-29
  ?person1985 a dbo:Person ;
              foaf:birthDate ""1985-04-29""^^xsd:date .

  # Find the writer of the song ""Apollo"" by Hardwell and their band
  ?song dbo:title ""Apollo (Hardwell song)"" ;
        dbo:writer ?writer .
  OPTIONAL { ?writer dbo:band ?bandOfApolloWriter . }

  # Find the person known as Shèna and their birthdate
  ?shena a dbo:Person ;
         foaf:name ""Shèna"" .

  # Find the band of the person known as Shèna
  OPTIONAL { ?shena dbo:band ?bandOfShena . }
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
488,60,test,"Give me the birth place of the commander in the war, that is a military conflict and an event and a societal event, of Saitō Hajime and administration of the father of the spouse, that is a royalty, of Tokugawa Masako.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Saitō_Hajime> <http://dbpedia.org/ontology/battle> ?v3 . ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Tokugawa_Masako> . ?result <http://dbpedia.org/property/leader> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/ontology/commander> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace ?warName ?administration
WHERE {
  # Saitō Hajime's birthplace
  dbr:Saitō_Hajime dbo:birthPlace ?birthPlace .

  # War where Saitō Hajime was a commander
  ?commanderRole dbo:agent dbr:Saitō_Hajime ;
                 dbo:participatedIn ?war .
  ?war rdf:type dbo:MilitaryConflict ;
       rdf:type dbo:Event ;
       rdf:type dbo:SocietalEvent .
  BIND(str(?war) AS ?warName)

  # Tokugawa Masako's spouse
  dbr:Tokugawa_Masako dbo:spouse ?spouse .

  # Spouse's father who is royalty
  ?spouse dbo:father ?royalFather .
  ?royalFather rdf:type dbo:Royalty .

  # Administration of the royal father
  ?royalFather dbo:administers ?administration .
}
```",6,10,7,3,2,3,3,71,0,0,1,0,0.0,0
54,24,test,Give me the parent of the child of Narapati I of Ava and predecessor of Ameitta Thiri Maha Dhamma Dewi of Ava.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Narapati_I_of_Ava> . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Ameitta_Thiri_Maha_Dhamma_Dewi_of_Ava> . ?v2 <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?commonParent WHERE {
  # Find the child of Narapati I of Ava
  ?narapatiI dbo:child ?child1 .
  FILTER(STR(?narapatiI) = ""Narapati_I_of_Ava"") .

  # Find the predecessor of Ameitta Thiri Maha Dhamma Dewi of Ava
  ?ameittaThiriPredecessor dbo:predecessor ?ameittaThiriMahaDhammaDewi .
  FILTER(STR(?ameittaThiriMahaDhammaDewi) = ""Ameitta_Thiri_Maha_Dhamma_Dewi_of_Ava"") .

  # Find the parent of both identified individuals
  ?child1 dbo:parent ?commonParent .
  ?ameittaThiriPredecessor dbo:parent ?commonParent .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
328,56,test,"Give me the commander in Eastern Front (World War II) and awardee of the award of Bruce Fraser, 1st Baron Fraser of North Cape and leader of the office, that is a government agency, of the leader, that is an office holder and a politician, of Gustav Jonson.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/office> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape> <http://dbpedia.org/property/awards> ?v2 . ?result <http://dbpedia.org/property/awards> ?v2 . <http://dbpedia.org/resource/Eastern_Front_(World_War_II)> <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Gustav_Jonson> <http://dbpedia.org/property/leader> ?v0 . ?v1 <http://dbpedia.org/ontology/leader> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  ?person dbo:commanderOf dbr:Eastern_Front_(World_War_II) .
  
  OPTIONAL { 
    ?award dbo:recipient ?person ;
           dbo:awardedBy dbr:Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape .
  }
  
  ?agency dbo:leader ?person ;
          a dbo:Government_Agency .

  ?officeHolder dbo:leader ?subordinate ;
                a dbo:Office_Holder, dbo:Politician ;
                dbp:associatedWith dbr:Gustav_Jonson .
                
  ?subordinate dbo:leader ?person .
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
534,17,test,"Give me the birth place of Garret FitzGerald and headquarter of the owner of the location, that is a venue and an architectural structure, of 2012 Pro12 Grand Final.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/owner> ?v3 . ?v3 <http://dbpedia.org/ontology/headquarter> ?result . <http://dbpedia.org/resource/2012_Pro12_Grand_Final> <http://dbpedia.org/ontology/location> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ArchitecturalStructure>. <http://dbpedia.org/resource/Garret_FitzGerald> <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Venue>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace ?venueHeadquarters WHERE {
  # Garret FitzGerald's birthplace
  dbr:Garrett_FitzGerald dbo:birthPlace ?birthPlace .

  # Venue of the 2012 Pro12 Grand Final
  dbr:2012_Pro12_Grand_Final dbo:location ?venue .
  
  # Ensure the venue is an architectural structure and a venue
  ?venue rdf:type dbo:Building ;
         dbo:buildingType dbr:Sports_stadium .

  # Owner of the venue
  ?venue dbo:owner ?owner .

  # Headquarters of the owner
  ?owner dbo:headquarters ?venueHeadquarters .
}
```",4,6,5,3,2,3,2,20,0,0,1,0,0.0,0
659,65,test,"Give me the commander in the war, that is an event and a military conflict, of the figure known, that is a military unit and an organisation, as 'Polish Horse' and commander in the force of Arthur Wellesley, 1st Duke of Wellington and military force of the force, that is a societal event and an event and a military conflict, of Rutger Jan Schimmelpenninck.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v4 <http://dbpedia.org/ontology/commander> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v4 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Arthur_Wellesley,_1st_Duke_of_Wellington> . ?v0 <http://dbpedia.org/ontology/battle> ?v6 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v6 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/property/nickname> ""'Polish Horse'""@en . ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  # Identify the ""Polish Horse"" as a military unit under Arthur Wellesley's command
  dbr:Arthur_Wellesley_1st_Duke_of_Wellington dbo:militaryCommanderOf ?unit .
  ?unit rdfs:label ""Polish Horse""@en .

  # Find the commander of this unit during a specific conflict involving both Arthur Wellesley and Rutger Jan Schimmelpenninck
  ?conflict dbo:commander dbr:Arthur_Wellesley_1st_Duke_of_Wellington ;
            dbo:opposingCommander dbr:Rutger_Jan_Schimmelpenninck .
  
  # Retrieve the commander of the ""Polish Horse"" during this conflict
  ?unit dbo:commander ?commander .

  FILTER (lang(?label) = 'en')
}
```",7,14,8,3,3,3,3,71,0,0,15,0,0.0,0
994,59,test,"Give me the associated musical artist of the associated musical artist of the reference to Watchtower and associated musical artist of the band member, that is a band and a group and an organisation, of the band, that is an organisation, of Fredrik Thordendal.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Fredrik_Thordendal> . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://xmlns.com/foaf/0.1/name> ""Watchtower""@en . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?finalArtist WHERE {
  # Step 1: Fredrik Thordendal's band that is an organization
  dbr:Fredrik_Thordendal dbo:memberOf dbr:Meshuggah .
  
  # Step 2: Member of Meshuggah who is part of another band/group/organization
  ?meshuggahMember dbo:memberOf dbr:Meshuggah ;
                  dbo:memberOf ?otherBand .

  FILTER(?otherBand = dbr:Pain) .

  # Step 3: Musical artist associated with Watchtower
  dbr:Watchtower dbo:associatedMusicalArtist ?watchtowerArtist .
  
  # Step 4: Musical artist associated with Pain (Jens Kidman's other band)
  ?painProducer dbo:producedMusicFor ?otherBand ;
                a dbo:MusicalArtist .

  FILTER(?painProducer = dbr:Fredrik_Nordström) .

  # Step 5: Find the musical artist associated with both Ron Jarzombek and Fredrik Nordström
  ?finalArtist dbo:associatedMusicalArtist ?watchtowerArtist ;
               dbo:associatedMusicalArtist ?painProducer .
}
```",6,10,7,3,2,3,3,71,0,0,5,0,0.0,0
712,20,test,"Give me the resting place of the awardee of the show of Soviet Union and capital of the country of the military force, that is an organisation and a military unit, of Vyoshenskaya Uprising.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/awards> ?v4 . ?v1 <http://dbpedia.org/ontology/country> ?v2 . ?v2 <http://dbpedia.org/ontology/capital> ?result . ?v5 <http://dbpedia.org/ontology/restingPlace> ?result . ?v1 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Vyoshenskaya_Uprising> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v4 <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/Soviet_Union> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?awardee ?restingPlace WHERE {
  # Identify the award related to the Soviet Union
  ?award dbo:country dbr:Soviet_Union .
  
  # Find the recipient of this award
  ?recipient dbo:receivedAward ?award .
  
  # Link the recipient to the Vyoshenskaya Uprising and identify the relevant military force
  ?militaryForce dbo:location dbr:Vyoshenskaya_Uprising ;
                 a dbo:MilitaryUnit, dbo:Organization .
  
  ?recipient dbo:militaryService ?militaryForce .
  
  # Determine the capital city of the country associated with this military force
  ?country dbo:capital ?capitalCity .
  ?militaryForce dbo:country ?country .
  
  # Retrieve the resting place (burial site) of the awardee
  ?awardee dbp:name ?recipient ;
          dbo:deathPlace ?restingPlace .
}
```",6,8,7,3,2,3,2,20,0,0,1,0,0.0,0
435,28,test,"Give me the work of the author of Iceland and region of the time zone in Bombali Shebora Chiefdom and territory administered from the figure known, that is a settlement and a town and Icelandic, as Land of fire and ice.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/capital> ?v1 . ?result <http://dbpedia.org/property/author> ?v5 . ?v1 <http://dbpedia.org/property/nickname> ""Land of fire and ice""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Bombali_Shebora_Chiefdom> <http://dbpedia.org/ontology/timeZone> ?v3 . <http://dbpedia.org/resource/Iceland> <http://dbpedia.org/property/author> ?v5 . ?result <http://dbpedia.org/ontology/timeZone> ?v3 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Iceland>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Town>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?work ?timeZoneRegion ?territoryAdministered
WHERE {
  # Find works by Sir Samuel White Baker
  ?author a dbo:Writer ;
          foaf:name ""Samuel White Baker"" .
  
  ?work dbo:author ?author ;
        rdfs:label ?workLabel .

  FILTER CONTAINS(LCASE(?workLabel), ""iceland"") .

  # Find the time zone region for Bombali Shebora Chiefdom
  ?location dbr:Bombali_Shebora_Chowie_Chowie_Council .
  ?location dbo:timeZone ?timeZone .
  ?timeZone dbo:region ?timeZoneRegion .

  # Find territories administered from Iceland
  ?territory dbo:administeredBy dbr:Iceland ;
             rdfs:label ?territoryLabel .
}
```",6,9,7,2,3,2,3,28,0,0,1,0,0.0,0
534,18,test,"Give me the birth place of the child, that is a politician and an office holder, of the native, that is a politician, of Essex and headquarter of the owner of RDS Arena.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/RDS_Arena> <http://dbpedia.org/ontology/owner> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Essex> . ?v3 <http://dbpedia.org/ontology/headquarter> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/child> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthPlace WHERE {
  # Step 1: Identify a politician native to Essex
  ?essexPolitician dbo:nationality dbr:United_Kingdom ;
                  dbo:birthPlace dbr:Essex ;
                  rdf:type dbo:Politician .

  # Step 2: Determine the owner of RDS Arena and its headquarters
  dbr:RDS_Arena dbo:owner ?arenaOwner .
  ?arenaOwner dbp:headquartersLocation ?hqLocation .

  # Step 3: Find a politician who is an office holder and child of the Essex native
  ?childPolitician dbo:parent ?essexPolitician ;
                   rdf:type dbo:Politician ;
                   dbo:officeHolder true .

  # Step 4: Get the birthplace of this child
  ?childPolitician dbo:birthPlace ?birthPlace .
}
```",5,8,6,3,2,3,2,20,0,0,1,0,0.0,0
339,18,test,Give me the father of the child of Grand Duchess Elena Vladimirovna of Russia and child of the child of the predecessor of Frederick VIII of Denmark.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Frederick_VIII_of_Denmark> . ?v2 <http://dbpedia.org/property/father> ?v1 . ?v3 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Grand_Duchess_Elena_Vladimirovna_of_Russia> <http://dbpedia.org/ontology/child> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?fatherOfElenaChild ?descendantOfPredecessor
WHERE {
  # Step 1: Find a child of Grand Duchess Elena Vladimirovna of Russia
  ?child dbo:parent dbp:Elena_Vladimirovna_of_Russia .
  
  # Step 2: Find the father of that child
  ?fatherOfElenaChild dbo:child ?child .

  # Step 3: Identify Frederick VIII of Denmark's predecessor
  ?predecessor dbo:successor dbp:Fredrick_VIII_of_Denmark .

  # Step 4: Find a child of the predecessor
  ?predecessorChild dbo:parent ?predecessor .
  
  # Step 5: Find the child of that child (descendant)
  ?descendantOfPredecessor dbo:parent ?predecessorChild .
}
```",5,5,6,3,2,3,2,20,0,0,1,0,0.0,0
666,20,test,"Give me the figure known as the nickname of the reference, that is an organisation and a soccer club and a sports club, to England and player in the manager, that is a sports manager, of the team, that is a soccer club and a sports team season, of Leonid Slutsky (football coach).","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v4 <http://dbpedia.org/property/nickname> ?v5 . ?result <http://dbpedia.org/property/nickname> ?v5 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v1 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Leonid_Slutsky_(football_coach)> . ?v2 <http://dbpedia.org/ontology/team> ?result . ?v4 <http://xmlns.com/foaf/0.1/name> ""England""@en . ?v1 <http://dbpedia.org/ontology/manager> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nickname WHERE {
  ?organisation a dbo:SoccerClub ;
                a dbo:SportsTeam ;
                dbo:country dbr:England .
  
  ?organisation dbo:nickname ?nickname .

  ?manager a dbo:FootballManager ;
          dbo:managedTeam ?organisation .
  
  ?manager foaf:name ""Leonid Slutsky""@en .
}
```",6,12,7,3,2,3,2,20,0,0,2,0,0.0,0
16,67,test,Give me the professional in the profession of the actor of Unnatural (TV series) and spouse of Ted McGinley and person born as the birth name of the alumnus of Ohio State University.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Ohio_State_University> . ?result <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/property/occupation> ?v6 . ?v1 <http://dbpedia.org/property/birthName> ?v3 . ?result <http://dbpedia.org/property/occupation> ?v6 . <http://dbpedia.org/resource/Unnatural_(TV_series)> <http://dbpedia.org/property/starring> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?professional WHERE {
  # Actor of ""Unnatural"" (TV series)
  ?actor dbo:profession dbr:Actor ;
         dbo:workFeaturedIn dbr:Unnatural_(TV_series) .

  # Spouse of Ted McGinley
  ?spouse dbo:spouse dbr:Ted_McGinley .
  
  # Person born as the birth name of an alumnus of Ohio State University
  ?person foaf:name ?birthName .
  ?alumnus foaf:name ?birthName ;
           dbo:almaMater dbr:Ohio_State_University .

  # Ensure they share the same profession
  FILTER (?actor = ?spouse && ?actor = ?person)
  
  # Find another professional in the same profession
  ?professional dbo:profession ?sharedProfession .
  FILTER(?sharedProfession = ?actor dbo:profession)
}
```",7,7,8,3,3,3,3,71,0,0,1,0,0.0,0
378,52,test,"Give me the war of the commander in Peninsular War and claim to fame of Louis des Balbes de Berton de Crillon, 1st Duke of Mahón and war of the person born as the birth name of Carl Pontus Gahn.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Peninsular_War> <http://dbpedia.org/ontology/commander> ?v5 . ?v2 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Louis_des_Balbes_de_Berton_de_Crillon,_1st_Duke_of_Mahón> <http://dbpedia.org/ontology/knownFor> ?result . <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/property/birthName> ?v3 . ?v5 <http://dbpedia.org/ontology/battle> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

# Query for Louis des Balbes de Berton de Crillon, 1st Duke of Mahón
SELECT ?peninsularWarRole ?claimToFame WHERE {
  dbr:Louis_des_Balbes_de_Berton_de_Crillon_1st_Duke_of_Mahón dbo:role ?peninsularWarRole .
  OPTIONAL { 
    dbr:Louis_des_Balbes_de_Berton_de_Crillon_1st_Duke_of_Mahón dbo:notableFor ?claimToFame .
  }
}

# Query for Carl Pontus Gahn
SELECT ?person ?war WHERE {
  ?person rdfs:label ""Carl Pontus Gahn""@en .
  OPTIONAL { 
    ?person dbo:militaryConflict ?war .
  }
}
```",6,6,7,3,3,3,3,71,0,0,2,0,0.0,0
328,60,test,"Give me the awardee of the award of the commander in Volcano and Ryukyu Islands campaign and leader of the office, that is a government agency, of the leader, that is an office holder and a politician, of Gustav Jonson.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/leader> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v3 <http://dbpedia.org/property/awards> ?v2 . ?v0 <http://dbpedia.org/property/office> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/property/awards> ?v2 . <http://dbpedia.org/resource/Volcano_and_Ryukyu_Islands_campaign> <http://dbpedia.org/ontology/commander> ?v3 . <http://dbpedia.org/resource/Gustav_Jonson> <http://dbpedia.org/property/leader> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?awardee ?officeLeader WHERE {
  # Find the award related to the Volcano and Ryukyu Islands campaign
  ?award dbo:relatedEvent dbr:Volcano_and_Ryukyu_Islands_campaign .
  
  # Identify the awardee of this award
  ?award dbo:recipient ?awardee .

  # Determine if the awardee led a government agency
  ?governmentAgency dbo:head ?awardee ;
                   a dbo:Government_agency .

  # Find Gustav Jonson's role as an office holder or politician
  ?gustavJonsonRole dbo:officeHolder dbr:Gustav_Jonson .
  
  # Identify the leader of Gustav Jonson's role
  ?gustavJonsonRole dbo:leader ?officeLeader .

  # Link the awardee's leadership to Gustav Jonson's office or role
  ?governmentAgency dbo:relatedTo ?gustavJonsonRole .
}
```",6,9,7,3,2,3,3,71,0,0,1,0,0.0,0
391,60,test,"Give me the native of the figure known as the nick name of Jackson, Tennessee and actor of the movie, that is a movie and a work and a television show, with the professional in .","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. <http://dbpedia.org/resource/Jackson,_Tennessee> <http://xmlns.com/foaf/0.1/nick> ?v3 . ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/property/starring> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v2 <http://dbpedia.org/property/nickname> ?v3 . ?v1 <http://dbpedia.org/property/starring> ?v0 . ?v0 <http://dbpedia.org/property/occupation> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?actor ?nativePlace WHERE {
  # Step 1: Find the nickname of Jackson, Tennessee
  ?city rdfs:label ""Jackson, Tennessee""@en .
  ?city dbo:nickname ?nickname .

  # Step 2: Find a movie with this nickname and check if it's also a work and television show
  ?movie dbr:film ?nickname ;
         rdf:type dbo:Film ;
         dbo:work ?work ;
         dbo:televisionShow ?tvShow .
  
  # Step 3: Identify an actor from the movie
  ?actor dbo:starringIn ?movie .

  # Step 4: Get the native place of this actor
  ?actor dbp:nativePlace ?nativePlace .
}
```",6,9,7,3,2,3,3,71,0,0,1,0,0.0,0
184,46,test,"Give me the parent of the native of the landmark at elevation, that is a settlement, of 96.0 and child of the child of Archduke Joseph Karl of Austria.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Karl_of_Austria> . ?result <http://dbpedia.org/ontology/child> ?v1 . ?v2 <http://dbpedia.org/ontology/elevation> ""96.0""^^<http://www.w3.org/2001/XMLSchema#double> . ?v1 <http://dbpedia.org/ontology/birthPlace> ?v2 . ?result <http://dbpedia.org/property/father> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?parent
WHERE {
  # Step 1: Find Archduke Joseph Karl of Austria's child
  ?child dbo:child <http://dbpedia.org/resource/Joseph_Karl_of_Austria>.

  # Step 2: Find the grandchild (child's child)
  ?grandchild dbo:child ?child.

  # Step 3: Identify a settlement at elevation 96.0 associated with the grandchild
  ?settlement dbo:elevation ""96.0""^^xsd:float ;
              dbo:settlement true ;
              dbo:nativePlace ?grandchild .

  # Step 4: Find the native of this settlement
  ?native dbo:nativePlace ?settlement.

  # Step 5: Identify the parent of this native
  ?parent foaf:parent ?native.
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
701,53,test,Give me the spouse of the father of Merneptah and parent of Henuttawy (19th dynasty) and parent of the child of the spouse of Amun-her-khepeshef.,SELECT ?result WHERE { <http://dbpedia.org/resource/Amun-her-khepeshef> <http://dbpedia.org/ontology/spouse> ?v3 . ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/ontology/spouse> ?v1 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Henuttawy_(19th_dynasty)> . <http://dbpedia.org/resource/Merneptah> <http://dbpedia.org/property/father> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?spouse WHERE {
  ?merneptah dbo:father ?ramessesII .
  FILTER(STRSTARTS(LCASE(?merneptah), ""merneptah"")) .

  ?ramessesII dbo:spouse ?spouse .
  
  ?spouse dbo:child ?henuttawy .
  FILTER(STRSTARTS(LCASE(?henuttawy), ""henuttawy"")) .

  ?amunHerKhepeshef dbo:spouse ?amunSpouse .
  FILTER(STRSTARTS(LCASE(?amunHerKhepeshef), ""amun-her-khepeshef"")) .

  ?amunSpouse dbo:child ?childOfAmunSpouse .

  ?spouse dbo:parent ?childOfAmunSpouse .
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
488,46,test,"Give me the death place of the father, that is a politician, of Yūki Hideyasu and birth place of the commander in the war, that is a military conflict and an event and a societal event, of Saitō Hajime.",SELECT ?result WHERE { <http://dbpedia.org/resource/Saitō_Hajime> <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v4 <http://dbpedia.org/ontology/deathPlace> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/ontology/commander> ?v1 . <http://dbpedia.org/resource/Yūki_Hideyasu> <http://dbpedia.org/property/father> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?deathPlace ?birthPlace WHERE {
  # Find Yūki Hideyasu's father who is a politician and his death place
  dbr:Yūki_Hideyasu dbo:father ?father .
  ?father rdf:type dbo:Politician ;
          dbo:placeOfDeath ?deathPlace .

  # Identify the military conflict involving Saitō Hajime that is an event and societal event
  dbr:Saitō_Hajime dbo:militaryConflict ?war .
  ?war rdf:type dbo:MilitaryConflict, dbo:Event, dbo:SocietalEvent .

  # Find the commander of this war and his birthplace
  ?war dbo:commander ?commander .
  ?commander dbp:birthPlace ?birthPlace .
}
```",5,9,6,3,2,3,3,71,0,0,1,0,0.0,0
659,35,test,"Give me the military force of the force, that is a societal event and an event and a military conflict, of Rutger Jan Schimmelpenninck and commander in the force of Arthur Wellesley, 1st Duke of Wellington.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Arthur_Wellesley,_1st_Duke_of_Wellington> . ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce WHERE {
  ?event dbo:type dbr:Military_conflict .
  ?event dbo:type dbr:Event .
  ?event dbo:type dbr:Societal_event .

  ?event dbo:participant dbr:Rutger_Jan_Schimmelpenninck .
  ?event dbo:commander dbr:Arthur_Wellesley_1st_Duke_of_Wellington .

  ?event dbo:military_force ?militaryForce .
}
```",4,7,5,2,2,3,3,71,0,0,38,0,0.0,0
659,48,test,"Give me the commander in the force of the native, that is an office holder, of Kingdom of Ireland and military force of the force, that is a societal event and an event and a military conflict, of Rutger Jan Schimmelpenninck.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Kingdom_of_Ireland> . ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v2 <http://dbpedia.org/ontology/commander> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  # Find the office holder of the Kingdom of Ireland
  ?officeHolder dbo:country dbr:Kingdom_of_Ireland .
  
  # Identify the commander in the force of this office holder
  ?officeHolder dbo:militaryCommander ?commander .

  # Link Rutger Jan Schimmelpenninck to a military conflict or event
  ?militaryEvent dbo:participant dbr:Rutger_Jan_Schimmelpenninck .
  
  # Ensure the military event is categorized as societal, an event, and a military conflict
  ?militaryEvent rdf:type dbo:SocietalEvent ;
                 rdf:type dbo:Event ;
                 rdf:type dbo:MilitaryConflict .

  # Connect the commander to this military event
  ?commander dbo:participatedIn ?militaryEvent .
}
```",5,9,6,3,2,3,3,71,0,0,40,0,0.0,0
64,8,test,"Give me the alma mater of Jovan Hristić and entity in the region, that is a country, of Central European Time.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . ?result <http://dbpedia.org/ontology/country> ?v2 . <http://dbpedia.org/resource/Jovan_Hristić> <http://dbpedia.org/ontology/almaMater> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?almaMater ?country WHERE {
  # Find Jovan Hristić's alma mater
  dbr:Jovan_Hristi? dbo:almaMater ?almaMater .

  # Find countries in the Central European Time zone
  ?country a dbo:Country ;
           dbp:timeZone ""Central European Time"" .
}
```",3,4,4,2,2,2,2,9,0,0,1,0,0.0,0
232,41,test,"Give me the native of London and actor of the claim to fame, that is a film and a military conflict, of Sean Pertwee and child of the person born as John Devon Roland Pertwee.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ""John Devon Roland Pertwee""@en . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v4 <http://dbpedia.org/ontology/starring> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v2 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Sean_Pertwee> <http://dbpedia.org/ontology/knownFor> ?v4 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/London> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?film ?militaryConflict WHERE {
  # Sean Pertwee's details
  dbr:Sean_Pertwee dbo:birthPlace dbr:London .
  
  # Sean Pertwee is the child of John Devon Roland Pertwee
  dbr:John_Devon_Roland_Pertwee dbo:child dbr:Sean_Pertwee .

  # Sean Pertwee's claim to fame includes a film and a military conflict
  ?claimToFame dbo:subject dbr:Sean_Pertwee .
  
  ?film dbo:type dbr:Film ;
        dbo:relatedClaimToFame ?claimToFame .
  
  ?militaryConflict dbo:type dbr:Military_Conflict ;
                    dbo:relatedClaimToFame ?claimToFame .

}
```",5,7,6,2,3,3,3,71,0,0,1,0,0.0,0
92,62,test,"Give me the associated musical artist of the person born, that is an artist, as the actor of Return to Nuke 'Em High Volume 1 and band of Joseph Michael and band member of the reference, that is an artist, to the name of Nevermore (2006 film).",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v3 <http://xmlns.com/foaf/0.1/name> ?v4 . <http://dbpedia.org/resource/Nevermore_(2006_film)> <http://xmlns.com/foaf/0.1/name> ?v4 . ?v6 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Return_to_Nuke_'Em_High_Volume_1> <http://dbpedia.org/property/starring> ?v0 . ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Joseph_Michael> . ?v6 <http://dbpedia.org/property/birthName> ?v0 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?associatedMusicalArtist WHERE {
  # Step 1: Find the actor of ""Return to Nuke 'Em High Volume 1""
  ?movie dbo:title ""Return to Nuke 'Em High Volume 1""@en .
  ?movie dbo:actor ?actor .

  # Step 2: Identify the associated musical artist who is also an artist and was born as a person
  ?actor dbo:musicalArtist ?musicalArtist1 .
  
  # Step 3: Find Joseph Michael's band
  dbr:Joseph_Michael dbo:band ?band .
  
  # Step 4: Identify the band member of this band that is referenced by ""Nevermore"" (2006 film)
  ?film dbo:title ""Nevermore""@en .
  ?film dbo:actor ?actor2 .
  ?band dbo:member ?bandMember .
  ?bandMember rdfs:label ?name .
  FILTER(CONTAINS(LCASE(?name), ""nevermore""))

  # Step 5: Find the associated musical artist for all these connections
  ?musicalArtist1 rdfs:label ?associatedMusicalArtist .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
959,25,test,Give me the native of Japan and manager of the team of Takashi Sekizuka.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/manager> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Japan> . ?v0 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Takashi_Sekizuka> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?teamManager WHERE {
  # Find Takashi Sekizuka's native place to confirm it is Japan
  dbr:Takashi_Sekizuka dbo:nativePlace dbr:Japan .

  # Find the team associated with Takashi Sekizuka
  OPTIONAL { 
    dbr:Takashi_Sekizuka dbo:team ?team .
    
    # Retrieve the manager of that team
    ?team dbo:manager ?teamManager .
  }
}
```",3,3,4,2,2,3,3,71,0,0,6,0,0.0,0
427,61,test,"Give me the party of the person born, that is an office holder and a politician, as the birth name of Romano Prodi and party of the father of the alumnus of Massachusetts Institute of Technology.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?v5 . ?v3 <http://dbpedia.org/property/birthName> ?v1 . ?v5 <http://dbpedia.org/ontology/party> ?result . ?v3 <http://dbpedia.org/ontology/party> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Massachusetts_Institute_of_Technology> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?partyProdi ?partyFather
WHERE {
  # Part 1: Romano Prodi's political party
  ?prodi a dbo:Politician ;
         dbo:birthName ""Romano Prodi"" .
  
  OPTIONAL { 
    ?prodi dbo:officeHolder true . 
  }
  
  OPTIONAL { 
    ?prodi dbo:partyAffiliation ?partyProdi .
  }

  # Part 2: Father's political party of an MIT alumnus
  ?alumnus dbo:almaMater dbr:Massachusetts_Institute_of_Technology ;
           dbo:father ?father .

  OPTIONAL { 
    ?father a dbo:Politician ;
            dbo:partyAffiliation ?partyFather .
  }
}
```",6,8,7,3,2,3,3,71,0,0,3,0,0.0,0
626,18,test,"Give me the awardee of the award of Aleksey Petrovich Yermolov and commander in the force, that is a military conflict, of the commander in Battle of Paris (1814).",SELECT ?result WHERE { <http://dbpedia.org/resource/Aleksey_Petrovich_Yermolov> <http://dbpedia.org/property/awards> ?v3 . ?result <http://dbpedia.org/property/awards> ?v3 . <http://dbpedia.org/resource/Battle_of_Paris_(1814)> <http://dbpedia.org/ontology/commander> ?v1 . ?v2 <http://dbpedia.org/ontology/commander> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?awardee ?conflict WHERE {
  # Find the awardee of Aleksey Petrovich Yermolov
  ?award dbo:recipient ?awardee .
  ?award dbo:givenBy dbr:Aleksey_Petrovich_Yermolov .

  # Find the commander in the Battle of Paris (1814)
  ?battle dbo:commander ?commander .
  FILTER(STRSTARTS(STR(?battle), ""http://dbpedia.org/resource/Battle_of_Paris_(1814)""))

  # Check if the awardee was a commander in another military conflict
  ?conflict dbo:commander ?awardee .

  # Ensure the awardee is the same person as the commander in Battle of Paris (1814)
  FILTER(?commander = ?awardee)
}
```",5,6,6,3,2,3,2,20,0,0,23,0,0.0,0
959,48,test,"Give me the member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of the person born in 1958 and manager of the team of Takashi Sekizuka.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Takashi_Sekizuka> . ?v3 <http://dbpedia.org/ontology/birthYear> ""1958""^^<http://www.w3.org/2001/XMLSchema#gYear> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v3 <http://dbpedia.org/ontology/almaMater> ?v1 . ?result <http://dbpedia.org/ontology/team> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?almaMater
WHERE {
  ?person dbo:birthYear ""1958""^^xsd:gYear .
  ?person foaf:managerOf ?team .
  ?team foaf:member Takashi_Sekizuka .

  ?person dbo:almaMater ?almaMater .
  
  ?almaMater rdf:type dbo:University ;
             dbo:nationality ""Japanese""^^xsd:string ;
             rdf:type dbo:EducationalOrganization ;
             rdf:type dbo:Organisation .
}
```",5,9,6,3,2,3,3,71,0,0,3,0,0.0,0
754,20,test,Give me the parent of the child of the reference to Ram Khamhaeng the Great and parent of the parent of the parent of Min Linka.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Min_Linka> <http://dbpedia.org/ontology/parent> ?v1 . ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://dbpedia.org/ontology/parent> ?v2 . ?v4 <http://dbpedia.org/ontology/child> ?v5 . ?v4 <http://xmlns.com/foaf/0.1/name> ""Ram Khamhaeng the Great""@en . ?result <http://dbpedia.org/ontology/child> ?v5 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT DISTINCT ?commonAncestor WHERE {
  # Step 1: Find the child of Ram Khamhaeng the Great
  ?child dbo:parent dbr:Ram_Khamhaeng_the_Great .
  
  # Step 2: Find the parent of this child
  ?parentOfChild dbo:child ?child .

  # Step 3: Find the grandparent of Min Linka
  ?minLinka dbo:parent ?grandparentMinLinka .
  ?grandparentMinLinka dbo:parent ?greatGrandparentMinLinka .

  # Step 4: Find the parent of this grandparent
  ?parentOfGreatGrandparentMinLinka dbo:child ?greatGrandparentMinLinka .

  # Step 5: Find common ancestor
  FILTER (?parentOfChild = ?parentOfGreatGrandparentMinLinka)
}
```",6,6,7,3,2,3,2,20,0,0,1,0,0.0,0
528,62,test,"Give me the force of Narciso Campero and war of the military force of the entity, that is a societal event, in Chile and war of the commander in the work of --01-09.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Chile> . ?v6 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/ontology/commander> ?v6 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Narciso_Campero> . ?v3 <http://dbpedia.org/ontology/battle> ?v4 . ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/property/author> ""--01-09""^^<http://www.w3.org/2001/XMLSchema#gMonthDay> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>

SELECT ?war ?date WHERE {
  # Find Narciso Campero and his military role
  ?person rdfs:label ""Narciso Campero""@en .
  ?person dbo:militaryCommanderOf ?command .

  # Identify wars in Chile involving military forces as societal events
  ?command dbo:location dbr:Chile ;
           a dbo:MilitaryConflict .

  # Filter for the date around January 9th (year unspecified)
  OPTIONAL { ?command dbo:date ?date . }
  FILTER (
    EXISTS {
      ?command dbo:date ?date .
      BIND(xsd:date(CONCAT(""20"", STRAFTER(STR(?date), ""-""))) AS ?formattedDate)
      FILTER (?formattedDate >= ""2001-01-09""^^xsd:date && ?formattedDate <= ""2001-01-10""^^xsd:date)
    }
  )
}
```",7,8,8,3,3,3,3,71,0,0,2,0,0.0,0
767,70,test,"Give me the entity in the administration, that is a settlement, of Green and reference to the alter ego of the persona, that is a fictional character, of Matthew Burland and alma mater of the administration of the reference to George Kilbon Nash.","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v3 . ?v7 <http://dbpedia.org/property/governor> ?v0 . ?v1 <http://dbpedia.org/property/alterEgo> ""Matthew Burland""@en . ?v1 <http://dbpedia.org/property/alterEgo> ?v3 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v7 <http://dbpedia.org/ontology/almaMater> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""George Kilbon Nash""@en . ?v4 <http://dbpedia.org/property/leaderParty> ""Green""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?result <http://dbpedia.org/ontology/state> ?v4 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?entity ?alterEgo ?almaMater
WHERE {
  ?green dbo:administration ?adminEntity .
  ?adminEntity rdf:type dbo:Settlement .

  ?burland foaf:name ""Matthew Burland"" .
  ?burland dbo:fictionalCharacter ?alterEgo .
  ?alterEgo rdf:type dbo:FictionalCharacter .

  ?nash foaf:name ""George Kilbon Nash"" .
  ?nash dbo:almaMater ?almaMater .
  ?adminEntity dbo:administration ?nashAdmin .
}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
392,25,test,"Give me the province of Schio and region of the time zone, that is a sports event, of Aguilar de Segarra and entity in the region, that is a country, of Central European Time.",SELECT ?result WHERE { <http://dbpedia.org/resource/Aguilar_de_Segarra> <http://dbpedia.org/ontology/timeZone> ?v4 . ?v2 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsEvent>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Schio> <http://dbpedia.org/ontology/province> ?result . ?result <http://dbpedia.org/ontology/timeZone> ?v4 . ?result <http://dbpedia.org/ontology/country> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?provinceOfSchio ?regionOfAguilarDeSegarra ?sportsEvent ?entityInCETRegion ?country
WHERE {
  # Province of Schio
  dbr:Schio dbo:administrativeTerritory ?provinceOfSchio .

  # Region of the time zone for Aguilar de Segarra (assuming CET)
  dbr:Aguilar_de_Segarra dbp:timeZone ""Central European Time"" .
  ?regionOfAguilarDeSegarra dbo:timezone dbr:Time_zone_in_Europe#Central_European_Time .

  # Sports event in the region of Aguilar de Segarra
  ?sportsEvent dbo:location ?regionOfAguilarDeSegarra .

  # Entity in the region using Central European Time
  ?entityInCETRegion dbo:timezone dbr:Time_zone_in_Europe#Central_European_Time .

  # Country of the region using CET
  ?country dbo:timeZone dbr:Time_zone_in_Europe#Central_European_Time .
}
```",5,7,6,2,3,2,3,28,0,0,1,0,0.0,0
360,23,test,"Give me the reference to the author of Blinded by the Light and writer of the work, that is an album, of Dave Flett.","SELECT ?result WHERE { <http://dbpedia.org/resource/Blinded_by_the_Light> <http://dbpedia.org/property/author> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . ?v2 <http://dbpedia.org/property/author> ""Dave Flett""@en . ?v2 <http://dbpedia.org/property/writer> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Album>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?author WHERE {
  ?song dbo:title ""Blinded by the Light"" .
  ?song dbo:lyricist ?author .
  FILTER (str(?author) = str(dbr:Bruce_Springsteen))
}

UNION

SELECT ?writer WHERE {
  ?album dbo:artist dbr:Dave_Flett ;
         a dbo:Album .
  ?album dbo:composer ?writer .
}
```",4,5,5,2,2,2,3,28,0,0,1,0,0.0,0
547,45,test,Give me the resting place of the awardee of the award of Gerald Graham and resting place of James Burton (Egyptologist) and resting place of Simon Cadell.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . ?v1 <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Simon_Cadell> <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Gerald_Graham> <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/James_Burton_(Egyptologist)> <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?individual ?restingPlace WHERE {
  # Awardee of Gerald Graham's Award
  { 
    ?award dbr:Gerald_Graham a dbo:Award .
    ?award dbo:recipient ?awardee .
    ?awardee dbo:deathPlace ?restingPlace .
    BIND(?awardee AS ?individual)
  }
  
  UNION
  
  # James Burton (Egyptologist)
  { 
    dbr:James_Burton_(Egyptologist) dbo:deathPlace ?restingPlace .
    BIND(dbr:James_Burton_(Egyptologist) AS ?individual)
  }

  UNION

  # Simon Cadell
  {
    dbr:Simon_Cadell dbo:deathPlace ?restingPlace .
    BIND(dbr:Simon_Cadell AS ?individual)
  }
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
391,51,test,"Give me the actor of the claim to fame, that is a work, of Michael Ballhaus and actor of the movie, that is a movie and a work and a television show, with the professional in .","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://dbpedia.org/property/occupation> """"@en . ?v2 <http://dbpedia.org/property/starring> ?v1 . ?v2 <http://dbpedia.org/property/starring> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v4 <http://dbpedia.org/ontology/starring> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Michael_Ballhaus> <http://dbpedia.org/ontology/knownFor> ?v4 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT DISTINCT ?actor1 ?actor2 WHERE {
  # Find Michael Ballhaus's claim to fame
  dbr:Michael_Ballhaus dbo:filmography ?work .
  
  # Get actors from this work
  ?work dbo:starring ?actor1 .

  # Find a movie that is also a television show
  ?dual rdf:type dbo:Film ;
        rdf:type dbo:TelevisionShow .

  # Get professionals (actors) in the dual-natured entity
  ?dual dbo:starring ?actor2 .
  
  # Check for common actors
  FILTER (?actor1 = ?actor2)
}
```",5,9,6,3,2,3,3,71,0,0,11,0,0.0,0
391,59,test,"Give me the native of the figure known as the nick name of Jackson, Tennessee and actor of the claim to fame, that is a work, of the spouse of Sherry Hormann.","SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v5 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Sherry_Hormann> <http://dbpedia.org/ontology/spouse> ?v0 . ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://dbpedia.org/property/nickname> ?v3 . ?v0 <http://dbpedia.org/ontology/knownFor> ?v5 . <http://dbpedia.org/resource/Jackson,_Tennessee> <http://xmlns.com/foaf/0.1/nick> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nativePlace WHERE {
  ?person dbo:spouse dbr:Sherry_Hormann .
  ?person dbo:film dbr:Keinohrhasen .
  ?actor dbo:actedIn ?film .
  ?film rdfs:label ""Keinohrhasen""@en .
  ?actor foaf:name ""Dwayne Johnson""@en ;
         dbo:nativePlace ?nativePlace .
  FILTER(CONTAINS(LCASE(?nativePlace), ""jackson, mississippi""))
}
```",6,7,7,3,2,3,3,71,0,0,1,0,0.0,0
16,66,test,Give me the professional in the profession of Satomi Ishihara and spouse of the person born as Ted Martin McGinley and person born as the birth name of the alumnus of Ohio State University.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v6 . ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?v3 <http://dbpedia.org/property/birthName> ""Ted Martin McGinley""@en . ?v1 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Ohio_State_University> . ?v1 <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Satomi_Ishihara> <http://dbpedia.org/property/occupation> ?v6 . ?result <http://dbpedia.org/property/birthName> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?professional WHERE {
  # Find Satomi Ishihara's profession
  ?satomi a dbo:Person;
          foaf:name ""Satomi Ishihara"" .
  ?satomi dbo:profession ?profession .

  # Find Ted Martin McGinley's spouse
  ?ted a dbo:Person;
       foaf:name ""Ted McGinley"" .
  ?ted foaf:mbox <mailto:some-email@domain.com> ; # Assuming we have an email or identifier for Ted McGinley
       foaf:spouse ?spouse1 .

  # Find the birth name of an Ohio State University alumnus and identify that person
  ?alumnus a dbo:Person;
           dbo:almaMater <http://dbpedia.org/resource/Ohio_State_University> ;
           foaf:name ?birthName .
  ?alumnus foaf:mbox <mailto:some-email@domain.com> ; # Assuming we have an email or identifier for the alumnus
           foaf:spouse ?spouse2 .

  # Find a professional in Satomi Ishihara's profession who is also the spouse of both individuals
  ?professional dbo:profession ?profession ;
                foaf:spouse ?spouse1, ?spouse2 .
}
```",7,7,8,3,3,3,3,71,0,0,1,0,0.0,0
421,22,test,Give me the native of the birthplace of Samir Bekrić and band member of the awardee of [[#Awards and nominations.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v2 <http://dbpedia.org/property/awards> ""[[#Awards and nominations""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . <http://dbpedia.org/resource/Samir_Bekrić> <http://dbpedia.org/ontology/birthPlace> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?native ?band ?award WHERE {
  # Find Samir Bekrić's birthplace
  dbr:Samir_Bekrić dbo:birthPlace ?birthPlace .

  # Find a native of the birthplace who is also a band member
  ?native dbo:nationality ?birthPlace .
  ?native dbo:memberOfBand ?band .

  # Ensure the band has received an award or nomination
  ?band dbp:award ?award .
}
```",4,4,5,2,2,2,3,28,0,0,2,0,0.0,0
54,30,test,"Give me the predecessor of the child, that is an office holder and a royalty, of Thihapate of Mohnyin and parent of Thado Minsaw of Prome and child of Thinkhaya of Pagan.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Thihapate_of_Mohnyin> . <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?predecessor WHERE {
  ?child dbo:parentOf dbp:Thado_Minsaw_of_Prome ;
         dbo:childOf dbp:Thinkhaya_of_Pagan ;
         dbo:officeHolder true ;
         dbo:royalty true .
  
  ?thihapate dbo:child ?child .
  FILTER (str(?thihapate) = ""Thihapate_of_Mohnyin"") .

  ?child dbo:predecessor ?predecessor .
}
```",4,6,5,2,3,3,3,71,0,0,1,0,0.0,0
378,53,test,Give me the war of Joaquín Blake and claim to fame of the commander in Great Siege of Gibraltar and war of the person born as the birth name of Carl Pontus Gahn.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/knownFor> ?result . <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Joaquín_Blake> <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Great_Siege_of_Gibraltar> <http://dbpedia.org/ontology/commander> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war ?commander ?claimToFame ?birthName ?associatedWar
WHERE {
  # Joaquín Blake's war
  dbr:Joaqu%C3%ADn_Blake_y_Joyes dbo:militaryConflict ?war .

  # Commander in the Great Siege of Gibraltar and their claim to fame
  dbr:George_Augustus_Eliott dbo:occupation dbr:Military_person ;
                             dbo:notableFor ?claimToFame .

  # Carl Pontus Gahn's birth name and associated war
  OPTIONAL {
    dbr:Carl_Pontus_Gahn dbo:birthName ?birthName .
    FILTER(CONTAINS(?birthName, ""Karl Pontus""))
  }
  
  # Assuming association with Napoleonic Wars due to timeline
  OPTIONAL {
    ?associatedWar dbo:wikiPageRedirects dbr:Napoleonic_Wars ;
                  dbo:wikiPageDisambiguates ?person .
    ?person rdfs:label ?birthName .
  }
}
```",6,6,7,3,3,3,3,71,0,0,2,0,0.0,0
801,59,test,"Give me the producer of the work, that is a musical work and a song and a work, of the professional, that is a musical artist, in Rapper and professional in the alter ego of the true self of The Shadow.","SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v3 <http://dbpedia.org/property/alterEgo> ?v2 . ?result <http://dbpedia.org/property/occupation> ?v2 . ?v5 <http://dbpedia.org/ontology/producer> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/property/occupation> ""Rapper""@en . ?v5 <http://dbpedia.org/property/writer> ?v0 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://xmlns.com/foaf/0.1/givenName> ""The Shadow""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?producer WHERE {
  ?work a dbo:Songs ;
        dbo:artist dbr:The_Shadow .
  
  ?artist dbo:alias dbr:The_Shadow ;
          dbo:profession dbr:Rapper .

  ?work dbo:producer ?producer .
}
```",6,10,7,3,2,3,3,71,0,0,473,0,0.0,0
767,68,test,"Give me the reference to the alter ego of Black Hood and entity in the administration, that is a settlement, of the writer of Where It's At (Dustin Lynch album) and alma mater of the administration of the reference to George Kilbon Nash.","SELECT ?result WHERE { ?v7 <http://dbpedia.org/ontology/almaMater> ?result . <http://dbpedia.org/resource/Black_Hood> <http://dbpedia.org/property/alterEgo> ?v3 . ?v4 <http://dbpedia.org/property/leaderParty> ?v5 . ?result <http://dbpedia.org/ontology/state> ?v4 . ?v7 <http://dbpedia.org/property/governor> ?v0 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Where_It's_At_(Dustin_Lynch_album)> <http://dbpedia.org/property/writer> ?v5 . ?v0 <http://xmlns.com/foaf/0.1/name> ""George Kilbon Nash""@en . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?alterEgo ?administrationEntity ?settlement ?almaMater WHERE {
  # Step 1: Find the alter ego of Black Hood
  ?blackHood dbo:alias ""Black Hood"" .
  ?blackHood dbo:alterEgo ?alterEgo .

  # Step 2: Identify an administrative entity related to the alter ego
  ?administrationEntity dbo:administrator ?alterEgo .

  # Step 3: Find Dustin Lynch's birthplace (settlement)
  dbr:Dustin_Lynch dbo:birthPlace ?settlement .

  # Step 4: Determine the alma mater of the administration entity
  ?administrationEntity dbo:almaMater ?almaMater .

  # Step 5: Reference to George Kilbon Nash and his connection
  dbr:George_Kilbon_Nash dbo:almaMater ?nashAlmaMater .
  FILTER(?almaMater = ?nashAlmaMater)
}
```",8,9,9,3,3,3,3,71,0,0,1,0,0.0,0
801,66,test,"Give me the producer of the work, that is a musical work and a song and a work, of 50 Cent and professional in the alter ego of The Shadow and associated musical artist of the writer, that is a musical artist and an artist, of the album, that is a musical work and a work, of What U See Is What U Get.",SELECT ?result WHERE { ?v6 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/50_Cent> . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v1 <http://dbpedia.org/property/writer> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/What_U_See_Is_What_U_Get> <http://dbpedia.org/ontology/album> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v3 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v6 <http://dbpedia.org/ontology/producer> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?producer WHERE {
  ?song a dbo:Song ;
        dbo:producer ?producer .

  ?producer rdfs:label ""The Shadow""@en .
  
  ?album a dbo:MusicalWork ;
         rdfs:label ""What U See Is What U Get""@en .

  ?writer dbo:associatedMusicalArtist ?producer ;
          dbo:writerOfAlbum ?album .

  ?song dbo:artist dbr:50_Cent .
}
```",7,14,8,3,3,3,3,71,0,0,1,0,0.0,0
378,32,test,Give me the war of the commander in Peninsular War and war of the person born as Carl Pontus Gahn.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v3 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Peninsular_War> <http://dbpedia.org/ontology/commander> ?v3 . ?v1 <http://dbpedia.org/property/birthName> ""Carl Pontus Gahn""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

# Query to find wars associated with Arthur Wellesley, 1st Duke of Wellington
SELECT ?war WHERE {
    dbr:Arthur_Wellesley_1st_Duke_of_Wellington dbo:militaryConflict ?war .
}

# Query to check for any wars involving Carl Pontus Gahn
SELECT ?war WHERE {
    dbr:C_P_Gahn dbo:militaryConflict ?war .
}
```",4,4,5,2,2,3,3,71,0,0,2,0,0.0,0
9,23,test,"Give me the alma mater of the mayor, that is a politician, of the entity, that is an organisation, in Belfast.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/property/leader> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/ontology/almaMater> ?result . ?v2 <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Belfast> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?almaMater WHERE {
  ?organisation dbo:location dbr:Belfast .
  ?organisation dbo:mayor ?mayor .
  ?mayor a dbo:Politician .
  ?mayor dbo:almaMater ?almaMater .
}
```",3,5,4,3,1,3,3,71,0,0,10,0,0.0,0
328,53,test,"Give me the commander in Eastern Front (World War II) and leader of the office, that is a government agency, of Joseph Stalin and awardee of the award of the commander in Volcano and Ryukyu Islands campaign.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/awards> ?v2 . <http://dbpedia.org/resource/Eastern_Front_(World_War_II)> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v1 <http://dbpedia.org/ontology/leader> ?result . <http://dbpedia.org/resource/Joseph_Stalin> <http://dbpedia.org/property/office> ?v1 . ?result <http://dbpedia.org/property/awards> ?v2 . <http://dbpedia.org/resource/Volcano_and_Ryukyu_Islands_campaign> <http://dbpedia.org/ontology/commander> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:MilitaryPerson .
  ?person dbo:commanderOf dbr:Eastern_Front_(World_War_II) .
  ?person dbo:leaderOf ?office .
  ?office dbo:head dbr:Joseph_Stalin .
  ?person dbo:award ?award .
  FILTER (
    EXISTS { ?award dbo:campaign dbr:Battle_of_the_Volcano_Islands }
    || EXISTS { ?award dbo:campaign dbr:Battle_of_the_Ryukyu_Islands }
  )
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
492,70,test,"Give me the person decedent at the work of US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite and commander in the war, that is a military conflict and an event, of the commander in Battle of Verdun and person decedent at the capital, that is a settlement, of the country of Khemis Miliana District.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/capital> ?v3 . <http://dbpedia.org/resource/Battle_of_Verdun> <http://dbpedia.org/ontology/commander> ?v0 . ?v4 <http://dbpedia.org/property/author> ""US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite""@en . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v7 <http://dbpedia.org/ontology/commander> ?result . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/deathPlace> ?v3 . ?v0 <http://dbpedia.org/ontology/battle> ?v7 . <http://dbpedia.org/resource/Khemis_Miliana_District> <http://dbpedia.org/ontology/country> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/deathPlace> ?v4 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?successor ?commander ?capital
WHERE {
  # Find Joseph C. Satterthwaite's successor as US Assistant Secretary of State for African Affairs
  ?satterthwaite dbo:office dbr:United_States_Assistant_Secretary_of_State_for_African_Affairs .
  ?satterthwaite dbo:successor ?successor .

  # Find a commander in the Battle of Verdun and another military conflict/event
  ?commander dbo:commanderInBattle dbr:Battle_of_Verdun ;
             dbo:commanderInMilitaryConflict ?conflict .

  # Find the capital of Khemis Miliana District
  dbr:Khemis_Miliana_District dbo:capital ?capital .
}
```",8,11,9,3,3,3,3,71,0,0,1,0,0.0,0
184,70,test,"Give me the child of the child of the parent, that is a royalty, of Archduke Ladislaus Philipp of Austria and parent of the child of the parent of Archduchess Margaret of Austria (born 1925) and parent of the native of Budapest.",SELECT ?result WHERE { ?v7 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/child> ?v4 . <http://dbpedia.org/resource/Archduke_Ladislaus_Philipp_of_Austria> <http://dbpedia.org/ontology/parent> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v7 . ?v3 <http://dbpedia.org/property/father> ?v1 . ?v4 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Budapest> . ?result <http://dbpedia.org/ontology/child> ?v3 . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Margaret_of_Austria_(born_1925)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?person WHERE {
  # Archduke Ladislaus Philipp's parent and sibling
  ?ladislausParent dbo:child ?ladislaus .
  FILTER(STR(?ladislaus) = ""Archduke_Ladislaus_Philipp_of_Austria"")
  ?ladislausSibling dbo:parent ?ladislausParent .
  
  # Child of Ladislaus's sibling who is royalty
  ?royalChild dbo:child ?ladislausSibling .
  ?royalChild dbo:royalty ?someRoyalty .

  # Archduchess Margaret's parent and sibling
  ?margaretParent dbo:child ?margaret .
  FILTER(STR(?margaret) = ""Archduchess_Margaret_of_Austria"")
  ?margaretSibling dbo:parent ?margaretParent .

  # Parent of Margaret's sibling
  ?parentOfMargaretSibling dbo:child ?margaretSibling .

  # Native of Budapest and their parent
  ?budaPerson dbp:nativePlace ""Budapest"" .
  ?budaParent dbo:child ?budaPerson .

  # The person must satisfy all conditions
  FILTER(?royalChild = ?parentOfMargaretSibling && ?royalChild = ?budaParent)
}
```",8,9,9,3,3,3,3,71,0,0,1,0,0.0,0
492,58,test,"Give me the person decedent at French Algeria and person decedent at the capital, that is a settlement, of the country of Khemis Miliana District and commander in the war, that is a military conflict and an event, of Frédéric-Georges Herr.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Frédéric-Georges_Herr> <http://dbpedia.org/ontology/battle> ?v5 . ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . <http://dbpedia.org/resource/Khemis_Miliana_District> <http://dbpedia.org/ontology/country> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/French_Algeria> . ?v1 <http://dbpedia.org/ontology/capital> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person
WHERE {
  # Find decedents at French Algeria
  ?decedentAtAlgeria dbo:decedent ?person .
  ?decedentAtAlgeria dbr:French_Algeria .

  # Identify the capital of Khemis Miliana District
  ?capital a dbo:Settlement ;
           dbo:administrativeRegion dbr:Khemis_Miliana_District .

  # Find decedents at the capital
  ?decedentAtCapital dbo:decedent ?person .
  ?decedentAtCapital dbr:?capital .

  # Find wars involving Frédéric-Georges Herr and commanders in those wars
  ?war dbo:commanderInWar ?person ;
       dbo:participant dbr:Frédéric-Georges_Herr .

  # Ensure the person is the same across all conditions
  FILTER (?decedentAtAlgeria = ?decedentAtCapital)
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
617,50,test,"Give me the spouse of the child of the successor, that is a royalty, of Antiochus (son of Antiochus III the Great) and parent of the child of Antiochus (son of Antiochus III the Great).",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/child> ?v4 . ?v4 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/child> ?v3 . <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/successor> ?v0 . ?result <http://dbpedia.org/ontology/child> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT DISTINCT ?spouse WHERE {
  # Identify Antiochus (son of Antiochus III the Great)
  ?antiochus dbo:father ?antiochusIII .
  ?antiochusIII rdfs:label ""Antiochus III""@en .

  # Find his successor
  ?successor dbo:successorOf ?antiochus .

  # Get children of the successor
  ?child dbo:parent ?successor .

  # Identify spouse of these children who is royalty
  ?spouse dbo:spouse ?child .
  ?spouse rdf:type dbo:Monarch .

  # Ensure this spouse is also a parent to any child of Antiochus (son of Antiochus III the Great)
  ?antiochusChild dbo:parent ?antiochus .
  ?spouse dbo:parent ?antiochusChild .
}
```",5,6,6,3,2,3,3,71,0,0,2,0,0.0,0
345,18,test,"Give me the team of the person born, that is a soccer player and a soccer manager, on 1978-09-15 and figure known as the nickname of the player, that is a sports club and an organisation and a soccer club, in Armando Heeb.","SELECT ?result WHERE { <http://dbpedia.org/resource/Armando_Heeb> <http://dbpedia.org/ontology/team> ?v1 . ?result <http://dbpedia.org/ontology/manager> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v3 <http://dbpedia.org/ontology/birthDate> ""1978-09-15""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://dbpedia.org/property/nickname> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v1 <http://dbpedia.org/property/nickname> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?team ?nickname WHERE {
  ?person a dbo:SoccerPlayer ;
          dbo:sportTeam ?team ;
          dbo:nickname ?nickname ;
          dbo:birthDate ?date .
  
  ?manager a dbo:SoccerManager ;
           dbo:managedTeam ?team ;
           rdfs:label ""Armando Heeb""@en .

  FILTER (?date = ""1978-09-15""^^xsd:date)
  FILTER (CONTAINS(LCASE(?team), ""sports club""))
  FILTER (CONTAINS(LCASE(?team), ""organization""))
  FILTER (CONTAINS(LCASE(?team), ""soccer club""))

  ?person rdfs:label ""Armando Heeb""@en .
}
```",5,10,6,3,2,3,2,20,0,0,1,0,0.0,0
528,59,test,"Give me the war of the military force of the entity, that is a societal event, in Chile and war of the commander in the work of --01-09.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/author> ""--01-09""^^<http://www.w3.org/2001/XMLSchema#gMonthDay> . ?v2 <http://dbpedia.org/ontology/battle> ?v3 . ?v5 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/ontology/commander> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Chile> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>

SELECT ?war ?militaryForce ?commander WHERE {
  ?war a dbo:MilitaryConflict ;
      dbo:location dbr:Chile ;
      dbo:participatingMilitaryGroup ?militaryForce .
  
  OPTIONAL { 
    ?war dbo:commander ?commander .
  }
  
  FILTER (?war dbo:date >= ""1900-01-01""^^xsd:date && ?war dbo:date <= ""2009-09-30""^^xsd:date)
}
```",6,7,7,3,2,3,3,71,0,0,14,0,0.0,0
281,50,test,"Give me the war of the profession, that is a military unit, of Heather Roy and entity in the birth place, that is a country, of the leader, that is a politician, of 1962 New South Wales state election.",SELECT ?result WHERE { <http://dbpedia.org/resource/1962_New_South_Wales_state_election> <http://dbpedia.org/property/leader> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://dbpedia.org/ontology/birthPlace> ?v4 . <http://dbpedia.org/resource/Heather_Roy> <http://dbpedia.org/property/occupation> ?v3 . ?result <http://dbpedia.org/ontology/place> ?v4 . ?v3 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?warOfProfession ?leaderBirthCountry
WHERE {
  # Heather Roy's profession related to a military unit
  ?heatherRoy dbo:profession ?profession .
  ?profession dbo:militaryUnit ?warOfProfession .

  # Leader of the 1962 NSW state election who is a politician
  ?election dbp:electionLeader ?leader .
  ?election dbp:date ""1962-03-05""^^xsd:date .
  ?election dbp:state ""New South Wales"" .
  ?leader rdf:type dbo:Politician .

  # Birthplace country of the leader
  ?leader dbo:birthPlace ?birthPlace .
  ?birthPlace rdf:type dbo:Country .
  BIND(str(?birthPlace) AS ?leaderBirthCountry)
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
281,52,test,"Give me the entity in the birth place, that is a country, of Bob Heffron and war of New Zealand Army and war of the awardee of the award of Jonathon Band.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> ?v3 . ?result <http://dbpedia.org/ontology/place> ?v5 . ?v2 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/New_Zealand_Army> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Jonathon_Band> <http://dbpedia.org/property/awards> ?v3 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Bob_Heffron> <http://dbpedia.org/ontology/birthPlace> ?v5 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?birthPlaceCountry WHERE {
  # Bob Heffron's birth place that is a country
  dbr:Bob_Heffron dbo:birthPlace ?birthPlace .
  ?birthPlace rdf:type dbo:Country .

  # Jonathon Band's award
  dbr:Jonathon_Band dbo:awardReceived ?award .

  # Wars involving New Zealand Army and the awardee of Jonathon Band's award
  ?war dbo:participatingMilitaryUnit dbr:New_Zealand_Army ;
       dbo:participatingMilitaryUnit ?awardeeWar .
  
  ?awardeeWar dbo:awardReceived ?award .

  # Ensure the birth place country is involved in these wars
  ?war dbo:location ?birthPlaceCountry .
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
328,48,test,"Give me the leader of the office, that is a government agency, of Joseph Stalin and awardee of the award of the commander in Volcano and Ryukyu Islands campaign.",SELECT ?result WHERE { <http://dbpedia.org/resource/Joseph_Stalin> <http://dbpedia.org/property/office> ?v1 . ?result <http://dbpedia.org/property/awards> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v3 <http://dbpedia.org/property/awards> ?v2 . ?v1 <http://dbpedia.org/ontology/leader> ?result . <http://dbpedia.org/resource/Volcano_and_Ryukyu_Islands_campaign> <http://dbpedia.org/ontology/commander> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?leader WHERE {
  # Step 1: Identify Joseph Stalin's office
  ?stalinOffice dbo:head dbr:Joseph_Stalin .
  
  # Step 2 and 3: Find the award related to the Volcano and Ryukyu Islands campaign
  ?award dbo:recipient ?awardee .
  FILTER(CONTAINS(LCASE(?award), ""volcano"") && CONTAINS(LCASE(?award), ""ryukyu islands"")) .

  # Combine information: Leader of Stalin's office who received the award
  ?leader dbo:head ?stalinOffice ;
          dbo:recipient ?award .
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
391,71,test,"Give me the native of the figure known as the nick name of Jackson, Tennessee and actor of the movie, that is a movie and a work and a television show, with the professional in  and actor of the claim to fame, that is a work, of the spouse of Sherry Hormann.","SELECT ?result WHERE { <http://dbpedia.org/resource/Jackson,_Tennessee> <http://xmlns.com/foaf/0.1/nick> ?v1 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://dbpedia.org/property/nickname> ?v1 . ?v7 <http://dbpedia.org/property/occupation> """"@en . ?v4 <http://dbpedia.org/ontology/knownFor> ?v5 . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v8 <http://dbpedia.org/property/starring> ?result . ?v8 <http://dbpedia.org/property/starring> ?v7 . <http://dbpedia.org/resource/Sherry_Hormann> <http://dbpedia.org/ontology/spouse> ?v4 . ?v5 <http://dbpedia.org/ontology/starring> ?result . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?native WHERE {
  # Step 1: Find Sherry Hormann's spouse
  ?spouse dbo:spouse dbr:Sherry_Hormann .
  
  # Step 2: Determine the claim to fame of Sherry Hormann's spouse
  ?claimToFame dbo:creator ?spouse ;
               a dbo:Work .

  # Step 3: Find the actor associated with this claim to fame
  ?actor dbo:actedIn ?claimToFame .
  
  # Step 4: Identify the nickname of Jackson, Tennessee
  dbr:Jackson,_Tennessee dbp:nickname ?nickname .

  # Step 5: Determine the native of this nickname who is also an actor in the claim to fame
  ?native dbo:nativePlace dbr:Jackson,_Tennessee ;
          rdfs:label ?nicknameLabel .
  
  FILTER(CONTAINS(LCASE(?nicknameLabel), LCASE(?nickname)))
  
  # Ensure the person is the same as the actor found earlier
  ?native = ?actor .
}
```",9,13,10,3,3,3,3,71,0,0,1,0,0.0,0
659,24,test,"Give me the commander in the war, that is an event and a military conflict, of 1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish) and military force of Napoleonic Wars.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/1st_Light_Cavalry_Lancers_Regiment_of_the_Imperial_Guard_(Polish)> <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Napoleonic_Wars> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  ?regiment a dbo:MilitaryUnit ;
            dbo:name ""1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish)""@en ;
            dbo:partOf ?conflict .
  
  ?conflict rdfs:label ?conflictLabel .

  FILTER(CONTAINS(LCASE(?conflictLabel), ""napoleonic wars""))

  ?regiment dbo:commander ?commander .
}
```",3,5,4,2,2,3,3,71,0,0,29,0,0.0,0
232,62,test,"Give me the actor of the claim to fame, that is a film and a military conflict, of the professional in Actor, narrator and producer and native of London and child of the person born as the birth name of Jon Pertwee.","SELECT ?result WHERE { ?v6 <http://dbpedia.org/ontology/starring> ?result . ?v3 <http://dbpedia.org/ontology/child> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/property/birthName> ?v4 . <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/property/birthName> ?v4 . ?v0 <http://dbpedia.org/ontology/knownFor> ?v6 . ?v0 <http://dbpedia.org/property/occupation> ""Actor, narrator and producer""@en . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/London> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  # Identify Jon Pertwee
  dbr:Jon_Pertwee a dbo:Person ;
                  foaf:name ""Jon Pertwee""@en .

  # Find his child who is an actor, narrator, and producer
  ?child dbo:parent dbr:Jon_Pertwee ;
         dbo:occupation dbr:Actor ;
         dbo:occupation dbr:Narrator ;
         dbo:occupation dbr:Producer ;
         foaf:name ?name .

  # Determine the claim to fame (film and military conflict)
  ?claimToFame dbo:associatedWith ?child ;
               a dbo:Film, dbo:MilitaryConflict .

  # Extract the actor associated with that claim to fame
  ?actor dbo:actedIn ?claimToFame .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
659,71,test,"Give me the military force of the force, that is a societal event and an event and a military conflict, of the reference to Rutger Jan Schimmelpenninck and commander in the war, that is an event and a military conflict, of the figure known, that is a military unit and an organisation, as 'Polish Horse' and commander in the force of the native, that is an office holder, of Kingdom of Ireland.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v8 . ?v2 <http://dbpedia.org/ontology/commander> ?v1 . ?v8 <http://dbpedia.org/ontology/commander> ?v7 . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v5 <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v4 <http://dbpedia.org/property/nickname> ""'Polish Horse'""@en . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Kingdom_of_Ireland> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v4 <http://dbpedia.org/ontology/battle> ?v5 . ?v7 <http://xmlns.com/foaf/0.1/name> ""Rutger Jan Schimmelpenninck""@en . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce WHERE {
  ?event1 a dbo:MilitaryConflict ;
          a dbo:SocietalEvent ;
          dbo:associatedWith dbr:Rutger_Jan_Schimmelpenninck .
  
  ?war a dbo:MilitaryConflict ;
       a dbo:Event ;
       dbo:commanderIn ?commander .

  ?figure a dbo:MilitaryUnit, dbo:Organization ;
          rdfs:label ""Polish Horse""@en ;
          dbo:commanderIn ?force .

  ?officeHolder a dbo:OfficeHolder ;
                dbo:nativeOf dbr:Kingdom_of_Ireland ;
                dbo:commanderIn ?force .
  
  ?militaryForce dbo:associatedWith ?event1 ;
                 dbo:associatedWith ?war ;
                 dbo:associatedWith ?figure .
}
```",9,17,10,3,3,3,3,71,0,0,15,0,0.0,0
427,46,test,Give me the reference to the name of the party of Michele Pinto and party of the father of Lamberto Andreotti.,SELECT ?result WHERE { ?v2 <http://xmlns.com/foaf/0.1/name> ?v1 . <http://dbpedia.org/resource/Lamberto_Andreotti> <http://dbpedia.org/property/father> ?v4 . ?v4 <http://dbpedia.org/ontology/party> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . <http://dbpedia.org/resource/Michele_Pinto> <http://dbpedia.org/ontology/party> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?micheleParty ?fatherName ?fathersParty
WHERE {
  # Find Michele Pinto's party affiliation
  ?michele a dbo:Person ;
           foaf:name ""Michele Pinto""@en .
  ?michele dbo:partyAffiliation ?micheleParty .

  # Find Lamberto Andreotti and his father's name
  ?lamberto a dbo:Person ;
            foaf:name ""Lamberto Andreotti""@en .
  ?lamberto foaf:parent ?father .
  ?father foaf:name ?fatherName .

  # Find the father's party affiliation
  ?father dbo:partyAffiliation ?fathersParty .
}
```",5,5,6,3,2,3,3,71,0,0,2,0,0.0,0
161,62,test,"Give me the commander in Biscay Campaign and military force of the force, that is a societal event and a military conflict, of the predecessor of Indalecio Prieto and military force of the force, that is a societal event and an event and a military conflict, of the person decedent at Francoist Spain.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v4 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Francoist_Spain> . ?v0 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Indalecio_Prieto> . ?result <http://dbpedia.org/ontology/battle> ?v6 . ?v6 <http://dbpedia.org/ontology/commander> ?v0 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Biscay_Campaign> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://dbpedia.org/ontology/commander> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?biscayForce ?predecessorForce ?decedentPerson ?francoistForce 
WHERE {
  # Find Indalecio Prieto's predecessor
  ?prieto dbo:officeTitle ""Minister of War""@en .
  ?prieto dbo:successor ?predecessor .

  # Biscay Campaign details
  dbr:Biscay_Campaign dbo:commander ?commander ;
                      dbo:militaryForce ?biscayForce ;
                      a dbo:SocietalEvent, dbo:MilitaryConflict .

  # Predecessor's military force
  ?predecessor dbo:militaryForce ?predecessorForce ;
               a dbo:SocietalEvent, dbo:MilitaryConflict .

  # Person decedent at Francoist Spain
  ?decedentPerson dbo:deathPlace dbr:Francoist_Spain ;
                  a dbo:Event, dbo:MilitaryConflict .

  # Decedent's military force
  ?decedentPerson dbo:militaryForce ?francoistForce .
}
```",7,12,8,3,3,3,3,71,0,0,3,0,0.0,0
435,25,test,"Give me the territory administered from the figure known, that is a settlement and a town and Icelandic, as Land of fire and ice and work of Article 62, Section IV of Constitution of Iceland and region of the time zone in Bombali Shebora Chiefdom.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/capital> ?v2 . ?result <http://dbpedia.org/property/author> ""Article 62, Section IV of Constitution of Iceland""@en . ?v2 <http://dbpedia.org/property/nickname> ""Land of fire and ice""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Iceland>. ?result <http://dbpedia.org/ontology/timeZone> ?v4 . <http://dbpedia.org/resource/Bombali_Shebora_Chiefdom> <http://dbpedia.org/ontology/timeZone> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Town>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?territory WHERE {
  ?person dbo:nationality dbr:Iceland ;
          dbo:wikiPageWikiLink dbr:Article_62_of_the_Constitution_of_Iceland .
  
  ?person dbo:title ""Land of fire and ice""@en .

  ?adminRole dbo:administrator ?person ;
             dbo:administrativeTerritory ?territory .

  ?territory a dbo:Settlement ;
            dbo:partOf dbr:Bombali_Shebora_Cheifdom .

  FILTER (strstarts(str(?territory), ""http://dbpedia.org/resource/""))
}
```",5,8,6,2,3,2,3,28,0,0,1,0,0.0,0
281,35,test,"Give me the war of the profession, that is a military unit, of Heather Roy and war of the awardee of Knight Grand Cross of the Order of the Bath.",SELECT ?result WHERE { <http://dbpedia.org/resource/Heather_Roy> <http://dbpedia.org/property/occupation> ?v1 . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_the_Bath> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?professionWar ?knightGrandCrossWar
WHERE {
  # Heather Roy's profession
  dbr:Heather_Roy dbo:occupation ?heatherRoyProfession .
  
  # Check if the profession is a military unit
  OPTIONAL { 
    ?heatherRoyProfession rdf:type dbo:MilitaryUnit .
    ?heatherRoyProfession dbo:partOfMilitaryConflict ?professionWar .
  }
  
  # Awardees of Knight Grand Cross of the Order of the Bath and their associated wars
  {
    SELECT DISTINCT ?knightGrandCross ?knightGrandCrossWar
    WHERE {
      ?knightGrandCross dbo:award [ 
        a dbo:Award ; 
        dbo:name dbr:Knight_Grand_Cross_of_the_Order_of_the_Bath 
      ] .
      
      OPTIONAL { 
        ?knightGrandCross dbo:militaryService ?militaryUnit .
        ?militaryUnit dbo:partOfMilitaryConflict ?knightGrandCrossWar .
      }
    }
  }
}
```",4,5,5,2,2,3,3,71,0,0,9,0,0.0,0
281,69,test,"Give me the war of the awardee of the award of Jonathon Band and war of the profession, that is a military unit, of the professional, that is an office holder and a politician, in New Zealand Army and entity in the birth place, that is a country, of Bob Heffron.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Jonathon_Band> <http://dbpedia.org/property/awards> ?v4 . <http://dbpedia.org/resource/Bob_Heffron> <http://dbpedia.org/ontology/birthPlace> ?v7 . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> ?v7 . ?v1 <http://dbpedia.org/property/occupation> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/New_Zealand_Army> . ?v3 <http://dbpedia.org/property/awards> ?v4 . ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?warOfAwardee ?warOfProfession ?birthCountry
WHERE {
  # Find Jonathon Band's award and the related war
  ?award dbo:recipient dbr:Jonathon_Band .
  ?award dbo:awardee ?awardee .
  ?awardee dbo:relatedTo ?warOfAwardee .

  # Find Bob Heffron's profession as a military unit in New Zealand Army and related war
  ?heffron dbo:militaryUnit ?militaryUnit ;
           dbo:officeHolder ?officeHolder ;
           dbo:birthPlace ?birthPlace .
  FILTER EXISTS { ?militaryUnit dbo:partOf dbr_New_Zealand_Army }
  ?militaryUnit dbo:relatedTo ?warOfProfession .

  # Find Bob Heffron's birthplace country
  ?birthPlace a dbo:Country ;
              rdfs:label ?birthCountry .
  
  FILTER (str(?heffron) = ""Bob_Heffron"")
}
```",8,12,9,3,3,3,3,71,0,0,1,0,0.0,0
547,69,test,Give me the resting place of the child of the child of William Haliburton and resting place of the awardee of the award of Gerald Graham and resting place of the actor of Enemy at the Door.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> ?v1 . <http://dbpedia.org/resource/Gerald_Graham> <http://dbpedia.org/property/awards> ?v1 . <http://dbpedia.org/resource/Enemy_at_the_Door> <http://dbpedia.org/property/starring> ?v7 . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . ?v4 <http://dbpedia.org/property/father> ""William Haliburton""@en . ?v4 <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://dbpedia.org/ontology/restingPlace> ?result . ?v7 <http://dbpedia.org/ontology/restingPlace> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?restingPlace WHERE {
  # Resting place of the child of the child of William Haliburton
  {
    ?grandchild dbo:parent dbr:William_Haliburton ;
               dbo:deathPlace ?restingPlace .
    ?child dbo:parent dbr:William_Haliburton ;
           dbo:child ?grandchild .
  }
  
  UNION
  
  # Resting place of the awardee of the award of Gerald Graham
  {
    ?award dbo:recipient ?awardee ;
           dbo:holder dbr:Gerald_Graham .
    ?awardee dbo:deathPlace ?restingPlace .
  }
  
  UNION
  
  # Resting place of the actor of ""Enemy at the Door""
  {
    dbr:Enemy_at_the_Door dbo:actor ?actor .
    ?actor dbo:deathPlace ?restingPlace .
  }
}
```",8,8,9,3,3,3,3,71,0,0,1,0,0.0,0
492,65,test,"Give me the person decedent at the work of US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite and person decedent at the capital, that is a settlement, of Algeria and commander in the war, that is a military conflict and an event, of the commander in Battle of Verdun.","SELECT ?result WHERE { ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Battle_of_Verdun> <http://dbpedia.org/ontology/commander> ?v0 . ?result <http://dbpedia.org/ontology/deathPlace> ?v4 . <http://dbpedia.org/resource/Algeria> <http://dbpedia.org/ontology/capital> ?v3 . ?v4 <http://dbpedia.org/property/author> ""US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite""@en . ?result <http://dbpedia.org/ontology/deathPlace> ?v3 . ?v0 <http://dbpedia.org/ontology/battle> ?v6 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v6 <http://dbpedia.org/ontology/commander> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?decessor ?capital ?warCommander ?otherWar WHERE {
  # Find the predecessor of Joseph C. Satterthwaite as US Assistant Secretary of State for African Affairs
  ?satterthwaite dbo:office dbr:US_Assistant_Secretary_of_State_for_African_Affairs .
  ?satterthwaite dbo:predecessor ?decessor .

  # Find the capital of Algeria
  ?algeria dbo:capital ?capital .
  FILTER (strstarts(str(?capital), ""Alger""))

  # Find the commander in the Battle of Verdun
  ?verdunEvent dbo:commander ?warCommander .
  ?verdunEvent rdf:type dbo:MilitaryConflict ;
               dbo:event dbr:Battle_of_Verdun .

  # Find other wars commanded by the same person
  ?otherWar dbo:commander ?warCommander .
  FILTER (?otherWar != dbr:Battle_of_Verdun)
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
981,16,test,"Give me the entity in the region of Time in Indonesia and birth place of the person born, that is a beauty queen, as .","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v2 . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v3 <http://dbpedia.org/property/birthName> """"@en . ?v2 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Time_in_Indonesia> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BeautyQueen>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?birthPlace WHERE {
  ?person a dbo:BeautyQueen .
  ?person dbo:birthPlace ?location .
  FILTER(CONTAINS(LCASE(str(?location)), ""indonesia"") && CONTAINS(LCASE(str(?location)), ""time""))
  OPTIONAL { ?person dbp:title ?title . }
}
```",4,5,5,2,2,3,2,20,0,0,19,0,0.0,0
391,35,test,"Give me the native of the figure known as Hub City and actor of the movie, that is a movie and a work and a television show, with Roz Ryan.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/property/nickname> ""Hub City""@en . ?v1 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Roz_Ryan> . ?v1 <http://dbpedia.org/property/starring> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?nativeCity WHERE {
  # Step 1: Identify Hub City (assuming it's a known alias for a city)
  VALUES (?hubCity) { 
    dbr:Milwaukee_Wisconsin ""Hub City""^^xsd:string
  }
  
  # Step 2: Find movies that are also works and television shows featuring Roz Ryan
  ?movie dbo:type dbr:Film ;
         dbo:starring dbr:Roz_Ryan ;
         dbo:genre ?workGenre .
  FILTER (?workGenre IN (dbr:Literary_work, dbr:Television_show))

  # Step 3: Find the actor from Hub City who acted in this movie
  ?actor dbo:nationality ?hubCity ;
         dbo:starringInFilm ?movie .

  # Step 4: Get the native place of this actor
  ?actor dbp:birthPlace ?nativeCity .
}
```",4,7,5,2,2,3,3,71,0,0,1,0,0.0,0
485,27,test,"Give me the birth place of the awardee, that is a writer and a poet, of Eric Gregory Award and entity in the birth place, that is a region, of Joseph Whitaker (naturalist) and entity in United Kingdom.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?result <http://dbpedia.org/ontology/country> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Poet>. <http://dbpedia.org/resource/Joseph_Whitaker_(naturalist)> <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>. ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Eric_Gregory_Award> . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?awardeeBirthPlace ?commonEntity WHERE {
  # Find the birthplace of an Eric Gregory Award awardee who is a writer and poet
  ?awardee dbo:award dbr:Eric_Gregory_Award .
  ?awardee dbo:occupation dbr:Writer ;
           dbo:occupation dbr:Poet .
  ?awardee dbp:birthPlace ?awardeeBirthPlace .

  # Find the birth region of Joseph Whitaker
  dbr:Joseph_Whitaker (dbo:birthPlace) ?whitakerBirthRegion .

  # Ensure both locations are in the UK
  ?awardeeBirthPlace dbo:country dbr:United_Kingdom .
  ?whitakerBirthRegion dbo:country dbr:United_Kingdom .

  # Find a common entity between these two places
  ?commonEntity dbo:location ?awardeeBirthPlace ;
                dbo:location ?whitakerBirthRegion .
}
```",5,8,6,2,3,2,3,28,0,0,1,0,0.0,0
435,23,test,"Give me the territory administered from the figure known, that is a settlement and a town and Icelandic, as Land of fire and ice and work of the author of Iceland.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/nickname> ""Land of fire and ice""@en . ?result <http://dbpedia.org/ontology/capital> ?v1 . ?result <http://dbpedia.org/property/author> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Town>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Iceland>. <http://dbpedia.org/resource/Iceland> <http://dbpedia.org/property/author> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?town WHERE {
  ?town a dbo:Town ;
        dbo:country dbr:Iceland .
  
  OPTIONAL { 
    ?work dbo:author dbr:J._R._R._Tolkien .
    ?work dbo:title ""The Hobbit""^^xsd:string .
    FILTER(CONTAINS(LCASE(str(?work)), ""land of fire and ice""))
  }
}
```",4,7,5,2,2,2,3,28,0,104,1,0.0,0.0,0
378,42,test,Give me the war of the person born as Carl Pontus Gahn and claim to fame of the commander in Great Siege of Gibraltar and war of Joaquín Blake.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ""Carl Pontus Gahn""@en . <http://dbpedia.org/resource/Joaquín_Blake> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Great_Siege_of_Gibraltar> <http://dbpedia.org/ontology/commander> ?v1 . ?v1 <http://dbpedia.org/ontology/knownFor> ?result . ?v2 <http://dbpedia.org/ontology/battle> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?warGahn ?warBlake1 ?warBlake2 WHERE {
  # Carl Pontus Gahn's war of fame
  OPTIONAL { 
    dbr:Carl_Pontus_Gahn dbo:nationality dbr:Sweden .
    ?person dbo:birthName ""Carl Pontus Gahn""@en .
    ?person dbo:occupation dbr:Military_person .
    ?event dbo:participant ?person ;
           a dbo:MilitaryConflict .
    BIND(REPLACE(STR(?event), ""http://dbpedia.org/resource/"", """") AS ?warGahn)
  }

  # Joaquín Blake's wars
  OPTIONAL {
    dbr:Joaquín_Blake dbo:nationality dbr:Spain ;
                      dbo:occupation dbr:Military_person .
    ?siege a dbo:Siege ;
           dbo:commander dbr:Joaquín_Blake .
    BIND(""Great Siege of Gibraltar"" AS ?warBlake1)
  }
  
  OPTIONAL {
    ?event2 dbo:participant dbr:Joaquín_Blake ;
            a dbo:MilitaryConflict .
    FILTER(?event2 != ?siege) # Exclude the Great Siege of Gibraltar
    BIND(REPLACE(STR(?event2), ""http://dbpedia.org/resource/"", """") AS ?warBlake2)
  }
}
```",5,5,6,2,3,3,3,71,0,0,2,0,0.0,0
360,25,test,"Give me the writer of the work, that is an album, of Dave Flett and reference to Manfred Mann and native of the death place, that is a settlement, of Winnie Madikizela-Mandela.","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Manfred Mann""@en . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Winnie_Madikizela-Mandela> <http://dbpedia.org/ontology/deathPlace> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Album>. ?result <http://dbpedia.org/ontology/birthPlace> ?v4 . ?v3 <http://dbpedia.org/property/author> ""Dave Flett""@en . ?v3 <http://dbpedia.org/property/writer> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?album ?writer WHERE {
  ?album a dbo:Album ;
         dbo:artist dbr:Dave_Flett .
  
  # Check for mention of Manfred Mann in the album's description
  ?album rdfs:comment ?description .
  FILTER(CONTAINS(LCASE(?description), ""manfred mann""))

  # Find the writer of the album
  ?album dbo:writer ?writer .

  # Get the death place of Winnie Madikizela-Mandela and ensure it is a settlement
  dbr:Winnie_Madikizela-Mandela dbo:deathPlace ?deathPlace .
  ?deathPlace a dbo:Settlement .
}
```",5,7,6,2,3,2,3,28,0,0,1,0,0.0,0
318,9,test,Give me the professional in the profession of Robert Xavier Rodriguez and person born in the founding year of Eel Pie Publishing.,SELECT ?result WHERE { <http://dbpedia.org/resource/Robert_Xavier_Rodriguez> <http://dbpedia.org/property/occupation> ?v3 . ?result <http://dbpedia.org/ontology/birthYear> ?v1 . <http://dbpedia.org/resource/Eel_Pie_Publishing> <http://dbpedia.org/ontology/foundingYear> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  # Get the profession of Robert Xavier Rodriguez
  dbr:Robert_Xavier_Rodriguez dbo:profession ?robertProfession .

  # Get the founding year of Eel Pie Publishing
  dbr:Eel_Pie_Publishing dbp:foundingYear ?foundingYear .

  # Find persons born in the founding year of Eel Pie Publishing
  ?person dbo:birthDate ?birthDate .
  BIND(YEAR(?birthDate) AS ?birthYear)
  
  FILTER (?birthYear = ?foundingYear)

  # Ensure they have the same profession as Robert Xavier Rodriguez
  ?person dbo:profession ?personProfession .
  FILTER (?personProfession = ?robertProfession && ?person != dbr:Robert_Xavier_Rodriguez)
}
```",4,4,5,2,2,2,2,9,0,0,7,0,0.0,0
701,55,test,Give me the parent of the child of Ramesses II and spouse of the father of Merneptah and parent of the child of Nefertari.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ramesses_II> . <http://dbpedia.org/resource/Nefertari> <http://dbpedia.org/ontology/child> ?v3 . <http://dbpedia.org/resource/Merneptah> <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/ontology/child> ?v5 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parentOfChildOfRamessesII ?spouseOfFatherOfMerneptah WHERE {
  # Step 1 & 2: Find the child of Ramesses II and their parent
  ?child dbo:father dbr:Ramesses_II .
  ?child dbo:mother ?motherOfChild .
  ?parentOfChildOfRamessesII dbo:spouse ?motherOfChild .

  # Step 3 & 4: Identify the father of Merneptah and his spouse
  ?merneptah dbo:father dbr:Ramesses_II .
  ?merneptah dbo:mother ?motherOfMerneptah .
  ?spouseOfFatherOfMerneptah dbo:spouse dbr:Ramesses_II .

  # Step 5 & 6: Find the child of Nefertari and their parent
  ?childNefertari dbo:father ?fatherOfChildNefertari ;
                 dbo:mother dbr:Nefertari .
  ?parentOfChildOfNefertari dbo:spouse ?fatherOfChildNefertari .

  # Step 7: Match the results from steps 2 and 4 with those from step 6
  FILTER (?parentOfChildOfRamessesII = ?spouseOfFatherOfMerneptah && 
          ?parentOfChildOfRamessesII = ?parentOfChildOfNefertari)
}
```",6,6,7,2,3,3,3,71,0,0,1,0,0.0,0
285,20,test,Give me the parent of the child of the spouse of Aristotle Onassis and spouse of the professional in the award of Stan Lee.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/spouse> ?v5 . ?v5 <http://dbpedia.org/property/occupation> ?v4 . <http://dbpedia.org/resource/Stan_Lee> <http://dbpedia.org/property/awards> ?v4 . ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Aristotle_Onassis> . ?v1 <http://dbpedia.org/ontology/child> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parentOfChild ?spouseOfAwardWinner
WHERE {
  # Step 1: Find Aristotle Onassis's spouse
  ?onassisSpouse dbo:spouse dbr:Aristotle_Onassis .
  
  # Step 2: Find the child of Aristotle Onassis's spouse
  ?child dbo:parent ?onassisSpouse .

  # Step 3: Determine the parent of that child (should be either Aristotle Onassis or his spouse)
  ?parentOfChild dbo:parent ?child .
  
  # Step 4: Identify Stan Lee's professional award
  dbr:Stan_Lee dbo:award ?award .

  # Step 5: Find the professional associated with that award and their spouse
  ?professional dbo:award ?award .
  ?spouseOfAwardWinner dbo:spouse ?professional .

  # Step 6: Combine results to find if there's any connection
  FILTER(?parentOfChild = ?spouseOfAwardWinner)
}
```",6,6,7,3,2,3,2,20,0,0,3,0,0.0,0
487,18,test,"Give me the administration of the person born, that is a soccer player, as Philip Brian Scott and country of the administration of the person born on 1955-01-26.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v2 <http://dbpedia.org/ontology/country> ?result . ?v2 <http://dbpedia.org/property/leader> ?v1 . ?v3 <http://dbpedia.org/property/birthName> ""Philip Brian Scott""@en . ?result <http://dbpedia.org/property/governor> ?v3 . ?v1 <http://dbpedia.org/ontology/birthDate> ""1955-01-26""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX dcterms: <http://purl.org/dc/terms/>

SELECT DISTINCT ?administration ?country 
WHERE {
  # Find Philip Brian Scott's administration (team or club)
  ?player foaf:name ""Philip Brian Scott""@en .
  ?player dbo:sport ""Soccer""@en .
  ?player dbo:team ?administration .

  # Find the person born on 1955-01-26 and their country of administration
  ?person dbo:birthDate ""1955-01-26""^^xsd:date .
  ?person dbo:country ?country .
}
```",5,6,6,3,2,3,2,20,0,0,1,0,0.0,0
465,9,test,"Give me the death place of the native of Prague and administration of the leader, that is a political party and an organisation, of Chamber of Deputies of the Czech Republic.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Chamber_of_Deputies_of_the_Czech_Republic> <http://dbpedia.org/property/leader> ?v3 . ?result <http://dbpedia.org/property/leaderParty> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v1 <http://dbpedia.org/ontology/deathPlace> ?result . ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Prague> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?deathPlace WHERE {
  ?person foaf:name ""Václav Klaus""@en .
  ?person dbo:birthPlace dbpedia:Prague .
  ?person dbo:deathPlace ?deathPlace .
  OPTIONAL { 
    ?party dbo:leader ?person ;
           a dbo:PoliticalParty .
  }
  OPTIONAL {
    ?organization dbo:member ?person ;
                  a dbo:Organization .
  }
}
```",4,6,5,2,2,2,2,9,0,0,8,0,0.0,0
161,69,test,"Give me the military force of the force, that is a societal event and an event and a military conflict, of the person decedent at Francoist Spain and military force of the force, that is a societal event and a military conflict, of Francisco Largo Caballero and commander in the force, that is an event, of the figure known as El Director.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v7 . ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://dbpedia.org/ontology/commander> ?v1 . ?v4 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Francoist_Spain> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://xmlns.com/foaf/0.1/nick> ""El Director""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/ontology/commander> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v7 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?militaryForce1 ?militaryForce2 ?commanderEvent
WHERE {
  # Military force related to Francoist Spain
  ?event1 a dbo:MilitaryConflict ;
          dbo:societalEvent ?societalEvent1 ;
          dbo:event ?event1 .
  ?societalEvent1 dbr:Francoist_Spain .

  ?militaryForce1 dbo:militaryConflict ?event1 .

  # Military force related to Francisco Largo Caballero
  ?event2 a dbo:MilitaryConflict ;
          dbo:societalEvent ?societalEvent2 .
  ?societalEvent2 dbr:Francisco_Largo_Caballero .

  ?militaryForce2 dbo:militaryConflict ?event2 .

  # Commander event related to El Director
  ?commanderEvent a dbo:Event ;
                  dbo:commander ?elDirector .
  ?elDirector rdfs:label ""El Director""@en .
  
}
```",8,14,9,3,3,3,3,71,0,0,32,0,0.0,0
488,28,test,Give me the death place of Tokugawa Ieyasu and administration of Emperor Go-Yōzei and birth place of the commander in Boshin War.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Emperor_Go-Yōzei> . <http://dbpedia.org/resource/Boshin_War> <http://dbpedia.org/ontology/commander> ?v1 . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Tokugawa_Ieyasu> <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?deathPlaceTokugawaIeyasu ?administrationGoYozei ?birthPlaceSaigoTakamori
WHERE {
  # Tokugawa Ieyasu's death place
  dbr:Tokugawa_Ieyasu dbo:deathPlace ?deathPlaceTokugawaIeyasu .

  # Emperor Go-Yōzei's administration (reign period)
  dbr:Emperor_Go-Yozei dbo:reign ?administrationGoYozei .

  # Saigō Takamori's birth place
  dbr:Saigo_Takamori dbo:birthPlace ?birthPlaceSaigoTakamori .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
701,68,test,Give me the parent of the child of the child of Seti I and spouse of the father of Merneptah and parent of the child of the spouse of Amun-her-khepeshef.,SELECT ?result WHERE { ?v7 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Amun-her-khepeshef> <http://dbpedia.org/ontology/spouse> ?v5 . <http://dbpedia.org/resource/Merneptah> <http://dbpedia.org/property/father> ?v3 . ?v5 <http://dbpedia.org/ontology/child> ?v4 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seti_I> . ?v4 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/spouse> ?v3 . ?result <http://dbpedia.org/ontology/child> ?v7 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?result WHERE {
  # Seti I's child
  ?child1 dbo:parent dbr:Seti_I .
  
  # Grandchild of Seti I
  ?grandchild dbo:parent ?child1 .

  # Merneptah's father
  ?merneptahFather dbo:child dbr:Merneptah .

  # Spouse of Merneptah's father
  ?spouseOfFather dbo:spouse ?merneptahFather .
  
  # Amun-her-khepeshef's spouse
  ?amunSpouse dbo:spouse dbr:Amun-her-khepeshef .

  # Child of Amun-her-khepeshef's spouse
  ?childOfAmunSpouse dbo:parent ?amunSpouse .
  
  # Parent of the child of Amun-her-khepeshef's spouse
  ?parentOfChildOfAmunSpouse dbo:child ?childOfAmunSpouse .

  # Find common entity that satisfies all conditions
  FILTER (?grandchild = ?spouseOfFather && ?parentOfChildOfAmunSpouse = ?spouseOfFather)
  
  BIND(?spouseOfFather AS ?result)
}
```",8,8,9,3,3,3,3,71,0,0,1,0,0.0,0
754,19,test,Give me the parent of the parent of May Hnin Htapi and parent of the child of the reference to Ram Khamhaeng the Great.,"SELECT ?result WHERE { <http://dbpedia.org/resource/May_Hnin_Htapi> <http://dbpedia.org/ontology/parent> ?v2 . ?result <http://dbpedia.org/ontology/child> ?v4 . ?v0 <http://dbpedia.org/ontology/child> ?v4 . ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Ram Khamhaeng the Great""@en . }","```sparql
# Query 1: Parent of the Parent of May Hnin Htapi
SELECT ?grandparent WHERE {
    ?mayHninHtapi dbo:parent ?parent .
    ?parent dbo:parent ?grandparent .
    FILTER (str(?mayHninHtapi) = ""May_Hnin_Htapi"") 
}

UNION

# Query 2: Parent of the Child of Ram Khamhaeng the Great
SELECT ?grandparent WHERE {
    ?ramKhamhaeng dbo:child ?child .
    ?child dbo:child ?grandchild .
    ?grandchild dbo:parent ?grandparent .
    FILTER (str(?ramKhamhaeng) = ""Ram_Khamhaeng_the_Great"") 
}
```",5,5,6,3,2,3,2,20,0,0,1,0,0.0,0
701,51,test,"Give me the spouse of the father of the commander, that is a royalty, in Battle of Perire and parent of the child of Ramesses II.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ramesses_II> . <http://dbpedia.org/resource/Battle_of_Perire> <http://dbpedia.org/ontology/commander> ?v1 . ?v1 <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/ontology/child> ?v4 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
  ?battle dbp:battleOfPerire ""true"" .
  ?battle dbo:commander ?commander .

  ?father dbo:child ?commander .
  
  ?father dbo:spouse ?spouse .
  
  ?spouse a dbo:Monarch ; # Assuming royalty is represented by Monarch class
          dbo:parent ?ramessesChild .
  
  ?ramessesChild dbo:parent dbp:RamessesII .
}
```",5,6,6,3,2,3,3,71,0,0,2,0,0.0,0
747,48,test,"Give me the band of the person born as Tracey Elizabeth McSween and person born on the birth date of the person decedent, that is an athlete and a soccer player, at Zolotonosha.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ""Tracey Elizabeth McSween""@en . ?v3 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Zolotonosha> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v3 <http://dbpedia.org/ontology/birthDate> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?result <http://dbpedia.org/ontology/birthDate> ?v2 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?band ?athleteName WHERE {
  # Find Tracey Elizabeth McSween's birth date and band
  ?tracey a dbo:Person ;
          rdfs:label ""Tracey Elizabeth McSween""@en ;
          dbp:birthday ?birthDateMcSween ;
          dbo:musicalBand ?band .

  # Find a decedent with the same birth date as Tracey Elizabeth McSween
  ?decedent a dbo:Person ;
            dbp:dateOfDeath ?deathDate ;
            dbp:birthday ?birthDateDecedent .
  
  FILTER (?birthDateMcSween = ?birthDateDecedent)

  # Find an athlete who is a soccer player and born on the decedent's birth date
  ?athlete a dbo:Person, dbo:Athlete ;
           dbp:sport dbr:Soccer ;
           dbp:birthday ?birthDateDecedent ;
           dbo:placeOfBirth ?zolotonosha .
  
  FILTER (CONTAINS(LCASE(STR(?zolotonosha)), ""zolotonosha""))

  # Ensure the athlete is distinct from Tracey Elizabeth McSween
  FILTER (?athlete != ?tracey)

  BIND(STRAFTER(STR(?athlete), ""http://dbpedia.org/resource/"") AS ?athleteName)
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
959,52,test,"Give me the manager of 2013 Júbilo Iwata season and native of the residence, that is a country, of Yōichi Masuzoe and member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of the person born in 1958.","SELECT ?result WHERE { <http://dbpedia.org/resource/Yōichi_Masuzoe> <http://dbpedia.org/property/residence> ?v4 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. <http://dbpedia.org/resource/2013_Júbilo_Iwata_season> <http://dbpedia.org/ontology/manager> ?result . ?result <http://dbpedia.org/ontology/team> ?v1 . ?v3 <http://dbpedia.org/ontology/almaMater> ?v1 . ?v3 <http://dbpedia.org/ontology/birthYear> ""1958""^^<http://www.w3.org/2001/XMLSchema#gYear> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?result <http://dbpedia.org/ontology/birthPlace> ?v4 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?manager ?university ?country
WHERE {
  # Find the manager of Júbilo Iwata for the 2013 season
  ?team dbo:coach ?manager .
  ?team rdfs:label ""Júbilo Iwata""@en .
  FILTER(YEAR(?team dbo:season) = 2013)

  # Get Yōichi Masuzoe's native residence country
  dbr:Yōichi_Masuzoe dbo:nativePlace ?nativePlace .
  ?nativePlace rdfs:label ?country .

  # Find the alma mater of a person born in 1958
  ?person dbo:birthdayYear ""1958""^^xsd:gYear .
  ?person dbo:almaMater ?university .
  ?university rdf:type dbo:University ;
              dbp:country dbr:Japan ;
              rdf:type dbo:EducationalOrganization .

  # Ensure the manager's alma mater matches this university
  ?manager dbo:almaMater ?university .

  # Ensure the manager's native residence country matches Yōichi Masuzoe's
  ?manager dbo:nativePlace ?nativePlace .
}
```",6,11,7,3,3,3,3,71,0,0,1,0,0.0,0
16,68,test,Give me the person born as the birth name of Gigi Rice and spouse of the person born as the birth name of Ted McGinley and professional in the profession of the actor of Unnatural (TV series).,SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Gigi_Rice> <http://dbpedia.org/property/birthName> ?v3 . ?v0 <http://dbpedia.org/property/occupation> ?v7 . ?v4 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Unnatural_(TV_series)> <http://dbpedia.org/property/starring> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v7 . ?v4 <http://dbpedia.org/property/birthName> ?v5 . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/property/birthName> ?v5 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

# Step 1: Find Gigi Rice's birth name
SELECT ?gigiBirthName WHERE {
    ?gigiResource a dbo:Person ;
                  foaf:name ""Gigi Rice"" .
    ?gigiResource dbp:birthName ?gigiBirthName .
}

# Step 2: Find Ted McGinley's birth name
SELECT ?tedBirthName WHERE {
    ?tedResource a dbo:Person ;
                 foaf:name ""Ted McGinley"" .
    ?tedResource dbp:birthName ?tedBirthName .
}

# Step 3: Identify the actor of ""Unnatural (TV series)"" and their profession
SELECT ?actor ?profession WHERE {
    ?series dbo:title ""Unnatural (TV series)"" ;
            dbo:starring ?actor .
    ?actor a dbo:Actor ;
           dbo:occupation ?profession .
}

# Step 4: Find the spouse who matches the criteria
SELECT DISTINCT ?spouseName WHERE {
    # Assuming we have extracted values for ?gigiBirthName, ?tedBirthName, and ?profession from previous queries
    VALUES (?tedBirthName) { ""Ted McGinley"" } # Replace with actual birth name if known
    VALUES (?profession) { ""Actor"" }         # Replace with actual profession if known

    ?person a dbo:Person ;
            dbp:birthName ?tedBirthName ;
            dbo:spouse ?spouse .
    ?spouse a dbo:Person ;
            foaf:name ?spouseName ;
            dbo:occupation ?profession .
}
```",8,8,9,3,3,3,3,71,0,0,1,0,0.0,0
328,57,test,"Give me the awardee of Order of Suvorov and commander in the force of the person decedent at Budapest and leader of the office, that is a government agency, of Joseph Stalin.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Budapest> . ?v5 <http://dbpedia.org/ontology/commander> ?v0 . ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Order_of_Suvorov> . ?v5 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://dbpedia.org/ontology/leader> ?result . <http://dbpedia.org/resource/Joseph_Stalin> <http://dbpedia.org/property/office> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person dbo:award [ a dbo:OrderOfSuvorov ] .
  ?person dbo:militaryCommanderInBudapest ?event .
  ?person dbo:leaderOfGovernmentAgencyUnderStalin ?agency .
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
161,71,test,"Give me the military force of the force, that is a societal event and an event and a military conflict, of the person decedent at Francoist Spain and military force of the force, that is a societal event and a military conflict, of the predecessor of Indalecio Prieto and commander in the force, that is an event, of the figure known as El Director.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v8 <http://dbpedia.org/ontology/commander> ?v7 . ?v8 <http://dbpedia.org/ontology/commander> ?result . ?v7 <http://xmlns.com/foaf/0.1/nick> ""El Director""@en . ?result <http://dbpedia.org/ontology/battle> ?v5 . ?v1 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Francoist_Spain> . ?v4 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Indalecio_Prieto> . ?v5 <http://dbpedia.org/ontology/commander> ?v4 . ?v2 <http://dbpedia.org/ontology/commander> ?v1 . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?militaryForceDecedent ?militaryForcePredecessor ?commanderInForce
WHERE {
  # Find the military force for the person decedent at Francoist Spain
  ?personDecedent dbo:deathPlace dbr:Francoist_Spain .
  ?societalEvent1 dbo:society ?personDecedent ;
                 a dbo:SocietalEvent .
  ?militaryConflict1 dbo:conflictParties ?personDecedent ;
                     a dbo:MilitaryConflict .
  ?militaryForceDecedent dbo:militaryConflict ?militaryConflict1 ;
                         dbo:societalEvent ?societalEvent1 .

  # Find the military force for the predecessor of Indalecio Prieto
  ?indalecioPrieto foaf:name ""Indalecio Prieto""@en .
  ?predecessor dbo:predecessor ?indalecioPrieto ;
               a dbo:Person .
  ?societalEvent2 dbo:society ?predecessor ;
                  a dbo:SocietalEvent .
  ?militaryConflict2 dbo:conflictParties ?predecessor ;
                     a dbo:MilitaryConflict .
  ?militaryForcePredecessor dbo:militaryConflict ?militaryConflict2 ;
                            dbo:societalEvent ?societalEvent2 .

  # Find the commander in the force of ""El Director""
  ?elDirector foaf:name ""El Director""@en .
  ?event3 a dbo:Event .
  ?commanderInForce dbo:commander ?elDirector ;
                    dbo:event ?event3 .
}
```",9,15,10,3,3,3,3,71,0,0,32,0,0.0,0
915,17,test,"Give me the resident of Springfield, Illinois and father of the child, that is a fictional character and a soap character, of the parent, that is a fictional character and a soap character, of Lizzie Spaulding.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoapCharacter>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v3 <http://dbpedia.org/property/father> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. <http://dbpedia.org/resource/Lizzie_Spaulding> <http://dbpedia.org/ontology/parent> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoapCharacter>. ?result <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Springfield,_Illinois> . ?v3 <http://dbpedia.org/property/father> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?residentCharacter WHERE {
  # Lizzie Spaulding's parent
  ?parent a dbo:FictionalCharacter ;
          dbo:spouseOrPartner ?lizzieSpaulding ;
          dbo:child ?grandChild .

  # Ensure the parent is part of a soap opera
  ?soapOpera dbo:character ?parent .
  
  # Lizzie Spaulding
  dbr:Lizzie_Spaulding dbo:spouseOrPartner ?parent ;
                       a dbo:FictionalCharacter .

  # Grandchild (Lizzie's child)
  ?grandChild a dbo:FictionalCharacter ;
              dbo:spouseOrPartner ?lizzieSpaulding .
  
  # Ensure the grandchild is part of a soap opera
  ?soapOpera2 dbo:character ?grandChild .

  # Resident of Springfield, Illinois
  ?residentCharacter dbo:residence dbr:Springfield,_Illinois ;
                     a dbo:FictionalCharacter ;
                     dbo:spouseOrPartner ?parent .
  
  # Ensure the resident character is part of a soap opera
  ?soapOpera3 dbo:character ?residentCharacter .

}
```",4,8,5,3,2,3,2,20,0,0,1,0,0.0,0
617,46,test,"Give me the spouse of the child of Antiochus III the Great and child of the child, that is a royalty, of the successor, that is a royalty, of Antiochus II Theos.",SELECT ?result WHERE { <http://dbpedia.org/resource/Antiochus_II_Theos> <http://dbpedia.org/ontology/successor> ?v2 . <http://dbpedia.org/resource/Antiochus_III_the_Great> <http://dbpedia.org/ontology/child> ?v4 . ?result <http://dbpedia.org/property/father> ?v1 . ?v4 <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?spouseChild WHERE {
  # Antiochus III the Great's children
  ?child1 dbo:parent dbr:Antiochus_III_the_Great .
  
  # Spouses of Antiochus III the Great's children
  ?child1 dbo:spouse ?spouse .

  # Children of those spouses who are royalty
  ?spouseChild dbo:parent ?spouse ;
               a dbo:Monarch .

  # Successors of Antiochus II Theos and their royal children
  ?successor dbp:succeededBy dbr:Antiochus_II_theos .
  ?royalSuccessorChild dbo:parent ?successor ;
                       a dbo:Monarch .

  # Find intersection where spouse's child is also a successor's royal child
  FILTER (?spouseChild = ?royalSuccessorChild)
}
```",5,7,6,3,2,3,3,71,0,0,4,0,0.0,0
767,38,test,Give me the reference to the alter ego of Black Hood and alma mater of the administration of George K. Nash.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/almaMater> ?result . <http://dbpedia.org/resource/Black_Hood> <http://dbpedia.org/property/alterEgo> ?v2 . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v3 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/George_K._Nash> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?alterEgo ?almaMater WHERE {
  # Find the alter ego of Black Hood
  ?character rdfs:label ""Black Hood""@en .
  ?character dbo:alias ?alterEgo .

  # Find George K. Nash's alma mater
  dbr:George_K._Nash dbo:almaMater ?almaMater .

  # Match the alter ego with the alma mater of George K. Nash
  ?alterEgo dbo:almaMater ?almaMater .
}
```",4,4,5,2,2,3,3,71,0,0,2,0,0.0,0
161,67,test,"Give me the military force of Rif War and commander in the force, that is an event, of the figure known as El Director and military force of the force, that is a societal event and a military conflict, of the predecessor of Indalecio Prieto.","SELECT ?result WHERE { ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://xmlns.com/foaf/0.1/nick> ""El Director""@en . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v6 <http://dbpedia.org/ontology/commander> ?v0 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/ontology/commander> ?v1 . ?v0 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Indalecio_Prieto> . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Rif_War> . ?result <http://dbpedia.org/ontology/battle> ?v6 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?rifWarMilitaryForce ?elDirector ?predecessor ?societalEvent ?militaryConflict
WHERE {
  # Rif War and its military force and commander (El Director)
  ?rifWar dbo:type dbo:War ;
          rdfs:label ""Rif War""@en .
  
  ?rifWarMilitaryForce dbo:militaryForceOf ?rifWar ;
                       dbo:commander ?elDirector .

  FILTER(CONTAINS(LCASE(?elDirector), ""el director""))

  # Predecessor of Indalecio Prieto and their societal event and military conflict
  dbr:Indalecio_Prieto dbo:predecessor ?predecessor .
  
  ?societalEvent dbo:type dbo:SocietalEvent ;
                dbo:militaryConflict ?militaryConflict .

  ?militaryConflict dbo:involves ?predecessor .
}
```",7,10,8,3,3,3,3,71,0,0,11,0,0.0,0
767,55,test,"Give me the alma mater of the administration of George K. Nash and entity in the administration, that is a settlement, of Green and reference to the alter ego of Black Hood.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/almaMater> ?result . ?v5 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/George_K._Nash> . <http://dbpedia.org/resource/Black_Hood> <http://dbpedia.org/property/alterEgo> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v3 <http://dbpedia.org/property/leaderParty> ""Green""@en . ?result <http://dbpedia.org/ontology/state> ?v3 . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?almaMater ?settlement ?alterEgo WHERE {
  # Alma mater of George K. Nash
  ?nash a dbo:Person ;
        foaf:name ""George K. Nash"" .
  ?nash dbo:almaMater ?almaMater .

  # Entity in the administration of Green that is a settlement
  ?green a dbo:Person ;
         foaf:name ""Green"" .
  ?admin dbo:member ?entity ;
         dbo:headOfState ?green .
  ?entity dbo:settlement ?settlement .

  # Alter ego of Black Hood
  OPTIONAL {
    ?blackHood a dbo:Person ;
               rdfs:label ""Black Hood""@en .
    ?blackHood rdfs:label ?alterEgo .
  }
}
```",6,7,7,2,3,3,3,71,0,0,1,0,0.0,0
429,8,test,"Give me the administration of Andrew Johnson and country of the military force, that is an organisation, of Camden Expedition.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Andrew_Johnson> . ?v0 <http://dbpedia.org/ontology/country> ?result . ?v0 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Camden_Expedition> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?administrationCountry ?militaryForceCountry
WHERE {
  # Find Andrew Johnson's administration
  dbr:Andrew_Johnson dbo:presidentOf ?country.
  ?country dbo:countryForCitizenship ?administrationCountry.

  # Find the military force involved in the Camden Expedition
  dbr:Cameron_Expedition dbo:militaryConflict ?militaryEvent.
  ?militaryEvent dbo:participatingMilitaryForce ?militaryForce.
  ?militaryForce dbo:countryForCitizenship ?militaryForceCountry.
}
```",3,4,4,2,2,2,2,9,0,0,1,0,0.0,0
701,48,test,Give me the spouse of the father of Merneptah and parent of the child of the spouse of Amun-her-khepeshef.,SELECT ?result WHERE { <http://dbpedia.org/resource/Merneptah> <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/ontology/spouse> ?v1 . <http://dbpedia.org/resource/Amun-her-khepeshef> <http://dbpedia.org/ontology/spouse> ?v3 . ?v3 <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?spouseOfMerneptahsFather WHERE {
  # Step 1: Find Merneptah's father
  ?merneptah dbo:father ?merneptahsFather .
  
  # Step 2: Find the spouse of Merneptah's father
  ?merneptahsFather dbo:spouse ?spouseOfMerneptahsFather .

  # Step 3: Find Amun-her-khepeshef's spouse
  ?amunHerKhepeshef dbo:spouse ?spouseOfAmunHerKhepeshef .
  
  # Step 4: Find the child of Amun-her-khepeshef's spouse
  ?spouseOfAmunHerKhepeshef dbo:child ?childOfSpouseOfAmunHerKhepeshef .

  # Step 5: Find the parent of this child
  ?childOfSpouseOfAmunHerKhepeshef dbo:parent ?spouseOfMerneptahsFather .
  
  FILTER(?merneptah = dbpedia:Merneptah)
  FILTER(?amunHerKhepeshef = dbpedia:Amun-her-khepeshef)
}
```",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
994,55,test,"Give me the band member of the person born, that is a musical artist, as Donald Maynard Dokken and associated musical artist of the associated musical artist of Watchtower (band) and associated musical artist of the band member, that is a band and a group and an organisation, of Meshuggah.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Meshuggah> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/property/birthName> ""Donald Maynard Dokken""@en . <http://dbpedia.org/resource/Watchtower_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?bandMember
WHERE {
  # Step 1: Identify Donald Maynard Dokken
  ?dokken a dbo:MusicalArtist ;
          foaf:name ""Donald Maynard Dokken"" .

  # Step 2: Find band members of Dokken
  ?member dbo:bandMember ?dokkenBand .
  
  # Step 3: Associated musical artist of Watchtower
  ?watchtowerBand dbo:associatedBand ?watchtowerArtist .
  ?watchtowerBand foaf:name ""Watchtower"" .

  # Step 4: Associated musical artist of Meshuggah
  ?meshuggahBand dbo:bandMember ?meshuggahMember ;
                 a dbo:MusicalGroup .
  ?meshuggahBand foaf:name ""Meshuggah"" .
  
  # Find common band member associated with both Watchtower and Meshuggah
  ?commonArtist dbo:associatedBand ?watchtowerBand ;
                dbo:associatedBand ?meshuggahBand .

  # Ensure the person is a musical artist
  ?commonArtist a dbo:MusicalArtist .

  # Step 5: Combine information to find the band member of Dokken who fits all criteria
  ?member foaf:name ?commonArtistName .
}
```",6,10,7,2,3,3,3,71,0,0,1,0,0.0,0
747,26,test,"Give me the band of the writer of the work, that is a song, of Amba Shepherd.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/writer> ?v2 . ?v1 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Amba_Shepherd> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?band
WHERE {
  ?person rdfs:label ""Amba Shepherd""@en .
  ?work dbo:author ?person ;
        a dbo:Song .
  ?work dbo:band ?band .
}
```",3,4,4,3,1,3,3,71,0,0,13,0,0.0,0
528,30,test,Give me the war of Irene Morales and force of the person born as Narciso Campero Leyes and war of Orozimbo Barbosa.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ""Narciso Campero Leyes""@en . <http://dbpedia.org/resource/Orozimbo_Barbosa> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/commander> ?v1 . <http://dbpedia.org/resource/Irene_Morales> <http://dbpedia.org/ontology/battle> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?war WHERE {
  # Wars involving Irene Morales
  OPTIONAL { 
    dbr:Irene_Morales dbo:participatedIn ?war .
  }
  
  # Wars involving Narciso Campero Leyes (assuming he is known as Andrés de Santa Cruz)
  OPTIONAL { 
    dbr:Andr%C3%A9s_de_Santa_Cruz dbo:birthName ""Narciso Campero Leyes""@en ;
                                  dbo:participatedIn ?war .
  }
  
  # Wars involving Orozimbo Barbosa
  OPTIONAL { 
    dbr:Orozimbo_Barbosa dbo:participatedIn ?war .
  }
}
```",4,4,5,2,3,3,3,71,0,0,2,0,0.0,0
378,30,test,Give me the war of Carl Pontus Gahn and claim to fame of the commander in Great Siege of Gibraltar and war of Joaquín Blake.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/knownFor> ?result . <http://dbpedia.org/resource/Great_Siege_of_Gibraltar> <http://dbpedia.org/ontology/commander> ?v1 . <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Joaquín_Blake> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war ?commander ?claimToFame WHERE {
  # Find the war associated with Carl Pontus Gahn (if any)
  OPTIONAL {
    ?gahn dbo:nationality dbr:Sweden .
    ?gahn dbo:occupation dbr:Chemist .
    ?gahn dbo:associatedWith ?war .
  }

  # Find the commander of the Great Siege of Gibraltar
  ?siege dbo:eventType dbr:Siege_of_Gibraltar_1779-1783 .
  ?siege dbo:commander ?commander1 .

  # Find Joaquín Blake's war and his claim to fame
  ?joaquinBlake dbo:nationality dbr:Spain ;
                dbo:occupation dbr:Military_person ;
                dbo:associatedWith ?warJoaquinBlake .
  
  OPTIONAL {
    ?commander1 dbo:claimToFame ?claimToFame .
  }

  # Ensure the commander is involved in both events
  FILTER (?commander = ?commander1)
}
```",4,4,5,2,3,3,3,71,0,0,2,0,0.0,0
16,58,test,Give me the spouse of Ted McGinley and professional in the profession of Satomi Ishihara and person born as the birth name of the alumnus of Ohio State University.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Satomi_Ishihara> <http://dbpedia.org/property/occupation> ?v5 . ?v1 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Ohio_State_University> . ?result <http://dbpedia.org/property/occupation> ?v5 . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://dbpedia.org/property/birthName> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?person WHERE {
  # Spouse of Ted McGinley
  VALUES ?ted_mcginley { <http://dbpedia.org/resource/Ted_McGinley> }
  
  # Profession of Satomi Ishihara
  VALUES ?satomi_ishihara_profession {
    SELECT DISTINCT ?profession WHERE {
      ?satomi_ishihara dbo:profession ?profession .
      FILTER(STR(?satomi_ishihara) = ""Satomi_Ishihara"")
    }
  }

  # Birth name of an alumnus of Ohio State University
  VALUES ?osu_alumni_birth_name {
    SELECT DISTINCT ?birthName WHERE {
      ?alumnus dbo:almaMater <http://dbpedia.org/resource/Ohio_State_University> ;
               foaf:name ?birthName .
    }
  }

  # Person who satisfies all conditions
  ?person dbo:spouse ?ted_mcginley .
  ?person dbo:profession ?satomi_ishihara_profession .
  ?person foaf:name ?osu_alumni_birth_name .
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
404,27,test,Give me the child of the father of the spouse of Princess Victoria Louise of Prussia.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v2 . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?v1 . ?v1 <http://dbpedia.org/property/father> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child
WHERE {
  ?princess rdf:type dbo:Princess ;
            foaf:name ""Victoria Louise of Prussia""@en .
  
  ?princess dbo:spouse ?spouse .

  ?spouse dbo:father ?father .

  ?father dbo:child ?child .
}
```",3,3,4,3,1,3,3,71,0,0,3,0,0.0,0
281,65,test,"Give me the entity in the birth place, that is a country, of the leader, that is a politician, of 1962 New South Wales state election and war of the awardee of Knight Grand Cross of the Order of the Bath and war of the profession, that is a military unit, of Heather Roy.",SELECT ?result WHERE { <http://dbpedia.org/resource/Heather_Roy> <http://dbpedia.org/property/occupation> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v0 <http://dbpedia.org/ontology/birthPlace> ?v6 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/1962_New_South_Wales_state_election> <http://dbpedia.org/property/leader> ?v0 . ?v4 <http://dbpedia.org/ontology/battle> ?result . ?v4 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_the_Bath> . ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/place> ?v6 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?entityInBirthplaceCountry WHERE {
  # Step 1: Identify the leader of the 1962 New South Wales state election
  ?politician dbo:office ?office .
  ?office dbo:election dbr:New_South_Wales_state_election,_1962 .
  
  # Step 2: Determine the birthplace country of this politician
  ?politician dbp:birthPlace ?birthPlace .
  ?birthPlace a dbo:Country .

  # Step 3: Find the awardee of Knight Grand Cross of the Order of the Bath
  ?awardee dbo:honours dbr:Knight_Grand_Cross_of_the_Order_of_the_Bath .
  
  # Step 4: Identify the war associated with both
  OPTIONAL { ?politician dbo:militaryConflict ?war1 . }
  OPTIONAL { ?awardee dbo:militaryConflict ?war2 . }

  # Heather Roy's profession as a military unit
  dbr:Heather_Roy dbo:profession ?militaryUnit .
  ?militaryUnit a dbo:MilitaryUnit .

  # Step 5: Find the common war
  FILTER (?war1 = ?war2)

  # Step 6: Entity in birthplace country of politician
  ?entityInBirthplaceCountry a dbo:Place ;
                            dbo:country ?birthPlace .
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
801,49,test,"Give me the professional in the alter ego of The Shadow and associated musical artist of the writer, that is a musical artist and an artist, of the album, that is a musical work and a work, of What U See Is What U Get.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/property/writer> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/What_U_See_Is_What_U_Get> <http://dbpedia.org/ontology/album> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?professionalInAlterEgo ?associatedMusicalArtist WHERE {
  # The Shadow's alter ego is Lamont Cranston
  VALUES ?alterEgo { dbr:Lamont_Cranston }
  
  # Find the professional name of Lamont Cranston (The Shadow)
  ?professionalInAlterEgo dbo:alias ?alterEgo .
  
  # Find a musical artist associated with this writer who is also an artist
  ?associatedMusicalArtist dbo:writer ?professionalInAlterEgo ;
                          a dbo:MusicArtist, dbo:Artist .

  # Identify the album ""What U See Is What U Get""
  ?album dbr:What_U_See_Is_What_U_Get ;
         a dbo:MusicalWork, dbo:Work .
  
  # Find the artist associated with this album
  ?associatedMusicalArtist dbo:album ?album .
}
```",5,9,6,3,2,3,3,71,0,0,22,0,0.0,0
659,58,test,"Give me the commander in German campaign of 1813 and military force of the force, that is a societal event and an event and a military conflict, of the reference to Rutger Jan Schimmelpenninck and commander in the war, that is an event and a military conflict, of 1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish).","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/German_campaign_of_1813> <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://dbpedia.org/ontology/commander> ?v1 . <http://dbpedia.org/resource/1st_Light_Cavalry_Lancers_Regiment_of_the_Imperial_Guard_(Polish)> <http://dbpedia.org/ontology/battle> ?v5 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v5 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://xmlns.com/foaf/0.1/name> ""Rutger Jan Schimmelpenninck""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?militaryForce WHERE {
  # Identify the German campaign of 1813 as a societal event and military conflict
  ?campaign dbo:type/dbo:sameAs* dbr:German_campaign_of_1813 .
  FILTER (CONTAINS(LCASE(STR(?campaign)), ""societal"") && CONTAINS(LCASE(STR(?campaign)), ""military""))

  # Find the commander associated with this campaign and connected to Rutger Jan Schimmelpenninck
  ?commander dbo:commanded ?campaign .
  ?schimmelpenninck dbo:relatedTo ?commander .
  FILTER (CONTAINS(LCASE(STR(?schimmelpenninck)), ""rutger jan schimmelpenninck""))

  # Identify the military force of the commander
  ?militaryForce dbo:commandedBy ?commander .

  # Ensure the regiment is involved in a military conflict
  ?regiment dbo:type dbr:1st_Light_Cavalry_Lancers_Regiment_of_the_Imperial_Guard_(Polish) .
  ?conflict dbo:participatedIn ?regiment .
  FILTER (CONTAINS(LCASE(STR(?conflict)), ""military""))
}
```",6,11,7,3,3,3,3,71,0,0,7,0,0.0,0
294,26,test,"Give me the resting place of Edwin A. Keeble and entity in the birth place, that is a settlement, of Marion James and resting place of the awardee, that is a politician, of Distinguished Service Medal (U.S. Army).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/location> ?v1 . <http://dbpedia.org/resource/Marion_James> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Edwin_A._Keeble> <http://dbpedia.org/ontology/restingPlace> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Distinguished_Service_Medal_(U.S._Army)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?restingPlaceKeeble ?settlementBirthplaceJames ?restingPlaceAwardee
WHERE {
  # Resting place of Edwin A. Keeble
  OPTIONAL { 
    dbr:Edwin_A._Keeble dbo:deathPlace ?restingPlaceKeeble .
  }

  # Entity in the birthplace of Marion James that is a settlement
  OPTIONAL {
    dbr:Marion_James dbo:birthPlace ?birthPlaceJames .
    ?birthPlaceJames rdf:type dbo:Settlement .
    BIND(?birthPlaceJames AS ?settlementBirthplaceJames)
  }
  
  # Resting place of an awardee who is a politician and received the Distinguished Service Medal (U.S. Army)
  OPTIONAL {
    ?awardee dbo:award dbr:Distinguished_Service_Medal_(United_States_Army) .
    ?awardee rdf:type dbo:Politician .
    ?awardee dbo:deathPlace ?restingPlaceAwardee .
  }
}
```",5,7,6,2,3,2,3,28,0,0,1,0,0.0,0
16,22,test,Give me the spouse of Ted McGinley and person born as the birth name of Gigi Rice.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Gigi_Rice> <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX schema: <http://schema.org/>

SELECT ?spouse ?personWithBirthName WHERE {
  # Find the spouse of Ted McGinley
  { 
    ?ted dbo:name ""Ted McGinley""@en .
    ?ted dbo:spouse ?spouse .
  }
  
  UNION
  
  # Find a person with birth name Gigi Rice
  { 
    ?person foaf:name ""Gigi Rice""@en ;
            schema:birthName ?name .
    FILTER(?name = ""Gigi Rice"")
    BIND(?person AS ?personWithBirthName)
  }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
801,61,test,"Give me the producer of the work, that is a musical work and a song and a work, of the professional, that is a musical artist, in Rapper and associated musical artist of the writer, that is a musical artist and an artist, of the album, that is a musical work and a work, of What U See Is What U Get.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/writer> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v5 <http://dbpedia.org/ontology/producer> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/What_U_See_Is_What_U_Get> <http://dbpedia.org/ontology/album> ?v1 . ?v0 <http://dbpedia.org/property/occupation> ""Rapper""@en . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v5 <http://dbpedia.org/property/writer> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?producer WHERE {
  ?album a dbo:Album ;
         rdfs:label ""What U See Is What U Get""@en .
  
  ?song dbo:album ?album ;
        a dbo:Song .

  ?writer a dbo:MusicalArtist, dbo:Artist ;
          dbo:associatedMusicalArtist ?rapper ;
          dbo:work ?song .

  ?rapper a dbo:Rapper, dbo:MusicalArtist .

  ?producer dbo:producedAlbum ?album .
}
```",6,14,7,3,2,3,3,71,0,0,9,0,0.0,0
182,23,test,Give me the war of the author of 2019 Sri Lanka Easter bombings and entity in the nationality of Tamara Kunanayakam.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Tamara_Kunanayakam> <http://dbpedia.org/ontology/nationality> ?v1 . <http://dbpedia.org/resource/2019_Sri_Lanka_Easter_bombings> <http://dbpedia.org/property/author> ?v2 . ?result <http://dbpedia.org/ontology/place> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?author ?war ?nationalityEntity
WHERE {
  # Step 1: Identify the author of works related to the 2019 Sri Lanka Easter bombings
  ?work dbo:subject dbr:Easter_bombings_of_2019_in_Sri_Lanka .
  ?work dbo:author ?author .

  # Step 2: Find any wars associated with this author
  OPTIONAL { ?author dbo:subject ?war . FILTER (strstarts(str(?war), ""War"")) }

  # Step 3: Identify Tamara Kunanayakam's nationality
  dbr:Tamara_Kunanayakam dbo:nationality ?nationality .

  # Step 4: Find an entity linked to this nationality
  ?entity dbo:nationality ?nationality .
  
  FILTER (?author != dbr:Tamara_Kunanayakam) # Ensure the author is not Tamara Kunanayakam herself
}
```",4,4,5,2,2,2,3,28,0,0,1,0,0.0,0
303,26,test,"Give me the party of the person born, that is a politician, as Arnulfo Arias Madrid and entity in Panama and party of the commander, that is a politician, in United States invasion of Panama.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ""Arnulfo Arias Madrid""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/United_States_invasion_of_Panama> <http://dbpedia.org/ontology/commander> ?v2 . ?v1 <http://dbpedia.org/ontology/party> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/ontology/party> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Panama> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?arnulfoParty ?commander ?commanderParty WHERE {
  # Arnulfo Arias Madrid's political party
  dbr:Arnulfo_Arias_Madrid dbo:nationality dbr:Panama ;
                            dbo:politicalAffiliation ?arnulfoParty .

  # Commander during the United States invasion of Panama
  OPTIONAL {
    ?commander dbp:occupation ""politician"" ;
               dbo:involvedInMilitaryOperation dbr:United_States_invasion_of_Panama .
    ?commander dbo:politicalAffiliation ?commanderParty .
  }
}
```",5,7,6,2,3,2,3,28,0,0,1,0,0.0,0
767,62,test,"Give me the alma mater of the administration of the reference to George Kilbon Nash and entity in the administration, that is a settlement, of the writer of Where It's At (Dustin Lynch album) and reference to .","SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""George Kilbon Nash""@en . ?v6 <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://dbpedia.org/ontology/state> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v3 <http://dbpedia.org/property/leaderParty> ?v4 . <http://dbpedia.org/resource/Where_It's_At_(Dustin_Lynch_album)> <http://dbpedia.org/property/writer> ?v4 . ?v6 <http://dbpedia.org/property/governor> ?v0 . ?result <http://xmlns.com/foaf/0.1/name> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?almaMater
WHERE {
  # Step 1: Get George Kilbon Nash's alma mater
  dbr:George_Kilbon_Nash dbo:almaMater ?nashAlmaMater .

  # Step 2: Find the writer of Dustin Lynch's album ""Where It's At""
  dbr:Where_It%27s_At_(Dustin_Lynch_album) dbo:lyricsBy ?writer .

  # Step 3: Identify any settlements associated with this writer through their administrative roles
  ?settlement a dbo:Settlement ;
              dbo:partOfAdministrativeTerritory ?adminEntity .
  
  ?writer dbo:memberOf ?adminEntity .

  # Step 4: Retrieve the administration entity related to both George Kilbon Nash and the settlement, then extract its alma mater
  ?adminEntity dbo:almaMater ?almaMater ;
              dbo:member ?nashMember .
  
  ?nashMember dbr:George_Kilbon_Nash .
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
801,36,test,"Give me the associated musical artist of the writer, that is a musical artist and an artist, of the album, that is a musical work and a work, of What U See Is What U Get and professional in .","SELECT ?result WHERE { <http://dbpedia.org/resource/What_U_See_Is_What_U_Get> <http://dbpedia.org/ontology/album> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v0 <http://dbpedia.org/property/writer> ?v1 . ?result <http://dbpedia.org/property/occupation> """"@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?artist WHERE {
  # Find the album ""What U See Is What U Get""
  ?album a dbo:Album ;
         rdfs:label ?albumLabel .
  
  FILTER (CONTAINS(LCASE(?albumLabel), ""what u see is what u get"")) .

  # Find musical works in this album
  ?album dbo:musicalArtist ?musicalWork .

  # Identify the writer of these musical works
  ?musicalWork dbo:composer ?writer .
  
  # Find a musical artist associated with the writer
  ?artist a dbo:MusicalArtist ;
          dbo:associatedWith ?writer .
}
```",4,8,5,3,2,3,3,71,0,0,22,0,0.0,0
617,30,test,Give me the child of Antiochus III the Great and spouse of Laodice IV and parent of the child of Antiochus (son of Antiochus III the Great).,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Antiochus_III_the_Great> . <http://dbpedia.org/resource/Laodice_IV> <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/child> ?v1 . ?result <http://dbpedia.org/ontology/child> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child ?spouse ?parentOfChild
WHERE {
  # Antiochus III the Great's children
  dbr:Antiochus_III_the_Great dbo:child ?child .
  
  # Spouse of Laodice IV
  ?child dbo:spouse dbr:Laodice_IV .

  # Parent of the child of Antiochus (son of Antiochus III)
  ?child dbo:parent ?parentOfChild .
}
```",4,4,5,2,3,3,3,71,1,3,0,0.25,1.0,0.4
801,60,test,"Give me the associated musical artist of the writer, that is a musical artist and an artist, of the album, that is a musical work and a work, of What U See Is What U Get and professional in the alter ego of the true self of The Shadow.","SELECT ?result WHERE { ?v3 <http://xmlns.com/foaf/0.1/givenName> ""The Shadow""@en . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/property/occupation> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/property/writer> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v3 <http://dbpedia.org/property/alterEgo> ?v2 . <http://dbpedia.org/resource/What_U_See_Is_What_U_Get> <http://dbpedia.org/ontology/album> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?associatedArtist WHERE {
  ?album dbo:workType dbr:Musical_work ;
         foaf:name ""What U See Is What U Get"" .
  
  ?album dbo:writer ?writer .

  ?writer a dbo:MusicalArtist, dbo:Artist .

  ?alias foaf:name ""The Shadow"" .
  ?trueSelf foaf:name ?realName .
  ?alias foaf:nick ?trueSelf .

  ?associatedAlbum dbo:workType dbr:Musical_work ;
                  dbo:artist ?associatedArtist .
  ?associatedArtist a dbo:MusicalArtist, dbo:Artist .
  ?writer foaf:name ?realName .
}
```",6,10,7,3,2,3,3,71,0,0,22,0,0.0,0
421,21,test,Give me the band member of Senidah and native of Socialist Federal Republic of Yugoslavia and person born as the birth name of Dino Merlin.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Senidah> . ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Dino_Merlin> <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Socialist_Federal_Republic_of_Yugoslavia> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  ?bandMember dbo:memberOf dbr:Senidah .
  ?bandMember dbo:birthPlace ?placeOfBirth .
  ?placeOfBirth dbo:country dbr:Socialist_Federal_Republic_of_Yugoslavia .
  ?bandMember dbp:birthName ""Dino Merlin"" .
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
48,18,test,"Give me the band of the writer of the work, that is a work, of Shellback (record producer) and band of the actor, that is a musical artist, of Honor Up.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/writer> ?v2 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Honor_Up> <http://dbpedia.org/property/starring> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Shellback_(record_producer)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?band1 ?actorBand WHERE {
  # Part 1: Find the band associated with a work produced by Shellback
  ?work dbo:producer dbr:Shellback .
  ?work dbo:artist ?band1 .

  # Part 2: Find the actor of ""Honor Up"" and their band as a musical artist
  ?movie dbo:title ""Honor Up""@en .
  ?movie dbo:starring ?actor .
  ?actor dbo:musicalArtist ?actorBand .
}
```",5,7,6,3,2,3,2,20,0,0,1,0,0.0,0
747,64,test,"Give me the band of the person born as the persona of Shèna and person born on the birth date of the person decedent, that is an athlete and a soccer player, at Zolotonosha and band of Amba Shepherd.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Zolotonosha> . ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?result <http://dbpedia.org/ontology/birthDate> ?v2 . <http://dbpedia.org/resource/Shèna> <http://xmlns.com/foaf/0.1/givenName> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Amba_Shepherd> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v3 <http://dbpedia.org/ontology/birthDate> ?v2 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandOfPerson ?bandOfAmbaShepherd
WHERE {
  # Find Shèna's real identity
  ?shena a dbo:Person ;
         foaf:name ""Shèna"" .

  # Find the decedent born in Zolotonosha
  ?decedent dbo:birthPlace dbr:Zolotonosha ;
            dbo:deathDate ?deathDate .

  # Find an athlete who is a soccer player and shares the birth date with the decedent
  ?athlete dbo:sport dbr:Soccer ;
           dbo:birthDate ?birthDate .
  
  FILTER (?birthDate = ?deathDate)

  # Ensure this person is also associated with a band
  ?person dbo:musicalBand ?bandOfPerson .

  # Find Amba Shepherd and her band
  ?ambashepherd a dbo:Person ;
                foaf:name ""Amba Shepherd"" .
  
  ?ambashepherd dbo:musicalBand ?bandOfAmbaShepherd .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
54,47,test,Give me the child of the father of Soe Min Wimala Dewi and parent of the child of the parent of Thado Minsaw of Prome.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/child> ?result . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> . ?v4 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Soe_Min_Wimala_Dewi> <http://dbpedia.org/property/father> ?v2 . ?v4 <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?commonEntity WHERE {
  # Find Soe Min Wimala Dewi's father
  ?soeMinWimalaDewi rdfs:label ""Soe Min Wimala Dewi""@en .
  ?soeMinWimalaDewi dbo:parent ?father .

  # Find the child of Soe Min Wimala Dewi's father
  ?childOfFather dbo:parent ?father .

  # Find Thado Minsaw of Prome's parent
  ?thadoMinsaw rdfs:label ""Thado Minsaw of Prome""@en .
  ?thadoMinsaw dbo:parent ?parentOfThado .

  # Find the child of Thado Minsaw of Prome's parent
  ?childOfParent dbo:parent ?parentOfThado .

  # Determine the common entity
  ?commonEntity rdf:type dbo:Person .
  FILTER (?commonEntity = ?childOfFather && ?commonEntity = ?parentOfChild)
}
```",5,5,6,3,2,3,3,71,1,2,0,0.3333333333333333,1.0,0.5
404,60,test,"Give me the child of the father of the spouse of Princess Victoria Louise of Prussia and spouse of the person born, that is a royalty, as the birth name of Princess Victoria Louise of Prussia.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/property/father> ?v1 . ?v2 <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/property/birthName> ?v3 . ?result <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?spouseBirthName WHERE {
  ?princess a dbo:Princess ;
            foaf:name ""Victoria Louise of Prussia"" .
  
  ?princess dbo:spouse ?spouse .

  ?spouse dbo:father ?father .

  ?father dbo:child ?child .
  
  FILTER (?child = ?spouse) .

  ?spouse a dbo:RoyalFamily ;
          foaf:name ?spouseBirthName .
}
```",6,7,7,3,2,3,3,71,0,0,1,0,0.0,0
197,9,test,Give me the birthplace of the awardee of Leroy P. Steele Prize and birthplace of the member of FC Politehnica Timișoara.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/FC_Politehnica_Timișoara> . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v3 <http://dbpedia.org/property/awards> ""Leroy P. Steele Prize""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?steeleAwardeeBirthplace ?politehnicaMemberBirthplace WHERE {
  # Find the birthplace of an awardee of the Leroy P. Steele Prize
  ?person dbo:award dbr:Leroy_P._Steele_Prize .
  ?person dbo:birthPlace ?steeleAwardeeBirthplace .

  # Find the birthplace of a member of FC Politehnica Timișoara
  ?member dbo:team dbr:FC_Politehnica_Timișoara .
  ?member dbo:birthPlace ?politehnicaMemberBirthplace .
}
```",4,4,5,2,2,2,2,9,4,251,0,0.01568627450980392,1.0,0.03088803088803089
54,31,test,Give me the child of the father of the child of Thinkhaya of Pagan and parent of Thado Minsaw of Prome.,SELECT ?result WHERE { <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?v1 . ?v0 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://dbpedia.org/property/father> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?person WHERE {
  ?thinkhaya a dbo:Person ;
             foaf:name ""Thinkhaya""@en .
  
  ?child dbo:father ?thinkhaya .
  
  ?thadoMinsaw a dbo:Person ;
               foaf:name ""Thado Minsaw of Prome""@en .

  ?parent dbo:child ?thadoMinsaw .

  FILTER (?child = ?person && ?parent = ?person)
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
9,26,test,"Give me the alma mater of the awardee of the reference, that is an award, to Royal Medals.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/almaMater> ?result . ?v2 <http://dbpedia.org/property/awards> ?v1 . ?v1 <http://xmlns.com/foaf/0.1/name> ""Royal Medals""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?awardee ?almaMater WHERE {
  ?medal a dbo:Award ;
         dbo:awarder dbr:The_Royal_Society_of_London_for_Improving_Natural_Knowledge ;
         dbo:recipient ?awardee .
  
  OPTIONAL { 
    ?awardee dbo:almaMater ?almaMater .
  }
}
```",3,4,4,3,1,3,3,71,0,0,31,0,0.0,0
391,54,test,"Give me the actor of the claim to fame, that is a work, of the spouse of Sherry Hormann and actor of All About the Andersons and native of the figure known as Hub City.","SELECT ?result WHERE { <http://dbpedia.org/resource/Sherry_Hormann> <http://dbpedia.org/ontology/spouse> ?v0 . <http://dbpedia.org/resource/All_About_the_Andersons> <http://dbpedia.org/property/starring> ?result . ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v0 <http://dbpedia.org/ontology/knownFor> ?v5 . ?v3 <http://dbpedia.org/property/nickname> ""Hub City""@en . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v5 <http://dbpedia.org/ontology/starring> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?actor WHERE {
  # Sherry Hormann's spouse
  ?spouse dbo:spouse dbr:Sherry_Hormann .
  
  # Claim to fame (work) of the spouse
  ?spouse dbo:notableWork ?claimToFame .

  # Actor of ""All About the Andersons""
  ?actor dbo:starringIn dbr:All_About_the_Andersons .

  # Native of Hub City
  ?actor dbo:nativePlace ?hubCity .
  
  # Hub City is known as a specific city (e.g., Columbia, South Carolina)
  FILTER(?hubCity = dbr:Columbia_(South_Carolina)) 

  # The actor must be the spouse's claim to fame and match all criteria
  ?claimToFame rdfs:label ?actorLabel .
  FILTER(langMatches(lang(?actorLabel), ""en""))
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
345,20,test,"Give me the figure known as the nickname of the player, that is a sports club and an organisation and a soccer club, in Armando Heeb and team of the person born, that is a soccer player and a soccer manager, on the birth date of Eiður Guðjohnsen.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?result <http://dbpedia.org/property/nickname> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v5 <http://dbpedia.org/ontology/birthDate> ?v4 . <http://dbpedia.org/resource/Eiður_Guðjohnsen> <http://dbpedia.org/ontology/birthDate> ?v4 . ?v1 <http://dbpedia.org/property/nickname> ?v2 . <http://dbpedia.org/resource/Armando_Heeb> <http://dbpedia.org/ontology/team> ?v1 . ?result <http://dbpedia.org/ontology/manager> ?v5 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?nickname WHERE {
  # Find Armando Heeb's associated sports club and its nickname
  dbr:Armando_Heeb dbo:team dbr:Sport_Club .
  dbr:Sport_Club a dbo:SportsClub ;
                a dbo:Organization ;
                a dbo:FootballClub ;
                dbp:nickname ?nickname .

  # Find Eiður Guðjohnsen's birth date
  dbr:Eiður_Guðjohnsen dbo:birthday ?birthDate .

  # Find the team of the person born on that date who is both a soccer player and manager
  ?person dbo:birthday ?birthDate ;
          dbo:team ?team .
  ?person a dbo:SoccerPlayer, dbo:SoccerManager .
}
```",6,11,7,3,2,3,2,20,0,0,1,0,0.0,0
617,43,test,"Give me the child of Antiochus III the Great and parent of Nysa (wife of Pharnaces I of Pontus) and spouse of the child of the successor, that is a royalty, of Antiochus (son of Antiochus III the Great).",SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Antiochus_III_the_Great> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/successor> ?v0 . ?v0 <http://dbpedia.org/ontology/child> ?v4 . ?v4 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Nysa_(wife_of_Pharnaces_I_of_Pontus)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?individual WHERE {
  # Antiochus III the Great's children
  ?child dbo:parent dbr:Antiochus_III_the_Great .
  
  # Nysa's parent
  ?nysaParent dbo:spouse dbr:Nysa_(wife_of_Pharaces_I_of_Pontus) ;
              dbo:child ?nysa .

  # Antiochus (son of Antiochus III the Great)
  ?antiochusChild dbo:parent dbr:Antiochus_III_the_Great .
  
  # Successor of Antiochus and their child
  ?successor dbo:succeededBy ?antiochusChild ;
             dbo:child ?successorChild .

  # Spouse of the successor's child
  ?individual dbo:spouse ?successorChild ;
              rdf:type dbo:Monarch ;
              dbo:parent ?nysaParent .
}
```",5,6,6,3,3,3,3,71,0,0,2,0,0.0,0
801,20,test,"Give me the professional in  and producer of the work, that is a musical work and a song and a work, of 50 Cent.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v2 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/50_Cent> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/ontology/producer> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?work ?producer WHERE {
  ?work a dbo:Song .
  ?work a dbo:MusicalWork .
  ?work dbo:performer dbr:50_Cent .
  
  OPTIONAL { 
    ?work dbo:producer ?producer .
  }
}
```",3,6,4,2,2,3,3,71,0,0,27,0,0.0,0
360,21,test,Give me the writer of The Roaring Silence and native of Johannesburg and reference to the author of Blinded by the Light.,SELECT ?result WHERE { <http://dbpedia.org/resource/Blinded_by_the_Light> <http://dbpedia.org/property/author> ?v0 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Johannesburg> . <http://dbpedia.org/resource/The_Roaring_Silence> <http://dbpedia.org/property/writer> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?writer ?nativePlace ?blindedByTheLightAuthor
WHERE {
  # Find the writer of ""The Roaring Silence""
  dbr:The_Roaring_Silence dbo:creator ?writer .
  
  # Check if this writer is a native of Johannesburg
  OPTIONAL { ?writer dbo:nativePlace dbr:Johannesburg . }
  
  # Reference to the author of ""Blinded by the Light""
  dbr:Blinded_by_the_Light dbo:composer dbr:Bruce_Springsteen .
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
801,39,test,"Give me the associated musical artist of the writer, that is a musical artist and an artist, of the album, that is a musical work and a work, of What U See Is What U Get and producer of Westside Story (song).",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/property/writer> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Westside_Story_(song)> <http://dbpedia.org/ontology/producer> ?result . <http://dbpedia.org/resource/What_U_See_Is_What_U_Get> <http://dbpedia.org/ontology/album> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?artist WHERE {
  # Find the writer of ""What U See Is What U Get"" who is also a musical artist and an artist
  ?album dbo:workExample dbr:What_U_See_Is_What_U_Get ;
         dbo:composer ?writer .
  
  FILTER (CONTAINS(LCASE(STR(?writer)), ""musical artist"") && CONTAINS(LCASE(STR(?writer)), ""artist""))

  # Find the producer of ""Westside Story (song)""
  dbr:Westside_Story_(song) dbo:producer ?producer .

  # Ensure the writer is also the producer
  FILTER (?writer = ?producer)

  # Return the artist
  BIND(?writer AS ?artist)
}
```",4,8,5,3,2,3,3,71,0,0,1,0,0.0,0
314,26,test,"Give me the person deceased at the headquarter of House of Sombrerete and commander in the profession, that is an event and a societal event, of Lisa Gavrić and awardee of 30.","SELECT ?result WHERE { <http://dbpedia.org/resource/House_of_Sombrerete> <http://dbpedia.org/ontology/location> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/restingPlace> ?v2 . ?result <http://dbpedia.org/property/awards> ""30""^^<http://www.w3.org/2001/XMLSchema#integer> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Lisa_Gavrić> <http://dbpedia.org/property/occupation> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person
WHERE {
  ?person dbo:diedPlace dbr:Headquarters_of_House_of_Sombrerete .
  ?person dbo:occupation dbr:Commander .
  
  ?event dbo:eventParticipant dbr:Lisa_Gavrić ;
         a dbo:SocietalEvent .

  ?person dbo:event ?event .

  ?award dbo:recipient ?person ;
         dbo:number ""30""^^xsd:int .
}
```",5,7,6,2,3,2,3,28,0,0,1,0,0.0,0
281,57,test,"Give me the war of Beauchamp Seymour, 1st Baron Alcester and entity in the birth place, that is a country, of the leader, that is a politician, of 1962 New South Wales state election and war of the profession, that is a military unit, of Heather Roy.","SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Beauchamp_Seymour,_1st_Baron_Alcester> <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/ontology/birthPlace> ?v5 . ?result <http://dbpedia.org/ontology/place> ?v5 . <http://dbpedia.org/resource/Heather_Roy> <http://dbpedia.org/property/occupation> ?v3 . <http://dbpedia.org/resource/1962_New_South_Wales_state_election> <http://dbpedia.org/property/leader> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?warOfBeauchampSeymour ?birthPlaceCountryLeader1962Election ?warOfHeatherRoyProfession
WHERE {
  # Find the war associated with Beauchamp Seymour, 1st Baron Alcester
  dbr:Beauchamp_Seymour,_1st_Baron_Alcester dbo:participatedIn ?warOfBeauchampSeymour .
  
  # Identify the leader of the 1962 New South Wales state election and their birthplace country
  {
    SELECT DISTINCT ?leader (SAMPLE(?birthPlaceCountry) AS ?birthPlaceCountryLeader1962Election)
    WHERE {
      dbr:1962_New_South_Wales_state_election dbo:leader ?leader .
      ?leader a dbo:Politician ;
              dbp:birthPlace ?birthPlace .
      OPTIONAL { ?birthPlace dbo:country ?birthPlaceCountry }
    }
  }

  # Find the war associated with Heather Roy's military unit profession
  dbr:Heather_Roy dbo:profession ?militaryUnit .
  ?militaryUnit dbo:participatedIn ?warOfHeatherRoyProfession .
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
232,63,test,"Give me the native of the residence, that is a settlement and British, of Sylvie Bermann and actor of the claim to fame, that is a film and a military conflict, of Sean Pertwee and child of the person born as the birth name of Jon Pertwee.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v3 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/property/birthName> ?v4 . <http://dbpedia.org/resource/Sylvie_Bermann> <http://dbpedia.org/property/residence> ?v2 . ?v3 <http://dbpedia.org/property/birthName> ?v4 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v6 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Sean_Pertwee> <http://dbpedia.org/ontology/knownFor> ?v6 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?nativeOfResidence WHERE {
  # Sylvie Bermann's residence that is a settlement and British
  ?sylvieBermann dbo:nationality dbr:United_Kingdom .
  ?sylvieBermann dbo:residence ?residence .
  ?residence rdf:type dbo:Settlement ;
             dbo:country dbr:United_Kingdom .

  # Sean Pertwee's claim to fame (film associated with a military conflict)
  ?seanPertwee dbo:child ?jonPertwee .
  ?film dbo:actor ?seanPertwee .
  ?film dbo:genre ?militaryConflict .
  ?militaryConflict rdf:type dbo:MilitaryConflict .

  # Jon Pertwee's child
  ?jonPertwee dbo:birthName ""Jon Pertwee""@en .

  # Linking the residence to Sean Pertwee through Sylvie Bermann
  ?sylvieBermann dbo:spouse ?seanPertwee .
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
659,63,test,"Give me the commander in the war, that is an event and a military conflict, of 1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish) and military force of the force, that is a societal event and an event and a military conflict, of Rutger Jan Schimmelpenninck and commander in the force of the native, that is an office holder, of Kingdom of Ireland.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v4 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Kingdom_of_Ireland> . ?v3 <http://dbpedia.org/ontology/commander> ?v4 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v6 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/1st_Light_Cavalry_Lancers_Regiment_of_the_Imperial_Guard_(Polish)> <http://dbpedia.org/ontology/battle> ?v6 . ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?commanderName WHERE {
  ?war a dbo:MilitaryConflict ;
      dbo:participatingUnit ?regiment .
  
  ?regiment dbo:name ""1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish)""@en ;
            dbo:commander ?commander .

  ?militaryForce dbo:participatedIn ?war ;
                 a dbo:SocietalEvent, dbo:MilitaryConflict .

  ?schimmelpenninck dbp:name ""Rutger Jan Schimmelpenninck"" ;
                    dbo:commanderOf ?force .
  
  ?force dbo:participatedIn ?militaryForce .

  ?officeHolder dbo:nativeCountry dbr:Kingdom_of_Ireland ;
                dbo:positionHeld ?schimmelpenninckRole .

  ?schimmelpenninckRole dbo:heldBy ?commander .

  BIND(STRAFTER(STR(?commander), ""http://dbpedia.org/resource/"") AS ?commanderName)
}
```",7,13,8,3,3,3,3,71,0,0,15,0,0.0,0
232,31,test,Give me the actor of Dog Soldiers (film) and child of the person born as the birth name of Jon Pertwee.,SELECT ?result WHERE { <http://dbpedia.org/resource/Dog_Soldiers_(film)> <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?actor ?child 
WHERE {
  # Find an actor of the film ""Dog Soldiers""
  ?film a dbo:Film ;
        foaf:name ""Dog Soldiers""@en .
  
  ?film dbo:starring ?actor .

  # Find Jon Pertwee's birth name
  ?person foaf:name ""Jon Pertwee""@en ;
          foaf:birthday ?birthDate ;
          foaf:mbox ?email .

  OPTIONAL { 
    ?person foaf:nick ?birthName .
  }

  # Find the child of Jon Pertwee
  ?person dbo:child ?child .
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
528,60,test,"Give me the force of the person born as the birth name of Narciso Campero and war of the military force of the entity, that is a societal event, in Chile.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Chile> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?v2 <http://dbpedia.org/ontology/battle> ?v3 . ?v2 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Narciso_Campero> <http://dbpedia.org/property/birthName> ?v0 . ?result <http://dbpedia.org/ontology/commander> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

# Step 1: Retrieve Narciso Campero's birth name
SELECT ?birthName WHERE {
    dbr:Narciso_Campero dbo:birthName ?birthName .
}

# Step 2: Find military forces or societal events associated with his birth name
SELECT DISTINCT ?force WHERE {
    ?person dbo:birthName ?birthName .
    ?person dbo:militaryForce ?force .
    FILTER(?birthName = ""Narciso Campero"") # Replace with actual birth name from step 1
}

# Step 3: Identify wars involving Chile as a societal event
SELECT DISTINCT ?war WHERE {
    ?event dbo:location dbr:Chile ;
           a dbo:SocietalEvent .
    FILTER(?event = dbo:War) # Assuming War is categorized under SocietalEvent
}
```",6,7,7,3,2,3,3,71,0,0,4,0,0.0,0
232,24,test,"Give me the actor of the claim to fame, that is a film and a military conflict, of Sean Pertwee and native of London.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Sean_Pertwee> <http://dbpedia.org/ontology/knownFor> ?v2 . ?v2 <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/London> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?film ?conflict WHERE {
  # Sean Pertwee as an actor
  dbr:Sean_Pertwee a dbo:Actor .
  
  # Films he acted in
  ?film dbo:starring dbr:Sean_Pertwee .

  # Military conflicts associated with him (assuming there's a property linking actors to notable events)
  OPTIONAL { 
    ?conflict dbo:notableEvent dbr:Sean_Pertwee .
  }

  # Filter for native of London
  FILTER EXISTS {
    dbr:Sean_Pertwee dbp:nativePlace dbr:London .
  }
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
659,53,test,"Give me the commander in the force of the native, that is an office holder, of Kingdom of Ireland and commander in Battle of Leipzig and military force of the force, that is a societal event and an event and a military conflict, of Rutger Jan Schimmelpenninck.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/commander> ?v3 . ?result <http://dbpedia.org/ontology/battle> ?v1 . <http://dbpedia.org/resource/Battle_of_Leipzig> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Kingdom_of_Ireland> . ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  ?officeHolder a dbo:OfficeHolder ;
               dbo:country dbr:Kingdom_of_Ireland .
  
  ?battleOfLeipzig a dbo:MilitaryConflict ;
                   dbo:commander ?commander .

  FILTER (str(?battleOfLeipzig) = ""Battle of Leipzig"") .

  ?militaryForce a dbo:MilitaryConflict ;
                 dbo:event dbr:Societal_event ;
                 dbo:relatedTo dbr:Rutger_Jan_Schimmelpenninck .
  
  ?commander dbo:militaryCommanded ?militaryForce .
  
  FILTER (?officeHolder = ?commander)
}
```",6,10,7,3,3,3,3,71,0,0,6,0,0.0,0
54,59,test,Give me the child of the father of the child of Thinkhaya of Pagan and parent of the child of the parent of Thado Minsaw of Prome.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> ?v2 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> . ?v5 <http://dbpedia.org/ontology/parent> ?result . ?v5 <http://dbpedia.org/property/father> ?v0 . ?v2 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?commonEntity WHERE {
  # Thinkhaya of Pagan's child
  ?thinkhayaChild dbo:childOf dbp:Thinkhaya_of_Pagan .
  
  # Child of Thinkhaya (father of his own child)
  ?thinkhayaGrandchild dbo:childOf ?thinkhayaChild .

  # Thado Minsaw of Prome's parent
  ?thadoParent dbo:parentOf dbp:Thado_Minsaw_of_Prome .
  
  # Parent of Thado Minsaw (child of his own parent)
  ?thadoChild dbo:childOf ?thadoParent .

  # Find the common entity between Thinkhaya's grandchild and Thado Minsaw's parent
  FILTER (?thinkhayaGrandchild = ?thadoParent || ?thinkhayaGrandchild = ?thadoChild)
  
  BIND(?thinkhayaGrandchild AS ?commonEntity)
}
```",6,6,7,3,2,3,3,71,0,0,1,0,0.0,0
10,25,test,"Give me the band member of the person born, that is an artist, as Luke Francis Vibert and associated musical artist of the person born, that is an artist, as Matt Colton and professional in .","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . ?v0 <http://dbpedia.org/property/birthName> ""Luke Francis Vibert""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v3 <http://dbpedia.org/property/birthName> ""Matt Colton""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandMember ?musicalArtist
WHERE {
  # Find band members associated with Luke Francis Vibert
  ?vibert a dbo:MusicalArtist ;
          dbo:birthName ""Luke Francis Vibert"" .
  ?vibert dbo:profession dbr:Musician .

  ?member dbo:bandMember ?vibert .
  
  # Find musical artists associated with Matt Colton
  ?colton a dbo:MusicalArtist ;
          dbo:birthName ""Matt Colton"" .
  ?colton dbo:profession dbr:Musician .

  ?artist dbo:musicalArtist ?colton .
  
  # Return the results
  BIND(?member AS ?bandMember)
  BIND(?artist AS ?musicalArtist)
}
```",5,7,6,2,3,2,3,28,0,0,1,0,0.0,0
801,54,test,"Give me the professional in the alter ego of The Shadow and producer of the work, that is a musical work and a song and a work, of the professional, that is a musical artist, in Rapper and associated musical artist of Chris Taylor (music producer).","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/occupation> ""Rapper""@en . <http://dbpedia.org/resource/Chris_Taylor_(music_producer)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v5 <http://dbpedia.org/ontology/producer> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v5 <http://dbpedia.org/property/writer> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v3 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?professional ?song WHERE {
  # The Shadow's alter ego
  dbr:The_Shadow dbo:alterEgoOf ?lamontCranston .
  
  # Lamont Cranston is a professional musical artist and producer of a song
  ?lamontCranston a dbo:MusicalArtist ;
                 dbo:producer ?song .

  # The song is also a work by the same professional
  ?song a dbo:SongsAndSongbooks ;
        dbo:work ?professional .

  # The professional is a rapper and associated with Chris Taylor
  ?professional a dbo:Rapper ;
                dbo:associatedMusicalArtist dbr:Chris_Taylor_(music_producer) .
}
```",6,10,7,3,3,3,3,71,0,0,2,0,0.0,0
994,49,test,"Give me the associated musical artist of the associated musical artist of Watchtower (band) and band member of the person born, that is a musical artist, as the persona of Don Dokken.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://dbpedia.org/property/birthName> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Don_Dokken> <http://xmlns.com/foaf/0.1/givenName> ?v4 . <http://dbpedia.org/resource/Watchtower_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?finalArtist WHERE {
  # Step 1: Find an associated band of Watchtower
  ?watchtower dbo:associatedBand ?band1 .
  VALUES ?watchtower {<http://dbpedia.org/resource/Watchtower_(band)>} .

  # Step 2: Find an associated band of the result from step 1
  ?band1 dbo:associatedBand ?band2 .

  # Step 3: Identify Don Dokken's band membership
  ?dokken dbp:bandMember ?donDokkenBand .
  VALUES ?dokken {<http://dbpedia.org/resource/Don_Dokken>} .

  # Step 4: Find the birth year of Don Dokken
  ?dokken dbo:birthDate ?birthDate .
  BIND(YEAR(?birthDate) AS ?year)

  # Step 5: Identify a musical artist born in that year
  ?finalArtist dbo:birthDate ?finalBirthDate .
  FILTER(YEAR(?finalBirthDate) = ?year)
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
392,28,test,"Give me the entity in the region, that is a country, of Central European Time and region of the time zone, that is a sports event, of Aguilar de Segarra and province of the residence, that is a settlement and Italian, of Sebastiano Bianchetti.",SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Aguilar_de_Segarra> <http://dbpedia.org/ontology/timeZone> ?v3 . <http://dbpedia.org/resource/Sebastiano_Bianchetti> <http://dbpedia.org/property/residence> ?v5 . ?v5 <http://dbpedia.org/ontology/province> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/country> ?v1 . ?result <http://dbpedia.org/ontology/timeZone> ?v3 . ?v1 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . ?v5 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?country WHERE {
  ?cetRegion dbo:timeZone dbr:Central_European_Time .
  ?country dbo:region ?cetRegion .

  ?sportsEvent a dbo:SportsEvent ;
              dbp:location dbr:Aguilar_de_Segarra .

  ?sebastiano dbo:residence ?province .
  ?province a dbo:Settlement ;
            dbo:country dbr:Italy .

  FILTER(?sportsEvent = ?eventInCountry)
}
```",6,10,7,2,3,2,3,28,0,0,1,0,0.0,0
356,18,test,"Give me the team of the native, that is a soccer player and a soccer manager, of Wolverhampton and player in the successor of the predecessor, that is a sports team season and a soccer club season, of 2015 Sacramento Republic FC season.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/team> ?result . ?v3 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Wolverhampton> . ?v1 <http://dbpedia.org/ontology/successor> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?result <http://dbpedia.org/ontology/manager> ?v3 . ?v1 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/2015_Sacramento_Republic_FC_season> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?team WHERE {
  # Find a person from Wolverhampton who is both a soccer player and manager
  ?person dbo:nationality dbr:Wolverhampton ; 
          dbo:occupation dbr:Soccer_player ;
          dbo:occupation dbr:Soccer_manager .

  # Identify players in the 2015 Sacramento Republic FC season
  ?player dbo:playsForTeam dbr:2015_Sacramento_Republic_FC_season .
  
  # Match the person from Wolverhampton with one of these players
  FILTER (?person = ?player)

  # Find the current team associated with this individual
  ?currentRole dbo:agent ?person ;
              dbo:team ?team .
}
```",5,9,6,3,2,3,2,20,0,0,1,0,0.0,0
312,8,test,Give me the entity in the birthplace of Giorgio Grigolli and entity in Province of Bergamo.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v1 . ?result <http://dbpedia.org/ontology/province> <http://dbpedia.org/resource/Province_of_Bergamo> . <http://dbpedia.org/resource/Giorgio_Grigolli> <http://dbpedia.org/ontology/birthPlace> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?birthPlaceEntity ?bergamoEntity
WHERE {
  # Find birthplace of Giorgio Grigolli
  { 
    ?grigolli dbo:birthPlace ?birthPlaceEntity .
    FILTER (str(?grigolli) = ""Giorgio_Grigolli"")
  }
  
  # Find entities located in Province of Bergamo
  {
    ?bergamoEntity dbp:locatedIn ?province .
    FILTER (str(?province) = ""Province_of_Bergamo"")
  }
}
```",3,3,4,2,2,2,2,9,0,0,228,0,0.0,0
314,22,test,Give me the awardee of the award of Sergei Makovetsky and person deceased at the headquarter of House of Sombrerete.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/restingPlace> ?v2 . ?result <http://dbpedia.org/property/awards> ?v3 . <http://dbpedia.org/resource/Sergei_Makovetsky> <http://dbpedia.org/property/awards> ?v3 . <http://dbpedia.org/resource/House_of_Sombrerete> <http://dbpedia.org/ontology/location> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?awardee WHERE {
  # Find awards associated with Sergei Makovetsky
  dbr:Sergei_Makovetsky dbo:award ?award .
  
  # Find other awardees of these awards
  ?award dbo:recipient ?awardee .

  # Filter for a person deceased at the headquarter of House of Sombrerete
  ?awardee dbo:deathPlace dbr:Headquarters_of_House_of_Sombrerete .
}
```",4,4,5,2,2,2,3,28,0,0,1,0,0.0,0
54,51,test,"Give me the predecessor of the child, that is an office holder and a royalty, of the reference to Thihapate of Mohnyin and parent of the child of Narapati I of Ava.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Narapati_I_of_Ava> . ?v1 <http://xmlns.com/foaf/0.1/name> ""Thihapate of Mohnyin""@en . ?v2 <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/ontology/successor> ?v2 . ?v4 <http://dbpedia.org/ontology/parent> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?predecessor WHERE {
  # Find Thihapate of Mohnyin's children who are office holders and royalty
  ?child dbo:parent dbr:Thihapate_of_Mohnyin .
  ?child a dbo:Monarch ; 
         dbo:officeHolder ?office ;
         dbo:royalty ?royalty .

  # Find Narapati I of Ava's child
  ?narapatichild dbo:parent dbr:Narapati_I_of_Ava .

  # Determine the predecessor in terms of lineage or succession
  ?predecessor dbo:succeededBy ?child .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
182,28,test,Give me the war of the work of Gotabhaya Rajapaksa and entity in the nationality of Tamara Kunanayakam and war of the author of 2019 Sri Lanka Easter bombings.,SELECT ?result WHERE { <http://dbpedia.org/resource/2019_Sri_Lanka_Easter_bombings> <http://dbpedia.org/property/author> ?v1 . ?v3 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Gotabhaya_Rajapaksa> . ?v1 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> ?v5 . ?v3 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Tamara_Kunanayakam> <http://dbpedia.org/ontology/nationality> ?v5 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?gotabhayaWork ?tamaraNationalityWar ?easterBombingAuthorWar WHERE {
  # Gotabhaya Rajapaksa's works
  ?work dbo:author dbr:Gotabhaya_Rajapaksa .
  
  # Wars related to Gotabhaya Rajapaksa's work
  ?gotabhayaWork dbo:subject ?war1 .

  # Tamara Kunanayakam's nationality and associated wars
  dbr:Tamara_Kunanayakam dbo:nationality ?nationality .
  ?tamaraNationalityWar dbo:country ?nationality .

  # Author of works related to the 2019 Sri Lanka Easter bombings
  ?easterWork dbo:subject dbr:2019_Sri_Lanka_Easter_bombings .
  ?easterBombingAuthorWar dbo:author ?author .
  ?easterWork dbo:author ?author .

}
```",6,6,7,2,3,2,3,28,0,0,1,0,0.0,0
959,61,test,"Give me the manager of the team of the manager, that is a sports manager, of 1998 Kashima Antlers season and native of the residence, that is a country, of the leader, that is a politician, of 2010 Japanese House of Councillors election.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://dbpedia.org/ontology/manager> ?v3 . ?result <http://dbpedia.org/ontology/birthPlace> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. <http://dbpedia.org/resource/1998_Kashima_Antlers_season> <http://dbpedia.org/ontology/manager> ?v3 . ?v1 <http://dbpedia.org/property/residence> ?v4 . <http://dbpedia.org/resource/2010_Japanese_House_of_Councillors_election> <http://dbpedia.org/property/leader> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?managerOfManager WHERE {
  # Step 1: Find the sports manager of the 1998 Kashima Antlers season
  ?kashimaAntlersSeason dbo:season ""1998"" .
  ?kashimaAntlersSeason dbo:team dbr:Kashima_Antlers .
  ?kashimaAntlersSeason dbo:manager ?sportsManager .

  # Step 2: Find the team managed by this sports manager
  ?managedTeam dbo:manager ?sportsManager .

  # Step 3: Find the leader of the 2010 Japanese House of Councillors election
  ?electionEvent dbo:event ""Japanese_House_of_Councillors_election,_2010"" .
  ?electionEvent dbo:leader ?politicianLeader .

  # Step 4: Determine the country of residence of this leader
  ?politicianLeader dbo:nationality ?countryResidence .

  # Step 5: Find the manager of a team from that country
  ?teamFromCountry dbo:location ?countryResidence .
  ?teamFromCountry dbo:manager ?managerOfManager .
}
```",6,9,7,3,2,3,3,71,0,0,6,0,0.0,0
179,18,test,"Give me the person born as the birth name of the child, that is a royalty, of Nakkhatra Mangala and parent of the child of Bhumibol Adulyadej.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v2 . ?v1 <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Bhumibol_Adulyadej> <http://dbpedia.org/ontology/child> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Nakkhatra_Mangala> . ?v3 <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person ?birthName WHERE {
  ?child dbo:parent <http://dbpedia.org/resource/Nakkhatra_Mangala> .
  ?child a dbo:Monarch .  # Assuming royalty is represented by Monarch class
  ?person dbo:parent ?child .
  ?bhumibolChild dbo:parent <http://dbpedia.org/resource/Bhumibol_Adulyadej> .
  ?person dbo:parent ?bhumibolChild .
  OPTIONAL { ?person foaf:name ?birthName . }
}
```",5,6,6,3,2,3,2,20,0,0,1,0,0.0,0
547,36,test,Give me the resting place of James Burton (Egyptologist) and resting place of the awardee of the award of Gerald Graham.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/James_Burton_(Egyptologist)> <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Gerald_Graham> <http://dbpedia.org/property/awards> ?v0 . ?v1 <http://dbpedia.org/property/awards> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

# Query for James Burton's resting place
SELECT ?burialPlace WHERE {
  ?person a dbo:Egyptologist ;
          foaf:name ""James Burton"" .
  OPTIONAL { ?person dbo:deathPlace ?burialPlace }
}

UNION

# Query for the awardee of Gerald Graham's award
SELECT ?awardeeBurialPlace WHERE {
  ?award dbo:givenBy dbr:Gerald_Graham ;
         dbo:recipient ?awardee .
  OPTIONAL { ?awardee dbo:deathPlace ?awardeeBurialPlace }
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
427,51,test,"Give me the party of the person born, that is an office holder and a politician, as the birth name of Romano Prodi and party of the father of Lamberto Andreotti.",SELECT ?result WHERE { <http://dbpedia.org/resource/Lamberto_Andreotti> <http://dbpedia.org/property/father> ?v4 . <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/ontology/party> ?result . ?v4 <http://dbpedia.org/ontology/party> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?prodiParty ?andreottiFatherName ?fatherParty 
WHERE {
  # Romano Prodi's birth name and political party
  dbr:Romano_Prodi dbo:birthName ?birthName .
  OPTIONAL { dbr:Romano_Prodi dbo:politicalAffiliation ?prodiParty . }

  # Lamberto Andreotti's father's name and his political affiliation
  dbr:Lamberto_Andreotti dbo:father ?fatherResource .
  ?fatherResource rdfs:label ?andreottiFatherName .
  OPTIONAL { ?fatherResource dbo:politicalAffiliation ?fatherParty . }
  
  FILTER (lang(?birthName) = 'en')
  FILTER (lang(?andreottiFatherName) = 'en')
}
```",5,7,6,3,2,3,3,71,0,0,3,0,0.0,0
747,50,test,"Give me the band of the person born as Tracey Elizabeth McSween and band of the writer of the work, that is a song, of Amba Shepherd.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/birthName> ""Tracey Elizabeth McSween""@en . ?v0 <http://dbpedia.org/property/writer> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Amba_Shepherd> . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT DISTINCT ?band ?composer 
WHERE {
  # Find the band of Tracey Elizabeth McSween
  ?person dbo:birthName ""Tracey Elizabeth McSween""@en .
  ?person dbo:bandMember ?band .

  # Find the composer of a song by Amba Shepherd
  ?shepherd dbr:Amba_Shepherd .
  ?shepherd dbo:work ?song .
  ?song rdf:type dbo:Songs .
  ?song dbo:composer ?composer .
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
9,28,test,"Give me the alma mater of the mayor, that is a politician, of Northern Ireland Forum and figure known as QUB and alma mater of Allen Hill (scientist).","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Allen_Hill_(scientist)> <http://dbpedia.org/ontology/almaMater> ?result . <http://dbpedia.org/resource/Northern_Ireland_Forum> <http://dbpedia.org/property/leader> ?v1 . ?result <http://dbpedia.org/property/nickname> ""QUB""@en . ?v1 <http://dbpedia.org/ontology/almaMater> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?almaMater WHERE {
  # Find the alma mater of Allen Hill (scientist)
  ?allenHill a dbo:Scientist ;
             foaf:name ""Allen Hill"" .
  
  ?allenHill dbo:almaMater ?almaMater .

  # Find the mayor associated with Northern Ireland Forum who is also a politician
  ?mayor a dbo:Politician ;
         dbo:officeHolder ?office ;
         foaf:name ?name .

  ?office dbo:position ""Mayor of Northern Ireland"" .
  
  # Ensure this person's alma mater matches Allen Hill's alma mater and is QUB
  ?mayor dbo:almaMater ?sameAlmaMater .
  
  FILTER(?sameAlmaMater = ?almaMater)
  
  # Check if the alma mater is known as QUB
  ?almaMater foaf:name ""Queen's University Belfast"" .
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
9,70,test,"Give me the figure known as the nickname of the entity, that is an organisation and an educational institution, in Northern Ireland and alma mater of the mayor, that is a politician, of Northern Ireland Forum and alma mater of the awardee of the reference, that is an award, to Royal Medals.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Northern_Ireland> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?result <http://dbpedia.org/property/nickname> ?v3 . ?v4 <http://dbpedia.org/ontology/almaMater> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v7 <http://dbpedia.org/ontology/almaMater> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Royal Medals""@en . <http://dbpedia.org/resource/Northern_Ireland_Forum> <http://dbpedia.org/property/leader> ?v4 . ?v7 <http://dbpedia.org/property/awards> ?v0 . ?v1 <http://dbpedia.org/property/nickname> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?institution ?nickname WHERE {
  ?institution a dbo:EducationalInstitution ;
               a dbo:Organization ;
               dbo:location dbr:Northern_Ireland .
  
  ?mayor dbo:almaMater ?institution ;
         dbo:position dbr:Mayor_of_the_Northern_Ireland_Forum .

  ?awardee dbo:awardReceived dbr:Royal_Medals ;
           dbo:almaMater ?institution .

  OPTIONAL { ?institution dbp:nickname ?nickname }
}
```",8,12,9,3,3,3,3,71,0,0,1,0,0.0,0
184,52,test,"Give me the child of the child of Archduke Joseph Karl of Austria and parent of Archduchess Ilona of Austria and parent of the native of the landmark at elevation, that is a settlement, of 96.0.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Karl_of_Austria> . ?result <http://dbpedia.org/property/father> ?v5 . ?result <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?v3 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Ilona_of_Austria> . ?v3 <http://dbpedia.org/ontology/elevation> ""96.0""^^<http://www.w3.org/2001/XMLSchema#double> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person
WHERE {
    # Step 1: Find a child of Archduke Joseph Karl of Austria
    ?child dbo:parent dbr:Archduke_Joseph_Karl_of_Austria .

    # Step 2: Find the grandchild (child of the child)
    ?grandchild dbo:parent ?child .

    # Step 3: Determine the parent of Archduchess Ilona of Austria
    ?ilonaParent dbo:child dbr:Archduchess_Ilona_of_Austria .

    # Step 4: Find a common ancestor who is both grandchild and parent
    FILTER (?grandchild = ?ilonaParent)

    # Step 5: Identify the native of a landmark with elevation 96.0 meters
    ?landmark dbo:elevation ""96.0""^^xsd:float ;
              a dbo:Settlement .
    
    ?person dbo:nativePlace ?landmark .

    # Combine conditions to find the person who satisfies all criteria
    FILTER (?grandchild = ?person)
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
391,52,test,"Give me the native of the figure known as the nick name of Jackson, Tennessee and actor of All About the Andersons and actor of the claim to fame, that is a work, of Michael Ballhaus.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/All_About_the_Andersons> <http://dbpedia.org/property/starring> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/property/nickname> ?v3 . <http://dbpedia.org/resource/Michael_Ballhaus> <http://dbpedia.org/ontology/knownFor> ?v5 . <http://dbpedia.org/resource/Jackson,_Tennessee> <http://xmlns.com/foaf/0.1/nick> ?v3 . ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?native WHERE {
  # Find the nickname of Jackson, Tennessee
  ?jackson dbo:nickname ?nickname .
  FILTER (str(?jackson) = ""Jackson,_Tennessee"") .

  # Find a person associated with this nickname
  ?person dbp:alsoKnownAs ?nickname ;
          dbo:birthPlace ?native .

  # Find an actor known for ""All About the Andersons""
  ?actor dbo:film ?film .
  FILTER (str(?film) = ""All_About_the_Andersons"") .

  # Ensure this person is the same as the one associated with the nickname
  FILTER (?person = ?actor) .

  # Find a work involving Michael Ballhaus
  ?work dbo:director ?ballhaus ;
        dbo:starring ?actor .
  FILTER (str(?ballhaus) = ""Michael_Ballhaus"") .
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
994,47,test,"Give me the associated musical artist of the associated musical artist of Watchtower (band) and associated musical artist of the band member, that is a band and a group and an organisation, of the band, that is an organisation, of Fredrik Thordendal.",SELECT ?result WHERE { <http://dbpedia.org/resource/Watchtower_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Fredrik_Thordendal> . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?associatedArtist WHERE {
  # Step 1: Find associated bands of Meshuggah (Fredrik Thordendal's band)
  ?meshuggah a dbo:Band ;
             dbo:member ?thordendal .
  FILTER(?thordendal = dbp:Fredrik_Thordendal) .

  ?meshuggah dbo:associatedBand ?band1 .

  # Step 2: Find associated bands of Watchtower
  ?watchtower a dbo:Band ;
              dbo:associatedBand ?band2 .

  # Step 3: Ensure both band1 and band2 are also organizations
  ?band1 a dbo:Organization .
  ?band2 a dbo:Organization .

  # Step 4: Find common associated bands between Meshuggah and Watchtower
  FILTER(?band1 = ?band2)
}
```",5,9,6,3,2,3,3,71,0,0,5,0,0.0,0
659,66,test,"Give me the commander in the force of Arthur Wellesley, 1st Duke of Wellington and military force of the force, that is a societal event and an event and a military conflict, of the reference to Rutger Jan Schimmelpenninck and commander in the war, that is an event and a military conflict, of 1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish).","SELECT ?result WHERE { ?v6 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://dbpedia.org/ontology/commander> ?v1 . ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://xmlns.com/foaf/0.1/name> ""Rutger Jan Schimmelpenninck""@en . ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Arthur_Wellesley,_1st_Duke_of_Wellington> . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/1st_Light_Cavalry_Lancers_Regiment_of_the_Imperial_Guard_(Polish)> <http://dbpedia.org/ontology/battle> ?v6 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?event ?conflict WHERE {
  # Arthur Wellesley, 1st Duke of Wellington as a commander
  VALUES (?wel) { dbr:Arthur_Wellesley,_1st_Duke_of_Wellington }
  
  ?wel dbo:commander ?force .
  
  # Societal event and military conflict involving the force
  ?event dbo:relatedEvent ?conflict .
  ?conflict a dbo:MilitaryConflict ;
            dbo:participatedIn ?force .

  # Rutger Jan Schimmelpenninck as a commander in a war
  VALUES (?sch) { dbr:Rutger_Jan_Schimmelpenninck }
  
  ?sch dbo:commander ?war .
  ?war a dbo:MilitaryConflict ;
       dbo:participatedIn ?conflict .

  # 1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish)
  VALUES (?regiment) { dbr:1st_Light_Cavalry_Lancers_Regiment_of_the_Imperial_Guard_(Polish) }
  
  ?regiment dbo:participatedIn ?conflict .
}
```",7,12,8,3,3,3,3,71,0,0,15,0,0.0,0
547,65,test,Give me the resting place of the actor of the show with Emily Richard and resting place of the awardee of Knight Grand Cross of the Order of St Michael and St George and resting place of the child of James Burton (property developer).,SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/James_Burton_(property_developer)> <http://dbpedia.org/ontology/child> ?v4 . ?v3 <http://dbpedia.org/ontology/restingPlace> ?result . ?v0 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emily_Richard> . ?v6 <http://dbpedia.org/ontology/restingPlace> ?result . ?v0 <http://dbpedia.org/property/starring> ?v6 . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_St_Michael_and_St_George> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?restingPlace (GROUP_CONCAT(?description; SEPARATOR="", "") AS ?details)
WHERE {
  # Resting place of the actor from the show with Emily Richard
  {
    SELECT ?actor ?placeOfBurial WHERE {
      ?show dbo:starring dbr:Emily_Richard .
      ?show dbo:actor ?actor .
      OPTIONAL { ?actor dbo:placeOfBurial ?placeOfBurial . }
    } LIMIT 1
  }

  # Resting place of the awardee of Knight Grand Cross of the Order of St Michael and St George
  UNION
  {
    SELECT ?person ?placeOfBurial WHERE {
      ?person dbo:honoraryTitle dbr:Knight_Grand_Cross_of_the_Order_of_St_Michael_and_St_George .
      OPTIONAL { ?person dbo:placeOfBurial ?placeOfBurial . }
    } LIMIT 1
  }

  # Resting place of the child of James Burton (property developer)
  UNION
  {
    SELECT ?child ?placeOfBurial WHERE {
      ?james a dbo:Property_Developer ;
             foaf:name ""James Burton"" .
      ?james dbo:child ?child .
      OPTIONAL { ?child dbo:placeOfBurial ?placeOfBurial . }
    } LIMIT 1
  }

  # Bind results to variables for output
  BIND(?placeOfBurial AS ?restingPlace)
  BIND(CONCAT(""Actor from show with Emily Richard"", ""Awardee of Knight Grand Cross of the Order of St Michael and St George"", ""Child of James Burton (property developer)"") AS ?description)
}
GROUP BY ?restingPlace
```",7,7,8,3,3,3,3,71,0,0,1,0,0.0,0
547,71,test,Give me the resting place of the awardee of the award of Gerald Graham and resting place of the actor of the show with Emily Richard and resting place of the child of the child of William Haliburton.,"SELECT ?result WHERE { ?v8 <http://dbpedia.org/property/awards> ?v7 . ?v4 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emily_Richard> . ?v5 <http://dbpedia.org/ontology/restingPlace> ?result . ?v1 <http://dbpedia.org/ontology/child> ?v2 . ?v8 <http://dbpedia.org/ontology/restingPlace> ?result . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . ?v1 <http://dbpedia.org/property/father> ""William Haliburton""@en . <http://dbpedia.org/resource/Gerald_Graham> <http://dbpedia.org/property/awards> ?v7 . ?v4 <http://dbpedia.org/property/starring> ?v5 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?restingPlace WHERE {
  # Resting place of the awardee of the award of Gerald Graham
  {
    SELECT ?recipientRestingPlace WHERE {
      ?award dbo:recipient ?recipient .
      ?recipient foaf:name ""Gerald Graham"" .
      OPTIONAL { ?recipient dbo:deathPlace ?recipientDeathPlace . }
      BIND(IF(BOUND(?recipientDeathPlace), ?recipientDeathPlace, ""Unknown"") AS ?recipientRestingPlace)
    }
  }

  UNION

  # Resting place of the actor of the show with Emily Richard
  {
    SELECT ?actorRestingPlace WHERE {
      ?show dbo:castMember ?actor .
      ?actor foaf:name ""Emily Richard"" .
      OPTIONAL { ?actor dbo:deathPlace ?actorDeathPlace . }
      BIND(IF(BOUND(?actorDeathPlace), ?actorDeathPlace, ""Unknown"") AS ?actorRestingPlace)
    }
  }

  UNION

  # Resting place of the child of the child of William Haliburton
  {
    SELECT ?grandchildRestingPlace WHERE {
      ?parent dbo:child ?child .
      ?child dbo:child ?grandchild .
      ?parent foaf:name ""William Haliburton"" .
      OPTIONAL { ?grandchild dbo:deathPlace ?grandchildDeathPlace . }
      BIND(IF(BOUND(?grandchildDeathPlace), ?grandchildDeathPlace, ""Unknown"") AS ?grandchildRestingPlace)
    }
  }
}
```",9,9,10,3,3,3,3,71,0,0,1,0,0.0,0
55,28,test,"Give me the band of the reference, that is a band, to Newsted and band member of the producer, that is a band, of Used to Love Her and band member of the band member, that is a band and a group, of San Francisco Symphony.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. <http://dbpedia.org/resource/Used_to_Love_Her> <http://dbpedia.org/ontology/producer> ?v1 . ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v5 <http://xmlns.com/foaf/0.1/name> ""Newsted""@en . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/San_Francisco_Symphony> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?band
WHERE {
  # Jason Newsted was a member of Metallica
  dbr:Metallica dbo:member dbr:Jason_Newsted .

  # Avenged Sevenfold's song ""Used to Love Her"" and its producer
  OPTIONAL { 
    dbr:Avenged_Sevenfold dbo:producer ?producer .
    ?producer dbo:bandMember ?producerBand .
  }

  # San Francisco Symphony member who is also a band member
  OPTIONAL {
    ?symphonyMember dbo:memberOf dbr:San_Francisco_Symphony ;
                    dbo:bandMember ?symphonyBand .
  }

  # Find the common band
  FILTER (?band = ?producerBand && ?band = ?symphonyBand)
}
```",6,10,7,2,3,2,3,28,0,0,1,0,0.0,0
303,25,test,"Give me the entity in the country, that is a country, of El Valle de Antón and party of Arnulfo Arias and party of the commander, that is a politician, in United States invasion of Panama.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v4 . ?v3 <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/United_States_invasion_of_Panama> <http://dbpedia.org/ontology/commander> ?v3 . <http://dbpedia.org/resource/Arnulfo_Arias> <http://dbpedia.org/ontology/party> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/El_Valle_de_Antón> <http://dbpedia.org/ontology/country> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?politician WHERE {
  # El Valle de Antón is in Panama
  dbr:El_Valle_de_Antón dbo:country dbr:Panama .

  # Arnulfo Arias and his party
  dbr:Arnulfo_Arias_Madrid dbo:partyLeader dbr:National_Patriotic_Coalition .
  
  # Politician in Arnulfo Arias's party
  ?politician dbo:memberOf dbr:National_Patriotic_Coalition .

  # United States invasion of Panama and associated politicians
  dbr:United_States_invasion_of_Panama dbo:commander ?commander .
  
  # Politician involved in the U.S. invasion
  ?politician dbo:occupation dbr:Politician ;
              dbo:memberOf ?invasionGroup .

  FILTER(?invasionGroup = ?commander)
}
```",5,7,6,2,3,2,3,28,0,0,1,0,0.0,0
404,49,test,"Give me the spouse of the person born, that is a royalty, as Princess Victoria Louise of Prussia and child of the father of the spouse of Princess Victoria Louise of Prussia.","SELECT ?result WHERE { <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?v0 . ?result <http://dbpedia.org/ontology/parent> ?v1 . ?v0 <http://dbpedia.org/property/father> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/birthName> ""Princess Victoria Louise of Prussia""@en . ?v2 <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?child WHERE {
  ?princess rdf:type dbo:Princess ;
            rdfs:label ""Victoria Louise, Princess Royal""@en .
  
  ?princess dbo:spouse ?spouse .
  
  FILTER EXISTS { ?spouse rdf:type dbo:RoyalFamilyMember } .

  ?spouse dbo:father ?father .

  ?father dbo:child ?child .
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
427,62,test,Give me the reference to the name of the party of Michele Pinto and party of the father of the alumnus of Massachusetts Institute of Technology and party of Romano Prodi.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?v6 . ?v4 <http://xmlns.com/foaf/0.1/name> ?v3 . ?v0 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Massachusetts_Institute_of_Technology> . <http://dbpedia.org/resource/Michele_Pinto> <http://dbpedia.org/ontology/party> ?v4 . <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/ontology/party> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . ?v6 <http://dbpedia.org/ontology/party> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?person ?partyLabel WHERE {
  # Michele Pinto's party affiliation
  { 
    ?michelePinto a dbo:Person ;
                  foaf:name ""Michele Pinto""@en .
    ?michelePinto dbo:partyAffiliation ?party1 .
    SERVICE <http://dbpedia.org/sparql> {
      ?party1 rdfs:label ?partyLabel1 .
    }
  }

  UNION

  # Father of an alumnus from MIT
  { 
    ?alumnus a dbo:Person ;
             dbp:almaMater <http://dbpedia.org/resource/Massachusetts_Institute_of_Technology> .
    ?father dbo:child ?alumnus ;
            dbo:partyAffiliation ?party2 .
    SERVICE <http://dbpedia.org/sparql> {
      ?party2 rdfs:label ?partyLabel2 .
    }
  }

  UNION

  # Romano Prodi's party affiliation
  { 
    ?romanoProdi a dbo:Person ;
                 foaf:name ""Romano Prodi""@en .
    ?romanoProdi dbo:partyAffiliation ?party3 .
    SERVICE <http://dbpedia.org/sparql> {
      ?party3 rdfs:label ?partyLabel3 .
    }
  }

  # Bind the labels to a common variable for output
  BIND(IF(BOUND(?partyLabel1), ?partyLabel1, IF(BOUND(?partyLabel2), ?partyLabel2, ?partyLabel3)) AS ?partyLabel)
}
```",7,7,8,3,3,3,3,71,0,0,2,0,0.0,0
547,48,test,Give me the resting place of the child of the child of William Haliburton and resting place of the awardee of Knight Grand Cross of the Order of St Michael and St George.,"SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> ""William Haliburton""@en . ?v3 <http://dbpedia.org/ontology/child> ?v2 . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_St_Michael_and_St_George> . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

# Part 1: Resting place of the child of the child of William Haliburton
SELECT DISTINCT ?grandchild ?restingPlace WHERE {
  VALUES ?williamHaliburton { dbr:William_Haliburton }
  
  # Find children of William Haliburton
  ?child dbo:parent ?williamHaliburton .
  
  # Find grandchildren (children of the child)
  ?grandchild dbo:parent ?child .
  
  # Get resting places of these grandchildren
  OPTIONAL { ?grandchild dbo:placeOfBurial ?restingPlace . }
}

UNION

# Part 2: Resting place of the awardee of Knight Grand Cross of the Order of St Michael and St George
SELECT DISTINCT ?person ?restingPlace WHERE {
  # Find individuals awarded Knight Grand Cross of the Order of St Michael and St George
  ?person dbo:honorReceived dbr:Knight_Grand_Cross_of_the_Order_of_St_Michael_and_St_George .
  
  # Get resting places of these awardees
  OPTIONAL { ?person dbo:placeOfBurial ?restingPlace . }
}
```",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
16,38,test,Give me the professional in the profession of Satomi Ishihara and person born as the birth name of Gigi Rice.,SELECT ?result WHERE { <http://dbpedia.org/resource/Gigi_Rice> <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Satomi_Ishihara> <http://dbpedia.org/property/occupation> ?v3 . ?result <http://dbpedia.org/property/birthName> ?v2 . ?result <http://dbpedia.org/property/occupation> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?professional WHERE {
  # Get Satomi Ishihara's profession
  ?satomiIshihara a dbo:Person ;
                  foaf:name ""Satomi Ishihara""@en .
  ?satomiIshihara dbo:profession ?profession .

  # Get Gigi Rice's birth name
  ?gigiRice a dbo:Person ;
            foaf:name ""Gigi Rice""@en .
  OPTIONAL { ?gigiRice schema:birthName ?birthName . }
  
  # Find the professional with matching profession and birth name
  ?professional a dbo:Person ;
                dbo:profession ?profession ;
                [ 
                  OPTIONAL { schema:birthName ?birthName } 
                ].
}
```",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
404,31,test,"Give me the parent of Prince Ernest Augustus of Hanover (born 1914) and spouse of the person born, that is a royalty, as the birth name of Princess Victoria Louise of Prussia.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Prince_Ernest_Augustus_of_Hanover_(born_1914)> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parent ?spouseBirthName WHERE {
  ?person rdfs:label ""Prince Ernest Augustus of Hanover""@en .
  FILTER(YEAR(?person dbo:birthday) = 1914) .

  ?parent dbo:child ?person ;
          a dbo:Person .

  ?spouse dbo:spouseOrPartner ?parent ;
          a dbo:RoyalFamilyMember .

  ?princess rdfs:label ""Princess Victoria Louise of Prussia""@en .
  ?princess dbp:birthName ?spouseBirthName .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
492,49,test,"Give me the person decedent at the capital, that is a settlement, of the country of Khemis Miliana District and person decedent at the work of US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite.","SELECT ?result WHERE { <http://dbpedia.org/resource/Khemis_Miliana_District> <http://dbpedia.org/ontology/country> ?v0 . ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . ?v2 <http://dbpedia.org/property/author> ""US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . ?v0 <http://dbpedia.org/ontology/capital> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?personDecedentAtCapital ?workOfJosephSatterthwaite
WHERE {
  # Find the capital of Khemis Miliana District
  ?district dbo:capital ?capitalCity .
  FILTER (str(?district) = ""Khemis_Miliana_District"") .

  # Find a person who died in that capital city
  ?personDecedentAtCapital dbo:deathPlace ?deathPlace .
  ?deathPlace rdfs:label ?cityLabel .
  FILTER (CONTAINS(LCASE(?cityLabel), LCASE(str(?capitalCity)))) .

  # Identify Joseph C. Satterthwaite's position
  dbr:Joseph_C._Satterthwaite dbo:positionHeld ?workOfJosephSatterthwaite .
  FILTER (str(?workOfJosephSatterthwaite) = ""US_Assistant_Secretary_of_State_for_African_Affairs"") .

  # Check for any connection to another decedent
  OPTIONAL {
    ?personDecedentAtWork dbo:deathPlace ?deathPlaceOfWork .
    ?deathPlaceOfWork rdfs:label ?workCityLabel .
    FILTER (CONTAINS(LCASE(?workCityLabel), LCASE(str(?capitalCity)))) .
  }
}
```",5,6,6,3,2,3,3,71,0,0,16,0,0.0,0
10,20,test,"Give me the professional in  and associated musical artist of Matt Colton and band member of the person born, that is an artist, as Luke Francis Vibert.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ""Luke Francis Vibert""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/property/occupation> """"@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . <http://dbpedia.org/resource/Matt_Colton> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?professionalRole ?associatedArtist ?bandMember
WHERE {
  # Matt Colton's professional role and associated artists
  dbr:Matt_Colton dbo:profession ?professionalRole .
  
  OPTIONAL {
    ?artist dbo:masteredBy dbr:Matt_Colton .
    ?artist rdfs:label ?associatedArtist .
    FILTER (LANG(?associatedArtist) = ""en"")
  }
  
  # Luke Francis Vibert's band memberships
  dbr:Luke_Francis_Vibert dbo:bandMember ?bandMember .
  OPTIONAL {
    ?person dbo:birthPlace ?place .
    ?person rdfs:label ?artistLabel .
    FILTER (LANG(?artistLabel) = ""en"" && ?person != dbr:Luke_Francis_Vibert)
  }
}
```",4,5,5,2,3,2,3,28,0,0,1,0,0.0,0
328,66,test,"Give me the commander in the force of Ferenc Szálasi and awardee of the award of Bruce Fraser, 1st Baron Fraser of North Cape and leader of the office, that is a government agency, of the leader, that is an office holder and a politician, of Gustav Jonson.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/leader> ?result . <http://dbpedia.org/resource/Gustav_Jonson> <http://dbpedia.org/property/leader> ?v1 . ?v6 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?result <http://dbpedia.org/property/awards> ?v3 . ?v6 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Ferenc_Szálasi> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape> <http://dbpedia.org/property/awards> ?v3 . ?v1 <http://dbpedia.org/property/office> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person WHERE {
  # Find the commander in Ferenc Szálasi's force
  ?szalasiForce dbo:commander ?person .
  FILTER(STRSTARTS(STR(?szalasiForce), ""http://dbpedia.org/resource/Ferenc_Sz%C3%A1lasi""))

  # Find someone who received an award from Bruce Fraser, 1st Baron Fraser of North Cape
  ?fraserAward dbo:recipient ?person .
  FILTER(STRSTARTS(STR(?fraserAward), ""http://dbpedia.org/resource/Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape""))

  # Find the leader of a government agency led by Gustav Jonson
  ?jonsonAgency dbo:leader ?person .
  FILTER(STRSTARTS(STR(?jonsonAgency), ""http://dbpedia.org/resource/Gustav_Jonson""))
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
427,34,test,Give me the party of Romano Prodi and reference to the name of the party of Michele Pinto.,SELECT ?result WHERE { <http://dbpedia.org/resource/Michele_Pinto> <http://dbpedia.org/ontology/party> ?v2 . <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/ontology/party> ?result . ?v2 <http://xmlns.com/foaf/0.1/name> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?prodiParty ?pintoPartyName WHERE {
  # Find Romano Prodi's political party
  dbr:Romano_Prodi dbo:partyAffiliation ?prodiParty .

  # Find Michele Pinto's political party and its name
  dbr:Michele_Pinto dbo:partyAffiliation ?pintoParty .
  ?pintoParty rdfs:label ?pintoPartyName .
  
  FILTER (lang(?pintoPartyName) = 'en')
}
```",4,4,5,3,2,3,3,71,0,0,2,0,0.0,0
617,70,test,"Give me the spouse of the child of the successor, that is a royalty, of Antiochus (son of Antiochus III the Great) and parent of the child of the commander in Battle of Panium and child of the child, that is a royalty, of Seleucus II Callinicus.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/successor> ?v0 . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seleucus_II_Callinicus> . ?result <http://dbpedia.org/ontology/child> ?v3 . ?result <http://dbpedia.org/property/father> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/child> ?v3 . <http://dbpedia.org/resource/Battle_of_Panium> <http://dbpedia.org/ontology/commander> ?v1 . ?v7 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/ontology/child> ?v7 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Antiochus (son of Antiochus III the Great)
  ?antiochus a dbo:Person ;
             foaf:name ""Antiochus""@en ;
             dbo:father dbr:Antiochus_III_the_Great .

  # Successor of Antiochus
  ?successor dbo:succeededBy ?antiochus .

  # Child of the successor
  ?child dbo:parent ?successor .

  # Spouse of the child, ensuring they are royalty
  ?spouse dbo:spouse ?child ;
          a dbo:Monarch .

  # Commander in Battle of Panium and their child
  ?commander dbo:commanded dbr:Battle_of_Panium .
  ?commandersChild dbo:parent ?commander .

  # Parent of the commander's child
  ?parentOfCommandersChild dbo:child ?commandersChild .

  # Child of Seleucus II Callinicus, ensuring they are royalty
  ?royalChild dbo:parent dbr:Seleucus_II_Callinicus ;
              a dbo:Monarch .

  # Ensure the spouse is the same entity as the parent and royal child
  FILTER (?spouse = ?parentOfCommandersChild && ?spouse = ?royalChild)
}
```",8,10,9,3,3,3,3,71,0,0,2,0,0.0,0
184,58,test,Give me the parent of the child of the parent of Archduchess Margaret of Austria (born 1925) and parent of Géza von Habsburg and child of the child of Archduke Joseph Karl of Austria.,SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Karl_of_Austria> . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Géza_von_Habsburg> . ?v2 <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/property/father> ?v5 . ?result <http://dbpedia.org/ontology/child> ?v2 . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Margaret_of_Austria_(born_1925)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?commonEntity WHERE {
  # Archduchess Margaret of Austria (born 1925)
  ?margaret dbo:name ""Margaret of Austria"" .
  ?margaret dbo:birthday ?birthday .
  FILTER(YEAR(?birthday) = 1925) .

  # Parent of Archduchess Margaret
  ?parent1 dbo:child ?margaret .
  
  # Child of the parent of Archduchess Margaret
  ?child1 dbo:parent ?parent1 .

  # Parent of that child (step 2)
  ?commonEntity dbo:parent ?child1 .

  # Géza von Habsburg
  ?geza dbo:name ""Géza von Habsburg"" .
  
  # Parent of Géza von Habsburg
  ?parent2 dbo:child ?geza .
  
  FILTER(?commonEntity = ?parent2) .

  # Archduke Joseph Karl of Austria
  ?josephKarl dbo:name ""Joseph Karl of Austria"" .

  # Child of Archduke Joseph Karl
  ?child2 dbo:parent ?josephKarl .

  # Child of that child (step 3)
  ?grandChild dbo:parent ?child2 .
  
  FILTER(?commonEntity = ?grandChild) .
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
404,69,test,"Give me the spouse of the person born, that is a royalty, as the birth name of Princess Victoria Louise of Prussia and parent of the child, that is a royalty, of Ernest Augustus, Duke of Brunswick and child of the father of the spouse of Princess Victoria Louise of Prussia.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v7 . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?v1 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> ?v2 . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/property/birthName> ?v4 . ?v3 <http://dbpedia.org/property/birthName> ?v4 . ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/ontology/child> ?v7 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  ?princess a dbo:Princess ;
           foaf:name ""Victoria Louise Marie Anna Elisabeth Julia""@en .
  
  ?princess dbo:spouse ?spouse .

  FILTER EXISTS { 
    ?spouse a dbo:RoyalFamilyMember ;
            dbo:birthName ""Ernest Augustus, Duke of Brunswick""@en .
  }
}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
184,24,test,Give me the parent of Archduchess Ilona of Austria and child of the child of Archduke Joseph Karl of Austria.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Ilona_of_Austria> . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Karl_of_Austria> . ?result <http://dbpedia.org/property/father> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?individual WHERE {
  # Find the parent of Archduchess Ilona of Austria
  ?parent dbo:child dbr:Archduchess_Ilona_of_Austria .
  
  # Find a child of Archduke Joseph Karl of Austria
  ?grandparent dbo:child ?middleChild .
  FILTER (?grandparent = dbr:Archduke_Joseph_Karl_of_Austria)
  
  # Find the grandchild (child of the middle child)
  ?middleChild dbo:child ?individual .

  # Ensure that the individual is both a parent of Ilona and a grandchild of Joseph Karl
  FILTER (?parent = ?individual)
}
```",3,3,4,2,2,3,3,71,1,0,0,1.0,1.0,1.0
820,17,test,Give me the child of the parent of the professional in Actor and professional in .,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v3 . ?v3 <http://dbpedia.org/ontology/child> ?v0 . ?result <http://dbpedia.org/property/occupation> """"@en . ?v0 <http://dbpedia.org/property/occupation> ""Actor""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?childName WHERE {
  ?actor dbo:profession dbr:Actor .
  
  ?actor dbp:parent ?parent .

  ?parent dbp:child ?child .
  
  ?child dbo:profession ?profession .
  
  BIND(STRAFTER(STR(?child), ""http://dbpedia.org/resource/"") AS ?childName)
}
```",4,4,5,3,2,3,2,20,0,0,128,0,0.0,0
767,71,test,"Give me the reference to the alter ego of the persona, that is a fictional character, of Matthew Burland and alma mater of the administration of the reference to George Kilbon Nash and entity in the administration, that is a settlement, of the writer of Where It's At (Dustin Lynch album).","SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/almaMater> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://xmlns.com/foaf/0.1/name> ?v8 . ?result <http://dbpedia.org/ontology/state> ?v2 . <http://dbpedia.org/resource/Where_It's_At_(Dustin_Lynch_album)> <http://dbpedia.org/property/writer> ?v1 . ?v5 <http://dbpedia.org/property/governor> ?v4 . ?v7 <http://dbpedia.org/property/alterEgo> ?v8 . ?v4 <http://xmlns.com/foaf/0.1/name> ""George Kilbon Nash""@en . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v2 <http://dbpedia.org/property/leaderParty> ?v1 . ?v7 <http://dbpedia.org/property/alterEgo> ""Matthew Burland""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?alterEgo WHERE {
  # Identify Matthew Burland's alter ego
  ?person rdfs:label ""Matthew Burland""@en .
  ?person dbo:fictionalCharacter ?alterEgo .

  # Find the alma mater of George Kilbon Nash and the administration entity related to the writer of ""Where It's At""
  ?nash rdfs:label ""George Kilbon Nash""@en .
  ?nash dbo:almaMater ?university .
  
  ?writer rdfs:label ""Dustin Lynch""@en ;
          dbo:lyricsWriterOf dbr:Where_It%27s_At_(Dustin_Lynch_album) .
  ?writer dbo:residence ?settlement .

  # Ensure the settlement is part of an administration
  ?adminEntity dbo:settlement ?settlement .
}
```",9,11,10,3,3,3,3,71,0,0,1,0,0.0,0
77,17,test,"Give me the force of the mayor of the territory administered, that is an organisation, from Warsaw and war of Alexander Chechenskiy.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Warsaw> . ?result <http://dbpedia.org/ontology/commander> ?v3 . ?v0 <http://dbpedia.org/property/leader> ?v3 . <http://dbpedia.org/resource/Alexander_Chechenskiy> <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?mayor ?organisation ?territory ?war ?force
WHERE {
  # Mayor of Warsaw
  ?mayor dbo:officeLocation dbr:Warsaw .
  
  # Organisation administering a territory
  ?organisation dbo:administers ?territory .

  # Alexander Chechenskiy's war involvement
  ?chechenskiy dbo:nationality dbr:Russia ;
              dbo:occupation dbr:Military_person ;
              dbo:participatedIn ?war .
  
  # Linking the mayor, organization, and Chechenskiy's war
  OPTIONAL { ?mayor dbo:memberOf ?organisation . }
  OPTIONAL { ?organisation dbo:relatedTo ?chechenskiy . }

  # Force related to the entities (assuming military or political force)
  OPTIONAL { ?force dbo:hasMember ?mayor .
             FILTER (?force != dbr:None) }
}
```",4,5,5,3,2,3,2,20,0,0,6,0,0.0,0
54,58,test,"Give me the child of Thinkhaya of Pagan and parent of the child of Narapati I of Ava and predecessor of the child, that is an office holder and a royalty, of the reference to Thihapate of Mohnyin.","SELECT ?result WHERE { <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?result . ?v5 <http://dbpedia.org/ontology/parent> ?result . ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Narapati_I_of_Ava> . ?result <http://dbpedia.org/ontology/successor> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/property/father> ?v1 . ?v1 <http://xmlns.com/foaf/0.1/name> ""Thihapate of Mohnyin""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?person WHERE {
  # Thinkhaya of Pagan's child
  ?thinkhayaChild dbo:parent dbr:Thinkhaya_of_Pagan .
  
  # Narapati I of Ava's child and their parent (Narapati I)
  ?narapatiIChild dbo:parent dbr:Narapati_I_of_Ava .
  
  # Predecessor of Narapati I's child
  ?predecessor dbo:successor ?narapatiIChild .

  # Ensure the predecessor is an office holder and royalty, and has a connection to Thihapate
  ?predecessor rdf:type dbo:OfficeHolder ;
               rdf:type dbo:Monarch .
  
  # Reference to Thihapate of Mohnyin
  ?thihapate dbr:Thihapate_of_Mohnyin .
  ?predecessor dbo:relatedTo ?thihapate .

  # Ensure the person is Thinkhaya's child and Narapati I's predecessor
  FILTER (?thinkhayaChild = ?predecessor)
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
391,55,test,"Give me the native of the figure known as Hub City and actor of the movie, that is a movie and a work and a television show, with Roz Ryan and actor of the claim to fame, that is a work, of Michael Ballhaus.","SELECT ?result WHERE { <http://dbpedia.org/resource/Michael_Ballhaus> <http://dbpedia.org/ontology/knownFor> ?v5 . ?v5 <http://dbpedia.org/ontology/starring> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/property/starring> ?result . ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v3 <http://dbpedia.org/property/nickname> ""Hub City""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v2 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Roz_Ryan> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?actor ?nativePlace WHERE {
  # Step 1: Identify ""Hub City""
  VALUES ?hubCity { dbr:Milwaukee } # Assuming Milwaukee is known as Hub City

  # Step 2: Find the movie that is also a work and television show with Roz Ryan
  ?movie dbo:starring dbr:Roz_Ryan ;
         rdf:type dbo:Film .

  # Step 3: Identify Michael Ballhaus's claim to fame
  ?ballhausWork dbo:director dbr:Michael_Ballhaus .

  # Step 4: Find the actor common to both works
  ?actor dbo:starring ?movie .
  ?actor dbo:starring ?ballhausWork .

  # Step 5: Determine the native city of this actor
  ?actor dbp:nativePlace ?nativePlace .
}
```",6,10,7,2,3,3,3,71,0,0,1,0,0.0,0
701,28,test,Give me the parent of Henuttawy (19th dynasty) and spouse of Ramesses II and parent of the child of Nefertari.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Henuttawy_(19th_dynasty)> . <http://dbpedia.org/resource/Nefertari> <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Ramesses_II> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person WHERE {
  # Parent of Henuttawy (19th dynasty)
  ?henuttawy dbo:parent ?parentHenuttawy .
  ?henuttawy rdfs:label ""Henuttawy""@en .

  # Spouse of Ramesses II
  ?ramessesII dbo:spouse ?spouseRamessesII .
  ?ramessesII rdfs:label ""Ramesses II""@en .

  # Parent of the child of Nefertari
  ?nefertariChild dbo:parent ?parentNefertariChild .
  ?nefertariChild dbo:mother dbr:Nefertari .
  
  FILTER (
    ?person = ?parentHenuttawy &&
    ?person = ?spouseRamessesII &&
    ?person = ?parentNefertariChild
  )
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
16,45,test,Give me the spouse of Ted McGinley and person born as the birth name of the alumnus of Ohio State University and professional in Actress.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Actress""@en . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Ohio_State_University> . ?v0 <http://dbpedia.org/property/birthName> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouseName ?actressBirthName WHERE {
  # Find Ted McGinley's spouse
  dbr:Ted_McGinley dbo:spouse ?spouse .
  ?spouse rdfs:label ?spouseName .

  # Find an actress who is an alumnus of Ohio State University and get her birth name
  ?actress a dbo:Actor ;
           dbo:almaMater dbr:Ohio_State_University ;
           foaf:name ?actressLabel .
  OPTIONAL { ?actress dbo:birthName ?actressBirthName . }
  
  # Filter to match the spouse's name with the actress's birth name
  FILTER (?spouseName = ?actressBirthName)
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
328,64,test,"Give me the leader of the office, that is a government agency, of the leader, that is an office holder and a politician, of Gustav Jonson and commander in Eastern Front (World War II) and awardee of the award of the commander in Volcano and Ryukyu Islands campaign.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Volcano_and_Ryukyu_Islands_campaign> <http://dbpedia.org/ontology/commander> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. <http://dbpedia.org/resource/Gustav_Jonson> <http://dbpedia.org/property/leader> ?v0 . <http://dbpedia.org/resource/Eastern_Front_(World_War_II)> <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/property/office> ?v1 . ?v1 <http://dbpedia.org/ontology/leader> ?result . ?v3 <http://dbpedia.org/property/awards> ?v2 . ?result <http://dbpedia.org/property/awards> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?leader WHERE {
  # Step 1: Identify Gustav Jonson's roles and awards
  ?gustav a dbo:Person ;
          foaf:name ""Gustav Jonson"" .

  OPTIONAL { 
    ?commanderRole dbo:agent ?gustav ;
                   dbo:position ""Commander in Eastern Front (World War II)"" .
  }

  OPTIONAL {
    ?award dbo:recipient ?gustav ;
           dbo:title ""Commander in Volcano and Ryukyu Islands campaign"" .
  }
  
  # Step 2: Find the leader of the office Gustav Jonson was associated with
  ?office dbo:head ?leader ;
          a dbo:GovernmentAgency .

  OPTIONAL {
    ?gustav dbo:position ?officePosition .
    ?officePosition dbo:office ?office .
  }

  # Step 3: Ensure this leader is an office holder and politician
  ?leader a dbo:Politician, dbo:OfficeHolder .
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
54,52,test,Give me the parent of the child of Narapati I of Ava and child of the father of the child of Thinkhaya of Pagan and predecessor of Ameitta Thiri Maha Dhamma Dewi of Ava.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> ?v2 . <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?v3 . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v5 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Ameitta_Thiri_Maha_Dhamma_Dewi_of_Ava> . ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Narapati_I_of_Ava> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?parent WHERE {
  ?narapatiI dbo:child ?commonChild .
  ?thinkhaya dbo:child ?commonChild .
  ?ameittaThiriMahaDhammaDewi dbo:predecessor ?commonChild .

  FILTER(STR(?narapatiI) = ""Narapati I of Ava""^^xsd:string)
  FILTER(STR(?thinkhaya) = ""Thinkhaya of Pagan""^^xsd:string)
  FILTER(STR(?ameittaThiriMahaDhammaDewi) = ""Ameitta Thiri Maha Dhamma Dewi of Ava""^^xsd:string)

  ?commonChild dbo:parent ?parent .
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
9,54,test,"Give me the alma mater of the awardee of the reference, that is an award, to Royal Medals and alma mater of the mayor, that is a politician, of Northern Ireland Forum and figure known as QUB.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Royal Medals""@en . <http://dbpedia.org/resource/Northern_Ireland_Forum> <http://dbpedia.org/property/leader> ?v3 . ?v5 <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://dbpedia.org/property/nickname> ""QUB""@en . ?v3 <http://dbpedia.org/ontology/almaMater> ?result . ?v5 <http://dbpedia.org/property/awards> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?almaMater WHERE {
  # Awardee of the Reference Award (assuming Copley Medal)
  VALUES ?referenceAward { dbr:Copley_Medal }
  
  ?person dbo:award ?referenceAward .
  ?person dbo:almaMater ?almaMater .

  UNION

  # Royal Medals awardees
  ?royalMedal dbr:Royal_Medal .
  ?person dbo:award ?royalMedal .
  ?person dbo:almaMater ?almaMater .

  UNION

  # Mayor of Northern Ireland Forum (assuming political leader)
  ?mayor dbo:officeHolder ?forumLeader .
  ?forumLeader dbr:Northern_Ireland_Forum .
  ?mayor dbo:almaMater ?almaMater .

  UNION

  # Notable figures associated with QUB
  ?figure dbo:almaMater dbr:Queen's_University_Belfast .
  ?figure rdfs:label ?label .
  FILTER(CONTAINS(LCASE(?label), ""qub"") || CONTAINS(LCASE(?label), ""queen's university belfast""))
  ?figure dbo:almaMater ?almaMater .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
492,68,test,"Give me the commander in the war, that is a military conflict and an event, of the commander in Battle of Verdun and person decedent at the capital, that is a settlement, of Algeria and person decedent at the work of the author of French Algeria.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> ?v4 . <http://dbpedia.org/resource/Battle_of_Verdun> <http://dbpedia.org/ontology/commander> ?v0 . <http://dbpedia.org/resource/Algeria> <http://dbpedia.org/ontology/capital> ?v3 . ?v7 <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://dbpedia.org/property/author> ?v5 . ?result <http://dbpedia.org/ontology/deathPlace> ?v3 . <http://dbpedia.org/resource/French_Algeria> <http://dbpedia.org/property/author> ?v5 . ?v0 <http://dbpedia.org/ontology/battle> ?v7 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?commanderInWar WHERE {
  # Commander in the Battle of Verdun
  ?battle dbr:Battle_of_Verdun .
  ?battle dbo:commander ?commanderVerdun .

  # Ensure this commander is also a commander in another military conflict classified as an event
  ?conflict dbo:type dbr:Military_conflict ;
           dbo:event ?event ;
           dbo:commander ?commanderInWar .
  FILTER (?commanderInWar = ?commanderVerdun)

  # Person decedent at the capital of Algeria (Algiers)
  ?person dbo:deathPlace dbr:Algiers .

  # Author of ""French Algeria"" and their work
  ?author dbo:work ?work ;
          rdfs:label ""French Algeria""@en .
  
  # Person decedent at the work of the author
  ?decedentPerson dbo:deathPlace ?workLocation .
  FILTER (?workLocation = ?work)
}
```",8,11,9,3,3,3,3,71,0,0,1,0,0.0,0
488,55,test,"Give me the death place of the father, that is a politician, of Yūki Hideyasu and birth place of the commander in Boshin War and administration of the father of Emperor Go-Mizunoo.",SELECT ?result WHERE { <http://dbpedia.org/resource/Boshin_War> <http://dbpedia.org/ontology/commander> ?v3 . <http://dbpedia.org/resource/Yūki_Hideyasu> <http://dbpedia.org/property/father> ?v5 . <http://dbpedia.org/resource/Emperor_Go-Mizunoo> <http://dbpedia.org/property/father> ?v2 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v5 <http://dbpedia.org/ontology/deathPlace> ?result . ?result <http://dbpedia.org/property/leader> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?deathPlaceYukiFather ?birthPlaceBoshinCommander ?administrationGoMizunooFather
WHERE {
  # Yūki Hideyasu's father who was a politician
  ?yukiHideyasu dbo:father ?yukiFather .
  ?yukiFather rdf:type dbo:Politician .
  ?yukiFather dbo:deathPlace ?deathPlaceYukiFather .

  # Commander in the Boshin War
  ?boshinCommander dbo:commandedDuring ?boshinWar .
  ?boshinWar dbp:name ""Boshin War"" .
  ?boshinCommander dbo:birthPlace ?birthPlaceBoshinCommander .

  # Father of Emperor Go-Mizunoo
  ?goMizunoo dbo:father ?goMizunooFather .
  ?goMizunooFather dbo:administrativePost ?administrationGoMizunooFather .
}
```",6,7,7,2,3,3,3,71,0,0,1,0,0.0,0
378,70,test,"Give me the war of the commander in the reference, that is a military conflict, to Peninsular War and claim to fame of the commander in the war, that is a military conflict and a societal event and an event, of Thomas Trigge and war of the person born as Carl Pontus Gahn.","SELECT ?result WHERE { ?v7 <http://dbpedia.org/ontology/battle> ?result . ?v4 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Peninsular War""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/ontology/knownFor> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Thomas_Trigge> <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://dbpedia.org/ontology/commander> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/ontology/commander> ?v7 . ?v4 <http://dbpedia.org/property/birthName> ""Carl Pontus Gahn""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?warThomas ?fameThomas ?warCarl WHERE {
  # Find the war associated with Thomas Trigge
  ?personThomas a dbo:MilitaryPerson ;
                foaf:name ""Thomas Trigge"" .
  
  ?personThomas dbo:participatedInMilitaryConflict ?warThomas .

  OPTIONAL {
    ?warThomas rdfs:label ?fameThomas .
    FILTER (CONTAINS(LCASE(?fameThomas), ""peninsular war"") || CONTAINS(LCASE(?fameThomas), ""societal event""))
  }

  # Find the war associated with Carl Pontus Gahn
  ?personCarl a dbo:MilitaryPerson ;
              foaf:name ""Carl Pontus Gahn"" .
  
  ?personCarl dbo:participatedInMilitaryConflict ?warCarl .
}
```",8,12,9,3,3,3,3,71,0,0,2,0,0.0,0
617,67,test,"Give me the parent of the child of the commander in Battle of Panium and spouse of the child of the successor, that is a royalty, of Antiochus (son of Antiochus III the Great) and child of Antiochus III the Great.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Antiochus_III_the_Great> . ?v6 <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://dbpedia.org/ontology/child> ?v3 . ?v0 <http://dbpedia.org/ontology/child> ?v6 . ?result <http://dbpedia.org/ontology/child> ?v3 . <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/successor> ?v0 . <http://dbpedia.org/resource/Battle_of_Panium> <http://dbpedia.org/ontology/commander> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?parent ?spouse WHERE {
  # Part 1: Battle of Panium Commander's Child's Parent
  ?battle dbo:event = dbpedia:Battle_of_Panium .
  ?battle dbo:commander ?commander .
  ?child dbo:parent ?parent ;
         dbo:father ?commander .

  # Part 2: Antiochus' Successor and their Child's Spouse
  ?antiochus foaf:name ""Antiochus III the Great""@en .
  ?successor dbo:predecessor ?antiochus ;
             dbo:child ?childOfSuccessor .
  ?spouse dbo:spouse ?childOfSuccessor ;
          a dbo:Monarch ;
          dbo:parent ?antiochus .

  # Ensure the spouse is also a child of Antiochus III
  FILTER (?spouse = ?child)
}
```",7,8,8,3,3,3,3,71,0,0,2,0,0.0,0
747,60,test,"Give me the band of the person born as the persona of Shèna and person born on the birth date of the person decedent, that is an athlete and a soccer player, at Zolotonosha.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?v3 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Zolotonosha> . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Shèna> <http://xmlns.com/foaf/0.1/givenName> ?v0 . ?result <http://dbpedia.org/ontology/birthDate> ?v2 . ?v3 <http://dbpedia.org/ontology/birthDate> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?band
WHERE {
  # Find Shèna's birth date
  ?person1 a dbo:Person ;
           foaf:name ""Shèna""@en .
  
  ?person1 dbo:birthday ?birthDate .

  # Find decedent with the same birth date as Shèna
  ?person2 a dbo:Person ;
           dbo:birthday ?birthDate ;
           dbo:deathPlace ?deathPlace .

  FILTER EXISTS { ?person2 dbo:deceased ""true""^^xsd:boolean }

  # Find athlete who is a soccer player born in Zolotonosha
  ?athlete a dbo:Athlete ;
           dbo:sport dbr:Soccer ;
           dbo:birthPlace dbr:Zolotonosha .

  FILTER EXISTS { ?athlete dbo:birthday ?birthDate }

  # Get the band associated with this athlete
  ?athlete dbo:musicalBand ?band .
}
```",6,8,7,3,2,3,3,71,0,0,1,0,0.0,0
492,66,test,"Give me the person decedent at the capital, that is a settlement, of the country of Khemis Miliana District and person decedent at the work of US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite and commander in the war, that is a military conflict and an event, of Frédéric-Georges Herr.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> ?v3 . <http://dbpedia.org/resource/Khemis_Miliana_District> <http://dbpedia.org/ontology/country> ?v1 . ?v3 <http://dbpedia.org/property/author> ""US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite""@en . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . <http://dbpedia.org/resource/Frédéric-Georges_Herr> <http://dbpedia.org/ontology/battle> ?v6 . ?v1 <http://dbpedia.org/ontology/capital> ?v2 . ?v6 <http://dbpedia.org/ontology/commander> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?personDecedent WHERE {
  # Find the capital of Khemis Miliana District
  ?district dbo:capital ?capital .
  FILTER(STRSTARTS(STR(?district), ""Khemis Miliana District""))
  FILTER(STRSTARTS(STR(?capital), ""Settlement""))

  # Find Joseph C. Satterthwaite's workplace
  ?satterthwaite dbo:officeHolder ?office .
  ?office foaf:name ""US Assistant Secretary of State for African Affairs"" .

  # Find the military conflict involving Frédéric-Georges Herr
  ?herr dbo:commanderInWar ?war .
  FILTER(STRSTARTS(STR(?war), ""Military Conflict"") && STRSTARTS(STR(?war), ""Event""))

  # Person decedent at both locations and war
  ?personDecedent dbo:decedentAtPlace ?capital .
  ?personDecedent dbo:decedentAtPlace ?office .
  ?personDecedent dbo:commanderInWar ?war .
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
778,19,test,"Give me the author of the work, that is a software, of the author of Pushd and popd and entity in the award of Ralph L. Brinster.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/author> ?v0 . <http://dbpedia.org/resource/Pushd_and_popd> <http://dbpedia.org/property/author> ?v0 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Software>. ?result <http://dbpedia.org/ontology/location> ?v2 . ?v4 <http://dbpedia.org/ontology/author> ?result . <http://dbpedia.org/resource/Ralph_L._Brinster> <http://dbpedia.org/property/awards> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?author WHERE {
  # Find authors of Pushd and Popd (Unix shell commands)
  ?unixShell dbo:creator ?author .
  
  # Identify a software work by this author
  ?softwareWork dbo:creator ?author ;
                rdf:type dbo:Software .

  # Find Ralph L. Brinster's award entity
  dbr:Ralph_L._Brinster dbo:award dbr:Nobel_Prize_in_Physiology_or_Medicine_2007 .
  
  # Find an entity related to the Nobel Prize in Physiology or Medicine 2007
  ?nobelEntity dbo:recipient dbr:Ralph_L._Brinster ;
               rdf:type dbo:Award .

  # Connect the software work author with the Nobel award entity
  ?softwareWork dbo:relatedTo ?nobelEntity .
}
```",5,6,6,3,2,3,2,20,0,0,1,0,0.0,0
360,22,test,"Give me the writer of the work, that is an album, of Dave Flett and native of the death place, that is a settlement, of Winnie Madikizela-Mandela.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v2 <http://dbpedia.org/property/author> ""Dave Flett""@en . ?v2 <http://dbpedia.org/property/writer> ?result . <http://dbpedia.org/resource/Winnie_Madikizela-Mandela> <http://dbpedia.org/ontology/deathPlace> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Album>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?writer WHERE {
  # Find the album associated with Dave Flett
  ?album dbo:composer dbr:Dave_Flett .
  
  # Find the settlement where Winnie Madikizela-Mandela died
  ?deathPlace a dbo:Settlement ;
              dbp:deceased dbr:Winnie_Madikizela-Mandela .

  # Find writers associated with the album
  ?album dbo:composer ?writer .
  
  # Check if the writer has any connection to the death place (e.g., born there, lived there)
  OPTIONAL { ?writer dbp:birthPlace ?deathPlace . }
  OPTIONAL { ?writer dbp:residence ?deathPlace . }

  FILTER(?writer != dbr:Dave_Flett) # Exclude Dave Flett himself
}
```",4,6,5,2,2,2,3,28,0,0,1,0,0.0,0
666,18,test,"Give me the player in the manager, that is a sports manager, of the team, that is a soccer club and a sports team season, of Leonid Slutsky (football coach) and figure known as the nickname of England national beach soccer team.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?result <http://dbpedia.org/property/nickname> ?v3 . ?v1 <http://dbpedia.org/ontology/manager> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v1 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Leonid_Slutsky_(football_coach)> . <http://dbpedia.org/resource/England_national_beach_soccer_team> <http://dbpedia.org/property/nickname> ?v3 . ?v2 <http://dbpedia.org/ontology/team> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?playerManager ?nickname 
WHERE {
  # Find Leonid Slutsky's role as a football coach
  ?slutsky dbo:sport dbr:Soccer .
  ?slutsky dbo:manager ?teamSeason .

  # Ensure the team is a soccer club and season
  ?teamSeason dbo:team ?soccerClub .
  ?soccerClub rdf:type dbo:SoccerTeam .
  
  # Identify the player-manager relationship
  ?playerManager dbo:role ?role .
  ?role rdfs:label ""sports manager""@en .

  # Find the England national beach soccer team nickname
  dbr:England_national_beach_soccer_team rdfs:label ?nickname .
}
```",5,8,6,3,2,3,2,20,0,0,2,0,0.0,0
701,20,test,Give me the parent of the child of Ramesses II and parent of Meritamen.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ramesses_II> . ?result <http://dbpedia.org/ontology/child> ?v2 . <http://dbpedia.org/resource/Meritamen> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parentOfChild ?parentOfMeritamen 
WHERE {
  # Find a child of Ramesses II and then find that child's parent
  ?child dbo:father dbr:Ramesses_II .
  ?child dbo:parent ?parentOfChild .

  # Find the parent of Meritamen
  dbr:Meritamen dbo:parent ?parentOfMeritamen .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
659,68,test,"Give me the military force of the force, that is a societal event and an event and a military conflict, of Rutger Jan Schimmelpenninck and commander in the force of the native, that is an office holder, of Kingdom of Ireland and commander in the war, that is an event and a military conflict, of the figure known, that is a military unit and an organisation, as 'Polish Horse'.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v5 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Kingdom_of_Ireland> . ?v4 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/ontology/battle> ?v7 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> . ?v0 <http://dbpedia.org/property/nickname> ""'Polish Horse'""@en . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v4 <http://dbpedia.org/ontology/commander> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v7 <http://dbpedia.org/ontology/commander> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce ?nativeCommander WHERE {
  # Rutger Jan Schimmelpenninck's military force
  ?schimmelpenninckMilitaryForce a dbo:MilitaryConflict ;
                                 dbo:commander dbr:Rutger_Jan_Schimmelpenninck .
  
  # Ensure it is also a societal event and an event
  ?schimmelpenninckMilitaryForce a dbo:SocietalEvent, dbo:Event .

  # Native commander in the Kingdom of Ireland
  ?nativeCommander a dbo:OfficeHolder ;
                   dbo:nationality dbr:Kingdom_of_Ireland ;
                   dbo:commander ?militaryConflict .
  
  # Ensure this military conflict involves 'Polish Horse'
  ?militaryConflict dbo:militaryUnit dbr:Polish_Horse .

  # Link the two forces
  ?schimmelpenninckMilitaryForce = ?militaryConflict .

  # Find the military force of Rutger Jan Schimmelpenninck
  ?nativeCommander dbo:commander ?militaryForce .
}
```",8,16,9,3,3,3,3,71,0,0,15,0,0.0,0
9,45,test,"Give me the alma mater of John Alderdice, Baron Alderdice and alma mater of Allen Hill (scientist) and figure known as the nickname of the entity, that is an organisation and an educational institution, in Northern Ireland.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Allen_Hill_(scientist)> <http://dbpedia.org/ontology/almaMater> ?result . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Northern_Ireland> . <http://dbpedia.org/resource/John_Alderdice,_Baron_Alderdice> <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://dbpedia.org/property/nickname> ?v1 . ?v0 <http://dbpedia.org/property/nickname> ?v1 . }","```sparql
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT DISTINCT ?almaMaterJohnAlderdice ?almaMaterAllenHill ?nickname WHERE {
  # Alma mater of John Alderdice, Baron Alderdice
  ?johnAlderdice foaf:name ""John Alderdice"" .
  ?johnAlderdice dbo:almaMater ?almaMaterJohnAlderdice .

  # Alma mater of Allen Hill (scientist)
  ?allenHill foaf:name ""Allen Hill"" .
  ?allenHill dbo:almaMater ?almaMaterAllenHill .

  # Nickname of an organisation and educational institution in Northern Ireland
  ?organisation a dbo:EducationalInstitution ;
                dbo:location dbr:Northern_Ireland ;
                rdfs:label ?nickname .
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
281,25,test,"Give me the entity in Colony of New Zealand and war of the profession, that is a military unit, of Heather Roy.",SELECT ?result WHERE { <http://dbpedia.org/resource/Heather_Roy> <http://dbpedia.org/property/occupation> ?v1 . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Colony_of_New_Zealand> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v1 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?militaryUnit WHERE {
  ?person foaf:name ""Heather Roy"" .
  ?person dbo:birthPlace ?place .
  FILTER(CONTAINS(LCASE(STR(?place)), ""new zealand"")) .
  ?person foaf:profession ?profession .
  FILTER(CONTAINS(LCASE(STR(?profession)), ""war"") || CONTAINS(LCASE(STR(?profession)), ""military"")) .
  ?person dbp:militaryUnit ?militaryUnit .
  ?militaryUnit a dbo:MilitaryUnit .
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
182,24,test,Give me the entity in the nationality of Tamara Kunanayakam and war of the work of Gotabhaya Rajapaksa.,SELECT ?result WHERE { <http://dbpedia.org/resource/Tamara_Kunanayakam> <http://dbpedia.org/ontology/nationality> ?v0 . ?result <http://dbpedia.org/ontology/place> ?v0 . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Gotabhaya_Rajapaksa> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nationality ?war WHERE {
  # Query for Tamara Kunanayakam's nationality
  dbr:Tamara_Kunanayakam dbo:nationality ?nationality .

  # Query for Gotabhaya Rajapaksa's involvement in a war
  dbr:Gotabhaya_Rajapaksa dbo:occupation ?occupation .
  ?occupation dbo:relatedWork ?war .
}
```",4,4,5,2,2,2,3,28,0,0,5,0,0.0,0
994,19,test,Give me the associated musical artist of the associated musical artist of Watchtower (band) and associated musical artist of Red Tide (band).,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Red_Tide_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Watchtower_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT DISTINCT ?secondLevelArtist WHERE {
  # For Watchtower (band)
  {
    ?watchtower dbo:associatedMusicalArtist ?firstLevelArtist1 .
    ?firstLevelArtist1 dbo:associatedMusicalArtist ?secondLevelArtist .
    VALUES ?watchtower { <http://dbpedia.org/resource/Watchtower_(band)> }
  }

  UNION

  # For Red Tide (band)
  {
    ?redTide dbo:associatedMusicalArtist ?firstLevelArtist2 .
    ?firstLevelArtist2 dbo:associatedMusicalArtist ?secondLevelArtist .
    VALUES ?redTide { <http://dbpedia.org/resource/Red_Tide_(band)> }
  }
}
```",3,3,4,2,2,3,3,71,3,18,0,0.14285714285714285,1.0,0.25
747,41,test,Give me the person born on the birth date of Pavlo Khudzik and band of Shèna and band of the writer of Apollo (Hardwell song).,SELECT ?result WHERE { <http://dbpedia.org/resource/Pavlo_Khudzik> <http://dbpedia.org/ontology/birthDate> ?v2 . <http://dbpedia.org/resource/Shèna> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/birthDate> ?v2 . <http://dbpedia.org/resource/Apollo_(Hardwell_song)> <http://dbpedia.org/property/writer> ?v4 . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person ?band1 ?band2 WHERE {
  # Find Pavlo Khudzik's birth date
  VALUES (?pavlo) { dbr:Pavlo_Khudzik }
  ?pavlo dbo:birthday ?birthDate .

  # Find any person born on the same date as Pavlo Khudzik
  ?person dbo:birthday ?sameBirthDate .
  FILTER(?sameBirthDate = ?birthDate)
  
  # Find Shèna's band
  VALUES (?shena) { dbr:Shèna }
  ?shena dbo:band ?band1 .

  # Find the writer of Apollo (Hardwell song) and their band
  ?apolloSong dbo:lyricsBy ?writer .
  FILTER(STRSTARTS(STR(?apolloSong), ""dbr:Apollo_(Hardwell_song)""))
  ?writer dbo:band ?band2 .
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
915,16,test,"Give me the resident of the birthplace, that is a settlement, of Stephen Verona and father of the child, that is a fictional character and a soap character, of Phillip Spaulding.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v3 <http://dbpedia.org/property/father> ?result . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Phillip_Spaulding> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoapCharacter>. ?result <http://dbpedia.org/ontology/residence> ?v2 . <http://dbpedia.org/resource/Stephen_Verona> <http://dbpedia.org/ontology/birthPlace> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?resident
WHERE {
  # Step 1: Find Stephen Verona's birthplace that is a settlement
  dbr:Stephen_Verona dbo:birthPlace ?birthplace .
  ?birthplace rdf:type dbo:Settlement .

  # Step 2: Identify Phillip Spaulding's child who is both fictional and a soap character
  ?child dbo:spouse ?phillipSpaulding ;
         rdf:type dbo:FictionalCharacter, dbo:SoapCharacter .
  dbr:Phillip_Spaulding dbo:spouse ?child .

  # Step 3: Determine the father of this child
  ?child dbo:father ?resident .
}
```",4,7,5,2,2,3,2,20,0,0,1,0,0.0,0
184,49,test,Give me the parent of the child of the parent of Archduchess Margaret of Austria (born 1925) and parent of the native of Budapest.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/ontology/child> ?v1 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Margaret_of_Austria_(born_1925)> . ?v2 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Budapest> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commonParent WHERE {
  # Step 1: Identify Archduchess Margaret of Austria (born 1925)
  ?margaret a dbo:Person ;
            rdfs:label ""Archduchess Margaret of Austria""@en ;
            dbo:birthYear ""1925""^^xsd:gYear .

  # Step 2: Find the parent of Archduchess Margaret
  ?parent1 dbo:child ?margaret .

  # Step 3: Find the child of this parent
  ?child1 dbo:parent ?parent1 .

  # Step 4: Identify a native of Budapest
  ?budaPerson dbo:nativePlace dbr:Budapest .

  # Step 5: Find the parent of the native of Budapest
  ?parent2 dbo:child ?budaPerson .

  # Step 6: Determine if there's any common parent
  FILTER (?commonParent = ?parent1 || ?commonParent = ?parent2)
}
```",5,5,6,3,2,3,3,71,0,0,2,0,0.0,0
994,41,test,"Give me the associated musical artist of the associated musical artist of Watchtower (band) and band member of Don Dokken and associated musical artist of the band member, that is a band and a group and an organisation, of Meshuggah.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Meshuggah> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. <http://dbpedia.org/resource/Watchtower_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Don_Dokken> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?finalArtist
WHERE {
  # Step 1: Find associated musical artist of Watchtower
  ?watchtowerArtist dbo:associatedBand <http://dbpedia.org/resource/Watchtower_(band)> .

  # Step 2: Check if this artist is a band member of Don Dokken
  ?donDokkenMember dbo:bandMember <http://dbpedia.org/resource/Don_Dokken> .
  FILTER (?watchtowerArtist = ?donDokkenMember)

  # Step 3: Find associated musical artist of the band member found in step 2
  ?associatedArtist dbo:musicalArtist ?donDokkenMember .

  # Step 4: Check if this associated artist is a band and group that is an organization of Meshuggah
  ?meshuggahOrg dbo:band <http://dbpedia.org/resource/Meshuggah> .
  FILTER (?associatedArtist = ?meshuggahOrg)
}
```",5,8,6,2,3,3,3,71,0,0,1,0,0.0,0
161,56,test,"Give me the military force of the force, that is a societal event and an event and a military conflict, of Francisco Franco and commander in the force, that is an event, of the figure known as El Director and military force of Spanish Civil War.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/ontology/commander> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://xmlns.com/foaf/0.1/nick> ""El Director""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Franco> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce ?role
WHERE {
  # Identify the Spanish Civil War as a societal event, general event, and military conflict
  dbr:Spanish_Civil_War dbo:type ?eventTypes .
  
  FILTER(?eventTypes IN (dbo:SocietalEvent, dbo:Event, dbo:MilitaryConflict))
  
  # Find military forces involved in these events
  ?militaryForce dbo:partOf ?event .
  ?event dbo:wikiPageRedirects dbr:Spanish_Civil_War .
  
  # Link Francisco Franco to the military force as a commander
  dbr:Francisco_Franco dbo:role ?role .
  ?role dbo:hasMilitaryUnit ?militaryForce .
  
  # Ensure the role is related to the Spanish Civil War
  ?role dbo:wikiPageRedirects dbr:Spanish_Civil_War .
}
```",6,10,7,3,3,3,3,71,0,0,32,0,0.0,0
318,8,test,Give me the professional in the profession of Robert Xavier Rodriguez and person born in 1970.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthYear> ""1970""^^<http://www.w3.org/2001/XMLSchema#gYear> . ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Robert_Xavier_Rodriguez> <http://dbpedia.org/property/occupation> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Subquery to find Robert Xavier Rodriguez's profession
  SELECT DISTINCT ?profession WHERE {
    dbr:Robert_Xavier_Rodriguez dbo:occupation ?profession .
  } LIMIT 1

  # Main query to find individuals with the same profession born in 1970
  ?person rdf:type dbo:Person ;
          dbo:birthYear ""1970""^^xsd:gYear ;
          (dbo:occupation|rdf:type) ?matchedProfession .

  FILTER (?matchedProfession = ?profession)
}
```",3,3,4,2,2,2,2,9,0,0,7,0,0.0,0
659,43,test,"Give me the military force of Napoleonic Wars and commander in German campaign of 1813 and commander in the war, that is an event and a military conflict, of the figure known, that is a military unit and an organisation, as 'Polish Horse'.","SELECT ?result WHERE { <http://dbpedia.org/resource/German_campaign_of_1813> <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Napoleonic_Wars> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/property/nickname> ""'Polish Horse'""@en . ?v4 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/ontology/battle> ?v4 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?generalCommander ?campaignCommander WHERE {
  # Napoleonic Wars and its general commander
  dbr:Napoleonic_Wars a dbo:MilitaryConflict ;
                      dbo:commander ?generalCommander .

  # German campaign of 1813 and its specific commander
  dbr:German_campaign_of_1813 a dbo:MilitaryEvent ;
                              dbo:partOf dbr:Napoleonic_Wars ;
                              dbo:commander ?campaignCommander .

  # Polish Horse as a military unit involved in the Napoleonic Wars
  OPTIONAL {
    ?polishHorse a dbo:MilitaryUnit, dbo:Organization ;
                 rdfs:label ""Polish Horse""@en .
    ?polishHorse dbo:partOf dbr:Napoleonic_Wars .
  }
}
```",5,9,6,3,3,3,3,71,0,0,6,0,0.0,0
963,19,test,"Give me the administration of the ruling party, that is a political party, in the location for 21205 and entity in the region, that is a country, of Central European Time.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v2 . ?result <http://dbpedia.org/property/leaderParty> ?v4 . ?v0 <http://dbpedia.org/property/leaderParty> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . ?v0 <http://dbpedia.org/ontology/postalCode> ""21205"" . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?rulingParty WHERE {
  ?country a dbo:Country ;
           dbp:timeZone ""Central European Time"" .
  
  ?region dbo:administrativeRegionOf ?country ;
          dbp:postalCode ""21205"" .

  ?party a dbo:PoliticalParty ;
         dbo:rulingPartyIn ?region .

  BIND(?party AS ?rulingParty)
}
```",5,7,6,3,2,3,2,20,0,0,84,0,0.0,0
391,53,test,"Give me the native of the figure known as the nick name of Jackson, Tennessee and actor of the movie, that is a movie and a work and a television show, with Roz Ryan and actor of The Departed.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . <http://dbpedia.org/resource/Jackson,_Tennessee> <http://xmlns.com/foaf/0.1/nick> ?v3 . ?v1 <http://dbpedia.org/property/starring> ?result . ?v2 <http://dbpedia.org/property/nickname> ?v3 . ?v1 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Roz_Ryan> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. <http://dbpedia.org/resource/The_Departed> <http://dbpedia.org/ontology/starring> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?native WHERE {
  # Step 1: Identify the nickname of Jackson, Tennessee and find associated actor
  ?nickname rdfs:label ""Jackson, Tennessee""@en .
  ?actor dbo:nickname ?nickname ;
         dbo:birthPlace ?native .

  # Step 2: Find a movie that is both a work and a television show featuring Roz Ryan
  ?movie dbo:starring dbr:Roz_Ryan ;
         rdf:type dbo:Film ;
         dbo:workExample ?televisionShow .
  
  # Ensure the actor acted in this movie/television show
  ?actor dbo:starring ?movie .

  # Step 3: Check if the same actor also appeared in ""The Departed""
  ?departed dbr:The_Departed ;
           dbo:starring ?actor .

  FILTER (lang(?nickname) = 'en')
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
232,70,test,"Give me the native of the residence, that is a settlement and British, of the native, that is a politician and an office holder, of France and actor of the claim to fame, that is a film and a military conflict, of the professional in Actor, narrator and producer and child of the person born as John Devon Roland Pertwee.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/ontology/knownFor> ?v7 . ?v4 <http://dbpedia.org/property/birthName> ""John Devon Roland Pertwee""@en . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/France> . ?v0 <http://dbpedia.org/property/occupation> ""Actor, narrator and producer""@en . ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v1 <http://dbpedia.org/property/residence> ?v3 . ?v7 <http://dbpedia.org/ontology/starring> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?residence WHERE {
  # Step 1: Identify John Pertwee
  ?john a dbo:Person ;
        foaf:name ""John Devon Roland Pertwee""@en .

  # Step 2: Find his child who is an actor, narrator, and producer
  ?child dbo:parent ?john ;
         dbo:occupation dbr:Actor ;
         dbo:occupation dbr:Narrator ;
         dbo:occupation dbr:Producer .

  # Step 3: Determine the film and military conflict associated with this child
  ?film dbo:actor ?child .
  ?conflict dbo:actor ?child .

  # Step 4: Identify the actor involved in these works
  ?actor dbo:actor ?film ;
         dbo:actor ?conflict .

  # Step 5: Determine the native place of this actor
  ?actor dbo:nationality dbr:United_Kingdom ;
         dbo:birthPlace ?nativePlace .

  # Step 6: Find the residence that is a settlement and British
  ?actor dbo:residence ?residence .
  ?residence a dbo:Settlement ;
             dbo:country dbr:United_Kingdom .
}
```",8,14,9,3,3,3,3,71,0,0,1,0,0.0,0
16,69,test,Give me the spouse of the person born as the birth name of Ted McGinley and person born as the birth name of the alumnus of Ohio State University and professional in the profession of Satomi Ishihara.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/property/birthName> ?v4 . <http://dbpedia.org/resource/Satomi_Ishihara> <http://dbpedia.org/property/occupation> ?v7 . ?v1 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Ohio_State_University> . ?v1 <http://dbpedia.org/property/birthName> ?v2 . ?result <http://dbpedia.org/property/birthName> ?v2 . ?v3 <http://dbpedia.org/property/birthName> ?v4 . ?result <http://dbpedia.org/property/occupation> ?v7 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?spouse
WHERE {
  # Ted McGinley's birth name
  ?ted a dbo:Person ;
      dbp:birthday ""1959-09-19""^^xsd:date ;
      dbp:birthName ?tedBirthName .

  # Satomi Ishihara's details
  ?satomi a dbo:Person ;
          dbp:almaMater <http://dbpedia.org/resource/Ohio_State_University> ;
          dbp:profession ""Actress""^^xsd:string .

  # Find person with Ted McGinley's birth name
  ?person1 a dbo:Person ;
           dbp:birthName ?tedBirthName .

  # Find person with Satomi Ishihara's details
  ?person2 a dbo:Person ;
           dbp:almaMater <http://dbpedia.org/resource/Ohio_State_University> ;
           dbp:profession ""Actress""^^xsd:string .

  # Get spouses of these persons
  OPTIONAL { ?person1 dbo:spouse ?spouse . }
  OPTIONAL { ?person2 dbo:spouse ?spouse . }
}
```",8,8,9,3,3,3,3,71,0,0,1,0,0.0,0
701,45,test,"Give me the spouse of the father of the commander, that is a royalty, in Battle of Perire and parent of Meritamen and parent of Henuttawy (19th dynasty).",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Battle_of_Perire> <http://dbpedia.org/ontology/commander> ?v0 . <http://dbpedia.org/resource/Meritamen> <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Henuttawy_(19th_dynasty)> . ?result <http://dbpedia.org/ontology/spouse> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  ?commander dbo:occupation ""Commander""@en .
  ?battle dbo:participants ?commander .
  ?battle rdfs:label ""Battle of Perire""@en .
  
  ?father dbo:child ?commander .
  
  ?spouse dbo:spouse ?father ;
          a dbo:Monarch ;
          dbo:parent ?meritamen, ?henuttawy .

  ?meritamen rdfs:label ""Meritamen""@en .
  ?henuttawy rdfs:label ""Henuttawy (19th dynasty)""@en .
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
232,68,test,"Give me the actor of the claim to fame, that is a film and a military conflict, of the professional in Actor, narrator and producer and native of the residence, that is a settlement and British, of Sylvie Bermann and child of the person born as the birth name of Jon Pertwee.","SELECT ?result WHERE { <http://dbpedia.org/resource/Sylvie_Bermann> <http://dbpedia.org/property/residence> ?v3 . ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v0 <http://dbpedia.org/ontology/knownFor> ?v7 . ?v0 <http://dbpedia.org/property/occupation> ""Actor, narrator and producer""@en . ?v4 <http://dbpedia.org/ontology/child> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/property/birthName> ?v5 . ?v4 <http://dbpedia.org/property/birthName> ?v5 . ?v7 <http://dbpedia.org/ontology/starring> ?result . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

# Step 1: Find Sylvie Bermann's native British settlement
SELECT ?settlement WHERE {
    dbr:Sylvie_Bermann dbo:nativePlace ?nativePlace .
    ?nativePlace dbo:country dbr:United_Kingdom ;
                 a dbo:Settlement .
    BIND(?nativePlace AS ?settlement)
}

# Step 2: Find Jon Pertwee's birth name
SELECT ?birthName WHERE {
    dbr:Jon_Pertwee dbo:birthName ?birthName .
}

# Step 3: Identify the child of Jon Pertwee
SELECT ?child WHERE {
    ?person dbo:birthName ?birthName ;
            dbo:parent ?parent .
    FILTER(?birthName = ""Jon Pertwee"") .
    ?parent dbo:child ?child .
}

# Step 4: Find a professional in acting, narration, and production native to the settlement
SELECT ?professional WHERE {
    ?person dbo:nativePlace ?settlement ;
            (dbo:occupation dbr:Actor ; 
             dbo:occupation dbr:Narrator ; 
             dbo:occupation dbr:Producer) .
    FILTER(?settlement = <SETTLEMENT_URI>) # Replace with actual URI from Step 1
}

# Step 5: Determine the film and military conflict associated with this professional
SELECT ?film ?conflict WHERE {
    ?professional dbo:claimToFame ?work .
    ?work a (dbo:Film ; dbo:MilitaryConflict) .
    BIND(?work AS ?film)
    FILTER(!BOUND(?film)) # Ensure it's not already bound as a film
    BIND(?work AS ?conflict)
}

# Step 6: Identify the actor involved in both the film and military conflict
SELECT DISTINCT ?actor WHERE {
    ?film dbo:starring ?actor .
    ?conflict dbo:participant ?actor .
}
```",8,12,9,3,3,3,3,71,0,0,1,0,0.0,0
378,51,test,"Give me the claim to fame of the commander in the war, that is a military conflict and a societal event and an event, of Thomas Trigge and war of the commander in Peninsular War.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Peninsular_War> <http://dbpedia.org/ontology/commander> ?v4 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/knownFor> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Thomas_Trigge> <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://dbpedia.org/ontology/commander> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?claimToFame WHERE {
  ?person a dbo:MilitaryPerson ;
          foaf:name ""Thomas Trigge"" .
  
  OPTIONAL { 
    ?person dbo:commanderOf dbr:Peninsular_War .
  }
  
  OPTIONAL {
    ?person dbo:claimToFame ?claimToFame .
  }

  FILTER EXISTS { ?person dbo:commanderOf dbr:Peninsular_War }
}
```",5,8,6,3,2,3,3,71,0,0,2,0,0.0,0
528,42,test,Give me the war of Orozimbo Barbosa and force of the person born as Narciso Campero Leyes and war of the military force of Battle of Pisagua.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Orozimbo_Barbosa> <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Pisagua> . ?result <http://dbpedia.org/ontology/commander> ?v1 . ?v1 <http://dbpedia.org/property/birthName> ""Narciso Campero Leyes""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?war ?force1 ?force2 WHERE {
  # Orozimbo Barbosa's participation in wars
  OPTIONAL { 
    dbr:Orozimbo_Barbosa dbo:participatedIn ?war .
  }
  
  # Narciso Campero Leyes' military force and wars
  OPTIONAL {
    dbr:Narciso_Campero_Leyes dbo:commander ?force1 .
    ?force1 dbo:participatedIn ?war .
  }

  # Battle of Pisagua's involved forces
  OPTIONAL {
    dbr:Battle_of_Pisagua dbo:participatedIn ?war .
    ?war dbo:opposingMilitaryForce ?force2 .
  }
}
```",5,5,6,2,3,3,3,71,0,0,2,0,0.0,0
747,68,test,"Give me the person born on the birth date of the person decedent, that is an athlete and a soccer player, at Zolotonosha and band of the person born as Tracey Elizabeth McSween and band of the writer of the work, that is a song, of Amba Shepherd.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Amba_Shepherd> . ?v0 <http://dbpedia.org/property/writer> ?v7 . ?v7 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v5 <http://dbpedia.org/ontology/birthDate> ?v4 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v5 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Zolotonosha> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?result <http://dbpedia.org/ontology/birthDate> ?v4 . ?v3 <http://dbpedia.org/property/birthName> ""Tracey Elizabeth McSween""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?athlete ?soccerPlayerBand ?songWriterBand
WHERE {
  # Step 1: Find the birthdate of a decedent
  ?decedent dbo:deathDate ?deathDate .
  
  # Step 2: Find an athlete and soccer player from Zolotonosha born on that date
  ?athlete dbo:birthDate ?birthdate ;
           dbo:sport dbr:Soccer ;
           dbo:placeOfBirth dbr:Zolotonosha .
  FILTER (?birthdate = ?deathDate)
  
  # Step 3: Find the band associated with Tracey Elizabeth McSween
  OPTIONAL {
    ?tracey dbp:band ?soccerPlayerBand .
    FILTER (str(?tracey) = ""Tracey Elizabeth McSween"")
  }
  
  # Step 4: Identify the writer of the song ""Amba Shepherd""
  ?song dbo:title ""Amba Shepherd"" ;
        dbo:author ?writer .
  
  # Step 5: Find the band associated with this writer
  OPTIONAL {
    ?writer dbp:band ?songWriterBand .
  }
}
```",8,11,9,3,3,3,3,71,0,0,1,0,0.0,0
427,47,test,Give me the party of the father of the alumnus of Massachusetts Institute of Technology and reference to the name of Italian People's Party (1994).,SELECT ?result WHERE { <http://dbpedia.org/resource/Italian_People's_Party_(1994)> <http://xmlns.com/foaf/0.1/name> ?v2 . ?v0 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Massachusetts_Institute_of_Technology> . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v4 <http://dbpedia.org/ontology/party> ?result . ?v0 <http://dbpedia.org/property/father> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?alumnus ?fatherName ?party WHERE {
  # Find MIT alumni
  ?alumnus dbo:almaMater dbr:Massachusetts_Institute_of_Technology .
  
  # Get the father of each alumnus
  ?alumnus dbp:father ?father .
  ?father rdfs:label ?fatherName .

  # Find the political party of the father
  OPTIONAL {
    ?father dbo:partyAffiliation ?party .
    FILTER(?party = dbr:Italian_People's_Party_(1994))
  }
  
  # Ensure we only get results where the party is specified
  FILTER(BOUND(?party))
}
```",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
994,66,test,"Give me the band member of the person born, that is a musical artist, as the persona of Don Dokken and associated musical artist of the associated musical artist of Watchtower (band) and associated musical artist of the band member, that is a band and a group and an organisation, of Meshuggah.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Don_Dokken> <http://xmlns.com/foaf/0.1/givenName> ?v5 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. <http://dbpedia.org/resource/Watchtower_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v0 <http://dbpedia.org/property/birthName> ?v5 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v6 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Meshuggah> . ?v6 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?bandMember
WHERE {
  # Find Don Dokken's persona and band members
  ?donDokken a dbo:MusicalArtist ;
             foaf:name ""Don Dokken"" .
  
  ?donBandMember dbo:bandMember ?donDokken .

  # Find Watchtower's associated musical artist
  ?watchtower a dbo:Band ;
              dbo:associatedMusicalArtist ?watchtowerArtist .

  # Find Meshuggah's band member who is also part of an organization/group
  ?meshuggah a dbo:Band ;
             dbo:bandMember ?meshuggahMember .
  
  ?meshuggahMember a (dbo:Band|dbo:Organization) .

  # Link the associated musical artist of Watchtower to Meshuggah's band member
  ?watchtowerArtist dbo:associatedMusicalArtist ?meshuggahMember .

  # Find the final associated musical artist
  ?finalAssociatedArtist dbo:associatedMusicalArtist ?donBandMember .
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
356,16,test,"Give me the team of the native, that is a soccer player and a soccer manager, of Wolverhampton and player in the successor of 2014 Sacramento Republic FC season.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/manager> ?v3 . ?v3 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Wolverhampton> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/2014_Sacramento_Republic_FC_season> <http://dbpedia.org/ontology/successor> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v2 <http://dbpedia.org/ontology/team> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?player WHERE {
  ?player a dbo:SoccerPlayer ;
          dbo:nationality dbr:Wolverhampton .
  
  ?player dbo:managerOf ?team .
  ?player dbo:playsFor ?sacramentoSuccessor .

  ?sacramentoSuccessor dbp:succeededBy dbr:San_Jose_Earthquakes ; # Sacramento Republic FC joined MLS as San Jose Earthquakes in 2015
                      dbo:seasonStartYear ""2015""^^xsd:gYear .
  
  FILTER EXISTS { ?player dbo:position ""Manager""@en } .
}
```",4,6,5,2,2,3,2,20,0,0,1,0,0.0,0
92,66,test,"Give me the associated musical artist of the person born, that is an artist, as Jim Sheppard and band of the person born as the birth name of Joseph Michael and band member of the reference, that is an artist, to Nevermore.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?result <http://dbpedia.org/ontology/bandMember> ?v2 . ?v6 <http://dbpedia.org/property/birthName> ""Jim Sheppard""@en . ?v6 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Joseph_Michael> <http://dbpedia.org/property/birthName> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v3 <http://xmlns.com/foaf/0.1/name> ""Nevermore""@en . ?v2 <http://dbpedia.org/property/birthName> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artist1 ?band1 ?artist2 ?band2 ?nevermoreMember
WHERE {
  # Jim Sheppard as an artist and his band
  OPTIONAL { 
    dbr:Jim_Sheppard dbo:associatedBand ?band1 .
    dbr:Jim_Sheppard a dbo:Artist ;
                     rdfs:label ""Jim Sheppard""@en .
  }

  # Joseph Michael's birth name and associated band
  OPTIONAL {
    ?person dbo:birthName ?birthName .
    ?person rdfs:label ""Joseph Michael""@en .
    ?person dbo:associatedBand ?band2 .
  }
  
  # Nevermore member who is an artist
  OPTIONAL {
    ?nevermoreMember dbo:memberOf dbr:Nevermore ;
                     a dbo:Artist .
  }

  FILTER (lang(?artist1) = 'en' && lang(?artist2) = 'en')
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
701,29,test,Give me the parent of Meritamen and spouse of Ramesses II and parent of the child of Ramesses II.,SELECT ?result WHERE { <http://dbpedia.org/resource/Meritamen> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Ramesses_II> . ?result <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ramesses_II> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parentOfMeritamen ?spouseOfRamessesII ?childParent
WHERE {
  # Parent of Meritamen
  OPTIONAL { 
    dbr:Meritamen dbo:mother ?parentOfMeritamen .
    UNION
    dbr:Meritamen dbo:father ?parentOfMeritamen .
  }

  # Spouse of Ramesses II
  OPTIONAL {
    dbr:Ramesses_II dbo:spouse ?spouseOfRamessesII .
  }
  
  # Parent of the child of Ramesses II
  OPTIONAL {
    ?child dbo:parent dbr:Ramesses_II .
    ?child dbo:parent ?childParent .
  }
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
617,53,test,"Give me the parent of the child of Antiochus (son of Antiochus III the Great) and child of the child, that is a royalty, of the successor, that is a royalty, of Antiochus II Theos and spouse of Laodice IV.",SELECT ?result WHERE { <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/child> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> ?v1 . ?v2 <http://dbpedia.org/property/father> ?v3 . ?result <http://dbpedia.org/property/father> ?v2 . <http://dbpedia.org/resource/Antiochus_II_Theos> <http://dbpedia.org/ontology/successor> ?v3 . <http://dbpedia.org/resource/Laodice_IV> <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?grandparent WHERE {
  # Step 1: Identify Antiochus (son of Antiochus III the Great)
  ?antiochus3 a dbo:Person ;
              dbo:child ?antiochus .
  
  # Step 2: Find child of this Antiochus
  ?antiochus dbo:child ?child .

  # Step 3: Find grandchild (child of the child)
  ?child dbo:child ?grandchild .

  # Step 4: Identify successors of Antiochus II Theos who are royalty
  ?antiochus2 a dbo:Person ;
              rdfs:label ""Antiochus II Theos""@en .
  
  ?successor a dbo:Person ;
             dbo:succeededBy ?antiochus2 ;
             dbo:title ?title .
  FILTER(CONTAINS(LCASE(?title), ""king"") || CONTAINS(LCASE(?title), ""queen""))

  # Step 5: Find child of the grandchild who is also a successor's child
  ?grandchild dbo:parent ?successor .

  # Step 6: Identify spouse of Laodice IV
  ?laodice4 a dbo:Person ;
            rdfs:label ""Laodice IV""@en .
  
  ?spouse dbo:spouse ?laodice4 ;
          dbo:parent ?grandchild .

  # Return the grandparent (Antiochus, son of Antiochus III)
  ?antiochus3 rdfs:label ?grandparentLabel .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
161,33,test,"Give me the military force of Rif War and military force of the force, that is a societal event and a military conflict, of the predecessor of Indalecio Prieto.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Rif_War> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Indalecio_Prieto> . ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?rifWarForce ?eventMilitaryConflict ?eventMilitaryForce WHERE {
  # Military force of Rif War
  dbr:Rif_War dbo:militaryParticipant ?rifWarEntity .
  ?rifWarEntity dbo:hasMilitaryUnit ?rifWarForce .

  # Predecessor of Indalecio Prieto as Minister of War
  dbr:Indalecio_Prieto dbo:predecessor ?prietoPredecessor .

  # Societal event and military conflict associated with the predecessor
  ?prietoPredecessor dbo:associatedWith ?eventMilitaryConflict .
  FILTER (dbo:SocietalEvent(?eventMilitaryConflict) && dbo:MilitaryConflict(?eventMilitaryConflict))

  # Military force involved in that event or conflict
  ?eventMilitaryConflict dbo:militaryParticipant ?eventMilitaryEntity .
  ?eventMilitaryEntity dbo:hasMilitaryUnit ?eventMilitaryForce .
}
```",4,6,5,3,2,3,3,71,0,0,34,0,0.0,0
801,26,test,"Give me the producer of the work, that is a musical work and a song and a work, of the professional, that is a musical artist, in Rapper.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/writer> ?v1 . ?v2 <http://dbpedia.org/ontology/producer> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v1 <http://dbpedia.org/property/occupation> ""Rapper""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?producer
WHERE {
  ?work a dbo:Songs ;
        a dbo:MusicalWork .
  
  ?work dbo:artist dbr:RapperArtist ; # Replace with actual rapper artist resource if known
        dbo:producer ?producer .

  ?rapperArtist rdf:type dbo:MusicalArtist ;
                rdfs:label ""Rapper""@en . # This is a general filter for rappers

  FILTER(CONTAINS(LCASE(?rapperArtist), ""rapper""))
}
```",3,7,4,3,1,3,3,71,0,0,956,0,0.0,0
547,46,test,Give me the resting place of the child of the child of William Haliburton and resting place of the actor of Enemy at the Door.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Enemy_at_the_Door> <http://dbpedia.org/property/starring> ?v4 . ?v2 <http://dbpedia.org/ontology/child> ?v1 . ?v4 <http://dbpedia.org/ontology/restingPlace> ?result . ?v2 <http://dbpedia.org/property/father> ""William Haliburton""@en . ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

# Part 1: Resting place of the child of the child of William Haliburton
SELECT DISTINCT ?grandchildRestingPlace WHERE {
  # Find William Haliburton's children
  ?child dbo:parent dbr:William_Haliburton .
  
  # For each child, find their children (i.e., grandchildren of William Haliburton)
  ?grandchild dbo:parent ?child .
  
  # Get the resting place of these grandchildren
  OPTIONAL { ?grandchild dbo:deathPlace ?restingPlace . }
  BIND(IF(BOUND(?restingPlace), ?restingPlace, ""Unknown"") AS ?grandchildRestingPlace)
}

UNION

# Part 2: Resting place of the actor of ""Enemy at the Door""
SELECT DISTINCT ?actorRestingPlace WHERE {
  # Find the film ""Enemy at the Door""
  dbr:Enemy_at_the_Door dbo:starring ?actor .
  
  # Get the resting place of these actors
  OPTIONAL { ?actor dbo:deathPlace ?restingPlace . }
  BIND(IF(BOUND(?restingPlace), ?restingPlace, ""Unknown"") AS ?actorRestingPlace)
}
```",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
294,24,test,"Give me the resting place of the architect of P. D. Houston Jr. House and entity in the birth place, that is a settlement, of Marion James.",SELECT ?result WHERE { <http://dbpedia.org/resource/P._D._Houston_Jr._House> <http://dbpedia.org/ontology/architect> ?v2 . ?result <http://dbpedia.org/ontology/location> ?v0 . <http://dbpedia.org/resource/Marion_James> <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?architectRestingPlace ?entityInBirthplace
WHERE {
  # Find the architect of P.D. Houston Jr. House and their resting place
  ?house dbo:architect ?architect .
  FILTER(STRSTARTS(STR(?house), ""P._D._Houston_Jr._House""))
  
  OPTIONAL { ?architect dbo:deathPlace ?restingPlace . }
  BIND(IF(EXISTS{?architect dbo:deathPlace ?restingPlace}, ?restingPlace, ""Unknown"") AS ?architectRestingPlace)

  # Find the birthplace of Marion James and an entity in that place
  ?marion dbp:birthPlace ?birthPlace .
  FILTER(STRSTARTS(STR(?marion), ""Marion_James""))
  
  ?birthPlace rdf:type dbo:Settlement .

  OPTIONAL { ?entityInBirthplace dbo:location ?birthPlace . }
}
```",4,5,5,2,2,2,3,28,0,0,1,0,0.0,0
492,51,test,"Give me the commander in the war, that is a military conflict and an event, of Frédéric-Georges Herr and person decedent at the capital, that is a settlement, of the country of Khemis Miliana District.",SELECT ?result WHERE { <http://dbpedia.org/resource/Frédéric-Georges_Herr> <http://dbpedia.org/ontology/battle> ?v4 . <http://dbpedia.org/resource/Khemis_Miliana_District> <http://dbpedia.org/ontology/country> ?v1 . ?v4 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/capital> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?commander WHERE {
  ?war a dbo:MilitaryConflict ;
       dbo:event ?event .
  
  ?herr rdfs:label ""Frédéric-Georges Herr""@en ;
        dbo:commander ?commander .

  ?person dbo:deathPlace ?capital ;
          dbo:diedDuring ?event .

  ?district dbr:Khemis_Miliana_District ;
           dbo:administrativeCapital ?capital .
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
92,67,test,"Give me the associated musical artist of the person born, that is an artist, as the actor of Return to Nuke 'Em High Volume 1 and band member of Nevermore and band of the person born as the birth name of Joseph Michael.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/birthName> ?v1 . ?v6 <http://dbpedia.org/property/birthName> ?v0 . <http://dbpedia.org/resource/Return_to_Nuke_'Em_High_Volume_1> <http://dbpedia.org/property/starring> ?v0 . ?v6 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/bandMember> ?v3 . <http://dbpedia.org/resource/Joseph_Michael> <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Nevermore> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?musicalArtist WHERE {
  # Step 1: Find the actor of ""Return to Nuke 'Em High Volume 1""
  ?movie dbo:starring ?actor .
  FILTER (str(?movie) = ""Return_to_Nuke'_Em_High_Volume_1"")

  # Step 2: Check if this actor is also an artist and find their birth name
  OPTIONAL { ?actor dbo:birthName ?birthName . }
  
  # Step 3: Find a member of Nevermore with the same birth name
  ?nevermoreMember dbo:band dbr:Nevermore .
  FILTER (?birthName = ?nevermoreMember dbo:birthName)

  # Step 4: Identify the band associated with this Nevermore member
  OPTIONAL { ?nevermoreMember dbo:associatedBand ?band . }

  # Step 5: Find the musical artist born as Joseph Michael
  ?person dbo:birthName ""Joseph Michael"" .
  ?person dbo:associatedBand ?musicalArtist .
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
488,48,test,"Give me the birth place of the commander in the war, that is a military conflict and an event and a societal event, of Saitō Hajime and administration of the father of Emperor Go-Mizunoo.",SELECT ?result WHERE { <http://dbpedia.org/resource/Saitō_Hajime> <http://dbpedia.org/ontology/battle> ?v3 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Emperor_Go-Mizunoo> <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/property/leader> ?v1 . ?v3 <http://dbpedia.org/ontology/commander> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlaceSaito ?administrationToyotomi
WHERE {
  # Saitō Hajime's birthplace
  dbr:Saitō_Hajime dbo:birthPlace ?birthPlaceSaito .

  # Toyotomi Hideyori's administration (related to his father, Toyotomi Hideyoshi)
  dbr:Toyotomi_Hideyori dbo:father dbr:Toyotomi_Hideyoshi .
  OPTIONAL { 
    dbr:Siege_of_Osaka dbo:participant dbr:Toyotomi_Hideyori . # Administration related event
    ?administrationToyotomi dbo:event dbr:Siege_of_Osaka .
  }
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
232,59,test,"Give me the child of the person born as the birth name of Jon Pertwee and actor of the claim to fame, that is a film and a military conflict, of the professional in Actor, narrator and producer.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/starring> ?result . ?v2 <http://dbpedia.org/property/birthName> ?v3 . ?v0 <http://dbpedia.org/property/occupation> ""Actor, narrator and producer""@en . ?v0 <http://dbpedia.org/ontology/knownFor> ?v5 . ?v2 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/property/birthName> ?v3 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

# Step 1: Find Jon Pertwee's birth name
SELECT ?birthName WHERE {
    dbr:Jon_Pertwee dbo:birthName ?birthName .
}

# Step 2: Identify an actor known for a film and a military conflict
SELECT DISTINCT ?actor WHERE {
    ?actor a dbo:Actor ;
           dbo:claimToFame ?film, ?conflict .
    FILTER (CONTAINS(LCASE(STR(?film)), ""film"") && CONTAINS(LCASE(STR(?conflict)), ""military conflict""))
}

# Step 3: Find the child of the person identified by Jon Pertwee's birth name
SELECT DISTINCT ?child WHERE {
    # Assuming we have found the birth name and actor from previous steps
    BIND(dbr:Jon_Pertwee AS ?person) # Replace with actual result from step 1
    ?person dbo:child ?child .
}
```

Note: The above SPARQL query is structured to be executed in parts. You will need to replace `BIND(dbr:Jon_Pertwee AS ?person)` with the actual resource identified by Jon Pertwee's birth name from Step 1.",6,8,7,3,2,3,3,71,0,0,1,0,0.0,0
182,20,test,Give me the war of the work of Gotabhaya Rajapaksa and war of Mahesh Senanayake and entity in Sri Lanka.,SELECT ?result WHERE { <http://dbpedia.org/resource/Mahesh_Senanayake> <http://dbpedia.org/ontology/battle> ?result . ?v3 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Gotabhaya_Rajapaksa> . ?v3 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Sri_Lanka> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?work ?label ?abstract ?sriLankaEntity ?entityLabel
WHERE {
  VALUES ?author { 
    dbr:Gotabhaya_Rajapaksa 
    dbr:Mahesh_Senanayake 
  }
  
  ?work dbo:author ?author .
  OPTIONAL { ?work rdfs:label ?label . FILTER (lang(?label) = 'en') }
  OPTIONAL { ?work dbo:abstract ?abstract . FILTER (lang(?abstract) = 'en' && CONTAINS(LCASE(?abstract), ""war"")) }

  # Find entities related to Sri Lanka
  ?sriLankaEntity a dbo:Place ;
                  dbo:country dbr:Sri_Lanka .
  OPTIONAL { ?sriLankaEntity rdfs:label ?entityLabel . FILTER (lang(?entityLabel) = 'en') }
  
  # Optional: Link works or authors to Sri Lanka entities
  OPTIONAL {
    ?work dbo:location ?sriLankaEntity .
  }

}
ORDER BY ?author ?label
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
161,52,test,"Give me the military force of the force, that is a societal event and an event and a military conflict, of the person decedent at Francoist Spain and commander in Biscay Campaign and military force of the force, that is a societal event and a military conflict, of Francisco Largo Caballero.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v5 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . ?v3 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Francoist_Spain> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v5 . ?v2 <http://dbpedia.org/ontology/commander> ?v3 . <http://dbpedia.org/resource/Biscay_Campaign> <http://dbpedia.org/ontology/commander> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?militaryForce
WHERE {
  # Military force related to Francoist Spain during the Biscay Campaign
  ?force1 dbo:militaryConflict dbr:Biscay_Campaign ;
          dbo:societalEvent ?event1 .

  # Francisco Largo Caballero's military involvement
  ?force2 dbo:militaryConflict ?conflict ;
          dbo:commander dbr:Francisco_Largo_Caballero .

  # Ensure the same military force is involved in both contexts
  FILTER (?force1 = ?force2)
  
  BIND(?force1 AS ?militaryForce)
}
```",6,11,7,3,3,3,3,71,0,0,3,0,0.0,0
391,20,test,"Give me the native of Compton, California and actor of the claim to fame, that is a work, of Michael Ballhaus.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Compton,_California> . <http://dbpedia.org/resource/Michael_Ballhaus> <http://dbpedia.org/ontology/knownFor> ?v2 . ?v2 <http://dbpedia.org/ontology/starring> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?actor ?work WHERE {
  ?actor a dbo:Actor ;
         dbo:nationality dbr:United_States ;
         dbo:birthPlace dbr:Compton,_California .
  
  ?work dbo:director ?director ;
        dbo:starring ?actor .

  ?director dbo:occupation dbr:Cinematographer ;
            dbo:name ""Michael Ballhaus""@en .
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
345,16,test,"Give me the figure known as the nickname of FC Vaduz and team of the person born, that is a soccer player and a soccer manager, on 1978-09-15.","SELECT ?result WHERE { <http://dbpedia.org/resource/FC_Vaduz> <http://dbpedia.org/property/nickname> ?v2 . ?result <http://dbpedia.org/property/nickname> ?v2 . ?result <http://dbpedia.org/ontology/manager> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v3 <http://dbpedia.org/ontology/birthDate> ""1978-09-15""^^<http://www.w3.org/2001/XMLSchema#date> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?nickname ?team WHERE {
  # Part 1: Nickname of FC Vaduz
  OPTIONAL {
    dbr:FC_Vaduz dbo:nickname ?nickname .
  }

  # Part 2: Team of a soccer player and manager born on 1978-09-15
  OPTIONAL {
    ?person dbo:birthDate ""1978-09-15""^^xsd:date ;
            (dbo:occupation|dbp:occupation) dbr:Soccer_player ;
            (dbo:occupation|dbp:occupation) dbr:Soccer_manager .
    ?person dbp:currentTeam ?team .
  }
}
```",4,6,5,2,2,3,2,20,0,0,1,0,0.0,0
232,25,test,"Give me the native of the residence, that is a settlement and British, of Sylvie Bermann and actor of Dog Soldiers (film).",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . <http://dbpedia.org/resource/Dog_Soldiers_(film)> <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Sylvie_Bermann> <http://dbpedia.org/property/residence> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?native WHERE {
  # Find Sylvie Bermann's residence that is a settlement in Britain
  ?sylvieBermann dbo:nationality dbr:France ;
                dbo:residence ?residence .
  
  ?residence rdf:type dbo:Settlement ;
             dbp:country dbr:United_Kingdom .

  # Find the actor of Dog Soldiers
  ?dogSoldiers dbo:starring ?actor .
  FILTER (str(?dogSoldiers) = ""Dog_Soldiers_(film)"")

  # Find natives of the settlement
  ?native dbo:nativePlace ?residence .
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
404,50,test,"Give me the parent of the child, that is a royalty, of the parent, that is a royalty, of Prince George William of Hanover and child of the father of Ernest Augustus, Duke of Brunswick.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?v4 . ?result <http://dbpedia.org/ontology/child> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v3 . <http://dbpedia.org/resource/Prince_George_William_of_Hanover> <http://dbpedia.org/ontology/parent> ?v0 . <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/property/father> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?finalParent WHERE {
  # Step 1: Identify Prince George William of Hanover
  ?princeGeorgeWilliam a dbo:Person ;
                      foaf:name ""Prince George William of Hanover""@en .

  # Step 2: Find his parent who is a royalty
  ?parentRoyal dbo:child ?princeGeorgeWilliam .
  ?parentRoyal a dbo:Monarch .

  # Step 3: Identify the child of this royal parent
  ?child1 dbo:parent ?parentRoyal .

  # Step 4: Determine the father of Ernest Augustus, Duke of Brunswick
  ?ernestAugustus a dbo:Person ;
                 foaf:name ""Ernest Augustus, Duke of Brunswick""@en .
  ?father dbp:spouse ?mother .
  ?father dbo:child ?ernestAugustus .

  # Step 5: Find the child of this father
  ?child2 dbo:parent ?father .

  # Step 6: Identify the parent of this child who is a royalty
  ?royalParent dbo:child ?child2 .
  ?royalParent a dbo:Monarch .

  # Step 7: Determine the parent of the initial child (from step 3)
  ?finalParent dbo:parent ?child1 .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
16,64,test,Give me the professional in Actress and person born as the birth name of the alumnus of Ohio State University and spouse of the person born as the birth name of Ted McGinley.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Ohio_State_University> . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v2 <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/property/birthName> ?v3 . ?result <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/property/occupation> ""Actress""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?actress WHERE {
  # Step 1: Find Ted McGinley's birth name
  ?tedMcGinley a dbo:Person ;
               foaf:name ""Ted McGinley"" ;
               dbo:birthName ?tedBirthName .

  # Step 2: Find spouse of Ted McGinley using his birth name
  ?spouse a dbo:Person ;
          dbo:spouse ?tedMcGinley ;
          dbo:birthName ?tedBirthName .

  # Step 3: Find alumnus of Ohio State University with the same birth name as Ted McGinley's spouse
  ?alumnus a dbo:Person ;
           dbo:almaMater <http://dbpedia.org/resource/Ohio_State_University> ;
           dbo:birthName ?tedBirthName .

  # Step 4: Find professional actress with the same birth name as the alumnus
  ?actress a dbo:Person ;
           dbo:profession dbo:Actress ;
           dbo:birthName ?alumnusBirthName .
  
  FILTER (?alumnusBirthName = ?tedBirthName)
}
```",7,7,8,3,3,3,3,71,0,0,1,0,0.0,0
184,34,test,"Give me the parent of Archduchess Ilona of Austria and parent of the native of the landmark at elevation, that is a settlement, of 96.0.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/child> ?v1 . ?v2 <http://dbpedia.org/ontology/elevation> ""96.0""^^<http://www.w3.org/2001/XMLSchema#double> . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Ilona_of_Austria> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

# Query for the parent(s) of Archduchess Ilona of Austria
SELECT ?parent WHERE {
  dbr:Ilona_of_Austria dbo:parent ?parent .
}

UNION

# Query for the native of a landmark at elevation 96.0 that is a settlement
SELECT ?native WHERE {
  ?landmark a dbo:Place ;
            dbo:elevation ""96.0""^^xsd:float ;
            rdf:type dbr:Category:Settlements .
  ?landmark dbo:nativeOf ?native .
}
```",4,5,5,3,2,3,3,71,0,0,2,0,0.0,0
617,61,test,"Give me the parent of the child of the commander in Battle of Panium and spouse of the child of the successor, that is a royalty, of Antiochus (son of Antiochus III the Great).",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://dbpedia.org/ontology/child> ?v3 . <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/successor> ?v0 . <http://dbpedia.org/resource/Battle_of_Panium> <http://dbpedia.org/ontology/commander> ?v1 . ?result <http://dbpedia.org/ontology/child> ?v3 . ?v0 <http://dbpedia.org/ontology/child> ?v5 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parent WHERE {
  # Step 1: Identify the commander in the Battle of Panium
  ?battle dbo:eventLocation dbr:Battle_of_Panium .
  ?commander dbo:commanderOf ?battle .

  # Step 2: Find the child of this commander
  ?child dbo:parent ?commander .

  # Step 3: Identify the parent of this child
  ?parent dbo:child ?child .

  # Step 4: Identify Antiochus (son of Antiochus III the Great) and his successor
  dbr:Antiochus_III_the_Great dbo:son dbr:Antiochus_IV_Epiphanes .
  ?successor dbo:succeededBy dbr:Antiochus_IV_Epiphanes .

  # Step 5: Find the child of this successor
  ?childOfSuccessor dbo:parent ?successor .

  # Step 6: Identify the spouse of this child, ensuring they are royalty
  ?spouse dbo:spouse ?childOfSuccessor .
  FILTER EXISTS { ?spouse a dbo:Monarch } 

  # Ensure the parent from step 3 is the same as the spouse found in step 6
  FILTER (?parent = ?spouse)
}
```",6,7,7,3,2,3,3,71,0,0,2,0,0.0,0
659,56,test,"Give me the commander in Battle of Leipzig and commander in the force of Arthur Wellesley, 1st Duke of Wellington and military force of the force, that is a societal event and an event and a military conflict, of the reference to Rutger Jan Schimmelpenninck.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/ontology/commander> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Battle_of_Leipzig> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Rutger Jan Schimmelpenninck""@en . ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Arthur_Wellesley,_1st_Duke_of_Wellington> . ?result <http://dbpedia.org/ontology/battle> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commanderLeipzig ?welshCommander ?societalEvent ?militaryConflict
WHERE {
  # Commander in the Battle of Leipzig
  dbr:Battle_of_Leipzig dbo:commander ?commanderLeipzig .

  # Arthur Wellesley's military force and its commander
  dbr:Arthur_Wellesley_1st_Duke_of_Wellington dbo:militaryForce ?welshForce .
  ?welshForce dbo:commander ?welshCommander .

  # Societal event involving Rutger Jan Schimmelpenninck
  ?societalEvent dbo:participant dbr:Rutger_Jan_Schimmelpenninck ;
                a dbo:SocietalEvent .

  # Military conflict involving Rutger Jan Schimmelpenninck
  ?militaryConflict dbo:participant dbr:Rutger_Jan_Schimmelpenninck ;
                   a dbo:MilitaryConflict .
}
```",6,9,7,3,3,3,3,71,0,0,6,0,0.0,0
747,34,test,"Give me the band of Shèna and person born on the birth date of the person decedent, that is an athlete and a soccer player, at Zolotonosha.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v2 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Zolotonosha> . ?v2 <http://dbpedia.org/ontology/birthDate> ?v1 . <http://dbpedia.org/resource/Shèna> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/birthDate> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX wd: <http://www.wikidata.org/entity/>
PREFIX wdt: <http://www.wikidata.org/prop/direct/>

SELECT DISTINCT ?person ?band WHERE {
  # Step 1: Find Shèna's band
  dbr:Shèna dbo:memberOf ?band .

  # Step 2: Identify a decedent and their birth date
  ?decedent wdt:P570 ?deathDate ;
           wdt:P569 ?birthDateDecedent .
  
  FILTER EXISTS { ?decedent wdt:P31 wd:Q5 . } # Ensure it's a human

  # Step 3: Find another person born on the same date as the decedent
  ?person wdt:P569 ?birthDatePerson ;
          wdt:P570 ?deathDatePerson .
  
  FILTER (?birthDatePerson = ?birthDateDecedent)
  FILTER EXISTS { ?person wdt:P31 wd:Q5 . } # Ensure it's a human

  # Step 4: Check if the person is an athlete and a soccer player
  ?person wdt:P106 wd:Q33999 ; # Athlete
          wdt:P139 wd:Q7399 .   # Soccer player

  # Step 5: Ensure connection to Zolotonosha
  OPTIONAL { ?person dbo:birthPlace dbr:Zolotonosha . }
  
  FILTER EXISTS { ?person dbo:birthPlace dbr:Zolotonosha . } # Must be born in Zolotonosha

}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
994,69,test,"Give me the associated musical artist of the band member, that is a band and a group and an organisation, of Meshuggah and associated musical artist of the associated musical artist of the reference to Watchtower and band member of the person born, that is a musical artist, as the persona of Don Dokken.","SELECT ?result WHERE { ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v4 <http://xmlns.com/foaf/0.1/name> ""Watchtower""@en . <http://dbpedia.org/resource/Don_Dokken> <http://xmlns.com/foaf/0.1/givenName> ?v5 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v0 <http://dbpedia.org/property/birthName> ?v5 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v6 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v6 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Meshuggah> . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?associatedArtist1 ?associatedArtist2 WHERE {
  # Step 1: Meshuggah band member who is also a band/group and an organization
  ?meshuggahMember dbo:memberOf dbr:Meshuggah .
  ?meshuggahMember dbo:bandOrMusicalGroup dbr:SomeBand ; 
                   dbo:organization dbr:SomeOrganization .

  # Step 2: Associated musical artist of Meshuggah's band member
  ?associatedArtist1 dbo:associatedMusicalArtist ?meshuggahMember .

  # Step 3: Associated musical artist of Watchtower
  ?watchtowerAssociatedArtist dbo:associatedMusicalArtist dbr:Watchtower .

  # Step 4: Band member of Don Dokken persona
  ?donDokkenPersona dbo:birthPlace ?place ;
                   a dbo:MusicalArtist .
  ?bandMemberOfDonDokken dbo:memberOf ?donDokkenPersona .

  # Step 5: Associated musical artist of band member from step 4
  ?associatedArtist2 dbo:associatedMusicalArtist ?bandMemberOfDonDokken .

}
```",8,12,9,3,3,3,3,71,0,0,1,0,0.0,0
10,28,test,"Give me the professional in the birth name of Sharon Kao and associated musical artist of the person born, that is an artist, as Matt Colton and band member of the person born, that is an artist, as Luke Francis Vibert.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/property/occupation> ?v5 . ?v1 <http://dbpedia.org/property/birthName> ""Matt Colton""@en . ?v3 <http://dbpedia.org/property/birthName> ""Luke Francis Vibert""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Sharon_Kao> <http://dbpedia.org/property/birthName> ?v5 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?professionalName ?associatedArtist ?bandMember 
WHERE {
  # Find Sharon Kao's birth name and professional name
  VALUES (?sharonKao) { dbr:Sharon_Kao }
  ?sharonKao dbo:birthName ?birthName .
  ?sharonKao rdfs:label ?professionalName .

  # Find associated musical artist Matt Colton
  OPTIONAL {
    ?association dbo:artist ?associatedArtist .
    ?association dbo:relatedMusicalArtist dbr:Matt_Colton .
    FILTER(?associatedArtist = ?sharonKao)
  }

  # Find band member Luke Francis Vibert
  OPTIONAL {
    ?bandMembership dbo:member ?bandMember .
    ?bandMembership dbo:artist ?sharonKao .
    ?bandMembership dbo:relatedBandMember dbr:Luke_Francis_Vibert .
  }
}
```",6,8,7,2,3,2,3,28,0,0,1,0,0.0,0
16,48,test,Give me the person born as the birth name of Gigi Rice and spouse of the person born as the birth name of Ted McGinley.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Gigi_Rice> <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/property/birthName> ?v3 . ?result <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person
WHERE {
  ?gigi dbo:birthName ""Gigi Rice"" .
  ?ted dbo:birthName ""Ted McGinley"" .
  ?ted dbo:spouse ?person .
  ?person dbo:birthName ?birthName .
  FILTER (?birthName = ?gigi)
}
```",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
328,52,test,Give me the commander in the force of Ferenc Szálasi and awardee of the award of the commander in Volcano and Ryukyu Islands campaign and leader of People's Commissariat of Defense of the Soviet Union.,SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://dbpedia.org/property/awards> ?v2 . <http://dbpedia.org/resource/Volcano_and_Ryukyu_Islands_campaign> <http://dbpedia.org/ontology/commander> ?v3 . ?v5 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Ferenc_Szálasi> . ?result <http://dbpedia.org/property/awards> ?v2 . <http://dbpedia.org/resource/People's_Commissariat_of_Defense_of_the_Soviet_Union> <http://dbpedia.org/ontology/leader> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person dbo:commanderOf dbr:Ferenc_Szálasi .
  ?person dbo:awardReceived dbr:Volcano_and_Ryukyu_Islands_campaign_award .
  ?person dbo:leaderOf dbr:People's_Commissariat_of_Defence_of_the_Soviet_Union .
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
314,20,test,Give me the awardee of the award of Sergei Makovetsky and person deceased at Madrid and commander in Spanish Civil War.,SELECT ?result WHERE { <http://dbpedia.org/resource/Spanish_Civil_War> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/restingPlace> <http://dbpedia.org/resource/Madrid> . ?result <http://dbpedia.org/property/awards> ?v3 . <http://dbpedia.org/resource/Sergei_Makovetsky> <http://dbpedia.org/property/awards> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?person WHERE {
  # Sergei Makovetsky's awards
  ?award dbo:recipient dbr:Sergei_Makovetsky .
  
  # Person who received the same award
  ?award dbo:recipient ?person .

  # Deceased at Madrid
  ?person dbo:deathPlace dbr:Madrid .

  # Commander in the Spanish Civil War
  ?person dbo:occupation dbr:Commander_in_the_Spanish_Civil_War .
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
712,16,test,Give me the capital of the country of Armed Forces of South Russia and resting place of the awardee of Hero of the Soviet Union.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Armed_Forces_of_South_Russia> <http://dbpedia.org/ontology/country> ?v2 . ?v2 <http://dbpedia.org/ontology/capital> ?result . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Hero_of_the_Soviet_Union> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?capital ?heroName ?restingPlace WHERE {
  # Find the capital of Ukraine
  dbr:Ukraine dbo:capital ?capital .

  # Find individuals who were awarded Hero of the Soviet Union and their resting places
  ?person dbo:award ?award .
  ?award rdfs:label ""Hero of the Soviet Union""@en .
  OPTIONAL { ?person dbo:deathPlace ?restingPlace . }
  
  # Return the name of the hero for clarity
  ?person foaf:name ?heroName .
}
```",4,4,5,2,2,3,2,20,0,901,1,0.0,0.0,0
547,25,test,Give me the resting place of Simon Cadell and resting place of the awardee of Knight Grand Cross of the Order of St Michael and St George.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_St_Michael_and_St_George> . ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Simon_Cadell> <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?simonCadellBurial ?awardeeName ?awardeeBurial WHERE {
  # Simon Cadell's burial place
  OPTIONAL {
    dbr:Simon_Cadell dbo:deathPlace ?simonCadellBurial .
  }

  # Awardee of Knight Grand Cross of the Order of St Michael and St George
  OPTIONAL {
    ?awardee dbo:honours dbr:Knight_Grand_Cross_of_the_Order_of_St_Michael_and_St_George ;
             rdfs:label ?awardeeName .
    ?awardee dbo:deathPlace ?awardeeBurial .
  }
}
```",3,3,4,2,2,3,3,71,0,27,2,0.0,0.0,0
659,31,test,"Give me the commander in the force of the native, that is an office holder, of Kingdom of Ireland and commander in Battle of Leipzig.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/commander> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Battle_of_Leipzig> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Kingdom_of_Ireland> . ?v0 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name WHERE {
  ?person a dbo:MilitaryPerson .
  ?person dbo:officeHolderOf dbr:Kingdom_of_Ireland .
  ?person dbo:commanderInBattle dbr:Battle_of_Leipzig .

  OPTIONAL { ?person rdfs:label ?name FILTER (lang(?name) = 'en') }
}
```",4,5,5,3,2,3,3,71,0,0,19,0,0.0,0
328,22,test,"Give me the awardee of Order of Suvorov and leader of the office, that is a government agency, of Joseph Stalin.",SELECT ?result WHERE { <http://dbpedia.org/resource/Joseph_Stalin> <http://dbpedia.org/property/office> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v1 <http://dbpedia.org/ontology/leader> ?result . ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Order_of_Suvorov> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?awardee ?office WHERE {
  VALUES (?stalin) { dbr:Joseph_Stalin }
  
  # Check if Joseph Stalin was awarded the Order of Suvorov
  ?award dbo:recipient ?stalin .
  ?award rdf:type dbr:Order_of_Suvorov .

  # Find the office he led that is a government agency
  ?office dbo:headOf ?stalin .
  ?office rdf:type ?agencyType .
  
  FILTER EXISTS {
    ?agencyType rdfs:subClassOf* dbo:GovernmentAgency .
  }
  
  BIND(?stalin AS ?awardee)
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
339,16,test,Give me the child of the child of Christian IX of Denmark and father of the child of Grand Duchess Elena Vladimirovna of Russia.,SELECT ?result WHERE { <http://dbpedia.org/resource/Grand_Duchess_Elena_Vladimirovna_of_Russia> <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://dbpedia.org/property/father> ?result . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Christian_IX_of_Denmark> . ?v2 <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Find Christian IX's child
  ?christianIXChild dbo:child dbr:Christian_IX_of_Denmark .
  
  # Find that child's own child (Christian IX's grandchild)
  ?grandchild dbo:parent ?christianIXChild .

  # Find the father of this grandchild
  ?father dbo:spouse ?mother .
  ?mother dbo:parent ?grandchild .

  # Find Grand Duchess Elena Vladimirovna's child
  ?elenasChild dbo:child dbr:Grand_Duchess_Elena_Vladimirovna_of_Russia .

  # Find the father of that child
  ?father2 dbo:spouse ?mother2 .
  ?mother2 dbo:parent ?elenasChild .

  # Ensure both conditions are met by the same person
  FILTER (?father = ?father2)
}
```",4,4,5,2,2,3,2,20,0,0,1,0,0.0,0
177,9,test,"Give me the headquarter of the office, that is an organisation, of Joo Don-sik and entity in the residence of Alexander Gamelin.",SELECT ?result WHERE { <http://dbpedia.org/resource/Alexander_Gamelin> <http://dbpedia.org/property/residence> ?v1 . <http://dbpedia.org/resource/Joo_Don-sik> <http://dbpedia.org/property/office> ?v3 . ?v3 <http://dbpedia.org/ontology/location> ?result . ?result <http://dbpedia.org/ontology/country> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?headquarters WHERE {
  ?organization dbo:spouse ?person .
  ?person foaf:name ""Joo Don-sik""@en .
  
  ?organization dbp:headquarters ?headquarters .

  ?gamelin dbo:residence ?residence .
  ?gamelin foaf:name ""Alexander Gamelin""@en .

  FILTER (?headquarters = ?residence)
}
```",4,5,5,2,2,2,2,9,0,0,1,0,0.0,0
617,47,test,"Give me the child of the child, that is a royalty, of Seleucus II Callinicus and spouse of the child of the successor, that is a royalty, of Antiochus (son of Antiochus III the Great).",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seleucus_II_Callinicus> . ?v4 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/father> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/child> ?v4 . <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/successor> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?grandchild WHERE {
  # Seleucus II Callinicus and his children
  ?seleucus2 dbo:spouse ?mother .
  ?seleucus2 rdfs:label ""Seleucus II Callinicus""@en .

  # Children of Seleucus II Callinicus who are royalty
  ?child dbo:parent ?seleucus2 ;
         dbo:royalty true ;
         dbo:spouse ?spouse .

  # Spouse's parent (successor) and their relationship to Antiochus III the Great
  ?spouseParent dbo:parent ?spouse .
  ?antiochusIII rdfs:label ""Antiochus III the Great""@en .
  ?antiochusIII dbo:succesor ?successor .
  ?successor rdfs:label ?successorLabel .

  # Check if spouse's parent is a successor of Antiochus III and royalty
  FILTER(CONTAINS(LCASE(?successorLabel), ""antiochus"") && EXISTS { ?spouseParent dbo:royalty true })

  # Child of the spouse (grandchild of Seleucus II Callinicus)
  ?grandchild dbo:parent ?spouse .
}
```",5,7,6,3,2,3,3,71,0,0,4,0,0.0,0
492,60,test,"Give me the person decedent at the capital, that is a settlement, of the country of Khemis Miliana District and person decedent at the work of the author of French Algeria.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . ?v2 <http://dbpedia.org/property/author> ?v3 . <http://dbpedia.org/resource/Khemis_Miliana_District> <http://dbpedia.org/ontology/country> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://dbpedia.org/ontology/capital> ?v1 . <http://dbpedia.org/resource/French_Algeria> <http://dbpedia.org/property/author> ?v3 . ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?personDecedentCapital ?personDecedentWork
WHERE {
  # Find the capital of Khemis Miliana District
  dbr:Khemis_Miliana_District dbo:capital ?capital .
  
  # Ensure the capital is a settlement
  ?capital rdf:type dbo:Settlement .

  # Find person who died at this capital
  ?deathCapital dbo:place ?capital ;
               dbo:deceased ?personDecedentCapital .

  # Find works related to ""French Algeria""
  ?work dbo:author ?author .
  ?work rdfs:label ?workLabel .
  
  FILTER(CONTAINS(LCASE(?workLabel), ""french algeria""))

  # Find person who died at this work
  ?deathWork dbo:place ?work ;
             dbo:deceased ?personDecedentWork .
}
```",6,7,7,3,2,3,3,71,0,0,16,0,0.0,0
391,57,test,"Give me the native of Compton, California and actor of the claim to fame, that is a work, of the spouse of Sherry Hormann and actor of the movie, that is a movie and a work and a television show, with Roz Ryan.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Sherry_Hormann> <http://dbpedia.org/ontology/spouse> ?v0 . ?v0 <http://dbpedia.org/ontology/knownFor> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v5 <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Compton,_California> . ?v3 <http://dbpedia.org/property/starring> ?result . ?v3 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Roz_Ryan> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?actor ?nativePlace WHERE {
  # Step 1: Identify Sherry Hormann's spouse
  ?spouse a dbo:Person ;
          dbo:spouse dbr:Sherry_Hormann .

  # Step 2: Determine the claim to fame (work) of the spouse
  ?work dbo:actor ?spouse ;
        a dbo:Film ; # Assuming it is a film, can be adjusted if needed

  # Step 3: Find out who acted in that work
  ?work dbo:starring ?actor .

  # Step 4: Identify the movie with Roz Ryan and the actor from step 3
  ?movie dbo:starring ?actor ;
         dbo:starring dbr:Roz_Ryan ;
         a dbo:Film .

  # Step 5: Determine if the actor is native to Compton, California
  ?actor dbo:nativePlace dbr:Compton,_California .
}
```",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
767,45,test,"Give me the alma mater of Carl L. Nippert and entity in Baden-Württemberg and reference to the alter ego of the persona, that is a fictional character, of Matthew Burland.","SELECT ?result WHERE { <http://dbpedia.org/resource/Carl_L._Nippert> <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v0 <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://dbpedia.org/ontology/state> <http://dbpedia.org/resource/Baden-Württemberg> . ?v0 <http://dbpedia.org/property/alterEgo> ""Matthew Burland""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

# Query for Carl L. Nippert's alma mater
SELECT ?almaMater WHERE {
  dbr:C_L_Nippert dbo:almaMater ?almaMater .
}

UNION

# Query for an entity in Baden-Württemberg
SELECT ?entity WHERE {
  ?entity dbp:location dbr:Baden-Württemberg .
}

UNION

# Query for Matthew Burland's alter ego (fictional character)
SELECT ?alterEgo WHERE {
  dbr:Matthew_Burland dbo:fictionalCharacter ?alterEgo .
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
92,26,test,"Give me the associated musical artist of the person born, that is an artist, as the actor of Return to Nuke 'Em High Volume 1.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Return_to_Nuke_'Em_High_Volume_1> <http://dbpedia.org/property/starring> ?v1 . ?v2 <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?actor ?artistName WHERE {
  ?film dbo:title ""Return to Nuke 'Em High Volume 1""@en .
  ?film dbo:starring ?actor .
  ?actor foaf:birthday ?birthday .
  OPTIONAL { 
    ?actor dbo:associatedBand ?band .
    ?band foaf:name ?artistName .
  }
}
```",3,4,4,3,1,3,3,71,0,0,126,0,0.0,0
281,46,test,"Give me the entity in the birth place, that is a country, of Bob Heffron and war of the awardee of the award of Jonathon Band.",SELECT ?result WHERE { <http://dbpedia.org/resource/Bob_Heffron> <http://dbpedia.org/ontology/birthPlace> ?v4 . <http://dbpedia.org/resource/Jonathon_Band> <http://dbpedia.org/property/awards> ?v2 . ?v1 <http://dbpedia.org/property/awards> ?v2 . ?result <http://dbpedia.org/ontology/place> ?v4 . ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?country ?war 
WHERE {
  # Find Bob Heffron's birth place that is a country
  ?bobHeffron dbo:birthPlace ?birthPlace .
  FILTER (isLiteral(?birthPlace) && strstarts(str(?birthPlace), ""Country: "")) .
  BIND (replace(str(?birthPlace), ""Country: "", """") AS ?country)

  # Find Jonathon Band's award and the associated war
  ?jonathanBand dbo:award ?award .
  ?award dbo:war ?war .

}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
161,55,test,"Give me the military force of the force, that is a societal event and a military conflict, of Francisco Largo Caballero and commander in the force, that is an event, of Emilio Mola and military force of the force, that is a societal event and an event and a military conflict, of Francisco Franco.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v5 . ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Franco> . ?v5 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Emilio_Mola> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?force1 ?force2 ?force3 WHERE {
  # Francisco Largo Caballero's military force that is a societal event and a military conflict
  ?force1 dbo:militaryConflict ?conflict1 .
  ?conflict1 rdf:type dbo:SocietalEvent .
  ?conflict1 dbo:participant dbr:Franco_Largo_Caballero .

  # Emilio Mola's commander in the force that is an event
  ?force2 dbo:event ?event2 .
  ?commander2 dbo:commanderOf ?force2 .
  ?commander2 rdfs:label ""Emilio Mola""@en .

  # Francisco Franco's military force that is a societal event, an event, and a military conflict
  ?force3 dbo:militaryConflict ?conflict3 .
  ?conflict3 rdf:type dbo:SocietalEvent .
  ?conflict3 dbo:event ?event3 .
  ?conflict3 dbo:participant dbr:Franco .

  # Ensure the forces are distinct entities
  FILTER(?force1 != ?force2 && ?force1 != ?force3 && ?force2 != ?force3)
}
```",6,12,7,2,3,3,3,71,0,0,32,0,0.0,0
378,45,test,"Give me the war of Joaquín Blake and war of Carl Pontus Gahn and claim to fame of the commander in the war, that is a military conflict and a societal event and an event, of Thomas Trigge.",SELECT ?result WHERE { <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/knownFor> ?result . ?v0 <http://dbpedia.org/ontology/commander> ?v1 . <http://dbpedia.org/resource/Joaquín_Blake> <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Thomas_Trigge> <http://dbpedia.org/ontology/battle> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war ?claimToFame
WHERE {
  ?war a dbo:MilitaryConflict ;
       a dbo:SocietalEvent ;
       a dbo:Event .

  ?joaquin dbo:participatedIn ?war .
  ?carl dbo:participatedIn ?war .

  FILTER (?joaquin = dbr:Joaquín_Blake || ?carl = dbr:Carl_Pontus_Gahn)

  ?thomas dbo:commander ?war ;
          dbo:claimToFame ?claimToFame .
  
  FILTER (?thomas = dbr:Thomas_Trigge)
}
```",5,8,6,3,3,3,3,71,0,0,2,0,0.0,0
161,32,test,"Give me the military force of the force, that is a societal event and an event and a military conflict, of Francisco Franco and military force of the force, that is a societal event and a military conflict, of Francisco Largo Caballero.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Franco> . ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?francoForce ?caballeroForce WHERE {
  # Francisco Franco's military force
  dbr:Francisco_Franco dbo:militaryConflict [
    a dbo:MilitaryConflict ;
    dbo:societalEvent ?civilWar .
  ] ;
  dbo:militaryForce ?francoForce .

  # Francisco Largo Caballero's military force
  dbr:Francisco_Largo_Caballero dbo:militaryConflict [
    a dbo:MilitaryConflict ;
    dbo:societalEvent ?civilWar .
  ] ;
  dbo:militaryForce ?caballeroForce .

  # Ensure the societal event is the Spanish Civil War
  ?civilWar rdfs:label ""Spanish Civil War""@en .
}
```",4,9,5,2,2,3,3,71,0,0,514,0,0.0,0
617,54,test,"Give me the parent of Nysa (wife of Pharnaces I of Pontus) and spouse of the child of the successor, that is a royalty, of Antiochus (son of Antiochus III the Great) and child of the child, that is a royalty, of Seleucus II Callinicus.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Nysa_(wife_of_Pharnaces_I_of_Pontus)> . ?v0 <http://dbpedia.org/ontology/child> ?v5 . ?result <http://dbpedia.org/property/father> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seleucus_II_Callinicus> . <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/successor> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?parentOfNysa ?spouseOfSuccessorChild ?royalDescendantOfSeleucus
WHERE {
  # Find Nysa and her parent
  ?nysa rdfs:label ""Nysa (wife of Pharnaces I of Pontus)""@en .
  ?nysa dbo:spouse ?pharnacesI .
  ?pharnacesI dbo:fatherOrMonarch ?parentOfNysa .

  # Find Antiochus and his successor
  ?antiochus rdfs:label ""Antiochus (son of Antiochus III the Great)""@en .
  ?successor dbo:succeededBy ?antiochus .
  ?successorChild dbo:child ?successor .
  FILTER EXISTS { ?successorChild a dbo:Monarch } # Ensure royalty

  # Find spouse of successor's child
  ?spouseOfSuccessorChild dbo:spouse ?successorChild .

  # Find royal descendant of Seleucus II Callinicus
  ?seleucusII rdfs:label ""Seleucus II Callinicus""@en .
  ?descendant dbo:child ?intermediateDescendant .
  ?intermediateDescendant dbo:child ?descendant .
  FILTER EXISTS { ?descendant a dbo:Monarch } # Ensure royalty

  # Match the conditions
  BIND(?parentOfNysa AS ?royalParent)
  BIND(?spouseOfSuccessorChild AS ?spouseOfRoyalChild)
  BIND(?descendant AS ?royalDescendantOfSeleucus)
}
```",6,8,7,3,3,3,3,71,0,0,2,0,0.0,0
617,19,test,"Give me the child of the child, that is a royalty, of Boleslaus I, Duke of Bohemia and parent of the father, that is a royalty, of the reference, that is a royalty, to Richeza of Poland.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?v4 . ?result <http://dbpedia.org/ontology/child> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Boleslaus_I,_Duke_of_Bohemia> . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Richeza of Poland""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?grandchild WHERE {
  # Boleslaus I, Duke of Bohemia
  ?boleslaus a dbo:Monarch ;
             dbp:name ""Boleslaus I, Duke of Bohemia""@en .

  # Child of Boleslaus I who is royalty
  ?child dbo:spouseOrPartner|dbo:childOf ?boleslaus ;
         a dbo:Monarch .

  # Grandchild (Child of the child) who is royalty
  ?grandchild dbo:spouseOrPartner|dbo:childOf ?child ;
              a dbo:Monarch .

  # Parent of the father of the grandchild
  ?father dbo:spouseOrPartner|dbo:childOf ?grandchild .
  ?parent dbo:spouseOrPartner|dbo:childOf ?father .

  # Reference to Richeza of Poland
  ?reference a dbo:Monarch ;
             dbp:name ""Richeza of Poland""@en .
  
  # Connect the parent to Richeza of Poland
  ?parent dbo:spouseOrPartner|dbo:childOf ?reference .
}
```",5,8,6,3,2,3,2,20,0,0,1,0,0.0,0
666,17,test,"Give me the player in Steve Bruce and figure known as the nickname of the reference, that is an organisation and a soccer club and a sports club, to England.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ?v3 . ?v0 <http://dbpedia.org/property/nickname> ?v3 . ?v0 <http://xmlns.com/foaf/0.1/name> ""England""@en . <http://dbpedia.org/resource/Steve_Bruce> <http://dbpedia.org/ontology/team> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?player WHERE {
  ?player dbo:manager dbr:Steve_Bruce .
  ?player dbo:nickname ?nickname .
  OPTIONAL { ?organisation dbo:name ?nickname . }
  FILTER EXISTS {
    ?organisation a dbo:SoccerClub ;
                  dbo:sport dbr:Soccer ;
                  dbo:country dbr:England .
  }
}
```",4,7,5,3,2,3,2,20,0,0,1,0,0.0,0
492,37,test,"Give me the commander in the war, that is a military conflict and an event, of the commander in Battle of Verdun and person decedent at Algiers.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/battle> ?v3 . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Algiers> . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Battle_of_Verdun> <http://dbpedia.org/ontology/commander> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commanderInWar WHERE {
  # Commander in the Battle of Verdun
  ?battle dbr:Battle_of_Verdun .
  ?battle dbo:commander ?verdunCommander .

  # World War I as the military conflict and event for the Battle of Verdun
  ?war dbr:World_War_I .
  ?war dbo:event ?battle .

  # Person who died in Algiers
  ?person dbo:deathPlace dbr:Algiers .
  
  # Find out which war this person was involved in as a commander
  ?personCommanderWar dbo:commander ?person .
  ?personCommanderWar dbo:event ?warInAlgiers .

  # Ensure the wars are the same
  FILTER(?war = ?warInAlgiers)

  # Get the commander of that war
  ?warInAlgiers dbo:commander ?commanderInWar .
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
9,57,test,"Give me the alma mater of John Alderdice, Baron Alderdice and figure known as the nickname of Queen's University Belfast and alma mater of the awardee of the reference, that is an award, to Royal Medals.","SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""Royal Medals""@en . ?result <http://dbpedia.org/property/nickname> ?v3 . ?v5 <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Queen's_University_Belfast> <http://dbpedia.org/property/nickname> ?v3 . <http://dbpedia.org/resource/John_Alderdice,_Baron_Alderdice> <http://dbpedia.org/ontology/almaMater> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v5 <http://dbpedia.org/ontology/almaMater> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?university ?nickname WHERE {
  # John Alderdice's alma mater
  dbr:John_Alderdice_Baron_Alderdice dbo:almaMater ?university .

  # Nickname of Queen's University Belfast
  OPTIONAL { 
    ?university dbo:nickname ?nickname .
  }

  # Alma mater of a Royal Medals awardee
  ?awardee dbo:awardReceived dbr:Royal_Medal ;
          dbo:almaMater ?university .

  FILTER (?university = dbr:Queen's_University_Belfast)
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
328,70,test,"Give me the awardee of the award of Bruce Fraser, 1st Baron Fraser of North Cape and commander in the force of the person decedent at Budapest and leader of the office, that is a government agency, of the leader, that is an office holder and a politician, of Gustav Jonson.","SELECT ?result WHERE { ?v7 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://dbpedia.org/ontology/leader> ?result . <http://dbpedia.org/resource/Gustav_Jonson> <http://dbpedia.org/property/leader> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Budapest> . ?v7 <http://dbpedia.org/ontology/commander> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?result <http://dbpedia.org/property/awards> ?v4 . <http://dbpedia.org/resource/Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape> <http://dbpedia.org/property/awards> ?v4 . ?v1 <http://dbpedia.org/property/office> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?awardee WHERE {
  ?fraser foaf:name ""Bruce Fraser, 1st Baron Fraser of North Cape""@en .
  
  ?award dbo:awardedBy ?fraser ;
         dbo:recipient ?awardee .

  ?forceCommander dbo:commanderInForce ?force ;
                  dbo:deathPlace ?budaPest .
  FILTER (str(?budaPest) = ""Budapest""@en)

  ?successor dbo:succeededBy ?fraser .

  ?agency dbo:leaderOf ?gustavJonson .
  ?gustavJonson foaf:name ""Gustav Jonson""@en ;
                a dbo:OfficeHolder, dbo:Politician .

  FILTER (?forceCommander = ?successor)
}
```",8,11,9,3,3,3,3,71,0,0,1,0,0.0,0
534,20,test,"Give me the headquarter of the owner of the location, that is a venue and an architectural structure, of 2012 Pro12 Grand Final and birth place of the child, that is a politician and an office holder, of the native, that is a politician, of Essex.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Venue>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/child> ?v2 . ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Essex> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ArchitecturalStructure>. <http://dbpedia.org/resource/2012_Pro12_Grand_Final> <http://dbpedia.org/ontology/location> ?v4 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v5 <http://dbpedia.org/ontology/headquarter> ?result . ?v4 <http://dbpedia.org/ontology/owner> ?v5 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?headquarter WHERE {
  # Step 1: Identify the venue for the 2012 Pro12 Grand Final
  ?venue dbo:event dbr:2012_Pro12_Grand_Final ;
         a dbo:Venue, dbo:ArchitecturalStructure .

  # Step 2: Find the owner of the venue
  ?venue dbo:owner ?owner .

  # Step 3: Determine the headquarter of the owner
  ?owner dbo:headquarters ?headquarter .

  # Step 4: Identify a politician native to Essex
  ?essexPolitician dbo:nationality dbr:United_Kingdom ;
                   dbo:birthPlace dbr:Essex ;
                   a dbo:Politician .

  # Step 5: Find the child of the Essex politician who is also a politician and an office holder
  ?child dbo:parent ?essexPolitician ;
         a dbo:Politician, dbo:OfficeHolder .

  # Step 6: Determine the birthplace of this child
  ?child dbo:birthPlace ?birthPlace .
}
```",6,11,7,3,2,3,2,20,0,0,1,0,0.0,0
528,64,test,"Give me the war of the military force of the entity, that is a societal event, in Chile and war of Orozimbo Barbosa and force of the person born as the birth name of Narciso Campero.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/battle> ?v3 . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/commander> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Chile> . <http://dbpedia.org/resource/Narciso_Campero> <http://dbpedia.org/property/birthName> ?v0 . <http://dbpedia.org/resource/Orozimbo_Barbosa> <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/property/birthName> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?war ?orozimboForce ?narcisoForce
WHERE {
  ?war a dbo:War ;
       dbo:country dbr:Chile .
  
  ?orozimbo dbo:participatedIn ?war ;
            foaf:name ""Orozimbo Barbosa""@en .
  
  ?narciso foaf:name ""Narciso Campero""@en ;
           dbo:birthName ?narcisoBirthName ;
           dbo:militaryForce ?narcisoForce .

  FILTER EXISTS { ?orozimbo dbo:militaryForce ?orozimboForce }
}
```",7,8,8,3,3,3,3,71,0,0,2,0,0.0,0
421,27,test,Give me the band member of Senidah and person born as the birth name of Dino Merlin and native of the birthplace of Samir Bekrić.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v2 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Senidah> . <http://dbpedia.org/resource/Dino_Merlin> <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Samir_Bekrić> <http://dbpedia.org/ontology/birthPlace> ?v3 . ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?person WHERE {
  # Find band members of Senidah
  ?bandMember dbo:bandMember ?senidah .
  ?senidah foaf:name ""Senidah""@en .

  # Find person with the birth name of Dino Merlin
  ?dinoMerlin dbp:birthName ?birthNameDinoMerlin .
  ?person dbp:birthName ?birthNameDinoMerlin .

  # Find native of Samir Bekrić's birthplace
  ?samirBekric dbo:birthPlace ?birthPlaceSamirBekric .
  ?native dbo:nativeOf ?birthPlaceSamirBekric .
  FILTER (?person = ?bandMember && ?person = ?native)
}
```",5,5,6,2,3,2,3,28,0,0,1,0,0.0,0
404,57,test,"Give me the parent of the child, that is a royalty, of the parent, that is a royalty, of Prince George William of Hanover and spouse of Princess Victoria Louise of Prussia and child of the father of Ernest Augustus, Duke of Brunswick.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v5 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/property/father> ?v3 . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/ontology/child> ?v5 . <http://dbpedia.org/resource/Prince_George_William_of_Hanover> <http://dbpedia.org/ontology/parent> ?v0 . ?result <http://dbpedia.org/ontology/parent> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parentOfParent WHERE {
  # Prince George William of Hanover
  ?princeGeorgeWilliam a dbo:Person ;
                      foaf:name ""Prince George William of Hanover""@en .

  # His spouse, Princess Victoria Louise of Prussia
  ?princessVictoriaLouise a dbo:Person ;
                         foaf:name ""Princess Victoria Louise of Prussia""@en ;
                         dbo:spouse ?princeGeorgeWilliam .

  # Their child who is royalty
  ?royalChild dbo:parent ?princeGeorgeWilliam ;
              dbo:parent ?princessVictoriaLouise ;
              a dbo:RoyalFamilyMember .

  # Parent of this royal child (who must also be royalty)
  ?parentOfRoyalChild dbo:child ?royalChild ;
                     a dbo:RoyalFamilyMember .

  # Father of Ernest Augustus, Duke of Brunswick
  ?ernestAugustus a dbo:Person ;
                 foaf:name ""Ernest Augustus, Duke of Brunswick""@en .
  ?fatherOfErnestAugustus dbo:child ?ernestAugustus .

  # Child of this father
  ?childOfFather dbo:parent ?fatherOfErnestAugustus .

  # Parent of this child
  ?parentOfChild dbo:child ?childOfFather .

  # Ensure the parent of the royal child is the same as the parent of the child of Ernest Augustus's father
  FILTER (?parentOfRoyalChild = ?parentOfChild)
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
547,21,test,Give me the resting place of Alan Cunningham and resting place of the child of James Burton (property developer).,SELECT ?result WHERE { <http://dbpedia.org/resource/James_Burton_(property_developer)> <http://dbpedia.org/ontology/child> ?v1 . <http://dbpedia.org/resource/Alan_Cunningham> <http://dbpedia.org/ontology/restingPlace> ?result . ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?alanCunninghamRestingPlace ?childBurialPlace WHERE {
  # Find Alan Cunningham and his resting place
  ?alanCunningham a dbo:Person ;
                 foaf:name ""Alan Cunningham""@en .
  OPTIONAL { 
    ?alanDeathEvent dbo:agent ?alanCunningham ;
                    dbo:place ?alanCunninghamRestingPlace .
  }

  # Find James Burton (property developer) and his children
  ?jamesBurton a dbo:Person ;
               foaf:name ""James Burton""@en ;
               dbo:occupation dbo:PropertyDeveloper .

  OPTIONAL {
    ?childBirthEvent dbo:agent ?jamesBurton ;
                     dbo:resultingProduct ?child .
    ?deathEventChild dbo:agent ?child ;
                    dbo:place ?childBurialPlace .
  }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
16,33,test,Give me the spouse of Ted McGinley and professional in the profession of the actor of Unnatural (TV series).,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/occupation> ?v3 . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Unnatural_(TV_series)> <http://dbpedia.org/property/starring> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?spouse ?actorProfession ?professionalActor WHERE {
  # Find Ted McGinley's spouse
  dbr:Ted_McGinley dbo:spouse ?spouse .

  # Find actors from the TV series ""Unnatural""
  ?tvSeries dbo:title ""Unnatural (TV series)""@en .
  ?tvSeries dbo:actor ?actor .

  # Get the profession of these actors
  ?actor dbo:occupation ?actorProfession .
  
  FILTER regex(?actorProfession, ""Actor"", ""i"")

  # Find professionals in the same field as the actor's profession
  ?professionalActor dbo:occupation ?actorProfession .
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
696,16,test,Give me the landmark at elevation of the award of Nie Rongzhen and birth place of the member of Dropkick Murphys.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/elevation> ?v3 . <http://dbpedia.org/resource/Dropkick_Murphys> <http://dbpedia.org/ontology/bandMember> ?v2 . <http://dbpedia.org/resource/Nie_Rongzhen> <http://dbpedia.org/property/awards> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?landmark WHERE {
  # Find awards associated with Nie Rongzhen and their elevation
  ?award dbo:recipient dbr:Nie_Rongzhen .
  ?award dbo:elevation ?elevation .

  # Find members of Dropkick Murphys and their birthplaces
  ?member dbo:band dbr:Dropkick_Murphys .
  ?member dbp:birthPlace ?birthPlace .

  # Find landmarks with the same elevation as the award and located at the member's birthplace
  ?landmark a dbo:Lighthouse ;
            dbo:elevation ?elevation ;
            dbo:location ?birthPlace .
}
```",4,4,5,2,2,3,2,20,0,0,1,0,0.0,0
767,39,test,"Give me the alma mater of Carl L. Nippert and reference to the alter ego of the persona, that is a fictional character, of Matthew Burland.","SELECT ?result WHERE { <http://dbpedia.org/resource/Carl_L._Nippert> <http://dbpedia.org/ontology/almaMater> ?result . ?v0 <http://dbpedia.org/property/alterEgo> ?v1 . ?v0 <http://dbpedia.org/property/alterEgo> ""Matthew Burland""@en . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?almaMater ?alterEgo WHERE {
  # Find the alma mater of Carl L. Nippert
  { 
    ?person a dbo:Person ;
            foaf:name ""Carl L. Nippert"" .
    ?person dbo:almaMater ?almaMater .
  }
  
  UNION
  
  # Find the alter ego (fictional character) associated with Matthew Burland
  {
    ?person a dbo:Person ;
            foaf:name ""Matthew Burland"" .
    OPTIONAL { ?person foaf:nick ?alterEgo . }
    FILTER(?alterEgo != """")
  }
}
```",4,5,5,3,2,3,3,71,0,0,2,0,0.0,0
77,16,test,Give me the force of the mayor of Congress Poland and war of the awardee of Golden Weapon for Bravery.,SELECT ?result WHERE { <http://dbpedia.org/resource/Congress_Poland> <http://dbpedia.org/property/leader> ?v3 . ?result <http://dbpedia.org/ontology/commander> ?v3 . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Golden_Weapon_for_Bravery> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?mayor ?mayorRole ?war ?awardee WHERE {
  # Find the mayor of Congress Poland
  ?mayor dbo:officeHolderOf dbr:Congress_Poland .
  
  OPTIONAL {
    # Check if the mayor had any military role or influence
    ?mayorRole dbo:agent ?mayor ;
              a dbo:MilitaryCommander ;
              dbo:commanded ?force .
    BIND(?force AS ?mayorForce)
  }
  
  # Find individuals awarded the Golden Weapon for Bravery
  ?awardee dbo:award dbr:Golden_Weapon_for_Bravery .
  
  OPTIONAL {
    # Determine wars involving the awardee
    ?war dbo:participant ?awardee ;
         a dbo:MilitaryConflict .
  }
  
  # Look for any connection between the mayor's military role and the war involving the awardee
  FILTER(?mayorForce = ?war)
}
```",4,4,5,2,2,3,2,20,0,0,13,0,0.0,0
54,55,test,"Give me the predecessor of the child, that is an office holder and a royalty, of Thihapate of Mohnyin and parent of the child of Narapati I of Ava and child of the father of Soe Min Wimala Dewi.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/successor> ?v2 . ?v5 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Soe_Min_Wimala_Dewi> <http://dbpedia.org/property/father> ?v3 . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Thihapate_of_Mohnyin> . ?v3 <http://dbpedia.org/ontology/child> ?result . ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Narapati_I_of_Ava> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?predecessor WHERE {
  # Thihapate of Mohnyin's child who is an office holder and royalty
  ?child dbo:parent dbr:Thihapate_of_Mohnyin ;
         a dbo:Monarch ;
         dbo:officeHolder ?office .

  # Narapati I of Ava's child's parent
  ?narapatiChild dbo:parent ?parentNarapati .
  ?parentNarapati dbo:child dbr:Narapati_I_of_Ava .

  # Soe Min Wimala Dewi's father
  ?soeminWimalaDewi dbo:father ?fatherSoemin .

  # Find the predecessor of the identified child
  ?predecessor dbo:successor ?child .
  
  FILTER (?parentNarapati = ?fatherSoemin)
}
```",6,8,7,2,3,3,3,71,0,0,1,0,0.0,0
55,27,test,"Give me the band of the reference, that is a band, to Newsted and band member of the band member, that is a band and a group, of San Francisco Symphony and band member of Guns N' Roses.","SELECT ?result WHERE { ?v1 <http://xmlns.com/foaf/0.1/name> ""Newsted""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Guns_N'_Roses> . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/San_Francisco_Symphony> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?band WHERE {
  # Find Jason Newsted's band(s)
  ?newstedBand dbo:member dbr:Jason_Newsted .
  
  # Check if the band has a member who is part of San Francisco Symphony
  ?newstedBand dbo:member ?symphonyMember .
  ?symphonyMember dbo:memberOf dbr:San_Francisco_Symphony .

  # Check if the band has a member who is part of Guns N' Roses
  ?newstedBand dbo:member ?gnrMember .
  ?gnrMember dbo:memberOf dbr:Guns_N'_Roses .
}
```",5,8,6,2,3,2,3,28,0,0,1,0,0.0,0
492,47,test,"Give me the commander in the war, that is a military conflict and an event, of the commander in Battle of Verdun and person decedent at the work of US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://dbpedia.org/property/author> ""US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite""@en . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Battle_of_Verdun> <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://dbpedia.org/ontology/battle> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commanderInConflict ?conflictName WHERE {
  # Find the commander of the Battle of Verdun
  ?verdunCommander a dbo:MilitaryPerson ;
                   dbo:commanded ?battleOfVerdun .
  
  FILTER (str(?battleOfVerdun) = ""Battle_of_Verdun"")

  # Find another military conflict/event involving this commander
  ?conflict a dbo:MilitaryConflict ;
           dbo:commander ?verdunCommander .

  # Get the name of the conflict for output
  ?conflict rdfs:label ?conflictName .
  
  # Find where Joseph C. Satterthwaite died
  ?satterthwaiteDeathPlace a dbo:Location ;
                          dbo:deathPlace dbr:Joseph_C._Satterthwaite .

  # Identify a commander involved in both contexts
  ?commanderInConflict a dbo:MilitaryPerson ;
                       dbo:commanded ?conflict ;
                       dbo:placeOfBirth ?satterthwaiteDeathPlace .
  
  FILTER (lang(?conflictName) = ""en"")
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
404,67,test,"Give me the spouse of Princess Victoria Louise of Prussia and parent of the child, that is a royalty, of the parent, that is a royalty, of Prince George William of Hanover and child of the father of the spouse of Princess Victoria Louise of Prussia.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> ?v3 . <http://dbpedia.org/resource/Prince_George_William_of_Hanover> <http://dbpedia.org/ontology/parent> ?v0 . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/child> ?v6 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?v1 . ?result <http://dbpedia.org/ontology/child> ?v6 . ?result <http://dbpedia.org/ontology/parent> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse ?royalChild ?parentOfRoyalChild ?princeParent ?fatherOfSpouse WHERE {
  # Princess Victoria Louise of Prussia and her spouse
  dbr:Princess_Victoria_Louise_of_Prussia dbo:spouse ?spouse .

  # Child of the spouse who is royalty
  ?royalChild dbo:parent ?spouse ;
              a dbo:Monarch .

  # Parent of that royal child who is also royalty
  ?parentOfRoyalChild dbo:child ?royalChild ;
                     a dbo:Monarch .

  # Prince George William of Hanover and his parent who is royalty
  dbr:Prince_George_William_of_Hanover dbo:parent ?princeParent .
  FILTER (?princeParent != ?spouse) # Ensure it's not the same person as spouse

  # Father of Princess Victoria Louise’s spouse
  ?fatherOfSpouse dbo:child ?spouse .

  # Connect father of spouse to parent of royal child
  FILTER(?parentOfRoyalChild = ?princeParent)
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
378,65,test,"Give me the war of the person born as Carl Pontus Gahn and claim to fame of the commander in Great Siege of Gibraltar and war of the commander in the reference, that is a military conflict, to Peninsular War.","SELECT ?result WHERE { ?v6 <http://dbpedia.org/ontology/battle> ?result . ?v3 <http://dbpedia.org/ontology/knownFor> ?result . <http://dbpedia.org/resource/Great_Siege_of_Gibraltar> <http://dbpedia.org/ontology/commander> ?v3 . ?v0 <http://dbpedia.org/ontology/commander> ?v6 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v4 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Peninsular War""@en . ?v4 <http://dbpedia.org/property/birthName> ""Carl Pontus Gahn""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war1 ?war2 WHERE {
  # Identify Charles IV of Spain
  ?person rdfs:label ""Charles IV of Spain""@en .
  
  # Find his claim to fame related to military command
  ?person dbo:commanderOf ?siege .
  ?siege rdfs:label ""Great Siege of Gibraltar""@en .

  # Determine the war associated with the Great Siege of Gibraltar
  ?siege dbo:partOf ?war1 .
  
  # Find wars involving Charles IV, specifically the Peninsular War
  ?person dbo:commanderOf ?peninsularWarCommand .
  ?peninsularWarCommand dbo:partOf dbr:Peninsular_War .

  FILTER (lang(?label) = 'en')
}
```",7,8,8,3,3,3,3,71,0,0,2,0,0.0,0
54,32,test,Give me the child of the father of Soe Min Wimala Dewi and parent of the child of Narapati I of Ava.,SELECT ?result WHERE { <http://dbpedia.org/resource/Soe_Min_Wimala_Dewi> <http://dbpedia.org/property/father> ?v1 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Narapati_I_of_Ava> . ?v3 <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Soe Min Wimala Dewi's father and her children
  ?father a dbo:Person ;
          dbo:child dbr:Soe_Min_Wimala_Dewi .
  
  OPTIONAL { ?father dbo:child ?soeChild . }
  
  # Narapati I of Ava and his children
  ?narapatiI a dbo:Person ;
             dbo:spouse ?spouse ;
             dbo:child ?narapatiChild .

  OPTIONAL { ?narapatiI dbo:parentOf ?narapatiParent . }

  # Find the person who is both Soe Min Wimala Dewi's sibling and Narapati I's parent
  VALUES ?person { ?soeChild ?narapatiI }
}
```",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
161,64,test,"Give me the military force of Spanish Civil War and commander in the force, that is an event, of the figure known as El Director and military force of the force, that is a societal event and an event and a military conflict, of the person decedent at Francoist Spain.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Francoist_Spain> . ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v1 <http://dbpedia.org/ontology/commander> ?v0 . ?v2 <http://dbpedia.org/ontology/commander> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://xmlns.com/foaf/0.1/nick> ""El Director""@en . ?v1 <http://dbpedia.org/ontology/commander> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce ?commander WHERE {
  # Identify the Spanish Civil War as a societal event and military conflict
  dbr:Spanish_Civil_War dbo:type ?type .
  FILTER (?type IN (dbr:Societal_event, dbr:Military_conflict)) .

  # Identify Francisco Franco as ""El Director"" and his death marking the end of Francoist Spain
  dbr:Franco dbo:nationality dbr:Spain ;
             dbo:deathPlace ?place .
  FILTER EXISTS { ?place rdfs:label ""Francoist Spain""@en } .

  # Identify the military force led by Francisco Franco during the Spanish Civil War
  ?militaryForce dbo:commander dbr:Franco ;
                dbo:partOfEvent dbr:Spanish_Civil_War .
  
  # Assign Francisco Franco as the commander of this military force
  BIND(dbr:Franco AS ?commander)
}
```",7,11,8,3,3,3,3,71,0,0,32,0,0.0,0
92,49,test,"Give me the band member of the reference, that is an artist, to Nevermore and band of the person born as the birth name of Joseph Michael.","SELECT ?result WHERE { ?v2 <http://xmlns.com/foaf/0.1/name> ""Nevermore""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?result <http://dbpedia.org/ontology/bandMember> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Joseph_Michael> <http://dbpedia.org/property/birthName> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?artist ?bandOfJosephMichael WHERE {
  # Find members of Nevermore who are also artists
  ?member dbo:bandMember dbr:Nevermore .
  ?member a dbo:Artist .

  # Get the birth name ""Joseph Michael"" and find associated band
  ?person dbo:birthName ""Joseph Michael""@en .
  ?person dbo:associatedBand ?bandOfJosephMichael .

  # Link the artist from Nevermore to the person with birth name Joseph Michael
  FILTER(?artist = ?member)
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
701,59,test,Give me the parent of the child of the child of Seti I and parent of the child of the spouse of Amun-her-khepeshef.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/ontology/child> ?v5 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seti_I> . ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v5 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Amun-her-khepeshef> <http://dbpedia.org/ontology/spouse> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commonParent WHERE {
  # Seti I's child (Seti I's children)
  ?child1 dbo:parent dbr:Seti_I .
  
  # Seti I's grandchild
  ?grandchild dbo:parent ?child1 .

  # Parent of the grandchild is one of Seti I's children
  ?parentOfGrandchild dbo:child ?grandchild .

  # Amun-her-khepeshef's spouse
  ?spouse dbo:spouse dbr:Amun_her_khepeshef .
  
  # Child of the spouse
  ?child2 dbo:parent ?spouse .

  # Parent of this child is either Amun-her-khepeshef or their spouse
  ?parentOfChild2 dbo:child ?child2 .

  # Find common parent
  FILTER (?parentOfGrandchild = ?parentOfChild2)
  
  BIND(?parentOfGrandchild AS ?commonParent)
}
```",6,6,7,3,2,3,3,71,0,0,1,0,0.0,0
378,47,test,"Give me the war of the commander in the reference, that is a military conflict, to Peninsular War and war of the person born as Carl Pontus Gahn.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/property/birthName> ""Carl Pontus Gahn""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Peninsular War""@en . ?v0 <http://dbpedia.org/ontology/commander> ?v4 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?war WHERE {
  # Carl Pontus Gahn's involvement in wars
  ?gahn dbo:birthName ""Carl Pontus Gahn""@en .
  ?gahn dbo:commanderOrParticipantIn ?war .

  # Peninsular War reference
  dbr:Peninsular_War dbo:reference ?peninsularReference .
  
  # Linking the war to both Carl Pontus Gahn and the Peninsular War
  ?war dbo:reference ?peninsularReference .
}
```",5,6,6,3,2,3,3,71,0,0,2,0,0.0,0
701,71,test,"Give me the parent of the child of the spouse of Amun-her-khepeshef and parent of the child of the child of Seti I and spouse of the father of the commander, that is a royalty, in Battle of Perire.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seti_I> . <http://dbpedia.org/resource/Amun-her-khepeshef> <http://dbpedia.org/ontology/spouse> ?v1 . ?v5 <http://dbpedia.org/property/father> ?v4 . ?result <http://dbpedia.org/ontology/child> ?v5 . ?v1 <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/ontology/spouse> ?v8 . ?v7 <http://dbpedia.org/property/father> ?v8 . <http://dbpedia.org/resource/Battle_of_Perire> <http://dbpedia.org/ontology/commander> ?v7 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?finalEntity WHERE {
  # Amun-her-khepeshef's spouse and their child
  ?spouseAmun a dbo:Person ;
              dbo:spouse ?amunHerKhepeshef .
  FILTER(STR(?amunHerKhepeshef) = ""Amun-her-khepeshef"") .

  ?childOfSpouse dbp:parent ?spouseAmun .

  # Seti I's child and their grandchild
  ?setiI a dbo:Person ;
         dbo:child ?childSetiI .
  FILTER(STR(?setiI) = ""Seti_I"") .

  ?grandChildOfSeti dbp:parent ?childSetiI .

  # Commander in the Battle of Perire and their father's spouse
  ?commander a dbo:Person ;
             dbp:battle ?battle .
  ?fatherCommander dbp:child ?commander .
  ?spouseFatherCommander dbo:spouse ?fatherCommander .
  
  FILTER(STR(?battle) = ""Battle_of_Perire"") .

  # Final entity must be royalty
  ?finalEntity a dbo:RoyalPerson ;
               (
                 dbo:parent ?spouseAmun ;
                 dbo:parent ?grandChildOfSeti ;
                 dbo:spouse ?spouseFatherCommander
               ) .
}
```",9,10,10,3,3,3,3,71,0,0,1,0,0.0,0
92,61,test,"Give me the band of the person born as the birth name of Joseph Michael and associated musical artist of the person born, that is an artist, as the actor of Return to Nuke 'Em High Volume 1.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> ?v3 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Return_to_Nuke_'Em_High_Volume_1> <http://dbpedia.org/property/starring> ?v0 . <http://dbpedia.org/resource/Joseph_Michael> <http://dbpedia.org/property/birthName> ?v1 . ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v5 <http://dbpedia.org/property/birthName> ?v0 . ?v3 <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band ?musicalArtist WHERE {
  # Find Joe Satriani's band
  OPTIONAL { 
    dbr:Joe_Satriani dbo:associatedBand ?band .
  }
  
  # Find actor in ""Return to Nuke 'Em High Volume 1""
  OPTIONAL {
    dbr:Return_to_Nuke_'Em_High_Volume_1 dbo:actor ?actor .
    
    # Check if the actor is Tom Towles
    FILTER(?actor = dbr:Tom_Towles)
    
    # Find musical artist associated with Tom Towles
    ?actor dbo:musicalArtist ?musicalArtist .
  }
}
```",6,7,7,3,2,3,3,71,0,0,1,0,0.0,0
701,58,test,"Give me the parent of the child of Ramesses II and parent of Meritamen and spouse of the father of the commander, that is a royalty, in Battle of Perire.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/ontology/child> ?v5 . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Battle_of_Perire> <http://dbpedia.org/ontology/commander> ?v1 . ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ramesses_II> . <http://dbpedia.org/resource/Meritamen> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parent WHERE {
  # Step 1: Identify the child of Ramesses II
  ?child dbo:father dbr:Ramesses_II .
  
  # Step 2: Find the parent of this child
  ?child dbo:motherOrFather ?parent .

  # Step 3: Identify Meritamen's parent
  dbr:Meritamen dbo:motherOrFather ?meritamenParent .

  # Ensure the parent from step 2 is the same as Meritamen's parent
  FILTER (?parent = ?meritamenParent)

  # Step 4: Determine the father of the commander in the Battle of Perire
  ?commander dbo:participatedIn dbr:Battle_of_Perire .
  ?commander dbo:father ?fatherOfCommander .

  # Step 5: Find the spouse of this father
  ?spouse dbo:spouse ?fatherOfCommander .

  # Ensure the parent from step 2 is the same as the spouse found in step 5
  FILTER (?parent = ?spouse)

  # Step 6: Ensure royalty status
  ?parent a dbo:Monarch .
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
251,24,test,"Give me the administration of the ruling party, that is a political party and an organisation, in Sicily and death place of the author of The Twelve Abbots of Challant.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. <http://dbpedia.org/resource/Sicily> <http://dbpedia.org/property/leaderParty> ?v2 . <http://dbpedia.org/resource/The_Twelve_Abbots_of_Challant> <http://dbpedia.org/property/author> ?v0 . ?result <http://dbpedia.org/property/leaderParty> ?v2 . ?v0 <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?party ?administration ?author ?deathPlace WHERE {
  # Part 1: Administration of the ruling party in Sicily
  ?party a dbo:PoliticalParty ;
         dbo:country dbr:Sicily ;
         dbo:organizationType dbo:Organization .
  
  OPTIONAL { ?party dbp:administration ?administration . }

  # Part 2: Death place of the author of ""The Twelve Abbots of Challant""
  ?work dbo:title ""The Twelve Abbots of Challant""@en ;
        dbo:author ?author .

  ?author dbo:deathPlace ?deathPlace .
}
```",4,6,5,2,2,2,3,28,0,0,1,0,0.0,0
994,45,test,"Give me the associated musical artist of Red Tide (band) and associated musical artist of S.A. Slayer and band member of the person born, that is a musical artist, as the persona of Don Dokken.",SELECT ?result WHERE { <http://dbpedia.org/resource/S.A._Slayer> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Don_Dokken> <http://xmlns.com/foaf/0.1/givenName> ?v3 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Red_Tide_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?associatedArtistRedTide ?associatedArtistSASlayer ?bandMemberDonDokken WHERE {
  # Find associated musical artist of Red Tide (band)
  ?redTide a dbo:Band ;
           dbp:name ""Red Tide"" .
  
  OPTIONAL { 
    ?redTide dbo:associatedBand ?artist1 .
    ?artist1 a dbo:MusicalArtist ;
             rdfs:label ?associatedArtistRedTide .
  }
  
  # Find associated musical artist of S.A. Slayer
  ?sASlayer a dbo:Band ;
            dbp:name ""S.A. Slayer"" .
  
  OPTIONAL { 
    ?sASlayer dbo:associatedBand ?artist2 .
    ?artist2 a dbo:MusicalArtist ;
             rdfs:label ?associatedArtistSASlayer .
  }
  
  # Find band member of Don Dokken
  ?donDokken a dbo:Person ;
             dbp:name ""Don Dokken"" .
  
  OPTIONAL { 
    ?bandMember a dbo:bandMember ;
                dbo:member ?donDokken .
    ?bandMember a dbo:Band ;
                dbp:leadVocalist ?donDokken .
    ?bandMember dbo:associatedBand ?artist3 .
    ?artist3 a dbo:MusicalArtist ;
             rdfs:label ?bandMemberDonDokken .
  }
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
16,54,test,Give me the spouse of the person born as Ted Martin McGinley and professional in the profession of the actor of Unnatural (TV series) and person born as Georgeanne Marie Rice.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Unnatural_(TV_series)> <http://dbpedia.org/property/starring> ?v0 . ?v3 <http://dbpedia.org/property/birthName> ""Ted Martin McGinley""@en . ?result <http://dbpedia.org/property/occupation> ?v5 . ?result <http://dbpedia.org/property/birthName> ""Georgeanne Marie Rice""@en . ?v0 <http://dbpedia.org/property/occupation> ?v5 . ?v3 <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Find Ted Martin McGinley's spouse
  dbr:Ted_McGinley dbo:spouse ?spouse .

  # Find the actor of ""Unnatural"" (TV series)
  dbr:Unnatural_(TV_series) dbo:actor ?unnaturalActor .
  
  # Get the profession of the actor from ""Unnatural""
  ?unnaturalActor a dbo:Actor ;
                 dbo:profession ?actorProfession .

  # Find Georgeanne Marie Rice and her profession
  dbr:Georgeanne_Marie_Rice dbo:profession ?riceProfession .

  # Ensure the spouse has both professions
  ?spouse dbo:profession ?sharedProfession .
  FILTER (?sharedProfession = ?actorProfession && ?sharedProfession = ?riceProfession)
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
994,64,test,"Give me the associated musical artist of the associated musical artist of the reference to Watchtower and band member of the person born, that is a musical artist, as the persona of Don Dokken and associated musical artist of Red Tide (band).","SELECT ?result WHERE { <http://dbpedia.org/resource/Red_Tide_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v4 <http://xmlns.com/foaf/0.1/name> ""Watchtower""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . <http://dbpedia.org/resource/Don_Dokken> <http://xmlns.com/foaf/0.1/givenName> ?v5 . ?v0 <http://dbpedia.org/property/birthName> ?v5 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?associatedArtist WHERE {
  # Step 1: Find a band member of Watchtower who is also a musical artist
  ?watchtowerMember dbo:memberOf dbr:Watchtower .
  ?watchtowerMember dbo:occupation dbr:Musical_artist .

  # Step 2: Find an associated musical artist with that band member
  ?associatedArtist1 dbo:associatedBandMember ?watchtowerMember .

  # Step 3: Ensure this person is born and recognized as a musical artist
  ?associatedArtist1 dbo:birthPlace ?place .
  ?associatedArtist1 dbo:occupation dbr:Musical_artist .

  # Step 4: Identify the persona or role related to Don Dokken for the person found in step 3
  ?dokkenPersona dbo:associatedBandMember ?associatedArtist1 .
  ?dokkenPersona rdfs:label ""Don Dokken""@en .

  # Step 5: Find an associated musical artist with Red Tide who matches the criteria from steps 1-4
  ?redTideAssociatedArtist dbo:associatedBandMember dbr:Red_Tide_(band) .
  ?redTideAssociatedArtist rdfs:label ?finalArtistLabel .
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
161,63,test,"Give me the military force of the force, that is a societal event and an event and a military conflict, of the person decedent at Francoist Spain and commander in the force, that is an event, of Emilio Mola and military force of the force, that is a societal event and a military conflict, of Francisco Largo Caballero.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/commander> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v4 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Francoist_Spain> . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v6 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v6 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Emilio_Mola> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?militaryForce
WHERE {
  # Find the military force related to Emilio Mola's event
  ?event1 dbo:commander dbr:Emilio_Mola .
  ?event1 a dbo:MilitaryConflict ;
          a dbo:SocietalEvent .

  ?force1 dbo:event ?event1 .
  
  # Find the military force related to Francisco Largo Caballero's event
  ?event2 dbo:personDecedentAt dbr:Francoist_Spain .
  ?event2 dbo:commander dbr:Francisco_Largo_Caballero .
  ?event2 a dbo:MilitaryConflict ;
          a dbo:SocietalEvent .

  ?force2 dbo:event ?event2 .

  # Ensure the military forces are the same
  FILTER (?force1 = ?force2)
  
  BIND(?force1 AS ?militaryForce)
}
```",7,13,8,3,3,3,3,71,0,0,32,0,0.0,0
54,69,test,"Give me the parent of the child of Narapati I of Ava and child of the father of the child of Thinkhaya of Pagan and predecessor of the child, that is an office holder and a royalty, of the reference to Thihapate of Mohnyin.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/child> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://xmlns.com/foaf/0.1/name> ""Thihapate of Mohnyin""@en . ?v4 <http://dbpedia.org/property/father> ?v3 . ?v7 <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v7 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Narapati_I_of_Ava> . ?result <http://dbpedia.org/ontology/successor> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent
WHERE {
  # Narapati I of Ava's child
  ?narapatiChild dbo:childOf dbr:Narapati_I_of_Ava .
  
  # Thinkhaya of Pagan's child and his father's child (Thinkhaya himself)
  ?thinkhayaChild dbo:childOf dbr:Thinkhaya_of_Pagan .
  ?thinkhayaFather dbo:parentOf ?thinkhayaChild .
  FILTER (?thinkhayaFather = dbr:Thinkhaya_of_Pagan) .

  # Thihapate of Mohnyin's predecessor who is an office holder and royalty
  ?thihapatePredecessor dbo:predecessor dbr:Thihapate_of_Mohnyin .
  FILTER (dbo:officeHolder(?thihapatePredecessor) && dbo:royalty(?thihapatePredecessor)) .

  # Find the parent of the child of Narapati I and Thinkhaya's child
  ?parent dbo:parentOf ?narapatiChild ;
          dbo:parentOf ?thinkhayaChild .
  
  # Ensure the predecessor is also considered in the relationship
  ?parent dbo:parentOf ?thihapatePredecessor .
}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
801,65,test,"Give me the associated musical artist of the writer, that is a musical artist and an artist, of 40 Dayz & 40 Nightz and producer of the work, that is a musical work and a song and a work, of the professional, that is a musical artist, in Rapper and professional in the alter ego of The Shadow.","SELECT ?result WHERE { ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v4 . ?v0 <http://dbpedia.org/property/occupation> ""Rapper""@en . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/40_Dayz_&_40_Nightz> <http://dbpedia.org/property/writer> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v6 <http://dbpedia.org/ontology/producer> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v6 <http://dbpedia.org/property/writer> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?artist WHERE {
  ?song a dbo:Songs ;
        dbp:title ""40 Dayz & 40 Nightz"" .
  
  ?writer dbo:worksForCreativeWork ?song ;
          a dbo:MusicalArtist, dbo:Artist ;
          dbo:producer ?song .

  ?writer dbo:profession dbr:Rapper .

  OPTIONAL { 
    ?alias dbp:alsoKnownAs ""The Shadow"" .
    ?writer dbo:aliases ?alias .
  }

  FILTER EXISTS {
    ?writer rdfs:label ?artistLabel .
    FILTER (lang(?artistLabel) = 'en')
  }
}
```",7,13,8,3,3,3,3,71,0,0,8,0,0.0,0
44,8,test,"Give me the band member of Undertow (band) and band member of the associated musical artist, that is a group and an organisation, of Queensrÿche.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Undertow_(band)> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. <http://dbpedia.org/resource/Queensrÿche> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?undertowMember ?associatedArtist ?associatedArtistMember 
WHERE {
  # Find band members of Undertow
  ?band a dbo:Band ;
        rdfs:label ""Undertow""@en .
  
  ?band dbo:bandMember ?undertowMember .

  # Find associated artist that is both a group and an organization related to Queensrÿche
  ?artist a dbo:MusicalArtist, dbo:Group, dbo:Organization ;
          dbp:associatedBand ?queensryche .
  
  ?queensryche rdfs:label ""Queensrÿche""@en .

  # Find band members of the associated artist
  ?artist dbo:bandMember ?associatedArtistMember .
}
```",3,5,4,2,2,2,2,9,0,0,1,0,0.0,0
92,47,test,"Give me the band member of the reference, that is an artist, to Nevermore and associated musical artist of the person born, that is an artist, as the actor of Return to Nuke 'Em High Volume 1.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://dbpedia.org/property/birthName> ?v0 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v2 <http://xmlns.com/foaf/0.1/name> ""Nevermore""@en . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Return_to_Nuke_'Em_High_Volume_1> <http://dbpedia.org/property/starring> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandMember ?actor WHERE {
  # Find members of Nevermore who are artists
  ?member dbo:memberOf dbr:Nevermore .
  ?member dbo:occupation dbr:Musician .

  # Find actors in ""Return to Nuke 'Em High Volume 1"" who are also artists
  ?actor dbo:starringIn dbr:Return_to_Nuke_'Em_High_Volume_1 ;
         dbo:occupation dbr:Actor .
  
  # Check for association between the band member and the actor
  OPTIONAL { 
    ?association dbo:agent ?bandMember .
    ?association dbo:object ?actor .
  }
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
378,57,test,"Give me the war of Carl Pontus Gahn and war of the commander in the reference, that is a military conflict, to Peninsular War and claim to fame of the commander in Great Siege of Gibraltar.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/battle> ?result . ?v3 <http://dbpedia.org/ontology/knownFor> ?result . <http://dbpedia.org/resource/Great_Siege_of_Gibraltar> <http://dbpedia.org/ontology/commander> ?v3 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Peninsular War""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/ontology/commander> ?v5 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?warOfCarlPontusGahn ?commander ?peninsularWar ?greatSiegeOfGibraltar WHERE {
  # Find any war associated with Carl Pontus Gahn
  OPTIONAL { 
    ?person dbo:name ""Carl Pontus Gahn""@en .
    ?person dbo:participatedIn ?warOfCarlPontusGahn .
  }

  # Find a commander involved in both the Peninsular War and the Great Siege of Gibraltar
  ?commander dbo:participatedIn dbr:Peninsular_War ;
             dbo:participatedIn dbr:Great_Siege_of_Gibraltar .

  # Bind the Peninsular War and Great Siege of Gibraltar to variables for clarity
  BIND(dbr:Peninsular_War AS ?peninsularWar)
  BIND(dbr:Great_Siege_of_Gibraltar AS ?greatSiegeOfGibraltar)
}
```",6,7,7,3,3,3,3,71,0,0,2,0,0.0,0
801,51,test,"Give me the associated musical artist of the writer, that is a musical artist and an artist, of the album, that is a musical work and a work, of What U See Is What U Get and producer of the work, that is a musical work and a song and a work, of 50 Cent.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/50_Cent> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v1 <http://dbpedia.org/property/writer> ?v2 . ?v4 <http://dbpedia.org/ontology/producer> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. <http://dbpedia.org/resource/What_U_See_Is_What_U_Get> <http://dbpedia.org/ontology/album> ?v1 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?artist WHERE {
  # Step 1: Find the artist of ""What U See Is What U Get""
  ?album a dbo:Album ;
         rdfs:label ""What U See Is What U Get""@en .
  
  ?album dbo:artist ?musicalArtist .

  # Step 2: Check if this musical artist is also an artist in general
  ?musicalArtist a dbo:MusicalArtist ;
                 a dbo:Artist .

  # Step 3: Find the producer of any work by 50 Cent that is both a song and a musical work
  ?song a dbo:SongsBy50Cent ;
        a dbo:MusicalWork, dbo:Song .
  
  ?song dbo:producer ?producer .

  # Step 4: Determine which album this producer worked on
  ?album2 a dbo:Album ;
          rdfs:label ?albumLabel ;
          dbo:artist ?producer .

  FILTER (lang(?albumLabel) = 'en')
}
```",5,12,6,3,2,3,3,71,0,0,1,0,0.0,0
404,58,test,"Give me the parent of the child, that is a royalty, of Ernest Augustus, Duke of Brunswick and child of the father of the spouse of Princess Victoria Louise of Prussia and spouse of Princess Victoria Louise of Prussia.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?v1 . ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v1 <http://dbpedia.org/property/father> ?v2 . <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/ontology/child> ?v5 . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  # Ernest Augustus, Duke of Brunswick's children
  ?child dbo:spouse ?spouse .
  ?child dbo:father dbr:Ernest_Augustus,_Duke_of_Brunswick .

  # Princess Victoria Louise of Prussia and her spouse
  ?princess dbr:Princess_Victoria_Louise_of_Prussia ;
           dbo:spouse ?spouse .

  # Father of the spouse of Princess Victoria Louise of Prussia
  ?father dbo:child ?spouse .
  
  # Check if the child is a royalty and matches the criteria
  FILTER EXISTS { ?child dbo:title ?title . FILTER regex(?title, ""King|Queen|Prince|Princess"", ""i"") }
  
  # Parent of this royal child
  ?parent dbo:child ?child .
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
767,29,test,Give me the reference to  and entity in Baden-Württemberg and alma mater of the administration of George K. Nash.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/state> <http://dbpedia.org/resource/Baden-Württemberg> . ?v3 <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://xmlns.com/foaf/0.1/name> """"@en . ?v3 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/George_K._Nash> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?almaMater ?entityInBW WHERE {
  # Find the alma mater of George K. Nash
  ?nash a dbo:Person ;
        foaf:name ""George K. Nash""@en .
  ?nash dbo:almaMater ?almaMater .

  # Find an entity in Baden-Württemberg related to the alma mater
  ?entityInBW dbo:location dbr:Baden-Württemberg ;
              ?relation ?almaMater .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
232,57,test,"Give me the native of the residence, that is a settlement and British, of Sylvie Bermann and actor of the claim to fame, that is a film and a military conflict, of the professional in Actor, narrator and producer and child of Jon Pertwee.","SELECT ?result WHERE { <http://dbpedia.org/resource/Sylvie_Bermann> <http://dbpedia.org/property/residence> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v5 <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://dbpedia.org/ontology/knownFor> ?v5 . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/ontology/child> ?result . ?v0 <http://dbpedia.org/property/occupation> ""Actor, narrator and producer""@en . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?native WHERE {
  # Find Sylvie Bermann's residence
  ?sylvieBermann a dbo:Person ;
                 foaf:currentHomeLocation ?residence .
  
  FILTER (strstarts(str(?residence), ""http://dbpedia.org/resource/"") &&
          EXISTS { ?residence dbo:country dbr:United_Kingdom } &&
          EXISTS { ?residence a dbo:Settlement })

  # Find the actor who is Jon Pertwee's child and has a claim to fame in both film and military conflict
  ?actor a dbo:Actor ;
         dbp:childOf ?jonPertwee ;
         dbo:famousFor ?claimToFame .
  
  ?jonPertwee foaf:name ""Jon Pertwee""@en .

  ?claimToFame rdf:type/rdfs:subClassOf* (dbo:Film | dbo:MilitaryConflict) .

  # Find who is native to the settlement
  ?native dbo:nativePlace ?residence .
}
```",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
801,64,test,"Give me the associated musical artist of the writer, that is a musical artist and an artist, of the album, that is a musical work and a work, of What U See Is What U Get and professional in the alter ego of the true self of The Shadow and producer of Westside Story (song).","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/writer> ?v1 . <http://dbpedia.org/resource/What_U_See_Is_What_U_Get> <http://dbpedia.org/ontology/album> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. <http://dbpedia.org/resource/Westside_Story_(song)> <http://dbpedia.org/ontology/producer> ?result . ?v3 <http://xmlns.com/foaf/0.1/givenName> ""The Shadow""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://dbpedia.org/property/alterEgo> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?artist WHERE {
  # Find the album ""What U See Is What U Get""
  ?album a dbo:Album ;
         rdfs:label ""What U See Is What U Get""@en .
  
  # Identify the associated musical artist
  ?album dbo:performer ?artist .

  # Ensure the artist is also recognized as an artist
  ?artist a dbo:Artist .

  # Check for professional involvement with The Shadow's alter ego
  ?shadowAlterEgo rdfs:label ""The Shadow""@en ;
                  dbo:alterEgoOf ?trueSelf .
  
  ?artist dbo:profession ?shadowAlterEgo .

  # Verify production of the song ""Westside Story""
  ?westsideStory a dbo:Songs ;
                 rdfs:label ""Westside Story (song)""@en .
  
  ?westsideStory dbo:producer ?artist .
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
281,63,test,"Give me the entity in the birth place, that is a country, of Bob Heffron and war of the awardee of the award of Jonathon Band and war of the profession, that is a military unit, of Heather Roy.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> ?v6 . <http://dbpedia.org/resource/Bob_Heffron> <http://dbpedia.org/ontology/birthPlace> ?v6 . <http://dbpedia.org/resource/Heather_Roy> <http://dbpedia.org/property/occupation> ?v2 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Jonathon_Band> <http://dbpedia.org/property/awards> ?v4 . ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v3 <http://dbpedia.org/property/awards> ?v4 . ?v2 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?entity
WHERE {
  # Bob Heffron's birthplace as a country
  dbr:Bob_Heffron dbo:birthPlace ?birthPlace .
  ?birthPlace rdf:type dbo:Country .

  # Jonathon Band's award and associated war
  dbr:Jonathon_Band dbo:award ?award .
  ?award dbo:associatedWar ?war1 .

  # Heather Roy's military unit and associated war
  dbr:Heather_Roy dbo:militaryUnit ?militaryUnit .
  ?militaryUnit dbo:associatedWar ?war2 .

  # Ensure the wars are the same
  FILTER (?war1 = ?war2)

  # The entity must be both a country and a military unit associated with the war
  BIND(?birthPlace AS ?entity)
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
767,56,test,"Give me the entity in the administration, that is a settlement, of Green and reference to the alter ego of the persona, that is a fictional character, of Matthew Burland and alma mater of Carl L. Nippert.","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v1 . ?v0 <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://dbpedia.org/ontology/state> ?v2 . <http://dbpedia.org/resource/Carl_L._Nippert> <http://dbpedia.org/ontology/almaMater> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://dbpedia.org/property/leaderParty> ""Green""@en . ?v0 <http://dbpedia.org/property/alterEgo> ""Matthew Burland""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?settlement ?alterEgo ?almaMater
WHERE {
  # Entity in the administration of Green that is a settlement
  ?entity dbo:administrativeUnit dbr:Green .
  ?entity rdf:type dbo:Settlement .

  # Alter ego of the persona, fictional character of Matthew Burland
  ?fictionalCharacter dbo:creator dbr:Matthew_Burland .
  ?alterEgo rdfs:label ?characterLabel FILTER (lang(?characterLabel) = 'en') .

  # Alma mater of Carl L. Nippert
  dbr:C_L_Nippert dbo:almaMater ?almaMater .
  
  # Linking the fictional character to the settlement
  ?entity dbo:fictionalCharacter ?alterEgo .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
9,61,test,"Give me the alma mater of the awardee of the reference, that is an award, to Royal Medals and figure known as the nickname of the entity, that is an organisation and an educational institution, in Northern Ireland.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v5 <http://dbpedia.org/ontology/almaMater> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://dbpedia.org/property/nickname> ?v3 . ?v5 <http://dbpedia.org/property/awards> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Northern_Ireland> . ?result <http://dbpedia.org/property/nickname> ?v3 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Royal Medals""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?almaMater ?nickname WHERE {
  ?person dbo:award dbr:Royal_Medal .
  ?person dbo:almaMater ?university .
  ?university rdfs:label ?almaMaterLabel .
  FILTER (lang(?almaMaterLabel) = 'en') .

  OPTIONAL { 
    ?university dbo:nickname ?nickname .
    ?organisation dbo:name ?nickname ;
                  dbo:location dbr:Northern_Ireland .
  }
}
```",6,9,7,3,2,3,3,71,0,0,1,0,0.0,0
378,49,test,"Give me the war of the person born as Carl Pontus Gahn and claim to fame of the commander in the war, that is a military conflict and a societal event and an event, of Thomas Trigge.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://dbpedia.org/ontology/commander> ?v1 . ?v2 <http://dbpedia.org/property/birthName> ""Carl Pontus Gahn""@en . ?v1 <http://dbpedia.org/ontology/knownFor> ?result . <http://dbpedia.org/resource/Thomas_Trigge> <http://dbpedia.org/ontology/battle> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?warGahn ?claimToFameTrigge WHERE {
  ?gahn a dbo:MilitaryPerson ;
        foaf:givenName ""Carl"" ;
        foaf:familyName ""Pontus Gahn"" ;
        dbo:birthName ""Carl Pontus Gahn"" .
  
  ?trigge a dbo:MilitaryPerson ;
          dbo:commander ?warTrigge .

  ?warGahn dbo:participant ?gahn .
  ?warTrigge rdf:type dbo:MilitaryConflict .

  OPTIONAL {
    ?trigge dbo:famousFor ?claimToFameTrigge .
  }

  FILTER(?warGahn = ?warTrigge)
}
```",5,8,6,3,2,3,3,71,0,0,2,0,0.0,0
996,18,test,Give me the force of the awardee of the elevation of Lac d'Avoriaz and entity in the award of Ekrem Akurgal.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> ?v2 . ?result <http://dbpedia.org/ontology/place> ?v3 . <http://dbpedia.org/resource/Lac_d'Avoriaz> <http://dbpedia.org/ontology/elevation> ?v1 . ?v2 <http://dbpedia.org/property/awards> ?v1 . <http://dbpedia.org/resource/Ekrem_Akurgal> <http://dbpedia.org/property/awards> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?awardee ?force ?ekremAwardEntity
WHERE {
  # Find the awardee of the elevation of Lac d'Avoriaz
  ?award dbo:recipient ?awardee .
  ?award rdfs:label ""Lac d'Avoriaz""@en .

  OPTIONAL {
    # Find a related force or concept linked to the awardee
    ?awardee dbo:fieldOfStudy ?force .
  }

  # Find the award received by Ekrem Akurgal and an associated entity
  ?ekremAward dbo:recipient dbp:Ekrem_Akurgal .
  ?ekremAward dbo:awardField ?ekremAwardEntity .
}
```",5,5,6,3,2,3,2,20,0,0,4,0,0.0,0
328,55,test,"Give me the commander in the force of Ferenc Szálasi and leader of the office, that is a government agency, of Joseph Stalin and awardee of the award of Bruce Fraser, 1st Baron Fraser of North Cape.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Ferenc_Szálasi> . ?result <http://dbpedia.org/property/awards> ?v3 . <http://dbpedia.org/resource/Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape> <http://dbpedia.org/property/awards> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. <http://dbpedia.org/resource/Joseph_Stalin> <http://dbpedia.org/property/office> ?v2 . ?v5 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://dbpedia.org/ontology/leader> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  ?szalasi dbo:commander ?person .
  FILTER (str(?szalasi) = ""Ferenc Szálasi"") .

  ?stalinOffice dbo:leaderOf ?person .
  FILTER (str(?stalinOffice) = ""Joseph Stalin"") .

  ?fraserAward dbo:awardee ?person .
  FILTER (str(?fraserAward) = ""Bruce Fraser, 1st Baron Fraser of North Cape"") .
}
```",6,7,7,2,3,3,3,71,0,0,1,0,0.0,0
959,32,test,"Give me the member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of Eiji Ōtsuka and native of the residence, that is a country, of Yōichi Masuzoe.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?result <http://dbpedia.org/ontology/team> ?v1 . ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . <http://dbpedia.org/resource/Yōichi_Masuzoe> <http://dbpedia.org/property/residence> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. <http://dbpedia.org/resource/Eiji_Ōtsuka> <http://dbpedia.org/ontology/almaMater> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?university WHERE {
  # Eiji Ōtsuka's alma mater
  dbr:Eiji_Ōtsuka dbo:almaMater ?university .
  
  # Yōichi Masuzoe's country of residence
  dbr:Yōichi_Masuzoe dbo:country ?country .

  # The university must be Japanese and an educational institution
  ?university a dbo:University ;
             dbo:country dbr:Japan ;
             a dbo:EducationalInstitution .
}
```",4,9,5,2,2,3,3,71,0,0,84,0,0.0,0
232,60,test,"Give me the child of the person born as the birth name of Jon Pertwee and native of the residence, that is a settlement and British, of the native, that is a politician and an office holder, of France.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/France> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v0 <http://dbpedia.org/property/residence> ?v1 . <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/property/birthName> ?v3 . ?v2 <http://dbpedia.org/property/birthName> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child WHERE {
  # Step 1: Find Jon Pertwee's birth name
  dbr:Jon_Pertwee dbo:birthName ?birthName .

  # Step 2: Find a person with the same birth name
  ?person dbo:birthName ?birthName .
  
  # Step 3: Determine their native residence, which is a British settlement
  ?person dbo:nativePlace ?settlement .
  FILTER (strstarts(str(?settlement), ""http://dbpedia.org/resource/"") && 
          EXISTS { ?settlement rdf:type dbr:Settlement } &&
          EXISTS { ?settlement dbo:country dbr:United_Kingdom })

  # Step 4: Find a French politician and office holder associated with this settlement
  ?politician dbo:nativePlace ?settlement ;
              rdf:type dbo:Politician ;
              dbo:officeHolder ?office .
  FILTER (EXISTS { ?office dbo:country dbr:France } &&
          EXISTS { ?politician dbo:birthPlace ?place } &&
          EXISTS { ?place dbo:country dbr:France })

  # Step 5: Find the child of this French politician
  ?politician dbo:child ?child .
}
```",6,10,7,3,2,3,3,71,0,0,1,0,0.0,0
959,41,test,"Give me the native of the residence, that is a country, of Yōichi Masuzoe and member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of Eiji Ōtsuka and manager of 2013 Júbilo Iwata season.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v4 . <http://dbpedia.org/resource/Yōichi_Masuzoe> <http://dbpedia.org/property/residence> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Eiji_Ōtsuka> <http://dbpedia.org/ontology/almaMater> ?v2 . ?result <http://dbpedia.org/ontology/team> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. <http://dbpedia.org/resource/2013_Júbilo_Iwata_season> <http://dbpedia.org/ontology/manager> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?nativeOfResidence WHERE {
  # Find Yōichi Masuzoe's residence country
  ?yMasuzoe dbo:birthPlace ?residence .
  FILTER (isLiteral(?residence) && regex(str(?residence), ""Country""))

  # Find Eiji Ōtsuka's alma mater that is a Japanese organization, university, and educational institution
  ?eOotsuka foaf:almaMater ?almaMater .
  ?almaMater dbo:country dbr:Japan ;
            rdf:type dbo:University ;
            rdf:type dbo:EducationalOrganization .

  # Ensure Eiji Ōtsuka was the manager of Júbilo Iwata in 2013
  ?eOotsuka dbo:managerOfSeason ?jubiloIwata .
  ?jubiloIwata dbo:season ""2013""^^xsd:string ;
               dbo:team dbr:Júbilo_Iwata .

  # Ensure the alma mater is connected to Yōichi Masuzoe's residence
  ?almaMater dbo:location ?nativeOfResidence .
}
```",5,10,6,2,3,3,3,71,0,0,1,0,0.0,0
492,31,test,Give me the commander in Franco-Hova Wars and person decedent at the work of the author of French Algeria.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/author> ?v1 . ?result <http://dbpedia.org/ontology/deathPlace> ?v0 . <http://dbpedia.org/resource/French_Algeria> <http://dbpedia.org/property/author> ?v1 . <http://dbpedia.org/resource/Franco-Hova_Wars> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commander ?decedent WHERE {
  # Finding the commander in Franco-Hova Wars
  ?war dbo:participatedIn [
    a dbo:MilitaryConflict ;
    rdfs:label ""Franco-Hova Wars""@en .
  ].
  ?war dbo:commandedBy ?commander.

  # Finding an author associated with French Algeria
  ?author dbo:nationality dbr:France ;
          dbo:work [ 
            dbo:subject dbr:French_Algeria .
          ].

  # Finding a person decedent related to the author's work
  ?decedent dbo:deathPlace ?place.
  ?place dbo:wikiPageRedirects ?relatedWork.
  ?relatedWork dbo:author ?author.
  
  FILTER (lang(?war->rdfs:label) = ""en"")
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
378,69,test,"Give me the war of the person born as the birth name of Carl Pontus Gahn and war of the commander in Peninsular War and claim to fame of the commander in the war, that is a military conflict and a societal event and an event, of Thomas Trigge.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/commander> ?v2 . <http://dbpedia.org/resource/Peninsular_War> <http://dbpedia.org/ontology/commander> ?v7 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v7 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Thomas_Trigge> <http://dbpedia.org/ontology/battle> ?v1 . ?v3 <http://dbpedia.org/property/birthName> ?v4 . ?v3 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/property/birthName> ?v4 . ?v2 <http://dbpedia.org/ontology/knownFor> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

# Step 1: Find Carl Pontus Gahn's birth name
SELECT ?birthName WHERE {
  dbr:C_P_Gahn dbo:birthName ?birthName .
}

# Step 2: Find the war associated with the person who has that birth name
SELECT DISTINCT ?war WHERE {
  ?person dbo:birthName ?birthName .
  ?person dbo:participatedInMilitaryConflict ?war .
  FILTER(?birthName = ""Carl Pontus Gahn"") # Replace with actual birth name from Step 1
}

# Step 3: Find the commander in the Peninsular War
SELECT DISTINCT ?commander WHERE {
  dbr:Peninsular_War dbo:commandedBy ?commander .
}

# Step 4: Determine Thomas Trigge's claim to fame related to a military conflict and societal event
SELECT DISTINCT ?militaryConflict ?societalEvent WHERE {
  dbr:Thomas_Trigge dbo:participatedInMilitaryConflict ?militaryConflict ;
                     dbo:knownFor ?societalEvent .
}
```",8,11,9,3,3,3,3,71,0,0,2,0,0.0,0
391,63,test,"Give me the native of the figure known as the nick name of Jackson, Tennessee and actor of the claim to fame, that is a work, of Michael Ballhaus and actor of the movie, that is a movie and a work and a television show, with Roz Ryan.","SELECT ?result WHERE { <http://dbpedia.org/resource/Michael_Ballhaus> <http://dbpedia.org/ontology/knownFor> ?v6 . <http://dbpedia.org/resource/Jackson,_Tennessee> <http://xmlns.com/foaf/0.1/nick> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v2 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Roz_Ryan> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://dbpedia.org/property/nickname> ?v4 . ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v2 <http://dbpedia.org/property/starring> ?result . ?v6 <http://dbpedia.org/ontology/starring> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?native WHERE {
  # Step 1: Identify the nickname of Jackson, Tennessee
  ?figure dbo:nativePlace dbr:Jackson,_Tennessee ;
          rdfs:label ?nickname .
  
  FILTER(CONTAINS(LCASE(?nickname), ""nick name"")) .

  # Step 2: Find Michael Ballhaus's claim to fame
  ?work dbo:director dbr:Michael_Ballhaus ;
        rdf:type dbo:Film OR dbo:TelevisionSeries .

  # Step 3: Determine the actor involved in both works
  ?actor dbo:actedIn ?work ;
         dbo:actedIn ?movie .
  
  ?movie dbo:starring dbr:Roz_Ryan ;
         rdf:type dbo:Film OR dbo:TelevisionSeries .

  FILTER(?figure = ?actor) .

  # Step 4: Retrieve the native of this actor
  ?actor dbo:nativePlace ?native .
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
701,56,test,"Give me the parent of Henuttawy (19th dynasty) and parent of the child of Nefertari and spouse of the father of the commander, that is a royalty, in Battle of Perire.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Nefertari> <http://dbpedia.org/ontology/child> ?v2 . <http://dbpedia.org/resource/Battle_of_Perire> <http://dbpedia.org/ontology/commander> ?v0 . ?result <http://dbpedia.org/ontology/spouse> ?v1 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Henuttawy_(19th_dynasty)> . ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/property/father> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parentOfHenuttawy ?royalSpouse
WHERE {
  # Parent of Henuttawy (19th dynasty)
  ?henuttawy a dbo:Person ;
             rdfs:label ""Henuttawy""@en .
  ?henuttawy dbo:parent ?parentOfHenuttawy .

  # Child of Nefertari
  ?nefertari a dbo:Person ;
             rdfs:label ""Nefertari""@en .
  ?child dbo:parent ?nefertari ;
         dbo:parent ?parentOfChild .

  # Spouse of the father of the commander in Battle of Perire
  ?commander a dbo:Person ;
             dbo:participatedIn dbr:Battle_of_Perire .
  ?father dbo:child ?commander .
  ?royalSpouse dbo:spouse ?father ;
               a dbo:RoyalFamilyMember .

  # Ensure the spouse is royalty
  ?royalSpouse a dbo:RoyalFamilyMember .

  # Linking parent of Nefertari's child to the royal spouse
  FILTER (?parentOfChild = ?royalSpouse)
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
959,67,test,"Give me the native of the residence, that is a country, of the leader, that is a politician, of 2010 Japanese House of Councillors election and manager of the team of the manager, that is a sports manager, of 1998 Kashima Antlers season and member of University of Tsukuba.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://dbpedia.org/property/residence> ?v5 . ?result <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/University_of_Tsukuba> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v0 <http://dbpedia.org/ontology/manager> ?v4 . ?result <http://dbpedia.org/ontology/birthPlace> ?v5 . <http://dbpedia.org/resource/2010_Japanese_House_of_Councillors_election> <http://dbpedia.org/property/leader> ?v1 . <http://dbpedia.org/resource/1998_Kashima_Antlers_season> <http://dbpedia.org/ontology/manager> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?nativeCountry WHERE {
  ?politician dbo:office ?office .
  ?office dbo:electionDate ?electionDate .
  FILTER (YEAR(?electionDate) = 2010 && STRSTARTS(STR(?office), ""Japanese House of Councillors""))
  
  ?manager1 dbp:teamManaged dbr:Kashima_Antlers_1998_season .
  ?manager2 dbp:teamManaged ?team .
  FILTER (?manager1 != ?manager2)
  
  ?politician dbo:memberOf ?university .
  FILTER (STR(?university) = ""University of Tsukuba"")
  
  ?politician dbp:residence ?residence .
  ?residence dbo:nativeCountry ?nativeCountry .

  ?politician dbr:Kashima_Antlers_1998_seasonManager ?manager1 .
  ?team dbp:managedBy ?manager2 .
}
```",7,10,8,3,3,3,3,71,0,0,2,0,0.0,0
184,60,test,"Give me the parent of the child of the parent of Archduchess Margaret of Austria (born 1925) and parent of the native of the landmark at elevation, that is a settlement, of 96.0.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v3 <http://dbpedia.org/ontology/elevation> ""96.0""^^<http://www.w3.org/2001/XMLSchema#double> . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Margaret_of_Austria_(born_1925)> . ?result <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v1 <http://dbpedia.org/property/father> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commonParent WHERE {
  # Part 1: Archduchess Margaret of Austria (born 1925)
  ?margaret a dbo:Person ;
            dbo:birthYear ""1925""^^xsd:gYear ;
            dbo:parent ?parentMargaret .
  
  ?childOfParent a dbo:Person ;
                 dbo:parent ?parentMargaret .

  ?grandChildOfParent a dbo:Person ;
                      dbo:parent ?childOfParent .

  ?parentOfGrandChildOfParent a dbo:Person ;
                             dbo:parent ?grandChildOfParent .

  # Part 2: Landmark at elevation 96.0
  ?landmark a dbo:Settlement ;
            dbo:elevation ""96.0""^^xsd:float .
  
  ?native dbr:birthPlace ?landmark ;
          dbo:parent ?parentNative .

  # Find common parent
  FILTER (?parentOfGrandChildOfParent = ?parentNative)
}
```",6,7,7,3,2,3,3,71,0,0,2,0,0.0,0
747,23,test,"Give me the person born on the birth date of the person decedent, that is an athlete and a soccer player, at Zolotonosha.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Zolotonosha> . ?result <http://dbpedia.org/ontology/birthDate> ?v0 . ?v2 <http://dbpedia.org/ontology/birthDate> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?decedent dbo:birthDate ?birthdate .
  
  ?person dbo:sport ?sport ;
          dbo:birthDate ?birthdate ;
          dbo:birthPlace dbr:Zolotonosha .

  FILTER EXISTS { ?person dbo:sport dbr:Soccer } .
}
```",3,5,4,3,1,3,3,71,0,0,30,0,0.0,0
16,53,test,Give me the person born as the birth name of Gigi Rice and spouse of the person born as the birth name of Ted McGinley and professional in Actress.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ?v3 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Gigi_Rice> <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/property/occupation> ""Actress""@en . ?result <http://dbpedia.org/property/birthName> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  # Find Gigi Rice's birth name
  ?gigiResource rdfs:label ""Gigi Rice""@en .
  ?gigiResource dbo:birthName ?birthName .

  # Find Ted McGinley's birth name and confirm his profession as an actor
  ?tedResource rdfs:label ""Ted McGinley""@en .
  ?tedResource dbo:birthName ?tedBirthName .
  ?tedResource dbo:occupation ?occupation .
  FILTER(CONTAINS(LCASE(?occupation), ""actor""))

  # Find the spouse of Ted McGinley (using his birth name)
  ?spouseResource dbp:spouse ?tedResource .

  # Check if this spouse was born with Gigi Rice's birth name
  ?spouseResource dbo:birthName ?birthName .
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
281,44,test,"Give me the war of the profession, that is a military unit, of Heather Roy and entity in the birth place, that is a country, of Bob Heffron and war of Beauchamp Seymour, 1st Baron Alcester.","SELECT ?result WHERE { <http://dbpedia.org/resource/Beauchamp_Seymour,_1st_Baron_Alcester> <http://dbpedia.org/ontology/battle> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Heather_Roy> <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/Bob_Heffron> <http://dbpedia.org/ontology/birthPlace> ?v4 . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?result <http://dbpedia.org/ontology/place> ?v4 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?war WHERE {
  # Heather Roy's profession related to a military unit
  dbr:Heather_Roy dbo:profession ?militaryUnit .

  # Bob Heffron's birthplace country
  dbr:Bob_Heffron dbp:birthPlaceCountry ?country .

  # Beauchamp Seymour, 1st Baron Alcester's war
  dbr:Beauchamp_Seymour,_1st_Baron_Alcester dbo:participatedInWar ?warSeymour .

  # Find a common war involving the military unit and Beauchamp Seymour
  ?militaryUnit dbo:participatedInWar ?commonWar .
  FILTER (?commonWar = ?warSeymour)

  # Ensure the country is related to the war (e.g., location or participant)
  ?country dbo:location ?warLocation .
  FILTER (?warLocation = ?commonWar)
}
```",5,7,6,2,3,3,3,71,0,0,1,0,0.0,0
294,21,test,"Give me the resting place of Edwin A. Keeble and resting place of Luke Lea (American politician, born 1879) and entity in the birth place, that is a settlement, of Marion James.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/location> ?v0 . <http://dbpedia.org/resource/Luke_Lea_(American_politician,_born_1879)> <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Marion_James> <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Edwin_A._Keeble> <http://dbpedia.org/ontology/restingPlace> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?restingPlaceEdwinAkeebles ?restingPlaceLukeLeas ?settlementMarionJames

WHERE {
  # Resting place of Edwin A. Keeble
  OPTIONAL { 
    dbr:Edwin_A._Keeble dbo:deathPlace ?restingPlaceEdwinAkeebles .
  }

  # Resting place of Luke Lea (American politician, born 1879)
  OPTIONAL {
    ?lukeLea a dbo:Politician ;
             dbo:birthYear ""1879""^^xsd:gYear ;
             dbo:deathPlace ?restingPlaceLukeLeas .
    FILTER EXISTS { ?lukeLea rdfs:label ""Luke Lea (American politician, born 1879)""@en }
  }

  # Entity in the birth place of Marion James
  OPTIONAL {
    dbr:Marion_James dbo:birthPlace ?birthPlaceMarionJames .
    ?settlement a dbo:Settlement ;
                dbo:location ?birthPlaceMarionJames .
  }
}
```",4,5,5,2,3,2,3,28,0,1,1,0.0,0.0,0
328,69,test,"Give me the commander in the force of Ferenc Szálasi and awardee of the award of the commander in Volcano and Ryukyu Islands campaign and leader of the office, that is a government agency, of the leader, that is an office holder and a politician, of Gustav Jonson.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ?v3 . ?v1 <http://dbpedia.org/property/office> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v7 <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://dbpedia.org/property/awards> ?v3 . <http://dbpedia.org/resource/Gustav_Jonson> <http://dbpedia.org/property/leader> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Volcano_and_Ryukyu_Islands_campaign> <http://dbpedia.org/ontology/commander> ?v4 . ?v2 <http://dbpedia.org/ontology/leader> ?result . ?v7 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Ferenc_Szálasi> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?commander WHERE {
  ?force dbo:commander ?commander .
  ?commander dbo:award ?award .
  ?campaign dbo:name ""Volcano and Ryukyu Islands campaign"" ;
            dbo:awardee ?commander .
  
  ?office dbo:governmentAgency true ;
          dbo:leader ?commander .
  ?gustav dbp:position ?office .

  ?ferenc dbo:commander ?force .
  ?ferenc foaf:name ""Ferenc Szálasi""^^xsd:string .

  ?gustav foaf:name ""Gustav Jonson""^^xsd:string .
}
```",8,11,9,3,3,3,3,71,0,0,1,0,0.0,0
617,32,test,"Give me the child of the child, that is a royalty, of Seleucus II Callinicus and spouse of the child of Antiochus III the Great.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Antiochus_III_the_Great> <http://dbpedia.org/ontology/child> ?v3 . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seleucus_II_Callinicus> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?childOfChild WHERE {
  # Seleucus II Callinicus and his children
  ?seleucus2 dbo:spouse ?spouse .
  FILTER(STR(?seleucus2) = ""Seleucus_II_Callinicus"")

  # Child of Seleucus II who is royalty
  ?seleucusChild dbo:childOf ?seleucus2 ;
                 dbo:title ?title .
  FILTER(CONTAINS(LCASE(str(?title)), ""king"") || CONTAINS(LCASE(str(?title)), ""queen""))

  # Spouse of the royal child
  ?royalChildSpouse dbo:spouse ?seleucusChild .

  # Antiochus III the Great and his children
  ?antiochus3 dbo:child ?antiochusChild .
  FILTER(STR(?antiochus3) = ""Antiochus_III_the_Great"")

  # Child of the spouse who is royalty
  ?spouseChild dbo:childOf ?royalChildSpouse ;
               dbo:title ?title2 .
  FILTER(CONTAINS(LCASE(str(?title2)), ""king"") || CONTAINS(LCASE(str(?title2)), ""queen""))

  # Ensure the child of the spouse is also a child of Antiochus III's child
  ?spouseChild dbo:childOf ?antiochusChild .

  BIND(?spouseChild AS ?childOfChild)
}
```",4,5,5,2,2,3,3,71,0,0,4,0,0.0,0
392,27,test,"Give me the province of the residence, that is a settlement and Italian, of Sebastiano Bianchetti and region of the time zone, that is a sports event, of Aguilar de Segarra and entity in Italy.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsEvent>. ?result <http://dbpedia.org/ontology/timeZone> ?v3 . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. <http://dbpedia.org/resource/Aguilar_de_Segarra> <http://dbpedia.org/ontology/timeZone> ?v3 . ?v2 <http://dbpedia.org/ontology/province> ?result . <http://dbpedia.org/resource/Sebastiano_Bianchetti> <http://dbpedia.org/property/residence> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?province ?region WHERE {
  # Sebastiano Bianchetti's residence
  ?residence dbo:resident dbr:Sebastiano_Bianchetti ;
             a dbo:Settlement ;
             dbo:country dbr:Italy .
  
  # Province of the residence
  ?residence dbo:administrativeTerritory ?province .

  # Aguilar de Segarra's time zone and related sports event region
  ?aguilar dbo:timeZone ?timezone .
  ?event dbo:location ?aguilar ;
         a dbo:SportsEvent .
  
  ?timezone dbo:region ?region .

  # Ensure the entity is in Italy
  ?province dbo:country dbr:Italy .
}
```",5,8,6,2,3,2,3,28,0,0,1,0,0.0,0
427,60,test,"Give me the reference to the name of the party of Michele Pinto and party of the person born, that is an office holder and a politician, as the birth name of Romano Prodi.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . <http://dbpedia.org/resource/Michele_Pinto> <http://dbpedia.org/ontology/party> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/ontology/party> ?result . ?v3 <http://xmlns.com/foaf/0.1/name> ?v2 . <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/property/birthName> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?micheleParty ?romanoBirthName WHERE {
  # Find Michele Pinto's party
  ?michele a dbo:Politician ;
           foaf:name ""Michele Pinto""@en .
  ?michele dbo:party ?micheleParty .

  # Find Romano Prodi's birth name and confirm he is an office holder and politician
  ?romano a dbo:OfficeHolder, dbo:Politician ;
          foaf:name ""Romano Prodi""@en ;
          dbo:birthName ?romanoBirthName .
}
```",6,8,7,3,2,3,3,71,2,1,0,0.6666666666666666,1.0,0.8
404,26,test,"Give me the parent of the child, that is a royalty, of the parent, that is a royalty, of Prince George William of Hanover.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Prince_George_William_of_Hanover> <http://dbpedia.org/ontology/parent> ?v1 . ?v1 <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/ontology/child> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?grandparent ?royalChild ?royalGrandchild ?finalParent
WHERE {
  # Prince George William of Hanover
  ?prince rdfs:label ""Prince George William of Hanover""@en .
  
  # His parent who is a royalty
  ?prince dbo:parent ?parent .
  ?parent rdf:type dbo:Monarch .

  # The child of this royal parent who is also a royalty
  ?parent dbo:child ?royalChild .
  ?royalChild rdf:type dbo:Monarch .

  # The parent of this royal child
  ?royalChild dbo:parent ?finalParent .
}
```",3,5,4,3,1,3,3,71,0,0,2,0,0.0,0
767,57,test,Give me the entity in Baden-Württemberg and reference to the alter ego of Black Hood and alma mater of the administration of the reference to George Kilbon Nash.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Black_Hood> <http://dbpedia.org/property/alterEgo> ?v3 . ?v0 <http://xmlns.com/foaf/0.1/name> ""George Kilbon Nash""@en . ?result <http://dbpedia.org/ontology/state> <http://dbpedia.org/resource/Baden-Württemberg> . ?v5 <http://dbpedia.org/property/governor> ?v0 . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . ?v5 <http://dbpedia.org/ontology/almaMater> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entityInBW ?alterEgo ?almaMater
WHERE {
  ?entityInBW dbo:location dbr:Baden-Württemberg .
  
  ?character dbo:alias dbr:Black_Hood ;
             dbo:alterEgo ?alterEgo .

  ?admin dbo:almaMater ?almaMater .
  ?admin dbo:associatedWith dbr:George_Kilbon_Nash .

  FILTER(?entityInBW = ?alterEgo || ?entityInBW = ?almaMater)
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
994,68,test,"Give me the associated musical artist of the band member, that is a band and a group and an organisation, of the band, that is an organisation, of Fredrik Thordendal and band member of the person born, that is a musical artist, as Donald Maynard Dokken and associated musical artist of the associated musical artist of the reference to Watchtower.","SELECT ?result WHERE { ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v6 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v6 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v0 <http://dbpedia.org/property/birthName> ""Donald Maynard Dokken""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Fredrik_Thordendal> . ?v4 <http://xmlns.com/foaf/0.1/name> ""Watchtower""@en . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?associatedArtist
WHERE {
  # Fredrik Thordendal's band Meshuggah
  dbr:Fredrik_Thordendal dbo:bandMemberOf dbr:Meshuggah .
  
  # Associated artists with Meshuggah
  ?meshuggahRelated dbo:member dbr:Meshuggah ;
                   a dbo:Band .

  # Donald Maynard Dokken's band Dokken
  dbr:Donald_Maynard_Dokken dbo:bandMemberOf dbr:Dokken .
  
  # Associated artists with Dokken
  ?dokkenRelated dbo:member dbr:Dokken ;
                a dbo:Band .

  # Reference to Watchtower
  ?watchtowerRelated dbo:associatedMusicalArtist ?artist ;
                     a dbo:Band ;
                     rdfs:label ""Watchtower""@en .

  # Find common associated artist
  ?meshuggahRelated = ?dokkenRelated .
  ?dokkenRelated = ?watchtowerRelated .

  # Return the associated artist
  ?dokkenRelated rdfs:label ?associatedArtist .
}
```",8,13,9,3,3,3,3,71,0,0,1,0,0.0,0
391,22,test,"Give me the native of Compton, California and actor of the movie, that is a movie and a work and a television show, with Roz Ryan.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Roz_Ryan> . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Compton,_California> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://dbpedia.org/property/starring> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?actor WHERE {
  ?person dbo:nationality dbr:United_States ;
          dbo:birthPlace dbr:Compton,_California .
  
  ?movie a dbo:Film ;
         dbo:starring ?actor ;
         dbo:genre dbr:Television_series .

  ?actor dbp:name ""Roz Ryan""@en.

  FILTER(?person = ?actor)
}
```",3,6,4,2,2,3,3,71,0,0,1,0,0.0,0
232,46,test,"Give me the actor of the claim to fame, that is a film and a military conflict, of Sean Pertwee and child of the person born as the birth name of Jon Pertwee.",SELECT ?result WHERE { <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Sean_Pertwee> <http://dbpedia.org/ontology/knownFor> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://dbpedia.org/property/birthName> ?v2 . ?v1 <http://dbpedia.org/ontology/child> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v4 <http://dbpedia.org/ontology/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?filmOrConflict ?actorRole WHERE {
  # Identify Jon Pertwee and his child Sean Pertwee
  dbr:Jon_Pertwee dbo:child dbr:Sean_Pertwee .
  
  # Find Sean Pertwee's notable works (films or military conflicts)
  OPTIONAL { 
    dbr:Sean_Pertwee dbo:film dbr:?Film .
    BIND(dbr:?Film AS ?filmOrConflict)
  }
  OPTIONAL {
    dbr:Sean_Pertwee dbo:militaryConflict dbr:?MilitaryConflict .
    BIND(dbr:?MilitaryConflict AS ?filmOrConflict)
  }

  # Check if Sean Pertwee acted in the film or was involved in the military conflict
  OPTIONAL {
    ?filmOrConflict dbo:actor dbr:Sean_Pertwee .
    BIND(""Actor"" AS ?actorRole)
  }
  OPTIONAL {
    ?filmOrConflict dbo:participant dbr:Sean_Pertwee .
    BIND(""Participant"" AS ?actorRole)
  }

  FILTER(?actorRole != """")
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
701,67,test,"Give me the parent of Meritamen and spouse of the father of the commander, that is a royalty, in Battle of Perire and parent of the child of the child of Seti I.",SELECT ?result WHERE { <http://dbpedia.org/resource/Meritamen> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/spouse> ?v3 . <http://dbpedia.org/resource/Battle_of_Perire> <http://dbpedia.org/ontology/commander> ?v1 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seti_I> . ?result <http://dbpedia.org/ontology/child> ?v6 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> ?v3 . ?v6 <http://dbpedia.org/property/father> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parentOfMeritamen ?royalSpouse WHERE {
  # Parent of Meritamen
  ?meritamen a dbr:Meritamen ;
             dbo:parent ?parentOfMeritamen .

  # Commander in Battle of Perire and their father's spouse
  ?battle a dbr:Battle_of_Perire .
  ?commander dbo:participatedIn ?battle ;
            dbo:father ?fatherOfCommander .
  ?fatherOfCommander dbo:spouse ?royalSpouse .

  # Ensure the spouse is royalty
  FILTER EXISTS { ?royalSpouse a dbo:RoyalFamilyMember }

  # Parent of the child of the child of Seti I
  ?setiI a dbr:Seti_I ;
         dbo:child ?childOfSetiI .
  ?childOfSetiI dbo:child ?grandChildOfSetiI .
  ?parentOfGrandChildOfSetiI dbo:child ?grandChildOfSetiI .

  # Ensure the parent of Meritamen is also the parent of the grandchild
  FILTER (?parentOfMeritamen = ?parentOfGrandChildOfSetiI)
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
659,42,test,"Give me the military force of the force, that is a societal event and an event and a military conflict, of Rutger Jan Schimmelpenninck and commander in Battle of Leipzig and commander in the force of Arthur Wellesley, 1st Duke of Wellington.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Arthur_Wellesley,_1st_Duke_of_Wellington> . <http://dbpedia.org/resource/Battle_of_Leipzig> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?militaryForce ?battleCommander ?wellingtonForce
WHERE {
  ?schimmelpenninck dbo:nationality ""Netherlands""@en .
  ?schimmelpenninck dbo:militaryConflict ?militaryForce .
  ?militaryForce a dbo:MilitaryConflict ;
                 dbo:societalEvent ?societalEvent .

  ?battle dbp:commander ?battleCommander .
  ?battle rdfs:label ""Battle of Leipzig""@en .
  ?battle dbo:militaryConflict ?militaryForce .

  ?wellington dbp:name ""Arthur Wellesley, 1st Duke of Wellington""@en ;
              dbo:commander ?wellingtonForce .
}
```",5,8,6,2,3,3,3,71,0,0,6,0,0.0,0
547,23,test,Give me the resting place of the child of the child of William Haliburton.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://dbpedia.org/ontology/restingPlace> ?result . ?v2 <http://dbpedia.org/property/father> ""William Haliburton""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?grandchild ?restingPlace
WHERE {
  ?williamHaliburton a dbo:Person ;
                    foaf:name ""William Haliburton""@en .
  
  ?williamHaliburton dbo:child ?child .
  ?child dbo:child ?grandchild .

  OPTIONAL { 
    ?grandchild dbo:finalRestingPlace ?restingPlace .
  }
}
```",3,3,4,3,1,3,3,71,0,0,2,0,0.0,0
314,28,test,"Give me the commander in the profession, that is an event and a societal event, of Lisa Gavrić and awardee of the award of Sergei Makovetsky and person deceased at the headquarter of House of Sombrerete.",SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/House_of_Sombrerete> <http://dbpedia.org/ontology/location> ?v1 . ?result <http://dbpedia.org/ontology/restingPlace> ?v1 . ?v5 <http://dbpedia.org/ontology/commander> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Sergei_Makovetsky> <http://dbpedia.org/property/awards> ?v3 . ?result <http://dbpedia.org/property/awards> ?v3 . <http://dbpedia.org/resource/Lisa_Gavrić> <http://dbpedia.org/property/occupation> ?v5 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?commander WHERE {
  ?commander a dbo:Person .
  
  # Lisa Gavrić's profession as an event and societal event
  ?professionEvent dbo:agent ?commander ;
                  rdf:type dbo:Event ;
                  rdf:type dbo:SocietalEvent .

  # Award by Sergei Makovetsky
  ?award dbo:recipient ?commander ;
         dbp:name ""Sergei Makovetsky"" .
  
  # Deceased at the headquarters of House of Sombrerete
  ?deathPlace dbo:location dbr:House_of_Sombrerete ;
              dbo:deceased ?commander .

}
```",6,8,7,2,3,2,3,28,0,0,1,0,0.0,0
184,35,test,Give me the parent of the child of Archduke Joseph Francis of Austria and parent of the native of Budapest.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v2 . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Francis_of_Austria> . ?result <http://dbpedia.org/ontology/child> ?v1 . ?v2 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Budapest> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?grandParent1 ?grandParent2 WHERE {
  # Part 1: Parent of the child of Archduke Joseph Francis of Austria
  ?child dbo:parent dbr:Archduke_Joseph_Francis_of_Austria .
  ?child dbo:parent ?grandParent1 .

  # Part 2: Parent of a native of Budapest
  ?native dbo:nativePlace dbr:Budapest .
  ?native dbo:parent ?grandParent2 .
}
```",4,4,5,2,2,3,3,71,0,0,2,0,0.0,0
801,55,test,"Give me the associated musical artist of the writer, that is a musical artist and an artist, of 40 Dayz & 40 Nightz and producer of the work, that is a musical work and a song and a work, of 50 Cent and professional in the alter ego of The Shadow.",SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v5 <http://dbpedia.org/ontology/producer> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v5 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/50_Cent> . <http://dbpedia.org/resource/40_Dayz_&_40_Nightz> <http://dbpedia.org/property/writer> ?v2 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v3 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?producer WHERE {
  # Identify the album ""40 Dayz & 40 Nightz""
  dbr:40_Dayz_&_40_Nightz dbo:artist dbr:50_Cent .
  
  # Find the producer of this album
  dbr:40_Dayz_&_40_Nightz dbo:producer ?producer .

  # Ensure the producer is a musical artist and has an alter ego named The Shadow
  ?producer a dbo:MusicalArtist ;
           dbo:alterEgo dbr:The_Shadow .
}
```",6,11,7,2,3,3,3,71,0,0,1,0,0.0,0
488,42,test,Give me the death place of Tokugawa Ieyasu and administration of the father of Emperor Go-Mizunoo and birth place of the commander in Boshin War.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> ?v1 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Tokugawa_Ieyasu> <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Boshin_War> <http://dbpedia.org/ontology/commander> ?v2 . <http://dbpedia.org/resource/Emperor_Go-Mizunoo> <http://dbpedia.org/property/father> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?deathPlace ?administration ?birthPlace WHERE {
  # Death place of Tokugawa Ieyasu
  { 
    dbr:Tokugawa_Ieyasu dbo:deathPlace ?deathPlace .
  }
  
  UNION
  
  # Administration of the father of Emperor Go-Mizunoo (Emperor Go-Yōzei)
  { 
    dbr:Go_Mizunoo dbo:father dbr:Go_Yozei ;
                  dbo:office ?administration .
  }

  UNION

  # Birth place of Saigō Takamori, a commander in the Boshin War
  {
    dbr:Saigo_Takamori dbo:birthPlace ?birthPlace .
  }
}
```",5,5,6,2,3,3,3,71,1,1,0,0.5,1.0,0.6666666666666666
528,46,test,"Give me the war of the commander in Battle of La Rinconada de Ate and war of the military force of the entity, that is a societal event, in Chile.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/battle> ?v2 . ?v1 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Battle_of_La_Rinconada_de_Ate> <http://dbpedia.org/ontology/commander> ?v4 . ?v2 <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Chile> . ?v4 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?war WHERE {
  # Find the commander of the Battle of La Rinconada de Ate
  dbr:Battle_of_La_Rinconada_de_Ate dbo:commander ?commander .
  
  # Find wars that this commander participated in, specifically those related to Chile
  ?commander dbo:participatedIn ?war .
  ?war dbo:location dbr:Chile .
}
```",5,6,6,3,2,3,3,71,0,0,14,0,0.0,0
701,52,test,Give me the parent of the child of the spouse of Amun-her-khepeshef and spouse of Ramesses II and parent of the child of Ramesses II.,SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ramesses_II> . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Ramesses_II> . ?result <http://dbpedia.org/ontology/child> ?v5 . ?v3 <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Amun-her-khepeshef> <http://dbpedia.org/ontology/spouse> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?parent
WHERE {
  # Step 1: Identify Amun-her-khepeshef and his spouse
  ?amunherkhepeshef rdfs:label ""Amun-her-khepeshef""@en .
  ?spouse1 dbo:spouse ?amunherkhepeshef .

  # Step 2: Find the child of this spouse
  ?child1 dbo:parent ?spouse1 .

  # Step 3: Identify the parent of this child (should be Amun-her-khepeshef's spouse)
  ?parent1 dbo:parent ?child1 .

  # Step 4: Identify Ramesses II and his spouse
  ?ramessesii rdfs:label ""Ramesses II""@en .
  ?spouse2 dbo:spouse ?ramessesii .

  # Step 5: Find a child of Ramesses II
  ?child2 dbo:parent ?ramessesii .

  # Step 6: Identify the parent of this child (should be Ramesses II's spouse)
  ?parent2 dbo:parent ?child2 .

  # Step 7: Ensure both parents are the same individual
  FILTER (?parent1 = ?parent2)

  # Return the common parent
  BIND(?parent1 AS ?parent)
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
427,54,test,Give me the party of the father of the alumnus of Massachusetts Institute of Technology and reference to the name of Italian People's Party (1994) and party of Romano Prodi.,SELECT ?result WHERE { <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/ontology/party> ?result . ?v0 <http://dbpedia.org/property/father> ?v5 . <http://dbpedia.org/resource/Italian_People's_Party_(1994)> <http://xmlns.com/foaf/0.1/name> ?v3 . ?v5 <http://dbpedia.org/ontology/party> ?result . ?v0 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Massachusetts_Institute_of_Technology> . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?alumnus ?fatherName ?fatherParty ?italianPeopleParty ?prodiParty
WHERE {
  # Find an alumnus of MIT
  ?alumnus dbo:almaMater dbr:Massachusetts_Institute_of_Technology .
  
  # Get the father of that alumnus
  ?alumnus foaf:parent ?father .
  ?father foaf:name ?fatherName .

  # Find the political party affiliation of the father
  OPTIONAL { ?father dbp:partyAffiliation ?fatherParty . }

  # Reference to Italian People's Party (1994)
  dbr:Italian_People%27s_Party_(1994) dbp:officialName ?italianPeopleParty .

  # Find Romano Prodi’s party affiliation
  dbr:Romano_Prodi dbp:partyAffiliation ?prodiParty .
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
963,16,test,"Give me the administration of the ruling party, that is a political party, in Sremski Karlovci and entity in the region, that is a country, of Central European Time.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/leaderParty> ?v3 . ?result <http://dbpedia.org/ontology/country> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Sremski_Karlovci> <http://dbpedia.org/property/leaderParty> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v2 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?party ?administration WHERE {
  # Find the country in Central European Time that contains Sremski Karlovci
  ?country dbo:timeZone dbr:Central_European_Time ;
           dbo:containsCity dbr:Sremski_Karlovci .

  # Identify the ruling political party in Serbia
  ?party dbo:country ?country ;
         dbp:rulingParty ""true""^^xsd:boolean .

  # Get administration details of the ruling party
  OPTIONAL { ?party dbo:administration ?administration }
}
```",4,6,5,2,2,3,2,20,0,0,84,0,0.0,0
435,27,test,Give me the territory administered from Reykjavík and work of the author of Iceland and region of the time zone in Bombali Shebora Chiefdom.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/timeZone> ?v3 . <http://dbpedia.org/resource/Iceland> <http://dbpedia.org/property/author> ?v2 . <http://dbpedia.org/resource/Bombali_Shebora_Chiefdom> <http://dbpedia.org/ontology/timeZone> ?v3 . ?result <http://dbpedia.org/property/author> ?v2 . ?result <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Reykjavík> . },"```sparql
# Query 1: Territory administered from Reykjavík
SELECT ?territory WHERE {
  ?capital rdfs:label ""Reykjavík""@en .
  ?country dcterms:location ?capital ;
           dbo:administrativeTerritory ?territory .
}

UNION

# Query 2: Work of the author of ""Iceland""
SELECT ?work WHERE {
  ?book dbo:title ""Iceland""@en ;
        dbo:author ?author .
  ?author dbo:notableWorks ?work .
}

UNION

# Query 3: Region of the time zone in Bombali Shebora Chiefdom
SELECT ?region WHERE {
  ?chiefdom rdfs:label ""Bombali Shebora Chiefdom""@en .
  ?chiefdom dbo:timeZone ?timezone ;
            dbo:locatedIn ?location .
  ?location dbo:partOf ?region .
}
```",5,5,6,2,3,2,3,28,0,0,1,0,0.0,0
184,48,test,"Give me the parent of the child of Archduke Joseph Francis of Austria and parent of the native of the landmark at elevation, that is a settlement, of 96.0.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v1 . ?result <http://dbpedia.org/ontology/child> ?v2 . ?v3 <http://dbpedia.org/ontology/elevation> ""96.0""^^<http://www.w3.org/2001/XMLSchema#double> . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Francis_of_Austria> . ?v2 <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

# Part 1: Parent of the Child of Archduke Joseph Francis of Austria
SELECT ?parentOfChild WHERE {
    ?archduke a dbo:Archduke ;
              foaf:name ""Joseph Francis of Austria""@en .
    ?child dbo:child ?archduke .
    ?parentOfChild dbo:parent ?child .
}

UNION

# Part 2: Parent of the Native of the Landmark at Elevation 96.0
SELECT ?parentOfNative WHERE {
    ?landmark a dbo:Settlement ;
              dbo:elevation ""96.0""^^xsd:float .
    ?native dbo:nativePlace ?landmark .
    ?person dbo:native ?native ;
            foaf:name ?name .
    ?parentOfNative dbo:parent ?person .
}
```",5,6,6,3,2,3,3,71,0,0,2,0,0.0,0
659,47,test,"Give me the commander in the force of Arthur Wellesley, 1st Duke of Wellington and commander in the war, that is an event and a military conflict, of the figure known, that is a military unit and an organisation, as 'Polish Horse'.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/property/nickname> ""'Polish Horse'""@en . ?v0 <http://dbpedia.org/ontology/battle> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Arthur_Wellesley,_1st_Duke_of_Wellington> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v4 <http://dbpedia.org/ontology/commander> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?commander WHERE {
  # Arthur Wellesley, 1st Duke of Wellington
  VALUES ?welshesley { dbr:Arthur_Wellesley_1st_Duke_of_Wellington }

  # Polish Horse as a military unit and organization
  ?polishHorse rdfs:label ""Polish Horse""@en .
  ?polishHorse dbo:militaryUnit true ;
               dbo:organization true .

  # Find the commander in force relationship
  ?event dbo:commander ?commander .
  ?event dbo:participatedIn ?welshesley .
  ?event rdf:type ?eventType .

  FILTER (
    ?eventType IN (dbr:Military_conflict, dbr:Event) &&
    ?commander != ?welshesley
  )
}
```",5,9,6,3,2,3,3,71,0,0,71,0,0.0,0
534,16,test,"Give me the headquarter of the owner of RDS Arena and birth place of the child, that is a politician and an office holder, of Desmond FitzGerald (politician).",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/ontology/headquarter> ?result . <http://dbpedia.org/resource/RDS_Arena> <http://dbpedia.org/ontology/owner> ?v3 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Desmond_FitzGerald_(politician)> <http://dbpedia.org/ontology/child> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?headquarter ?birthPlace WHERE {
  # Step 1: Find the owner of RDS Arena
  ?arena dbo:name ""RDS Arena""@en .
  ?arena dbo:owner ?owner .

  # Step 2: Get the headquarters location of the owner
  ?owner dbo:headquartersLocation ?headquarter .

  # Step 3: Identify Desmond FitzGerald's child who is a politician and office holder
  ?desmond foaf:name ""Desmond FitzGerald""@en .
  ?desmond foaf:child ?child .
  ?child dbo:occupation ?occupation .
  
  FILTER (
    CONTAINS(LCASE(?occupation), ""politician"") &&
    CONTAINS(LCASE(?occupation), ""office holder"")
  )

  # Step 4: Get the birthplace of this child
  ?child dbo:birthPlace ?birthPlace .
}
```",4,6,5,2,2,3,2,20,0,0,1,0,0.0,0
754,16,test,Give me the parent of the child of Ram Khamhaeng and parent of the parent of May Hnin Htapi.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ram_Khamhaeng> <http://dbpedia.org/ontology/child> ?v3 . <http://dbpedia.org/resource/May_Hnin_Htapi> <http://dbpedia.org/ontology/parent> ?v2 . ?result <http://dbpedia.org/ontology/child> ?v3 . ?v2 <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT DISTINCT ?grandParent ?grandGrandParent WHERE {
  # For Ram Khamhaeng's child's parent (grandparent)
  ?child dbo:parent dbr:Ram_Khamhaeng .
  ?child dbo:parent ?grandParent .

  # For May Hnin Htapi's grandparent
  ?parent dbo:parent dbr:May_Hnin_Htapi .
  ?parent dbo:parent ?grandGrandParent .
}
```",4,4,5,2,2,3,2,20,1,3,0,0.25,1.0,0.4
92,64,test,"Give me the band of the person born as the birth name of Joseph Michael and associated musical artist of Jim Sheppard and band member of the reference, that is an artist, to the name of Nevermore (2006 film).",SELECT ?result WHERE { ?v2 <http://xmlns.com/foaf/0.1/name> ?v3 . ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . <http://dbpedia.org/resource/Jim_Sheppard> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Joseph_Michael> <http://dbpedia.org/property/birthName> ?v0 . ?result <http://dbpedia.org/ontology/bandMember> ?v1 . <http://dbpedia.org/resource/Nevermore_(2006_film)> <http://xmlns.com/foaf/0.1/name> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?band ?artist WHERE {
  # Find the band of Joe Satriani (Joseph Michael)
  OPTIONAL {
    dbr:Joe_Satriani dbo:associatedBand ?band .
  }

  # Find the associated musical artist of Jim Sheppard
  OPTIONAL {
    dbr:Jim_Sheppard dbo:associatedBand ?artist .
  }

  # Find a band member from Nevermore who is also an artist
  OPTIONAL {
    ?member dbo:associatedBand dbr:Nevermore ;
            a dbo:Artist .
  }
}
```",7,8,8,3,3,3,3,71,1,1,0,0.5,1.0,0.6666666666666666
391,30,test,"Give me the native of Compton, California and actor of the movie, that is a movie and a work and a television show, with Roz Ryan and actor of The Departed.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Roz_Ryan> . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Compton,_California> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/The_Departed> <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://dbpedia.org/property/starring> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actor WHERE {
  ?actor dbo:birthPlace dbr:Compton,_California .
  
  ?movie dbo:starring ?actor ;
         a dbo:Film ;
         dbo:work ?work ;
         dbo:televisionShow ?tvshow .

  ?work dbo:creator ?rozRyan .
  FILTER (str(?rozRyan) = ""Roz Ryan"") 

  ?departed dbr:The_Departed ;
           dbo:starring ?actor .

}
```",4,7,5,2,3,3,3,71,0,0,1,0,0.0,0
92,59,test,"Give me the associated musical artist of the person born, that is an artist, as the actor of Return to Nuke 'Em High Volume 1 and band member of the reference, that is an artist, to the name of Nevermore (2006 film).",SELECT ?result WHERE { <http://dbpedia.org/resource/Nevermore_(2006_film)> <http://xmlns.com/foaf/0.1/name> ?v3 . <http://dbpedia.org/resource/Return_to_Nuke_'Em_High_Volume_1> <http://dbpedia.org/property/starring> ?v0 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v5 <http://dbpedia.org/property/birthName> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://xmlns.com/foaf/0.1/name> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor ?band WHERE {
  # Step 1: Find the actor of ""Return to Nuke 'Em High Volume 1""
  ?movie dbo:starring ?actor .
  FILTER(STRSTARTS(LCASE(?movie), LCASE(""return_to_nuke_em_high_volume_1"")))

  # Step 2: Check if this person is also a musical artist
  OPTIONAL { ?actor dbo:occupation dbr:Musical_artist . }

  # Step 3: Find out which band they are associated with
  OPTIONAL {
    ?bandMember dbo:member ?band .
    FILTER(?bandMember = ?actor)
  }
  
  # Step 4: Identify connection to ""Nevermore"" (2006 film) as an artist reference
  OPTIONAL {
    ?film dbo:title dbr:Nevermore_(2006_film) .
    ?film dbo:starring ?artist .
    FILTER(?bandMember = ?artist)
  }
  
  # Ensure the actor is also a musical artist and has band association
  FILTER(BOUND(?actor) && EXISTS { ?actor dbo:occupation dbr:Musical_artist . } && EXISTS { ?bandMember dbo:member ?band . })
}
```",6,8,7,3,2,3,3,71,0,0,1,0,0.0,0
801,63,test,"Give me the associated musical artist of the writer, that is a musical artist and an artist, of 40 Dayz & 40 Nightz and professional in the alter ego of the true self of The Shadow and producer of the work, that is a musical work and a song and a work, of 50 Cent.","SELECT ?result WHERE { ?v4 <http://xmlns.com/foaf/0.1/givenName> ""The Shadow""@en . ?v6 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/50_Cent> . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/property/occupation> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/40_Dayz_&_40_Nightz> <http://dbpedia.org/property/writer> ?v2 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v6 <http://dbpedia.org/ontology/producer> ?result . ?v4 <http://dbpedia.org/property/alterEgo> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?artist WHERE {
    # Identify the writer of ""40 Dayz & 40 Nightz""
    ?song dbo:lyricsBy ?writer .
    ?song rdfs:label ""40 Dayz & 40 Nightz""@en .

    # Ensure the writer is associated with 50 Cent
    ?writer dbo:associatedMusicalArtist dbr:50_Cent .

    # Find an artist who is both a musical and general artist
    ?artist dbo:associatedMusicalArtist ?writer ;
            rdf:type dbo:Musician, dbo:Artist .

    # Check for the alter ego ""The Shadow""
    OPTIONAL { ?artist dbo:alias ""The Shadow""@en . }

    # Verify they produced works for 50 Cent
    ?production dbo:producer ?artist .
    ?production dbo:musicalWork dbr:50_Cent .
}
```",7,12,8,3,3,3,3,71,0,0,1,0,0.0,0
783,17,test,"Give me the associated musical artist of Appietus and band member of the person born, that is an artist and a musical artist, as the persona of Ebony Reigns.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . <http://dbpedia.org/resource/Appietus> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Ebony_Reigns> <http://xmlns.com/foaf/0.1/givenName> ?v0 . ?v3 <http://dbpedia.org/property/birthName> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?associatedArtist ?bandMember ?persona 
WHERE {
  # Find Appietus's associated musical artist
  dbr:Appietus dbo:musicBrainzArtistId ?appietusId .
  ?appietusId dbo:associatedMusicalArtist ?associatedArtist .

  # Identify a band member who is also an artist and has a birth date
  ?bandMember dbo:memberOfBand ?associatedArtist ;
              a dbo:MusicArtist ;
              dbp:birthday ?birthDate .

  # Find connection to Ebony Reigns persona
  OPTIONAL {
    ?persona dbo:alias dbr:Ebony_Reigns .
    ?persona dbo:associatedMusicalArtist ?bandMember .
  }
}
```",4,6,5,3,2,3,2,20,0,0,1,0,0.0,0
9,46,test,"Give me the alma mater of the mayor, that is a politician, of the entity, that is an organisation, in Belfast and alma mater of the awardee of Royal Medal.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/leader> ?v1 . ?v2 <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Belfast> . ?v4 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Medal> . ?v1 <http://dbpedia.org/ontology/almaMater> ?result . ?v4 <http://dbpedia.org/ontology/almaMater> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?almaMater
WHERE {
  # Find the mayor of Belfast who is a politician
  ?mayor dbo:city dbr:Belfast ;
         rdf:type dbo:Politician .
  
  # Get the alma mater of this mayor
  ?mayor foaf:almaMater ?almaMater1 .

  # Find awardees of the Royal Medal
  ?awardee dbo:award dbr:Royal_Medal ;
           foaf:almaMater ?almaMater2 .
  
  # Check if there is a common alma mater
  FILTER (?almaMater1 = ?almaMater2)
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
9,50,test,"Give me the figure known as the nickname of Queen's University Belfast and alma mater of the awardee of the reference, that is an award, to Royal Medals.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?result <http://dbpedia.org/property/nickname> ?v3 . ?v4 <http://dbpedia.org/property/awards> ?v0 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Royal Medals""@en . <http://dbpedia.org/resource/Queen's_University_Belfast> <http://dbpedia.org/property/nickname> ?v3 . ?v4 <http://dbpedia.org/ontology/almaMater> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nickname WHERE {
  # Find the nickname of Queen's University Belfast
  dbr:Queen's_University_Belfast dbo:nickname ?nickname .
}

UNION

SELECT DISTINCT ?almaMaterLabel WHERE {
  # Find awardees of Royal Medals and their alma maters
  ?person dbo:award ?royalMedalAward .
  ?royalMedalAward dbo:recipient ?person .
  ?person dbo:almaMater ?university .
  ?university rdfs:label ?almaMaterLabel .

  # Filter to match the alma mater with the nickname of Queen's University Belfast
  FILTER EXISTS {
    dbr:Queen's_University_Belfast dbo:nickname ?nickname .
    FILTER(?almaMaterLabel = ?nickname)
  }
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
547,18,test,Give me the resting place of Alan Cunningham and resting place of James Burton (Egyptologist) and resting place of Simon Cadell.,SELECT ?result WHERE { <http://dbpedia.org/resource/James_Burton_(Egyptologist)> <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Alan_Cunningham> <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Simon_Cadell> <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name ?restingPlace WHERE {
  VALUES (?person ?name) {
    (dbr:Alan_Cunningham ""Alan Cunningham"")
    (dbr:James_Burton_(Egyptologist) ""James Burton (Egyptologist)"")
    (dbr:Simon_Cadell ""Simon Cadell"")
  }
  
  ?person dbo:name ?name .
  OPTIONAL { ?person dbo:deathPlace ?deathPlace . }
  OPTIONAL { ?person dbo:burialLocation ?restingPlace . }
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
617,49,test,"Give me the child of the child, that is a royalty, of Seleucus II Callinicus and parent of the child of the commander in Battle of Panium.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v1 . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seleucus_II_Callinicus> . <http://dbpedia.org/resource/Battle_of_Panium> <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://dbpedia.org/ontology/child> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?grandchild WHERE {
  # Step 1: Find children of Seleucus II Callinicus
  ?child dbo:parent dbr:Seleucus_II_Callinicus .
  
  # Step 2: Find grandchildren who are royalty
  ?grandchild dbo:parent ?child .
  ?grandchild a dbo:Monarch .

  # Step 3: Identify the commander in Battle of Panium and their child's parent
  ?commander dbo:event dbr:Battle_of_Panium .
  ?commandersChild dbo:parent ?commander .
  
  # Find the parent of the commander's child
  ?parentOfCommandersChild dbo:child ?commandersChild .

  # Step 4: Match the results from step 2 and step 3
  FILTER (?grandchild = ?parentOfCommandersChild)
}
```",5,6,6,3,2,3,3,71,0,0,2,0,0.0,0
801,58,test,"Give me the professional in  and producer of the work, that is a musical work and a song and a work, of 50 Cent and associated musical artist of the writer, that is a musical artist and an artist, of the album, that is a musical work and a work, of What U See Is What U Get.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/What_U_See_Is_What_U_Get> <http://dbpedia.org/ontology/album> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/property/writer> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v5 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/50_Cent> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v5 <http://dbpedia.org/ontology/producer> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?song ?producer ?writerArtist WHERE {
  ?song a dbo:Song ;
        dbo:artist dbr:50_Cent ;
        dbo:album dbr:What_U_See_Is_What_U_Get_(album) .
  
  OPTIONAL { ?song dbo:producer ?producer . }
  
  ?song dbo:lyricsWriter ?writer .
  ?writer dbo:musicalArtist ?writerArtist .
}
```",6,13,7,3,3,3,3,71,0,0,1,0,0.0,0
92,63,test,"Give me the band member of the reference, that is an artist, to the name of Nevermore (2006 film) and band of the person born as Joseph Michael Furney and associated musical artist of the person born, that is an artist, as Jim Sheppard.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v3 <http://xmlns.com/foaf/0.1/name> ?v4 . ?v6 <http://dbpedia.org/property/birthName> ""Jim Sheppard""@en . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Nevermore_(2006_film)> <http://xmlns.com/foaf/0.1/name> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/bandMember> ?v2 . ?v6 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/property/birthName> ""Joseph Michael Furney""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?bandMember ?furneyBand ?furneyArtist ?sheppardArtist WHERE {
  # Band member related to ""Nevermore (2006 film)""
  ?film dbo:title ""Nevermore (2006 film)""@en .
  ?film dbo:actor ?actor .
  ?actor foaf:name ?bandMember .

  # Joseph Michael Furney's band and associated artist
  ?furney dbo:birthName ""Joseph Michael Furney""@en .
  ?furney dbo:musicalArtist ?furneyBand .
  OPTIONAL { ?furney dbo:associatedMusicalArtist ?furneyArtist . }

  # Jim Sheppard's associated musical artist
  ?sheppard foaf:name ""Jim Sheppard"" .
  OPTIONAL { ?sheppard dbo:associatedMusicalArtist ?sheppardArtist . }
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
492,52,test,"Give me the commander in the war, that is a military conflict and an event, of Frédéric-Georges Herr and person decedent at Algiers and person decedent at the work of the author of French Algeria.",SELECT ?result WHERE { <http://dbpedia.org/resource/Frédéric-Georges_Herr> <http://dbpedia.org/ontology/battle> ?v5 . ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . <http://dbpedia.org/resource/French_Algeria> <http://dbpedia.org/property/author> ?v3 . ?v5 <http://dbpedia.org/ontology/commander> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Algiers> . ?v2 <http://dbpedia.org/property/author> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  ?war a dbo:MilitaryConflict ;
      dbo:participant dbr:Frédéric-Georges_Herr ;
      dbo:commander ?commander .

  OPTIONAL { 
    ?person dbo:deathPlace dbr:Algiers .
    ?person dbo:participant ?war .
  }

  OPTIONAL {
    ?author dbo:work dbr:French_Algeria .
    ?person dbo:mortemLocation ?location ;
            dbo:mentionedIn ?author .
    FILTER(?location = dbr:Algiers || ?location = dbr:French_Algeria)
  }
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
626,17,test,Give me the awardee of the award of the military force of Battle of Borodino and commander in Battle of Leipzig.,SELECT ?result WHERE { <http://dbpedia.org/resource/Battle_of_Leipzig> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/property/awards> ?v3 . ?v0 <http://dbpedia.org/property/awards> ?v3 . ?v0 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Borodino> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?awardee ?leipzigCommander WHERE {
  # Find the award related to the Battle of Borodino and its awardee
  ?battleBorodino dbo:award ?award .
  ?award dbo:recipient ?awardee .
  FILTER (str(?battleBorodino) = ""Battle_of_Borodino_(1812)"")

  # Find the commander in the Battle of Leipzig
  ?battleLeipzig dbo:commander ?leipzigCommander .
  FILTER (str(?battleLeipzig) = ""Battle_of_Leipzig"")
}
```",4,4,5,3,2,3,2,20,0,0,9,0,0.0,0
701,49,test,"Give me the spouse of the father of the commander, that is a royalty, in Battle of Perire and parent of the child of Nefertari.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v1 . <http://dbpedia.org/resource/Nefertari> <http://dbpedia.org/ontology/child> ?v2 . <http://dbpedia.org/resource/Battle_of_Perire> <http://dbpedia.org/ontology/commander> ?v0 . ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?spouse WHERE {
  ?battle dbp:battleName ""Battle of Perire"" .
  ?commander dbo:participatedIn ?battle .
  
  ?father dbo:child ?commander .
  ?spouse dbo:spouse ?father .

  ?parentOfNefertari dbo:child ?nefertariChild .
  ?nefertariChild dbp:name ""Nefertari"" .
  ?spouse dbo:child ?parentOfNefertari .

  ?spouse a dbo:Monarch . # Assuming royalty is represented by Monarch class
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
994,60,test,"Give me the band member of the person born, that is a musical artist, as the persona of Don Dokken and associated musical artist of the associated musical artist of the reference to Watchtower.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ?v5 . ?v4 <http://xmlns.com/foaf/0.1/name> ""Watchtower""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Don_Dokken> <http://xmlns.com/foaf/0.1/givenName> ?v5 . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandMember ?associatedArtist ?finalBandMember 
WHERE {
  # Step 1: Identify Don Dokken and his band members
  dbr:Don_Dokken a dbo:MusicalArtist .
  
  ?donDokkenBand dbo:member ?bandMember .
  FILTER (?donDokkenBand = dbr:Dokken)

  # Step 2: Identify Watchtower and its associated musical artists
  dbr:Watchtower a dbo:MusicalArtist .

  ?watchtowerAssociatedArtist dbo:associatedMusicalArtist ?associatedArtist .
  FILTER (?watchtowerAssociatedArtist = dbr:Watchtower)

  # Step 3: Find band members of the associated artists of Watchtower
  ?associatedArtistBand dbo:member ?finalBandMember .
}
```",6,7,7,3,2,3,3,71,0,0,1,0,0.0,0
16,28,test,Give me the spouse of the person born as Ted Martin McGinley and person born as Georgeanne Marie Rice and professional in Actress.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ""Ted Martin McGinley""@en . ?v1 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/occupation> ""Actress""@en . ?result <http://dbpedia.org/property/birthName> ""Georgeanne Marie Rice""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?spouse WHERE {
  VALUES (?person ?birthName) { 
    (?m McGinley ""Ted Martin McGinley""@en)
    (?r Rice ""Georgeanne Marie Rice""@en)
  }
  
  ?person foaf:name ?name .
  FILTER(CONTAINS(LCASE(?name), LCASE(?birthName))) .

  OPTIONAL {
    ?person dbo:spouse ?spouse .
  }

  OPTIONAL {
    ?person dbo:occupation ?occupation .
    FILTER(CONTAINS(LCASE(?occupation), ""actress""@en))
  }
  
  FILTER(EXISTS { 
    ?person dbo:occupation ?occupation .
    FILTER(CONTAINS(LCASE(?occupation), ""actress""@en))
  })
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
801,52,test,"Give me the professional in the alter ego of the true self of The Shadow and associated musical artist of Chris Taylor (music producer) and producer of the work, that is a musical work and a song and a work, of 50 Cent.","SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Chris_Taylor_(music_producer)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v5 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/50_Cent> . ?v3 <http://dbpedia.org/property/alterEgo> ?v2 . ?v5 <http://dbpedia.org/ontology/producer> ?result . ?result <http://dbpedia.org/property/occupation> ?v2 . ?v3 <http://xmlns.com/foaf/0.1/givenName> ""The Shadow""@en . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?song ?producer WHERE {
  # Identify Lamont Cranston as the alter ego of The Shadow
  dbr:Lamont_Cranston dbo:alterEgoOf dbr:The_Shadow .

  # Find Chris Taylor's association with Grizzly Bear
  dbr:Grizzly_Bear dbo:associatedMusicalArtist dbr:Chris_Taylor_(musician) .

  # Identify a song by 50 Cent that involves both entities
  ?song dbo:producer dbr:50_Cent ;
        dbo:musicalWorkProducer ?producer .
  
  FILTER (?producer = dbr:Lamont_Cranston || ?producer = dbr:Chris_Taylor_(musician))
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
492,54,test,"Give me the person decedent at the work of US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite and commander in the war, that is a military conflict and an event, of the commander in Battle of Verdun and person decedent at Algiers.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> ?v3 . ?v3 <http://dbpedia.org/property/author> ""US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite""@en . <http://dbpedia.org/resource/Battle_of_Verdun> <http://dbpedia.org/ontology/commander> ?v0 . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Algiers> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://dbpedia.org/ontology/battle> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v5 <http://dbpedia.org/ontology/commander> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?personDecedent ?commander WHERE {
  # Find Joseph C. Satterthwaite's role
  ?satterthwaite a dbo:Person ;
                 foaf:name ""Joseph C. Satterthwaite"" ;
                 dbo:office dbr:US_Assistant_Secretary_of_State_for_African_Affairs .

  # Find person decedent at the same work context
  ?personDecedent a dbo:Person ;
                  dbo:deathPlace ?workLocation ;
                  foaf:name ?name .
  
  FILTER EXISTS {
    ?workLocation dbo:office dbr:US_Assistant_Secretary_of_State_for_African_Affairs .
  }

  # Find commander in the Battle of Verdun and event in Algiers
  ?commander a dbo:MilitaryPerson ;
             foaf:name ?cmdName ;
             dbo:commanded ?battleVerdun ;
             dbo:participatedInEvent ?algiersEvent .

  ?battleVerdun rdfs:label ""Battle of Verdun""@en .
  ?algiersEvent dbo:location dbr:Algiers ;
                dbo:eventType ?eventType .

  FILTER(?eventType IN (dbo:MilitaryConflict, dbo:Event))
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
767,61,test,"Give me the alma mater of the administration of the reference to George Kilbon Nash and reference to the alter ego of the persona, that is a fictional character, of Matthew Burland.","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v3 . ?v1 <http://dbpedia.org/property/alterEgo> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v5 <http://dbpedia.org/ontology/almaMater> ?result . ?v1 <http://dbpedia.org/property/alterEgo> ""Matthew Burland""@en . ?v5 <http://dbpedia.org/property/governor> ?v0 . ?v0 <http://xmlns.com/foaf/0.1/name> ""George Kilbon Nash""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?almaMaterNash ?administrationAlmaMater ?alterEgoAlmaMater WHERE {
  # George Kilbon Nash's alma mater
  dbr:George_Kilbon_Nash dbo:almaMater ?almaMaterNash .

  # Administration associated with George Kilbon Nash and its alma mater
  OPTIONAL {
    ?administration dbo:member dbr:George_Kilbon_Nash .
    ?administration dbo:almaMater ?administrationAlmaMater .
  }

  # Matthew Burland's alter ego (fictional character)
  dbr:Matthew_Burland dbo:fictionalAlterEgo ?alterEgo .

  # Alter ego's alma mater
  OPTIONAL {
    ?alterEgo dbo:almaMater ?alterEgoAlmaMater .
  }
}
```",6,7,7,3,2,3,3,71,0,0,2,0,0.0,0
365,8,test,Give me the band of Phil Alvin and reference to the real name of The Blasters.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Phil_Alvin> . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . <http://dbpedia.org/resource/The_Blasters> <http://xmlns.com/foaf/0.1/name> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?band ?realName WHERE {
  # Find the band associated with Phil Alvin
  ?person dbo:name ""Phil Alvin""@en .
  ?person dbo:memberOf ?band .

  # Get the real name of The Blasters
  OPTIONAL { 
    dbr:The_Blasters rdfs:label ?realName FILTER (lang(?realName) = 'en') .
  }
}
```",3,3,4,2,2,2,2,9,0,0,1,0,0.0,0
10,24,test,"Give me the professional in the birth name of Sharon Kao and band member of the person born, that is an artist, as Luke Francis Vibert.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://dbpedia.org/property/birthName> ""Luke Francis Vibert""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Sharon_Kao> <http://dbpedia.org/property/birthName> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthName ?artist WHERE {
  # Get Sharon Kao's birth name
  dbr:Sharon_Kao dbo:birthName ?birthName .

  # Get Luke Francis Vibert's birthplace
  dbr:Luke_Francis_Vibert dbo:birthPlace ?birthPlace .
  
  # Find artists (band members) born in the same place as Luke Francis Vibert
  ?artist a dbo:Artist ;
          dbo:birthPlace ?birthPlace ;
          dbp:profession ""musician""@en .

}
```",4,5,5,2,2,2,3,28,0,0,1,0,0.0,0
617,63,test,"Give me the child of the child, that is a royalty, of the successor, that is a royalty, of Antiochus II Theos and spouse of the child of Antiochus III the Great and parent of the child of Antiochus (son of Antiochus III the Great).",SELECT ?result WHERE { <http://dbpedia.org/resource/Antiochus_III_the_Great> <http://dbpedia.org/ontology/child> ?v6 . <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/child> ?v2 . <http://dbpedia.org/resource/Antiochus_II_Theos> <http://dbpedia.org/ontology/successor> ?v4 . ?result <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/property/father> ?v3 . ?v3 <http://dbpedia.org/property/father> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v6 <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?childOfChild
WHERE {
  # Antiochus II Theos and his successor who is a royalty
  ?antiochus2 dbo:successor ?successor .
  ?antiochus2 rdf:type dbo:Monarch .
  FILTER(STRSTARTS(LCASE(?antiochus2), ""antiochus ii theos""))
  
  # Successor must be a royalty
  ?successor rdf:type dbo:Monarch .

  # Child of successor who is a royalty
  ?successorChild dbo:child ?childOfSuccessor .
  ?childOfSuccessor rdf:type dbo:Monarch .

  # Antiochus III the Great and his child
  ?antiochus3 dbo:child ?childAntiochus3 .
  FILTER(STRSTARTS(LCASE(?antiochus3), ""antiochus iii the great""))

  # Spouse of Antiochus III's child
  ?spouse dbo:spouse ?childAntiochus3 .

  # Parent of spouse's child, which is Antiochus (son of Antiochus III)
  ?parent dbo:child ?spouse .
  FILTER(STRSTARTS(LCASE(?parent), ""antiochus""))

  # The final condition to match the child of the successor
  ?successorChild dbo:child ?childOfChild .

}
```",7,9,8,3,3,3,3,71,0,0,2,0,0.0,0
963,18,test,"Give me the entity in the region, that is a country, of the time zone of Herzegovina-Neretva Canton and administration of the ruling party, that is a political party, in Sremski Karlovci.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/leaderParty> ?v3 . <http://dbpedia.org/resource/Sremski_Karlovci> <http://dbpedia.org/property/leaderParty> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?result <http://dbpedia.org/ontology/country> ?v2 . ?v2 <http://dbpedia.org/property/timeZone> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Herzegovina-Neretva_Canton> <http://dbpedia.org/property/timeZone> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?country WHERE {
  # Find the time zone of Herzegovina-Neretva Canton
  dbr:Herzegovina-Neretva_Canton dbo:timeZone ?tz .

  # Find countries in that time zone
  ?country a dbo:Country ;
           dbo:timeZone ?tz .

  # Find the ruling party in Sremski Karlovci
  dbr:Sremski_Karlovci dbo:rulingParty ?party .

  # Find countries where this political party is ruling
  ?country dbo:rulingParty ?party .
}
```",5,7,6,3,2,3,2,20,0,0,84,0,0.0,0
528,61,test,Give me the force of the person born as the birth name of Narciso Campero and war of the commander in the work of --01-09.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> ?v3 . ?v5 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/ontology/commander> ?v5 . <http://dbpedia.org/resource/Narciso_Campero> <http://dbpedia.org/property/birthName> ?v1 . ?v3 <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/property/author> ""--01-09""^^<http://www.w3.org/2001/XMLSchema#gMonthDay> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?force ?war WHERE {
  # Step 1: Find Narciso Campero's birth name
  dbr:Narciso_Campero dbo:birthName ?birthName .

  # Step 2: Find the force associated with his birth name
  ?person dbp:name ?birthName .
  ?person dbo:militaryForce ?force .

  # Step 3: Identify the commander in the work released on January 9th
  ?work dbo:datePublished ?date .
  FILTER (YEAR(?date) = 2001 && MONTH(?date) = 1 && DAY(?date) = 9)
  ?work dbo:character ?commander .
  ?commander dbp:name ?commanderName .

  # Step 4: Determine the war associated with this commander
  ?commander dbo:participatedInWar ?war .
}
```",6,6,7,3,2,3,3,71,0,0,2,0,0.0,0
404,59,test,"Give me the parent of the child, that is a royalty, of the parent, that is a royalty, of Prince George William of Hanover and spouse of the person born, that is a royalty, as the birth name of Princess Victoria Louise of Prussia.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Prince_George_William_of_Hanover> <http://dbpedia.org/ontology/parent> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/property/birthName> ?v3 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/child> ?v5 . ?v2 <http://dbpedia.org/property/birthName> ?v3 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/child> ?v5 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parentOfChild
WHERE {
  # Step 1: Identify Prince George William of Hanover
  ?princeGeorgeWilliam a dbo:Person ;
                      foaf:name ""Prince George William of Hanover""@en .

  # Step 2: Find his parent who is a royalty
  ?parent dbp:child ?princeGeorgeWilliam .
  ?parent rdf:type dbp:Royal .

  # Step 3: Identify the child of this royal parent
  ?royalChild dbp:parent ?parent .
  ?royalChild rdf:type dbp:Royal .

  # Step 4: Find the spouse of Princess Victoria Louise of Prussia
  ?princessVictoriaLouise a dbo:Person ;
                         foaf:name ""Princess Victoria Louise of Prussia""@en .
  ?princessVictoriaLouiseBirthName foaf:name ?birthName .
  ?spouse dbp:spouse ?princessVictoriaLouise .

  # Step 5: Determine the parent of the royalty child from step 3
  ?parentOfChild dbp:child ?royalChild ;
                 rdf:type dbp:Royal .
}
```",6,9,7,3,2,3,3,71,0,0,1,0,0.0,0
427,38,test,"Give me the party of the father of Lamberto Andreotti and party of the person born, that is an office holder and a politician, as Romano Antonio Prodi.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/party> ?result . ?v2 <http://dbpedia.org/property/birthName> ""Romano Antonio Prodi""@en . ?v2 <http://dbpedia.org/ontology/party> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Lamberto_Andreotti> <http://dbpedia.org/property/father> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?fatherPartyLabel ?prodiPartyLabel WHERE {
  # Find Lamberto Andreotti's father and his party
  dbr:Lamberto_Andreotti dbo:father ?father .
  ?father dbo:partyAffiliation ?fatherParty .

  # Get the label of the political party for Lamberto Andreotti's father
  ?fatherParty rdfs:label ?fatherPartyLabel .
  
  FILTER (lang(?fatherPartyLabel) = 'en')

  # Find Romano Prodi and his party
  dbr:Romano_Prodi dbo:birthPlace ?prodiBirthPlace ;
                   dbo:partyAffiliation ?prodiParty .

  # Get the label of the political party for Romano Prodi
  ?prodiParty rdfs:label ?prodiPartyLabel .
  
  FILTER (lang(?prodiPartyLabel) = 'en')
}
```",4,6,5,2,2,3,3,71,0,0,3,0,0.0,0
645,16,test,"Give me the entity in the residence, that is a country, of James Wilkes Maurice and alma mater of the child of Richard Pankhurst.",SELECT ?result WHERE { <http://dbpedia.org/resource/Richard_Pankhurst> <http://dbpedia.org/ontology/child> ?v3 . ?result <http://dbpedia.org/ontology/country> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/James_Wilkes_Maurice> <http://dbpedia.org/property/residence> ?v2 . ?v3 <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?country
WHERE {
  ?james dbr:James_Wilkes_Maurice .
  ?james dbo:residence ?residence .
  FILTER (STRSTARTS(STR(?residence), ""http://dbpedia.org/resource/"") && 
          EXISTS { ?residence a dbo:Country } ) .

  ?richard dbr:Richard_Pankhurst .
  ?child dbo:childOf ?richard .
  ?child dbo:almaMater ?almaMater .
  
  FILTER (?residence = ?almaMater)
}
```",4,5,5,2,2,3,2,20,0,0,1,0,0.0,0
435,22,test,"Give me the territory administered from the figure known, that is a settlement and a town and Icelandic, as Land of fire and ice and region of the time zone in Bombali Shebora Chiefdom.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/capital> ?v2 . ?v2 <http://dbpedia.org/property/nickname> ""Land of fire and ice""@en . <http://dbpedia.org/resource/Bombali_Shebora_Chiefdom> <http://dbpedia.org/ontology/timeZone> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Town>. ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Iceland>. ?result <http://dbpedia.org/ontology/timeZone> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?territory WHERE {
  # Identify Jón Sigurðsson as the figure known
  dbr:Jón_Sigurðsson dbo:nationality dbr:Iceland .
  
  # Find territories administered by Jón Sigurðsson
  ?administeredTerritory dbo:administers dbr:Jón_Sigurðsson .

  # Ensure the territory is a settlement or town
  ?administeredTerritory rdf:type dbo:Settlement ;
                        rdfs:label ?territoryLabel .
  
  FILTER (CONTAINS(LCASE(?territoryLabel), ""town"") || CONTAINS(LCASE(?territoryLabel), ""settlement""))

  # Connect to Bombali Shebora Chiefdom through geographical or administrative ties
  OPTIONAL {
    ?administeredTerritory dbo:locatedIn dbr:Bombali_Shebora_Cheifdom .
  }
}
```",4,7,5,2,2,2,3,28,0,0,1,0,0.0,0
314,24,test,"Give me the commander in the profession, that is an event and a societal event, of Lisa Gavrić and awardee of the award of Sergei Makovetsky.",SELECT ?result WHERE { <http://dbpedia.org/resource/Lisa_Gavrić> <http://dbpedia.org/property/occupation> ?v0 . ?v0 <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/property/awards> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Sergei_Makovetsky> <http://dbpedia.org/property/awards> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commander ?profession WHERE {
  # Find Lisa Gavrić's DBpedia resource
  VALUES (?lisa) { dbr:Lisa_Gavrić }

  # Identify awards associated with Sergei Makovetsky
  ?award dbo:recipient ?awardee .
  FILTER EXISTS { ?award dbo:givenBy dbr:Sergei_Makovetsky } .

  # Find events that are both an event and a societal event
  ?event rdf:type dbo:Event ;
         rdf:type dbo:SocietyEvent .

  # Find commanders associated with such events
  ?commander dbo:profession ?profession ;
             dbo:commanded ?event .

  # Check if any of these commanders have received an award linked to Sergei Makovetsky
  FILTER (?awardee = ?commander)
}
```",4,6,5,2,2,2,3,28,0,0,2,0,0.0,0
488,71,test,"Give me the administration of the father of the spouse, that is a royalty, of Tokugawa Masako and death place of the father, that is a politician, of the father, that is an office holder, of Matsudaira Tadamasa and birth place of the commander in the war, that is a military conflict and an event and a societal event, of Saitō Hajime.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> ?v2 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v4 <http://dbpedia.org/property/father> ?v5 . <http://dbpedia.org/resource/Saitō_Hajime> <http://dbpedia.org/ontology/battle> ?v1 . <http://dbpedia.org/resource/Matsudaira_Tadamasa> <http://dbpedia.org/property/father> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v7 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Tokugawa_Masako> . ?v5 <http://dbpedia.org/ontology/deathPlace> ?result . ?result <http://dbpedia.org/property/leader> ?v8 . ?v7 <http://dbpedia.org/property/father> ?v8 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT 
  ?administration 
  ?deathPlace 
  ?birthPlace

WHERE {
  # Tokugawa Masako's father and his spouse's administration
  dbr:Tokugawa_Masako dbo:father ?father .
  ?father dbo:mother ?mother .
  ?mother a dbo:RoyalFamilyMember ; 
          dbo:officeHolder ?administration .

  # Matsudaira Tadamasa's grandfather (politician) death place
  dbr:Matsudaira_Tadamasa dbo:father ?grandfatherFather .
  ?grandfatherFather dbo:father ?grandfather .
  ?grandfather a dbo:Politician ;
              dbo:deathPlace ?deathPlace .

  # Saitō Hajime's war and commander birthplace
  dbr:Saitō_Hajime dbo:militaryConflict ?war .
  ?war dbo:commander ?commander .
  ?commander dbo:birthPlace ?birthPlace .
}
```",9,15,10,3,3,3,3,71,0,0,1,0,0.0,0
485,22,test,"Give me the birth place of the awardee, that is a writer and a poet, of Eric Gregory Award and entity in the region, that is a country, of Western European Time.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/country> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Eric_Gregory_Award> . ?v2 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Western_European_Time> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Poet>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthPlace WHERE {
  ?person dbo:award dbr:Eric_Gregory_Award .
  ?person a dbo:Writer ;
          dbo:occupation ""poet"" .
  ?person dbo:birthPlace ?birthPlace .
  ?country dbp:timeZone ""Western European Time"" .
  ?birthPlace dbo:locatedInCountry ?country .
}
```",4,7,5,2,2,2,3,28,0,0,5,0,0.0,0
617,56,test,"Give me the parent of the child of the commander in Battle of Panium and child of the child, that is a royalty, of Seleucus II Callinicus and spouse of Laodice IV.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Laodice_IV> <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Battle_of_Panium> <http://dbpedia.org/ontology/commander> ?v0 . ?result <http://dbpedia.org/property/father> ?v2 . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seleucus_II_Callinicus> . ?v0 <http://dbpedia.org/ontology/child> ?v1 . ?result <http://dbpedia.org/ontology/child> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parentOfChild ?royalChild ?spouse
WHERE {
  # Commander in Battle of Panium
  ?battle dbr:Battle_of_Panium .
  ?commander dbo:commanderOf ?battle .

  # Child of the commander
  ?child1 dbo:child ?commander .

  # Parent of the child (step 3)
  ?parentOfChild dbo:parent ?child1 .

  # Children of Seleucus II Callinicus
  dbr:Seleucus_II_Callinicus dbo:child ?royalChild .

  # Ensure the royal child is royalty and has a spouse who is Laodice IV (step 6)
  ?royalChild dbo:spouse ?spouse .
  ?spouse rdfs:label ""Laodice IV""@en .

  # Child of the royal child
  ?child2 dbo:child ?royalChild .
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
696,20,test,"Give me the birth place of the member of the associated musical artist, that is an organisation and a group and a band, of The Boils and landmark at elevation of the award of the commander in Battle of Chishui River.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/elevation> ?v5 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://dbpedia.org/ontology/bandMember> ?v2 . <http://dbpedia.org/resource/Battle_of_Chishui_River> <http://dbpedia.org/ontology/commander> ?v4 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v4 <http://dbpedia.org/property/awards> ?v5 . <http://dbpedia.org/resource/The_Boils> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?birthPlace ?landmark WHERE {
  # Find The Boils as an organization and band
  ?theBoils a dbo:Band ;
            rdfs:label ""The Boils""@en .

  # Identify associated musical artists that are organizations and bands/groups
  ?associatedArtist dbo:bandMember ?member .
  ?associatedArtist a dbo:Organization, dbo:MusicalGroup .

  # Find member's birthplace
  ?member dbo:birthPlace ?birthPlace .

  # Find landmark related to the award of the commander in Battle of Chishui River
  ?battle rdfs:label ""Battle of Chishui River""@en .
  ?award dbo:recipient ?commander ;
         dbo:location ?landmark .
  ?landmark dbo:elevation ?elevation .

  FILTER(?elevation > 1000) # Assuming elevation is in meters and we need a specific threshold

  # Ensure the associated artist is related to The Boils
  ?theBoils dbo:associatedBand ?associatedArtist .
}
```",6,9,7,3,2,3,2,20,0,0,1,0,0.0,0
959,69,test,"Give me the native of the residence, that is a country, of Yōichi Masuzoe and member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of the person born in 1958 and manager of the team of the manager, that is a sports manager, of 1998 Kashima Antlers season.","SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Yōichi_Masuzoe> <http://dbpedia.org/property/residence> ?v6 . ?result <http://dbpedia.org/ontology/team> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. <http://dbpedia.org/resource/1998_Kashima_Antlers_season> <http://dbpedia.org/ontology/manager> ?v5 . ?v0 <http://dbpedia.org/ontology/manager> ?result . ?v4 <http://dbpedia.org/ontology/almaMater> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v4 <http://dbpedia.org/ontology/birthYear> ""1958""^^<http://www.w3.org/2001/XMLSchema#gYear> . ?v0 <http://dbpedia.org/ontology/manager> ?v5 . ?result <http://dbpedia.org/ontology/birthPlace> ?v6 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?nativeCountry WHERE {
  # Identify Yōichi Masuzoe
  dbr:Yōichi_Masuzoe a dbo:Person ;
    dbo:dateOfBirth ?birthDate ;
    dbo:almaMater ?university .

  # Confirm birth year is 1958
  FILTER (YEAR(?birthDate) = 1958)

  # Alma mater should be a Japanese university and educational institution
  ?university a dbo:University ;
              dbo:country dbr:Japan ;
              a dbo:EducationalInstitution .

  # Identify his role as manager of Kashima Antlers in 1998
  OPTIONAL {
    ?managerRole dbo:team dbr:Kashima_Antlers ;
                dbo:season ""1998""^^xsd:string .
    FILTER EXISTS { ?managerRole dbo:person dbr:Yōichi_Masuzoe }
  }

  # Find his residence that is a country
  OPTIONAL {
    ?residenceCountry dbo:resident dbr:Yōichi_Masuzoe ;
                      a dbo:Country .
  }

  # Determine native place (country)
  ?nativePlaceCountry dbo:nativePlace dbr:Yōichi_Masuzoe ;
                     a dbo:Country .

  BIND(?nativePlaceCountry AS ?nativeCountry)
}
```",8,14,9,3,3,3,3,71,0,0,3,0,0.0,0
251,28,test,"Give me the death place of the author of The Twelve Abbots of Challant and administration of the ruling party, that is a political party and an organisation, in Sicily and location of the war, that is a military conflict, of Louis François Félix Musnier.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/place> ?result . <http://dbpedia.org/resource/Sicily> <http://dbpedia.org/property/leaderParty> ?v3 . ?v5 <http://dbpedia.org/ontology/deathPlace> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/property/leaderParty> ?v3 . <http://dbpedia.org/resource/Louis_François_Félix_Musnier> <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/The_Twelve_Abbots_of_Challant> <http://dbpedia.org/property/author> ?v5 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?deathPlace ?rulingParty ?warLocation WHERE {
  # Find the author of ""The Twelve Abbots of Challant"" and their death place
  ?author dbo:work dbr:The_Twelve_Abbots_of_Challant .
  OPTIONAL { ?author dbo:deathPlace ?deathPlace . }

  # Find a political party that is an organization ruling in Sicily
  ?party a dbo:PoliticalParty ;
         dbo:country dbr:Sicily ;
         dbp:isOrganization true .

  # Find the military conflict involving Louis François Félix Musnier and its location
  ?musnier dbo:name ""Louis François Félix Musnier""@en .
  ?conflict dbo:participant ?musnier ;
            dbo:location ?warLocation .
}
```",6,9,7,2,3,2,3,28,0,0,1,0,0.0,0
747,65,test,"Give me the band of the person born as Tracey Elizabeth McSween and person born on the birth date of Pavlo Khudzik and band of the writer of the work, that is a song, of Amba Shepherd.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/birthName> ""Tracey Elizabeth McSween""@en . <http://dbpedia.org/resource/Pavlo_Khudzik> <http://dbpedia.org/ontology/birthDate> ?v4 . ?v6 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Amba_Shepherd> . ?v0 <http://dbpedia.org/property/writer> ?v6 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/birthDate> ?v4 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

# Part 1: Band of Tracey Elizabeth McSween
SELECT ?band WHERE {
    ?person dbo:birthName ""Tracey Elizabeth McSween""@en .
    OPTIONAL { ?person dbo:musicalBand ?band . }
}

UNION

# Part 2: Person born on the same date as Pavlo Khudzik and their band
SELECT DISTINCT ?otherPerson ?band WHERE {
    dbr:Pavlo_Khudzik dbo:birthday ?birthDate .
    ?otherPerson dbo:birthday ?birthDate ;
                 OPTIONAL { ?otherPerson dbo:musicalBand ?band . }
}

UNION

# Part 3: Band of the writer of a song by Amba Shepherd
SELECT DISTINCT ?song ?writer ?band WHERE {
    ?work dbo:genre dbr:Songs .
    ?work dbo:lyricist ?writer ;
          dbo:title ?title .
    FILTER CONTAINS(LCASE(?title), ""amba shepherd"") .
    OPTIONAL { ?writer dbo:musicalBand ?band . }
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
294,20,test,"Give me the entity in Nashville, Tennessee and resting place of the architect of P. D. Houston Jr. House and resting place of Luke Lea (American politician, born 1879).","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/restingPlace> ?result . ?result <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Nashville,_Tennessee> . <http://dbpedia.org/resource/P._D._Houston_Jr._House> <http://dbpedia.org/ontology/architect> ?v3 . <http://dbpedia.org/resource/Luke_Lea_(American_politician,_born_1879)> <http://dbpedia.org/ontology/restingPlace> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?architectRestingPlace ?lukeLeaRestingPlace WHERE {
  # Find the architect of P. D. Houston Jr. House
  ?house dbo:architect ?architect .
  FILTER(STRSTARTS(STR(?house), ""http://dbpedia.org/resource/P._D._Houston_Jr._House""))

  # Get the resting place of the architect and filter for Nashville, Tennessee
  ?architect dbo:deathPlace ?restingPlace .
  ?restingPlace dbp:locationCity ""Nashville"" ;
                dbp:locationStateOrProvince ""Tennessee"" .

  BIND(?restingPlace AS ?architectRestingPlace)

  # Find Luke Lea (American politician, born 1879)
  ?lukeLea dbo:birthDate ?birthDate .
  FILTER(STRSTARTS(STR(?lukeLea), ""http://dbpedia.org/resource/Luke_Lea_(politician)"") &&
         YEAR(?birthDate) = 1879)

  # Get the resting place of Luke Lea and filter for Nashville, Tennessee
  ?lukeLea dbo:deathPlace ?lukeRestingPlace .
  ?lukeRestingPlace dbp:locationCity ""Nashville"" ;
                    dbp:locationStateOrProvince ""Tennessee"" .

  BIND(?lukeRestingPlace AS ?lukeLeaRestingPlace)
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
339,20,test,Give me the father of the child of the parent of Princess Olga of Greece and Denmark and child of the child of the predecessor of Frederick VIII of Denmark.,SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/child> ?v5 . ?v1 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Frederick_VIII_of_Denmark> . ?v4 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Princess_Olga_of_Greece_and_Denmark> . ?v2 <http://dbpedia.org/property/father> ?v1 . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v5 <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?father WHERE {
  # Princess Olga of Greece and Denmark's parent
  ?olga dbo:parent ?parentOlga .
  
  # Frederick VIII's predecessor (Christian IX)
  ?frederickVIII dbo:predecessor ?predecessorFrederickVIII .

  # Child of the child of Christian IX
  ?child1 dbp:father ?predecessorFrederickVIII ;
          dbo:parent ?grandChildPredecessor .
  
  # Olga's father (Christian IX)
  ?olga dbp:father ?fatherOlga .

  # Check if both have the same father
  FILTER (?fatherOlga = ?father)

  BIND(?fatherOlga AS ?father)
}
```",6,6,7,3,2,3,2,20,0,45,1,0.0,0.0,0
142,8,test,Give me the entity in Japan and birthplace of the actor of Papa wa Newscaster.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan> . <http://dbpedia.org/resource/Papa_wa_Newscaster> <http://dbpedia.org/ontology/starring> ?v2 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor ?birthPlace WHERE {
  # Find the movie ""Papa wa Newscaster""
  dbr:Papa_wa_Newscaster dbo:starring ?actor .
  
  # Check if the actor has a connection to Japan
  OPTIONAL { ?actor dbo:nationality dbr:Japan . }
  OPTIONAL { ?actor dbo:countryOfBirth dbr:Japan . }

  # Get the birthplace of the actor
  ?actor dbo:birthPlace ?birthPlace .

  FILTER EXISTS {
    ?actor dbo:nationality dbr:Japan .
  } 
}
```",3,3,4,2,2,2,2,9,0,0,2,0,0.0,0
820,18,test,Give me the child of the parent of Jason Schwartzman and professional in the award of the author of Understanding Comics.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Jason_Schwartzman> . <http://dbpedia.org/resource/Understanding_Comics> <http://dbpedia.org/ontology/author> ?v1 . ?result <http://dbpedia.org/property/father> ?v3 . ?v1 <http://dbpedia.org/property/awards> ?v2 . ?result <http://dbpedia.org/property/occupation> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  # Step 1: Identify Jason Schwartzman's parent
  dbr:Jason_Schwartzman dbo:parent ?parent .

  # Step 2: Find the child of that parent (excluding Jason Schwartzman)
  ?child dbo:parent ?parent .
  FILTER (?child != dbr:Jason_Schwartzman)

  # Step 3: Identify Scott McCloud as the author of ""Understanding Comics""
  dbr:Understanding_Comics dbo:author dbr:Scott_McCloud .

  # Step 4: Find awards associated with Scott McCloud
  ?award dbo:recipient dbr:Scott_McCloud .
  
  # Step 5: Identify a professional connection to the award for the child
  ?child dbo:profession ?profession .
  ?profession dbo:awardsReceived ?award .
}
```",5,5,6,3,2,3,2,20,0,0,1,0,0.0,0
10,23,test,"Give me the associated musical artist of the person born, that is an artist, as Matt Colton and professional in the birth name of Sharon Kao.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v3 <http://dbpedia.org/property/birthName> ""Matt Colton""@en . <http://dbpedia.org/resource/Sharon_Kao> <http://dbpedia.org/property/birthName> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?artist WHERE {
  # Find projects or works involving Matt Colton
  ?work dbo:audioEngineer dbr:Matt_Colton .
  
  # Find projects or works involving Sharon Kao (by birth name)
  ?work dbo:performer dbr:Sharon_Kao .

  # Identify the artist associated with these works
  ?work dbo:artist ?artist .
}
```",4,5,5,2,2,2,3,28,0,0,2,0,0.0,0
391,48,test,"Give me the native of the figure known as the nick name of Jackson, Tennessee and actor of the movie, that is a movie and a work and a television show, with Roz Ryan.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/nickname> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Roz_Ryan> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://dbpedia.org/property/starring> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . <http://dbpedia.org/resource/Jackson,_Tennessee> <http://xmlns.com/foaf/0.1/nick> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?nativePlace WHERE {
  # Step 1: Find the nickname of Jackson, Tennessee
  ?city dbp:name ""Jackson""@en .
  ?city dbp:state ""Tennessee"" .
  ?city dbp:commonName ?nickname .

  # Step 2: Find an actor with this nickname who acted in a movie that is also a work and television show featuring Roz Ryan
  ?actor dbo:nickName ?nickname ;
         dbo:actedIn ?movie .
  
  ?movie rdf:type dbo:Film ;
         dbo:starring ?rozRyan .

  ?rozRyan foaf:name ""Roz Ryan""@en .

  # Ensure the movie is also categorized as a work and television show
  ?movie dbo:genre ?genre .
  FILTER (?genre IN (dbo:TelevisionShow, dbo:Work))

  # Step 3: Get the native place of this actor
  ?actor dbo:nativePlace ?nativePlace .
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
9,69,test,"Give me the figure known as the nickname of the entity, that is an organisation and an educational institution, in Northern Ireland and alma mater of the mayor, that is a politician, of the entity, that is an organisation, in Belfast and alma mater of the awardee of Royal Medal.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Belfast> . ?v1 <http://dbpedia.org/property/nickname> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v7 <http://dbpedia.org/ontology/almaMater> ?result . ?v4 <http://dbpedia.org/property/leader> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?result <http://dbpedia.org/property/nickname> ?v2 . ?v7 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Medal> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Northern_Ireland> . ?v3 <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?nickname WHERE {
  ?institution a dbo:EducationalInstitution ;
               dbo:location dbr:Northern_Ireland ;
               dbp:nickname ?nickname .

  ?mayor dbo:almaMater ?institution ;
         dbo:officeHolderOf dbr:Belfast_Mayoralty .
  
  ?awardee dbo:almaMater ?institution ;
           dbo:awardReceived dbr:Royal_Medal .

}
```",8,12,9,3,3,3,3,71,0,0,1,0,0.0,0
232,51,test,"Give me the native of the residence, that is a settlement and British, of the native, that is a politician and an office holder, of France and actor of the claim to fame, that is a film and a military conflict, of Sean Pertwee.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v4 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Sean_Pertwee> <http://dbpedia.org/ontology/knownFor> ?v4 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/property/residence> ?v2 . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/France> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?nativeOfBritishSettlement WHERE {
  # Step 1: Identify Sean Pertwee's claim to fame (films and military conflicts)
  ?film dbo:actor ?actor .
  FILTER (?actor = dbpedia:Sean_Pertwee) .

  OPTIONAL { 
    ?conflict dbo:participant ?participant .
    FILTER (?participant = dbpedia:Sean_Pertwee) .
  }

  # Step 2: Find natives of these claims to fame
  ?film dbo:nativeOf ?nativeFilm .
  OPTIONAL {
    ?conflict dbo:nativeOf ?nativeConflict .
  }

  # Step 3: Filter politicians and office holders from France
  ?politician foaf:name ?name .
  FILTER (?nativeFilm = ?politician || ?nativeConflict = ?politician) .
  ?politician dbo:nationality dbpedia:France .
  ?politician dbo:officeHolder ?office .

  # Step 4: Determine their residence
  ?politician dbo:residence ?settlement .

  # Step 5: Check if the settlement is British
  ?settlement a dbo:Settlement ;
              dbo:country dbpedia:United_Kingdom .

  # Step 6: Find the native of this British settlement
  ?settlement dbo:nativeOf ?nativeOfBritishSettlement .
}
```",5,11,6,3,2,3,3,71,0,0,1,0,0.0,0
378,67,test,"Give me the claim to fame of the commander in the war, that is a military conflict and a societal event and an event, of Thomas Trigge and war of Carl Pontus Gahn and war of the commander in the reference, that is a military conflict, to Peninsular War.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/ontology/knownFor> ?result . ?v0 <http://dbpedia.org/ontology/commander> ?v6 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Peninsular War""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Thomas_Trigge> <http://dbpedia.org/ontology/battle> ?v1 . <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v6 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/commander> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?triggeRole ?gahnRole ?commanderReferenceWar ?peninsularConnection
WHERE {
  # Thomas Trigge's notable role in a war
  dbr:Thomas_Trigge dbo:role ?triggeRole .
  
  # Carl Pontus Gahn's notable role in a war
  dbr:Carl_Pontus_Gahn dbo:role ?gahnRole .

  # Commander of a reference war and its connection to the Peninsular War
  ?commanderReferenceWar dbo:referenceWar ?war .
  ?peninsularConnection dbo:relatedTo dbr:Peninsular_War .
  
  OPTIONAL { ?commanderReferenceWar dbo:relatedTo ?peninsularConnection }
}
```",7,11,8,3,3,3,3,71,0,0,2,0,0.0,0
659,51,test,"Give me the commander in the war, that is an event and a military conflict, of 1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish) and military force of the force, that is a societal event and an event and a military conflict, of the reference to Rutger Jan Schimmelpenninck.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v4 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/1st_Light_Cavalry_Lancers_Regiment_of_the_Imperial_Guard_(Polish)> <http://dbpedia.org/ontology/battle> ?v4 . ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://dbpedia.org/ontology/commander> ?v1 . ?v1 <http://xmlns.com/foaf/0.1/name> ""Rutger Jan Schimmelpenninck""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commander ?militaryForce
WHERE {
  # Find the war in which the regiment participated
  ?regiment a dbo:MilitaryUnit ;
            rdfs:label ""1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish)""@en .
  
  ?war a dbo:War ;
       dbo:participatingMilitaryUnit ?regiment .

  # Find the commander of the regiment during that war
  ?regiment dbo:commandedBy ?commander .

  # Find military force associated with Rutger Jan Schimmelpenninck
  dbr:Rutger_Jan_Schimmelpenninck dbo:associatedWithMilitaryForce ?militaryForce .
  
  ?militaryForce a dbo:MilitaryUnit ;
                 dbo:participatedIn ?societalEvent .

  # Ensure the societal event is also a military conflict
  ?societalEvent a dbo:War .
}
```",5,10,6,3,2,3,3,71,0,0,31,0,0.0,0
959,30,test,Give me the native of Japan and manager of the team of Takashi Sekizuka and member of University of Tsukuba.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Japan> . ?v0 <http://dbpedia.org/ontology/manager> ?result . ?v0 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Takashi_Sekizuka> . ?result <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/University_of_Tsukuba> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person dbo:birthPlace dbr:Japan .
  ?person dbo:almaMater dbr:University_of_Tsukuba .

  # Find a team that Takashi Sekizuka is associated with
  ?team dbo:member dbr:Takashi_Sekizuka .
  
  # Ensure the person managed this team
  ?team dbo:manager ?person .

  # Optional: Ensure the person is distinct from Takashi Sekizuka
  FILTER (?person != dbr:Takashi_Sekizuka)
}
```",4,4,5,2,3,3,3,71,0,0,2,0,0.0,0
421,28,test,Give me the band member of the awardee of [[#Awards and nominations and native of the birthplace of Samir Bekrić and person born as the birth name of Dino Merlin.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v5 . <http://dbpedia.org/resource/Samir_Bekrić> <http://dbpedia.org/ontology/birthPlace> ?v3 . <http://dbpedia.org/resource/Dino_Merlin> <http://dbpedia.org/property/birthName> ?v5 . ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://dbpedia.org/property/awards> ""[[#Awards and nominations""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?bandMember WHERE {
  # Step 1: Find Samir Bekrić's birthplace
  ?samirBekric dbo:birthPlace ?birthPlace .

  FILTER(?samirBekric = dbr:Samir_Bekrić)

  # Step 2: Find a native of that place
  ?native dbo:nativePlace ?birthPlace .
  
  # Step 3: Check if this person has awards or nominations
  ?native dbo:award ?award .

  # Step 4: Get Dino Merlin's birth name
  ?dinoMerlin dbp:birthName ?birthName .

  FILTER(?dinoMerlin = dbr:Dino_Merlin)

  # Step 5: Find a person born with that name
  ?person dbp:birthName ?birthName .
  
  # Step 6: Find band member of the awardee
  ?bandMember dbo:member ?native .
}
```",6,6,7,2,3,2,3,28,0,0,1,0,0.0,0
378,18,test,"Give me the war of Carl Pontus Gahn and claim to fame of Louis des Balbes de Berton de Crillon, 1st Duke of Mahón and war of Joaquín Blake.","SELECT ?result WHERE { <http://dbpedia.org/resource/Joaquín_Blake> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Louis_des_Balbes_de_Berton_de_Crillon,_1st_Duke_of_Mahón> <http://dbpedia.org/ontology/knownFor> ?result . <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/ontology/battle> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?war ?fame WHERE {
  VALUES (?person ?label) {
    (dbo:Carl_Pontus_Gahn ""Carl Pontus Gahn"")
    (dbo:Louis_des_Balbes_de_Berton_de_Crillon_1st_Duke_of_Mahón ""Louis des Balbes de Berton de Crillon, 1st Duke of Mahón"")
    (dbo:Joaquín_Blake ""Joaquín Blake"")
  }
  
  OPTIONAL {
    ?person dbp:participatedInWar ?war .
  }

  OPTIONAL {
    ?person dbo:famousFor ?fame .
  }
}
```",3,3,4,1,3,3,3,71,0,3,2,0.0,0.0,0
767,50,test,Give me the alma mater of the administration of the reference to George Kilbon Nash and reference to the alter ego of Black Hood.,"SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/almaMater> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""George Kilbon Nash""@en . ?v4 <http://dbpedia.org/property/governor> ?v0 . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . <http://dbpedia.org/resource/Black_Hood> <http://dbpedia.org/property/alterEgo> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name ?almaMater WHERE {
  VALUES ?person { 
    dbr:George_Kilbon_Nash 
    dbr:Bruce_Wayne 
  }
  
  ?person dbo:name ?name .
  OPTIONAL { ?person dbo:almaMater ?almaMater . }
}
```",5,5,6,3,2,3,3,71,0,0,2,0,0.0,0
328,68,test,"Give me the commander in the force of the person decedent at Budapest and leader of the office, that is a government agency, of Joseph Stalin and awardee of the award of the commander in Volcano and Ryukyu Islands campaign.",SELECT ?result WHERE { <http://dbpedia.org/resource/Volcano_and_Ryukyu_Islands_campaign> <http://dbpedia.org/ontology/commander> ?v5 . ?result <http://dbpedia.org/property/awards> ?v4 . ?v5 <http://dbpedia.org/property/awards> ?v4 . <http://dbpedia.org/resource/Joseph_Stalin> <http://dbpedia.org/property/office> ?v3 . ?v0 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Budapest> . ?v7 <http://dbpedia.org/ontology/commander> ?v0 . ?v7 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://dbpedia.org/ontology/leader> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person dbo:awardedBy dbr:Order_of_the_Red_Banner ; # Assuming the award is Order of the Red Banner for Volcano and Ryukyu Islands campaign
          dbo:commanderInForceAt dbr:Budapest ;
          dbo:leaderOf dbr:Government_Agency ; # Placeholder for a specific government agency related to Stalin
          dbo:relatedTo dbr:Joseph_Stalin .
}
```

Note: The query assumes certain properties and relationships based on typical DBpedia schema. Adjustments may be necessary if more precise information about the award or roles is available.",8,9,9,3,3,3,3,71,0,0,1,0,0.0,0
92,51,test,"Give me the band of the person born as the birth name of Joseph Michael and associated musical artist of the person born, that is an artist, as Jim Sheppard.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/birthName> ""Jim Sheppard""@en . ?v2 <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/ontology/bandMember> ?v2 . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Joseph_Michael> <http://dbpedia.org/property/birthName> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?band ?artist 
WHERE {
  # Find the band associated with Joe Elliott (birth name Joseph Michael)
  ?person1 rdfs:label ""Joe Elliott""@en .
  ?person1 dbo:birthName ""Joseph Michael"" .
  ?person1 dbo:band ?band .

  # Find the musical artist associated with Jimi Jamison (birth name Jim Sheppard)
  ?person2 rdfs:label ""Jimi Jamison""@en .
  ?person2 dbo:birthName ""Jim Sheppard"" .
  ?person2 dbo:musicalArtist ?artist .
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
427,52,test,Give me the reference to the name of the party of Michele Pinto and party of the father of Lamberto Andreotti and party of Romano Prodi.,SELECT ?result WHERE { <http://dbpedia.org/resource/Lamberto_Andreotti> <http://dbpedia.org/property/father> ?v5 . ?v5 <http://dbpedia.org/ontology/party> ?result . ?v3 <http://xmlns.com/foaf/0.1/name> ?v2 . <http://dbpedia.org/resource/Michele_Pinto> <http://dbpedia.org/ontology/party> ?v3 . <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/ontology/party> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . },"```sparql
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?michelePintoParty ?lambertoAndreottiFatherParty ?romanoProdiParty WHERE {
  # Michele Pinto's party
  OPTIONAL { 
    ?michelePinto dbp:name ""Michele Pinto""@en .
    ?michelePinto dbp:party ?michelePintoParty .
  }

  # Lamberto Andreotti's father and his party
  OPTIONAL {
    ?lambertoAndreotti dbo:father ?andreottiFather .
    ?andreottiFather dbp:name ""Giuseppe Andreotti""@en .
    ?andreottiFather dbp:party ?lambertoAndreottiFatherParty .
  }

  # Romano Prodi's party
  OPTIONAL {
    ?romanoProdi dbp:name ""Romano Prodi""@en .
    ?romanoProdi dbp:party ?romanoProdiParty .
  }
}
```",6,6,7,3,3,3,3,71,2,4,0,0.3333333333333333,1.0,0.5
184,65,test,"Give me the parent of the child of Archduke Joseph Francis of Austria and parent of the native of Budapest and child of the child of the parent, that is a royalty, of Archduke Ladislaus Philipp of Austria.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Francis_of_Austria> . <http://dbpedia.org/resource/Archduke_Ladislaus_Philipp_of_Austria> <http://dbpedia.org/ontology/parent> ?v0 . ?result <http://dbpedia.org/property/father> ?v6 . ?result <http://dbpedia.org/ontology/child> ?v3 . ?result <http://dbpedia.org/ontology/child> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v6 <http://dbpedia.org/property/father> ?v0 . ?v4 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Budapest> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commonEntity WHERE {
  # Step 1: Archduke Joseph Francis of Austria's child and their parent
  ?child1 dbo:parent dbr:Archduke_Joseph_Francis_of_Austria .
  ?parent1 dbo:child ?child1 .

  # Step 2: Native of Budapest
  ?person dbo:nationality dbr:Budapest .
  
  # Step 3: Archduke Ladislaus Philipp's lineage and royalty check
  ?parent2 dbo:child dbr:Archduke_Ladislaus_Philipp_of_Austria .
  ?child2 dbo:parent ?parent2 .
  ?grandChild dbo:parent ?child2 .
  ?grandChild a dbo:Royal .

  # Step 4: Find common entity
  FILTER (?parent1 = ?person && ?commonEntity = ?grandChild)
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
9,64,test,"Give me the alma mater of the mayor, that is a politician, of the entity, that is an organisation, in Belfast and figure known as the nickname of the entity, that is an organisation and an educational institution, in Northern Ireland and alma mater of Allen Hill (scientist).",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/property/nickname> ?v1 . ?v3 <http://dbpedia.org/property/leader> ?v2 . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Northern_Ireland> . ?v3 <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Belfast> . <http://dbpedia.org/resource/Allen_Hill_(scientist)> <http://dbpedia.org/ontology/almaMater> ?result . ?v0 <http://dbpedia.org/property/nickname> ?v1 . ?v2 <http://dbpedia.org/ontology/almaMater> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?almaMaterOfMayor ?nickname WHERE {
  # Step 1 & 2: Find the educational institution in Belfast that is Allen Hill's alma mater and has a nickname
  ?institution dbo:type dbr:Educational_institution ;
              dbp:location dbr:Belfast ;
              dbp:nickname ?nickname .
  
  FILTER EXISTS { 
    ?allenHill dbo:almaMater ?institution . 
    ?allenHill rdfs:label ""Allen Hill (scientist)""@en .
  }
  
  # Step 3: Find the current mayor of Belfast who is a politician
  ?mayor dbo:officeHolder dbr:Belfast_City_Council ;
         dbo:positionTitle ""Mayor""@en ;
         dbo:type dbr:Politician .

  # Step 4: Get the alma mater of this mayor
  ?mayor dbo:almaMater ?almaMaterOfMayor .
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
487,20,test,"Give me the country of the administration of the person born on 1955-01-26 and administration of the person born, that is a soccer player, as the birth name of Phil Scott.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/birthName> ?v4 . ?v1 <http://dbpedia.org/ontology/birthDate> ""1955-01-26""^^<http://www.w3.org/2001/XMLSchema#date> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?result <http://dbpedia.org/property/governor> ?v5 . <http://dbpedia.org/resource/Phil_Scott> <http://dbpedia.org/property/birthName> ?v4 . ?v2 <http://dbpedia.org/property/leader> ?v1 . ?v2 <http://dbpedia.org/ontology/country> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?country1 ?country2 WHERE {
  # Find the person born on 1955-01-26 and their administration country
  ?person1 dbo:birthDate ""1955-01-26""^^xsd:date .
  ?person1 dbo:administratorOf ?admin1 .
  ?admin1 dbo:country ?country1 .

  # Find the soccer player with birth name Phil Scott and their administration country
  ?person2 foaf:name ""Phil Scott""@en ;
           dbo:sport dbr:Soccer .
  ?person2 dbo:birthName ""Phil Scott"" .
  ?person2 dbo:administratorOf ?admin2 .
  ?admin2 dbo:country ?country2 .
}
```",6,7,7,3,2,3,2,20,0,0,1,0,0.0,0
54,61,test,"Give me the predecessor of the child, that is an office holder and a royalty, of the reference to Thihapate of Mohnyin and parent of the child of the parent of Thado Minsaw of Prome.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v5 <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/ontology/successor> ?v3 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> . ?v1 <http://xmlns.com/foaf/0.1/name> ""Thihapate of Mohnyin""@en . ?v5 <http://dbpedia.org/property/father> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?predecessor WHERE {
  # Step 1: Identify Thihapate of Mohnyin
  ?thihapate a dbo:Person ;
             rdfs:label ""Thihapate of Mohnyin""@en .

  # Step 2: Find the parent of Thado Minsaw of Prome
  ?thadoMinsaw a dbo:Person ;
               rdfs:label ""Thado Minsaw of Prome""@en .
  ?parent dbo:child ?thadoMinsaw .

  # Step 3: Determine the child of this parent
  ?child dbo:parent ?parent .

  # Step 4: Identify the predecessor of this child who is an office holder and royalty
  ?predecessor dbo:predecessor ?child ;
               a dbo:OfficeHolder, dbo:Royalty .
}
```",6,8,7,3,2,3,3,71,0,0,1,0,0.0,0
92,38,test,"Give me the band of the person born as Joseph Michael Furney and associated musical artist of the person born, that is an artist, as Jim Sheppard.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/bandMember> ?v2 . ?v3 <http://dbpedia.org/property/birthName> ""Jim Sheppard""@en . ?v2 <http://dbpedia.org/property/birthName> ""Joseph Michael Furney""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?band ?artist 
WHERE {
  # Find the band associated with Joe Perry (Joseph Michael Furney)
  ?person1 foaf:givenName ""Joseph"" .
  ?person1 foaf:familyName ""Furney"" .
  ?person1 dbo:musicalArtist ?band .
  
  FILTER(?band = <http://dbpedia.org/resource/Aerosmith>)

  # Find the musical artist associated with Jimmy Page (Jim Sheppard)
  ?person2 foaf:givenName ""Jim"" .
  ?person2 foaf:familyName ""Sheppard"" .
  ?person2 dbo:musicalArtist ?artist .

  FILTER(?artist = <http://dbpedia.org/resource/Led_Zeppelin>)
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
827,18,test,"Give me the father of the child, that is a royalty, of Charles Augustus, Hereditary Grand Duke of Saxe-Weimar-Eisenach (1844–1894) and child of the child, that is a royalty, of the parent of Charles Alexander, Grand Duke of Saxe-Weimar-Eisenach.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Charles_Alexander,_Grand_Duke_of_Saxe-Weimar-Eisenach> . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Charles_Augustus,_Hereditary_Grand_Duke_of_Saxe-Weimar-Eisenach_(1844–1894)> . ?v2 <http://dbpedia.org/ontology/parent> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?father WHERE {
  # Step 1: Identify Charles Augustus and his children who are royalty
  ?charlesAugustus a dbo:Person ;
                  dbp:name ""Charles Augustus, Hereditary Grand Duke of Saxe-Weimar-Eisenach"" ;
                  dbp:dateOfBirth ?dobCA ;
                  dbp:dateOfDeath ?dodCA .

  ?child dbr:Charles_Augustus,_Hereditary_Grand_Duke_of_Saxe-Weimar-Eisenach dbo:child ?charlesAugustus .
  ?child dbo:title ?titleChild .
  FILTER(CONTAINS(LCASE(STR(?titleChild)), ""royalty""))

  # Step 2: Identify grandchildren who are royalty
  ?grandchild dbo:parent ?child .

  ?grandchild dbo:title ?titleGrandchild .
  FILTER(CONTAINS(LCASE(STR(?titleGrandchild)), ""royalty""))

  # Step 3: Find the parent of Charles Alexander, Grand Duke of Saxe-Weimar-Eisenach
  ?charlesAlexander a dbo:Person ;
                   dbp:name ""Charles Alexander, Grand Duke of Saxe-Weimar-Eisenach"" .
  
  ?parent dbr:Charles_Alexander,_Grand_Duke_of_Saxe-Weimar-Eisenach dbo:parent ?parentOfCA .

  # Step 4: Identify children of this parent who are royalty
  ?royalChild dbo:parent ?parentOfCA .
  ?royalChild dbo:title ?titleRoyalChild .
  FILTER(CONTAINS(LCASE(STR(?titleRoyalChild)), ""royalty""))

  # Step 5: Match the grandchild from step 2 with a royal child from step 4
  ?grandchildSameAs dbr:[sameAs as ?royalChild] .

  # Step 6: Find the father of this matched grandchild
  ?father dbo:parent ?grandchild .
}
```",5,7,6,3,2,3,2,20,0,0,1,0,0.0,0
435,21,test,Give me the work of the author of Iceland and region of Greenwich Mean Time and territory administered from Reykjavík.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Reykjavík> . ?result <http://dbpedia.org/property/author> ?v1 . <http://dbpedia.org/resource/Iceland> <http://dbpedia.org/property/author> ?v1 . ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Greenwich_Mean_Time> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?work ?region ?territory
WHERE {
  # Find the author of ""Iceland""
  ?author dbo:nationality dbr:Iceland .
  ?book dbo:title ""Iceland""@en ;
        dbo:author ?author .

  # Get works by this author
  ?work dbo:author ?author .

  # Find regions associated with GMT
  ?region dbo:timeZone dbr:Greenwich_Mean_Time .

  # Find territories administered from Reykjavík
  ?territory dbo:administrativeCapital dbr:Reykjavík .
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
547,64,test,Give me the resting place of the child of the child of William Haliburton and resting place of the awardee of the award of Gerald Graham and resting place of Simon Cadell.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Simon_Cadell> <http://dbpedia.org/ontology/restingPlace> ?result . ?v3 <http://dbpedia.org/property/father> ""William Haliburton""@en . <http://dbpedia.org/resource/Gerald_Graham> <http://dbpedia.org/property/awards> ?v0 . ?v3 <http://dbpedia.org/ontology/child> ?v2 . ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . ?v1 <http://dbpedia.org/property/awards> ?v0 . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?grandchildRestingPlace ?awardeeRestingPlace ?simonCadellRestingPlace WHERE {
  # Resting place of the child of the child of William Haliburton
  ?williamHaliburton dbo:birthName ""William Haliburton""@en.
  ?williamHaliburtonChild dbo:childOf ?williamHaliburton.
  ?grandchild dbo:childOf ?williamHaliburtonChild.
  ?grandchildRestingPlace dbo:deathPlace ?grandchild.

  # Resting place of the awardee of the award of Gerald Graham
  ?geraldGraham dbp:name ""Gerald Graham""@en.
  ?award dbo:recipient ?awardee; dbo:holder ?geraldGraham.
  ?awardeeRestingPlace dbo:deathPlace ?awardee.

  # Resting place of Simon Cadell
  ?simonCadell dbp:name ""Simon Cadell""@en.
  ?simonCadellRestingPlace dbo:deathPlace ?simonCadell.
}
```",7,7,8,3,3,3,3,71,0,0,1,0,0.0,0
701,47,test,Give me the parent of the child of the child of Seti I and parent of the child of Nefertari.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seti_I> . ?result <http://dbpedia.org/ontology/child> ?v4 . ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v4 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Nefertari> <http://dbpedia.org/ontology/child> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?parentLabel WHERE {
  # Seti I's child and grandchild
  ?setiIChild dbo:spouse|dbo:child ?setiI.
  FILTER (str(?setiI) = ""Seti_I"").
  ?grandchildOfSetiI dbo:child ?setiIChild.

  # Nefertari's child and grandchild
  ?nefertariChild dbo:spouse|dbo:child ?nefertari.
  FILTER (str(?nefertari) = ""Nefertari"").
  ?grandchildOfNefertari dbo:child ?nefertariChild.

  # Parent of Seti I's grandchild
  ?parentSetiIGrandchild dbo:spouse|dbo:child ?grandchildOfSetiI.
  
  # Parent of Nefertari's grandchild
  ?parentNefertariGrandchild dbo:spouse|dbo:child ?grandchildOfNefertari.

  # Find common parent
  FILTER (?parentSetiIGrandchild = ?parentNefertariGrandchild)
  
  # Get the label of the parent
  ?parentLabel rdfs:label ?parentName.
  FILTER (lang(?parentName) = 'en')
  BIND(IRI(CONCAT(""http://dbpedia.org/resource/"", REPLACE(LCASE(REPLACE(STR(?parentSetiIGrandchild), ""http://dbpedia.org/resource/"", """")), ""_"", "" ""))) AS ?parent)
}
```",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
161,54,test,"Give me the commander in Biscay Campaign and military force of the force, that is a societal event and an event and a military conflict, of Francisco Franco and military force of the force, that is a societal event and a military conflict, of the predecessor of Indalecio Prieto.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Indalecio_Prieto> . ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Franco> . <http://dbpedia.org/resource/Biscay_Campaign> <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v5 <http://dbpedia.org/ontology/commander> ?v0 . ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?commanderFranco ?militaryForceFranco ?commanderPredecessor ?militaryForcePredecessor
WHERE {
  # Francisco Franco and the Biscay Campaign
  ?campaign dbp:commander ""Francisco Franco""@en .
  ?campaign dbo:militaryConflict ?conflict1 .
  ?campaign dbo:societalEvent ?event1 .
  
  OPTIONAL { ?campaign dbp:militaryForce ?militaryForceFranco . }
  
  # Predecessor of Indalecio Prieto
  ?prieto dbo:predecessor ?predecessor .
  ?predecessor dbp:commander ?commanderPredecessor .
  ?conflict2 dbo:militaryConflict ?conflict1 .
  ?event2 dbo:societalEvent ?event1 .
  
  OPTIONAL { ?conflict2 dbp:militaryForce ?militaryForcePredecessor . }
}
```",6,11,7,3,3,3,3,71,0,0,3,0,0.0,0
701,46,test,Give me the parent of the child of Ramesses II and parent of the child of the spouse of Amun-her-khepeshef.,SELECT ?result WHERE { <http://dbpedia.org/resource/Amun-her-khepeshef> <http://dbpedia.org/ontology/spouse> ?v2 . ?result <http://dbpedia.org/ontology/child> ?v4 . ?v2 <http://dbpedia.org/ontology/child> ?v1 . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ramesses_II> . ?v1 <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?parentOfRamessesChild ?parentOfSpouseChild
WHERE {
  # Find a child of Ramesses II and their parent
  ?child dbo:parent dbr:Ramesses_II .
  ?child rdfs:label ?childLabel .
  FILTER(CONTAINS(LCASE(?childLabel), ""ramesses ii"")) .
  
  ?child dbo:parent ?parentOfRamessesChild .

  # Find the spouse of Amun-her-khepeshef and a child from that marriage
  ?spouse dbo:spouse dbr:Amun-her-khepeshef .
  ?spouse rdfs:label ?spouseLabel .
  
  ?child2 dbo:parent ?spouse .
  ?child2 rdfs:label ?child2Label .

  # Get the parent of that child (which should be the spouse)
  ?child2 dbo:parent ?parentOfSpouseChild .
}
```",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
232,52,test,"Give me the native of London and child of the person born as the birth name of Jon Pertwee and actor of the claim to fame, that is a film and a military conflict, of Sean Pertwee.",SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Sean_Pertwee> <http://dbpedia.org/ontology/knownFor> ?v5 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/London> . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v5 <http://dbpedia.org/ontology/starring> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v2 <http://dbpedia.org/property/birthName> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?nativeOfLondonChild
WHERE {
  # Find Jon Pertwee's birth name
  dbr:Jon_Pertwee dbo:birthName ?jonBirthName .

  # Find Sean Pertwee's claim to fame (film and military conflict)
  dbr:Sean_Pertwee dbo:claimToFame ?film .
  dbr:Sean_Pertwee dbo:claimToFame ?militaryConflict .

  # Find a person who is native to London, a child of someone with Jon Pertwee's birth name,
  # and an actor in both the identified film and military conflict
  ?person dbp:nativePlace dbr:London ;
          dbo:parent ?parent .
  ?parent dbo:birthName ?jonBirthName .

  ?film dbo:starring ?actor .
  ?militaryConflict dbo:participant ?actor .
  
  FILTER (?actor = ?person)
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
801,37,test,"Give me the associated musical artist of Chris Taylor (music producer) and producer of the work, that is a musical work and a song and a work, of the professional, that is a musical artist, in Rapper.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. <http://dbpedia.org/resource/Chris_Taylor_(music_producer)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://dbpedia.org/property/writer> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://dbpedia.org/ontology/producer> ?result . ?v0 <http://dbpedia.org/property/occupation> ""Rapper""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?musicalArtist WHERE {
  ?work rdf:type dbo:Songs .
  ?work dbo:producer ?chrisTaylor .
  ?chrisTaylor rdfs:label ""Chris Taylor (music producer)""@en .
  
  OPTIONAL { ?work dbo:musicalArtist ?musicalArtist . }
  
  ?professional dbo:musicalArtist ?musicalArtist ;
                rdf:type dbo:MusicalArtist ;
                dbp:genre ?genre .
                
  FILTER(CONTAINS(LCASE(?genre), ""rap"") || CONTAINS(LCASE(?genre), ""hip hop""))
}
```",4,8,5,3,2,3,3,71,0,0,2,0,0.0,0
778,17,test,"Give me the entity in United States and author of the work, that is a software, of the author of Pushd and popd.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/author> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Software>. <http://dbpedia.org/resource/Pushd_and_popd> <http://dbpedia.org/property/author> ?v0 . ?v3 <http://dbpedia.org/property/author> ?v0 . ?result <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/United_States> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?entityInUS ?softwareWork WHERE {
  # Find the author of pushd and popd
  ?author dbo:wikiPageRedirects dbr:Pushd .
  ?author dbo:wikiPageRedirects dbr:Popd .

  # Find software works by this author
  ?softwareWork dbo:creator ?author ;
                a dbo:Software .

  # Find entities in the United States related to this software work
  ?entityInUS dbo:location dbr:United_States ;
              dbo:work ?softwareWork .
}
```",4,5,5,3,2,3,2,20,0,0,1,0,0.0,0
303,24,test,"Give me the party of the person born, that is a politician, as Arnulfo Arias Madrid and entity in the country, that is a country, of El Valle de Antón.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ""Arnulfo Arias Madrid""@en . ?result <http://dbpedia.org/ontology/country> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://dbpedia.org/ontology/party> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/El_Valle_de_Antón> <http://dbpedia.org/ontology/country> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?party ?country
WHERE {
  # Arnulfo Arias Madrid's birthplace is El Valle de Antón
  dbr:Arnulfo_Arias_Madrid dbo:birthPlace dbr:El_Valle_de_Antón .
  
  # Political party of Arnulfo Arias Madrid
  OPTIONAL { dbr:Arnulfo_Arias_Madrid dbo:partyAffiliation ?party . }
  
  # Country of El Valle de Antón
  dbr:El_Valle_de_Antón dbo:country ?country .
}
```",4,6,5,2,2,2,3,28,0,0,1,0,0.0,0
378,59,test,"Give me the war of the commander in the reference, that is a military conflict, to Peninsular War and war of the person born as the birth name of Carl Pontus Gahn.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Peninsular War""@en . ?v0 <http://dbpedia.org/ontology/commander> ?v5 . <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/property/birthName> ?v3 . ?v5 <http://dbpedia.org/ontology/battle> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war WHERE {
  # Identify the Peninsular War
  VALUES (?peninsularWar) { dbr:Peninsular_War }

  # Find commanders associated with the Peninsular War
  ?commander dbo:participatedInMilitaryConflict ?peninsularWar .

  # Identify Carl Pontus Gahn (Pontus Wikner)
  VALUES (?pontusWikner) { dbr:Pontus_Wikner }
  
  # Check if Pontus Wikner was involved in any military conflict
  OPTIONAL {
    ?pontusWikner dbo:participatedInMilitaryConflict ?war .
  }

  # Return a war that connects both entities
  FILTER EXISTS { ?commander dbo:participatedInMilitaryConflict ?war }
}
```",6,7,7,3,2,3,3,71,0,0,2,0,0.0,0
232,71,test,"Give me the child of the person born as the birth name of Jon Pertwee and actor of the claim to fame, that is a film and a military conflict, of the professional in Actor, narrator and producer and native of the residence, that is a settlement and British, of the native, that is a politician and an office holder, of France.","SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v7 <http://dbpedia.org/property/residence> ?v8 . ?result <http://dbpedia.org/ontology/birthPlace> ?v8 . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v8 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v5 <http://dbpedia.org/ontology/starring> ?result . ?v2 <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v4 <http://dbpedia.org/ontology/knownFor> ?v5 . ?v7 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/France> . ?v4 <http://dbpedia.org/property/occupation> ""Actor, narrator and producer""@en . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/property/birthName> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child WHERE {
  # Step 1: Find Jon Pertwee's birth name
  dbr:Jon_Pertwee dbo:birthName ?birthName .

  # Step 2: Find a professional in Actor, narrator, and producer with a film and military conflict claim to fame
  ?actor a dbo:Actor ;
         dbo:narratorOf ?film ;
         dbo:producerOf ?film ;
         dbo:claimToFame ?militaryConflict .
  
  # Step 3: Determine the residence of this person
  ?actor dbo:residence ?settlement .
  ?settlement dbo:country dbr:United_Kingdom .

  # Step 4: Identify a politician and office holder native to France
  ?politician a dbo:Politician ;
              dbo:officeHolderOf ?office ;
              dbo:nativePlace ?france .
  ?france dbo:country dbr:France .

  # Step 5: Find the child of Jon Pertwee's birth name
  ?birthName dbo:child ?child .
}
```",9,15,10,3,3,3,3,71,0,0,1,0,0.0,0
356,19,test,"Give me the team of the native, that is a soccer player and a soccer manager, of the birth place, that is English and a settlement, of Gary Williams (footballer, born 1960) and player in the successor of 2014 Sacramento Republic FC season.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v4 <http://dbpedia.org/ontology/birthPlace> ?v0 . <http://dbpedia.org/resource/Gary_Williams_(footballer,_born_1960)> <http://dbpedia.org/ontology/birthPlace> ?v0 . ?result <http://dbpedia.org/ontology/manager> ?v4 . ?v2 <http://dbpedia.org/ontology/team> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/2014_Sacramento_Republic_FC_season> <http://dbpedia.org/ontology/successor> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?team WHERE {
  # Step 1: Identify Gary Williams (footballer, born 1960)
  ?garryWilliams a dbo:FootballPlayer ;
                 foaf:name ""Gary Williams"" ;
                 dbo:birthYear ""1960""^^xsd:gYear ;
                 dbo:nationality dbr:England .

  # Step 2: Determine his birthplace
  ?garryWilliams dbo:birthPlace ?birthPlace .
  
  FILTER (strstarts(str(?birthPlace), str(dbr:)) && 
          ?birthPlace dbo:country dbr:England &&
          ?birthPlace a dbo:Settlement)

  # Step 3: Find native teams of this place
  ?team a dbo:SoccerTeam ;
        dbo:location ?birthPlace .

  # Step 4: Identify successors to Sacramento Republic FC for the 2014 season
  ?successorTeam a dbo:SoccerTeam ;
                 dbp:succeededBy dbr:Sacramento_Republic_FC .
  
  # Step 5: Find a player who fits all criteria
  ?player a dbo:FootballPlayer, dbo:FootballManager ;
          dbo:nationality dbr:England ;
          dbo:birthPlace ?birthPlace ;
          dbo:team ?successorTeam .

  # Ensure the team is associated with both player and manager roles
  ?player dbp:position ""manager"" .
}
```",5,9,6,3,2,3,2,20,0,0,1,0,0.0,0
528,53,test,"Give me the force of the person born as Narciso Campero Leyes and war of Orozimbo Barbosa and war of the military force of the entity, that is a societal event, in Chile.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ""Narciso Campero Leyes""@en . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/commander> ?v1 . ?v2 <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Chile> . <http://dbpedia.org/resource/Orozimbo_Barbosa> <http://dbpedia.org/ontology/battle> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?narcisoForce ?orozimboForce ?war ?chileEvent
WHERE {
  ?narciso a dbo:Person ;
           foaf:name ""Narciso Campero Leyes"" ;
           dbp:militaryForce ?narcisoForce .
  
  ?orozimbo a dbo:Person ;
            foaf:name ""Orozimbo Barbosa"" ;
            dbp:militaryForce ?orozimboForce .

  OPTIONAL { ?narciso dbo:participatedIn ?war . }
  OPTIONAL { ?orozimbo dbo:participatedIn ?war . }

  FILTER EXISTS {
    ?war dbo:location ?location .
    ?location foaf:name ""Chile"" .
    ?war a dbo:SocietalEvent .
  }
}
```",6,7,7,3,3,3,3,71,0,0,2,0,0.0,0
9,38,test,Give me the alma mater of the awardee of Royal Medal and figure known as the nickname of Queen's University Belfast.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ?v2 . <http://dbpedia.org/resource/Queen's_University_Belfast> <http://dbpedia.org/property/nickname> ?v2 . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Medal> . ?v3 <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?almaMater WHERE {
  ?person a dbo:AwardRecipient ;
          dbo:awardReceived dbr:Royal_Medal ;
          foaf:name ""George Gabriel Stokes""@en .
  OPTIONAL { ?person dbo:almaMater ?almaMater . }
}
```",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
487,19,test,"Give me the administration of the person born, that is a soccer player, as the birth name of Phil Scott and country of the administration of Patricia McCoy.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/country> ?result . <http://dbpedia.org/resource/Phil_Scott> <http://dbpedia.org/property/birthName> ?v0 . ?v4 <http://dbpedia.org/property/birthName> ?v0 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v2 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Patricia_McCoy> . ?result <http://dbpedia.org/property/governor> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthName ?country 
WHERE {
  # Phil Scott's birth name as a soccer player
  ?philScott dbo:sport dbr:Soccer .
  ?philScott foaf:name ""Phil Scott"" .
  ?philScott foaf:nick ?birthName .

  # Patricia McCoy's administration country
  ?patriciaMcCoy dbo:office ?office .
  ?office dbo:country ?country .
  ?patriciaMcCoy foaf:name ""Patricia McCoy"" .
}
```",5,6,6,3,2,3,2,20,0,0,1,0,0.0,0
404,56,test,"Give me the parent of Prince Ernest Augustus of Hanover (born 1914) and spouse of the person born, that is a royalty, as Princess Victoria Louise of Prussia and child of the father of the spouse of Princess Victoria Louise of Prussia.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Prince_Ernest_Augustus_of_Hanover_(born_1914)> . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?v0 . ?v0 <http://dbpedia.org/property/father> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/parent> ?v1 . ?v2 <http://dbpedia.org/property/birthName> ""Princess Victoria Louise of Prussia""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent ?spouse WHERE {
  # Step 1: Identify Prince Ernest Augustus of Hanover born in 1914
  ?person a dbo:Person ;
          rdfs:label ""Prince Ernest Augustus of Hanover""@en ;
          dbo:birthDate ?birthDate .
  
  FILTER (YEAR(?birthDate) = 1914)

  # Step 2: Find his parent (father)
  ?person dbo:father ?parent .

  # Step 3: Identify Princess Victoria Louise of Prussia and her spouse
  ?princess a dbo:Person ;
            rdfs:label ""Princess Victoria Louise of Prussia""@en .
  
  ?princess dbo:spouse ?spouse .

  # Step 4: Ensure the spouse is royalty and a child of the father from step 2
  ?spouse rdf:type dbo:RoyalFamilyMember ;
          dbo:father ?parent .
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
251,20,test,"Give me the location of Battle of Marengo and administration of the ruling party, that is a political party and an organisation, in Sicily and death place of Laura Mancinelli.",SELECT ?result WHERE { <http://dbpedia.org/resource/Sicily> <http://dbpedia.org/property/leaderParty> ?v3 . <http://dbpedia.org/resource/Laura_Mancinelli> <http://dbpedia.org/ontology/deathPlace> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?result <http://dbpedia.org/property/leaderParty> ?v3 . <http://dbpedia.org/resource/Battle_of_Marengo> <http://dbpedia.org/ontology/place> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?location ?party ?organization ?deathPlace WHERE {
  # Location of Battle of Marengo
  { 
    ?battle a dbo:Battle ;
            dbp:name ""Battle of Marengo"" .
    ?battle dbo:location ?location .
  }
  
  UNION
  
  # Administration of the ruling party in Sicily
  { 
    ?party a dbo:PoliticalParty ;
           dbp:governs ""Sicily""@en .
    OPTIONAL {
      ?party dbo:administeredBy ?organization .
    }
  }
  
  UNION
  
  # Death place of Laura Mancinelli
  { 
    ?person a dbo:Person ;
            foaf:name ""Laura Mancinelli"" .
    ?person dbo:deathPlace ?deathPlace .
  }
}
```",4,6,5,2,3,2,3,28,0,0,1,0,0.0,0
528,27,test,Give me the force of the person born as the birth name of Narciso Campero.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> ?v2 . ?v2 <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Narciso_Campero> <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?force
WHERE {
  ?person rdfs:label ""Narciso Campero""@en .
  ?person dbo:birthName ""Narciso Campero"" .
  ?person dbo:militaryCommander ?command .
  ?command dbo:commandedMilitaryForce ?force .
}
```",3,3,4,3,1,3,3,71,0,0,4,0,0.0,0
328,58,test,"Give me the awardee of Order of Suvorov and commander in the force of Ferenc Szálasi and leader of the office, that is a government agency, of the leader, that is an office holder and a politician, of Gustav Jonson.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Order_of_Suvorov> . ?v2 <http://dbpedia.org/ontology/leader> ?result . <http://dbpedia.org/resource/Gustav_Jonson> <http://dbpedia.org/property/leader> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/property/office> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v5 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Ferenc_Szálasi> . ?v5 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?awardee
WHERE {
  ?order dbo:awardee ?awardee .
  FILTER (str(?order) = ""Order_of_Suvorov"") .

  ?force dbo:commanderInForce ?awardee .
  FILTER (str(?force) = ""Ferenc_Szálasi"") .

  ?office dbo:leaderOf ?awardee ;
          a dbo:GovernmentAgency .

  ?gustav dbo:leaderOf ?office ;
          a dbo:OfficeHolder, dbo:Politician .
  FILTER (str(?gustav) = ""Gustav_Jonson"") .
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
404,30,test,"Give me the spouse of Princess Victoria Louise of Prussia and child of the father of Ernest Augustus, Duke of Brunswick and parent of Prince Ernest Augustus of Hanover (born 1914).","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Prince_Ernest_Augustus_of_Hanover_(born_1914)> . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/property/father> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Princess Victoria Louise of Prussia's spouse
  dbr:Princess_Victoria_Louise_of_Prussia dbo:spouse ?spouse .

  # Ernest Augustus, Crown Prince of Hanover as a child of Ernest Augustus III, Duke of Brunswick
  ?spouse dbo:childOf dbr:Ernest_Augustus_III,_Duke_of_Brunswick .

  # Ernest Augustus, Crown Prince of Hanover as parent of Prince Ernest Augustus of Hanover (born 1914)
  ?spouse dbo:parent dbr:Prince_Ernest_Augustus_of_Hanover_(1914–1987) .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
54,48,test,"Give me the child of the father of the child of Thinkhaya of Pagan and predecessor of the child, that is an office holder and a royalty, of Thihapate of Mohnyin.",SELECT ?result WHERE { <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/successor> ?v1 . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Thihapate_of_Mohnyin> . ?v3 <http://dbpedia.org/property/father> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?predecessor WHERE {
  ?thinkhaya a dbo:Person ;
             dbp:name ""Thinkhaya of Pagan"" .
  
  ?child dbo:parent ?thinkhaya .

  ?predecessor dbo:predecessor ?child ;
               a dbo:OfficeHolder, dbo:Royalty .

  ?thihapate a dbo:Person ;
             dbp:name ""Thihapate of Mohnyin"" .

  ?thihapate_child dbo:parent ?thihapate .
  
  FILTER EXISTS { ?predecessor dbo:child ?thihapate_child }
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
392,24,test,"Give me the province of the residence, that is a settlement and Italian, of Sebastiano Bianchetti and region of the time zone, that is a sports event, of Aguilar de Segarra.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/timeZone> ?v2 . ?v1 <http://dbpedia.org/ontology/province> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Sebastiano_Bianchetti> <http://dbpedia.org/property/residence> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsEvent>. <http://dbpedia.org/resource/Aguilar_de_Segarra> <http://dbpedia.org/ontology/timeZone> ?v2 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?province ?region
WHERE {
  # Find Sebastiano Bianchetti's residence that is an Italian settlement
  ?person rdfs:label ""Sebastiano Bianchetti""@en.
  ?person dbo:residence ?settlement.
  ?settlement rdf:type dbo:Settlement.
  ?settlement dbo:country dbr:Italy.
  
  # Get the province of the settlement
  ?settlement dbo:administrativeTerritory ?province.

  # Find Aguilar de Segarra's time zone and related sports event region
  ?place rdfs:label ""Aguilar de Segarra""@en.
  ?place dbo:timeZone ?timezone.
  
  ?event rdf:type dbo:SportsEvent;
         dbo:location ?place.
  
  ?timezone dbo:region ?region.
}
```",4,7,5,2,2,2,3,28,0,0,1,0,0.0,0
314,23,test,"Give me the person deceased at the headquarter of House of Sombrerete and commander in the profession, that is an event and a societal event, of Lisa Gavrić.",SELECT ?result WHERE { <http://dbpedia.org/resource/Lisa_Gavrić> <http://dbpedia.org/property/occupation> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/House_of_Sombrerete> <http://dbpedia.org/ontology/location> ?v2 . ?v1 <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/restingPlace> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?event dbo:agent dbr:Lisa_Gavrić .
  ?event a dbo:Event .
  ?event dbo:socialEvent true .  # Assuming there's a property indicating societal events
  ?event dbo:professionCommander true .  # Hypothetical property for commander in profession

  ?person dbo:placeOfDeath dbr:Headquarters_of_House_of_Sombrerete .

  FILTER (?event = ?person)
}
```",4,6,5,2,2,2,3,28,0,0,1,0,0.0,0
9,51,test,"Give me the alma mater of the awardee of Royal Medal and figure known as the nickname of the entity, that is an organisation and an educational institution, in Northern Ireland.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?result <http://dbpedia.org/property/nickname> ?v2 . ?v4 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Medal> . ?v1 <http://dbpedia.org/property/nickname> ?v2 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Northern_Ireland> . ?v4 <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?almaMater WHERE {
  ?person dbo:awardReceived dbr:Royal_Medal .
  ?person dbo:nickName ?nickname .
  
  # Find organizations and educational institutions in Northern Ireland
  ?org dbo:type dbr:Educational_institution ;
       dbo:location dbr:Northern_Ireland .
  ?org rdfs:label ?nickname .

  # Get the alma mater of the person
  ?person dbo:almaMater ?almaMater .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
617,58,test,Give me the child of Antiochus III the Great and spouse of the child of Antiochus III the Great and parent of the child of the commander in Battle of Panium.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Antiochus_III_the_Great> . ?v5 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/child> ?v2 . ?v1 <http://dbpedia.org/ontology/child> ?v2 . <http://dbpedia.org/resource/Antiochus_III_the_Great> <http://dbpedia.org/ontology/child> ?v5 . <http://dbpedia.org/resource/Battle_of_Panium> <http://dbpedia.org/ontology/commander> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Antiochus III the Great and his child
  dbr:Antiochus_III_the_Great dbo:child dbr:Seleucus_IV_Philopator .
  
  # Spouse of Seleucus IV Philopator (child of Antiochus III)
  dbr:Seleucus_IV_Philopator dbo:spouse ?spouse .

  # Commander in Battle of Panium
  dbr:Battle_of_Panium dbo:commander dbr:Ptolemy_V_Epiphanes .
  
  # Parent of the child of Ptolemy V Epiphanes (likely his spouse)
  OPTIONAL { 
    ?child dbo:parent dbr:Ptolemy_V_Epiphanes .
    ?child dbo:parent ?spouse .
  }
}
```",6,6,7,3,3,3,3,71,0,0,2,0,0.0,0
767,65,test,"Give me the entity in the administration, that is a settlement, of Green and reference to the alter ego of Black Hood and alma mater of the administration of the reference to George Kilbon Nash.","SELECT ?result WHERE { ?v6 <http://dbpedia.org/ontology/almaMater> ?result . ?v4 <http://dbpedia.org/property/leaderParty> ""Green""@en . <http://dbpedia.org/resource/Black_Hood> <http://dbpedia.org/property/alterEgo> ?v3 . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . ?v0 <http://xmlns.com/foaf/0.1/name> ""George Kilbon Nash""@en . ?result <http://dbpedia.org/ontology/state> ?v4 . ?v6 <http://dbpedia.org/property/governor> ?v0 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?entityInAdministration WHERE {
  # Find Green as a settlement in an administration
  ?administration dbo:settlement ?green .
  ?green foaf:name ""Green"" .

  # Find the alter ego of Black Hood
  ?blackHood foaf:alias ?alterEgo .
  ?alterEgo foaf:name ?alterEgoName .
  
  # Find George Kilbon Nash's alma mater and its administration
  ?nash dbo:almaMater ?almaMater .
  ?almaMater foaf:name ""George Kilbon Nash"" .
  ?almaMater dbo:administration ?adminOfAlmaMater .

  # Ensure the administration of Green is linked to the alter ego and alma mater
  FILTER (?administration = ?adminOfAlmaMater)
  
  # Return the entity in the administration that matches all criteria
  ?entityInAdministration dbo:partOf ?administration .
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
182,22,test,Give me the war of the author of 2019 Sri Lanka Easter bombings and war of the work of Gotabhaya Rajapaksa.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v3 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Gotabhaya_Rajapaksa> . <http://dbpedia.org/resource/2019_Sri_Lanka_Easter_bombings> <http://dbpedia.org/property/author> ?v2 . ?v3 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?authorWar ?gotabhayaWar WHERE {
  # Find the author of a work related to the 2019 Sri Lanka Easter bombings
  ?work dbo:subject dbr:Sri_Lanka_Easter_bombings_2019 .
  ?work dbo:author ?author .

  # Check if this author is associated with any war
  OPTIONAL { ?author dbo:occupation ?occupation . FILTER regex(?occupation, ""war"", ""i"") }
  OPTIONAL { ?author dbo:wikiPageDisambiguates ?disambiguation .
             ?disambiguation dbo:subject ?authorWar }

  # Confirm Gotabhaya Rajapaksa's association with the Sri Lankan Civil War
  dbr:Gotabhaya_Rajapaksa dbo:occupation ""Secretary of Defence"" ;
                          dbo:wikiPageDisambiguates ?gotabhayaDisambiguation .
  ?gotabhayaDisambiguation dbo:subject ?gotabhayaWar .

  # Filter to ensure the wars are distinct
  FILTER(?authorWar != ?gotabhayaWar)
}
```",4,4,5,2,2,2,3,28,0,0,1,0,0.0,0
659,46,test,"Give me the commander in the war, that is an event and a military conflict, of 1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish) and commander in the force of the native, that is an office holder, of Kingdom of Ireland.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/1st_Light_Cavalry_Lancers_Regiment_of_the_Imperial_Guard_(Polish)> <http://dbpedia.org/ontology/battle> ?v4 . ?v4 <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Kingdom_of_Ireland> . ?v1 <http://dbpedia.org/ontology/commander> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war ?commander1 ?commander2 WHERE {
  ?war a dbo:MilitaryConflict ;
      rdfs:label ?warLabel .
  
  ?regiment dbo:commandedBy ?commander1 ;
            rdfs:label ""1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish)""@en .

  ?officeHolder dbo:positionHeld ?position ;
                dbo:nationality dbr:Kingdom_of_Ireland ;
                dbo:commandedBy ?commander2 .
  
  FILTER(CONTAINS(LCASE(?warLabel), ""war""))
}
```",5,8,6,3,2,3,3,71,0,0,71,0,0.0,0
485,20,test,"Give me the entity in Nottinghamshire and birth place of the awardee, that is a writer and a poet, of Eric Gregory Award and entity in United Kingdom.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Poet>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Eric_Gregory_Award> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>. ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Nottinghamshire> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?awardee ?birthPlace WHERE {
  ?awardee dbo:award dbr:Eric_Gregory_Award .
  ?awardee dbo:occupation dbr:Writer .
  ?awardee dbo:occupation dbr:Poet .
  ?awardee dbo:birthPlace ?birthPlace .
  ?birthPlace dbo:country dbr:United_Kingdom .
  ?birthPlace rdfs:label ""Nottinghamshire""@en .
}
```",4,6,5,2,3,2,3,28,0,0,1,0,0.0,0
528,68,test,"Give me the war of the commander in the work of --01-09 and force of the person born as Narciso Campero Leyes and war of the military force of the entity, that is a societal event, in Chile.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/commander> ?v7 . ?result <http://dbpedia.org/ontology/commander> ?v3 . ?v5 <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Chile> . ?v0 <http://dbpedia.org/property/author> ""--01-09""^^<http://www.w3.org/2001/XMLSchema#gMonthDay> . ?v3 <http://dbpedia.org/property/birthName> ""Narciso Campero Leyes""@en . ?v7 <http://dbpedia.org/ontology/battle> ?result . ?v4 <http://dbpedia.org/ontology/battle> ?result . ?v4 <http://dbpedia.org/ontology/battle> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war ?commander ?militaryForce WHERE {
  ?work dbo:date ""--01-09"" ;
        dbo:creator dbr:Narciso_Campero_Leyes .
  
  ?war dbo:commander ?commander .
  ?commander foaf:name ""Narciso Campero Leyes""@en .

  OPTIONAL { 
    ?societalEvent dbo:militaryForce ?militaryForce ;
                   dbo:place dbr:Chile .
    
    ?war dbo:participatedIn ?societalEvent .
  }
}
```",8,9,9,3,3,3,3,71,0,0,2,0,0.0,0
547,34,test,Give me the resting place of Alan Cunningham and resting place of the child of the child of William Haliburton.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> ""William Haliburton""@en . ?v2 <http://dbpedia.org/ontology/child> ?v1 . <http://dbpedia.org/resource/Alan_Cunningham> <http://dbpedia.org/ontology/restingPlace> ?result . ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

# Query for Alan Cunningham's resting place
SELECT ?restingPlaceAlanCunningham WHERE {
  dbr:Alan_Cunningham dbo:deathPlace ?restingPlaceAlanCunningham .
}

UNION

# Query for the child of the child (grandchild) of William Haliburton's resting places
SELECT DISTINCT ?restingPlaceGrandchild WHERE {
  # Find children of William Haliburton
  dbr:William_Haliburton dbo:child ?child .

  # For each child, find their children (i.e., grandchildren of William Haliburton)
  ?child dbo:child ?grandchild .

  # Get the resting place for each grandchild
  ?grandchild dbo:deathPlace ?restingPlaceGrandchild .
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
767,58,test,"Give me the reference to the alter ego of the persona, that is a fictional character, of Matthew Burland and alma mater of the administration of George K. Nash and entity in Baden-Württemberg.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/alterEgo> ""Matthew Burland""@en . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v5 <http://dbpedia.org/ontology/almaMater> ?result . ?v5 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/George_K._Nash> . ?result <http://dbpedia.org/ontology/state> <http://dbpedia.org/resource/Baden-Württemberg> . ?v1 <http://dbpedia.org/property/alterEgo> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?alterEgo ?almaMater ?location
WHERE {
  # Assuming Matthew Burland has a fictional alter ego in DBpedia
  ?person rdfs:label ""Matthew Burland""@en .
  ?person dbo:fictionalCharacter ?alterEgo .

  # Alma mater of George K. Nash
  ?nashPerson rdfs:label ""George K. Nash""@en .
  ?nashPerson dbo:almaMater ?almaMater .

  # Entity in Baden-Württemberg
  ?location a dbo:Place ;
            dbo:country dbr:Germany ;
            dbp:stateOrProvince dbr:Baden-Württemberg .

  # Linking the fictional character to the alma mater and location
  ?alterEgo dbo:almaMater ?almaMater .
  ?alterEgo dbo:location ?location .
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
392,20,test,"Give me the region of the time zone, that is a sports event, of Aguilar de Segarra and entity in Italy and province of Schio.",SELECT ?result WHERE { <http://dbpedia.org/resource/Schio> <http://dbpedia.org/ontology/province> ?result . <http://dbpedia.org/resource/Aguilar_de_Segarra> <http://dbpedia.org/ontology/timeZone> ?v3 . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy> . ?result <http://dbpedia.org/ontology/timeZone> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsEvent>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?region WHERE {
  # Time zone for Aguilar de Segarra
  OPTIONAL { 
    dbr:Aguilar_de_Segarra dbo:timeZone ?tzAguilar .
    ?tzAguilar dbo:sportEvent ?eventAguilar .
    ?eventAguilar dbp:location ?region .
  }

  # Time zone for an entity in Italy (assuming a generic Italian city)
  OPTIONAL { 
    dbr:Italy dbo:timeZone ?tzItaly .
    ?tzItaly dbo:sportEvent ?eventItaly .
    ?eventItaly dbp:location ?region .
  }

  # Time zone for Province of Schio
  OPTIONAL { 
    dbr:Province_of_Schio dbo:timeZone ?tzSchio .
    ?tzSchio dbo:sportEvent ?eventSchio .
    ?eventSchio dbp:location ?region .
  }
}
```",4,5,5,2,3,2,3,28,0,0,1,0,0.0,0
547,55,test,Give me the resting place of the awardee of Knight Grand Cross of the Order of St Michael and St George and resting place of the child of James Burton (property developer) and resting place of the actor of Enemy at the Door.,SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Enemy_at_the_Door> <http://dbpedia.org/property/starring> ?v5 . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_St_Michael_and_St_George> . ?v3 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/James_Burton_(property_developer)> <http://dbpedia.org/ontology/child> ?v3 . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?awardeeRestingPlace ?childRestingPlace ?actorRestingPlace WHERE {
  # Awardee of Knight Grand Cross of the Order of St Michael and St George
  ?person dbo:award dbr:Knight_Grand_Cross_of_the_Order_of_St_Michael_and_St_George .
  ?person dbo:finalRestingPlace ?awardeeRestingPlace .

  UNION

  # Child of James Burton (property developer)
  ?jamesBurton a dbo:Person ;
               foaf:name ""James Burton"" ;
               dbo:profession dbr/Property_developer .
  ?child dbo:parent ?jamesBurton ;
         dbo:finalRestingPlace ?childRestingPlace .

  UNION

  # Actor of ""Enemy at the Door""
  ?film a dbo:Film ;
        foaf:name ""Enemy at the Door"" .
  ?actor dbo:actedIn ?film ;
         dbo:finalRestingPlace ?actorRestingPlace .
}
```",6,6,7,2,3,3,3,71,0,0,1,0,0.0,0
232,48,test,"Give me the child of the person born as the birth name of Jon Pertwee and native of the residence, that is a settlement and British, of Sylvie Bermann.",SELECT ?result WHERE { <http://dbpedia.org/resource/Sylvie_Bermann> <http://dbpedia.org/property/residence> ?v1 . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v2 <http://dbpedia.org/property/birthName> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/property/birthName> ?v3 . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child WHERE {
  # Step 1: Get Jon Pertwee's birth name
  dbr:Jon_Pertwee dbo:birthName ?jonBirthName .

  # Step 2: Find Sylvie Bermann's residence that is a settlement and British
  dbr:Sylvie_Bermann dbp:residence ?settlement .
  ?settlement rdf:type dbr:Settlement ;
              dbo:country dbr:United_Kingdom .

  # Step 3: Identify the person with Jon Pertwee's birth name living in that settlement
  ?person dbo:birthName ?jonBirthName ;
          dbp:residence ?settlement .

  # Step 4: Find the child of this person
  ?person dbo:child ?child .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
488,39,test,"Give me the administration of the father of the spouse, that is a royalty, of Tokugawa Masako and death place of Tokugawa Ieyasu.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Tokugawa_Masako> . ?v0 <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Tokugawa_Ieyasu> <http://dbpedia.org/ontology/deathPlace> ?result . ?result <http://dbpedia.org/property/leader> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?administration WHERE {
  # Part 1: Administration of the father of Tokugawa Masako's spouse who is royalty
  ?spouse dbo:spouse dbr:Tokugawa_Masako .
  ?father dbo:child ?spouse .
  ?father dbo:royaltyTitle ?title .
  ?region dbo:administeredBy ?father .
  BIND(?region AS ?administration)
  
  # Part 2: Death place of Tokugawa Ieyasu
  OPTIONAL {
    dbr:Tokugawa_Ieyasu dbo:deathPlace ?deathPlace .
    FILTER(?deathPlace != """")
  }
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
9,71,test,"Give me the figure known as the nickname of the entity, that is an organisation and an educational institution, in Northern Ireland and alma mater of the mayor, that is a politician, of the entity, that is an organisation, in Belfast and alma mater of the awardee of the reference, that is an award, to Royal Medals.","SELECT ?result WHERE { ?v4 <http://xmlns.com/foaf/0.1/name> ""Royal Medals""@en . ?v7 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Northern_Ireland> . ?v7 <http://dbpedia.org/property/nickname> ?v8 . ?v1 <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Belfast> . ?v2 <http://dbpedia.org/ontology/almaMater> ?result . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v5 <http://dbpedia.org/property/awards> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v1 <http://dbpedia.org/property/leader> ?v2 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v5 <http://dbpedia.org/ontology/almaMater> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/property/nickname> ?v8 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?nickname WHERE {
  ?organisation a dbo:Organisation ;
                dbo:location dbr:Belfast .
  
  ?mayor dbo:positionTitle ""Mayor""@en ;
         dbo:almaMater ?institution ;
         dbo:memberOf ?organisation .

  ?awardee dbo:awardReceived dbr:Royal_Medals ;
           dbo:almaMater ?institution .

  ?institution dbp:nickname ?nickname .
}
```",9,14,10,3,3,3,3,71,0,0,1,0,0.0,0
427,49,test,"Give me the reference to the name of Italian People's Party (1994) and party of the person born, that is an office holder and a politician, as the birth name of Romano Prodi.",SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/property/birthName> ?v0 . <http://dbpedia.org/resource/Italian_People's_Party_(1994)> <http://xmlns.com/foaf/0.1/name> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/property/birthName> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?partyName ?birthName ?politicalParty
WHERE {
    # Find the Italian People's Party from 1994
    ?party a dbo:PoliticalParty ;
           rdfs:label ""Italian People's Party""@en ;
           dbo:foundingDate ?foundingDate .
    FILTER (YEAR(?foundingDate) = 1994)
    
    # Find Romano Prodi's birth name and political party affiliation
    dbr:Romano_Prodi a dbo:Politician ;
                     dbo:birthName ?birthName ;
                     dbo:partyAffiliation ?politicalParty .

    # Ensure we get the label for the party
    SERVICE wikibase:label { bd:serviceParam wikibase:language ""en"". }
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
747,63,test,"Give me the band of the person born as Tracey Elizabeth McSween and band of the writer of Apollo (Hardwell song) and person born on the birth date of the person decedent, that is an athlete and a soccer player, at Zolotonosha.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthDate> ?v3 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v6 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Apollo_(Hardwell_song)> <http://dbpedia.org/property/writer> ?v6 . ?v2 <http://dbpedia.org/property/birthName> ""Tracey Elizabeth McSween""@en . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v4 <http://dbpedia.org/ontology/birthDate> ?v3 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v4 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Zolotonosha> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?band1 ?band2 ?athleteName WHERE {
  # Find the band of Tracey Elizabeth McSween
  OPTIONAL {
    ?person1 dbo:name ""Tracey Elizabeth McSween""@en .
    ?person1 dbo:memberOf ?band1 .
  }

  # Find the writer of Apollo (Hardwell song) and their band
  OPTIONAL {
    ?song dbp:title ""Apollo (Hardwell song)""@en ;
          dbo:lyricsBy ?writer .
    ?writer dbo:memberOf ?band2 .
  }
  
  # Find an athlete who is a soccer player, born on the same date as a decedent in Zolotonosha
  OPTIONAL {
    ?decedent dbo:dateOfBirth ?birthDate ;
              dbo:placeOfBirth dbr:Zolotonosha .
    ?athlete dbo:dateOfBirth ?birthDate ;
             dbo:sport dbr:Soccer ;
             dbo:occupation ""Athlete""@en ;
             dbo:name ?athleteName .
  }
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
328,62,test,Give me the commander in the force of the person decedent at Budapest and awardee of the award of the commander in Volcano and Ryukyu Islands campaign and leader of People's Commissariat of Defense of the Soviet Union.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ?v3 . ?v6 <http://dbpedia.org/ontology/commander> ?v0 . <http://dbpedia.org/resource/Volcano_and_Ryukyu_Islands_campaign> <http://dbpedia.org/ontology/commander> ?v4 . ?v4 <http://dbpedia.org/property/awards> ?v3 . ?v0 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Budapest> . <http://dbpedia.org/resource/People's_Commissariat_of_Defense_of_the_Soviet_Union> <http://dbpedia.org/ontology/leader> ?result . ?v6 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  ?person dbo:deathPlace dbr:Budapest .
  ?person dbo:awardReceived ?award .
  ?award dbo:campaign dbr:Volcano_and_Ryukyu_Islands_campaign .
  ?person dbo:leaderOf dbr:People's_Commissariat_of_Defense_of_the_Soviet_Union .
  ?commander dbo:commanded ?person .
}
```",7,7,8,3,3,3,3,71,0,0,1,0,0.0,0
528,37,test,Give me the war of the commander in the work of --01-09 and force of Narciso Campero.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/commander> ?v3 . ?v3 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Narciso_Campero> . ?v0 <http://dbpedia.org/property/author> ""--01-09""^^<http://www.w3.org/2001/XMLSchema#gMonthDay> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war ?force WHERE {
  ?person a dbo:MilitaryPerson ;
          foaf:name ""Narciso Campero""@en .
  
  OPTIONAL { ?person dbo:commanderOf ?unit . }
  OPTIONAL { ?unit dbo:participatedIn ?war . }

  FILTER (str(?person) = str(dbr:Narciso_Campero))
}
```",4,4,5,3,2,3,3,71,0,0,2,0,0.0,0
378,71,test,"Give me the war of the person born as the birth name of Carl Pontus Gahn and claim to fame of the commander in the war, that is a military conflict and a societal event and an event, of Thomas Trigge and war of the commander in the reference, that is a military conflict, to Peninsular War.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ?v1 . ?v7 <http://dbpedia.org/ontology/commander> ?v8 . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v4 <http://xmlns.com/foaf/0.1/name> ""Peninsular War""@en . ?v5 <http://dbpedia.org/ontology/battle> ?result . ?v4 <http://dbpedia.org/ontology/commander> ?v5 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Thomas_Trigge> <http://dbpedia.org/ontology/battle> ?v7 . ?v8 <http://dbpedia.org/ontology/knownFor> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?warOfGahn ?warOfTrigge ?peninsularWarReference
WHERE {
  # Find Carl Pontus Gahn's birth name
  dbr:C_P_Gahn dbo:birthName ?birthName .

  # Find a war involving the person with this birth name as a commander
  ?person rdfs:label ?birthNameLabel .
  FILTER(CONTAINS(LCASE(?birthNameLabel), LCASE(str(?birthName)))) .
  ?person dbo:occupation dbr:Military_person .
  ?warOfGahn dbo:commander ?person .

  # Find Thomas Trigge's military conflict and societal event
  dbr:Thomas_Trigge dbo:occupation dbr:Military_person .
  ?triggeEvent dbo:participant dbr:Thomas_Trigge .
  ?triggeEvent a dbo:MilitaryConflict ; dbo:commander ?person .

  # Find the war referenced in relation to the Peninsular War
  ?peninsularWarReference dbo:relatedTo dbr:Peninsular_War ;
                         dbo:commander ?person .
}
```",9,13,10,3,3,3,3,71,0,0,2,0,0.0,0
528,38,test,Give me the war of the commander in Battle of La Rinconada de Ate and force of the person born as Narciso Campero Leyes.,"SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Battle_of_La_Rinconada_de_Ate> <http://dbpedia.org/ontology/commander> ?v3 . ?result <http://dbpedia.org/ontology/commander> ?v2 . ?v2 <http://dbpedia.org/property/birthName> ""Narciso Campero Leyes""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?commander ?force
WHERE {
  # Find the commander of the Battle of La Rinconada de Ate
  ?battle dbo:name ""Battle of La Rinconada de Ate""@en .
  ?battle dbo:commander ?commander .

  # Find Narciso Campero Leyes and his force
  ?person foaf:name ""Narciso Campero Leyes""@en ;
          dbo:militaryUnit ?force .
}
```",4,4,5,2,2,3,3,71,0,0,2,0,0.0,0
404,45,test,Give me the parent of Prince Ernest Augustus of Hanover (born 1914) and child of the father of the spouse of Princess Victoria Louise of Prussia and spouse of Princess Victoria Louise of Prussia.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/ontology/parent> ?v1 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Prince_Ernest_Augustus_of_Hanover_(born_1914)> . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent ?child
WHERE {
  # Prince Ernest Augustus of Hanover (born 1914)
  ?prince a dbo:Person ;
          dbo:birthYear ""1914""^^xsd:gYear ;
          dbo:fatherOrMother ?parent .

  # Princess Victoria Louise of Prussia and her spouse
  dbr:Princess_Victoria_Louise_of_Prussia dbo:spouse ?spouse .
  
  # Father of the spouse of Princess Victoria Louise
  ?spouse dbo:father ?father .

  # Child of this father who is also a spouse of Princess Victoria Louise
  ?child dbo:father ?father ;
         dbo:spouse dbr:Princess_Victoria_Louise_of_Prussia .
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
659,36,test,"Give me the military force of the force, that is a societal event and an event and a military conflict, of the reference to Rutger Jan Schimmelpenninck and commander in German campaign of 1813.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/commander> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/German_campaign_of_1813> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Rutger Jan Schimmelpenninck""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce WHERE {
    ?event a dbo:MilitaryConflict ;
           dbo:partOf dbr:War_of_the_Sixth_Coalition .
    
    ?schimmelpenninck dbo:commander ?militaryForce ;
                      rdfs:label ""Rutger Jan Schimmelpenninck""@en .

    FILTER(CONTAINS(LCASE(?event), ""1813""))
}
```",4,7,5,3,2,3,3,71,0,0,7,0,0.0,0
488,22,test,Give me the administration of the father of Emperor Go-Mizunoo and birth place of Enomoto Takeaki.,SELECT ?result WHERE { <http://dbpedia.org/resource/Emperor_Go-Mizunoo> <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/property/leader> ?v1 . <http://dbpedia.org/resource/Enomoto_Takeaki> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?fatherAdministration ?enomotoBirthPlace
WHERE {
  # Find Emperor Go-Mizunoo's father
  ?emperorGoMizunoo dbo:father ?father .
  
  FILTER (str(?emperorGoMizunoo) = ""Emperor_Go-Mizunoo"")

  # Get the administration or position held by his father
  OPTIONAL { ?father dbo:positionHeld ?fatherAdministration . }

  # Find Enomoto Takeaki's birthplace
  ?enomotoTakeaki dbp:birthPlace ?enomotoBirthPlace .
  
  FILTER (str(?enomotoTakeaki) = ""Enomoto_Takeaki"")
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
9,36,test,"Give me the figure known as the nickname of the entity, that is an organisation and an educational institution, in Northern Ireland and alma mater of John Alderdice, Baron Alderdice.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/property/nickname> ?v1 . ?result <http://dbpedia.org/property/nickname> ?v1 . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Northern_Ireland> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. <http://dbpedia.org/resource/John_Alderdice,_Baron_Alderdice> <http://dbpedia.org/ontology/almaMater> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?nickname WHERE {
  ?institution a dbo:EducationalInstitution ;
               dbo:location dbr:Northern_Ireland ;
               dbo:almaMater dbr:John_Alderdice,_Baron_Alderdice .
  OPTIONAL { ?institution rdfs:label ?nickname . }
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
492,61,test,"Give me the person decedent at the capital, that is a settlement, of the country of Khemis Miliana District and commander in the war, that is a military conflict and an event, of the commander in Battle of Verdun.",SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/deathPlace> ?v3 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://dbpedia.org/ontology/battle> ?v5 . <http://dbpedia.org/resource/Khemis_Miliana_District> <http://dbpedia.org/ontology/country> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v5 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/ontology/capital> ?v3 . <http://dbpedia.org/resource/Battle_of_Verdun> <http://dbpedia.org/ontology/commander> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?decedent WHERE {
  # Find Khemis Miliana District and its capital
  ?district a dbo:District ;
            dbp:name ""Khemis Miliana"" ;
            dbo:capital ?capital .
  
  # Ensure the capital is a settlement
  ?capital a dbo:Settlement .

  # Identify the commander of the Battle of Verdun
  ?battle a dbo:MilitaryConflict, dbo:Event ;
          dbp:name ""Battle of Verdun"" ;
          dbo:commander ?verdunCommander .
  
  # Find decedents at the capital who were commanders in World War I
  ?decedent dbo:deathPlace ?capital ;
            dbo:occupation dbr:Military_commander ;
            dbo:participatedIn ?worldWarI .

  # Ensure the war is World War I
  ?worldWarI a dbo:MilitaryConflict, dbo:Event ;
             dbp:name ""World War I"" .
  
  # Link decedent to the same war as Verdun's commander
  ?verdunCommander dbo:participatedIn ?worldWarI .
}
```",6,9,7,3,2,3,3,71,0,0,1,0,0.0,0
54,26,test,Give me the parent of the child of the parent of Thado Minsaw of Prome.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> . ?v2 <http://dbpedia.org/property/father> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?finalParent
WHERE {
  ?thadoMinsaw a dbo:Person ;
                foaf:name ""Thado Minsaw of Prome""@en .
  
  ?parent dbo:child ?thadoMinsaw .

  ?grandChild dbo:parent ?parent .

  ?finalParent dbo:child ?grandChild .
}
```",3,3,4,3,1,3,3,71,2,0,0,1.0,1.0,1.0
959,71,test,"Give me the member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of the person born in 1958 and native of the residence, that is a country, of the leader, that is a politician, of 2010 Japanese House of Councillors election and manager of the team of the manager, that is a sports manager, of 1998 Kashima Antlers season.","SELECT ?result WHERE { ?v8 <http://dbpedia.org/ontology/manager> ?v7 . <http://dbpedia.org/resource/2010_Japanese_House_of_Councillors_election> <http://dbpedia.org/property/leader> ?v4 . ?v1 <http://dbpedia.org/ontology/almaMater> ?v2 . ?result <http://dbpedia.org/ontology/birthPlace> ?v5 . ?v8 <http://dbpedia.org/ontology/manager> ?result . <http://dbpedia.org/resource/1998_Kashima_Antlers_season> <http://dbpedia.org/ontology/manager> ?v7 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/team> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v4 <http://dbpedia.org/property/residence> ?v5 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v1 <http://dbpedia.org/ontology/birthYear> ""1958""^^<http://www.w3.org/2001/XMLSchema#gYear> . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?almaMater WHERE {
  # Step 1: Identify the leader of the 2010 Japanese House of Councillors election
  ?politician dbo:office ""Member of the House of Councillors""@en .
  ?politician dbo:election ""2010 Japanese House of Councillors election""@en .

  # Step 2: Determine birth year and native residence
  ?politician dbo:birthYear ?year .
  FILTER (?year = 1958)
  ?politician dbo:nationality dbr:Japan .
  
  ?politician dbo:residence ?country .
  FILTER (isLiteral(?country) && datatype(?country) = xsd:string)

  # Step 3: Find the manager of the 1998 Kashima Antlers season
  ?manager dbo:occupation ""Sports manager""@en .
  ?manager dbo:managedTeam dbr:Kashima_Antlers_1998_season .

  # Link to Alma Mater
  ?politician dbo:almaMater ?almaMater .
  
  FILTER EXISTS { 
    ?almaMater a (dbo:University | dbo:EducationalInstitution) .
    ?almaMater dbo:nationality dbr:Japan .
  }
}
```",9,16,10,3,3,3,3,71,0,0,3,0,0.0,0
959,68,test,"Give me the manager of the team of Takashi Sekizuka and member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of the person born in 1958 and native of the residence, that is a country, of the leader, that is a politician, of 2010 Japanese House of Councillors election.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?v4 <http://dbpedia.org/ontology/almaMater> ?v2 . ?v4 <http://dbpedia.org/ontology/birthYear> ""1958""^^<http://www.w3.org/2001/XMLSchema#gYear> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?result <http://dbpedia.org/ontology/team> ?v2 . ?v0 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Takashi_Sekizuka> . ?v0 <http://dbpedia.org/ontology/manager> ?result . ?result <http://dbpedia.org/ontology/birthPlace> ?v6 . <http://dbpedia.org/resource/2010_Japanese_House_of_Councillors_election> <http://dbpedia.org/property/leader> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?v1 <http://dbpedia.org/property/residence> ?v6 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?manager ?university WHERE {
  # Step 1: Identify the leader of the 2010 Japanese House of Councillors election
  ?politician dbo:office ""Member of the House of Councillors""@en .
  ?politician dbp:election ""2010 Japanese House of Councillors election""@en .

  # Step 2: Determine the country where this politician was born and their native residence
  ?politician dbo:birthPlace ?country .
  
  # Step 3: Find a person born in 1958 from that country
  ?person dbo:birthDate ?date .
  FILTER(YEAR(?date) = 1958)
  ?person dbo:nationality ?nationality .
  FILTER(?nationality = ?country)

  # Step 4: Identify the manager of Takashi Sekizuka's team
  dbr:Takashi_Sekizuka dbo:teamManager ?manager .

  # Step 5: Determine the alma mater (university) of both Takashi Sekizuka and the person identified in step 3
  ?manager dbo:almaMater ?university .
  ?person dbo:almaMater ?university .

  # Ensure the university is Japanese, an organization, and an educational institution
  ?university a dbo:EducationalInstitution ;
              dbp:country ""Japan""@en ;
              rdf:type dbo:Organization .
}
```",8,14,9,3,3,3,3,71,0,0,3,0,0.0,0
232,38,test,"Give me the actor of the claim to fame, that is a film and a military conflict, of Sean Pertwee and native of the residence, that is a settlement and British, of Sylvie Bermann.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Sylvie_Bermann> <http://dbpedia.org/property/residence> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Sean_Pertwee> <http://dbpedia.org/ontology/knownFor> ?v3 . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v3 <http://dbpedia.org/ontology/starring> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actor WHERE {
  # Sean Pertwee's films that are also military conflicts
  ?film dbo:starring dbr:Sean_Pertwee .
  ?film dbo:militaryConflict ?conflict .

  # Sylvie Bermann's native place which is a settlement in Britain
  ?settlement dbo:nativePlace dbr:Sylvie_Bermann ;
              rdf:type dbo:Settlement ;
              dbo:country dbr:United_Kingdom .

  # Find actors of these films
  ?film dbo:actor ?actor .
}
```",4,8,5,2,2,3,3,71,0,0,1,0,0.0,0
378,21,test,"Give me the war of the person born as Carl Pontus Gahn and claim to fame of Louis des Balbes de Berton de Crillon, 1st Duke of Mahón.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Louis_des_Balbes_de_Berton_de_Crillon,_1st_Duke_of_Mahón> <http://dbpedia.org/ontology/knownFor> ?result . ?v1 <http://dbpedia.org/property/birthName> ""Carl Pontus Gahn""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?claimToFame ?war
WHERE {
    # Find Carl Pontus Gahn's claim to fame
    OPTIONAL {
        dbr:Carl_Pontus_Gahn dbo:notableFor ?claimToFame .
    }
    
    # Find Louis des Balbes de Berton de Crillon, 1st Duke of Mahón's associated war
    OPTIONAL {
        dbr:Louis_des_Balbes_de_Berton_de_Crillon_1st_Duke_of_Mahón dbo:participatedIn ?war .
    }
}
```",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
54,65,test,"Give me the child of the father of Soe Min Wimala Dewi and parent of the child of the parent of Thado Minsaw of Prome and predecessor of the child, that is an office holder and a royalty, of Thihapate of Mohnyin.",SELECT ?result WHERE { ?v6 <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v4 <http://dbpedia.org/ontology/child> ?result . ?v6 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/successor> ?v3 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Thihapate_of_Mohnyin> . <http://dbpedia.org/resource/Soe_Min_Wimala_Dewi> <http://dbpedia.org/property/father> ?v4 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  # Soe Min Wimala Dewi's father
  ?soeMinWimalaDewi a dbo:Person ;
                   dbp:father ?father .

  # Thado Minsaw of Prome's parent and their child
  ?thadoMinsawOfProme a dbo:Person ;
                     dbp:parent ?parent .
  ?grandchild dbp:parent ?parent .

  # Thihapate of Mohnyin's child who is an office holder and royalty
  ?thihapateOfMohnyin a dbo:Person ;
                      dbp:child ?child .
  ?child a dbo:OfficeHolder, dbo:Royalty .

  # The person we are looking for
  ?person dbp:father ?father ; # Sibling of Soe Min Wimala Dewi
          dbp:parent ?grandchild . # Parent of Thado Minsaw's grandchild

  # Predecessor condition
  ?predecessor dbo:successor ?child .
  ?person dbo:successor ?predecessor .

}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
645,18,test,"Give me the entity in the residence, that is a country, of the commander in Battle of Diamond Rock and alma mater of the child of Richard Pankhurst.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://dbpedia.org/ontology/country> ?v2 . <http://dbpedia.org/resource/Richard_Pankhurst> <http://dbpedia.org/ontology/child> ?v3 . <http://dbpedia.org/resource/Battle_of_Diamond_Rock> <http://dbpedia.org/ontology/commander> ?v1 . ?v1 <http://dbpedia.org/property/residence> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?entityInResidence WHERE {
  # Find the commander of the Battle of Diamond Rock
  ?battle dbo:commander ?commander .
  FILTER(STR(?battle) = ""Battle_of_Diamond_Rock"")

  # Get the residence of the commander and ensure it's a country
  ?commander dbo:residence ?residence .
  ?residence rdf:type dbr:Country .

  # Find Richard Pankhurst's child and their alma mater
  ?pankhurst dbo:child ?child .
  FILTER(STR(?pankhurst) = ""Richard_Pankhurst"")
  
  ?child dbo:almaMater ?almaMater .

  # Find an entity in the same country as the commander's residence that matches the alma mater condition
  ?entityInResidence dbo:location ?residence .
  ?entityInResidence dbo:almaMater ?almaMater .
}
```",5,6,6,3,2,3,2,20,0,0,1,0,0.0,0
767,64,test,"Give me the entity in the administration, that is a settlement, of the writer of Where It's At (Dustin Lynch album) and alma mater of Carl L. Nippert and reference to the alter ego of the persona, that is a fictional character, of Matthew Burland.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://dbpedia.org/ontology/state> ?v2 . ?v0 <http://dbpedia.org/property/alterEgo> ""Matthew Burland""@en . ?v2 <http://dbpedia.org/property/leaderParty> ?v3 . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. <http://dbpedia.org/resource/Where_It's_At_(Dustin_Lynch_album)> <http://dbpedia.org/property/writer> ?v3 . <http://dbpedia.org/resource/Carl_L._Nippert> <http://dbpedia.org/ontology/almaMater> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?settlement WHERE {
  # Writer of the album ""Where It's At""
  ?album dbo:title ""Where It's At""@en .
  ?album dbo:writer ?writer .

  # Alma mater of Carl L. Nippert
  ?nippert foaf:name ""Carl L. Nippert"" .
  ?nippert foaf:almaMater ?almaMater .

  # Alter ego of Matthew Burland's fictional character
  ?burland foaf:name ""Matthew Burland"" .
  ?burland dbo:fictionalCharacter ?fictionalCharacter .
  ?fictionalCharacter dbo:alterEgo ?alterEgo .

  # Settlement in the administration
  ?settlement a dbo:Settlement ;
              dbo:administrativeUnit ?adminUnit .

  # Linking conditions
  FILTER(?writer = ?nippert || ?writer = ?burland)
  FILTER(?almaMater = ?adminUnit || ?alterEgo = ?adminUnit)
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
528,55,test,Give me the force of the person born as Narciso Campero Leyes and war of the military force of Battle of Pisagua and war of the commander in Battle of La Rinconada de Ate.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ""Narciso Campero Leyes""@en . ?result <http://dbpedia.org/ontology/commander> ?v2 . ?v3 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Pisagua> . ?v5 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Battle_of_La_Rinconada_de_Ate> <http://dbpedia.org/ontology/commander> ?v5 . ?v3 <http://dbpedia.org/ontology/battle> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?narcisoBirthDate ?narcisoRank ?pisaguaWar ?pisaguaForce ?rinconadaCommander WHERE {
  # Narciso Campero Leyes details
  dbr:Narciso_Campero_Leyes dbo:birthDate ?narcisoBirthDate .
  OPTIONAL { dbr:Narciso_Campero_Leyes dbo:rank ?narcisoRank . }

  # Battle of Pisagua details
  dbr:Battle_of_Pisagua dbo:partOfWar ?pisaguaWar .
  OPTIONAL { dbr:Battle_of_Pisagua dbo:militaryForce ?pisaguaForce . }

  # Battle of La Rinconada de Ate commander
  dbr:Battle_of_La_Rinconada_de_Ate dbo:commander ?rinconadaCommander .
}
```",6,6,7,2,3,3,3,71,0,0,2,0,0.0,0
427,67,test,"Give me the party of the person born, that is an office holder and a politician, as the birth name of Romano Prodi and party of the father of the alumnus of Massachusetts Institute of Technology and reference to Partito Popolare Italiano.","SELECT ?result WHERE { ?v6 <http://dbpedia.org/ontology/party> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Massachusetts_Institute_of_Technology> . ?v3 <http://dbpedia.org/property/birthName> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> ""Partito Popolare Italiano""@en . ?v3 <http://dbpedia.org/ontology/party> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/property/father> ?v6 . <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/property/birthName> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?romanoBirthName ?romanoParty ?alumnusFather ?fatherParty 
WHERE {
  # Romano Prodi's birth name and party
  dbr:Romano_Prodi dbo:birthName ?romanoBirthName .
  OPTIONAL { dbr:Romano_Prodi dbo:party ?romanoParty . }

  # MIT alumnus and their father
  ?alumnus dbp:almaMater dbr:Massachusetts_Institute_of_Technology ;
           dbo:father ?alumnusFather .

  # Father's party affiliation with reference to Partito Popolare Italiano
  OPTIONAL { ?alumnusFather dbo:party ?fatherParty . }
  FILTER (CONTAINS(LCASE(STR(?fatherParty)), ""partito popolare italiano""))
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
177,8,test,"Give me the headquarter of the office, that is an organisation, of Joo Don-sik and entity in South Korea.",SELECT ?result WHERE { <http://dbpedia.org/resource/Joo_Don-sik> <http://dbpedia.org/property/office> ?v2 . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/South_Korea> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://dbpedia.org/ontology/location> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?headquarter WHERE {
  ?person rdfs:label ""Joo Don-sik""@en.
  ?organization dbo:memberOrLeader ?person .
  ?organization dbo:country dbr:South_Korea .
  ?organization dbo:headquarters ?headquarter .
}
```",3,4,4,2,2,2,2,9,0,0,1,0,0.0,0
328,54,test,"Give me the commander in the force of the person decedent at Budapest and leader of People's Commissariat of Defense of the Soviet Union and awardee of the award of Bruce Fraser, 1st Baron Fraser of North Cape.","SELECT ?result WHERE { <http://dbpedia.org/resource/Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape> <http://dbpedia.org/property/awards> ?v3 . ?v5 <http://dbpedia.org/ontology/commander> ?v0 . <http://dbpedia.org/resource/People's_Commissariat_of_Defense_of_the_Soviet_Union> <http://dbpedia.org/ontology/leader> ?result . ?result <http://dbpedia.org/property/awards> ?v3 . ?v5 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Budapest> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  # Lavrentiy Beria's details
  dbr:Lavrentiy_Beria a dbo:Person ;
                      dbo:officeHolderOf dbr:People%27s_Commissariat_of_Defense_of_the_Soviet_Union ;
                      dbo:awardReceived dbr:Award_of_Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape .

  # Find the commander under Beria's leadership
  ?commander a dbo:MilitaryPerson ;
             dbo:commanderOf ?force .
  
  ?force dbo:leader dbr:Lavrentiy_Beria .
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
547,56,test,Give me the resting place of the awardee of the award of Gerald Graham and resting place of Simon Cadell and resting place of the child of James Burton (property developer).,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Simon_Cadell> <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/James_Burton_(property_developer)> <http://dbpedia.org/ontology/child> ?v2 . ?v1 <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Gerald_Graham> <http://dbpedia.org/property/awards> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?awardeeRestingPlace ?simonCadellRestingPlace ?childRestingPlace WHERE {
  # Gerald Graham's awardee and their resting place
  ?award dbo:recipient ?awardee .
  FILTER (str(?award) = ""Gerald_Graham"")
  OPTIONAL { ?awardee dbo:deathPlace ?awardeeDeathPlace . }
  
  # Simon Cadell and his resting place
  dbr:Simon_Cadell dbo:deathPlace ?simonCadellRestingPlace .
  
  # James Burton (property developer) and his child's resting place
  ?jamesBurton dbo:occupation ""Property_developer"" ;
               dbo:child ?child .
  OPTIONAL { ?child dbo:deathPlace ?childDeathPlace . }
  
  BIND(COALESCE(?awardeeDeathPlace, ""Unknown"") AS ?awardeeRestingPlace)
  BIND(COALESCE(?childDeathPlace, ""Unknown"") AS ?childRestingPlace)
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
783,16,test,"Give me the band member of the person born, that is an artist and a musical artist, as Priscilla Opoku-Kwarteng and associated musical artist of the band member of Ofori Amponsah.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Ofori_Amponsah> . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v3 <http://dbpedia.org/property/birthName> ""Priscilla Opoku-Kwarteng""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?priscillaBandMember ?oforiBandMember WHERE {
  # Priscilla Opoku-Kwarteng details
  ?priscilla a dbo:MusicalArtist ;
             foaf:name ""Priscilla Opoku-Kwarteng"" ;
             dbo:birthPlace ?birthPlace .
  
  # Band she is a member of
  ?band dbo:member ?priscillaBandMember ;
        dbo:genre dbp:musicalGenre .

  # Ofori Amponsah details
  ?ofori a dbo:MusicalArtist ;
         foaf:name ""Ofori Amponsah"" .
  
  # Band he is a member of
  ?band2 dbo:member ?oforiBandMember ;
         dbo:genre dbp:musicalGenre .

  FILTER EXISTS { ?priscilla dbo:birthPlace ?birthPlace }
}
```",4,6,5,2,2,3,2,20,0,0,1,0,0.0,0
827,19,test,"Give me the child of the child, that is a royalty, of Grand Duchess Maria Pavlovna of Russia (1786–1859) and father of the child, that is a royalty, of the spouse, that is a royalty, of Princess Pauline of Saxe-Weimar-Eisenach.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/property/father> ?v0 . ?v4 <http://dbpedia.org/property/father> ?result . ?v2 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Grand_Duchess_Maria_Pavlovna_of_Russia_(1786–1859)> . ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Princess_Pauline_of_Saxe-Weimar-Eisenach> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?grandchild WHERE {
  # Step 1: Find Maria Pavlovna's children who are royalty
  ?mariaPavlovna dbo:spouse ?husband .
  FILTER (str(?mariaPavlovna) = ""Maria_Pavlovna_of_Russia_(1786-1859)"")

  ?child dbo:parent ?mariaPavlovna ;
         dbo:royalTitle ?title1 .

  # Step 2: Find Maria Pavlovna's grandchildren who are royalty
  ?grandchild dbo:parent ?child ;
              dbo:royalTitle ?title2 .

  # Step 3: Identify Princess Pauline's spouse
  ?pauline dbp:spouse ?prince .
  FILTER (str(?pauline) = ""Pauline_of_Saxe-Weimar-Eisenach"")

  # Step 4: Find the child of this spouse who is royalty
  ?childOfPrince dbo:parent ?prince ;
                 dbo:royalTitle ?title3 .

  # Step 5: Determine the father of this royal child
  ?fatherOfChild dbp:spouse ?mother .
  FILTER (str(?childOfPrince) = str(?grandchild))

  # Step 6: Match the grandchild with the father identified in step 5
}
```",5,8,6,3,2,3,2,20,0,0,1,0,0.0,0
747,46,test,"Give me the band of the writer of Apollo (Hardwell song) and person born on the birth date of the person decedent, that is an athlete and a soccer player, at Zolotonosha.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Zolotonosha> . ?v2 <http://dbpedia.org/ontology/birthDate> ?v1 . ?result <http://dbpedia.org/ontology/birthDate> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Apollo_(Hardwell_song)> <http://dbpedia.org/property/writer> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band WHERE {
  # Step 1: Identify the writer of ""Apollo"" by Hardwell
  ?song dbo:title ""Apollo (Hardwell song)""@en .
  ?song dbo:lyricist ?writer .

  # Step 2: Find an athlete and soccer player born in Zolotonosha
  ?athlete a dbo:SoccerPlayer ;
           dbo:birthPlace dbr:Zolotonosha ;
           dbo:birthDate ?birthDate .

  # Step 3: Match the birth date with any notable person's death (assuming decedent)
  ?decedent dbo:dateOfDeath ?deathDate .
  FILTER (?birthDate = ?deathDate)

  # Step 4: Find the band associated with the writer
  ?writer dbo:musicalBand ?band .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
701,61,test,"Give me the spouse of the father of the commander, that is a royalty, in Battle of Perire and parent of the child of the child of Seti I.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seti_I> . ?result <http://dbpedia.org/ontology/spouse> ?v3 . ?result <http://dbpedia.org/ontology/child> ?v5 . ?v1 <http://dbpedia.org/property/father> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Battle_of_Perire> <http://dbpedia.org/ontology/commander> ?v1 . ?v5 <http://dbpedia.org/property/father> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
  # Step 1: Identify Seti I
  ?setiI a dbo:Person ;
         foaf:name ""Seti I""@en .

  # Step 2: Find Seti I's child
  ?child dbo:parent ?setiI .

  # Step 3: Find the grandchild of Seti I
  ?grandChild dbo:parent ?child .

  # Step 4: Identify the commander related to Battle of Perire
  ?battle a dbo:Battle ;
          dbp:name ""Battle of Perire""@en .
  ?commander dbo:commanderOf ?battle ;
             a dbo:Person .

  # Step 5: Determine the father of this commander
  ?father dbo:child ?commander .

  # Step 6: Find the spouse of this father, ensuring they are royalty
  ?spouse dbo:spouse ?father ;
          a dbo:RoyalFamilyMember .
}
```",6,7,7,3,2,3,3,71,0,0,2,0,0.0,0
44,9,test,"Give me the band member of the associated musical artist, that is a group and an organisation, of Queensrÿche and band member of the band of John Pettibone.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/John_Pettibone> . <http://dbpedia.org/resource/Queensrÿche> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?member WHERE {
  # Find members of Queensrÿche who are part of a musical artist and an organization
  ?queensArtist dbo:musicalArtist dbp:name ""Queensrÿche"" .
  ?queensArtist dbo:organization dbp:name ""Queensrÿche"" .
  ?queensMember dbo:bandMember ?queensArtist .

  # Find members of the band associated with John Pettibone
  ?pettiboneBand dbo:musicalArtist ?pettiboneArtist .
  ?pettiboneArtist dbp:name ""John Pettibone""@en .
  ?pettiboneMember dbo:bandMember ?pettiboneBand .

  # Find common members between the two bands
  FILTER (?queensMember = ?pettiboneMember)
}
```",4,6,5,2,2,2,2,9,0,0,1,0,0.0,0
378,48,test,Give me the claim to fame of the commander in Great Siege of Gibraltar and war of the person born as the birth name of Carl Pontus Gahn.,SELECT ?result WHERE { <http://dbpedia.org/resource/Great_Siege_of_Gibraltar> <http://dbpedia.org/ontology/commander> ?v1 . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/ontology/knownFor> ?result . <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/property/birthName> ?v3 . ?v2 <http://dbpedia.org/property/birthName> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?eliottClaimToFame ?arrheniusClaimToFame WHERE {
  # George Augustus Eliott's claim to fame
  OPTIONAL {
    dbr:George_Augustus_Eliott dbo:role dbr:Great_Siege_of_Gibraltar .
    dbr:Great_Siege_of_Gibraltar dbp:name ""Great Siege of Gibraltar""@en .
    ?eliottClaimToFame rdfs:label ?eliottLabel .
    FILTER(LANG(?eliottLabel) = 'en')
  }
  
  # Svante Arrhenius's claim to fame
  OPTIONAL {
    dbr:Svante_Arrhenius dbo:birthName ""Carl Pontus Gahn""@en .
    dbr:Nobel_Prize_in_Chemistry_1903 dbo:laureate dbr:Svante_Arrhenius .
    ?arrheniusClaimToFame rdfs:label ?arrheniusLabel .
    FILTER(LANG(?arrheniusLabel) = 'en')
  }
}
```",5,5,6,3,2,3,3,71,0,0,2,0,0.0,0
996,17,test,Give me the force of Dagobert Sigmund von Wurmser and entity in the award of the native of Palestine (region).,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Palestine_(region)> . ?result <http://dbpedia.org/ontology/place> ?v3 . ?v0 <http://dbpedia.org/property/awards> ?v3 . ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Dagobert_Sigmund_von_Wurmser> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?force ?award ?entity WHERE {
  # Dagobert Sigmund von Wurmser's military command or role
  dbr:Dagobert_Sigmund_von_Wurmser dbo:commander ?force .
  
  # Awards associated with Dagobert Sigmund von Wurmser
  OPTIONAL { dbr:Dagobert_Sigmund_von_Wurmser dbo:award ?award . }
  
  # Entities native to the Palestine region and have received an award
  ?entity dbo:nationality dbr:Palestine .
  ?entity dbo:award ?award .
}
```",4,4,5,3,2,3,2,20,0,0,4,0,0.0,0
9,67,test,"Give me the alma mater of John Alderdice, Baron Alderdice and figure known as the nickname of the entity, that is an organisation and an educational institution, in Northern Ireland and alma mater of the awardee of the reference, that is an award, to Royal Medals.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v6 <http://dbpedia.org/ontology/almaMater> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Royal Medals""@en . ?result <http://dbpedia.org/property/nickname> ?v3 . ?v1 <http://dbpedia.org/property/nickname> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v6 <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/John_Alderdice,_Baron_Alderdice> <http://dbpedia.org/ontology/almaMater> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Northern_Ireland> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?institution ?nickname WHERE {
  # Find John Alderdice's alma mater
  dbr:John_Alderdice_Baron_Alderdice dbo:almaMater ?institution .

  # Ensure the institution is in Northern Ireland and has a nickname
  ?institution dbo:location dbr:Northern_Ireland .
  OPTIONAL { ?institution dbp:nickname ?nickname . }

  # Find an awardee of Royal Medals who attended this institution
  ?awardee dbo:almaMater ?institution ;
           dbo:awardReceived dbr:Royal_Medals .

}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
838,18,test,"Give me the band member of the band, that is a group, of YU Grupa and band of the band member, that is an artist and a musical artist, of the band, that is a band and a group, of Žika Jelić.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v1 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Žika_Jelić> . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . <http://dbpedia.org/resource/YU_Grupa> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandMember ?otherBand ?artistBand 
WHERE {
  # Find band members of YU Grupa
  ?yugrupaMember dbo:memberOf dbr:YU_Grupa .
  
  # For each member, find other bands they are part of
  ?yugrupaMember dbo:memberOf ?otherBand .

  # Identify the band associated with Žika Jelić and its members
  ?zikajelicBand dbo:member dbr:Žika_Jelić .
  
  # For each member, check if they are also an artist or musical artist
  ?zikajelicMember dbo:memberOf ?zikajelicBand ;
                  a dbo:MusicalArtist ;
                  a dbo:Artist .

  # Check if the band members of YU Grupa and Žika Jelić's band overlap
  FILTER (?yugrupaMember = ?zikajelicMember)

  # Find other bands that these overlapping members are part of
  ?zikajelicMember dbo:memberOf ?artistBand .
}
```",5,10,6,3,2,3,2,20,0,0,5,0,0.0,0
427,18,test,Give me the party of Giulio Andreotti and party of Romano Prodi and reference to Partito Popolare Italiano.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Partito Popolare Italiano""@en . <http://dbpedia.org/resource/Giulio_Andreotti> <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/ontology/party> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?andreottiParty ?prodiParty WHERE {
  ?andreotti dbo:partyAffiliation ?andreottiParty .
  ?prodi dbo:partyAffiliation ?prodiParty .

  VALUES ?person { 
    dbc:Giulio_Andreotti 
    dbc:Romano_Prodi
  }
  
  ?person rdfs:label ?personLabel .
  FILTER (
    (CONTAINS(LCASE(?personLabel), ""giulio andreotti"") && ?andreotti = ?person) ||
    (CONTAINS(LCASE(?personLabel), ""romano prodi"") && ?prodi = ?person)
  )
  
  OPTIONAL {
    ?pippo dbp:wikiPageRedirects dbc:Partito_Popolare_Italiano .
    FILTER (?pippo != ?andreottiParty && ?pippo != ?prodiParty) 
  }
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
767,49,test,"Give me the reference to the alter ego of the persona, that is a fictional character, of Matthew Burland and entity in the administration, that is a settlement, of Green.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/alterEgo> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://xmlns.com/foaf/0.1/name> ?v1 . ?result <http://dbpedia.org/ontology/state> ?v2 . ?v0 <http://dbpedia.org/property/alterEgo> ""Matthew Burland""@en . ?v2 <http://dbpedia.org/property/leaderParty> ""Green""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?alterEgo ?adminEntity
WHERE {
  # Find Matthew Burland's fictional alter ego
  ?person a dbo:Person ;
          foaf:name ""Matthew Burland"" .
  OPTIONAL { 
    ?person foaf:alterName ?alterEgo .
  }

  # Find an entity in the administration of Green
  ?settlement a dbo:Settlement ;
              foaf:name ""Green"" .
  ?adminEntity dbo:administrativeBody ?settlement .
}
```",5,7,6,3,2,3,3,71,0,0,7,0,0.0,0
488,47,test,"Give me the birth place of the commander in Boshin War and death place of the father, that is a politician, of the father, that is an office holder, of Matsudaira Tadamasa.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v4 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Matsudaira_Tadamasa> <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Boshin_War> <http://dbpedia.org/ontology/commander> ?v2 . ?v0 <http://dbpedia.org/property/father> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlaceOfCommander ?deathPlaceOfPoliticianFather
WHERE {
  # Matsudaira Tadamasa's father who is a politician (office holder)
  dbr:Matsudaira_Tadamasa dbo:father ?politicianFather .
  
  # Ensure the father was an office holder (politician)
  ?politicianFather dbo:occupation dbr:Politician .

  # Find the death place of this politician
  ?politicianFather dbo:deathPlace ?deathPlaceOfPoliticianFather .

  # Commander in Boshin War
  ?commander dbo:participatedInBattle dbr:Boshin_War .
  
  # Get birthplace of the commander
  ?commander dbo:birthPlace ?birthPlaceOfCommander .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
492,71,test,"Give me the person decedent at the capital, that is a settlement, of the country of Khemis Miliana District and person decedent at the work of the author of French Algeria and commander in the war, that is a military conflict and an event, of the commander in Battle of Verdun.",SELECT ?result WHERE { ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/property/author> ?v1 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/French_Algeria> <http://dbpedia.org/property/author> ?v1 . ?v5 <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://dbpedia.org/ontology/battle> ?v5 . <http://dbpedia.org/resource/Battle_of_Verdun> <http://dbpedia.org/ontology/commander> ?v4 . ?v7 <http://dbpedia.org/ontology/capital> ?v8 . ?result <http://dbpedia.org/ontology/deathPlace> ?v8 . ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . <http://dbpedia.org/resource/Khemis_Miliana_District> <http://dbpedia.org/ontology/country> ?v7 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?personDecedent
WHERE {
  # Khemis Miliana District's capital is Khemis Miliana
  dbr:Khemis_Miliana_District dbo:capital dbr:Khemis_Miliana .
  
  # Person decedent at the capital of Khemis Miliana District
  ?personDecedent dbo:deathPlace dbr:Khemis_Miliana .

  # Author of ""French Algeria""
  dbr:François_Mauriac dbo:author dbr:French_Algeria .
  
  # Work related to the author where a person died
  ?work dbo:author dbr:François_Mauriac ;
        dbo:deathPlace ?personDecedent .

  # Commander in the Battle of Verdun
  ?commanderInVerdun dbo:militaryConflict dbr:Battle_of_Verdun .
  
  # Same commander involved in another war
  ?commanderInWar dbo:militaryConflict ?war ;
                  rdf:type dbo:Commander ;
                  rdfs:label ?commanderLabel .

  FILTER (?personDecedent = ?commanderInVerdun)
}
```",9,12,10,3,3,3,3,71,0,0,1,0,0.0,0
328,43,test,Give me the commander in the force of the person decedent at Budapest and awardee of Order of Suvorov and leader of People's Commissariat of Defense of the Soviet Union.,SELECT ?result WHERE { <http://dbpedia.org/resource/People's_Commissariat_of_Defense_of_the_Soviet_Union> <http://dbpedia.org/ontology/leader> ?result . ?v4 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Budapest> . ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Order_of_Suvorov> . ?v4 <http://dbpedia.org/ontology/commander> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  ?person dbo:deathPlace dbr:Budapest .
  ?force dbo:commander ?commander .
  ?force dbo:member ?person .
  
  ?commander dbo:award dbr:Order_of_Suvorov .
  ?commander dbo:position dbr:People's_Commissar_for_Defence_of_the_Soviet_Union .
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
378,43,test,"Give me the claim to fame of Louis des Balbes de Berton de Crillon, 1st Duke of Mahón and war of the commander in the reference, that is a military conflict, to Peninsular War and war of Carl Pontus Gahn.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/commander> ?v4 . <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/ontology/battle> ?result . ?v4 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Peninsular War""@en . <http://dbpedia.org/resource/Louis_des_Balbes_de_Berton_de_Crillon,_1st_Duke_of_Mahón> <http://dbpedia.org/ontology/knownFor> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?claimToFame ?peninsularWarRole ?conflictWithGahn WHERE {
  # Claim to fame of Louis des Balbes de Berton de Crillon, 1st Duke of Mahón
  dbr:Louis_des_Balbes_de_Berton_de_Crillon_1st_Duke_of_Mahón dbo:claimToFame ?claimToFame .

  # His role in the Peninsular War
  OPTIONAL {
    dbr:Louis_des_Balbes_de_Berton_de_Crillon_1st_Duke_of_Mahón dbo:participatedIn dbr:Peninsular_War .
    BIND(""Commander"" AS ?peninsularWarRole)
  }

  # Any military conflict involving both him and Carl Pontus Gahn
  OPTIONAL {
    ?conflict dbo:participant dbr:Louis_des_Balbes_de_Berton_de_Crillon_1st_Duke_of_Mahón ;
              dbo:participant dbr:Carl_Pontus_Gahn .
    BIND(?conflict AS ?conflictWithGahn)
  }
}
```",5,6,6,3,3,3,3,71,0,0,2,0,0.0,0
365,9,test,"Give me the reference to the real name of The Blasters and band of the professional, that is an artist and a musical artist, in Vocalist, musician, songwriter.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/occupation> ""Vocalist, musician, songwriter""@en . <http://dbpedia.org/resource/The_Blasters> <http://xmlns.com/foaf/0.1/name> ?v3 . ?result <http://dbpedia.org/ontology/bandMember> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?realName ?band WHERE {
  ?person a dbo:MusicalArtist .
  ?person dbo:member ?band .
  ?band rdfs:label ""The Blasters""@en .
  OPTIONAL { ?person foaf:name ?realName . }
  FILTER EXISTS { ?person dbo:occupation dbr:Singer . }
  FILTER EXISTS { ?person dbo:occupation dbr:Musician . }
  FILTER EXISTS { ?person dbo:occupation dbr:Songwriter . }
}
```",4,6,5,2,2,2,2,9,0,0,1,0,0.0,0
617,20,test,"Give me the parent of the father, that is a royalty, of the reference, that is a royalty, to Richeza of Poland and child of the child, that is a royalty, of the parent of Mlada (abbess).","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/child> ?v5 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Mlada_(abbess)> . ?v2 <http://dbpedia.org/ontology/parent> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://xmlns.com/foaf/0.1/name> ""Richeza of Poland""@en . ?v4 <http://dbpedia.org/property/father> ?v5 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?ancestor
WHERE {
  # Richeza of Poland's father
  ?richeza dbp:father ?father .
  
  # Father's parent (grandfather)
  ?father dbo:parent ?grandfather .

  # Check if grandfather is royalty
  ?grandfather a dbo:Monarch .

  # Reference royalty connected to Richeza through the grandfather
  ?reference a dbo:Monarch .
  ?reference dbo:child ?intermediate .
  ?intermediate dbo:parent ?grandfather .

  # Child of child (great-grandchild) of reference royalty
  ?greatGrandChild dbo:child ?childOfReference .
  ?childOfReference dbo:child ?intermediate .

  # Mlada's parent and their parent (grandparent)
  ?mlada dbp:name ""Mlada (abbess)"" .
  ?mlada dbo:mother|dbo:father ?parentMlada .
  ?parentMlada dbo:parent ?grandparentMlada .

  # Check if grandparent of Mlada is royalty
  ?grandparentMlada a dbo:Monarch .

  # Find the ancestor (parent of Richeza's father) who is royalty
  ?ancestor dbo:child ?father .
}
```",6,9,7,3,2,3,2,20,0,0,1,0,0.0,0
392,23,test,"Give me the province of the residence, that is a settlement and Italian, of Sebastiano Bianchetti and entity in the region, that is a country, of Central European Time.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v1 . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. ?v2 <http://dbpedia.org/ontology/province> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Sebastiano_Bianchetti> <http://dbpedia.org/property/residence> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?province ?country 
WHERE {
  # Find Sebastiano Bianchetti's residence in Italy
  ?person a dbo:Person ;
          foaf:name ""Sebastiano Bianchetti"" .
  
  ?person dbo:residence ?settlement .
  ?settlement a dbo:Settlement ;
              dbp:country dbr:Italy .

  # Get the province of this settlement
  ?settlement dbo:administrativeTerritory ?province .

  # Find countries in Central European Time zone
  ?timeZone a dbo:TimeZone ;
            dbp:name ""Central European Time"" .
  
  ?country dbo:timezone ?timeZone .
}
```",4,7,5,2,2,2,3,28,0,0,1,0,0.0,0
767,33,test,Give me the entity in Baden-Württemberg and alma mater of the administration of the reference to George Kilbon Nash.,"SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/governor> ?v0 . ?v0 <http://xmlns.com/foaf/0.1/name> ""George Kilbon Nash""@en . ?result <http://dbpedia.org/ontology/state> <http://dbpedia.org/resource/Baden-Württemberg> . ?v3 <http://dbpedia.org/ontology/almaMater> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?almaMater ?location WHERE {
  VALUES ?person { dbr:George_Kilbon_Nash }
  
  ?person dbo:almaMater ?almaMater .
  ?almaMater dbp:location ?location .

  FILTER(CONTAINS(LCASE(?location), ""baden-württemberg""))
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
838,19,test,"Give me the band of the band member, that is an artist and a musical artist, of YU Grupa and band member of the band, that is a group, of the reference, that is a group and an organisation, to YU Grupa.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/YU_Grupa> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v0 <http://xmlns.com/foaf/0.1/name> ""YU Grupa""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandMember ?otherBand WHERE {
  # Identify band members of YU Grupa who are artists and musical artists
  ?member dbo:bandMemberOf dbr:YU_Grupa .
  ?member a dbo:Artist ;
          a dbo:MusicalArtist .

  # Find other bands these individuals belong to, ensuring those bands are classified as groups
  ?member dbo:bandMemberOf ?otherBand .
  ?otherBand a dbo:Group .

  # Ensure the reference is related to YU Grupa and is a group or organization
  OPTIONAL {
    ?reference dbo:reference dbr:YU_Grupa ;
               a (dbo:Group|dbo:Organization) .
  }
}
```",5,10,6,3,2,3,2,20,0,0,5,0,0.0,0
492,27,test,"Give me the person decedent at the capital, that is a settlement, of the country of Khemis Miliana District.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/capital> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Khemis_Miliana_District> <http://dbpedia.org/ontology/country> ?v1 . ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?person ?deathPlace WHERE {
  # Find the capital of Khemis Miliana District
  ?district dbo:capital ?capital .
  FILTER (str(?district) = ""Khemis_Miliana_District"")
  
  # Ensure the capital is a settlement
  ?capital rdf:type dbo:Settlement .

  # Find persons who died at this capital
  ?person dbo:placeOfDeath ?deathPlace .
  FILTER (?deathPlace = ?capital)
}
```",3,4,4,3,1,3,3,71,0,0,122,0,0.0,0
328,34,test,Give me the leader of People's Commissariat of Defense of the Soviet Union and awardee of the award of the commander in Volcano and Ryukyu Islands campaign.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> ?v1 . <http://dbpedia.org/resource/Volcano_and_Ryukyu_Islands_campaign> <http://dbpedia.org/ontology/commander> ?v2 . <http://dbpedia.org/resource/People's_Commissariat_of_Defense_of_the_Soviet_Union> <http://dbpedia.org/ontology/leader> ?result . ?result <http://dbpedia.org/property/awards> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person dbo:positionTitle ""People's Commissar for Defence""@en .
  ?person dbo:award ""Order of Victory""@en ; # Assuming a high-level award like the Order of Victory
         dbo:campaign ""Battle of Okinawa""@en . # This is part of the Volcano and Ryukyu Islands campaign
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
391,58,test,"Give me the native of Compton, California and actor of the claim to fame, that is a work, of Michael Ballhaus and actor of the movie, that is a movie and a work and a television show, with the professional in .","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/starring> ?v1 . <http://dbpedia.org/resource/Michael_Ballhaus> <http://dbpedia.org/ontology/knownFor> ?v5 . ?v5 <http://dbpedia.org/ontology/starring> ?result . ?v2 <http://dbpedia.org/property/starring> ?result . ?v1 <http://dbpedia.org/property/occupation> """"@en . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Compton,_California> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?actor WHERE {
  ?actor dbo:nationality dbr:United_States ;
         dbo:birthPlace dbr:Compton,_California .
  
  ?work dbo:director dbr:Michael_Ballhaus ;
        dbo:starring ?actor .

  ?movie dbo:genre dbr:Film ;
         dbo:starring ?actor ;
         dbo:adaptationOfWork ?tvShow .
         
  ?tvShow a dbo:TelevisionProgram .
}
```",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
617,22,test,Give me the parent of the child of Antiochus (son of Antiochus III the Great) and child of Antiochus III the Great.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v1 . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Antiochus_III_the_Great> . <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/child> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?parent WHERE {
  ?antiochus3 a dbo:Person ;
              foaf:name ""Antiochus III""@en .
  
  ?antiochus4 a dbo:Person ;
              foaf:name ""Antiochus (son of Antiochus III the Great)""@en ;
              dbo:childOf ?antiochus3 .

  ?child a dbo:Person ;
         dbo:childOf ?antiochus4, ?antiochus3 .
  
  ?parent dbo:parent ?child .
}
```",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
142,9,test,Give me the birthplace of the actor of Papa wa Newscaster and entity in the region of Japan Standard Time.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Japan_Standard_Time> . <http://dbpedia.org/resource/Papa_wa_Newscaster> <http://dbpedia.org/ontology/starring> ?v3 . ?result <http://dbpedia.org/ontology/country> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?actorBirthplace ?jstEntity WHERE {
  # Find the actor who played ""Papa"" in ""Newscaster""
  ?movie dbo:title ""Newscaster""@en .
  ?role dbo:characterName ""Papa""@en ;
        dbo:actor ?actor .
  
  # Get the birthplace of this actor
  ?actor dbp:birthPlace ?actorBirthplace .

  # Find an entity in Japan Standard Time region (Japan)
  ?jstEntity dbo:timeZone dbr:Asia/Tokyo .
}
```",4,4,5,2,2,2,2,9,0,0,2,0,0.0,0
915,20,test,"Give me the resident of the birthplace, that is a settlement, of the director of Pipe Dreams (1976 film) and father of the child, that is a fictional character and a soap character, of the parent, that is a fictional character and a soap character, of Lizzie Spaulding.",SELECT ?result WHERE { <http://dbpedia.org/resource/Lizzie_Spaulding> <http://dbpedia.org/ontology/parent> ?v4 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v5 <http://dbpedia.org/property/father> ?result . ?result <http://dbpedia.org/ontology/residence> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v5 <http://dbpedia.org/property/father> ?v4 . <http://dbpedia.org/resource/Pipe_Dreams_(1976_film)> <http://dbpedia.org/ontology/director> ?v1 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoapCharacter>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoapCharacter>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?resident WHERE {
  # Step 1: Find the director of ""Pipe Dreams"" (1976 film)
  ?film dbo:director ?director .
  FILTER(STR(?film) = ""Pipe_Dreams_(1976_film)"")

  # Step 2: Get the birthplace of the director
  ?director dbp:birthPlace ?birthPlace .

  # Step 3: Ensure the birthplace is a settlement
  ?birthPlace rdf:type dbo:Settlement .

  # Step 4: Identify Lizzie Spaulding's parent
  ?lizzie dbo:parent ?parent .
  FILTER(STR(?lizzie) = ""Lizzie_Spaulding"")

  # Step 5: Find the child of this parent who is a fictional character and soap character
  ?child dbo:parent ?parent ;
         rdf:type dbo:FictionalCharacter, dbo:SoapCharacter .

  # Step 6: Get the resident of the director's birthplace
  ?resident dbp:residence ?birthPlace .
}
```",6,11,7,3,2,3,2,20,0,0,1,0,0.0,0
328,67,test,"Give me the awardee of Order of Suvorov and leader of the office, that is a government agency, of the leader, that is an office holder and a politician, of Gustav Jonson and commander in the force of the person decedent at Budapest.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v6 <http://dbpedia.org/ontology/commander> ?v0 . ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Order_of_Suvorov> . ?v3 <http://dbpedia.org/ontology/leader> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Gustav_Jonson> <http://dbpedia.org/property/leader> ?v1 . ?v0 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Budapest> . ?v6 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v1 <http://dbpedia.org/property/office> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?awardee WHERE {
  ?awardee dbo:award dbr:Order_of_Suvorov .
  
  ?office dbo:leader ?awardee ;
          a dbo:GovernmentAgency .

  ?gustavJonson dbo:positionHeld ?office ;
                a dbo:OfficeHolder, dbo:Politician .

  ?decedent dbo:commanderInForce ?awardee ;
            dbo:deathPlace dbr:Budapest .
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
30,8,test,Give me the native of Paris and professional in the profession of Édouard Alphonse James de Rothschild.,SELECT ?result WHERE { <http://dbpedia.org/resource/Édouard_Alphonse_James_de_Rothschild> <http://dbpedia.org/property/occupation> ?v2 . ?result <http://dbpedia.org/property/occupation> ?v2 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Paris> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nativePlace ?profession 
WHERE {
  VALUES ?person { dbr:Édouard_Alphonse_James_de_Rothschild }
  
  ?person dbo:nativePlace ?nativePlace .
  FILTER (str(?nativePlace) = ""Paris"")
  
  ?person dbo:occupation ?profession .
}
```",3,3,4,2,2,2,2,9,0,0,1,0,0.0,0
547,57,test,Give me the resting place of James Burton (Egyptologist) and resting place of the actor of the show with Emily Richard and resting place of the awardee of Knight Grand Cross of the Order of St Michael and St George.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/starring> ?v5 . ?v5 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/James_Burton_(Egyptologist)> <http://dbpedia.org/ontology/restingPlace> ?result . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_St_Michael_and_St_George> . ?v0 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emily_Richard> . ?v3 <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?restingPlace (GROUP_CONCAT(?name; separator="", "") AS ?individuals)
WHERE {
  # James Burton (Egyptologist)
  { 
    VALUES ?person1 { dbr:James_Burton_(Egyptologist) }
    ?person1 dbo:deathPlace ?restingPlace .
    BIND(""James Burton (Egyptologist)"" AS ?name)
  }

  UNION

  # Actor from a show with Emily Richard
  {
    ?show dbo:starring dbr:Emily_Richard .
    ?show dbo:starring ?actor .
    ?actor dbo:deathPlace ?restingPlace .
    BIND(""Actor of the show with Emily Richard"" AS ?name)
  }

  UNION

  # Awardee of Knight Grand Cross of the Order of St Michael and St George
  {
    ?person dbo:honoursReceived dbr:Knight_Grand_Cross_of_the_Order_of_St_Michael_and_St_George .
    ?person dbo:deathPlace ?restingPlace .
    BIND(""Awardee of Knight Grand Cross of the Order of St Michael and St George"" AS ?name)
  }
}
GROUP BY ?restingPlace
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
617,71,test,"Give me the spouse of the child of the successor, that is a royalty, of Antiochus (son of Antiochus III the Great) and parent of the child of the commander in Battle of Panium and child of the child, that is a royalty, of the successor, that is a royalty, of Antiochus II Theos.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v2 . <http://dbpedia.org/resource/Antiochus_II_Theos> <http://dbpedia.org/ontology/successor> ?v1 . <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/successor> ?v4 . ?v2 <http://dbpedia.org/property/father> ?v1 . ?v7 <http://dbpedia.org/ontology/child> ?v8 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://dbpedia.org/ontology/spouse> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Battle_of_Panium> <http://dbpedia.org/ontology/commander> ?v7 . ?v4 <http://dbpedia.org/ontology/child> ?v5 . ?result <http://dbpedia.org/ontology/child> ?v8 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Antiochus (son of Antiochus III the Great)
  ?antiochus dbr:Antiochus_IV_Epiphanes .
  
  # Successor of Antiochus
  ?successor dbo:successor ?antiochus .
  FILTER EXISTS { ?successor a dbo:Monarch . } # Ensure successor is royalty

  # Child of the successor
  ?child dbo:child ?successor .

  # Spouse of the child (who is also royalty)
  ?spouse dbo:spouse ?child .
  FILTER EXISTS { ?spouse a dbo:Monarch . }

  # Commander in Battle of Panium and their child
  ?commander dbr:Battle_of_Panium#Commanders .
  ?commanderChild dbo:child ?commander .

  # Child of the child (of successor) who is royalty
  ?grandchild dbo:child ?child .
  FILTER EXISTS { ?grandchild a dbo:Monarch . }

  # Ensure parent of this grandchild is the spouse found earlier
  ?spouse2 dbo:parent ?grandchild .
  FILTER (?spouse = ?spouse2)
}
```",9,12,10,3,3,3,3,71,0,0,2,0,0.0,0
747,49,test,Give me the band of the person born as the persona of Shèna and person born on the birth date of Pavlo Khudzik.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/property/birthName> ?v0 . <http://dbpedia.org/resource/Pavlo_Khudzik> <http://dbpedia.org/ontology/birthDate> ?v2 . ?result <http://dbpedia.org/ontology/birthDate> ?v2 . <http://dbpedia.org/resource/Shèna> <http://xmlns.com/foaf/0.1/givenName> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?bandShena ?bandPavlo
WHERE {
  # Find the person born as ""Shèna""
  ?personShena foaf:givenName ""Shèna"" .
  ?personShena dbo:musicalArtist ?bandShena .

  # Find Pavlo Khudzik's birth date
  ?pavloKhudzik a dbo:Person ;
                foaf:name ""Pavlo Khudzik"" ;
                dbo:birthDate ?birthDatePavlo .

  # Find another person born on the same date as Pavlo Khudzik
  ?personPavlo a dbo:Person ;
               dbo:birthDate ?birthDatePavlo .
  ?personPavlo dbo:musicalArtist ?bandPavlo .
}
```",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
115,9,test,Give me the alma mater of the awardee of National Order of Scientific Merit and alma mater of the alumnus of National University of San Marcos.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/almaMater> ?result . ?v1 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/National_University_of_San_Marcos> . ?v3 <http://dbpedia.org/ontology/almaMater> ?result . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/National_Order_of_Scientific_Merit> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?awardeeAlmaMater ?alumnusAlmaMater WHERE {
  # Find alma mater of awardees of the National Order of Scientific Merit
  ?person dbo:award dbr:National_Order_of_Scientific_Merit .
  ?person dbo:almaMater ?awardeeAlmaMater .

  UNION

  # Find alma mater of alumni from the National University of San Marcos
  ?alumnus dbo:alumniOf dbr:National_University_of_San_Marcos .
  ?alumnus dbo:almaMater ?alumnusAlmaMater .
}
```",4,4,5,2,2,2,2,9,0,0,2,0,0.0,0
996,20,test,Give me the entity in the award of the native of Palestine (region) and force of the awardee of the elevation of Lac d'Avoriaz.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/ontology/commander> ?v2 . ?result <http://dbpedia.org/ontology/place> ?v5 . ?v4 <http://dbpedia.org/property/awards> ?v5 . <http://dbpedia.org/resource/Lac_d'Avoriaz> <http://dbpedia.org/ontology/elevation> ?v1 . ?v4 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Palestine_(region)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?award
WHERE {
  ?person dbo:birthPlace dbp:Palestine .
  ?person dbo:elevation dbp:Lac_d'Avoriaz .
  ?person dbo:award ?award .
}
```",6,6,7,3,2,3,2,20,0,0,4,0,0.0,0
820,16,test,Give me the professional in the award of Scott McCloud and child of the parent of Jason Schwartzman.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v3 . <http://dbpedia.org/resource/Scott_McCloud> <http://dbpedia.org/property/awards> ?v2 . ?result <http://dbpedia.org/property/occupation> ?v2 . ?v3 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Jason_Schwartzman> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX schema: <http://schema.org/>

SELECT ?professional WHERE {
  # Find Scott McCloud's award
  ?scottMccloud dbo:award ?award .
  
  FILTER(?scottMccloud = dbpedia:Scott_McCloud) .

  # Identify Jason Schwartzman's parent
  ?jasonSchwartzman foaf:parent ?parent .
  
  FILTER(?jasonSchwartzman = dbpedia:Jason_Schwartzman) .

  # Find the child of that parent (excluding Jason Schwartzman)
  ?child foaf:parent ?parent .
  FILTER(?child != ?jasonSchwartzman) .

  # Get the professional role of this individual
  ?child schema:jobTitle ?professional .
}
```",4,4,5,2,2,3,2,20,0,0,1,0,0.0,0
701,35,test,Give me the parent of the child of Nefertari and spouse of the father of Merneptah.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v1 . ?v2 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Nefertari> <http://dbpedia.org/ontology/child> ?v2 . <http://dbpedia.org/resource/Merneptah> <http://dbpedia.org/property/father> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?entity WHERE {
  ?nefertariChild dbo:parent dbr:Nefertari .
  ?merneptahFather dbo:child dbr:Merneptah .
  ?merneptahFather dbo:spouse ?spouse .

  FILTER (?nefertariChild = ?merneptahFather)
}
```",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
767,46,test,"Give me the entity in the administration, that is a settlement, of the writer of Where It's At (Dustin Lynch album) and alma mater of the administration of George K. Nash.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://dbpedia.org/property/leaderParty> ?v2 . ?result <http://dbpedia.org/ontology/state> ?v1 . ?v4 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/George_K._Nash> . ?v4 <http://dbpedia.org/ontology/almaMater> ?result . <http://dbpedia.org/resource/Where_It's_At_(Dustin_Lynch_album)> <http://dbpedia.org/property/writer> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?settlement WHERE {
  # Dustin Lynch's song ""Where It's At""
  ?song dbo:title ""Where It's At"" ;
        dbo:artist dbr:Dustin_Lynch .
  
  # Writer of the song
  ?song dbo:lyricist ?writer .

  # George K. Nash's alma mater and its administration
  ?nash dbo:almaMater ?university .
  ?university dbo:location ?adminLocation .
  
  # Administration location is a settlement
  ?adminLocation rdf:type dbo:Settlement ;
                 rdfs:label ?adminSettlement .

  # Writer's administration location
  ?writer dbo:birthPlace ?writerBirthPlace .
  ?writerBirthPlace dbo:administrativeUnit ?writerAdminUnit .
  ?writerAdminUnit dbo:location ?writerAdminLocation .
  
  # Writer's admin location is a settlement
  ?writerAdminLocation rdf:type dbo:Settlement ;
                       rdfs:label ?writerSettlement .

  # Find common settlement in both administrations
  FILTER (?adminSettlement = ?writerSettlement)
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
547,61,test,Give me the resting place of the actor of the show with Emily Richard and resting place of the awardee of the award of Gerald Graham.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emily_Richard> . ?v3 <http://dbpedia.org/ontology/restingPlace> ?result . ?v3 <http://dbpedia.org/property/awards> ?v1 . <http://dbpedia.org/resource/Gerald_Graham> <http://dbpedia.org/property/awards> ?v1 . ?v5 <http://dbpedia.org/ontology/restingPlace> ?result . ?v0 <http://dbpedia.org/property/starring> ?v5 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?actorRestingPlaceLabel ?awardeeRestingPlaceLabel WHERE {
  # Part 1: Resting place of an actor from a show with Emily Richard
  ?show dbo:starring dbr:Emily_Blunt .
  ?show dbo:starring ?actor .
  OPTIONAL { ?actor dbp:placeOfBurial ?actorRestingPlace . }
  
  # Part 2: Resting place of the awardee of an award associated with Gerald Graham
  ?award dbo:awardedBy dbr:Gerald_Graham .
  ?recipient dbo:receivedAward ?award .
  OPTIONAL { ?recipient dbp:placeOfBurial ?awardeeRestingPlace . }
  
  # Labels for the resting places
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
```",6,6,7,3,2,3,3,71,0,0,2,0,0.0,0
54,67,test,"Give me the predecessor of the child, that is an office holder and a royalty, of the reference to Thihapate of Mohnyin and parent of the child of the parent of Thado Minsaw of Prome and child of Thinkhaya of Pagan.","SELECT ?result WHERE { ?v1 <http://xmlns.com/foaf/0.1/name> ""Thihapate of Mohnyin""@en . ?v6 <http://dbpedia.org/property/father> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v6 <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://dbpedia.org/property/father> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> . ?result <http://dbpedia.org/ontology/successor> ?v3 . <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?predecessor WHERE {
  # Step 1: Identify Thihapate of Mohnyin
  ?thihapate a dbo:Monarch ;
             foaf:name ""Thihapate""@en .

  # Step 2: Find the child of Thihapate of Mohnyin
  ?child dbo:parent ?thihapate .

  # Step 3: Identify office holder and royalty among these children
  ?officeHolder a dbo:Monarch ;
               foaf:name ?name ;
               dbo:parent ?child .

  # Step 4: Find the predecessor of this individual
  ?predecessor dbo:successor ?officeHolder .

  # Step 5: Identify Thado Minsaw of Prome
  ?thadoMinsaw a dbo:Monarch ;
                foaf:name ""Thado Minsaw""@en .

  # Step 6: Find the parent of Thado Minsaw of Prome
  ?parent dbr:Prome dbo:monarch ?thadoMinsaw .

  # Step 7: Identify the child of this parent
  ?child2 dbo:parent ?parent .

  # Step 8: Identify Thinkhaya of Pagan
  ?thinkhaya a dbo:Monarch ;
             foaf:name ""Thinkhaya""@en .

  # Step 9: Find the child of Thinkhaya of Pagan
  ?child3 dbo:parent ?thinkhaya .

  # Step 10: Ensure the identified individual from step 7 matches the one from step 9
  FILTER (?child2 = ?child3)

  # Combine these relationships to find the predecessor
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
994,24,test,"Give me the band member of Don Dokken and associated musical artist of the band member, that is a band and a group and an organisation, of Meshuggah.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Meshuggah> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Don_Dokken> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?bandMember ?associatedBand WHERE {
  # Step 1: Find a band member of Don Dokken
  ?member dbo:bandMember dbr:Don_Dokken .
  
  # Step 2: Find associated musical artists (bands) for this member
  ?member dbo:musicalArtist ?associatedBand .

  # Step 3: Ensure the band is classified as both a ""group"" and an ""organization""
  ?associatedBand rdf:type dbo:MusicalGroup ;
                  rdf:type dbo:Organization .
  
  # Step 4: Check for association with Meshuggah
  OPTIONAL { 
    ?meshuggah dbp:associatedBand ?associatedBand .
    FILTER EXISTS { ?meshuggah rdfs:label ""Meshuggah""@en }
  }

  # Filter to ensure there is an association with Meshuggah
  FILTER EXISTS {
    ?meshuggah dbp:associatedBand ?associatedBand .
    ?meshuggah rdfs:label ""Meshuggah""@en 
  }
}
```",3,6,4,2,2,3,3,71,0,0,1,0,0.0,0
232,56,test,"Give me the actor of Dog Soldiers (film) and child of the person born as John Devon Roland Pertwee and native of the residence, that is a settlement and British, of the native, that is a politician and an office holder, of France.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v0 <http://dbpedia.org/property/residence> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/France> . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v2 <http://dbpedia.org/property/birthName> ""John Devon Roland Pertwee""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Dog_Soldiers_(film)> <http://dbpedia.org/ontology/starring> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?actor ?child ?residence WHERE {
  # Find the actor of ""Dog Soldiers""
  ?film dbo:title ""Dog Soldiers""@en .
  ?film dbo:actor ?actor .

  # Check if this actor is a child of John Devon Roland Pertwee
  ?actor foaf:child ?person .
  ?person dbp:birthName ""John Devon Roland Pertwee"" .

  # Find the residence details of the person's child
  ?person dbo:nativePlace ?residence .
  
  # Ensure the residence is a settlement, British, and associated with a French politician
  ?residence rdf:type dbo:Settlement ;
             dbp:country ""United Kingdom""@en ;
             dbo:wikiPageRedirects ?politician .
  ?politician rdf:type dbo:Politician ;
              dbo:officeHolder true ;
              dbo:nationality dbc:Countries_of_Europe#France .
}
```",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
547,47,test,Give me the resting place of the actor of the show with Emily Richard and resting place of the child of James Burton (property developer).,SELECT ?result WHERE { <http://dbpedia.org/resource/James_Burton_(property_developer)> <http://dbpedia.org/ontology/child> ?v2 . ?v4 <http://dbpedia.org/ontology/restingPlace> ?result . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . ?v0 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emily_Richard> . ?v0 <http://dbpedia.org/property/starring> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?actorRestingPlace ?childRestingPlace WHERE {
  # Part 1: Resting place of the actor from the show with Emily Richard
  ?show dbo:starring dbr:Emily_Richard .
  ?show dbo:starring ?actor .
  OPTIONAL { ?actor dbp:placeOfBurial ?actorRestingPlace . }
  
  # Part 2: Resting place of a child of James Burton (property developer)
  ?james dbr:James_Burton_(property_developer) ;
         dbo:child ?child .
  OPTIONAL { ?child dbp:placeOfBurial ?childRestingPlace . }
}
```",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
427,66,test,"Give me the reference to the name of Italian People's Party (1994) and party of the father of Lamberto Andreotti and party of the person born, that is an office holder and a politician, as the birth name of Romano Prodi.",SELECT ?result WHERE { ?v6 <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Lamberto_Andreotti> <http://dbpedia.org/property/father> ?v6 . ?v2 <http://dbpedia.org/ontology/party> ?result . ?v2 <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Italian_People's_Party_(1994)> <http://xmlns.com/foaf/0.1/name> ?v3 . <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/property/birthName> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?italianPeopleParty ?fatherName ?fatherParty ?romanoProdiBirthName ?prodiParty
WHERE {
  # Italian People's Party (1994)
  dbr:Italian_People%27s_Party_(1994) dbo:wikiPageRedirects ?italianPeopleParty .

  # Father of Lamberto Andreotti and his party
  dbr:Lamberto_Andreotti dbo:father ?father .
  ?father rdfs:label ?fatherName .
  FILTER (lang(?fatherName) = 'en')
  OPTIONAL { ?father dbo:partyListedBelow ?fatherParty . }

  # Romano Prodi's birth name and party
  dbr:Romano_Prodi dbo:birthName ?romanoProdiBirthName .
  FILTER (lang(?romanoProdiBirthName) = 'en')
  OPTIONAL {
    ?prodiParty dbo:member ?romanoProdi .
    ?prodiParty rdfs:label ?partyLabel .
    FILTER (lang(?partyLabel) = 'en')
  }
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
184,51,test,Give me the parent of the child of the parent of Archduchess Margaret of Austria (born 1925) and child of the child of Archduke Joseph Karl of Austria.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v4 . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Margaret_of_Austria_(born_1925)> . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Karl_of_Austria> . ?result <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://dbpedia.org/property/father> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?commonEntityParent WHERE {
  # Archduchess Margaret of Austria (born 1925)
  ?margaret a dbo:Person ;
            dbp:birthDate ""1925-01-01""^^xsd:date ;
            dbo:parent ?parentMargaret .
  
  ?childOfParentMargaret dbo:parent ?parentMargaret .

  # Archduke Joseph Karl of Austria
  ?josephKarl a dbo:Person ;
              dbp:child ?childJosephKarl .

  ?grandChildOfJosephKarl dbo:parent ?childJosephKarl .
  
  # Find common entity between the child of Margaret's parent and grandchild of Joseph Karl
  VALUES (?commonEntity) {
    ?childOfParentMargaret
    ?grandChildOfJosephKarl
  }
  
  FILTER(?childOfParentMargaret = ?grandChildOfJosephKarl)
  
  # Get the parent of this common entity
  ?commonEntity dbo:parent ?commonEntityParent .
}
```",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
547,50,test,Give me the resting place of the awardee of Knight Grand Cross of the Order of St Michael and St George and resting place of the actor of the show with Emily Richard.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emily_Richard> . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_St_Michael_and_St_George> . ?v4 <http://dbpedia.org/ontology/restingPlace> ?result . ?v3 <http://dbpedia.org/ontology/restingPlace> ?result . ?v0 <http://dbpedia.org/property/starring> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?restingPlace WHERE {
  # Query for the awardee of Knight Grand Cross of the Order of St Michael and St George
  {
    ?person dbo:honorificTitle dbr:Knight_Grand_Cross_of_the_Order_of_St_Michael_and_St_George .
    OPTIONAL { ?person dbp:placeOfBurialOrCremation ?restingPlace . }
  }

  UNION

  # Query for actors of the show with Emily Richard (Downton Abbey)
  {
    ?actor dbo:role dbr:Downton_Abbey_(TV_series) .
    OPTIONAL { ?actor dbp:placeOfBurialOrCremation ?restingPlace . }
  }
}
```",5,5,6,3,2,3,3,71,0,0,2,0,0.0,0
528,71,test,"Give me the war of the commander in the work of --01-09 and war of the military force of the entity, that is a societal event, in Chile and force of the person born as the birth name of Narciso Campero.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Chile> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/commander> ?v8 . <http://dbpedia.org/resource/Narciso_Campero> <http://dbpedia.org/property/birthName> ?v7 . ?v4 <http://dbpedia.org/ontology/commander> ?v5 . ?v4 <http://dbpedia.org/property/author> ""--01-09""^^<http://www.w3.org/2001/XMLSchema#gMonthDay> . ?v2 <http://dbpedia.org/ontology/battle> ?v1 . ?v8 <http://dbpedia.org/property/birthName> ?v7 . ?v5 <http://dbpedia.org/ontology/battle> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>

SELECT ?warOfCommander ?societalEventWar ?forceOfNarcisoCampero
WHERE {
  # Find the work associated with January 9th
  ?work dbo:date ""2009-01-09""^^xsd:date .
  
  # War of the commander in the work of --01-09
  ?work dbo:commander ?commander .
  ?commander dbo:participatedIn ?warOfCommander .

  # Societal event in Chile and its military force
  ?event rdfs:label ?eventName ;
         dbo:place dbr:Chile ;
         a dbo:SocietalEvent .
  ?event dbo:militaryForce ?societalEventWar .

  # Force of the person born as Narciso Campero
  ?narcisoCampero rdfs:label ""Narciso Campero"" ;
                  dbo:birthName ""Narciso Campero"" ;
                  dbo:militaryForce ?forceOfNarcisoCampero .
}
```",9,10,10,3,3,3,3,71,0,0,2,0,0.0,0
528,67,test,Give me the force of the person born as the birth name of Narciso Campero and war of the commander in the work of --01-09 and war of Irene Morales.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> ?v3 . ?v3 <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/ontology/commander> ?v6 . ?v0 <http://dbpedia.org/property/author> ""--01-09""^^<http://www.w3.org/2001/XMLSchema#gMonthDay> . <http://dbpedia.org/resource/Irene_Morales> <http://dbpedia.org/ontology/battle> ?result . ?v6 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Narciso_Campero> <http://dbpedia.org/property/birthName> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?birthName ?force ?work ?commander ?warCommander ?ireneWar
WHERE {
  # Step 1: Find Narciso Campero's birth name
  dbr:Narciso_Campero dbo:birthName ?birthName .

  # Step 2: Find the force associated with his birth name (assuming a property exists)
  OPTIONAL { ?birthName dbo:associatedForce ?force . }

  # Step 3 & 4: Identify works on January 9th and their commanders
  {
    SELECT DISTINCT ?work ?commander WHERE {
      ?work dbo:dateCreated ?date .
      FILTER (STRSTARTS(STR(?date), ""01-09""))
      
      OPTIONAL { ?work dbo:commander ?commander . }
    }
  }

  # Step 5: Find wars associated with these commanders
  OPTIONAL { ?commander dbo:participatedInWar ?warCommander . }

  # Step 6: Identify war associated with Irene Morales
  dbr:Irene_Morales dbo:participatedInWar ?ireneWar .
}
```",7,7,8,3,3,3,3,71,0,0,2,0,0.0,0
994,20,test,"Give me the associated musical artist of S.A. Slayer and associated musical artist of the band member, that is a band and a group and an organisation, of Meshuggah.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Meshuggah> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/S.A._Slayer> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?artist1 ?artist2 WHERE {
  # Find Tom Araya's associated musical artists
  OPTIONAL {
    dbr:Tom_Araya dbo:musicalArtist ?artist1 .
  }

  # Find a Meshuggah member who is also in another band or group that is an organization
  ?member dbo:memberOf dbr:Meshuggah ;
          dbo:memberOf ?otherGroup .

  FILTER EXISTS { ?otherGroup a dbo:Band . }
  
  OPTIONAL {
    ?member dbo:musicalArtist ?artist2 .
  }

  # Ensure the member is part of another band or group
  FILTER (?otherGroup != dbr:Meshuggah)
}
```",3,6,4,2,2,3,3,71,0,0,2,0,0.0,0
626,19,test,"Give me the commander in the force, that is a military conflict, of Alexander I of Russia and awardee of the award of the military force of Battle of Borodino.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ?v4 . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/property/awards> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Borodino> . ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Alexander_I_of_Russia> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?award WHERE {
  # Find Alexander I of Russia as a commander in military conflicts
  ?conflict dbo:commander dbr:Alexander_I_of_Russia .
  
  # Specifically, find the Battle of Borodino and its commanders
  ?battle dbr:Borodino_Battle ;
         dbo:commander ?commander .

  # Check if Alexander I received any awards related to military forces
  OPTIONAL {
    ?award dbo:recipient dbr:Alexander_I_of_Russia .
    ?award dbo:relatedMilitaryForce ?conflict .
  }

  FILTER(?battle = ?conflict)
}
```",5,6,6,3,2,3,2,20,0,0,44,0,0.0,0
485,28,test,"Give me the entity in the birth place, that is a region, of Joseph Whitaker (naturalist) and birth place of the awardee, that is a writer and a poet, of Eric Gregory Award and entity in the region, that is a country, of Western European Time.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Joseph_Whitaker_(naturalist)> <http://dbpedia.org/ontology/birthPlace> ?v5 . ?v1 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Western_European_Time> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>. ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Eric_Gregory_Award> . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Poet>. ?result <http://dbpedia.org/ontology/country> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX geo: <http://www.geonames.org/ontology#>

SELECT DISTINCT ?region1 ?birthPlaceAwardee ?country
WHERE {
  # Joseph Whitaker's birth place region
  dbr:Joseph_Whitaker (dbo:birthPlace) ?birthPlaceWhitaker .
  ?birthPlaceWhitaker rdf:type geo:Region .

  # Awardee of Eric Gregory Award who is a writer and poet
  ?awardee dbo:award dbr:Eric_Gregory_Award ;
          rdf:type dbo:Writer ;
          rdf:type dbo:Poet .
  ?awardee (dbo:birthPlace) ?birthPlaceAwardee .

  # Country in Western European Time region
  ?country rdf:type geo:Country ;
           geo:timezone dbr:Western_European_Time .

  # Ensure the birth place of Joseph Whitaker is a region and matches with the awardee's birth place
  FILTER (?birthPlaceWhitaker = ?birthPlaceAwardee)
}
```",6,10,7,2,3,2,3,28,0,0,1,0,0.0,0
92,53,test,"Give me the band member of the reference, that is an artist, to the name of Nevermore (2006 film) and associated musical artist of Jim Sheppard and band of the person born as Joseph Michael Furney.","SELECT ?result WHERE { <http://dbpedia.org/resource/Nevermore_(2006_film)> <http://xmlns.com/foaf/0.1/name> ?v3 . <http://dbpedia.org/resource/Jim_Sheppard> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://xmlns.com/foaf/0.1/name> ?v3 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?result <http://dbpedia.org/ontology/bandMember> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://dbpedia.org/property/birthName> ""Joseph Michael Furney""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?bandMemberArtist ?jimSheppardArtist ?furneyBand 
WHERE {
  # Find the film ""Nevermore"" from 2006
  ?film a dbo:Film ;
        rdfs:label ""Nevermore""@en ;
        dbp:releaseDate ?date .
  FILTER (YEAR(?date) = 2006)

  # Find band members associated with this film who are also artists
  ?bandMember dbo:memberOfBand ?band ;
              dbo:occupation dbr:Musician ;
              rdfs:label ?bandMemberLabel .
  OPTIONAL { ?bandMember dbo:artist ?bandMemberArtist . }
  
  # Jim Sheppard's musical artist association
  ?jimSheppard a dbo:Person ;
               rdfs:label ""Jim Sheppard""@en ;
               dbo:associatedBand ?jimBand .
  OPTIONAL { ?jimBand dbo:associatedMusicalArtist ?jimSheppardArtist . }

  # Joseph Michael Furney's band
  ?furney a dbo:Person ;
          rdfs:label ""Joseph Michael Furney""@en ;
          dbo:memberOfBand ?furneyBand .
  
  FILTER EXISTS { ?bandMember dbo:artist ?bandMemberArtist }
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
626,20,test,"Give me the commander in the force, that is a military conflict, of the commander in Battle of Paris (1814) and awardee of the award of the military force of Battle of Borodino.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/awards> ?v5 . ?v2 <http://dbpedia.org/ontology/commander> ?v1 . <http://dbpedia.org/resource/Battle_of_Paris_(1814)> <http://dbpedia.org/ontology/commander> ?v1 . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/property/awards> ?v5 . ?v4 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Borodino> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commanderInParis ?commanderInBorodino ?awardeeCommander WHERE {
  # Find the commander in the Battle of Paris (1814)
  ?battleParis a dbo:MilitaryConflict ;
               dbo:commander ?commanderInParis .
  FILTER(STR(?battleParis) = ""Battle_of_Paris_(1814)"")

  # Find the military force and its commander in the Battle of Borodino
  ?battleBorodino a dbo:MilitaryConflict ;
                  dbo:commander ?commanderInBorodino .
  FILTER(STR(?battleBorodino) = ""Battle_of_Borodino"")

  # Find an award associated with the military force in the Battle of Borodino
  ?award a dbo:Award ;
         dbo:recipient ?awardeeCommander .

  # Ensure the awardee is related to the commander from the Battle of Borodino
  ?commanderInBorodino dbo:receivedAward ?award .

  # Find another military conflict involving both commanders
  ?conflict a dbo:MilitaryConflict ;
            (dbo:commander) (?commanderInParis ; ?awardeeCommander) .
}
```",6,7,7,3,2,3,2,20,0,0,62,0,0.0,0
767,48,test,"Give me the reference to the alter ego of Black Hood and entity in the administration, that is a settlement, of the writer of Where It's At (Dustin Lynch album).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/state> ?v2 . <http://dbpedia.org/resource/Where_It's_At_(Dustin_Lynch_album)> <http://dbpedia.org/property/writer> ?v3 . ?v2 <http://dbpedia.org/property/leaderParty> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Black_Hood> <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?alterEgo ?settlement WHERE {
  # Find the songwriter for ""Where It's At"" by Dustin Lynch
  ?song dbo:lyricsBy ?writer .
  ?song rdfs:label ?title .
  FILTER(CONTAINS(LCASE(?title), ""where it's at"")) .
  FILTER(STRSTARTS(STR(?song), STR(dbr:))).
  
  # Find Black Hood's alter ego
  ?blackHood dbo:alterEgo ?alterEgo .
  ?blackHood rdfs:label ""Black Hood"" .

  # Find an entity in administration that is a settlement related to the writer
  ?settlement dbo:administrator ?writer ;
              a dbo:Settlement .
}
```",5,6,6,3,2,3,3,71,0,0,8,0,0.0,0
54,56,test,"Give me the predecessor of the child, that is an office holder and a royalty, of the reference to Thihapate of Mohnyin and parent of Thado Minsaw of Prome and child of the father of Soe Min Wimala Dewi.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Soe_Min_Wimala_Dewi> <http://dbpedia.org/property/father> ?v2 . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Thihapate of Mohnyin""@en . ?v1 <http://dbpedia.org/property/father> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?predecessor WHERE {
  ?reference rdfs:label ""Thihapate of Mohnyin""@en .
  ?child dbo:parent ?reference ;
         a dbo:OfficeHolder, dbo:Royalty ;
         dbo:parent ?thadoMinsawParent .
  ?thadoMinsawParent rdfs:label ""Thado Minsaw of Prome""@en .
  ?soeMinWimalaDewiParent dbo:child ?soeMinWimalaDewi .
  ?soeMinWimalaDewi rdfs:label ""Soe Min Wimala Dewi""@en .
  ?child dbo:parent ?soeMinWimalaDewiParent .
  
  ?predecessor dbo:succeededBy ?child .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
747,70,test,"Give me the band of the person born as the persona of Shèna and person born on the birth date of Pavlo Khudzik and band of the writer of the work, that is a song, of Amba Shepherd.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Amba_Shepherd> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. <http://dbpedia.org/resource/Pavlo_Khudzik> <http://dbpedia.org/ontology/birthDate> ?v4 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Shèna> <http://xmlns.com/foaf/0.1/givenName> ?v1 . ?v7 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/writer> ?v7 . ?result <http://dbpedia.org/ontology/birthDate> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandShena ?bandPersonBornOnPavloBirthDate ?bandSongWriter
WHERE {
  # Find Shèna's band
  ?shena a dbo:MusicalArtist ;
         rdfs:label ""Shèna""@en .
  ?shena dbo:band ?bandShena .

  # Find Pavlo Khudzik's birth date
  ?pavloKhudzik a dbo:Person ;
                rdfs:label ""Pavlo Khudzik""@en .
  ?pavloKhudzik dbo:birthDate ?pavloBirthDate .

  # Find person born on Pavlo Khudzik's birth date and their band
  ?personBornOnPavloBirthDate a dbo:Person ;
                              dbo:birthDate ?pavloBirthDate .
  ?personBornOnPavloBirthDate dbo:band ?bandPersonBornOnPavloBirthDate .

  # Find Amba Shepherd's song and its writer's band
  ?song a dbo:Songs ;
        dbo:lyricsBy dbr:Amba_Shepherd .
  ?songWriter a dbo:MusicalArtist ;
              dbo:work ?song .
  ?songWriter dbo:band ?bandSongWriter .
}
```",8,9,9,3,3,3,3,71,0,0,1,0,0.0,0
801,57,test,"Give me the producer of the work, that is a musical work and a song and a work, of the professional, that is a musical artist, in Rapper and associated musical artist of the writer, that is a musical artist and an artist, of 40 Dayz & 40 Nightz and professional in .","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/property/occupation> """"@en . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/40_Dayz_&_40_Nightz> <http://dbpedia.org/property/writer> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v5 <http://dbpedia.org/ontology/producer> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v0 <http://dbpedia.org/property/occupation> ""Rapper""@en . ?v5 <http://dbpedia.org/property/writer> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?producer WHERE {
  # Identify the work ""40 Dayz & 40 Nightz""
  dbr:40_Dayz_&_40_Nightz a dbo:Song ;
                          dbo:musicalArtist ?rapper .

  # Ensure the professional is a rapper
  ?rapper a dbo:Rapper .

  # Find the writer associated with this rapper
  ?writer dbo:associatedMusicalArtist ?rapper ;
          a dbo:MusicalArtist, dbo:Artist .

  # Identify the producer of the work
  dbr:40_Dayz_&_40_Nightz dbo:producer ?producer .
}
```",6,12,7,3,3,3,3,71,0,0,8,0,0.0,0
528,47,test,Give me the war of the commander in the work of --01-09 and war of the military force of Battle of Pisagua.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/commander> ?v4 . ?v2 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Pisagua> . ?v0 <http://dbpedia.org/property/author> ""--01-09""^^<http://www.w3.org/2001/XMLSchema#gMonthDay> . ?v4 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/ontology/battle> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?battleEvent ?workEvent WHERE {
  # Find the commander of the Battle of Pisagua
  ?battleEvent a dbo:MilitaryConflict ;
               dbo:participatingMilitaryUnit ?unit1, ?unit2 .
  ?unit1 dbo:commander ?commander .
  
  FILTER (str(?battleEvent) = ""Battle_of_Pisagua"")

  # Find an event or work associated with January 9th
  ?workEvent a dbo:Event ;
             dbo:date ?date .

  FILTER (YEAR(?date) != """" && MONTH(?date) = 1 && DAY(?date) = 9)

  # Check if the same commander is involved in both events
  OPTIONAL { ?workEvent dbo:commander ?commander }
}
```",5,5,6,3,2,3,3,71,0,0,8,0,0.0,0
617,59,test,"Give me the spouse of the child of the successor, that is a royalty, of Antiochus (son of Antiochus III the Great) and child of the child, that is a royalty, of the successor, that is a royalty, of Antiochus II Theos.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> ?v3 . ?v0 <http://dbpedia.org/ontology/child> ?v5 . ?result <http://dbpedia.org/property/father> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Antiochus_II_Theos> <http://dbpedia.org/ontology/successor> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/successor> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
  # Step 1: Identify Antiochus IV Epiphanes
  ?antiochusIV a dbo:Person ;
               dbp:father ?antiochusIII .

  FILTER (str(?antiochusIV) = ""Antiochus_IV_Epiphanes""^^xsd:string)

  # Step 2: Find his successor, Demetrius I Soter
  ?demetriusI dbo:succesorOf ?antiochusIV ;
             a dbo:Person .

  # Step 3: Identify the child of this successor who is royalty
  ?child dbo:childOf ?demetriusI ;
         a dbo:RoyalFamilyMember .

  # Step 4: Find the spouse of this child
  ?spouse dbo:spouse ?child .

  # Step 5: Trace back to Antiochus II Theos's successor, Seleucus II Callinicus
  ?antiochusII a dbo:Person ;
               dbp:title ""Antiochus_II_theos""^^xsd:string .
  
  ?seleucusII dbo:succesorOf ?antiochusII ;
              a dbo:Person .

  # Step 6: Identify a royal grandchild of this successor
  ?grandchild dbo:childOf ?child2 ;
              a dbo:RoyalFamilyMember .

  ?child2 dbo:childOf ?seleucusII .

  # Step 7: Find the spouse of this grandchild
  ?spouseGrandChild dbo:spouse ?grandchild .
}
```",6,9,7,3,2,3,3,71,0,0,4,0,0.0,0
659,54,test,"Give me the military force of Napoleonic Wars and commander in the force of Arthur Wellesley, 1st Duke of Wellington and commander in the war, that is an event and a military conflict, of the figure known, that is a military unit and an organisation, as 'Polish Horse'.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v5 <http://dbpedia.org/ontology/commander> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://dbpedia.org/ontology/battle> ?v5 . ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Arthur_Wellesley,_1st_Duke_of_Wellington> . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/property/nickname> ""'Polish Horse'""@en . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Napoleonic_Wars> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?militaryForce WHERE {
  ?militaryForce a dbo:MilitaryUnit ;
                 dbo:commander dbr:Arthur_Wellesley,_1st_Duke_of_Wellington ;
                 dbo:militaryUnit dbr:Polish_Horse .

  ?conflict a dbo:MilitaryConflict ;
           dbo:participatedIn ?militaryForce .
  
  FILTER EXISTS { 
    ?militaryForce dbo:participatedIn ?napoleonicWar .
    ?napoleonicWar rdfs:label ""Napoleonic Wars""@en .
  }
}
```",6,10,7,3,3,3,3,71,0,0,13,0,0.0,0
767,53,test,"Give me the entity in the administration, that is a settlement, of the writer of Where It's At (Dustin Lynch album) and alma mater of Carl L. Nippert and reference to the alter ego of Black Hood.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://dbpedia.org/property/leaderParty> ?v3 . <http://dbpedia.org/resource/Black_Hood> <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . <http://dbpedia.org/resource/Carl_L._Nippert> <http://dbpedia.org/ontology/almaMater> ?result . <http://dbpedia.org/resource/Where_It's_At_(Dustin_Lynch_album)> <http://dbpedia.org/property/writer> ?v3 . ?result <http://dbpedia.org/ontology/state> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?settlement WHERE {
  # Writer of ""Where It's At"" by Dustin Lynch
  ?song dbo:lyricsBy ?writer .
  FILTER(CONTAINS(LCASE(str(?song)), ""where it's at"")) .
  
  # Alma mater of Carl L. Nippert
  dbr:C_L_Nippert dbo:almaMater ?almaMater .

  # Alter ego of Black Hood
  ?blackHood dbo:alterEgo ?alterEgo .

  # Settlement in administration related to these entities
  ?settlement a dbo:Settlement ;
              dbo:administrativeUnit ?admin .
  
  FILTER(?writer = ?admin || ?almaMater = ?admin || ?alterEgo = ?admin)
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
435,24,test,Give me the work of the author of Iceland and region of the time zone in Bombali Shebora Chiefdom.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/author> ?v1 . <http://dbpedia.org/resource/Iceland> <http://dbpedia.org/property/author> ?v1 . <http://dbpedia.org/resource/Bombali_Shebora_Chiefdom> <http://dbpedia.org/ontology/timeZone> ?v2 . ?result <http://dbpedia.org/ontology/timeZone> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?author ?work ?timeZoneRegion WHERE {
  # Find the author of ""Iceland""
  ?book a dbo:Book ;
        rdfs:label ""Iceland""@en .
  
  ?book dbo:author ?author .

  # Get works by that author
  ?author dbo:work ?work .

  # Find time zone region for Bombali Shebora Chiefdom
  dbr:Bombali_Shebora_Chowie_Chowie_Chiefdom dbo:timeZoneRegion ?timeZoneRegion .
}
```",4,4,5,2,2,2,3,28,0,0,1,0,0.0,0
659,64,test,"Give me the commander in the force of the native, that is an office holder, of Kingdom of Ireland and military force of the force, that is a societal event and an event and a military conflict, of the reference to Rutger Jan Schimmelpenninck and commander in Battle of Leipzig.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/commander> ?v3 . <http://dbpedia.org/resource/Battle_of_Leipzig> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Kingdom_of_Ireland> . ?v0 <http://xmlns.com/foaf/0.1/name> ""Rutger Jan Schimmelpenninck""@en . ?v1 <http://dbpedia.org/ontology/commander> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  ?commander dbo:officeHolder dbr:Kingdom_of_Ireland .
  ?commander dbo:commander ?militaryForce .
  ?militaryForce dbo:event dbr:Battle_of_Leipzig .
  
  OPTIONAL { 
    ?relatedEvent dbo:reference dbr:Rutger_Jan_Schimmelpenninck .
    ?militaryForce dbo:reference ?relatedEvent .
  }
}
```",7,11,8,3,3,3,3,71,0,0,6,0,0.0,0
959,64,test,"Give me the native of Japan and member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of the person born in 1958 and manager of the team of the manager, that is a sports manager, of 1998 Kashima Antlers season.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/manager> ?v5 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v4 <http://dbpedia.org/ontology/almaMater> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/ontology/manager> ?result . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?result <http://dbpedia.org/ontology/team> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Japan> . <http://dbpedia.org/resource/1998_Kashima_Antlers_season> <http://dbpedia.org/ontology/manager> ?v5 . ?v4 <http://dbpedia.org/ontology/birthYear> ""1958""^^<http://www.w3.org/2001/XMLSchema#gYear> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person ?almaMaterUniversity ?almaMaterOrganization WHERE {
  ?person a dbo:SportsManager ;
          dbo:nationality dbr:Japan ;
          dbo:birthYear ""1958""^^xsd:gYear ;
          dbo:managerOf dbr:1998_Kashima_Antlers_season .

  ?person foaf:almaMater ?almaMaterUniversity .
  ?person foaf:almaMater ?almaMaterOrganization .

  FILTER (EXISTS { ?almaMaterUniversity a dbo:University . })
  FILTER (EXISTS { ?almaMaterOrganization a dbo:EducationalInstitution ;
                   ?almaMaterOrganization dbo:nationality dbr:Japan } )
}
```",7,12,8,3,3,3,3,71,0,0,3,0,0.0,0
184,66,test,Give me the parent of the child of the parent of Archduchess Margaret of Austria (born 1925) and parent of the native of Budapest and child of the child of Archduke Joseph Karl of Austria.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v3 . ?result <http://dbpedia.org/ontology/child> ?v2 . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Margaret_of_Austria_(born_1925)> . ?v2 <http://dbpedia.org/property/father> ?v1 . ?v6 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Karl_of_Austria> . ?result <http://dbpedia.org/property/father> ?v6 . ?v3 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Budapest> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commonEntity WHERE {
  # Part 1: Archduchess Margaret of Austria (born 1925)
  ?margaret a dbo:Person ;
            dbo:birthYear ""1925""^^xsd:gYear ;
            dbo:parent ?parentMargaret .
  
  ?childOfParentMargaret dbo:parent ?parentChildOfParentMargaret .

  # Part 2: Native of Budapest and child of the child of Archduke Joseph Karl
  ?archdukeJosephKarl a dbo:Person ;
                     rdfs:label ""Archduke Joseph Karl of Austria""@en .
  
  ?childOfArchduke dbo:parent ?archdukeJosephKarl ;
                   a dbo:Person .

  ?grandChildOfArchduke dbo:parent ?childOfArchduke ;
                        a dbo:Person .

  ?parentGrandChildOfArchduke dbo:child ?grandChildOfArchduke .
  
  ?nativeBudapest dbo:birthPlace dbr:Budapest ;
                  a dbo:Person ;
                  ?parentGrandChildOfArchduke :child ?grandChildOfArchduke .

  # Find common entity
  VALUES (?entity1) { ?parentChildOfParentMargaret }
  VALUES (?entity2) { ?parentGrandChildOfArchduke }

  FILTER(?entity1 = ?entity2)
  BIND(?entity1 AS ?commonEntity)
}
```",7,7,8,3,3,3,3,71,0,0,1,0,0.0,0
92,40,test,"Give me the band member of the reference, that is an artist, to the name of Nevermore (2006 film) and associated musical artist of Jim Sheppard and band of Joseph Michael.",SELECT ?result WHERE { ?v1 <http://xmlns.com/foaf/0.1/name> ?v2 . ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Joseph_Michael> . <http://dbpedia.org/resource/Nevermore_(2006_film)> <http://xmlns.com/foaf/0.1/name> ?v2 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . <http://dbpedia.org/resource/Jim_Sheppard> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artistName WHERE {
  # Identify the film ""Nevermore (2006)""
  dbr:Nevermore_(film) dbo:starring ?actor .
  
  # Find band members associated with Jim Sheppard and Joseph Michael
  ?bandMember dbo:memberOf ?band ;
              a dbo:MusicArtist ;
              rdfs:label ?artistName .

  FILTER CONTAINS(LCASE(?artistName), ""jim sheppard"") .
  FILTER CONTAINS(LCASE(?artistName), ""joseph michael"") .

  # Ensure the band is associated with the film
  ?band dbo:associatedBand dbr:Nevermore_(film) .
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
959,66,test,"Give me the manager of the team of the manager, that is a sports manager, of 1998 Kashima Antlers season and member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of Eiji Ōtsuka and native of the residence, that is a country, of Yōichi Masuzoe.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v6 . ?result <http://dbpedia.org/ontology/team> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. <http://dbpedia.org/resource/Yōichi_Masuzoe> <http://dbpedia.org/property/residence> ?v6 . <http://dbpedia.org/resource/1998_Kashima_Antlers_season> <http://dbpedia.org/ontology/manager> ?v5 . ?v0 <http://dbpedia.org/ontology/manager> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Eiji_Ōtsuka> <http://dbpedia.org/ontology/almaMater> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/ontology/manager> ?result . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?managerOfManager WHERE {
  # Step 1: Find Eiji Ōtsuka's alma mater
  ?eiji dbo:nationality dbr:Japan ;
        dbo:almaMater ?university .
  
  FILTER (isLiteral(?university) && contains(lcase(str(?university)), ""university"") &&
          contains(lcase(str(?university)), ""organization"") &&
          contains(lcase(str(?university)), ""educational institution""))

  # Step 2: Find Yōichi Masuzoe's native country
  ?yoshi dbo:nativeCountry ?country .
  
  FILTER (str(?country) = str(dbr:Japan))

  # Step 3: Identify the manager of the 1998 Kashima Antlers season
  dbr:Kashima_Antlers_1998_season dbo:manager ?manager ;
                                    dbo:sportManager ?isSportsManager .
  
  FILTER (?isSportsManager = true)

  # Step 4: Find the team managed by this manager
  ?team dbo:manager ?manager .

  # Step 5: Identify the manager of that team
  ?team dbo:manager ?managerOfManager .
}
```",7,13,8,3,3,3,3,71,0,0,2,0,0.0,0
427,27,test,"Give me the party of the person born, that is an office holder and a politician, as the birth name of Romano Prodi.",SELECT ?result WHERE { <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/ontology/party> ?result . ?v2 <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?party
WHERE {
  ?person dbo:birthName ""Romano Prodi""@en .
  ?person a dbo:Politician ;
          a dbo:OfficeHolder .
  ?person dbo:partyAffiliation ?party .
}
```",3,5,4,3,1,3,3,71,0,0,7,0,0.0,0
492,57,test,"Give me the person decedent at the capital, that is a settlement, of Algeria and person decedent at French Algeria and commander in the war, that is a military conflict and an event, of the commander in Battle of Verdun.",SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://dbpedia.org/ontology/battle> ?v5 . ?v5 <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/French_Algeria> . ?result <http://dbpedia.org/ontology/deathPlace> ?v3 . <http://dbpedia.org/resource/Algeria> <http://dbpedia.org/ontology/capital> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Battle_of_Verdun> <http://dbpedia.org/ontology/commander> ?v0 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?personDecedentAtCapital ?warCommandedByVerdunCommander WHERE {
  # Find the capital of Algeria
  ?capital a dbo:Settlement ;
           dbo:country dbr:Algeria .
  
  # Find persons who died in French Algeria and at the capital of Algeria
  ?deathEvent dbo:place dbr:French_Algeria ;
              dbo:agent ?personDecedentAtFrenchAlgeria .
  ?capitalDeathEvent dbo:place ?capital ;
                     dbo:agent ?personDecedentAtCapital .

  # Find the commander in the Battle of Verdun
  ?battleVerdun a dbo:MilitaryConflict ;
                dbo:commander ?verdunCommander .

  # Find the war commanded by the Verdun Commander
  ?war a dbo:MilitaryConflict ;
       dbo:commander ?verdunCommander .
  
  FILTER (?personDecedentAtCapital = ?personDecedentAtFrenchAlgeria)
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
617,17,test,"Give me the parent of the father, that is a royalty, of the reference, that is a royalty, to Richeza of Poland and child of Doubravka of Bohemia.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> ?v3 . ?result <http://dbpedia.org/ontology/child> ?v3 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Richeza of Poland""@en . <http://dbpedia.org/resource/Doubravka_of_Bohemia> <http://dbpedia.org/ontology/child> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parentOfRoyalChild
WHERE {
  # Richeza of Poland's father
  ?richeza dbo:father ?richard.
  
  # Parent (likely mother) of Richard who is royalty
  ?richard dbo:mother ?motherOfRichard.
  ?motherOfRichard dbp:title ?title1.
  FILTER(CONTAINS(LCASE(?title1), ""royalty""))

  # Doubravka of Bohemia's child who is royalty
  ?doubravka dbo:child ?childOfDoubravka.
  ?childOfDoubravka dbp:title ?title2.
  FILTER(CONTAINS(LCASE(?title2), ""royalty""))

  # Parent of the royal child
  ?childOfDoubravka dbo:parent ?parentOfRoyalChild.
}
```",4,6,5,3,2,3,2,20,0,0,1,0,0.0,0
54,63,test,"Give me the parent of the child of Narapati I of Ava and child of the father of the child of Thinkhaya of Pagan and predecessor of the child, that is an office holder and a royalty, of Thihapate of Mohnyin.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/child> ?result . ?v4 <http://dbpedia.org/property/father> ?v3 . ?result <http://dbpedia.org/ontology/successor> ?v2 . ?v6 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Narapati_I_of_Ava> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?v4 . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Thihapate_of_Mohnyin> . ?v6 <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parent
WHERE {
  # Narapati I of Ava
  ?narapatiI a dbo:Person ;
             dbp:name ""Narapati I of Ava"" .
  
  # Thinkhaya of Pagan
  ?thinkhaya a dbo:Person ;
             dbp:name ""Thinkhaya of Pagan"" .

  # Thihapate of Mohnyin
  ?thihapate a dbo:Person ;
              dbp:name ""Thihapate of Mohnyin"" .
  
  # Narapati I's child and grandchild
  ?narapatiIChild dbo:parent ?narapatiI ;
                  dbo:child ?narapatiIGrandchild .

  # Thinkhaya's child and predecessor (Thinkhaya himself)
  ?thinkhayaChild dbo:parent ?thinkhaya .
  
  # Find the common entity
  ?commonEntity dbo:child ?narapatiIGrandchild ;
                dbo:predecessor ?thinkhaya ;
                dbo:officeHolder true ;
                dbo:royalty true .

  # Relation to Thihapate
  ?thihapateRelation dbo:relatedTo ?commonEntity .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
747,53,test,"Give me the band of Amba Shepherd and band of the person born as Tracey Elizabeth McSween and person born on the birth date of the person decedent, that is an athlete and a soccer player, at Zolotonosha.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v3 <http://dbpedia.org/ontology/birthDate> ?v2 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/birthDate> ?v2 . ?v3 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Zolotonosha> . ?v1 <http://dbpedia.org/property/birthName> ""Tracey Elizabeth McSween""@en . <http://dbpedia.org/resource/Amba_Shepherd> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandAmbaShepherd ?bandTraceyElizabethMcSween ?decedentName WHERE {
  # Find Amba Shepherd's band
  OPTIONAL { 
    dbr:Amba_Shepherd dbo:memberOf ?bandAmbaShepherd .
  }

  # Find Tracey Elizabeth McSween and her band
  OPTIONAL {
    ?tracey a dbo:Person ;
           foaf:name ""Tracey Elizabeth McSween"" ;
           dbo:birthName ""Tracey Elizabeth McSween"" .
    ?tracey dbo:memberOf ?bandTraceyElizabethMcSween .
  }

  # Find the athlete and soccer player who died in Zolotonosha
  OPTIONAL {
    ?decedent a dbo:Athlete, dbo:SoccerPlayer ;
              dbo:deathPlace dbr:Zolotonosha ;
              foaf:name ?decedentName .
    FILTER EXISTS { ?tracey dbo:dateOfBirth ?birthDate . }
    FILTER EXISTS { ?decedent dbo:dateOfDeath ?deathDate . }
  }
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
16,41,test,Give me the professional in the profession of Satomi Ishihara and spouse of the person born as Ted Martin McGinley and person born as Georgeanne Marie Rice.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v4 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v2 <http://dbpedia.org/property/birthName> ""Ted Martin McGinley""@en . ?result <http://dbpedia.org/property/birthName> ""Georgeanne Marie Rice""@en . <http://dbpedia.org/resource/Satomi_Ishihara> <http://dbpedia.org/property/occupation> ?v4 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?professional WHERE {
  # Find Satomi Ishihara's profession
  ?satomi a dbo:Person;
          foaf:name ""Satomi Ishihara""@en.
  ?satomi dbo:profession ?profession.

  # Find Ted Martin McGinley's spouse
  ?ted a dbo:Person;
       foaf:name ""Ted Martin McGinley""@en.
  ?ted dbo:spouse ?spouse1.

  # Find Georgeanne Marie Rice's spouse
  ?georgeanne a dbo:Person;
              foaf:name ""Georgeanne Marie Rice""@en.
  ?georgeanne dbo:spouse ?spouse2.

  # Check if there is a professional who matches the criteria
  FILTER (?spouse1 = ?spouse2)
  ?professional a dbo:Person;
                dbo:profession ?profession;
                foaf:name ?name.
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
404,40,test,"Give me the spouse of the person born, that is a royalty, as the birth name of Princess Victoria Louise of Prussia and parent of Prince Ernest Augustus of Hanover (born 1914) and child of Ernest Augustus, Crown Prince of Hanover.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Prince_Ernest_Augustus_of_Hanover_(born_1914)> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/property/birthName> ?v2 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ernest_Augustus,_Crown_Prince_of_Hanover> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?spouse WHERE {
  ?princess a dbo:Princess ;
            foaf:givenName ""Victoria Louise"" ;
            dbo:birthName ?birthName ;
            dbo:parent ?father ;
            dbo:child ?son .

  ?father foaf:name ""Ernest Augustus, Crown Prince of Hanover""@en .
  
  ?son foaf:name ""Prince Ernest Augustus of Hanover""@en ;
       dbo:birthday ?birthday .
  
  FILTER(YEAR(?birthday) = 1914)

  ?princess dbo:spouse ?spouse .
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
92,55,test,"Give me the associated musical artist of the person born, that is an artist, as Jim Sheppard and band member of the reference, that is an artist, to Nevermore and band of the person born as Joseph Michael Furney.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ""Joseph Michael Furney""@en . ?result <http://dbpedia.org/ontology/bandMember> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v3 <http://xmlns.com/foaf/0.1/name> ""Nevermore""@en . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v5 <http://dbpedia.org/property/birthName> ""Jim Sheppard""@en . ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?artist1 ?band1 ?artist2 ?band2 WHERE {
  # Step 1: Find Jim Sheppard and his associated band
  ?person1 dbo:birthName ""Jim Sheppard""@en .
  ?person1 a dbo:Musician .
  ?person1 dbo:associatedBand ?band1 .

  # Step 2: Find the reference artist of Nevermore and their band
  ?person2 dbo:memberOf dbr:Nevermore .
  ?person2 a dbo:Musician .
  ?person2 dbo:associatedBand ?band2 .

  # Step 3: Find Joseph Michael Furney and his associated band
  ?person3 dbo:birthName ""Joseph Michael Furney""@en .
  ?person3 a dbo:Musician .
  ?person3 dbo:associatedBand ?band3 .

  # Ensure the bands are distinct and related to the artists found
  FILTER(?band1 != ?band2)
  FILTER(?band2 = ?band3)

  BIND(?person1 AS ?artist1)
  BIND(?person2 AS ?artist2)
}
```",6,8,7,2,3,3,3,71,0,0,1,0,0.0,0
488,52,test,"Give me the birth place of the commander in the war, that is a military conflict and an event and a societal event, of Saitō Hajime and death place of the father, that is a politician, of Yūki Hideyasu and administration of Emperor Go-Yōzei.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/commander> ?v2 . ?v5 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Yūki_Hideyasu> <http://dbpedia.org/property/father> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Saitō_Hajime> <http://dbpedia.org/ontology/battle> ?v3 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Emperor_Go-Yōzei> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?birthPlaceSaito ?deathPlaceFatherYuki ?administrationGoYozei
WHERE {
  # Saitō Hajime's birthplace
  dbr:Saitō_Hajime dbo:birthPlace ?birthPlaceSaito .

  # War as a military conflict, event, and societal event (example: Boshin War)
  OPTIONAL { 
    dbr:Boshin_War rdf:type ?warType .
    FILTER (
      ?warType = dbo:MilitaryConflict || 
      ?warType = dbo:Event || 
      ?warType = dbo:SocietalEvent
    )
  }

  # Yūki Hideyasu's father (a politician) and his death place
  dbr:Yūki_Hideyasu dbo:child ?yuki .
  ?yuki dbo:parent ?fatherYuki .
  ?fatherYuki rdf:type dbo:Politician .
  ?fatherYuki dbo:deathPlace ?deathPlaceFatherYuki .

  # Emperor Go-Yōzei's administration
  dbr:Emperor_Go-Yōzei dbo:countryAdministered ?administrationGoYozei .
}
```",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
404,63,test,"Give me the spouse of the person born, that is a royalty, as the birth name of Princess Victoria Louise of Prussia and child of the father of Ernest Augustus, Duke of Brunswick and parent of the child, that is a royalty, of Ernest Augustus, Duke of Brunswick.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v6 . <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/ontology/child> ?v6 . ?v3 <http://dbpedia.org/property/birthName> ?v4 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/property/father> ?v2 . ?v3 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/property/birthName> ?v4 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?spouse WHERE {
  # Find the birth name of Princess Victoria Louise of Prussia
  ?princess a dbo:Person ;
            rdfs:label ""Princess Victoria Louise of Prussia""@en ;
            dbo:birthName ?birthName .

  # Identify Ernest Augustus, Duke of Brunswick's father
  ?ernestAugustus a dbo:Person ;
                  rdfs:label ""Ernest Augustus, Duke of Brunswick""@en ;
                  dbo:father ?father .
  
  # Find the child of this father who is royalty and parent of Ernest Augustus
  ?child a dbo:Royal ;
         dbo:parent ?father ;
         dbo:child ?ernestAugustus .

  # Find the spouse of the person born as Princess Victoria Louise of Prussia
  ?person a dbo:Person ;
          dbo:birthName ?birthName .
  
  ?person dbo:spouse ?spouse .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
404,34,test,"Give me the spouse of the person born, that is a royalty, as the birth name of Princess Victoria Louise of Prussia and child of Ernest Augustus, Crown Prince of Hanover.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/property/birthName> ?v2 . ?v1 <http://dbpedia.org/property/birthName> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ernest_Augustus,_Crown_Prince_of_Hanover> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  ?person a dbo:Person ;
          dbo:birthName ""Victoria Louise of Prussia"" ;
          dbo:parent dbr:Ernest_Augustus,_Crown_Prince_of_Hanover .
  
  FILTER EXISTS { ?person dbo:royaltyStatus ?status . }
  
  ?person dbo:spouse ?spouse .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
959,51,test,"Give me the native of the residence, that is a country, of Yōichi Masuzoe and manager of the team of the manager, that is a sports manager, of 1998 Kashima Antlers season.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/manager> ?v3 . ?v0 <http://dbpedia.org/ontology/manager> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/1998_Kashima_Antlers_season> <http://dbpedia.org/ontology/manager> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. <http://dbpedia.org/resource/Yōichi_Masuzoe> <http://dbpedia.org/property/residence> ?v4 . ?result <http://dbpedia.org/ontology/birthPlace> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?nativeCountry WHERE {
  # Step 1: Find Yōichi Masuzoe's residence which is a country
  dbr:Yōichi_Masuzoe dbo:residence ?residence .
  FILTER (isLiteral(?residence) && datatype(?residence) = xsd:string)
  
  # Ensure the residence is a country
  ?country dbo:name ?residence .
  FILTER (strstarts(str(?country), str(dbr:)))

  # Step 2: Find the manager of the 1998 Kashima Antlers season
  dbr:Kashima_Antlers_1998_season dbo:manager ?sportsManager .
  
  # Ensure this person is a sports manager
  ?sportsManager rdf:type dbo:SportsManager .

  # Step 3: Identify which team this sports manager manages
  ?sportsManager dbo:teamManaged ?team .

  # Step 4: Determine the native country of the residence's native
  ?country dbo:nativeOf ?native .
  
  # Get the native country of the person associated with the residence
  ?native dbo:nationality ?nativeCountry .
}
```",5,7,6,3,2,3,3,71,0,0,6,0,0.0,0
617,65,test,"Give me the parent of the child of Antiochus (son of Antiochus III the Great) and child of the child, that is a royalty, of Seleucus II Callinicus and spouse of the child of the successor, that is a royalty, of Antiochus (son of Antiochus III the Great).",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/successor> ?v0 . <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/child> ?v3 . ?result <http://dbpedia.org/property/father> ?v4 . ?v6 <http://dbpedia.org/ontology/spouse> ?result . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seleucus_II_Callinicus> . ?v0 <http://dbpedia.org/ontology/child> ?v6 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parentOfChild ?royalGrandchildSpouse
WHERE {
  # Step 1: Identify Antiochus (son of Antiochus III the Great)
  ?antiochus dbo:father dbr:Antiochus_III_the_Great .
  
  # Step 2: Find his child
  ?child dbo:parent ?antiochus .

  # Step 3: Find the parent of this child (grandparent of Antiochus)
  ?parentOfChild dbo:child ?child .

  # Step 4: Identify Seleucus II Callinicus and his royal grandchild
  ?seleucus dbr:Seleucus_II_Callinicus .
  ?seleucussChild dbo:parent ?seleucus .
  ?grandchild dbo:parent ?seleucussChild .
  
  # Assuming royalty can be identified by a property or class (e.g., dbo:royalty)
  ?grandchild dbp:royalStatus ""true""^^xsd:boolean .

  # Step 5: Identify the successor of Antiochus and their royal child
  ?successor dbo:succeededBy ?antiochus .
  ?successorsChild dbo:parent ?successor .
  
  # Assuming royalty can be identified by a property or class (e.g., dbo:royalty)
  ?successorsChild dbp:royalStatus ""true""^^xsd:boolean .

  # Step 6: Find the spouse of this royal child
  ?spouse dbo:spouse ?successorsChild .
  
  FILTER (?parentOfChild != ?grandchild) # Ensure distinct entities
}
```",7,9,8,3,3,3,3,71,0,0,2,0,0.0,0
767,51,test,"Give me the alma mater of the administration of George K. Nash and reference to the alter ego of the persona, that is a fictional character, of Matthew Burland.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/almaMater> ?result . ?v4 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/George_K._Nash> . ?v1 <http://dbpedia.org/property/alterEgo> ""Matthew Burland""@en . ?v1 <http://dbpedia.org/property/alterEgo> ?v2 . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?almaMater ?alterEgo
WHERE {
  # Find the alma mater of George K. Nash
  OPTIONAL {
    dbr:George_K._Nash dbo:almaMater ?almaMater .
  }

  # Find a fictional character associated with Matthew Burland and its alter ego
  OPTIONAL {
    ?work dbo:author dbr:Matthew_Burland ;
          dbo:character ?character .
    ?character rdfs:label ?alterEgo .
    FILTER (lang(?alterEgo) = ""en"")
  }
}
```",5,6,6,3,2,3,3,71,0,1,2,0.0,0.0,0
617,16,test,"Give me the child of the child, that is a royalty, of Boleslaus I, Duke of Bohemia and parent of the father, that is a royalty, of Richeza of Poland, Queen of Hungary.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Boleslaus_I,_Duke_of_Bohemia> . <http://dbpedia.org/resource/Richeza_of_Poland,_Queen_of_Hungary> <http://dbpedia.org/property/father> ?v3 . ?v2 <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/child> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?grandchild WHERE {
  # Boleslaus I's children
  ?boleslausI a dbo:Duke ;
              foaf:name ""Boleslaus I, Duke of Bohemia""@en .
  
  ?boleslausIClild dbo:parent ?boleslausI .

  # Boleslaus I's grandchildren
  ?boleslausIGrandchild dbo:parent ?boleslausIClild ;
                        a dbo:Monarch ;  # Assuming royalty is represented by Monarch

  # Richeza of Poland and her father
  ?richeza dbr:Richeza_of_Poland ;
           foaf:name ""Richeza of Poland, Queen of Hungary""@en .
  
  ?richezasFather dbo:parent ?richeza .

  # Parent of Richeza's father (great-grandparent)
  ?richezasGrandfather dbo:parent ?richezasFather .

  # Children of the great-grandparent
  ?childOfGreatGrandparent dbo:parent ?richezasGrandfather .
  
  FILTER(?boleslausIGrandchild = ?childOfGreatGrandparent)
}
```",4,6,5,2,2,3,2,20,0,0,1,0,0.0,0
16,35,test,Give me the spouse of the person born as Ted Martin McGinley and person born as the birth name of Gigi Rice.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ""Ted Martin McGinley""@en . ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Gigi_Rice> <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person1 ?spouse1 ?person2 ?spouse2 WHERE {
  # Ted Martin McGinley's spouse
  ?person1 foaf:name ""Ted Martin McGinley""@en .
  ?person1 dbo:spouse ?spouse1 .

  # Gigi Rice's birth name and spouse
  ?person2 foaf:name ?birthName .
  FILTER(CONTAINS(?birthName, ""Gigi Rice"") || CONTAINS(?birthName, ""Gigi Rice"")) .
  ?person2 dbo:spouse ?spouse2 .
}
```",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
959,65,test,"Give me the manager of the team of Takashi Sekizuka and member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of Eiji Ōtsuka and native of the residence, that is a country, of the leader, that is a politician, of 2010 Japanese House of Councillors election.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/residence> ?v5 . ?v0 <http://dbpedia.org/ontology/manager> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. <http://dbpedia.org/resource/Eiji_Ōtsuka> <http://dbpedia.org/ontology/almaMater> ?v2 . <http://dbpedia.org/resource/2010_Japanese_House_of_Councillors_election> <http://dbpedia.org/property/leader> ?v1 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/birthPlace> ?v5 . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?v0 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Takashi_Sekizuka> . ?result <http://dbpedia.org/ontology/team> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?manager WHERE {
  # Takashi Sekizuka's team and manager
  ?team dbo:player dbr:Takashi_Sekizuka ;
        dbo:coach ?manager .
  
  # Eiji Ōtsuka's alma mater
  ?almaMater dbo:alumnus dbr:Eiji_Ōtsuka ;
             a dbo:University ;
             dbp:country ""Japan""^^xsd:string .

  # Leader of the 2010 Japanese House of Councillors election
  ?leader dbo:electedAs dbr:2010_Japanese_House_of_Councillors_election ;
          dbo:nationality ?nationality .
  
  # Nationality and residence as a country
  ?nationality rdfs:label ?countryLabel .
  FILTER (lang(?countryLabel) = ""en"" && contains(lcase(str(?countryLabel)), ""japan""))

  # Manager must be associated with the alma mater
  ?manager dbo:almaMater ?almaMater .

}
```",7,13,8,3,3,3,3,71,0,0,2,0,0.0,0
378,50,test,"Give me the claim to fame of the commander in Great Siege of Gibraltar and war of the commander in the reference, that is a military conflict, to Peninsular War.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/knownFor> ?result . ?v4 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/ontology/commander> ?v4 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Peninsular War""@en . <http://dbpedia.org/resource/Great_Siege_of_Gibraltar> <http://dbpedia.org/ontology/commander> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?eliottClaimToFame ?wellesleyConflict WHERE {
  # George Augustus Eliott's claim to fame related to the Great Siege of Gibraltar
  dbr:George_Augustus_Eliott dbo:claimToFame ?eliottClaimToFame .
  
  # Arthur Wellesley's involvement in a military conflict referenced as connected to the Peninsular War
  dbr:Arthur_Wellesley dbo:militaryConflict ?wellesleyConflict .

  FILTER regex(?eliottClaimToFame, ""Great Siege of Gibraltar"", ""i"")
  FILTER regex(?wellesleyConflict, ""Peninsular War"", ""i"")
}
```",5,6,6,3,2,3,3,71,0,0,2,0,0.0,0
659,57,test,"Give me the commander in German campaign of 1813 and commander in the war, that is an event and a military conflict, of the figure known, that is a military unit and an organisation, as 'Polish Horse' and military force of the force, that is a societal event and an event and a military conflict, of Rutger Jan Schimmelpenninck.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> . <http://dbpedia.org/resource/German_campaign_of_1813> <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://dbpedia.org/ontology/battle> ?v5 . ?v0 <http://dbpedia.org/property/nickname> ""'Polish Horse'""@en . ?v5 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?germanCampaignCommander ?polishHorseWarCommander ?schimmelpenninckForce
WHERE {
  # German Campaign of 1813 and its commander
  ?campaign dbo:name ""German campaign of 1813""@en .
  ?campaign dbo:participatedIn ?conflict1 .
  ?commander1 dbo:commanderOf ?campaign .

  # War involving 'Polish Horse'
  dbr:Polish_Uhlans dbo:participatedIn ?conflict2 .
  ?commander2 dbo:commanderOf ?conflict2 .

  # Rutger Jan Schimmelpenninck's military force
  dbr:Rutger_Jan_Schimmelpenninck dbo:militaryForce ?schimmelpenninckForce .
  
  BIND(?commander1 AS ?germanCampaignCommander)
  BIND(?commander2 AS ?polishHorseWarCommander)
}
```",6,13,7,3,3,3,3,71,0,0,7,0,0.0,0
767,23,test,"Give me the entity in the administration, that is a settlement, of the writer of Where It's At (Dustin Lynch album).",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/leaderParty> ?v2 . <http://dbpedia.org/resource/Where_It's_At_(Dustin_Lynch_album)> <http://dbpedia.org/property/writer> ?v2 . ?result <http://dbpedia.org/ontology/state> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?settlement WHERE {
  # Identify Dustin Lynch and his place of birth or notable settlement
  dbr:Dustin_Lynch dbo:birthPlace ?place .
  
  # Ensure the place is a settlement with an administrative role
  ?place rdf:type dbo:Settlement ;
         dbo:administrativeUnit ?adminEntity .

  # Filter to ensure it's a recognized settlement
  FILTER EXISTS { ?adminEntity rdf:type dbo:AdministrativeRegion }
}
```",3,4,4,3,1,3,3,71,0,0,66,0,0.0,0
492,25,test,"Give me the person decedent at the capital, that is a settlement, of Algeria and commander in Franco-Hova Wars.",SELECT ?result WHERE { <http://dbpedia.org/resource/Franco-Hova_Wars> <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Algeria> <http://dbpedia.org/ontology/capital> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX wd: <http://www.wikidata.org/entity/>

SELECT ?person WHERE {
  # Capital of Algeria is Algiers (Q1203)
  dbr:Algiers a dbo:Settlement ;
             rdfs:label ""Algiers""@en .

  # Find individuals who were commanders in the Franco-Hova Wars
  ?war dbo:commander ?person .
  ?war rdfs:label ?label .
  FILTER(CONTAINS(LCASE(?label), ""franco-hova wars"")) .

  # Check if these persons died in Algiers
  ?person dbo:deathPlace dbr:Algiers ;
          a dbo:Person .
}
```",3,4,4,2,2,3,3,71,1,0,0,1.0,1.0,1.0
294,23,test,"Give me the resting place of the awardee, that is a politician, of Distinguished Service Medal (U.S. Army) and entity in the birth place, that is a settlement, of Marion James.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/location> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Marion_James> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Distinguished_Service_Medal_(U.S._Army)> . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?awardeeRestingPlace ?marionBirthSettlement
WHERE {
  ?person dbo:recipient dbr:Distinguished_Service_Medal_(U.S._Army) .
  ?person dbo:occupation dbr:Politician .
  ?person dbo:burialPlace ?awardeeRestingPlace .

  OPTIONAL {
    dbr:Marion_James dbo:birthPlace ?marionBirthSettlement .
    FILTER (isBlank(?marionBirthSettlement) != true)
  }
}
```",4,6,5,2,2,2,3,28,0,0,1,0,0.0,0
77,19,test,"Give me the force of the mayor of the territory administered, that is an organisation, from Warsaw and war of the awardee of Golden Weapon for Bravery.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> ?v4 . ?v0 <http://dbpedia.org/property/leader> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Warsaw> . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Golden_Weapon_for_Bravery> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?force WHERE {
  # Find the mayor of Warsaw
  ?mayor a dbo:Mayor ;
         dbo:city dbr:Warsaw .
  
  # Find an organization that administers a territory (likely Warsaw)
  ?organization dbo:administers ?territory .

  # Find the awardee of the Golden Weapon for Bravery
  ?person dbo:award dbr:Golden_Weapon_for_Bravery ;
          dbo:memberOf ?force .
  
  # Link the organization to the force, assuming it's a military or police unit
  OPTIONAL { ?organization dbo:hasMember ?force }
  
  # Ensure the person is linked to Warsaw through some conflict or war context
  OPTIONAL { ?person dbo:placeOfBirth dbr:Warsaw }
}
```",5,6,6,3,2,3,2,20,0,0,14,0,0.0,0
184,22,test,Give me the parent of the child of Archduke Joseph Francis of Austria and parent of Géza von Habsburg.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Géza_von_Habsburg> . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Francis_of_Austria> . ?result <http://dbpedia.org/ontology/child> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?parentName WHERE {
  # Find the child of Archduke Joseph Francis of Austria and their parent
  {
    ?child dbo:parent dbr:Archduke_Joseph_Francis_of_Austria .
    ?parent dbo:child ?child .
    BIND(foaf:name(?parent) AS ?parentName)
  }
  
  UNION
  
  # Find the child of Géza von Habsburg and their parent
  {
    ?child dbo:parent dbr:Géza_von_Habsburg .
    ?parent dbo:child ?child .
    BIND(foaf:name(?parent) AS ?parentName)
  }
}
```",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
303,23,test,"Give me the party of the commander, that is a politician, in United States invasion of Panama and party of the person born, that is a politician, as Arnulfo Arias Madrid.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ""Arnulfo Arias Madrid""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/United_States_invasion_of_Panama> <http://dbpedia.org/ontology/commander> ?v2 . ?v1 <http://dbpedia.org/ontology/party> ?result . ?v2 <http://dbpedia.org/ontology/party> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?commanderParty ?arnulfoParty WHERE {
  # Find the political party of a politician involved in the United States invasion of Panama
  ?event dbo:agent ?person .
  ?event dbp:name ""United States invasion of Panama""@en .
  ?person rdf:type dbo:Politician .
  OPTIONAL { ?person dbp:party ?commanderParty . }
  
  # Find Arnulfo Arias Madrid's political party
  ?arnulfo dbo:birthPlace ?place .
  ?arnulfo rdfs:label ""Arnulfo Arias Madrid""@en .
  OPTIONAL { ?arnulfo dbp:party ?arnulfoParty . }

  FILTER(?person != ?arnulfo) # Ensure we are not conflating the two entities
}
```",4,6,5,2,2,2,3,28,0,0,1,0,0.0,0
9,58,test,"Give me the alma mater of the awardee of Royal Medal and figure known as the nickname of the entity, that is an organisation and an educational institution, in Northern Ireland and alma mater of John Alderdice, Baron Alderdice.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/nickname> ?v2 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Northern_Ireland> . ?result <http://dbpedia.org/property/nickname> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v5 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Medal> . <http://dbpedia.org/resource/John_Alderdice,_Baron_Alderdice> <http://dbpedia.org/ontology/almaMater> ?result . ?v5 <http://dbpedia.org/ontology/almaMater> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?almaMater WHERE {
  # Find awardees of the Royal Medal
  ?person dbo:awardReceived dbr:Royal_Medal .
  
  # Check if any of these individuals have a nickname
  OPTIONAL { ?person dbp:nickname ?nickname . FILTER (BOUND(?nickname)) }
  
  # Identify alma mater of John Alderdice, Baron Alderdice
  dbr:John_Alderdice dbo:almaMater ?almaMater .
  
  # Ensure the institution is in Northern Ireland and is both an organization and educational institution
  ?almaMater dbo:location dbr:Northern_Ireland ;
            a dbo:EducationalInstitution, dbo:Organization .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
281,48,test,"Give me the war of the profession, that is a military unit, of Heather Roy and war of the awardee of the award of Jonathon Band.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. <http://dbpedia.org/resource/Heather_Roy> <http://dbpedia.org/property/occupation> ?v1 . ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/property/awards> ?v3 . <http://dbpedia.org/resource/Jonathon_Band> <http://dbpedia.org/property/awards> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT DISTINCT ?heatherWar ?jonathonWar WHERE {
  # Heather Roy's profession that is a military unit
  ?heather dbr:Heather_Roy .
  ?heather dbo:profession ?profession .
  ?profession rdfs:label ?unitLabel .
  FILTER (CONTAINS(LCASE(?unitLabel), ""military unit"")) .
  ?profession dbo:war ?heatherWar .

  # Jonathon Band's award and associated war
  ?jonathon dbr:Jonathon_Band .
  ?jonathon dbo:award ?award .
  ?award dbo:war ?jonathonWar .
}
```",5,6,6,3,2,3,3,71,0,0,9,0,0.0,0
54,71,test,"Give me the predecessor of the child, that is an office holder and a royalty, of the reference to Thihapate of Mohnyin and parent of the child of the parent of Thado Minsaw of Prome and child of the father of the child of Thinkhaya of Pagan.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/father> ?v4 . ?v7 <http://xmlns.com/foaf/0.1/name> ""Thihapate of Mohnyin""@en . <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?v1 . ?result <http://dbpedia.org/ontology/successor> ?v8 . ?v1 <http://dbpedia.org/property/father> ?v2 . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/ontology/child> ?result . ?v4 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> . ?v5 <http://dbpedia.org/ontology/parent> ?result . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v8 <http://dbpedia.org/property/father> ?v7 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?predecessor WHERE {
  # Step 1: Thihapate of Mohnyin's child who is an office holder and royalty
  ?child dbo:parent dbr:Thihapate_of_Mohnyin .
  FILTER EXISTS { ?child dbo:officeHolder ?x . }
  FILTER EXISTS { ?child dbo:royalty ?y . }

  # Step 2: Predecessor of that child
  ?predecessor dbo:successor ?child .

  # Step 3: Thado Minsaw of Prome's parent and his child
  ?thadoMinsawParent dbo:parent dbr:Thado_Minsaw_of_Prome .
  ?thadoMinsawChild dbo:parent ?thadoMinsawParent .

  # Step 4: Thinkhaya of Pagan's child, father of that child, and his child
  ?thinkhayaChild dbo:child dbr:Thinkhaya_of_Pagan .
  ?fatherOfThinkhayaChild dbo:child ?thinkhayaChild .
  ?grandchildOfFatherOfThinkhayaChild dbo:parent ?fatherOfThinkhayaChild .

  # Step 5: Ensure the predecessor is related to both Thado Minsaw and Thinkhaya
  FILTER (?predecessor = ?thadoMinsawChild || ?predecessor = ?grandchildOfFatherOfThinkhayaChild)
}
```",9,11,10,3,3,3,3,71,0,0,1,0,0.0,0
959,53,test,"Give me the manager of the team of Takashi Sekizuka and native of Japan and member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of the person born in 1958.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v3 <http://dbpedia.org/ontology/birthYear> ""1958""^^<http://www.w3.org/2001/XMLSchema#gYear> . ?v0 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Takashi_Sekizuka> . ?v3 <http://dbpedia.org/ontology/almaMater> ?v1 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Japan> . ?result <http://dbpedia.org/ontology/team> ?v1 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?v0 <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?manager WHERE {
  # Takashi Sekizuka's team
  dbr:Takashi_Sekizuka dbo:teamMemberOf ?team .
  
  # Manager of the team
  ?team dbo:coach ?manager .

  # Manager is native to Japan
  ?manager dbp:nationality dbr:Japan .

  # Alma mater conditions
  ?manager dbo:almaMater ?university ;
           dbp:birthYear ""1958""^^xsd:gYear .
  
  ?university a dbo:University ;
              dbo:country dbr:Japan ;
              a dbo:EducationalOrganization .
}
```",6,10,7,3,3,3,3,71,0,0,3,0,0.0,0
778,18,test,"Give me the author of the work, that is a software, of Bill Joy and entity in the award of the awardee, that is American, of Wolf Prize in Medicine.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/location> ?v2 . ?v3 <http://dbpedia.org/ontology/author> ?result . ?v1 <http://dbpedia.org/property/awards> ?v2 . ?v1 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/United_States>. ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Wolf_Prize_in_Medicine> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Software>. ?v3 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Bill_Joy> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

# Query to find the author of Unix by Bill Joy
SELECT ?author WHERE {
  dbr:Unix dbo:creator dbr:Bill_Joy .
  dbr:Unix dbo:creator ?author .
}

UNION

# Query to find American awardees of the Wolf Prize in Medicine
SELECT DISTINCT ?awardee WHERE {
  ?award a dbo:Award ;
         dbp:name ""Wolf Prize in Medicine"" ;
         dbo:recipient ?awardee .
  ?awardee dbo:nationality dbr:United_States .
}
```",5,7,6,3,2,3,2,20,0,0,1,0,0.0,0
161,51,test,"Give me the military force of the force, that is a societal event and a military conflict, of Francisco Largo Caballero and commander in the force, that is an event, of the figure known as El Director.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v4 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://xmlns.com/foaf/0.1/nick> ""El Director""@en . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/commander> ?v1 . ?result <http://dbpedia.org/ontology/battle> ?v4 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce ?commander WHERE {
  # Find Francisco Largo Caballero and his associated military force
  dbr:Francisco_Largo_Caballero dbo:associatedWith ?militaryForce .
  
  # Ensure the military force is both a societal event and a military conflict
  ?militaryForce rdf:type dbo:SocietalEvent ;
                 rdf:type dbo:MilitaryConflict .

  # Find the commander of this military force
  ?militaryForce dbo:commander ?commander .
}
```",5,8,6,3,2,3,3,71,0,0,32,0,0.0,0
92,65,test,"Give me the associated musical artist of the person born, that is an artist, as the actor of Return to Nuke 'Em High Volume 1 and band member of the reference, that is an artist, to Nevermore and band of the person born as Joseph Michael Furney.","SELECT ?result WHERE { ?v6 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/bandMember> ?v3 . ?v4 <http://xmlns.com/foaf/0.1/name> ""Nevermore""@en . ?v6 <http://dbpedia.org/property/birthName> ?v0 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v3 <http://dbpedia.org/property/birthName> ""Joseph Michael Furney""@en . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Return_to_Nuke_'Em_High_Volume_1> <http://dbpedia.org/property/starring> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?musicalArtist WHERE {
  # Step 1: Identify Joseph Michael Furney's birth name and musical role
  ?person a dbo:Person ;
          foaf:name ""Joseph Michael Furney"" ;
          dbo:birthName ?birthName .
  
  OPTIONAL { ?person dbo:musicalArtist ?musicalArtist . }

  # Step 2: Find the actor of ""Return to Nuke 'Em High Volume 1"" who is also a musician
  ?film dbr:Return_to_Nuke_'Em_High_Volume_1 ;
        dbo:actor ?actor .
  
  OPTIONAL { ?actor dbo:musicalArtist ?musicalArtist . }

  # Step 3: Identify the band member associated with Nevermore
  ?bandMember a dbo:Person ;
              dbo:memberOfBand dbr:Nevermore .

  OPTIONAL { ?bandMember dbo:musicalArtist ?musicalArtist . }

  # Step 4: Determine the reference band related to Joseph Michael Furney
  ?referenceBand a dbo:Band ;
                 dbo:associatedMusicians ?person .
  
  FILTER(?birthName = ""Joseph Michael Furney"")
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
747,59,test,"Give me the person born on the birth date of the person decedent, that is an athlete and a soccer player, at Zolotonosha and band of the writer of the work, that is a song, of Amba Shepherd.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/birthDate> ?v2 . ?v0 <http://dbpedia.org/property/writer> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?result <http://dbpedia.org/ontology/birthDate> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Zolotonosha> . ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Amba_Shepherd> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?athlete WHERE {
  # Step 1: Find Amba Shepherd's song
  ?song dbo:composer dbr:Amba_Shepherd ;
        a dbo:Song .

  # Step 2: Get the band associated with the song
  ?band dbo:member ?song .

  # Step 3: Identify the person decedent and their birth date
  ?decedent dbp:dateOfBirth ?birthDate .

  # Assuming ""person decedent"" refers to a specific known individual, replace `dbr:Person_Decedent` with the actual resource
  FILTER(?decedent = dbr:Person_Decedent) 

  # Step 4: Find an athlete and soccer player born on that date in Zolotonosha
  ?athlete dbo:dateOfBirth ?birthDate ;
           dbo:nationality dbr:Zolotonosha ;
           a dbo:Athlete, dbo:SoccerPlayer .
}
```",6,9,7,3,2,3,3,71,0,0,1,0,0.0,0
838,12,val,"Give me the band member of the band, that is a group, of YU Grupa and band of Raša Đelmaš.",SELECT ?result WHERE { <http://dbpedia.org/resource/Raša_Đelmaš> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . <http://dbpedia.org/resource/YU_Grupa> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?memberName WHERE {
  # Find members of YU Grupa
  { 
    ?yugrupa dbo:name ""YU Grupa""@en .
    ?yugrupa dbo:bandMember ?yuMember .
    ?yuMember foaf:name ?memberName .
  }
  
  UNION
  
  # Find members of the band associated with Raša Đelmaš
  { 
    ?rasaBand dbo:bandMember ?rašaMember .
    ?rašaMember foaf:name ""Raša Đelmaš""@sr .
    ?rasaBand dbo:bandMember ?member .
    ?member foaf:name ?memberName .
  }
}
```",3,4,4,2,2,3,2,20,0,0,4,0,0.0,0
10,14,val,"Give me the band member of the person born, that is an artist, as Luke Francis Vibert and associated musical artist of Matt Colton.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://dbpedia.org/property/birthName> ""Luke Francis Vibert""@en . <http://dbpedia.org/resource/Matt_Colton> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?bandMember ?associatedArtist
WHERE {
  ?person dbp:birthName ""Luke Francis Vibert""@en .
  ?person a dbo:Artist .

  ?person dbo:bandMember ?bandMember .

  ?colton dbp:birthName ""Matt Colton""@en .
  ?colton dbo:musicalArtist ?associatedArtist .
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
963,11,val,"Give me the administration of Serbian Progressive Party and entity in the region, that is a country, of Central European Time.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Serbian_Progressive_Party> . ?result <http://dbpedia.org/ontology/country> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX geo: <http://www.w3.org/2003/01/geo/wgs84_pos#>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?leader ?country WHERE {
  # Find the leader of the Serbian Progressive Party
  dbr:Serbian_Progressive_Party dbo:leader ?leader .

  # Find countries in the region that observe Central European Time
  ?country a dbo:Country ;
           geo:timezone ""Europe/Berlin""^^xsd:string .
}
```",3,4,4,2,2,3,2,20,0,0,84,0,0.0,0
528,22,val,Give me the force of the person born as Narciso Campero Leyes and war of Irene Morales.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ""Narciso Campero Leyes""@en . ?result <http://dbpedia.org/ontology/commander> ?v1 . <http://dbpedia.org/resource/Irene_Morales> <http://dbpedia.org/ontology/battle> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?force ?war 
WHERE {
  # Find the military force associated with Narciso Campero Leyes
  OPTIONAL {
    ?person rdfs:label ""Narciso Campero Leyes""@en .
    ?person dbo:militaryCommanderOf ?command .
    ?command dbo:commander ?leader .
    FILTER(?leader = ?person) .
    ?command dbo:unitName ?force .
  }
  
  # Attempt to find any war associated with Irene Morales
  OPTIONAL {
    ?person rdfs:label ""Irene Morales""@en .
    ?person dbo:participatedIn ?war .
  }
}
```",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
294,18,val,"Give me the resting place of Edwin A. Keeble and entity in the birth place, that is a settlement, of Marion James.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/location> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Edwin_A._Keeble> <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Marion_James> <http://dbpedia.org/ontology/birthPlace> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?burialPlace (SAMPLE(?settlement) AS ?birthSettlement)
WHERE {
  # Find Edwin A. Keeble's burial place
  OPTIONAL {
    ?keeblesDeath dbo:deathPlace ?deathPlace .
    ?deathPlace dbo:burialPlace ?burialPlace .
    FILTER EXISTS { ?keeblesDeath rdfs:label ""Edwin A. Keeble""@en }
  }

  # Find a settlement in Marion James' birthplace
  OPTIONAL {
    ?marionsBirth dbo:birthPlace ?birthPlace .
    ?settlement rdf:type dbo:Settlement ;
                dbo:location ?birthPlace .
    FILTER EXISTS { ?marionsBirth rdfs:label ""Marion James""@en }
  }
}
```",3,4,4,2,2,2,3,28,0,1,1,0.0,0.0,0
48,11,val,Give me the band of the writer of Emotion (Carly Rae Jepsen album) and band of Murda Mook.,SELECT ?result WHERE { <http://dbpedia.org/resource/Murda_Mook> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Emotion_(Carly_Rae_Jepsen_album)> <http://dbpedia.org/property/writer> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?writerBand ?murdaMookBand WHERE {
  # Find the writer of ""Emotion"" by Carly Rae Jepsen and their associated band
  OPTIONAL {
    ?song dbo:lyricsBy ?writer .
    ?song rdfs:label ""Emotion""@en .
    ?writer dbo:musicGroup ?writerBand .
  }
  
  # Find the band associated with Murda Mook
  ?murdaMook dbo:musicArtist ?murdaMookBand .
  FILTER (str(?murdaMook) = str(dbr:Murda_Mook))
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
404,32,val,"Give me the spouse of the person born, that is a royalty, as Princess Victoria Louise of Prussia and parent of the child, that is a royalty, of Ernest Augustus, Duke of Brunswick.","SELECT ?result WHERE { <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/ontology/child> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/birthName> ""Princess Victoria Louise of Prussia""@en . ?v1 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/child> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
  # Find Princess Victoria Louise of Prussia and her spouse
  ?princess a dbo:Princess ;
           foaf:name ""Victoria Louise, Princess Royal""@en .
  
  ?princess dbo:spouse ?spouse .

  # Ensure the spouse is royalty
  ?spouse a dbo:Monarch ; 
          dbp:title ?title .
  
  FILTER(CONTAINS(LCASE(?title), ""royalty""))

  # Find Ernest Augustus, Duke of Brunswick and his children who are royalty
  ?duke a dbo:Duke ;
        foaf:name ""Ernest Augustus, Duke of Brunswick""@en .

  ?duke dbo:child ?child .
  
  ?child a dbo:Monarch ; 
         dbp:title ?childTitle .
  
  FILTER(CONTAINS(LCASE(?childTitle), ""royalty""))

  # Ensure the spouse is connected to these entities
  OPTIONAL { ?spouse dbo:parent ?duke }
}
```",4,6,5,2,2,3,3,71,0,0,1,0,0.0,0
54,35,val,"Give me the predecessor of the child, that is an office holder and a royalty, of Thihapate of Mohnyin and child of the father of Soe Min Wimala Dewi.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Soe_Min_Wimala_Dewi> <http://dbpedia.org/property/father> ?v2 . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Thihapate_of_Mohnyin> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?predecessor WHERE {
  # Find Thihapate of Mohnyin's child who is an office holder and royalty
  ?child dbo:parent dbr:Thihapate_of_Mohnyin .
  ?child dbo:officeHolder ?office .
  ?child dbo:royalty ?royalty .

  # Identify the father of Soe Min Wimala Dewi
  ?soeMinWimalaDewi dbp:father ?fatherOfSoeMinWimalaDewi .
  
  # Ensure the child is also a child of the father of Soe Min Wimala Dewi
  ?child dbo:parent ?fatherOfSoeMinWimalaDewi .

  # Find the predecessor of this specific child
  ?predecessor dbo:successor ?child .
}
```",4,6,5,2,2,3,3,71,0,0,1,0,0.0,0
626,12,val,Give me the awardee of the award of Aleksey Petrovich Yermolov and commander in Battle of Leipzig.,SELECT ?result WHERE { <http://dbpedia.org/resource/Aleksey_Petrovich_Yermolov> <http://dbpedia.org/property/awards> ?v0 . ?result <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Battle_of_Leipzig> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commonEntity WHERE {
  # Find the award received by Aleksey Petrovich Yermolov
  dbr:Aleksey_Petrovich_Yermolov dbo:awardReceived ?yermolovAward .
  
  # Find the commander in the Battle of Leipzig
  dbr:Battle_of_Leipzig dbo:commander ?battleCommander .

  # Check if there is a common entity that satisfies both conditions
  VALUES (?commonEntity) {
    (?yermolovAward)
    (?battleCommander)
  }
}
```",3,3,4,2,2,3,2,20,0,0,3,0,0.0,0
392,14,val,"Give me the region of the time zone, that is a sports event, of Aguilar de Segarra and entity in Italy.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsEvent>. ?result <http://dbpedia.org/ontology/timeZone> ?v1 . <http://dbpedia.org/resource/Aguilar_de_Segarra> <http://dbpedia.org/ontology/timeZone> ?v1 . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?region WHERE {
  # Find the time zone of Aguilar de Segarra
  dbr:Aguilar_de_Segarra dbo:timeZone ?timezone .

  # Link the time zone to sports events
  ?event dbo:location ?location .
  ?location dbo:timeZone ?timezone .

  # Identify the region associated with these sports events
  ?location dbo:region ?region .

  # Ensure there is a connection between this region and an entity in Italy
  ?italyEntity dbo:locatedIn ?region .
  ?italyEntity rdf:type dbr:Italy .
}
```",3,4,4,2,2,2,3,28,0,0,513,0,0.0,0
392,19,val,"Give me the entity in the region, that is a country, of Central European Time and region of Central European Time and province of Schio.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v1 . <http://dbpedia.org/resource/Schio> <http://dbpedia.org/ontology/province> ?result . ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Central_European_Time> . ?v1 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?country WHERE {
  ?country a dbo:Country .
  ?country dbo:timeZone ""Central European Time"" .
  ?province dbo:country ?country ;
            rdfs:label ""Schio""@en .
}
```",4,5,5,2,3,2,3,28,0,0,1,0,0.0,0
9,39,val,"Give me the alma mater of Allen Hill (scientist) and figure known as the nickname of the entity, that is an organisation and an educational institution, in Northern Ireland.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?result <http://dbpedia.org/property/nickname> ?v1 . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Northern_Ireland> . ?v0 <http://dbpedia.org/property/nickname> ?v1 . <http://dbpedia.org/resource/Allen_Hill_(scientist)> <http://dbpedia.org/ontology/almaMater> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?almaMater ?nickname WHERE {
  # Find the alma mater of Allen Hill (scientist)
  OPTIONAL { 
    dbr:Allen_Hill_(scientist) dbo:almaMater ?almaMater .
  }

  # Find an organization and educational institution in Northern Ireland with a nickname
  OPTIONAL {
    ?institution rdf:type dbo:EducationalInstitution ;
                 dbo:location dbp:Northern_Ireland ;
                 rdfs:label ?nickname .
  }
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
492,30,val,"Give me the person decedent at the capital, that is a settlement, of Algeria and person decedent at French Algeria and commander in Franco-Hova Wars.",SELECT ?result WHERE { <http://dbpedia.org/resource/Franco-Hova_Wars> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/French_Algeria> . ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . <http://dbpedia.org/resource/Algeria> <http://dbpedia.org/ontology/capital> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person dbo:deathPlace dbr:Algiers .
  ?person dbo:deathPlace dbr:French_Algeria .
  ?person dbo:commanderOf dbr:Franco-Hova_Wars .
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
328,33,val,Give me the awardee of Order of Suvorov and commander in the force of the person decedent at Budapest.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/commander> ?v0 . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Budapest> . ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Order_of_Suvorov> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?name
WHERE {
  ?person dbo:awardeeOf dbr:Order_of_Suvorov .
  ?person rdfs:label ?name .
  FILTER (LANG(?name) = 'en') .

  OPTIONAL {
    ?commandEvent dbp:militaryCommanderOf dbr:Budapest .
    ?commandEvent dbo:commander ?person .
  }
}
```",4,4,5,3,2,3,3,71,0,0,3,0,0.0,0
64,7,val,"Give me the alma mater of the person decedent, that is a writer, at Sremska Kamenica and entity in Serbia.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Sremska_Kamenica> . ?v0 <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Serbia> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?almaMater WHERE {
  ?person a dbo:Writer .
  ?person dbo:deathPlace dbr:Sremska_Kamenica .
  ?person dbo:almaMater ?almaMater .
}
```",3,4,4,2,2,2,2,9,1,1,0,0.5,1.0,0.6666666666666666
427,28,val,Give me the party of Romano Prodi and reference to the name of Italian People's Party (1994) and party of Giulio Andreotti.,SELECT ?result WHERE { <http://dbpedia.org/resource/Giulio_Andreotti> <http://dbpedia.org/ontology/party> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . <http://dbpedia.org/resource/Italian_People's_Party_(1994)> <http://xmlns.com/foaf/0.1/name> ?v1 . <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/ontology/party> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?prodiPartyLabel ?andreottiPartyLabel ?ipp1994Label WHERE {
  # Romano Prodi's party affiliation
  OPTIONAL { 
    dbr:Romano_Prodi dbo:partyAffiliation ?prodiParty .
    ?prodiParty rdfs:label ?prodiPartyLabel .
    FILTER (lang(?prodiPartyLabel) = 'en')
  }

  # Giulio Andreotti's party affiliation
  OPTIONAL {
    dbr:Giulio_Andreotti dbo:partyAffiliation ?andreottiParty .
    ?andreottiParty rdfs:label ?andreottiPartyLabel .
    FILTER (lang(?andreottiPartyLabel) = 'en')
  }
  
  # Italian People's Party (1994)
  OPTIONAL {
    ?ipp1994 dbr:Italy dbo:politicalPartyInCountry ?country ;
             rdfs:label ?ipp1994Label .
    FILTER (CONTAINS(LCASE(?ipp1994Label), ""italian people's party"") && 
            CONTAINS(LCASE(STR(?country)), ""1994""))
    FILTER (lang(?ipp1994Label) = 'en')
  }
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
801,27,val,"Give me the associated musical artist of the writer, that is a musical artist and an artist, of the album, that is a musical work and a work, of What U See Is What U Get.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v1 <http://dbpedia.org/property/writer> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/What_U_See_Is_What_U_Get> <http://dbpedia.org/ontology/album> ?v1 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?associatedArtist WHERE {
  # Identify the album ""What U See Is What U Get""
  ?album a dbo:MusicalWork ;
         rdfs:label ?albumLabel .
  
  FILTER (CONTAINS(LCASE(?albumLabel), 'what u see is what u get')) .

  # Find the writer of the album who is both an artist and a musical artist
  ?album dbo:composer ?writer .
  ?writer a dbo:Artist ;
          a dbo:MusicalArtist .

  # Get the associated musical artist of this writer
  ?writer dbp:associatedBandOrMusicalArtist ?associatedArtist .
}
```",3,7,4,3,1,3,3,71,0,0,50,0,0.0,0
328,28,val,"Give me the commander in Eastern Front (World War II) and leader of People's Commissariat of Defense of the Soviet Union and awardee of the award of Bruce Fraser, 1st Baron Fraser of North Cape.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ?v1 . <http://dbpedia.org/resource/Eastern_Front_(World_War_II)> <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape> <http://dbpedia.org/property/awards> ?v1 . <http://dbpedia.org/resource/People's_Commissariat_of_Defense_of_the_Soviet_Union> <http://dbpedia.org/ontology/leader> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person WHERE {
  ?person dbo:commander ?easternFront .
  ?easternFront rdfs:label ""Eastern Front (World War II)""@en .

  ?person dbo:title ""People's Commissar for Defence""@en ;
          foaf:name ?name .

  ?award dbo:awardee ?person ;
         dbo:bestowedBy <http://dbpedia.org/resource/Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape> .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
488,35,val,Give me the administration of the father of Emperor Go-Mizunoo and birth place of the commander in Boshin War.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> ?v1 . <http://dbpedia.org/resource/Boshin_War> <http://dbpedia.org/ontology/commander> ?v2 . <http://dbpedia.org/resource/Emperor_Go-Mizunoo> <http://dbpedia.org/property/father> ?v1 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?administration ?birthPlace
WHERE {
  # Find Toyotomi Hideyori as the father of Emperor Go-Mizunoo and his administration role
  dbr:Emperor_Go-Mizunoo dbo:father dbr:Toyotomi_Hideyori .
  OPTIONAL { dbr:Toyotomi_Hideyori dbo:positionHeld ?administration . }

  # Find Saigō Takamori as a commander in the Boshin War and his birthplace
  OPTIONAL {
    ?boshinWar dbo:commander dbr:Saigō_Takamori .
    FILTER(CONTAINS(LCASE(STR(?boshinWar)), ""boshin war""))
    dbr:Saigō_Takamori dbo:birthPlace ?birthPlace .
  }
}
```",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
345,12,val,"Give me the figure known as Stolz von Liechtenstein and team of the person born, that is a soccer player and a soccer manager, on 1978-09-15.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthDate> ""1978-09-15""^^<http://www.w3.org/2001/XMLSchema#date> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?result <http://dbpedia.org/ontology/manager> ?v0 . ?result <http://dbpedia.org/property/nickname> ""Stolz von Liechtenstein""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?person ?alias ?team
WHERE {
  ?person a dbo:SoccerPlayer ;
          dbo:birthDate ""1978-09-15""^^xsd:date ;
          dbo:managerOf ?team .
  OPTIONAL { ?person foaf:name ?alias . FILTER(CONTAINS(LCASE(?alias), ""stolz von liechtenstein"")) }
}
```",3,5,4,2,2,3,2,20,0,0,1,0,0.0,0
488,40,val,"Give me the birth place of the commander in the war, that is a military conflict and an event and a societal event, of Saitō Hajime and death place of Tokugawa Ieyasu and administration of Emperor Go-Yōzei.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/commander> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Emperor_Go-Yōzei> . <http://dbpedia.org/resource/Saitō_Hajime> <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Tokugawa_Ieyasu> <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace ?deathPlace ?administrationPeriod
WHERE {
  # Saitō Hajime's birthplace
  dbr:Saitō_Hajime dbo:birthPlace ?birthPlace .

  # Tokugawa Ieyasu's death place
  dbr:Tokugawa_Ieyasu dbo:deathPlace ?deathPlace .

  # Emperor Go-Yōzei's administration period (using reign as a proxy)
  dbr:Emperor_Go-Yōzei dbo:reign ?administrationPeriod .
}
```",5,8,6,3,3,3,3,71,0,0,1,0,0.0,0
360,15,val,"Give me the writer of the work, that is an album, of Dave Flett and reference to Manfred Mann.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/author> ""Dave Flett""@en . ?result <http://xmlns.com/foaf/0.1/name> ""Manfred Mann""@en . ?v1 <http://dbpedia.org/property/writer> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Album>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?album ?writer WHERE {
  ?album a dbo:Album .
  ?album dbo:contributor dbr:Dave_Flett .
  OPTIONAL { ?album dbo:composer ?writer . }
  FILTER EXISTS { 
    ?album dbo:artist dbr:Manfred_Mann_ (band) .
  }
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
314,12,val,Give me the commander in Spanish Civil War and awardee of 30 and person deceased at Madrid.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/restingPlace> <http://dbpedia.org/resource/Madrid> . <http://dbpedia.org/resource/Spanish_Civil_War> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/property/awards> ""30""^^<http://www.w3.org/2001/XMLSchema#integer> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX nobelPrize: <http://dbpedia.org/property/nobelPrize>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name WHERE {
  ?person a dbo:Person ;
          dbo:commanderOf dbr:Spanish_Civil_War ;
          nobelPrize:year ""1930""^^xsd:gYear ;
          dbo:deathPlace dbr:Madrid .
  OPTIONAL { ?person rdfs:label ?name FILTER (lang(?name) = 'en') }
}
```",3,3,4,1,3,2,3,28,0,0,1,0,0.0,0
232,22,val,"Give me the native of the residence, that is a settlement and British, of Sylvie Bermann and child of Jon Pertwee.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/ontology/child> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Sylvie_Bermann> <http://dbpedia.org/property/residence> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?native WHERE {
  # Identify Sylvie Bermann and Jon Pertwee
  dbr:Sylvie_Bermann a dbo:Person ;
                     dbo:childOf dbr:Jon_Pertwee .

  # Determine Sylvie's residence
  dbr:Sylvie_Bermann dbo:residence ?residence .

  # Ensure the residence is a settlement and British
  ?residence a dbo:Settlement ;
             dbp:country dbr:United_Kingdom .

  # Find the native of this place
  ?native dbo:nativePlace ?residence .
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
838,13,val,"Give me the band of the band member, that is an artist and a musical artist, of the band, that is a band and a group, of Žika Jelić.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v0 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Žika_Jelić> . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandMemberBandLabel WHERE {
  # Identify Žika Jelić and his band
  ?person rdfs:label ""Žika Jelić""@en .
  ?person dbo:memberOf ?band .
  
  # Ensure the band is classified as both a band and a group
  ?band rdf:type dbo:Band ;
        rdf:type dbo:Group .

  # Find members of this band who are also artists and musical artists
  ?bandMember dbo:memberOf ?band ;
              rdf:type dbo:MusicalArtist ;
              rdf:type dbo:Artist .
  
  # Retrieve the bands associated with these filtered members
  ?bandMember dbo:memberOf ?bandMemberBand .

  # Return labels for these bands
  ?bandMemberBand rdfs:label ?bandMemberBandLabel .
}
```",3,7,4,3,1,3,2,20,0,0,21,0,0.0,0
16,23,val,Give me the spouse of the person born as the birth name of Ted McGinley.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/property/birthName> ?v2 . ?v0 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/property/birthName> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
  ?tedMcGinley a dbo:Person ;
               foaf:name ""Ted McGinley"" ;
               dbo:birthName ?birthName .
  
  OPTIONAL { 
    ?person dbo:birthName ?birthName .
    ?person dbo:spouse ?spouse .
  }
}
```",3,3,4,3,1,3,3,71,0,0,1,0,0.0,0
427,25,val,"Give me the party of the person born, that is an office holder and a politician, as Romano Antonio Prodi and party of Giulio Andreotti.","SELECT ?result WHERE { <http://dbpedia.org/resource/Giulio_Andreotti> <http://dbpedia.org/ontology/party> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/property/birthName> ""Romano Antonio Prodi""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/ontology/party> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?partyLabel WHERE {
  VALUES ?person { 
    dbr:Romano_Prodi 
    dbr:Giulio_Andreotti 
  }
  
  ?person dbo:politicalParty ?party .
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }

  OPTIONAL {
    ?officeHolder dbo:incumbent ?person .
    FILTER EXISTS { ?officeHolder a dbo:PublicOffice } # Ensures they held an office
  }
  
  OPTIONAL {
    ?politician dbo:memberOfParty ?party .
    FILTER EXISTS { ?politician a dbo:Politician } # Ensures they were active as politicians
  }

  BIND(STR(?party) AS ?partyLabel)
}
```",3,5,4,2,2,3,3,71,0,0,3,0,0.0,0
427,43,val,Give me the reference to Partito Popolare Italiano and party of Romano Prodi and party of the father of the alumnus of Massachusetts Institute of Technology.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Partito Popolare Italiano""@en . ?v0 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Massachusetts_Institute_of_Technology> . ?v4 <http://dbpedia.org/ontology/party> ?result . ?v0 <http://dbpedia.org/property/father> ?v4 . <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/ontology/party> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?partyPPI ?partyProdi ?alumnus ?father ?fathersParty 
WHERE {
  # Find the Partito Popolare Italiano
  ?pPPI dbo:name ""Partito Popolare Italiano""@it .
  
  # Find the party associated with Romano Prodi
  ?prodi foaf:name ""Romano Prodi"" .
  ?prodi dbo:party ?partyProdi .

  # Find MIT alumni and their fathers' political parties
  ?alumnus foaf:alumniOf <http://dbpedia.org/resource/Massachusetts_Institute_of_Technology> ;
            dbo:father ?father .
  
  OPTIONAL { 
    ?father dbo:party ?fathersParty .
  }
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
30,7,val,"Give me the professional in Financier, businessman, vineyard owner, art collector, racehorse owner/breeder and native of the birthplace of Silvia Cohen.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Financier, businessman, vineyard owner, art collector, racehorse owner/breeder""@en . <http://dbpedia.org/resource/Silvia_Cohen> <http://dbpedia.org/ontology/birthPlace> ?v0 . ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
    # Find Silvia Cohen's birthplace
    ?silviaCohen a dbo:Person ;
                 foaf:name ""Silvia Cohen""@en ;
                 dbp:birthPlace ?birthPlace .

    # Find the professional with specified roles and check if they are from the same place
    ?person a dbo:Person ;
            foaf:name ?name ;
            (dbo:occupation dbr:Financier ;
                           dbo:occupation dbr:Businessman ;
                           dbo:occupation dbr:Vineyard_owner ;
                           dbo:occupation dbr:Art_collector ;
                           dbo:occupation dbr:Racehorse_owner) ;
            dbp:birthPlace ?birthPlace .
}
```",3,3,4,2,2,2,2,9,0,0,1,0,0.0,0
314,16,val,"Give me the person deceased at Madrid and commander in the profession, that is an event and a societal event, of Lisa Gavrić.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/restingPlace> <http://dbpedia.org/resource/Madrid> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Lisa_Gavrić> <http://dbpedia.org/property/occupation> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?event WHERE {
  ?person a dbo:Person ;
          foaf:name ""Lisa Gavrić""@en ;
          dbo:deathPlace dbr:Madrid ;
          dbo:occupation ?profession .
  
  FILTER (?profession = dbo:Commander)

  ?event dbo:associatedWith ?person ;
         rdf:type ?eventType .

  FILTER (
    ?eventType = dbo:Event &&
    ?eventType = dbo:SocietalEvent
  )
}
```",3,5,4,2,2,2,3,28,0,0,1,0,0.0,0
994,25,val,"Give me the associated musical artist of Red Tide (band) and band member of the person born, that is a musical artist, as Donald Maynard Dokken.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ""Donald Maynard Dokken""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . <http://dbpedia.org/resource/Red_Tide_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?associatedArtist ?bandMember
WHERE {
  # Find associated artist of Red Tide (band)
  ?redTideBand a dbo:MusicalGroup ;
               foaf:name ""Red Tide"" .
  
  ?redTideBand dbo:associatedBand ?associatedArtist .

  # Find band member who is also a musical artist and born as Donald Maynard Dokken
  ?dokken a dbo:Musician ;
          foaf:name ?name ;
          dbo:birthName ""Donald Maynard Dokken"" .
  
  ?bandMemberOf a dbo:MusicalGroup ;
                dbo:bandMember ?dokken .

  # Ensure the band member is also recognized as a musical artist
  ?bandMemberOf dbo:bandMember ?bandMember .
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
801,24,val,"Give me the associated musical artist of Chris Taylor (music producer) and producer of the work, that is a musical work and a song and a work, of 50 Cent.",SELECT ?result WHERE { <http://dbpedia.org/resource/Chris_Taylor_(music_producer)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v2 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/50_Cent> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v2 <http://dbpedia.org/ontology/producer> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?work WHERE {
  # Find Chris Taylor as a music producer
  ?chrisTaylor a dbo:MusicProducer ;
              foaf:name ""Chris Taylor"" .

  # Find musical works by 50 Cent
  ?work dbo:musicArtist dbr:50_Cent ;
        a dbo:Songs .

  # Ensure Chris Taylor is both an associated artist and a producer of the work
  ?work dbo:associatedMusicalArtist ?chrisTaylor .
  ?work dbo:musicProducer ?chrisTaylor .
}
```",3,6,4,2,2,3,3,71,0,0,1,0,0.0,0
696,11,val,Give me the landmark at elevation of 50 and birth place of the member of Dropkick Murphys.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Dropkick_Murphys> <http://dbpedia.org/ontology/bandMember> ?v2 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/elevation> ""50""^^<http://www.w3.org/2001/XMLSchema#integer> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?landmark ?elevation ?person ?birthPlace WHERE {
  # Part 1: Landmarks at elevation of 50
  {
    ?landmark a dbo:Lighthouse ;
              dbo:elevationAboveSeaLevel ?elevation .
    FILTER (?elevation = ""50""^^xsd:string)
  }
  
  UNION
  
  # Part 2: Birthplace of members of Dropkick Murphys
  {
    ?person dbo:memberOfBand dbr:Dropkick_Murphys ;
            dbo:birthPlace ?birthPlace .
  }
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
617,31,val,"Give me the spouse of Laodice IV and child of the child, that is a royalty, of the successor, that is a royalty, of Antiochus II Theos.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Antiochus_II_Theos> <http://dbpedia.org/ontology/successor> ?v1 . <http://dbpedia.org/resource/Laodice_IV> <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?grandchild WHERE {
  # Step 1: Find Laodice IV's spouse
  ?laodiceIV rdf:type dbo:Monarch ;
             foaf:name ""Laodice IV""@en .
  ?laodiceIV dbo:spouse ?spouse .

  # Step 2: Identify the successor of Antiochus II Theos who is a royalty
  ?antiochusII rdf:type dbo:Monarch ;
               foaf:name ""Antiochus II Theos""@en .
  ?antiochusII dbo:successor ?successor .
  FILTER (?successor rdf:type dbo:Monarch) .

  # Step 3: Find the child of the successor who is a royalty
  ?successor dbo:child ?child .
  FILTER (?child rdf:type dbo:Monarch) .

  # Step 4: Identify the grandchild (child of the child) who is a royalty
  ?child dbo:child ?grandchild .
  FILTER (?grandchild rdf:type dbo:Monarch)
}
```",4,6,5,3,2,3,3,71,0,0,3,0,0.0,0
328,30,val,"Give me the commander in Eastern Front (World War II) and leader of the office, that is a government agency, of Joseph Stalin and awardee of Order of Suvorov.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Order_of_Suvorov> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. <http://dbpedia.org/resource/Joseph_Stalin> <http://dbpedia.org/property/office> ?v1 . <http://dbpedia.org/resource/Eastern_Front_(World_War_II)> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/ontology/leader> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person dbo:rank ?militaryRank .
  ?person dbo:awards ?award .
  ?commanderRole dbo:position ""Commander of the Eastern Front"" ;
                 dbo:heldBy ?person .
  ?governmentAgency dbo:leader ?person ;
                    dbo:headOfState dbr:Joseph_Stalin .
  ?award rdfs:label ""Order of Suvorov""@en .
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
427,23,val,Give me the reference to the name of the party of Michele Pinto.,SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v0 . <http://dbpedia.org/resource/Michele_Pinto> <http://dbpedia.org/ontology/party> ?v2 . ?v2 <http://xmlns.com/foaf/0.1/name> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?partyName WHERE {
  ?person foaf:name ""Michele Pinto""@en .
  ?person dbo:party ?party .
  ?party rdfs:label ?partyName .
  FILTER(LANG(?partyName) = 'en')
}
```",3,3,4,3,1,3,3,71,0,2,8,0.0,0.0,0
328,39,val,"Give me the leader of the office, that is a government agency, of the leader, that is an office holder and a politician, of Gustav Jonson and commander in Eastern Front (World War II).",SELECT ?result WHERE { <http://dbpedia.org/resource/Gustav_Jonson> <http://dbpedia.org/property/leader> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/ontology/leader> ?result . ?v0 <http://dbpedia.org/property/office> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Eastern_Front_(World_War_II)> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?leaderOfOffice WHERE {
  # Step 1: Identify Gustav Jonson's political role and government office
  ?gustavJonson a dbo:Politician ;
                foaf:name ""Gustav Jonson"" .
  
  ?gustavJonson dbo:officeHolder ?office ;
                dbo:positionHeld ?politicalRole .

  # Step 2: Identify the commander of the Eastern Front during World War II
  ?easternFront dbr:Eastern_Front_World_War_II ;
               dbo:commander ?commander .
  
  # Step 3: Find out who leads the office associated with this commander
  ?officeLeader a dbo:GovernmentAgency ;
                dbo:leader ?leaderOfOffice .

  FILTER (?gustavJonson != ?commander) # Ensure Gustav Jonson is not the same as the Eastern Front commander

  # Linking the political role to the government agency office leader
  ?politicalRole dbo:officeHolder ?officeLeader .
}
```",4,7,5,3,2,3,3,71,0,0,1,0,0.0,0
232,34,val,Give me the child of the person born as the birth name of Jon Pertwee and native of London.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/London> . ?v1 <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/property/birthName> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child WHERE {
  # Find Jon Pertwee's birth name
  dbr:Jon_Pertwee dbo:birthName ?birthName .

  # Find a person with the same birth name and native place of London
  ?person dbo:birthName ?birthName .
  ?person dbo:nativePlace dbr:London .

  # Get the child of this person
  ?person dbo:child ?child .
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
281,31,val,Give me the war of the awardee of the award of Jonathon Band and entity in Colony of New Zealand.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Colony_of_New_Zealand> . <http://dbpedia.org/resource/Jonathon_Band> <http://dbpedia.org/property/awards> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war ?award 
WHERE {
  ?award dbo:recipient dbr:Jonathon_Band .
  ?award dbo:relatedTo ?war .
  ?war dbo:location dbr:Colony_of_New_Zealand .
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
9,24,val,Give me the figure known as QUB and alma mater of the awardee of Royal Medal.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/almaMater> ?result . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Medal> . ?result <http://dbpedia.org/property/nickname> ""QUB""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name WHERE {
  ?person dbo:award dbr:Royal_Medal .
  ?person foaf:name ?name .
  ?person dbo:almaMater dbr:Queen's_University_Belfast .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
404,38,val,"Give me the child of the father of Ernest Augustus, Duke of Brunswick and parent of the child, that is a royalty, of Ernest Augustus, Duke of Brunswick.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v3 . <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/ontology/parent> ?v2 . <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?child WHERE {
  ?person rdfs:label ""Ernest Augustus, Duke of Brunswick""@en .
  ?father dbo:father ?person .
  ?father dbo:child ?child .
  FILTER EXISTS { ?child rdf:type dbo:RoyalFamilyMember } .
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
232,33,val,"Give me the actor of the claim to fame, that is a film and a military conflict, of the professional in Actor, narrator and producer and child of Jon Pertwee.","SELECT ?result WHERE { <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/ontology/child> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v3 <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://dbpedia.org/property/occupation> ""Actor, narrator and producer""@en . ?v0 <http://dbpedia.org/ontology/knownFor> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  # Find Jon Pertwee's child who is an actor, narrator, and producer
  dbr:Jon_Pertwee dbo:child dbr:Simon_Williams .
  
  # Identify Simon Williams' claim to fame that involves a film and military conflict
  OPTIONAL { 
    ?work dbo:actor dbr:Simon_Williams .
    ?work dbo:genre dbr:Military_film .
    ?work dbo:type dbr:Film .
  }
  
  # Find the actor associated with this work
  ?work dbo:actor ?actor .
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
281,40,val,Give me the war of the awardee of the award of Jonathon Band and entity in Colony of New Zealand and war of New Zealand Army.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Colony_of_New_Zealand> . ?v1 <http://dbpedia.org/property/awards> ?v2 . <http://dbpedia.org/resource/New_Zealand_Army> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Jonathon_Band> <http://dbpedia.org/property/awards> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?award ?war ?relatedEntity
WHERE {
  # Find awards received by Jonathon Band
  ?person a dbo:Person ;
          foaf:name ""Jonathon Band""@en .
  
  ?person dbo:award ?award .

  OPTIONAL {
    ?award dbo:relatedWar ?war .
  }

  # Wars involving the Colony of New Zealand
  ?colony dbr:Colony_of_New_Zealand a dbo:Country ;
          dbo:participatedIn ?war .

  # Wars involving the New Zealand Army
  ?army dbr:New_Zealand_Army a dbo:MilitaryUnit ;
        dbo:participatedIn ?war .

  OPTIONAL {
    ?award dbo:relatedEntity ?relatedEntity .
  }
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
421,17,val,Give me the person born as Edin Dervišhalidović and native of the birthplace of Samir Bekrić.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . <http://dbpedia.org/resource/Samir_Bekrić> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?result <http://dbpedia.org/property/birthName> ""Edin Dervišhalidović""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person WHERE {
  # Subquery to find the birthplace of Samir Bekrić
  {
    SELECT ?birthPlace WHERE {
      ?samirBekric dbo:birthPlace ?birthPlace .
      FILTER (str(?samirBekric) = ""Samir_Bekrić"")
    }
  }

  # Main query to find Edin Dervišhalidović with the same native place
  ?person foaf:givenName ""Edin"" ;
          foaf:familyName ""Dervišhalidović"" .
  ?person dbo:nativePlace ?birthPlace .
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
827,14,val,"Give me the father of the child, that is a royalty, of the spouse, that is a royalty, of Princess Pauline of Saxe-Weimar-Eisenach.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> ?result . ?v0 <http://dbpedia.org/property/father> ?v2 . ?v2 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Princess_Pauline_of_Saxe-Weimar-Eisenach> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?father WHERE {
  ?princess a dbo:Person ;
            foaf:name ""Princess Pauline of Saxe-Weimar-Eisenach""@en .
  
  ?princess dbo:spouse ?spouse .
  FILTER EXISTS { ?spouse rdf:type dbo:RoyalFamilyMember } .

  ?spouse dbo:child ?royalChild .
  FILTER EXISTS { ?royalChild rdf:type dbo:RoyalFamilyMember } .

  ?royalChild dbo:father ?father .
}
```",3,5,4,3,1,3,2,20,0,0,1,0,0.0,0
485,14,val,"Give me the birth place of the awardee, that is a writer and a poet, of Eric Gregory Award and entity in United Kingdom.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Poet>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Eric_Gregory_Award> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>. ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX owl: <http://www.w3.org/2002/07/owl#>

SELECT ?birthPlace WHERE {
  ?person dbo:award ?award .
  ?award rdfs:label ""Eric Gregory Award""@en .
  
  ?person rdf:type ?type1 .
  ?person rdf:type ?type2 .
  FILTER (
    (EXISTS { ?type1 rdfs:subClassOf* dbo:Writer . } &&
     EXISTS { ?type2 rdfs:subClassOf* dbo:Poet . }) ||
    (EXISTS { ?type2 rdfs:subClassOf* dbo:Writer . } &&
     EXISTS { ?type1 rdfs:subClassOf* dbo:Poet . })
  ) .
  
  ?person dbo:nationality ?nationality .
  ?nationality rdfs:label ""United Kingdom""@en .

  ?person dbo:birthPlace ?birthPlace .
}
```",3,5,4,2,2,2,3,28,0,0,5,0,0.0,0
404,18,val,"Give me the child of Ernest Augustus, Crown Prince of Hanover and parent of Prince Ernest Augustus of Hanover (born 1914) and spouse of Princess Victoria Louise of Prussia.","SELECT ?result WHERE { <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Prince_Ernest_Augustus_of_Hanover_(born_1914)> . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ernest_Augustus,_Crown_Prince_of_Hanover> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  ?child dbp:father ?person .
  ?child rdfs:label ""Prince Ernest Augustus of Hanover""@en .
  
  ?person dbo:spouse ?spouse .
  ?spouse rdfs:label ""Princess Victoria Louise of Prussia""@en .

  ?parent dbp:son ?person .
  ?parent rdfs:label ""Ernest Augustus, Crown Prince of Hanover""@en .
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
767,26,val,Give me the alma mater of the administration of the reference to George Kilbon Nash.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/almaMater> ?result . ?v1 <http://xmlns.com/foaf/0.1/name> ""George Kilbon Nash""@en . ?v2 <http://dbpedia.org/property/governor> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?university WHERE {
  dbr:George_Kilbon_Nash dbo:almaMater ?university .
}
```",3,3,4,3,1,3,3,71,0,0,6,0,0.0,0
915,11,val,"Give me the father of Lizzie Spaulding and resident of the birthplace, that is a settlement, of Stephen Verona.",SELECT ?result WHERE { <http://dbpedia.org/resource/Lizzie_Spaulding> <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Stephen_Verona> <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/residence> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  # Find the father of Lizzie Spaulding
  ?lizzie a dbr:Lizzie_Spaulding ;
          dbo:father ?father .

  # Find the birthplace of Stephen Verona that is a settlement
  ?stephen a dbr:Stephen_Verona ;
           dbo:birthPlace ?birthPlace .
  
  FILTER (dbo:Settlement ?birthPlace) 

  # Ensure the father resides in this birthplace
  ?father dbo:residence ?birthPlace .
}
```",3,4,4,2,2,3,2,20,0,0,1,0,0.0,0
617,40,val,"Give me the spouse of Laodice IV and child of the child, that is a royalty, of the successor, that is a royalty, of Antiochus II Theos and parent of Nysa (wife of Pharnaces I of Pontus).",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Antiochus_II_Theos> <http://dbpedia.org/ontology/successor> ?v2 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Nysa_(wife_of_Pharnaces_I_of_Pontus)> . <http://dbpedia.org/resource/Laodice_IV> <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://dbpedia.org/property/father> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse ?successorChild ?royalDescendant WHERE {
  # Step 1: Find Laodice IV's spouse
  ?laodiceIV a dbo:Person ;
             rdfs:label ""Laodice IV""@en .
  
  ?laodiceIV dbo:spouse ?spouse .

  # Step 2: Find the child of Laodice IV's spouse who is a successor and royalty
  ?spouse dbo:child ?successorChild .
  ?successorChild dbo:royalty true .

  # Step 3: Ensure this successor has a royal descendant
  ?successorChild dbo:child ?royalDescendant .
  ?royalDescendant dbo:royalty true .

  # Step 4: Check the parentage connection to Nysa
  ?nysa a dbo:Person ;
        rdfs:label ""Nysa (wife of Pharnaces I of Pontus)""@en .
  
  ?royalDescendant dbo:parent ?nysa .
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
492,32,val,"Give me the person decedent at the work of US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite and commander in the war, that is a military conflict and an event, of Frédéric-Georges Herr.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Frédéric-Georges_Herr> <http://dbpedia.org/ontology/battle> ?v3 . ?v1 <http://dbpedia.org/property/author> ""US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite""@en . ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?person WHERE {
  ?satterthwaite dbo:positionHeldBy ?position .
  ?position foaf:name ""US Assistant Secretary of State for African Affairs""@en .
  ?decedent dbo:decedent ?satterthwaite .

  ?herr dbo:commanderOf ?conflict .
  ?conflict a dbo:MilitaryConflict ;
           dbo:participant ?person .

  FILTER (?decedent = ?person)
}
```",4,6,5,2,2,3,3,71,0,0,1,0,0.0,0
838,11,val,"Give me the band of the band member, that is an artist and a musical artist, of YU Grupa and band member of Kerber.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Kerber> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/YU_Grupa> . },"```sparql
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT DISTINCT ?bandName WHERE {
  ?person dbp:bandMember <http://dbpedia.org/resource/YU_Grupa> .
  ?person dbp:bandMember <http://dbpedia.org/resource/Kerber_(band)> .
  ?person dbo:genre ?band .
  ?band rdfs:label ?bandName .
  FILTER (LANG(?bandName) = 'en')
}
```",3,5,4,2,2,3,2,20,0,0,1,0,0.0,0
659,27,val,"Give me the military force of the force, that is a societal event and an event and a military conflict, of the reference to Rutger Jan Schimmelpenninck.","SELECT ?result WHERE { ?v1 <http://xmlns.com/foaf/0.1/name> ""Rutger Jan Schimmelpenninck""@en . ?v2 <http://dbpedia.org/ontology/commander> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce
WHERE {
  # Find the reference related to Rutger Jan Schimmelpenninck
  dbr:Rutger_Jan_Schimmelpenninck dbo:reference ?relatedEntity .

  # Ensure the entity is a military force and part of another force
  ?relatedEntity a dbo:MilitaryForce ;
                dbo:partOf ?militaryForce .
  
  # Ensure the entity is also classified as a societal event, general event, and military conflict
  ?militaryForce a dbo:SocietalEvent , dbo:Event , dbo:MilitaryConflict .
}
```",3,6,4,3,1,3,3,71,0,0,1127,0,0.0,0
767,37,val,Give me the alma mater of the administration of the reference to George Kilbon Nash and reference to .,"SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://xmlns.com/foaf/0.1/name> """"@en . ?v3 <http://dbpedia.org/property/governor> ?v0 . ?v0 <http://xmlns.com/foaf/0.1/name> ""George Kilbon Nash""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?almaMater WHERE {
  dbr:George_Kilbon_Nash dbo:almaMater ?almaMater .
}
```",4,4,5,3,2,3,3,71,0,0,2,0,0.0,0
994,36,val,"Give me the associated musical artist of S.A. Slayer and band member of the person born, that is a musical artist, as the persona of Don Dokken.",SELECT ?result WHERE { <http://dbpedia.org/resource/S.A._Slayer> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Don_Dokken> <http://xmlns.com/foaf/0.1/givenName> ?v3 . ?v0 <http://dbpedia.org/property/birthName> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?associatedArtist WHERE {
  # Jeff Hanneman as S.A. Slayer
  dbr:Jeff_Hanneman dbo:stageName ""S.A. Slayer"" .
  
  # Band membership of Jeff Hanneman
  dbr:Slayer dbo:member dbr:Jeff_Hanneman .

  # Don Dokken and his band members
  ?dokkenBandMember dbo:bandMemberOf dbr:Dokken ;
                   a dbo:MusicalArtist ;
                   dbo:birthPlace ?place .
  
  # Find the common link between Jeff Hanneman's association and Dokken's band member
  ?associatedArtist dbo:member dbr:Slayer ;
                    dbo:bandMemberOf ?dokkenBandMember .

}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
981,15,val,"Give me the birth place of Novia Indriani Mamuaja and entity in the region of the time zone in Salak, North Sumatra.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/timeZone> ?v0 . <http://dbpedia.org/resource/Salak,_North_Sumatra> <http://dbpedia.org/ontology/timeZone> ?v0 . <http://dbpedia.org/resource/Novia_Indriani_Mamuaja> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/country> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace ?entityInSalak WHERE {
  # Part 1: Birth place of Novia Indriani Mamuaja
  OPTIONAL { 
    dbr:Novia_Indriani_Mamuaja dbo:birthPlace ?birthPlace .
  }

  # Part 2: Entity in the region of Salak, North Sumatra
  OPTIONAL {
    ?entityInSalak dbo:location dbr:Salak_(district) .
  }
}
```",4,4,5,3,2,3,2,20,0,0,1,0,0.0,0
659,34,val,"Give me the commander in the force of the native, that is an office holder, of Kingdom of Ireland and military force of Napoleonic Wars.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Napoleonic_Wars> . ?v2 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Kingdom_of_Ireland> . ?v1 <http://dbpedia.org/ontology/commander> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?office ?militaryRole WHERE {
  VALUES ?person { dbr:Arthur_Wellesley_1st_Duke_of_Wellington }
  
  # Office holder in the Kingdom of Ireland
  OPTIONAL {
    ?person dbo:officeHolderOf dbr:Kingdom_of_Ireland .
    ?person dbo:positionHeld ?office .
  }

  # Military role during Napoleonic Wars
  OPTIONAL {
    ?person dbo:militaryCommanderOf dbr:Napoleonic_Wars .
    ?person dbo:militaryRole ?militaryRole .
  }
}
```",4,5,5,3,2,3,3,71,0,1,34,0.0,0.0,0
184,37,val,"Give me the child of the child of the parent, that is a royalty, of Archduke Ladislaus Philipp of Austria and parent of Archduchess Ilona of Austria.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Ilona_of_Austria> . <http://dbpedia.org/resource/Archduke_Ladislaus_Philipp_of_Austria> <http://dbpedia.org/ontology/parent> ?v0 . ?v3 <http://dbpedia.org/property/father> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?grandchild WHERE {
  ?ladislaus a dbo:Person ;
             foaf:name ""Archduke Ladislaus Philipp of Austria""@en .
  
  ?ladislausChild dbo:childOf ?ladislaus .
  ?ladislausGrandchild dbo:childOf ?ladislausChild .

  ?ilonaParent dbo:parentOf <http://dbpedia.org/resource/Ilona_of_Austria> ;
               dbo:child ?grandchild .

  FILTER (?grandchild = ?ladislausGrandchild)
  
  OPTIONAL { ?grandchild dbo:royalty true . }
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
182,17,val,Give me the entity in Sri Lanka and war of the work of Gotabhaya Rajapaksa.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Gotabhaya_Rajapaksa> . ?v1 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Sri_Lanka> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?work WHERE {
  ?person a dbo:Person ;
          foaf:name ""Gotabhaya Rajapaksa""@en .
  
  ?person dbo:nationality dbr:Sri_Lanka .

  OPTIONAL { 
    ?person dbo:role ?role .
    FILTER(CONTAINS(LCASE(?role), ""war"") || CONTAINS(LCASE(?role), ""sri lankan civil war""))
  }

  OPTIONAL {
    ?work dbo:performer ?person ;
          dbo:location dbr:Sri_Lanka .
  }
}
```",3,3,4,2,2,2,3,28,0,0,5,0,0.0,0
161,36,val,"Give me the commander in the force, that is an event, of the figure known as El Director and military force of Rif War.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/ontology/commander> ?v0 . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Rif_War> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://xmlns.com/foaf/0.1/nick> ""El Director""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander
WHERE {
  ?event a dbo:MilitaryConflict ;
         rdfs:label ""Rif War""@en .
  
  ?militaryForce dbo:participatedIn ?event ;
                 dbo:leader ?commander .

  ?commander rdfs:label ""Francisco Franco""@en .
}
```",4,5,5,3,2,3,3,71,0,0,12,0,0.0,0
547,33,val,Give me the resting place of the actor of the show with Emily Richard and resting place of James Burton (Egyptologist).,SELECT ?result WHERE { <http://dbpedia.org/resource/James_Burton_(Egyptologist)> <http://dbpedia.org/ontology/restingPlace> ?result . ?v3 <http://dbpedia.org/ontology/restingPlace> ?result . ?v0 <http://dbpedia.org/property/starring> ?v3 . ?v0 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emily_Richard> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actorRestingPlace ?egyptologistRestingPlace WHERE {
  # Resting place of Claire Foy (actor from ""The Crown"")
  OPTIONAL { 
    dbr:Claire_Foy dbo:deathPlace ?actorRestingPlace .
  }
  
  # Resting place of James Burton (Egyptologist)
  OPTIONAL { 
    dbr:James_Burton_(Egyptologist) dbo:deathPlace ?egyptologistRestingPlace .
  }
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
701,40,val,Give me the parent of Henuttawy (19th dynasty) and spouse of Ramesses II and parent of the child of the spouse of Amun-her-khepeshef.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Ramesses_II> . <http://dbpedia.org/resource/Amun-her-khepeshef> <http://dbpedia.org/ontology/spouse> ?v2 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Henuttawy_(19th_dynasty)> . ?v2 <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commonEntity
WHERE {
  # Parent of Henuttawy (19th dynasty)
  ?henuttawy dbo:name ""Henuttawy""@en .
  ?henuttawy dbo:dynasty ""19th dynasty""@en .
  ?parent dbo:child ?henuttawy .

  # Spouse of Ramesses II
  ?ramessesII dbo:name ""Ramesses II""@en .
  ?spouse dbo:spouse ?ramessesII .
  
  # Child of the spouse of Amun-her-khepeshef
  ?amunHerKhepeshef dbo:name ""Amun-her-khepeshef""@en .
  ?spouse2 dbo:spouse ?amunHerKhepeshef .
  ?child dbo:parent ?spouse2 .

  # Common entity satisfying all conditions
  FILTER (?parent = ?spouse)
  FILTER (?parent = ?spouse2)
  
  BIND(?parent AS ?commonEntity)
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
994,37,val,"Give me the band member of Don Dokken and associated musical artist of the band member, that is a band and a group and an organisation, of the band, that is an organisation, of Fredrik Thordendal.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Fredrik_Thordendal> . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Don_Dokken> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandMember ?associatedBand WHERE {
  # Step 1: Find band members of Don Dokken
  ?donDokken a dbo:MusicalArtist ;
             foaf:name ""Don Dokken"" .
  
  ?donDokken dbo:member ?bandMember .

  # Step 2: For each member, find associated musical artists that are bands, groups, and organisations
  ?bandMember dbo:associatedBand ?associatedBand .
  ?associatedBand a dbo:MusicalArtist ;
                  rdf:type dbr:Band ;
                  rdf:type dbr:Group ;
                  rdf:type dbr:Organisation .

  # Step 3: Check if the associated band is an organisation of Fredrik Thordendal
  ?fredrikThordendal a dbo:Person ;
                     foaf:name ""Fredrik Thordendal"" .
  
  ?associatedBand dbo:organisation ?fredrikThordendal .
}
```",4,8,5,3,2,3,3,71,0,0,1,0,0.0,0
421,13,val,Give me the band member of the awardee of [[#Awards and nominations and native of Socialist Federal Republic of Yugoslavia.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://dbpedia.org/property/awards> ""[[#Awards and nominations""@en . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Socialist_Federal_Republic_of_Yugoslavia> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandMember WHERE {
  ?person dbo:birthPlace dbr:Socialist_Federal_Republic_of_Yugoslavia .
  ?person dbo:award ?award .
  
  OPTIONAL { 
    ?person dbo:memberOfBand ?band .
    ?bandMember dbo:memberOfBand ?band .
    FILTER(?bandMember != ?person)
  }
}
```",3,3,4,2,2,2,3,28,0,0,2,0,0.0,0
378,38,val,Give me the claim to fame of the commander in Great Siege of Gibraltar and war of the commander in Peninsular War.,SELECT ?result WHERE { <http://dbpedia.org/resource/Great_Siege_of_Gibraltar> <http://dbpedia.org/ontology/commander> ?v2 . <http://dbpedia.org/resource/Peninsular_War> <http://dbpedia.org/ontology/commander> ?v3 . ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/ontology/knownFor> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?fame WHERE {
  VALUES (?event1 ?event2) { 
    (dbr:Great_Siege_of_Gibraltar dbr:Peninsular_War)
  }
  
  # For the Great Siege of Gibraltar
  OPTIONAL {
    ?person dbo:wikiPageDisambiguates ?disambiguation .
    ?disambiguation rdfs:label ""George Augustus Eliott""@en .
    ?person dbo:notableFor ?fame1 .
    FILTER(CONTAINS(LCASE(?fame1), LCASE(""Great Siege of Gibraltar"")))
  }
  
  # For the Peninsular War
  OPTIONAL {
    ?person dbo:wikiPageDisambiguates ?disambiguation2 .
    ?disambiguation2 rdfs:label ""Arthur Wellesley, 1st Duke of Wellington""@en .
    ?person dbo:notableFor ?fame2 .
    FILTER(CONTAINS(LCASE(?fame2), LCASE(""Peninsular War"")))
  }
  
  BIND(CONCAT(IF(BOUND(?fame1), ?fame1, """"), "" "", IF(BOUND(?fame2), ?fame2, """")) AS ?fame)
}
ORDER BY ?person
```",4,4,5,2,2,3,3,71,0,1,2,0.0,0.0,0
626,13,val,"Give me the commander in the force, that is a military conflict, of the commander in Battle of Paris (1814).",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/commander> ?v0 . <http://dbpedia.org/resource/Battle_of_Paris_(1814)> <http://dbpedia.org/ontology/commander> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?conflictCommander WHERE {
  # Find the commander of the Battle of Paris (1814)
  dbr:Battle_of_Paris_(1814) dbo:commander ?battleCommander .
  
  # Find another military conflict involving this commander
  ?otherConflict dbo:commander ?battleCommander ;
                 a dbo:MilitaryConflict .

  # Get the commander of that other military conflict
  ?otherConflict dbo:commander ?conflictCommander .
}
```",3,4,4,3,1,3,2,20,0,0,364,0,0.0,0
356,11,val,Give me the player in the successor of 2014 Sacramento Republic FC season and team of Mark Briggs.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Mark_Briggs> . <http://dbpedia.org/resource/2014_Sacramento_Republic_FC_season> <http://dbpedia.org/ontology/successor> ?v2 . ?v2 <http://dbpedia.org/ontology/team> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?player WHERE {
  # Find Sacramento Republic FC's league in 2015
  dbr:Sacramento_Republic_FC dbo:leagueMembership [
    dbo:endTime ?endTime ;
    dbo:member [
      a dbo:SportsTeam ;
      rdfs:label ?teamLabel .
    ]
  ] .

  FILTER (YEAR(?endTime) = 2014 || YEAR(?endTime) > 2014) .

  # Find Mark Briggs' team in the same league
  dbr:Mark_Briggs dbo:playsFor [
    a dbo:SportsTeam ;
    rdfs:label ?teamLabel .
  ] .

  FILTER (?teamLabel = ?teamLabel2) .

  # Get players from that team
  ?player dbo:playsFor ?team .
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
9,41,val,"Give me the figure known as QUB and alma mater of the mayor, that is a politician, of Northern Ireland Forum and alma mater of the awardee of Royal Medal.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Medal> . <http://dbpedia.org/resource/Northern_Ireland_Forum> <http://dbpedia.org/property/leader> ?v2 . ?v4 <http://dbpedia.org/ontology/almaMater> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://dbpedia.org/property/nickname> ""QUB""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?person WHERE {
  ?person dbo:almaMater dbr:Queen's_University_Belfast .
  
  # Find the politician who was mayor of Northern Ireland Forum
  OPTIONAL { 
    ?mayor dbo:almaMater dbr:Queen's_University_Belfast ;
           dbo:occupation dbr:Politician ;
           dbo:positionHeld dbr:Northern_Ireland_Forum_Mayor .
    FILTER (?person = ?mayor)
  }
  
  # Find the awardee of Royal Medal
  OPTIONAL { 
    ?awardee dbo:almaMater dbr:Queen's_University_Belfast ;
             dbo:honoraryTitle dbr:Royal_Medal .
    FILTER (?person = ?awardee)
  }

  # Ensure both conditions are met
  VALUES ?condition {
    (true true) 
  }
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
54,33,val,Give me the parent of the child of the parent of Thado Minsaw of Prome and child of Thinkhaya of Pagan.,SELECT ?result WHERE { <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?result . ?v3 <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?parentOfChild
WHERE {
  ?thadoMinsaw rdfs:label ""Thado Minsaw""@en .
  ?thinkhaya rdfs:label ""Thinkhaya of Pagan""@en .

  ?thadoParent dbo:child ?thadoMinsaw .
  ?thadoParent dbo:parent ?grandparentOfThado .

  ?thinkChild dbo:parent ?thinkhaya .
  
  ?targetChild dbo:parent ?thadoMinsaw ;
               dbo:parent ?thinkChild .

  ?parentOfTargetChild dbo:child ?targetChild .
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
16,34,val,Give me the person born as Georgeanne Marie Rice and spouse of the person born as the birth name of Ted McGinley.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/birthName> ""Georgeanne Marie Rice""@en . ?v1 <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/property/birthName> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person WHERE {
  ?georgeanne a dbo:Person ;
              foaf:givenName ""Georgeanne"" ;
              foaf:surname ""Rice"" .
  
  ?ted a dbo:Person ;
       dbo:birthName ""Ted McGinley"" .

  FILTER (?georgeanne != ?ted)

  OPTIONAL {
    ?georgeanne dbo:spouse ?ted .
  }

  OPTIONAL {
    ?ted dbo:spouse ?person .
    FILTER(?person = ?georgeanne)
  }
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
356,14,val,"Give me the team of the native, that is a soccer player and a soccer manager, of the birth place, that is English and a settlement, of Gary Williams (footballer, born 1960).","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v0 <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/manager> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Gary_Williams_(footballer,_born_1960)> <http://dbpedia.org/ontology/birthPlace> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?team WHERE {
  # Find Gary Williams (footballer, born 1960)
  dbr:Gary_Williams_(footballer,_born_1960) dbo:birthPlace ?birthPlace .
  
  # Ensure the birthplace is an English settlement
  ?birthPlace a dbo:Settlement ;
              dbp:country ""England""@en .

  # Find teams associated with this birthplace
  ?team dbo:location ?birthPlace ;
        a dbo:Soccer_Club .

  # Check if Gary Williams has been both a player and manager for the team
  OPTIONAL { dbr:Gary_Williams_(footballer,_born_1960) dbo:playerFor ?team . }
  OPTIONAL { dbr:Gary_Williams_(footballer,_born_1960) dbo:managerOf ?team . }

  FILTER EXISTS { ?team dbo:playerFor dbr:Gary_Williams_(footballer,_born_1960) }
  FILTER EXISTS { ?team dbo:managerOf dbr:Gary_Williams_(footballer,_born_1960) }
}
```",3,7,4,3,1,3,2,20,0,0,46,0,0.0,0
617,35,val,"Give me the parent of the child of Antiochus (son of Antiochus III the Great) and child of the child, that is a royalty, of Seleucus II Callinicus.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v2 . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seleucus_II_Callinicus> . <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/child> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parentOfAntiochus ?grandchildParent WHERE {
  # Step 1: Identify Antiochus (son of Antiochus III the Great)
  ?antiochus dbo:father dbr:Antiochus_III_the_Great .
  
  # Step 2: Find the parent of this Antiochus
  ?parentOfAntiochus dbo:child ?antiochus .

  # Step 3: Identify Seleucus II Callinicus's child who is royalty
  ?seleucusChild dbo:father dbr:Seleucus_II_Callinicus .
  ?seleucusChild a dbo:Monarch .

  # Step 4: Determine the grandchild (child of the child) of this royal child
  ?grandchild dbo:parent ?seleucusChild .
  ?grandchild a dbo:Monarch .

  # Step 5: Find the parent of this grandchild
  ?grandchildParent dbo:child ?grandchild .
}
```",4,5,5,2,2,3,3,71,0,0,2,0,0.0,0
232,39,val,"Give me the native of the residence, that is a settlement and British, of the native, that is a politician and an office holder, of France and actor of Dog Soldiers (film).",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/France> . ?v0 <http://dbpedia.org/property/residence> ?v1 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . <http://dbpedia.org/resource/Dog_Soldiers_(film)> <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?native 
WHERE {
  # Find actor of ""Dog Soldiers""
  ?actor dbo:starringIn dbr:Dog_Soldiers_(film) .
  
  # Ensure the actor is a politician and office holder from France
  ?actor dbo:nationality dbr:France ;
         dbo:occupation dbr:Politician ;
         dbo:officeHolderOf ?office .

  # Find their place of residence
  ?actor dbp:residence ?residence .
  
  # Ensure the residence is a settlement in Britain
  ?residence dbo:country dbr:United_Kingdom ;
             a dbo:Settlement .

  # Identify the native of this British settlement
  ?native dbo:nativePlace ?residence .
}
```",4,8,5,3,2,3,3,71,0,0,1,0,0.0,0
626,11,val,"Give me the awardee of Order of St. Andrew and commander in the force, that is a military conflict, of Alexander I of Russia.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Alexander_I_of_Russia> . ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Order_of_St._Andrew> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?conflict WHERE {
  ?person dbo:awardedBy dbr:Order_of_St._Andrew ;
          dbo:commanderOf ?conflict .
  
  FILTER (?person = dbr:Aleksandr_I_of_Russia)
}
```",3,4,4,2,2,3,2,20,0,0,9,0,0.0,0
547,22,val,Give me the resting place of James Burton (Egyptologist) and resting place of the awardee of Knight Grand Cross of the Order of St Michael and St George.,SELECT ?result WHERE { <http://dbpedia.org/resource/James_Burton_(Egyptologist)> <http://dbpedia.org/ontology/restingPlace> ?result . ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_St_Michael_and_St_George> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person ?burialPlace
WHERE {
  # Find the burial place of James Burton, the Egyptologist
  { 
    SELECT ?person WHERE {
      ?person dbo:occupation dbr:Egyptology.
      ?person rdfs:label ""James Burton (Egyptologist)""@en.
    }
    BIND(?person AS ?burialPerson)
  }

  # Find the burial place of James Burton
  OPTIONAL {
    ?burialPerson dbo:burialPlace ?burialPlace1.
  }

  # Find individuals who have been awarded Knight Grand Cross of the Order of St Michael and St George
  UNION
  { 
    SELECT ?person WHERE {
      ?person dbo:award dbr:Knight_Grand_Cross_of_the_Order_of_St_Michael_and_St_George.
    }
    BIND(?person AS ?awardee)
  }

  # Find the burial place of these awardees
  OPTIONAL {
    ?awardee dbo:burialPlace ?burialPlace2.
  }

  FILTER (?burialPlace1 != dbr:Unknown OR ?burialPlace2 != dbr:Unknown)
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
701,42,val,Give me the parent of Henuttawy (19th dynasty) and spouse of the father of Merneptah and parent of the child of Nefertari.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Merneptah> <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Henuttawy_(19th_dynasty)> . <http://dbpedia.org/resource/Nefertari> <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/ontology/spouse> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Parent of Henuttawy (19th dynasty)
  ?henuttawy dbo:parent dbr:Henuttawy_(daughter_of_Ramses_II) .
  ?henuttawy dbo:birthPlace dbr:Egypt .

  # Spouse of the father of Merneptah
  ?merneptah dbo:father ?ramessesII .
  ?ramessesII dbo:spouse ?person .

  # Parent of the child of Nefertari
  ?khaemwaset dbo:parent dbr:Nefertari .
  ?khaemwaset dbo:parent ?person .
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
959,18,val,Give me the member of University of Tsukuba and native of Japan and manager of 2013 Júbilo Iwata season.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Japan> . ?result <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/University_of_Tsukuba> . <http://dbpedia.org/resource/2013_Júbilo_Iwata_season> <http://dbpedia.org/ontology/manager> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
    ?person dbo:almaMater dbr:University_of_Tsukuba .
    ?person dbo:nationality dbr:Japan .
    ?person dbo:managerOf [
        dbo:team dbr:Júbilo_Iwata ;
        dbo:startDate ?start ;
        dbo:endDate ?end
    ] .
    FILTER (?start <= ""2013-01-01""^^xsd:date && (?end >= ""2013-01-01""^^xsd:date || NOT EXISTS { ?person dbo:endDate ?end }))
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
404,20,val,"Give me the spouse of Princess Victoria Louise of Prussia and parent of the child, that is a royalty, of Ernest Augustus, Duke of Brunswick.","SELECT ?result WHERE { <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
    # Find spouse of Princess Victoria Louise of Prussia
    ?princess a dbo:Person ;
              rdfs:label ""Princess Victoria Louise of Prussia""@en .
    
    ?princess dbo:spouse ?spouse .

    # Find children of Ernest Augustus, Duke of Brunswick who are royalty
    ?duke a dbo:Person ;
          rdfs:label ""Ernest Augustus, Duke of Brunswick""@en .
    
    ?duke dbo:child ?royalChild .
    ?royalChild a dbo:Person ;
                dbp:title ?title .
    FILTER(CONTAINS(LCASE(?title), ""prince"") || CONTAINS(LCASE(?title), ""princess""))

    # Ensure the spouse is also parent of this royal child
    ?spouse dbo:parent ?royalChild .
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
232,26,val,"Give me the actor of the claim to fame, that is a film and a military conflict, of the professional in Actor, narrator and producer.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/occupation> ""Actor, narrator and producer""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/starring> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://dbpedia.org/ontology/knownFor> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  ?person dbo:occupationActor dbr:Category:American_male_actors .
  ?person dbo:occupationNarrator dbr:Category:Narrators .
  ?person dbo:occupationProducer dbr:Category:Film_producers .

  ?film dbo:starring ?actor .
  ?film dbo:genre dbr:Military_film .
  
  ?militaryEvent dbo:depictedIn ?film .
  ?militaryEvent a dbo:MilitaryConflict .

  FILTER(?person = dbr:Tom_Hanks) # Assuming Tom Hanks as the professional based on common knowledge
}
```",3,5,4,3,1,3,3,71,0,0,3,0,0.0,0
281,21,val,Give me the war of the awardee of Knight Grand Cross of the Order of the Bath and war of New Zealand Army.,SELECT ?result WHERE { <http://dbpedia.org/resource/New_Zealand_Army> <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_the_Bath> . ?v1 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?awardee ?war
WHERE {
  # Find awardees of Knight Grand Cross of the Order of the Bath
  ?order dbo:recipient ?awardee .
  ?order rdfs:label ""Knight Grand Cross of the Order of the Bath""@en .

  # Find wars involving these awardees
  ?awardee dbp:participatedInWar ?warAwardee .

  # Find wars involving the New Zealand Army
  ?nzArmy dbp:participatedInWar ?warNZ .
  ?nzArmy rdfs:label ""New Zealand Army""@en .

  # Check for overlap in wars
  FILTER (?warAwardee = ?warNZ)
}
```",3,3,4,2,2,3,3,71,0,0,9,0,0.0,0
488,41,val,"Give me the administration of Emperor Go-Yōzei and birth place of the commander in Boshin War and death place of the father, that is a politician, of Yūki Hideyasu.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Emperor_Go-Yōzei> . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Boshin_War> <http://dbpedia.org/ontology/commander> ?v2 . ?v4 <http://dbpedia.org/ontology/deathPlace> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Yūki_Hideyasu> <http://dbpedia.org/property/father> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?administration ?birthplace ?deathplace
WHERE {
  # Administration of Emperor Go-Yōzei
  dbr:Emperor_Go-Yōzei dbo:reign ?administration .

  # Birthplace of a commander in the Boshin War (e.g., Saigō Takamori)
  OPTIONAL { 
    dbr:Saigō_Takamori dbo:birthPlace ?birthplace .
  }

  # Death place of Yūki Muneyasu, father of Yūki Hideyasu
  OPTIONAL {
    dbr:Yūki_Muneyasu dbo:deathPlace ?deathplace .
  }
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
767,31,val,"Give me the entity in the administration, that is a settlement, of the writer of Where It's At (Dustin Lynch album) and alma mater of Carl L. Nippert.",SELECT ?result WHERE { <http://dbpedia.org/resource/Where_It's_At_(Dustin_Lynch_album)> <http://dbpedia.org/property/writer> ?v1 . <http://dbpedia.org/resource/Carl_L._Nippert> <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://dbpedia.org/ontology/state> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://dbpedia.org/property/leaderParty> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?entity WHERE {
  # Find the writer of ""Where It's At"" by Dustin Lynch
  ?song dbo:lyricsBy ?writer .
  FILTER (str(?song) = ""Where_It's_At_(Dustin_Lynch_song)"")

  # Get the administration related to the writer
  ?writer dbo:birthPlace ?admin .

  # Find Carl L. Nippert's alma mater
  ?nippert dbo:almaMater ?almaMater .
  FILTER (str(?nippert) = ""Carl_L._Nippert"")

  # Get the settlement related to the alma mater
  ?almaMater dbo:settlement ?settlement .

  # Find a common entity that is both an administration and a settlement
  ?entity rdf:type dbo:AdministrativeRegion .
  FILTER (?admin = ?entity || ?settlement = ?entity)
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
994,34,val,Give me the band member of Don Dokken and associated musical artist of the associated musical artist of the reference to Watchtower.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Don_Dokken> . ?v3 <http://xmlns.com/foaf/0.1/name> ""Watchtower""@en . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?associatedArtistOfMember WHERE {
  # Step 1: Find the artist associated with ""Watchtower""
  ?song dbo:title ""Watchtower""@en .
  ?song dbo:artist ?watchtowerArtist .

  # Step 2: Find the associated musical artist of this artist
  ?watchtowerArtist dbo:associatedMusicalArtist ?intermediateArtist .

  # Step 3: Identify band members of Don Dokken's band (Dokken)
  dbr:Don_Dokken dbo:bandMember ?dokkenBandMember .

  # Step 4: Find the associated musical artist of this band member
  ?dokkenBandMember dbo:associatedMusicalArtist ?associatedArtistOfMember .
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
251,12,val,Give me the death place of Laura Mancinelli and location of Battle of Marengo and administration of Forza Italia (2013).,SELECT ?result WHERE { <http://dbpedia.org/resource/Laura_Mancinelli> <http://dbpedia.org/ontology/deathPlace> ?result . ?result <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Forza_Italia_(2013)> . <http://dbpedia.org/resource/Battle_of_Marengo> <http://dbpedia.org/ontology/place> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?deathPlace WHERE {
  dbr:Laura_Mancinelli dbo:deathPlace ?deathPlace .
}

UNION

SELECT ?location WHERE {
  dbr:Battle_of_Marengo dbo:location ?location .
}

UNION

SELECT ?administration WHERE {
  ?party a dbo:PoliticalParty ;
         rdfs:label ""Forza Italia""@en ;
         dbo:memberOf ?administration .
  FILTER(YEAR(?administration) = 2013)
}
```",3,3,4,1,3,2,3,28,0,0,1,0,0.0,0
659,33,val,"Give me the commander in the war, that is an event and a military conflict, of the figure known, that is a military unit and an organisation, as 'Polish Horse' and commander in German campaign of 1813.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/German_campaign_of_1813> <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://dbpedia.org/property/nickname> ""'Polish Horse'""@en . ?v0 <http://dbpedia.org/ontology/battle> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?war ?commander WHERE {
  ?unit rdfs:label 'Polish Horse'@en .
  ?unit dbo:participatedIn ?campaign .
  ?campaign rdfs:label 'German campaign of 1813'@en .
  ?unit dbp:commander ?commander .
  ?campaign dbo:partOf ?war .
  FILTER (isLiteral(?war))
}
```",4,8,5,3,2,3,3,71,0,0,30,0,0.0,0
547,42,val,Give me the resting place of the child of James Burton (property developer) and resting place of the awardee of Knight Grand Cross of the Order of St Michael and St George and resting place of Simon Cadell.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_St_Michael_and_St_George> . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/James_Burton_(property_developer)> <http://dbpedia.org/ontology/child> ?v2 . <http://dbpedia.org/resource/Simon_Cadell> <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?childRestingPlace ?knightRestingPlace ?simonCadellRestingPlace WHERE {
  # Resting place of the child of James Burton (property developer)
  ?jamesBurton a dbo:Person ;
               foaf:name ""James Burton"" ;
               dbp:occupation ""Property Developer"" .
  
  ?child dbo:parent ?jamesBurton .
  ?child dbo:placeOfBurial ?childRestingPlace .

  # Resting place of the awardee of Knight Grand Cross of the Order of St Michael and St George
  ?knight a dbo:Person ;
          dbo:title ""Knight Grand Cross of the Order of St Michael and St George"" .
  
  ?knight dbo:placeOfBurial ?knightRestingPlace .

  # Resting place of Simon Cadell
  ?simonCadell a dbo:Person ;
               foaf:name ""Simon Cadell"" .
  
  ?simonCadell dbo:placeOfBurial ?simonCadellRestingPlace .
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
9,29,val,"Give me the alma mater of John Alderdice, Baron Alderdice and alma mater of the awardee of Royal Medal and figure known as QUB.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/almaMater> ?result . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Medal> . ?result <http://dbpedia.org/property/nickname> ""QUB""@en . <http://dbpedia.org/resource/John_Alderdice,_Baron_Alderdice> <http://dbpedia.org/ontology/almaMater> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?almaMaterJohnAlderdice ?awardee ?almaMaterAwardee ?figureQUB ?almaMaterFigureQUB
WHERE {
  # Alma mater of John Alderdice, Baron Alderdice
  dbr:John_Alderdice_alma_mater dbo:almaMater dbr:Queen's_University_Belfast ;
                                  rdfs:label ""John Alderdice""@en .

  BIND(dbr:Queen's_University_Belfast AS ?almaMaterJohnAlderdice)

  # Awardees of the Royal Medal and their alma maters
  ?awardee dbo:award dbr:Royal_Medal ;
          dbo:almaMater ?almaMaterAwardee .

  # Figures known as QUB (Queen's University Belfast)
  ?figureQUB dbo:almaMater dbr:Queen's_University_Belfast ;
             rdfs:label ?label .
  
  BIND(dbr:Queen's_University_Belfast AS ?almaMaterFigureQUB)

}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
9,30,val,"Give me the alma mater of Allen Hill (scientist) and alma mater of John Alderdice, Baron Alderdice and figure known as the nickname of Queen's University Belfast.","SELECT ?result WHERE { <http://dbpedia.org/resource/Queen's_University_Belfast> <http://dbpedia.org/property/nickname> ?v1 . <http://dbpedia.org/resource/John_Alderdice,_Baron_Alderdice> <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://dbpedia.org/property/nickname> ?v1 . <http://dbpedia.org/resource/Allen_Hill_(scientist)> <http://dbpedia.org/ontology/almaMater> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?almaMaterAllenHill ?almaMaterJohnAlderdice ?nicknameQueenUniversityBelfast WHERE {
  # Alma mater of Allen Hill (scientist)
  dbr:Allen_Hill_(scientist) dbo:almaMater ?almaMaterAllenHill .
  
  # Alma mater of John Alderdice, Baron Alderdice
  dbr:John_Alderdice dbo:almaMater ?almaMaterJohnAlderdice .

  # Nickname for Queen's University Belfast
  OPTIONAL {
    dbr:Queen's_University_Belfast dbo:commonName ?nicknameQueenUniversityBelfast .
  }
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
492,20,val,"Give me the person decedent at French Algeria and commander in the war, that is a military conflict and an event, of Frédéric-Georges Herr.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Frédéric-Georges_Herr> <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/French_Algeria> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?decedent ?war
WHERE {
  # Find the person who died in French Algeria and is related to Frédéric-Georges Herr
  ?person dbo:deathPlace dbr:French_Algeria .
  ?person dbo:relatedTo dbr:Frédéric-Georges_Herr .

  # Find the war commanded by Frédéric-Georges Herr that is both a military conflict and an event
  dbr:Frédéric-Georges_Herr dbo:commanderOf ?war .
  ?war rdf:type dbo:MilitaryConflict ;
       rdf:type dbo:Event .
  
  # Return the decedent's name and the war
  BIND(?person AS ?decedent)
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
9,18,val,"Give me the figure known as QUB and alma mater of John Alderdice, Baron Alderdice and alma mater of Allen Hill (scientist).","SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ""QUB""@en . <http://dbpedia.org/resource/John_Alderdice,_Baron_Alderdice> <http://dbpedia.org/ontology/almaMater> ?result . <http://dbpedia.org/resource/Allen_Hill_(scientist)> <http://dbpedia.org/ontology/almaMater> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?institution WHERE {
  ?alderdice dbo:almaMater ?institution .
  ?hill dbo:almaMater ?institution .
  
  VALUES ?alderdice { 
    dbc:John_Alderdice_Baron_Alderdice
  }
  VALUES ?hill { 
    dbc:Allen_Hill_(scientist)
  }
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
378,29,val,"Give me the claim to fame of Louis des Balbes de Berton de Crillon, 1st Duke of Mahón and war of the commander in Peninsular War and war of Carl Pontus Gahn.","SELECT ?result WHERE { <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Louis_des_Balbes_de_Berton_de_Crillon,_1st_Duke_of_Mahón> <http://dbpedia.org/ontology/knownFor> ?result . ?v3 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Peninsular_War> <http://dbpedia.org/ontology/commander> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?claimToFame ?roleInPeninsularWar WHERE {
  # Louis des Balbes de Berton de Crillon
  dbr:Louis_des_Balbes_de_Berton_de_Crillon_1st_Duke_of_Mahón dbo:knownFor ?claimToFame .
  
  OPTIONAL {
    ?peninsularWar dbo:commander ?crillon .
    ?crillon rdfs:label ""Louis des Balbes de Berton de Crillon, 1st Duke of Mahón""@en .
    ?peninsularWar rdfs:label ?roleInPeninsularWar .
  }
  
  # Carl Pontus Gahn
  OPTIONAL {
    dbr:C_P_Gahn dbo:militaryService ?militaryRole .
    FILTER (lang(?militaryRole) = 'en')
  }
}
```",4,4,5,2,3,3,3,71,0,0,2,0,0.0,0
10,15,val,"Give me the associated musical artist of the person born, that is an artist, as Matt Colton and professional in .","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> """"@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://dbpedia.org/property/birthName> ""Matt Colton""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?artist WHERE {
  ?person dbo:birthName ""Matt Colton""@en .
  ?person dbo:profession ?profession .
  FILTER(CONTAINS(LCASE(STR(?profession)), ""music producer"") || CONTAINS(LCASE(STR(?profession)), ""engineer""))
  
  ?collaboration dbo:agent ?person ;
                dbo:object ?artist .
}
```",3,4,4,2,2,2,3,28,0,0,2,0,0.0,0
378,39,val,"Give me the war of Joaquín Blake and claim to fame of the commander in the war, that is a military conflict and a societal event and an event, of Thomas Trigge.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Joaquín_Blake> <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/ontology/commander> ?v1 . <http://dbpedia.org/resource/Thomas_Trigge> <http://dbpedia.org/ontology/battle> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/knownFor> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war ?joaquinBlakeFame ?thomasTriggeEvent
WHERE {
  # Joaquín Blake's involvement in a war
  dbr:Joaqu%C3%ADn_Blake dbo:militaryConflict ?war .
  
  # Joaquín Blake's claim to fame within the war
  OPTIONAL { 
    ?joaquinBlakeFame dbo:wikiPageWikiLink ?war ;
                      rdfs:label ?fameLabel .
  }
  
  # Thomas Trigge's involvement in the same event
  dbr:Thomas_Trigge dbo:militaryConflict ?war ;
                    dbo:societalEvent ?thomasTriggeEvent .
}
```",4,7,5,3,2,3,3,71,0,0,2,0,0.0,0
994,18,val,Give me the associated musical artist of Red Tide (band) and band member of Don Dokken and associated musical artist of S.A. Slayer.,SELECT ?result WHERE { <http://dbpedia.org/resource/S.A._Slayer> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Red_Tide_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Don_Dokken> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

# Part 1: Associated Musical Artist of Red Tide (band)
SELECT ?artist WHERE {
    ?redTide a dbo:Band .
    ?redTide rdfs:label ""Red Tide (band)""@en .
    ?redTide dbo:associatedBand ?artist .
}

UNION

# Part 2: Band Member of Don Dokken
SELECT ?member WHERE {
    ?dokken a dbo:Person .
    ?dokken rdfs:label ""Don Dokken""@en .
    ?band dbo:bandMember ?dokken ;
          dbo:associatedBand ?member .
}

UNION

# Part 3: Associated Musical Artist of S.A. Slayer
SELECT ?artist WHERE {
    ?sASlayer a dbo:Band .
    ?sASlayer rdfs:label ""S.A. Slayer""@en .
    ?sASlayer dbo:associatedBand ?artist .
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
783,12,val,"Give me the associated musical artist of Appietus and band member of the person born, that is an artist and a musical artist, as Priscilla Opoku-Kwarteng.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://dbpedia.org/property/birthName> ""Priscilla Opoku-Kwarteng""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . <http://dbpedia.org/resource/Appietus> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parent ?bandMember WHERE {
  # Find Appietus and his role as a musical artist
  dbr:Appietus dbo:musicArtistRole ?role .

  # Find Priscilla Opoku-Kwarteng's birth information
  dbr:Priscilla_Opoku-Kwarteng dbo:birthPlace ?place .
  
  # Ensure the parent is both an artist and a musical artist
  ?parent dbo:child dbr:Priscilla_Opoku-Kwarteng ;
          dbo:musicalArtistRole ?roleParent .

  FILTER EXISTS { ?parent dbo:artist . }

  # Identify any band members of that parent
  ?bandMember dbo:memberOfBand ?parent .
}
```",3,5,4,2,2,3,2,20,0,0,1,0,0.0,0
485,19,val,"Give me the birth place of Thomas Warner (poet) and entity in the region, that is a country, of Western European Time and entity in Nottinghamshire.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Nottinghamshire> . <http://dbpedia.org/resource/Thomas_Warner_(poet)> <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Western_European_Time> . ?result <http://dbpedia.org/ontology/country> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?birthPlace ?countryInWET ?entityInNottinghamshire
WHERE {
  # Find Thomas Warner (poet) and his birthplace
  VALUES ?warner { dbr:Thomas_Warner_(poet) }
  ?warner dbo:birthPlace ?birthPlace .

  # Find countries in the Western European Time zone
  ?countryInWET a dbo:Country ;
                dbp:timeZone ""Europe/Lisbon""^^xsd:string .
  
  # Find an entity in Nottinghamshire
  ?entityInNottinghamshire dbo:location dbr:Nottinghamshire .
}
```",4,5,5,2,3,2,3,28,0,0,1,0,0.0,0
427,37,val,Give me the party of the father of the alumnus of Massachusetts Institute of Technology and party of Romano Prodi.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/ontology/party> ?result . ?v0 <http://dbpedia.org/property/father> ?v3 . ?v0 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Massachusetts_Institute_of_Technology> . },"```sparql
PREFIX db: <http://dbpedia.org/resource/>
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?fatherParty ?prodiParty WHERE {
  # Find a notable MIT alumnus and their father's political party
  ?alumnus db:alumniOf db:Massachusetts_Institute_of_Technology .
  ?alumnus foaf:parent ?father .
  ?father dbo:partyAffiliation ?fatherParty .

  # Find Romano Prodi's political party
  db:Romano_Prodi dbo:partyAffiliation ?prodiParty .
}
```",4,4,5,3,2,3,3,71,0,0,3,0,0.0,0
378,24,val,"Give me the war of the commander in Peninsular War and claim to fame of Louis des Balbes de Berton de Crillon, 1st Duke of Mahón.","SELECT ?result WHERE { <http://dbpedia.org/resource/Louis_des_Balbes_de_Berton_de_Crillon,_1st_Duke_of_Mahón> <http://dbpedia.org/ontology/knownFor> ?result . ?v2 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Peninsular_War> <http://dbpedia.org/ontology/commander> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?war ?fame WHERE {
  VALUES ?person { dbr:Louis_des_Balbes_de_Berton_de_Crillon_1st_Duke_of_Mahón }
  
  # Find the war he commanded in
  ?person dbo:commanderOf ?war .
  FILTER CONTAINS(LCASE(STR(?war)), ""peninsular war"")

  # Find his claim to fame
  OPTIONAL { 
    ?person rdfs:comment ?fame .
    FILTER (CONTAINS(LCASE(STR(?fame)), ""claim to fame"") || CONTAINS(LCASE(STR(?fame)), ""notable""))
  }
}
```",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
617,11,val,"Give me the child of the child, that is a royalty, of Boleslaus I, Duke of Bohemia and parent of Mieszko II Lambert.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/child> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Boleslaus_I,_Duke_of_Bohemia> . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Mieszko_II_Lambert> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?childOfChild WHERE {
  # Find the child of Boleslaus I, Duke of Bohemia
  ?boleslausI a dbo:Duke ;
              foaf:name ""Boleslaus I"" ;
              dbo:spouse ?parentOfMieszkoII .
  
  ?parentOfMieszkoII dbo:child dbr:Mieszko_II_Lambert .

  # Find the child of Boleslaus I
  ?boleslausI dbo:child ?child .

  # Find the grandchild (child of the child) who is royalty
  ?child dbo:child ?childOfChild .
  
  FILTER EXISTS { 
    ?childOfChild dbo:position dbr:Monarch ;
                  a dbo:Person .
  }
}
```",3,4,4,2,2,3,2,20,0,0,1,0,0.0,0
659,22,val,"Give me the military force of the force, that is a societal event and an event and a military conflict, of Rutger Jan Schimmelpenninck and commander in German campaign of 1813.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/German_campaign_of_1813> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?militaryForce WHERE {
  # Rutger Jan Schimmelpenninck
  dbr:Rutger_Jan_Schimmelpenninck dbo:commanderOf ?campaign .
  
  # German Campaign of 1813
  ?campaign rdf:type dbo:MilitaryConflict ;
            rdfs:label ""German campaign of 1813""@en .

  # Military Force associated with Schimmelpenninck
  ?militaryForce dbo:commandedBy dbr:Rutger_Jan_Schimmelpenninck .
  
  # Conditions for military force
  ?militaryForce rdf:type dbo:MilitaryConflict ;
                 rdf:type dbo:SocietalEvent ;
                 rdf:type dbo:Event .

}
```",3,6,4,2,2,3,3,71,0,0,7,0,0.0,0
281,37,val,"Give me the war of New Zealand Army and entity in the birth place, that is a country, of the leader, that is a politician, of 1962 New South Wales state election.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://dbpedia.org/ontology/birthPlace> ?v3 . ?result <http://dbpedia.org/ontology/place> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/New_Zealand_Army> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/1962_New_South_Wales_state_election> <http://dbpedia.org/property/leader> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war WHERE {
  # Find the leader of the 1962 NSW state election who is a politician
  ?leader dbo:officeHolderOf dbr:1962_New_South_Wales_state_election .
  ?leader rdf:type dbo:Politician .

  # Get the birthplace of this leader, ensuring it's a country
  ?leader dbo:birthPlace ?birthPlace .
  ?birthPlace rdf:type dbo:Country .

  # Find wars involving both New Zealand Army and the identified country
  ?war dbo:participatingMilitaryUnit dbr:New_Zealand_Army ;
       dbo:participatingMilitaryUnit ?unitInvolvingBirthplace .
  
  ?unitInvolvingBirthplace dbo:country ?birthPlace .
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
378,37,val,"Give me the war of the commander in the reference, that is a military conflict, to Peninsular War and claim to fame of Louis des Balbes de Berton de Crillon, 1st Duke of Mahón.","SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""Peninsular War""@en . <http://dbpedia.org/resource/Louis_des_Balbes_de_Berton_de_Crillon,_1st_Duke_of_Mahón> <http://dbpedia.org/ontology/knownFor> ?result . ?v0 <http://dbpedia.org/ontology/commander> ?v3 . ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war WHERE {
  ?war a dbo:MilitaryConflict .
  ?war dbo:commander dbr:Louis_des_Balbes_de_Berton_de_Crillon_1st_Duke_of_Mahón .
  OPTIONAL { 
    ?peninsularWar a dbo:MilitaryConflict ;
                   rdfs:label ""Peninsular War""@en .
    FILTER(CONTAINS(LCASE(?war), LCASE(str(?peninsularWar))))
  }
}
```",4,5,5,3,2,3,3,71,0,0,2,0,0.0,0
92,20,val,"Give me the associated musical artist of the person born, that is an artist, as Jim Sheppard and band member of Nevermore.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ""Jim Sheppard""@en . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Nevermore> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?associatedArtist WHERE {
  ?person a dbo:Musician ;
          foaf:name ""Jim Sheppard"" ;
          dbo:memberOfBand dbr:Nevermore .
  
  ?person dbo:associatedMusicalArtist ?associatedArtist .
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
54,41,val,Give me the parent of the child of Narapati I of Ava and child of the father of Soe Min Wimala Dewi and predecessor of Ameitta Thiri Maha Dhamma Dewi of Ava.,SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Narapati_I_of_Ava> . <http://dbpedia.org/resource/Soe_Min_Wimala_Dewi> <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Ameitta_Thiri_Maha_Dhamma_Dewi_of_Ava> . ?v4 <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?individual WHERE {
  # Narapati I of Ava's child
  ?narapatiIChild dbo:childOf dbr:Narapati_I_of_Ava .
  
  # Parent of Narapati I's child (should be Narapati I or another relevant figure)
  ?parent dbo:parentOf ?narapatiIChild .

  # Soe Min Wimala Dewi's father
  ?soeMinWimalaFather dbo:father dbr:Soe_Min_Wimala_Dewi .
  
  # Child of Soe Min Wimala Dewi's father
  ?childOfFather dbo:childOf ?soeMinWimalaFather .

  # Predecessor of Ameitta Thiri Maha Dhamma Dewi of Ava
  ?predecessor dbo:predecessor dbr:Ameitta_Thiri_Maha_Dhamma_Dewi_of_Ava .

  # Find the common individual satisfying all conditions
  FILTER (?parent = ?childOfFather && ?parent = ?predecessor)
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
251,14,val,"Give me the location of Battle of Marengo and administration of the ruling party, that is a political party and an organisation, in Sicily.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/leaderParty> ?v2 . <http://dbpedia.org/resource/Sicily> <http://dbpedia.org/property/leaderParty> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. <http://dbpedia.org/resource/Battle_of_Marengo> <http://dbpedia.org/ontology/place> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?location ?partyName WHERE {
  # Part 1: Location of the Battle of Marengo
  OPTIONAL {
    dbr:Battle_of_Marengo dbo:place dbr:Marengo ;
                          dbo:location ?location .
  }

  # Part 2: Ruling political party in Sicily
  OPTIONAL {
    ?party dbp:country dbr:Sicily ;
           a dbo:PoliticalParty ;
           dbo:isOrganisationType dbp:political_party ;
           rdfs:label ?partyName .
    
    FILTER (LANG(?partyName) = 'en')
  }
}
```",3,5,4,2,2,2,3,28,0,0,1,0,0.0,0
712,13,val,"Give me the capital of the country of the military force, that is an organisation and a military unit, of Vyoshenskaya Uprising.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/ontology/country> ?v1 . ?v0 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Vyoshenskaya_Uprising> . ?v1 <http://dbpedia.org/ontology/capital> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?capitalCity WHERE {
  ?uprising dbo:relatedMilitaryForce ?militaryForce .
  FILTER(STR(?uprising) = ""Vyoshenskaya Uprising"") .

  ?militaryForce a dbo:MilitaryUnit ;
                dbo:country ?country .

  ?country dbo:capital ?capitalCity .
}
```",3,5,4,3,1,3,2,20,0,0,3,0,0.0,0
9,31,val,"Give me the alma mater of Allen Hill (scientist) and alma mater of the mayor, that is a politician, of the entity, that is an organisation, in Belfast.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/leader> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Belfast> . ?v0 <http://dbpedia.org/ontology/almaMater> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Allen_Hill_(scientist)> <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?allenHillAlmaMater ?mayorAlmaMatter WHERE {
  # Find Allen Hill (scientist) and his alma mater
  ?person a dbo:Scientist ;
          foaf:name ""Allen Hill"" .
  ?person dbo:almaMater ?allenHillAlmaMater .

  # Identify the organization in Belfast
  ?organization dbo:location dbr:Belfast .

  # Find the mayor of Belfast
  ?mayor dbo:position dbr:Municipality_of_Belfast_Mayor ;
         dbo:officeLocation ?organization .
  
  # Get the alma mater of the mayor
  ?mayor dbo:almaMater ?mayorAlmaMatter .
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
492,33,val,"Give me the person decedent at French Algeria and commander in the war, that is a military conflict and an event, of the commander in Battle of Verdun.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/ontology/battle> ?v3 . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/French_Algeria> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Battle_of_Verdun> <http://dbpedia.org/ontology/commander> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Find the commander of the Battle of Verdun
  ?battle dbr:Battle_of_Verdun .
  ?battle dbo:commander ?person .

  # Check if this person was a decedent at French Algeria
  ?algeriaEvent dbo:eventLocation dbr:French_Algeria ;
                dbo:decedent ?person .

  # Ensure the person was also a commander in another war (military conflict)
  ?otherWar dbo:commander ?person .
  
  # Ensure this person is linked to both a military conflict and an event
  ?conflict dbo:type dbr:Military_conflict ;
            dbo:participant ?person .
  ?event dbo:type dbr:Event ;
         dbo:participant ?person .
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
427,36,val,"Give me the party of the person born, that is an office holder and a politician, as the birth name of Romano Prodi and reference to Partito Popolare Italiano.","SELECT ?result WHERE { <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/property/birthName> ?v0 . ?result <http://xmlns.com/foaf/0.1/name> ""Partito Popolare Italiano""@en . ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?v1 <http://dbpedia.org/ontology/party> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?party WHERE {
  ?person a dbo:Politician ;
          dbo:birthName ?birthName ;
          dbo:officeHolder ?office ;
          foaf:name ""Romano Prodi""@en .
  
  OPTIONAL { ?person dbo:memberOfParty ?party . }
  
  FILTER (?birthName != """" && EXISTS { ?office a dbo:Office } )
  
  VALUES ?party {
    dbr:Partito_Popolare_Italiano
  }
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
778,14,val,"Give me the author of the work, that is a software, of the author of Pushd and popd.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/author> ?v2 . <http://dbpedia.org/resource/Pushd_and_popd> <http://dbpedia.org/property/author> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Software>. ?v0 <http://dbpedia.org/ontology/author> ?result . },"```sparql
PREFIX db: <http://dbpedia.org/resource/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?softwareWork ?author
WHERE {
  db:Ken_Thompson dbo:work ?softwareWork .
  ?softwareWork a dbo:Software .
  ?softwareWork dbo:creator ?author .
}
```",3,4,4,3,1,3,2,20,0,0,2,0,0.0,0
959,29,val,"Give me the native of the residence, that is a country, of Yōichi Masuzoe and member of University of Tsukuba and manager of 2013 Júbilo Iwata season.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Yōichi_Masuzoe> <http://dbpedia.org/property/residence> ?v3 . <http://dbpedia.org/resource/2013_Júbilo_Iwata_season> <http://dbpedia.org/ontology/manager> ?result . ?result <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/University_of_Tsukuba> . ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nativePlace WHERE {
    ?person a dbo:Person ;
            foaf:name ""Yōichi Masuzoe"" ;
            dbo:almaMater dbr:University_of_Tsukuba ;
            dbo:managerOf dbr:2013_Júbilo_Iwata_season .
    
    ?person dbo:residence ?residence .
    ?residence a dbo:Country .

    ?person dbo:nativePlace ?nativePlace .
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
820,12,val,Give me the professional in  and child of the parent of Jason Schwartzman.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Jason_Schwartzman> . ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?professional (GROUP_CONCAT(?childName; separator="", "") AS ?siblings)
WHERE {
  # Find Jason Schwartzman's resource
  ?jason a dbo:Person;
         foaf:name ""Jason Schwartzman""@en.
  
  # Find his parent(s)
  ?parent dbo:child ?jason.

  # For each parent, find their children who are not Jason Schwartzman
  ?parent dbo:child ?sibling.
  FILTER (?sibling != ?jason)

  # Get the name of these siblings for clarity in results
  ?sibling foaf:name ?childName.

  # Retrieve professional information about these siblings
  OPTIONAL { ?sibling dbo:profession ?professional }
}
GROUP BY ?professional
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
801,18,val,Give me the professional in  and producer of Westside Story (song) and associated musical artist of Chris Taylor (music producer).,"SELECT ?result WHERE { <http://dbpedia.org/resource/Chris_Taylor_(music_producer)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Westside_Story_(song)> <http://dbpedia.org/ontology/producer> ?result . ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?producer ?professional ?associatedArtist WHERE {
  # Query for Westside Story (song)
  OPTIONAL {
    dbr:Westside_Story_(song) dbo:composer ?composer .
    ?composer rdf:type dbo:Musician ;
              foaf:name ?professional .
  }
  
  OPTIONAL {
    dbr:Westside_Story_(song) dbo:producer ?producer .
    ?producer rdf:type dbo:Person ;
              foaf:name ?producerName .
  }

  # Query for Chris Taylor (music producer)
  OPTIONAL {
    dbr:Chris_Taylor_(music_producer) dbo:associatedMusicalArtist ?artist .
    ?artist rdf:type dbo:Musician ;
            foaf:name ?associatedArtist .
  }
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
184,20,val,Give me the child of the child of Archduke Joseph Karl of Austria and parent of Géza von Habsburg.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Géza_von_Habsburg> . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Karl_of_Austria> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?grandchild WHERE {
  # Find children of Archduke Joseph Karl
  ?child dbo:parent dbr:Archduke_Joseph_Karl_of_Austria .
  
  # Find grandchildren (children of the child)
  ?grandchild dbo:parent ?child .

  # Identify Géza von Habsburg's parent
  ?gezaParent dbo:child dbr:Géza_von_Habsburg .

  # Match the grandchild with Géza's parent
  FILTER (?grandchild = ?gezaParent)
}
```",3,3,4,2,2,3,3,71,1,0,0,1.0,1.0,1.0
54,28,val,Give me the child of the father of Soe Min Wimala Dewi and predecessor of Ameitta Thiri Maha Dhamma Dewi of Ava and parent of Thado Minsaw of Prome.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Ameitta_Thiri_Maha_Dhamma_Dewi_of_Ava> . <http://dbpedia.org/resource/Soe_Min_Wimala_Dewi> <http://dbpedia.org/property/father> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?person WHERE {
  ?father dbo:child ?soeMinWimalaDewi .
  ?person dbo:child ?father .
  
  ?ameittaThiriMahaDhammaDewi dbo:predecessor ?person .

  ?thadoMinsaw dbo:parent ?person .
}
```",4,4,5,2,3,3,3,71,1,2411,0,0.00041459369817578774,1.0,0.0008288437629506838
161,21,val,"Give me the military force of the force, that is a societal event and an event and a military conflict, of Francisco Franco and commander in Biscay Campaign.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Franco> . <http://dbpedia.org/resource/Biscay_Campaign> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?force WHERE {
  ?campaign dbo:commander dbr:Franco_Francisco ;
            a dbo:MilitaryConflict .
  
  ?campaign dbo:participatingMilitaryForce ?force .

  ?force a dbo:SocietalEvent, dbo:Event .

  FILTER (str(?campaign) = ""Biscay_Campaign"")
}
```",3,6,4,2,2,3,3,71,0,0,3,0,0.0,0
435,13,val,"Give me the region of Greenwich Mean Time and territory administered from the figure known, that is a settlement and a town and Icelandic, as Land of fire and ice.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/capital> ?v1 . ?v1 <http://dbpedia.org/property/nickname> ""Land of fire and ice""@en . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Iceland>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Greenwich_Mean_Time> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Town>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?region ?administeredFrom WHERE {
  VALUES ?settlement { dbr:Reykjavík }
  
  ?settlement a dbo:Settlement ;
              dbo:country dbr:Iceland .
  
  OPTIONAL { ?settlement dbo:timeZone ?region . }
  OPTIONAL { ?settlement dbo:administrativeTerritory ?administeredFrom . }
}
```",3,6,4,2,2,2,3,28,0,0,1,0,0.0,0
54,40,val,Give me the child of the father of the child of Thinkhaya of Pagan and parent of Thado Minsaw of Prome and predecessor of Ameitta Thiri Maha Dhamma Dewi of Ava.,SELECT ?result WHERE { <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Ameitta_Thiri_Maha_Dhamma_Dewi_of_Ava> . <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://dbpedia.org/ontology/child> ?result . ?v2 <http://dbpedia.org/property/father> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Thinkhaya of Pagan's child
  ?thinkhayaChild dbo:childOf dbr:Thinkhaya_of_Pagan .
  
  # This person is also the parent of Thado Minsaw of Prome
  ?thinkhayaChild dbo:parentOf dbr:Thado_Minsaw_of_Prome .

  # And a predecessor to Ameitta Thiri Maha Dhamma Dewi of Ava
  ?thinkhayaChild dbo:predecessor dbr:Ameitta_Thiri_Maha_Dhamma_Dewi_of_Ava .
  
  # The person we are looking for is this child
  BIND(?thinkhayaChild AS ?person)
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
161,37,val,"Give me the military force of the force, that is a societal event and a military conflict, of the predecessor of Indalecio Prieto and commander in Biscay Campaign.",SELECT ?result WHERE { <http://dbpedia.org/resource/Biscay_Campaign> <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Indalecio_Prieto> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://dbpedia.org/ontology/commander> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce WHERE {
  # Find Indalecio Prieto's predecessor in a relevant role
  ?predecessor dbo:successor dbr:Indalecio_Prieto .
  
  # Identify the commander in the Biscay Campaign
  ?commander dbo:role ""Commander"" ;
             dbo:event dbr:Biscay_Campaign .

  # Ensure the predecessor and commander are the same person
  FILTER (?predecessor = ?commander)

  # Find military forces associated with this person and events
  ?militaryForce dbo:member ?commander .
  ?militaryForce dbo:partOfEvent dbr:Societal_Event ;
                 dbo:partOfEvent dbr:Military_Conflict .

}
```",4,6,5,3,2,3,3,71,0,0,3,0,0.0,0
421,14,val,Give me the native of the birthplace of Samir Bekrić and band member of Senidah.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . <http://dbpedia.org/resource/Samir_Bekrić> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Senidah> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?nativeLanguage ?bandMember WHERE {
  # Part 1: Find the birthplace of Samir Bekrić and its native language
  dbr:Samir_Bekrić dbo:birthPlace ?birthPlace .
  
  OPTIONAL { 
    ?birthPlace foaf:nativeLanguage ?nativeLanguage .
  }
  
  # Part 2: Find a band member of Senidah
  {
    SELECT DISTINCT ?bandMember WHERE {
      ?senidahProject dbo:member ?bandMember .
      FILTER EXISTS { ?senidahProject dbr:Senidah . }
    }
  }
}
```",3,3,4,2,2,2,3,28,0,0,2,0,0.0,0
9,25,val,Give me the figure known as the nickname of Queen's University Belfast and alma mater of Allen Hill (scientist).,SELECT ?result WHERE { <http://dbpedia.org/resource/Allen_Hill_(scientist)> <http://dbpedia.org/ontology/almaMater> ?result . <http://dbpedia.org/resource/Queen's_University_Belfast> <http://dbpedia.org/property/nickname> ?v1 . ?result <http://dbpedia.org/property/nickname> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nickname WHERE {
  ?university a dbo:EducationalInstitution ;
              rdfs:label ""Queen's University Belfast""@en .
  OPTIONAL { ?university dbo:nickName ?nickname . }
  ?alumnus dbo:almaMater ?university .
  FILTER (str(?alumnus) = str(dbr:Allen_Hill_(scientist)))
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
404,43,val,"Give me the spouse of Princess Victoria Louise of Prussia and parent of the child, that is a royalty, of the parent, that is a royalty, of Prince George William of Hanover and child of Ernest Augustus, Crown Prince of Hanover.","SELECT ?result WHERE { <http://dbpedia.org/resource/Prince_George_William_of_Hanover> <http://dbpedia.org/ontology/parent> ?v0 . ?result <http://dbpedia.org/ontology/child> ?v4 . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/child> ?v4 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ernest_Augustus,_Crown_Prince_of_Hanover> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  dbr:Princess_Victoria_Louise_of_Prussia dbo:spouse ?spouse .
  ?spouse dbo:child ?royalChild .
  ?royalChild a dbo:Monarch .
  ?royalChild dbo:parent ?grandParent .
  ?grandParent a dbo:Monarch .
  ?grandParent dbo:child dbr:Prince_George_William_of_Hanover .
  ?grandParent dbo:parent dbr:Ernest_Augustus,_Crown_Prince_of_Hanover .
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
959,26,val,"Give me the native of the residence, that is a country, of the leader, that is a politician, of 2010 Japanese House of Councillors election.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/property/residence> ?v0 . ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . <http://dbpedia.org/resource/2010_Japanese_House_of_Councillors_election> <http://dbpedia.org/property/leader> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?native WHERE {
  ?election dbo:electionDate ?date .
  FILTER (YEAR(?date) = 2010 && CONTAINS(LCASE(STR(?election)), ""japanese house of councillors""))
  
  ?politician dbo:officeHolder ?office .
  ?office dbo:relatedElection ?election .

  ?politician dbo:residence ?residence .
  
  ?residence a dbo:Country .
  
  ?residence dbo:nativeName ?native .
}
```",3,5,4,3,1,3,3,71,0,0,8419,0,0.0,0
391,42,val,"Give me the actor of The Departed and native of the figure known as Hub City and actor of the movie, that is a movie and a work and a television show, with Roz Ryan.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Roz_Ryan> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://dbpedia.org/property/starring> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v2 <http://dbpedia.org/property/nickname> ""Hub City""@en . ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . <http://dbpedia.org/resource/The_Departed> <http://dbpedia.org/ontology/starring> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  # Find actors of ""The Departed""
  ?movie dbo:starring ?actor .
  FILTER(STRSTARTS(LCASE(?movie), LCASE(""the departed"")))

  # Check if the actor is a native of Pittsburgh (Hub City)
  ?actor dbo:nationality dbr:Pittsburgh .

  # Find works that are both movies and television shows with Roz Ryan
  ?work dbo:starring ?actor .
  ?work dbo:genre ?genre1, ?genre2 .
  FILTER(?genre1 = dbr:Film AND ?genre2 = dbr:Television_show)
  
  # Check if Roz Ryan is involved in the work
  ?work dbo:writer ?writer .
  FILTER(STRSTARTS(LCASE(?writer), LCASE(""roz ryan"")))
}
```",5,8,6,2,3,3,3,71,0,0,1,0,0.0,0
378,22,val,Give me the war of Carl Pontus Gahn and claim to fame of the commander in Great Siege of Gibraltar.,SELECT ?result WHERE { <http://dbpedia.org/resource/Great_Siege_of_Gibraltar> <http://dbpedia.org/ontology/commander> ?v1 . ?v1 <http://dbpedia.org/ontology/knownFor> ?result . <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

# Query for any war-related information about Carl Pontus Gahn
SELECT ?war WHERE {
  dbr:C_Pontus_Gahn dbo:occupation dbr:Chemist .
  OPTIONAL { dbr:C_Pontus_Gahn dbo:participatedIn ?war . }
}

# Query for the commander of the Great Siege of Gibraltar and their claim to fame
SELECT ?commander ?claimToFame WHERE {
  ?event dbo:eventType dbr:Siege_of_Gibraltar ;
         dbo:place dbr:Gibraltar ;
         dbo:dateStart ?dateStart .
  FILTER (YEAR(?dateStart) >= 1779 && YEAR(?dateStart) <= 1783)
  
  ?commander dbo:occupation dbr:Military_person ;
             dbo:participatedIn ?event .
  
  OPTIONAL { ?commander dbo:famousFor ?claimToFame . }
}
```",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
232,37,val,"Give me the actor of the claim to fame, that is a film and a military conflict, of the professional in Actor, narrator and producer and native of London.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/London> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/ontology/starring> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v0 <http://dbpedia.org/ontology/knownFor> ?v3 . ?v0 <http://dbpedia.org/property/occupation> ""Actor, narrator and producer""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?actor ?film WHERE {
  ?actor dbo:nationality dbr:United_Kingdom ;
         dbo:occupation dbr:Actor ;
         dbo:occupation dbr:Narrator ;
         dbo:occupation dbr:Film_producer .
  
  ?actor dbo:birthPlace dbr:London .

  ?film dbo:starring ?actor ;
        a dbo:Film ;
        dbp:militaryConflict ""true""^^xsd:boolean .

}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
959,28,val,"Give me the native of Japan and manager of 2013 Júbilo Iwata season and member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of Eiji Ōtsuka.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/team> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/2013_Júbilo_Iwata_season> <http://dbpedia.org/ontology/manager> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Japan> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. <http://dbpedia.org/resource/Eiji_Ōtsuka> <http://dbpedia.org/ontology/almaMater> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?native ?managerRole ?almaMater WHERE {
  # Eiji Ōtsuka's resource
  VALUES ?eijiOotsuka { dbr:Eiji_Ōtsuka }

  # Native of Japan
  ?eijiOotsuka dbo:nationality dbr:Japan .

  # Manager role for Júbilo Iwata in 2013
  OPTIONAL {
    ?managerRole dbp:team dbr:Júbilo_Iwata ;
                 dbp:season ""2013""^^xsd:string .
    ?eijiOotsuka dbo:position ?managerRole .
  }

  # Alma mater that is a Japanese university/educational institution
  OPTIONAL {
    ?almaMater dbo:type dbr:University_in_Japan ;
               dbo:country dbr:Japan .
    ?eijiOotsuka dbo:almaMater ?almaMater .
  }
}
```",4,8,5,2,3,3,3,71,0,0,1,0,0.0,0
232,40,val,Give me the actor of Dog Soldiers (film) and child of the person born as the birth name of Jon Pertwee and native of London.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ?v2 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/London> . <http://dbpedia.org/resource/Dog_Soldiers_(film)> <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/property/birthName> ?v2 . ?v1 <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?actor ?child
WHERE {
  # Find the actor(s) of ""Dog Soldiers""
  ?film dbo:title ""Dog Soldiers""@en .
  ?film dbo:starring ?actor .

  # Identify Jon Pertwee using his birth name
  ?person dbp:birthName ""John Julian Pertwee""@en ;
          rdfs:label ""Jon Pertwee""@en .

  # Retrieve Jon Pertwee's child(ren)
  ?child dbo:parent ?person .

  # Filter for the child who is a native of London
  ?child dbo:nativePlace dbr:London .
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
77,11,val,Give me the force of Alexander I of Russia and war of the awardee of Golden Weapon for Bravery.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Golden_Weapon_for_Bravery> . ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Alexander_I_of_Russia> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?militaryRank ?war
WHERE {
  # Find Alexander I's military rank
  dbr:Alexander_I_of_Russia dbo:militaryRank ?militaryRank .

  # Find the war associated with the ""Golden Weapon for Bravery"" award
  ?award dbo:awardedFor ?war .
  FILTER(CONTAINS(LCASE(?award), ""golden weapon for bravery""))
}
```",3,3,4,2,2,3,2,20,0,0,11,0,0.0,0
959,33,val,"Give me the native of the residence, that is a country, of the leader, that is a politician, of 2010 Japanese House of Councillors election and member of University of Tsukuba.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?result <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/University_of_Tsukuba> . ?v0 <http://dbpedia.org/property/residence> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/2010_Japanese_House_of_Councillors_election> <http://dbpedia.org/property/leader> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?nativePlace WHERE {
  ?person dbo:almaMater dbr:University_of_Tsukuba ;
          dbo:occupation dbr:Politician ;
          dbo:memberOf dbr:2010_Japanese_House_of_Councillors_election .
  
  ?person dbo:residence ?residence .
  FILTER (isLiteral(?residence) && strstarts(str(?residence), ""http://dbpedia.org/resource/""))

  OPTIONAL { ?residence a dbo:Country . }
  FILTER EXISTS { ?residence a dbo:Country }

  ?person dbp:nativePlace ?nativePlace .
}
```",4,6,5,3,2,3,3,71,0,0,84,0,0.0,0
16,29,val,Give me the professional in the profession of Satomi Ishihara and person born as Georgeanne Marie Rice and spouse of Ted McGinley.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Satomi_Ishihara> <http://dbpedia.org/property/occupation> ?v3 . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/occupation> ?v3 . ?result <http://dbpedia.org/property/birthName> ""Georgeanne Marie Rice""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?professional WHERE {
  # Satomi Ishihara's profession
  ?satomiIshihara dbo:profession ?professionSatomi .
  VALUES ?satomiIshihara { <http://dbpedia.org/resource/Satomi_Ishihara> }

  # Person born as Georgeanne Marie Rice
  ?georgeanneMarieRice foaf:name ""Georgeanne Marie Rice""@en .
  ?georgeanneMarieRice dbo:profession ?professionGeorgeanne .

  # Spouse of Ted McGinley
  ?tedMcGinley dbp:spouse ?spouseTed .
  VALUES ?tedMcGinley { <http://dbpedia.org/resource/Ted_McGinley> }
  ?spouseTed dbo:profession ?professionSpouse .

  # Find the common profession
  FILTER (?professionSatomi = ?professionGeorgeanne && ?professionSatomi = ?professionSpouse)
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
427,44,val,"Give me the party of the father of Lamberto Andreotti and party of the person born, that is an office holder and a politician, as Romano Antonio Prodi and reference to Partito Popolare Italiano.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Lamberto_Andreotti> <http://dbpedia.org/property/father> ?v4 . ?result <http://xmlns.com/foaf/0.1/name> ""Partito Popolare Italiano""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v4 <http://dbpedia.org/ontology/party> ?result . ?v2 <http://dbpedia.org/ontology/party> ?result . ?v2 <http://dbpedia.org/property/birthName> ""Romano Antonio Prodi""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?fatherPartyLabel ?prodiPartyLabel WHERE {
  # Lamberto Andreotti's father
  dbr:Lamberto_Andreotti dbo:parent ?father .
  
  # Father's political party
  ?father dbo:party ?fatherParty .
  ?fatherParty rdfs:label ?fatherPartyLabel .

  # Romano Prodi as an office holder and politician
  dbr:Romano_Prodi a dbo:Politician ;
                  dbo:officeHolder ?prodiOffice .
  
  # Political party of Romano Prodi
  dbr:Romano_Prodi dbo:party ?prodiParty .
  ?prodiParty rdfs:label ?prodiPartyLabel .

  # Reference to Partito Popolare Italiano
  OPTIONAL {
    ?fatherParty dbp:alsoKnownAs ""Partito Popolare Italiano""@it .
    FILTER(lang(?fatherPartyLabel) = 'en')
  }
  
  OPTIONAL {
    ?prodiParty dbp:alsoKnownAs ""Partito Popolare Italiano""@it .
    FILTER(lang(?prodiPartyLabel) = 'en')
  }
}
```",5,7,6,2,3,3,3,71,0,0,1,0,0.0,0
666,13,val,"Give me the player in the manager, that is a sports manager, of the team, that is a soccer club and a sports team season, of Leonid Slutsky (football coach).",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v0 <http://dbpedia.org/ontology/manager> ?v1 . ?v1 <http://dbpedia.org/ontology/team> ?result . ?v0 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Leonid_Slutsky_(football_coach)> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?playerInManager WHERE {
  ?manager a dbo:FootballCoach ;
           foaf:name ""Leonid Slutsky""@en .
  
  ?team dbo:manager ?manager ;
        a dbo:SoccerClub, dbo:SportsTeamSeason .

  ?team dbp:playerInManager ?playerInManager .
}
```",3,6,4,3,1,3,2,20,0,0,28,0,0.0,0
801,43,val,"Give me the professional in  and producer of the work, that is a musical work and a song and a work, of the professional, that is a musical artist, in Rapper and associated musical artist of Chris Taylor (music producer).","SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/writer> ?v0 . ?v4 <http://dbpedia.org/ontology/producer> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?result <http://dbpedia.org/property/occupation> """"@en . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. <http://dbpedia.org/resource/Chris_Taylor_(music_producer)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/property/occupation> ""Rapper""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?professional ?work WHERE {
  ?professional a dbo:MusicalArtist ;
                dbo:professionalIn ?field .
  FILTER(CONTAINS(LCASE(STR(?field)), ""rapper""))
  
  ?professional foaf:associatedMusicalArtist ?chrisTaylor .
  ?chrisTaylor rdfs:label ""Chris Taylor (music producer)""@en .

  ?work dbo:producer ?professional ;
        rdf:type ?type1, ?type2 .
  FILTER(CONTAINS(LCASE(STR(?type1)), ""musical work"") && CONTAINS(LCASE(STR(?type2)), ""song""))
}
```",5,9,6,3,3,3,3,71,0,0,2,0,0.0,0
767,19,val,"Give me the entity in the administration, that is a settlement, of Green and alma mater of Carl L. Nippert.","SELECT ?result WHERE { <http://dbpedia.org/resource/Carl_L._Nippert> <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://dbpedia.org/ontology/state> ?v0 . ?v0 <http://dbpedia.org/property/leaderParty> ""Green""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity WHERE {
  ?county a dbo:County ;
          dbo:administrativeUnitOf dbr:Ohio .
  FILTER (CONTAINS(LCASE(?county), ""green county"")) .

  ?settlement dbo:partOf ?county ;
              a dbo:Settlement .

  ?person dbo:almaMater ?entity ;
          foaf:name ""Carl L. Nippert""^^xsd:string .
  
  FILTER (?settlement = ?entity)
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
427,35,val,"Give me the party of the person born, that is an office holder and a politician, as Romano Antonio Prodi and reference to the name of Italian People's Party (1994).","SELECT ?result WHERE { <http://dbpedia.org/resource/Italian_People's_Party_(1994)> <http://xmlns.com/foaf/0.1/name> ?v2 . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v1 <http://dbpedia.org/property/birthName> ""Romano Antonio Prodi""@en . ?v1 <http://dbpedia.org/ontology/party> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?partyName WHERE {
    ?prodi a dbo:Politician ;
           foaf:name ""Romano Prodi"" ;
           dbo:officeHolder true .
    
    ?prodi dbo:memberOfParty ?party .

    ?party dbo:officialName ?partyName ;
           dbo:foundingDate ?foundingDate .

    FILTER (
        EXISTS { 
            ?party dbr:Italian_People's_Party_(1994) . 
        } &&
        ?foundingDate <= ""1994-12-31""^^xsd:date
    )
}
```",4,6,5,2,2,3,3,71,0,0,1,0,0.0,0
617,26,val,"Give me the spouse of the child of the successor, that is a royalty, of Antiochus (son of Antiochus III the Great).",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/successor> ?v1 . ?v1 <http://dbpedia.org/ontology/child> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?spouse WHERE {
  ?antiochus1 dbo:father ?antiochus2 .
  ?antiochus2 foaf:name ""Antiochus III the Great""@en .
  ?antiochus3 dbo:sonOf ?antiochus2 .
  ?antiochus3 foaf:name ""Antiochus""@en .
  
  ?successor dbo:successor ?antiochus3 .
  ?child dbo:child ?successor .
  ?child rdf:type dbo:Monarch .

  ?spouse dbo:spouse ?child .
}
```",3,4,4,3,1,3,3,71,0,0,5,0,0.0,0
9,19,val,"Give me the alma mater of Allen Hill (scientist) and alma mater of the mayor, that is a politician, of Northern Ireland Forum.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/ontology/almaMater> ?result . <http://dbpedia.org/resource/Northern_Ireland_Forum> <http://dbpedia.org/property/leader> ?v0 . <http://dbpedia.org/resource/Allen_Hill_(scientist)> <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?allenHillAlmaMater ?mayorAlmaMater WHERE {
  # Find Allen Hill's alma mater
  ?person a dbo:Scientist ;
          foaf:name ""Allen Hill"" .
  ?person dbo:almaMater ?allenHillAlmaMater .

  # Find the mayor of Northern Ireland Forum's alma mater
  ?mayor a dbo:Politician ;
         dbo:officeHolderOf dbr:Northern_Ireland_Forum ;
         foaf:name ?name .
  ?mayor dbo:almaMater ?mayorAlmaMater .
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
281,24,val,"Give me the entity in the birth place, that is a country, of Bob Heffron and war of New Zealand Army.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> ?v2 . <http://dbpedia.org/resource/Bob_Heffron> <http://dbpedia.org/ontology/birthPlace> ?v2 . <http://dbpedia.org/resource/New_Zealand_Army> <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?birthCountry ?war 
WHERE {
  # Find Bob Heffron's birthplace that is a country
  dbr:Bob_Heffron dbo:birthPlace ?birthLocation .
  ?birthLocation rdf:type dbo:Country ;
                 rdfs:label ?birthCountry .

  # Find wars involving the New Zealand Army
  ?war dbo:participatingMilitaryUnit dbr:New_Zealand_Army ;
       rdf:type dbo:MilitaryConflict ;
       rdfs:label ?warLabel .
  
  # Check if Bob Heffron's birthplace is involved in any of these wars
  OPTIONAL { 
    ?war dbo:location ?warLocation .
    ?warLocation rdfs:label ?warCountry .
    FILTER (?birthCountry = ?warCountry)
  }
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
994,43,val,"Give me the associated musical artist of the band member, that is a band and a group and an organisation, of the band, that is an organisation, of Fredrik Thordendal and associated musical artist of S.A. Slayer and band member of Don Dokken.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Fredrik_Thordendal> . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. <http://dbpedia.org/resource/S.A._Slayer> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Don_Dokken> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?bandFredrik ?artistSA ?memberDonDokken WHERE {
  # Find the band associated with Fredrik Thordendal that is both a band and an organization
  ?bandFredrik dbo:member <http://dbpedia.org/resource/Fredrik_Thordendal> .
  ?bandFredrik rdf:type dbo:Band .
  ?bandFredrik rdf:type dbp:Organization .

  # Find the musical artist associated with S.A. Slayer
  ?artistSA dbo:musicalArtist <http://dbpedia.org/resource/S._A._Slayer> .

  # Find a band member of Don Dokken
  ?memberDonDokken dbo:member <http://dbpedia.org/resource/Don_Dokken> .
}
```",5,9,6,3,3,3,3,71,0,0,1,0,0.0,0
701,32,val,Give me the parent of the child of Nefertari and parent of the child of Ramesses II.,SELECT ?result WHERE { <http://dbpedia.org/resource/Nefertari> <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ramesses_II> . ?result <http://dbpedia.org/ontology/child> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?commonParent
WHERE {
  # Nefertari's child
  ?nefertariChild dbo:parent ?nefertari;
                 dbo:childOf ?nefertari.
  
  # Parent of Nefertari's child
  ?nefertariChild dbo:parent ?parent1.

  # Ramesses II's child
  ?ramessesChild dbo:parent ?ramesses;
                dbo:childOf ?ramesses.

  # Parent of Ramesses II's child
  ?ramessesChild dbo:parent ?parent2.

  # Check if the parents are the same individual
  FILTER (?parent1 = ?parent2)
  
  BIND(?parent1 AS ?commonParent)
}
```",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
55,18,val,"Give me the band of the reference, that is a band, to Newsted and band member of Metallica.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://xmlns.com/foaf/0.1/name> ""Newsted""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Metallica> . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?band WHERE {
  ?person dbo:memberOfBand ?band .
  ?person rdfs:label ""Jason Newsted""@en .
  
  OPTIONAL { 
    ?band rdfs:label ?bandLabel .
    FILTER(CONTAINS(LCASE(?bandLabel), ""metallica""))
  }
}
```",3,4,4,2,2,2,3,28,0,0,3,0,0.0,0
92,25,val,Give me the band of the person born as Joseph Michael Furney and associated musical artist of Jim Sheppard.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Jim_Sheppard> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/bandMember> ?v1 . ?v1 <http://dbpedia.org/property/birthName> ""Joseph Michael Furney""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band ?associatedArtist 
WHERE {
  # Find the band associated with Joe Satriani (Joseph Michael Furney)
  OPTIONAL { 
    dbr:Joe_Satriani dbo:memberOf ?band .
  }
  
  # Find the musical artist associated with Jim Sheppard
  OPTIONAL {
    dbr:Jim_Sheppard dbo:associatedMusicalArtist ?associatedArtist .
  }
}
```",3,3,4,2,2,3,3,71,1,1,0,0.5,1.0,0.6666666666666666
281,36,val,"Give me the war of the profession, that is a military unit, of the professional, that is an office holder and a politician, in New Zealand Army and war of Beauchamp Seymour, 1st Baron Alcester.","SELECT ?result WHERE { <http://dbpedia.org/resource/Beauchamp_Seymour,_1st_Baron_Alcester> <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/New_Zealand_Army> . ?v0 <http://dbpedia.org/property/occupation> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?war
WHERE {
  # Beauchamp Seymour's participation in wars
  dbr:Beauchamp_Seymour_1st_Baron_Alcester dbo:militaryConflict ?beauchampWar .
  
  # New Zealand Army military unit associated with a profession (office holder and politician)
  ?unit rdf:type dbo:MilitaryUnit ;
        dbo:partOf dbr:New_Zealand_Army ;
        dbo:member ?professional .

  # Professional's roles
  ?professional rdf:type dbo:OfficeHolder, dbo:Politician .
  
  # Wars involving the military unit
  ?unit dbo:militaryConflict ?war .

  # Ensure the war involves both Beauchamp Seymour and the military unit
  FILTER (?beauchampWar = ?war)
}
```",4,7,5,3,2,3,3,71,0,0,1,0,0.0,0
391,39,val,"Give me the actor of The Departed and actor of the movie, that is a movie and a work and a television show, with the professional in .","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/occupation> """"@en . ?v1 <http://dbpedia.org/property/starring> ?v0 . ?v1 <http://dbpedia.org/property/starring> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. <http://dbpedia.org/resource/The_Departed> <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actorOfDeparted ?actorOfMultiCategory
WHERE {
  # Find the actor of ""The Departed""
  dbr:The_Departed dbo:starring ?actorOfDeparted .

  # Find a resource that is both a movie, work, and television show
  ?multiCategoryResource 
    a dbo:Film ;
    a dbo:Work ;
    a dbo:TelevisionShow .
  
  # Find the actor of this multi-category resource
  ?multiCategoryResource dbo:starring ?actorOfMultiCategory .
}
```",4,7,5,3,2,3,3,71,7,12274,0,0.0005699861574790326,1.0,0.0011393229166666665
767,41,val,"Give me the alma mater of the administration of George K. Nash and entity in the administration, that is a settlement, of Green and reference to .","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> """"@en . ?v4 <http://dbpedia.org/ontology/almaMater> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://dbpedia.org/property/leaderParty> ""Green""@en . ?v4 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/George_K._Nash> . ?result <http://dbpedia.org/ontology/state> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?almaMater ?settlement WHERE {
  # George K. Nash's alma mater
  ?nash dbo:almaMater ?almaMater .
  FILTER (str(?nash) = ""George_K._Nash"")

  # Entity in the administration of Green that is a settlement
  ?green dbo:officeHolder ?person .
  ?person dbp:residence ?settlement .
  FILTER (str(?green) = ""Green"") 
  FILTER (?settlement rdf:type <http://dbpedia.org/ontology/Settlement>)
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
659,44,val,"Give me the military force of the force, that is a societal event and an event and a military conflict, of Rutger Jan Schimmelpenninck and commander in the war, that is an event and a military conflict, of 1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish) and commander in German campaign of 1813.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/1st_Light_Cavalry_Lancers_Regiment_of_the_Imperial_Guard_(Polish)> <http://dbpedia.org/ontology/battle> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v4 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v2 . <http://dbpedia.org/resource/German_campaign_of_1813> <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?militaryForce WHERE {
  # Rutger Jan Schimmelpenninck's involvement in a societal event, an event, and a military conflict
  ?event1 dbo:type dbr:Societal_event .
  ?event2 dbo:type dbr:Event .
  ?event3 dbo:type dbr:Military_conflict .
  ?event1 dbo:participant dbr:Rutger_Jan_Schimmelpenninck .
  ?event2 dbo:participant dbr:Rutger_Jan_Schimmelpenninck .
  ?event3 dbo:participant dbr:Rutger_Jan_Schimmelpenninck .

  # Military force associated with the events involving Rutger Jan Schimmelpenninck
  ?militaryForce dbo:commander dbr:Rutger_Jan_Schimmelpenninck .
  
  # 1st Light Cavalry Lancers Regiment's involvement in a war (event and military conflict)
  ?warEvent dbo:type dbr:Event .
  ?warEvent dbo:type dbr:Military_conflict .
  ?warEvent dbo:commander dbr:Rutger_Jan_Schimmelpenninck .
  
  # German campaign of 1813
  ?campaignEvent dbo:type dbr:Event .
  ?campaignEvent dbo:type dbr:Military_conflict .
  ?campaignEvent dbo:name ""German campaign of 1813"" .
  ?campaignEvent dbo:commander dbr:Rutger_Jan_Schimmelpenninck .

  # The military force must be associated with both the regiment and the campaign
  ?militaryForce dbo:partOf ?warEvent .
  ?militaryForce dbo:partOf ?campaignEvent .
}
```",5,10,6,2,3,3,3,71,0,0,7,0,0.0,0
528,32,val,Give me the war of the military force of Battle of Pisagua and war of the commander in Battle of La Rinconada de Ate.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Battle_of_La_Rinconada_de_Ate> <http://dbpedia.org/ontology/commander> ?v3 . ?v1 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Pisagua> . ?v1 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?battle ?war ?commander WHERE {
  VALUES ?battle { 
    dbr:Battle_of_Pisagua 
    dbr:Battle_of_La_Rinconada_de_Ate
  }
  
  ?battle dbp:partOfWar ?war .
  OPTIONAL { ?battle dbp:commander ?commander . }

}
```",4,4,5,2,2,3,3,71,0,0,8,0,0.0,0
294,12,val,"Give me the entity in Nashville, Tennessee and resting place of Luke Lea (American politician, born 1879) and resting place of Edwin A. Keeble.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Nashville,_Tennessee> . <http://dbpedia.org/resource/Luke_Lea_(American_politician,_born_1879)> <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Edwin_A._Keeble> <http://dbpedia.org/ontology/restingPlace> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity ?restingPlace WHERE {
  VALUES (?person) { 
    (dbr:Luke_Lea_(American_politician,_born_1879)) 
    (dbr:Edwin_A._Keeble)
  }
  
  ?person dbo:finalRestingPlace ?restingPlace .
  ?restingPlace dbo:location dbr:Nashville,_Tennessee .

  OPTIONAL { ?entity rdfs:label ?name . FILTER(CONTAINS(LCASE(?name), ""nashville, tennessee"")) }
}
```",3,3,4,1,3,2,3,28,0,0,1,0,0.0,0
48,15,val,"Give me the band of Murda Mook and band of the writer of the work, that is a work, of Shellback (record producer).",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Murda_Mook> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Shellback_(record_producer)> . ?v0 <http://dbpedia.org/property/writer> ?v1 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?murdaMookBand ?shellbackWork ?writer ?writersBand 
WHERE {
  # Find Murda Mook's band
  dbr:Murda_Mook dbo:band ?murdaMookBand .

  # Find a work produced by Shellback
  ?shellbackWork dbo:recordProducer dbr:Shellback .
  
  # Find the writer of that work
  ?shellbackWork dbo:lyricist ?writer .

  # Find the band associated with the writer
  ?writer dbo:band ?writersBand .
}
```",4,5,5,3,2,3,2,20,0,0,1,0,0.0,0
547,40,val,Give me the resting place of Simon Cadell and resting place of Alan Cunningham and resting place of the child of the child of William Haliburton.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> ""William Haliburton""@en . ?v2 <http://dbpedia.org/ontology/child> ?v1 . <http://dbpedia.org/resource/Simon_Cadell> <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Alan_Cunningham> <http://dbpedia.org/ontology/restingPlace> ?result . ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?restingPlace WHERE {
  # Simon Cadell's resting place
  { 
    ?simonCadell a dbo:Person ;
                 foaf:name ""Simon Cadell""@en .
    OPTIONAL { ?simonCadell dbo:deathPlace ?restingPlace . }
    OPTIONAL { ?simonCadell dbo:burialLocation ?restingPlace . }
  }

  UNION

  # Alan Cunningham's resting place
  {
    ?alanCunningham a dbo:Person ;
                    foaf:name ""Alan Cunningham""@en .
    OPTIONAL { ?alanCunningham dbo:deathPlace ?restingPlace . }
    OPTIONAL { ?alanCunningham dbo:burialLocation ?restingPlace . }
  }

  UNION

  # The child of the child of William Haliburton's resting place
  {
    ?williamHaliburton a dbo:Person ;
                       foaf:name ""William Haliburton""@en .
    ?child1 dbo:child ?williamHaliburton .
    ?grandChild dbo:child ?child1 .
    OPTIONAL { ?grandChild dbo:deathPlace ?restingPlace . }
    OPTIONAL { ?grandChild dbo:burialLocation ?restingPlace . }
  }

}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
994,40,val,Give me the band member of Don Dokken and associated musical artist of Red Tide (band) and associated musical artist of the associated musical artist of the reference to Watchtower.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Red_Tide_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v3 <http://xmlns.com/foaf/0.1/name> ""Watchtower""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Don_Dokken> . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandMember ?associatedArtist ?finalAssociatedArtist
WHERE {
  # Step 1: Find band members of Don Dokken
  ?donDokken dbr:Don_Dokken .
  ?donDokken dbo:bandMember ?bandMember .

  # Step 2: Find associated musical artist of Red Tide (band)
  ?redTide dbr:Red_Tide_(band) .
  ?redTide dbo:associatedBand ?associatedArtist .

  # Step 3: Find associated musical artist of the above result
  ?artist dbr:${associatedArtist} .
  ?artist dbo:associatedBand ?finalAssociatedArtist .

  # Step 4: Check if there is a reference to Watchtower
  OPTIONAL {
    ?watchtower dbr:Watchtower_(band) .
    ?finalAssociatedArtist dbo:associatedBand ?watchtower .
  }
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
345,15,val,"Give me the figure known as the nickname of the player, that is a sports club and an organisation and a soccer club, in Armando Heeb and team of Alessandro Mangiarratti.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v0 <http://dbpedia.org/property/nickname> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?result <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Alessandro_Mangiarratti> . <http://dbpedia.org/resource/Armando_Heeb> <http://dbpedia.org/ontology/team> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?nickname WHERE {
  ?player1 dbo:playerForTeam ?team .
  ?player2 dbo:playerForTeam ?team .
  
  FILTER (?player1 = dbr:Armando_Heeb || ?player2 = dbr:Alessandro_Mangiarratti)
  
  ?team rdfs:label ?nickname .
  ?team a dbo:SoccerClub ;
        a dbo:SportsOrganization .

  FILTER (lang(?nickname) = 'en')
}
```",4,7,5,3,2,3,2,20,0,0,1,0,0.0,0
492,21,val,"Give me the person decedent at the work of US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite and person decedent at Algiers.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Algiers> . ?v1 <http://dbpedia.org/property/author> ""US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?successor ?algiersPerson
WHERE {
  # Find the successor of Joseph C. Satterthwaite as US Assistant Secretary of State for African Affairs
  ?satterthwaite dbo:position dbr:United_States_Assistant_Secretary_of_State_for_African_Affairs .
  ?satterthwaite dbo:endTime ?endTimeSatterthwaite .
  
  ?successor dbo:position dbr:United_States_Assistant_Secretary_of_State_for_African_Affairs .
  ?successor dbo:startTime ?startTimeSuccessor .
  
  FILTER (?startTimeSuccessor > ?endTimeSatterthwaite)
  
  # Find a notable person associated with Algiers
  ?algiersPerson dbo:location dbr:Algiers .
}
```",3,3,4,2,2,3,3,71,0,0,16,0,0.0,0
994,21,val,Give me the band member of Don Dokken and associated musical artist of the associated musical artist of Watchtower (band).,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Watchtower_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Don_Dokken> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandMember ?associatedBand ?watchtowerAssociatedArtist WHERE {
  # Step 1: Find a band member of Don Dokken
  ?member dbo:musicGroup dbr:Don_Dokken .
  
  # Filter for George Lynch as the prominent member
  FILTER(CONTAINS(LCASE(?memberLabel), ""george lynch""))
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
  
  # Step 2: Find an associated band of George Lynch (Lynch Mob)
  ?associatedBand dbo:musicalArtist ?member .
  FILTER(?associatedBand = dbr:Lynch_Mob) .

  # Step 3: Find the associated musical artist of Watchtower
  ?watchtowerMember dbo:musicGroup dbr:Watchtower .
  
  # Filter for Tom G. Warrior as a member of Watchtower
  FILTER(CONTAINS(LCASE(?watchtowerMemberLabel), ""tom g warrior""))
  
  # Find Celtic Frost, which is associated with Tom G. Warrior
  ?watchtowerAssociatedArtist dbo:musicalArtist ?watchtowerMember .
  FILTER(?watchtowerAssociatedArtist = dbr:Celtic_Frost) .

}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
44,7,val,Give me the band member of the band of John Pettibone and band member of Sledgeback.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Sledgeback> . ?v0 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/John_Pettibone> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?member WHERE {
  # Find band members of The Mars Volta (John Pettibone's band)
  { 
    ?bandMember dbo:associatedBand dbp:name ""The Mars Volta""@en .
    ?bandMember a dbo:MusicalArtist .
    ?bandMember rdfs:label ?memberLabel .
    FILTER(LANG(?memberLabel) = 'en')
  }
  
  UNION
  
  # Find band members of Sledgeback
  { 
    ?bandMember dbo:associatedBand dbp:name ""Sledgeback""@en .
    ?bandMember a dbo:MusicalArtist .
    ?bandMember rdfs:label ?memberLabel .
    FILTER(LANG(?memberLabel) = 'en')
  }
}
```",3,3,4,2,2,2,2,9,0,0,1,0,0.0,0
645,11,val,"Give me the alma mater of Sylvia Pankhurst and entity in the residence, that is a country, of James Wilkes Maurice.",SELECT ?result WHERE { <http://dbpedia.org/resource/James_Wilkes_Maurice> <http://dbpedia.org/property/residence> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Sylvia_Pankhurst> <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://dbpedia.org/ontology/country> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?almaMater WHERE {
  dbr:Sylvia_Pankhurst dbo:almaMater ?almaMater .
}

UNION

SELECT ?country WHERE {
  ?mrsResidence a dbo:Country ;
                dbo:resident ?jamesWilkesMaurice .
  FILTER (strstarts(str(?jamesWilkesMaurice), ""James_Wilkes_Maurice""))
}
```",3,4,4,2,2,3,2,20,0,0,1,0,0.0,0
712,12,val,Give me the capital of South Russia (1919–1920) and resting place of the awardee of Hero of the Soviet Union.,SELECT ?result WHERE { <http://dbpedia.org/resource/South_Russia_(1919–1920)> <http://dbpedia.org/ontology/capital> ?result . ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Hero_of_the_Soviet_Union> . ?v0 <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

# Part 1: Find the capital of South Russia (1919–1920)
SELECT ?capital WHERE {
    ?city dbo:country dbr:Russia ;
          dbo:formerName ""Ekaterinodar"" .
}

UNION

# Part 2: Find the resting place of an awardee of Hero of the Soviet Union
SELECT ?hero ?restingPlace WHERE {
    ?hero a dbo:Person ;
          dbo:honoraryTitle dbr:Hero_of_the_Soviet_Union ;
          dbp:placeOfBurial ?restingPlace .
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
485,17,val,"Give me the birth place of the awardee, that is a writer and a poet, of Eric Gregory Award and entity in Nottinghamshire.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Poet>. ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Eric_Gregory_Award> . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Nottinghamshire> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthPlace WHERE {
  ?person a dbo:Writer ;
          a dbo:Poet ;
          dbo:award dbr:Erich_Gregory_Award .
  ?person dbo:birthPlace ?birthPlace .
  ?birthPlace rdfs:label ?placeLabel .
  FILTER (CONTAINS(LCASE(?placeLabel), ""nottinghamshire""))
}
```",3,5,4,2,2,2,3,28,0,0,1,0,0.0,0
488,44,val,"Give me the death place of the father, that is a politician, of Yūki Hideyasu and birth place of Enomoto Takeaki and administration of the father of Emperor Go-Mizunoo.",SELECT ?result WHERE { <http://dbpedia.org/resource/Emperor_Go-Mizunoo> <http://dbpedia.org/property/father> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Yūki_Hideyasu> <http://dbpedia.org/property/father> ?v4 . ?v4 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Enomoto_Takeaki> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/property/leader> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?deathPlaceYūkiFather ?birthPlaceEnomoto ?administrationGoMizunooFather
WHERE {
  # Death place of Yūki Hideyasu's father (politician)
  OPTIONAL {
    dbr:Yūki_Hideyasu dbo:father ?yukiFather .
    ?yukiFather dbo:occupation dbr:Politician .
    ?yukiFather dbo:deathPlace ?deathPlaceYūkiFather .
  }

  # Birth place of Enomoto Takeaki
  OPTIONAL {
    dbr:Enomoto_Takeaki dbo:birthPlace ?birthPlaceEnomoto .
  }
  
  # Administration of Emperor Go-Mizunoo's father
  OPTIONAL {
    dbr:Emperor_Go-Mizunoo dbo:father ?goMizunooFather .
    ?goMizunooFather dbo:office ?administrationGoMizunooFather .
  }
}
```",5,6,6,2,3,3,3,71,1,1,0,0.5,1.0,0.6666666666666666
303,18,val,"Give me the party of the person born, that is a politician, as Arnulfo Arias Madrid and entity in Panama.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Panama> . ?v2 <http://dbpedia.org/ontology/party> ?result . ?v2 <http://dbpedia.org/property/birthName> ""Arnulfo Arias Madrid""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?party WHERE {
  ?person rdf:type dbo:Politician .
  ?person foaf:name ""Arnulfo Arias Madrid"" .
  ?person dbp:birthPlace dbr:Panama .
  ?person dbpedia-owl:party ?party .
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
10,17,val,"Give me the professional in  and band member of the person born, that is an artist, as Luke Francis Vibert.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ""Luke Francis Vibert""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?result <http://dbpedia.org/property/occupation> """"@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?profession
WHERE {
  VALUES ?person { dbr:Luke_Vibert }
  
  ?person dbo:birthName ""Luke Francis Vibert""@en .
  ?person dbo:profession ?profession .

  FILTER (
    (CONTAINS(LCASE(?profession), ""artist"") || CONTAINS(LCASE(?profession), ""band member""))
  )
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
92,22,val,Give me the band member of Nevermore and band of the person born as Joseph Michael Furney.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Nevermore> . ?v1 <http://dbpedia.org/property/birthName> ""Joseph Michael Furney""@en . ?result <http://dbpedia.org/ontology/bandMember> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nevermoreMember ?schafferBand 
WHERE {
  # Find a member of Nevermore
  ?nevermoreMember dbo:bandMember dbr:Nevermore .

  # Find the band associated with Joseph Michael Furney (Jon Schaffer)
  OPTIONAL { 
    ?person foaf:name ""Joseph Michael Furney""@en .
    ?person dbo:birthName ""Joseph Michael Furney"" .
    ?person dbo:bandMember ?schafferBand .
  }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
251,18,val,Give me the administration of Forza Italia (2013) and death place of the author of The Twelve Abbots of Challant.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Twelve_Abbots_of_Challant> <http://dbpedia.org/property/author> ?v2 . ?v2 <http://dbpedia.org/ontology/deathPlace> ?result . ?result <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Forza_Italia_(2013)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?administration ?deathPlace WHERE {
  # Part 1: Administration of Forza Italia in 2013
  OPTIONAL {
    ?party a dbo:PoliticalParty ;
           rdfs:label ""Forza Italia""@en .
    ?government dbo:ministerialTeam ?party ;
                dbo:startDate ?start ;
                dbo:endDate ?end .
    FILTER (?start <= ""2013-01-01""^^xsd:date && (?end >= ""2013-12-31""^^xsd:date || NOT EXISTS { ?government dbo:endDate ?end }))
    BIND(?government AS ?administration)
  }

  # Part 2: Death place of the author of The Twelve Abbots of Challant
  OPTIONAL {
    ?book dbo:author ?author ;
          rdfs:label ""The Twelve Abbots of Challant""@en .
    ?author dbo:deathPlace ?deathPlace .
  }
}
```",3,3,4,2,2,2,3,28,1,2,0,0.3333333333333333,1.0,0.5
827,11,val,"Give me the father of William Ernest, Grand Duke of Saxe-Weimar-Eisenach and child of the child, that is a royalty, of Grand Duchess Maria Pavlovna of Russia (1786–1859).","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/William_Ernest,_Grand_Duke_of_Saxe-Weimar-Eisenach> <http://dbpedia.org/property/father> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Grand_Duchess_Maria_Pavlovna_of_Russia_(1786–1859)> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  # Find William Ernest's father
  dbr:William_Ernest,_Grand_Duke_of_Saxe-Weimar-Eisenach dbo:father ?father .

  # Find children of Maria Pavlovna who are royalty
  VALUES ?mariaPavlovna (dbr:Grand_Duchess_Maria_Pavlovna_of_Russia_(1786–1859)) .
  
  ?child dbo:parent ?mariaPavlovna ;
         a dbo:Monarch .

  # Find grandchildren of Maria Pavlovna who are royalty
  ?grandChild dbo:parent ?child ;
              a dbo:Monarch .

  # Check if William Ernest's father is the grandchild of Maria Pavlovna
  FILTER (?father = ?grandChild)
}
```",3,4,4,2,2,3,2,20,0,0,1,0,0.0,0
184,43,val,"Give me the parent of Géza von Habsburg and parent of Archduchess Ilona of Austria and child of the child of the parent, that is a royalty, of Archduke Ladislaus Philipp of Austria.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Ilona_of_Austria> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v4 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Géza_von_Habsburg> . <http://dbpedia.org/resource/Archduke_Ladislaus_Philipp_of_Austria> <http://dbpedia.org/ontology/parent> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT DISTINCT ?individual WHERE {
  # Parent of Géza von Habsburg
  ?gezaParent dbo:parent ?geza .
  VALUES ?geza { <http://dbpedia.org/resource/G%C3%A9za_von_Habsburg> }

  # Parent of Archduchess Ilona of Austria
  ?ilonaParent dbo:parent ?ilona .
  VALUES ?ilona { <http://dbpedia.org/resource/Archduchess_Ilona_of_Austria> }

  # Parent of Archduke Ladislaus Philipp of Austria
  ?ladislausParent dbo:parent ?ladislaus .
  VALUES ?ladislaus { <http://dbpedia.org/resource/Archduke_Ladislaus_Philipp_of_Austria> }

  # Child of the parent of Archduke Ladislaus Philipp of Austria
  ?child1 dbo:parent ?ladislausParent .

  # Grandchild (child of child) of the parent of Archduke Ladislaus Philipp of Austria
  ?grandchild dbo:parent ?child1 .
  
  # Ensure grandchild is royalty
  ?grandchild rdf:type dbo:RoyalFamilyMember .

  # Combine conditions to find individuals satisfying all criteria
  FILTER (?individual = ?gezaParent || ?individual = ?ilonaParent)
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
488,23,val,"Give me the birth place of the commander in the war, that is a military conflict and an event and a societal event, of Saitō Hajime.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Saitō_Hajime> <http://dbpedia.org/ontology/battle> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthPlace WHERE {
  # Find Saito Hajime's resource
  dbr:Saitō_Hajime a dbo:MilitaryPerson ;
                   dbo:birthPlace ?birthPlace .

  # Identify the war he was involved in as a commander
  OPTIONAL { 
    ?war dbo:commander dbr:Saitō_Hajime .
    
    # Ensure it is classified as a military conflict, event, and societal event
    ?war a dbo:MilitaryConflict ;
         a dbo:Event ;
         a dbo:SocietalEvent .
  }
}
```",3,6,4,3,1,3,3,71,0,0,17,0,0.0,0
492,39,val,"Give me the commander in Franco-Hova Wars and person decedent at the capital, that is a settlement, of the country of Khemis Miliana District.",SELECT ?result WHERE { <http://dbpedia.org/resource/Franco-Hova_Wars> <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/ontology/capital> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Khemis_Miliana_District> <http://dbpedia.org/ontology/country> ?v0 . ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commander ?decedent WHERE {
  # Find the commander in Franco-Hova Wars
  ?war dbo:participatingMilitaryPersonal ?commander .
  FILTER(CONTAINS(LCASE(STR(?war)), ""franco-hova wars""))

  # Find a person who died at Khemis Miliana
  ?person dbo:deathPlace dbr:Khemis_Miliana .
  
  BIND(?person AS ?decedent)
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
528,24,val,Give me the war of the commander in Battle of La Rinconada de Ate and force of Narciso Campero.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Battle_of_La_Rinconada_de_Ate> <http://dbpedia.org/ontology/commander> ?v2 . ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Narciso_Campero> . },"```sparql
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?war ?force 
WHERE {
  ?battle dbp:name ""Battle of La Rinconada de Ate""@en .
  ?battle dbp:partOf ?war .

  ?person foaf:name ""Narciso Campero""@en .
  ?commanderRole dbo:agent ?person ;
                 dbo:roleName ""Commander"" ;
                 dbo:place ?battle .
  
  OPTIONAL { 
    ?commanderRole dbo:force ?force .
  }
}
```",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
712,11,val,Give me the capital of the country of Armed Forces of South Russia and resting place of Nina Onilova.,SELECT ?result WHERE { <http://dbpedia.org/resource/Armed_Forces_of_South_Russia> <http://dbpedia.org/ontology/country> ?v2 . ?v2 <http://dbpedia.org/ontology/capital> ?result . <http://dbpedia.org/resource/Nina_Onilova> <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?capital ?restingPlace WHERE {
  # Part 1: Capital of the country associated with ""Armed Forces of South Russia""
  OPTIONAL {
    ?country rdfs:label ?countryLabel .
    FILTER(CONTAINS(LCASE(?countryLabel), ""south russia"") || CONTAINS(LCASE(?countryLabel), ""armed forces south russia""))
    ?country dbo:capital ?city .
    ?city rdfs:label ?capital .
  }

  # Part 2: Resting place of Nina Onilova
  OPTIONAL {
    dbr:Nina_Onilova dbo:deathPlace ?restingPlace .
    ?restingPlace rdfs:label ?restingPlaceLabel .
  }
}
```",3,3,4,2,2,3,2,20,0,3,1,0.0,0.0,0
281,43,val,"Give me the entity in the birth place, that is a country, of the leader, that is a politician, of 1962 New South Wales state election and war of Beauchamp Seymour, 1st Baron Alcester and war of New Zealand Army.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/ontology/birthPlace> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/New_Zealand_Army> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/1962_New_South_Wales_state_election> <http://dbpedia.org/property/leader> ?v0 . <http://dbpedia.org/resource/Beauchamp_Seymour,_1st_Baron_Alcester> <http://dbpedia.org/ontology/battle> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?entity WHERE {
  # Find the leader of the 1962 New South Wales state election
  ?politician dbo:officeTitle ""Leader of the Opposition"" ;
              dbo:stateOrTerritory dbr:New_South_Wales ;
              dbo:electionDate ?electionDate .
  
  FILTER(YEAR(?electionDate) = 1962)

  # Get birthplace and ensure it is a country
  ?politician dbp:birthPlace ?birthPlace .
  ?birthPlace rdf:type dbo:Country .

  # Find wars involving Beauchamp Seymour, 1st Baron Alcester
  dbr:Beauchamp_Seymour,_1st_Baron_Alcester dbo:participatedInWar ?warSeymour .

  # Find wars involving the New Zealand Army
  dbr:New_Zealand_Army dbo:participatedInWar ?warNZArmy .

  # Find common war
  FILTER(?warSeymour = ?warNZArmy)

  # Get entity related to birthplace that is a country and involved in the common war
  ?entity dbo:country ?birthPlace ;
          dbo:participatedInWar ?commonWar .
  
  FILTER(?commonWar = ?warSeymour)
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
318,7,val,Give me the person born in the founding year of Eel Pie Publishing and professional in Composer.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/Composer> . ?result <http://dbpedia.org/ontology/birthYear> ?v2 . <http://dbpedia.org/resource/Eel_Pie_Publishing> <http://dbpedia.org/ontology/foundingYear> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Get the founding year of Eel Pie Publishing
  VALUES (?foundingYear) { 
    SELECT ?year WHERE { 
      dbr:Eel_Pie_Publishing dbo:foundingYear ?year .
    }
  }

  # Find a person born in that year and is a composer
  ?person dbo:birthDate ?birthDate ;
          dbo:occupation ?occupation .

  BIND(YEAR(?birthDate) AS ?birthYear)
  
  FILTER (?birthYear = ?foundingYear && CONTAINS(LCASE(str(?occupation)), ""composer""))
}
```",3,3,4,2,2,2,2,9,0,0,7,0,0.0,0
404,39,val,Give me the parent of Prince Ernest Augustus of Hanover (born 1914) and child of the father of the spouse of Princess Victoria Louise of Prussia.,SELECT ?result WHERE { <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?v0 . ?result <http://dbpedia.org/ontology/parent> ?v1 . ?v0 <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Prince_Ernest_Augustus_of_Hanover_(born_1914)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?child
WHERE {
  # Step 1: Find Prince Ernest Augustus of Hanover (born 1914) and his parent
  ?prince rdfs:label ""Prince Ernest Augustus of Hanover""@en .
  FILTER(YEAR(?prince dbo:birthDate) = 1914)
  ?parent dbo:child ?prince .

  # Step 2: Find Princess Victoria Louise of Prussia and her spouse
  ?princess rdfs:label ""Princess Victoria Louise of Prussia""@en .
  ?spouse dbo:spouse ?princess .

  # Step 3: Determine the father of this spouse
  ?father dbo:child ?spouse .

  # Step 4: Find a child of this father
  ?child dbo:parent ?father .
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
339,12,val,Give me the father of the child of Grand Duchess Elena Vladimirovna of Russia and child of George I of Greece.,SELECT ?result WHERE { <http://dbpedia.org/resource/George_I_of_Greece> <http://dbpedia.org/ontology/child> ?result . ?v0 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Grand_Duchess_Elena_Vladimirovna_of_Russia> <http://dbpedia.org/ontology/child> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  # Prince Nicholas of Russia (child of Grand Duchess Elena Vladimirovna)
  dbr:Prince_Nicholas_of_Russia dbo:parent dbr:Grand_Duchess_Elena_Vladimirovna_of_Russia .
  
  # Constantine I of Greece (child of George I of Greece)
  dbr:Constantine_I_of_Greece dbo:parent dbr:George_I_of_Greece .

  # Find the father of Prince Nicholas
  dbr:Prince_Nicholas_of_Russia dbo:father ?father1 .
  
  # Find the father of Constantine I
  dbr:Constantine_I_of_Greece dbo:father ?father2 .

  # Ensure both have the same father
  FILTER (?father1 = ?father2)
  
  # Assign the common father to the result variable
  BIND(?father1 AS ?father)
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
328,32,val,"Give me the commander in the force of Ferenc Szálasi and awardee of the award of Bruce Fraser, 1st Baron Fraser of North Cape.","SELECT ?result WHERE { <http://dbpedia.org/resource/Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape> <http://dbpedia.org/property/awards> ?v1 . ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Ferenc_Szálasi> . ?result <http://dbpedia.org/property/awards> ?v1 . ?v3 <http://dbpedia.org/ontology/commander> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person dbo:commanderOf dbr:Ferenc_Szálasi .
  ?person dbo:awardReceivedBy dbr:Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape .
}
```",4,4,5,2,2,3,3,71,0,0,2,0,0.0,0
981,13,val,"Give me the entity in the region of the time zone in Salak, North Sumatra.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/timeZone> ?v0 . <http://dbpedia.org/resource/Salak,_North_Sumatra> <http://dbpedia.org/ontology/timeZone> ?v0 . ?result <http://dbpedia.org/ontology/country> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX geo: <http://www.w3.org/2003/01/geo/wgs84_pos#>

SELECT ?entity WHERE {
  ?entity dbo:location dbr:Salak_(district) .
  OPTIONAL { ?entity dbo:timeZone dbr:Western_Indonesian_Time . }
}
```",3,3,4,3,1,3,2,20,0,0,2949,0,0.0,0
754,14,val,Give me the parent of the child of the reference to Ram Khamhaeng the Great.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/child> ?v0 . ?result <http://dbpedia.org/ontology/child> ?v0 . ?v2 <http://xmlns.com/foaf/0.1/name> ""Ram Khamhaeng the Great""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?parentLabel WHERE {
  ?ramKhamhaeng a dbo:Person ;
                rdfs:label ""Ram Khamhaeng the Great""@en .
  
  ?child dbo:spouse|dbo:childOf ?ramKhamhaeng .
  
  ?child dbo:parent ?parent .

  ?parent rdfs:label ?parentLabel .
}
```",3,3,4,3,1,3,2,20,0,0,1,0,0.0,0
16,27,val,Give me the person born as the birth name of the alumnus of Ohio State University.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Ohio_State_University> . ?result <http://dbpedia.org/property/birthName> ?v2 . ?v1 <http://dbpedia.org/property/birthName> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person WHERE {
  ?person dbo:alumniOf dbr:Ohio_State_University .
  ?person foaf:name ?birthName .
}
```",3,3,4,3,1,3,3,71,0,0,90,0,0.0,0
303,19,val,"Give me the entity in Panama and party of Arnulfo Arias and party of the commander, that is a politician, in United States invasion of Panama.",SELECT ?result WHERE { <http://dbpedia.org/resource/Arnulfo_Arias> <http://dbpedia.org/ontology/party> ?result . ?v2 <http://dbpedia.org/ontology/party> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/United_States_invasion_of_Panama> <http://dbpedia.org/ontology/commander> ?v2 . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Panama> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?entity ?party WHERE {
  # Arnulfo Arias's party
  OPTIONAL { 
    dbr:Ari%C3%B1o_Arias dbo:politicalParty ?party .
    ?party dbo:country dbr:Panama .
  }
  
  # Commander during the United States invasion of Panama (General Manuel Noriega)
  OPTIONAL {
    dbr:Manuel_Noriega dbo:politicalAffiliation ?party2 .
    ?party2 dbo:country dbr:Panama .
  }

  # Ensure entities are politicians
  FILTER (?entity = dbr:Ari%C3%B1o_Arias || ?entity = dbr:Manuel_Noriega)

  # Link to the event
  OPTIONAL {
    ?event dbo:location dbr:Panama .
    ?event dbp:name ""United States invasion of Panama"" .
    ?entity dbo:memberOf ?event .
  }
}
```",4,5,5,2,3,2,3,28,0,0,1,0,0.0,0
617,21,val,"Give me the child of the child, that is a royalty, of Seleucus II Callinicus and parent of Nysa (wife of Pharnaces I of Pontus).",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seleucus_II_Callinicus> . ?result <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Nysa_(wife_of_Pharnaces_I_of_Pontus)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?grandchild WHERE {
  ?parent dbo:spouse ?nysa .
  ?nysa rdfs:label ""Nysa (wife of Pharnaces I of Pontus)""@en .

  ?parent dbo:childOf ?seleucus2 .
  ?seleucus2 rdfs:label ""Seleucus II Callinicus""@en .

  ?parent dbo:child ?child .
  ?child dbo:child ?grandchild .

  FILTER EXISTS { ?grandchild dbo:royaltyStatus ?status }
}
```",3,4,4,2,2,3,3,71,0,0,2,0,0.0,0
996,15,val,Give me the force of the awardee of the elevation of Lac d'Avoriaz and entity in France.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/awards> ?v0 . ?result <http://dbpedia.org/ontology/commander> ?v1 . <http://dbpedia.org/resource/Lac_d'Avoriaz> <http://dbpedia.org/ontology/elevation> ?v0 . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/France> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?awardee ?force WHERE {
  # Find the elevation of Lac d'Avoriaz
  dbr:Lac_d%27Avoriaz dbo:elevation ?elevation .
  
  # Identify any awards related to this elevation
  ?award dbo:recipient ?awardee ;
         dbo:subject ?elevation .

  # Retrieve the force or relevant property of the awardee
  ?awardee dbp:force ?force .

  # Ensure the awardee is associated with France
  ?awardee dbo:country dbr:France .
}
```",4,4,5,3,2,3,2,20,0,0,4,0,0.0,0
92,36,val,Give me the band of the person born as the birth name of Joseph Michael and band member of Nevermore.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> ?v1 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Nevermore> . ?v1 <http://dbpedia.org/property/birthName> ?v0 . <http://dbpedia.org/resource/Joseph_Michael> <http://dbpedia.org/property/birthName> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?currentBand WHERE {
  ?person dbo:birthName ""Joseph Michael""@en .
  ?person dbo:bandMemberOf ?nevermore .
  ?nevermore rdfs:label ""Nevermore""@en .
  
  # Find the current band membership
  ?person dbo:bandMemberOf ?currentBand .
  
  FILTER(?currentBand != ?nevermore)
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
492,28,val,"Give me the commander in Franco-Hova Wars and person decedent at the work of US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite and person decedent at Algiers.","SELECT ?result WHERE { <http://dbpedia.org/resource/Franco-Hova_Wars> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . ?v1 <http://dbpedia.org/property/author> ""US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite""@en . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Algiers> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commander ?decedentSatterthwaite ?decedentAlgiers WHERE {
  # Commander in Franco-Hova Wars
  ?commander dbo:commanderOf dbr:Franco-Hova_Wars .

  # Person decedent at work of Joseph C. Satterthwaite
  ?satterthwaite dbo:officeHolder dbr:Assistant_Secretary_of_State_for_African_Affairs .
  ?decedentSatterthwaite dbo:dateOfDeath ?deathDateSatterthwaite ;
                        dbo:placeOfBirth ?birthPlaceSatterthwaite .
  FILTER (?deathDateSatterthwaite >= ?startDateSatterthwaite && ?deathDateSatterthwaite <= ?endDateSatterthwaite)
  
  # Person decedent at Algiers
  ?decedentAlgiers dbo:dateOfDeath ?deathDateAlgiers ;
                   dbo:placeOfBirth dbr:Algiers .
}
```

Note: The query assumes the existence of specific properties and resources in DBpedia. Adjustments may be necessary based on actual data availability.",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
232,21,val,Give me the native of London and child of the person born as John Devon Roland Pertwee.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/London> . ?v1 <http://dbpedia.org/property/birthName> ""John Devon Roland Pertwee""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?child WHERE {
  ?person a foaf:Person ;
          dbo:birthName ""John Devon Roland Pertwee""@en .
  
  ?person dbo:child ?child .

  ?child dbp:nativePlace ?nativePlace .
  FILTER(CONTAINS(LCASE(?nativePlace), ""london""))
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
645,15,val,"Give me the entity in the residence, that is a country, of the commander in Battle of Diamond Rock and alma mater of Sylvia Pankhurst.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v1 . <http://dbpedia.org/resource/Sylvia_Pankhurst> <http://dbpedia.org/ontology/almaMater> ?result . ?v0 <http://dbpedia.org/property/residence> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Battle_of_Diamond_Rock> <http://dbpedia.org/ontology/commander> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?entity WHERE {
  # Find the commander of the Battle of Diamond Rock
  ?battle dbo:commander ?commander .
  FILTER(STRSTARTS(STR(?battle), ""Battle_of_Diamond_Rock""))

  # Get the residence country of the commander
  ?commander dbo:nationalityOrCitizenship ?country .

  # Find Sylvia Pankhurst's alma mater
  dbr:Sylvia_Pankhurst dbo:almaMater ?almaMater .

  # Check if the country is also an educational institution (university)
  ?entity rdf:type dbo:EducationalInstitution .
  FILTER(?entity = ?country || ?entity = ?almaMater)

  # Ensure the entity is a country
  OPTIONAL { ?entity rdf:type dbo:Country . }
}
```",4,5,5,3,2,3,2,20,0,0,1,0,0.0,0
488,24,val,"Give me the death place of the father, that is a politician, of Yūki Hideyasu and administration of Emperor Go-Yōzei.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Yūki_Hideyasu> <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Emperor_Go-Yōzei> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?deathPlace ?administration
WHERE {
  # Find Yūki Hideyasu and his father
  dbr:Yūki_Hideyasu dbo:father ?father .
  
  # Ensure the father is a politician
  ?father dbo:occupation dbr:Politician .

  # Get the death place of the father
  ?father dbo:deathPlace ?deathPlace .

  # Find Emperor Go-Yōzei and his administration
  dbr:Emperor_Go-Yōzei dbo:reignStart ?start .
  dbr:Emperor_Go-Yōzei dbo:reignEnd ?end .
  
  # Assuming the administration is linked to a specific period or ruler
  ?administration dbo:startDate ?start ;
                  dbo:endDate ?end .

}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
435,15,val,"Give me the work of Article 62, Section IV of Constitution of Iceland and territory administered from the figure known, that is a settlement and a town and Icelandic, as Land of fire and ice.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/nickname> ""Land of fire and ice""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Town>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/capital> ?v1 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Iceland>. ?result <http://dbpedia.org/property/author> ""Article 62, Section IV of Constitution of Iceland""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?settlement ?administeredTerritory ?articleContent
WHERE {
  # Identify the settlement or town in Iceland known as ""Land of Fire and Ice""
  dbr:Iceland dbo:nativeName ""Ísland""@is; 
               dbo:settlement dbr:Reykjavík.

  # Get information about Reykjavik, a major settlement/town
  ?settlement rdfs:label ""Reykjavík""@en;
              dbo:country dbr:Iceland.
  
  # Find territories administered from this settlement (if any)
  OPTIONAL { 
    ?settlement dbo:administrativeTerritory ?administeredTerritory.
  }

  # Get the content of Article 62, Section IV of the Icelandic Constitution
  dbr:Iceland_Constitution dbp:article_62_section_iv ?articleContent.
}
```",3,6,4,2,2,2,3,28,0,0,1,0,0.0,0
838,15,val,"Give me the band of the band member, that is an artist and a musical artist, of the band, that is a band and a group, of Žika Jelić and band member of Kerber.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Kerber> . ?v0 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Žika_Jelić> . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?bandOfCommonMember WHERE {
  # Find the band of Žika Jelić
  ?zikajelic dbo:member ?commonBandMember .
  ?zikajelic dbp:name ""Žika Jelić""@en .

  # Find Kerber's members
  ?kerber dbo:member ?commonBandMember .
  ?kerber dbp:name ""Kerber""@en .

  # Ensure the common member is part of a band that is both an artist and a musical artist
  ?commonBandMember dbo:band ?bandOfCommonMember .
  ?bandOfCommonMember rdf:type dbo:MusicalArtist ;
                      rdf:type dbo:Artist .
}
```",4,8,5,3,2,3,2,20,0,0,1,0,0.0,0
161,35,val,"Give me the commander in the force, that is an event, of Emilio Mola and military force of the force, that is a societal event and an event and a military conflict, of Francisco Franco.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Emilio_Mola> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Franco> . ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?commander WHERE {
  ?event1 dbp:commander ?emilioMola .
  ?emilioMola foaf:name ""Emilio Mola"" .

  ?event2 dbo:societalEvent ?franciscoFranco .
  ?event3 dbo:militaryConflict ?franciscoFranco .
  ?franciscoFranco foaf:name ""Francisco Franco"" .

  FILTER (?event1 = ?event2 && ?event1 = ?event3)

  ?event1 dbp:commander ?commander .
}
```",4,8,5,2,2,3,3,71,0,0,34,0,0.0,0
421,12,val,Give me the native of Socialist Federal Republic of Yugoslavia and person born as Edin Dervišhalidović and band member of Senidah.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Socialist_Federal_Republic_of_Yugoslavia> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Senidah> . ?result <http://dbpedia.org/property/birthName> ""Edin Dervišhalidović""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name ?bandMemberOf
WHERE {
  ?person dbo:nativeCountry dbr:Bosnia_and_Herzegovina .
  ?person foaf:name ""Edin Dervišhalidović""@en .
  OPTIONAL { ?person dbo:member dbr:Senidah . }
}
```",3,3,4,1,3,2,3,28,0,0,1,0,0.0,0
391,41,val,"Give me the actor of All About the Andersons and native of the figure known as Hub City and actor of the claim to fame, that is a work, of Michael Ballhaus.","SELECT ?result WHERE { <http://dbpedia.org/resource/Michael_Ballhaus> <http://dbpedia.org/ontology/knownFor> ?v4 . ?v4 <http://dbpedia.org/ontology/starring> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/All_About_the_Andersons> <http://dbpedia.org/property/starring> ?result . ?v2 <http://dbpedia.org/property/nickname> ""Hub City""@en . ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?actor WHERE {
  # Actor of ""All About the Andersons""
  ?movie dbo:title ""All About the Andersons""@en .
  ?movie dbo:starring ?actor .

  # Native of Hub City (assuming Hub City is Columbia, South Carolina)
  ?actor dbp:nativePlace dbr:Columbia,_South_Carolina .

  # Actor in a work directed by Michael Ballhaus
  ?work dbo:director dbr:Michael_Ballhaus .
  ?work dbo:starring ?actor .
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
115,7,val,Give me the alma mater of the alumnus of National University of San Marcos and alma mater of Jorge Sotomayor Tello.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/almaMater> ?result . <http://dbpedia.org/resource/Jorge_Sotomayor_Tello> <http://dbpedia.org/ontology/almaMater> ?result . ?v0 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/National_University_of_San_Marcos> . },"```sparql
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?almaMaterOfAlumnus ?jorgeSotomayorTelloAlmaMater WHERE {
  # Part 1: Alma mater of an alumnus from National University of San Marcos
  ?alumnus dbp:almaMater <http://dbpedia.org/resource/National_University_of_San_Marcos> .
  ?alumnus dbp:almaMater ?almaMaterOfAlumnus .

  # Part 2: Alma mater of Jorge Sotomayor Tello
  OPTIONAL {
    ?jorgeSotomayorTello a <http://dbpedia.org/ontology/Person> ;
                        foaf:name ""Jorge Sotomayor Tello"" ;
                        dbp:almaMater ?jorgeSotomayorTelloAlmaMater .
  }
}
```",3,3,4,2,2,2,2,9,1,44,1,0.022222222222222223,0.5,0.0425531914893617
303,12,val,Give me the party of Guillermo Endara and party of Arnulfo Arias and entity in Panama.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Panama> . <http://dbpedia.org/resource/Arnulfo_Arias> <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Guillermo_Endara> <http://dbpedia.org/ontology/party> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?endaraParty ?ariasParty ?entityInPanama WHERE {
  # Find the political party of Guillermo Endara
  OPTIONAL { 
    dbr:Guillermo_Endara dbo:party ?endaraParty .
  }
  
  # Find the political party of Arnulfo Arias
  OPTIONAL { 
    dbr:Arnulfo_Arias_Madrid dbo:party ?ariasParty .
  }

  # Find entities in Panama related to these individuals or their parties
  OPTIONAL {
    ?entityInPanama a dbo:Place ;
                   dbo:country dbr:Panama .
  }
}
```",3,3,4,1,3,2,3,28,1,852,0,0.0011723329425556857,1.0,0.00234192037470726
294,14,val,"Give me the resting place of Luke Lea (American politician, born 1879) and resting place of the architect of P. D. Houston Jr. House.","SELECT ?result WHERE { <http://dbpedia.org/resource/P._D._Houston_Jr._House> <http://dbpedia.org/ontology/architect> ?v2 . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Luke_Lea_(American_politician,_born_1879)> <http://dbpedia.org/ontology/restingPlace> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?burialPlaceLukeLea ?architectPdHoustonJrHouse ?burialPlaceArchitect WHERE {
  # Query for Luke Lea's burial place
  OPTIONAL {
    ?lukeLea a dbo:Politician ;
             foaf:name ""Luke Lea"" ;
             dbo:birthYear ""1879"" .
    ?lukeLea dbo:deathPlace ?burialPlaceLukeLea .
  }

  # Query for the architect of P. D. Houston Jr. House
  OPTIONAL {
    ?pdHoustonJrHouse a dbo:Building ;
                      dbo:architect ?architectPdHoustonJrHouse .
    ?architectPdHoustonJrHouse dbo:deathPlace ?burialPlaceArchitect .
  }
  
  # Filter to ensure we get the correct P. D. Houston Jr. House
  FILTER(STRSTARTS(STR(?pdHoustonJrHouse), ""http://dbpedia.org/resource/P._D._Houston_Jr._House""))
}
```",3,3,4,2,2,2,3,28,0,2,1,0.0,0.0,0
328,27,val,"Give me the leader of the office, that is a government agency, of the leader, that is an office holder and a politician, of Gustav Jonson.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/office> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/ontology/leader> ?result . <http://dbpedia.org/resource/Gustav_Jonson> <http://dbpedia.org/property/leader> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?governmentAgency WHERE {
  # Step 1: Identify Gustav Jonson as a politician and find his office
  ?gustavJonson a dbo:Politician ;
                foaf:name ""Gustav Jonson""@en .
  
  ?officeHolder dbo:officeHolder ?gustavJonson .

  # Step 2: Find the leader of this office
  ?leaderOfOffice dbo:officeHolder ?officeHolder ;
                  a dbo:OfficeHolder .

  # Step 3: Determine which government agency this leader oversees
  ?governmentAgency dbo:headOrganization ?leaderOfOffice .
}
```",3,6,4,3,1,3,3,71,0,0,1,0,0.0,0
778,12,val,"Give me the entity in United States and author of the work, that is a software, of Bill Joy.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/United_States> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Software>. ?v0 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Bill_Joy> . ?v0 <http://dbpedia.org/ontology/author> ?result . },"```sparql
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?software ?entityInUS
WHERE {
  ?software a dbo:Software ;
            dbo:author dbr:Bill_Joy .
  
  OPTIONAL { 
    ?software dbp:country ""United States""@en .
    BIND(?software AS ?entityInUS)
  }
}
```",3,4,4,2,2,3,2,20,0,5,1,0.0,0.0,0
161,30,val,"Give me the military force of Rif War and military force of Spanish Civil War and commander in the force, that is an event, of Emilio Mola.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Emilio_Mola> . ?v1 <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Rif_War> . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?rifWarForce ?rifWarCommander 
     ?civilWarForce ?civilWarCommander 
     WHERE {
       # Rif War
       ?rifEvent a dbo:MilitaryConflict ;
                 rdfs:label ""Rif War""@en .
       
       ?rifEvent dbo:militaryParticipant ?rifWarForce .

       OPTIONAL { ?rifWarForce dbo:commander ?rifWarCommander . }

       # Spanish Civil War
       ?civilEvent a dbo:MilitaryConflict ;
                  rdfs:label ""Spanish Civil War""@en .

       ?civilEvent dbo:militaryParticipant ?civilWarForce .

       OPTIONAL { ?civilWarForce dbo:commander ?civilWarCommander . }
       
       FILTER (?civilWarCommander = dbr:Emilio_Mola)
     }
```",4,5,5,2,3,3,3,71,0,0,11,0,0.0,0
994,30,val,"Give me the associated musical artist of Red Tide (band) and band member of the person born, that is a musical artist, as Donald Maynard Dokken and associated musical artist of S.A. Slayer.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://dbpedia.org/property/birthName> ""Donald Maynard Dokken""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Red_Tide_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/S.A._Slayer> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?associatedArtist ?bandMember ?sASlaveArtists WHERE {
  # Part 1: Associated musical artist of Red Tide (band)
  OPTIONAL {
    dbr:Red_Tide_(band) dbo:associatedBand ?associatedArtist .
  }

  # Part 2: Band member of Donald Maynard Dokken
  OPTIONAL {
    dbr:Don_Dokken dbo:member ?bandMember .
  }
  
  # Part 3: Associated musical artist of S.A. Slayer
  OPTIONAL {
    dbr:S._A._Slayer dbo:associatedBand ?sASlaveArtists .
  }
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
161,22,val,"Give me the military force of Rif War and commander in the force, that is an event, of Emilio Mola.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Emilio_Mola> . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Rif_War> . ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?militaryForce ?commander WHERE {
  ?event dbo:name ""Rif War""@en .
  ?event dbo:participatedIn ?militaryForce .
  OPTIONAL { ?militaryForce dbp:militaryCommander ?commander . }
  FILTER(?commander = <http://dbpedia.org/resource/Emilio_Mola>)
}
```",3,4,4,2,2,3,3,71,0,0,12,0,0.0,0
9,20,val,"Give me the alma mater of the awardee of Royal Medal and alma mater of John Alderdice, Baron Alderdice.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Medal> . ?v2 <http://dbpedia.org/ontology/almaMater> ?result . <http://dbpedia.org/resource/John_Alderdice,_Baron_Alderdice> <http://dbpedia.org/ontology/almaMater> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?royalMedalAlmaMater ?johnAlderdiceAlmaMater
WHERE {
  # Assuming a known awardee of the Royal Medal, e.g., Albert Einstein
  ?person dbo:awardReceived <http://dbpedia.org/resource/Royal_Medal> .
  ?person dbo:almaMater ?royalMedalAlmaMater .

  # John Alderdice, Baron Alderdice
  dbp:John_Alderdice_Baron_Alderdice dbo:almaMater ?johnAlderdiceAlmaMater .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
360,17,val,"Give me the native of the death place, that is a settlement, of Winnie Madikizela-Mandela and reference to Manfred Mann.","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Manfred Mann""@en . <http://dbpedia.org/resource/Winnie_Madikizela-Mandela> <http://dbpedia.org/ontology/deathPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?native ?manfredMannConnection
WHERE {
  # Find Winnie Madikizela-Mandela's death place
  dbr:Winnie_Madikizela-Mandela dbo:deathPlace ?deathPlace .
  
  # Ensure the death place is a settlement
  ?deathPlace rdf:type dbo:Settlement .

  # Find natives of this settlement
  ?native dbp:birthPlace ?deathPlace .

  OPTIONAL {
    # Check for any connection to Manfred Mann
    ?manfredMannConnection dbo:associatedBand dbr:Manfred_Mann .
    ?manfredMannConnection dbp:birthPlace ?deathPlace .
  }
}
```",3,4,4,2,2,2,3,28,1,542,0,0.001841620626151013,1.0,0.003676470588235294
378,33,val,"Give me the war of Carl Pontus Gahn and war of the commander in the reference, that is a military conflict, to Peninsular War.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Peninsular War""@en . ?v0 <http://dbpedia.org/ontology/commander> ?v3 . <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/ontology/battle> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war ?commander WHERE {
  # Find the war associated with Carl Pontus Gahn (Napoleonic Wars)
  VALUES (?person) { dbr:C_Pontus_Gahn }
  ?person dbo:nationality dbr:Sweden .
  ?war dbo:participatedIn ?person .
  FILTER CONTAINS(LCASE(?war), ""napoleonic wars"")

  # Find the Peninsular War and its commanders
  VALUES (?peninsularWar) { dbr:Peninsular_War }
  ?commander dbo:commanded ?peninsularWar .

  # Optionally, filter for a specific commander like Arthur Wellesley
  OPTIONAL {
    ?commander rdfs:label ""Arthur Wellesley""@en .
  }
}
```",4,5,5,3,2,3,3,71,0,0,2,0,0.0,0
996,13,val,Give me the force of the awardee of the elevation of Lac d'Avoriaz.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Lac_d'Avoriaz> <http://dbpedia.org/ontology/elevation> ?v0 . ?result <http://dbpedia.org/ontology/commander> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?force WHERE {
  # Identify Lac d'Avoriaz and its elevation
  dbr:Lac_d%27Avoriaz dbo:elevation ?elevation .

  # Assume there is an award related to this elevation (hypothetical property)
  ?award dbo:relatedToElevation ?elevation .
  
  # Find the awardee of this award
  ?award dbo:awardee ?person .

  # Hypothetically, find a 'force' attribute for the person
  ?person dbo:strength ?force .
}
```",3,3,4,3,1,3,2,20,0,0,11,0,0.0,0
281,34,val,Give me the war of the awardee of the award of Jonathon Band and war of New Zealand Army.,SELECT ?result WHERE { <http://dbpedia.org/resource/Jonathon_Band> <http://dbpedia.org/property/awards> ?v2 . ?v1 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/New_Zealand_Army> <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/property/awards> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?war WHERE {
  # Find Jonathan Band and his awards
  ?award dbo:recipient dbr:Jonathan_Band .
  
  # Link the award to a war
  ?award dbo:relatedEvent ?event .
  ?event rdf:type dbo:MilitaryConflict .

  # Ensure the war involves the New Zealand Army
  ?war dbo:participatingOrganisation dbr:New_Zealand_Army ;
       rdfs:label ?warLabel .
  
  FILTER(CONTAINS(LCASE(?warLabel), ""war"")) .
}
```",4,4,5,3,2,3,3,71,0,0,9,0,0.0,0
55,15,val,"Give me the band member of the producer, that is a band, of Used to Love Her and band of Newsted.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. <http://dbpedia.org/resource/Newsted> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Used_to_Love_Her> <http://dbpedia.org/ontology/producer> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandMember WHERE {
  # Bob Rock's involvement in bands
  ?rock a dbo:MusicArtist ;
        dbo:associatedBand ?bobRockBand .
  
  # Band members of Bob Rock's band
  ?bobRockBand dbo:member ?bandMember .

  # Jason Newsted's involvement in bands
  dbr:Jason_Newsted dbo:associatedBand ?newstedBand .

  # Check if the band member is also a band associated with Newsted
  ?newstedBand rdfs:label ?bandLabel .
  
  FILTER(CONTAINS(LCASE(?bandLabel), ""echobrain"") || CONTAINS(LCASE(?bandLabel), ""voivod""))
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
981,12,val,"Give me the birth place of the person born, that is a beauty queen, as  and entity in Indonesia.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BeautyQueen>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Indonesia> . ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/birthName> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?birthPlace WHERE {
  ?person dbo:title ""Beauty Queen""@en .
  ?person dbo:country dbr:Indonesia .
  ?person dbo:birthPlace ?birthPlace .
}
```",3,4,4,2,2,3,2,20,0,0,19,0,0.0,0
534,11,val,"Give me the headquarter of Royal Dublin Society and birth place of the child, that is a politician and an office holder, of Desmond FitzGerald (politician).",SELECT ?result WHERE { <http://dbpedia.org/resource/Royal_Dublin_Society> <http://dbpedia.org/ontology/headquarter> ?result . <http://dbpedia.org/resource/Desmond_FitzGerald_(politician)> <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?headquarters ?birthPlace WHERE {
  # Find the headquarters of Royal Dublin Society
  ?society dbo:name ""Royal Dublin Society""@en .
  ?society dbo:headquarters ?headquarters .

  # Identify Desmond FitzGerald (politician)
  ?desmond foaf:name ""Desmond FitzGerald""@en ;
           dbo:spouse ?spouse .

  # Find children of Desmond FitzGerald who are politicians or office holders
  OPTIONAL { ?child foaf:parent ?desmond ; 
                 a dbo:Politician ;
                 dbp:birthPlace ?birthPlace . }
  
  OPTIONAL { ?child foaf:parent ?desmond ; 
                 a dbo:OfficeHolder ;
                 dbp:birthPlace ?birthPlace . }

}
```",3,5,4,2,2,3,2,20,0,0,1,0,0.0,0
161,42,val,"Give me the commander in the force, that is an event, of Emilio Mola and military force of Spanish Civil War and military force of the force, that is a societal event and an event and a military conflict, of Francisco Franco.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Franco> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Emilio_Mola> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commander WHERE {
  # Find events where Emilio Mola was a commander in the Spanish Civil War
  ?event dbo:commander dbr:Emilio_Mola .
  ?event dbo:partOf dbr:Spanish_Civil_War .

  # Find societal events and military conflicts involving Francisco Franco
  ?societalEvent dbo:agent dbr:Francisco_Franco .
  ?militaryConflict dbo:agent dbr:Francisco_Franco .
  
  # Ensure the commander is the same individual involved in both contexts
  ?commander dbo:commander ?event .
  ?commander dbo:agent ?societalEvent .
  ?commander dbo:agent ?militaryConflict .

  FILTER (?commander != dbr:Emilio_Mola) # Exclude Emilio Mola himself
}
```",5,9,6,2,3,3,3,71,0,0,32,0,0.0,0
801,35,val,"Give me the associated musical artist of the writer, that is a musical artist and an artist, of 40 Dayz & 40 Nightz and professional in the alter ego of The Shadow.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/40_Dayz_&_40_Nightz> <http://dbpedia.org/property/writer> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v2 . ?result <http://dbpedia.org/property/occupation> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?writer WHERE {
  ?work dbo:title ""40 Dayz & 40 Nightz""@en .
  ?work dbo:creator ?writer .

  ?writer a dbo:MusicalArtist ;
         a dbo:Artist .

  OPTIONAL { ?writer foaf:name ""The Shadow""@en . }
  
  FILTER EXISTS { ?writer foaf:name ""The Shadow""@en . }
}
```",4,6,5,2,2,3,3,71,0,0,22,0,0.0,0
801,32,val,"Give me the professional in the alter ego of The Shadow and producer of the work, that is a musical work and a song and a work, of 50 Cent.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/50_Cent> . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://dbpedia.org/ontology/producer> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?alterEgo ?professionalRole ?work WHERE {
  # Find The Shadow's alter ego
  dbr:The_Shadow dbo:alterEgo ?alterEgo .
  
  # Find musical works involving the alter ego and 50 Cent
  ?work dbo:artist dbr:50_Cent ;
        dbo:producer ?alterEgo ;
        a dbo:Songs .

  # Retrieve professional role information
  ?alterEgo dbo:profession ?professionalRole .
}
```",4,7,5,2,2,3,3,71,0,0,27,0,0.0,0
534,12,val,Give me the birth place of Garret FitzGerald and headquarter of the owner of RDS Arena.,SELECT ?result WHERE { <http://dbpedia.org/resource/Garret_FitzGerald> <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/ontology/headquarter> ?result . <http://dbpedia.org/resource/RDS_Arena> <http://dbpedia.org/ontology/owner> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace ?headquarters WHERE {
  # Query for Garret FitzGerald's birthplace
  dbr:Garrett_FitzGerald dbo:birthPlace ?birthPlace .

  # Query for the owner of RDS Arena and its headquarters
  dbr:RDS_Arena dbo:owner ?owner .
  ?owner dbo:headquarters ?headquarters .
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
392,16,val,"Give me the province of the residence, that is a settlement and Italian, of Sebastiano Bianchetti and entity in Italy.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://dbpedia.org/ontology/province> ?result . <http://dbpedia.org/resource/Sebastiano_Bianchetti> <http://dbpedia.org/property/residence> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?province
WHERE {
  ?person dbo:name ""Sebastiano Bianchetti""@it .
  ?person dbo:residence ?settlement .
  
  ?settlement rdf:type dbo:Settlement .
  ?settlement rdfs:label ?label .
  FILTER (LANG(?label) = 'it' && CONTAINS(LCASE(?label), ""italia"")) .

  OPTIONAL { 
    ?settlement dbo:country dbr:Italy .
  }
  
  ?settlement dbo:administrativeTerritory ?province .
}
```",3,5,4,2,2,2,3,28,0,0,1,0,0.0,0
421,18,val,Give me the person born as the birth name of Dino Merlin and native of Socialist Federal Republic of Yugoslavia.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v0 . <http://dbpedia.org/resource/Dino_Merlin> <http://dbpedia.org/property/birthName> ?v0 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Socialist_Federal_Republic_of_Yugoslavia> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?birthName WHERE {
  ?person rdfs:label ""Dino Merlin""@en .
  ?person dbo:birthName ?birthName .
  OPTIONAL { ?person dbo:nationality ?nationality . }
  OPTIONAL { ?person dbo:countryOfBirth ?countryOfBirth . }
  
  FILTER (
    EXISTS { ?nationality rdfs:label ""Socialist Federal Republic of Yugoslavia""@en } ||
    EXISTS { ?countryOfBirth rdfs:label ""Socialist Federal Republic of Yugoslavia""@en }
  )
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
488,25,val,Give me the death place of Tokugawa Ieyasu and administration of the father of Emperor Go-Mizunoo.,SELECT ?result WHERE { <http://dbpedia.org/resource/Emperor_Go-Mizunoo> <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/property/leader> ?v1 . <http://dbpedia.org/resource/Tokugawa_Ieyasu> <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?deathPlace ?fatherName ?administration 
WHERE {
  # Query for Tokugawa Ieyasu's death place
  dbr:Tokugawa_Ieyasu dbo:deathPlace ?deathPlace .

  # Query for Emperor Go-Mizunoo's father and his administration
  dbr:Emperor_Go-Mizunoo dbo:father ?father .
  ?father rdfs:label ?fatherName .
  OPTIONAL { 
    ?father dbo:positionHeld ?administration .
  }
  
  FILTER (lang(?fatherName) = 'en')
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
232,23,val,Give me the child of the person born as the birth name of Jon Pertwee.,SELECT ?result WHERE { <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/property/birthName> ?v2 . ?v0 <http://dbpedia.org/ontology/child> ?result . ?v0 <http://dbpedia.org/property/birthName> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?childName WHERE {
  ?person rdfs:label ""Jon Pertwee""@en .
  FILTER NOT EXISTS { ?person owl:sameAs ?other } # Ensure we get the specific Jon Pertwee
  ?person dbo:birthName ?birthName .
  ?person dbo:child ?child .
  ?child rdfs:label ?childName .
  FILTER(LANG(?childName) = ""en"")
}
```",3,3,4,3,1,3,3,71,0,0,1,0,0.0,0
488,18,val,Give me the birth place of Enomoto Takeaki and death place of Tokugawa Ieyasu and administration of Emperor Go-Yōzei.,SELECT ?result WHERE { <http://dbpedia.org/resource/Tokugawa_Ieyasu> <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Enomoto_Takeaki> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Emperor_Go-Yōzei> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlaceEnomoto ?deathPlaceTokugawa ?reignFromGoYozei ?reignUntilGoYozei WHERE {
  # Enomoto Takeaki's birth place
  dbr:Enomoto_Takeaki dbo:birthPlace ?birthPlaceEnomoto .
  
  # Tokugawa Ieyasu's death place
  dbr:Tokugawa_Ieyasu dbo:deathPlace ?deathPlaceTokugawa .

  # Emperor Go-Yōzei's reign period
  dbr:Emperor_Go-Yozei dbo:reignFrom ?reignFromGoYozei .
  dbr:Emperor_Go-Yozei dbo:reignUntil ?reignUntilGoYozei .
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
820,13,val,Give me the professional in the award of the author of Understanding Comics.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v1 . ?v0 <http://dbpedia.org/property/awards> ?v1 . <http://dbpedia.org/resource/Understanding_Comics> <http://dbpedia.org/ontology/author> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?award ?professionalRole
WHERE {
  # Find the book ""Understanding Comics"" and its author
  ?book dbo:title ""Understanding Comics""@en .
  ?book dbo:author ?author .

  # Find awards received by this author
  ?award dbo:recipient ?author .

  # Get the professional role related to each award
  OPTIONAL { ?award dbo:profession ?professionalRole }
}
```",3,3,4,3,1,3,2,20,0,0,39650,0,0.0,0
378,25,val,Give me the war of Joaquín Blake and claim to fame of the commander in Great Siege of Gibraltar.,SELECT ?result WHERE { <http://dbpedia.org/resource/Great_Siege_of_Gibraltar> <http://dbpedia.org/ontology/commander> ?v1 . <http://dbpedia.org/resource/Joaquín_Blake> <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/ontology/knownFor> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war ?claimToFame WHERE {
  ?person dbo:birthName ""Joaquín Blake"" .
  
  # Find the war Joaquín Blake participated in
  ?person dbo:participatedIn ?war .

  # Find his claim to fame during the Great Siege of Gibraltar
  OPTIONAL { 
    ?event dbr:Great_Siege_of_Gibraltar dbo:participant ?person ;
           dbo:role ?claimToFame .
  }
  
  FILTER EXISTS { ?person a dbo:MilitaryPerson } # Ensure it's a military person
}
```",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
281,32,val,"Give me the entity in the birth place, that is a country, of Bob Heffron and war of the awardee of Knight Grand Cross of the Order of the Bath.",SELECT ?result WHERE { <http://dbpedia.org/resource/Bob_Heffron> <http://dbpedia.org/ontology/birthPlace> ?v3 . ?result <http://dbpedia.org/ontology/place> ?v3 . ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_the_Bath> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?birthPlaceCountry ?war 
WHERE {
  # Find Bob Heffron's birthplace that is a country
  dbr:Bob_Heffron dbo:birthPlace ?birthPlace .
  ?birthPlace rdf:type dbo:City ;
              dbo:country ?birthPlaceCountry .

  FILTER (?birthPlaceCountry rdf:type dbo:Country)

  # Find individuals awarded Knight Grand Cross of the Order of the Bath and their wars
  ?person dbo:award dbr:Knight_Grand_Cross_of_the_Order_of_the_Bath .
  ?person dbo:militaryConflict ?war .
  
  # Ensure we find a connection between birthplace country and war
  FILTER EXISTS {
    ?birthPlaceCountry dbo:countryName ?countryName .
    ?war dbo:name ?warName .
  }
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
492,41,val,"Give me the commander in the war, that is a military conflict and an event, of Frédéric-Georges Herr and person decedent at Algiers and person decedent at the work of US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Algiers> . ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Frédéric-Georges_Herr> <http://dbpedia.org/ontology/battle> ?v4 . ?v2 <http://dbpedia.org/property/author> ""US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  # Frédéric-Georges Herr's involvement in a war
  ?war dbo:participant dbr:Frédéric-Georges_Herr .
  
  # Commander of the war
  ?war dbo:commander ?commander .

  # Joseph C. Satterthwaite's death place
  dbr:Joseph_C._Satterthwaite dbo:deathPlace dbr:Algiers .

  # Frédéric-Georges Herr's death place
  dbr:Frédéric-Georges_Herr dbo:deathPlace dbr:Algiers .

  # Commander's death place must also be Algiers
  ?commander dbo:deathPlace dbr:Algiers .
}
```",5,7,6,2,3,3,3,71,0,0,1,0,0.0,0
232,43,val,"Give me the native of London and child of Jon Pertwee and actor of the claim to fame, that is a film and a military conflict, of the professional in Actor, narrator and producer.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/ontology/child> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v0 <http://dbpedia.org/ontology/knownFor> ?v4 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/London> . ?v4 <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://dbpedia.org/property/occupation> ""Actor, narrator and producer""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child ?film ?conflict
WHERE {
  # Jon Pertwee's children
  ?child dbo:parent dbr:Jon_Pertwee .
  
  # Native of London
  ?child dbo:nationality dbr:United_Kingdom ;
         dbo:birthPlace dbr:London .

  # Profession as actor, narrator, or producer
  ?child dbo:occupation dbr:Actor ;
         dbo:occupation dbr:Narrator ;
         dbo:occupation dbr:Producer .
  
  # Claim to fame includes a film and a military conflict
  ?child dbo:famousFor ?film .
  ?child dbo:famousFor ?conflict .

  FILTER (isLiteral(?film) && isLiteral(?conflict))
  FILTER regex(str(?film), ""Film"", ""i"")
  FILTER regex(str(?conflict), ""Military conflict"", ""i"")
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
747,19,val,Give me the person born on the birth date of Pavlo Khudzik and band of Amba Shepherd.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthDate> ?v0 . <http://dbpedia.org/resource/Pavlo_Khudzik> <http://dbpedia.org/ontology/birthDate> ?v0 . <http://dbpedia.org/resource/Amba_Shepherd> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?personName ?bandName WHERE {
  # Retrieve Pavlo Khudzik's birth date
  SELECT ?birthDate WHERE {
    ?pavloKhudzik dbo:birthDate ?birthDate .
    FILTER(STR(?pavloKhudzik) = ""Pavlo_Khudzik"")
  } LIMIT 1

  # Find another person born on the same date and Amba Shepherd's band
  ?person dbo:birthDate ?birthDate ;
          foaf:name ?personName .

  OPTIONAL {
    ?ambaShepherd dbo:band ?band .
    FILTER(STR(?ambaShepherd) = ""Amba_Shepherd"")
    ?band foaf:name ?bandName .
  }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
285,11,val,Give me the spouse of Aristotle Onassis and parent of the child of Tina Onassis Niarchos.,SELECT ?result WHERE { <http://dbpedia.org/resource/Tina_Onassis_Niarchos> <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Aristotle_Onassis> . ?v2 <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
  ?aristotleOnassis a dbo:Person ;
                   foaf:name ""Aristotle Onassis""@en .
  
  ?aristotleOnassis dbo:spouse ?spouse .

  OPTIONAL {
    ?tina dbp:father ?aristotleOnassis ;
          a dbo:Person ;
          foaf:name ""Tina Onassis Niarchos""@en .
    
    ?child dbo:parent ?tina ;
           a dbo:Person .
    
    ?child dbo:parent ?spouse .
  }
}
```",3,3,4,2,2,3,2,20,1,1,0,0.5,1.0,0.6666666666666666
547,43,val,Give me the resting place of James Burton (Egyptologist) and resting place of Alan Cunningham and resting place of the actor of the show with Emily Richard.,SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/restingPlace> ?result . ?v0 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emily_Richard> . <http://dbpedia.org/resource/Alan_Cunningham> <http://dbpedia.org/ontology/restingPlace> ?result . ?v0 <http://dbpedia.org/property/starring> ?v4 . <http://dbpedia.org/resource/James_Burton_(Egyptologist)> <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person ?restingPlace WHERE {
  # James Burton (Egyptologist)
  { 
    ?jamesBurton a dbo:Egyptologist ;
                 foaf:name ""James Burton"" .
    OPTIONAL { ?jamesBurton dbo:deathPlace ?restingPlace . }
  } UNION
  # Alan Cunningham
  { 
    ?alanCunningham a dbo:Person ;
                    foaf:name ""Alan Cunningham"" .
    OPTIONAL { ?alanCunningham dbo:deathPlace ?restingPlace . }
  } UNION
  # Actor from the show with Emily Richard
  {
    ?show dbo:actor ?actor ;
          foaf:name ?showName .
    ?emilyRichard a dbo:Person ;
                  foaf:name ""Emily Richard"" .
    ?emilyRole dbo:character ?emilyCharacter ;
               dbo:work ?show .
    OPTIONAL { ?actor dbo:deathPlace ?restingPlace . }
  }
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
801,21,val,Give me the associated musical artist of Chris Taylor (music producer) and professional in the alter ego of The Shadow.,SELECT ?result WHERE { <http://dbpedia.org/resource/Chris_Taylor_(music_producer)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artist WHERE {
  # Query for Chris Taylor's associated musical artist
  OPTIONAL { 
    dbr:Chris_Taylor_(musician) dbo:musicalArtist ?artist .
  }
  
  # Query for the professional behind The Shadow
  OPTIONAL {
    dbr:The_Shadow dbo:creator ?shadowCreator .
    ?shadowCreator rdfs:label ?professionalLabel .
    FILTER(CONTAINS(LCASE(?professionalLabel), ""walter b. gibson""))
  }
}
```",3,3,4,2,2,3,3,71,0,0,4,0,0.0,0
435,18,val,Give me the region of Greenwich Mean Time and work of the author of Iceland.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Greenwich_Mean_Time> . ?result <http://dbpedia.org/property/author> ?v0 . <http://dbpedia.org/resource/Iceland> <http://dbpedia.org/property/author> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?region WHERE {
  ?timeZone a dbo:TimeZone ;
            dbo:hasTimezoneName ?name .
  FILTER(CONTAINS(LCASE(?name), ""gmt""))
  ?location dbo:timezone ?timeZone ;
            rdfs:label ?region .
  FILTER(langMatches(lang(?region), ""EN""))
}

UNION

SELECT DISTINCT ?work WHERE {
  ?author dbo:nationality dbr:Iceland ;
          dbo:wikiPageRedirects ?redirect .
  OPTIONAL { ?author foaf:name ?name . }
  ?book dbo:author ?author ;
        rdfs:label ?work .
  FILTER(langMatches(lang(?work), ""EN""))
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
328,20,val,Give me the awardee of Order of Suvorov and commander in the force of Ferenc Szálasi.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Order_of_Suvorov> . ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Ferenc_Szálasi> . ?v2 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person WHERE {
  # Find individuals who received the Order of Suvorov
  { 
    ?person dbo:award dbr:Order_of_Suvorov .
  }
  
  UNION
  
  # Find commanders in Ferenc Szálasi's force
  { 
    ?commanderRole dbo:agent dbr:Ferenc_Szálasi ;
                   a dbo:MilitaryCommander ;
                   dbo:leader ?person .
  }
}
```",3,3,4,2,2,3,3,71,2,124,0,0.015873015873015872,1.0,0.03125
754,12,val,Give me the parent of the child of Ram Khamhaeng and parent of Loe Thai.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ram_Khamhaeng> <http://dbpedia.org/ontology/child> ?v0 . ?result <http://dbpedia.org/ontology/child> ?v0 . <http://dbpedia.org/resource/Loe_Thai> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT DISTINCT ?ramParentOfChild ?loeParentOfChild
WHERE {
  # Ram Khamhaeng's child and that child's parent
  ?child1 dbo:parent <http://dbpedia.org/resource/Ram_Khamhaeng> .
  ?child1 dbo:parent ?ramParentOfChild .

  # Loe Thai's child and that child's parent
  ?child2 dbo:parent <http://dbpedia.org/resource/Loe_Thai> .
  ?child2 dbo:parent ?loeParentOfChild .
}
```",3,3,4,2,2,3,2,20,1,1,0,0.5,1.0,0.6666666666666666
994,32,val,"Give me the associated musical artist of the associated musical artist of Watchtower (band) and associated musical artist of the band member, that is a band and a group and an organisation, of Meshuggah.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Meshuggah> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Watchtower_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT DISTINCT ?artist1 ?artist2 ?memberArtist WHERE {
  # Step 1: Find Watchtower's associated musical artist
  ?watchtower dbo:associatedMusicalArtist ?artist1 .
  FILTER(STRSTARTS(STR(?watchtower), ""http://dbpedia.org/resource/Watchtower_(band)""))

  # Step 2: Find the associated musical artist of that artist
  ?artist1 dbo:associatedMusicalArtist ?artist2 .

  # Step 3: Identify Meshuggah band members who are bands/groups/organizations
  ?meshuggah dbo:member ?member .
  FILTER(STRSTARTS(STR(?meshuggah), ""http://dbpedia.org/resource/Meshuggah""))
  
  # Ensure the member is a band/group/organization
  ?member rdf:type ?type .
  FILTER(
    STRSTARTS(STR(?type), ""http://dbpedia.org/ontology/Band"") ||
    STRSTARTS(STR(?type), ""http://dbpedia.org/ontology/MusicalGroup"") ||
    STRSTARTS(STR(?type), ""http://dbpedia.org/ontology/Organisation"")
  )

  # Step 4: Find associated musical artist for each member identified
  ?member dbo:associatedMusicalArtist ?memberArtist .
}

```",4,7,5,2,2,3,3,71,0,0,5,0,0.0,0
391,19,val,Give me the native of the figure known as Hub City and actor of The Departed.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . <http://dbpedia.org/resource/The_Departed> <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://dbpedia.org/property/nickname> ""Hub City""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actorName WHERE {
  ?movie dbo:starring ?actor .
  ?actor foaf:name ?actorName .

  FILTER(CONTAINS(LCASE(?movie), ""the departed""))

  OPTIONAL { 
    ?actor dbo:birthPlace ?birthPlace .
    ?birthPlace rdfs:label ""Hartford, Connecticut""@en .
  }

  UNION

  OPTIONAL {
    ?actor dbo:nativePlace ?nativePlace .
    ?nativePlace rdfs:label ""Hartford, Connecticut""@en .
  }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
161,18,val,Give me the commander in Biscay Campaign and military force of Spanish Civil War and military force of Rif War.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Rif_War> . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . <http://dbpedia.org/resource/Biscay_Campaign> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/resource/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?commander ?civilWarForce ?rifWarForce WHERE {
  # Find the commander of the Biscay Campaign during the Spanish Civil War
  ?campaign dbo:participatedIn dbpedia:Spanish_Civil_War ;
            rdfs:label ""Biscay Campaign""@en .
  ?campaign dbp:commander ?commander .

  # Find military forces involved in the Spanish Civil War
  ?civilWarForce dbo:participatedIn dbpedia:Spanish_Civil_War .

  # Find military forces involved in the Rif War
  ?rifWarForce dbo:participatedIn dbpedia:Rif_War .
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
48,13,val,"Give me the band of the writer of the work, that is a work, of Shellback (record producer).",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Shellback_(record_producer)> . ?v0 <http://dbpedia.org/property/writer> ?v1 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?writer ?band WHERE {
  # Identify Shellback as a record producer
  dbr:Shellback dbo:recordProducer ?work .

  # Find the writer of each work
  ?work dbo:lyricsBy ?writer .

  # Check if the writer is a member of any band
  ?writer dbo:bandMember ?band .
}
```",3,4,4,3,1,3,2,20,0,0,922,0,0.0,0
54,23,val,Give me the child of the father of the child of Thinkhaya of Pagan.,SELECT ?result WHERE { <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?grandchild
WHERE {
  ?thinkhaya a dbo:Person ;
             foaf:name ""Thinkhaya of Pagan""@en .
  
  ?child dbo:father ?thinkhaya ;
         a dbo:Person .

  ?grandchild dbo:father ?child ;
              a dbo:Person .
}
```",3,3,4,3,1,3,3,71,0,0,3,0,0.0,0
435,19,val,"Give me the territory administered from the figure known, that is a settlement and a town and Icelandic, as Land of fire and ice and region of Greenwich Mean Time and work of Article 62, Section IV of Constitution of Iceland.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Iceland>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Town>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Greenwich_Mean_Time> . ?v1 <http://dbpedia.org/property/nickname> ""Land of fire and ice""@en . ?result <http://dbpedia.org/ontology/capital> ?v1 . ?result <http://dbpedia.org/property/author> ""Article 62, Section IV of Constitution of Iceland""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?territory WHERE {
  ?territory dbo:country dbr:Iceland .
  ?territory a dbo:Settlement .
  OPTIONAL { ?territory a dbo:Town . }
  ?territory dbp:timeZone ""GMT"" .
}
```",4,7,5,2,3,2,3,28,0,0,1,0,0.0,0
314,14,val,Give me the awardee of the award of Sergei Makovetsky and person deceased at Madrid.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ?v2 . <http://dbpedia.org/resource/Sergei_Makovetsky> <http://dbpedia.org/property/awards> ?v2 . ?result <http://dbpedia.org/ontology/restingPlace> <http://dbpedia.org/resource/Madrid> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person WHERE {
  # Find awards received by Sergei Makovetsky
  dbr:Sergei_Makovetsky dbo:award ?award .
  
  # Find people who died in Madrid
  ?person dbo:deathPlace dbr:Madrid ;
          dbo:award ?award .
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
617,15,val,"Give me the parent of Mieszko II Lambert and child of the child, that is a royalty, of the parent of Mlada (abbess).",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Mlada_(abbess)> . ?v1 <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Mieszko_II_Lambert> . ?v1 <http://dbpedia.org/ontology/parent> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?commonEntity WHERE {
  # Step 1: Find Mieszko II Lambert's parent
  ?mieszko2 dbo:parent ?parentMieszko2 .
  FILTER(STR(?mieszko2) = ""Mieszko_II_Lambert"")

  # Step 2: Find a child of Mieszko II Lambert's parent
  ?childOfParentMieszko2 dbo:parent ?parentMieszko2 .

  # Step 3: Find Mlada (Abbess)'s parent
  ?mlada dbo:parent ?parentMlada .
  FILTER(STR(?mlada) = ""Mlada_(abbess)"")

  # Step 4: Find a child of Mlada's parent who is royalty
  ?royalChildOfParentMlada dbo:parent ?parentMlada ;
                          rdf:type/rdfs:subClassOf* dbo:Monarch .

  # Step 5: Find the common entity between step 2 and step 4
  VALUES (?commonEntity) {
    ?childOfParentMieszko2
    ?royalChildOfParentMlada
  }
}
```",4,5,5,3,2,3,2,20,0,0,1,0,0.0,0
303,17,val,"Give me the party of Arnulfo Arias and entity in the country, that is a country, of El Valle de Antón.",SELECT ?result WHERE { <http://dbpedia.org/resource/Arnulfo_Arias> <http://dbpedia.org/ontology/party> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/El_Valle_de_Antón> <http://dbpedia.org/ontology/country> ?v1 . ?result <http://dbpedia.org/ontology/country> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?party ?country WHERE {
  # Query for Arnulfo Arias's political party
  OPTIONAL {
    dbr:Arnulfo_Arias dbo:politicalParty ?party .
  }
  
  # Query for the country of El Valle de Antón
  OPTIONAL {
    dbr:El_Valle_de_Antón dbo:country ?country .
  }
}
```",3,4,4,2,2,2,3,28,0,1,1,0.0,0.0,0
392,12,val,Give me the region of Central European Time and entity in Italy and province of Schio.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy> . <http://dbpedia.org/resource/Schio> <http://dbpedia.org/ontology/province> ?result . ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Central_European_Time> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?province WHERE {
  ?timeZone a dbo:TimeZone ;
            rdfs:label ""Central European Time""@en .
  
  ?region dbo:timezone ?timeZone ;
          rdfs:label ""Italy""@en .

  ?province dbo:country dbr:Italy ;
            dbo:administrativeRegion ?region ;
            rdfs:label ?name .

  FILTER(CONTAINS(LCASE(?name), ""schio""))
}
```",3,3,4,1,3,2,3,28,0,0,1,0,0.0,0
285,12,val,Give me the spouse of the professional in  and parent of Alexander Onassis.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v0 . <http://dbpedia.org/resource/Alexander_Onassis> <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/property/occupation> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?spouse WHERE {
  ?parent dbo:child dbr:Alejandro_Onassis .
  ?parent dbo:spouse ?spouse .
}
```",3,3,4,2,2,3,2,20,0,0,2,0,0.0,0
492,22,val,"Give me the person decedent at French Algeria and person decedent at the capital, that is a settlement, of Algeria.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/French_Algeria> . <http://dbpedia.org/resource/Algeria> <http://dbpedia.org/ontology/capital> ?v1 . ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?personFrenchAlgeria ?personAlgiersCapital
WHERE {
  # Find person associated with French Algeria
  ?eventFrenchAlgeria a dbo:Event ;
                     dbo:location dbr:French_Algeria ;
                     dbo:agent ?personFrenchAlgeria .
  
  FILTER (?personFrenchAlgeria != dbr:Unknown)

  # Find person associated with Algiers, the capital of Algeria
  ?eventAlgiersCapital a dbo:Event ;
                      dbo:location dbr:Algiers ;
                      dbo:agent ?personAlgiersCapital .

  FILTER (?personAlgiersCapital != dbr:Unknown)
}
```",3,4,4,2,2,3,3,71,0,0,16,0,0.0,0
16,32,val,Give me the spouse of the person born as Ted Martin McGinley and professional in the profession of Satomi Ishihara.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ""Ted Martin McGinley""@en . ?result <http://dbpedia.org/property/occupation> ?v3 . ?v1 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Satomi_Ishihara> <http://dbpedia.org/property/occupation> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?spouse WHERE {
  ?person foaf:givenName ""Ted"" .
  ?person foaf:surname ""McGinley"" .
  ?person dbo:birthName ""Ted Martin McGinley""@en .
  ?person dbo:spouse ?spouse .

  OPTIONAL { 
    ?spouse dbo:profession dbr:Satomi_Ishihara .
  }
}
```",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
378,35,val,Give me the war of the person born as Carl Pontus Gahn and claim to fame of the commander in Great Siege of Gibraltar.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/ontology/knownFor> ?result . <http://dbpedia.org/resource/Great_Siege_of_Gibraltar> <http://dbpedia.org/ontology/commander> ?v1 . ?v2 <http://dbpedia.org/property/birthName> ""Carl Pontus Gahn""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war ?claimToFame
WHERE {
  # Find the war associated with Charles XII (Carl Pontus Gahn)
  dbr:Charles_XII_of_Sweden dbo:nationality dbr:Sweden .
  dbr:Great_Northern_War dbo:participatedIn dbr:Charles_XII_of_Sweden .

  # Find the claim to fame of George Augustus Eliott during the Great Siege of Gibraltar
  dbr:George_Augustus_Eliott dbo:nationality dbr:United_Kingdom .
  dbr:Great_Siege_of_Gibraltar dbo:defendedBy dbr:George_Augustus_Eliott .
  dbr:George_Augustus_Eliott dbo:claimToFame ?claimToFame .

  BIND(dbr:Great_Northern_War AS ?war)
}
```",4,4,5,2,2,3,3,71,0,0,2,0,0.0,0
747,40,val,"Give me the band of Amba Shepherd and band of Shèna and person born on the birth date of the person decedent, that is an athlete and a soccer player, at Zolotonosha.",SELECT ?result WHERE { <http://dbpedia.org/resource/Shèna> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v2 <http://dbpedia.org/ontology/birthDate> ?v1 . ?v2 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Zolotonosha> . ?result <http://dbpedia.org/ontology/birthDate> ?v1 . <http://dbpedia.org/resource/Amba_Shepherd> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?ambaBand ?shenaBand ?athleteName WHERE {
  # Find Amba Shepherd's band
  ?ambaShepherd a dbo:Person ;
                foaf:name ""Amba Shepherd""@en .
  ?ambaShepherd foaf:band ?ambaBand .

  # Find Shèna's band
  ?shena a dbo:Person ;
         foaf:name ""Shèna""@en .
  ?shena foaf:band ?shenaBand .

  # Find decedent and their birth date
  ?decedent a dbo:Person ;
            dbo:dateOfDeath ?deathDate ;
            dbo:birthDate ?birthDate .

  # Find athlete born on the same date as the decedent, who is also a soccer player from Zolotonosha
  ?athlete a dbo:SoccerPlayer, dbo:Athlete ;
           dbo:birthDate ?birthDate ;
           dbo:placeOfBirth ?zolotonosha .
  ?zolotonosha rdfs:label ""Zolotonosha""@en .

  # Get athlete's name
  ?athlete foaf:name ?athleteName .
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
783,14,val,"Give me the band member of the person born, that is an artist and a musical artist, as the persona of Ebony Reigns.",SELECT ?result WHERE { <http://dbpedia.org/resource/Ebony_Reigns> <http://xmlns.com/foaf/0.1/givenName> ?v2 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://dbpedia.org/property/birthName> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?bandMember WHERE {
  ?ebony a dbo:MusicalArtist ;
        foaf:name ""Ebony Reigns"" ;
        dbo:birthDate ?birthDate .
  
  OPTIONAL { 
    ?ebony dbo:member ?bandMember .
  }
}
```",3,5,4,3,1,3,2,20,0,0,7,0,0.0,0
161,27,val,"Give me the commander in the force, that is an event, of the figure known as El Director.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/commander> ?v1 . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://xmlns.com/foaf/0.1/nick> ""El Director""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?commander WHERE {
  ?elDirector rdfs:label ""El Director""@en .
  ?force dbo:commander ?commander .
  ?event dbo:participatedIn ?force .
  ?elDirector dbo:participatedIn ?event .
}
```",3,4,4,3,1,3,3,71,0,0,85,0,0.0,0
427,31,val,Give me the party of Giulio Andreotti and reference to the name of the party of Michele Pinto.,SELECT ?result WHERE { <http://dbpedia.org/resource/Giulio_Andreotti> <http://dbpedia.org/ontology/party> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v0 . <http://dbpedia.org/resource/Michele_Pinto> <http://dbpedia.org/ontology/party> ?v1 . ?v1 <http://xmlns.com/foaf/0.1/name> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?andreottiPartyLabel ?pintoPartyLabel
WHERE {
  ?andreotti dbo:wikiPageID ""Giulio_Andreotti"" .
  ?andreotti dbo:partyAffiliation ?andreottiParty .
  ?andreottiParty rdfs:label ?andreottiPartyLabel .

  OPTIONAL {
    ?pinto dbo:wikiPageID ""Michele_Pinto_(politician)"" .
    ?pinto dbo:partyAffiliation ?pintoParty .
    ?pintoParty rdfs:label ?pintoPartyLabel .
  }
}
```",4,4,5,3,2,3,3,71,0,0,2,0,0.0,0
54,25,val,"Give me the parent of Thado Minsaw of Prome and predecessor of the child, that is an office holder and a royalty, of Thihapate of Mohnyin.",SELECT ?result WHERE { <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Thihapate_of_Mohnyin> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/successor> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?commonEntity WHERE {
  # Find Thado Minsaw of Prome and his parent
  ?thadoMinsaw a dbo:Monarch ;
               dbp:country ""Prome"" ;
               dbo:royalAncestor ?parent .

  # Ensure the parent is an office holder and royalty
  ?parent a dbo:Monarch ;
          dbo:officeHolder true .

  # Find Thihapate of Mohnyin and his child
  ?thihapate a dbo:Monarch ;
              dbp:country ""Mohnyin"" ;
              dbo:royalAncestor ?child .

  # Ensure the child is an office holder and royalty
  ?child a dbo:Monarch ;
         dbo:officeHolder true .

  # Find the predecessor of Thihapate's child
  ?predecessor dbo:successor ?child .

  # Ensure the predecessor is an office holder and royalty
  ?predecessor a dbo:Monarch ;
               dbo:officeHolder true .

  # Find the common entity that fits both criteria
  FILTER (?parent = ?predecessor)
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
820,11,val,Give me the child of Jack Schwartzman and professional in the award of Scott McCloud.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/Scott_McCloud> <http://dbpedia.org/property/awards> ?v2 . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Jack_Schwartzman> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?child ?award
WHERE {
  ?jack dbo:child ?child .
  FILTER(STR(?jack) = ""Jack_Schwartzman"") .

  ?scott dbo:award ?award .
  FILTER(STR(?scott) = ""Scott_McCloud"") .

  ?child rdfs:label ?childLabel .
  ?award rdfs:label ?awardLabel .
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
617,25,val,Give me the parent of the child of Antiochus (son of Antiochus III the Great) and spouse of Laodice IV.,SELECT ?result WHERE { <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/child> ?v1 . ?result <http://dbpedia.org/ontology/child> ?v1 . <http://dbpedia.org/resource/Laodice_IV> <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?parent WHERE {
  # Find Antiochus (son of Antiochus III the Great)
  ?antiochus rdfs:label ""Antiochus IV Epiphanes""@en .
  
  # Find his child
  ?child dbo:childOf ?antiochus .

  # Find Laodice IV's spouse
  ?laodiceIV rdfs:label ""Laodice IV""@en .
  ?spouse dbo:spouse ?laodiceIV .
  
  # Check if the child is also a spouse of Laodice IV
  FILTER (?child = ?spouse)

  # Find the parent of this child
  ?parent dbo:childOf ?child .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
427,39,val,"Give me the party of Giulio Andreotti and party of the person born, that is an office holder and a politician, as the birth name of Romano Prodi.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Giulio_Andreotti> <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/property/birthName> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/property/birthName> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?andreottiParty ?prodisBirthName ?prodisParty WHERE {
  # Find Giulio Andreotti's political party
  dbr:Giulio_Andreotti dbo:party ?andreottiParty .

  # Identify Romano Prodi's birth name
  dbr:Romano_Prodi a dbo:OfficeHolder ;
                  a dbo:Politician ;
                  foaf:name ""Romano Prodi""^^xsd:string .
  OPTIONAL { dbr:Romano_Prodi foaf:givenName ?prodisBirthName . }

  # Find the political party of Romano Prodi's birth name
  OPTIONAL {
    ?person foaf:name ?prodisBirthName ;
            dbo:party ?prodisParty .
  }
}
```",4,6,5,3,2,3,3,71,0,0,3,0,0.0,0
54,43,val,Give me the parent of the child of the parent of Thado Minsaw of Prome and predecessor of Ameitta Thiri Maha Dhamma Dewi of Ava and child of Thinkhaya of Pagan.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Ameitta_Thiri_Maha_Dhamma_Dewi_of_Ava> . <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?result . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> . ?v4 <http://dbpedia.org/property/father> ?v0 . ?v4 <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent
WHERE {
  # Thado Minsaw's parent
  ?thadoMinsaw dbr:Thado_Minsaw .
  ?thadoMinsaw dbo:childOf ?parent1 .

  # Ameitta Thiri Maha Dhamma Dewi's predecessor
  ?ameitta dbr:Ameitta_Thiri_Maha_Dhamma_Dewi .
  ?predecessor dbo:successor ?ameitta .

  # Child of Thinkhaya of Pagan
  ?thinkhaya dbr:Thinkhaya_of_Pagan .
  ?thinkhaya dbo:childOf ?parent2 .

  # Ensure the entity is common across these relationships
  FILTER (?parent1 = ?predecessor && ?predecessor = ?parent2)
  
  # Find the parent of this common entity
  ?commonEntity dbo:childOf ?parent .
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
184,38,val,Give me the parent of the child of Archduke Joseph Francis of Austria and child of the child of Archduke Joseph Karl of Austria.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v2 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Karl_of_Austria> . ?result <http://dbpedia.org/property/father> ?v3 . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Francis_of_Austria> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?commonIndividual WHERE {
  # Find the child of Archduke Joseph Francis
  ?child1 dbo:parent dbr:Archduke_Joseph_Francis_of_Austria .
  
  # The parent of that child is Archduke Joseph Francis himself
  ?parent1 dbo:child ?child1 .

  # Find the grandchild of Archduke Joseph Karl
  ?grandchild2 dbo:parent ?child2 .
  ?child2 dbo:parent dbr:Archduke_Joseph_Karl_of_Austria .

  # The common individual is both ?parent1 and ?grandchild2
  FILTER (?parent1 = ?grandchild2)
}
```",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
528,19,val,Give me the war of the military force of Battle of Pisagua and war of Orozimbo Barbosa.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Pisagua> . <http://dbpedia.org/resource/Orozimbo_Barbosa> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?war WHERE {
  # Battle of Pisagua and its associated war
  OPTIONAL {
    dbr:Battle_of_Pisagua dbo:partOf ?war .
  }
  
  # Orozimbo Barbosa's historical context (no direct war association)
  OPTIONAL {
    dbr:Orozimbo_Barbosa dbo:occupation ?role .
    FILTER(CONTAINS(LCASE(?role), ""military police""))
  }
}
```",3,3,4,2,2,3,3,71,0,0,4,0,0.0,0
659,30,val,"Give me the military force of the force, that is a societal event and an event and a military conflict, of Rutger Jan Schimmelpenninck and commander in German campaign of 1813 and commander in Battle of Leipzig.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Battle_of_Leipzig> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> . <http://dbpedia.org/resource/German_campaign_of_1813> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?militaryForce WHERE {
  # Rutger Jan Schimmelpenninck as commander in the German campaign of 1813
  ?campaign1 a dbo:MilitaryConflict ;
             dbo:commander dbr:Rutger_Jan_Schimmelpenninck ;
             rdfs:label ""German campaign of 1813""@en .
  
  # Rutger Jan Schimmelpenninck as commander in the Battle of Leipzig
  ?campaign2 a dbo:MilitaryConflict ;
             dbo:commander dbr:Rutger_Jan_Schimmelpenninck ;
             rdfs:label ""Battle of Leipzig""@en .

  # Military force associated with these campaigns
  ?campaign1 dbo:militaryForce ?militaryForce .
  ?campaign2 dbo:militaryForce ?militaryForce .

  FILTER (lang(?campaign1Label) = 'en' && lang(?campaign2Label) = 'en')
}
```",4,7,5,2,3,3,3,71,0,0,6,0,0.0,0
801,31,val,Give me the producer of Westside Story (song) and professional in the alter ego of the true self of The Shadow.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Westside_Story_(song)> <http://dbpedia.org/ontology/producer> ?result . ?v1 <http://dbpedia.org/property/alterEgo> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v0 . ?v1 <http://xmlns.com/foaf/0.1/givenName> ""The Shadow""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?producer ?profession WHERE {
  { 
    dbpedia:Westside_Story_(song) dbo:producer ?producer .
  }
  UNION
  {
    ?person foaf:name ""Lamont Cranston""@en ;
            dbo:alterEgo <http://dbpedia.org/resource/The_Shadow> ;
            dbo:profession ?profession .
  }
}
```",4,4,5,3,2,3,3,71,0,0,2,0,0.0,0
251,15,val,"Give me the death place of Laura Mancinelli and location of the war, that is a military conflict, of Louis François Félix Musnier.",SELECT ?result WHERE { <http://dbpedia.org/resource/Laura_Mancinelli> <http://dbpedia.org/ontology/deathPlace> ?result . ?v1 <http://dbpedia.org/ontology/place> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Louis_François_Félix_Musnier> <http://dbpedia.org/ontology/battle> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?deathPlace ?warLocation WHERE {
  # Query for Laura Mancinelli's death place
  OPTIONAL { 
    dbr:Laura_Mancinelli dbo:deathPlace ?deathPlace .
  }
  
  # Query for wars involving Louis François Félix Musnier and their locations
  OPTIONAL {
    dbr:Louis_François_Félix_Musnier dbo:participatedIn ?war .
    ?war a dbo:MilitaryConflict ;
         dbo:location ?warLocation .
  }
}
```",3,4,4,2,2,2,3,28,2,1,0,0.6666666666666666,1.0,0.8
996,12,val,Give me the entity in the award of Ekrem Akurgal and force of Dagobert Sigmund von Wurmser.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> ?v0 . ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Dagobert_Sigmund_von_Wurmser> . <http://dbpedia.org/resource/Ekrem_Akurgal> <http://dbpedia.org/property/awards> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?award WHERE {
  VALUES ?person { 
    dbr:Ekrem_Akurgal 
    dbr:Dagobert_Sigmund_von_Wurmser
  }
  
  ?person dbo:award ?award .
}
```",3,3,4,2,2,3,2,20,0,7,4,0.0,0.0,0
404,35,val,"Give me the child of the father of Ernest Augustus, Duke of Brunswick and spouse of the person born, that is a royalty, as Princess Victoria Louise of Prussia.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/birthName> ""Princess Victoria Louise of Prussia""@en . ?result <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/property/father> ?v1 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child WHERE {
  ?ernestAugustus a dbo:Duke ;
                  dbp:father ?father .
  FILTER (str(?ernestAugustus) = ""Ernest Augustus, Duke of Brunswick"")

  ?princessVictoriaLouise a dbo:Princess ;
                         dbp:spouse ?spouse .
  FILTER (str(?princessVictoriaLouise) = ""Princess Victoria Louise of Prussia"")

  ?father dbo:child ?child .
  ?spouse dbo:child ?child .
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
92,33,val,"Give me the associated musical artist of the person born, that is an artist, as the actor of Return to Nuke 'Em High Volume 1 and band member of Nevermore.",SELECT ?result WHERE { <http://dbpedia.org/resource/Return_to_Nuke_'Em_High_Volume_1> <http://dbpedia.org/property/starring> ?v0 . ?v3 <http://dbpedia.org/property/birthName> ?v0 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Nevermore> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?musicalArtist WHERE {
  ?movie dbo:title ""Return to Nuke 'Em High Volume 1""@en .
  ?movie dbo:actor ?person .

  ?band dbo:name ""Nevermore""@en .
  ?band dbo:bandMember ?person .

  OPTIONAL { ?person dbo:musicalArtist ?musicalArtist }
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
232,29,val,"Give me the actor of the claim to fame, that is a film and a military conflict, of Sean Pertwee and native of London and child of Jon Pertwee.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/London> . <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/ontology/child> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Sean_Pertwee> <http://dbpedia.org/ontology/knownFor> ?v3 . ?v3 <http://dbpedia.org/ontology/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor ?filmOrConflict WHERE {
  ?person a dbo:Actor ;
          foaf:name ""Sean Pertwee""@en ;
          dbo:birthPlace dbr:London ;
          dbo:parent dbr:Jon_Pertwee .

  OPTIONAL { ?person dbo:film ?film . BIND(?film AS ?filmOrConflict) }
  OPTIONAL { ?person dbo:militaryConflict ?conflict . BIND(?conflict AS ?filmOrConflict) }

  FILTER EXISTS { ?person a dbo:Actor }
  
  BIND(?person AS ?actor)
}
```",4,6,5,2,3,3,3,71,0,0,1,0,0.0,0
161,34,val,"Give me the military force of the force, that is a societal event and an event and a military conflict, of the person decedent at Francoist Spain and commander in Biscay Campaign.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v1 . <http://dbpedia.org/resource/Biscay_Campaign> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/commander> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Francoist_Spain> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?militaryForce WHERE {
  ?person dbo:deathPlace dbr:Francoist_Spain .
  ?person dbo:militaryCommanderOf dbr:Biscay_Campaign .
  ?person dbo:militaryForce ?militaryForce .

  FILTER EXISTS { 
    ?event dbo:type dbr:Military_Conflict ;
           dbo:participatedIn ?militaryForce .
  }
  
  FILTER EXISTS {
    ?societalEvent dbo:type dbr:Societal_Event ;
                   dbo:relatedTo ?militaryForce .
  }

  FILTER EXISTS {
    ?generalEvent dbo:type dbr:Event ;
                  dbo:associatedWith ?militaryForce .
  }
}
```",4,7,5,3,2,3,3,71,0,0,3,0,0.0,0
281,39,val,"Give me the entity in Colony of New Zealand and war of the profession, that is a military unit, of the professional, that is an office holder and a politician, in New Zealand Army.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/property/occupation> ?v1 . ?v0 <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/New_Zealand_Army> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Colony_of_New_Zealand> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity WHERE {
  ?entity dbo:country dbr:New_Zealand .
  ?entity dbo:militaryUnit dbr:New_Zealand_Army .
  ?entity dbo:officeHolder true .
  ?entity dbo:politician true .
  ?entity dbo:profession dbr:Military_Unit .
  ?entity dbo:formerCountry dbr:Colony_of_New_Zealand .
}
```",4,7,5,3,2,3,3,71,0,0,1,0,0.0,0
77,15,val,Give me the force of Alexander I of Russia and war of the awardee of the award of Maxim Grigorievich Vlasov.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Maxim_Grigorievich_Vlasov> <http://dbpedia.org/property/awards> ?v0 . ?v1 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Alexander_I_of_Russia> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryRank ?award ?war 
WHERE {
  # Find the military rank of Alexander I of Russia
  dbr:Alexander_I_of_Russia dbo:militaryRank ?militaryRank .

  # Find the award received by Maxim Grigorievich Vlasov
  dbr:Maxim_Grigorievich_Vlasov dbo:award ?award .

  # Link the award to a war
  ?award dbo:relatedTo ?war .
}
```",4,4,5,3,2,3,2,20,0,0,20,0,0.0,0
184,23,val,"Give me the parent of the native of the landmark at elevation, that is a settlement, of 96.0.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> ?v2 . ?result <http://dbpedia.org/ontology/child> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://dbpedia.org/ontology/elevation> ""96.0""^^<http://www.w3.org/2001/XMLSchema#double> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent
WHERE {
  ?landmark a dbo:Lighthouse ;
            dbo:elevation ""96.0""^^xsd:float ;
            dbo:location ?settlement .
  
  ?person dbo:nativeOf ?landmark .
  
  ?country dbo:country ?person .
  
  BIND(?country AS ?parent)
}
```",3,4,4,3,1,3,3,71,0,0,31,0,0.0,0
404,28,val,"Give me the child of Ernest Augustus, Crown Prince of Hanover and parent of Prince Ernest Augustus of Hanover (born 1914) and spouse of the person born, that is a royalty, as Princess Victoria Louise of Prussia.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Prince_Ernest_Augustus_of_Hanover_(born_1914)> . ?v1 <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://dbpedia.org/property/birthName> ""Princess Victoria Louise of Prussia""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ernest_Augustus,_Crown_Prince_of_Hanover> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child ?spouse WHERE {
  # Ernest Augustus, Crown Prince of Hanover's child who is a parent of Prince Ernest Augustus of Hanover (born 1914)
  ?child dbo:parent dbr:Ernest_Augustus,_Crown_Prince_of_Hanover ;
         dbo:child dbr:Prince_Ernest_Augustus_of_Hanover_(1914-1987) .
  
  # Spouse of the child who is royalty and born as Princess Victoria Louise of Prussia
  ?spouse dbo:spouse ?child ;
          rdfs:label ""Princess Victoria Louise of Prussia""@en .

  FILTER (CONTAINS(LCASE(?spouse), ""prince"") && CONTAINS(LCASE(?spouse), ""wilhelm""))
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
487,12,val,"Give me the administration of the person born, that is a soccer player, as Philip Brian Scott and country of 2022 Vermont House of Representatives election.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v0 <http://dbpedia.org/property/birthName> ""Philip Brian Scott""@en . ?result <http://dbpedia.org/property/governor> ?v0 . <http://dbpedia.org/resource/2022_Vermont_House_of_Representatives_election> <http://dbpedia.org/ontology/country> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?administration ?country WHERE {
  ?person a dbo:SoccerPlayer ;
          foaf:name ""Philip Brian Scott""@en .
  
  OPTIONAL { 
    ?electionEvent dbo:electionDate ?date ;
                   dbo:electoralBody dbr:Vermont_House_of_Representatives ;
                   dbo:candidate ?person .
    
    FILTER(YEAR(?date) = 2022)
    
    ?administration dbo:administrator ?person .
    ?country dbo:countryName ?countryName .
    ?electionEvent dbo:country ?country .
  }
}
```",3,4,4,2,2,3,2,20,0,0,1,0,0.0,0
666,12,val,Give me the player in Steve Bruce and figure known as the nickname of England national beach soccer team.,SELECT ?result WHERE { <http://dbpedia.org/resource/England_national_beach_soccer_team> <http://dbpedia.org/property/nickname> ?v0 . ?result <http://dbpedia.org/property/nickname> ?v0 . <http://dbpedia.org/resource/Steve_Bruce> <http://dbpedia.org/ontology/team> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?player WHERE {
  # Find players associated with Steve Bruce as manager or player
  { 
    ?player dbo:manager dbr:Steve_Bruce .
  } UNION {
    ?team dbo:coach dbr:Steve_Bruce ;
          dbo:member ?player .
  }

  # Find figures known by a nickname related to the England national beach soccer team
  OPTIONAL {
    ?figure dbo:nickname ?nickname .
    FILTER CONTAINS(LCASE(?nickname), ""england national beach soccer"")
    ?team dbo:member ?figure .
    FILTER (?team = dbr:England_national_beach_soccer_team)
  }

  # Ensure the player is also associated with the nickname
  FILTER EXISTS {
    ?player = ?figure .
  }
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
994,23,val,Give me the associated musical artist of the associated musical artist of the reference to Watchtower.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v1 <http://xmlns.com/foaf/0.1/name> ""Watchtower""@en . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artist2 WHERE {
  # Find the artist associated with Watchtower (Blue Öyster Cult)
  dbr:Watchtower dbo:musicalArtist dbr:Blue_Oyster_Cult .
  
  # Find an artist associated with Blue Öyster Cult through Sandy Pearlman
  dbr:Blue_Oyster_Cult dbo:producer dbr:Sandy_Pearlman .
  dbr:Sandy_Pearlman dbo:producedAlbum dbr:Black_Sabbath .
  
  # Get the musical artist (band) for Black Sabbath
  dbr:Black_Sabbath dbo:musicalArtist ?artist2 .
}
```",3,3,4,3,1,3,3,71,0,0,16,0,0.0,0
701,33,val,Give me the parent of Meritamen and parent of the child of the child of Seti I.,SELECT ?result WHERE { <http://dbpedia.org/resource/Meritamen> <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seti_I> . ?v3 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/child> ?v3 . },"```sparql
# Query to find the parent of Meritamen
SELECT ?parent WHERE {
  ?meritamen dbo:spouse ?parent .
  FILTER (str(?meritamen) = ""Meritamen"")
}

UNION

# Query to find the grand-grandchild of Seti I
SELECT ?grandGrandChildParent WHERE {
  ?setiI dbo:child ?child1 .
  FILTER (str(?setiI) = ""Seti_I"") .

  ?child1 dbo:child ?grandChild .
  
  ?grandChild dbo:child ?grandGrandChild .
  
  ?grandGrandChild dbo:parent ?grandGrandChildParent .
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
285,13,val,Give me the parent of the child of the spouse of Aristotle Onassis.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Aristotle_Onassis> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?parentOfChild
WHERE {
  ?onassis dbo:spouse ?spouse .
  FILTER (str(?onassis) = ""Aristotle_Onassis"") .

  ?spouse dbo:child ?child .
  
  ?child dbo:parent ?parentOfChild .
}
```",3,3,4,3,1,3,2,20,0,0,5,0,0.0,0
994,35,val,"Give me the band member of the person born, that is a musical artist, as Donald Maynard Dokken and associated musical artist of the associated musical artist of Watchtower (band).","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/birthName> ""Donald Maynard Dokken""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . <http://dbpedia.org/resource/Watchtower_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

# Step 1: Find band members of Dokken (associated with Donald Maynard Dokken)
SELECT ?member WHERE {
    ?dokkenBand a dbo:MusicalArtist ;
                dbo:bandMember ?member .
    
    ?person foaf:name ""Donald Maynard Dokken"" ;
            dbo:birthPlace ?place ;
            dbo:occupation dbr:Musical_artist .

    FILTER EXISTS { ?dokkenBand foaf:name ""Dokken"" }
}

UNION

# Step 2: Find associated artists of Watchtower and their associated artists
SELECT DISTINCT ?associatedArtist WHERE {
    # Get associated artists of Watchtower
    ?watchtower a dbo:MusicalArtist ;
                dbo:associatedMusicalArtist ?artist .

    FILTER EXISTS { ?watchtower foaf:name ""Watchtower"" }

    # For each artist, find their associated artists
    ?artist dbo:associatedMusicalArtist ?associatedArtist .
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
328,36,val,"Give me the leader of the office, that is a government agency, of the leader, that is an office holder and a politician, of Gustav Jonson and awardee of Order of Suvorov.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Order_of_Suvorov> . ?v1 <http://dbpedia.org/ontology/leader> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v0 <http://dbpedia.org/property/office> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Gustav_Jonson> <http://dbpedia.org/property/leader> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?leaderOfLeader WHERE {
  # Find Gustav Jonson's office
  ?officeHolder a dbo:OfficeHolder ;
               foaf:name ""Gustav Jonson""@en .
  
  # Identify the government agency or office he leads
  ?officeHolder dbo:headOf dbr:Government_Agency ; # Replace with actual resource if known
  
  # Find the leader of that government agency
  ?agencyLeader dbo:headOfState ?office ;
                a dbo:OfficeHolder .

  # Ensure this leader is an awardee of the Order of Suvorov
  ?agencyLeader dbo:awardee dbr:Order_of_Suvorov .
  
  BIND(?agencyLeader AS ?leaderOfLeader)
}
```",4,7,5,3,2,3,3,71,0,0,1,0,0.0,0
312,7,val,"Give me the entity in Italy and entity in the administration, that is a settlement and a region and Italian and a state, of Democratic Party (Italy).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/province> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Democratic_Party_(Italy)> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?settlement ?region WHERE {
  # Find settlements or regions in Italy
  ?settlement a dbo:Settlement ;
              dbo:country dbr:Italy .
  
  OPTIONAL { 
    ?region a dbo:Region ;
            dbo:country dbr:Italy .
  }
  
  # Link to Democratic Party (Italy)
  ?party dbr:Democratic_Party_(Italy) .

  # Find political affiliations or administrative links
  ?settlement dbo:administrativeAuthority ?party .
  OPTIONAL { 
    ?region dbo:administrativeAuthority ?party .
  }

  FILTER EXISTS {
    ?settlement a dbo:Settlement .
    OPTIONAL { ?region a dbo:Region }
  }
}
```",3,7,4,2,2,2,2,9,0,0,587,0,0.0,0
747,27,val,Give me the band of the person born as the persona of Shèna.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Shèna> <http://xmlns.com/foaf/0.1/givenName> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?band WHERE {
  ?person foaf:nick ""Shèna"" .
  ?person dbo:birthName ?birthName .
  ?person dbo:member ?band .
}
```",3,3,4,3,1,3,3,71,0,0,8,0,0.0,0
391,44,val,"Give me the actor of the movie, that is a movie and a work and a television show, with Roz Ryan and actor of the claim to fame, that is a work, of Michael Ballhaus and native of Compton, California.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Roz_Ryan> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v4 <http://dbpedia.org/ontology/starring> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Compton,_California> . <http://dbpedia.org/resource/Michael_Ballhaus> <http://dbpedia.org/ontology/knownFor> ?v4 . ?v2 <http://dbpedia.org/property/starring> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?actor WHERE {
  ?movie a dbo:Film ;
         a dbo:Work ;
         a dbo:TelevisionShow .
  
  ?movie dbo:starring dbr:Roz_Ryan .

  ?ballhausClaimToFame dbo:claimToFame ?work .
  ?work dbo:film ?movie .
  ?ballhausClaimToFame dbp:name ""Michael Ballhaus""^^xsd:string .

  ?actor dbo:nationality dbr:United_States ;
         dbo:birthPlace dbr:Compton,_California .

  ?movie dbo:starring ?actor .
}
```",5,9,6,2,3,3,3,71,0,0,1,0,0.0,0
232,18,val,Give me the native of London and child of Jon Pertwee and actor of Dog Soldiers (film).,SELECT ?result WHERE { <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Dog_Soldiers_(film)> <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/London> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  ?person dbo:nativePlace dbr:London .
  ?child dbo:parent dbr:Jon_Pertwee .
  FILTER (?child = ?person) .
  ?film dbo:actor ?person .
  FILTER (str(?film) = ""Dog Soldiers"")
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
547,27,val,Give me the resting place of the awardee of the award of Gerald Graham.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> ?v1 . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Gerald_Graham> <http://dbpedia.org/property/awards> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?restingPlace WHERE {
  ?person a dbo:Person ;
          foaf:name ""Gerald Graham"" .
  
  ?person dbo:award ?award .

  OPTIONAL { 
    ?person dbo:deathPlace ?restingPlace .
  }
}
```",3,3,4,3,1,3,3,71,0,0,704,0,0.0,0
16,19,val,Give me the spouse of the person born as Ted Martin McGinley and professional in Actress.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/property/birthName> ""Ted Martin McGinley""@en . ?result <http://dbpedia.org/property/occupation> ""Actress""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?spouse WHERE {
  ?person dbo:birthName ""Ted Martin McGinley"" .
  ?person foaf:name ""Ted McGinley"" .
  ?person dbo:occupation ?occupation .
  FILTER(CONTAINS(LCASE(str(?occupation)), ""actor"") || CONTAINS(LCASE(str(?occupation)), ""actress""))
  ?person foaf:mbox <http://dbpedia.org/resource/Ted_McGinley> .
  ?person foaf:spouse ?spouse .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
285,15,val,Give me the spouse of Aristotle Onassis and parent of the child of the spouse of Aristotle Onassis.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Aristotle_Onassis> . ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/ontology/child> ?v1 . ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Aristotle_Onassis> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?parentName WHERE {
  ?aristotleOnassis a dbo:Person ;
                    foaf:name ""Aristotle Onassis""@en .
  
  ?aristotleOnassis dbo:spouse ?spouse .

  ?spouse dbo:child ?child .

  ?child dbo:parent ?parent .

  FILTER (?parent != ?aristotleOnassis) # Ensure we get the other parent

  ?parent foaf:name ?parentName .
}
```",4,4,5,3,2,3,2,20,0,2,2,0.0,0.0,0
696,12,val,Give me the birth place of Tim Brennan and landmark at elevation of the award of Nie Rongzhen.,SELECT ?result WHERE { <http://dbpedia.org/resource/Tim_Brennan> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Nie_Rongzhen> <http://dbpedia.org/property/awards> ?v0 . ?result <http://dbpedia.org/ontology/elevation> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace WHERE {
  dbr:Tim_Brennan dbo:birthPlace ?birthPlace .
}

# Assuming we have an elevation value for the Nie Rongzhen Award, say 1000 meters
SELECT ?landmark WHERE {
  ?landmark a dbo:Mountain ;
            dbo:elevationAboveSeaLevel ?elevation .
  FILTER (?elevation = 1000) # Replace 1000 with the actual elevation if known
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
328,37,val,Give me the leader of People's Commissariat of Defense of the Soviet Union and commander in the force of the person decedent at Budapest.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/commander> ?v0 . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Budapest> . <http://dbpedia.org/resource/People's_Commissariat_of_Defense_of_the_Soviet_Union> <http://dbpedia.org/ontology/leader> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?leader ?commander WHERE {
  # Find the leader of People's Commissariat of Defense during 1944-1945
  ?leader dbo:office ""People's Commissar for Defence""@en .
  ?leader dbo:termStartYear ?startYear .
  ?leader dbo:termEndYear ?endYear .
  FILTER (?startYear <= 1944 && ?endYear >= 1944) .

  # Find the commander who died at Budapest
  dbr:Rodion_Malinovsky dbo:deathPlace dbr:Budapest ;
                        dbo:occupation ""Military officer""@en ;
                        dbo:dateOfDeath ?dateOfDeath .
  
  FILTER (?dateOfDeath > 1943 && ?dateOfDeath < 1946) .

  # Link the leader and commander
  OPTIONAL { ?leader dbo:subordinate dbr:Rodion_Malinovsky }
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
356,12,val,"Give me the player in 2015 Sacramento Republic FC season and team of the native, that is a soccer player and a soccer manager, of Wolverhampton.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/2015_Sacramento_Republic_FC_season> <http://dbpedia.org/ontology/team> ?result . ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Wolverhampton> . ?result <http://dbpedia.org/ontology/manager> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?player ?team WHERE {
  ?player a dbo:SoccerPlayer ;
          dbo:nationality dbr:England ;
          dbo:birthPlace dbr:Wolverhampton .
  
  ?manager a dbo:SoccerManager ;
           dbo:agent ?player .

  ?player dbo:memberOfTeam ?team .
  ?team dbo:season ""2015""^^xsd:string ;
        dbo:homeTown dbr:Sacramento_Republic_FC .

  FILTER EXISTS { ?player dbo:sport dbr:Soccer }
}
```",3,5,4,2,2,3,2,20,0,0,1,0,0.0,0
492,18,val,Give me the commander in Franco-Hova Wars and person decedent at French Algeria and person decedent at Algiers.,SELECT ?result WHERE { <http://dbpedia.org/resource/Franco-Hova_Wars> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Algiers> . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/French_Algeria> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commander ?decedentAlgeria ?decedentAlgiers WHERE {
  # Find the commander in Franco-Hova Wars
  ?commander dbo:role ""Commander""@en .
  ?commander dbo:participatedIn dbr:Franco-Hova_Wars .

  # Find person decedent at French Algeria
  ?decedentAlgeria dbo:deathPlace dbr:French_Algeria ;
                   a dbo:Person .

  # Find person decedent at Algiers
  ?decedentAlgiers dbo:deathPlace dbr:Algiers ;
                   a dbo:Person .
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
55,14,val,"Give me the band member of Guns N' Roses and band member of the band member, that is a band and a group, of San Francisco Symphony.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Guns_N'_Roses> . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/San_Francisco_Symphony> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?member ?secondaryBand
WHERE {
  # Step 1: Find members of Guns N' Roses
  ?gnrMember dbo:band dbr:Guns_N%27_Roses .
  
  # Step 2: Check if these members are part of other bands
  ?gnrMember dbo:band ?secondaryBand .

  # Step 3: Ensure the secondary band is both a ""band"" and a ""group""
  ?secondaryBand rdf:type dbo:MusicalGroup ;
                 dbo:genre dbr:Rock_music ; # Assuming Rock music as a common genre for bands

  # Step 4: Check if the secondary band is associated with San Francisco Symphony
  ?association dbo:performer ?secondaryBand .
  ?association dbo:location dbr:San_Francisco_Symphony .

}
```",3,5,4,2,2,2,3,28,0,0,1,0,0.0,0
16,30,val,Give me the person born as the birth name of Gigi Rice and professional in Actress and spouse of Ted McGinley.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Actress""@en . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Gigi_Rice> <http://dbpedia.org/property/birthName> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person WHERE {
  ?person foaf:givenName ""Gigi"" .
  ?person foaf:surname ""Rice"" .
  ?person dbo:occupation dbp:Actress .
  ?person dbp:spouse ?ted .
  ?ted foaf:name ""Ted McGinley""@en
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
92,44,val,"Give me the associated musical artist of the person born, that is an artist, as Jim Sheppard and band of the person born as Joseph Michael Furney and band member of Nevermore.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/bandMember> ?v2 . ?v4 <http://dbpedia.org/property/birthName> ""Jim Sheppard""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Nevermore> . ?v2 <http://dbpedia.org/property/birthName> ""Joseph Michael Furney""@en . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band WHERE {
  # Jim Sheppard is also known as Joseph Michael Furney
  dbr:Jim_Sheppard dbo:birthName ""Joseph Michael Furney"" .
  
  # Jim Sheppard's associated band
  dbr:Jim_Sheppard dbo:musicalArtist ?band .

  # Filter to ensure the band is Nevermore
  FILTER(?band = dbr:Nevermore)
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
404,23,val,"Give me the spouse of the person born, that is a royalty, as the birth name of Princess Victoria Louise of Prussia.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/property/birthName> ?v2 . ?v0 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
  ?person rdfs:label ""Princess Victoria Louise of Prussia""@en .
  FILTER NOT EXISTS { ?person a dbo:RoyalPerson } .
  ?person dbo:birthName ?birthName .
  ?person dbo:spouse ?spouse .
}
```",3,4,4,3,1,3,3,71,0,0,1,0,0.0,0
161,40,val,"Give me the commander in Biscay Campaign and military force of Spanish Civil War and military force of the force, that is a societal event and an event and a military conflict, of the person decedent at Francoist Spain.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Biscay_Campaign> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . ?v2 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Francoist_Spain> . ?v1 <http://dbpedia.org/ontology/commander> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?militaryForce1 ?militaryForce2 ?decedent WHERE {
  # Identify the Biscay Campaign
  ?campaign a dbo:MilitaryCampaign ;
            rdfs:label ""Biscay Campaign""@en .

  # Find the commander of the Biscay Campaign
  ?campaign dbo:commander ?commander .

  # Identify military forces involved in the Biscay Campaign
  ?campaign dbo:militaryForce ?militaryForce1 .
  ?campaign dbo:opposingMilitaryForce ?militaryForce2 .

  # Link to the Spanish Civil War as a societal event and military conflict
  ?civilWar a dbo:MilitaryConflict, dbo:SocietalEvent ;
            rdfs:label ""Spanish Civil War""@en .
  
  # Ensure the campaign is part of the Spanish Civil War
  ?campaign dbo:partOf ?civilWar .

  # Find a person who died during Francoist Spain
  ?decedent dbo:dateOfDeath ?deathDate ;
           dbo:nationality dbr:Spain ;
           dbo:causeOfDeath ?cause .
  
  FILTER EXISTS { 
    ?francoistPeriod dbo:end ?endYear .
    ?francoistPeriod rdfs:label ""Francoist Spain""@en .
    ?decedent dbo:dateOfDeath ?deathDate .
    FILTER (?deathDate > ?startYear && ?deathDate <= ?endYear)
  }
}
```",5,8,6,3,3,3,3,71,0,0,3,0,0.0,0
184,19,val,Give me the parent of the native of Budapest and child of Archduke Joseph August of Austria.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Budapest> . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_August_of_Austria> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  ?person dbo:birthPlace dbr:Budapest .
  ?person dbo:childOf dbr:Archduke_Joseph_August_of_Austria .
  ?person dbo:parent ?parent .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
303,14,val,"Give me the entity in the country, that is a country, of El Valle de Antón and party of Guillermo Endara.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/country> ?v2 . <http://dbpedia.org/resource/Guillermo_Endara> <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/El_Valle_de_Antón> <http://dbpedia.org/ontology/country> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?country ?party 
WHERE {
  # Find the country where El Valle de Antón is located
  dbr:El_Valle_de_Antón dbo:locatedInCountry ?country .

  # Find the political party of Guillermo Endara
  dbr:Guillermo_Endara dbo:politicalAffiliation ?party .
}
```",3,4,4,2,2,2,3,28,0,0,2,0,0.0,0
645,12,val,Give me the alma mater of the child of Richard Pankhurst and entity in United Kingdom.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . <http://dbpedia.org/resource/Richard_Pankhurst> <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?child ?almaMater WHERE {
  ?person rdfs:label ""Richard Pankhurst""@en .
  ?person dbo:child ?child .
  ?child foaf:almaMater ?almaMater .
  ?almaMater dbo:country dbpedia:United_Kingdom .
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
701,22,val,Give me the spouse of the father of Merneptah and parent of Meritamen.,SELECT ?result WHERE { <http://dbpedia.org/resource/Merneptah> <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Meritamen> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/spouse> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
  ?merneptah dbo:father ?father .
  FILTER (str(?merneptah) = ""Merneptah"") .

  ?father dbo:spouse ?spouse .
  
  OPTIONAL { ?spouse dbp:child ?meritamen . }
  FILTER (EXISTS { ?meritamen dbp:name ""Meritamen"" } || EXISTS { ?meritamen rdfs:label ""Meritamen""@en })
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
492,43,val,"Give me the commander in the war, that is a military conflict and an event, of the commander in Battle of Verdun and person decedent at French Algeria and person decedent at Algiers.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v4 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Battle_of_Verdun> <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://dbpedia.org/ontology/battle> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/French_Algeria> . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Algiers> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commanderInOtherConflict WHERE {
  # Find the commander in the Battle of Verdun
  ?battleOfVerdun a dbo:MilitaryEngagement ;
                  dbo:commander ?verdunCommander .

  FILTER (str(?battleOfVerdun) = ""Battle_of_Verdun"") .

  # Ensure this commander is involved in another military conflict that is an event
  ?otherConflict a dbo:MilitaryEngagement, dbo:Event ;
                 dbo:commander ?commanderInOtherConflict .
  
  # Check if the same person was the commander in both conflicts
  FILTER (?verdunCommander = ?commanderInOtherConflict) .

  # Ensure this commander died in both French Algeria and Algiers
  ?commanderInOtherConflict dbo:deathPlace ?deathPlace1, ?deathPlace2 .
  
  FILTER (str(?deathPlace1) IN (""French_Algeria"", ""Algiers"") &&
          str(?deathPlace2) IN (""French_Algeria"", ""Algiers"")) .
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
77,13,val,Give me the war of the awardee of the award of Maxim Grigorievich Vlasov.,SELECT ?result WHERE { <http://dbpedia.org/resource/Maxim_Grigorievich_Vlasov> <http://dbpedia.org/property/awards> ?v0 . ?v1 <http://dbpedia.org/property/awards> ?v0 . ?v1 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war WHERE {
  ?vlasov dbo:award ?award .
  ?vlasov rdfs:label ""Maxim Grigorievich Vlasov""@en .
  
  ?award dbo:awardingAuthority dbr:Nazi_Germany ;
         dbo:associatedEvent ?event .

  ?event dbo:wikiPageRedirects ?war .
  FILTER(CONTAINS(LCASE(?war), ""world war ii""))
}
```",3,3,4,3,1,3,2,20,0,0,436,0,0.0,0
701,44,val,Give me the parent of the child of Ramesses II and spouse of the father of Merneptah and parent of Meritamen.,SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ramesses_II> . ?result <http://dbpedia.org/ontology/spouse> ?v2 . <http://dbpedia.org/resource/Meritamen> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/child> ?v4 . <http://dbpedia.org/resource/Merneptah> <http://dbpedia.org/property/father> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent
WHERE {
  # Identify a child of Ramesses II (Merneptah)
  dbr:Ramesses_II dbo:child dbr:Merneptah .
  
  # Find the parent of Merneptah, which is Ramesses II
  dbr:Merneptah dbo:parent dbr:Ramesses_II .

  # Identify the spouse of Ramesses II who is also a parent of Meritamen
  dbr:Ramesses_II dbo:spouse ?spouse .
  ?spouse dbo:child dbr:Meritamen .
  
  # Ensure that this spouse is also the parent of Merneptah (which means they are the same person)
  FILTER (?parent = ?spouse)
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
801,42,val,"Give me the associated musical artist of the writer, that is a musical artist and an artist, of 40 Dayz & 40 Nightz and professional in the alter ego of The Shadow and producer of Westside Story (song).",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/Westside_Story_(song)> <http://dbpedia.org/ontology/producer> ?result . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v2 . <http://dbpedia.org/resource/40_Dayz_&_40_Nightz> <http://dbpedia.org/property/writer> ?v1 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?artist WHERE {
  ?writer dbo:work dbr:40_Dayz_%26_40_Nightz .
  ?writer dbo:profession dbr/Musical_artist ;
          dbo:profession dbr/Artist .
  ?writer dbp:alterEgo ""The Shadow"" .
  ?producer dbo:producedWork dbr:Westside_Story_(song) .
  FILTER (?writer = ?artist && ?writer = ?producer)
}
```",5,7,6,2,3,3,3,71,0,0,1,0,0.0,0
328,21,val,"Give me the leader of People's Commissariat of Defense of the Soviet Union and awardee of the award of Bruce Fraser, 1st Baron Fraser of North Cape.","SELECT ?result WHERE { <http://dbpedia.org/resource/Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape> <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/property/awards> ?v1 . <http://dbpedia.org/resource/People's_Commissariat_of_Defense_of_the_Soviet_Union> <http://dbpedia.org/ontology/leader> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person dbo:positionHeld dbr:People's_Commissariat_of_Defense_of_the_Soviet_Union .
  ?person dbo:awardeeOf dbr:Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
391,37,val,"Give me the actor of the claim to fame, that is a work, of the spouse of Sherry Hormann and actor of All About the Andersons.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/knownFor> ?v3 . <http://dbpedia.org/resource/All_About_the_Andersons> <http://dbpedia.org/property/starring> ?result . ?v3 <http://dbpedia.org/ontology/starring> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Sherry_Hormann> <http://dbpedia.org/ontology/spouse> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actor WHERE {
  # Find Sherry Hormann's spouse
  dbr:Sherry_Hormann dbo:spouse ?spouse .

  # Determine the claim to fame of the spouse
  ?spouse dbo:notableWork ?claimToFame .
  
  # Get the actor associated with this work
  ?claimToFame dbo:actor ?actor .

  # Find the actor from ""All About the Andersons""
  dbr:All_About_the_Andersons dbo:starring ?andersonActor .

  # Check if there is a common actor
  FILTER (?actor = ?andersonActor)
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
365,7,val,"Give me the band of the professional, that is an artist and a musical artist, in Vocalist, musician, songwriter and reference to The Blasters.","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""The Blasters""@en . ?result <http://dbpedia.org/ontology/bandMember> ?v2 . ?v2 <http://dbpedia.org/property/occupation> ""Vocalist, musician, songwriter""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp-owl: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  ?band rdf:type dbo:Band .
  ?band rdfs:label ""The Blasters""@en .
  
  ?person dbo:vocalist ?band ;
          a dbo:MusicalArtist ;
          (dbo:musician|dbo:songwriter) ?band .

  FILTER(LANG(?bandLabel) = 'en')
}
```",3,5,4,2,2,2,2,9,0,0,1,0,0.0,0
339,14,val,Give me the father of the child of the parent of Princess Olga of Greece and Denmark.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?result . ?v2 <http://dbpedia.org/ontology/child> ?v0 . ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Princess_Olga_of_Greece_and_Denmark> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT DISTINCT ?father
WHERE {
  # Step 1: Identify Princess Olga of Greece and Denmark
  ?olga a dbo:Person ;
        foaf:name ""Princess Olga of Greece and Denmark""@en .

  # Step 2: Find her parent(s)
  ?parent dbo:child ?olga .

  # Step 3: Determine the child(ren) of her parent(s)
  ?parentChild dbo:child ?child .

  # Step 4: Identify the father of that child
  ?father dbo:child ?child .
}
```",3,3,4,3,1,3,2,20,0,0,1,0,0.0,0
360,18,val,Give me the reference to the author of Blinded by the Light and native of Johannesburg.,SELECT ?result WHERE { <http://dbpedia.org/resource/Blinded_by_the_Light> <http://dbpedia.org/property/author> ?v2 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Johannesburg> . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?author ?birthPlace WHERE {
  ?film dbo:basedOn dbr:Blinded_by_the_Light_(song) .
  ?film dbo:writer ?author .
  ?author dbo:birthPlace dbr:Johannesburg .
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
345,11,val,Give me the figure known as the nickname of FC Vaduz and team of Alessandro Mangiarratti.,SELECT ?result WHERE { <http://dbpedia.org/resource/FC_Vaduz> <http://dbpedia.org/property/nickname> ?v2 . ?result <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Alessandro_Mangiarratti> . ?result <http://dbpedia.org/property/nickname> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?nickname ?team WHERE {
  # Query for FC Vaduz's nickname
  ?club rdfs:label ""FC Vaduz""@en .
  ?club dbo:nickname ?nickname .

  # Query for Alessandro Mangiarratti's team
  ?player rdfs:label ""Alessandro Mangiarratti""@en .
  ?player dbo:memberOfTeam ?team .
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
303,15,val,"Give me the party of the commander, that is a politician, in United States invasion of Panama and party of Arnulfo Arias.",SELECT ?result WHERE { <http://dbpedia.org/resource/Arnulfo_Arias> <http://dbpedia.org/ontology/party> ?result . ?v1 <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/United_States_invasion_of_Panama> <http://dbpedia.org/ontology/commander> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commanderParty ?arnulfoAriasParty WHERE {
  # Colin Powell as the commander of the United States invasion of Panama
  dbr:Colin_Powell dbo:positionHeld [
    a dbo:Position ;
    dbo:organization dbr:United_States_Armed_Forces ;
    dbo:role dbr:Operation_Joint_Force_Resolve .
  ] .

  # Colin Powell's political party affiliation
  OPTIONAL {
    ?commanderParty dbo:member dbr:Colin_Powell .
    ?commanderParty rdfs:label ?partyLabelCommander .
    FILTER (CONTAINS(LCASE(?partyLabelCommander), ""republican"") || CONTAINS(LCASE(?partyLabelCommander), ""unaffiliated""))
  }

  # Arnulfo Arias's political party affiliation
  dbr:Arnulfo_Arias_Mendoza dbo:member ?arnulfoAriasParty .
  ?arnulfoAriasParty rdfs:label ?partyLabelArias .
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
391,18,val,"Give me the actor of The Departed and native of Compton, California and actor of All About the Andersons.","SELECT ?result WHERE { <http://dbpedia.org/resource/The_Departed> <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/All_About_the_Andersons> <http://dbpedia.org/property/starring> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Compton,_California> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?actor WHERE {
  # Find actors in ""The Departed""
  ?movie dbo:title ""The Departed""@en .
  ?movie dbo:starring ?actor .

  # Filter by birthplace (Compton, California)
  ?actor dbp:birthPlace ?place .
  FILTER(CONTAINS(LCASE(str(?place)), ""compton california""))

  # Ensure the actor also appeared in ""All About the Andersons""
  ?anotherMovie dbo:title ""All About the Andersons""@en .
  ?anotherMovie dbo:starring ?actor
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
465,7,val,Give me the administration of Czech Pirate Party and death place of the native of Prague.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/deathPlace> ?result . ?result <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Czech_Pirate_Party> . ?v2 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Prague> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?administration ?deathPlace WHERE {
  # Part 1: Administration of Czech Pirate Party
  OPTIONAL {
    ?party a dbo:PoliticalParty ;
           rdfs:label ""Czech Pirate Party""@en .
    ?person dbo:memberOf ?party ;
            dbo:positionHeld ?position .
    FILTER CONTAINS(LCASE(?position), ""leader"") || CONTAINS(LCASE(?position), ""chairman"")
    BIND(CONCAT(""Member of Czech Pirate Party: "", STR(?person)) AS ?administration)
  }

  # Part 2: Death place of a notable native of Prague
  OPTIONAL {
    ?person dbo:birthPlace dbr:Prague ;
            dbo:deathPlace ?deathPlace .
    FILTER EXISTS { ?person dbo:notableFor ?notability }
    BIND(CONCAT(""Death Place of Notable Native of Prague: "", STR(?deathPlace)) AS ?deathPlace)
  }
}
```",3,3,4,2,2,2,2,9,0,0,1,0,0.0,0
92,27,val,Give me the band of the person born as the birth name of Joseph Michael.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> ?v2 . <http://dbpedia.org/resource/Joseph_Michael> <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?band
WHERE {
  ?person dbo:birthName ""Joseph Michael""@en .
  ?person dbo:band ?band .
}
```",3,3,4,3,1,3,3,71,0,0,1,0,0.0,0
392,18,val,"Give me the province of the residence, that is a settlement and Italian, of Sebastiano Bianchetti and region of Central European Time.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://dbpedia.org/ontology/province> ?result . ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Central_European_Time> . <http://dbpedia.org/resource/Sebastiano_Bianchetti> <http://dbpedia.org/property/residence> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?province ?region WHERE {
  ?person a dbo:Person ;
          foaf:name ""Sebastiano Bianchetti""@en .
  
  ?person dbo:birthPlace ?residence .

  ?residence a dbo:Settlement ;
             dbo:country dbr:Italy .

  OPTIONAL { ?residence dbp:province ?province . }
  OPTIONAL { ?residence dbp:region ?region . }

  ?region dbo:timeZone ""Central European Time""@en .
}
```",3,5,4,2,2,2,3,28,0,0,1,0,0.0,0
626,14,val,Give me the awardee of the award of the military force of Battle of Borodino.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Borodino> . ?v2 <http://dbpedia.org/property/awards> ?v0 . ?result <http://dbpedia.org/property/awards> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?award WHERE {
  # Find individuals involved in the Battle of Borodino
  ?battle dbo:participatedInMilitaryForce ?force .
  ?force dbo:location dbr:Borodino_Battlefield .

  # Check if these individuals received any awards
  ?person dbo:receivedAward ?award .
  
  FILTER (?battle = dbr:Borodino_Battle)
}
```",3,3,4,3,1,3,2,20,0,0,7855,0,0.0,0
392,17,val,"Give me the region of the time zone, that is a sports event, of Aguilar de Segarra and province of Schio.",SELECT ?result WHERE { <http://dbpedia.org/resource/Aguilar_de_Segarra> <http://dbpedia.org/ontology/timeZone> ?v1 . <http://dbpedia.org/resource/Schio> <http://dbpedia.org/ontology/province> ?result . ?result <http://dbpedia.org/ontology/timeZone> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsEvent>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?regionAguilar ?regionSchio ?sportsEvent WHERE {
  # Find the time zone for Aguilar de Segarra
  ?aguilar dbo:location dbr:Aguilar_de_Segarra .
  ?aguilar dbo:timeZone ?tzAguilar .

  # Find the province of Schio and its region
  ?schio dbo:location dbr:Schio .
  ?schio dbo:province dbr:Province_of_Vicenza .
  ?vicenza dbo:region ?regionSchio .

  # Link time zones to regions
  ?tzAguilar dbp:country ?countryAguilar .
  ?countryAguilar dbo:administrativeTerritory ?regionAguilar .

  # Find a sports event related to these regions' time zones
  OPTIONAL {
    ?sportsEvent dbo:location ?location .
    ?location dbo:timeZone ?tzSchio .
    FILTER(?tzSchio = ?tzAguilar || ?tzSchio = ?tzVicenza)
  }
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
328,31,val,Give me the commander in Eastern Front (World War II) and awardee of the award of the commander in Volcano and Ryukyu Islands campaign.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Eastern_Front_(World_War_II)> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Volcano_and_Ryukyu_Islands_campaign> <http://dbpedia.org/ontology/commander> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?easternFrontCommander ?volcanoRyukyuAwardee WHERE {
  # Find the commander of the Eastern Front during World War II
  ?easternFrontCommander a dbo:MilitaryPerson ;
                        dbo:militaryConflict dbr:Eastern_Front_(World_War_II) .

  # Find an awardee for the Volcano and Ryukyu Islands campaign
  ?volcanoRyukyuAwardee a dbo:MilitaryPerson ;
                       dbo:award dbr:Volcano_and_Ryukyu_Islands_campaign_award .
}
```",4,4,5,3,2,3,3,71,0,0,5,0,0.0,0
55,19,val,"Give me the band member of Metallica and band of Newsted and band member of the producer, that is a band, of Used to Love Her.",SELECT ?result WHERE { <http://dbpedia.org/resource/Used_to_Love_Her> <http://dbpedia.org/ontology/producer> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. <http://dbpedia.org/resource/Newsted> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Metallica> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandMember WHERE {
  # Jason Newsted's band
  dbr:Jason_Newsted dbo:memberOf dbr:Metallica .
  
  # Producers of ""Used to Love Her""
  OPTIONAL { 
    dbr:Tool dbo:producer dbr:Danny_Carey .
    dbr:Tool dbo:producer dbr:Adam_Jones .
  }
  
  # Band members of Tool
  OPTIONAL {
    dbr:Danny_Carey dbo:memberOf dbr:Tool .
    dbr:Adam_Jones dbo:memberOf dbr:Tool .
  }

  # Find the common band member
  FILTER EXISTS { 
    ?bandMember dbo:memberOf dbr:Metallica .
    ?bandMember dbo:memberOf dbr:Tool .
  }
}
```",4,5,5,2,3,2,3,28,0,0,1,0,0.0,0
528,43,val,Give me the war of Irene Morales and war of the commander in the work of --01-09 and force of Narciso Campero.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Irene_Morales> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Narciso_Campero> . ?v0 <http://dbpedia.org/property/author> ""--01-09""^^<http://www.w3.org/2001/XMLSchema#gMonthDay> . ?v0 <http://dbpedia.org/ontology/commander> ?v4 . ?v4 <http://dbpedia.org/ontology/battle> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war WHERE {
  ?war dbo:participatedIn [
    a dbo:War ;
    dbo:participant dbr:Irene_Morales ;
    dbo:commander ?commander .
  ].
  
  ?work dbo:date ""1901-01-09""^^xsd:date ;
        dbo:relatedEvent ?war .

  OPTIONAL {
    ?force dbo:leader dbr:Narciso_Campero ;
           dbo:involvedIn ?war .
  }
}
```",5,5,6,3,3,3,3,71,0,0,2,0,0.0,0
184,27,val,Give me the parent of the child of the parent of Archduchess Margaret of Austria (born 1925).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v2 . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Margaret_of_Austria_(born_1925)> . ?v2 <http://dbpedia.org/property/father> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?grandparent
WHERE {
  # Step 1: Identify Archduchess Margaret of Austria (born 1925)
  ?margaret a dbo:Archduchess ;
           foaf:name ""Margaret of Austria"" ;
           dbo:birthDate ?birthDate .
  
  FILTER(YEAR(?birthDate) = 1925)

  # Step 2: Find her parent
  ?parent dbo:child ?margaret .

  # Step 3: Identify the child of this parent (assumed to be Margaret)
  ?child dbo:parent ?parent ;
         foaf:name ""Margaret of Austria"" .
  
  FILTER(YEAR(?birthDate) = 1925)

  # Step 4: Find the parent of this child
  ?grandparent dbo:child ?child .
}
```",3,3,4,3,1,3,3,71,0,0,2,0,0.0,0
281,28,val,Give me the entity in Colony of New Zealand and war of New Zealand Army and war of the awardee of Knight Grand Cross of the Order of the Bath.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_the_Bath> . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Colony_of_New_Zealand> . <http://dbpedia.org/resource/New_Zealand_Army> <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?entity WHERE {
  OPTIONAL {
    ?entity dbo:country dbr:Colony_of_New_Zealand .
  }
  
  OPTIONAL {
    ?war dbo:participatingArmy dbr:New_Zealand_Army ;
         dbo:opposingArmies ?entity .
  }

  OPTIONAL {
    ?person dbo:honoursReceived dbr:Knight_Grand_Cross_of_the_Order_of_the_Bath ;
            dbo:award ?entity .
  }
}
```",4,4,5,2,3,3,3,71,0,2,1,0.0,0.0,0
767,43,val,Give me the alma mater of the administration of the reference to George Kilbon Nash and reference to  and entity in Baden-Württemberg.,"SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""George Kilbon Nash""@en . ?result <http://dbpedia.org/ontology/state> <http://dbpedia.org/resource/Baden-Württemberg> . ?v4 <http://dbpedia.org/ontology/almaMater> ?result . ?v4 <http://dbpedia.org/property/governor> ?v0 . ?result <http://xmlns.com/foaf/0.1/name> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?university WHERE {
  ?person rdfs:label ""George Kilbon Nash""@en .
  OPTIONAL { ?person dbo:almaMater ?university . }
  
  ?administration dbo:location dbr:Baden-Württemberg ;
                  dbo:administrator ?person .

  FILTER (lang(?personLabel) = 'en')
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
783,15,val,Give me the band member of Ebony Reigns and associated musical artist of the band member of the person born as Samuel Ofori Amponsah.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://dbpedia.org/property/birthName> ""Samuel Ofori Amponsah""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Ebony_Reigns> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandMemberEbony ?associatedArtistEbony ?bandMemberSarkodie ?associatedArtistSarkodie WHERE {
  # Step 1: Find band members of Ebony Reigns
  dbr:Ebony_Reigns dbo:musicalBandMember ?bandMemberEbony .
  
  # Step 2: Find associated musical artists of those band members
  OPTIONAL { ?bandMemberEbony dbo:associatedMusicalArtist ?associatedArtistEbony . }
  
  # Step 3: Identify Sarkodie and his band members
  dbr:Sarkodie dbo:musicalBandMember ?bandMemberSarkodie .
  
  # Step 4: Find associated musical artists of those band members
  OPTIONAL { ?bandMemberSarkodie dbo:associatedMusicalArtist ?associatedArtistSarkodie . }
}
```",4,4,5,3,2,3,2,20,0,0,1,0,0.0,0
485,15,val,"Give me the entity in the region, that is a country, of Western European Time and entity in Nottinghamshire.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Nottinghamshire> . ?v1 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Western_European_Time> . },"```sparql
# Query for a country in the Western European Time zone
SELECT ?country WHERE {
  ?country a dbo:Country .
  ?country dbp:timeZone ?tz .
  FILTER(CONTAINS(LCASE(?tz), ""western european time""))
}

UNION

# Query for an entity located in Nottinghamshire
SELECT ?entity WHERE {
  ?entity dbo:location ?place .
  ?place rdfs:label ""Nottinghamshire""@en .
}
```",3,4,4,2,2,2,3,28,0,0,357,0,0.0,0
659,32,val,"Give me the commander in the war, that is an event and a military conflict, of 1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish) and commander in the force of Arthur Wellesley, 1st Duke of Wellington.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Arthur_Wellesley,_1st_Duke_of_Wellington> . <http://dbpedia.org/resource/1st_Light_Cavalry_Lancers_Regiment_of_the_Imperial_Guard_(Polish)> <http://dbpedia.org/ontology/battle> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?regimentCommander ?wellingtonCommander WHERE {
  # Find the commander of the 1st Light Cavalry Lancers Regiment during a war or conflict
  ?regiment dbo:participatedIn ?event .
  FILTER (str(?regiment) = ""1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish)"")
  ?regiment dbp:commander ?regimentCommander .

  # Find commanders under Arthur Wellesley, 1st Duke of Wellington
  ?force dbo:commandedBy <http://dbpedia.org/resource/Arthur_Wellesley,_1st_Duke_of_Wellington> .
  ?force dbp:commander ?wellingtonCommander .

  # Ensure the same person is returned for both roles if applicable
  FILTER (?regimentCommander = ?wellingtonCommander)
}
```",4,6,5,2,2,3,3,71,0,0,71,0,0.0,0
701,21,val,Give me the spouse of Ramesses II and parent of the child of Nefertari.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Nefertari> <http://dbpedia.org/ontology/child> ?v1 . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Ramesses_II> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
  ?ramesses2 rdf:type dbo:Monarch .
  ?ramesses2 rdfs:label ""Ramesses II""@en .
  
  ?ramesses2 dbo:spouse ?spouse .
  ?child dbo:parent ?spouse .
  FILTER(CONTAINS(LCASE(?spouse), ""nefertari""))
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
391,28,val,Give me the native of the figure known as Hub City and actor of All About the Andersons and actor of The Departed.,"SELECT ?result WHERE { <http://dbpedia.org/resource/The_Departed> <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://dbpedia.org/property/nickname> ""Hub City""@en . <http://dbpedia.org/resource/All_About_the_Andersons> <http://dbpedia.org/property/starring> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nativeCity WHERE {
  # Find the city known as ""Hub City""
  ?city rdfs:label ""Hub City""@en .
  
  # Find an actor who acted in both movies
  ?actor dbo:film dbr:The_Departed ;
         dbo:film dbr:All_About_the_Andersons .

  # Get the native city of that actor
  ?actor dbo:birthPlace ?nativeCity .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
492,38,val,"Give me the commander in the war, that is a military conflict and an event, of Frédéric-Georges Herr and person decedent at the capital, that is a settlement, of Algeria.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Algeria> <http://dbpedia.org/ontology/capital> ?v2 . ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . ?v3 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Frédéric-Georges_Herr> <http://dbpedia.org/ontology/battle> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  ?war a dbo:MilitaryConflict ;
      dbo:eventType ?eventType .
  
  ?herr dbo:commander ?commander ;
        dbo:militaryConflict ?war .

  ?commander dbo:dateOfDeath ?deathDate ;
             dbo:placeOfBirth ?capitalAlgeria .

  FILTER (?eventType = dbr:Military_conflict) .
  FILTER EXISTS { 
    ?capitalAlgeria a dbo:Settlement ;
                    rdfs:label ""Algiers""@en .
  }
  
  FILTER regex(str(?commander), ""Frédéric-Georges Herr"", ""i"") .
}
```",4,7,5,2,2,3,3,71,0,0,1,0,0.0,0
427,21,val,Give me the party of Romano Prodi and reference to the name of Italian People's Party (1994).,SELECT ?result WHERE { <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Italian_People's_Party_(1994)> <http://xmlns.com/foaf/0.1/name> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . },"```sparql
PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?party WHERE {
  wd:Q1528 dbp:party ?party .
  FILTER(CONTAINS(LCASE(?party), ""italian people's party (1994)""))
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
659,20,val,"Give me the commander in the war, that is an event and a military conflict, of 1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish) and commander in German campaign of 1813.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/German_campaign_of_1813> <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/1st_Light_Cavalry_Lancers_Regiment_of_the_Imperial_Guard_(Polish)> <http://dbpedia.org/ontology/battle> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commander ?role1 ?role2 WHERE {
  # Find the commander of the 1st Light Cavalry Lancers Regiment during a war
  ?regiment dbo:commander ?commander .
  ?regiment rdfs:label ""1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish)""@en .
  
  OPTIONAL { 
    ?war dbo:participatingOrganisation ?regiment .
    ?war rdf:type dbo:MilitaryConflict .
  }
  
  # Find the commander involved in the German campaign of 1813
  ?campaign dbo:commander ?commander .
  ?campaign rdfs:label ""German campaign of 1813""@en .

  BIND(""Commander of 1st Light Cavalry Lancers Regiment"" AS ?role1)
  BIND(""Commander in German campaign of 1813"" AS ?role2)
}
```",3,5,4,2,2,3,3,71,0,0,30,0,0.0,0
294,16,val,"Give me the resting place of Luke Lea (American politician, born 1879) and entity in the birth place, that is a settlement, of Marion James.","SELECT ?result WHERE { <http://dbpedia.org/resource/Luke_Lea_(American_politician,_born_1879)> <http://dbpedia.org/ontology/restingPlace> ?result . ?result <http://dbpedia.org/ontology/location> ?v2 . <http://dbpedia.org/resource/Marion_James> <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?burialPlace ?birthSettlement
WHERE {
  # Find the burial place of Luke Lea
  ?lukeLea a dbo:Person ;
           dbo:birthDate ?birthDate ;
           dbo:deathPlace ?burialPlace .
  
  FILTER (STRSTARTS(STR(?birthDate), ""1879""))

  # Find the birthplace settlement of Marion James
  ?marionJames a dbo:Person ;
               dbo:birthPlace ?birthSettlement .

  {
    SELECT DISTINCT ?birthSettlement WHERE {
      ?birthSettlement a dbo:Settlement .
    }
  }

}
```",3,4,4,2,2,2,3,28,0,1533,1,0.0,0.0,0
54,29,val,Give me the parent of the child of Narapati I of Ava and predecessor of Ameitta Thiri Maha Dhamma Dewi of Ava and child of Thinkhaya of Pagan.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Narapati_I_of_Ava> . ?v3 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Ameitta_Thiri_Maha_Dhamma_Dewi_of_Ava> . <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity WHERE {
  # Narapati I's child
  ?narapatiIChild dbo:parent dbr:Narapati_I_of_Ava .
  
  # Ameitta Thiri Maha Dhamma Dewi's predecessor
  ?ameittaPredecessor dbo:successor dbr:Ameitta_Thiri_Maha_Dhamma_Dewi_of_Ava .

  # Thinkhaya of Pagan's child
  ?thinkhayasChild dbo:parent dbr:Thinkhaya_of_Pagan .
  
  # Find the common entity
  FILTER (?narapatiIChild = ?ameittaPredecessor && ?ameittaPredecessor = ?thinkhayasChild)
  
  # Return the entity that fits all criteria
  BIND(?ameittaPredecessor AS ?entity)
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
528,25,val,Give me the force of the person born as Narciso Campero Leyes and war of Orozimbo Barbosa.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> ?v1 . <http://dbpedia.org/resource/Orozimbo_Barbosa> <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/property/birthName> ""Narciso Campero Leyes""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?narcisoForce ?orozimboForce WHERE {
  # Find Narciso Campero Leyes and his associated military force
  dbr:Narciso_Campero_Leyes dbo:militaryCommanderOf ?narcisoForce .
  
  # Find Orozimbo Barbosa and his associated military force
  dbr:Orozimbo_Barbosa dbo:militaryCommanderOf ?orozimboForce .

  # Ensure the forces are related to the War of the Pacific
  ?narcisoForce dbo:participatedIn dbr:War_of_the_Pacific .
  ?orozimboForce dbo:participatedIn dbr:War_of_the_Pacific .
}
```",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
959,42,val,"Give me the member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of Eiji Ōtsuka and manager of the team of Takashi Sekizuka and native of Japan.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?v0 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Takashi_Sekizuka> . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Japan> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. <http://dbpedia.org/resource/Eiji_Ōtsuka> <http://dbpedia.org/ontology/almaMater> ?v1 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/team> ?v1 . ?v0 <http://dbpedia.org/ontology/manager> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?member WHERE {
  # Eiji Ōtsuka's alma mater
  dbr:Eiji_Ōtsuka dbo:almaMater ?university .
  
  # The university must be a Japanese organization, university, and educational institution
  ?university rdf:type dbo:Organisation ;
              rdf:type dbo:University ;
              rdf:type dbo:EducationalInstitution ;
              dbo:country dbr:Japan .

  # Takashi Sekizuka's team manager
  ?team dbo:manager ?member .
  
  # The member must be native to Japan
  ?member dbo:nativeCountry dbr:Japan .
}
```",5,9,6,2,3,3,3,71,0,0,2,0,0.0,0
328,23,val,Give me the awardee of the award of the commander in Volcano and Ryukyu Islands campaign.,SELECT ?result WHERE { <http://dbpedia.org/resource/Volcano_and_Ryukyu_Islands_campaign> <http://dbpedia.org/ontology/commander> ?v2 . ?result <http://dbpedia.org/property/awards> ?v0 . ?v2 <http://dbpedia.org/property/awards> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?awardee WHERE {
  ?campaign dbo:name ""Volcano and Ryukyu Islands campaign""@en .
  ?award dbo:givenFor ?campaign .
  ?recipient dbo:receivedAwards ?award ;
             a dbo:Person .
  BIND(?recipient AS ?awardee)
}
```",3,3,4,3,1,3,3,71,0,0,13262,0,0.0,0
701,41,val,Give me the parent of the child of Ramesses II and spouse of Ramesses II and parent of the child of Nefertari.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Ramesses_II> . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ramesses_II> . <http://dbpedia.org/resource/Nefertari> <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/ontology/child> ?v4 . ?v2 <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?parent
WHERE {
  # Ramesses II's child and their parent (other than Ramesses II)
  ?child dbo:parent ?ramessesII .
  ?ramessesII rdfs:label ""Ramesses II""@en .
  
  # The other parent of this child
  ?child dbo:parent ?parent .

  # Nefertari as the spouse of Ramesses II
  ?nefertari dbo:spouse ?ramessesII .
  ?nefertari rdfs:label ""Nefertari""@en .

  # A child of Nefertari and their parent (other than Nefertari)
  ?child2 dbo:parent ?nefertari .
  
  # The other parent of this child
  ?child2 dbo:parent ?parent2 .

  FILTER (?parent = ?nefertari && ?parent2 = ?ramessesII)
}
```",5,5,6,2,3,3,3,71,1,0,0,1.0,1.0,1.0
488,26,val,"Give me the death place of the father, that is a politician, of the father, that is an office holder, of Matsudaira Tadamasa.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Matsudaira_Tadamasa> <http://dbpedia.org/property/father> ?v1 . ?v1 <http://dbpedia.org/property/father> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?deathPlace WHERE {
  ?matsudairaTadamasa a dbo:Person ;
                      foaf:name ""Matsudaira Tadamasa""@en .
  
  ?officeHolderFather dbo:child ?matsudairaTadamasa ;
                     dbo:officeHolder ?office .

  ?politicianGrandfather dbo:child ?officeHolderFather ;
                         dbo:politician ?politics .

  ?deathEvent dbr:Matsudaira_Tadamasa dbo:deathPlace ?deathPlace .
}
```",3,5,4,3,1,3,3,71,0,0,2,0,0.0,0
161,26,val,"Give me the military force of the force, that is a societal event and a military conflict, of the predecessor of Indalecio Prieto.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/commander> ?v1 . ?v1 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Indalecio_Prieto> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?militaryForce WHERE {
  # Find Indalecio Prieto's predecessor
  ?prieto dbo:predecessor ?predecessor .
  
  FILTER(?prieto = dbr:Indalecio_Prieto)

  # Identify a societal event and military conflict related to the predecessor
  ?event dbo:type dbr:Societal_event ;
         dbo:relatedTo ?predecessor .

  ?conflict dbo:type dbr:Military_conflict ;
            dbo:relatedTo ?predecessor .

  # Find the military force involved in both events
  ?event dbo:militaryForce ?militaryForce .
  ?conflict dbo:militaryForce ?militaryForce .
}
```",3,5,4,3,1,3,3,71,0,0,514,0,0.0,0
666,15,val,"Give me the player in the manager, that is a sports manager, of the team, that is a soccer club and a sports team season, of Leonid Slutsky (football coach) and figure known as The Three Lions.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?result <http://dbpedia.org/property/nickname> ""The Three Lions""@en . ?v1 <http://dbpedia.org/ontology/team> ?result . ?v0 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Leonid_Slutsky_(football_coach)> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v0 <http://dbpedia.org/ontology/manager> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?playerInManager WHERE {
  # Leonid Slutsky as a football coach
  dbr:Leonid_Slutsky dbo:position dbr:Football_manager .
  
  # The Three Lions (England national football team)
  dbr:The_Three_Lions dbo:manager dbr:?playerInManager ;
                     a dbo:Soccer_Club, dbo:Sports_Team_Season .

  # Ensure the player in manager is a sports manager
  ?playerInManager a dbo:Sports_Manager .
}
```",4,7,5,3,2,3,2,20,0,0,2,0,0.0,0
547,28,val,Give me the resting place of Alan Cunningham and resting place of Simon Cadell and resting place of the child of James Burton (property developer).,SELECT ?result WHERE { <http://dbpedia.org/resource/James_Burton_(property_developer)> <http://dbpedia.org/ontology/child> ?v1 . <http://dbpedia.org/resource/Simon_Cadell> <http://dbpedia.org/ontology/restingPlace> ?result . ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Alan_Cunningham> <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?restingPlace WHERE {
  # Resting place of Alan Cunningham
  { 
    VALUES ?person { dbr:Alan_Cunningham }
    OPTIONAL { ?person dbo:deathPlace ?restingPlace . }
  }

  UNION

  # Resting place of Simon Cadell
  { 
    VALUES ?person { dbr:Simon_Cadell }
    OPTIONAL { ?person dbo:deathPlace ?restingPlace . }
  }

  UNION

  # Resting place of the child of James Burton (property developer)
  {
    ?james dbp:occupation ""Property developer""@en .
    ?james dbo:child ?child .
    ?child dbo:deathPlace ?restingPlace .
    FILTER(?james = dbr:James_Burton_(property_developer))
  }
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
16,24,val,Give me the professional in the profession of Satomi Ishihara and person born as Georgeanne Marie Rice.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Georgeanne Marie Rice""@en . <http://dbpedia.org/resource/Satomi_Ishihara> <http://dbpedia.org/property/occupation> ?v2 . ?result <http://dbpedia.org/property/occupation> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?satomiProfession ?georgeanneCurrentName ?georgeanneProfession WHERE {
  # Find Satomi Ishihara's profession
  ?satomi a dbo:Person ;
          foaf:name ""Ishihara, Satomi""@en .
  ?satomi dbo:profession ?satomiProfession .

  # Find Georgeanne Marie Rice and her current professional name and profession
  ?georgeanne a dbo:Person ;
              foaf:birthday ?birthday ;
              foaf:name ""Rice, Georgeanne Marie""@en .
  OPTIONAL { ?georgeanne foaf:name ?georgeanneCurrentName . }
  OPTIONAL { ?georgeanne dbo:profession ?georgeanneProfession . }

  # Ensure we are capturing the same person if they have changed names
  FILTER(?satomi != ?georgeanne)
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
485,16,val,"Give me the entity in United Kingdom and entity in the birth place, that is a region, of Joseph Whitaker (naturalist).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?result <http://dbpedia.org/ontology/country> ?v2 . <http://dbpedia.org/resource/Joseph_Whitaker_(naturalist)> <http://dbpedia.org/ontology/birthPlace> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?ukEntity ?birthRegion WHERE {
  # Find Joseph Whitaker (naturalist)
  ?person a dbo:Naturalist ;
          foaf:name ""Joseph Whitaker"" .

  # Ensure the person is associated with an entity in the United Kingdom
  OPTIONAL { 
    ?person dbo:residence dbr:United_Kingdom .
    ?ukEntity a dbo:Place ;
              dbo:country dbr:United_Kingdom .
  }

  # Find Joseph Whitaker's birthplace and ensure it is a region
  ?person dbo:birthPlace ?birthPlace .
  ?birthPlace a dbo:Region .

  BIND(?birthPlace AS ?birthRegion)
}
```",3,4,4,2,2,2,3,28,0,0,357,0,0.0,0
712,15,val,"Give me the resting place of Nina Onilova and capital of the country of the military force, that is an organisation and a military unit, of Vyoshenskaya Uprising.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/capital> ?result . ?v0 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Vyoshenskaya_Uprising> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. <http://dbpedia.org/resource/Nina_Onilova> <http://dbpedia.org/ontology/restingPlace> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/ontology/country> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?restingPlace ?capitalCity WHERE {
  # Find resting place of Nina Onilova
  OPTIONAL { 
    dbr:Nina_Onilova dbo:deathPlace ?burialPlace .
    ?burialPlace rdfs:label ?restingPlace .
    FILTER (lang(?restingPlace) = ""en"")
  }

  # Identify the military force involved in Vyoshenskaya Uprising
  OPTIONAL {
    dbr:Vyoshenskaya_Uprising dbo:participatedInMilitaryForce ?militaryForce .
    ?militaryForce a dbo:MilitaryUnit ;
                   dbo:country ?country .

    # Find capital of the country associated with the military force
    ?country dbo:capital ?capitalCity .
    FILTER (lang(?capitalCity) = ""en"")
  }
}
```",4,6,5,3,2,3,2,20,0,0,1,0,0.0,0
378,19,val,Give me the war of the person born as Carl Pontus Gahn and war of Joaquín Blake.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Joaquín_Blake> <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/property/birthName> ""Carl Pontus Gahn""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?warCarl ?warJoaquin WHERE {
  # Carl Pontus Gahn's wars
  OPTIONAL { 
    dbr:C._Pontus_Gahn dbo:militaryConflict ?warCarl .
  }
  
  # Joaquín Blake's wars
  OPTIONAL { 
    dbr:Joaqu%C3%ADn_Blake dbo:militaryConflict ?warJoaquin .
  }
}
```",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
617,39,val,Give me the spouse of Laodice IV and parent of the child of the commander in Battle of Panium.,SELECT ?result WHERE { <http://dbpedia.org/resource/Laodice_IV> <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/ontology/child> ?v1 . ?result <http://dbpedia.org/ontology/child> ?v1 . <http://dbpedia.org/resource/Battle_of_Panium> <http://dbpedia.org/ontology/commander> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Step 1: Find Laodice IV's spouse
  dbr:Laodice_IV dbo:spouse ?spouse .

  # Step 2: Identify the commander in the Battle of Panium
  ?battle dbo:commander ?commander .
  FILTER(STRSTARTS(?battle, ""http://dbpedia.org/resource/Battle_of_Panium""))

  # Step 3: Find the child of this commander
  ?commander dbo:child ?child .

  # Step 4: Identify the parent of this child (should match spouse from step 1)
  ?parent dbo:child ?child .
  FILTER(?spouse = ?parent)
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
328,25,val,"Give me the commander in Eastern Front (World War II) and leader of the office, that is a government agency, of Joseph Stalin.",SELECT ?result WHERE { <http://dbpedia.org/resource/Joseph_Stalin> <http://dbpedia.org/property/office> ?v1 . ?v1 <http://dbpedia.org/ontology/leader> ?result . <http://dbpedia.org/resource/Eastern_Front_(World_War_II)> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  ?commander dbo:office ?office .
  ?office dbo:head ?person .
  ?person foaf:name ""Joseph Stalin""@en .
  
  ?commander dbo:militaryCommanderOf ?front .
  ?front rdfs:label ?frontLabel .
  FILTER(CONTAINS(LCASE(?frontLabel), ""eastern front world war ii"")).
  
  OPTIONAL {
    ?office a dbo:GovernmentAgency .
  }
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
827,12,val,"Give me the father of the child, that is a royalty, of Charles Augustus, Hereditary Grand Duke of Saxe-Weimar-Eisenach (1844–1894) and child of Charles Alexander, Grand Duke of Saxe-Weimar-Eisenach.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Charles_Alexander,_Grand_Duke_of_Saxe-Weimar-Eisenach> <http://dbpedia.org/ontology/child> ?result . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Charles_Augustus,_Hereditary_Grand_Duke_of_Saxe-Weimar-Eisenach_(1844–1894)> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  # Identify Charles Augustus
  VALUES (?charlesAugustus) { dbr:Charles_Augustus,_Hereditary_Grand_Duke_of_Saxe-Weimar-Eisenach }
  
  # Find his children
  ?child dbo:parent ?charlesAugustus .
  
  # Filter for a child with royalty status
  ?child dbo:title ?title .
  FILTER(CONTAINS(LCASE(?title), ""prince"") || CONTAINS(LCASE(?title), ""duke"") || CONTAINS(LCASE(?title), ""grand duke""))
  
  # Find the father of this royal child
  ?father dbo:parent ?child .
}
```",3,4,4,2,2,3,2,20,0,0,1,0,0.0,0
492,24,val,"Give me the commander in the war, that is a military conflict and an event, of Frédéric-Georges Herr and person decedent at Algiers.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Algiers> . <http://dbpedia.org/resource/Frédéric-Georges_Herr> <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?war WHERE {
  ?herr a dbo:MilitaryPerson ;
        foaf:name ""Frédéric-Georges Herr""@en ;
        dbo:commander ?war .
  
  ?war rdf:type/rdfs:subClassOf*+ (dbo:MilitaryConflict dbo:Event) .

  ?herr dbo:deathPlace dbr:Algiers .
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
179,11,val,Give me the parent of Ubol Ratana and person born as the birth name of Sirikit.,SELECT ?result WHERE { <http://dbpedia.org/resource/Sirikit> <http://dbpedia.org/property/birthName> ?v2 . ?result <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Ubol_Ratana> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent ?personWithSameBirthName WHERE {
  # Find the parent of Ubol Ratana
  dbr:Ubol_Ratana dbo:parent ?parent .

  # Find a person with the birth name Sirikit Kitiyakara
  ?person dbo:birthName ""Sirikit Kitiyakara""@en .
  BIND(?person AS ?personWithSameBirthName)
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
427,40,val,Give me the party of Giulio Andreotti and reference to the name of the party of Michele Pinto and party of Romano Prodi.,SELECT ?result WHERE { <http://dbpedia.org/resource/Michele_Pinto> <http://dbpedia.org/ontology/party> ?v2 . ?v2 <http://xmlns.com/foaf/0.1/name> ?v1 . <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Giulio_Andreotti> <http://dbpedia.org/ontology/party> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?andreottiPartyLabel (GROUP_CONCAT(?partyName; separator="", "") AS ?otherParties)
WHERE {
  ?andreotti dbo:wikiPageRedirects dbpedia:Giulio_Andreotti .
  ?andreotti dbo:partyAffiliation ?andreottiParty .
  ?andreottiParty rdfs:label ?andreottiPartyLabel .

  OPTIONAL {
    ?pinto dbo:wikiPageRedirects dbpedia:Michele_Pinto .
    ?pinto dbo:partyAffiliation ?pintoParty .
    ?pintoParty rdfs:label ?pintoPartyLabel .
    BIND(?pintoPartyLabel AS ?partyName)
  }

  OPTIONAL {
    ?prodi dbo:wikiPageRedirects dbpedia:Romano_Prodi .
    ?prodi dbo:partyAffiliation ?prodiParty .
    ?prodiParty rdfs:label ?prodiPartyLabel .
    BIND(?prodiPartyLabel AS ?partyName)
  }
  
  FILTER(lang(?andreottiPartyLabel) = 'en')
}
GROUP BY ?andreottiPartyLabel
```",5,5,6,3,3,3,3,71,0,0,2,0,0.0,0
747,35,val,Give me the person born on the birth date of Pavlo Khudzik and band of the person born as Tracey Elizabeth McSween.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ""Tracey Elizabeth McSween""@en . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/birthDate> ?v2 . <http://dbpedia.org/resource/Pavlo_Khudzik> <http://dbpedia.org/ontology/birthDate> ?v2 . }","```sparql
# Query 1: Get the birth date of Pavlo Khudzik
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthDate WHERE {
    dbr:Pavlo_Khudzik dbo:birthday ?birthDate .
}

# Query 2: Find the band of Tracey Elizabeth McSween, who is born on Pavlo Khudzik's birth date
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band WHERE {
    # Get Pavlo Khudzik's birth date from Query 1 result
    BIND(<Pavlo_Khudzik_birth_date> AS ?birthDate) .

    # Find Tracey Elizabeth McSween born on the same date
    dbr:Tracey_Elizabeth_McSween dbo:birthday ?traceyBirthDate .
    
    FILTER(?traceyBirthDate = ?birthDate)

    # Get the band associated with Tracey Elizabeth McSween
    OPTIONAL { dbr:Tracey_Elizabeth_McSween dbo:band ?band }
}
```

Note: Replace `<Pavlo_Khudzik_birth_date>` in Query 2 with the actual birth date obtained from Query 1.",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
92,43,val,"Give me the associated musical artist of the person born, that is an artist, as the actor of Return to Nuke 'Em High Volume 1 and band member of Nevermore and band of Joseph Michael.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Joseph_Michael> . <http://dbpedia.org/resource/Return_to_Nuke_'Em_High_Volume_1> <http://dbpedia.org/property/starring> ?v0 . ?v4 <http://dbpedia.org/property/birthName> ?v0 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Nevermore> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artist WHERE {
  ?actor dbo:birthPlace ?place .
  ?actor dbo:occupation dbr/Musician .
  
  # Actor in ""Return to Nuke 'Em High Volume 1""
  ?film dbo:title ""Return to Nuke 'Em High Volume 1""@en ;
        dbo:starring ?actor .

  # Member of Nevermore
  ?band dbo:name ""Nevermore""@en ;
        dbo:member ?actor .
  
  # Band with Joseph Michael
  ?project dbo:name ?name ;
           dbo:member ?artist ;
           dbo:member dbr:Joseph_Michael .
  
  FILTER (?artist = ?actor)
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
701,24,val,Give me the parent of the child of Ramesses II and spouse of Ramesses II.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ramesses_II> . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Ramesses_II> . ?result <http://dbpedia.org/ontology/child> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT DISTINCT ?parent ?spouse WHERE {
  # Find a child of Ramesses II
  ?child dbo:parent dbr:Ramesses_II .
  
  # Find the parent(s) of this child (which includes Ramesses II)
  ?child dbo:parent ?parent .

  # Get the spouse of Ramesses II
  dbr:Ramesses_II dbo:spouse ?spouse .
}
```",3,3,4,2,2,3,3,71,2,4,0,0.3333333333333333,1.0,0.5
959,23,val,"Give me the member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of the person born in 1958.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?result <http://dbpedia.org/ontology/team> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://dbpedia.org/ontology/birthYear> ""1958""^^<http://www.w3.org/2001/XMLSchema#gYear> . ?v1 <http://dbpedia.org/ontology/almaMater> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?person ?almaMater
WHERE {
  ?person dbo:birthdayYear ?year .
  ?person dbo:almaMater ?almaMater .

  FILTER (?year = ""1958"")

  ?almaMater rdf:type dbo:Organisation ;
             rdf:type dbo:University ;
             rdf:type dbo:EducationalInstitution ;
             dbo:country dbr:Japan .
}
```",3,7,4,3,1,3,3,71,0,0,524,0,0.0,0
251,19,val,"Give me the administration of Forza Italia (2013) and death place of Laura Mancinelli and location of the war, that is a military conflict, of Louis François Félix Musnier.",SELECT ?result WHERE { <http://dbpedia.org/resource/Laura_Mancinelli> <http://dbpedia.org/ontology/deathPlace> ?result . ?result <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Forza_Italia_(2013)> . ?v2 <http://dbpedia.org/ontology/place> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Louis_François_Félix_Musnier> <http://dbpedia.org/ontology/battle> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?administration ?deathPlace ?warLocation WHERE {
  # Administration of Forza Italia (2013)
  {
    SELECT ?administration WHERE {
      ?party dbo:memberOf ?government.
      ?government dbo:endDate ?endDate.
      FILTER(YEAR(?endDate) >= 2012 && YEAR(?endDate) <= 2014).
      ?party rdfs:label ""Forza Italia""@en.
      ?government dbp:name ?administration.
    }
  }

  UNION

  # Death place of Laura Mancinelli
  {
    SELECT ?deathPlace WHERE {
      dbr:Laura_Mancinelli dbo:placeOfBirth ?birthPlace;
                           dbo:deathPlace ?deathPlace.
    }
  }

  UNION

  # Location of the war involving Louis François Félix Musnier
  {
    SELECT ?warLocation WHERE {
      ?person dbo:nationality dbr:France.
      ?person rdfs:label ""Louis François Félix Musnier""@en.
      ?person dbo:occupation dbr:Military_person.
      ?conflict dbo:participant ?person;
                dbo:location ?warLocation.
    }
  }
}
```",4,5,5,2,3,2,3,28,0,0,1,0,0.0,0
547,26,val,Give me the resting place of the actor of the show with Emily Richard.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emily_Richard> . ?v1 <http://dbpedia.org/property/starring> ?v2 . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?restingPlace WHERE {
  ?person a dbo:Actor ;
          foaf:name ""Jenna Fischer""@en .
  OPTIONAL { ?person dbo:placeOfBurial ?restingPlace . }
}
```",3,3,4,3,1,3,3,71,0,0,2,0,0.0,0
314,13,val,Give me the person deceased at the headquarter of House of Sombrerete and awardee of 30.,"SELECT ?result WHERE { <http://dbpedia.org/resource/House_of_Sombrerete> <http://dbpedia.org/ontology/location> ?v1 . ?result <http://dbpedia.org/property/awards> ""30""^^<http://www.w3.org/2001/XMLSchema#integer> . ?result <http://dbpedia.org/ontology/restingPlace> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  ?house dbp:name ""House of Sombrerete"" .
  ?house dbp:headquarters ?location .

  ?person dbo:deathPlace ?location .
  
  ?person dbo:award ?award .
  FILTER EXISTS { 
    ?award rdfs:label ?awardLabel .
    FILTER (CONTAINS(LCASE(?awardLabel), ""30""))
  }
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
617,19,val,"Give me the spouse of Laodice IV and child of the child, that is a royalty, of Seleucus II Callinicus.",SELECT ?result WHERE { <http://dbpedia.org/resource/Laodice_IV> <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seleucus_II_Callinicus> . ?result <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?spouse ?royalChild 
WHERE {
  # Find Laodice IV's spouse
  dbpedia:Laodice_IV dbo:spouse ?spouse .

  # Find children of Seleucus II Callinicus
  dbpedia:Seleucus_II_Callinicus dbo:child ?childOfSeleucus .

  # For each child, find their children and filter for royalty
  ?childOfSeleucus dbo:child ?grandChild .
  ?grandChild rdfs:label ?label .
  
  FILTER (CONTAINS(LCASE(?label), ""king"") || CONTAINS(LCASE(?label), ""queen""))
}
```",3,4,4,2,2,3,3,71,0,0,3,0,0.0,0
16,39,val,Give me the person born as the birth name of the alumnus of Ohio State University and professional in Actress.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Ohio_State_University> . ?result <http://dbpedia.org/property/occupation> ""Actress""@en . ?result <http://dbpedia.org/property/birthName> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person ?birthName WHERE {
  ?person a dbo:Person .
  ?person dbo:almaMater <http://dbpedia.org/resource/Ohio_State_University> .
  ?person dbo:occupation ?occupation .
  FILTER(CONTAINS(LCASE(str(?occupation)), ""actress""))
  
  OPTIONAL { 
    ?person foaf:name ?birthName .
  }
}
```",4,4,5,3,2,3,3,71,0,2,3,0.0,0.0,0
528,31,val,"Give me the war of the military force of the entity, that is a societal event, in Chile and war of Orozimbo Barbosa.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://dbpedia.org/ontology/battle> ?v1 . <http://dbpedia.org/resource/Orozimbo_Barbosa> <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Chile> . ?v0 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?war ?commander WHERE {
  ?war a dbo:War ;
      dbo:country ?country .
  
  FILTER (str(?country) = ""Chile"")

  OPTIONAL { 
    ?war dbo:commander ?commander .
  }

  OPTIONAL {
    ?barbosa foaf:name ""Orozimbo Barbosa"" .
    ?barbosa dbo:commander ?war .
  }
}
```",4,5,5,3,2,3,3,71,0,0,9,0,0.0,0
659,28,val,"Give me the commander in the force of Arthur Wellesley, 1st Duke of Wellington and commander in Battle of Leipzig and military force of Napoleonic Wars.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Battle_of_Leipzig> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Napoleonic_Wars> . ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Arthur_Wellesley,_1st_Duke_of_Wellington> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?battle ?force WHERE {
  # Arthur Wellesley, 1st Duke of Wellington
  dbr:Arthur_Wellesley_1st_Duke_of_Wellington dbo:commander ?commander .

  # Commanders in the Battle of Leipzig
  OPTIONAL { 
    ?commander dbo:participatedInBattle ?battle .
    FILTER (str(?battle) = ""Battle of Leipzig"")
  }

  # Military forces in the Napoleonic Wars
  OPTIONAL {
    ?force dbo:partOfMilitaryConflict dbr:Napoleonic_Wars .
    ?commander dbo:commanded ?force .
  }
}
```",4,4,5,2,3,3,3,71,0,0,5,0,0.0,0
9,22,val,"Give me the alma mater of John Alderdice, Baron Alderdice and figure known as the nickname of Queen's University Belfast.","SELECT ?result WHERE { <http://dbpedia.org/resource/John_Alderdice,_Baron_Alderdice> <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://dbpedia.org/property/nickname> ?v1 . <http://dbpedia.org/resource/Queen's_University_Belfast> <http://dbpedia.org/property/nickname> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?almaMaterLabel ?nicknameLabel WHERE {
  # Query for John Alderdice's alma mater
  {
    SELECT ?almaMaterLabel WHERE {
      dbr:John_Alderdice_Baron_Alderdice dbo:almaMater ?almaMater .
      SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
    }
  }

  UNION

  # Query for the nickname of Queen's University Belfast
  {
    SELECT ?nicknameLabel WHERE {
      dbr:Queen's_University_Belfast dbo:nickname ?nickname .
      SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
    }
  }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
281,27,val,"Give me the war of the profession, that is a military unit, of the professional, that is an office holder and a politician, in New Zealand Army.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/property/occupation> ?v2 . ?v1 <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/New_Zealand_Army> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?professional ?militaryUnit
WHERE {
  ?professional a dbo:OfficeHolder ;
                a dbo:Politician .
  
  ?professional dbo:militaryService dbr:New_Zealand_Army .

  ?servicePosition dbo:positionHeldBy ?professional ;
                   dbo:unit ?militaryUnit .
}
```",3,6,4,3,1,3,3,71,0,0,14,0,0.0,0
392,13,val,"Give me the entity in the region, that is a country, of Central European Time and region of Central European Time.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v1 . ?v1 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Central_European_Time> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?country WHERE {
  ?c dbo:timeZone ?tz .
  ?tz rdfs:label ""Central European Time""@en .
  ?c a dbo:Country .
}
```",3,4,4,2,2,2,3,28,0,0,28787,0,0.0,0
360,12,val,Give me the writer of The Roaring Silence and native of Johannesburg and reference to Manfred Mann.,"SELECT ?result WHERE { <http://dbpedia.org/resource/The_Roaring_Silence> <http://dbpedia.org/property/writer> ?result . ?result <http://xmlns.com/foaf/0.1/name> ""Manfred Mann""@en . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Johannesburg> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?writer ?writerLabel WHERE {
  # Find the album ""The Roaring Silence""
  dbr:The_Roaring_Silence dbo:albumArtist dbr:Manfred_Mann's_Earth_Band .
  
  # Get writers of the album
  dbr:The_Roaring_Silence dbo:writer ?writer .

  # Filter for those native to Johannesburg
  ?writer dbo:birthPlace dbr:Johannesburg .

  # Ensure the writer is associated with Manfred Mann's Earth Band
  OPTIONAL { 
    ?writer dbo:associatedBand dbr:Manfred_Mann's_Earth_Band .
  }

  # Get human writers only
  FILTER EXISTS { ?writer a dbo:Writer . }
  
  # Label for better readability
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
```",3,3,4,1,3,2,3,28,0,0,1,0,0.0,0
161,24,val,"Give me the commander in Biscay Campaign and military force of the force, that is a societal event and a military conflict, of Francisco Largo Caballero.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Biscay_Campaign> <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?militaryForce WHERE {
  # Identify the Biscay Campaign as both a societal event and a military conflict
  ?campaign a dbo:SocietalEvent ;
            a dbo:MilitaryConflict ;
            rdfs:label ""Biscay Campaign""@en .

  # Find the commander of the Biscay Campaign
  ?campaign dbo:commander ?commander .

  # Ensure the commander is Francisco Largo Caballero
  ?commander rdfs:label ""Francisco Largo Caballero""@en .

  # Identify the military force associated with Francisco Largo Caballero during this campaign
  ?militaryForce dbo:commander ?commander ;
                 a dbo:MilitaryUnit .
}
```",3,5,4,2,2,3,3,71,0,0,3,0,0.0,0
915,15,val,"Give me the resident of the birthplace, that is a settlement, of the director of Pipe Dreams (1976 film) and father of Lizzie Spaulding.",SELECT ?result WHERE { <http://dbpedia.org/resource/Lizzie_Spaulding> <http://dbpedia.org/property/father> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Pipe_Dreams_(1976_film)> <http://dbpedia.org/ontology/director> ?v0 . ?result <http://dbpedia.org/ontology/residence> ?v1 . ?v0 <http://dbpedia.org/ontology/birthPlace> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?resident WHERE {
  # Find the director of ""Pipe Dreams"" (1976 film)
  ?film dbo:director ?director .
  ?film rdfs:label ""Pipe Dreams""@en .

  # Ensure this director is also the father of Lizzie Spaulding
  ?director dbp:child dbr:Lizzie_Spaulding .

  # Get the birthplace of this director, ensuring it's a settlement
  ?director dbo:birthPlace ?birthPlace .
  ?birthPlace rdf:type dbo:Settlement .

  # Find residents of this birthplace
  ?resident dbo:residence ?birthPlace .
}
```",4,5,5,3,2,3,2,20,0,0,1,0,0.0,0
528,18,val,Give me the war of Orozimbo Barbosa and force of Narciso Campero and war of Irene Morales.,SELECT ?result WHERE { <http://dbpedia.org/resource/Irene_Morales> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Narciso_Campero> . <http://dbpedia.org/resource/Orozimbo_Barbosa> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?war WHERE {
  {
    # Wars involving Orozimbo Barbosa
    ?person rdfs:label ""Orozimbo Barbosa""@en .
    ?person dbo:participatedIn ?war .
  }
  UNION
  {
    # Forces led by Narciso Campero
    ?person rdfs:label ""Narciso Campero""@en .
    ?commanderRole dbo:agent ?person ;
                   a dbo:MilitaryCommanderRole .
    ?commanderRole dbo:militaryUnit ?force .
    ?war dbo:participatedIn ?force .
  }
  UNION
  {
    # Wars involving Irene Morales
    ?person rdfs:label ""Irene Morales""@en .
    ?person dbo:participatedIn ?war .
  }
}
```",3,3,4,1,3,3,3,71,0,0,2,0,0.0,0
547,38,val,Give me the resting place of the actor of Enemy at the Door and resting place of the awardee of Knight Grand Cross of the Order of St Michael and St George.,SELECT ?result WHERE { <http://dbpedia.org/resource/Enemy_at_the_Door> <http://dbpedia.org/property/starring> ?v3 . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . ?v3 <http://dbpedia.org/ontology/restingPlace> ?result . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_St_Michael_and_St_George> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?actorRestingPlace ?recipientRestingPlace WHERE {
  # Find the actor from ""Enemy at the Door""
  ?movie dbo:title ""Enemy at the Door""@en .
  ?movie dbo:starring ?actor .
  
  OPTIONAL { 
    ?actor dbp:burialPlace ?actorBurialPlace .
    BIND(IF(BOUND(?actorBurialPlace), ?actorBurialPlace, ""Unknown"") AS ?actorRestingPlace)
  }
  OPTIONAL {
    ?actor dbp:cremationPlace ?actorCremationPlace .
    FILTER NOT EXISTS { ?actor dbp:burialPlace ?actorBurialPlace }
    BIND(IF(BOUND(?actorCremationPlace), ?actorCremationPlace, ""Unknown"") AS ?actorRestingPlace)
  }

  # Find the recipient of Knight Grand Cross of the Order of St Michael and St George
  ?recipient dbo:award <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_St_Michael_and_St_George> .
  
  OPTIONAL { 
    ?recipient dbp:burialPlace ?recipientBurialPlace .
    BIND(IF(BOUND(?recipientBurialPlace), ?recipientBurialPlace, ""Unknown"") AS ?recipientRestingPlace)
  }
  OPTIONAL {
    ?recipient dbp:cremationPlace ?recipientCremationPlace .
    FILTER NOT EXISTS { ?recipient dbp:burialPlace ?recipientBurialPlace }
    BIND(IF(BOUND(?recipientCremationPlace), ?recipientCremationPlace, ""Unknown"") AS ?recipientRestingPlace)
  }
}
```",4,4,5,2,2,3,3,71,0,0,2,0,0.0,0
77,12,val,Give me the force of the mayor of Congress Poland and war of Alexander Chechenskiy.,SELECT ?result WHERE { <http://dbpedia.org/resource/Congress_Poland> <http://dbpedia.org/property/leader> ?v0 . ?result <http://dbpedia.org/ontology/commander> ?v0 . <http://dbpedia.org/resource/Alexander_Chechenskiy> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?mayor ?force
WHERE {
  ?mayor dbo:officeTitle ""Mayor of Congress Poland""@en .
  OPTIONAL { ?mayor dbo:hasMilitaryForce ?force . }
}
```

Note: The query assumes there might be a property like `dbo:hasMilitaryForce` which is speculative. DBpedia may not have direct mappings for these specific historical roles and terms.",3,3,4,2,2,3,2,20,0,0,6,0,0.0,0
404,37,val,"Give me the parent of the child, that is a royalty, of the parent, that is a royalty, of Prince George William of Hanover and child of Ernest Augustus, Crown Prince of Hanover.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Prince_George_William_of_Hanover> <http://dbpedia.org/ontology/parent> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/child> ?v3 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ernest_Augustus,_Crown_Prince_of_Hanover> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parentOfParent
WHERE {
  # Step 1: Find Prince George William of Hanover's parent who is a royalty.
  ?princeGeorgeWilliam dbo:child ?parent1 .
  FILTER (STRSTARTS(STR(?princeGeorgeWilliam), ""http://dbpedia.org/resource/Prince_George_William_of_Hanover""))
  ?parent1 rdf:type dbo:Monarch .

  # Step 2: Find the child of this parent who is a royalty and is Ernest Augustus.
  ?parent1 dbo:child ?ernestAugustus .
  FILTER (STRSTARTS(STR(?ernestAugustus), ""http://dbpedia.org/resource/Ernest_Augustus,_Crown_Prince_of_Hanover""))

  # Step 3: Find the parent of Ernest Augustus who is a royalty.
  ?ernestAugustus dbo:parent ?parent2 .
  FILTER (STRSTARTS(STR(?parent2), ""http://dbpedia.org/resource/"")) # Ensure it's a DBpedia resource
  ?parent2 rdf:type dbo:Monarch .

  # Step 4: Find the parent of this royal child.
  ?parent2 dbo:child ?royalChild .
  ?royalChild dbo:parent ?parentOfParent .
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
285,14,val,Give me the spouse of the professional in the award of Stan Lee.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v0 . <http://dbpedia.org/resource/Stan_Lee> <http://dbpedia.org/property/awards> ?v2 . ?v0 <http://dbpedia.org/property/occupation> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?spouse WHERE {
  # Identify Stan Lee
  dbr:Stan_Lee a dbo:Person .

  # Find awards associated with Stan Lee
  dbr:Stan_Lee dbo:award ?award .
  
  # Identify professionals related to these awards
  ?professional dbo:award ?award ;
               a dbo:Person .

  # Determine spouse information for each professional
  ?professional dbo:spouse ?spouse .
}
```",3,3,4,3,1,3,2,20,1,15,4148,0.0625,0.00024102193299590263,0.00048019207683073237
659,21,val,"Give me the military force of Napoleonic Wars and commander in the force of Arthur Wellesley, 1st Duke of Wellington.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Napoleonic_Wars> . ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Arthur_Wellesley,_1st_Duke_of_Wellington> . }","```sparql
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?militaryForce ?commander WHERE {
  ?wel cmd:commanded ?militaryForce .
  ?militaryForce dbo:commander ?commander .
  
  FILTER (str(?wel) = ""Arthur_Wellesley,_1st_Duke_of_Wellington"")
}
```",3,3,4,2,2,3,3,71,0,0,32,0,0.0,0
92,29,val,"Give me the band of Joseph Michael and band member of Nevermore and associated musical artist of the person born, that is an artist, as Jim Sheppard.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v3 <http://dbpedia.org/property/birthName> ""Jim Sheppard""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Nevermore> . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Joseph_Michael> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?bandOfJosephMichael ?nevermoreMember ?associatedArtist
WHERE {
  # Find Joseph Michael's band
  ?person foaf:name ""Joseph Michael"" .
  ?person dbo:member ?bandOfJosephMichael .

  # Find members of Nevermore
  ?nevermoreBand dbo:wikiPageRedirects <http://dbpedia.org/resource/Nevermore> .
  ?nevermoreBand dbo:member ?nevermoreMember .

  # Find Jim Sheppard's associated musical artist
  ?sheppard foaf:name ""Jim Sheppard"" .
  ?sheppard dbo:associatedMusicalArtist ?associatedArtist .
  
  FILTER EXISTS { ?associatedArtist a dbo:MusicArtist }
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
328,19,val,"Give me the commander in Eastern Front (World War II) and awardee of the award of Bruce Fraser, 1st Baron Fraser of North Cape.","SELECT ?result WHERE { <http://dbpedia.org/resource/Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape> <http://dbpedia.org/property/awards> ?v0 . ?result <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Eastern_Front_(World_War_II)> <http://dbpedia.org/ontology/commander> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commander ?awardee WHERE {
  # Find commanders on the Eastern Front during World War II
  {
    ?commander dbo:rank ?rank .
    ?commander dbo:office ?office .
    ?office dbo:subjectArea dbr:Eastern_Front_(World_War_II) .
    FILTER (CONTAINS(LCASE(?rank), ""field marshal"") || CONTAINS(LCASE(?rank), ""general""))
  }
  
  UNION
  
  # Find awardees by Bruce Fraser, 1st Baron Fraser of North Cape
  {
    ?awardee dbo:award dbr:Order_of_the_Bath .
    ?awardee dbo:awardedBy dbr:Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape .
  }
  
  # Check for overlap between commanders and awardees
  FILTER (?commander = ?awardee)
}
```",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
184,31,val,"Give me the parent of the native of the landmark at elevation, that is a settlement, of 96.0 and child of Archduke Joseph August of Austria.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> ?v1 . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_August_of_Austria> . ?v1 <http://dbpedia.org/ontology/elevation> ""96.0""^^<http://www.w3.org/2001/XMLSchema#double> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/child> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?parent
WHERE {
  ?landmark dbo:elevation ""96.0""^^xsd:float ;
            a dbo:Settlement .
  
  ?native dbo:nativePlace ?landmark .

  ?parent foaf:parent ?native .

  ?archduke dbo:child ?parent .
  FILTER (str(?archduke) = ""Archduke Joseph August of Austria"")
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
487,14,val,"Give me the administration of the person born, that is a soccer player, as the birth name of Phil Scott.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/governor> ?v0 . ?v0 <http://dbpedia.org/property/birthName> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Phil_Scott> <http://dbpedia.org/property/birthName> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?administration WHERE {
  ?person foaf:name ""Phil Scott""@en .
  ?person dbo:sport dbr:Soccer .
  ?person dbo:birthName ?birthName .
  ?person dbo:officeHolder ?administration .
}
```",3,4,4,3,1,3,2,20,0,0,14,0,0.0,0
294,17,val,"Give me the resting place of the architect of P. D. Houston Jr. House and entity in Nashville, Tennessee.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Nashville,_Tennessee> . <http://dbpedia.org/resource/P._D._Houston_Jr._House> <http://dbpedia.org/ontology/architect> ?v1 . ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?architect ?restingPlace WHERE {
  # Find the architect of P.D. Houston Jr. House in Nashville, Tennessee
  ?house a dbo:Building ;
         dbo:location dbr:Nashville,_Tennessee ;
         rdfs:label ""P.D. Houston Jr. House""@en .
  
  ?house dbo:architect ?architect .

  # Find the resting place of the architect
  ?architect dbo:burialPlace ?restingPlace .
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
547,41,val,Give me the resting place of the child of James Burton (property developer) and resting place of Alan Cunningham and resting place of the actor of Enemy at the Door.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Alan_Cunningham> <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Enemy_at_the_Door> <http://dbpedia.org/property/starring> ?v4 . ?v4 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/James_Burton_(property_developer)> <http://dbpedia.org/ontology/child> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?childRestingPlace ?alanCunninghamRestingPlace ?actorRestingPlace WHERE {
  # Resting place of the child of James Burton (property developer)
  ?jamesBurton a dbo:Person ;
               foaf:name ""James Burton"" ;
               dbp:occupation ""Property Developer"" .
  
  ?child dbo:parent ?jamesBurton ;
         dbo:deathPlace ?childRestingPlace .

  # Resting place of Alan Cunningham
  ?alanCunningham a dbo:Person ;
                  foaf:name ""Alan Cunningham"" .
  OPTIONAL { ?alanCunningham dbo:deathPlace ?alanCunninghamRestingPlace . }

  # Resting place of the actor of ""Enemy at the Door""
  ?film dbp:title ""Enemy at the Door""@en ;
        dbo:starring ?actor .
  
  OPTIONAL { ?actor dbo:deathPlace ?actorRestingPlace }
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
645,14,val,Give me the alma mater of the child of the parent of Adela Pankhurst.,SELECT ?result WHERE { <http://dbpedia.org/resource/Adela_Pankhurst> <http://dbpedia.org/ontology/parent> ?v2 . ?v0 <http://dbpedia.org/ontology/almaMater> ?result . ?v2 <http://dbpedia.org/ontology/child> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?child ?almaMater WHERE {
  # Adela Pankhurst's URI in DBpedia
  VALUES ?adela { <http://dbpedia.org/resource/Adela_Pankhurst> }
  
  # Find her parents
  ?parent dbo:child ?adela .
  
  # Find all children of those parents (siblings)
  ?parent dbo:child ?child .
  
  # Exclude Adela herself from the results
  FILTER (?child != ?adela)

  # Get alma mater for each child
  ?child foaf:schoolHomepage ?almaMater .
}
```",3,3,4,3,1,3,2,20,0,0,2,0,0.0,0
281,33,val,"Give me the entity in the birth place, that is a country, of the leader, that is a politician, of 1962 New South Wales state election and war of Beauchamp Seymour, 1st Baron Alcester.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Beauchamp_Seymour,_1st_Baron_Alcester> <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/1962_New_South_Wales_state_election> <http://dbpedia.org/property/leader> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?birthPlaceCountry WHERE {
  # Find the leader of the 1962 New South Wales state election
  ?politician dbo:office ?office .
  ?office dbo:electionDate ?electionDate .
  FILTER (YEAR(?electionDate) = 1962 && CONTAINS(LCASE(STR(?office)), ""new south wales"")).
  
  # Find the birthplace of this politician and ensure it is a country
  ?politician dbo:birthPlace ?birthPlace .
  ?birthPlace rdf:type dbr:Country .

  # Identify the war associated with Beauchamp Seymour, 1st Baron Alcester
  dbr:Beauchamp_Seymour_1st_Baron_Alcester dbo:militaryConflict ?war .
  
  # Ensure the birthplace country is related to the war
  ?birthPlaceCountry dbo:name ?name .
  FILTER (?name = ?war)
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
981,14,val,"Give me the birth place of the person born, that is a beauty queen, as the author of Kamikaze Girls.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BeautyQueen>. <http://dbpedia.org/resource/Kamikaze_Girls> <http://dbpedia.org/property/author> ?v2 . ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace WHERE {
  ?author dbo:book dbr:Kamikaze_Girls.
  ?author a dbo:Person.
  
  # Check if the person is associated with being a beauty queen
  OPTIONAL { 
    ?pageant dbo:contestant ?author .
    FILTER EXISTS { ?pageant rdf:type dbo:BeautyPageant }
  }

  # Ensure that the author has been involved in at least one beauty pageant
  FILTER EXISTS {
    ?pageant dbo:contestant ?author .
    ?pageant rdf:type dbo:BeautyPageant
  }

  # Retrieve birthplace of the person
  ?author dbo:birthPlace ?birthPlace.
}
```",3,4,4,3,1,3,2,20,0,0,170,0,0.0,0
801,25,val,"Give me the associated musical artist of the writer, that is a musical artist and an artist, of 40 Dayz & 40 Nightz and producer of Westside Story (song).",SELECT ?result WHERE { <http://dbpedia.org/resource/40_Dayz_&_40_Nightz> <http://dbpedia.org/property/writer> ?v1 . <http://dbpedia.org/resource/Westside_Story_(song)> <http://dbpedia.org/ontology/producer> ?result . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artist WHERE {
  ?song1 dbo:lyricsBy ?writer .
  ?song2 dbo:producer ?producer .

  FILTER (?song1 = dbr:40_Dayz_&_40_Nightz && ?song2 = dbr:Westside_Story_(song))
  
  ?writer rdf:type dbo:MusicalArtist ;
          dbo:occupation dbr:Artist .
  
  BIND(?writer AS ?artist)
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
747,18,val,Give me the band of Shèna and person born on 1985-04-29 and band of Amba Shepherd.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Shèna> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/birthDate> ""1985-04-29""^^<http://www.w3.org/2001/XMLSchema#date> . <http://dbpedia.org/resource/Amba_Shepherd> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>

SELECT DISTINCT ?bandShena ?person1985 ?bandAmba
WHERE {
  # Find Shèna's band
  ?shena rdf:type dbo:MusicArtist .
  ?shena dbo:associatedBand ?bandShena .

  # Find a person born on 1985-04-29
  ?person1985 rdf:type dbo:Person ;
              dbo:birthDate ?dateBirth .
  FILTER (xsd:date(?dateBirth) = ""1985-04-29""^^xsd:date)

  # Find Amba Shepherd's band
  ?amba rdf:type dbo:MusicArtist ;
        dbo:associatedBand ?bandAmba .
  FILTER (str(?amba) = ""Amba Shepherd""@en)
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
645,13,val,"Give me the entity in the residence, that is a country, of the commander in Battle of Diamond Rock.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v1 . <http://dbpedia.org/resource/Battle_of_Diamond_Rock> <http://dbpedia.org/ontology/commander> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://dbpedia.org/property/residence> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?country WHERE {
  ?battle dbp:name ""Battle of Diamond Rock"" .
  ?battle dbp:commander ?commander .

  ?commander dbo:residence ?residence .
  
  ?residence a ?type .
  FILTER (?type = <http://dbpedia.org/ontology/Country>)

  BIND(?residence AS ?country)
}
```",3,4,4,3,1,3,2,20,0,0,42999,0,0.0,0
488,19,val,Give me the birth place of the commander in Boshin War and death place of Tokugawa Ieyasu.,SELECT ?result WHERE { <http://dbpedia.org/resource/Boshin_War> <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Tokugawa_Ieyasu> <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace ?deathPlace
WHERE {
  # Birth place of Saigō Takamori
  dbr:Saigō_Takamori dbo:birthPlace ?birthPlace .
  
  # Death place of Tokugawa Ieyasu
  dbr:Tokugawa_Ieyasu dbo:deathPlace ?deathPlace .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
54,37,val,Give me the predecessor of Ameitta Thiri Maha Dhamma Dewi of Ava and parent of the child of the parent of Thado Minsaw of Prome.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Ameitta_Thiri_Maha_Dhamma_Dewi_of_Ava> . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> . ?v3 <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://dbpedia.org/property/father> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?person WHERE {
  # Part 1: Find the predecessor of Ameitta Thiri Maha Dhamma Dewi of Ava
  ?ameitta a dbo:Person ;
           rdfs:label ""Ameitta Thiri Maha Dhamma Dewi of Ava""@en .
  ?predecessor dbo:predecessor ?ameitta .

  # Part 2: Find the parent of the child of the parent of Thado Minsaw of Prome
  ?thado a dbo:Person ;
         rdfs:label ""Thado Minsaw of Prome""@en .
  ?parent dbo:parent ?thado .
  ?child dbo:parent ?parent .

  # Find the person who satisfies both conditions
  FILTER (?predecessor = ?parent)
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
801,38,val,"Give me the associated musical artist of the writer, that is a musical artist and an artist, of 40 Dayz & 40 Nightz and producer of the work, that is a musical work and a song and a work, of 50 Cent.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/producer> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. <http://dbpedia.org/resource/40_Dayz_&_40_Nightz> <http://dbpedia.org/property/writer> ?v2 . ?v3 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/50_Cent> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?artist WHERE {
  # Identify the song ""40 Dayz & 40 Nightz"" and its producer
  dbr:40_Dayz_&_40_Nightz a dbo:Song ;
    dbo:producer ?producer .

  # Ensure the producer is both an artist and a musical artist
  ?producer a dbo:Artist, dbo:MusicalArtist .

  # Retrieve the associated musical artist of this producer
  ?producer dbo:associatedMusicalArtist ?artist .
}
```",4,9,5,2,2,3,3,71,0,0,1,0,0.0,0
421,16,val,Give me the band member of Senidah and person born as the birth name of Dino Merlin.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Senidah> . <http://dbpedia.org/resource/Dino_Merlin> <http://dbpedia.org/property/birthName> ?v2 . ?result <http://dbpedia.org/property/birthName> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?bandMember WHERE {
  # Find band members of Senidah
  {
    ?senidah dbo:member ?bandMember .
    FILTER(STRSTARTS(STR(?senidah), ""http://dbpedia.org/resource/Senidah""))
  }
  
  UNION
  
  # Find person born with Dino Merlin's birth name
  {
    ?dinoMerlin foaf:givenName ?birthName .
    FILTER(STRSTARTS(STR(?dinoMerlin), ""http://dbpedia.org/resource/Dino_Merlin""))
    
    ?person foaf:givenName ?birthName .
    FILTER(?person != ?dinoMerlin)
  }
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
767,30,val,Give me the alma mater of Carl L. Nippert and entity in Baden-Württemberg and reference to the alter ego of Black Hood.,SELECT ?result WHERE { <http://dbpedia.org/resource/Carl_L._Nippert> <http://dbpedia.org/ontology/almaMater> ?result . <http://dbpedia.org/resource/Black_Hood> <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://dbpedia.org/ontology/state> <http://dbpedia.org/resource/Baden-Württemberg> . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . },"```sparql
# Query for Carl L. Nippert's alma mater
SELECT ?almaMater WHERE {
  wd:Q123456 dbo:almaMater ?almaMater .
}

UNION

# Query for an entity in Baden-Württemberg
SELECT ?entity ?label WHERE {
  ?entity wdt:P131 wd:Q1111 . # P131 is the property for location, Q1111 is the DBpedia item for Baden-Württemberg
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}

UNION

# Query for the alter ego of Black Hood
SELECT ?alterEgo WHERE {
  wd:Q789012 dbo:alias ?alterEgo .
}
```

**Note**: Replace `wd:Q123456` with the actual DBpedia QID for Carl L. Nippert, and `wd:Q789012` with the QID for Black Hood.",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
754,13,val,Give me the parent of the parent of the parent of Min Linka.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Min_Linka> <http://dbpedia.org/ontology/parent> ?v0 . ?v0 <http://dbpedia.org/ontology/parent> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?grandGrandParent WHERE {
  ?minLinka dbo:name ""Min Linka""@en .
  
  ?minLinka dbo:parent ?parent1 .
  ?parent1 dbo:parent ?parent2 .
  ?parent2 dbo:parent ?grandGrandParent .
}
```",3,3,4,3,1,3,2,20,0,0,1,0,0.0,0
528,21,val,Give me the war of the military force of Battle of Pisagua and force of Narciso Campero.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Pisagua> . ?v1 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Narciso_Campero> . },"```sparql
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?battleForce ?camperoForce WHERE {
  # Find the Battle of Pisagua and its participating forces
  ?battle dbp:name ""Battle of Pisagua""@en .
  ?battle dbp:participatedIn ?battleForce .

  # Find Narciso Campero and his commanded forces
  ?person dbo:birthName ""Narciso Campero"" .
  ?person dbo:commanderOf ?camperoForce .
}
```",3,3,4,2,2,3,3,71,0,0,3,0,0.0,0
182,18,val,Give me the war of Jagath Dias and entity in the nationality of Tamara Kunanayakam.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> ?v2 . <http://dbpedia.org/resource/Tamara_Kunanayakam> <http://dbpedia.org/ontology/nationality> ?v2 . <http://dbpedia.org/resource/Jagath_Dias> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?relatedEntity WHERE {
  # Find wars involving Jagath Dias
  ?war dbo:participant dbr:Jagath_Dias .
  
  # Identify related entities in those wars
  ?war dbo:participant ?relatedEntity .

  # Get Tamara Kunanayakam's nationality
  ?tamara dbo:nationality ?nationality .
  FILTER (?tamara = dbr:Tamara_Kunanayakam)

  # Filter related entities by the same nationality as Tamara Kunanayakam
  ?relatedEntity dbo:nationality ?sameNationality .
  FILTER (?sameNationality = ?nationality)
}
```",3,3,4,2,2,2,3,28,0,0,5,0,0.0,0
184,41,val,Give me the child of the child of Archduke Joseph Karl of Austria and parent of the native of Budapest and parent of Archduchess Ilona of Austria.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Budapest> . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Ilona_of_Austria> . ?result <http://dbpedia.org/property/father> ?v4 . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Karl_of_Austria> . ?result <http://dbpedia.org/ontology/child> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commonIndividual WHERE {
    # Step 1: Find children of Archduke Joseph Karl of Austria
    ?child dbo:parent dbr:Archduke_Joseph_Karl_of_Austria .

    # Step 2: Find grandchildren (children of the child)
    ?grandchild dbo:parent ?child .

    # Step 3: Identify natives of Budapest and their parents
    ?budaNative dbo:nativePlace dbr:Budapest .
    ?budaParent dbo:child ?budaNative .

    # Step 4: Find common individuals who are grandchildren and also parents of a native of Budapest
    FILTER (?grandchild = ?budaParent)

    # Step 5: Identify the parent of Archduchess Ilona of Austria
    ?ilonaParent dbo:child dbr:Archduchess_Ilona_of_Austria .

    # Step 6: Find common individuals who satisfy both conditions
    FILTER (?grandchild = ?ilonaParent)

    BIND(?grandchild AS ?commonIndividual)
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
161,43,val,"Give me the military force of the force, that is a societal event and a military conflict, of the predecessor of Indalecio Prieto and military force of Rif War and commander in Biscay Campaign.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v4 <http://dbpedia.org/ontology/commander> ?v0 . <http://dbpedia.org/resource/Biscay_Campaign> <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Indalecio_Prieto> . ?result <http://dbpedia.org/ontology/battle> ?v4 . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Rif_War> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?militaryForce WHERE {
  # Indalecio Prieto's predecessor in a relevant role (e.g., political)
  ?prietoPredecessor dbo:predecessor dbr:Indalecio_Prieto .
  
  # Societal event and military conflict associated with the predecessor
  ?societalEvent dbo:relatedTo ?prietoPredecessor ;
                rdf:type dbo:SocietalEvent .
  ?militaryConflict dbo:relatedTo ?prietoPredecessor ;
                    rdf:type dbo:MilitaryConflict .

  # Military force involved in both societal event and military conflict
  ?militaryForce dbo:involvedIn ?societalEvent ;
                 dbo:involvedIn ?militaryConflict .

  # Rif War involvement
  ?rifWar dbr:Rif_War .
  ?militaryForce dbo:involvedIn ?rifWar .

  # Biscay Campaign commander
  ?biscayCampaign dbr:Biscay_Campaign .
  ?commander dbo:commanded ?biscayCampaign ;
             dbo:member ?militaryForce .

  # Ensure the same military force is linked to all these entities
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
360,16,val,Give me the writer of The Roaring Silence and reference to the author of Blinded by the Light.,SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v2 . <http://dbpedia.org/resource/The_Roaring_Silence> <http://dbpedia.org/property/writer> ?result . <http://dbpedia.org/resource/Blinded_by_the_Light> <http://dbpedia.org/property/author> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?authorOfRoaringSilence ?authorOfBlindedByTheLight WHERE {
  # Find the author of ""The Roaring Silence""
  dbr:The_Roaring_Silence dbo:author ?authorOfRoaringSilence .
  
  # Find the author of ""Blinded by the Light""
  dbr:Blinded_by_the_Light dbo:author ?authorOfBlindedByTheLight .

  # Optional: Check for any shared information or relationship
  OPTIONAL {
    ?authorOfRoaringSilence ?p ?o .
    ?authorOfBlindedByTheLight ?p2 ?o2 .
    FILTER (?p = ?p2 && ?o = ?o2)
  }
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
9,40,val,"Give me the alma mater of Allen Hill (scientist) and alma mater of the mayor, that is a politician, of the entity, that is an organisation, in Belfast and figure known as QUB.","SELECT ?result WHERE { <http://dbpedia.org/resource/Allen_Hill_(scientist)> <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://dbpedia.org/property/nickname> ""QUB""@en . ?v1 <http://dbpedia.org/ontology/almaMater> ?result . ?v2 <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Belfast> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/property/leader> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?almaMater
WHERE {
  # Find Allen Hill's alma mater
  OPTIONAL { 
    dbr:Allen_Hill_(scientist) dbo:almaMater ?hillAlmaMater .
  }
  
  # Identify the mayor of Belfast and their alma mater
  OPTIONAL {
    ?mayor a dbo:Mayor ;
           dbo:officeLocation dbr:Belfast ;
           dbo:almaMater ?mayorAlmaMater .
  }

  # Ensure QUB is identified as an organization in Belfast
  FILTER EXISTS { 
    dbr:Queen's_University_Belfast dbo:location dbr:Belfast .
  }
  
  # Check for common alma mater between Allen Hill and the mayor
  OPTIONAL {
    VALUES ?commonAlmaMater { ?hillAlmaMater ?mayorAlmaMater }
    ?almaMater rdfs:label ?label .
    FILTER (CONTAINS(LCASE(?label), ""university"") || CONTAINS(LCASE(?label), ""college""))
  }

  # Ensure the alma mater is common
  FILTER (?commonAlmaMater = ?almaMater)
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
184,30,val,Give me the parent of the child of Archduke Joseph Francis of Austria and child of Archduke Joseph August of Austria and parent of Géza von Habsburg.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Géza_von_Habsburg> . ?result <http://dbpedia.org/ontology/child> ?v1 . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_August_of_Austria> . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Francis_of_Austria> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT DISTINCT ?commonAncestor WHERE {
  # Child of Archduke Joseph Francis of Austria
  ?child1 dbo:parent dbr:Archduke_Joseph_Francis_of_Austria .
  
  # Parent of that child (could be spouse or another parent)
  ?parent1 dbo:child ?child1 .

  # Child of Archduke Joseph August of Austria
  ?child2 dbo:parent dbr:Archduke_Joseph_August_of_Austria .
  
  # Parent of that child
  ?parent2 dbo:child ?child2 .

  # Parent of Géza von Habsburg
  ?parent3 dbo:child dbr:Géza_von_Habsburg .

  # Find common ancestor among the parents identified above
  FILTER (?parent1 = ?commonAncestor && ?parent2 = ?commonAncestor && ?parent3 = ?commonAncestor)
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
281,18,val,"Give me the war of Beauchamp Seymour, 1st Baron Alcester and entity in Colony of New Zealand and war of New Zealand Army.","SELECT ?result WHERE { <http://dbpedia.org/resource/New_Zealand_Army> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Beauchamp_Seymour,_1st_Baron_Alcester> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Colony_of_New_Zealand> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war ?newZealandWar WHERE {
  # Find Beauchamp Seymour, 1st Baron Alcester
  ?beauchampSeymour a dbo:Person ;
                   rdfs:label ""Beauchamp Seymour, 1st Baron Alcester""@en .

  # Wars involving Beauchamp Seymour
  ?beauchampSeymour dbo:participatedIn ?war .

  # Check if the war is related to New Zealand or its colonial history
  OPTIONAL {
    ?newZealandEntity a dbo:Place ;
                      rdfs:label ""New Zealand""@en .
    ?war dbo:location ?newZealandEntity .
  }

  # Wars involving the New Zealand Army
  ?nzArmyWar dbo:participatedIn ?newZealandWar ;
            rdfs:label ""New Zealand Army""@en .

  FILTER(?war = ?newZealandWar)
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
747,30,val,Give me the person born on 1985-04-29 and band of the person born as Tracey Elizabeth McSween and band of Amba Shepherd.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Amba_Shepherd> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/birthDate> ""1985-04-29""^^<http://www.w3.org/2001/XMLSchema#date> . ?v1 <http://dbpedia.org/property/birthName> ""Tracey Elizabeth McSween""@en . }","```sparql
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?person1 ?band1 ?person2 ?band2 WHERE {
  # Find Tracey Elizabeth McSween and her band
  ?person1 a dbo:Person ;
           foaf:name ""Tracey Elizabeth McSween""@en ;
           dbo:birthday ""1985-04-29""^^xsd:date .
  OPTIONAL { ?person1 dbp:band ?band1 . }

  # Find Amba Shepherd and her band
  ?person2 a dbo:Person ;
           foaf:name ""Amba Shepherd""@en .
  OPTIONAL { ?person2 dbp:band ?band2 . }
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
184,26,val,"Give me the child of the child of the parent, that is a royalty, of Archduke Ladislaus Philipp of Austria.",SELECT ?result WHERE { <http://dbpedia.org/resource/Archduke_Ladislaus_Philipp_of_Austria> <http://dbpedia.org/ontology/parent> ?v1 . ?result <http://dbpedia.org/property/father> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/father> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT DISTINCT ?grandchild
WHERE {
  # Step 1: Identify Archduke Ladislaus Philipp of Austria
  ?ladislaus a dbo:Archduke ;
             foaf:name ""Ladislaus Philipp of Austria"" .

  # Step 2: Find his parent(s)
  ?ladislaus dbo:parent ?parent .

  # Step 3: Find the child(ren) of this parent
  ?parent dbo:child ?royalChild .

  # Step 4: Filter for royalty among these children
  ?royalChild rdf:type dbo:RoyalFamilyMember .

  # Step 5: Find the child(ren) of this royal child
  ?royalChild dbo:child ?grandchild .
}
```",3,4,4,3,1,3,3,71,0,0,1,0,0.0,0
838,14,val,"Give me the band member of the band, that is a group, of the reference, that is a group and an organisation, to YU Grupa.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v2 <http://xmlns.com/foaf/0.1/name> ""YU Grupa""@en . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?member WHERE {
  ?yugrupa rdf:type dbo:Band ;
           rdfs:label ""YU Grupa""@en .
  
  ?reference dbo:reference ?yugrupa ;
             rdf:type dbo:Organization, dbo:MusicalGroup .

  ?reference dbo:bandMember ?member .
}
```",3,6,4,3,1,3,2,20,0,0,40,0,0.0,0
356,13,val,"Give me the player in the successor of the predecessor, that is a sports team season and a soccer club season, of 2015 Sacramento Republic FC season.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v0 <http://dbpedia.org/ontology/successor> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?v1 <http://dbpedia.org/ontology/team> ?result . ?v0 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/2015_Sacramento_Republic_FC_season> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?player WHERE {
  # Identify the 2015 Sacramento Republic FC season
  dbr:Sacramento_Republic_FC_season_2015 a dbo:SportsTeamSeason ;
    dbo:team dbr:Sacramento_Republic_FC .

  # Find its predecessor
  OPTIONAL { 
    dbr:Sacramento_Republic_FC_season_2015 dbo:predecessor ?predecessor .
  }

  # Determine the successor of this predecessor
  OPTIONAL {
    ?predecessor dbo:successor ?successor .
  }

  # Ensure the successor is indeed the 2015 season
  FILTER (?successor = dbr:Sacramento_Republic_FC_season_2015)

  # Identify players in the 2015 season
  ?player a dbo:Player ;
    dbo:playsForTeam dbr:Sacramento_Republic_FC ;
    dbo:participatedInSeason dbr:Sacramento_Republic_FC_season_2015 .
}
```",3,5,4,3,1,3,2,20,0,0,1,0,0.0,0
754,15,val,Give me the parent of the parent of the parent of Min Linka and parent of May Hnin Thwe-Da.,SELECT ?result WHERE { <http://dbpedia.org/resource/Min_Linka> <http://dbpedia.org/ontology/parent> ?v0 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/May_Hnin_Thwe-Da> . ?v0 <http://dbpedia.org/ontology/parent> ?v1 . ?v1 <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?commonAncestor WHERE {
  # Min Linka's lineage
  ?minLinka dbo:birthName ""Min Linka""@en.
  
  ?minLinka dbo:child ?parent1A.
  ?parent1A dbo:child ?grandParent1A.
  ?grandParent1A dbo:child ?greatGrandParent1A.

  # May Hnin Thwe-Da's lineage
  ?mayHninThweDa dbo:birthName ""May Hnin Thwe-Da""@en.
  
  ?mayHninThweDa dbo:child ?parent1B.
  ?parent1B dbo:child ?grandParent1B.
  ?grandParent1B dbo:child ?greatGrandParent1B.

  # Find common ancestor
  FILTER (?greatGrandParent1A = ?greatGrandParent1B)
  
  BIND(?greatGrandParent1A AS ?commonAncestor)
}
```",4,4,5,3,2,3,2,20,0,0,1,0,0.0,0
232,27,val,"Give me the native of the residence, that is a settlement and British, of the native, that is a politician and an office holder, of France.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://dbpedia.org/property/residence> ?v2 . ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/France> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nativePlace WHERE {
  ?politician dbo:nationality dbr:Francois; 
              a dbo:OfficeHolder;
              dbo:residence ?settlement.
  
  ?settlement dbo:settlement true ;
              dbo:country dbr:United_Kingdom.

  ?settlement dbo:birthPlace ?nativePlace.
}
```",3,7,4,3,1,3,3,71,0,0,9121,0,0.0,0
92,19,val,"Give me the associated musical artist of Jim Sheppard and band member of the reference, that is an artist, to Nevermore.","SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""Nevermore""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Jim_Sheppard> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artist WHERE {
  # Find the band associated with Jim Sheppard
  dbr:Jim_Sheppard dbo:musicalArtist dbr:Nevermore .

  # Find members of Nevermore who are also artists
  ?member dbo:bandMember dbr:Nevermore .
  ?member dbo:occupation dbr:Musician ;
          rdfs:label ?artistLabel .
  
  FILTER (CONTAINS(LCASE(?artistLabel), ""musician"") || CONTAINS(LCASE(?artistLabel), ""singer""))
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
659,38,val,"Give me the military force of the force, that is a societal event and an event and a military conflict, of Rutger Jan Schimmelpenninck and commander in the war, that is an event and a military conflict, of 1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish).",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/1st_Light_Cavalry_Lancers_Regiment_of_the_Imperial_Guard_(Polish)> <http://dbpedia.org/ontology/battle> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?militaryForce ?commander WHERE {
  # Find the military force associated with Rutger Jan Schimmelpenninck in societal events, events, and military conflicts
  ?event a dbo:SocietalEvent ;
         dbo:agent dbr:Rutger_Jan_Schimmelpenninck .
  ?militaryForce dbo:participatedIn ?event .

  # Find the commander of a war involving the 1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish)
  ?war a dbo:MilitaryConflict ;
       dbo:agent dbr:_1st_Light_Cavalry_Lancers_Regiment_of_the_Imperial_Guard_(Polish) .
  ?commander dbo:commanderOf ?war .

  # Ensure the military force is also involved in events and military conflicts
  ?militaryForce a dbo:MilitaryConflict ;
                 dbo:participatedIn ?event .
}
```",4,9,5,2,2,3,3,71,0,0,31,0,0.0,0
617,27,val,Give me the parent of the child of the commander in Battle of Panium.,SELECT ?result WHERE { <http://dbpedia.org/resource/Battle_of_Panium> <http://dbpedia.org/ontology/commander> ?v1 . ?result <http://dbpedia.org/ontology/child> ?v2 . ?v1 <http://dbpedia.org/ontology/child> ?v2 . },"```sparql
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?parent
WHERE {
  ?battle rdfs:label ""Battle of Panium""@en .
  ?battle dbp:commander ?commander .

  ?child dbo:parent ?commander .
  
  ?child dbo:parent ?parent .
}
```",3,3,4,3,1,3,3,71,4,0,0,1.0,1.0,1.0
754,11,val,Give me the parent of May Hnin Thwe-Da and parent of the parent of May Hnin Htapi.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/May_Hnin_Thwe-Da> . <http://dbpedia.org/resource/May_Hnin_Htapi> <http://dbpedia.org/ontology/parent> ?v2 . ?v2 <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?parentOfMayHninThweDa ?grandparentOfMayHninHtapi
WHERE {
  # Find the parent of May Hnin Thwe-Da
  ?mayHninThweDa dbo:child <http://dbpedia.org/resource/May_Hnin_Thwe-Da> .
  ?mayHninThweDa a dbo:Person .
  ?parentOfMayHninThweDa dbo:child ?mayHninThweDa .

  # Find the grandparent of May Hnin Htapi
  ?mayHninHtapi dbo:child <http://dbpedia.org/resource/May_Hnin_Htapi> .
  ?mayHninHtapi a dbo:Person .
  ?parentOfMayHninHtapi dbo:child ?intermediateParent .
  ?intermediateParent dbo:child ?mayHninHtapi .
}
```",3,3,4,2,2,3,2,20,0,1,1,0.0,0.0,0
182,14,val,Give me the war of the work of Gotabhaya Rajapaksa and war of Mahesh Senanayake.,SELECT ?result WHERE { <http://dbpedia.org/resource/Mahesh_Senanayake> <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Gotabhaya_Rajapaksa> . ?v2 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?work
WHERE {
  VALUES ?person { 
    dbr:Gotabhaya_Rajapaksa 
    dbr:Mahesh_Senanayake 
  }
  
  ?person dbo:work ?work .
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
485,18,val,"Give me the entity in the birth place, that is a region, of Joseph Whitaker (naturalist) and birth place of Thomas Warner (poet).",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. <http://dbpedia.org/resource/Joseph_Whitaker_(naturalist)> <http://dbpedia.org/ontology/birthPlace> ?v0 . ?result <http://dbpedia.org/ontology/country> ?v0 . <http://dbpedia.org/resource/Thomas_Warner_(poet)> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?birthPlace WHERE {
  # Birthplace of Joseph Whitaker (naturalist)
  ?whitaker dbo:birthPlace ?birthPlaceWhitaker .
  ?birthPlaceWhitaker a dbo:Region .

  # Birthplace of Thomas Warner (poet)
  ?warner dbo:birthPlace ?birthPlaceWarner .
  ?birthPlaceWarner a dbo:Region .

  # Ensure both birthplaces are the same region
  FILTER (?birthPlaceWhitaker = ?birthPlaceWarner)

  # Identify individuals by their DBpedia resource
  VALUES ?whitaker { <http://dbpedia.org/resource/Joseph_Whitaker_(naturalist)> }
  VALUES ?warner { <http://dbpedia.org/resource/Thomas_Warner_(poet)> }

  # Return the common birthplace region
  BIND(?birthPlaceWhitaker AS ?birthPlace)
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
767,28,val,"Give me the reference to  and entity in the administration, that is a settlement, of Green and alma mater of Carl L. Nippert.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/leaderParty> ""Green""@en . <http://dbpedia.org/resource/Carl_L._Nippert> <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://dbpedia.org/ontology/state> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://xmlns.com/foaf/0.1/name> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?settlement ?almaMater WHERE {
  ?person foaf:name ""Carl L. Nippert""@en .
  ?person dbo:almaMater ?almaMater .
  
  ?almaMater dbo:location ?settlement .
  ?settlement a dbo:Settlement ;
              dbo:partOf ?administration .

  FILTER (str(?settlement) = str(dbr:Green))
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
767,21,val,"Give me the entity in the administration, that is a settlement, of Green and reference to .","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/state> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://dbpedia.org/property/leaderParty> ""Green""@en . ?result <http://xmlns.com/foaf/0.1/name> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?entity ?reference WHERE {
  ?entity dbo:administrativeUnit dbr:Green .
  ?entity rdf:type ?type .
  FILTER EXISTS { 
    ?entity dbo:wikiPageUsesTemplate dbt:Settlement .
  }
  OPTIONAL { ?entity rdfs:label ?reference . FILTER (lang(?reference) = 'en') }
}
```",3,4,4,2,2,3,3,71,0,0,7,0,0.0,0
427,30,val,"Give me the party of the person born, that is an office holder and a politician, as Romano Antonio Prodi and reference to Partito Popolare Italiano and party of Giulio Andreotti.","SELECT ?result WHERE { <http://dbpedia.org/resource/Giulio_Andreotti> <http://dbpedia.org/ontology/party> ?result . ?result <http://xmlns.com/foaf/0.1/name> ""Partito Popolare Italiano""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/property/birthName> ""Romano Antonio Prodi""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/ontology/party> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?partyProdi ?partyAndreotti WHERE {
  # Romano Prodi's details
  dbr:Romano_Prodi a dbo:Politician ;
                  dbo:birthPlace ?birthPlace ;
                  dbo:officeHolder ?officeHolder .
  
  OPTIONAL { dbr:Romano_Prodi dbp:politicalParty ?partyProdi . }
  
  FILTER EXISTS { ?officeHolder a dbo:OfficeHolder } # Ensure he is an office holder
  
  # Giulio Andreotti's party
  dbr:Giulio_Andreotti dbp:politicalParty ?partyAndreotti .
}
```",4,6,5,2,3,3,3,71,0,0,1,0,0.0,0
712,14,val,Give me the resting place of the awardee of the show of Soviet Union.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/Soviet_Union> . ?v0 <http://dbpedia.org/property/awards> ?v2 . ?v0 <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?awardee ?restingPlace WHERE {
  ?show dbo:country dbr:Soviet_Union .
  ?show dbo:award ?award .
  ?award dbo:recipient ?awardee .
  OPTIONAL { ?awardee dbo:placeOfBurial ?restingPlace . }
}
```",3,3,4,3,1,3,2,20,0,0,63,0,0.0,0
528,44,val,Give me the war of the commander in Battle of La Rinconada de Ate and war of Irene Morales and force of the person born as Narciso Campero Leyes.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Battle_of_La_Rinconada_de_Ate> <http://dbpedia.org/ontology/commander> ?v4 . ?v2 <http://dbpedia.org/property/birthName> ""Narciso Campero Leyes""@en . ?v4 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/commander> ?v2 . <http://dbpedia.org/resource/Irene_Morales> <http://dbpedia.org/ontology/battle> ?result . }","```sparql
PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?commander ?war ?force WHERE {
  # Find the commander in the Battle of La Rinconada de Ate
  ?battle dbp:name ""Battle of La Rinconada de Ate""@en .
  ?battle dbo:commander ?commander .

  # Find the war involving Irene Morales
  ?person dbp:name ""Irene Morales""@en .
  ?person dbo:participatedIn ?war .

  # Find the force or role of Narciso Campero Leyes
  ?narciso dbp:name ""Narciso Campero Leyes""@en .
  ?narciso dbo:militaryForce ?force .
}
```",5,5,6,2,3,3,3,71,0,0,2,0,0.0,0
963,15,val,"Give me the entity in the region, that is a country, of the time zone of Herzegovina-Neretva Canton and administration of Serbian Progressive Party.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Serbian_Progressive_Party> . ?result <http://dbpedia.org/ontology/country> ?v1 . <http://dbpedia.org/resource/Herzegovina-Neretva_Canton> <http://dbpedia.org/property/timeZone> ?v0 . ?v1 <http://dbpedia.org/property/timeZone> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?country WHERE {
  # Find the time zone of Herzegovina-Neretva Canton
  dbr:Herzegovina-Neretva_Canton dbo:timeZone ?tz .

  # Identify the region associated with this time zone
  ?tz dbo:region ?region .

  # Find countries in that region
  ?country a dbo:Country ;
           dbo:partOfRegion ?region .

  # Determine entities administered by Serbian Progressive Party
  dbr:Serbian_Progressive_Party dbo:administrativeBody ?adminEntity .

  # Filter to find common country entity
  FILTER(?country = ?adminEntity)
}
```",4,5,5,3,2,3,2,20,0,0,84,0,0.0,0
339,11,val,Give me the child of the child of Christian IX of Denmark and father of Princess Elizabeth of Greece and Denmark.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Christian_IX_of_Denmark> . <http://dbpedia.org/resource/Princess_Elizabeth_of_Greece_and_Denmark> <http://dbpedia.org/property/father> ?result . ?v2 <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?grandchild WHERE {
  ?christianIX dbo:spouse ?spouse .
  FILTER (str(?christianIX) = ""Christian IX of Denmark""^^xsd:string)
  
  ?christianIX dbo:child ?child .
  
  ?child dbo:child ?grandchild .

  OPTIONAL { 
    ?princess dbo:father ?grandchild .
    FILTER (str(?princess) = ""Princess Elizabeth of Greece and Denmark""^^xsd:string)
  }
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
391,31,val,"Give me the actor of The Departed and native of the figure known as the nick name of Jackson, Tennessee.","SELECT ?result WHERE { <http://dbpedia.org/resource/The_Departed> <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://dbpedia.org/property/nickname> ?v1 . ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . <http://dbpedia.org/resource/Jackson,_Tennessee> <http://xmlns.com/foaf/0.1/nick> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  # Part 1: Find actors in ""The Departed""
  ?movie dbo:title ""The Departed""@en .
  ?movie dbo:starring ?actor .

  # Part 2: Identify the figure with a nickname related to Jackson, Tennessee
  ?figure dbo:nativePlace ?nativePlace .
  ?figure rdfs:label ?nickname .
  
  FILTER(CONTAINS(LCASE(?nickname), ""jackson"") && CONTAINS(LCASE(STR(?nativePlace)), ""tennessee""))

  # Combine the two parts by checking if the actor is native to the identified place
  ?actor dbo:nativePlace ?nativePlace .
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
92,39,val,Give me the associated musical artist of Jim Sheppard and band of the person born as the birth name of Joseph Michael.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> ?v1 . <http://dbpedia.org/resource/Joseph_Michael> <http://dbpedia.org/property/birthName> ?v0 . <http://dbpedia.org/resource/Jim_Sheppard> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/property/birthName> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?artist ?band 
WHERE {
  # Find the associated musical artist of Jim Sheppard
  ?person foaf:name ""Jim Sheppard""@en .
  ?person dbo:associatedBand ?artist .

  # Find the band of the person born as Joseph Michael
  ?individual foaf:name ?name .
  FILTER(CONTAINS(LCASE(?name), ""joseph michael""))
  ?individual dbo:associatedBand ?band .
}
```",4,4,5,3,2,3,3,71,1,3,0,0.25,1.0,0.4
767,25,val,Give me the alma mater of Carl L. Nippert and reference to the alter ego of Black Hood.,SELECT ?result WHERE { <http://dbpedia.org/resource/Black_Hood> <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . <http://dbpedia.org/resource/Carl_L._Nippert> <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?almaMater ?alterEgo WHERE {
  # Query for Carl L. Nippert's alma mater
  OPTIONAL { 
    dbr:C_L_Nippert dbo:almaMater ?almaMater .
  }
  
  # Query for the alter ego of Black Hood
  OPTIONAL {
    dbr:Black_Hood dbo:alterEgo ?alterEgo .
  }
}
```",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
801,44,val,"Give me the producer of the work, that is a musical work and a song and a work, of 50 Cent and professional in  and associated musical artist of the writer, that is a musical artist and an artist, of 40 Dayz & 40 Nightz.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/producer> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v4 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/50_Cent> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/40_Dayz_&_40_Nightz> <http://dbpedia.org/property/writer> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?producer ?associatedArtist WHERE {
  ?work dbo:musicalWork ""40 Dayz & 40 Nightz"" .
  ?work dbo:lyricist ?writer .
  ?writer dbo:musicalArtist ?associatedArtist .
  ?work dbo:producer ?producer .
  FILTER (?producer = dbr:50_Cent)
}
```",5,10,6,2,3,3,3,71,0,0,1,0,0.0,0
701,43,val,Give me the parent of Meritamen and spouse of Ramesses II and parent of the child of the child of Seti I.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v4 . ?v4 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Meritamen> <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seti_I> . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Ramesses_II> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT DISTINCT ?parentMeritamen ?spouseRamessesII ?greatGrandChildParent
WHERE {
  # Parent of Meritamen
  ?parentMeritamen dbo:child dbr:Mertitef .

  # Spouse of Ramesses II
  dbr:Ramses_II dbo:spouse ?spouseRamessesII .

  # Parent of the child of the child of Seti I
  ?setiIChild dbo:child dbr:Seti_I .
  ?greatGrandChild dbo:child ?setiIChild .
  ?greatGrandChildParent dbo:parent ?greatGrandChild .
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
701,25,val,Give me the parent of Henuttawy (19th dynasty) and spouse of the father of Merneptah.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v1 . <http://dbpedia.org/resource/Merneptah> <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Henuttawy_(19th_dynasty)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?henuttawyParent ?merneptahFatherSpouse WHERE {
  # Find the parent of Henuttawy (19th dynasty)
  ?henuttawy a dbo:Person ;
             rdfs:label ""Henuttawy""@en .
  OPTIONAL { ?henuttawy dbo:parent ?henuttawyParent . }

  # Find Merneptah's father
  ?merneptah a dbo:Person ;
             rdfs:label ""Merneptah""@en .
  OPTIONAL { ?merneptah dbo:parent ?merneptahFather . }
  
  # Find the spouse of Merneptah's father
  OPTIONAL { ?merneptahFather dbo:spouse ?merneptahFatherSpouse . }

  FILTER regex(?henuttawyParent, ""19th dynasty"", ""i"")
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
547,19,val,Give me the resting place of the child of James Burton (property developer) and resting place of Simon Cadell.,SELECT ?result WHERE { <http://dbpedia.org/resource/Simon_Cadell> <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/James_Burton_(property_developer)> <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?childRestingPlace ?simonCadellRestingPlace WHERE {
  # Find the child of James Burton (property developer)
  ?person a dbo:Person ;
          dbo:spouse ?spouse .
  FILTER(CONTAINS(LCASE(?spouse), ""james burton"") && CONTAINS(LCASE(STR(?person)), ""child"")) .
  
  OPTIONAL { ?person dbo:deathPlace ?childRestingPlace . }
  
  # Find the resting place of Simon Cadell
  dbp:SrSimonCadell dbo:deathPlace ?simonCadellRestingPlace .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
16,21,val,Give me the spouse of the person born as Ted Martin McGinley and person born as Georgeanne Marie Rice.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ""Ted Martin McGinley""@en . ?result <http://dbpedia.org/property/birthName> ""Georgeanne Marie Rice""@en . ?v1 <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?spouseName WHERE {
  {
    ?person foaf:name ""Ted Martin McGinley""@en .
    ?person dbo:spouse ?spouse .
    ?spouse foaf:name ?spouseName .
  }
  UNION
  {
    ?person foaf:name ""Georgeanne Marie Rice""@en .
    ?person dbo:spouse ?spouse .
    ?spouse foaf:name ?spouseName .
  }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
659,41,val,"Give me the military force of Napoleonic Wars and commander in the force of Arthur Wellesley, 1st Duke of Wellington and commander in the war, that is an event and a military conflict, of 1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish).","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Napoleonic_Wars> . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Arthur_Wellesley,_1st_Duke_of_Wellington> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/1st_Light_Cavalry_Lancers_Regiment_of_the_Imperial_Guard_(Polish)> <http://dbpedia.org/ontology/battle> ?v4 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce ?regiment WHERE {
  # Arthur Wellesley's command roles
  dbr:Arthur_Wellesley_1st_Duke_of_Wellington dbo:militaryCommanderOf ?commandRole .
  
  # Linking command role to military forces during the Napoleonic Wars
  ?commandRole dbo:participatedIn dbr:Napoleonic_Wars ;
               dbo:member ?militaryForce .

  # Identifying the specific regiment within these forces
  OPTIONAL {
    ?militaryForce dbo:hasMember dbr:1st_Light_Cavalry_Lancers_Regiment_of_the_Imperial_Guard_(Polish) .
  }

  # Ensuring the Napoleonic Wars are a military conflict
  FILTER EXISTS { 
    dbr:Napoleonic_Wars a dbo:MilitaryConflict .
  }
}
```",5,7,6,2,3,3,3,71,0,0,13,0,0.0,0
54,19,val,Give me the child of the father of Soe Min Wimala Dewi and parent of Thado Minsaw of Prome.,SELECT ?result WHERE { <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Soe_Min_Wimala_Dewi> <http://dbpedia.org/property/father> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?individual WHERE {
  ?soeMinWimalaDewi dbo:childOf ?father .
  ?father dbo:child ?individual .
  
  ?thadoMinsawOfProme dbo:parent ?individual .

  FILTER(STR(?soeMinWimalaDewi) = ""Soe Min Wimala Dewi"")
  FILTER(STR(?thadoMinsawOfProme) = ""Thado Minsaw of Prome"")
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
16,36,val,Give me the spouse of Ted McGinley and person born as the birth name of the alumnus of Ohio State University.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Ohio_State_University> . ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?spouseName ?personWithMatchingBirthName
WHERE {
  # Find Ted McGinley's spouse
  ?ted a dbo:Person ;
      foaf:name ""Ted McGinley"" ;
      dbo:spouse ?spouse .
  
  # Get the name of the spouse
  ?spouse foaf:name ?spouseName .

  # Find an alumnus of Ohio State University and their birth name
  ?alumnus a dbo:Person ;
           dbo:almaMater <http://dbpedia.org/resource/Ohio_State_University> ;
           foaf:name ?birthName .
  
  # Find another person with the same birth name
  ?personWithMatchingBirthName a dbo:Person ;
                              foaf:name ?birthName .
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
820,14,val,Give me the child of the parent of the professional in Actor.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://dbpedia.org/property/occupation> ""Actor""@en . ?result <http://dbpedia.org/property/father> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?child
WHERE {
  ?actor a dbo:Actor .
  ?actor dbo:occupation ?occupation .
  FILTER (CONTAINS(LCASE(str(?occupation)), ""actor"")) .

  ?actor foaf:parent ?parent .

  ?parent foaf:child ?child .
}
```",3,3,4,3,1,3,2,20,0,0,354,0,0.0,0
547,20,val,Give me the resting place of the actor of Enemy at the Door and resting place of James Burton (Egyptologist).,SELECT ?result WHERE { <http://dbpedia.org/resource/James_Burton_(Egyptologist)> <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Enemy_at_the_Door> <http://dbpedia.org/property/starring> ?v2 . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?actorRestingPlace ?jamesBurtonRestingPlace WHERE {
  # Find the actor of ""Enemy at the Door""
  ?film dbo:title ""Enemy at the Door""@en .
  ?film dbo:starring ?actor .
  
  # Get the resting place of this actor
  ?actor dbp:placeOfBurial ?actorRestingPlace .

  # Identify James Burton, the Egyptologist
  ?james dbr:James_Burton_(Egyptologist) .
  ?james dbo:occupation dbr:Egyptology .
  
  # Get the resting place of James Burton (Egyptologist)
  ?james dbp:placeOfBurial ?jamesBurtonRestingPlace .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
528,26,val,Give me the war of the commander in the work of --01-09.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/author> ""--01-09""^^<http://www.w3.org/2001/XMLSchema#gMonthDay> . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/ontology/commander> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?work ?war ?commander WHERE {
  # Find works related to January 2009
  ?work dbo:date ""2009-01""^^xsd:gYearMonth ;
        dbo:wikiPageWikiLink ?relatedEntity .
  
  # Check if the related entity is a war
  ?relatedEntity rdf:type dbo:War .

  # Get the commander of the war
  ?war dbo:commander ?commander .
}
```",3,3,4,3,1,3,3,71,0,0,14,0,0.0,0
767,24,val,Give me the reference to  and alma mater of the administration of George K. Nash.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/George_K._Nash> . ?v2 <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://xmlns.com/foaf/0.1/name> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?reference ?almaMaterLabel WHERE {
  VALUES ?nash { dbr:George_K._Nash }
  
  # Find reference to George K. Nash
  OPTIONAL {
    ?nash dbo:wikiPageRedirects ?reference .
    ?reference rdfs:label ?referenceLabel .
  }

  # Find alma mater of George K. Nash
  OPTIONAL {
    ?nash dbo:almaMater ?almaMater .
    ?almaMater rdfs:label ?almaMaterLabel .
  }
}
```",3,3,4,2,2,3,3,71,0,1,2,0.0,0.0,0
801,34,val,Give me the professional in the alter ego of the true self of The Shadow and associated musical artist of Chris Taylor (music producer).,"SELECT ?result WHERE { <http://dbpedia.org/resource/Chris_Taylor_(music_producer)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v1 . ?v2 <http://xmlns.com/foaf/0.1/givenName> ""The Shadow""@en . }","```sparql
# Query for the professional in the alter ego of The Shadow (Lamont Cranston)
SELECT ?person WHERE {
  ?shadow dbo:alterEgo ?person .
  ?shadow rdfs:label ""The Shadow""@en .
}

UNION

# Query for the associated musical artist of Chris Taylor (Grizzly Bear)
SELECT ?artist WHERE {
  ?producer foaf:name ""Chris Taylor""@en ;
            dbo:associatedBand ?band .
  ?band dbo:genre ?genre .
  FILTER(CONTAINS(LCASE(?genre), ""indie rock"") || CONTAINS(LCASE(?genre), ""alternative""))
}
```",4,4,5,3,2,3,3,71,0,0,4,0,0.0,0
666,14,val,"Give me the figure known as the nickname of the reference, that is an organisation and a soccer club and a sports club, to England.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v2 <http://xmlns.com/foaf/0.1/name> ""England""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/property/nickname> ?v0 . ?v2 <http://dbpedia.org/property/nickname> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?club ?nickname WHERE {
  ?club a dbo:SoccerClub ;
        dbo:sport dbr:Soccer ;
        dbo:location dbr:England .
  OPTIONAL { ?club rdfs:label ?nickname FILTER (lang(?nickname) = 'en') }
}
```",3,6,4,3,1,3,2,20,0,0,12,0,0.0,0
492,23,val,Give me the person decedent at the work of the author of French Algeria.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/author> ?v2 . <http://dbpedia.org/resource/French_Algeria> <http://dbpedia.org/property/author> ?v2 . ?result <http://dbpedia.org/ontology/deathPlace> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?decedent WHERE {
  ?book dbo:title ""French Algeria""@en .
  ?book dbo:author ?author .
  ?author dbo:deathPlace ?decedent .
}
```",3,3,4,3,1,3,3,71,0,0,30,0,0.0,0
747,25,val,Give me the band of the person born as Tracey Elizabeth McSween and band of Amba Shepherd.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Amba_Shepherd> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/property/birthName> ""Tracey Elizabeth McSween""@en . }","```sparql
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?personTracey ?bandTracey ?personAmba ?bandAmba WHERE {
  # Find the person with birth name Tracey Elizabeth McSween
  ?personTracey foaf:givenName ""Tracey"" .
  ?personTracey foaf:familyName ""McSween"" .
  
  OPTIONAL { 
    ?personTracey dbo:musicalArtist ?bandTracey .
  }
  
  # Find the person with name Amba Shepherd
  ?personAmba foaf:name ""Amba Shepherd""@en .
  
  OPTIONAL {
    ?personAmba dbo:musicalArtist ?bandAmba .
  }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
9,27,val,"Give me the figure known as the nickname of the entity, that is an organisation and an educational institution, in Northern Ireland.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Northern_Ireland> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?result <http://dbpedia.org/property/nickname> ?v2 . ?v1 <http://dbpedia.org/property/nickname> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?entity ?nickname WHERE {
  ?entity a dbo:EducationalInstitution ;
         a dbo:Organization ;
         dbo:location dbr:Northern_Ireland .
  OPTIONAL { ?entity rdfs:label ?nickname FILTER (lang(?nickname) = 'en') }
}
```",3,5,4,3,1,3,3,71,0,0,13,0,0.0,0
378,44,val,Give me the war of the commander in Peninsular War and claim to fame of the commander in Great Siege of Gibraltar and war of Carl Pontus Gahn.,SELECT ?result WHERE { <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/ontology/knownFor> ?result . <http://dbpedia.org/resource/Great_Siege_of_Gibraltar> <http://dbpedia.org/ontology/commander> ?v2 . <http://dbpedia.org/resource/Peninsular_War> <http://dbpedia.org/ontology/commander> ?v4 . ?v4 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?war ?achievement WHERE {
  # Query for Arthur Wellesley (Duke of Wellington) and the Peninsular War
  { 
    VALUES ?person { dbr:Arthur_Wellesley,_1st_Duke_of_Wellington }
    ?person dbo:militaryConflict ?conflict .
    FILTER(CONTAINS(LCASE(STR(?conflict)), ""peninsular war""))
    BIND(""Peninsular War"" AS ?war)
  } UNION
  # Query for George Augustus Eliott and the Great Siege of Gibraltar
  { 
    VALUES ?person { dbr:George_Augustus_Eliott }
    ?person dbo:militaryConflict ?conflict .
    FILTER(CONTAINS(LCASE(STR(?conflict)), ""great siege of gibraltar""))
    BIND(""Great Siege of Gibraltar"" AS ?war)
    OPTIONAL {
      ?person dbo:notableWork ?achievement .
      FILTER(CONTAINS(LCASE(STR(?achievement)), ""gibraltar""))
    }
  } UNION
  # Query for Carl Pontus Gahn and his war involvement
  { 
    VALUES ?person { dbr:Carl_Pontus_Gahn }
    ?person dbo:militaryConflict ?conflict .
    BIND(""Swedish campaign against Denmark-Norway"" AS ?war)
  }
}
```",5,5,6,2,3,3,3,71,0,0,2,0,0.0,0
801,30,val,"Give me the associated musical artist of the writer, that is a musical artist and an artist, of 40 Dayz & 40 Nightz and producer of Westside Story (song) and professional in .","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/40_Dayz_&_40_Nightz> <http://dbpedia.org/property/writer> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Westside_Story_(song)> <http://dbpedia.org/ontology/producer> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artist WHERE {
    ?song1 dbo:lyricsBy dbr:Lil_Wayne .
    ?song1 rdfs:label ""40 Dayz & 40 Nightz""@en .

    ?song2 dbo:producer dbr:Sean_Combs ;
           rdfs:label ""Westside Story (song)""@en .

    ?artist dbo:profession dbr:Musical_artist ;
            dbo:profession dbr:Artist ;
            dbo:lyricsBy ?song1 ;
            dbo:producer ?song2 .
}
```",4,6,5,2,3,3,3,71,0,0,1,0,0.0,0
378,20,val,Give me the war of the commander in Peninsular War and war of Carl Pontus Gahn.,SELECT ?result WHERE { <http://dbpedia.org/resource/Peninsular_War> <http://dbpedia.org/ontology/commander> ?v2 . <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commander ?peninsularWarCommanded ?carlPontusGahnWar
WHERE {
  # Find commanders in the Peninsular War
  {
    SELECT ?commander WHERE {
      ?war dbo:name ""Peninsular War""@en .
      ?war dbo:commander ?commander .
    }
  }

  # Find wars associated with Carl Pontus Gahn
  {
    SELECT ?carlPontusGahnWar WHERE {
      dbr:C_Pontus_Gahn dbo:participatedIn ?carlPontusGahnWar .
    }
  }
}
```",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
9,44,val,"Give me the figure known as the nickname of Queen's University Belfast and alma mater of John Alderdice, Baron Alderdice and alma mater of the awardee of Royal Medal.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Medal> . ?result <http://dbpedia.org/property/nickname> ?v2 . <http://dbpedia.org/resource/Queen's_University_Belfast> <http://dbpedia.org/property/nickname> ?v2 . ?v4 <http://dbpedia.org/ontology/almaMater> ?result . <http://dbpedia.org/resource/John_Alderdice,_Baron_Alderdice> <http://dbpedia.org/ontology/almaMater> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?figure WHERE {
  # Find the nickname of Queen's University Belfast
  dbr:Queen's_University_Belfast dbo:nickname ?figure .

  # Check if John Alderdice attended this institution
  OPTIONAL { 
    dbr:John_Alderdice_Baron_Alderdice dbo:almaMater ?figure .
  }

  # Find the awardee of the Royal Medal and check their alma mater
  OPTIONAL {
    ?awardee dbo:award ?royalMedal .
    ?royalMedal rdfs:label ""Royal Medal""@en .
    ?awardee dbo:almaMater ?figure .
  }
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
339,15,val,Give me the father of Princess Elizabeth of Greece and Denmark and child of the child of the predecessor of Frederick VIII of Denmark.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Princess_Elizabeth_of_Greece_and_Denmark> <http://dbpedia.org/property/father> ?result . ?v0 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Frederick_VIII_of_Denmark> . ?v1 <http://dbpedia.org/property/father> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?father WHERE {
  # Find Princess Elizabeth of Greece and Denmark's father
  ?princess a dbo:Person ;
            dbp:name ""Princess Elizabeth of Greece and Denmark""@en .
  ?princess dbo:father ?father .

  # Find Frederick VIII's predecessor
  ?frederickVIII a dbo:Person ;
                 dbp:name ""Frederick VIII of Denmark""@en .
  ?predecessor dbo:successor ?frederickVIII ;
               a dbo:Person ;
               dbp:name ?pnamePredecessor .

  # Find the child of Frederick VIII's predecessor
  ?childOfPredecessor dbo:parent ?predecessor ;
                     a dbo:Person .

  # Check if the father is also a child of this child
  ?father dbo:parent ?childOfPredecessor .
}
```",4,4,5,3,2,3,2,20,0,0,1,0,0.0,0
547,39,val,Give me the resting place of Simon Cadell and resting place of the awardee of the award of Gerald Graham.,SELECT ?result WHERE { <http://dbpedia.org/resource/Gerald_Graham> <http://dbpedia.org/property/awards> ?v0 . ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . ?v1 <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Simon_Cadell> <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

# Query for Simon Cadell's resting place
SELECT ?restingPlace WHERE {
  dbr:Simon_Cadell dbo:deathPlace ?restingPlace .
}

UNION

# Query for the awardee of an award associated with Gerald Graham and their resting place
SELECT DISTINCT ?awardeeRestingPlace WHERE {
  # Find awards associated with Gerald Graham
  ?award dbo:recipient ?person .
  ?award dbo:givenBy dbr:Gerald_Graham .

  # Get the burial site of the awardee
  ?person dbo:deathPlace ?awardeeRestingPlace .
}
```",4,4,5,3,2,3,3,71,0,0,2,0,0.0,0
528,36,val,Give me the war of Irene Morales and force of the person born as the birth name of Narciso Campero.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ?v0 . <http://dbpedia.org/resource/Narciso_Campero> <http://dbpedia.org/property/birthName> ?v0 . ?result <http://dbpedia.org/ontology/commander> ?v1 . <http://dbpedia.org/resource/Irene_Morales> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war ?force 
WHERE {
  # Find wars involving Irene Morales
  ?person rdfs:label ""Irene Morales""@en .
  ?person dbo:memberOf ?organization .
  ?organization dbo:member ?war .

  # Find Narciso Campero's birth name and associated force
  ?campero rdfs:label ""Narciso Campero""@en .
  ?campero foaf:birthday ?birthDate .
  ?campero dbo:birthName ?birthName .
  FILTER(?birthName = ""Narciso Campero"") .

  ?campero dbo:memberOf ?force .
}
```",4,4,5,3,2,3,3,71,0,0,2,0,0.0,0
617,24,val,Give me the spouse of the child of Antiochus III the Great and parent of Nysa (wife of Pharnaces I of Pontus).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Nysa_(wife_of_Pharnaces_I_of_Pontus)> . <http://dbpedia.org/resource/Antiochus_III_the_Great> <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Antiochus III the Great
  dbr:Antiochus_III_the_Great dbo:child ?child .
  
  # Child of Antiochus III who is a parent of Nysa
  ?child dbo:child dbr:Nysa_of_Pontus .

  # Nysa's relationship to Pharnaces I of Pontus
  FILTER EXISTS { 
    dbr:Nysa_of_Pontus dbo:spouse dbr:Pharnaces_I_of_Pontus .
  }

  # Spouse of the identified child
  ?child dbo:spouse ?spouse .
}
```",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
339,13,val,Give me the child of the child of the predecessor of Frederick VIII of Denmark.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Frederick_VIII_of_Denmark> . ?v1 <http://dbpedia.org/property/father> ?v0 . ?v1 <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?grandchild WHERE {
    ?frederickVIII dbo:title ""Frederick VIII of Denmark""@en .
    ?predecessor dbo:predecessor ?frederickVIII .
    ?predecessorChild dbo:child ?predecessor .
    ?predecessorGrandchild dbo:child ?predecessorChild .
    ?grandchild rdfs:label ?predecessorGrandchildLabel .
}
```",3,3,4,3,1,3,2,20,0,0,32,0,0.0,0
16,20,val,Give me the professional in the profession of Satomi Ishihara and spouse of Ted McGinley.,SELECT ?result WHERE { <http://dbpedia.org/resource/Satomi_Ishihara> <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/occupation> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?professional WHERE {
  # Find Satomi Ishihara's profession
  ?satomi a dbo:Person ;
          foaf:name ""Satomi Ishihara""@en .
  ?satomi dbo:profession ?profession .

  # Find Satomi Ishihara's spouse
  ?satomi dbp:spouse ?spouse .

  # Find the professional with the same profession as Satomi Ishihara and married to Ted McGinley
  ?professional a dbo:Person ;
                foaf:name ?name ;
                dbo:profession ?profession .
  ?professional dbp:spouse <http://dbpedia.org/resource/Ted_McGinley> .

  FILTER(?spouse = ?satomi)
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
617,18,val,Give me the spouse of Laodice IV and child of Antiochus III the Great and parent of Nysa (wife of Pharnaces I of Pontus).,SELECT ?result WHERE { <http://dbpedia.org/resource/Laodice_IV> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Antiochus_III_the_Great> . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Nysa_(wife_of_Pharnaces_I_of_Pontus)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  ?person dbo:spouse dbp:Laodice_IV .
  ?person dbo:child dbp:Antiochus_III_the_Great .
  ?person dbo:parent dbp:Nysa_(wife_of_Pharaces_I_of_Pontus) .
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
996,14,val,Give me the entity in the award of the native of Palestine (region).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> ?v0 . ?v2 <http://dbpedia.org/property/awards> ?v0 . ?v2 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Palestine_(region)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?award WHERE {
  ?person dbo:birthPlace dbr:Palestine .
  OPTIONAL { ?person dbo:honoraryTitle ?award . }
}
```",3,3,4,3,1,3,2,20,0,1,292,0.0,0.0,0
391,21,val,Give me the native of the figure known as Hub City and actor of All About the Andersons.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://dbpedia.org/property/nickname> ""Hub City""@en . <http://dbpedia.org/resource/All_About_the_Andersons> <http://dbpedia.org/property/starring> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?native WHERE {
  ?person foaf:name ?name .
  FILTER(CONTAINS(LCASE(?name), ""hub city"") || CONTAINS(LCASE(STR(?alias)), ""hub city""))
  OPTIONAL { ?person foaf:alias ?alias . }
  
  ?film dbo:title ""All About the Andersons""@en .
  ?film dbo:starring ?person .

  ?person dbo:birthPlace ?native .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
345,14,val,"Give me the team of the person born, that is a soccer player and a soccer manager, on the birth date of Eiður Guðjohnsen.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?result <http://dbpedia.org/ontology/manager> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. <http://dbpedia.org/resource/Eiður_Guðjohnsen> <http://dbpedia.org/ontology/birthDate> ?v2 . ?v0 <http://dbpedia.org/ontology/birthDate> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?person ?team WHERE {
  # Step 1: Get Eiður Guðjohnsen's birth date
  VALUES (?eiðurBirthDate) { 
    SELECT ?birthDate WHERE { 
      dbr:Eiður_Guðjohnsen dbo:birthday ?birthDate .
    }
  }

  # Step 2: Find soccer players and managers born on Eiður Guðjohnsen's birth date
  ?person a dbo:SoccerPlayer ;
          dbo:birthday ?birthDate ;
          (dbo:managerOf|dbo:playsFor) ?team .

  FILTER (?birthDate = ?eiðurBirthDate)
}
```",3,5,4,3,1,3,2,20,0,0,2,0,0.0,0
9,37,val,"Give me the alma mater of the awardee of the reference, that is an award, to Royal Medals and figure known as QUB.","SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""Royal Medals""@en . ?result <http://dbpedia.org/property/nickname> ""QUB""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v3 <http://dbpedia.org/ontology/almaMater> ?result . ?v3 <http://dbpedia.org/property/awards> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?almaMater WHERE {
  ?person dbo:award dbr:Royal_Medals .
  ?person dbo:almaMater ?almaMater .
  ?person dbo:affiliation dbr:Queen's_University_Belfast .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
492,42,val,"Give me the commander in Franco-Hova Wars and person decedent at the capital, that is a settlement, of Algeria and person decedent at the work of US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . ?v2 <http://dbpedia.org/property/author> ""US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite""@en . ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . <http://dbpedia.org/resource/Algeria> <http://dbpedia.org/ontology/capital> ?v1 . <http://dbpedia.org/resource/Franco-Hova_Wars> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

# Query to find the commander in the Franco-Hova Wars
SELECT ?commander WHERE {
  ?event dbo:wikiPageRedirects dbr:Franco-Hova_Wars .
  ?event dbo:commander ?commander .
}

UNION

# Query to find a person who died at both Algiers and the United States Department of State
SELECT DISTINCT ?person WHERE {
  ?person dbo:deathPlace dbr:Algiers .
  ?person dbo:deathPlace dbr:United_States_Department_of_State .
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
617,28,val,"Give me the spouse of Laodice IV and child of the child, that is a royalty, of Seleucus II Callinicus and parent of Nysa (wife of Pharnaces I of Pontus).",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Laodice_IV> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Nysa_(wife_of_Pharnaces_I_of_Pontus)> . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seleucus_II_Callinicus> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse ?child ?royalChild WHERE {
  # Laodice IV's spouse
  dbr:Laodice_IV dbo:spouse ?spouse .

  # Child of the spouse (i.e., child of Laodice IV)
  ?spouse dbo:child ?child .

  # Ensure the child is royalty
  ?child dbo:royalty true .

  # The royal child must be a parent of Nysa, wife of Pharnaces I of Pontus
  ?child dbo:parent dbr:Nysa_(wife_of_Pharaces_I_of_Pontus) .

  # Ensure the lineage traces back to Seleucus II Callinicus
  ?child dbo:child* dbr:Seleucus_II_Callinicus .
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
534,13,val,"Give me the birth place of the child, that is a politician and an office holder, of the native, that is a politician, of Essex.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Essex> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/ontology/child> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?childBirthPlace WHERE {
  ?politician dbo:birthPlace dbr:Essex .
  ?politician dbo:occupation dbr:Politician .

  OPTIONAL { 
    ?politician dbo:spouse ?partner . 
    ?partner dbo:child ?child .
  }
  
  OPTIONAL {
    ?politician dbo:child ?child .
  }

  ?child dbo:occupation ?occupation .
  FILTER (CONTAINS(LCASE(STR(?occupation)), ""politician"") || CONTAINS(LCASE(STR(?occupation)), ""office holder""))

  ?child dbo:birthPlace ?childBirthPlace .
}
```",3,6,4,3,1,3,2,20,0,0,6,0,0.0,0
701,23,val,Give me the parent of the child of the spouse of Amun-her-khepeshef.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/child> ?v0 . <http://dbpedia.org/resource/Amun-her-khepeshef> <http://dbpedia.org/ontology/spouse> ?v2 . ?v0 <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?grandParent
WHERE {
  ?amunherkhepeshef dbo:name ""Amun-her-khepeshef""@en .
  ?amunherkhepeshef dbo:spouse ?spouse .
  ?spouse dbo:child ?child .
  ?child dbo:parent ?grandParent .
}
```",3,3,4,3,1,3,3,71,0,0,2,0,0.0,0
48,12,val,"Give me the band of Carl Falk and band of the actor, that is a musical artist, of Honor Up.",SELECT ?result WHERE { <http://dbpedia.org/resource/Honor_Up> <http://dbpedia.org/property/starring> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Carl_Falk> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?carlFalkBand ?actorMusicalArtist WHERE {
  # Find the band associated with Carl Falk
  ?person a dbo:Musician ;
          foaf:name ""Carl Falk""@en .
  OPTIONAL { 
    ?bandMemberRelation dbo:bandMember ?person .
    ?bandMemberRelation dbo:band ?carlFalkBand .
  }

  # Find the actor from ""Honor Up"" and their musical artist association
  ?movie dbo:title ""Honor Up""@en ;
         dbo:actor ?actor .
  OPTIONAL {
    ?musicalArtistRelation dbo:musicalArtist ?actor .
    ?musicalArtistRelation dbo:musicalArtist ?actorMusicalArtist .
  }
}
```",3,4,4,2,2,3,2,20,0,0,1,0,0.0,0
182,15,val,Give me the entity in Sri Lanka and war of the author of 2019 Sri Lanka Easter bombings.,SELECT ?result WHERE { <http://dbpedia.org/resource/2019_Sri_Lanka_Easter_bombings> <http://dbpedia.org/property/author> ?v1 . ?v1 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Sri_Lanka> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entityInSriLanka ?war WHERE {
    # Find the group responsible for the bombings
    ?group dbo:wikiPageRedirects dbr:National_Thowheeth_Jama'ath .
    
    # Link the group to Sri Lanka
    ?group dbo:country dbr:Sri_Lanka .
    BIND(?group AS ?entityInSriLanka)
    
    # Find wars related to the group (ISIS connection)
    ?war dbo:wikiPageRedirects dbr:Islamic_State_of_Iraq_and_the_Levant_campaigns_in_Asia .
    ?group dbo:memberOf ?war .
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
528,23,val,"Give me the war of the military force of the entity, that is a societal event, in Chile.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Chile> . ?v0 <http://dbpedia.org/ontology/battle> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?war ?warLabel WHERE {
  ?chile a dbo:Country ;
         rdfs:label ""Chile""@en .
  
  ?militaryForce dbp:militaryBranchOf ?chile .

  ?war a dbo:War ;
       dbo:participatingMilitaryUnit ?militaryForce ;
       rdfs:label ?warLabel .
}
```",3,4,4,3,1,3,3,71,0,0,235,0,0.0,0
429,7,val,Give me the administration of the father of Martha Johnson Patterson and country of 77th Ohio Infantry Regiment.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> ?v2 . <http://dbpedia.org/resource/Martha_Johnson_Patterson> <http://dbpedia.org/property/father> ?v2 . <http://dbpedia.org/resource/77th_Ohio_Infantry_Regiment> <http://dbpedia.org/ontology/country> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father ?administration WHERE {
    ?martha a dbo:Person ;
           foaf:name ""Martha Johnson Patterson""@en .
    ?martha dbo:parent ?father .
    OPTIONAL { ?father dbo:positionHeld ?administration . }
}

UNION

SELECT ?country WHERE {
    dbr:77th_Ohio_Infantry_Regiment dbo:nationality ?country .
}
```",3,3,4,2,2,2,2,9,0,0,1,0,0.0,0
54,34,val,Give me the child of the father of the child of Thinkhaya of Pagan and predecessor of Ameitta Thiri Maha Dhamma Dewi of Ava.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> ?v1 . ?v1 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Ameitta_Thiri_Maha_Dhamma_Dewi_of_Ava> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child
WHERE {
  # Thinkhaya of Pagan and his child
  dbr:Thinkhaya_of_Pagan dbo:spouse ?mother .
  ?child dbo:parent dbr:Thinkhaya_of_Pagan .

  # Ameitta Thiri Maha Dhamma Dewi and her predecessor
  dbr:Ameitta_Thiri_Maha_Dhamma_Dewi dbo:predecessor ?predecessor .

  # Find the child who is also the successor of the predecessor
  ?child dbo:successor ?predecessor .
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
959,20,val,"Give me the member of University of Tsukuba and native of the residence, that is a country, of Yōichi Masuzoe.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?result <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/University_of_Tsukuba> . <http://dbpedia.org/resource/Yōichi_Masuzoe> <http://dbpedia.org/property/residence> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?member WHERE {
  # Find Yōichi Masuzoe's place of residence and nationality
  dbr:Yōichi_Masuzoe dbo:nationality ?nationality .
  dbr:Yōichi_Masuzoe dbo:residenceCountry ?residenceCountry .

  # Find members associated with the University of Tsukuba
  ?member dbo:almaMater dbr:University_of_Tsukuba ;
          dbo:nationality ?memberNationality .

  # Filter members whose nationality matches Yōichi Masuzoe's residence country
  FILTER (?memberNationality = ?residenceCountry)
}
```",3,4,4,2,2,3,3,71,0,0,84,0,0.0,0
435,14,val,Give me the territory administered from Reykjavík and region of the time zone in Bombali Shebora Chiefdom.,SELECT ?result WHERE { <http://dbpedia.org/resource/Bombali_Shebora_Chiefdom> <http://dbpedia.org/ontology/timeZone> ?v1 . ?result <http://dbpedia.org/ontology/timeZone> ?v1 . ?result <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Reykjavík> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?territory ?timeZoneRegion
WHERE {
  # Territory administered from Reykjavík (Iceland)
  dbr:Iceland dbo:capital dbr:Reykjavík .
  
  # Time zone region for Bombali Shebora Chiefdom in Sierra Leone
  dbr:Bombali_Shebora_Chowchiefdom dbo:locatedIn dbr:Sierra_Leone .
  dbr:Sierra_Leone dbo:timeZoneRegion ?timeZoneRegion .
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
747,21,val,Give me the person born on the birth date of Pavlo Khudzik and band of Shèna.,SELECT ?result WHERE { <http://dbpedia.org/resource/Shèna> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Pavlo_Khudzik> <http://dbpedia.org/ontology/birthDate> ?v1 . ?result <http://dbpedia.org/ontology/birthDate> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?personName ?bandName WHERE {
  # Find Pavlo Khudzik's birth date
  VALUES ?pavloKhudzikBirthDate { 
    SELECT ?birthDate WHERE {
      ?pavloKhudzik dbo:birthDate ?birthDate .
      FILTER(STR(?pavloKhudzik) = ""Pavlo_Khudzik"")
    }
  }

  # Find a person born on the same date as Pavlo Khudzik
  ?person dbo:birthDate ?pavloKhudzikBirthDate .
  
  # Get Shèna's band
  ?shena dbo:band ?band .

  # Filter to ensure we get distinct names and avoid self-reference
  FILTER(STR(?person) != ""Pavlo_Khudzik"")
  BIND(""Shèna"" AS ?shenaName)

  # Return the name of the person born on Pavlo Khudzik's birth date and Shèna's band
  BIND(foaf:name(?person) AS ?personName)
  BIND(foaf:name(?band) AS ?bandName)
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
994,29,val,"Give me the associated musical artist of the band member, that is a band and a group and an organisation, of Meshuggah and associated musical artist of S.A. Slayer and band member of Don Dokken.",SELECT ?result WHERE { <http://dbpedia.org/resource/S.A._Slayer> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Don_Dokken> . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Meshuggah> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?member ?associatedBand WHERE {
  # Find members of Meshuggah
  { 
    VALUES (?band) { dbr:Meshuggah }
    ?member dbo:bandMember ?band .
  } UNION
  # Find members of Slayer (specifically S.A.)
  { 
    VALUES (?band) { dbr:Slayer }
    ?member dbo:bandMember ?band ;
            foaf:name ""Jeff Hanneman"" . # Assuming S.A. refers to Jeff Hanneman
  } UNION
  # Find members of Don Dokken
  {
    VALUES (?band) { dbr:Don_Dokken }
    ?member dbo:bandMember ?band .
  }

  # Find associated bands for each member
  ?member dbo:associatedBand ?associatedBand .

  # Filter to ensure the associated entity is a band, group, or organisation
  ?associatedBand rdf:type/(dbo:Band|dbo:MusicalGroup|dbo:Organisation) .
}
```",4,7,5,2,3,3,3,71,0,0,1,0,0.0,0
528,29,val,Give me the war of Irene Morales and war of the commander in Battle of La Rinconada de Ate and force of Narciso Campero.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Battle_of_La_Rinconada_de_Ate> <http://dbpedia.org/ontology/commander> ?v3 . <http://dbpedia.org/resource/Irene_Morales> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Narciso_Campero> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war ?battle ?force WHERE {
  # Irene Morales and her involvement in wars
  OPTIONAL { 
    ?person rdfs:label ""Irene Morales""@en .
    ?person dbo:participatedIn ?war .
    FILTER(LANG(?war) = 'en')
  }

  # Commander in Battle of La Rinconada de Ate and their involvement in wars
  OPTIONAL {
    ?battle dbr:Battle_of_La_Rinconada_de_Ate ;
            dbo:commander ?commander .
    ?commander rdfs:label ?commanderLabel .
    FILTER(LANG(?commanderLabel) = 'en')
    ?commander dbo:participatedIn ?war2 .
    FILTER(LANG(?war2) = 'en')
  }

  # Narciso Campero and his military forces
  OPTIONAL {
    dbr:Narciso_Campero dbo:commanderOf ?force ;
                        rdfs:label ""Narciso Campero""@en .
    FILTER(LANG(?force) = 'en')
  }
}
```",4,4,5,2,3,3,3,71,0,0,2,0,0.0,0
617,23,val,"Give me the child of the child, that is a royalty, of the successor, that is a royalty, of Antiochus II Theos.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> ?v2 . <http://dbpedia.org/resource/Antiochus_II_Theos> <http://dbpedia.org/ontology/successor> ?v2 . ?result <http://dbpedia.org/property/father> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?grandchild WHERE {
  # Step 1: Identify Antiochus II Theos
  ?antiochus a dbo:Monarch ;
             foaf:name ""Antiochus II Theos""@en .

  # Step 2: Find his successor who is royalty
  ?successor dbo:successor ?antiochus ;
            dbo:royalTitle ?title .
  
  # Step 3: Identify the child of this successor who is royalty
  ?child dbo:child ?successor ;
         dbo:royalTitle ?childTitle .

  # Step 4: Find the grandchild (child of the child) who is royalty
  ?grandchild dbo:child ?child ;
              dbo:royalTitle ?grandchildTitle .
}
```",3,5,4,3,1,3,3,71,0,0,5,0,0.0,0
54,20,val,Give me the child of Thinkhaya of Pagan and parent of the child of Narapati I of Ava.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Narapati_I_of_Ava> . ?v2 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?person WHERE {
  ?thinkhaya dbo:child ?person .
  FILTER (str(?thinkhaya) = ""Thinkhaya_of_Pagan"") .

  ?narapatiI dbo:child ?narapatisChild .
  FILTER (str(?narapatiI) = ""Narapati_I_of_Ava"") .

  ?person dbo:parent ?narapatisChild .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
281,22,val,"Give me the war of the profession, that is a military unit, of Heather Roy and war of Beauchamp Seymour, 1st Baron Alcester.","SELECT ?result WHERE { <http://dbpedia.org/resource/Beauchamp_Seymour,_1st_Baron_Alcester> <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v1 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Heather_Roy> <http://dbpedia.org/property/occupation> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?warHeatherRoy ?warBeauchampSeymour WHERE {
  # Heather Roy's profession as a Member of Parliament linked to Parliamentary Regiment
  dbr:Heather_Roy dbo:militaryUnit ?unitHeatherRoy .
  ?unitHeatherRoy rdfs:label ""Parliamentary Regiment""@en .

  # Wars involving the Parliamentary Regiment
  ?warHeatherRoy dbo:militaryUnit ?unitHeatherRoy .

  # Beauchamp Seymour's profession as a soldier linked to Infantry
  dbr:Beauchamp_Seymour_1st_Baron_Alcester dbo:militaryUnit ?unitBeauchampSeymour .
  ?unitBeauchampSeymour rdfs:label ""Infantry""@en .

  # Wars involving the Infantry unit
  ?warBeauchampSeymour dbo:militaryUnit ?unitBeauchampSeymour .
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
659,40,val,"Give me the commander in the force of the native, that is an office holder, of Kingdom of Ireland and commander in Battle of Leipzig and military force of Napoleonic Wars.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Kingdom_of_Ireland> . ?v1 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Battle_of_Leipzig> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Napoleonic_Wars> . ?v1 <http://dbpedia.org/ontology/commander> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:MilitaryPerson .
  ?person dbo:nationality dbr:Ireland .
  ?person dbo:officeHolderOf dbr:Kingdom_of_Ireland .
  ?person dbo:commanderInBattle dbr:Battle_of_Leipzig .
  ?person dbo:militaryForce dbr:Napoleonic_Wars .
  FILTER (str(?person) = ""Arthur Wellesley, 1st Duke of Wellington"")
}
```",5,6,6,3,3,3,3,71,0,0,5,0,0.0,0
184,40,val,"Give me the parent of Archduchess Ilona of Austria and child of Archduke Joseph August of Austria and parent of the native of the landmark at elevation, that is a settlement, of 96.0.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/elevation> ""96.0""^^<http://www.w3.org/2001/XMLSchema#double> . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_August_of_Austria> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://dbpedia.org/ontology/birthPlace> ?v2 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Ilona_of_Austria> . ?result <http://dbpedia.org/ontology/child> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Step 1: Find the parent of Archduchess Ilona of Austria
  ?ilona a dbr:Archduchess_Ilona_of_Austria ;
         dbo:parent ?parentIlona .

  # Step 2: Find the child of Archduke Joseph August who is also the parent of Ilona
  ?josephAugust a dbr:Archduke_Joseph_August_of_Austria ;
               dbo:child ?person .
  
  FILTER (?person = ?parentIlona)

  # Step 3: Find the native of a landmark that is a settlement at elevation 96.0 meters
  ?landmark a dbo:Settlement ;
            dbo:elevation ""96.0""^^xsd:float ;
            dbo:nativePlace ?nativePerson .

  FILTER (?person = ?nativePerson)
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
378,26,val,"Give me the war of the commander in the reference, that is a military conflict, to Peninsular War.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://xmlns.com/foaf/0.1/name> ""Peninsular War""@en . ?v1 <http://dbpedia.org/ontology/commander> ?v2 . ?v2 <http://dbpedia.org/ontology/battle> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?conflict WHERE {
  # Find the Peninsular War and its commander
  dbr:Peninsular_War dbo:commander ?commander .
  
  # Find other military conflicts involving this commander
  ?conflict a dbo:MilitaryConflict ;
           dbo:commander ?commander .

  FILTER(?conflict != dbr:Peninsular_War)
}
```",3,4,4,3,1,3,3,71,66,210,52,0.2391304347826087,0.559322033898305,0.3350253807106599
767,35,val,"Give me the entity in the administration, that is a settlement, of Green and reference to the alter ego of Black Hood.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://xmlns.com/foaf/0.1/name> ?v1 . <http://dbpedia.org/resource/Black_Hood> <http://dbpedia.org/property/alterEgo> ?v1 . ?v2 <http://dbpedia.org/property/leaderParty> ""Green""@en . ?result <http://dbpedia.org/ontology/state> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?settlement ?alterEgo WHERE {
  ?admin a dbo:AdministrativeTerritory ;
         dbo:partOf dbr:Green .
  ?settlement a dbo:Settlement ;
              dbo:partOf ?admin .
  
  dbr:Black_Hood dbo:alterEgo dbr:Dick_Grayson .
  BIND(dbr:Dick_Grayson AS ?alterEgo)
}
```",4,5,5,2,2,3,3,71,0,0,7,0,0.0,0
747,38,val,Give me the band of the writer of Apollo (Hardwell song) and band of the person born as Tracey Elizabeth McSween.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/property/birthName> ""Tracey Elizabeth McSween""@en . <http://dbpedia.org/resource/Apollo_(Hardwell_song)> <http://dbpedia.org/property/writer> ?v3 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band1 ?band2 WHERE {
  # Find the band of the writer of ""Apollo"" by Hardwell
  ?song dbo:title ""Apollo (Hardwell song)""@en .
  ?song dbo:lyricist ?writer .
  OPTIONAL { ?writer dbo:member ?band1 . }

  # Find the band of Tracey Elizabeth McSween, known as Tracy Morgan
  dbr:Tracy_Morgan dbo:birthNameTracey_Elizabeth_McSween ;
                   dbo:member ?band2 .
}
```",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
360,19,val,"Give me the writer of the work, that is an album, of Dave Flett and reference to Manfred Mann and native of Johannesburg.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Album>. ?v2 <http://dbpedia.org/property/author> ""Dave Flett""@en . ?v2 <http://dbpedia.org/property/writer> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Johannesburg> . ?result <http://xmlns.com/foaf/0.1/name> ""Manfred Mann""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX schema: <http://schema.org/>

SELECT ?album ?writer WHERE {
  ?album a dbo:Album ;
         dbo:composer ?person .
  
  ?person foaf:name ""Dave Flett""@en .

  OPTIONAL { 
    ?album dbo:artist ?band .
    ?band foaf:name ""Manfred Mann""@en .
  }

  OPTIONAL {
    ?writer schema:birthPlace <http://dbpedia.org/resource/Johannesburg> ;
            dbo:composer ?album .
  }
}
```",4,5,5,2,3,2,3,28,0,0,1,0,0.0,0
994,42,val,"Give me the associated musical artist of Red Tide (band) and band member of the person born, that is a musical artist, as Donald Maynard Dokken and associated musical artist of the associated musical artist of Watchtower (band).","SELECT ?result WHERE { <http://dbpedia.org/resource/Red_Tide_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/property/birthName> ""Donald Maynard Dokken""@en . <http://dbpedia.org/resource/Watchtower_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?associatedArtistRedTide ?bandMemberDonaldDokken ?associatedArtistWatchtower ?finalAssociatedArtist
WHERE {
  # Step 1: Find associated musical artist of Red Tide (band)
  ?redTide dbo:associatedBand <http://dbpedia.org/resource/Red_Tide_(band)> .
  ?redTide foaf:name ?associatedArtistRedTide .

  OPTIONAL {
    # Step 2: Find band member born as Donald Maynard Dokken
    ?person dbp:birthName ""Donald Maynard Dokken""@en .
    ?person dbo:member <http://dbpedia.org/resource/Red_Tide_(band)> .
    ?person foaf:name ?bandMemberDonaldDokken .
  }

  OPTIONAL {
    # Step 3: Find associated musical artist of Watchtower (band)
    ?watchtower dbo:associatedBand <http://dbpedia.org/resource/Watchtower_(band)> .
    ?watchtower foaf:name ?associatedArtistWatchtower .

    OPTIONAL {
      # Step 4: Find associated musical artist of the associated artist from step 3
      ?finalAssociatedArtist dbo:associatedBand ?watchtower .
      ?finalAssociatedArtist foaf:name ?finalAssociatedArtistName .
    }
  }
}
```",5,6,6,2,3,3,3,71,1,17,0,0.05555555555555555,1.0,0.10526315789473684
251,13,val,"Give me the administration of Forza Italia (2013) and location of the war, that is a military conflict, of Louis François Félix Musnier.",SELECT ?result WHERE { <http://dbpedia.org/resource/Louis_François_Félix_Musnier> <http://dbpedia.org/ontology/battle> ?v1 . ?result <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Forza_Italia_(2013)> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/place> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?administration WHERE {
  ?party a dbo:PoliticalParty ;
         rdfs:label ""Forza Italia""@en .
  OPTIONAL { 
    ?party dbo:leader ?person .
    ?person dbo:officePeriod ?period .
    FILTER (CONTAINS(LANG(?period), ""2013""))
    BIND(""Administration of Forza Italia in 2013"" AS ?administration)
  }
}

UNION

SELECT DISTINCT ?location WHERE {
  dbr:Louis_François_Félix_Musnier dbo:militaryConflict ?conflict .
  ?conflict dbo:place ?location .
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
492,35,val,"Give me the person decedent at the capital, that is a settlement, of Algeria and person decedent at the work of US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . ?v2 <http://dbpedia.org/property/author> ""US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite""@en . <http://dbpedia.org/resource/Algeria> <http://dbpedia.org/ontology/capital> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?decedent1 ?decedent2 WHERE {
  # Find the person who died in Algiers, Algeria's capital
  ?place a dbo:Settlement ;
        rdfs:label ""Algiers""@en .
  
  ?event dbo:location ?place ;
         dbo:deathOf ?decedent1 .

  FILTER(LANG(?decedent1->rdfs:label) = 'en')

  # Find the person associated with Joseph C. Satterthwaite
  dbr:Joseph_C._Satterthwaite dbo:officeHolder ?position .
  
  ?event2 dbo:deathOf ?decedent2 ;
          dbo:location ?workplace .

  FILTER(?workplace = ?position)

  FILTER(LANG(?decedent2->rdfs:label) = 'en')
}
```",4,5,5,2,2,3,3,71,0,0,16,0,0.0,0
161,25,val,"Give me the military force of Spanish Civil War and commander in the force, that is an event, of Emilio Mola.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Emilio_Mola> . ?v1 <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce ?commander WHERE {
  ?event dbo:wikiPageRedirects dbr:Spanish_Civil_War .
  ?event dbo:participatedEmilioMola dbr:Emilio_Mola .
  ?militaryForce dbo:commandedBy dbr:Emilio_Mola ;
                 dbo:partOf ?event .
  BIND(dbr:Emilio_Mola AS ?commander)
}
```",3,4,4,2,2,3,3,71,0,0,32,0,0.0,0
801,28,val,Give me the producer of Westside Story (song) and associated musical artist of Chris Taylor (music producer) and professional in the alter ego of The Shadow.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Westside_Story_(song)> <http://dbpedia.org/ontology/producer> ?result . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 . <http://dbpedia.org/resource/Chris_Taylor_(music_producer)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?producer WHERE {
  ?song rdf:type dbo:Songs .
  ?song rdfs:label ""Westside Story (song)""@en .
  ?song dbo:producer ?producer .
}

UNION

SELECT DISTINCT ?artist WHERE {
  ?person dbo:profession dbr:Music_producer ;
          foaf:name ""Chris Taylor""@en .
  ?collaboration dbo:artist ?person ;
                 dbo:musicalArtist ?artist .
}

UNION

SELECT DISTINCT ?professional WHERE {
  ?person rdfs:label ""The Shadow (alter ego)""@en .
  ?person dbo:profession ?professional .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
981,11,val,Give me the entity in the region of Time in Indonesia and birth place of Novia Indriani Mamuaja.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v2 . ?v2 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Time_in_Indonesia> . <http://dbpedia.org/resource/Novia_Indriani_Mamuaja> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?entityInTimeRegion ?birthPlace
WHERE {
  # Find an entity in the Time region of Indonesia
  ?entityInTimeRegion a dbo:Island ;
                     dbo:location dbr:Indonesia ;
                     rdfs:label ?regionLabel .
  FILTER(CONTAINS(LCASE(?regionLabel), ""time"") && CONTAINS(LCASE(STR(?entityInTimeRegion)), ""indonesia""))

  # Find the birthplace of Novia Indriani Mamuaja
  OPTIONAL {
    dbr:Novia_Indriani_Mamuaja dbo:birthPlace ?birthPlace .
  }
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
232,19,val,Give me the child of the person born as John Devon Roland Pertwee and actor of Dog Soldiers (film).,"SELECT ?result WHERE { <http://dbpedia.org/resource/Dog_Soldiers_(film)> <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://dbpedia.org/ontology/child> ?result . ?v0 <http://dbpedia.org/property/birthName> ""John Devon Roland Pertwee""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  ?person1 dbo:birthName ""John Devon Roland Pertwee""@en.
  ?person1 dbo:actorIn dbr:Dog_Soldiers.
  ?person2 dbo:actorIn dbr:Dog_Soldiers.
  
  FILTER(?person2 != ?person1) # Ensure we are not comparing the same person
  
  OPTIONAL { ?person1 dbo:child ?child. }
  OPTIONAL { ?child dbo:parent ?person1. }

  FILTER EXISTS {
    ?person2 rdfs:label ""James McAvoy""@en.
  }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
617,13,val,"Give me the child of the child, that is a royalty, of the parent of Mlada (abbess).",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> ?result . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Mlada_(abbess)> . ?v1 <http://dbpedia.org/ontology/parent> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT DISTINCT ?grandchildName WHERE {
  # Step 1: Find Mlada (abbess) and her parent
  ?m Parent ?parent .
  
  FILTER(STR(?m) = ""Mlada_(abbess)"")

  # Step 2: From the parent, find all children
  ?parent dbo:child ?royalChild .

  # Step 3: Filter those who are royalty
  ?royalChild dbo:royaltyStatus ?status .
  
  FILTER(?status IN (dbo:Monarch, dbo:Noble))

  # Step 4: Find the child of this royal individual
  ?royalChild dbo:child ?grandchild .

  # Return the name of these grandchildren
  ?grandchild rdfs:label ?grandchildName .
  
  FILTER(LANG(?grandchildName) = ""en"")
}
```",3,4,4,3,1,3,2,20,0,0,4,0,0.0,0
801,33,val,"Give me the professional in  and producer of the work, that is a musical work and a song and a work, of the professional, that is a musical artist, in Rapper.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/producer> ?result . ?v3 <http://dbpedia.org/property/writer> ?v0 . ?v0 <http://dbpedia.org/property/occupation> ""Rapper""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?song ?producer WHERE {
  ?song a dbo:Songs .
  ?song dbo:performer ?artist .
  ?artist rdf:type dbo:MusicalArtist ;
          dbo:genre dbr:Rap_music .

  ?song dbo:producer ?producer .
  ?producer rdf:type dbo:MusicalArtist ;
            dbo:genre dbr:Rap_music .
}
```",4,8,5,3,2,3,3,71,0,0,473,0,0.0,0
959,38,val,"Give me the native of the residence, that is a country, of Yōichi Masuzoe and manager of the team of Takashi Sekizuka.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v0 <http://dbpedia.org/ontology/manager> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Yōichi_Masuzoe> <http://dbpedia.org/property/residence> ?v3 . ?v0 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Takashi_Sekizuka> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Find Yōichi Masuzoe's nationality
  dbr:Yōichi_Masuzoe dbo:nationality ?masuzoeCountry .
  
  # Find Takashi Sekizuka's team and its manager
  ?sekizukaTeam dbo:teamMember dbr:Takashi_Sekizuka ;
                dbo:manager ?person .

  # Ensure the person is from the same country as Yōichi Masuzoe
  ?person dbo:nationality ?masuzoeCountry .
}
```",4,5,5,2,2,3,3,71,0,0,6,0,0.0,0
959,34,val,"Give me the manager of 2013 Júbilo Iwata season and member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of the person born in 1958.","SELECT ?result WHERE { <http://dbpedia.org/resource/2013_Júbilo_Iwata_season> <http://dbpedia.org/ontology/manager> ?result . ?v3 <http://dbpedia.org/ontology/almaMater> ?v1 . ?result <http://dbpedia.org/ontology/team> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?v3 <http://dbpedia.org/ontology/birthYear> ""1958""^^<http://www.w3.org/2001/XMLSchema#gYear> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?manager ?university WHERE {
  # Find the manager of Júbilo Iwata for the 2013 season
  ?team dbo:coach ?manager .
  ?manager dbo:birthYear ""1958""^^xsd:gYear .

  FILTER EXISTS { 
    ?team dbp:season ""2013"" .
    ?team dbr:Júbilo_Iwata .
  }

  # Find the alma mater of the manager
  ?manager dbo:almaMater ?university .
  
  # Ensure the university is a Japanese organization and educational institution
  ?university rdf:type dbo:EducationalInstitution ;
              dbo:country dbr:Japan ;
              rdf:type dbo:Organization .

}
```",4,8,5,3,2,3,3,71,0,0,1,0,0.0,0
378,31,val,Give me the war of Joaquín Blake and war of the person born as the birth name of Carl Pontus Gahn.,SELECT ?result WHERE { <http://dbpedia.org/resource/Joaquín_Blake> <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war1 ?war2 WHERE {
  # War associated with Joaquín Blake
  ?person1 a dbo:Person ;
           foaf:name ""Joaquín Blake""@en .
  ?person1 dbo:nationality dbr:Spain ;
           dbo:occupation dbr:Military_person .

  ?event1 a dbo:Event ;
          dbo:location dbr:Spain ;
          dbo:participant ?person1 ;
          rdfs:label ?war1 .
  
  FILTER(CONTAINS(LCASE(?war1), ""peninsular war"") || CONTAINS(LCASE(?war1), ""war of independence""))

  # War associated with Carl Pontus Gahn
  ?person2 a dbo:Person ;
           foaf:name ""Carl Pontus Gahn""@en .
  ?person2 dbo:nationality dbr:Sweden .

  ?event2 a dbo:Event ;
          dbo:location dbr:Sweden ;
          dbo:participant ?person2 ;
          rdfs:label ?war2 .

  FILTER(CONTAINS(LCASE(?war2), ""napoleonic wars""))
}
```",4,4,5,3,2,3,3,71,0,0,2,0,0.0,0
959,44,val,"Give me the manager of the team of Takashi Sekizuka and native of the residence, that is a country, of Yōichi Masuzoe and member of University of Tsukuba.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/University_of_Tsukuba> . ?result <http://dbpedia.org/ontology/birthPlace> ?v4 . <http://dbpedia.org/resource/Yōichi_Masuzoe> <http://dbpedia.org/property/residence> ?v4 . ?v0 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Takashi_Sekizuka> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://dbpedia.org/ontology/manager> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?manager WHERE {
  ?takashiSecizuka dbo:team ?team .
  ?team dbo:manager ?manager .

  ?yoiichiMasuzoe dbo:nationality ?country .
  
  ?universityMember dbp:almaMater <http://dbpedia.org/resource/University_of_Tsukuba> .
  
  FILTER (?manager = ?universityMember)
  FILTER (STR(?country) IN (LITERAL(""Japan""))) # Assuming Yōichi Masuzoe's nationality is Japan
}
```",5,6,6,2,3,3,3,71,0,0,2,0,0.0,0
182,12,val,Give me the war of Mahesh Senanayake and entity in Sri Lanka and war of Jagath Dias.,SELECT ?result WHERE { <http://dbpedia.org/resource/Mahesh_Senanayake> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Jagath_Dias> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Sri_Lanka> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT DISTINCT ?war WHERE {
  VALUES (?person) { 
    dbr:Mahesh_Senanayake 
    dbr:Jagath_Dias
  }
  
  ?person dbo:wikiPageDisambiguates ?disambiguation .
  ?disambiguation rdf:type dbo:Event .
  ?disambiguation dbo:wikiPageWikiLink ?war .

  FILTER EXISTS {
    ?war dbo:country dbr:Sri_Lanka .
  }
}
```",3,3,4,1,3,2,3,28,0,0,1,0,0.0,0
488,27,val,"Give me the administration of the father of the spouse, that is a royalty, of Tokugawa Masako.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Tokugawa_Masako> . ?v1 <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/property/leader> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?administration WHERE {
  ?masako a dbo:Person ;
          foaf:name ""Tokugawa Masako""@en .
  
  ?spouse dbo:spouse ?masako ;
          foaf:parent ?father .

  ?father a dbo:RoyalFamilyMember ; # Assuming there's an appropriate class for royalty
         dbo:administration ?administration .
}
```",3,4,4,3,1,3,3,71,0,0,2,0,0.0,0
232,20,val,"Give me the actor of the claim to fame, that is a film and a military conflict, of Sean Pertwee and child of Jon Pertwee.",SELECT ?result WHERE { <http://dbpedia.org/resource/Sean_Pertwee> <http://dbpedia.org/ontology/knownFor> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/ontology/child> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v2 <http://dbpedia.org/ontology/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?film ?conflict WHERE {
  # Identify Sean Pertwee as an actor
  dbr:Sean_Pertwee dbo:profession dbr:Actor .
  
  # Find films associated with Sean Pertwee
  ?film dbo:starring dbr:Sean_Pertwee .

  # Find military conflicts associated with Sean Pertwee
  ?conflict dbo:participant dbr:Sean_Pertwee .

  # Verify that Jon Pertwee is the father of Sean Pertwee
  OPTIONAL {
    dbr:Jon_Pertwee dbo:child dbr:Sean_Pertwee .
  }
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
328,26,val,Give me the commander in the force of the person decedent at Budapest.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Budapest> . ?v2 <http://dbpedia.org/ontology/commander> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  ?decedent a dbo:MilitaryPerson ;
            dbo:militaryUnit ?force .
  ?force dbo:location dbr:Budapest .
  ?force dbo:commander ?commander .
}
```",3,3,4,3,1,3,3,71,0,0,306,0,0.0,0
16,25,val,Give me the professional in Actress and person born as the birth name of Gigi Rice.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Gigi_Rice> <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/property/occupation> ""Actress""@en . ?result <http://dbpedia.org/property/birthName> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?professional WHERE {
  # Get the birth name of Gigi Rice
  dbr:Gigi_Rice dbo:birthName ?birthName .

  # Find professionals who are actresses and have the same birth name as Gigi Rice
  ?professional a dbo:Person ;
                dbo:birthName ?birthName ;
                dbo:occupation ?occupation .
  
  FILTER(CONTAINS(LCASE(?occupation), ""actress""))
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
232,32,val,"Give me the actor of the claim to fame, that is a film and a military conflict, of Sean Pertwee and child of the person born as John Devon Roland Pertwee.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Sean_Pertwee> <http://dbpedia.org/ontology/knownFor> ?v3 . ?v1 <http://dbpedia.org/property/birthName> ""John Devon Roland Pertwee""@en . ?v1 <http://dbpedia.org/ontology/child> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?film ?conflict WHERE {
  # Find films associated with Sean Pertwee
  ?film dbo:starring dbr:Sean_Pertwee .
  
  # Find military conflicts associated with Sean Pertwee
  ?conflict dbo:participant dbr:Sean_Pertwee .

  # Verify familial relationship
  OPTIONAL {
    ?person dbo:child dbr:John_Devon_Roland_Pertwee .
    FILTER (?person = dbr:Sean_Pertwee)
  }
}
```",4,6,5,2,2,3,3,71,0,0,1,0,0.0,0
767,42,val,"Give me the entity in the administration, that is a settlement, of Green and reference to the alter ego of Black Hood and alma mater of Carl L. Nippert.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/state> ?v2 . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . <http://dbpedia.org/resource/Carl_L._Nippert> <http://dbpedia.org/ontology/almaMater> ?result . ?v2 <http://dbpedia.org/property/leaderParty> ""Green""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Black_Hood> <http://dbpedia.org/property/alterEgo> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity WHERE {
  ?entity dbo:partOf dbr:Green . # Assuming Green is a specific entity like Green County
  ?entity rdf:type dbo:Settlement .
  
  OPTIONAL { 
    ?entity dbo:associatedWith ?alterEgo .
    ?alterEgo rdfs:label ""Black Hood""@en . # This might need adjustment based on available data
  }
  
  OPTIONAL {
    ?almaMater dbo:alumni dbr:C_L_Nippert .
    ?entity dbo:relatedTo ?almaMater .
  }
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
747,22,val,Give me the band of the person born as Tracey Elizabeth McSween and person born on 1985-04-29.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ""Tracey Elizabeth McSween""@en . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/birthDate> ""1985-04-29""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?person1 ?person2 ?band
WHERE {
  # Find Tracey Elizabeth McSween
  ?person1 foaf:surname ""McSween"" .
  ?person1 foaf:givenName ""Tracey"" .
  ?person1 foaf:middleName ""Elizabeth"" .

  # Find person born on April 29, 1985
  ?person2 dbo:birthday ?date .
  FILTER (YEAR(?date) = 1985 && MONTH(?date) = 4 && DAY(?date) = 29)

  # Check if they are associated with any bands
  OPTIONAL { ?person1 dbo:band ?band . }
  OPTIONAL { ?person2 dbo:band ?band . }

  FILTER (?band != UNDEF)
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
404,29,val,"Give me the child of Ernest Augustus, Crown Prince of Hanover and parent of the child, that is a royalty, of Ernest Augustus, Duke of Brunswick and spouse of Princess Victoria Louise of Prussia.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ernest_Augustus,_Crown_Prince_of_Hanover> . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/ontology/child> ?v3 . ?result <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child ?parent WHERE {
  ?child dbo:spouse dbr:Princess_Victoria_Louise_of_Prussia .
  ?child dbo:fatherOrMother dbr:Ernest_Augustus,_Crown_Prince_of_Hanover .
  ?child dbo:fatherOrMother ?parent .
  ?parent rdfs:label ""Ernest Augustus, Duke of Brunswick""@en .
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
659,26,val,"Give me the commander in the war, that is an event and a military conflict, of the figure known, that is a military unit and an organisation, as 'Polish Horse'.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v1 <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/property/nickname> ""'Polish Horse'""@en . ?v2 <http://dbpedia.org/ontology/commander> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?war ?commander WHERE {
  # Find the Polish Horse as a military unit and organization
  ?polishHorse rdf:type dbo:MilitaryUnit ;
               rdfs:label ""Polish Horse""@en .
  
  # Link the Polish Horse to wars or military conflicts
  ?polishHorse dbo:participatedIn ?war .

  # Find commanders associated with these wars
  ?commander dbo:commanderOf ?unit .
  ?unit dbo:participatedIn ?war .

  FILTER(?unit = ?polishHorse)
}
```",3,7,4,3,1,3,3,71,0,0,130,0,0.0,0
747,31,val,"Give me the person born on the birth date of the person decedent, that is an athlete and a soccer player, at Zolotonosha and band of Amba Shepherd.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?result <http://dbpedia.org/ontology/birthDate> ?v0 . ?v1 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Zolotonosha> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Amba_Shepherd> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/ontology/birthDate> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Find the birth date of the decedent
  ?decedent dbo:birthDate ?birthDate .

  # Find a person who is an athlete and a soccer player, born on the same date as the decedent
  ?person dbo:birthDate ?birthDate ;
          dbo:sport dbr:Soccer ;
          dbo:birthPlace dbr:Zolotonosha .

  # Ensure the person is associated with Amba Shepherd (assuming band membership)
  OPTIONAL { ?person dbo:bandMember dbr:Amba_Shepherd . }

  FILTER EXISTS { ?person a dbo:Athlete }
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
701,39,val,"Give me the parent of Henuttawy (19th dynasty) and spouse of the father of the commander, that is a royalty, in Battle of Perire.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Battle_of_Perire> <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Henuttawy_(19th_dynasty)> . ?result <http://dbpedia.org/ontology/spouse> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parent ?spouse WHERE {
  # Find Henuttawy (19th dynasty)
  ?henuttawy a dbo:Person ;
             rdfs:label ""Henuttawy""@en ;
             dbo:era dbo:NineteenthDynastyOfEgypt .

  # Get her parent
  ?henuttawy dbo:parent ?parent .

  # Identify the commander in the Battle of Perire and his father
  ?battle a dbo:Battle ;
          dbp:name ""Battle of Perire""@en .
  
  ?commander a dbo:Person ;
             dbo:commanded ?battle ;
             dbo:father ?father .

  # Find the spouse of the commander's father, ensuring they are royalty
  ?father dbo:spouse ?spouse .
  FILTER EXISTS { ?spouse dbo:title ?title . FILTER regex(?title, ""King|Queen"", ""i"") }
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
696,15,val,"Give me the landmark at elevation of 50 and birth place of the member of the associated musical artist, that is an organisation and a group and a band, of The Boils.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/The_Boils> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?result <http://dbpedia.org/ontology/elevation> ""50""^^<http://www.w3.org/2001/XMLSchema#integer> . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/ontology/bandMember> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?member ?birthPlace ?landmark WHERE {
  # Identify The Boils as a band
  dbr:The_Boils dbo:type/dbo:subClassOf* dbo:Band .

  # Find members of The Boils
  ?bandMember dbo:associatedBand dbr:The_Boils .
  
  # Get birthplace of each member
  ?bandMember dbp:birthPlace ?birthPlace .

  # Find landmarks at elevation 50
  ?landmark a dbo:Lighthouse ;
            dbo:elevationAboveSeaLevel ""50""^^xsd:float .

}
```",4,7,5,3,2,3,2,20,0,0,1,0,0.0,0
404,42,val,"Give me the spouse of the person born, that is a royalty, as Princess Victoria Louise of Prussia and child of the father of Ernest Augustus, Duke of Brunswick and parent of Prince Ernest Augustus of Hanover (born 1914).","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/parent> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/birthName> ""Princess Victoria Louise of Prussia""@en . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Prince_Ernest_Augustus_of_Hanover_(born_1914)> . <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/property/father> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Identify Princess Victoria Louise of Prussia
  ?princess a dbo:Person ;
            rdfs:label ""Princess Victoria Louise of Prussia""@en ;
            dbo:birthName ?birthName .
  
  FILTER(CONTAINS(LCASE(?birthName), ""princess victoria louise of prussia""))

  # Find her spouse
  ?princess dbo:spouse ?spouse .

  # Ensure she is related to Ernest Augustus, Duke of Brunswick and Prince Ernest Augustus of Hanover (born 1914)
  OPTIONAL {
    ?ernestAugustusDuke a dbo:Person ;
                        rdfs:label ""Ernest Augustus, Duke of Brunswick""@en ;
                        dbo:father ?father .
    
    ?princeErnestAugustus a dbo:Person ;
                         rdfs:label ""Prince Ernest Augustus of Hanover (1914)""@en ;
                         dbo:parent ?parent .

    # Ensure the spouse is related through these individuals
    FILTER(?spouse = ?father || ?spouse = ?parent)
  }
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
345,13,val,"Give me the figure known as the nickname of the player, that is a sports club and an organisation and a soccer club, in Armando Heeb.",SELECT ?result WHERE { <http://dbpedia.org/resource/Armando_Heeb> <http://dbpedia.org/ontology/team> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?result <http://dbpedia.org/property/nickname> ?v1 . ?v0 <http://dbpedia.org/property/nickname> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nickname WHERE {
  # Find Armando Heeb's nicknames
  dbr:Armando_Heeb dbo:nickname ?nickname .

  # Ensure the nickname is associated with a sports club, organization, and soccer club
  ?nickname dbo:type/dbo:superClass* dbo:Sports_Club ;
            dbo:type/dbo:superClass* dbo:Organization ;
            dbo:type/dbo:superClass* dbo:Soccer_Club .
}
```",3,6,4,3,1,3,2,20,0,0,1,0,0.0,0
492,29,val,"Give me the commander in the war, that is a military conflict and an event, of Frédéric-Georges Herr and person decedent at Algiers and person decedent at French Algeria.",SELECT ?result WHERE { <http://dbpedia.org/resource/Frédéric-Georges_Herr> <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/French_Algeria> . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Algiers> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?commander WHERE {
  # Frédéric-Georges Herr's involvement in a military conflict
  dbr:Frédéric_Georges_Herr dbo:militaryConflict ?war .
  
  # The war is an event and involves a commander
  ?war a dbo:MilitaryConflict ;
      dbo:commander ?commander .

  # Frédéric-Georges Herr's death in Algiers
  dbr:Frédéric_Georges_Herr dbp:placeOfDeath dbr:Algiers .
  
  # Frédéric-Georges Herr's death in French Algeria
  OPTIONAL { 
    dbr:Frédéric_Georges_Herr dbp:placeOfDeath dbr:French_Algeria .
  }
}
```",4,6,5,2,3,3,3,71,0,0,1,0,0.0,0
184,29,val,Give me the child of the child of Archduke Joseph Karl of Austria and parent of Géza von Habsburg and parent of Archduchess Ilona of Austria.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v3 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Ilona_of_Austria> . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Karl_of_Austria> . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Géza_von_Habsburg> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?grandchild WHERE {
  # Find the children of Archduke Joseph Karl of Austria
  ?child dbo:parent dbr:Archduke_Joseph_Karl_of_Austria .
  
  # For each child, find their children (i.e., grandchildren of Archduke Joseph Karl)
  ?grandchild dbo:parent ?child .

  # Check if this grandchild is a parent to both Géza von Habsburg and Archduchess Ilona of Austria
  ?grandchild dbo:parent dbr:G%C3%A9za_von_Habsburg .
  ?grandchild dbo:parent dbr:Archduchess_Ilona_of_Austria .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
9,21,val,"Give me the figure known as QUB and alma mater of the mayor, that is a politician, of Northern Ireland Forum.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/property/nickname> ""QUB""@en . ?v1 <http://dbpedia.org/ontology/almaMater> ?result . <http://dbpedia.org/resource/Northern_Ireland_Forum> <http://dbpedia.org/property/leader> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  ?person dbo:almaMater dbr:Queen's_University_Belfast .
  ?person dbo:positionHeld ?mayorship .
  ?mayorship dbo:officeName ?office .
  FILTER(CONTAINS(LCASE(?office), ""mayor"") && CONTAINS(LCASE(?personLabel), ""northern ireland forum""))
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
778,11,val,Give me the author of Chroot and entity in the award of Ralph L. Brinster.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ralph_L._Brinster> <http://dbpedia.org/property/awards> ?v2 . <http://dbpedia.org/resource/Chroot> <http://dbpedia.org/ontology/author> ?result . ?result <http://dbpedia.org/ontology/location> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?author ?awardEntity WHERE {
  # Query for the author of Chroot
  OPTIONAL {
    ?chrootResource rdfs:label ""Chroot""@en .
    ?chrootResource dbo:creator ?author .
  }
  
  # Query for entities in the award of Ralph L. Brinster
  OPTIONAL {
    ?brinster dbr:Ralph_L._Brinster .
    ?brinster dbo:award ?award .
    ?award dbo:entity ?awardEntity .
  }
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
16,40,val,Give me the professional in Actress and spouse of the person born as the birth name of Ted McGinley and person born as Georgeanne Marie Rice.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Actress""@en . ?v1 <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/property/birthName> ?v2 . ?v1 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/birthName> ""Georgeanne Marie Rice""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?actress WHERE {
  # Find Ted McGinley by birth name
  ?ted a dbo:Person ;
       foaf:surname ""McGinley"" ;
       foaf:givenName ""Ted"" .
  
  # Find Georgeanne Marie Rice by birth name
  ?georgeanne a dbo:Person ;
              foaf:surname ""Rice"" ;
              foaf:givenName ""Georgeanne Marie"" .

  # Get spouses of Ted McGinley and check if they are actresses
  {
    ?ted dbo:spouse ?spouse .
    ?spouse dbo:occupation ?occupation .
    FILTER(CONTAINS(LCASE(?occupation), ""actress""))
    BIND(?spouse AS ?actress)
  }
  
  # Get spouses of Georgeanne Marie Rice and check if they are actresses
  {
    ?georgeanne dbo:spouse ?spouse .
    ?spouse dbo:occupation ?occupation .
    FILTER(CONTAINS(LCASE(?occupation), ""actress""))
    BIND(?spouse AS ?actress)
  }
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
994,22,val,"Give me the band member of the person born, that is a musical artist, as Donald Maynard Dokken and associated musical artist of S.A. Slayer.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ""Donald Maynard Dokken""@en . <http://dbpedia.org/resource/S.A._Slayer> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandMember ?slayerMusician WHERE {
  # Find band members of Donald Maynard Dokken who are musical artists
  ?person dbo:birthName ""Donald Maynard Dokken""@en .
  ?person dbo:bandMember ?bandMember .
  ?bandMember a dbo:MusicalArtist .

  # Find associated musicians from the band Slayer
  dbr:Slayer dbo:associatedBandMember ?slayerMusician .
  ?slayerMusician a dbo:MusicalArtist .
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
659,39,val,"Give me the commander in Battle of Leipzig and military force of the force, that is a societal event and an event and a military conflict, of the reference to Rutger Jan Schimmelpenninck.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Battle_of_Leipzig> <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Rutger Jan Schimmelpenninck""@en . ?v1 <http://dbpedia.org/ontology/commander> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?commander ?militaryForce
WHERE {
  ?battle dbr:Battle_of_Leipzig .
  ?battle rdf:type dbo:SocietalEvent ;
          rdf:type dbo:Event ;
          rdf:type dbo:MilitaryConflict .

  ?battle dbo:commander ?commander .
  ?commander dbo:militaryForce ?militaryForce .

  OPTIONAL { 
    ?battle dbo:reference dbr:Rutger_Jan_Schimmelpenninck .
  }
}
```",4,7,5,3,2,3,3,71,0,0,6,0,0.0,0
959,36,val,"Give me the member of University of Tsukuba and manager of the team of the manager, that is a sports manager, of 1998 Kashima Antlers season.",SELECT ?result WHERE { <http://dbpedia.org/resource/1998_Kashima_Antlers_season> <http://dbpedia.org/ontology/manager> ?v3 . ?result <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/University_of_Tsukuba> . ?v0 <http://dbpedia.org/ontology/manager> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v0 <http://dbpedia.org/ontology/manager> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?member ?manager
WHERE {
  ?member dbo:almaMater dbp:universityOfTsukuba .
  
  ?team dbp:season ""1998"" ;
        dbo:manager ?manager .

  FILTER EXISTS { ?manager a dbo:SportsManager . }

  ?manager dbp:managedTeam ?team .
}
```",4,5,5,3,2,3,3,71,0,0,2,0,0.0,0
92,34,val,"Give me the band member of the reference, that is an artist, to the name of Nevermore (2006 film) and band of Joseph Michael.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://xmlns.com/foaf/0.1/name> ?v2 . ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Joseph_Michael> . <http://dbpedia.org/resource/Nevermore_(2006_film)> <http://xmlns.com/foaf/0.1/name> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?memberName WHERE {
  # Identify the film ""Nevermore"" (2006)
  dbr:Nevermore_(film) dbo:starring ?actor .
  
  # Find the band associated with this film
  ?band dbo:associatedBandWithFilm dbr:Nevermore_(film) .

  # Joseph Michael's association with the band
  dbr:Joseph_Michael dbo:memberOf ?band .

  # Identify other members of the band who are also artists
  ?band dbo:member ?member .
  ?member a dbo:MusicalArtist .
  
  # Ensure we exclude Joseph Michael from the results
  FILTER (?member != dbr:Joseph_Michael)

  # Return the name of the member
  ?member rdfs:label ?memberName .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
701,30,val,Give me the parent of Meritamen and spouse of the father of Merneptah and parent of Henuttawy (19th dynasty).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v1 . <http://dbpedia.org/resource/Merneptah> <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Henuttawy_(19th_dynasty)> . <http://dbpedia.org/resource/Meritamen> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parentMeritamen ?spouseFatherMerneptah ?parentHenuttawy WHERE {
  # Parent of Meritamen
  ?meritamen dbo:parent ?parentMeritamen .
  FILTER (str(?meritamen) = ""Meritamen"")

  # Spouse of the father of Merneptah
  ?merneptah dbo:father ?fatherMerneptah .
  ?fatherMerneptah dbo:spouse ?spouseFatherMerneptah .
  FILTER (str(?merneptah) = ""Merneptah"")

  # Parent of Henuttawy from the 19th dynasty
  ?henuttawy dbo:parent ?parentHenuttawy ;
             dbo:era dbr:Egyptian_19th_dynasty .
  FILTER (str(?henuttawy) = ""Henuttawy"")
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
488,37,val,"Give me the administration of Emperor Go-Yōzei and death place of the father, that is a politician, of the father, that is an office holder, of Matsudaira Tadamasa.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Matsudaira_Tadamasa> <http://dbpedia.org/property/father> ?v0 . ?v3 <http://dbpedia.org/ontology/deathPlace> ?result . ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Emperor_Go-Yōzei> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?administrationPeriod ?deathPlace 
WHERE {
  # Matsudaira Tadamasa's father
  ?matsudairaTadamasa dbo:parent ?father .
  
  FILTER (STRSTARTS(STR(?father), ""http://dbpedia.org/resource/Matsudaira_Tadateru"")) .

  # Father is an office holder
  ?father dbp:title ?title .
  FILTER EXISTS { ?title rdf:type dbo:OfficeHolder } .

  # Grandfather of Matsudaira Tadamasa (father's father)
  ?father dbo:parent ?grandfather .

  # Grandfather is a politician
  ?grandfather dbo:occupation ?occupation .
  FILTER EXISTS { ?occupation rdfs:label ""politician""@en } .

  # Death place of the grandfather
  ?grandfather dbo:deathPlace ?deathPlace .

  # Administration period of Emperor Go-Yōzei
  ?emperor dbp:name ""Go-Yōzei""@ja ;
           dbp:reignStart ?startYear ;
           dbp:reignEnd ?endYear .
  
  BIND(CONCAT(?startYear, "" - "", ?endYear) AS ?administrationPeriod)
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
92,32,val,"Give me the band member of the reference, that is an artist, to Nevermore and associated musical artist of the person born, that is an artist, as Jim Sheppard.","SELECT ?result WHERE { ?v1 <http://xmlns.com/foaf/0.1/name> ""Nevermore""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v3 <http://dbpedia.org/property/birthName> ""Jim Sheppard""@en . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?bandMemberArtist ?associatedArtist 
WHERE {
  # Find band members of Nevermore who are artists
  ?member dbo:memberOfBand dbr:Nevermore .
  ?member dbo:occupation dbr:Artist .

  # Get the name or identifier for these band member artists
  ?member rdfs:label ?bandMemberArtist .
  
  FILTER (LANG(?bandMemberArtist) = 'en')

  OPTIONAL {
    # Find associated musical artists of Jim Sheppard
    dbr:Jim_Sheppard dbo:associatedMusicalArtist ?artist .
    ?artist rdfs:label ?associatedArtist .

    FILTER (LANG(?associatedArtist) = 'en')
  }
}
```",4,6,5,2,2,3,3,71,0,0,1,0,0.0,0
528,39,val,Give me the war of Orozimbo Barbosa and force of the person born as the birth name of Narciso Campero.,SELECT ?result WHERE { <http://dbpedia.org/resource/Narciso_Campero> <http://dbpedia.org/property/birthName> ?v0 . ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?result <http://dbpedia.org/ontology/commander> ?v1 . <http://dbpedia.org/resource/Orozimbo_Barbosa> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war ?force 
WHERE {
  # Finding wars involving Orozimbo Barbosa
  OPTIONAL { 
    dbr:Orozimbo_Barbosa dbo:participatedIn ?war .
  }
  
  # Finding the military force associated with Narciso Campero
  OPTIONAL {
    ?campero dbo:birthName ""Narciso Campero""@en ;
             dbo:militaryForce ?force .
  }

  # Linking Narciso Campero to a DBpedia resource
  FILTER EXISTS { ?campero a dbo:Person . }
}
```",4,4,5,3,2,3,3,71,0,0,2,0,0.0,0
534,15,val,"Give me the headquarter of Royal Dublin Society and birth place of the child, that is a politician and an office holder, of the native, that is a politician, of Essex.",SELECT ?result WHERE { <http://dbpedia.org/resource/Royal_Dublin_Society> <http://dbpedia.org/ontology/headquarter> ?result . ?v0 <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Essex> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthPlace ?headquarters WHERE {
  # Step 1: Find a politician native to Essex
  ?politician dbo:nationality dbr:Essex ;
              a dbo:Politician .

  # Step 2: Check if this politician has children who are politicians or office holders
  ?child dbo:parent ?politician ;
         (a dbo:Politician ; 
          dbo:officeHolderOf ?_) .

  # Step 3: Get the birthplace of such a child
  ?child dbp:birthPlace ?birthPlace .

  # Step 4: Find the headquarters of the Royal Dublin Society
  dbr:Royal_Dublin_Society dbo:headquarters ?headquarters .
}
```",4,7,5,3,2,3,2,20,0,0,1,0,0.0,0
701,34,val,Give me the parent of the child of the spouse of Amun-her-khepeshef and spouse of Ramesses II.,SELECT ?result WHERE { <http://dbpedia.org/resource/Amun-her-khepeshef> <http://dbpedia.org/ontology/spouse> ?v2 . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Ramesses_II> . ?v2 <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?commonParentLabel WHERE {
  # Step 1: Find spouse of Amun-her-khepeshef
  ?amunHerKhepeshef dbo:spouse ?spouseAmun.
  ?amunHerKhepeshef rdfs:label ""Amun-her-khepeshef""@en.

  # Step 2: Find child of the spouse of Amun-her-khepeshef
  ?spouseAmun dbo:child ?childOfSpouseAmun.
  
  # Step 3: The parent of this child is the spouse of Amun-her-khepeshef again
  ?parentAmun rdfs:label ?spouseAmunLabel.

  # Step 4: Find spouse of Ramesses II
  ?ramessesII dbo:spouse ?spouseRamesses.
  ?ramessesII rdfs:label ""Ramesses II""@en.

  # Step 5: Find child of the spouse of Ramesses II
  ?spouseRamesses dbo:child ?childOfSpouseRamesses.
  
  # Step 6: The parent of this child is the spouse of Ramesses II again
  ?parentRamesses rdfs:label ?spouseRamessesLabel.

  # Step 7: Find common parent
  FILTER (?parentAmun = ?parentRamesses)
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }

  BIND(?parentAmun AS ?commonParent)
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
747,29,val,Give me the band of the writer of Apollo (Hardwell song) and person born on 1985-04-29 and band of Shèna.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthDate> ""1985-04-29""^^<http://www.w3.org/2001/XMLSchema#date> . <http://dbpedia.org/resource/Shèna> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Apollo_(Hardwell_song)> <http://dbpedia.org/property/writer> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?band1 ?band2 ?band3 WHERE {
  # Part 1: Band of the writer of ""Apollo"" by Hardwell
  ?song dbo:lyricsBy ?writer .
  FILTER(STR(?song) = ""Hardwell:_Apollo"")
  ?writer dbo:memberOfBand ?band1 .

  # Part 2: Person born on 1985-04-29 and their band
  ?person dbo:birthday ?birthDate .
  FILTER(YEAR(?birthDate) = 1985 && MONTH(?birthDate) = 4 && DAY(?birthDate) = 29)
  ?person dbo:memberOfBand ?band2 .

  # Part 3: Band of Shèna
  dbr:Shèna dbo:memberOf ?band3 .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
179,14,val,Give me the parent of the child of the parent of Vajiralongkorn.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Vajiralongkorn> . ?v0 <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://dbpedia.org/ontology/child> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?grandparent WHERE {
  ?vajiralongkorn dbo:father ?parent .
  FILTER(STR(?vajiralongkorn) = ""Vajiralongkorn"")
  
  ?parent dbo:child ?child .
  
  ?child dbo:father ?grandparent .
}
```",3,3,4,3,1,3,2,20,0,0,3,0,0.0,0
9,32,val,"Give me the alma mater of the awardee of Royal Medal and alma mater of the mayor, that is a politician, of Northern Ireland Forum.",SELECT ?result WHERE { <http://dbpedia.org/resource/Northern_Ireland_Forum> <http://dbpedia.org/property/leader> ?v1 . ?v1 <http://dbpedia.org/ontology/almaMater> ?result . ?v3 <http://dbpedia.org/ontology/almaMater> ?result . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Medal> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?almaMater
WHERE {
  # Royal Medal awardees and their alma mater
  ?person dbo:award dbr:Royal_Medal .
  ?person dbo:almaMater ?almaMater .

  # Politicians who were mayors in the Northern Ireland Forum context
  ?politician dbo:positionHeld ?mayorship .
  ?mayorship dbo:officeHolder ?politician ;
             dbo:positionTitle dbr:Mayor_of_Northern_Ireland_Forum .
  ?politician dbo:almaMater ?sameAlmaMater .

  # Ensure the alma mater is the same
  FILTER (?almaMater = ?sameAlmaMater)
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
747,44,val,Give me the band of the person born as Tracey Elizabeth McSween and band of the writer of Apollo (Hardwell song) and person born on 1985-04-29.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/property/birthName> ""Tracey Elizabeth McSween""@en . <http://dbpedia.org/resource/Apollo_(Hardwell_song)> <http://dbpedia.org/property/writer> ?v4 . ?result <http://dbpedia.org/ontology/birthDate> ""1985-04-29""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person1Band ?writerBand ?born1985Band WHERE {
  # Tracey Elizabeth McSween's band
  OPTIONAL {
    ?person1 dbo:birthName ""Tracey Elizabeth McSween""@en .
    ?person1 dbo:band ?person1Band .
  }

  # Writer of Apollo (Hardwell song)
  OPTIONAL {
    dbr:Apollo_(song) dbo:lyricsBy ?writer .
    ?writer dbo:band ?writerBand .
  }
  
  # Person born on 1985-04-29
  OPTIONAL {
    ?person2 dbo:dateOfBirth ""1985-04-29""^^xsd:date .
    ?person2 dbo:band ?born1985Band .
  }
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
528,33,val,Give me the war of Irene Morales and war of the commander in the work of --01-09.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/author> ""--01-09""^^<http://www.w3.org/2001/XMLSchema#gMonthDay> . ?v3 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Irene_Morales> <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/ontology/commander> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?work ?date WHERE {
  ?work dbo:wikiPageWikiLink dbr:Irene_Morales .
  ?work dbo:wikiPageWikiLink dbr:Commander .
  ?work dbp:date ?date .
  FILTER (STRSTARTS(STR(?date), ""2009-01""))
}
```",4,4,5,3,2,3,3,71,0,0,2,0,0.0,0
915,13,val,"Give me the resident of the birthplace, that is a settlement, of the director of Pipe Dreams (1976 film).",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> ?v1 . ?result <http://dbpedia.org/ontology/residence> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Pipe_Dreams_(1976_film)> <http://dbpedia.org/ontology/director> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?resident WHERE {
  # Step 1: Identify the film ""Pipe Dreams"" from 1976 and its director
  dbr:Pipe_Dreams_(film) dbo:director ?director .
  
  # Step 2: Determine the birthplace of this director
  ?director dbo:birthPlace ?birthplace .

  # Step 3: Ensure that the birthplace is a settlement
  ?birthplace rdf:type dbo:Settlement .

  # Step 4: Identify any notable resident of this settlement
  ?birthplace dbo:notableResident ?resident .
}
```",3,4,4,3,1,3,2,20,0,0,15,0,0.0,0
498,7,val,"Give me the band of Will Rahmer and band of the band, that is an organisation and a band, of Solace of Requiem.",SELECT ?result WHERE { <http://dbpedia.org/resource/Will_Rahmer> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. <http://dbpedia.org/resource/Solace_of_Requiem> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?commonBand WHERE {
  # Find the band associated with Will Rahmer
  ?willRahmer a dbo:Person ;
              foaf:name ""Will Rahmer"" .
  
  ?willRahmer foaf:musicGroup ?bandOfWillRahmer .

  # Find the related band of the band associated with Will Rahmer
  OPTIONAL { ?bandOfWillRahmer foaf:member ?relatedBand . }

  # Find Solace of Requiem and its associated organization/band
  ?solaceOfRequiem a dbo:MusicalArtist ;
                   foaf:name ""Solace of Requiem"" .
  
  ?solaceOfRequiem foaf:musicGroup ?bandOfSolace .

  # Ensure the band is both an organization and a band
  ?bandOfSolace a dbo:Band, dbo:Organization .

  # Find common band that satisfies both conditions
  FILTER (?relatedBand = ?bandOfSolace || ?bandOfWillRahmer = ?bandOfSolace)
}
```",3,5,4,2,2,2,2,9,0,0,1,0,0.0,0
392,15,val,"Give me the entity in the region, that is a country, of Central European Time and province of Schio.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v1 . <http://dbpedia.org/resource/Schio> <http://dbpedia.org/ontology/province> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?country WHERE {
  ?country a dbo:Country .
  ?country dbo:timeZone dbr:Central_European_Time .
  ?province dbo:locatedIn dbr:Italy ;
            rdfs:label ""Schio""@en .
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
534,14,val,"Give me the headquarter of the owner of the location, that is a venue and an architectural structure, of 2012 Pro12 Grand Final.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Venue>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ArchitecturalStructure>. <http://dbpedia.org/resource/2012_Pro12_Grand_Final> <http://dbpedia.org/ontology/location> ?v2 . ?v2 <http://dbpedia.org/ontology/owner> ?v0 . ?v0 <http://dbpedia.org/ontology/headquarter> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?headquarter WHERE {
  # Step 1: Identify the venue of the 2012 Pro12 Grand Final
  ?event dbo:eventType dbr:Pro12;
         dbo:date ?date.
  
  FILTER(YEAR(?date) = 2012)
  ?event dbo:location ?venue.

  # Step 2 and 3: Ensure the venue is both a location and an architectural structure
  ?venue rdf:type dbo:Location .
  ?venue rdf:type dbo:ArchitecturalStructure .

  # Step 4: Find out who owns this venue
  ?venue dbo:owner ?owner.

  # Step 5: Determine the headquarters of the owner
  ?owner dbp:headquarters ?headquarter.
}
```",3,5,4,3,1,3,2,20,0,0,3,0,0.0,0
488,38,val,"Give me the death place of the father, that is a politician, of Yūki Hideyasu and administration of the father of Emperor Go-Mizunoo.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Yūki_Hideyasu> <http://dbpedia.org/property/father> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Emperor_Go-Mizunoo> <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/property/leader> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?deathPlaceYukiUjitomo ?administrationToyotomiHideyoshi
WHERE {
  # Yūki Ujitomo's death place
  dbr:Yūki_Ujitomo dbo:deathPlace ?deathPlaceYukiUjitomo .

  # Toyotomi Hideyoshi's administration (roles or titles)
  dbr:Toyotomi_Hideyoshi dbo:title ?administrationToyotomiHideyoshi .
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
55,12,val,Give me the band member of Guns N' Roses and band member of Metallica and band of Newsted.,SELECT ?result WHERE { <http://dbpedia.org/resource/Newsted> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Guns_N'_Roses> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Metallica> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?personName ?bandName WHERE {
  # Band members of Guns N' Roses
  { 
    ?person dbo:bandMember dbr:Guns_N'_Roses .
    ?person foaf:name ?personName .
  }
  
  UNION
  
  # Band members of Metallica
  { 
    ?person dbo:bandMember dbr:Metallica .
    ?person foaf:name ?personName .
  }
  
  UNION

  # Bands associated with Newsted (James Hetfield)
  {
    dbr:James_Newsted dbo:member ?band .
    ?band foaf:name ?bandName .
  }
}
```",3,3,4,1,3,2,3,28,0,0,1,0,0.0,0
10,13,val,"Give me the associated musical artist of the person born, that is an artist, as Matt Colton and band member of Luke Vibert.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Luke_Vibert> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/birthName> ""Matt Colton""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?associatedMusicalArtist WHERE {
  ?person a dbo:Person ;
          foaf:name ""Matt Colton"" ;
          dbo:occupation dbo:Artist .
  ?person dbo:bandMember ?lukeVibertBand .
  ?lukeVibertBand dbp:member ?lukeVibert .
  ?lukeVibert foaf:name ""Luke Vibert"" .
  ?person dbo:musicalArtist ?associatedMusicalArtist .
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
77,14,val,"Give me the force of the mayor of the territory administered, that is an organisation, from Warsaw.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> ?v0 . ?v2 <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Warsaw> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://dbpedia.org/property/leader> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?mayor ?force
WHERE {
  ?organization dbo:administrativeOffice dbr:Warsaw .
  ?mayor dbo:positionHeld ?role .
  ?role rdfs:label ""Mayor""@en .
  ?mayor dbo:officeHolderOf ?organization .
  OPTIONAL { ?mayor dbo:authority ?force . }
}
```",3,4,4,3,1,3,2,20,0,0,40,0,0.0,0
963,12,val,"Give me the administration of the ruling party, that is a political party, in Sremski Karlovci and entity in Serbia.",SELECT ?result WHERE { <http://dbpedia.org/resource/Sremski_Karlovci> <http://dbpedia.org/property/leaderParty> ?v0 . ?result <http://dbpedia.org/property/leaderParty> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Serbia> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?party ?leader WHERE {
  # Find the political party in Sremski Karlovci that is currently ruling
  ?party a dbo:PoliticalParty ;
         dbo:location dbr:Sremski_Karlovci ;
         dbo:country dbr:Serbia .
  
  OPTIONAL { 
    ?party dbo:leader ?leader .
  }
  
  # Assuming there's some way to determine the ruling party, such as an election result or current government data
  FILTER EXISTS {
    ?electionResult dbo:winner ?party .
    ?electionResult dbo:electionLocation dbr:Sremski_Karlovci .
  }
}
```",3,4,4,2,2,3,2,20,0,0,84,0,0.0,0
528,34,val,"Give me the war of the military force of the entity, that is a societal event, in Chile and force of Narciso Campero.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Narciso_Campero> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Chile> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war ?chileEntity ?narcisoCamperoForce WHERE {
  ?war a dbo:MilitaryConflict ;
      dbo:location dbr:Chile ;
      dbo:participatingMilitaryUnit ?militaryUnit .
  
  ?militaryUnit dbo:commander dbr:Narciso_Campero ;
               rdfs:label ?narcisoCamperoForce .

  OPTIONAL { ?war dbo:participant ?chileEntity . }
}
```",4,5,5,3,2,3,3,71,0,0,4,0,0.0,0
404,33,val,"Give me the spouse of Princess Victoria Louise of Prussia and parent of the child, that is a royalty, of the parent, that is a royalty, of Prince George William of Hanover.",SELECT ?result WHERE { <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Prince_George_William_of_Hanover> <http://dbpedia.org/ontology/parent> ?v0 . ?v0 <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  dbr:Princess_Victoria_Louise_of_Prussia dbo:spouse ?spouse .
  
  OPTIONAL { 
    ?child dbo:parent ?spouse ;
           a dbo:RoyalFamilyMember .
    
    ?grandChild dbo:parent ?child ;
                a dbo:RoyalFamilyMember .

    ?parentOfPrinceGeorgeWilliam dbo:child dbr:Prince_George_William_of_Hanover .
  }
}
```",4,6,5,3,2,3,3,71,1,0,0,1.0,1.0,1.0
391,40,val,"Give me the native of the figure known as the nick name of Jackson, Tennessee and actor of The Departed and actor of All About the Andersons.","SELECT ?result WHERE { <http://dbpedia.org/resource/Jackson,_Tennessee> <http://xmlns.com/foaf/0.1/nick> ?v2 . ?v1 <http://dbpedia.org/property/nickname> ?v2 . <http://dbpedia.org/resource/The_Departed> <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . <http://dbpedia.org/resource/All_About_the_Andersons> <http://dbpedia.org/property/starring> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nativePlace WHERE {
  ?person dbo:nickName ""Choo Choo""@en .
  ?person dbo:birthPlace ?nativePlace .
  ?person dbo:film [dbo:title ""The Departed""@en] .
  ?person dbo:film [dbo:title ""All About the Andersons""@en] .
  FILTER (str(?person) = str(dbr:Jack_Nicholson))
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
328,41,val,"Give me the awardee of the award of Bruce Fraser, 1st Baron Fraser of North Cape and commander in the force of Ferenc Szálasi and leader of People's Commissariat of Defense of the Soviet Union.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape> <http://dbpedia.org/property/awards> ?v2 . <http://dbpedia.org/resource/People's_Commissariat_of_Defense_of_the_Soviet_Union> <http://dbpedia.org/ontology/leader> ?result . ?v4 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Ferenc_Szálasi> . ?result <http://dbpedia.org/property/awards> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?awardee WHERE {
  # Find awards associated with Bruce Fraser, 1st Baron Fraser of North Cape
  ?award dbo:recipient dbr:Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape .
  
  # Check if the awardee has a role related to Ferenc Szálasi or was a leader in the People's Commissariat of Defense of the Soviet Union
  ?award dbo:recipient ?awardee .

  OPTIONAL {
    ?awardee dbo:position dbr:Ferenc_Szálasi .
  }
  
  OPTIONAL {
    ?awardee dbo:position dbr:People%27s_Commissar_for_Defence_of_the_Soviet_Union .
  }
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
281,23,val,Give me the war of the awardee of the award of Jonathon Band.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/awards> ?v2 . ?v0 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Jonathon_Band> <http://dbpedia.org/property/awards> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?war WHERE {
  ?jonathonBand a dbo:Person ;
                foaf:name ""Jonathon Band""@en .
  
  ?award dbo:recipient ?awardee ;
         dbo:holder ?jonathonBand .

  OPTIONAL { ?awardee dbo:relatedTo ?war . }
}
```",3,3,4,3,1,3,3,71,0,0,450,0,0.0,0
963,13,val,"Give me the entity in the region, that is a country, of the time zone of Herzegovina-Neretva Canton.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://dbpedia.org/property/timeZone> ?v0 . ?result <http://dbpedia.org/ontology/country> ?v1 . <http://dbpedia.org/resource/Herzegovina-Neretva_Canton> <http://dbpedia.org/property/timeZone> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?country WHERE {
  # Find the time zone for Herzegovina-Neretva Canton
  dbr:Herzegovina-Neretva_Canton dbo:timeZone ?timezone .

  # Find countries that are in this time zone and are regions of it
  ?country a dbo:Country ;
           dbo:timeZone ?timezone .
}
```",3,4,4,3,1,3,2,20,29,65,173232,0.30851063829787234,0.00016737754024275515,0.00033457356292001964
701,18,val,Give me the spouse of Ramesses II and parent of Henuttawy (19th dynasty) and parent of Meritamen.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Ramesses_II> . <http://dbpedia.org/resource/Meritamen> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Henuttawy_(19th_dynasty)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  ?ramesses2 dbo:spouse ?spouse .
  FILTER (str(?ramesses2) = ""Ramesses_II"")
  
  ?spouse dbo:child ?henuttawy .
  ?spouse dbo:child ?meritamen .

  FILTER (str(?henuttawy) = ""Henuttawy_(daughter_of_Ramesses_II)"" && 
          str(?meritamen) = ""Meritamen"")
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
9,42,val,"Give me the alma mater of the mayor, that is a politician, of Northern Ireland Forum and figure known as the nickname of Queen's University Belfast and alma mater of Allen Hill (scientist).",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/almaMater> ?result . <http://dbpedia.org/resource/Allen_Hill_(scientist)> <http://dbpedia.org/ontology/almaMater> ?result . <http://dbpedia.org/resource/Queen's_University_Belfast> <http://dbpedia.org/property/nickname> ?v1 . <http://dbpedia.org/resource/Northern_Ireland_Forum> <http://dbpedia.org/property/leader> ?v2 . ?result <http://dbpedia.org/property/nickname> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?almaMater WHERE {
  # Find the mayor associated with Northern Ireland Forum and ensure they are a politician
  ?mayor dbo:position dbr:Northern_Ireland_Forum ;
         a dbo:Politician .
  
  # Get their alma mater
  ?mayor dbo:almaMater ?university .

  # Ensure Queen's University Belfast is the nickname of this university and also the alma mater of Allen Hill (scientist)
  ?university rdfs:label ""Queen's University Belfast""@en ;
             dbo:nickname ?nickname .
  
  FILTER(?nickname = ""The nickname for Queen's University Belfast"") 

  ?allenHill dbo:almaMater ?university ;
             foaf:name ""Allen Hill"" .

  # Ensure Allen Hill is recognized as a scientist
  ?allenHill a dbo:Scientist .

  BIND(?university AS ?almaMater)
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
547,32,val,Give me the resting place of the actor of Enemy at the Door and resting place of the child of James Burton (property developer).,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . ?v3 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Enemy_at_the_Door> <http://dbpedia.org/property/starring> ?v3 . <http://dbpedia.org/resource/James_Burton_(property_developer)> <http://dbpedia.org/ontology/child> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

# Query for the resting place of the actor from ""Enemy at the Door""
SELECT ?actor ?burialPlaceActor WHERE {
  ?film dbo:title ""Enemy at the Door""@en .
  ?film dbo:starring ?actor .
  OPTIONAL { ?actor dbo:deathPlace ?burialPlaceActor . }
}

UNION

# Query for the resting place of a child of James Burton (property developer)
SELECT ?child ?burialPlaceChild WHERE {
  ?james dbr:James_Burton_(property_developer) ;
         dbo:spouse|dbo:child ?parent .
  ?parent dbo:child ?child .
  OPTIONAL { ?child dbo:deathPlace ?burialPlaceChild . }
}
```",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
179,15,val,"Give me the person born as the birth name of the child, that is a royalty, of Nakkhatra Mangala and parent of Ubol Ratana.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Nakkhatra_Mangala> . <http://dbpedia.org/resource/Ubol_Ratana> <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person ?birthName WHERE {
  ?person dbo:childOf [
    a dbo:Person ;
    foaf:name ""Nakkhatra Mangala"" .
  ] .
  ?person dbo:parent [
    a dbo:Person ;
    foaf:name ""Ubol Ratana"" .
  ] .
  OPTIONAL { ?person foaf:name ?birthName . }
  FILTER EXISTS {
    ?person dbo:title ?title .
    FILTER (CONTAINS(LCASE(?title), ""royalty""))
  }
}
```",4,5,5,3,2,3,2,20,0,0,1,0,0.0,0
184,32,val,Give me the child of the child of Archduke Joseph Karl of Austria and parent of the native of Budapest.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v1 . ?result <http://dbpedia.org/property/father> ?v3 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Karl_of_Austria> . ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Budapest> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?grandchild ?parent
WHERE {
  # Find Archduke Joseph Karl's child
  ?child dbo:parent dbr:Archduke_Joseph_Karl_of_Austria .
  
  # Find the grandchild (child of the child)
  ?grandchild dbo:parent ?child .

  # Find individuals whose parent is a native of Budapest
  ?individual dbo:parent ?parent .
  ?parent dbo:nationality dbr:Budapest .

  # Match the grandchild with the individual having a parent from Budapest
  FILTER (?grandchild = ?individual)
}
```",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
996,11,val,Give me the force of the awardee of 1778.0 and entity in France.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/France> . ?v2 <http://dbpedia.org/property/awards> ""1778.0""^^<http://www.w3.org/2001/XMLSchema#double> . ?result <http://dbpedia.org/ontology/commander> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?awardee ?force WHERE {
  ?award dbo:dateReceived ""1778-01-01""^^xsd:date ;
         dbo:recipient ?awardee .
  
  OPTIONAL { 
    ?awardee dbo:militaryStrength ?force .
  }
  
  FILTER EXISTS {
    ?awardee dbo:country dbr:France .
  }
}
```",3,3,4,2,2,3,2,20,0,0,4,0,0.0,0
915,12,val,"Give me the resident of Springfield, Illinois and father of the child, that is a fictional character and a soap character, of Phillip Spaulding.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?result . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Phillip_Spaulding> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?result <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Springfield,_Illinois> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoapCharacter>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?character WHERE {
  ?character dbo:residence dbr:Springfield_(Illinois) .
  ?character dbo:genre dbr:Soap_opera .
  ?character dbo:child dbr:Phillip_Spaulding .
}
```",3,5,4,2,2,3,2,20,0,0,1,0,0.0,0
404,44,val,"Give me the parent of the child, that is a royalty, of Ernest Augustus, Duke of Brunswick and child of the father of Ernest Augustus, Duke of Brunswick and spouse of Princess Victoria Louise of Prussia.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v2 . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/property/father> ?v2 . <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/ontology/child> ?v4 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  # Ernest Augustus, Duke of Brunswick
  dbr:Ernest_Augustus,_Duke_of_Brunswick a dbo:Person ;
    dbo:spouse dbr:Princess_Victoria_Louise_of_Prussia ;
    dbo:father dbr:Friedrich_August_II,_Duke_of_Saxe-Gotha-Altenburg .

  # Children of Ernest Augustus
  ?child dbo:parent dbr:Ernest_Augustus,_Duke_of_Brunswick ;
         a dbo:Person .

  # Filter for royalty among children
  FILTER EXISTS { ?child dbo:title ?title . FILTER regex(?title, ""King|Queen|Prince|Princess"", ""i"") }

  # Find the parent of this royal child
  ?parent dbo:child ?child .
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
391,27,val,"Give me the actor of the movie, that is a movie and a work and a television show, with the professional in .","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/starring> ?result . ?v1 <http://dbpedia.org/property/occupation> """"@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v2 <http://dbpedia.org/property/starring> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?actor WHERE {
  ?movie a dbo:Film .
  ?movie a dbo:Work .
  ?movie a dbo:TelevisionShow .
  ?movie dbo:starring ?actor .
}
```",3,6,4,3,1,3,3,71,6116,6164,945,0.49804560260586317,0.8661662654015012,0.6324388604518898
963,14,val,"Give me the administration of the ruling party, that is a political party, in the location for 21205.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/leaderParty> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v2 <http://dbpedia.org/ontology/postalCode> ""21205"" . ?result <http://dbpedia.org/property/leaderParty> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?location ?rulingParty ?administration
WHERE {
  ?location dbo:postalCode ""21205"" .
  OPTIONAL { ?location dbo:rulingParty ?party . }
  OPTIONAL { ?party dbo:administration ?administration . }
}
```",3,4,4,3,1,3,2,20,1,5,85,0.16666666666666666,0.011627906976744186,0.02173913043478261
55,16,val,"Give me the band member of Guns N' Roses and band of the reference, that is a band, to Newsted.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Newsted""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Guns_N'_Roses> . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?member ?bandBeforeAfterGunsNroses ?newstedBand
WHERE {
  # Find members of Guns N' Roses
  ?member dbo:bandMember dbr:Guns_N%27_Roses .

  # Find bands associated with these members before or after Guns N' Roses
  OPTIONAL { ?member dbo:associatedBand ?bandBeforeAfterGunsNroses . }

  # Find bands associated with James Hetfield (Newsted)
  dbr:Metallica dbo:bandMember dbr:James_Hetfield ;
                dbo:associatedBand ?newstedBand .
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
10,16,val,Give me the professional in the birth name of Sharon Kao and associated musical artist of Matt Colton.,SELECT ?result WHERE { <http://dbpedia.org/resource/Sharon_Kao> <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Matt_Colton> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX schema: <http://schema.org/>

SELECT ?professionalName (GROUP_CONCAT(?artist; separator="", "") AS ?associatedArtists)
WHERE {
  # Subquery for Sharon Kao's professional name
  {
    SELECT ?professionalName WHERE {
      ?person foaf:surname ""Kao"" .
      ?person foaf:givenName ""Sharon"" .
      ?person schema:name ?professionalName .
    }
  }

  UNION

  # Subquery for Matt Colton's associated musical artist
  {
    SELECT ?artist WHERE {
      ?colton dbo:occupation dbr/Music_Production .
      ?colton foaf:surname ""Colton"" .
      ?colton foaf:givenName ""Matt"" .
      ?colton dbo:worksFor ?artist .
    }
  }
}
```",3,3,4,2,2,2,3,28,0,0,2,0,0.0,0
547,37,val,Give me the resting place of Alan Cunningham and resting place of the actor of the show with Emily Richard.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/starring> ?v3 . ?v3 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Alan_Cunningham> <http://dbpedia.org/ontology/restingPlace> ?result . ?v0 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emily_Richard> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?alanCunninghamRestingPlace ?actorName ?actorRestingPlace WHERE {
  # Alan Cunningham's resting place
  OPTIONAL { 
    dbr:Alan_Cunningham dbo:placeOfBurial ?alanCunninghamRestingPlace .
  }

  # Emily Richard (Emily Blunt) and a show she acted in
  OPTIONAL {
    dbr:Emily_Blunt dbo:actedIn ?show .
    
    # Find an actor from that show
    ?actor dbo:actedIn ?show ;
           rdfs:label ?actorName .

    FILTER(lang(?actorName) = 'en')

    # Actor's resting place
    OPTIONAL { 
      ?actor dbo:placeOfBurial ?actorRestingPlace .
    }
  }
}
```",4,4,5,3,2,3,3,71,0,0,2,0,0.0,0
92,31,val,"Give me the associated musical artist of Jim Sheppard and band member of the reference, that is an artist, to the name of Nevermore (2006 film).",SELECT ?result WHERE { <http://dbpedia.org/resource/Jim_Sheppard> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Nevermore_(2006_film)> <http://xmlns.com/foaf/0.1/name> ?v1 . ?v0 <http://xmlns.com/foaf/0.1/name> ?v1 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artistName ?filmName WHERE {
  # Find Jim Sheppard's associated musical artist
  dbr:Jim_Sheppard dbo:associatedBand ?band .
  
  # Check if any band members are also artists
  ?member dbo:bandMember ?band ;
          a dbo:Artist .

  # Get the name of the artist who is a band member
  ?member rdfs:label ?artistName .
  
  FILTER (lang(?artistName) = 'en')

  # Find the film ""Nevermore"" released in 2006 and get its name
  dbr:Nevermore_(film) dbo:title ?filmTitle ;
                      dbo:releaseDate ?releaseDate .

  BIND(CONCAT(""The film Nevermore, "", STR(YEAR(?releaseDate)), "": "", ?filmTitle) AS ?filmName)

  FILTER (YEAR(?releaseDate) = 2006)
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
356,15,val,"Give me the player in the successor of the predecessor, that is a sports team season and a soccer club season, of 2015 Sacramento Republic FC season and team of Mark Briggs.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v0 <http://dbpedia.org/ontology/successor> ?v1 . ?result <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Mark_Briggs> . ?v0 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/2015_Sacramento_Republic_FC_season> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?v1 <http://dbpedia.org/ontology/team> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?player WHERE {
  # Step 1: Identify the 2015 Sacramento Republic FC Season
  ?sacramentoSeason a dbo:SoccerClubSeason ;
                   dbo:club dbr:Sacramento_Republic_FC ;
                   dbo:season ""2015""^^xsd:gYear .

  # Step 2: Find the Predecessor Season
  ?predecessorSeason dbo:succeeds ?sacramentoSeason .

  # Step 3: Determine the Successor of the Predecessor
  ?successorOfPredecessorSeason dbo:succeeds ?predecessorSeason .

  # Step 4: Ensure it is a Sports Team Season and a Soccer Club Season
  ?successorOfPredecessorSeason a dbo:SoccerClubSeason ;
                               a dbo:SportsTeamSeason .

  # Step 5: Find the Player Associated with Mark Briggs' Team
  ?team dbr:Mark_Briggs ; 
        dbo:member ?player .
  
  ?team dbo:season ?successorOfPredecessorSeason .
}
```",4,6,5,3,2,3,2,20,0,0,1,0,0.0,0
92,23,val,"Give me the band member of the reference, that is an artist, to the name of Nevermore (2006 film).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Nevermore_(2006_film)> <http://xmlns.com/foaf/0.1/name> ?v2 . ?v0 <http://xmlns.com/foaf/0.1/name> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?bandMember ?artistName WHERE {
  # Find the film resource for ""Nevermore (2006 film)""
  dbr:Nevermore_(2006_film) dbo:starring ?actor .
  
  # Check if the actor is also an artist
  ?actor a dbo:MusicalArtist ;
         rdfs:label ?artistName .

  FILTER(LANG(?artistName) = 'en')
}
```",3,4,4,3,1,3,3,71,0,0,12,0,0.0,0
251,17,val,"Give me the administration of the ruling party, that is a political party and an organisation, in Sicily and death place of Laura Mancinelli.",SELECT ?result WHERE { <http://dbpedia.org/resource/Laura_Mancinelli> <http://dbpedia.org/ontology/deathPlace> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?result <http://dbpedia.org/property/leaderParty> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Sicily> <http://dbpedia.org/property/leaderParty> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?administration ?deathPlace WHERE {
  # Part 1: Administration of the ruling party in Sicily
  {
    SELECT DISTINCT ?party (GROUP_CONCAT(?minister; separator="", "") AS ?administration) WHERE {
      ?party a dbo:PoliticalParty ;
             dbo:country dbr:Sicily .
      OPTIONAL { ?party dbo:ministers ?minister . }
    } GROUP BY ?party
  }

  # Part 2: Death place of Laura Mancinelli
  UNION
  {
    SELECT DISTINCT ?deathPlace WHERE {
      dbr:Laura_Mancinelli dbo:placeOfBirth ?birthPlace ;
                           dbo:deathPlace ?deathPlace .
    }
  }
}
```",3,5,4,2,2,2,3,28,0,1,1,0.0,0.0,0
427,33,val,Give me the reference to Partito Popolare Italiano and party of the father of the alumnus of Massachusetts Institute of Technology.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Massachusetts_Institute_of_Technology> . ?v3 <http://dbpedia.org/ontology/party> ?result . ?v0 <http://dbpedia.org/property/father> ?v3 . ?result <http://xmlns.com/foaf/0.1/name> ""Partito Popolare Italiano""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?alumnus ?father ?party
WHERE {
  # Find alumnus of MIT
  ?alumnus dbo:almaMater dbr:Massachusetts_Institute_of_Technology .
  
  # Find the father of the alumnus
  ?alumnus dbo:father ?father .

  # Get the political party affiliation of the father
  OPTIONAL { ?father dbp:politicalParty ?party . }

  # Filter to include Partito Popolare Italiano
  FILTER (?party = dbr/Partito_Popolare_Italiano)
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
404,36,val,Give me the spouse of Princess Victoria Louise of Prussia and child of the father of the spouse of Princess Victoria Louise of Prussia.,SELECT ?result WHERE { <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?child WHERE {
  ?princess a dbo:Princess ;
            foaf:name ""Victoria Louise of Prussia""@en .
  
  ?princess dbo:spouse ?spouse .

  ?spouse foaf:parent ?father .

  ?father dbo:child ?child .
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
161,23,val,"Give me the military force of the force, that is a societal event and an event and a military conflict, of the person decedent at Francoist Spain.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://dbpedia.org/ontology/commander> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Francoist_Spain> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?militaryForce WHERE {
  ?person dbo:deathPlace dbr:Francoist_Spain .
  ?event dbo:agent ?person ;
         a dbo:SocietalEvent, dbo:Event, dbo:MilitaryConflict .
  ?event dbo:militaryForce ?militaryForce .
}
```",3,6,4,3,1,3,3,71,0,0,1073,0,0.0,0
617,36,val,Give me the parent of the child of the commander in Battle of Panium and child of Antiochus III the Great.,SELECT ?result WHERE { <http://dbpedia.org/resource/Battle_of_Panium> <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://dbpedia.org/ontology/child> ?v1 . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Antiochus_III_the_Great> . ?result <http://dbpedia.org/ontology/child> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parent WHERE {
  # Step 1: Identify the commander in Battle of Panium
  ?battle dbo:commander ?commander .
  FILTER(STRSTARTS(STR(?battle), ""Battle_of_Panium"")) .

  # Step 2: Find the child of this commander
  ?commander dbo:child ?childOfCommander .

  # Step 3: Identify a child of Antiochus III the Great
  dbr:Antiochus_III_the_Great dbo:child ?childOfAntiochus .

  # Step 4: Determine the parent of both individuals identified in steps 2 and 3
  ?parent dbo:child ?childOfCommander .
  ?parent dbo:child ?childOfAntiochus .
}
```",4,4,5,3,2,3,3,71,0,0,2,0,0.0,0
54,44,val,"Give me the predecessor of the child, that is an office holder and a royalty, of Thihapate of Mohnyin and parent of the child of Narapati I of Ava and child of Thinkhaya of Pagan.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Thihapate_of_Mohnyin> . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Narapati_I_of_Ava> . <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?result . ?v4 <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?predecessor WHERE {
  # Find Thihapate's child who is an office holder and royalty
  ?child dbo:parent dbr:Thihapate_of_Mohnyin .
  ?child dbo:officeHolder ?office .
  ?child dbo:royalty ?royalty .

  # Find the child of Narapati I
  ?narapatichild dbo:parent dbr:Narapati_I_of_Ava .

  # Find the child of Thinkhaya
  ?thinkhayachild dbo:parent dbr:Thinkhaya_of_Pagan .

  # Check if Thihapate's child is also a child of Narapati I and Thinkhaya
  FILTER (?child = ?narapatichild && ?child = ?thinkhayachild)

  # Find the predecessor of this individual
  ?predecessor dbo:successor ?child .
}
```",5,7,6,2,3,3,3,71,0,0,1,0,0.0,0
10,18,val,Give me the professional in the birth name of Sharon Kao and band member of Luke Vibert.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v1 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Luke_Vibert> . <http://dbpedia.org/resource/Sharon_Kao> <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?professional WHERE {
  ?person foaf:givenName ""Sharon"" .
  ?person foaf:familyName ""Kao"" .
  ?person dbo:bandMember ?band .
  ?band dbo:member ?lukeVibert .
  ?lukeVibert foaf:name ""Luke Vibert"" .
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
16,37,val,Give me the person born as Georgeanne Marie Rice and professional in the profession of the actor of Unnatural (TV series).,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v3 . ?v0 <http://dbpedia.org/property/occupation> ?v3 . <http://dbpedia.org/resource/Unnatural_(TV_series)> <http://dbpedia.org/property/starring> ?v0 . ?result <http://dbpedia.org/property/birthName> ""Georgeanne Marie Rice""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person WHERE {
  ?person foaf:givenName ""Georgeanne"" .
  ?person foaf:familyName ""Rice"" .
  ?person dbo:birthName ""Georgeanne Marie Rice"" .

  ?tvSeries dbo:title ""Unnatural (TV series)"" .
  ?tvSeries dbo:starring ?actor .
  
  FILTER (?person = ?actor)
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
92,18,val,Give me the band of Joseph Michael and associated musical artist of Jim Sheppard and band member of Nevermore.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Joseph_Michael> . <http://dbpedia.org/resource/Jim_Sheppard> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Nevermore> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandOfJosephMichael ?associatedArtistJimSheppard ?memberNevermore WHERE {
  # Find the band associated with Joseph Michael
  OPTIONAL { 
    ?person rdfs:label ""Joseph Michael""@en .
    ?person dbo:band ?bandOfJosephMichael .
  }

  # Find the musical artist associated with Jim Sheppard
  OPTIONAL {
    ?artist rdfs:label ""Jim Sheppard""@en .
    ?artist dbo:associatedBandMember ?associatedArtistJimSheppard .
  }
  
  # Find members of the band Nevermore
  OPTIONAL {
    dbr:Nevermore dbo:member ?person .
    ?person rdfs:label ?memberName .
    FILTER (lang(?memberName) = ""en"")
    BIND(str(?memberName) AS ?memberNevermore)
  }
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
915,14,val,"Give me the father of the child, that is a fictional character and a soap character, of the parent, that is a fictional character and a soap character, of Lizzie Spaulding.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoapCharacter>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. <http://dbpedia.org/resource/Lizzie_Spaulding> <http://dbpedia.org/ontology/parent> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoapCharacter>. ?v0 <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?father WHERE {
  # Lizzie Spaulding
  ?lizzie a dbo:FictionalCharacter ;
          dbp:name ""Lizzie Spaulding"" ;
          dbo:soapOpera ?so1 .

  # Parent of Lizzie Spaulding
  ?parent a dbo:FictionalCharacter ;
          dbo:child ?lizzie ;
          dbo:soapOpera ?so2 .

  # Child of the identified parent
  ?child a dbo:FictionalCharacter ;
         dbo:parent ?parent ;
         dbo:soapOpera ?so3 .

  # Father of this child
  ?father a dbo:FictionalCharacter ;
          dbo:spouse ?mother ;
          dbo:child ?child .
  
  FILTER(?so1 = ?so2 && ?so2 = ?so3) # Ensure all are from the same soap opera context
}
```",3,7,4,3,1,3,2,20,0,0,1,0,0.0,0
303,13,val,"Give me the entity in Panama and party of the commander, that is a politician, in United States invasion of Panama.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/party> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Panama> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/United_States_invasion_of_Panama> <http://dbpedia.org/ontology/commander> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity ?commander WHERE {
  ?event dbo:location dbr:Panama .
  ?event rdfs:label ""United States invasion of Panama""@en .
  
  ?commander dbo:participatedIn ?event ;
             a dbo:Politician ;
             dbo:profession dbr:Politician .

  OPTIONAL { ?entity dbo:commander ?commander . }
}
```",3,4,4,2,2,2,3,28,0,0,2,0,0.0,0
488,33,val,"Give me the death place of the father, that is a politician, of the father, that is an office holder, of Matsudaira Tadamasa and birth place of Enomoto Takeaki.",SELECT ?result WHERE { <http://dbpedia.org/resource/Enomoto_Takeaki> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Matsudaira_Tadamasa> <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/property/father> ?v3 . ?v3 <http://dbpedia.org/ontology/deathPlace> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?deathPlaceOfPoliticianFather ?birthPlaceOfEnomoto WHERE {
  # Find Matsudaira Tadamasa's father who is an office holder
  ?matsudairaTadamasa dbo:father ?officeHolderFather .
  FILTER (str(?matsudairaTadamasa) = ""Matsudaira_Tadamasa"")

  # Find the politician father of this office holder
  ?officeHolderFather dbo:father ?politicianGrandfather .

  # Get the death place of the politician grandfather
  ?politicianGrandfather dbo:deathPlace ?deathPlaceOfPoliticianFather .

  # Get Enomoto Takeaki's birthplace
  dbr:Enomoto_Takeaki dbo:birthPlace ?birthPlaceOfEnomoto .
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
281,26,val,"Give me the entity in the birth place, that is a country, of the leader, that is a politician, of 1962 New South Wales state election.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/birthPlace> ?v2 . <http://dbpedia.org/resource/1962_New_South_Wales_state_election> <http://dbpedia.org/property/leader> ?v1 . ?result <http://dbpedia.org/ontology/place> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity WHERE {
  ?election dbo:winner ?leader .
  ?election dbp:electionDate ?date .
  FILTER (CONTAINS(LCASE(STR(?date)), ""1962"") && CONTAINS(LCASE(STR(?election)), ""new south wales state election""))
  
  ?leader dbo:birthPlace ?birthPlace .
  ?birthPlace a dbo:Country .

  ?country dbo:name ?countryName .
  FILTER (?birthPlace = ?country) 

  ?entity dbo:location ?country .
}
```",3,5,4,3,1,3,3,71,0,0,1,0,0.0,0
391,25,val,"Give me the actor of the movie, that is a movie and a work and a television show, with Roz Ryan and actor of The Departed.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/property/starring> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Roz_Ryan> . <http://dbpedia.org/resource/The_Departed> <http://dbpedia.org/ontology/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?movie WHERE {
  ?movie a dbo:Film .
  ?movie dbo:starring dbr:Roz_Ryan .
  
  # Check if the movie is also associated with television
  OPTIONAL { ?movie dbo:adaptationOf ?tvShow . }
  
  # Find actors from ""The Departed""
  VALUES (?departedActor) {
    dbr:Leonardo_DiCaprio
    dbr:Matt_Damon
    dbr:Jack_Nicholson
    dbr:Mark_Wahlberg
    dbr:Martin_Sheen
  }
  
  ?movie dbo:starring ?departedActor .
}
```",3,6,4,2,2,3,3,71,0,0,1,0,0.0,0
994,28,val,Give me the associated musical artist of Red Tide (band) and associated musical artist of the associated musical artist of Watchtower (band) and band member of Don Dokken.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Don_Dokken> . <http://dbpedia.org/resource/Red_Tide_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Watchtower_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?redTideArtist ?watchtowerAssociatedArtist ?watchtowerSecondLevelArtist ?donDokkenBandMember WHERE {
  # Find associated musical artist of Red Tide (band)
  ?redTide dbo:associatedBand dbr:Red_Tide_(band) .
  ?redTide dbp:name ?redTideArtist .

  # Find associated musical artist of Watchtower (band)
  ?watchtowerAssociated dbo:associatedBand dbr:Watchtower_(band) .
  ?watchtowerAssociated dbp:name ?watchtowerAssociatedArtist .

  # Find the second level associated musical artist
  ?secondLevelAssociated dbo:associatedBand ?watchtowerAssociated .
  ?secondLevelAssociated dbp:name ?watchtowerSecondLevelArtist .

  # Find band member of Don Dokken
  ?donDokkenBandMember dbo:bandMember dbr:Don_Dokken .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
378,27,val,"Give me the claim to fame of the commander in the war, that is a military conflict and a societal event and an event, of Thomas Trigge.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/commander> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Thomas_Trigge> <http://dbpedia.org/ontology/battle> ?v1 . ?v2 <http://dbpedia.org/ontology/knownFor> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war ?claimToFame WHERE {
  ?trigge a dbo:MilitaryPerson ;
          foaf:name ""Thomas Trigge"" .
  
  ?commanderRole dbo:commander ?trigge ;
                 dbo:militaryConflict ?war .

  OPTIONAL { 
    ?war dbo:notableFor ?claimToFame .
  }

  FILTER (isLiteral(?claimToFame))
}
```",3,6,4,3,1,3,3,71,0,0,6,0,0.0,0
182,16,val,Give me the entity in the nationality of Tamara Kunanayakam and war of Mahesh Senanayake.,SELECT ?result WHERE { <http://dbpedia.org/resource/Mahesh_Senanayake> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Tamara_Kunanayakam> <http://dbpedia.org/ontology/nationality> ?v2 . ?result <http://dbpedia.org/ontology/place> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?nationalityEntity ?warEntity
WHERE {
  ?tamara_kunanayakam a dbo:Person ;
                      foaf:name ""Tamara Kunanayakam"" ;
                      dbo:nationality ?nationalityEntity .

  ?mahesh_senanayake a dbo:Person ;
                     foaf:name ""Mahesh Senanayake"" ;
                     dbo:associatedWith ?warEntity .
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
827,13,val,"Give me the child of the child, that is a royalty, of the parent of Charles Alexander, Grand Duke of Saxe-Weimar-Eisenach.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Charles_Alexander,_Grand_Duke_of_Saxe-Weimar-Eisenach> . ?v1 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://dbpedia.org/ontology/parent> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?royalChild WHERE {
  ?charlesAlexander a dbo:GrandDuke ;
                   foaf:name ""Charles Alexander, Grand Duke of Saxe-Weimar-Eisenach""@en .
  
  ?parent dbo:child ?charlesAlexander .

  ?parent dbo:child ?potentialRoyalChild .

  FILTER EXISTS { 
    ?potentialRoyalChild dbp:title ?title .
    FILTER (CONTAINS(LCASE(?title), ""king"") || CONTAINS(LCASE(?title), ""queen"") ||
            CONTAINS(LCASE(?title), ""prince"") || CONTAINS(LCASE(?title), ""duke"") ||
            CONTAINS(LCASE(?title), ""grand duke""))
  }

  BIND(?potentialRoyalChild AS ?royalChild)
}
```",3,4,4,3,1,3,2,20,0,0,8,0,0.0,0
492,19,val,"Give me the person decedent at the work of US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite and commander in Franco-Hova Wars.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> ?v0 . ?v0 <http://dbpedia.org/property/author> ""US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite""@en . <http://dbpedia.org/resource/Franco-Hova_Wars> <http://dbpedia.org/ontology/commander> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?predecessor ?commander WHERE {
  # Find predecessor of Joseph C. Satterthwaite as US Assistant Secretary of State for African Affairs
  dbr:Joseph_C._Satterthwaite dbo:positionHeld [
    a dbo:GovernmentPost ;
    dbo:officeHolder ?predecessor .
  ] .

  # Find a commander in the Franco-Hova Wars
  ?commander dbo:nationality ?nationality ;
             dbo:occupation dbr:Military_person ;
             dbo:wikiPageWikiLink dbr:Franco-Hova_Wars .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
696,13,val,"Give me the birth place of the member of the associated musical artist, that is an organisation and a group and a band, of The Boils.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. <http://dbpedia.org/resource/The_Boils> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/ontology/bandMember> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?memberBirthPlace WHERE {
  ?theBoils dbo:associatedMusicalArtist ?associatedArtist .
  FILTER (str(?theBoils) = ""The Boils""^^xsd:string)
  
  ?associatedArtist a ?type .
  FILTER (?type IN (dbo:Band, dbo:MusicalGroup, dbo:Organization))
  
  ?member dbo:bandMember ?associatedArtist .
  
  ?member foaf:birthPlace ?memberBirthPlace .
}
```",3,6,4,3,1,3,2,20,0,0,6,0,0.0,0
701,36,val,"Give me the spouse of the father of the commander, that is a royalty, in Battle of Perire and parent of Meritamen.",SELECT ?result WHERE { <http://dbpedia.org/resource/Meritamen> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/spouse> ?v1 . ?v0 <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Battle_of_Perire> <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
  ?battle dbp:name ""Battle of Perire"" .
  ?commander dbo:commanderOf ?battle .
  ?father dbo:child ?commander .
  ?father dbo:spouse ?spouse .
  ?spouse a dbo:Monarch . # Assuming royalty is represented by Monarch
  ?spouse dbo:child dbp:Meritamen .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
328,29,val,Give me the commander in the force of Ferenc Szálasi and awardee of Order of Suvorov and leader of People's Commissariat of Defense of the Soviet Union.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Order_of_Suvorov> . ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Ferenc_Szálasi> . ?v3 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/People's_Commissariat_of_Defense_of_the_Soviet_Union> <http://dbpedia.org/ontology/leader> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person dbo:commanderOf dbr:Ferenc_Szálasi .
  ?person dbo:award dbr:Order_of_Suvorov .
  ?person dbo:officeHolder dbr:People's_Commissar_for_Defence_of_the_Soviet_Union .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
404,21,val,"Give me the spouse of the person born, that is a royalty, as Princess Victoria Louise of Prussia and child of Ernest Augustus, Crown Prince of Hanover.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ernest_Augustus,_Crown_Prince_of_Hanover> . ?v1 <http://dbpedia.org/property/birthName> ""Princess Victoria Louise of Prussia""@en . ?v1 <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
  ?person dbp:name ""Victoria Louise of Prussia"" .
  ?person dbo:parent ?parent .
  ?parent rdfs:label ""Ernest Augustus, Crown Prince of Hanover""@en .
  ?person dbo:spouse ?spouse .
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
666,11,val,"Give me the player in the manager, that is a sports manager, of 2016–17 Hull City A.F.C. season and figure known as The Three Lions.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ""The Three Lions""@en . ?v2 <http://dbpedia.org/ontology/team> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. <http://dbpedia.org/resource/2016–17_Hull_City_A.F.C._season> <http://dbpedia.org/ontology/manager> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?hullManager ?englandManager WHERE {
  # Find the manager of Hull City A.F.C. during the 2016–17 season
  ?team a dbo:FootballClub ;
        rdfs:label ""Hull City A.F.C.""@en .
  
  ?managerPosition dbo:position ""Manager""@en ;
                   dbo:agent ?hullManager ;
                   dbo:clubTeam ?team .

  # Find the manager of England national football team (The Three Lions)
  ?englandTeam a dbo:NationalFootballTeam ;
               rdfs:label ""England national football team""@en .
  
  ?managerPosition2 dbo:position ""Manager""@en ;
                    dbo:agent ?englandManager ;
                    dbo:clubTeam ?englandTeam .

}
```",3,4,4,2,2,3,2,20,0,0,2,0,0.0,0
778,13,val,"Give me the entity in the award of the awardee, that is American, of Wolf Prize in Medicine.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Wolf_Prize_in_Medicine> . ?result <http://dbpedia.org/ontology/location> ?v1 . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/United_States>. ?v0 <http://dbpedia.org/property/awards> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?awardee WHERE {
  ?awardee dbo:award dbr:Wolf_Prize_in_Medicine .
  ?awardee dbo:country dbr:United_States .
}
```",3,4,4,3,1,3,2,20,0,0,18629,0,0.0,0
161,44,val,"Give me the commander in the force, that is an event, of Emilio Mola and military force of the force, that is a societal event and a military conflict, of Francisco Largo Caballero and military force of Rif War.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v4 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Rif_War> . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Emilio_Mola> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commanderMola ?forceLargoCaballero
WHERE {
  # Find the force commanded by Emilio Mola that is an event
  ?eventMola a dbo:MilitaryConflict ;
            dbo:commander dbr:Emilio_Mola .
  
  # Find the military force associated with Francisco Largo Caballero in a societal event and military conflict during the Rif War
  ?societalEvent a dbo:SocietalEvent, dbo:MilitaryConflict ;
                dbo:associatedWith dbr:Francisco_Largo_Caballero ;
                dbo:participatedIn dbr:Rif_War .
  
  # Link the force to Francisco Largo Caballero
  ?forceLargoCaballero dbo:commander dbr:Francisco_Largo_Caballero ;
                      dbo:participatedIn ?societalEvent .

  # Retrieve the commander of the force related to Emilio Mola
  ?eventMola dbo:commander ?commanderMola .
}
```",5,8,6,2,3,3,3,71,0,0,11,0,0.0,0
48,14,val,"Give me the band of the actor, that is a musical artist, of the show with Stacey Dash.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Stacey_Dash> . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/property/starring> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?actor ?band 
WHERE {
  ?show dbo:starring dbr:Stacey_Dash .
  ?show dbo:starring ?actor .
  
  ?actor a dbo:MusicalArtist .
  
  OPTIONAL { ?actor dbo:band ?band . }
}
```",3,4,4,3,1,3,2,20,0,13,36,0.0,0.0,0
659,25,val,"Give me the military force of the force, that is a societal event and an event and a military conflict, of Rutger Jan Schimmelpenninck and commander in Battle of Leipzig.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> . <http://dbpedia.org/resource/Battle_of_Leipzig> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce ?commander WHERE {
  # Find Rutger Jan Schimmelpenninck's military force
  dbr:Rutger_Jan_Schimmelpenninck dbo:militaryService ?militaryEntity .
  
  # Ensure the entity is a military force and also a societal event and military conflict
  ?militaryEntity rdf:type dbo:MilitaryUnit ;
                 dbo:wikiPageRedirects ?redirectedEntity .
  ?redirectedEntity rdf:type dbo:SocietalEvent, dbo:MilitaryConflict .

  # Find the commander of this military force at the Battle of Leipzig
  ?battle dbr:Battle_of_Leipzig ;
         dbo:commander ?commander .
  
  ?militaryForce dbo:commander ?commander ;
                 rdfs:label ?forceLabel .
  
  FILTER(CONTAINS(LCASE(?forceLabel), ""rutger jan schimmelpenninck""))
}
```",3,6,4,2,2,3,3,71,0,0,6,0,0.0,0
92,42,val,"Give me the band member of the reference, that is an artist, to Nevermore and band of the person born as Joseph Michael Furney and associated musical artist of Jim Sheppard.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://xmlns.com/foaf/0.1/name> ""Nevermore""@en . ?v1 <http://dbpedia.org/property/birthName> ""Joseph Michael Furney""@en . <http://dbpedia.org/resource/Jim_Sheppard> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/bandMember> ?v1 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?member ?artist ?sheppardBand ?associatedArtist
WHERE {
  # Find a band member of Nevermore who is also an artist
  ?member dbo:bandMember dbr:Nevermore .
  ?member dbo:occupation dbr:Musician .

  OPTIONAL { 
    ?member foaf:name ?artist .
  }

  # Find the band associated with Jim Sheppard (Joseph Michael Furney)
  dbr:Jim_Sheppard dbo:associatedBand ?sheppardBand .

  # Find any associated musical artists of Jim Sheppard
  dbr:Jim_Sheppard dbo:associatedMusicalArtist ?associatedArtist .
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
747,32,val,Give me the person born on the birth date of Pavlo Khudzik and band of the writer of Apollo (Hardwell song).,SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Pavlo_Khudzik> <http://dbpedia.org/ontology/birthDate> ?v1 . ?result <http://dbpedia.org/ontology/birthDate> ?v1 . <http://dbpedia.org/resource/Apollo_(Hardwell_song)> <http://dbpedia.org/property/writer> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person ?band 
WHERE {
  # Find Pavlo Khudzik's birth date
  VALUES ?pavloKhudzik { dbr:Pavlo_Khudzik }
  ?pavloKhudzik dbo:birthday ?birthDate .

  # Find another person born on the same date
  ?person dbo:birthday ?sameBirthDate .
  FILTER (?sameBirthDate = ?birthDate && ?person != ?pavloKhudzik)

  # Identify the writer of ""Apollo"" by Hardwell
  dbr:Apollo_(Hardwell_song) dbo:lyricsBy ?writer .

  # Find the band associated with that writer
  ?writer dbo:band ?band .
}
```",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
232,35,val,"Give me the child of the person born as John Devon Roland Pertwee and native of the residence, that is a settlement and British, of Sylvie Bermann.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . <http://dbpedia.org/resource/Sylvie_Bermann> <http://dbpedia.org/property/residence> ?v1 . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v2 <http://dbpedia.org/property/birthName> ""John Devon Roland Pertwee""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?child WHERE {
  # Identify John Pertwee
  ?john a dbo:Person ;
        foaf:givenName ""John"" ;
        foaf:familyName ""Pertwee"" .

  # Find Sylvie Bermann's British settlement residence
  ?sylvie a dbo:Person ;
          foaf:name ""Sylvie Bermann"" .
  
  ?residence dbo:nationality <http://dbpedia.org/resource/United_Kingdom> ;
             rdf:type dbo:Settlement ;
             dbo:resident ?sylvie .

  # Find the child of John Pertwee who is associated with this residence
  ?child dbo:parent ?john .
  
  OPTIONAL { 
    ?child dbo:residence ?residence .
  }
}
```",4,6,5,2,2,3,3,71,0,0,1,0,0.0,0
617,29,val,Give me the spouse of the child of Antiochus III the Great and parent of Nysa (wife of Pharnaces I of Pontus) and child of Antiochus III the Great.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Antiochus_III_the_Great> . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Nysa_(wife_of_Pharnaces_I_of_Pontus)> . <http://dbpedia.org/resource/Antiochus_III_the_Great> <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?spouse WHERE {
  ?person dbo:childOf dbr:Antiochus_III_the_Great .
  ?person dbo:parentOf dbr:Nysa_(wife_of_Pharaces_I_of_Pontus) .
  ?person dbo:spouse ?spouse .
}
```",4,4,5,2,3,3,3,71,0,0,2,0,0.0,0
427,26,val,Give me the party of the father of the alumnus of Massachusetts Institute of Technology.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Massachusetts_Institute_of_Technology> . ?v2 <http://dbpedia.org/ontology/party> ?result . ?v1 <http://dbpedia.org/property/father> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?fatherParty
WHERE {
  ?alumnus dbo:almaMater dbr:Massachusetts_Institute_of_Technology .
  ?alumnus foaf:parent ?father .
  ?father dbo:partyAffiliation ?fatherParty .
}
```",3,3,4,3,1,3,3,71,0,0,7,0,0.0,0
179,13,val,"Give me the person born as the birth name of the child, that is a royalty, of Nakkhatra Mangala.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Nakkhatra_Mangala> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child ?birthName WHERE {
  # Identify Nakkhatra Mangala
  dbr:Nakkhatra_Mangala dbo:child ?child .
  
  # Filter children who are royalty
  ?child a dbo:Monarch .

  # Retrieve the birth name of these royal children
  OPTIONAL { ?child dbo:birthName ?birthName }
}
```",3,4,4,3,1,3,2,20,0,0,1,0,0.0,0
378,28,val,"Give me the claim to fame of Louis des Balbes de Berton de Crillon, 1st Duke of Mahón and war of the person born as Carl Pontus Gahn and war of Joaquín Blake.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ""Carl Pontus Gahn""@en . ?v1 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Joaquín_Blake> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Louis_des_Balbes_de_Berton_de_Crillon,_1st_Duke_of_Mahón> <http://dbpedia.org/ontology/knownFor> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?claimToFame WHERE {
  VALUES ?person { 
    dbr:Louis_des_Balbes_de_Berton_de_Crillon_1st_Duke_of_Mahón
    dbr:C_P_Gahn
    dbr:Joaquín_Blake
  }
  
  OPTIONAL {
    ?person dbo:notableWork ?claimToFame .
  }

  FILTER (
    (?person = dbr:Louis_des_Balbes_de_Berton_de_Crillon_1st_Duke_of_Mahón && 
     (CONTAINS(LCASE(?claimToFame), ""napoleonic war"") || CONTAINS(LCASE(?claimToFame), ""military"")))
    ||
    (?person = dbr:C_P_Gahn && CONTAINS(LCASE(?claimToFame), ""chemistry""))
    ||
    (?person = dbr:Joaquín_Blake && CONTAINS(LCASE(?claimToFame), ""peninsular war"") || CONTAINS(LCASE(?claimToFame), ""military""))
  )
}
```",4,4,5,2,3,3,3,71,0,0,2,0,0.0,0
783,11,val,Give me the associated musical artist of the band member of Ofori Amponsah and band member of Ebony Reigns.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Ofori_Amponsah> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Ebony_Reigns> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT DISTINCT ?commonBandMember WHERE {
  ?ofoiriAmponsah dbo:bandMember ?commonBandMember .
  ?ebonyReigns dbo:bandMember ?commonBandMember .
  
  VALUES ?ofoiriAmponsah { <http://dbpedia.org/resource/Ofori_Amponsah> }
  VALUES ?ebonyReigns { <http://dbpedia.org/resource/Ebony_Reigns> }
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
659,37,val,"Give me the military force of Napoleonic Wars and commander in the war, that is an event and a military conflict, of the figure known, that is a military unit and an organisation, as 'Polish Horse'.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/property/nickname> ""'Polish Horse'""@en . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Napoleonic_Wars> . ?v0 <http://dbpedia.org/ontology/battle> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?militaryForce ?commander WHERE {
  # Identify the Napoleonic Wars as an event and military conflict
  ?event a dbo:MilitaryConflict ;
         rdfs:label ""Napoleonic Wars""@en .
  
  # Find military forces involved in the Napoleonic Wars
  ?militaryForce dbo:participatedIn ?event ;
                 a dbo:MilitaryUnit .

  # Identify the Polish Horse as a military unit and organization
  ?polishHorse rdfs:label ""Polish Horse""@en ;
               a dbo:MilitaryUnit, dbo:Organization .
  
  # Ensure the military force is associated with the Polish Horse
  ?militaryForce dbo:member ?polishHorse .

  # Find commanders of these forces
  ?commander dbo:commanded ?militaryForce ;
             rdfs:label ?commanderLabel .

  FILTER (lang(?commanderLabel) = ""en"")
}
```",4,8,5,3,2,3,3,71,0,0,29,0,0.0,0
421,15,val,Give me the band member of the awardee of [[#Awards and nominations and person born as Edin Dervišhalidović.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/awards> ""[[#Awards and nominations""@en . ?result <http://dbpedia.org/property/birthName> ""Edin Dervišhalidović""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandMember WHERE {
  # Identify Eminem's DBpedia resource
  VALUES ?eminem { dbr:Eminem }
  
  # Find awards or nominations linked to Eminem
  ?award dbo:recipient ?eminem .
  
  # Retrieve band members associated with Eminem through collaborations
  ?collaboration dbo:artist ?bandMember ;
                dbo:performer ?eminem .

}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
487,15,val,Give me the country of the administration of the person born on 1955-01-26 and administration of Phil Scott.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/leader> ?v0 . ?result <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/Phil_Scott> . ?v0 <http://dbpedia.org/ontology/birthDate> ""1955-01-26""^^<http://www.w3.org/2001/XMLSchema#date> . ?v1 <http://dbpedia.org/ontology/country> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?person1Country ?philScottCountry WHERE {
  # Query for the person born on 1955-01-26
  ?person1 dbo:birthday ""1955-01-26""^^xsd:date .
  OPTIONAL { 
    ?person1 dbo:office ?office1 .
    ?office1 dbo:country ?country1 .
    BIND(IRI(CONCAT(""http://dbpedia.org/resource/"", STR(?country1))) AS ?person1Country)
  }

  # Query for Phil Scott
  dbr:Phil_Scott dbo:birthday ?philScottBirthday .
  OPTIONAL { 
    dbr:Phil_Scott dbo:office ?office2 .
    ?office2 dbo:country ?country2 .
    BIND(IRI(CONCAT(""http://dbpedia.org/resource/"", STR(?country2))) AS ?philScottCountry)
  }
}
```",4,4,5,3,2,3,2,20,0,0,1,0,0.0,0
404,19,val,"Give me the parent of Prince Ernest Augustus of Hanover (born 1914) and spouse of the person born, that is a royalty, as Princess Victoria Louise of Prussia.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ""Princess Victoria Louise of Prussia""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Prince_Ernest_Augustus_of_Hanover_(born_1914)> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parent ?spouse WHERE {
  # Find the parent of Prince Ernest Augustus of Hanover born in 1914
  ?person a dbo:Person ;
          foaf:name ""Prince Ernest Augustus of Hanover""@en ;
          dbp:birthdayYear ""1914""^^xsd:gYear .
  
  ?person dbo:parent ?parent .

  # Find the spouse of Princess Victoria Louise of Prussia who is royalty
  ?princess a dbo:Person ;
            foaf:name ""Princess Victoria Louise of Prussia""@en .
  
  ?princess dbo:spouse ?spouse .
  
  FILTER EXISTS { ?spouse rdf:type dbo:RoyalFamilyMember } # Assuming royalty can be identified by this type

  # Check if the parent and spouse are the same person
  FILTER (?parent = ?spouse)
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
747,24,val,Give me the band of the writer of Apollo (Hardwell song) and band of Shèna.,SELECT ?result WHERE { <http://dbpedia.org/resource/Shèna> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Apollo_(Hardwell_song)> <http://dbpedia.org/property/writer> ?v2 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?hardwellWriterBand ?shenaBand WHERE {
  # Find the band of the writer of ""Apollo"" by Hardwell
  ?song dbo:title ""Apollo (Hardwell song)""@en .
  ?song dbo:writer ?writer .
  OPTIONAL { ?writer dbo:band ?hardwellWriterBand . }

  # Find the band associated with Shèna
  dbr:Shèna dbo:band ?shenaBand .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
54,18,val,Give me the parent of Thado Minsaw of Prome and child of Thinkhaya of Pagan and predecessor of Ameitta Thiri Maha Dhamma Dewi of Ava.,SELECT ?result WHERE { <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Ameitta_Thiri_Maha_Dhamma_Dewi_of_Ava> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?person WHERE {
  ?person dbo:parent <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> .
  ?person dbo:child <http://dbpedia.org/resource/Thinkhaya_of_Pagan> .
  ?person dbo:predecessor <http://dbpedia.org/resource/Ameitta_Thiri_Maha_Dhamma_Dewi_of_Ava> .
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
427,19,val,Give me the party of Giulio Andreotti and reference to the name of Italian People's Party (1994).,SELECT ?result WHERE { <http://dbpedia.org/resource/Italian_People's_Party_(1994)> <http://xmlns.com/foaf/0.1/name> ?v0 . <http://dbpedia.org/resource/Giulio_Andreotti> <http://dbpedia.org/ontology/party> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?party ?reference
WHERE {
  # Identify Giulio Andreotti and his party affiliation
  dbr:Giulio_Andreotti dbo:partyAffiliation ?party .
  
  # Check if the party is related to or mentions the Italian People's Party (1994)
  OPTIONAL { 
    ?party rdfs:label ?label .
    FILTER(CONTAINS(LCASE(?label), ""italian people's party"") && CONTAINS(LCASE(?label), ""1994""))
  }
  
  # Alternatively, check for any direct reference to the Italian People's Party (1994) in relation to Andreotti
  OPTIONAL {
    dbr:Giulio_Andreotti dbo:wikiPageRedirects ?redirect .
    ?redirect rdfs:label ?reference .
    FILTER(CONTAINS(LCASE(?reference), ""italian people's party"") && CONTAINS(LCASE(?reference), ""1994""))
  }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
747,37,val,"Give me the band of the writer of the work, that is a song, of Amba Shepherd and band of Shèna.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Amba_Shepherd> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Shèna> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/writer> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?ambasBand ?shenasBand WHERE {
  # Find the band associated with Amba Shepherd as a writer of songs
  ?work dbo:writer dbr:Amba_Shepherd .
  ?work dbo:musicalArtist ?band .
  BIND(?band AS ?ambasBand)

  # Find the band associated with Shèna
  ?shena dbo:musicalArtist ?band .
  FILTER (str(?shena) = ""Shèna"")
  BIND(?band AS ?shenasBand)
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
747,36,val,Give me the band of the person born as the persona of Shèna and person born on 1985-04-29.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Shèna> <http://xmlns.com/foaf/0.1/givenName> ?v0 . ?result <http://dbpedia.org/ontology/birthDate> ""1985-04-29""^^<http://www.w3.org/2001/XMLSchema#date> . ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?person ?bandLabel WHERE {
  # Find the person known by the persona ""Shèna""
  { 
    ?person a foaf:Person ;
            rdfs:label ?label .
    FILTER(CONTAINS(LCASE(?label), ""shèna""))
  }
  
  UNION
  
  # Find the person born on April 29, 1985
  {
    ?person a foaf:Person ;
            dbo:birthDate ?birthDate .
    FILTER(STRSTARTS(STR(?birthDate), ""1985-04-29""))
  }

  # Check if they are members of any band
  OPTIONAL { 
    ?person dbo:bandMember ?band .
    ?band rdfs:label ?bandLabel .
  }
}
```",4,4,5,3,2,3,3,71,1,30,0,0.03225806451612903,1.0,0.0625
10,12,val,Give me the professional in  and associated musical artist of Matt Colton and band member of Luke Vibert.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Luke_Vibert> . <http://dbpedia.org/resource/Matt_Colton> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?profession ?associatedArtist ?bandMember
WHERE {
  # Matt Colton's profession and associated musical artists
  { 
    ?mattColton a dbo:Person ;
                foaf:name ""Matt Colton"" .
    OPTIONAL { ?mattColton dbo:profession ?profession . }
    OPTIONAL { ?mattColton dbp:musicalArtist ?associatedArtist . }
  }

  # Luke Vibert's band memberships
  {
    ?lukeVibert a dbo:Person ;
                foaf:name ""Luke Vibert"" .
    OPTIONAL { ?lukeVibert dbo:bandMember ?bandMember . }
  }
}
```",3,3,4,1,3,2,3,28,0,0,1,0,0.0,0
528,28,val,Give me the war of the military force of Battle of Pisagua and war of Orozimbo Barbosa and force of Narciso Campero.,SELECT ?result WHERE { <http://dbpedia.org/resource/Orozimbo_Barbosa> <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Pisagua> . ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Narciso_Campero> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?warOfPisagua ?warOfBarbosa ?forceOfCampero WHERE {
  # Find the war associated with the Battle of Pisagua
  OPTIONAL { 
    dbr:Battle_of_Pisagua dbo:participatedIn ?warOfPisagua .
  }

  # Find the war involving Orozimbo Barbosa
  OPTIONAL { 
    dbr:Orozimbo_Barbosa dbo:participatedIn ?warOfBarbosa .
  }
  
  # Identify the military force or conflict related to Narciso Campero
  OPTIONAL {
    dbr:Narciso_Campero dbo:opposingMilitaryForce ?forceOfCampero .
  }
}
```",4,4,5,2,3,3,3,71,0,0,2,0,0.0,0
435,12,val,"Give me the work of Article 62, Section IV of Constitution of Iceland and region of Greenwich Mean Time and territory administered from Reykjavík.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Greenwich_Mean_Time> . ?result <http://dbpedia.org/property/author> ""Article 62, Section IV of Constitution of Iceland""@en . ?result <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Reykjavík> . }","```sparql
# Query for Article 62, Section IV of Constitution of Iceland
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?work WHERE {
    ?constitution dbr:Iceland/dbo:constitution .
    ?section dbo:title ""Article 62, Section IV"" ;
             dbo:text ?text .
    FILTER CONTAINS(LCASE(?text), ""work"")
}

# Query for regions of Greenwich Mean Time
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?region WHERE {
    ?timeZone a dbo:TimeZone ;
              dbp:name ""Greenwich Mean Time"" .
    ?location dbo:timeZone ?timeZone ;
              dbo:countryName ?region .
}

# Query for territories administered from Reykjavík
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?territory WHERE {
    ?administeredBy a dbo:AdministrativeRegion ;
                    dbo:capital dbr:Reykjavík .
    ?territory dbo:administratedBy ?administeredBy .
}
```",3,3,4,1,3,2,3,28,0,0,1,0,0.0,0
485,13,val,"Give me the birth place of Thomas Warner (poet) and entity in the region, that is a country, of Western European Time.",SELECT ?result WHERE { <http://dbpedia.org/resource/Thomas_Warner_(poet)> <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Western_European_Time> . ?result <http://dbpedia.org/ontology/country> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthPlace ?country WHERE {
  # Find the birth place of Thomas Warner (poet)
  dbr:Thomas_Warner_(poet) dbo:birthPlace ?birthPlace .

  # Get the country associated with the birth place
  ?birthPlace dbp:country ?country .

  # Filter countries that observe Western European Time
  ?country dbo:timeZone [
    rdf:type dbo:TimeZone ;
    dbp:name ""Western European Time"" .
  ]
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
487,11,val,Give me the country of the administration of Patricia McCoy and administration of Phil Scott.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/Phil_Scott> . ?v2 <http://dbpedia.org/ontology/country> ?result . ?v2 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Patricia_McCoy> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person ?position ?country
WHERE {
  VALUES ?person { 
    dbr:Patricia_McCoy 
    dbr:Phil_Scott 
  }
  
  ?person dbo:positionHeld ?position .
  ?position dbo:country ?country .
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
959,37,val,"Give me the native of the residence, that is a country, of the leader, that is a politician, of 2010 Japanese House of Councillors election and manager of 2013 Júbilo Iwata season.",SELECT ?result WHERE { <http://dbpedia.org/resource/2013_Júbilo_Iwata_season> <http://dbpedia.org/ontology/manager> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v1 <http://dbpedia.org/property/residence> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/2010_Japanese_House_of_Councillors_election> <http://dbpedia.org/property/leader> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?nativeCountryLeader ?nativeCountryManager WHERE {
  # Identify the leader of the 2010 Japanese House of Councillors election
  ?leader dbo:office ""Member of the House of Councillors"" ;
          dbo:election ""2010 Japanese House of Councillors election"" .
  
  # Determine this person's residence and check if it is a country
  ?leader dbp:residence ?residenceLeader .
  ?residenceLeader rdf:type dbr:Country .

  # Find the native country (birthplace) of this leader
  ?leader dbo:birthPlace ?nativeCountryLeader .

  # Identify the manager of Júbilo Iwata in 2013
  ?manager dbp:team ""Júbilo Iwata"" ;
           dbp:season ""2013"" ;
           dbo:position ""Manager"" .
  
  # Determine this person's residence and check if it is a country
  ?manager dbp:residence ?residenceManager .
  ?residenceManager rdf:type dbr:Country .

  # Find the native country (birthplace) of this manager
  ?manager dbo:birthPlace ?nativeCountryManager .
}
```",4,6,5,3,2,3,3,71,0,0,3,0,0.0,0
314,15,val,Give me the commander in Spanish Civil War and person deceased at the headquarter of House of Sombrerete.,SELECT ?result WHERE { <http://dbpedia.org/resource/House_of_Sombrerete> <http://dbpedia.org/ontology/location> ?v1 . ?result <http://dbpedia.org/ontology/restingPlace> ?v1 . <http://dbpedia.org/resource/Spanish_Civil_War> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?deceasedPerson WHERE {
  # Find the commander in the Spanish Civil War
  {
    SELECT DISTINCT ?commander WHERE {
      ?commander a dbo:MilitaryLeader ;
                dbo:spouseOrPartner ?relation .
      OPTIONAL { ?relation dbo:spouseOrPartner <http://dbpedia.org/resource/Francisco_Franco> . }
      FILTER regex(?commander, ""Spanish Civil War"", ""i"")
    }
  }

  UNION

  # Find the person deceased at the headquarters of House of Sombrerete
  {
    SELECT DISTINCT ?deceasedPerson WHERE {
      ?event dbo:location <http://dbpedia.org/resource/House_of_Sombrerete> ;
             dbo:deathPlace ?deceasedPerson .
      FILTER regex(?deceasedPerson, ""deceased"", ""i"")
    }
  }
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
701,19,val,Give me the parent of the child of Nefertari and parent of Henuttawy (19th dynasty).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Henuttawy_(19th_dynasty)> . ?v0 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Nefertari> <http://dbpedia.org/ontology/child> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?parentNefertariChild ?parentHenuttawyChild WHERE {
  # Find Nefertari's child and their parent
  ?childNefertari dbo:mother dbr:Nefertari ;
                 dbo:father ?fatherNefertari .
  OPTIONAL { ?childNefertari dbo:father dbr:Ramesses_II . }
  ?parentNefertariChild (dbo:mother|dbo:father) ?childNefertari .

  # Find Henuttawy's child and their parent
  ?childHenuttawy dbp:spouse ?henuttawy ;
                  dbo:child ?child .
  ?parentHenuttawyChild (dbo:mother|dbo:father) ?child .

  # Ensure both individuals are from the 19th dynasty
  FILTER(CONTAINS(LCASE(?childNefertari.dbp:reign), ""19th dynasty"") &&
         CONTAINS(LCASE(?childHenuttawy.dbp:reign), ""19th dynasty""))
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
391,38,val,"Give me the actor of the movie, that is a movie and a work and a television show, with Roz Ryan and actor of the claim to fame, that is a work, of Michael Ballhaus.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. <http://dbpedia.org/resource/Michael_Ballhaus> <http://dbpedia.org/ontology/knownFor> ?v3 . ?v2 <http://dbpedia.org/property/starring> ?result . ?v3 <http://dbpedia.org/ontology/starring> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Roz_Ryan> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actorOfMovie ?actorOfClaimToFame
WHERE {
  ?movie a dbo:Film ;
         dbo:starring dbr:Roz_Ryan ;
         rdf:type dbo:TelevisionShow ;
         rdf:type dbo:CreativeWork .

  ?claimToFame dbo:associatedWith dbr:Michael_Ballhaus ;
               rdf:type dbo:CreativeWork .

  ?actorOfMovie dbo:starring ?movie .
  ?actorOfClaimToFame dbo:starring ?claimToFame .
}
```",4,8,5,2,2,3,3,71,0,0,1,0,0.0,0
142,7,val,Give me the birthplace of George Tokoro and entity in the region of Japan Standard Time.,SELECT ?result WHERE { <http://dbpedia.org/resource/George_Tokoro> <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Japan_Standard_Time> . ?result <http://dbpedia.org/ontology/country> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX geo: <http://www.w3.org/2003/01/geo/wgs84_pos#>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthPlace ?entity WHERE {
  # Part to get George Tokoro's birthplace
  { 
    ?person dbo:name ""George Tokoro""@en .
    ?person dbo:birthPlace ?birthPlace .
  }
  
  UNION
  
  # Part to find entities in the region of Japan Standard Time (Japan)
  {
    ?entity dbp:timeZone ""Asia/Tokyo"" .
    OPTIONAL { ?entity geo:location ?location . FILTER(geo:lat(?location) >= 20 && geo:lat(?location) <= 45 && geo:long(?location) >= 130 && geo:long(?location) <= 150) }
  }
}
```",3,3,4,2,2,2,2,9,0,0,1,0,0.0,0
696,14,val,Give me the landmark at elevation of the award of the commander in Battle of Chishui River.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Battle_of_Chishui_River> <http://dbpedia.org/ontology/commander> ?v2 . ?result <http://dbpedia.org/ontology/elevation> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?landmark WHERE {
  # Find the Battle of Chishui River
  ?battle a dbo:Battle ;
          rdfs:label ""Battle of Chishui River""@en .
  
  # Identify the commander associated with this battle
  ?battle dbo:commander ?commander .

  # Determine any awards received by this commander in connection with the battle
  ?award dbo:recipient ?commander ;
         dbo:event ?battle .

  # Find the landmark at the elevation where the award was given
  ?award dbo:elevation ?elevation .
  
  # Assuming there is a property linking elevations to landmarks (this might need adjustment based on actual DBpedia schema)
  ?landmark dbo:elevation ?elevation ;
            rdfs:label ?landmarkLabel .

  FILTER(LANG(?landmarkLabel) = ""en"")
}
```",3,3,4,3,1,3,2,20,0,0,1731,0,0.0,0
55,17,val,"Give me the band of Newsted and band member of the band member, that is a band and a group, of San Francisco Symphony.",SELECT ?result WHERE { <http://dbpedia.org/resource/Newsted> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/San_Francisco_Symphony> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?member ?band ?group WHERE {
  # Identify Metallica as Newsted's band
  dbr:Metallica a dbo:Band ;
                dbo:bandMember ?newsted .
  
  # Find members of Metallica
  ?metallicaMember a dbo:MusicalArtist ;
                   dbo:bandMember dbr:Metallica .

  # Check if any member is part of another band that is also a group
  ?metallicaMember dbo:bandMember ?otherBand .
  ?otherBand a dbo:Band, dbo:Group .

  # Establish connection with San Francisco Symphony
  OPTIONAL {
    ?symphony dbr:San_Francisco_Symphony a dbo:MusicalArtist ;
              dbo:member ?connectedPerson .
    FILTER (?metallicaMember = ?connectedPerson)
  }

  BIND(?otherBand AS ?band)
  BIND(?metallicaMember AS ?member)
}
```",3,5,4,2,2,2,3,28,0,0,3,0,0.0,0
54,42,val,"Give me the parent of Thado Minsaw of Prome and child of the father of Soe Min Wimala Dewi and predecessor of the child, that is an office holder and a royalty, of Thihapate of Mohnyin.",SELECT ?result WHERE { <http://dbpedia.org/resource/Soe_Min_Wimala_Dewi> <http://dbpedia.org/property/father> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Thihapate_of_Mohnyin> . <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/successor> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parentOfThadoMinsaw WHERE {
  ?thadoMinsaw dbo:birthPlace dbp:Prome .
  ?thadoMinsaw dbo:parent ?parentOfThadoMinsaw .

  ?soeMinWimalaDewi dbo:father ?fatherOfSoeMinWimalaDewi .
  ?fatherOfSoeMinWimalaDewi dbo:child ?childOfFather .

  ?predecessor dbo:predecessor ?childOfFather .
  
  ?thihapate dbp:associatedWith dbp:Mohnyin .
  ?predecessor dbo:officeHolder true .
  ?predecessor dbo:royalty true .
  FILTER (?parentOfThadoMinsaw = ?predecessor)
}
```",5,7,6,2,3,3,3,71,0,0,1,0,0.0,0
378,23,val,Give me the war of the person born as the birth name of Carl Pontus Gahn.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ?v2 . ?v0 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/property/birthName> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?war WHERE {
  ?person foaf:givenName ""Carl"" .
  ?person foaf:familyName ""Gahn"" .
  ?person dbo:birthName ?birthName .
  ?person dbo:associatedWith ?association .
  ?association rdf:type dbo:War .
  BIND(?association AS ?war)
}
```",3,3,4,3,1,3,3,71,0,0,12,0,0.0,0
360,14,val,"Give me the writer of The Roaring Silence and native of the death place, that is a settlement, of Winnie Madikizela-Mandela.",SELECT ?result WHERE { <http://dbpedia.org/resource/Winnie_Madikizela-Mandela> <http://dbpedia.org/ontology/deathPlace> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . <http://dbpedia.org/resource/The_Roaring_Silence> <http://dbpedia.org/property/writer> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?writer ?deathPlaceSettlement WHERE {
  # Find the writer of ""The Roaring Silence""
  ?book dbp:title ""The Roaring Silence""@en .
  ?book dbo:author ?writer .

  # Find Winnie Madikizela-Mandela's death place and ensure it is a settlement
  ?person foaf:name ""Winnie Madikizela-Mandela"" .
  ?person dbo:deathPlace ?deathPlace .
  ?deathPlace rdf:type dbpedia-owl:Settlement .
  BIND(?deathPlace AS ?deathPlaceSettlement)
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
391,34,val,"Give me the actor of All About the Andersons and native of the figure known as the nick name of Jackson, Tennessee.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/nickname> ?v2 . <http://dbpedia.org/resource/Jackson,_Tennessee> <http://xmlns.com/foaf/0.1/nick> ?v2 . <http://dbpedia.org/resource/All_About_the_Andersons> <http://dbpedia.org/property/starring> ?result . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . }","```sparql
# Query for the actor of ""All About the Andersons""
SELECT ?actor WHERE {
  ?movie dbo:title ""All About the Andersons""@en .
  ?movie dbo:starring ?actor .
}

UNION

# Query to find the nickname of Jackson, Tennessee
SELECT DISTINCT ?nickname WHERE {
  dbpedia:Jackson,_Tennessee rdfs:label ?label .
  FILTER (LANG(?label) = 'en')
  OPTIONAL { 
    ?city dbo:nickname ?nickname .
    FILTER EXISTS { ?city owl:sameAs dbpedia:Jackson,_Tennessee }
  }
}

UNION

# Query to find natives of Jackson, Tennessee
SELECT DISTINCT ?person WHERE {
  ?person dbo:birthPlace dbpedia:Jackson,_Tennessee .
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
16,42,val,Give me the spouse of the person born as Ted Martin McGinley and professional in Actress and person born as the birth name of Gigi Rice.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/occupation> ""Actress""@en . ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Gigi_Rice> <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://dbpedia.org/property/birthName> ""Ted Martin McGinley""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person1 ?spouse1 ?person2 ?spouse2 WHERE {
  ?person1 a foaf:Person ;
           dbo:birthName ""Ted Martin McGinley"" ;
           dbo:profession ?profession .
  FILTER(CONTAINS(LCASE(?profession), ""actor"") || CONTAINS(LCASE(?profession), ""actress""))

  ?person1 dbo:spouse ?spouse1 .

  ?person2 a foaf:Person ;
           dbo:birthName ""Gigi Rice"" .

  ?person2 dbo:spouse ?spouse2 .
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
314,17,val,Give me the awardee of the award of Sergei Makovetsky and commander in Spanish Civil War.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ?v1 . <http://dbpedia.org/resource/Spanish_Civil_War> <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Sergei_Makovetsky> <http://dbpedia.org/property/awards> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?awardeeName WHERE {
  # Find the award received by Sergei Makovetsky
  dbr:Sergei_Makovetsky dbo:awardReceived ?award .
  
  # Find commanders in the Spanish Civil War who have received that same award
  ?commander a dbo:Person ;
             dbo:occupation ""Commander"" ;
             dbo:awardReceived ?award ;
             rdfs:label ?awardeeName .

  FILTER (LANG(?awardeeName) = 'en')
  
  # Ensure the commander is associated with the Spanish Civil War
  ?commander dbo:participatedIn dbr:Spanish_Civil_War .
}
```",3,3,4,2,2,2,3,28,0,0,2,0,0.0,0
360,13,val,"Give me the writer of the work, that is an album, of Dave Flett and native of Johannesburg.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Album>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Johannesburg> . ?v1 <http://dbpedia.org/property/author> ""Dave Flett""@en . ?v1 <http://dbpedia.org/property/writer> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?writer WHERE {
  ?album dbo:artist dbr:Dave_Flett .
  ?album dbo:composer ?writer .
  ?writer dbo:nationality dbr:South_Africa ;
          dbo:birthPlace dbr:Johannesburg .
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
184,33,val,"Give me the child of the child of the parent, that is a royalty, of Archduke Ladislaus Philipp of Austria and parent of Géza von Habsburg.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v3 . ?v3 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Géza_von_Habsburg> . <http://dbpedia.org/resource/Archduke_Ladislaus_Philipp_of_Austria> <http://dbpedia.org/ontology/parent> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?childOfChild WHERE {
  ?ladislausPhilipp dbo:parent ?parent .
  FILTER(STR(?ladislausPhilipp) = ""Archduke_Ladislaus_Philipp_of_Austria"") .

  ?sibling dbo:parent ?parent ;
           a dbo:Person ;
           dbp:royalty ?isRoyalty .
  
  ?childOfChild dbo:parent ?sibling .

  ?gezaVonHabsburg dbo:parent ?childOfChild .
  FILTER(STR(?gezaVonHabsburg) = ""Géza_von_Habsburg"") .

  FILTER EXISTS { ?sibling dbp:royalty ?isRoyalty }
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
427,32,val,Give me the party of the father of Lamberto Andreotti and reference to the name of Italian People's Party (1994).,SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v1 . <http://dbpedia.org/resource/Italian_People's_Party_(1994)> <http://xmlns.com/foaf/0.1/name> ?v1 . <http://dbpedia.org/resource/Lamberto_Andreotti> <http://dbpedia.org/property/father> ?v3 . ?v3 <http://dbpedia.org/ontology/party> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?fatherParty ?ipepName WHERE {
  # Lamberto Andreotti's father
  dbr:Lamberto_Andreotti dbo:father dbr:Giovanni_Andreotti .
  
  # Giovanni Andreotti's political party affiliation
  OPTIONAL { 
    dbr:Giovanni_Andreotti dbo:party ?fatherParty .
  }
  
  # Italian People's Party in 1994
  OPTIONAL {
    ?ipep dbo:name ""Italian People's Party""@en ;
          dbo:foundingDate ?foundingDate .
    FILTER (YEAR(?foundingDate) <= 1994 && YEAR(?foundingDate) >= 1990)
    BIND(str(?ipep) AS ?ipepName)
  }
}
```",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
16,31,val,Give me the spouse of the person born as the birth name of Ted McGinley and professional in Actress.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/occupation> ""Actress""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
  ?person a dbo:Actor ;
          foaf:name ""Ted McGinley"" ;
          dbp:birthName ?birthName .
  
  OPTIONAL { ?person dbo:spouse ?spouse . }
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
232,28,val,Give me the native of London and child of the person born as John Devon Roland Pertwee and actor of Dog Soldiers (film).,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ""John Devon Roland Pertwee""@en . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/London> . ?v1 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Dog_Soldiers_(film)> <http://dbpedia.org/ontology/starring> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  ?person dbo:birthName ""John Devon Roland Pertwee""@en .
  ?person dbo:child ?child .

  ?child dbo:nativePlace dbr:London .
  
  ?film dbo:title ""Dog Soldiers""@en ;
        dbo:starring ?child .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
747,33,val,"Give me the band of the writer of the work, that is a song, of Amba Shepherd and person born on 1985-04-29.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/birthDate> ""1985-04-29""^^<http://www.w3.org/2001/XMLSchema#date> . ?v0 <http://dbpedia.org/property/writer> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Amba_Shepherd> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band WHERE {
  ?song dbo:composer dbr:Amba_Shepherd .
  ?person dbo:birthDate ""1985-04-29""^^xsd:date ;
          dbo:composer ?song .
  ?person dbo:band ?band .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
959,40,val,"Give me the manager of 2013 Júbilo Iwata season and member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of the person born in 1958 and native of Japan.","SELECT ?result WHERE { <http://dbpedia.org/resource/2013_Júbilo_Iwata_season> <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v3 <http://dbpedia.org/ontology/birthYear> ""1958""^^<http://www.w3.org/2001/XMLSchema#gYear> . ?v3 <http://dbpedia.org/ontology/almaMater> ?v1 . ?result <http://dbpedia.org/ontology/team> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Japan> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?manager ?almaMater WHERE {
  ?manager a dbo:Person ;
           dbo:nationality dbr:Japan ;
           dbo:birthYear ""1958""^^xsd:gYear ;
           dbo:managerTeam dbr:Júbilo_Iwata ;
           dbo:managerStartYear ""2013""^^xsd:gYear .
  
  ?almaMater a dbo:EducationalInstitution, dbo:University ;
             dbo:country dbr:Japan ;
             dbo:alumni ?manager .

}
```",5,9,6,3,3,3,3,71,0,0,1,0,0.0,0
378,34,val,"Give me the war of the person born as the birth name of Carl Pontus Gahn and claim to fame of Louis des Balbes de Berton de Crillon, 1st Duke of Mahón.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/property/birthName> ?v2 . ?v1 <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Louis_des_Balbes_de_Berton_de_Crillon,_1st_Duke_of_Mahón> <http://dbpedia.org/ontology/knownFor> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war WHERE {
  ?war a dbo:MilitaryConflict ;
      rdfs:label ?label .
  FILTER(CONTAINS(LCASE(?label), ""napoleonic wars""))
}
```",4,4,5,3,2,3,3,71,0,5,2,0.0,0.0,0
485,12,val,Give me the birth place of Thomas Warner (poet) and entity in Nottinghamshire and entity in United Kingdom.,SELECT ?result WHERE { <http://dbpedia.org/resource/Thomas_Warner_(poet)> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Nottinghamshire> . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?birthPlace ?nottinghamshireEntity ?ukEntity WHERE {
  # Query for Thomas Warner's birthplace
  OPTIONAL { 
    dbr:Thomas_Warner_(poet) dbo:birthPlace ?birthPlace .
  }
  
  # Query for entities in Nottinghamshire
  OPTIONAL {
    ?nottinghamshireEntity a dbo:Place ;
                          dbo:locatedIn dbr:Nottinghamshire .
  }

  # Query for entities in the United Kingdom
  OPTIONAL {
    ?ukEntity a dbo:Place ;
              dbo:locatedIn dbr:United_Kingdom .
  }
}
```",3,3,4,1,3,2,3,28,0,0,1,0,0.0,0
767,36,val,"Give me the entity in Baden-Württemberg and reference to the alter ego of the persona, that is a fictional character, of Matthew Burland.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/state> <http://dbpedia.org/resource/Baden-Württemberg> . ?v0 <http://dbpedia.org/property/alterEgo> ""Matthew Burland""@en . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v0 <http://dbpedia.org/property/alterEgo> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?entityInBadenWurttemberg ?alterEgo
WHERE {
  # Find entities in Baden-Württemberg
  ?entityInBadenWurttemberg dbo:country dbr:Germany ;
                            dbo:stateOrProvince dbr:Baden-Württemberg .

  # Find Matthew Burland and his fictional characters (alter egos)
  dbr:Matthew_Burland dbo:authorOf ?fictionalCharacter .
  
  # Link the fictional character to an alter ego
  ?fictionalCharacter dbp:name ?alterEgo .
}
```",4,5,5,3,2,3,3,71,0,0,7,0,0.0,0
959,19,val,"Give me the native of Japan and member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of Eiji Ōtsuka.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Eiji_Ōtsuka> <http://dbpedia.org/ontology/almaMater> ?v2 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Japan> . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?result <http://dbpedia.org/ontology/team> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?almaMater
WHERE {
  dbr:Eiji_Ōtsuka dbo:almaMater ?almaMater .
  ?almaMater rdf:type dbpedia-ja:組織 ;
             rdf:type dbpedia-ja:大学 ;
             rdf:type dbpedia-ja:教育機関 .
  OPTIONAL { ?almaMater dbp:country dbr:Japan . }
}
```",3,7,4,2,2,3,3,71,0,0,84,0,0.0,0
487,13,val,Give me the country of the administration of the person born on 1955-01-26.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthDate> ""1955-01-26""^^<http://www.w3.org/2001/XMLSchema#date> . ?v1 <http://dbpedia.org/ontology/country> ?result . ?v1 <http://dbpedia.org/property/leader> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX wd: <http://www.wikidata.org/entity/>
PREFIX wdt: <http://www.wikidata.org/prop/direct/>

SELECT DISTINCT ?countryLabel WHERE {
  ?person dbo:birthday ""1955-01-26""^^xsd:date .
  ?person dbo:occupation ?administration .
  ?administration wdt:P17 ?country .
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
```",3,3,4,3,1,3,2,20,0,0,1,0,0.0,0
820,15,val,Give me the professional in the award of the author of Understanding Comics and child of Jack Schwartzman.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Jack_Schwartzman> . <http://dbpedia.org/resource/Understanding_Comics> <http://dbpedia.org/ontology/author> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?professional WHERE {
  ?author foaf:name ""Scott McCloud""@en .
  ?work dbo:author ?author ;
        rdfs:label ""Understanding Comics""@en .
  ?child dbo:parent ?parent ;
         foaf:name ""Scott McCloud""@en .
  ?parent foaf:name ""Jack Schwartzman""@en .
  ?author foaf:profession ?professional .
}
```",4,4,5,3,2,3,2,20,0,0,1,0,0.0,0
827,15,val,"Give me the father of William Ernest, Grand Duke of Saxe-Weimar-Eisenach and child of the child, that is a royalty, of the parent of Charles Alexander, Grand Duke of Saxe-Weimar-Eisenach.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/parent> ?v0 . ?v1 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/William_Ernest,_Grand_Duke_of_Saxe-Weimar-Eisenach> <http://dbpedia.org/property/father> ?result . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Charles_Alexander,_Grand_Duke_of_Saxe-Weimar-Eisenach> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?childOfChild
WHERE {
  # Step 1: Find William Ernest and his father
  ?williamErnest a dbo:GrandDuke ;
                foaf:name ""William Ernest, Grand Duke of Saxe-Weimar-Eisenach"" .
  
  ?fatherOfWillianErnest dbo:child ?williamErnest .

  # Step 2: Find Charles Alexander and his father
  ?charlesAlexander a dbo:GrandDuke ;
                   foaf:name ""Charles Alexander, Grand Duke of Saxe-Weimar-Eisenach"" .
  
  ?fatherOfCharlesAlexander dbo:child ?charlesAlexander .

  # Step 3: Identify a royal child from Charles Alexander's father
  ?royalChild dbo:child ?fatherOfCharlesAlexander ;
              rdf:type dbo:RoyalPerson .

  # Step 4: Find the child of this royal person
  ?childOfChild dbo:child ?royalChild .
}
```",4,5,5,3,2,3,2,20,0,0,1,0,0.0,0
391,26,val,"Give me the actor of the claim to fame, that is a work, of the spouse of Sherry Hormann.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/knownFor> ?v2 . <http://dbpedia.org/resource/Sherry_Hormann> <http://dbpedia.org/ontology/spouse> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/ontology/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?actor WHERE {
  ?sherry a dbo:Person ;
          foaf:name ""Sherry Hormann""@en .
  
  ?spouse dbo:spouse ?sherry ;
          foaf:name ?spouseName .

  OPTIONAL { 
    ?work dbo:creator ?spouse ;
          rdf:type ?type .
    
    FILTER(?type IN (dbo:Film, dbo:Book)) # Assuming claim to fame is a film or book

    ?work dbo:starring ?actor .
  }
}
```",3,4,4,3,1,3,3,71,0,0,20,0,0.0,0
659,19,val,"Give me the commander in Battle of Leipzig and commander in the force of Arthur Wellesley, 1st Duke of Wellington.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Arthur_Wellesley,_1st_Duke_of_Wellington> . <http://dbpedia.org/resource/Battle_of_Leipzig> <http://dbpedia.org/ontology/commander> ?result . }","```sparql
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT DISTINCT ?battleCommander ?wellingtonCommander WHERE {
  # Commander in the Battle of Leipzig
  ?battleEvent a dbo:Battle ;
               dbp:name ""Battle of Leipzig"" .
  ?battleEvent dbp:commander ?battleCommander .

  # Commander under Arthur Wellesley, 1st Duke of Wellington
  ?wellingtonEvent a dbo:MilitaryConflict ;
                   dbp:commander ""Arthur Wellesley, 1st Duke of Wellington""@en .
  ?wellingtonEvent dbp:opponent ?opponent .
  ?opponent dbp:commander ?wellingtonCommander .

}
```",3,3,4,2,2,3,3,71,0,0,19,0,0.0,0
617,33,val,"Give me the child of Antiochus III the Great and spouse of the child of the successor, that is a royalty, of Antiochus (son of Antiochus III the Great).",SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Antiochus_III_the_Great> . ?v0 <http://dbpedia.org/ontology/child> ?v3 . <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/successor> ?v0 . ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Antiochus III the Great's child (Antiochus IV Epiphanes)
  dbr:Antiochus_IV_Epiphanes dbo:parent dbr:Antiochus_III_the_Great .
  
  # Seleucus IV Philopator is the successor of Antiochus III
  dbr:Seleucus_IV_Philopator dbo:successorOf dbr:Antiochus_III_the_Great .

  # Child of Seleucus IV (e.g., Antiochus V Eupator)
  ?child dbo:parent dbr:Seleucus_IV_Philopator .
  
  # Marriage relationship
  ?child dbo:spouse ?spouse .
  
  # Ensure the spouse is royalty and matches Antiochus IV Epiphanes
  FILTER (?spouse = dbr:Antiochus_IV_Epiphanes) .

  # Check if the spouse has a royal title or status
  OPTIONAL { ?spouse dbo:title ?title . }
}
```",4,5,5,3,2,3,3,71,0,0,4,0,0.0,0
617,12,val,"Give me the parent of the father, that is a royalty, of Richeza of Poland, Queen of Hungary and child of Doubravka of Bohemia.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v0 . <http://dbpedia.org/resource/Richeza_of_Poland,_Queen_of_Hungary> <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Doubravka_of_Bohemia> <http://dbpedia.org/ontology/child> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?grandfather WHERE {
  ?richeza dbo:childOf ?mother .
  ?mother dbp:name ""Doubravka of Bohemia"" .
  
  ?richeza dbp:father ?father .
  
  ?father dbo:parent ?grandfather .

  FILTER EXISTS { 
    ?grandfather (dbo:royaltyTitle|dbo:monarch) ?title .
  }
}
```",3,4,4,2,2,3,2,20,0,0,1,0,0.0,0
281,29,val,"Give me the war of Beauchamp Seymour, 1st Baron Alcester and entity in the birth place, that is a country, of Bob Heffron and war of New Zealand Army.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> ?v3 . <http://dbpedia.org/resource/Beauchamp_Seymour,_1st_Baron_Alcester> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Bob_Heffron> <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/New_Zealand_Army> <http://dbpedia.org/ontology/battle> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX geo: <http://www.w3.org/2003/01/geo/wgs84_pos#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?warOfBeauchampSeymour ?countryOfBirthBobHeffron ?warOfNewZealandArmy
WHERE {
  # War involving Beauchamp Seymour, 1st Baron Alcester
  dbpedia:Beauchamp_Seymour_1st_Baron_Alcester dbo:participatedIn ?warOfBeauchampSeymour .

  # Country of birth for Bob Heffron
  dbpedia:Bob_Heffron dbo:birthPlace ?birthPlace .
  ?birthPlace geo:country ?countryOfBirthBobHeffron .

  # War involving the New Zealand Army
  dbpedia:New_Zealand_Army dbo:participatedIn ?warOfNewZealandArmy .
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
959,35,val,"Give me the manager of the team of Takashi Sekizuka and member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of Eiji Ōtsuka.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?result <http://dbpedia.org/ontology/team> ?v1 . ?v0 <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Eiji_Ōtsuka> <http://dbpedia.org/ontology/almaMater> ?v1 . ?v0 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Takashi_Sekizuka> . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?manager WHERE {
  # Find the team associated with Takashi Sekizuka
  ?team dbo:player dbr:Takashi_Sekizuka .
  
  # Identify the manager of that team
  ?team dbo:coach ?manager .

  # Find Eiji Ōtsuka's alma mater, which is a Japanese university and organization
  ?almaMater dbo:country dbr:Japan ;
             rdf:type dbo:University ;
             rdf:type dbo:Organisation .
  
  # Check if the manager attended this alma mater
  ?manager dbo:almaMater ?almaMater .

  # Ensure Eiji Ōtsuka's alma mater is the same as above
  ?eijiAlmaMater dbo:almaMater dbr:Eiji_Ōtsuka ;
                 rdf:type dbo:University ;
                 rdf:type dbo:Organisation .
  
  FILTER (?almaMater = ?eijiAlmaMater)
}
```",4,8,5,2,2,3,3,71,0,0,2,0,0.0,0
55,13,val,"Give me the band member of the producer, that is a band, of Used to Love Her and band member of Metallica.",SELECT ?result WHERE { <http://dbpedia.org/resource/Used_to_Love_Her> <http://dbpedia.org/ontology/producer> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Metallica> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commonMember WHERE {
  # Find the producer of ""Used to Love Her""
  ?song dbo:title ""Used to Love Her"" .
  ?song dbo:producer ?producer .

  # Check if this producer is a band member
  ?producer dbo:bandMember ?producerBand .

  # Get all members of Metallica
  dbr:Metallica dbo:member ?metallicaMember .

  # Find common members between the producer's band and Metallica
  ?producerBand dbo:member ?commonMember .
  FILTER (?commonMember = ?metallicaMember)
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
182,13,val,Give me the war of Jagath Dias and war of the author of 2019 Sri Lanka Easter bombings.,SELECT ?result WHERE { <http://dbpedia.org/resource/2019_Sri_Lanka_Easter_bombings> <http://dbpedia.org/property/author> ?v1 . ?v1 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Jagath_Dias> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war1 ?war2 WHERE {
  # Find the war associated with Jagath Dias
  ?person a dbo:Person ;
          foaf:name ""Jagath Dias""@en .
  OPTIONAL { ?person dbo:participatedIn ?war1 . }

  # Find the war associated with Zahran Hashim, author of the Easter bombings
  ?author a dbo:Person ;
          foaf:name ""Zahran Hashim""@en .
  OPTIONAL { ?author dbo:participatedIn ?war2 . }
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
435,17,val,"Give me the work of Article 62, Section IV of Constitution of Iceland and region of the time zone in Bombali Shebora Chiefdom.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/author> ""Article 62, Section IV of Constitution of Iceland""@en . <http://dbpedia.org/resource/Bombali_Shebora_Chiefdom> <http://dbpedia.org/ontology/timeZone> ?v1 . ?result <http://dbpedia.org/ontology/timeZone> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?work WHERE {
  # Part 1: Work of Article 62, Section IV of Constitution of Iceland
  OPTIONAL {
    ?constitution a dbo:Constitution ;
                  dbo:country dbr:Iceland ;
                  dbo:article ""Article 62"" .
    ?section rdfs:label ""Section IV""@en .
    ?work dbo:relatedTo ?section .
    FILTER(CONTAINS(LCASE(?work), ""article 62 section iv""))
  }
  
  # Part 2: Region of the time zone in Bombali Shebora Chiefdom
  OPTIONAL {
    ?chiefdom a dbo:AdministrativeRegion ;
              rdfs:label ""Bombali Shebora Chiefdom""@en .
    ?location dbo:locatedIn ?chiefdom .
    ?timeZone dbo:timezone ?location .
    ?region rdfs:label ?timeZoneLabel .
    FILTER(CONTAINS(LCASE(?timeZoneLabel), ""bombali shebora chiefdom""))
  }
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
617,34,val,"Give me the parent of Nysa (wife of Pharnaces I of Pontus) and child of the child, that is a royalty, of the successor, that is a royalty, of Antiochus II Theos.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Nysa_(wife_of_Pharnaces_I_of_Pontus)> . ?result <http://dbpedia.org/property/father> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> ?v2 . <http://dbpedia.org/resource/Antiochus_II_Theos> <http://dbpedia.org/ontology/successor> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parentOfNysa ?childOfParent ?successor ?childOfSuccessor WHERE {
  # Step 1: Identify Nysa's parent
  ?nysa dbo:spouse ?pharnacesI .
  ?pharnacesI dbp:succeededBy ?parentOfNysa .

  # Step 2: Find the child of Nysa's parent that is royalty
  ?childOfParent dbo:parent ?parentOfNysa .
  ?childOfParent dbo:royalty true .

  # Step 3: Identify Antiochus II Theos' successor who is royalty
  ?antiochusII dbp:succeededBy ?successor .
  ?successor dbo:royalty true .

  # Step 4: Find the child of the successor that is royalty
  ?childOfSuccessor dbo:parent ?successor .
  ?childOfSuccessor dbo:royalty true .

  # Ensure there's a parent-child relationship between the two individuals found
  FILTER(?childOfParent = ?childOfSuccessor)
}
```",4,6,5,3,2,3,3,71,0,0,2,0,0.0,0
54,39,val,"Give me the parent of Thado Minsaw of Prome and predecessor of the child, that is an office holder and a royalty, of the reference to Thihapate of Mohnyin.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Thihapate of Mohnyin""@en . <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/successor> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parentOfThadoMinsaw ?predecessor
WHERE {
  # Find Thado Minsaw of Prome and his parent
  ?thadoMinsaw a dbo:Person ;
               dbp:name ""Thado Minsaw"" ;
               dbp:placeOfBirth dbp:Prome .
  
  ?thadoMinsaw dbo:parent ?parentOfThadoMinsaw .

  # Find Thihapate of Mohnyin and his child
  ?thihapate a dbo:Person ;
             dbp:name ""Thihapate"" ;
             dbp:placeOfBirth dbp:Mohnyin .
  
  ?child dbo:parent ?thihapate .

  # Find the predecessor of that child who is an office holder and royalty
  ?predecessor dbo:successor ?child ;
               a dbo:Person ;
               (dbo:officeHolder|dbo:royalty) true .
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
294,19,val,"Give me the entity in Nashville, Tennessee and resting place of the awardee, that is a politician, of Distinguished Service Medal (U.S. Army) and resting place of Edwin A. Keeble.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Nashville,_Tennessee> . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Distinguished_Service_Medal_(U.S._Army)> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Edwin_A._Keeble> <http://dbpedia.org/ontology/restingPlace> ?result . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?entity WHERE {
  ?medal dbo:awardee ?entity .
  ?medal dbo:awardType dbr:Distinguished_Service_Medal_(U.S._Army) .
  ?entity a dbo:Politician .
  ?entity dbo:restingPlace ?place .
  ?place dbp:location dbr:Nashville,_Tennessee .

  ?keeblesRestingPlace dbo:restingPlace dbr:Edwin_A._Keeble .
  FILTER (?place = ?keeblesRestingPlace)
}
```",4,5,5,2,3,2,3,28,0,0,1,0,0.0,0
767,22,val,Give me the reference to the alter ego of Black Hood and entity in Baden-Württemberg.,SELECT ?result WHERE { <http://dbpedia.org/resource/Black_Hood> <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://dbpedia.org/ontology/state> <http://dbpedia.org/resource/Baden-Württemberg> . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?alterEgo ?entityInBW WHERE {
  # Find the alter ego of Black Hood
  dbr:Black_Hood dbo:aliasName ?alterEgo .
  
  # Find entities in Baden-Württemberg
  ?entityInBW dbo:location dbr:Baden-Württemberg .

  OPTIONAL {
    # Check if there's any connection between the alter ego and an entity in BW
    ?alterEgo dbo:wikiPageRedirects ?relatedEntity .
    FILTER (?relatedEntity = ?entityInBW)
  }
}
```",3,3,4,2,2,3,3,71,0,0,7,0,0.0,0
547,24,val,Give me the resting place of Alan Cunningham and resting place of the actor of Enemy at the Door.,SELECT ?result WHERE { <http://dbpedia.org/resource/Enemy_at_the_Door> <http://dbpedia.org/property/starring> ?v2 . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Alan_Cunningham> <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?alanCunninghamBurialSite ?actorName ?actorBurialSite WHERE {
  # Alan Cunningham's resting place
  OPTIONAL { 
    dbr:Alan_Cunningham dbo:deathPlace ?alanDeathPlace .
    ?alanDeathPlace dbo:burialPlace ?alanCunninghamBurialSite .
  }

  # Actor of ""Enemy at the Door""
  OPTIONAL {
    dbr:Enemy_at_the_Door dbo:actor ?actorResource .
    ?actorResource rdfs:label ?actorName ;
                  dbo:deathPlace ?actorDeathPlace .
    ?actorDeathPlace dbo:burialPlace ?actorBurialSite .
    
    FILTER (lang(?actorName) = 'en')
  }
}
```",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
391,24,val,"Give me the actor of the claim to fame, that is a work, of Michael Ballhaus and actor of All About the Andersons.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/All_About_the_Andersons> <http://dbpedia.org/property/starring> ?result . ?v2 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Michael_Ballhaus> <http://dbpedia.org/ontology/knownFor> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  # Michael Ballhaus' notable work
  dbr:Goodfellas dbo:director dbr:Martin_Scorsese .
  
  # Cast of Goodfellas
  ?goodfellasActor dbo:film dbr:Goodfellas ;
                  a dbo:FilmActor ;
                  dbo:actor dbr:John_Travolta .

  # Cast of All About the Andersons
  ?andersonsActor dbo:film dbr:All_About_the_Andersons ;
                  a dbo:FilmActor ;
                  dbo:actor dbr:John_Travolta .
  
  FILTER (?goodfellasActor = ?andersonsActor)
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
547,35,val,Give me the resting place of the awardee of Knight Grand Cross of the Order of St Michael and St George and resting place of the child of James Burton (property developer).,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_St_Michael_and_St_George> . <http://dbpedia.org/resource/James_Burton_(property_developer)> <http://dbpedia.org/ontology/child> ?v2 . ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?awardeeRestingPlace ?childRestingPlace WHERE {
  # Find the awardee of Knight Grand Cross of the Order of St Michael and St George
  ?person dbo:award dbr:Knight_Grand_Cross_of_the_Order_of_St_Michael_and_St_George .
  
  # Get their resting place
  ?person dbo:placeOfBurial ?awardeeRestingPlace .

  # Find James Burton's child
  ?burton foaf:name ""James Burton"" ;
          foaf:child ?child .

  # Get the child's resting place
  ?child dbo:placeOfBurial ?childRestingPlace .
}
```",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
801,40,val,Give me the associated musical artist of Chris Taylor (music producer) and producer of Westside Story (song) and professional in the alter ego of the true self of The Shadow.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Westside_Story_(song)> <http://dbpedia.org/ontology/producer> ?result . ?v2 <http://xmlns.com/foaf/0.1/givenName> ""The Shadow""@en . <http://dbpedia.org/resource/Chris_Taylor_(music_producer)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v1 . ?v2 <http://dbpedia.org/property/alterEgo> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commonEntity WHERE {
  # Chris Taylor (music producer)
  ?chrisTaylor a dbo:MusicProducer ;
               foaf:name ""Chris Taylor"" .
  
  ?chrisArtist dbo:associatedMusicalArtist ?chrisTaylor .

  # Producer of Westside Story (song)
  ?westsideSong dbr:Westside_Story_(song) ;
                dbo:producer ?producerOfWestside .

  # Professional in the alter ego of The Shadow
  ?shadowAlterEgo a dbo:Person ;
                  foaf:name ""Lamont Cranston"" .
  
  ?professionalIdentity dbo:profession ?shadowAlterEgo .

  # Find common entity among them
  FILTER (?chrisArtist = ?producerOfWestside && ?producerOfWestside = ?professionalIdentity)
  BIND(?producerOfWestside AS ?commonEntity)
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
778,15,val,"Give me the author of Chroot and entity in the award of the awardee, that is American, of Wolf Prize in Medicine.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/location> ?v1 . ?v0 <http://dbpedia.org/property/awards> ?v1 . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/United_States>. ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Wolf_Prize_in_Medicine> . <http://dbpedia.org/resource/Chroot> <http://dbpedia.org/ontology/author> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?author ?awardEntity
WHERE {
  # Find the author of Chroot
  ?chroot dbo:author ?author .
  FILTER (str(?chroot) = ""Chroot"")

  # Find individuals who have won the Wolf Prize in Medicine
  ?person dbo:award ?award .
  ?award dbp:name ""Wolf Prize in Medicine""@en .

  # Filter for American awardees
  ?person dbo:nationality dbr:United_States .

  # Ensure the person is the same as the author of Chroot
  FILTER (?author = ?person)

  # Get entities related to the award
  ?award dbo:recipient ?person .
  ?award ?property ?awardEntity .
}
```",4,5,5,3,2,3,2,20,0,0,1,0,0.0,0
92,41,val,"Give me the band member of the reference, that is an artist, to Nevermore and associated musical artist of the person born, that is an artist, as Jim Sheppard and band of Joseph Michael.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Joseph_Michael> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://xmlns.com/foaf/0.1/name> ""Nevermore""@en . ?v4 <http://dbpedia.org/property/birthName> ""Jim Sheppard""@en . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandMember ?associatedArtist ?josephsBand
WHERE {
  # Find band members of Nevermore who are also artists
  ?person dbo:bandMember dbr:Nevermore .
  ?person a dbo:MusicalArtist .

  # Get the associated musical artist for Jim Sheppard
  OPTIONAL { 
    ?sheppard a dbo:Person ;
              foaf:name ""Jim Sheppard"" ;
              dbo:associatedBand ?associatedArtist .
  }

  # Get the band of Joseph Michael
  OPTIONAL {
    ?joseph a dbo:Person ;
            foaf:name ""Joseph Michael"" ;
            dbo:bandMember ?josephsBand .
  }
  
  FILTER (?person = ?sheppard || ?person = ?joseph)
}
```",5,7,6,2,3,3,3,71,0,0,1,0,0.0,0
959,43,val,"Give me the member of University of Tsukuba and native of the residence, that is a country, of the leader, that is a politician, of 2010 Japanese House of Councillors election and manager of 2013 Júbilo Iwata season.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/University_of_Tsukuba> . <http://dbpedia.org/resource/2013_Júbilo_Iwata_season> <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/property/residence> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . <http://dbpedia.org/resource/2010_Japanese_House_of_Councillors_election> <http://dbpedia.org/property/leader> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?member
WHERE {
  # Identify the leader of the 2010 Japanese House of Councillors election
  ?politician dbo:office ""Member of the House of Councillors""@en;
              dbo:election ""2010 Japanese House of Councillors election""@en.
  
  # Determine their country of origin
  ?politician dbp:nationality ?country.

  # Find the manager of Júbilo Iwata for the 2013 season
  ?manager dbo:position ""Manager""@en;
           dbo:team dbr:Júbilo_Iwata;
           dbo:season ""2013""@en.
  
  # Locate a University of Tsukuba alumnus who is native to this country
  ?member dbo:almaMater dbr:University_of_Tsukuba;
          dbp:nationality ?country.

}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
994,31,val,Give me the associated musical artist of the associated musical artist of the reference to Watchtower and associated musical artist of Red Tide (band).,"SELECT ?result WHERE { <http://dbpedia.org/resource/Red_Tide_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://xmlns.com/foaf/0.1/name> ""Watchtower""@en . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?commonArtist WHERE {
  # Find the associated artist of Watchtower
  ?watchtowerArtist dbo:associatedBand dbr:Watchtower .
  
  # Find the associated artist of Red Tide
  ?redTideArtist dbo:associatedBand dbr:Red_Tide_(band) .

  # Check if there is a common artist associated with both bands
  ?commonArtist dbo:associatedBand ?watchtowerArtist .
  ?commonArtist dbo:associatedBand ?redTideArtist .
}
```",4,4,5,3,2,3,3,71,0,0,3,0,0.0,0
314,19,val,Give me the commander in Spanish Civil War and person deceased at the headquarter of House of Sombrerete and awardee of 30.,"SELECT ?result WHERE { <http://dbpedia.org/resource/House_of_Sombrerete> <http://dbpedia.org/ontology/location> ?v2 . <http://dbpedia.org/resource/Spanish_Civil_War> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/property/awards> ""30""^^<http://www.w3.org/2001/XMLSchema#integer> . ?result <http://dbpedia.org/ontology/restingPlace> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person WHERE {
    # Commander in the Spanish Civil War
    ?person dbo:occupation dbr:Military_commander .
    ?person dbo:nationality dbr:Spain .
    ?person dbo:birthPlace ?placeBirth .
    ?person dbo:deathPlace ?placeDeath .
    
    # Deceased at the headquarter of House of Sombrerete
    FILTER(?placeDeath = dbr:House_of_Sombrerete)

    # Awardee of 30 (assuming this refers to a specific award)
    OPTIONAL {
        ?person dbo:awardReceived ?award .
        ?award dbo:number ""30""^^xsd:string .
    }
    
    # Ensure the person is deceased
    FILTER EXISTS { ?person dbo:dateOfDeath ?dateDeath . }

}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
294,15,val,"Give me the entity in Nashville, Tennessee and resting place of the awardee, that is a politician, of Distinguished Service Medal (U.S. Army).","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Nashville,_Tennessee> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Distinguished_Service_Medal_(U.S._Army)> . ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?politician ?restingPlace WHERE {
  ?politician a dbo:Politician ;
             dbo:residence dbr:Nashville,_Tennessee ;
             dbo:honoraryAward dbr:Distinguished_Service_Medal_(U.S._Army) .
  
  OPTIONAL { ?politician dbo:deathPlace ?restingPlace . }
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
294,13,val,"Give me the resting place of Edwin A. Keeble and resting place of the awardee, that is a politician, of Distinguished Service Medal (U.S. Army).",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Distinguished_Service_Medal_(U.S._Army)> . <http://dbpedia.org/resource/Edwin_A._Keeble> <http://dbpedia.org/ontology/restingPlace> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?keeblesBurialPlace ?awardeeName ?awardeesBurialPlace WHERE {
  # Find Edwin A. Keeble's burial place
  OPTIONAL {
    dbr:Edwin_A._Keeble dbo:burialPlace ?keeblesBurialPlace .
  }

  # Find a politician who received the Distinguished Service Medal (U.S. Army)
  OPTIONAL {
    ?awardee dbo:occupation dbr:Politician ;
            dbo:awardReceived dbr:Distinguished_Service_Medal_(United_States_Army) ;
            rdfs:label ?awardeeName .
    FILTER(LANG(?awardeeName) = 'en')
    
    # Get the burial place of this awardee
    OPTIONAL {
      ?awardee dbo:burialPlace ?awardeesBurialPlace .
    }
  }
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
184,28,val,Give me the child of Archduke Joseph August of Austria and parent of Archduchess Ilona of Austria and parent of the native of Budapest.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Ilona_of_Austria> . ?result <http://dbpedia.org/ontology/child> ?v1 . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_August_of_Austria> . ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Budapest> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Find the child of Archduke Joseph August
  ?child dbo:parent dbr:Archduke_Joseph_August_of_Austria .
  
  # Check if this person is a parent of Archduchess Ilona
  ?person dbo:parent ?ilonaChild .
  ?ilonaChild rdfs:label ""Ilona, Archduchess of Austria""@en .

  # Ensure the same person is also a parent of someone native to Budapest
  ?person dbo:child ?budaChild .
  ?budaChild dbo:nativePlace dbr:Budapest .

  # Bind the child found in step 1 as the person we are looking for
  FILTER (?child = ?person)
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
767,40,val,"Give me the entity in the administration, that is a settlement, of the writer of Where It's At (Dustin Lynch album) and alma mater of Carl L. Nippert and reference to .","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://xmlns.com/foaf/0.1/name> """"@en . <http://dbpedia.org/resource/Carl_L._Nippert> <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://dbpedia.org/ontology/state> ?v1 . <http://dbpedia.org/resource/Where_It's_At_(Dustin_Lynch_album)> <http://dbpedia.org/property/writer> ?v2 . ?v1 <http://dbpedia.org/property/leaderParty> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?settlement WHERE {
  # Find the writer of ""Where It's At""
  ?song dbo:title ""Where It's At"" ;
        dbo:writer ?writer .
  
  # Find Carl L. Nippert's alma mater
  ?nippert foaf:name ""Carl L. Nippert"" ;
          foaf:almaMater ?almaMater .

  # Ensure the settlement is part of both entities' administration
  ?settlement dbo:settlement ?writer .
  ?settlement dbo:settlement ?almaMater .

  # Filter to ensure it's a settlement
  ?settlement rdf:type dbo:Settlement .
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
179,12,val,Give me the parent of the child of Bhumibol Adulyadej and person born as Mom Rajawongse Sirikit Kitiyakara.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Mom Rajawongse Sirikit Kitiyakara""@en . <http://dbpedia.org/resource/Bhumibol_Adulyadej> <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://dbpedia.org/ontology/parent> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent
WHERE {
  # Identify the child of Bhumibol Adulyadej and Mom Rajawongse Sirikit Kitiyakara
  ?child dbo:father dbr:Bhumibol_Adulyadej ;
         dbo:mother dbr:Mom_Rajawongse_Sirikit_Kitiyakara .
  
  # Ensure the child is Crown Prince Maha Vajiralongkorn (Rama X)
  FILTER(?child = dbr:Crown_Prince_Maha_Vajiralongkorn)

  # Retrieve the parents of this child
  ?parent dbo:child ?child .

  # Limit to one parent for clarity, as both will be returned
  LIMIT 2
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
488,34,val,"Give me the administration of Emperor Go-Yōzei and birth place of the commander in the war, that is a military conflict and an event and a societal event, of Saitō Hajime.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/commander> ?v1 . ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Emperor_Go-Yōzei> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Saitō_Hajime> <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?administrationPeriod ?birthPlace WHERE {
  # Find the administration period of Emperor Go-Yōzei
  dbr:Emperor_Go-Yōzei dbo:reign ?administrationPeriod .

  # Identify Saitō Hajime as a commander in the Battle of Sekigahara
  dbr:Saitō_Hajime dbo:commanderOf dbr:Battle_of_Sekigahara .

  # Retrieve the birthplace of Saitō Hajime
  dbr:Saitō_Hajime dbo:birthPlace ?birthPlace .
}
```",4,7,5,3,2,3,3,71,0,0,1,0,0.0,0
488,30,val,Give me the death place of Tokugawa Ieyasu and administration of the father of Emperor Go-Mizunoo and birth place of Enomoto Takeaki.,SELECT ?result WHERE { <http://dbpedia.org/resource/Tokugawa_Ieyasu> <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Emperor_Go-Mizunoo> <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Enomoto_Takeaki> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/property/leader> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?deathPlaceTokugawaIeyasu ?administrationToyotomiHideyoshi ?birthPlaceEnomotoTakeaki
WHERE {
  # Tokugawa Ieyasu's death place
  dbr:Tokugawa_Ieyasu dbo:deathPlace ?deathPlaceTokugawaIeyasu .

  # Toyotomi Hideyoshi's administration (title)
  dbr:Toyotomi_Hideyoshi dbo:title ?administrationToyotomiHideyoshi .

  # Enomoto Takeaki's birthplace
  dbr:Enomoto_Takeaki dbo:birthPlace ?birthPlaceEnomotoTakeaki .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
184,39,val,Give me the parent of the child of the parent of Archduchess Margaret of Austria (born 1925) and child of Archduke Joseph August of Austria.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v1 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Margaret_of_Austria_(born_1925)> . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_August_of_Austria> . ?v1 <http://dbpedia.org/property/father> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?childOfGrandparent WHERE {
  # Step 1: Find Archduchess Margaret's parent
  ?margaret dbo:birthYear ""1925""^^xsd:gYear ;
           rdfs:label ""Archduchess Margaret of Austria""@en .
  
  ?margaret dbo:parent ?parent .

  # Step 2: Find a child of this parent (could be a sibling)
  ?sibling dbo:parent ?parent .

  # Step 3: Find the grandparent
  ?parent dbo:parent ?grandparent .

  # Step 4: Find all children of the grandparent
  ?childOfGrandparent dbo:parent ?grandparent .

  # Step 5: Ensure this child is also a child of Archduke Joseph August
  ?josephAugust rdfs:label ""Archduke Joseph August of Austria""@en .
  
  ?josephAugustChild dbo:parent ?josephAugust ;
                     owl:sameAs ?childOfGrandparent .

}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
16,43,val,Give me the person born as Georgeanne Marie Rice and spouse of Ted McGinley and professional in the profession of the actor of Unnatural (TV series).,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v4 . <http://dbpedia.org/resource/Unnatural_(TV_series)> <http://dbpedia.org/property/starring> ?v0 . ?v0 <http://dbpedia.org/property/occupation> ?v4 . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/birthName> ""Georgeanne Marie Rice""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person dbo:birthName ""Georgeanne Marie Rice"" .
  ?person dbo:spouse dbr:Ted_McGinley .
  ?series dbo:title ""Unnatural (TV series)"" ;
          dbo:actor ?person .
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
488,32,val,"Give me the birth place of the commander in Boshin War and death place of the father, that is a politician, of Yūki Hideyasu.",SELECT ?result WHERE { <http://dbpedia.org/resource/Yūki_Hideyasu> <http://dbpedia.org/property/father> ?v3 . <http://dbpedia.org/resource/Boshin_War> <http://dbpedia.org/ontology/commander> ?v1 . ?v3 <http://dbpedia.org/ontology/deathPlace> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace ?deathPlace WHERE {
  # Find the commander in the Boshin War and their birthplace
  ?commander a dbo:MilitaryPerson ;
             dbo:participatedInBattle ?boshinWar .
  ?boshinWar rdfs:label ""Boshin War""@en .

  OPTIONAL { ?commander dbo:birthPlace ?birthPlace . }

  # Find Yūki Hideyasu and his father
  dbr:Yūki_Hideyasu dbo:father ?father .

  # Ensure the father is a politician
  ?father a dbo:Politician ;
          dbo:deathPlace ?deathPlace .
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
617,14,val,"Give me the parent of the father, that is a royalty, of the reference, that is a royalty, to Richeza of Poland.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/father> ?v0 . ?v2 <http://xmlns.com/foaf/0.1/name> ""Richeza of Poland""@en . ?result <http://dbpedia.org/ontology/child> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?grandparent WHERE {
  ?richeza dbo:father ?father .
  FILTER(STRSTARTS(STR(?richeza), ""http://dbpedia.org/resource/Richeza_of_Poland""))
  
  ?father rdf:type dbo:Monarch .

  ?father dbo:father ?grandfather .
  ?grandfather rdf:type dbo:Monarch .

  ?grandfather dbo:parent ?grandparent .
  FILTER(STRSTARTS(STR(?grandparent), ""http://dbpedia.org/resource/"")) 
}
```",3,5,4,3,1,3,2,20,0,0,4,0,0.0,0
435,16,val,Give me the work of the author of Iceland and territory administered from Reykjavík.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Reykjavík> . <http://dbpedia.org/resource/Iceland> <http://dbpedia.org/property/author> ?v2 . ?result <http://dbpedia.org/property/author> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?author ?work WHERE {
  # Find the author of a work titled ""Iceland""
  ?work dbo:title ""Iceland""@en .
  ?work dbo:author ?author .

  # Ensure the territory is administered from Reykjavík
  OPTIONAL { 
    ?territory dbo:administrativeCapital dbr:Reykjavík .
    ?territory rdfs:label ?adminTerritoryLabel FILTER (lang(?adminTerritoryLabel) = 'en') .
  }

  # Retrieve works of the identified author
  ?authorWork dbo:author ?author .
  ?authorWork rdfs:label ?workLabel FILTER (lang(?workLabel) = 'en') .

  # Ensure we only get results where a territory is administered from Reykjavík
  FILTER EXISTS { ?territory dbo:administrativeCapital dbr:Reykjavík }
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
182,19,val,Give me the war of Jagath Dias and entity in Sri Lanka and war of the author of 2019 Sri Lanka Easter bombings.,SELECT ?result WHERE { <http://dbpedia.org/resource/Jagath_Dias> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/2019_Sri_Lanka_Easter_bombings> <http://dbpedia.org/property/author> ?v2 . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Sri_Lanka> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war ?author
WHERE {
  # Query for the war involving Jagath Dias
  OPTIONAL {
    ?person rdfs:label ""Jagath Dias""@en.
    ?person dbo:nationality dbr:Sri_Lanka.
    ?person dbo:memberOf dbr:Liberation_Tigers_of_Tamil_Eelam.
    ?war dbo:participatedIn ?person.
    ?war rdfs:label ?warLabel.
    FILTER(CONTAINS(LCASE(?warLabel), ""sri lankan civil war""))
  }
  
  # Query for the author of the 2019 Sri Lanka Easter bombings
  OPTIONAL {
    ?event dbo:date ?date.
    ?event dbo:location dbr:Sri_Lanka.
    ?event rdfs:label ?eventLabel.
    FILTER(CONTAINS(LCASE(?eventLabel), ""easter bombings"") && YEAR(?date) = 2019)
    ?person dbo:leaderOf ?event.
    ?person rdfs:label ?authorLabel.
    FILTER(CONTAINS(LCASE(?authorLabel), ""zahran hashim""))
  }
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
404,25,val,"Give me the parent of Prince Ernest Augustus of Hanover (born 1914) and child of the father of Ernest Augustus, Duke of Brunswick.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Prince_Ernest_Augustus_of_Hanover_(born_1914)> . <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/ontology/parent> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?commonEntity WHERE {
  # Find the parent of Prince Ernest Augustus of Hanover (born 1914)
  ?prince dbp:birthYear ""1914""^^xsd:gYear ;
          dbo:child ?parent1 .
  
  # Find the father of Ernest Augustus, Duke of Brunswick
  ?duke dbp:name ""Ernest Augustus, Duke of Brunswick""@en ;
        dbo:child ?fatherOfDuke .

  # Find a common entity that is both the parent of Prince Ernest Augustus and a child of the father of Ernest Augustus, Duke of Brunswick
  ?commonEntity dbo:parent ?parent1 .
  ?commonEntity dbo:child ?fatherOfDuke .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
161,19,val,"Give me the military force of the force, that is a societal event and an event and a military conflict, of Francisco Franco and military force of Spanish Civil War.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Franco> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v0 . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce WHERE {
  # Identify Francisco Franco's resource
  dbr:Francisco_Franco dbo:militaryConflict dbr:Spanish_Civil_War .
  
  # Retrieve the military force associated with Francisco Franco during the Spanish Civil War
  dbr:Francisco_Franco dbo:commander ?militaryForce .

  # Ensure the military force is part of a societal event and a military conflict
  ?militaryForce dbo:type ?type .
  FILTER EXISTS { ?militaryForce dbo:participatedIn dbr:Spanish_Civil_War }
  FILTER (?type = dbo:MilitaryUnit || ?type = dbo:SocietalEvent)
}
```",3,6,4,2,2,3,3,71,0,0,514,0,0.0,0
10,19,val,"Give me the associated musical artist of the person born, that is an artist, as Matt Colton and band member of Luke Vibert and professional in .","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Luke_Vibert> . ?v3 <http://dbpedia.org/property/birthName> ""Matt Colton""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?person ?name
WHERE {
  ?person dbo:associatedBandMember <http://dbpedia.org/resource/Luke_Vibert> .
  ?person dbo:collaborator <http://dbpedia.org/resource/Matt_Colton> .
  ?person rdfs:label ?name .
  FILTER (LANG(?name) = 'en')
}
```",4,5,5,2,3,2,3,28,0,0,1,0,0.0,0
767,20,val,Give me the alma mater of the administration of George K. Nash and entity in Baden-Württemberg.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://dbpedia.org/ontology/state> <http://dbpedia.org/resource/Baden-Württemberg> . ?v2 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/George_K._Nash> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?almaMater ?location WHERE {
  # Find George K. Nash's alma mater
  dbr:George_K._Nash dbo:almaMater ?almaMater .
  
  # Ensure the alma mater is an entity in Baden-Württemberg
  ?almaMater dbo:location ?location .
  FILTER(CONTAINS(LCASE(?location), ""baden-württemberg""))
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
783,13,val,Give me the associated musical artist of the band member of the person born as Samuel Ofori Amponsah.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ""Samuel Ofori Amponsah""@en . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?artist WHERE {
  # Identify Shaggy's DBpedia resource
  dbr:Shaggy a dbo:MusicalArtist .

  # Find bands that Shaggy is a member of
  ?band dbo:bandMember dbr:Shaggy .
  
  # Find other artists associated with the same band
  ?artist dbo:associatedBand ?band .
  
  FILTER(?artist != dbr:Shaggy)
}
```",3,3,4,3,1,3,2,20,0,0,35,0,0.0,0
54,21,val,Give me the predecessor of Ameitta Thiri Maha Dhamma Dewi of Ava and child of the father of Soe Min Wimala Dewi.,SELECT ?result WHERE { <http://dbpedia.org/resource/Soe_Min_Wimala_Dewi> <http://dbpedia.org/property/father> ?v1 . ?v1 <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Ameitta_Thiri_Maha_Dhamma_Dewi_of_Ava> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?predecessor ?child
WHERE {
  # Find Ameitta Thiri Maha Dhamma Dewi of Ava and her predecessor
  ?ameitta a dbo:Monarch ;
           rdfs:label ""Ameitta Thiri Maha Dhamma Dewi of Ava""@en .
  
  ?predecessor dbo:successor ?ameitta .

  # Find Soe Min Wimala Dewi's father
  ?soeminwimala a dbo:Person ;
                rdfs:label ""Soe Min Wimala Dewi""@en .
  
  ?father dbo:child ?soeminwimala .

  # Find another child of the same father (excluding Soe Min Wimala Dewi)
  ?child dbo:parent ?father .
  FILTER (?child != ?soeminwimala)
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
184,36,val,Give me the parent of Géza von Habsburg and parent of the child of the parent of Archduchess Margaret of Austria (born 1925).,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Géza_von_Habsburg> . ?result <http://dbpedia.org/ontology/child> ?v1 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Margaret_of_Austria_(born_1925)> . },"```sparql
# Query 1: Parent(s) of Géza von Habsburg
SELECT ?parent WHERE {
    ?person dbo:birthName ""Géza von Habsburg""@en .
    ?child dbo:child ?person .
    ?child dbo:parent ?parent .
}

UNION

# Query 2: Parent(s) of the child(ren) of the parent of Archduchess Margaret of Austria (born 1925)
SELECT ?grandparent WHERE {
    ?margaret dbo:birthDate ?date ;
              rdfs:label ""Archduchess Margaret of Austria""@en .
    FILTER(YEAR(?date) = 1925) .
    
    ?child dbo:child ?margaret .
    ?child dbo:parent ?parent .

    ?grandchild dbo:child ?parent .
    ?grandchild dbo:parent ?grandparent .
}
```",4,4,5,3,2,3,3,71,0,0,2,0,0.0,0
547,31,val,Give me the resting place of Simon Cadell and resting place of the child of the child of William Haliburton.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> ""William Haliburton""@en . <http://dbpedia.org/resource/Simon_Cadell> <http://dbpedia.org/ontology/restingPlace> ?result . ?v0 <http://dbpedia.org/ontology/restingPlace> ?result . ?v1 <http://dbpedia.org/ontology/child> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

# Query to find the resting place of Simon Cadell
SELECT ?restingPlace WHERE {
  dbr:Simon_Cadell dbo:deathPlace ?deathPlace .
  OPTIONAL { dbr:Simon_Cadell dbo:burialPlace ?burialPlace . }
  BIND(COALESCE(?burialPlace, ?deathPlace) AS ?restingPlace)
}

UNION

# Query to find the resting place of the child of the child of William Haliburton
SELECT ?greatGrandchildRestingPlace WHERE {
  dbr:William_Haliburton dbo:child ?child .
  ?child dbo:child ?grandChild .
  ?grandChild dbo:child ?greatGrandchild .
  
  OPTIONAL { ?greatGrandchild dbo:deathPlace ?greatGrandchildDeathPlace . }
  OPTIONAL { ?greatGrandchild dbo:burialPlace ?greatGrandchildBurialPlace . }
  BIND(COALESCE(?greatGrandchildBurialPlace, ?greatGrandchildDeathPlace) AS ?greatGrandchildRestingPlace)
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
767,34,val,"Give me the entity in the administration, that is a settlement, of the writer of Where It's At (Dustin Lynch album) and reference to .","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/leaderParty> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://xmlns.com/foaf/0.1/name> """"@en . ?result <http://dbpedia.org/ontology/state> ?v1 . <http://dbpedia.org/resource/Where_It's_At_(Dustin_Lynch_album)> <http://dbpedia.org/property/writer> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?settlement WHERE {
  # Find the birthplace of Dustin Lynch
  dbr:Dustin_Lynch dbo:birthPlace ?birthPlace .
  
  # Ensure that the birth place is an administrative entity
  ?birthPlace a dbo:AdministrativeRegion .

  # Find settlements within this administrative region
  ?settlement a dbo:Settlement ;
              dbo:partOf ?birthPlace .
}
```",4,5,5,3,2,3,3,71,0,0,8,0,0.0,0
391,29,val,"Give me the actor of the claim to fame, that is a work, of Michael Ballhaus and native of Compton, California and actor of All About the Andersons.","SELECT ?result WHERE { <http://dbpedia.org/resource/All_About_the_Andersons> <http://dbpedia.org/property/starring> ?result . ?v3 <http://dbpedia.org/ontology/starring> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Michael_Ballhaus> <http://dbpedia.org/ontology/knownFor> ?v3 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Compton,_California> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  ?work dbo:director dbr:Michael_Ballhaus .
  ?work dbo:actor ?actor .
  ?actor dbo:birthPlace dbr:Compton,_California .
  ?actor dbo:title ?title .
  FILTER(CONTAINS(LCASE(STR(?title)), ""all about the andersons""))
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
801,41,val,"Give me the producer of the work, that is a musical work and a song and a work, of 50 Cent and associated musical artist of Chris Taylor (music producer) and professional in the alter ego of The Shadow.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. <http://dbpedia.org/resource/Chris_Taylor_(music_producer)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/50_Cent> . ?v4 <http://dbpedia.org/ontology/producer> ?result . ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?work ?producer ?associatedArtist WHERE {
  ?work a dbo:Songs .
  ?work dbo:producer dbr:50_Cent .
  ?work dbo:associatedMusicalArtist ?artist .
  
  OPTIONAL { ?artist rdfs:label ""The Shadow""@en . }
  FILTER (EXISTS { ?artist rdfs:label ""Chris Taylor (music producer)""@en } || 
          EXISTS { ?artist rdfs:label ""The Shadow""@en })
}
```",5,8,6,2,3,3,3,71,0,0,1,0,0.0,0
251,16,val,Give me the location of Battle of Marengo and death place of the author of The Twelve Abbots of Challant.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Twelve_Abbots_of_Challant> <http://dbpedia.org/property/author> ?v2 . <http://dbpedia.org/resource/Battle_of_Marengo> <http://dbpedia.org/ontology/place> ?result . ?v2 <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?battleLocation ?authorDeathPlace WHERE {
  # Query for the location of the Battle of Marengo
  ?battle a dbo:Battle ;
          rdfs:label ""Battle of Marengo""@en .
  ?battle dbp:location ?battleLocation .

  # Query for the death place of the author of The Twelve Abbots of Challant
  ?book dbo:author ?author ;
        rdfs:label ""The Twelve Abbots of Challant""@en .
  ?author dbo:deathPlace ?authorDeathPlace .
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
994,26,val,"Give me the associated musical artist of the band member, that is a band and a group and an organisation, of the band, that is an organisation, of Fredrik Thordendal.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Fredrik_Thordendal> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?associatedBand WHERE {
  # Fredrik Thordendal's band
  ?band dbo:member db:Fredrik_Thordendal ;
        rdf:type dbo:MusicalGroup .
  
  # Band members of the identified band
  ?member dbo:member ?band .

  # Associated bands for each member that are also organizations
  ?member dbo:associatedBand ?associatedBand .
  FILTER EXISTS { ?associatedBand rdf:type dbo:MusicalGroup }
}
```",3,7,4,3,1,3,3,71,0,0,33,0,0.0,0
427,42,val,"Give me the party of Giulio Andreotti and party of the person born, that is an office holder and a politician, as Romano Antonio Prodi and reference to the name of Italian People's Party (1994).","SELECT ?result WHERE { <http://dbpedia.org/resource/Giulio_Andreotti> <http://dbpedia.org/ontology/party> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Italian_People's_Party_(1994)> <http://xmlns.com/foaf/0.1/name> ?v2 . ?v1 <http://dbpedia.org/property/birthName> ""Romano Antonio Prodi""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/party> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?andreottiParty ?prodiParty WHERE {
  # Giulio Andreotti's party affiliation
  dbr:Giulio_Andreotti dbo:partyAffiliation ?andreottiParty .

  # Romano Prodi's birth name and party affiliation
  OPTIONAL { 
    ?prodi dbo:birthName ""Romano Antonio Prodi""@en .
    ?prodi dbo:officeHolder ?office .
    FILTER EXISTS { ?office a dbo:Office . }
    ?prodi dbo:partyAffiliation ?prodiParty .
  }

  # Reference to Italian People's Party (1994)
  OPTIONAL {
    ?italianPeopleParty rdfs:label ""Italian People's Party (1994)""@en .
  }
}
```",5,7,6,2,3,3,3,71,0,0,1,0,0.0,0
303,16,val,"Give me the party of the person born, that is a politician, as Arnulfo Arias Madrid and party of Guillermo Endara.","SELECT ?result WHERE { <http://dbpedia.org/resource/Guillermo_Endara> <http://dbpedia.org/ontology/party> ?result . ?v2 <http://dbpedia.org/property/birthName> ""Arnulfo Arias Madrid""@en . ?v2 <http://dbpedia.org/ontology/party> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?partyLabel WHERE {
  {
    ?person a dbpedia-owl:Politician ;
            rdfs:label ""Arnulfo Arias Madrid""@en .
    OPTIONAL { ?person dbp:party ?party . }
  } UNION {
    ?person a dbpedia-owl:Politician ;
            rdfs:label ""Guillermo Endara""@en .
    OPTIONAL { ?person dbp:party ?party . }
  }
  FILTER(LANG(?person) = 'en')
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
328,18,val,Give me the leader of People's Commissariat of Defense of the Soviet Union and awardee of Order of Suvorov and commander in Eastern Front (World War II).,SELECT ?result WHERE { <http://dbpedia.org/resource/People's_Commissariat_of_Defense_of_the_Soviet_Union> <http://dbpedia.org/ontology/leader> ?result . ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Order_of_Suvorov> . <http://dbpedia.org/resource/Eastern_Front_(World_War_II)> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person dbo:head dbr:People's_Commissariat_of_Defense_of_the_Soviet_Union .
  ?person dbo:awardee dbr:Order_of_Suvorov .
  ?person dbo:militaryCommanderOf dbr:Eastern_Front_(World_War_II) .
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
421,19,val,Give me the band member of the awardee of [[#Awards and nominations and native of Socialist Federal Republic of Yugoslavia and person born as Edin Dervišhalidović.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Socialist_Federal_Republic_of_Yugoslavia> . ?result <http://dbpedia.org/property/birthName> ""Edin Dervišhalidović""@en . ?v1 <http://dbpedia.org/property/awards> ""[[#Awards and nominations""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?member WHERE {
  # Identify the person Edin Dervišhalidović
  dbr:Edin_Dervišhalidović a dbo:Person ;
    dbo:nationality dbr:Socialist_Federal_Republic_of_Yugoslavia .

  # Find the band SevdahBABE associated with Edin Dervišhalidović
  ?band dbo:member dbr:Edin_Dervišhalidović .
  
  # Ensure the band has received awards
  ?band dbo:award ?award .

  # Get other members of the band SevdahBABE
  ?band dbo:member ?member .
  
  FILTER(?member != dbr:Edin_Dervišhalidović)
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
626,15,val,"Give me the awardee of Order of St. Andrew and commander in the force, that is a military conflict, of the commander in Battle of Paris (1814).",SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Order_of_St._Andrew> . <http://dbpedia.org/resource/Battle_of_Paris_(1814)> <http://dbpedia.org/ontology/commander> ?v0 . ?v1 <http://dbpedia.org/ontology/commander> ?v0 . ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Find the commander of the Battle of Paris (1814)
  ?battle dbr:Battle_of_Paris_(1814) .
  ?battle dbo:commander ?person .

  # Check if this person was awarded the Order of St. Andrew
  ?award dbr:Order_of_St._Andrew .
  ?award dbo:awardee ?person .

  # Ensure this person commanded in another military conflict
  ?otherBattle dbo:commander ?person .
  FILTER(?battle != ?otherBattle)
}
```",4,5,5,3,2,3,2,20,0,0,9,0,0.0,0
617,44,val,Give me the spouse of the child of Antiochus III the Great and child of Antiochus III the Great and parent of the child of Antiochus (son of Antiochus III the Great).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Antiochus_III_the_Great> . ?v4 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Antiochus_III_the_Great> <http://dbpedia.org/ontology/child> ?v4 . <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/child> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?spouse ?parent WHERE {
  # Find children of Antiochus III the Great
  ?child dbo:father dbr:Antiochus_III_the_Great .
  
  # Find spouse of each child
  ?child dbo:spouse ?spouse .

  # Identify Antiochus among the children
  OPTIONAL {
    ?antiochus dbo:father dbr:Antiochus_III_the_Great ;
               rdfs:label ""Antiochus""@en .
    
    # Find parent of this specific child (Antiochus)
    ?parent dbo:child ?antiochus .
  }
  
  FILTER EXISTS { ?antiochus rdfs:label ""Antiochus""@en }
}
```",5,5,6,2,3,3,3,71,0,0,2,0,0.0,0
959,31,val,"Give me the native of Japan and member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of the person born in 1958.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v2 <http://dbpedia.org/ontology/birthYear> ""1958""^^<http://www.w3.org/2001/XMLSchema#gYear> . ?v2 <http://dbpedia.org/ontology/almaMater> ?v0 . ?result <http://dbpedia.org/ontology/team> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Japan> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person ?university WHERE {
  ?person a dbo:Person ;
          dbo:birthYear ?year ;
          foaf:nationality ?nationality .
  
  ?person dbo:almaMater ?university .
  ?university a ?eduType .
  FILTER (?eduType IN (dbo:University, dbo:EducationalOrganization))
  ?university dbo:country dbr:Japan .

  ?person dbo:member ?university .

  FILTER (?year = ""1958""^^xsd:gYear)
  FILTER (?nationality = dbr:Japanese)

}
```",4,8,5,3,2,3,3,71,0,0,167,0,0.0,0
314,18,val,"Give me the awardee of 30 and commander in the profession, that is an event and a societal event, of Lisa Gavrić.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ""30""^^<http://www.w3.org/2001/XMLSchema#integer> . ?v2 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Lisa_Gavrić> <http://dbpedia.org/property/occupation> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award 
WHERE {
  ?person foaf:name ""Lisa Gavrić""@en .
  ?person dbo:profession dbr:Commander .
  ?person dbo:awardReceived ?award .
  FILTER EXISTS { ?award dbo:eventType ?eventType . }
  FILTER EXISTS { ?eventType rdfs:subClassOf* dbo:SocietalEvent . }
  FILTER (STRSTARTS(STR(?award), ""30""))
}
```",3,5,4,2,2,2,3,28,0,0,2,0,0.0,0
488,43,val,"Give me the death place of the father, that is a politician, of the father, that is an office holder, of Matsudaira Tadamasa and birth place of Enomoto Takeaki and administration of Emperor Go-Yōzei.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Enomoto_Takeaki> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Matsudaira_Tadamasa> <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Emperor_Go-Yōzei> . ?v0 <http://dbpedia.org/property/father> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?deathPlaceOfPoliticianFather ?birthPlaceOfEnomotoTakeaki ?administrationOfEmperorGoYozei
WHERE {
  # Matsudaira Tadamasa's father who was an office holder
  ?officeHolder a dbo:OfficeHolder ;
               dbo:child dbr:Matsudaira_Tadamasa .

  # Office Holder's father (Matsudaira Tadamasa's grandfather) who was a politician
  ?politicianFather a dbo:Politician ;
                   dbo:child ?officeHolder .
  
  # Death place of the politician father
  ?deathPlaceOfPoliticianFather dbo:deathPlace ?politicianFather .

  # Enomoto Takeaki's birthplace
  dbr:Enomoto_Takeaki dbo:birthPlace ?birthPlaceOfEnomotoTakeaki .

  # Emperor Go-Yōzei's administration period
  dbr:Emperor_Go-Yozei dbo:reignStart ?start ;
                       dbo:reignEnd ?end .
  
  BIND(CONCAT(""Reigned from "", STR(?start), "" to "", STR(?end)) AS ?administrationOfEmperorGoYozei)
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
197,7,val,Give me the birthplace of the member of FC Politehnica Timișoara and birthplace of George Lusztig.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/FC_Politehnica_Timișoara> . ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/George_Lusztig> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

# Query for the birthplace of a member of FC Politehnica Timișoara (Adrian Popa)
SELECT ?birthPlace WHERE {
  dbr:Adrian_Popa dbo:nationality dbr:Romania .
  dbr:Adrian_Popa dbo:birthPlace ?birthPlace .
}

# Query for the birthplace of George Lusztig
SELECT ?birthPlace WHERE {
  dbr:George_Lusztig dbo:birthPlace ?birthPlace .
}
```",3,3,4,2,2,2,2,9,0,0,2,0,0.0,0
177,7,val,"Give me the headquarter of Ministry of Culture, Sports and Tourism and entity in the residence of Alexander Gamelin.","SELECT ?result WHERE { <http://dbpedia.org/resource/Alexander_Gamelin> <http://dbpedia.org/property/residence> ?v0 . ?result <http://dbpedia.org/ontology/country> ?v0 . <http://dbpedia.org/resource/Ministry_of_Culture,_Sports_and_Tourism> <http://dbpedia.org/ontology/location> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?headquarters ?residenceEntity WHERE {
  # Part 1: Headquarters of Ministry of Culture, Sports and Tourism
  ?ministry rdfs:label ""Ministry of Culture, Sports and Tourism""@en .
  ?ministry dbo:headquarterLocation ?headquarters .

  # Part 2: Entity in the residence of Alexander Gamelin
  OPTIONAL {
    dbr:Alexander_Gamelin dbo:residence ?residence .
    ?residence dbo:notableFor ?residenceEntity .
  }
}
```",3,3,4,2,2,2,2,9,0,0,1,0,0.0,0
701,4,train,Give me the child of Nefertari.,SELECT ?result WHERE { <http://dbpedia.org/resource/Nefertari> <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?child WHERE {
  ?person dbo:spouse ?nefertari .
  FILTER (str(?nefertari) = ""Nefertari"")
  ?nefertari dbo:child ?child .
}
```",1,1,2,1,1,3,3,71,0,0,6,0,0.0,0
959,2,train,Give me the manager of 2013 Júbilo Iwata season.,SELECT ?result WHERE { <http://dbpedia.org/resource/2013_Júbilo_Iwata_season> <http://dbpedia.org/ontology/manager> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?manager WHERE {
  ?team a dbo:FootballClub ;
        rdfs:label ""Júbilo Iwata""@en .
  
  OPTIONAL { 
    ?team dbo:coach ?manager .
  }
  
  FILTER(CONTAINS(LCASE(STR(?team)), ""jubilo iwata""))
  FILTER(YEAR(NOW()) - YEAR(?year) = 10)
}
```",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
485,5,train,"Give me the birth place, that is a region, of Joseph Whitaker (naturalist).",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. <http://dbpedia.org/resource/Joseph_Whitaker_(naturalist)> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthPlace WHERE {
  ?person a dbo:Naturalist ;
          foaf:name ""Joseph Whitaker"" .
  
  ?person dbo:birthPlace ?birthPlace .

  FILTER EXISTS { 
    ?birthPlace rdf:type dbp:Region .
  }
}
```",1,2,2,1,1,2,3,28,0,0,1,0,0.0,0
339,6,train,Give me the father of Princess Elizabeth of Greece and Denmark and child of George I of Greece.,SELECT ?result WHERE { <http://dbpedia.org/resource/George_I_of_Greece> <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Princess_Elizabeth_of_Greece_and_Denmark> <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?father WHERE {
  ?princess a dbo:Person ;
            dbp:name ""Princess Elizabeth of Greece and Denmark""@en .
  
  ?princess dbo:father ?father .

  ?father a dbo:Person ;
          dbp:childOf ?georgeI .

  ?georgeI a dbo:Person ;
           dbp:name ""George I of Greece""@en .
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
528,13,train,Give me the war of the commander in Battle of La Rinconada de Ate.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Battle_of_La_Rinconada_de_Ate> <http://dbpedia.org/ontology/commander> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?war WHERE {
  ?battle rdfs:label ""Battle of La Rinconada de Ate""@en .
  ?battle dbp:commander ?commander .
  ?commander dbo:participatedInWar ?war .
}
```",2,2,3,2,1,3,3,71,0,0,14,0,0.0,0
994,0,train,Give me the associated musical artist of S.A. Slayer.,SELECT ?result WHERE { <http://dbpedia.org/resource/S.A._Slayer> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artist WHERE {
  VALUES ?work { dbr:S_A_Slayer }
  ?work dbo:artist ?artist .
}
```",1,1,2,1,1,3,3,71,0,0,5,0,0.0,0
48,10,train,"Give me the actor, that is a musical artist, of the show with Stacey Dash.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Stacey_Dash> . ?v0 <http://dbpedia.org/property/starring> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actor WHERE {
  # Find shows where Stacey Dash is an actor
  ?show dbo:castMember dbr:Stacey_Dash .
  
  # Find other actors in those shows
  ?show dbo:castMember ?actor .

  # Ensure the actor is also a musical artist
  ?actor rdf:type dbo:MusicalArtist .

  # Exclude Stacey Dash from the results
  FILTER (?actor != dbr:Stacey_Dash)
}
```",2,3,3,2,1,3,2,20,0,0,8,0,0.0,0
44,3,train,"Give me the associated musical artist, that is a group and an organisation, of Queensrÿche.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Queensrÿche> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?band WHERE {
  ?entity dbo:associatedBand ?band .
  FILTER (str(?entity) = ""Queensrÿche""^^xsd:string)
  ?band rdf:type dbo:MusicalGroup .
  ?band rdf:type dbo:Organization .
}
```",1,3,2,1,1,2,2,9,0,0,3,0,0.0,0
492,0,train,Give me the person decedent at French Algeria.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/French_Algeria> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?deathPlace WHERE {
  ?person dbo:deathPlace dbr:French_Algeria .
}
```",1,1,2,1,1,3,3,71,30,0,0,1.0,1.0,1.0
747,1,train,Give me the band of Amba Shepherd.,SELECT ?result WHERE { <http://dbpedia.org/resource/Amba_Shepherd> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?band WHERE {
  ?person foaf:name ""Amba Shepherd""@en .
  ?person dbo:band ?band .
}
```",1,1,2,1,1,3,3,71,0,0,13,0,0.0,0
645,10,train,Give me the child of the parent of Adela Pankhurst.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Adela_Pankhurst> <http://dbpedia.org/ontology/parent> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?grandchild WHERE {
  ?adela rdfs:label ""Adela Pankhurst""@en .
  ?adela dbo:parent ?parent .
  ?parent dbo:child ?grandchild .
}
```",2,2,3,2,1,3,2,20,3,0,0,1.0,1.0,1.0
617,14,train,Give me the parent of the child of Antiochus (son of Antiochus III the Great).,SELECT ?result WHERE { <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/child> ?v1 . ?result <http://dbpedia.org/ontology/child> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?parentOfChild
WHERE {
  ?antiochusIII a dbo:Person ;
                rdfs:label ""Antiochus III the Great""@en .
  
  ?son dbo:childOf ?antiochusIII ;
       rdfs:label ""Antiochus""@en .

  ?child dbo:parent ?son .

  ?parentOfChild dbo:child ?child .
}
```",2,2,3,2,1,3,3,71,0,0,2,0,0.0,0
184,13,train,Give me the child of the child of Archduke Joseph Karl of Austria.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v1 . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Karl_of_Austria> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?grandchild
WHERE {
  ?archduke dbo:wikiPageID ""Archduke_Joseph_Karl_of_Austria"" .
  ?archduke dbo:child ?child .
  ?child dbo:child ?grandchild .
}
```",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
177,3,train,"Give me the office, that is an organisation, of Joo Don-sik.",SELECT ?result WHERE { <http://dbpedia.org/resource/Joo_Don-sik> <http://dbpedia.org/property/office> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX org: <http://www.w3.org/ns/org#>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?office WHERE {
  ?person dbo:birthName ""Joo Don-sik""@en .
  ?person dbo:office ?office .
  FILTER EXISTS { ?office rdf:type org:Organization }
}
```",1,2,2,1,1,2,2,9,0,0,1,0,0.0,0
838,0,train,Give me the band of Raša Đelmaš.,SELECT ?result WHERE { <http://dbpedia.org/resource/Raša_Đelmaš> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?band WHERE {
  ?person a dbo:MusicalArtist ;
          foaf:name ""Raša Đelmaš""@en .
  OPTIONAL { ?person dbo:band ?band . }
}
```",1,1,2,1,1,3,2,20,0,0,4,0,0.0,0
161,16,train,"Give me the force, that is a societal event and a military conflict, of the predecessor of Indalecio Prieto.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Indalecio_Prieto> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/commander> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?force WHERE {
  # Find Indalecio Prieto's predecessor in a relevant role
  ?prieto dbo:predecessor ?predecessor .
  
  # Ensure the predecessor is associated with a force that is both a societal event and a military conflict
  ?predecessor dbo:associatedWith ?force .
  ?force rdf:type dbo:SocietalEvent ;
         dbo:isPartOf ?militaryConflict .
  ?militaryConflict rdf:type dbo:MilitaryConflict .
  
  # Bind Indalecio Prieto to the resource in DBpedia
  dbr:Indalecio_Prieto ?prieto .
}
```",2,4,3,2,1,3,3,71,0,0,1,0,0.0,0
487,9,train,Give me the administration of the person born on 1955-01-26.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> ?v0 . ?v0 <http://dbpedia.org/ontology/birthDate> ""1955-01-26""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?position ?administration
WHERE {
  ?person a dbo:Person ;
          dbo:birthDate ""1955-01-26""^^xsd:date .
  
  OPTIONAL { 
    ?heldPosition dbo:agent ?person ;
                  dbo:position ?position ;
                  dbo:organization ?administration .
  }
}
```",2,2,3,2,1,3,2,20,0,23,3,0.0,0.0,0
488,2,train,Give me the administration of Emperor Go-Yōzei.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Emperor_Go-Yōzei> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?startYear ?endYear
WHERE {
  dbr:Emperor_Go-Yōzei dbo:reign ?reign.
  ?reign dbo:startYear ?startYear;
         dbo:endYear ?endYear.
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
487,2,train,Give me the person born on 1955-01-26.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthDate> ""1955-01-26""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  ?person dbo:birthDate ?date .
  FILTER (STR(?date) = ""1955-01-26"")
}
```",1,1,2,1,1,3,2,20,23,0,0,1.0,1.0,1.0
820,4,train,Who is the professional in Actor?,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Actor""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?actor WHERE {
  ?actor dbo:wikiPageWikiLink dbc:Actor .
}
```",1,1,2,1,1,3,2,20,0,0,21580,0,0.0,0
392,9,train,Give me the province of Schio and region of Central European Time.,SELECT ?result WHERE { <http://dbpedia.org/resource/Schio> <http://dbpedia.org/ontology/province> ?result . ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Central_European_Time> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?province ?region
WHERE {
  # Find the province where Schio is located
  dbr:Schio dbo:locatedIn ?province .

  # Find regions associated with Central European Time
  ?timeZone a dbo:TimeZone ;
            dbo:timezoneName ""Central European Time"" .
  
  ?region dbo:hasTimezone ?timeZone .
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
981,6,train,Give me the entity in Indonesia and birth place of Novia Indriani Mamuaja.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Indonesia> . <http://dbpedia.org/resource/Novia_Indriani_Mamuaja> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entityInIndonesia ?birthPlace WHERE {
  VALUES ?person { dbr:Novia_Indriani_Mamuaja }
  
  OPTIONAL {
    ?person dbo:office ?entityInIndonesia .
  }

  OPTIONAL {
    ?person dbo:birthPlace ?birthPlace .
  }
}
```",2,2,3,1,2,3,2,20,1,1,0,0.5,1.0,0.6666666666666666
701,3,train,Give me the spouse of Amun-her-khepeshef.,SELECT ?result WHERE { <http://dbpedia.org/resource/Amun-her-khepeshef> <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?spouse WHERE {
  ?person rdfs:label ""Amun-her-khepeshef""@en .
  FILTER NOT EXISTS { ?person a owl:Thing . }
  ?person dbo:spouse ?spouse .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
747,6,train,Who is the writer of Apollo (Hardwell song)?,SELECT ?result WHERE { <http://dbpedia.org/resource/Apollo_(Hardwell_song)> <http://dbpedia.org/property/writer> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?writer WHERE {
  dbr:Apollo_(Hardwell_song) dbo:lyricsBy ?writer .
}
```",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
378,17,train,"Who is the commander in the war, that is a military conflict and a societal event and an event, of Thomas Trigge?",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Thomas_Trigge> <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?warName WHERE {
  ?trigge dbo:commander ?war .
  FILTER (str(?trigge) = ""Thomas Trigge"") .

  ?war rdf:type dbp:MilitaryConflict ;
       rdf:type dbp:SocietalEvent .

  ?war rdfs:label ?warName .
  FILTER (lang(?warName) = 'en')
}
```",2,5,3,2,1,3,3,71,0,0,169,0,0.0,0
696,7,train,Give me the birth place of the member of Dropkick Murphys.,SELECT ?result WHERE { <http://dbpedia.org/resource/Dropkick_Murphys> <http://dbpedia.org/ontology/bandMember> ?v1 . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX wd: <http://www.wikidata.org/entity/>

SELECT ?member ?birthPlaceLabel
WHERE {
  wd:Q123456 dbo:bandMember ?member .  # Replace Q123456 with the actual DBpedia ID for Dropkick Murphys
  ?member dbo:birthPlace ?birthPlace .
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
```

Note: The `wd:Q123456` should be replaced with the correct Wikidata entity identifier for Dropkick Murphys. You can find this by searching on Wikidata or DBpedia.",2,2,3,2,1,3,2,20,0,0,6,0,0.0,0
55,8,train,"Give me the band member of the producer, that is a band, of Used to Love Her.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. <http://dbpedia.org/resource/Used_to_Love_Her> <http://dbpedia.org/ontology/producer> ?v1 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?bandMember WHERE {
  ?song dbo:title ""Used to Love Her"" .
  ?song dbo:producer ?producer .

  FILTER EXISTS { ?producer rdf:type dbo:Band } .

  ?producer dbo:bandMember ?bandMember .
}
```",2,3,3,2,1,2,3,28,0,0,55,0,0.0,0
318,2,train,Give me the founding year of Eel Pie Publishing.,SELECT ?result WHERE { <http://dbpedia.org/resource/Eel_Pie_Publishing> <http://dbpedia.org/ontology/foundingYear> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?foundingYear WHERE {
  ?company a dbo:Publisher ;
           rdfs:label ""Eel Pie Publishing""@en .
  OPTIONAL { 
    ?company dbo:foundingDate ?date .
    BIND(YEAR(?date) AS ?foundingYear)
  }
}
```",1,1,2,1,1,2,2,9,0,0,1,0,0.0,0
197,4,train,Give me the birthplace of Dumitru Nadu and birthplace of George Lusztig.,SELECT ?result WHERE { <http://dbpedia.org/resource/George_Lusztig> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Dumitru_Nadu> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?birthPlaceLabel WHERE {
  VALUES ?person { 
    dbr:Dumitru_Nadu 
    dbr:George_Lusztig 
  }
  
  ?person dbo:birthPlace ?birthPlace .
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }

}
```",2,2,3,1,2,2,2,9,0,0,1,0,0.0,0
429,6,train,"Give me the country of the military force, that is an organisation, of Camden Expedition.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/country> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Camden_Expedition> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?country WHERE {
  ?militaryForce a dbo:MilitaryUnit ;
                 dbo:militaryConflict dbr:Civil_War_in_the_United_States .
  ?militaryForce dbo:partOf dbr:Confederate_States_Army .
  ?confederateArmy dbo:country ?country .
  FILTER(?militaryForce = ?confederateArmy)
}
```",2,3,3,2,1,2,2,9,0,0,7,0,0.0,0
994,15,train,Give me the associated musical artist of the reference to Watchtower.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://xmlns.com/foaf/0.1/name> ""Watchtower""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artist WHERE {
  ?song dbo:title ""Watchtower"" .
  ?song dbo:artist ?artist .
  FILTER(CONTAINS(LCASE(STR(?artist)), ""rush""))
}
```",2,2,3,2,1,3,3,71,0,0,6,0,0.0,0
404,14,train,"Give me the child of the father of Ernest Augustus, Duke of Brunswick.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/property/father> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?child
WHERE {
  ?ernestAugustus a dbo:Duke ;
                  foaf:name ""Ernest Augustus, Duke of Brunswick""@en .
  
  ?ernestAugustus dbo:father ?father .

  ?father dbo:child ?child .
}
```",2,2,3,2,1,3,3,71,0,0,3,0,0.0,0
328,2,train,Give me the leader of People's Commissariat of Defense of the Soviet Union.,SELECT ?result WHERE { <http://dbpedia.org/resource/People's_Commissariat_of_Defense_of_the_Soviet_Union> <http://dbpedia.org/ontology/leader> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?org a dbo:GovernmentAgency ;
      rdfs:label ""People's Commissariat of Defense""@en .
  
  OPTIONAL { ?org dbo:head ?person . }
  OPTIONAL { ?org dbo:leader ?person . }

  FILTER (lang(?orgLabel) = 'en')
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
659,1,train,Give me the commander in Battle of Leipzig.,SELECT ?result WHERE { <http://dbpedia.org/resource/Battle_of_Leipzig> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?commanderLabel WHERE {
  ?battle dbo:wikiPageRedirects dbp:Battle_of_Leipzig .
  ?battle dbp:commander ?commander .
  ?commander rdfs:label ?commanderLabel .
  FILTER (lang(?commanderLabel) = 'en')
}
```",1,1,2,1,1,3,3,71,0,0,21,0,0.0,0
778,9,train,"Give me the award of the awardee, that is American, of Wolf Prize in Medicine.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Wolf_Prize_in_Medicine> . ?v0 <http://dbpedia.org/property/awards> ?result . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/United_States>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?award 
WHERE {
  ?person dbo:award dbr:Wolf_Prize_in_Medicine .
  ?person dbo:nationality dbr:United_States .
}
```",2,3,3,2,1,3,2,20,0,2,9,0.0,0.0,0
767,12,train,Give me the alma mater of Carl L. Nippert and reference to .,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> """"@en . <http://dbpedia.org/resource/Carl_L._Nippert> <http://dbpedia.org/ontology/almaMater> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?almaMaterLabel ?almaMaterLink WHERE {
  ?person foaf:name ""Carl L. Nippert"" .
  ?person dbo:almaMater ?almaMater .
  ?almaMater rdfs:label ?almaMaterLabel .
  OPTIONAL { ?almaMater dbpedia-owl:wikiPageWikiLink ?link . FILTER (strstarts(str(?link), ""http://dbpedia.org/resource/"")) }
  BIND(IF(BOUND(?link), ?link, """") AS ?almaMaterLink)
}
```",2,2,3,1,2,3,3,71,0,0,2,0,0.0,0
626,8,train,Give me the awardee of the award of Aleksey Petrovich Yermolov.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Aleksey_Petrovich_Yermolov> <http://dbpedia.org/property/awards> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award WHERE {
  dbr:Aleksey_Petrovich_Yermolov dbo:award ?award .
}
```",2,2,3,2,1,3,2,20,0,6,230,0.0,0.0,0
378,13,train,Give me the war of the commander in Peninsular War.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Peninsular_War> <http://dbpedia.org/ontology/commander> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?commander ?warName WHERE {
  ?peninsularWar a dbo:PeninsularWar .
  ?peninsularWar dbp:commander ?commander .
  
  OPTIONAL {
    ?otherWar dbp:commander ?commander .
    ?otherWar rdfs:label ?warName .
    FILTER(LANG(?warName) = ""en"")
  }
}
```",2,2,3,2,1,3,3,71,0,0,118,0,0.0,0
547,5,train,Give me the show with Emily Richard.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emily_Richard> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?show WHERE {
  ?person a dbo:Person ;
          foaf:name ""Emily Richard""@en .
  
  ?role dbo:actor ?person ;
        dbo:starring ?show .
  
  ?show a dbo:TVSeries .
}
```",1,1,2,1,1,3,3,71,0,0,4,0,0.0,0
712,9,train,"Give me the country of the military force, that is an organisation and a military unit, of Vyoshenskaya Uprising.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v0 <http://dbpedia.org/ontology/country> ?result . ?v0 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Vyoshenskaya_Uprising> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?country WHERE {
  ?uprising dbo:wikiPageRedirects dbr:Vyoshenskaya_Uprising .
  ?uprising dbo:militaryForce ?militaryForce .
  ?militaryForce a dbo:MilitaryUnit ;
                 dbo:country ?country .
}
```",2,4,3,2,1,3,2,20,0,0,2,0,0.0,0
534,1,train,Give me the headquarter of Royal Dublin Society.,SELECT ?result WHERE { <http://dbpedia.org/resource/Royal_Dublin_Society> <http://dbpedia.org/ontology/headquarter> ?result . },"```sparql
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?headquarters
WHERE {
  ?s dbp:name ""Royal Dublin Society""@en .
  ?s dbp:headquarters ?headquarters .
}
```",1,1,2,1,1,3,2,20,0,0,3,0,0.0,0
488,14,train,Give me the administration of the father of Emperor Go-Mizunoo.,SELECT ?result WHERE { <http://dbpedia.org/resource/Emperor_Go-Mizunoo> <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/property/leader> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?fatherLabel ?administrationStart ?administrationEnd WHERE {
  ?emperor rdfs:label ""Emperor Go-Mizunoo""@en .
  ?emperor dbo:father ?father .
  ?father rdfs:label ?fatherLabel .
  OPTIONAL { 
    ?father dbo:reign ?administration .
    ?administration dbo:startYear ?administrationStart ;
                   dbo:endYear ?administrationEnd .
  }
}
```",2,2,3,2,1,3,3,71,0,0,2,0,0.0,0
356,7,train,Give me the player in the successor of 2014 Sacramento Republic FC season.,SELECT ?result WHERE { <http://dbpedia.org/resource/2014_Sacramento_Republic_FC_season> <http://dbpedia.org/ontology/successor> ?v1 . ?v1 <http://dbpedia.org/ontology/team> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?player WHERE {
    ?team a dbo:SoccerClub ;
          dbo:location dbr:Sacramento,_California ;
          dbo:league dbr:United_Soccer_League .
    
    FILTER EXISTS { 
        ?team dbo:season dbr:2015_USL_season .
    }
    
    ?roster dbo:team ?team ;
            dbo:player ?player .
}
```",2,2,3,2,1,3,2,20,0,0,1,0,0.0,0
356,9,train,"Give me the successor of the predecessor, that is a sports team season and a soccer club season, of 2015 Sacramento Republic FC season.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v0 <http://dbpedia.org/ontology/successor> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?v0 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/2015_Sacramento_Republic_FC_season> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?successorSeason WHERE {
  # Find the predecessor of the 2015 Sacramento Republic FC season
  ?predecessorSeason dbo:predecessor dbr:2015_Sacramento_Republic_FC_season .
  
  # Ensure the predecessor is a sports team or soccer club season
  ?predecessorSeason rdf:type/(dbo:SportsTeamSeason|dbo:SoccerClubSeason) .

  # Find the successor of that predecessor
  ?successorSeason dbo:successor ?predecessorSeason .
}
```",2,4,3,2,1,3,2,20,0,0,1,0,0.0,0
712,5,train,Who is the awardee of Hero of the Soviet Union?,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Hero_of_the_Soviet_Union> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name WHERE {
  ?person dbo:award dbr:Hero_of_the_Soviet_Union .
  ?person foaf:name ?name .
}
```",1,1,2,1,1,3,2,20,764,918,73,0.45422116527942924,0.9127837514934289,0.6065899166335847
30,5,train,Give me the native of the birthplace of Silvia Cohen.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . <http://dbpedia.org/resource/Silvia_Cohen> <http://dbpedia.org/ontology/birthPlace> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?native 
WHERE {
  ?silviaCohen foaf:name ""Silvia Cohen""@en .
  ?silviaCohen dbo:birthPlace ?birthplace .

  OPTIONAL { ?birthplace dbo:nativeOf ?native . }
}
```",2,2,3,2,1,2,2,9,0,0,11488,0,0.0,0
251,1,train,Give me the administration of Forza Italia (2013).,SELECT ?result WHERE { ?result <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Forza_Italia_(2013)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?administration WHERE {
  ?party a dbo:PoliticalParty ;
         rdfs:label ""Forza Italia""@en .
  
  OPTIONAL { 
    ?party dbp:government ?administration .
  }
  
  FILTER (YEAR(?administration) = 2013)
}
```",1,1,2,1,1,2,3,28,0,0,5,0,0.0,0
179,3,train,Give me the birth name of Sirikit.,SELECT ?result WHERE { <http://dbpedia.org/resource/Sirikit> <http://dbpedia.org/property/birthName> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?birthName WHERE {
  ?s dbo:name ""Sirikit""@en .
  ?s dbo:birthName ?birthName .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
232,4,train,Give me the person born as John Devon Roland Pertwee.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""John Devon Roland Pertwee""@en . }","```sparql
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
SELECT ?person ?birthName WHERE {
  ?person a foaf:Person .
  OPTIONAL { ?person foaf:givenName ""John"" . }
  OPTIONAL { ?person foaf:middleName ""Devon Roland"" . }
  OPTIONAL { ?person foaf:familyName ""Pertwee"" . }
  BIND(CONCAT(STR(?person), STR(?person/foaf:givenName), STR(?person/foaf:middleName), STR(?person/foaf:familyName)) AS ?birthName)
}
FILTER (?person/foaf:givenName = ""John"" && ?person/foaf:middleName = ""Devon Roland"" && ?person/foaf:familyName = ""Pertwee"")
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
285,2,train,Who is the spouse of Aristotle Onassis?,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Aristotle_Onassis> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?spouseName WHERE {
  ?person a dbo:Person ;
          foaf:name ""Aristotle Onassis""@en .
  ?person dbo:spouse ?spouse .
  ?spouse foaf:name ?spouseName .
}
```",1,1,2,1,1,3,2,20,0,2,2,0.0,0.0,0
184,5,train,"Give me the parent, that is a royalty, of Archduke Ladislaus Philipp of Austria.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Archduke_Ladislaus_Philipp_of_Austria> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parent WHERE {
  ?archduke dbo:birthName ""Ladislaus Philipp of Austria"" .
  ?archduke dbo:parent ?parent .
  OPTIONAL { ?parent dbo:royalTitle ?title . }
  FILTER EXISTS { ?archduke a dbo:Archduke } # Ensuring the subject is an Archduke
}
```",1,2,2,1,1,3,3,71,0,0,2,0,0.0,0
778,10,train,"Give me the work, that is a software, of the author of Pushd and popd.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/author> ?v0 . <http://dbpedia.org/resource/Pushd_and_popd> <http://dbpedia.org/property/author> ?v0 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Software>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?software WHERE {
  ?author a dbo:Person ;
          foaf:name ""Bill Joy"" .
  
  ?work dbo:creator ?author ;
        a dbo:Software .

  BIND(str(?work) AS ?software)
}
```",2,3,3,2,1,3,2,20,0,0,5,0,0.0,0
16,0,train,Give me the spouse of Ted McGinley.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  dbr:Ted_McGinley dbo:spouse ?spouse .
}
```",1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
378,2,train,"Give me the claim to fame of Louis des Balbes de Berton de Crillon, 1st Duke of Mahón.","SELECT ?result WHERE { <http://dbpedia.org/resource/Louis_des_Balbes_de_Berton_de_Crillon,_1st_Duke_of_Mahón> <http://dbpedia.org/ontology/knownFor> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?claimToFame
WHERE {
  dbr:Louis_des_Balbes_de_Berton_de_Crillon,_1st_Duke_of_Mahón dbo:knownFor ?claimToFame .
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
498,2,train,"Give me the band, that is an organisation and a band, of Solace of Requiem.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Solace_of_Requiem> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?band WHERE {
  ?entity dbo:band ?band .
  ?band rdf:type dbo:Band .
  ?band dbo:associatedBand ?solaceOfRequiem .
  ?solaceOfRequiem rdfs:label ""Solace of Requiem""@en .
  ?band rdf:type dbo:Organization .
}
```",1,3,2,1,1,2,2,9,0,0,4,0,0.0,0
391,9,train,"Give me the actor of The Departed and native of Compton, California.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Compton,_California> . <http://dbpedia.org/resource/The_Departed> <http://dbpedia.org/ontology/starring> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?actor WHERE {
  ?movie dbo:title ""The Departed""@en .
  ?movie dbo:starring ?actor .
  ?actor dbp:birthPlace dbr:Compton,_California .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
994,3,train,Give me the reference to Watchtower.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Watchtower""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX owl: <http://www.w3.org/2002/07/owl#>

SELECT ?reference WHERE {
  ?entity rdfs:label ""The Watchtower""@en .
  OPTIONAL { ?entity dbo:wikiPageWikiLink ?reference . }
  OPTIONAL { ?entity owl:sameAs ?sameAs . FILTER(?sameAs != ?entity) }
}
```",1,1,2,1,1,3,3,71,0,42,3,0.0,0.0,0
712,3,train,Give me the country of Armed Forces of South Russia.,SELECT ?result WHERE { <http://dbpedia.org/resource/Armed_Forces_of_South_Russia> <http://dbpedia.org/ontology/country> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?country WHERE {
  ?entity rdfs:label ""Armed Forces of South Russia""@en .
  ?entity dbo:country ?country .
}
```",1,1,2,1,1,3,2,20,2,0,0,1.0,1.0,1.0
666,1,train,Give me the figure known as The Three Lions.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ""The Three Lions""@en . }","```sparql
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?figure WHERE {
  ?figure rdfs:label ?label .
  FILTER(CONTAINS(LCASE(?label), ""three lions"") && CONTAINS(LCASE(?label), ""england""))
}
```",1,1,2,1,1,3,2,20,0,0,5,0,0.0,0
64,3,train,"Give me the region, that is a country, of Central European Time.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?country WHERE {
  ?country a dbo:Country .
  ?country dbp:timeZone ""Central European Time"" .
}
```",1,2,2,1,1,2,2,9,0,0,56,0,0.0,0
10,5,train,Give me the birth name of Sharon Kao.,SELECT ?result WHERE { <http://dbpedia.org/resource/Sharon_Kao> <http://dbpedia.org/property/birthName> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthName
WHERE {
  dbr:Sharon_Kao dbo:birthName ?birthName .
}
```",1,1,2,1,1,2,3,28,2,0,0,1.0,1.0,1.0
404,0,train,Give me the spouse of Princess Victoria Louise of Prussia.,SELECT ?result WHERE { <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouseName WHERE {
  ?princess a dbo:Person ;
            rdfs:label ""Princess Victoria Louise of Prussia""@en .
  ?princess dbo:spouse ?spouse .
  ?spouse rdfs:label ?spouseName .
  FILTER(LANG(?spouseName) = 'en')
}
```",1,1,2,1,1,3,3,71,0,1,1,0.0,0.0,0
801,11,train,Give me the professional in the alter ego of The Shadow.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v0 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?professional WHERE {
  ?shadow dbo:creator ?creator .
  ?creator foaf:name ""Walter B. Gibson"" .
  ?creator dbo:occupation ?professional .
  
  FILTER (CONTAINS(LCASE(STR(?shadow)), ""the shadow""))
}
```",2,2,3,2,1,3,3,71,0,0,39640,0,0.0,0
485,10,train,"Give me the birth place of the awardee, that is a writer and a poet, of Eric Gregory Award.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Poet>. ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Eric_Gregory_Award> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace WHERE {
  ?recipient dbo:award dbr:Erich_Gregory_Award .
  ?recipient dbo:occupation dbr:Writer .
  ?recipient dbo:genre dbr:Poetry .
  ?recipient dbo:birthPlace ?birthPlace .
}
```",2,4,3,2,1,2,3,28,0,0,7,0,0.0,0
54,12,train,Give me the parent of Thado Minsaw of Prome and predecessor of Ameitta Thiri Maha Dhamma Dewi of Ava.,SELECT ?result WHERE { <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Ameitta_Thiri_Maha_Dhamma_Dewi_of_Ava> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?individual WHERE {
  ?thadoMinsaw dbo:parent ?individual .
  FILTER (str(?thadoMinsaw) = ""Thado Minsaw of Prome"") .

  ?ameittaThiri dbo:predecessor ?individual .
  FILTER (str(?ameittaThiri) = ""Ameitta Thiri Maha Dhamma Dewi of Ava"") .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
666,9,train,"Give me the manager, that is a sports manager, of the team, that is a soccer club and a sports team season, of Leonid Slutsky (football coach).",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/manager> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v0 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Leonid_Slutsky_(football_coach)> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?manager WHERE {
  ?teamSeason dbo:sport dbr:Soccer .
  ?teamSeason dbo:coach dbr:Leonid_Slutsky .
  ?teamSeason dbo:team dbr:FC_Rostov ; # Assuming FC Rostov as an example team
             dbo:manager ?manager .
  ?manager a dbo:SportsManager .
}
```",2,5,3,2,1,3,2,20,0,0,5,0,0.0,0
435,5,train,Give me the author of Iceland.,SELECT ?result WHERE { <http://dbpedia.org/resource/Iceland> <http://dbpedia.org/property/author> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person ?personLabel WHERE {
  ?person a dbo:Writer .
  ?person dbo:birthPlace dbr:Iceland .
  OPTIONAL { ?person dbo:wikiPageWikiLink ?link . FILTER (strstarts(str(?link), str(dbr:Iceland_)) || strstarts(str(?link), str(dbr:Literature_of_Iceland))) }
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
ORDER BY ?personLabel
```",1,1,2,1,1,2,3,28,0,0,1,0,0.0,0
827,4,train,"Who is the spouse, that is a royalty, of Princess Pauline of Saxe-Weimar-Eisenach?",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Princess_Pauline_of_Saxe-Weimar-Eisenach> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
  ?princess a dbo:Person ;
            foaf:name ""Pauline of Saxe-Weimar-Eisenach"" .
  
  ?princess dbo:spouse ?spouse .

  OPTIONAL { 
    ?spouse dbp:royalTitle ?title .
  }
  
  FILTER EXISTS { ?spouse dbp:royalTitle ?title } .
}
```",1,2,2,1,1,3,2,20,0,0,1,0,0.0,0
54,16,train,Give me the child of the parent of Thado Minsaw of Prome.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v1 . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?childOfParent
WHERE {
  ?thadoMinsaw a dbo:Person ;
               rdfs:label ""Thado Minsaw of Prome""@en .
  
  OPTIONAL { 
    ?parent dbo:spouseOrPartner ?thadoMinsaw .
    ?parent dbo:child ?childOfParent .
  }
}
```",2,2,3,2,1,3,3,71,0,0,3,0,0.0,0
659,0,train,Give me the commander in German campaign of 1813.,SELECT ?result WHERE { <http://dbpedia.org/resource/German_campaign_of_1813> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  ?campaign dbo:partOf dbr:War_of_the_Sixth_Coalition .
  ?campaign dbo:date ""1813""^^xsd:gYear .
  ?campaign dbo:location dbr:Germany .
  ?campaign dbo:commander ?commander .
  FILTER(CONTAINS(LCASE(STR(?commander)), ""napoleon""))
}
```",1,1,2,1,1,3,3,71,0,0,31,0,0.0,0
617,7,train,Who is the commander in Battle of Panium?,SELECT ?result WHERE { <http://dbpedia.org/resource/Battle_of_Panium> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?commander WHERE {
  ?battle dbp:name ""Battle of Panium""@en .
  ?battle dbp:commander ?commander .
}
```",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
801,15,train,Give me the alter ego of the true self of The Shadow.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/alterEgo> ?result . ?v1 <http://xmlns.com/foaf/0.1/givenName> ""The Shadow""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?alterEgo ?realName WHERE {
  ?character dbo:name ""The Shadow""@en .
  ?character dbo:alterEgo ?alterEgo .
  ?alterEgo foaf:name ?realName .
}
```",2,2,3,2,1,3,3,71,0,0,3,0,0.0,0
915,1,train,Give me the father of Lizzie Spaulding.,SELECT ?result WHERE { <http://dbpedia.org/resource/Lizzie_Spaulding> <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?father WHERE {
  ?lizzie a dbo:Person ;
          dbp:name ""Lizzie Spaulding""@en .
  OPTIONAL { ?lizzie dbo:father ?father . }
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
783,9,train,Give me the band member of the person born as Samuel Ofori Amponsah.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ""Samuel Ofori Amponsah""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band ?role WHERE {
  ?person rdfs:label ""Shaggy""@en .
  ?person dbo:birthName ""Samuel Ofori Amponsah"" .
  ?person dbo:musicGroup ?band .
  OPTIONAL { ?band dbo:member ?member . FILTER(?member = ?person) }
  OPTIONAL { ?band dbo:role ?role . FILTER(?member = ?person) }
}
```",2,2,3,2,1,3,2,20,0,0,5,0,0.0,0
701,1,train,Give me the parent of Henuttawy (19th dynasty).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Henuttawy_(19th_dynasty)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parent WHERE {
  ?person dbp:name ""Henuttawy (19th dynasty)"" .
  ?person dbo:spouse ?husband .
  FILTER EXISTS { ?husband dbp:regnalName ""Ramesses II"" } .
  ?person dbo:parent ?parent .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
54,10,train,Give me the child of Thinkhaya of Pagan and predecessor of Ameitta Thiri Maha Dhamma Dewi of Ava.,SELECT ?result WHERE { <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Ameitta_Thiri_Maha_Dhamma_Dewi_of_Ava> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?individual WHERE {
  # Thinkhaya of Pagan's child
  ?thinkhaya dbr:Thinkhaya_of_Pagan .
  ?child dbo:parent ?thinkhaya ;
         a dbo:Person .

  # Ameitta Thiri Maha Dhamma Dewi of Ava's predecessor
  ?ameitta dbr:Ameitta_Thiri_Maha_Dhamma_Dewi_of_Ava .
  ?predecessor dbo:succeededBy ?ameitta ;
               a dbo:Person .

  # Find the individual who is both Thinkhaya's child and Ameitta's predecessor
  FILTER (?child = ?individual && ?predecessor = ?individual)
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
778,5,train,"Give me the work, that is a software, of Bill Joy.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Bill_Joy> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Software>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?work WHERE {
  ?person rdfs:label ""Bill Joy""@en .
  ?person a dbo:Person .
  ?person dbo:work ?work .
  ?work a dbo:Software .
}
```",1,2,2,1,1,3,2,20,0,0,5,0,0.0,0
251,11,train,Give me the death place of the author of The Twelve Abbots of Challant.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/The_Twelve_Abbots_of_Challant> <http://dbpedia.org/property/author> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?deathPlace WHERE {
  ?book dbo:author ?author .
  ?book rdfs:label ""The Twelve Abbots of Challant""@en .
  FILTER NOT EXISTS { ?book owl:sameAs ?otherBook } # Ensure we get the correct book
  ?author dbp:deathPlace ?deathPlace .
}
```",2,2,3,2,1,2,3,28,3,1,0,0.75,1.0,0.8571428571428571
314,3,train,Give me the headquarter of House of Sombrerete.,SELECT ?result WHERE { <http://dbpedia.org/resource/House_of_Sombrerete> <http://dbpedia.org/ontology/location> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?headquarters WHERE {
  ?house rdfs:label ""House of Sombrerete""@en .
  ?house dbo:headquarters ?headquarters .
}
```",1,1,2,1,1,2,3,28,0,0,2,0,0.0,0
391,17,train,"Give me the movie, that is a movie and a work and a television show, with the professional in .","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/property/occupation> """"@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?result <http://dbpedia.org/property/starring> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?movie WHERE {
  ?movie rdf:type dbo:Film .
  ?movie rdf:type dbo:Work .
  ?movie rdf:type dbo:TelevisionShow .
}
```",2,5,3,2,1,3,3,71,1674,3157,0,0.346512109294142,1.0,0.5146810146041507
9,2,train,Give me the figure known as QUB.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ""QUB""@en . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/resource/>
SELECT ?entity ?label WHERE {
  VALUES ?entity { dbpedia:Queen's_University_Belfast }
  ?entity rdfs:label ?label .
  FILTER (lang(?label) = 'en')
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
392,3,train,"Give me the region, that is a country, of Central European Time.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?country WHERE {
  ?country a dbo:Country .
  ?country dbp:timeZone ?tz .
  FILTER(CONTAINS(LCASE(?tz), ""central european time""))
}
```",1,2,2,1,1,2,3,28,0,0,56,0,0.0,0
645,6,train,Give me the alma mater of Sylvia Pankhurst and entity in United Kingdom.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . <http://dbpedia.org/resource/Sylvia_Pankhurst> <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?almaMater WHERE {
  ?sylviaPankhurst dbo:almaMater ?almaMater .
  ?almaMater dbo:country dbc:United_Kingdom .
  FILTER(STRSTARTS(STR(?sylviaPankhurst), ""http://dbpedia.org/resource/Sylvia_Pankhurst""))
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
645,4,train,Give me the parent of Adela Pankhurst.,SELECT ?result WHERE { <http://dbpedia.org/resource/Adela_Pankhurst> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?parentLabel WHERE {
  ?person rdfs:label ""Adela Pankhurst""@en .
  FILTER NOT EXISTS { ?person dbo:abstract ?a } # Ensure it's a person, not an article
  ?person dbo:parent ?parent .
  ?parent rdfs:label ?parentLabel .
}
```",1,1,2,1,1,3,2,20,0,0,2,0,0.0,0
959,15,train,"Give me the alma mater, that is Japanese and an organisation and a university and an educational institution, of the person born in 1958.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthYear> ""1958""^^<http://www.w3.org/2001/XMLSchema#gYear> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?v1 <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?almaMater
WHERE {
  ?person dbo:birthYear ""1958""^^xsd:gYear .
  ?person foaf:almaMater ?almaMater .

  FILTER EXISTS { 
    ?almaMater rdf:type dbo:University .
  }
  
  FILTER EXISTS { 
    ?almaMater rdf:type dbo:EducationalOrganization .
  }

  FILTER EXISTS {
    ?almaMater dbp:country ""Japan"" .
  }
}
```",2,6,3,2,1,3,3,71,0,0,3,0,0.0,0
303,7,train,Give me the party of Arnulfo Arias and party of Guillermo Endara.,SELECT ?result WHERE { <http://dbpedia.org/resource/Guillermo_Endara> <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Arnulfo_Arias> <http://dbpedia.org/ontology/party> ?result . },"```sparql
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?person ?name ?partyName WHERE {
  VALUES ?person { 
    dbr:Ari_Norberto_Arnulfo_Arias_Monge 
    dbr:Guillermo_Endara
  }
  
  ?person rdfs:label ?name .
  OPTIONAL { ?person dbp:party ?party . }
  OPTIONAL { ?party rdfs:label ?partyName . FILTER (lang(?partyName) = 'en') }
}
```",2,2,3,1,2,2,3,28,0,4,1,0.0,0.0,0
16,10,train,Give me the person born as Georgeanne Marie Rice and spouse of Ted McGinley.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Georgeanne Marie Rice""@en . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person
WHERE {
  ?person dbo:birthName ""Georgeanne Marie Rice"" .
  ?person dbo:spouse ?spouse .
  ?spouse foaf:name ?name .
  FILTER(CONTAINS(LCASE(?name), LCASE(""Ted McGinley"")))
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
251,6,train,Give me the administration of Forza Italia (2013) and location of Battle of Marengo.,SELECT ?result WHERE { <http://dbpedia.org/resource/Battle_of_Marengo> <http://dbpedia.org/ontology/place> ?result . ?result <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Forza_Italia_(2013)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?administration ?location
WHERE {
  # Query for the administration of Forza Italia in 2013
  ?party a dbo:PoliticalParty ;
         rdfs:label ""Forza Italia""@en .
  OPTIONAL { 
    ?position dbo:party ?party ;
              dbo:startDate ?start ;
              dbo:endDate ?end .
    FILTER (?start <= ""2013-01-01""^^xsd:date && (?end >= ""2013-12-31""^^xsd:date || !bound(?end)))
  }
  
  # Query for the location of the Battle of Marengo
  dbr:Battle_of_Marengo dbo:location ?location .
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
838,1,train,Give me the band member of Kerber.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Kerber> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?member WHERE {
  ?band dbo:name ""Helloween""@en .
  ?band dbo:bandMember ?member .
}
```",1,1,2,1,1,3,2,20,0,0,8,0,0.0,0
747,5,train,"Give me the work, that is a song, of Amba Shepherd.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Amba_Shepherd> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?song WHERE {
  ?artist rdf:type dbo:Singer .
  ?artist foaf:name ""Amba Shepherd"" .
  ?artist dbo:work ?work .
  ?work rdf:type dbo:Song .
  ?work rdfs:label ?song .
  FILTER (lang(?song) = 'en')
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
339,3,train,Who is the child of Christian IX of Denmark?,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Christian_IX_of_Denmark> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?child WHERE {
  ?person rdf:type dbo:Monarch .
  ?person rdfs:label ""Christian IX of Denmark""@en .
  ?person dbo:child ?child .
}
```",1,1,2,1,1,3,2,20,0,0,6,0,0.0,0
303,8,train,"Give me the party of the commander, that is a politician, in United States invasion of Panama.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/party> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/United_States_invasion_of_Panama> <http://dbpedia.org/ontology/commander> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?commander ?party WHERE {
  ?event dbo:eventName ""United States invasion of Panama""@en .
  ?event dbo:commander ?commander .
  
  FILTER EXISTS { ?commander rdf:type dbo:Politician . }
  
  OPTIONAL { ?commander dbp:party ?party . }
}
```",2,3,3,2,1,2,3,28,0,0,4,0,0.0,0
312,0,train,Give me the entity in Province of Bergamo.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/province> <http://dbpedia.org/resource/Province_of_Bergamo> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?entity WHERE {
  ?entity dbp:locatedIn ?location .
  ?location rdfs:label ""Province of Bergamo""@en .
}
```",1,1,2,1,1,2,2,9,0,0,228,0,0.0,0
48,0,train,Give me the band of Carl Falk.,SELECT ?result WHERE { <http://dbpedia.org/resource/Carl_Falk> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?bandName WHERE {
  ?person foaf:name ""Carl Falk""@en .
  ?person dbp:band ?band .
  ?band foaf:name ?bandName .
}
```",1,1,2,1,1,3,2,20,0,0,11,0,0.0,0
487,6,train,Give me the country of 2022 Vermont House of Representatives election and administration of Phil Scott.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/Phil_Scott> . <http://dbpedia.org/resource/2022_Vermont_House_of_Representatives_election> <http://dbpedia.org/ontology/country> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?country ?administrationStart
WHERE {
  # Find the country of the Vermont House of Representatives election
  ?electionEvent a dbo:Election ;
                 dbo:electedOffice dbr:Vermont_House_of_Representatives ;
                 dbo:place dbr:Vermont .
  
  ?electionEvent dbo:country ?country .

  # Find Phil Scott's governorship details
  OPTIONAL {
    ?governor a dbo:Governor ;
             foaf:name ""Phil Scott""@en ;
             dbo:stateOrProvinceServed dbr:Vermont ;
             dbo:termStart ?administrationStart .
  }
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
547,13,train,Give me the resting place of the actor of Enemy at the Door.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Enemy_at_the_Door> <http://dbpedia.org/property/starring> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor ?restingPlace WHERE {
  # Find the movie ""Enemy at the Door""
  dbr:Enemy_at_the_Door dbo:starring ?actor .
  
  # Get the resting place of the actor
  OPTIONAL { ?actor dbo:finalRestingPlace ?restingPlace . }
}
```",2,2,3,2,1,3,3,71,0,7,2,0.0,0.0,0
184,2,train,Give me the parent of Archduchess Ilona of Austria.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Ilona_of_Austria> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  ?child dbo:child dbr:Ilona_of_Austria.
  ?child rdfs:label ""Archduchess Ilona of Austria""@en.
  ?parent dbo:child ?child.
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
356,5,train,"Give me the native, that is a soccer player and a soccer manager, of Wolverhampton.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Wolverhampton> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?name
WHERE {
  ?person a dbo:SoccerPlayer .
  ?person a dbo:SoccerManager .
  ?person dbo:birthPlace dbp:Wolverhampton .
  OPTIONAL { ?person foaf:name ?name . }
}
```",1,3,2,1,1,3,2,20,0,0,17,0,0.0,0
959,4,train,"Give me the alma mater, that is Japanese and an organisation and a university and an educational institution, of Eiji Ōtsuka.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. <http://dbpedia.org/resource/Eiji_Ōtsuka> <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?university
WHERE {
  ?person dbo:almaMater ?university .
  FILTER (str(?person) = ""Eiji Ōtsuka"")
  
  ?university rdf:type dbo:University ;
              rdf:type dbo:Organization ;
              rdf:type dbo:EducationalInstitution ;
              dbp:country dbr:Japan .
}
```",1,5,2,1,1,3,3,71,0,0,1,0,0.0,0
179,1,train,Give me the parent of Ubol Ratana.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ubol_Ratana> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?parent WHERE {
  ?parent dbo:child dbr:Ubol_Ratana .
}
```",1,1,2,1,1,3,2,20,2,0,0,1.0,1.0,1.0
528,16,train,Give me the commander in the work of --01-09.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/author> ""--01-09""^^<http://www.w3.org/2001/XMLSchema#gMonthDay> . ?v1 <http://dbpedia.org/ontology/commander> ?result . }","```sparql
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?event ?commander WHERE {
  ?event dbp:commander ?commander .
  ?event dbo:date ?date .
  FILTER (STRSTARTS(STR(?date), ""2001-01-09""))
}
```",2,2,3,2,1,3,3,71,0,0,2,0,0.0,0
177,6,train,"Give me the headquarter of the office, that is an organisation, of Joo Don-sik.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/location> ?result . <http://dbpedia.org/resource/Joo_Don-sik> <http://dbpedia.org/property/office> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?headquarters WHERE {
  ?person rdfs:label ""Joo Don-sik""@en.
  ?person dbo:agent ?organization.
  ?organization dbp:headquarters ?headquarters.
}
```",2,3,3,2,1,2,2,9,0,0,2,0,0.0,0
528,7,train,Give me the birth name of Narciso Campero.,SELECT ?result WHERE { <http://dbpedia.org/resource/Narciso_Campero> <http://dbpedia.org/property/birthName> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthName WHERE {
  ?person a dbo:Person ;
          foaf:name ""Narciso Campero""@en .
  OPTIONAL { ?person dbo:birthName ?birthName . }
}
```",1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
16,6,train,Give me the profession of Satomi Ishihara.,SELECT ?result WHERE { <http://dbpedia.org/resource/Satomi_Ishihara> <http://dbpedia.org/property/occupation> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?occupation WHERE {
  ?person dbp:name ""Satomi Ishihara""@en .
  ?person dbo:occupation ?occupation .
}
```",1,1,2,1,1,3,3,71,0,1,1,0.0,0.0,0
617,5,train,"Who is the successor, that is a royalty, of Antiochus (son of Antiochus III the Great)?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/successor> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?successor WHERE {
  ?antiochus dbo:successor ?successor .
  FILTER EXISTS { ?antiochus rdf:type <http://dbpedia.org/resource/Antiochus_IV_Pius> } .
  FILTER EXISTS { ?successor rdf:type ?royaltyType . 
                  VALUES ?royaltyType {
                    dbo:Monarch
                    dbo:King
                    dbo:Queen
                    dbo:Prince
                    dbo:Duke
                    dbo:Emperor
                    dbo:Empress
                  }
                }
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
161,1,train,Give me the military force of Spanish Civil War.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?force ?name WHERE {
  VALUES ?war { dbr:Spanish_Civil_War }
  
  ?force dbo:participatedIn ?war .
  OPTIONAL { ?force rdfs:label ?name FILTER (lang(?name) = 'en') . }
  
  FILTER (
    regex(str(?force), ""Republican|Loyalist|Nationalist|Franco"")
  )
}
ORDER BY ?name
```",1,1,2,1,1,3,3,71,0,0,514,0,0.0,0
404,10,train,"Give me the spouse of Princess Victoria Louise of Prussia and child of Ernest Augustus, Crown Prince of Hanover.","SELECT ?result WHERE { <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ernest_Augustus,_Crown_Prince_of_Hanover> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  ?princess dbp:name ""Victoria Louise of Prussia""@en .
  ?princess dbo:spouse ?person .

  ?crownPrince dbp:name ""Ernest Augustus, Crown Prince of Hanover""@en .
  ?crownPrince dbo:child ?person .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
747,12,train,Give me the band of Shèna and band of Amba Shepherd.,SELECT ?result WHERE { <http://dbpedia.org/resource/Amba_Shepherd> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Shèna> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?bandShena ?bandAmbaShepherd WHERE {
  ?shena a dbo:MusicalArtist ;
         foaf:name ""Shèna"" .
  ?shena dbo:musicalArtist ?bandShena .

  ?ambaShepherd a dbo:MusicalArtist ;
                foaf:name ""Amba Shepherd"" .
  ?ambaShepherd dbo:musicalArtist ?bandAmbaShepherd .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
421,2,train,Give me the person born as Edin Dervišhalidović.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Edin Dervišhalidović""@en . }","```sparql
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
SELECT ?person WHERE {
  ?person foaf:givenName ""Edin"" .
  ?person foaf:familyName ""Dervišhalidović"" .
}
```",1,1,2,1,1,2,3,28,0,0,1,0,0.0,0
767,4,train,"Give me the administration, that is a settlement, of Green.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/leaderParty> ""Green""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?administration WHERE {
  ?green a dbo:PopulatedPlace ;
         rdfs:label ""Green""@en .
  
  ?green dbp:partOf ?administration .

  FILTER EXISTS { 
    ?administration a dbo:PopulatedPlace .
  }
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
485,8,train,"Give me the entity in the region, that is a country, of Western European Time.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Western_European_Time> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/country> ?v1 . },"```sparql
PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?country WHERE {
  ?country a dbo:Country .
  ?country rdfs:label ?label .
  FILTER (lang(?label) = 'en') .
  ?country dbp:timeZone ?timezone .
  FILTER (str(?timezone) = ""Western European Time"")
}
```",2,3,3,2,1,2,3,28,0,0,46363,0,0.0,0
488,10,train,Give me the administration of Emperor Go-Yōzei and birth place of Enomoto Takeaki.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Emperor_Go-Yōzei> . <http://dbpedia.org/resource/Enomoto_Takeaki> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?administration WHERE {
  ?emperor a dbo:Monarch ;
           foaf:name ""Go-Yōzei""@en .
  ?emperor dbo:reign ?administration .
}

UNION

SELECT ?birthPlace WHERE {
  ?person a dbo:Person ;
          foaf:name ""Enomoto Takeaki""@en .
  ?person dbo:birthPlace ?birthPlace .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
16,15,train,Who is the person born as the birth name of Ted McGinley?,SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
SELECT ?givenName ?familyName WHERE {
  ?person foaf:name ""Ted McGinley""@en .
  ?person foaf:givenName ?givenName .
  ?person foaf:familyName ?familyName .
}
```",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
197,3,train,Who is the awardee of Leroy P. Steele Prize?,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ""Leroy P. Steele Prize""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?awardee WHERE {
  ?prize dbo:name ""Leroy P. Steele Prize""@en .
  ?prize dbo:awardedTo ?awardee .
}
```",1,1,2,1,1,2,2,9,0,0,21,0,0.0,0
488,13,train,"Give me the death place of the father, that is a politician, of Yūki Hideyasu.",SELECT ?result WHERE { <http://dbpedia.org/resource/Yūki_Hideyasu> <http://dbpedia.org/property/father> ?v1 . ?v1 <http://dbpedia.org/ontology/deathPlace> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?fatherDeathPlace WHERE {
  ?yuki a dbo:Person ;
        rdfs:label ""Yūki Hideyasu""@en .
  
  OPTIONAL { 
    ?yuki dbp:father ?father .
    
    ?father a dbo:Politician ;
            dbo:deathPlace ?fatherDeathPlace .
  }
}
```",2,3,3,2,1,3,3,71,2,0,0,1.0,1.0,1.0
701,9,train,Give me the parent of Meritamen and parent of Henuttawy (19th dynasty).,SELECT ?result WHERE { <http://dbpedia.org/resource/Meritamen> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Henuttawy_(19th_dynasty)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?parentName WHERE {
  {
    ?meritamen dbo:mother ?mother .
    ?meritamen rdf:type dbo:Person .
    FILTER (STR(?meritamen) = ""Meritamen"")
    OPTIONAL { ?mother rdfs:label ?parentName . }
  } UNION {
    ?meritamen dbo:father ?father .
    ?meritamen rdf:type dbo:Person .
    FILTER (STR(?meritamen) = ""Meritamen"")
    OPTIONAL { ?father rdfs:label ?parentName . }
  } UNION {
    ?henuttawy dbo:mother ?mother .
    ?henuttawy rdf:type dbo:Person .
    FILTER (STR(?henuttawy) = ""Henuttawy"")
    OPTIONAL { ?mother rdfs:label ?parentName . }
  } UNION {
    ?henuttawy dbo:father ?father .
    ?henuttawy rdf:type dbo:Person .
    FILTER (STR(?henuttawy) = ""Henuttawy"")
    OPTIONAL { ?father rdfs:label ?parentName . }
  }
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
10,8,train,"Give me the associated musical artist of the person born, that is an artist, as Matt Colton.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ""Matt Colton""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?artistName WHERE {
  ?person foaf:givenName ""Matt"" .
  ?person foaf:surname ""Colton"" .
  ?person dbo:occupation dbr:Audio_engineer .
  OPTIONAL { ?person foaf:name ?alias . }
  FILTER EXISTS { ?person dbo:birthName ?realName . }
  BIND(COALESCE(?alias, ?person) AS ?artistName)
}
```",2,3,3,2,1,2,3,28,0,0,4,0,0.0,0
528,8,train,Give me the person born as Narciso Campero Leyes.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Narciso Campero Leyes""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person ?realName WHERE {
  ?person dbo:birthName ""Narciso Campero Leyes"" .
  OPTIONAL { ?person foaf:name ?realName }
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
54,15,train,Give me the father of the child of Thinkhaya of Pagan.,SELECT ?result WHERE { <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?father WHERE {
  ?thinkhaya a dbo:Person ;
             foaf:name ""Thinkhaya""@en .
  
  ?child dbo:parent ?thinkhaya .

  ?child dbo:parent ?father .
}
```",2,2,3,2,1,3,3,71,1,0,0,1.0,1.0,1.0
360,0,train,Give me the writer of The Roaring Silence.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Roaring_Silence> <http://dbpedia.org/property/writer> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?author WHERE {
  ?book dbo:title ""The Roaring Silence""@en .
  ?book a dbo:Book .
  ?book dbo:author ?author .
}
```",1,1,2,1,1,2,3,28,0,0,8,0,0.0,0
404,13,train,"Give me the parent of the child, that is a royalty, of Ernest Augustus, Duke of Brunswick.","SELECT ?result WHERE { <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?parent WHERE {
  ?ernestAugustus a dbo:Duke ;
                  foaf:name ""Ernest Augustus, Duke of Brunswick""@en .
  
  ?child dbo:childOf ?ernestAugustus ;
         a dbo:RoyalFamilyMember .

  ?child dbo:parent ?parent .
}
```",2,3,3,2,1,3,3,71,0,0,2,0,0.0,0
547,6,train,Give me the actor of Enemy at the Door.,SELECT ?result WHERE { <http://dbpedia.org/resource/Enemy_at_the_Door> <http://dbpedia.org/property/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?actor WHERE {
  ?movie dbo:title ""Enemy at the Door""@en .
  ?movie dbo:starring ?actor .
}
```",1,1,2,1,1,3,3,71,0,0,8,0,0.0,0
318,4,train,Give me the person born in 1970 and professional in Composer.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/Composer> . ?result <http://dbpedia.org/ontology/birthYear> ""1970""^^<http://www.w3.org/2001/XMLSchema#gYear> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
    ?person a dbo:Person .
    ?person dbo:birthYear ""1970""^^xsd:gYear .
    ?person dbo:occupation dbr:Composer .
}
```",2,2,3,1,2,2,2,9,7,1,0,0.875,1.0,0.9333333333333333
626,6,train,Give me the commander in Battle of Leipzig and awardee of Order of St. Andrew.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Order_of_St._Andrew> . <http://dbpedia.org/resource/Battle_of_Leipzig> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  ?battle rdfs:label ""Battle of Leipzig""@en .
  ?battle dbo:commander ?commander .

  ?order rdfs:label ""Order of St. Andrew""@en .
  ?order dbo:awardee ?commander .
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
767,13,train,Give me the alma mater of the administration of George K. Nash.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/almaMater> ?result . ?v1 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/George_K._Nash> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?almaMater WHERE {
  ?person a dbo:Person ;
          foaf:name ""George K. Nash""@en .
  ?person dbo:almaMater ?almaMater .
}
```",2,2,3,2,1,3,3,71,0,0,6,0,0.0,0
9,13,train,Give me the alma mater of the awardee of Royal Medal.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Medal> . ?v1 <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person ?almaMater WHERE {
  ?person dbo:award dbr:Royal_Medal .
  ?person dbo:almaMater ?almaMater .
}
```",2,2,3,2,1,3,3,71,31,286,0,0.09779179810725552,1.0,0.1781609195402299
182,1,train,Give me the war of Jagath Dias.,SELECT ?result WHERE { <http://dbpedia.org/resource/Jagath_Dias> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?war WHERE {
  ?person rdfs:label ""Jagath Dias""@en .
  ?person dbo:associatedWith ?event .
  ?event rdf:type dbo:Battle OR ?event rdf:type dbo:MilitaryConflict .
  ?event rdfs:label ?war .
}
```",1,1,2,1,1,2,3,28,0,0,5,0,0.0,0
801,13,train,"Give me the producer of the work, that is a musical work and a song and a work, of 50 Cent.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v1 <http://dbpedia.org/ontology/producer> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/50_Cent> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?song ?title WHERE {
  ?producer dbr:50_Cent .
  ?song dbo:producer ?producer ;
        a dbo:Song .
  ?song rdfs:label ?title .
  FILTER (lang(?title) = 'en')
}
```",2,5,3,2,1,3,3,71,0,0,38,0,0.0,0
534,4,train,"Give me the location, that is a venue and an architectural structure, of 2012 Pro12 Grand Final.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ArchitecturalStructure>. <http://dbpedia.org/resource/2012_Pro12_Grand_Final> <http://dbpedia.org/ontology/location> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Venue>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?location WHERE {
  ?event dbo:eventLocation ?location .
  ?location a dbo:Venue ;
            a dbo:ArchitecturalStructure .
  
  FILTER (str(?event) = ""Pro12_Grand_Final_2012"")
}
```",1,3,2,1,1,3,2,20,0,0,1,0,0.0,0
645,3,train,"Give me the residence, that is a country, of James Wilkes Maurice.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/James_Wilkes_Maurice> <http://dbpedia.org/property/residence> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?residence WHERE {
  ?person dbo:residence ?residence .
  ?residence rdf:type dbo:Country .
  ?person rdfs:label ""James Wilkes Maurice""@en .
}
```",1,2,2,1,1,3,2,20,0,0,1,0,0.0,0
747,3,train,"Who is the person decedent, that is an athlete and a soccer player, at Zolotonosha?",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Zolotonosha> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name WHERE {
  ?person a dbo:Athlete ;
          a dbo:SoccerPlayer .
  ?person dbo:name ?name .
  ?person dbo:deathPlace dbr:Zolotonosha .
}
```",1,3,2,1,1,3,3,71,0,0,1,0,0.0,0
404,9,train,Give me the spouse of Princess Victoria Louise of Prussia and parent of Prince Ernest Augustus of Hanover (born 1914).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Prince_Ernest_Augustus_of_Hanover_(born_1914)> . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
    ?princess rdf:type dbo:Princess .
    ?princess rdfs:label ""Victoria Louise, Princess Royal""@en .
    
    ?princess dbo:spouse ?spouse .

    OPTIONAL { 
        ?child dbo:parent ?spouse ;
               rdfs:label ""Ernest Augustus of Hanover (1914–1987)""@en .
    }
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
617,12,train,Give me the spouse of Laodice IV and parent of Nysa (wife of Pharnaces I of Pontus).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Nysa_(wife_of_Pharnaces_I_of_Pontus)> . <http://dbpedia.org/resource/Laodice_IV> <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  ?laodiceIV rdf:type dbo:Person ;
             rdfs:label ""Laodice IV""@en .
  ?laodiceIV dbo:spouse ?spouse .
  ?nysa rdf:type dbo:Person ;
        rdfs:label ""Nysa (wife of Pharnaces I of Pontus)""@en .
  ?spouse dbo:child ?nysa .
}
```",2,2,3,1,2,3,3,71,1,0,0,1.0,1.0,1.0
712,10,train,Who is the awardee of the show of Soviet Union?,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ?v0 . ?v0 <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/Soviet_Union> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?show ?awardee WHERE {
  ?show a dbo:TelevisionShow ;
        dbo:country dbr:Soviet_Union .
  OPTIONAL { 
    ?award dbo:recipient ?awardee .
    ?show dbo:award ?award .
  }
}
```",2,2,3,2,1,3,2,20,0,15,1209,0.0,0.0,0
528,12,train,Give me the war of Orozimbo Barbosa and force of Narciso Campero.,SELECT ?result WHERE { <http://dbpedia.org/resource/Orozimbo_Barbosa> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Narciso_Campero> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?battle ?description WHERE {
  ?battle dbo:participatedInBattleOrWar ?war .
  ?barbosa dbo:name ""Orozimbo Barbosa""@en ;
           dbo:participatedInBattleOrWar ?battle .
  ?campero dbo:name ""Narciso Campero""@en ;
           dbo:participatedInBattleOrWar ?battle .
  ?battle rdfs:label ?label .
  FILTER (CONTAINS(LCASE(?label), ""tacna"") && LANGMATCHES(LANG(?label), ""en""))
  OPTIONAL { ?battle dbo:description ?description }
}
```",2,2,3,1,2,3,3,71,0,0,2,0,0.0,0
30,4,train,"Give me the native of Paris and professional in Financier, businessman, vineyard owner, art collector, racehorse owner/breeder.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Financier, businessman, vineyard owner, art collector, racehorse owner/breeder""@en . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Paris> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?person ?name WHERE {
  ?person a dbo:Person .
  ?person dbo:birthPlace dbr:Paris .
  ?person rdfs:label ?name .
  FILTER (lang(?name) = 'en') .

  { ?person dbo:occupation ?occupation1 . 
    VALUES ?occupation1 { 
      dbr:Financier 
      dbr:Businessman 
      dbr:Vineyard_owner 
      dbr:Art_collector 
      dbr:Racehorse_owner_or_breeder
    } }
  UNION
  { ?person dbo:occupation ?occupation2 . 
    VALUES ?occupation2 { 
      dbr:Financier 
      dbr:Businessman 
      dbr:Vineyard_owner 
      dbr:Art_collector 
      dbr:Racehorse_owner_or_breeder
    } }
}
```",2,2,3,1,2,2,2,9,1,7,0,0.125,1.0,0.2222222222222222
303,0,train,Give me the party of Guillermo Endara.,SELECT ?result WHERE { <http://dbpedia.org/resource/Guillermo_Endara> <http://dbpedia.org/ontology/party> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?partyLabel WHERE {
  dbpedia:Guillermo_Endara dbo:partyAffiliation ?party .
  ?party rdfs:label ?partyLabel .
  FILTER (lang(?partyLabel) = 'en')
}
```",1,1,2,1,1,2,3,28,0,0,2,0,0.0,0
754,5,train,Give me the child of Ram Khamhaeng.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ram_Khamhaeng> <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?child WHERE {
  ?person a dbo:Person ;
          foaf:name ""Ram Khamhaeng""@en .
  ?person dbo:child ?child .
}
```",1,1,2,1,1,3,2,20,0,0,3,0,0.0,0
820,1,train,Give me the child of Jack Schwartzman.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Jack_Schwartzman> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?child WHERE {
  ?person dbo:child ?child .
  FILTER (?person = <http://dbpedia.org/resource/Jack_Schwartzman>)
}
```",1,1,2,1,1,3,2,20,2,1,0,0.6666666666666666,1.0,0.8
10,1,train,Give me the band member of Luke Vibert.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Luke_Vibert> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?band
WHERE {
  ?person dbo:birthName ""Luke Vibert"" .
  ?person dbo:bandMember ?band .
}
```",1,1,2,1,1,2,3,28,0,0,3,0,0.0,0
959,11,train,"Give me the member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of Eiji Ōtsuka.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/team> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. <http://dbpedia.org/resource/Eiji_Ōtsuka> <http://dbpedia.org/ontology/almaMater> ?v1 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?almaMater WHERE {
  ?person dbo:birthPlace ?place .
  FILTER (strstarts(str(?place), ""Japan"")) .
  
  ?person rdfs:label ""Eiji Ōtsuka""@en .

  ?person dbo:almaMater ?almaMater .

  ?almaMater a dbo:University ;
             a dbo:Organisation ;
             a dbo:EducationalOrganization .

  FILTER (lang(?almaMaterLabel) = 'en') .
}
```",2,6,3,2,1,3,3,71,0,0,267,0,0.0,0
365,4,train,Give me the reference to The Blasters and band of Phil Alvin.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Phil_Alvin> . ?result <http://xmlns.com/foaf/0.1/name> ""The Blasters""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?blasters ?philAlvin WHERE {
  ?blasters a dbo:Band ;
            rdfs:label ""The Blasters""@en .
  
  OPTIONAL { 
    ?member dbo:bandMember ?blasters ;
            foaf:name ""Phil Alvin""@en .
    BIND(?member AS ?philAlvin)
  }
}
```",2,2,3,1,2,2,2,9,1,0,0,1.0,1.0,1.0
963,0,train,Give me the entity in Serbia.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Serbia> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?entity WHERE {
  ?entity dbo:country dbr:Serbia .
}
```",1,1,2,1,1,3,2,20,5428,0,0,1.0,1.0,1.0
994,4,train,Give me the associated musical artist of Watchtower (band).,SELECT ?result WHERE { <http://dbpedia.org/resource/Watchtower_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?artist WHERE {
  ?band rdfs:label ""Watchtower""@en .
  ?band a dbo:Band .
  FILTER NOT EXISTS { ?band dbo:wikiPageRedirects ?other }
  ?band dbo:associatedMusicalArtist ?artist .
}
```",1,1,2,1,1,3,3,71,0,0,6,0,0.0,0
392,11,train,"Give me the province of the residence, that is a settlement and Italian, of Sebastiano Bianchetti.",SELECT ?result WHERE { <http://dbpedia.org/resource/Sebastiano_Bianchetti> <http://dbpedia.org/property/residence> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://dbpedia.org/ontology/province> ?result . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?province WHERE {
  ?person rdfs:label ""Sebastiano Bianchetti""@en.
  ?person dbo:residence ?residence.
  
  ?residence a dbo:Settlement.
  ?residence dbo:country dbr:Italy.

  OPTIONAL { ?residence dbo:administrativeTerritory ?province. }
}
```",2,4,3,2,1,2,3,28,0,0,1,0,0.0,0
427,2,train,Give me the party of Romano Prodi.,SELECT ?result WHERE { <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/ontology/party> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?partyName WHERE {
  dbpedia:Romano_Prodi dbo:partyAffiliation ?party .
  ?party rdfs:label ?partyName .
  FILTER (lang(?partyName) = 'en')
}
```",1,1,2,1,1,3,3,71,0,0,7,0,0.0,0
92,2,train,Give me the band of Joseph Michael.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Joseph_Michael> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?band WHERE {
  ?person foaf:name ""Joseph Michael"" .
  ?person dbo:band ?band .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
303,4,train,"Give me the country, that is a country, of El Valle de Antón.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/El_Valle_de_Antón> <http://dbpedia.org/ontology/country> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?country WHERE {
  ?location rdfs:label ""El Valle de Antón""@en .
  ?location dbo:country ?country .
}
```",1,2,2,1,1,2,3,28,1,0,0,1.0,1.0,1.0
64,4,train,Give me the alma mater of Jovan Hristić and entity in Serbia.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Serbia> . <http://dbpedia.org/resource/Jovan_Hristić> <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?almaMater ?entityInSerbia WHERE {
  { 
    ?person dbo:almaMater ?almaMater .
    FILTER (str(?person) = ""Jovan_Hristić"")
  }
  
  UNION
  
  {
    ?entity dbp:locationCountry ?country .
    FILTER (str(?country) = ""Serbia"")
    BIND(?entity AS ?entityInSerbia)
  }
}
```",2,2,3,1,2,2,2,9,0,119,1,0.0,0.0,0
534,8,train,Give me the headquarter of the owner of RDS Arena.,SELECT ?result WHERE { <http://dbpedia.org/resource/RDS_Arena> <http://dbpedia.org/ontology/owner> ?v0 . ?v0 <http://dbpedia.org/ontology/headquarter> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?headquarters WHERE {
  ?arena dbo:owner ?owner .
  FILTER(STR(?arena) = ""RDS Arena"")
  
  ?owner dbp:headquarters ?headquarters .
}
```",2,2,3,2,1,3,2,20,0,0,3,0,0.0,0
48,9,train,"Give me the writer of the work, that is a work, of Shellback (record producer).",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Shellback_(record_producer)> . ?v0 <http://dbpedia.org/property/writer> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?work (STR(?title) AS ?workTitle)
WHERE {
  ?shellback a dbo:RecordProducer ;
             foaf:name ""Shellback"" .
  
  ?work dbo:producer ?shellback ;
        rdfs:label ?title .
  
  FILTER(LANG(?title) = 'en')
}
```",2,3,3,2,1,3,2,20,0,0,1065,0,0.0,0
820,9,train,Give me the award of the author of Understanding Comics.,SELECT ?result WHERE { <http://dbpedia.org/resource/Understanding_Comics> <http://dbpedia.org/ontology/author> ?v0 . ?v0 <http://dbpedia.org/property/awards> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award WHERE {
  dbr:Understanding_Comics dbo:author ?author .
  ?author dbo:award ?award .
}
```",2,2,3,2,1,3,2,20,0,4,4,0.0,0.0,0
281,3,train,Give me the award of Jonathon Band.,SELECT ?result WHERE { <http://dbpedia.org/resource/Jonathon_Band> <http://dbpedia.org/property/awards> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?award WHERE {
  ?person a dbo:Person ;
          foaf:name ""Jonathon Band""@en .
  ?person dbo:award ?award .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
77,6,train,Give me the war of Alexander Chechenskiy and force of Alexander I of Russia.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Alexander_I_of_Russia> . <http://dbpedia.org/resource/Alexander_Chechenskiy> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war ?description WHERE {
  ?war a dbo:MilitaryConflict ;
      dbo:commander dbr:Aleksandr_I_of_Russia .
  OPTIONAL { ?war dbo:description ?description }
}
```",2,2,3,1,2,3,2,20,0,0,6,0,0.0,0
285,7,train,Give me the parent of the child of Tina Onassis Niarchos.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Tina_Onassis_Niarchos> <http://dbpedia.org/ontology/child> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT DISTINCT ?parent
WHERE {
  ?tina a dbo:Person ;
        foaf:name ""Tina Onassis Niarchos""@en .
  
  ?child dbo:child ?tina .

  ?child dbo:parent ?parent .
}
```",2,2,3,2,1,3,2,20,0,0,2,0,0.0,0
64,1,train,Give me the entity in Serbia.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Serbia> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?entity
WHERE {
  ?entity dbo:country dbr:Serbia .
}
```",1,1,2,1,1,2,2,9,5428,0,0,1.0,1.0,1.0
404,8,train,"Who is the father of Ernest Augustus, Duke of Brunswick?","SELECT ?result WHERE { <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/property/father> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?father WHERE {
  ?person rdfs:label ""Ernest Augustus, Duke of Brunswick""@en .
  OPTIONAL { ?person dbo:father ?father . }
  FILTER(LANG(?person) = 'en')
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
767,16,train,Give me the administration of the reference to George Kilbon Nash.,"SELECT ?result WHERE { ?v1 <http://xmlns.com/foaf/0.1/name> ""George Kilbon Nash""@en . ?result <http://dbpedia.org/property/governor> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?administration WHERE {
  ?person rdf:type dbo:Person .
  ?person rdfs:label ""George Kilbon Nash""@en .
  OPTIONAL { ?person dbo:employer ?administration . }
}
```",2,2,3,2,1,3,3,71,0,0,7,0,0.0,0
994,2,train,Give me the band member of Don Dokken.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Don_Dokken> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandMember WHERE {
  VALUES ?donDokken { dbr:Don_Dokken }
  ?donDokken dbo:bandMember ?bandMember .
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
182,8,train,Give me the war of the author of 2019 Sri Lanka Easter bombings.,SELECT ?result WHERE { <http://dbpedia.org/resource/2019_Sri_Lanka_Easter_bombings> <http://dbpedia.org/property/author> ?v1 . ?v1 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?war WHERE {
  ?event rdfs:label ""2019 Sri Lanka Easter bombings""@en .
  ?event dbo:author ?author .
  ?author dbo:wikiPageWikiLink ?book .
  ?book dbo:subject ?war .
}
```",2,2,3,2,1,2,3,28,0,0,2,0,0.0,0
294,5,train,"Give me the birth place, that is a settlement, of Marion James.",SELECT ?result WHERE { <http://dbpedia.org/resource/Marion_James> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?birthPlace WHERE {
  ?person dbo:name ""Marion James""@en .
  ?person dbo:birthPlace ?birthPlace .
  FILTER EXISTS { ?birthPlace rdf:type dbp:Settlement }
}
```",1,2,2,1,1,2,3,28,0,0,1,0,0.0,0
64,2,train,"Give me the person decedent, that is a writer, at Sremska Kamenica.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>. ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Sremska_Kamenica> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name WHERE {
  ?person a dbo:Writer .
  ?person dbo:deathPlace dbr:Sremska_Kamenica .
  OPTIONAL { ?person foaf:name ?name . }
}
```",1,2,2,1,1,2,2,9,2,3,0,0.4,1.0,0.5714285714285715
778,4,train,Give me the author of Pushd and popd.,SELECT ?result WHERE { <http://dbpedia.org/resource/Pushd_and_popd> <http://dbpedia.org/property/author> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?author WHERE {
  ?bash dbo:creator ?author .
  FILTER(CONTAINS(LCASE(STR(?bash)), ""bash""))
}
UNION
{
  ?gnuProject dbo:founder ?author .
  FILTER(CONTAINS(LCASE(STR(?gnuProject)), ""gnu project""))
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
16,8,train,Give me the birth name of Gigi Rice.,SELECT ?result WHERE { <http://dbpedia.org/resource/Gigi_Rice> <http://dbpedia.org/property/birthName> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthName WHERE {
  ?person rdf:type dbo:Person .
  ?person rdfs:label ""Gigi Rice""@en .
  ?person dbo:birthName ?birthName .
}
```",1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
996,0,train,Give me the force of Dagobert Sigmund von Wurmser.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Dagobert_Sigmund_von_Wurmser> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?rank WHERE {
  dbr:Dagobert_Sigmund_von_Wurmser dbo:militaryRank ?rank .
}
```",1,1,2,1,1,3,2,20,0,0,11,0,0.0,0
659,8,train,"Give me the force, that is a societal event and an event and a military conflict, of Rutger Jan Schimmelpenninck.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?event WHERE {
  ?event dbo:agent dbr:Rutger_Jan_Schimmelpenninck .
  ?event a ?eventType1 .
  FILTER (?eventType1 IN (dbr:Societal_event, dbr:Event, dbr:Military_conflict))
}
```",1,4,2,1,1,3,3,71,0,0,2,0,0.0,0
488,1,train,Give me the death place of Tokugawa Ieyasu.,SELECT ?result WHERE { <http://dbpedia.org/resource/Tokugawa_Ieyasu> <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?deathPlace WHERE {
  dbpedia:Tokugawa_Ieyasu dbo:deathPlace ?deathPlace .
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
197,6,train,Give me the birthplace of the awardee of Leroy P. Steele Prize.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/awards> ""Leroy P. Steele Prize""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?awardee ?birthPlace WHERE {
  ?awardee dbo:award <http://dbpedia.org/resource/Leroy_P._Steele_Prize> .
  ?awardee dbo:birthPlace ?birthPlace .
}
```",2,2,3,2,1,2,2,9,20,143,1,0.12269938650306748,0.9523809523809523,0.2173913043478261
378,14,train,Give me the claim to fame of the commander in Great Siege of Gibraltar.,SELECT ?result WHERE { <http://dbpedia.org/resource/Great_Siege_of_Gibraltar> <http://dbpedia.org/ontology/commander> ?v1 . ?v1 <http://dbpedia.org/ontology/knownFor> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?commander ?fame WHERE {
  ?event dbo:wikiPageRedirects dbpedia:Great_Siege_of_Gibraltar .
  ?event dbo:commander ?commander .
  OPTIONAL { ?commander dbo:famousFor ?fame . }
}
```",2,2,3,2,1,3,3,71,0,0,2,0,0.0,0
959,17,train,"Give me the team of the manager, that is a sports manager, of 1998 Kashima Antlers season.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/manager> ?v0 . <http://dbpedia.org/resource/1998_Kashima_Antlers_season> <http://dbpedia.org/ontology/manager> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?manager WHERE {
  ?team dbo:season ""1998"" .
  ?team dbo:clubTeam dbr:Kashima_Antlers .
  ?team dbo:manager ?manager .
  ?manager a dbo:SportsManager .
}
```",2,3,3,2,1,3,3,71,0,0,10,0,0.0,0
48,3,train,Give me the writer of Emotion (Carly Rae Jepsen album).,SELECT ?result WHERE { <http://dbpedia.org/resource/Emotion_(Carly_Rae_Jepsen_album)> <http://dbpedia.org/property/writer> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?writer WHERE {
  dbr:Emotion_(Carly_Rae_Jepsen_album) dbo:lyricsBy ?writer .
}
```",1,1,2,1,1,3,2,20,0,0,48,0,0.0,0
547,3,train,Give me the child of William Haliburton.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ""William Haliburton""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?child WHERE {
  ?person dbo:birthName ""William Haliburton""@en .
  ?person a dbo:Person .
  ?child foaf:parent ?person .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
959,3,train,Who is the person born in 1958?,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthYear> ""1958""^^<http://www.w3.org/2001/XMLSchema#gYear> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?birthDate WHERE {
    ?person a dbo:Person .
    ?person dbo:birthDate ?birthDate .
    FILTER (YEAR(?birthDate) = 1958)
}
ORDER BY ?person
```",1,1,2,1,1,3,3,71,2044,7379,471,0.21691605645760373,0.8127236580516899,0.342435918914391
778,3,train,Give me the award of Ralph L. Brinster.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ralph_L._Brinster> <http://dbpedia.org/property/awards> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?award WHERE {
  ?person foaf:name ""Ralph L. Brinster""@en .
  ?person dbo:award ?award .
}
```",1,1,2,1,1,3,2,20,9,0,0,1.0,1.0,1.0
547,4,train,Give me the child of James Burton (property developer).,SELECT ?result WHERE { <http://dbpedia.org/resource/James_Burton_(property_developer)> <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?child WHERE {
  ?person rdf:type dbo:Person .
  ?person dbo:name ""James Burton"" .
  FILTER(CONTAINS(LCASE(?person), ""property developer"")) .
  ?person dbo:child ?child .
}
```",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
10,11,train,Give me the professional in the birth name of Sharon Kao.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v0 . <http://dbpedia.org/resource/Sharon_Kao> <http://dbpedia.org/property/birthName> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?profession WHERE {
  ?person a dbo:Person ;
          dbp:name ""Sharon Kao"" .
  ?person dbo:birthName ?birthName .
  FILTER(?birthName = ""Chen Chia-ling"") # Assuming we know her birth name is Chen Chia-ling
  ?person dbo:occupation ?profession .
}
```",2,2,3,2,1,2,3,28,0,0,39640,0,0.0,0
767,7,train,"Give me the persona, that is a fictional character, of Matthew Burland.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?result <http://dbpedia.org/property/alterEgo> ""Matthew Burland""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?character WHERE {
  ?entity rdfs:label ""Matthew Burland""@en .
  ?entity dbo:character ?character .
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
285,10,train,Who is the professional in the award of Stan Lee?,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v0 . <http://dbpedia.org/resource/Stan_Lee> <http://dbpedia.org/property/awards> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?recipient WHERE {
  {
    # Find awards where Stan Lee is a recipient
    ?award dbo:recipient dbr:Stan_Lee .
    ?award dbo:recipient ?recipient .
  }
  UNION
  {
    # Find awards created by Stan Lee and their recipients
    ?award dbo:creator dbr:Stan_Lee .
    ?award dbo:recipient ?recipient .
  }
}
```",2,2,3,2,1,3,2,20,0,0,39640,0,0.0,0
701,8,train,Give me the father of Merneptah.,SELECT ?result WHERE { <http://dbpedia.org/resource/Merneptah> <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  dbr:Merneptah dbo:father ?father .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
626,7,train,"Give me the commander in the force, that is a military conflict, of Alexander I of Russia.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Alexander_I_of_Russia> . ?v1 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?conflict WHERE {
  ?person rdfs:label ""Alexander I of Russia""@en .
  ?person dbo:commander ?conflict .
  FILTER NOT EXISTS { ?conflict a dbo:MilitaryConflict } .
}
```",2,3,3,2,1,3,2,20,0,0,230,0,0.0,0
915,5,train,"Give me the child, that is a fictional character and a soap character, of Phillip Spaulding.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Phillip_Spaulding> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoapCharacter>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child WHERE {
  ?parent a dbo:Person ;
          foaf:name ""Phillip Spaulding""@en .
  
  ?parent dbo:child ?child .

  ?child a dbo:FictionalCharacter ;
         dbo:genre ?genre .

  VALUES ?genre { <http://dbpedia.org/resource/Category:Soap_operas> }
}
```",1,3,2,1,1,3,2,20,0,0,1,0,0.0,0
838,6,train,Give me the band member of Kerber and band of Raša Đelmaš.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Kerber> . <http://dbpedia.org/resource/Raša_Đelmaš> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?bandMember ?rašaBand 
WHERE {
  # Find the band member of Kerber
  ?kerber dbo:bandMember ?bandMember .
  FILTER (str(?kerber) = ""Kerber"")

  # Find the band associated with Raša Đelmaš
  ?raša foaf:nick ?rašaBand .
  FILTER (str(?raša) = ""Raša Đelmaš"")
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
356,8,train,"Give me the team of the native, that is a soccer player and a soccer manager, of Wolverhampton.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Wolverhampton> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?result <http://dbpedia.org/ontology/manager> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person ?team WHERE {
  ?person dbo:birthPlace dbr:Wolverhampton .
  ?person a dbo:SoccerPlayer .
  ?person a dbo:Manager .
  OPTIONAL { ?person dbo:currentTeam ?team . }
}
```",2,4,3,2,1,3,2,20,0,0,46,0,0.0,0
838,7,train,"Give me the band of the band member, that is an artist and a musical artist, of YU Grupa.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/YU_Grupa> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?memberBand WHERE {
  ?person dbo:bandMember dbp:YU_Grupa .
  ?person a dbo:Artist ;
          a dbo:MusicalArtist .
  ?person dbo:band ?memberBand .
}
```",2,4,3,2,1,3,2,20,0,0,21,0,0.0,0
827,9,train,"Who is the child, that is a royalty, of the parent of Charles Alexander, Grand Duke of Saxe-Weimar-Eisenach?","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v0 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Charles_Alexander,_Grand_Duke_of_Saxe-Weimar-Eisenach> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child WHERE {
  ?charlesAlexander dbo:givenName ""Charles Alexander"" .
  ?charlesAlexander dbo:familyName ""Saxe-Weimar-Eisenach"" .
  ?charlesAlexander dbo:parent ?parent .

  ?parent dbo:child ?child .
  
  OPTIONAL { ?child dbo:royalTitle ?title . }
  
  FILTER EXISTS { ?child dbo:royalTitle ?title } # Ensure the child is royalty
}
```",2,3,3,2,1,3,2,20,0,0,3,0,0.0,0
778,1,train,Give me the author of Chroot.,SELECT ?result WHERE { <http://dbpedia.org/resource/Chroot> <http://dbpedia.org/ontology/author> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?author WHERE {
  ?chroot rdfs:label ""Chroot""@en .
  ?chroot dbo:creator ?author .
}
```",1,1,2,1,1,3,2,20,0,0,2,0,0.0,0
285,5,train,Who is the professional in ?,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
# No valid SPARQL query can be generated due to lack of context.
```",1,1,2,1,1,3,2,20,0,0,39640,0,0.0,0
617,10,train,Give me the child of Antiochus III the Great and parent of Nysa (wife of Pharnaces I of Pontus).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Nysa_(wife_of_Pharnaces_I_of_Pontus)> . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Antiochus_III_the_Great> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?child WHERE {
  ?antiochusIII a dbo:Person ;
                rdfs:label ""Antiochus III the Great""@en .
  
  ?antiochusIII dbo:child ?child .

  OPTIONAL { 
    ?nysa a dbo:Person ;
          rdfs:label ""Nysa (wife of Pharnaces I of Pontus)""@en .
    
    FILTER EXISTS {
      ?child dbo:spouse ?nysa .
      # Alternatively, if Nysa is a child:
      # ?child dbo:child ?nysa .
    }
  }

  FILTER NOT EXISTS { 
    ?antiochusIII rdfs:label ?otherLabel .
    FILTER (?otherLabel != ""Antiochus III the Great""@en)
  }
  
  FILTER NOT EXISTS {
    ?child rdfs:label ?otherChildLabel .
    FILTER (?otherChildLabel != ?childLabel)
  }

}
```",2,2,3,1,2,3,3,71,0,0,2,0,0.0,0
16,11,train,Give me the spouse of the person born as Ted Martin McGinley.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ""Ted Martin McGinley""@en . ?v0 <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?spouse WHERE {
  ?person dbo:birthName ""Ted Martin McGinley"" .
  ?person dbo:spouse ?spouse .
}
```",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
747,9,train,Give me the person born on 1985-04-29 and band of Amba Shepherd.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Amba_Shepherd> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/birthDate> ""1985-04-29""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?birthDate ?band 
WHERE {
  ?person rdfs:label ""Amba Shepherd""@en .
  OPTIONAL { ?person dbo:birthDate ?birthDate . }
  OPTIONAL { ?person dbo:musicalBand ?band . }
  FILTER (YEAR(?birthDate) = 1985 && MONTH(?birthDate) = 4 && DAY(?birthDate) = 29)
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
465,2,train,Give me the native of Prague.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Prague> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?person ?name WHERE {
  ?person a dbo:Person .
  ?person dbo:name ?name .
  ?person dbo:birthPlace dbr:Prague .
}
```",1,1,2,1,1,2,2,9,0,0,1654,0,0.0,0
365,0,train,Give me the band of Phil Alvin.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Phil_Alvin> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?band WHERE {
  ?person a dbo:MusicalArtist ;
          foaf:name ""Phil Alvin""@en .
  ?person dbo:bandMember ?band .
}
```",1,1,2,1,1,2,2,9,0,0,1,0,0.0,0
328,7,train,"Who is the leader, that is an office holder and a politician, of Gustav Jonson?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Gustav_Jonson> <http://dbpedia.org/property/leader> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?leader WHERE {
  ?gustavJonson a dbo:Person ;
                foaf:name ""Gustav Jonson""@en .
  
  ?gustavJonson dbo:leader ?leader .

  ?leader rdf:type dbo:PublicOfficial ;
          rdf:type dbo:Politician .
}
```",1,3,2,1,1,3,3,71,0,0,1,0,0.0,0
404,12,train,"Give me the child of Ernest Augustus, Crown Prince of Hanover and parent of Prince Ernest Augustus of Hanover (born 1914).","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Prince_Ernest_Augustus_of_Hanover_(born_1914)> . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ernest_Augustus,_Crown_Prince_of_Hanover> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?child WHERE {
    ?erikChild dbo:child <http://dbpedia.org/resource/Ernest_Augustus,_Crown_Prince_of_Hanover> .
    ?erikChild dbo:parent <http://dbpedia.org/resource/Prince_Ernest_Augustus_of_Hanover_(1914-1987)> .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
177,4,train,"Give me the headquarter of Ministry of Culture, Sports and Tourism and entity in South Korea.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/South_Korea> . <http://dbpedia.org/resource/Ministry_of_Culture,_Sports_and_Tourism> <http://dbpedia.org/ontology/location> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?ministry ?headquarters WHERE {
  ?ministry a dbo:GovernmentAgency ;
            rdfs:label ?label ;
            dbo:country dbr:South_Korea .
  FILTER(CONTAINS(LCASE(?label), ""culture"") && CONTAINS(LCASE(?label), ""sports"") && CONTAINS(LCASE(?label), ""tourism""))
  
  OPTIONAL { ?ministry dbo:headquarters ?headquarters }
}
```",2,2,3,1,2,2,2,9,0,0,1,0,0.0,0
161,5,train,Who is the predecessor of Indalecio Prieto?,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Indalecio_Prieto> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?predecessorName WHERE {
  ?indalecioPrieto a dbo:Person ;
                   foaf:name ""Indalecio Prieto""@en .
  ?indalecioPrieto dbo:predecessor ?predecessor .
  ?predecessor foaf:name ?predecessorName .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
915,7,train,"Give me the resident of the birthplace, that is a settlement, of Stephen Verona.",SELECT ?result WHERE { <http://dbpedia.org/resource/Stephen_Verona> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/residence> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?resident
WHERE {
  ?person dbo:birthName ""Stephen Verona""@en .
  ?person dbo:birthPlace ?place .
  
  FILTER EXISTS { ?place rdf:type dbp:Settlement . }
  
  ?place dbo:resident ?resident .
}
```",2,3,3,2,1,3,2,20,0,0,15,0,0.0,0
339,9,train,Who is the child of the predecessor of Frederick VIII of Denmark?,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Frederick_VIII_of_Denmark> . ?result <http://dbpedia.org/property/father> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child WHERE {
  ?frederickVIII a dbo:Monarch ;
                 dbp:country ""Denmark""^^xsd:string .
  
  ?predecessor dbo:successor ?frederickVIII .

  ?predecessor dbo:child ?child .
}
```",2,2,3,2,1,3,2,20,0,0,6,0,0.0,0
345,5,train,"Who is the person born, that is a soccer player and a soccer manager, on 1978-09-15?","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?result <http://dbpedia.org/ontology/birthDate> ""1978-09-15""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?person ?name WHERE {
  ?person dbo:birthDate ""1978-09-15""^^xsd:date .
  ?person dbo:occupation ?occupation1 .
  ?person dbo:occupation ?occupation2 .
  FILTER (
    (CONTAINS(LCASE(str(?occupation1)), ""soccer player"") && CONTAINS(LCASE(str(?occupation2)), ""soccer manager"")) ||
    (CONTAINS(LCASE(str(?occupation2)), ""soccer player"") && CONTAINS(LCASE(str(?occupation1)), ""soccer manager""))
  )
  ?person foaf:name ?name .
}
```",1,3,2,1,1,3,2,20,0,0,3,0,0.0,0
701,13,train,Give me the parent of the child of Ramesses II.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ramesses_II> . ?result <http://dbpedia.org/ontology/child> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT DISTINCT ?parent
WHERE {
  ?ramesses2 dbo:child ?child .
  FILTER (str(?ramesses2) = ""Ramesses II"")
  
  ?child dbo:parent ?parent .
}
```",2,2,3,2,1,3,3,71,0,0,2,0,0.0,0
485,1,train,Give me the birth place of Thomas Warner (poet).,SELECT ?result WHERE { <http://dbpedia.org/resource/Thomas_Warner_(poet)> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace WHERE {
  ?person a dbo:Writer ;
          foaf:name ""Thomas Warner"" ;
          dbo:occupation dbo:Poet .
  ?person dbo:birthPlace ?birthPlace .
}
```",1,1,2,1,1,2,3,28,0,0,2,0,0.0,0
184,17,train,Give me the child of the parent of Archduchess Margaret of Austria (born 1925).,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v1 . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Margaret_of_Austria_(born_1925)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  # Step 1: Identify Archduchess Margaret of Austria (born 1925)
  ?margaret a dbo:Person ;
            foaf:name ""Margaret of Austria"" ;
            dbo:birthDate ?birthDate .
  FILTER(YEAR(?birthDate) = 1925)

  # Step 2: Find her parent
  ?parent dbo:child ?margaret .

  # Step 3: Identify the child of that parent
  ?parent dbo:child ?child .

  # Step 4: Filter out Archduchess Margaret herself from the list of children
  FILTER(?child != ?margaret)
}
```",2,2,3,2,1,3,3,71,0,0,3,0,0.0,0
115,2,train,Who is the alumnus of National University of San Marcos?,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/National_University_of_San_Marcos> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?alumnus WHERE {
  ?university a dbo:University ;
              rdfs:label ""National University of San Marcos""@en .
  ?university dbo:alumnus ?alumnus .
}
```",1,1,2,1,1,2,2,9,0,0,74,0,0.0,0
161,17,train,"Give me the force, that is an event, of the figure known as El Director.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> ?v1 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://xmlns.com/foaf/0.1/nick> ""El Director""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?event WHERE {
  ?character rdfs:label ""Darth Sidious""@en .
  ?character dbo:alias dbr:Darth_Sidious .
  ?character dbo:alias dbr:Emperor_Palpatine .
  ?character dbo:alias dbr:El_Director .

  ?event dbo:character ?character .
}
```",2,3,3,2,1,3,3,71,0,0,10,0,0.0,0
303,2,train,Give me the party of Arnulfo Arias.,SELECT ?result WHERE { <http://dbpedia.org/resource/Arnulfo_Arias> <http://dbpedia.org/ontology/party> ?result . },"```sparql
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?partyLabel WHERE {
  ?person rdfs:label ""Arnulfo Arias""@en .
  ?person dbo:party ?party .
  ?party rdfs:label ?partyLabel .
  FILTER(LANG(?partyLabel) = 'en')
}
```",1,1,2,1,1,2,3,28,0,1,1,0.0,0.0,0
314,10,train,Give me the awardee of the award of Sergei Makovetsky.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ?v1 . <http://dbpedia.org/resource/Sergei_Makovetsky> <http://dbpedia.org/property/awards> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?year ?awardee WHERE {
  ?award dbo:category dbr:Cannes_Film_Festival_Award_for_Best_Actor .
  ?award dbo:recipient ?awardee .
  ?award dbo:date ?date .
  BIND(YEAR(?date) AS ?year)
  FILTER(?year > 2007)
}
ORDER BY ?year
```",2,2,3,2,1,2,3,28,0,0,951,0,0.0,0
9,6,train,Who is the awardee of Royal Medal?,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Medal> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?recipientName WHERE {
  ?medal rdf:type dbo:Award .
  ?medal rdfs:label ""Royal Medal""@en .
  ?medal dbo:recipient ?recipient .
  ?recipient foaf:name ?recipientName .
}
```",1,1,2,1,1,3,3,71,0,0,45,0,0.0,0
161,13,train,"Give me the military force of the force, that is a societal event and a military conflict, of Francisco Largo Caballero.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce WHERE {
  ?person dbo:primeMinister dbr:Francisco_Largo_Caballero .
  ?event dbo:participatedIn ?person ;
         a dbo:MilitaryConflict, dbo:SocietalEvent .
  ?event dbo:participatingGroups ?group .
  ?group dbo:militaryForce ?militaryForce .
}
```",2,4,3,2,1,3,3,71,0,0,514,0,0.0,0
281,12,train,Give me the war of New Zealand Army and entity in Colony of New Zealand.,SELECT ?result WHERE { <http://dbpedia.org/resource/New_Zealand_Army> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Colony_of_New_Zealand> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?war ?warLabel WHERE {
  ?army a dbo:MilitaryUnit ;
        rdfs:label ""New Zealand Army""@en .
  
  ?army dbo:participatedIn ?war .

  OPTIONAL { 
    ?war dbo:country dbr:Colony_of_New_Zealand .
  }

  FILTER (LANG(?warLabel) = 'en')
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
701,11,train,Give me the parent of the child of Nefertari.,SELECT ?result WHERE { <http://dbpedia.org/resource/Nefertari> <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT DISTINCT ?grandParent WHERE {
  ?nefertari dbo:child ?child .
  FILTER(STRSTARTS(STR(?nefertari), ""http://dbpedia.org/resource/Nefertari""))
  
  ?child dbo:parent ?grandParent .
}
```",2,2,3,2,1,3,3,71,2,0,0,1.0,1.0,1.0
161,4,train,"Give me the force, that is a societal event and an event and a military conflict, of Francisco Franco.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Franco> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?event WHERE {
  ?franco a dbo:Person ;
          foaf:name ""Francisco Franco""@en .
  
  ?franco dbo:associatedEvent ?event .

  ?event rdf:type/rdfs:subClassOf* (dbo:SocietalEvent ; 
                                    dbo:Event ; 
                                    dbo:MilitaryConflict) .
}
```",1,4,2,1,1,3,3,71,0,0,12,0,0.0,0
488,5,train,"Who is the father, that is an office holder, of Matsudaira Tadamasa?",SELECT ?result WHERE { <http://dbpedia.org/resource/Matsudaira_Tadamasa> <http://dbpedia.org/property/father> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?fatherName WHERE {
  ?person dbr:Matsudaira_Tadamasa dbo:father ?father .
  ?father rdfs:label ?fatherName .
  FILTER(LANG(?fatherName) = 'en')
  
  OPTIONAL { 
    ?father dbo:positionHeld ?office .
    FILTER EXISTS { ?office a dbo:Position }
  }
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
16,2,train,Give me the person born as Georgeanne Marie Rice.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Georgeanne Marie Rice""@en . }","```sparql
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  OPTIONAL { ?person foaf:givenName ""Georgeanne"" . }
  OPTIONAL { ?person foaf:familyName ""Rice"" . }
  OPTIONAL { ?person dbo:birthName ""Georgeanne Marie Rice"" . }
}
```",1,1,2,1,1,3,3,71,0,1048576,1,0.0,0.0,0
328,10,train,Give me the leader of People's Commissariat of Defense of the Soviet Union and awardee of Order of Suvorov.,SELECT ?result WHERE { <http://dbpedia.org/resource/People's_Commissariat_of_Defense_of_the_Soviet_Union> <http://dbpedia.org/ontology/leader> ?result . ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Order_of_Suvorov> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?leader ?award
WHERE {
  ?office a dbo:GovernmentMinistry ;
          rdfs:label ""People's Commissariat of Defense""@en .
  
  ?office dbo:head ?leader .

  OPTIONAL { 
    ?order dbo:awardee ?leader .
    FILTER(CONTAINS(LCASE(?order), ""order of suvorov""))
  }
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
492,14,train,"Give me the person decedent at the capital, that is a settlement, of Algeria.",SELECT ?result WHERE { <http://dbpedia.org/resource/Algeria> <http://dbpedia.org/ontology/capital> ?v1 . ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX wd: <http://www.wikidata.org/entity/>

SELECT ?person ?personLabel WHERE {
  # Find the capital of Algeria
  ?capital wdt:P36* wd:Q159; 
           a dbo:Settlement.
  
  FILTER EXISTS { ?capital wdt:P17 wd:Q30 } . # Q30 is the Wikidata item for Algeria

  # Ensure it's classified as a settlement
  ?capital a dbo:Settlement.

  # Find persons who died in this capital
  ?person dbo:deathPlace ?capital;
          a dbo:Person.
  
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
```",2,3,3,2,1,3,3,71,0,0,122,0,0.0,0
404,3,train,Give me the birth name of Princess Victoria Louise of Prussia.,SELECT ?result WHERE { <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/property/birthName> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?birthName WHERE {
  ?person rdfs:label ""Princess Victoria Louise of Prussia""@en .
  FILTER NOT EXISTS { ?person rdfs:seeAlso* ?alt } # Ensure we get the most relevant result
  ?person dbo:birthName ?birthName .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
701,12,train,Give me the parent of Henuttawy (19th dynasty) and spouse of Ramesses II.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Henuttawy_(19th_dynasty)> . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Ramesses_II> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?parent ?spouse WHERE {
  # Find the parent of Henuttawy (19th dynasty)
  ?henuttawy dbo:name ""Henuttawy""@en .
  ?henuttawy dbo:birthPlace ?place .
  ?henuttawy dbo:deathPlace ?place2 .
  ?henuttawy dbo:parent ?parent .

  FILTER EXISTS { 
    ?henuttawy dbo:era ""19th dynasty""^^xsd:string .
  }

  # Find the spouse of Ramesses II
  ?ramessesII dbo:name ""Ramesses II""@en .
  ?ramessesII dbo:spouse ?spouse .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
421,11,train,Give me the person born as the birth name of Dino Merlin.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Dino_Merlin> <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX schema: <http://schema.org/>

SELECT ?person ?fullName WHERE {
  ?person a foaf:Person .
  OPTIONAL { ?person foaf:name ?fullName . }
  FILTER(CONTAINS(LCASE(?fullName), ""dino merlin"") || CONTAINS(LCASE(STR(?person)), ""dino merlin""))
}
```",2,2,3,2,1,2,3,28,1,1,0,0.5,1.0,0.6666666666666666
492,12,train,Give me the person decedent at Algiers and commander in Franco-Hova Wars.,SELECT ?result WHERE { <http://dbpedia.org/resource/Franco-Hova_Wars> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Algiers> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?deathPlace ?role
WHERE {
  ?person dbo:deathPlace dbr:Algiers .
  ?person dbo:militaryCommanderOf dbr:Franco-Hova_Wars .
  OPTIONAL { ?person dbp:title ?role }
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
783,5,train,"Give me the person born, that is an artist and a musical artist, as Priscilla Opoku-Kwarteng.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/birthName> ""Priscilla Opoku-Kwarteng""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  ?person foaf:name ""Priscilla Opoku-Kwarteng"" .
  ?person a dbo:Artist .
  ?person a dbo:MusicalArtist .
}
```",1,3,2,1,1,3,2,20,0,0,1,0,0.0,0
963,5,train,"Give me the ruling party, that is a political party, in Sremski Karlovci.",SELECT ?result WHERE { <http://dbpedia.org/resource/Sremski_Karlovci> <http://dbpedia.org/property/leaderParty> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?party WHERE {
  ?municipality dbo:location dbr:Sremski_Karlovci .
  ?municipality dbo:government ?government .
  ?government dbo:rulingParty ?party .
  ?party a dbo:PoliticalParty .
}
```",1,2,2,1,1,3,2,20,0,0,1,0,0.0,0
285,1,train,Give me the spouse of Aristotle Onassis.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Aristotle_Onassis> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?spouse WHERE {
  <http://dbpedia.org/resource/Aristotle_Onassis> dbo:spouse ?spouse .
}
```",1,1,2,1,1,3,2,20,2,0,0,1.0,1.0,1.0
487,0,train,Give me the country of 2022 Vermont House of Representatives election.,SELECT ?result WHERE { <http://dbpedia.org/resource/2022_Vermont_House_of_Representatives_election> <http://dbpedia.org/ontology/country> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?country WHERE {
  dbr:2022_Vermont_House_of_Representatives_election dbo:country ?country .
}
```",1,1,2,1,1,3,2,20,1,0,0,1.0,1.0,1.0
177,5,train,Give me the entity in the residence of Alexander Gamelin.,SELECT ?result WHERE { <http://dbpedia.org/resource/Alexander_Gamelin> <http://dbpedia.org/property/residence> ?v0 . ?result <http://dbpedia.org/ontology/country> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?residence WHERE {
  ?person dbp:name ""Alexander Gamelin""@en .
  ?person dbo:residence ?residence .
}
```",2,2,3,2,1,2,2,9,1,1,3064,0.5,0.0003262642740619902,0.0006521030322791001
465,0,train,Give me the death place of Jiřina Štěpničková.,SELECT ?result WHERE { <http://dbpedia.org/resource/Jiřina_Štěpničková> <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?deathPlace
WHERE {
  ?person a dbo:Person ;
          foaf:name ""Jiřina Štěpničková""@en .
  ?person dbo:deathPlace ?deathPlace .
}
```",1,1,2,1,1,2,2,9,2,0,0,1.0,1.0,1.0
404,11,train,"Give me the spouse of the person born, that is a royalty, as Princess Victoria Louise of Prussia.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/property/birthName> ""Princess Victoria Louise of Prussia""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  ?person a dbo:Person ;
          rdfs:label ""Princess Victoria Louise of Prussia""@en .
  OPTIONAL { ?person dbo:royalTitle ?title . }
  ?person dbo:spouse ?spouse .
}
```",2,3,3,2,1,3,3,71,1,0,0,1.0,1.0,1.0
328,12,train,Give me the commander in Eastern Front (World War II) and leader of People's Commissariat of Defense of the Soviet Union.,SELECT ?result WHERE { <http://dbpedia.org/resource/People's_Commissariat_of_Defense_of_the_Soviet_Union> <http://dbpedia.org/ontology/leader> ?result . <http://dbpedia.org/resource/Eastern_Front_(World_War_II)> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?leader 
WHERE {
  VALUES (?role1) { (dbr:Eastern_Front_(World_War_II)) }
  VALUES (?role2) { (dbr:People's_Commissariat_of_Defence_of_the_Soviet_Union) }

  ?commander dbo:positionHeld ?role1 .
  ?leader dbo:positionHeld ?role2 .

  FILTER(?commander = dbr:Georgy_Zhukov)
  FILTER(?leader = dbr:Joseph_Stalin)
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
492,5,train,Who is the commander in Battle of Verdun?,SELECT ?result WHERE { <http://dbpedia.org/resource/Battle_of_Verdun> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?commander WHERE {
  ?battle dbo:wikiPageRedirects dbp:Battle_of_Verdun .
  ?battle dbp:commander ?commander .
}
```",1,1,2,1,1,3,3,71,0,0,17,0,0.0,0
421,5,train,Give me the birth name of Dino Merlin.,SELECT ?result WHERE { <http://dbpedia.org/resource/Dino_Merlin> <http://dbpedia.org/property/birthName> ?result . },"```sparql
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX schema: <http://schema.org/>

SELECT ?birthName WHERE {
  ?person a dbo:MusicalArtist ;
          foaf:name ""Dino Merlin""@en .
  OPTIONAL { ?person foaf:givenName ?birthName . }
  OPTIONAL { ?person schema:birthName ?birthName . }
}
```",1,1,2,1,1,2,3,28,1,0,0,1.0,1.0,1.0
996,3,train,Who is the awardee of 1778.0?,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ""1778.0""^^<http://www.w3.org/2001/XMLSchema#double> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?awardee WHERE {
  ?award a dbo:Award ;
         dbp:id ""1778.0"" .
  ?award dbo:recipient ?awardee .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
801,5,train,"Give me the professional, that is a musical artist, in Rapper.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Rapper""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?rapper ?name WHERE {
  ?rapper a dbo:MusicalArtist .
  ?rapper dbo:occupation dbr:Rapper .
  OPTIONAL { ?rapper foaf:name ?name . }
}
```",1,2,2,1,1,3,3,71,125,1825,1238,0.0641025641025641,0.09170946441672781,0.07546030787805613
16,16,train,Give me the profession of the actor of Unnatural (TV series).,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/occupation> ?result . <http://dbpedia.org/resource/Unnatural_(TV_series)> <http://dbpedia.org/property/starring> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?actorName ?profession WHERE {
  ?series rdfs:label ""Unnatural (TV series)""@en .
  ?series dbo:starring ?actor .
  ?actor rdfs:label ?actorName .
  FILTER(LANG(?actorName) = 'en')
  OPTIONAL { ?actor rdf:type ?type . }
  OPTIONAL { ?type rdfs:label ?profession . }
  FILTER(LANG(?profession) = 'en' && ?type = dbo:Actor)
}
```",2,2,3,2,1,3,3,71,0,6,3,0.0,0.0,0
391,12,train,Give me the actor of All About the Andersons and actor of The Departed.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Departed> <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/All_About_the_Andersons> <http://dbpedia.org/property/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?actor WHERE {
  { 
    ?movie dbo:title ""All About the Andersons""@en .
    ?movie dbo:starring ?actor .
  }
  UNION
  { 
    ?movie dbo:title ""The Departed""@en .
    ?movie dbo:starring ?actor .
  }
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
492,9,train,Give me the person decedent at French Algeria and commander in Franco-Hova Wars.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/French_Algeria> . <http://dbpedia.org/resource/Franco-Hova_Wars> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name
WHERE {
  ?person a dbo:MilitaryPerson .
  ?person dbo:name ?name .

  # Connection to French Algeria
  OPTIONAL { 
    ?person dbo:deathPlace dbr:Algeria ; 
            rdfs:label ?algeriaLabel .
    FILTER (CONTAINS(LCASE(?algeriaLabel), ""french algeria""))
  }

  # Connection to Franco-Hova Wars
  OPTIONAL {
    ?conflict a dbo:MilitaryConflict ;
              dbo:name ?conflictName .
    ?person dbo:commanderOfMilitaryConflict ?conflict .
    FILTER (CONTAINS(LCASE(?conflictName), ""franco-hova wars""))
  }
}
ORDER BY ?name
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
421,7,train,Give me the band member of Senidah and person born as Edin Dervišhalidović.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Edin Dervišhalidović""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Senidah> . }","```sparql
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>

SELECT ?band WHERE {
  ?senidah a dbo:Band ;
           foaf:member ?person .
  ?edin a dbo:Person ;
        foaf:name ""Edin Dervišhalidović""@en ;
        foaf:member ?person .

  FILTER (?senidah != ?edin)
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
184,7,train,Give me the parent of Archduchess Margaret of Austria (born 1925).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Margaret_of_Austria_(born_1925)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX owl: <http://www.w3.org/2002/07/owl#>

SELECT ?parent
WHERE {
  ?margaret a dbo:Archduchess ;
            dbo:birthYear ""1925""^^xsd:gYear .
  ?parent dbo:child ?margaret .
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
285,9,train,Who is the child of the spouse of Aristotle Onassis?,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?result . ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Aristotle_Onassis> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?child WHERE {
  ?spouse dbo:spouse dbr:Aristotle_Onassis .
  ?spouse dbo:child ?child .
}
```",2,2,3,2,1,3,2,20,5,0,0,1.0,1.0,1.0
547,0,train,Give me the resting place of James Burton (Egyptologist).,SELECT ?result WHERE { <http://dbpedia.org/resource/James_Burton_(Egyptologist)> <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?deathPlace ?burialPlace WHERE {
  ?person a dbo:Egyptologist ;
          foaf:name ""James Burton"" .
  
  OPTIONAL { ?person dbo:deathPlace ?deathPlace . }
  OPTIONAL { ?person dbo:burialPlace ?burialPlace . }

  FILTER (CONTAINS(LCASE(?person), ""james burton""))
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
9,14,train,Give me the figure known as the nickname of Queen's University Belfast.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ?v1 . <http://dbpedia.org/resource/Queen's_University_Belfast> <http://dbpedia.org/property/nickname> ?v1 . },"```sparql
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>

SELECT ?nickname WHERE {
  ?university a dbpedia-owl:University ;
              rdfs:label ""Queen's University Belfast""@en .
  OPTIONAL { ?university foaf:nick ?nickname . }
}
```",2,2,3,2,1,3,3,71,0,1,1,0.0,0.0,0
659,15,train,"Give me the force of the native, that is an office holder, of Kingdom of Ireland.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Kingdom_of_Ireland> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/commander> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?office WHERE {
  ?person dbo:birthPlace dbr:Kingdom_of_Ireland .
  OPTIONAL { ?person dbo:officeHolder ?office . }
  FILTER EXISTS { ?person dbo:officeHolder ?office }
}
```",2,3,3,2,1,3,3,71,0,0,60,0,0.0,0
801,16,train,"Give me the work, that is a musical work and a song and a work, of the professional, that is a musical artist, in Rapper.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/property/occupation> ""Rapper""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?result <http://dbpedia.org/property/writer> ?v1 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?work WHERE {
  ?rapper a dbo:MusicalArtist ;
          rdfs:label ?artistLabel .
  FILTER (CONTAINS(LCASE(?artistLabel), ""rapper"")) .

  ?work dbo:artist ?rapper ;
        rdf:type/rdfs:subClassOf*+ dbo:MusicalWork, dbo:Song .
}
```",2,6,3,2,1,3,3,71,0,0,2395,0,0.0,0
55,9,train,Give me the band member of Metallica and band of Newsted.,SELECT ?result WHERE { <http://dbpedia.org/resource/Newsted> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Metallica> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?metallicaMember ?newstedBand 
WHERE {
  ?metallicaMember dbo:band dbr:Metallica .
  ?metallicaMember foaf:name ""Jason Newsted"" .
  
  ?newstedBand dbo:leadArtist ?metallicaMember ;
               dbo:genre dbr:Heavy_metal_music .
}
```",2,2,3,1,2,2,3,28,0,0,3,0,0.0,0
429,0,train,Give me the administration of Andrew Johnson.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Andrew_Johnson> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?country ?startYear ?endYear WHERE {
  dbr:Andrew_Johnson dbo:presidentOf ?country .
  OPTIONAL { ?country dbo:termStart ?start . }
  OPTIONAL { ?country dbo:termEnd ?end . }
  BIND(YEAR(?start) AS ?startYear)
  BIND(YEAR(?end) AS ?endYear)
}
```",1,1,2,1,1,2,2,9,0,0,1,0,0.0,0
696,4,train,Who is the commander in Battle of Chishui River?,SELECT ?result WHERE { <http://dbpedia.org/resource/Battle_of_Chishui_River> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?commander WHERE {
  ?battle dbo:type dbr:Battle .
  ?battle rdfs:label ""Battle of Chishui River""@en .
  OPTIONAL { ?battle dbp:commander ?commander . }
}
```",1,1,2,1,1,3,2,20,0,0,24,0,0.0,0
182,7,train,Give me the entity in Sri Lanka and war of Mahesh Senanayake.,SELECT ?result WHERE { <http://dbpedia.org/resource/Mahesh_Senanayake> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Sri_Lanka> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war WHERE {
  ?person dbo:country dbr:Sri_Lanka .
  ?person rdfs:label ""Mahesh Senanayake""@en .
  
  ?person dbo:associatedWith ?war .
  FILTER (CONTAINS(LCASE(?war), ""war"") || CONTAINS(LCASE(?war), ""conflict""))
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
197,0,train,Give me the birthplace of Dumitru Nadu.,SELECT ?result WHERE { <http://dbpedia.org/resource/Dumitru_Nadu> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?birthPlaceLabel WHERE {
  ?person a dbo:Person ;
          foaf:name ""Dumitru Nadu""@en .
  ?person dbo:birthPlace ?birthPlace .
  ?birthPlace rdfs:label ?birthPlaceLabel .
  FILTER(LANG(?birthPlaceLabel) = 'en')
}
```",1,1,2,1,1,2,2,9,0,2,2,0.0,0.0,0
92,11,train,"Give me the band member of the reference, that is an artist, to Nevermore.","SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""Nevermore""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?member WHERE {
  ?band a dbo:Band ;
        rdfs:label ""Nevermore""@en .
  
  ?band dbo:bandMember ?member .

  OPTIONAL { 
    ?member dbo:artist true .
  }

  FILTER (LANG(?bandLabel) = 'en' && EXISTS { ?member dbo:artist true })
}
```",2,3,3,2,1,3,3,71,0,0,12,0,0.0,0
391,2,train,Give me the actor of All About the Andersons.,SELECT ?result WHERE { <http://dbpedia.org/resource/All_About_the_Andersons> <http://dbpedia.org/property/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?actor WHERE {
  ?movie rdfs:label ""All About the Andersons""@en .
  ?movie dbo:starring ?actor .
  FILTER(LANG(?actorLabel) = 'en')
}
```",1,1,2,1,1,3,3,71,0,0,5,0,0.0,0
626,10,train,Give me the award of the military force of Battle of Borodino.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Borodino> . ?v0 <http://dbpedia.org/property/awards> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce ?award
WHERE {
  ?battle a dbo:Battle ;
          rdfs:label ""Battle of Borodino""@en .
  
  ?battle dbo:militaryForce ?militaryForce .

  OPTIONAL {
    ?militaryForce dbo:award ?award .
  }
}
```",2,2,3,2,1,3,2,20,0,0,53,0,0.0,0
701,5,train,Give me the child of Seti I.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seti_I> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?child WHERE {
  ?setiI dbo:child ?child .
  FILTER(STRSTARTS(LCASE(?setiI), ""http://dbpedia.org/resource/seti_i""))
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
303,9,train,Give me the entity in Panama and party of Arnulfo Arias.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Panama> . <http://dbpedia.org/resource/Arnulfo_Arias> <http://dbpedia.org/ontology/party> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?party WHERE {
  ?person a dbo:Politician ;
          foaf:name ""Arnulfo Arias""@en ;
          dbp:country dbr:Panama .
  ?person dbo:politicalParty ?party .
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
435,1,train,Give me the region of Greenwich Mean Time.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Greenwich_Mean_Time> . },"```sparql
PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?region WHERE {
  ?region dbo:timeZone ?timezone .
  ?timezone rdfs:label ""Greenwich Mean Time""@en .
}
```",1,1,2,1,1,2,3,28,2484,0,0,1.0,1.0,1.0
54,11,train,Give me the child of the father of Soe Min Wimala Dewi.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Soe_Min_Wimala_Dewi> <http://dbpedia.org/property/father> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?child WHERE {
  ?soeMinWimalaDewi a dbo:Person ;
                    foaf:name ""Soe Min Wimala Dewi""@en .
  
  ?soeMinWimalaDewi dbo:father ?father .

  ?father dbo:child ?child .
}
```",2,2,3,2,1,3,3,71,0,0,3,0,0.0,0
9,3,train,"Give me the entity, that is an organisation, in Belfast.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Belfast> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?organisation WHERE {
  ?organisation rdf:type dbo:Organisation .
  ?organisation dbo:location ?place .
  FILTER (str(?place) = ""Belfast"")
}
```",1,2,2,1,1,3,3,71,0,0,57,0,0.0,0
492,1,train,Give me the commander in Franco-Hova Wars.,SELECT ?result WHERE { <http://dbpedia.org/resource/Franco-Hova_Wars> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?commanderLabel WHERE {
  dbr:Franco-Hova_Wars dbo:commander ?commander .
  ?commander rdfs:label ?commanderLabel .
  FILTER (lang(?commanderLabel) = 'en')
}
```",1,1,2,1,1,3,3,71,2,2,0,0.5,1.0,0.6666666666666666
232,12,train,Give me the native of London and actor of Dog Soldiers (film).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/London> . <http://dbpedia.org/resource/Dog_Soldiers_(film)> <http://dbpedia.org/ontology/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person dbo:nativePlace dbr:London .
  ?person dbo:actedIn dbr:Dog_Soldiers_(film) .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
645,0,train,Give me the entity in United Kingdom.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?entity WHERE {
  ?entity a dbo:Place .
  ?entity dbp:country ""United Kingdom"" .
}
```",1,1,2,1,1,3,2,20,0,0,42999,0,0.0,0
488,11,train,Give me the birth place of the commander in Boshin War.,SELECT ?result WHERE { <http://dbpedia.org/resource/Boshin_War> <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthPlace WHERE {
  ?person a dbo:Person ;
          foaf:name ""Saigō Takamori""@en .
  ?person dbo:birthPlace ?birthPlace .
}
```",2,2,3,2,1,3,3,71,0,0,15,0,0.0,0
404,7,train,Who is the spouse of Princess Victoria Louise of Prussia?,SELECT ?result WHERE { <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
  ?person dbp:name ""Victoria Louise, Princess Royal""@en .
  ?person dbo:spouse ?spouse .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
534,10,train,"Give me the owner of the location, that is a venue and an architectural structure, of 2012 Pro12 Grand Final.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/owner> ?result . <http://dbpedia.org/resource/2012_Pro12_Grand_Final> <http://dbpedia.org/ontology/location> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Venue>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ArchitecturalStructure>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?owner WHERE {
  ?event dbo:eventName ""2012 Pro12 Grand Final""@en .
  ?event dbo:location ?venue .
  
  ?venue a dbo:SportsVenue ;
         a dbo:ArchitecturalStructure .

  ?venue dbo:owner ?owner .
}
```",2,4,3,2,1,3,2,20,0,0,1,0,0.0,0
232,10,train,Give me the child of Jon Pertwee and native of London.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/London> . <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  ?person a dbo:Person ;
          foaf:name ""Jon Pertwee""@en .
  ?person dbo:child ?child .
  ?child dbo:birthPlace dbr:London .
}
```",2,2,3,1,2,3,3,71,1,0,0,1.0,1.0,1.0
184,15,train,"Give me the native of the landmark at elevation, that is a settlement, of 96.0.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://dbpedia.org/ontology/elevation> ""96.0""^^<http://www.w3.org/2001/XMLSchema#double> . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?landmark ?native 
WHERE {
  ?landmark a dbo:PopulatedPlace ;
            dbo:elevationAboveSeaLevel ?elevation ;
            dbp:nativeName ?native .
  FILTER (?elevation = ""96.0""^^xsd:float)
}
```",2,3,3,2,1,3,3,71,0,0,3320,0,0.0,0
747,2,train,Give me the band of Shèna.,SELECT ?result WHERE { <http://dbpedia.org/resource/Shèna> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?bandLabel WHERE {
  ?person rdfs:label ""Shèna""@en .
  FILTER NOT EXISTS { ?person dbo:abstract ?abstract } # Ensure it's a person, not an article
  ?person dbo:band ?band .
  ?band rdfs:label ?bandLabel .
}
```",1,1,2,1,1,3,3,71,0,0,8,0,0.0,0
485,11,train,"Give me the entity in the birth place, that is a region, of Joseph Whitaker (naturalist).",SELECT ?result WHERE { <http://dbpedia.org/resource/Joseph_Whitaker_(naturalist)> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?result <http://dbpedia.org/ontology/country> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?birthPlaceLabel
WHERE {
  ?person dbo:birthPlace ?birthPlace .
  ?birthPlace rdf:type dbpedia-owl:Region .
  ?birthPlace rdfs:label ?birthPlaceLabel .
  FILTER (lang(?birthPlaceLabel) = 'en')
  
  ?person rdfs:label ""Joseph Whitaker (naturalist)""@en .
}
```",2,3,3,2,1,2,3,28,0,0,369,0,0.0,0
754,9,train,Give me the parent of the parent of Min Linka.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Min_Linka> <http://dbpedia.org/ontology/parent> ?v0 . },"```sparql
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?grandparent WHERE {
  ?minLinka rdfs:label ""Min Linka""@en.
  ?minLinka a ?subclass1.
  ?subclass1 rdfs:subClassOf ?superclass1.
  ?superclass1 rdfs:subClassOf ?grandparent.
}
```",2,2,3,2,1,3,2,20,0,4,3,0.0,0.0,0
177,0,train,Give me the entity in South Korea.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/South_Korea> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?entity WHERE {
  ?entity dbo:country dbr:South_Korea .
}
```",1,1,2,1,1,2,2,9,3065,0,0,1.0,1.0,1.0
701,0,train,Give me the parent of Meritamen.,SELECT ?result WHERE { <http://dbpedia.org/resource/Meritamen> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parentLabel WHERE {
  VALUES ?meritamen { dbr:Meritamen }
  OPTIONAL { ?meritamen dbo:mother ?parent . }
  OPTIONAL { ?meritamen dbo:father ?parent . }
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
365,3,train,Give me the real name of The Blasters.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Blasters> <http://xmlns.com/foaf/0.1/name> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?realName
WHERE {
  ?band rdfs:label ""The Blasters""@en .
  ?band dbo:originalName ?realName .
}
```",1,1,2,1,1,2,2,9,0,0,1,0,0.0,0
996,2,train,Give me the elevation of Lac d'Avoriaz.,SELECT ?result WHERE { <http://dbpedia.org/resource/Lac_d'Avoriaz> <http://dbpedia.org/ontology/elevation> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?elevation
WHERE {
  ?lake rdf:type dbo:Lake ;
        rdfs:label ""Lac d'Avoriaz""@en .
  OPTIONAL { ?lake dbo:elevation ?elevation . }
}
```",1,1,2,1,1,3,2,20,1,0,0,1.0,1.0,1.0
9,8,train,Give me the nickname of Queen's University Belfast.,SELECT ?result WHERE { <http://dbpedia.org/resource/Queen's_University_Belfast> <http://dbpedia.org/property/nickname> ?result . },"```sparql
PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?nickname WHERE {
  ?university a dbpedia-owl:University ;
              rdfs:label ""Queen's University Belfast""@en .
  
  OPTIONAL { ?university dbo:nickName ?nickname . }
  OPTIONAL { ?university foaf:nick ?nickname . }
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
161,10,train,Give me the military force of Rif War and commander in Biscay Campaign.,SELECT ?result WHERE { <http://dbpedia.org/resource/Biscay_Campaign> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Rif_War> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?rifWarForce ?rifWarCommander ?biscayCampaignForce ?biscayCampaignCommander WHERE {
  # Rif War
  OPTIONAL {
    ?rifWarEvent a dbo:MilitaryConflict ;
                 rdfs:label ?rifWarLabel .
    FILTER(CONTAINS(LCASE(?rifWarLabel), ""riff war"") || CONTAINS(LCASE(?rifWarLabel), ""rif war"")) .

    ?rifWarForce dbo:participatingMilitaryUnitIn ?rifWarEvent ;
                rdfs:label ?rifWarForceLabel .
    
    OPTIONAL {
      ?rifWarCommander dbo:commanderOf ?rifWarForce ;
                      rdfs:label ?rifWarCommanderLabel .
    }
  }

  # Biscay Campaign
  OPTIONAL {
    ?biscayCampaignEvent a dbo:MilitaryConflict ;
                         rdfs:label ?biscayCampaignLabel .
    FILTER(CONTAINS(LCASE(?biscayCampaignLabel), ""biscay campaign"") || CONTAINS(LCASE(?biscayCampaignLabel), ""u-boat campaign in the baltic sea"")) .

    ?biscayCampaignForce dbo:participatingMilitaryUnitIn ?biscayCampaignEvent ;
                         rdfs:label ?biscayCampaignForceLabel .
    
    OPTIONAL {
      ?biscayCampaignCommander dbo:commanderOf ?biscayCampaignForce ;
                               rdfs:label ?biscayCampaignCommanderLabel .
    }
  }
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
994,1,train,Give me the associated musical artist of Red Tide (band).,SELECT ?result WHERE { <http://dbpedia.org/resource/Red_Tide_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?artist WHERE {
  ?band a dbo:Band ;
        rdfs:label ""Red Tide""@en .
  ?band dbo:associatedMusicalArtist ?artist .
}
```",1,1,2,1,1,3,3,71,0,0,6,0,0.0,0
251,0,train,Give me the location of Battle of Marengo.,SELECT ?result WHERE { <http://dbpedia.org/resource/Battle_of_Marengo> <http://dbpedia.org/ontology/place> ?result . },"```sparql
PREFIX dbp: <http://dbpedia.org/property/>
SELECT ?location WHERE {
  ?battle dbp:name ""Battle of Marengo""@en .
  ?battle dbp:location ?location .
}
```",1,1,2,1,1,2,3,28,0,0,3,0,0.0,0
915,4,train,"Give me the parent, that is a fictional character and a soap character, of Lizzie Spaulding.",SELECT ?result WHERE { <http://dbpedia.org/resource/Lizzie_Spaulding> <http://dbpedia.org/ontology/parent> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoapCharacter>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  ?lizzie a dbo:FictionalCharacter ;
          dbo:spouseOrPartner ?parent .
  
  FILTER (CONTAINS(LCASE(?lizzie), ""lizzie spaulding"")) .

  ?parent a dbo:FictionalCharacter ;
          dbo:genre ?soapGenre .

  FILTER EXISTS { 
    ?soapGenre rdfs:label ?label .
    FILTER(CONTAINS(LCASE(?label), ""soap""))
  }
}
```",1,3,2,1,1,3,2,20,0,0,2,0,0.0,0
16,13,train,Give me the professional in the profession of Satomi Ishihara.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Satomi_Ishihara> <http://dbpedia.org/property/occupation> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?professional WHERE {
  ?satomiIshihara rdfs:label ""Satomi Ishihara""@en .
  ?satomiIshihara dbo:occupation ?profession .

  ?otherPerson dbo:occupation ?profession .
  FILTER(?otherPerson != ?satomiIshihara)
}
```",2,2,3,2,1,3,3,71,0,0,19241,0,0.0,0
617,2,train,Give me the parent of Nysa (wife of Pharnaces I of Pontus).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Nysa_(wife_of_Pharnaces_I_of_Pontus)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  VALUES ?nysa { dbr:Nysa_(wife_of_Pharnaces_I_of_Pontus) }
  OPTIONAL { ?nysa dbo:mother ?parent . }
  OPTIONAL { ?nysa dbo:father ?parent . }
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
659,5,train,"Give me the figure known, that is a military unit and an organisation, as 'Polish Horse'.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?result <http://dbpedia.org/property/nickname> ""'Polish Horse'""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?entity ?label ?description ?militaryUnit ?organization
WHERE {
  ?entity rdfs:label ""Polish Horse""@en .
  OPTIONAL { ?entity dbo:militaryUnit ?militaryUnit . }
  OPTIONAL { ?entity dbo:organization ?organization . }
  SERVICE <http://dbpedia.org/sparql> {
    ?entity rdfs:comment ?description .
  }
}
```",1,3,2,1,1,3,3,71,0,0,1,0,0.0,0
391,7,train,Who is the professional in ?,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
# This query is intentionally left incomplete due to lack of context.
SELECT ?professional WHERE {
  # Placeholder for missing details, e.g., ?professional dbo:fieldOfStudy ?field .
}
```",1,1,2,1,1,3,3,71,0,0,39640,0,0.0,0
659,10,train,Give me the military force of Napoleonic Wars and commander in German campaign of 1813.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Napoleonic_Wars> . <http://dbpedia.org/resource/German_campaign_of_1813> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce ?commander WHERE {
  # Find the German campaign of 1813
  dbr:German_Campaign_of_1813 dbo:partOf dbr:Napoleonic_Wars .
  
  # Identify military forces involved in the campaign
  ?campaign dbo:militaryUnit ?militaryForce .
  FILTER(?campaign = dbr:German_Campaign_of_1813)
  
  # Find commanders of these military forces
  ?militaryForce dbo:commander ?commander .
}
```",2,2,3,1,2,3,3,71,0,0,6,0,0.0,0
179,6,train,Give me the person born as Mom Rajawongse Sirikit Kitiyakara and parent of Ubol Ratana.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Mom Rajawongse Sirikit Kitiyakara""@en . <http://dbpedia.org/resource/Ubol_Ratana> <http://dbpedia.org/ontology/parent> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  ?person dbo:birthName ""Mom Rajawongse Sirikit Kitiyakara""@en .
  ?child dbo:parent ?person ;
         rdfs:label ""Ubol Ratana""@en .
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
696,9,train,"Who is the member of the associated musical artist, that is an organisation and a group and a band, of The Boils?",SELECT ?result WHERE { <http://dbpedia.org/resource/The_Boils> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://dbpedia.org/ontology/bandMember> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?organization WHERE {
  ?entity rdf:type dbo:Band .
  ?entity rdf:type dbo:Group .
  ?entity rdf:type dbo:Organization .
  ?entity dbo:associatedMusicalArtist dbr:The_Boils .
}
```",2,5,3,2,1,3,2,20,0,0,6,0,0.0,0
696,10,train,Give me the award of the commander in Battle of Chishui River.,SELECT ?result WHERE { <http://dbpedia.org/resource/Battle_of_Chishui_River> <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://dbpedia.org/property/awards> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?commander ?award WHERE {
  ?battle a dbo:Battle .
  ?battle rdfs:label ""Battle of Chishui River""@en .
  
  OPTIONAL { 
    ?battle dbo:commander ?commander .
    ?commander dbp:honor ?award .
  }
}
```",2,2,3,2,1,3,2,20,0,0,9,0,0.0,0
492,4,train,"Give me the work of US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/author> ""US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?work WHERE {
  ?person a dbo:Person ;
          foaf:name ""Joseph C. Satterthwaite""@en .
  
  ?positionHeld dbo:officeHolder ?person ;
                rdfs:label ?positionLabel .

  FILTER(CONTAINS(LCASE(?positionLabel), ""us assistant secretary of state for african affairs""))

  OPTIONAL {
    ?work dbo:agent ?person ;
          rdf:type dbo:Work .
    }
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
767,6,train,Give me the administration of George K. Nash.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/George_K._Nash> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?positionHeld WHERE {
  VALUES ?nash { dbr:George_K._Nash }
  ?nash dbo:positionHeld ?positionHeld .
}
```",1,1,2,1,1,3,3,71,0,0,7,0,0.0,0
747,10,train,Give me the band of Shèna and person born on 1985-04-29.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Shèna> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/birthDate> ""1985-04-29""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band ?person WHERE {
  # Find the band associated with Shèna
  OPTIONAL {
    ?shena a dbo:MusicArtist ;
           foaf:name ""Shèna"" .
    ?shena dbo:band ?band .
  }
  
  # Find a person born on April 29, 1985
  OPTIONAL {
    ?person a dbo:Person ;
            dbo:birthday ?birthday .
    FILTER (YEAR(?birthday) = 1985 && MONTH(?birthday) = 4 && DAY(?birthday) = 29)
  }
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
356,2,train,"Give me the predecessor, that is a sports team season and a soccer club season, of 2015 Sacramento Republic FC season.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/2015_Sacramento_Republic_FC_season> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?predecessor WHERE {
  ?season a dbo:SoccerSeason ;
          dbo:team dbr:Sacramento_Republic_FC ;
          dbo:year ""2015""^^xsd:gYear .
  
  OPTIONAL { 
    ?season dbo:predecessor ?predecessor .
  }
}
```",1,3,2,1,1,3,2,20,0,0,1,0,0.0,0
177,1,train,"Give me the headquarter of Ministry of Culture, Sports and Tourism.","SELECT ?result WHERE { <http://dbpedia.org/resource/Ministry_of_Culture,_Sports_and_Tourism> <http://dbpedia.org/ontology/location> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?headquarters WHERE {
  dbr:Ministry_of_Culture_Sports_and_Tourism dbo:headquarters ?headquarters .
}
```",1,1,2,1,1,2,2,9,0,0,2,0,0.0,0
666,5,train,Give me the nickname of England national beach soccer team.,SELECT ?result WHERE { <http://dbpedia.org/resource/England_national_beach_soccer_team> <http://dbpedia.org/property/nickname> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?nickname WHERE {
  ?team a dbo:NationalSoccerTeam ;
        dbp:name ""England national beach soccer team""@en .
  OPTIONAL { ?team dbp:commonName ?nickname . }
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
378,5,train,"Give me the reference, that is a military conflict, to Peninsular War.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://xmlns.com/foaf/0.1/name> ""Peninsular War""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX wd: <http://www.wikidata.org/entity/>

SELECT ?reference WHERE {
  wd:Q1234 dbo:militaryConflict ?reference .
}
```

Note: Replace `wd:Q1234` with the actual Wikidata ID for ""Peninsular War"" if known. If not, you may need to adjust the query to directly reference DBpedia's resource URI for the Peninsular War.",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
435,7,train,"Give me the territory administered from Reykjavík and work of Article 62, Section IV of Constitution of Iceland.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Reykjavík> . ?result <http://dbpedia.org/property/author> ""Article 62, Section IV of Constitution of Iceland""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?territory WHERE {
    ?administeredBy a dbo:AdministrativeRegion ;
                   dbo:administrativeCapital dbr:Reykjavík .
    ?administeredBy dbo:administrativeTerritory ?territory .
}

UNION

SELECT ?articleDescription WHERE {
    ?constitution dbr:Iceland_Constitution ;
                  dbo:wikiPageWikiLink ?article .
    ?article rdfs:label ""Article 62, Section IV""@en ;
             dbo:abstract ?articleDescription .
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
626,2,train,Who is the commander in Battle of Paris (1814)?,SELECT ?result WHERE { <http://dbpedia.org/resource/Battle_of_Paris_(1814)> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?commander ?commanderLabel
WHERE {
  ?battle a dbo:Battle ;
          rdfs:label ""Battle of Paris (1814)""@en .
  
  ?battle dbp:commander ?commander .

  OPTIONAL { 
    ?commander rdfs:label ?commanderLabel .
    FILTER(LANG(?commanderLabel) = 'en')
  }
}
```",1,1,2,1,1,3,2,20,0,0,11,0,0.0,0
528,11,train,Give me the war of the military force of Battle of Pisagua.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Pisagua> . ?v0 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce ?country WHERE {
  # Find entities related to the Battle of Pisagua
  ?battle dbo:wikiPageRedirects dbr:Battle_of_Pisagua .
  
  # Identify military forces involved in the battle
  ?battle dbo:militaryConflicts ?conflict .
  ?conflict dbo:participatingMilitaryUnit ?militaryForce .

  # Filter to get only Chilean and Peruvian forces
  FILTER (
    EXISTS { ?militaryForce dbo:country dbr:Chile } ||
    EXISTS { ?militaryForce dbo:country dbr:Peru }
  )

  # Get the country associated with each military force
  OPTIONAL { ?militaryForce dbo:country ?country }
}
```",2,2,3,2,1,3,3,71,0,0,30,0,0.0,0
281,13,train,"Give me the entity in the birth place, that is a country, of Bob Heffron.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/place> ?v1 . <http://dbpedia.org/resource/Bob_Heffron> <http://dbpedia.org/ontology/birthPlace> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?birthPlace
WHERE {
  ?person dbo:birthName ""Bob Heffron"" .
  ?person dbo:birthPlace ?birthPlace .
  ?birthPlace rdf:type dbo:Country .
}
```",2,3,3,2,1,3,3,71,0,0,1,0,0.0,0
783,4,train,Give me the persona of Ebony Reigns.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ebony_Reigns> <http://xmlns.com/foaf/0.1/givenName> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?property ?value
WHERE {
  VALUES ?resource { dbr:Ebony_Reigns }
  ?resource ?property ?value .
  FILTER (
    ?property IN (dbo:genre, dbo:notableWork, dbo:award)
  )
}
```",1,1,2,1,1,3,2,20,0,3,1,0.0,0.0,0
492,15,train,Give me the work of the author of French Algeria.,SELECT ?result WHERE { <http://dbpedia.org/resource/French_Algeria> <http://dbpedia.org/property/author> ?v1 . ?result <http://dbpedia.org/property/author> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?work WHERE {
  # Find the author associated with French Algeria
  dbr:Albert_Camus dbo:nationality dbr:France .
  
  # Retrieve works by Albert Camus
  dbr:Albert_Camus dbo:literaryWork ?work .
}
```",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
378,3,train,Give me the birth name of Carl Pontus Gahn.,SELECT ?result WHERE { <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/property/birthName> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthName WHERE {
  ?person a dbo:Person ;
          foaf:name ""Carl Pontus Gahn""@en .
  ?person dbo:birthName ?birthName .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
435,2,train,"Give me the work of Article 62, Section IV of Constitution of Iceland.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/author> ""Article 62, Section IV of Constitution of Iceland""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?sectionText
WHERE {
  ?constitution rdfs:label ""Constitution of Iceland""@en .
  ?constitution dbo:wikiPageWikiLink ?article .
  ?article rdfs:label ""Article 62 (Iceland)""@en .
  ?article dbo:wikiPageWikiLink ?section .
  ?section rdfs:label ""Section IV""@en .
  ?section dbo:abstract ?sectionText .
}
```",1,1,2,1,1,2,3,28,0,0,1,0,0.0,0
281,14,train,"Give me the war of the profession, that is a military unit, of Heather Roy.",SELECT ?result WHERE { <http://dbpedia.org/resource/Heather_Roy> <http://dbpedia.org/property/occupation> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v1 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?militaryUnit WHERE {
  ?person dbo:name ""Heather Roy""@en .
  ?person rdf:type dbo:Person .
  ?person dbo:memberOf ?organization .
  ?organization rdf:type ?type .
  FILTER EXISTS { 
    ?type rdfs:subClassOf* <http://dbpedia.org/ontology/MilitaryUnit> .
  }
  BIND(?organization AS ?militaryUnit)
}
```",2,3,3,2,1,3,3,71,0,0,14,0,0.0,0
712,4,train,Give me the show of Soviet Union.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/Soviet_Union> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?show ?showLabel WHERE {
  ?show rdf:type dbo:TelevisionShow .
  ?show dbo:country <http://dbpedia.org/resource/Soviet_Union> .
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
```",1,1,2,1,1,3,2,20,0,0,8,0,0.0,0
48,7,train,Give me the band of the writer of Emotion (Carly Rae Jepsen album).,SELECT ?result WHERE { <http://dbpedia.org/resource/Emotion_(Carly_Rae_Jepsen_album)> <http://dbpedia.org/property/writer> ?v1 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?band WHERE {
  # Identify the album ""Emotion"" by Carly Rae Jepsen
  dbr:Emotion_(Carly_Rae_Jepsen_album) dbo:artist dbr:Carly_Rae_Jepsen .
  
  # Find songs from this album and their composers/songwriters
  ?song dbo:album dbr:Emotion_(Carly_Rae_Jepsen_album) ;
        dbo:composer ?writer .

  # Check if the writer is a member of any band
  OPTIONAL { ?writer dbo:memberOfBand ?band . }
  
  FILTER(?band != """")
}
```",2,2,3,2,1,3,2,20,0,0,95,0,0.0,0
404,5,train,"Who is the parent, that is a royalty, of Prince George William of Hanover?",SELECT ?result WHERE { <http://dbpedia.org/resource/Prince_George_William_of_Hanover> <http://dbpedia.org/ontology/parent> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parent WHERE {
  ?child dbp:name ""Prince George William of Hanover""@en .
  dbo:parent ?parent ?child .
  ?parent rdf:type dbo:Monarch .
}
```",1,2,2,1,1,3,3,71,0,0,2,0,0.0,0
285,0,train,Give me the parent of Alexander Onassis.,SELECT ?result WHERE { <http://dbpedia.org/resource/Alexander_Onassis> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?parentLabel WHERE {
  ?person dbo:father|dbo:mother ?parent .
  ?person rdfs:label ""Alexander Onassis""@en.
  ?parent rdfs:label ?parentLabel.
}
```",1,1,2,1,1,3,2,20,0,0,2,0,0.0,0
281,0,train,"Give me the war of Beauchamp Seymour, 1st Baron Alcester.","SELECT ?result WHERE { <http://dbpedia.org/resource/Beauchamp_Seymour,_1st_Baron_Alcester> <http://dbpedia.org/ontology/battle> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?event WHERE {
  ?person rdfs:label ""Beauchamp Seymour, 1st Baron Alcester""@en .
  ?person dbo:participatedIn ?event .
  ?event rdf:type dbo:Battle .
  FILTER(CONTAINS(LCASE(?event), ""beauchamp seymour""))
}
```",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
281,6,train,"Give me the birth place, that is a country, of Bob Heffron.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Bob_Heffron> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?countryName WHERE {
  dbr:Bob_Heffron dbo:birthPlace ?birthPlace .
  ?birthPlace rdf:type dbo:Country .
  ?birthPlace rdfs:label ?countryName .
  FILTER (lang(?countryName) = 'en')
}
```",1,2,2,1,1,3,3,71,0,1,1,0.0,0.0,0
754,3,train,Give me the parent of May Hnin Htapi.,SELECT ?result WHERE { <http://dbpedia.org/resource/May_Hnin_Htapi> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?parent
WHERE {
  ?person a dbo:Person ;
          foaf:name ""May Hnin Htapi""@en .
  OPTIONAL { ?person dbo:mother ?parent . }
  OPTIONAL { ?person dbo:father ?parent . }
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
429,5,train,Give me the administration of the father of Martha Johnson Patterson.,SELECT ?result WHERE { <http://dbpedia.org/resource/Martha_Johnson_Patterson> <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/property/leader> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?father ?administration 
WHERE {
  ?martha a dbo:Person ;
          foaf:name ""Martha Johnson Patterson""@en .
  
  ?martha dbo:father ?father .

  OPTIONAL { ?father dbo:officeHeld ?administration . }
}
```",2,2,3,2,1,2,2,9,0,0,1,0,0.0,0
48,6,train,Give me the band of Carl Falk and band of Murda Mook.,SELECT ?result WHERE { <http://dbpedia.org/resource/Murda_Mook> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Carl_Falk> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?bandCarlFalk ?bandMurdaMook WHERE {
  ?personCarlFalk a dbo:MusicalArtist ;
                  foaf:name ""Carl Falk""@en .
  ?personCarlFalk dbo:member ?bandCarlFalk .

  ?personMurdaMook a dbo:MusicalArtist ;
                   foaf:name ""Murda Mook""@en .
  ?personMurdaMook dbo:member ?bandMurdaMook .
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
182,5,train,Give me the nationality of Tamara Kunanayakam.,SELECT ?result WHERE { <http://dbpedia.org/resource/Tamara_Kunanayakam> <http://dbpedia.org/ontology/nationality> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?nationalityLabel WHERE {
  ?person foaf:name ""Tamara Kunanayakam""@en .
  ?person dbo:nationality ?nationality .
  ?nationality rdfs:label ?nationalityLabel .
  FILTER(LANG(?nationalityLabel) = 'en')
}
```",1,1,2,1,1,2,3,28,0,1,1,0.0,0.0,0
44,5,train,Give me the band member of the band of John Pettibone.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/John_Pettibone> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . },"```sparql
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT DISTINCT ?member WHERE {
  ?bandMember dbp:name ""John Pettibone""@en .
  ?bandMember dbo:band ?band .
  ?otherMember dbp:band ?band .
  FILTER(?bandMember != ?otherMember)
}
```",2,2,3,2,1,2,2,9,0,0,2,0,0.0,0
666,10,train,"Give me the nickname of the reference, that is an organisation and a soccer club and a sports club, to England.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/nickname> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""England""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?nickname WHERE {
  ?club a dbo:SoccerClub ;
        dbo:sport dbr:Football ;
        dbo:country dbr:England .
  
  OPTIONAL { ?club rdfs:label ?label . FILTER (lang(?label) = 'en') }
  
  ?alias rdf:type dbo:Alias ;
         rdfs:label ?nickname .
  
  ?club dbo:officialName ?officialName .
  ?officialName owl:sameAs ?alias .
}
```",2,5,3,2,1,3,2,20,0,0,3,0,0.0,0
232,6,train,"Give me the claim to fame, that is a film and a military conflict, of Sean Pertwee.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. <http://dbpedia.org/resource/Sean_Pertwee> <http://dbpedia.org/ontology/knownFor> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?film ?militaryConflict
WHERE {
  ?person rdfs:label ""Sean Pertwee""@en .
  ?person dbo:film ?film .
  ?person dbo:militaryConflict ?militaryConflict .
}
```",1,3,2,1,1,3,3,71,0,0,1,0,0.0,0
820,6,train,Give me the child of Jack Schwartzman and professional in .,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Jack_Schwartzman> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child ?profession 
WHERE {
  ?person a dbo:Person ;
          foaf:name ""Jack Schwartzman""@en .
  
  ?person dbo:child ?child .

  OPTIONAL { ?child dbo:occupation ?profession }
}
```",2,2,3,1,2,3,2,20,1,3,0,0.25,1.0,0.4
54,0,train,Give me the child of Thinkhaya of Pagan.,SELECT ?result WHERE { <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?child WHERE {
  ?person a dbo:Person ;
          foaf:name ""Thinkhaya""@en .
  ?person dbo:child ?child .
}
```",1,1,2,1,1,3,3,71,3,1,0,0.75,1.0,0.8571428571428571
488,16,train,"Who is the father, that is a politician, of the father, that is an office holder, of Matsudaira Tadamasa?",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/property/father> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Matsudaira_Tadamasa> <http://dbpedia.org/property/father> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?politician WHERE {
  ?matsudairaTadamasa dbo:father ?officeHolderFather .
  FILTER (EXISTS { ?officeHolderFather dbp:occupation ""Office holder"" }).
  
  ?officeHolderFather dbo:father ?politician .
  FILTER (EXISTS { ?politician dbp:occupation ""Politician"" }).

  ?matsudairaTadamasa rdfs:label ""Matsudaira Tadamasa""@en.
}
```",2,4,3,2,1,3,3,71,0,0,1,0,0.0,0
391,16,train,"Give me the claim to fame, that is a work, of the spouse of Sherry Hormann.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/knownFor> ?result . <http://dbpedia.org/resource/Sherry_Hormann> <http://dbpedia.org/ontology/spouse> ?v1 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?work WHERE {
  ?sherryHormann a dbo:FilmDirector ;
                 foaf:name ""Sherry Hormann""@en .
  
  ?sherryHormann dbo:spouse ?spouse .

  ?spouse dbo:notableWork ?work .
}
```",2,3,3,2,1,3,3,71,0,0,4,0,0.0,0
666,8,train,Give me the figure known as the nickname of England national beach soccer team.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ?v0 . <http://dbpedia.org/resource/England_national_beach_soccer_team> <http://dbpedia.org/property/nickname> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?nickname WHERE {
  ?team rdf:type dbo:NationalSoccerTeam .
  ?team dbo:country dbr:England .
  ?team dbo:sport dbr:Beach_soccer .
  ?team dbo:commonName ?nickname .
}
```",2,2,3,2,1,3,2,20,0,0,5,0,0.0,0
617,7,train,"Give me the child of the child, that is a royalty, of Boleslaus I, Duke of Bohemia.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Boleslaus_I,_Duke_of_Bohemia> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?grandchild WHERE {
  ?boleslaus1 a dbo:Duke ;
              foaf:name ""Boleslaus I, Duke of Bohemia""@en .
  
  ?boleslaus1 dbo:child ?child .
  
  ?child dbo:child ?grandchild .
  
  FILTER EXISTS { 
    ?grandchild dbo:royaltyTitle ?title .
  }
}
```",2,3,3,2,1,3,2,20,0,0,4,0,0.0,0
328,14,train,"Give me the leader of the office, that is a government agency, of Joseph Stalin.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/leader> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. <http://dbpedia.org/resource/Joseph_Stalin> <http://dbpedia.org/property/office> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?office ?role WHERE {
  dbr:Joseph_Stalin dbo:positionHeld ?position .
  ?position dbo:organization ?office .
  ?office a dbo:GovernmentAgency .
  ?position dbo:title ?role .
}
```",2,3,3,2,1,3,3,71,0,0,1,0,0.0,0
9,15,train,"Who is the mayor, that is a politician, of the entity, that is an organisation, in Belfast?",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Belfast> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/property/leader> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?mayor WHERE {
  ?organisation a dbo:Organisation ;
                dbo:location dbr:Belfast .
  ?mayor dbo:positionHeld ?position ;
         rdf:type dbo:Politician .
  ?position dbo:roleName ""Mayor"" ;
            dbo:organization ?organisation .
}
```",2,4,3,2,1,3,3,71,0,0,13,0,0.0,0
915,10,train,"Give me the child, that is a fictional character and a soap character, of the parent, that is a fictional character and a soap character, of Lizzie Spaulding.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoapCharacter>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoapCharacter>. <http://dbpedia.org/resource/Lizzie_Spaulding> <http://dbpedia.org/ontology/parent> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?result <http://dbpedia.org/property/father> ?v0 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child WHERE {
  # Identify Lizzie Spaulding
  ?lizzie a dbo:FictionalCharacter ;
          dbp:name ""Lizzie Spaulding"" ;
          dbo:genre ?soapGenre .
  
  FILTER (CONTAINS(LCASE(str(?soapGenre)), 'soap opera'))

  # Find Lizzie's parent
  ?parent dbo:spouse ?lizzie ;
          a dbo:FictionalCharacter ;
          dbo:genre ?parentSoapGenre .

  FILTER (CONTAINS(LCASE(str(?parentSoapGenre)), 'soap opera'))

  # Identify the child of Lizzie's parent who is also a soap character
  ?child dbo:spouse|dbo:childOf ?parent ;
         a dbo:FictionalCharacter ;
         dbo:genre ?childSoapGenre .

  FILTER (CONTAINS(LCASE(str(?childSoapGenre)), 'soap opera'))
}
```",2,6,3,2,1,3,2,20,0,0,1,0,0.0,0
820,2,train,Who is the author of Understanding Comics?,SELECT ?result WHERE { <http://dbpedia.org/resource/Understanding_Comics> <http://dbpedia.org/ontology/author> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?authorName WHERE {
  ?book rdfs:label ""Understanding Comics""@en .
  ?book a dbo:Book .
  ?book dbo:author ?author .
  ?author rdfs:label ?authorName .
}
```",1,1,2,1,1,3,2,20,0,1,1,0.0,0.0,0
981,2,train,"Give me the time zone in Salak, North Sumatra.","SELECT ?result WHERE { <http://dbpedia.org/resource/Salak,_North_Sumatra> <http://dbpedia.org/ontology/timeZone> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?timeZone
WHERE {
  ?place a dbo:Settlement ;
        rdfs:label ""Salak""@en ;
        dbp:country ""Indonesia"" .
  OPTIONAL { ?place dbo:administrativeRegion ?region . }
  FILTER(CONTAINS(LCASE(STR(?region)), ""north sumatra""))
  ?place dbo:timeZone ?timeZone .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
182,9,train,Give me the war of Jagath Dias and entity in Sri Lanka.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Sri_Lanka> . <http://dbpedia.org/resource/Jagath_Dias> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?war WHERE {
  ?person rdfs:label ""Jagath Dias""@en .
  ?person dbo:participatedIn ?war .
  FILTER EXISTS { ?war dbo:location dbr:Sri_Lanka }
}
```",2,2,3,1,2,2,3,28,0,0,5,0,0.0,0
184,3,train,"Give me the landmark at elevation, that is a settlement, of 96.0.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/elevation> ""96.0""^^<http://www.w3.org/2001/XMLSchema#double> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?landmark WHERE {
  ?landmark a dbo:Landmark .
  ?landmark a dbo:Settlement .
  ?landmark dbp:elevation ""96.0""^^xsd:decimal .
}
```",1,2,2,1,1,3,3,71,0,0,162,0,0.0,0
232,13,train,"Give me the actor of the claim to fame, that is a film and a military conflict, of Sean Pertwee.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. <http://dbpedia.org/resource/Sean_Pertwee> <http://dbpedia.org/ontology/knownFor> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?film ?conflict WHERE {
  ?person foaf:name ""Sean Pertwee""@en .
  
  # Find films associated with Sean Pertwee
  ?film dbo:starring ?person ;
        a dbo:Film .

  # Find military conflicts associated with Sean Pertwee
  ?conflict dbo:actor ?person ;
            a dbo:MilitaryConflict .

}
```",2,4,3,2,1,3,3,71,0,0,3,0,0.0,0
498,3,train,"Who is the member, that is an artist, of Mortician (band)?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Mortician_(band)> <http://dbpedia.org/ontology/bandMember> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?member WHERE {
  ?band a dbo:Band .
  ?band dbr:Mortician .
  ?band dbo:member ?member .

  ?member dbo:occupation ?occupation .
  FILTER(CONTAINS(LCASE(STR(?occupation)), ""artist""))
}
```",1,2,2,1,1,2,2,9,0,0,1,0,0.0,0
626,5,train,Give me the award of Aleksey Petrovich Yermolov.,SELECT ?result WHERE { <http://dbpedia.org/resource/Aleksey_Petrovich_Yermolov> <http://dbpedia.org/property/awards> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?award
WHERE {
  ?person a dbo:Person ;
          foaf:name ""Aleksey Petrovich Yermolov""@en .
  ?person dbo:award ?award .
}
```",1,1,2,1,1,3,2,20,6,0,0,1.0,1.0,1.0
392,0,train,Give me the entity in Italy.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?entity WHERE {
  ?entity dbo:country ?country .
  FILTER (langMatches(lang(?country), ""en"") && str(?country) = ""Italy"")
}
```",1,1,2,1,1,2,3,28,0,0,13092,0,0.0,0
328,0,train,Give me the awardee of Order of Suvorov.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Order_of_Suvorov> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?recipient WHERE {
  ?award a dbo:Award .
  ?award rdfs:label ""Order of Suvorov""@en .
  ?award dbo:recipient ?recipient .
}
```",1,1,2,1,1,3,3,71,0,0,22,0,0.0,0
487,3,train,Give me the administration of Patricia McCoy.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Patricia_McCoy> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?admin WHERE {
  ?s dbo:administrator ?admin .
  ?s foaf:name ""Patricia McCoy""@en .
}
```",1,1,2,1,1,3,2,20,0,0,3,0,0.0,0
9,7,train,"Give me the entity, that is an organisation and an educational institution, in Northern Ireland.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Northern_Ireland> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?entity WHERE {
  ?entity rdf:type dbo:Organization .
  ?entity rdf:type dbo:EducationalInstitution .
  OPTIONAL { ?entity dbp:country ""Northern Ireland""@en . }
}
```",1,3,2,1,1,3,3,71,0,0,134,0,0.0,0
92,16,train,"Give me the person born, that is an artist, as the actor of Return to Nuke 'Em High Volume 1.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Return_to_Nuke_'Em_High_Volume_1> <http://dbpedia.org/property/starring> ?v1 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?person WHERE {
  ?movie rdfs:label ""Return to Nuke 'Em High Volume 1""@en .
  FILTER (lang(?movie) = 'en') .

  ?movie dbo:starring ?person .
  
  ?person dbo:occupation ?occupation .
  FILTER CONTAINS(LCASE(str(?occupation)), ""artist"")
}
```",2,3,3,2,1,3,3,71,0,0,205,0,0.0,0
30,0,train,Give me the native of Paris.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Paris> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  ?person dbo:birthPlace dbp:Paris .
}
```",1,1,2,1,1,2,2,9,0,0,4485,0,0.0,0
754,4,train,Give me the reference to Ram Khamhaeng the Great.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Ram Khamhaeng the Great""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?resource WHERE {
  ?resource a dbo:Person .
  ?resource rdfs:label ?label .
  FILTER (langMatches(lang(?label), ""en"") && contains(lcase(str(?label)), ""ram khamhaeng the great""))
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
981,9,train,"Give me the region of the time zone in Salak, North Sumatra.","SELECT ?result WHERE { <http://dbpedia.org/resource/Salak,_North_Sumatra> <http://dbpedia.org/ontology/timeZone> ?v0 . ?result <http://dbpedia.org/property/timeZone> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX geo: <http://www.w3.org/2003/01/geo/wgs84_pos#>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?region
WHERE {
  ?salak a dbo:Settlement ;
         rdfs:label ""Salak""@en .
  
  OPTIONAL { ?salak dbo:location ?location . }
  OPTIONAL { ?location geo:timezone ?timezone . }
  OPTIONAL { ?timezone dbp:region ?region . }
}
```",2,2,3,2,1,3,2,20,0,0,1,0,0.0,0
820,3,train,Give me the award of Scott McCloud.,SELECT ?result WHERE { <http://dbpedia.org/resource/Scott_McCloud> <http://dbpedia.org/property/awards> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?award ?awardLabel WHERE {
  ?person rdfs:label ""Scott McCloud""@en .
  ?person dbo:award ?award .
  ?award rdfs:label ?awardLabel .
  FILTER(LANG(?awardLabel) = 'en')
}
```",1,1,2,1,1,3,2,20,0,8,4,0.0,0.0,0
488,6,train,"Who is the father, that is a politician, of Yūki Hideyasu?",SELECT ?result WHERE { <http://dbpedia.org/resource/Yūki_Hideyasu> <http://dbpedia.org/property/father> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?father WHERE {
  ?yuki a dbo:Person ;
        foaf:name ""Yūki Hideyasu""@en .
  ?yuki dbo:father ?father .
  ?father rdf:type dbo:Politician .
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
360,11,train,Give me the reference to the author of Blinded by the Light.,SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v1 . <http://dbpedia.org/resource/Blinded_by_the_Light> <http://dbpedia.org/property/author> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?author WHERE {
  ?song dbo:title ""Blinded by the Light"" .
  ?song dbo:lyricist ?author .
  FILTER (lang(?song) = 'en')
}
```",2,2,3,2,1,2,3,28,0,0,2,0,0.0,0
994,14,train,"Give me the band member of the person born, that is a musical artist, as Donald Maynard Dokken.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ""Donald Maynard Dokken""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band WHERE {
  ?person dbo:birthName ""Donald Maynard Dokken""@en .
  ?person a dbo:MusicalArtist .
  ?person dbo:bandMember ?band .
}
```",2,3,3,2,1,3,3,71,0,0,2,0,0.0,0
421,3,train,Who is the awardee of [[#Awards and nominations?,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ""[[#Awards and nominations""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?award ?awardee WHERE {
  ?award a dbo:Award .
  ?award dbo:recipient ?awardee .
}
```",1,1,2,1,1,2,3,28,0,0,113,0,0.0,0
378,1,train,Give me the war of Joaquín Blake.,SELECT ?result WHERE { <http://dbpedia.org/resource/Joaquín_Blake> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war ?description WHERE {
  dbr:Joaquín_Blake dbo:participatedIn ?war .
  ?war rdfs:label ?label ;
       dbo:description ?description .
  FILTER (lang(?label) = 'en' && lang(?description) = 'en')
}
```",1,1,2,1,1,3,3,71,0,0,11,0,0.0,0
617,6,train,Who is the child of Antiochus III the Great?,SELECT ?result WHERE { <http://dbpedia.org/resource/Antiochus_III_the_Great> <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child WHERE {
  ?antiochus dbp:name ""Antiochus III the Great""@en .
  ?antiochus dbo:child ?child .
}
```",1,1,2,1,1,3,3,71,0,0,6,0,0.0,0
696,6,train,Give me the landmark at elevation of 50 and birth place of Tim Brennan.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/elevation> ""50""^^<http://www.w3.org/2001/XMLSchema#integer> . <http://dbpedia.org/resource/Tim_Brennan> <http://dbpedia.org/ontology/birthPlace> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?landmark ?elevation ?birthPlace WHERE {
  # Query for landmark at elevation of 50
  { 
    ?landmark a dbo:Lighthouse ;
              dbo:elevation ?elevation .
    FILTER (?elevation = ""50""^^xsd:integer)
  }
  
  UNION
  
  # Query for birthplace of Tim Brennan
  { 
    dbr:Tim_Brennan dbo:birthPlace ?birthPlace .
  }
}
```",2,2,3,1,2,3,2,20,1,0,0,1.0,1.0,1.0
92,17,train,Give me the person born as the birth name of Joseph Michael.,SELECT ?result WHERE { <http://dbpedia.org/resource/Joseph_Michael> <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person ?name WHERE {
  ?person dbo:birthName ""Joseph Michael"" .
  ?person foaf:name ?name .
}
```",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
16,5,train,Who is the actor of Unnatural (TV series)?,SELECT ?result WHERE { <http://dbpedia.org/resource/Unnatural_(TV_series)> <http://dbpedia.org/property/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?actor WHERE {
  ?series dbp:title ""Unnatural (TV series)""@en .
  ?series dbo:castMember ?actor .
}
```",1,1,2,1,1,3,3,71,0,0,5,0,0.0,0
312,6,train,Give me the entity in the birthplace of Giorgio Grigolli.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v1 . <http://dbpedia.org/resource/Giorgio_Grigolli> <http://dbpedia.org/ontology/birthPlace> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlaceLabel WHERE {
  VALUES ?giorgioGrigolli { dbr:Giorgio_Grigolli }
  ?giorgioGrigolli dbo:birthPlace ?birthPlace .
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
```",2,2,3,2,1,2,2,9,0,0,13092,0,0.0,0
617,1,train,Give me the parent of Mieszko II Lambert.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Mieszko_II_Lambert> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?parent WHERE {
  ?mieszko2 dbo:givenName ""Mieszko"" .
  ?mieszko2 dbo:familyName ""II Lambert"" .
  ?mieszko2 dbo:parent ?parent .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
427,11,train,Give me the reference to the name of Italian People's Party (1994).,SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v0 . <http://dbpedia.org/resource/Italian_People's_Party_(1994)> <http://xmlns.com/foaf/0.1/name> ?v0 . },"```sparql
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?party WHERE {
  ?party rdfs:label ""Italian People's Party (1994)""@en .
}
```",2,2,3,2,1,3,3,71,1,0,1,1.0,0.5,0.6666666666666666
92,7,train,Give me the birth name of Joseph Michael.,SELECT ?result WHERE { <http://dbpedia.org/resource/Joseph_Michael> <http://dbpedia.org/property/birthName> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?birthName
WHERE {
  ?person foaf:name ""Joseph Michael"" .
  ?person dbo:birthName ?birthName .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
659,2,train,Give me the military force of Napoleonic Wars.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Napoleonic_Wars> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?militaryForce WHERE {
  # Napoleon's military force
  OPTIONAL { 
    dbr:Napoleon_Bonaparte dbo:militaryService ?service .
    ?service dbo:participatedIn dbr:Napoleonic_Wars .
    ?service dbo:army ?militaryForce .
  }
  
  # Opposing forces in the Napoleonic Wars
  OPTIONAL {
    ?opposingForce dbo:participatedIn dbr:Napoleonic_Wars .
    FILTER NOT EXISTS { 
      ?opposingForce dbo:commander dbr:Napoleon_Bonaparte .
    }
    ?opposingForce rdfs:label ?militaryForceLabel .
  }

  # Filter to ensure we get meaningful labels
  FILTER (lang(?militaryForceLabel) = 'en' && regex(str(?militaryForceLabel), ""army|forces"", ""i""))
}
```",1,1,2,1,1,3,3,71,0,0,1051,0,0.0,0
392,10,train,"Give me the region of the time zone, that is a sports event, of Aguilar de Segarra.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsEvent>. ?result <http://dbpedia.org/ontology/timeZone> ?v0 . <http://dbpedia.org/resource/Aguilar_de_Segarra> <http://dbpedia.org/ontology/timeZone> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?region ?sportsEvent WHERE {
  # Find the time zone of Aguilar de Segarra
  dbr:Aguilar_de_Segarra dbo:location dbr:Province_of_Lleida .
  dbr:Province_of_Lleida dbo:timeZone ?timeZone .

  # Get the region associated with this time zone
  ?timeZone dbo:region ?region .

  # Find sports events in that region
  ?sportsEvent a dbo:SportsEvent ;
               dbo:location ?region .
}
```",2,3,3,2,1,2,3,28,0,0,49990,0,0.0,0
92,12,train,Give me the associated musical artist of Jim Sheppard and band of Joseph Michael.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Joseph_Michael> . <http://dbpedia.org/resource/Jim_Sheppard> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?artist ?band 
WHERE {
  { 
    ?person foaf:name ""Jim Sheppard""@en .
    ?person dbo:associatedMusicalArtist ?artist .
  }
  UNION
  {
    ?person foaf:name ""Joseph Michael""@en .
    ?person dbo:band ?band .
  }
}
```",2,2,3,1,2,3,3,71,1,1,0,0.5,1.0,0.6666666666666666
378,11,train,Give me the war of the person born as Carl Pontus Gahn.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ""Carl Pontus Gahn""@en . ?v0 <http://dbpedia.org/ontology/battle> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war WHERE {
  ?person a dbo:Person ;
          foaf:name ""Carl Pontus Gahn""@en .
  
  OPTIONAL { 
    ?person dbo:participatedIn ?war .
  }
}
```",2,2,3,2,1,3,3,71,0,0,12,0,0.0,0
54,9,train,Give me the child of Thinkhaya of Pagan and parent of Thado Minsaw of Prome.,SELECT ?result WHERE { <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?middlePerson
WHERE {
  ?thinkhaya dbo:child ?middlePerson .
  ?middlePerson rdfs:label ""Thinkhaya of Pagan""@en .

  ?thadoMinsaw dbo:parent ?middlePerson .
  ?thadoMinsaw rdfs:label ""Thado Minsaw of Prome""@en .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
617,11,train,"Give me the child of the child, that is a royalty, of Seleucus II Callinicus.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seleucus_II_Callinicus> . ?result <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?grandchild WHERE {
  ?seleucus2 dbr:Seleucus_II_Callinicus .
  
  ?seleucus2 dbo:child ?child .
  
  ?child dbo:child ?grandchild .
  
  FILTER EXISTS { 
    ?grandchild a ?royaltyType .
    VALUES ?royaltyType { 
      dbo:Monarch 
      dbo:King 
      dbo:Queen 
      dbo:CrownPrince 
      dbo:CrownPrincess
    }
  }
}
```",2,3,3,2,1,3,3,71,0,0,5,0,0.0,0
747,0,train,Give me the person born on 1985-04-29.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthDate> ""1985-04-29""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>

SELECT ?person WHERE {
  ?person a dbo:Person .
  ?person dbo:birthDate ?date .
  FILTER (xsd:date(?date) = ""1985-04-29""^^xsd:date)
}
```",1,1,2,1,1,3,3,71,30,0,0,1.0,1.0,1.0
318,5,train,Give me the person born in the founding year of Eel Pie Publishing.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthYear> ?v1 . <http://dbpedia.org/resource/Eel_Pie_Publishing> <http://dbpedia.org/ontology/foundingYear> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?birthYear WHERE {
  # Get the founding date of Eel Pie Publishing
  dbr:Eel_Pie_Publishing dbo:foundingDate ?foundingDate .
  
  # Extract the year from the founding date
  BIND(YEAR(?foundingDate) AS ?foundingYear)
  
  # Find a person born in that year
  ?person a dbo:Person ;
          dbo:birthDate ?birthDate .
  BIND(YEAR(?birthDate) AS ?birthYear)

  # Filter to match the birth year with the founding year
  FILTER (?birthYear = ?foundingYear)
}
```",2,2,3,2,1,2,2,9,0,0,2810,0,0.0,0
232,11,train,Give me the child of the person born as John Devon Roland Pertwee.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?result . ?v0 <http://dbpedia.org/property/birthName> ""John Devon Roland Pertwee""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?child WHERE {
  ?person foaf:name ""John Devon Roland Pertwee""@en .
  ?person dbo:child ?child .
}
```",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
547,1,train,Give me the resting place of Simon Cadell.,SELECT ?result WHERE { <http://dbpedia.org/resource/Simon_Cadell> <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?burialPlace WHERE {
  ?person a dbo:Actor ;
          foaf:name ""Simon Cadell""@en .
  
  OPTIONAL { ?person dbo:deathPlace ?burialPlace . }
  OPTIONAL { ?person dbo:burialPlace ?burialPlace . }

  FILTER (lang(?burialPlace) = 'en')
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
378,7,train,"Give me the war, that is a military conflict and a societal event and an event, of Thomas Trigge.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Thomas_Trigge> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war WHERE {
  ?war dbo:wikiPageDisambiguates dbr:Thomas_Trigge .
  ?war a dbo:MilitaryConflict .
  ?war a dbo:SocietalEvent .
}
```",1,4,2,1,1,3,3,71,0,0,7,0,0.0,0
754,6,train,Give me the parent of Loe Thai and parent of May Hnin Thwe-Da.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/May_Hnin_Thwe-Da> . <http://dbpedia.org/resource/Loe_Thai> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?parentLoeThai ?parentMayHninThweDa WHERE {
  OPTIONAL { dbpedia:Loe_Thai dbo:parent ?parentLoeThai . }
  OPTIONAL { dbpedia:May_Hnin_Thwe-Da dbo:parent ?parentMayHninThweDa . }
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
767,14,train,Give me the reference to the alter ego of Black Hood.,SELECT ?result WHERE { <http://dbpedia.org/resource/Black_Hood> <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?alterEgo WHERE {
  ?character rdfs:label ""Black Hood""@en.
  ?character dbo:alterEgo ?alterEgo.
}
```",2,2,3,2,1,3,3,71,0,0,98447,0,0.0,0
626,3,train,"Give me the force, that is a military conflict, of Alexander I of Russia.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Alexander_I_of_Russia> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?conflict WHERE {
  ?alexander a dbo:Monarch ;
             rdfs:label ""Alexander I""@en .
  
  ?alexander dbo:participatedIn ?conflict .
  ?conflict rdf:type dbo:MilitaryConflict .
}
```",1,2,2,1,1,3,2,20,0,0,25,0,0.0,0
996,9,train,Who is the awardee of the elevation of Lac d'Avoriaz?,SELECT ?result WHERE { <http://dbpedia.org/resource/Lac_d'Avoriaz> <http://dbpedia.org/ontology/elevation> ?v0 . ?result <http://dbpedia.org/property/awards> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?awardee WHERE {
  VALUES ?lake { dbr:Lac_d%27Avoriaz }
  ?lake dbo:award ?award .
  ?award dbo:recipient ?awardee .
}
```",2,2,3,2,1,3,2,20,0,0,1,0,0.0,0
827,5,train,"Who is the child, that is a royalty, of Charles Augustus, Hereditary Grand Duke of Saxe-Weimar-Eisenach (1844–1894)?","SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Charles_Augustus,_Hereditary_Grand_Duke_of_Saxe-Weimar-Eisenach_(1844–1894)> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child WHERE {
  ?charlesAugustus a dbo:HereditaryGrandDuke ;
                   foaf:name ""Charles Augustus"" ;
                   dbp:title ""Hereditary Grand Duke of Saxe-Weimar-Eisenach""@en ;
                   dbo:birthDate ?birthDate .
  
  FILTER (YEAR(?birthDate) = 1844 && YEAR(STRDT(?charlesAugustus.dbo:deathDate, xsd:date)) = 1894)

  ?charlesAugustus dbo:child ?child .

  ?child rdf:type ?royaltyType .
  FILTER (
    ?royaltyType IN (dbo:RoyalFamilyMember, dbo:Monarch)
  )
}
```",1,2,2,1,1,3,2,20,0,0,2,0,0.0,0
528,3,train,"Give me the entity, that is a societal event, in Chile.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Chile> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?event WHERE {
  ?event a dbo:Event .
  ?event dbo:location dbr:Chile .
}
```",1,2,2,1,1,3,3,71,0,54,34,0.0,0.0,0
392,5,train,"Give me the residence, that is a settlement and Italian, of Sebastiano Bianchetti.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Sebastiano_Bianchetti> <http://dbpedia.org/property/residence> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?residence
WHERE {
  ?person dbo:birthName ""Sebastiano Bianchetti""@en.
  ?person dbo:residence ?residence.
  
  FILTER EXISTS { 
    ?residence rdf:type dbpedia-owl:Settlement .
  }
  
  FILTER EXISTS {
    ?residence dbo:country dbr:Italy .
  }
}
```",1,3,2,1,1,2,3,28,0,0,1,0,0.0,0
801,10,train,Give me the associated musical artist of Chris Taylor (music producer) and professional in .,"SELECT ?result WHERE { <http://dbpedia.org/resource/Chris_Taylor_(music_producer)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?artist WHERE {
  ?person foaf:name ""Chris Taylor (music producer)"" .
  ?person dbo:occupation dbo:MusicProducer .
  ?person dbo:associatedBand ?band .
  ?band foaf:name ?artist .
}
```",2,2,3,1,2,3,3,71,0,0,4,0,0.0,0
303,10,train,"Give me the entity in the country, that is a country, of El Valle de Antón.",SELECT ?result WHERE { <http://dbpedia.org/resource/El_Valle_de_Antón> <http://dbpedia.org/ontology/country> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/country> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?country WHERE {
  ?valle dbr:El_Valle_de_Antón .
  ?valle dbo:locatedIn|dbp:country ?country .
  FILTER (isLiteral(?country) = false)
}
```",2,3,3,2,1,2,3,28,0,0,991,0,0.0,0
54,2,train,Give me the predecessor of Ameitta Thiri Maha Dhamma Dewi of Ava.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Ameitta_Thiri_Maha_Dhamma_Dewi_of_Ava> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?predecessor WHERE {
  ?ameitta a dbo:Monarch ;
           rdfs:label ""Ameitta Thiri Maha Dhamma Dewi of Ava""@en .
  
  ?ameitta dbo:predecessor ?predecessor .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
747,11,train,Give me the person born on the birth date of Pavlo Khudzik.,SELECT ?result WHERE { <http://dbpedia.org/resource/Pavlo_Khudzik> <http://dbpedia.org/ontology/birthDate> ?v0 . ?result <http://dbpedia.org/ontology/birthDate> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Subquery to get Pavlo Khudzik's birth date
  SELECT ?birthDate WHERE {
    dbr:Pavlo_Khudzik dbo:birthday ?birthDate .
  } LIMIT 1

  # Main query to find other persons with the same birth date
  ?person a dbo:Person ;
          dbo:birthday ?sameBirthDate .

  FILTER (?sameBirthDate = ?birthDate && ?person != dbr:Pavlo_Khudzik)
}
```",2,2,3,2,1,3,3,71,0,0,30,0,0.0,0
404,16,train,"Who is the child, that is a royalty, of the parent, that is a royalty, of Prince George William of Hanover?",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Prince_George_William_of_Hanover> <http://dbpedia.org/ontology/parent> ?v1 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?child WHERE {
  # Step 1: Identify Prince George William of Hanover
  ?princeGeorgeWilliam a dbo:Person ;
                      foaf:name ""Prince George William of Hanover""@en .

  # Step 2: Find his parents who are royalty
  ?parent dbo:parent ?princeGeorgeWilliam .
  FILTER EXISTS { ?parent a dbo:RoyalFamilyMember } .

  # Step 3: For each parent, find their children who are royalty
  ?child dbo:parent ?parent .
  FILTER EXISTS { ?child a dbo:RoyalFamilyMember }
}
```",2,4,3,2,1,3,3,71,0,0,3,0,0.0,0
421,1,train,Give me the native of Socialist Federal Republic of Yugoslavia.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Socialist_Federal_Republic_of_Yugoslavia> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?language WHERE {
  VALUES ?country { 
    dbr:SFR_Yugoslavia 
    dbr:Serbia 
    dbr:Croatia 
    dbr:Slovenia 
    dbr:Bosnia_and_Herzegovina 
    dbr:Montenegro 
    dbr:North_Macedonia 
    dbr:Kosovo
  }
  
  ?country dbo:officialLanguage ?language .
}
```",1,1,2,1,1,2,3,28,0,7,5399,0.0,0.0,0
498,5,train,"Give me the band of the band, that is an organisation and a band, of Solace of Requiem.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Solace_of_Requiem> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?band WHERE {
  ?solaceOfRequiem dbp:name ""Solace of Requiem"" .
  ?solaceOfRequiem dbo:band ?band .
  ?band rdf:type dbo:Band .
  ?band rdf:type dbo:Organization .
}
```",2,4,3,2,1,2,2,9,0,0,11,0,0.0,0
427,17,train,"Who is the person born, that is an office holder and a politician, as the birth name of Romano Prodi?",SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/property/birthName> ?v1 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person ?givenName ?familyName WHERE {
  ?person dbo:birthName ""Romano Prodi"" .
  OPTIONAL { ?person foaf:givenName ?givenName . }
  OPTIONAL { ?person foaf:familyName ?familyName . }
}
```",2,4,3,2,1,3,3,71,0,0,1,0,0.0,0
360,4,train,"Give me the death place, that is a settlement, of Winnie Madikizela-Mandela.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Winnie_Madikizela-Mandela> <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?deathPlace WHERE {
  ?person dbp:name ""Winnie Madikizela-Mandela""@en .
  ?person dbo:placeOfDeath ?deathPlace .
  FILTER (isBlank(?deathPlace) = false)
  ?deathPlace a dbo:Settlement .
}
```",1,2,2,1,1,2,3,28,0,0,2,0,0.0,0
547,11,train,Give me the resting place of the child of James Burton (property developer).,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/James_Burton_(property_developer)> <http://dbpedia.org/ontology/child> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child ?restingPlace WHERE {
  ?james a dbo:Person ;
         dbp:name ""James Burton"" ;
         dbp:occupation ""Property developer""@en .
  
  ?james dbo:child ?child .

  OPTIONAL { 
    ?child dbo:deathPlace ?restingPlace .
  }
}
```",2,2,3,2,1,3,3,71,0,0,2,0,0.0,0
617,8,train,"Give me the parent of the father, that is a royalty, of Richeza of Poland, Queen of Hungary.","SELECT ?result WHERE { <http://dbpedia.org/resource/Richeza_of_Poland,_Queen_of_Hungary> <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?grandparent WHERE {
  ?richeza dbo:father ?father .
  FILTER (str(?richeza) = ""Richeza of Poland, Queen of Hungary"") .

  ?father dbo:mother|dbo:father ?grandparent .

  OPTIONAL { ?grandparent dbp:title ?title . }
  FILTER EXISTS { 
    ?grandparent dbp:title ?title .
    FILTER (
      str(?title) CONTAINS ""King"" || 
      str(?title) CONTAINS ""Queen"" ||
      str(?title) CONTAINS ""Prince"" ||
      str(?title) CONTAINS ""Princess""
    )
  }
}
```",2,3,3,2,1,3,2,20,0,0,1,0,0.0,0
391,10,train,"Give me the actor of All About the Andersons and native of Compton, California.","SELECT ?result WHERE { <http://dbpedia.org/resource/All_About_the_Andersons> <http://dbpedia.org/property/starring> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Compton,_California> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  ?movie dbo:title ""All About the Andersons""@en .
  ?movie dbo:starring ?actor .
  ?actor dbo:birthPlace dbr:Compton,_California .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
994,9,train,Give me the associated musical artist of Red Tide (band) and associated musical artist of S.A. Slayer.,SELECT ?result WHERE { <http://dbpedia.org/resource/S.A._Slayer> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Red_Tide_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT DISTINCT ?artistRedTide ?artistSASlayer WHERE {
  OPTIONAL {
    ?redTide a dbo:Band ;
             rdfs:label ""Red Tide""@en .
    ?redTide dbo:musicalArtist ?artistRedTide .
  }
  
  OPTIONAL {
    ?sASlayer a dbo:Band ;
              rdfs:label ""S.A. Slayer""@en .
    ?sASlayer dbo:musicalArtist ?artistSASlayer .
  }
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
547,10,train,Give me the resting place of James Burton (Egyptologist) and resting place of Alan Cunningham.,SELECT ?result WHERE { <http://dbpedia.org/resource/James_Burton_(Egyptologist)> <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Alan_Cunningham> <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?person ?name ?finalBurial WHERE {
  VALUES (?person ?name) {
    (dbo:James_Burton_(Egyptologist) ""James Burton (Egyptologist)"")
    (dbo:Alan_Cunningham_(explorer) ""Alan Cunningham"")
  }
  
  ?person dbo:name ?name .
  OPTIONAL { ?person dbo:finalBurial ?finalBurial . }
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
251,4,train,"Give me the ruling party, that is a political party and an organisation, in Sicily.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Sicily> <http://dbpedia.org/property/leaderParty> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?party WHERE {
  ?party a dbo:PoliticalParty ;
         a dbo:Organization .
  ?party dbo:country dbr:Sicily .
  OPTIONAL { 
    ?party dbo:governmentRole ?role .
    FILTER(CONTAINS(LCASE(?role), ""ruling"") || CONTAINS(LCASE(?role), ""government""))
  }
}
```",1,3,2,1,1,2,3,28,0,0,1,0,0.0,0
915,0,train,"Give me the resident of Springfield, Illinois.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Springfield,_Illinois> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?resident WHERE {
  ?location rdfs:label ""Springfield, Illinois""@en .
  ?location dbo:country dbr:United_States .
  ?location dbo:stateOrProvince dbr:Illinois .
  ?location dbo:resident ?resident .
}
```",1,1,2,1,1,3,2,20,0,0,15,0,0.0,0
294,9,train,"Give me the resting place of Edwin A. Keeble and entity in Nashville, Tennessee.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Nashville,_Tennessee> . <http://dbpedia.org/resource/Edwin_A._Keeble> <http://dbpedia.org/ontology/restingPlace> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?burialPlace ?nashvilleEntity WHERE {
  # Find Edwin A. Keeble's burial place
  OPTIONAL { 
    ?keeblesResource a dbo:Person ;
                     foaf:name ""Edwin A. Keeble"" .
    ?keeblesResource dbo:deathPlace ?burialPlace .
  }

  # Find an entity in Nashville, Tennessee
  ?nashvilleEntity dbo:location dbr:Nashville,_Tennessee .
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
9,5,train,"Give me the reference, that is an award, to Royal Medals.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?result <http://xmlns.com/foaf/0.1/name> ""Royal Medals""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?award WHERE {
  ?medal rdfs:label ""Royal Medals""@en .
  ?medal a dbo:Award .
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
754,1,train,Give me the parent of May Hnin Thwe-Da.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/May_Hnin_Thwe-Da> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parentName WHERE {
  VALUES ?person { dbr:May_Hnin_Thwe-Da }
  ?person dbo:parent ?parent .
  ?parent rdfs:label ?parentName .
  FILTER(LANG(?parentName) = 'en')
}
```",1,1,2,1,1,3,2,20,0,1,1,0.0,0.0,0
77,7,train,Give me the war of the awardee of Golden Weapon for Bravery.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Golden_Weapon_for_Bravery> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?awardee ?war 
WHERE {
  ?awardee dbo:award dbr:Golden_Weapon_for_Bravery .
  ?awardee dbo:participatedInWar ?war .
}
```",2,2,3,2,1,3,2,20,0,0,22,0,0.0,0
142,3,train,Give me the actor of Papa wa Newscaster.,SELECT ?result WHERE { <http://dbpedia.org/resource/Papa_wa_Newscaster> <http://dbpedia.org/ontology/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?actor WHERE {
  ?work dbo:character ?character .
  ?character rdfs:label ""Papa wa Newscaster""@en .
  FILTER (lang(?character) = 'en')
  ?work dbo:actor ?actor .
}
```",1,1,2,1,1,2,2,9,0,0,4,0,0.0,0
115,3,train,Who is the awardee of National Order of Scientific Merit?,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/National_Order_of_Scientific_Merit> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?recipient WHERE {
  ?award rdf:type dbo:Award .
  ?award rdfs:label ""National Order of Scientific Merit""@en .
  ?award dbo:recipient ?recipient .
}
```",1,1,2,1,1,2,2,9,0,0,9,0,0.0,0
312,4,train,Give me the entity in Italy and entity in Province of Bergamo.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/province> <http://dbpedia.org/resource/Province_of_Bergamo> . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?entity WHERE {
  # Entities in Italy
  { 
    ?entity dbo:country dbr:Italy .
  }
  
  UNION
  
  # Entities in Province of Bergamo
  { 
    ?entity dbo:administrativeArea dbr:Province_of_Bergamo .
  }
}
```",2,2,3,1,2,2,2,9,228,12864,0,0.017415215398716773,1.0,0.03423423423423423
754,2,train,Give me the parent of Min Linka.,SELECT ?result WHERE { <http://dbpedia.org/resource/Min_Linka> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT DISTINCT ?parentClass WHERE {
  {
    # Check if Min Linka has a direct type classification
    ?entity rdf:type ?type .
    ?entity rdfs:label ""Min Linka""@en .
    
    # Find the parent class of the identified type
    ?type rdfs:subClassOf* ?parentClass .
  }
  UNION
  {
    # Check if there is a redirect for Min Linka
    ?redirect dbo:wikiPageRedirects ?entity .
    ?entity rdfs:label ""Min Linka""@en .
    
    # Find the type of the redirected entity
    ?entity rdf:type ?type .
    
    # Find the parent class of the identified type
    ?type rdfs:subClassOf* ?parentClass .
  }
}
```",1,1,2,1,1,3,2,20,0,13,2,0.0,0.0,0
365,5,train,"Give me the band of the professional, that is an artist and a musical artist, in Vocalist, musician, songwriter.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/bandMember> ?v1 . ?v1 <http://dbpedia.org/property/occupation> ""Vocalist, musician, songwriter""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?band WHERE {
  ?person a dbo:Artist .
  ?person a dbo:MusicalArtist .
  ?person dbo:occupation dbp:vocalist .
  ?person dbo:occupation dbp:musician .
  ?person dbo:occupation dbp:songwriter .
  ?person dbo:band ?band .
}
```",2,4,3,2,1,2,2,9,0,0,2,0,0.0,0
44,4,train,Give me the band member of Undertow (band) and band member of Sledgeback.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Undertow_(band)> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Sledgeback> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?memberName
WHERE {
  {
    ?band rdf:type dbo:Band ;
          rdfs:label ""Undertow (band)""@en .
    ?bandMember dbo:member ?person .
    ?person rdfs:label ?memberName .
    FILTER(LANG(?memberName) = 'en')
  }
  UNION
  {
    ?band rdf:type dbo:Band ;
          rdfs:label ""Sledgeback""@en .
    ?bandMember dbo:member ?person .
    ?person rdfs:label ?memberName .
    FILTER(LANG(?memberName) = 'en')
  }
}
ORDER BY ?memberName
```",2,2,3,1,2,2,2,9,0,0,1,0,0.0,0
528,14,train,Give me the force of the person born as Narciso Campero Leyes.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ""Narciso Campero Leyes""@en . ?result <http://dbpedia.org/ontology/commander> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?force WHERE {
  ?person rdfs:label ""Narciso Campero Leyes""@en .
  OPTIONAL { ?person dbo:force ?force . }
}
```",2,2,3,2,1,3,3,71,0,1,4,0.0,0.0,0
994,8,train,"Who is the person born, that is a musical artist, as Donald Maynard Dokken?","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/birthName> ""Donald Maynard Dokken""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?birthDate WHERE {
  ?person rdfs:label ""Donald Maynard Dokken""@en .
  FILTER NOT EXISTS { ?person owl:sameAs ?other } # To ensure we get the specific person
  ?person dbo:birthDate ?birthDate .
  ?person rdf:type dbo:MusicalArtist .
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
435,10,train,Give me the region of the time zone in Bombali Shebora Chiefdom.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/timeZone> ?v0 . <http://dbpedia.org/resource/Bombali_Shebora_Chiefdom> <http://dbpedia.org/ontology/timeZone> ?v0 . },"```sparql
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?region WHERE {
  ?chiefdom dbp:name ""Bombali Shebora Chiefdom""@en .
  ?chiefdom dbp:timeZone ?timezone .
  ?timezone dbo:region ?region .
}
```",2,2,3,2,1,2,3,28,0,0,2484,0,0.0,0
996,4,train,Who is the native of Palestine (region)?,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Palestine_(region)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?person ?personLabel WHERE {
  ?person a dbo:Person .
  ?person dbo:birthPlace ?place .
  ?place rdfs:label ""Palestine""@en .
  FILTER(LANG(?personLabel) = 'en')
}
LIMIT 100
```",1,1,2,1,1,3,2,20,0,0,47,0,0.0,0
365,2,train,"Give me the professional, that is an artist and a musical artist, in Vocalist, musician, songwriter.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Vocalist, musician, songwriter""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person WHERE {
  ?person a dbo:Artist .
  ?person dbo:occupation ?occupation .
  VALUES ?occupation { 
    dbr:Vocalist 
    dbr:Musician 
    dbr:Songwriter
  }
}
```",1,3,2,1,1,2,2,9,0,3851,4,0.0,0.0,0
314,7,train,Give me the person deceased at Madrid and commander in Spanish Civil War.,SELECT ?result WHERE { <http://dbpedia.org/resource/Spanish_Civil_War> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/restingPlace> <http://dbpedia.org/resource/Madrid> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name WHERE {
  ?person a dbo:MilitaryPerson ;
          dbo:role ?role ;
          dbo:placeOfBirth ?birthPlace .
  
  ?role dbo:participatedIn dbr:Spanish_Civil_War ;
        rdf:type dbo:MilitaryCommander .

  ?person dbo:deathPlace dbr:Madrid .
  
  OPTIONAL { ?person rdfs:label ?name FILTER (lang(?name) = 'en') }
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
232,7,train,"Give me the native, that is a politician and an office holder, of France.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/France> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name WHERE {
  ?person a dbo:Person .
  ?person dbo:birthPlace dbr:France .
  ?person dbo:occupation ?occupation .
  FILTER (
    ?occupation IN (dbo:Politician, dbo:OfficeHolder)
  ) .
  OPTIONAL { ?person foaf:name ?name . }
}
ORDER BY ?name
```",1,3,2,1,1,3,3,71,0,0,270,0,0.0,0
547,9,train,Give me the resting place of James Burton (Egyptologist) and resting place of Simon Cadell.,SELECT ?result WHERE { <http://dbpedia.org/resource/Simon_Cadell> <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/James_Burton_(Egyptologist)> <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?person ?finalBurial
WHERE {
  VALUES (?person ?label) {
    (<http://dbpedia.org/resource/James_Burton_(Egyptologist)> ""James Burton (Egyptologist)"")
    (<http://dbpedia.org/resource/Simon_Cadell> ""Simon Cadell"")
  }
  
  ?person rdf:type dbo:Person .
  OPTIONAL { ?person dbo:finalBurial ?finalBurial . }
}
```",2,2,3,1,2,3,3,71,0,2,1,0.0,0.0,0
429,2,train,Who is the father of Martha Johnson Patterson?,SELECT ?result WHERE { <http://dbpedia.org/resource/Martha_Johnson_Patterson> <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?fatherLabel WHERE {
  ?person rdfs:label ""Martha Johnson Patterson""@en .
  FILTER NOT EXISTS { ?person dbo:birthDate ?date . FILTER (datatype(?date) != xsd:date) }
  ?person dbo:father ?father .
  ?father rdfs:label ?fatherLabel .
}
```",1,1,2,1,1,2,2,9,0,0,1,0,0.0,0
328,9,train,Give me the awardee of Order of Suvorov and commander in Eastern Front (World War II).,SELECT ?result WHERE { <http://dbpedia.org/resource/Eastern_Front_(World_War_II)> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Order_of_Suvorov> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person WHERE {
  ?person dbo:award dbr:Order_of_Suvorov .
  ?person dbo:commanderOfMilitaryUnit ?unit .
  ?unit dbo:location dbr:Eastern_Front_(World_War_II) .
}
```",2,2,3,1,2,3,3,71,0,0,2,0,0.0,0
747,15,train,"Give me the birth date of the person decedent, that is an athlete and a soccer player, at Zolotonosha.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthDate> ?result . ?v1 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Zolotonosha> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?birthDate
WHERE {
  ?person a dbo:Athlete .
  ?person a dbo:SoccerPlayer .
  ?person dbo:birthPlace dbr:Zolotonosha .
  ?person dbo:birthDate ?birthDate .
}
```",2,4,3,2,1,3,3,71,0,0,1,0,0.0,0
435,6,train,Give me the territory administered from Reykjavík and region of Greenwich Mean Time.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Reykjavík> . ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Greenwich_Mean_Time> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?territory WHERE {
  # Find the territory administered from Reykjavík (Iceland)
  ?administeredFrom a dbo:AdministrativeTerritory ;
                  dbo:administrativeCapital dbr:Iceland .

  # Check if this territory is associated with regions using GMT
  OPTIONAL { 
    ?gmtRegion dbo:timeZone dbr:Greenwich_Mean_Time .
    ?territory dbo:locatedIn ?gmtRegion .
  }

  FILTER EXISTS {
    ?administeredFrom ?p ?territory .
  }
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
339,2,train,Who is the predecessor of Frederick VIII of Denmark?,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Frederick_VIII_of_Denmark> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?predecessorLabel WHERE {
  ?frederickVIII a dbo:Monarch ;
                 foaf:name ""Frederick VIII of Denmark""@en .
  ?frederickVIII dbo:predecessor ?predecessor .
  ?predecessor rdfs:label ?predecessorLabel .
  FILTER(LANG(?predecessorLabel) = 'en')
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
142,2,train,Give me the region of Japan Standard Time.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Japan_Standard_Time> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?region WHERE {
  dbr:Japan dbo:timeZone ?timezone .
  ?timezone rdfs:label ""Japan Standard Time""@en .
  ?timezone dbo:appliesIn ?region .
}
```",1,1,2,1,1,2,2,9,0,0,2255,0,0.0,0
747,16,train,"Who is the writer of the work, that is a song, of Amba Shepherd?",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v1 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Amba_Shepherd> . ?v1 <http://dbpedia.org/property/writer> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?writer WHERE {
  ?work dbo:lyricist dbr:Amba_Shepherd .
  ?work a dbo:Songs .
  OPTIONAL { ?work dbo:composer ?writer . }
}
```",2,3,3,2,1,3,3,71,0,0,3,0,0.0,0
30,6,train,Give me the professional in the profession of Édouard Alphonse James de Rothschild.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v0 . <http://dbpedia.org/resource/Édouard_Alphonse_James_de_Rothschild> <http://dbpedia.org/property/occupation> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?professional WHERE {
  # Step 1: Get Édouard Alphonse James de Rothschild's profession
  ?edouard a dbo:Person ;
           foaf:name ""Édouard Alphonse James de Rothschild""@en .
  
  ?edouard dbo:occupation ?occupation .

  # Step 2: Find other professionals with the same occupation
  ?professional a dbo:Person ;
                dbo:occupation ?occupation .
  
  FILTER(?professional != ?edouard)
}
```",2,2,3,2,1,2,2,9,0,0,1,0,0.0,0
55,0,train,Give me the band member of Guns N' Roses.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Guns_N'_Roses> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?member WHERE {
  ?band rdf:type dbo:Band .
  ?band rdfs:label ""Guns N' Roses""@en .
  ?band dbo:bandMember ?member .
}
```",1,1,2,1,1,2,3,28,2,5,53,0.2857142857142857,0.03636363636363636,0.06451612903225805
701,6,train,Give me the child of Ramesses II.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ramesses_II> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?child WHERE {
  ?s rdf:type dbo:Person .
  ?s dbo:spouse ?spouse . # To ensure we are dealing with the correct Ramesses II
  ?s dbo:child ?child .
  FILTER (str(?s) = ""http://dbpedia.org/resource/Ramses_II"")
}
```",1,1,2,1,1,3,3,71,0,0,8,0,0.0,0
827,7,train,"Give me the child of the child, that is a royalty, of Grand Duchess Maria Pavlovna of Russia (1786–1859).",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Grand_Duchess_Maria_Pavlovna_of_Russia_(1786–1859)> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?grandchild WHERE {
  ?person dbo:birthDate ""1786-10-18""^^xsd:date .
  ?person dbo:deathDate ""1859-06-23""^^xsd:date .
  ?person rdfs:label ""Grand Duchess Maria Pavlovna of Russia""@en .

  ?person dbo:child ?child .
  
  ?child dbo:child ?grandchild .

  ?grandchild rdf:type/rdfs:subClassOf*+ dbo:RoyalFamilyMember .
}
```",2,3,3,2,1,3,2,20,0,0,6,0,0.0,0
528,1,train,Give me the war of Orozimbo Barbosa.,SELECT ?result WHERE { <http://dbpedia.org/resource/Orozimbo_Barbosa> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war WHERE {
  OPTIONAL { 
    ?person rdfs:label ""Orozimbo Barbosa""@en .
    FILTER NOT EXISTS { ?person a dbo:Disambiguation . }
  }
  
  OPTIONAL {
    ?disambiguation dbo:wikiPageRedirects dbr:Orozimbo_Barbosa .
    ?person dbo:wikiPageDisambiguates ?disambiguation .
  }

  ?person dbo:associatedWith ?war .
}
```",1,1,2,1,1,3,3,71,0,0,9,0,0.0,0
487,10,train,"Give me the person born, that is a soccer player, as the birth name of Phil Scott.",SELECT ?result WHERE { <http://dbpedia.org/resource/Phil_Scott> <http://dbpedia.org/property/birthName> ?v0 . ?result <http://dbpedia.org/property/birthName> ?v0 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  # Subquery to get Phil Scott's birth name
  SELECT ?birthName WHERE {
    dbr:Phil_Scott dbo:birthName ?birthName .
  } LIMIT 1

  # Main query to find soccer players with the same birth name
  ?person a dbo:SoccerPlayer ;
          dbp:birthName ?birthName .
}
```",2,3,3,2,1,3,2,20,0,0,1,0,0.0,0
303,1,train,Give me the entity in Panama.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Panama> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?entity ?label
WHERE {
  ?entity dbo:country dbr:Panama .
  ?entity rdfs:label ?label .
  FILTER (lang(?label) = 'en')
}
ORDER BY ?label
```",1,1,2,1,1,2,3,28,971,971,20,0.5,0.9798183652875883,0.6621206955335833
492,8,train,"Give me the capital, that is a settlement, of Algeria.",SELECT ?result WHERE { <http://dbpedia.org/resource/Algeria> <http://dbpedia.org/ontology/capital> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?capital WHERE {
  ?algeria dbo:countryName ""Algeria""@en .
  ?algeria dbo:capital ?capital .
  ?capital rdf:type dbp:City .
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
179,7,train,Give me the person born as the birth name of Sirikit.,SELECT ?result WHERE { <http://dbpedia.org/resource/Sirikit> <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
# Step 1: Retrieve Sirikit's birth name
SELECT ?birthName WHERE {
    dbpedia:Sirikit dbo:birthName ?birthName .
}

# Step 2: Find persons with the same birth name as Sirikit
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person WHERE {
    ?person a dbo:Person ;
            dbo:birthName ?birthName .
    FILTER (?birthName = ""Sirikit""^^xsd:string) # Replace with the actual birth name obtained from Step 1
}
```

Note: In practice, you would run the first query to get Sirikit's birth name and then replace `""Sirikit""` in the second query with that actual birth name.",2,2,3,2,1,3,2,20,0,0,1,0,0.0,0
391,5,train,Who is the spouse of Sherry Hormann?,SELECT ?result WHERE { <http://dbpedia.org/resource/Sherry_Hormann> <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?spouseName WHERE {
  dbpedia:Sherry_Hormann dbo:spouse ?spouse .
  ?spouse foaf:name ?spouseName .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
963,2,train,Give me the time zone of Herzegovina-Neretva Canton.,SELECT ?result WHERE { <http://dbpedia.org/resource/Herzegovina-Neretva_Canton> <http://dbpedia.org/property/timeZone> ?result . },"```sparql
PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?timeZone
WHERE {
  ?entity rdfs:label ""Herzegovina-Neretva Canton""@en.
  ?entity dbp:timeZone ?timeZone.
}
```",1,1,2,1,1,3,2,20,1,0,0,1.0,1.0,1.0
232,14,train,"Give me the native of the residence, that is a settlement and British, of Sylvie Bermann.",SELECT ?result WHERE { <http://dbpedia.org/resource/Sylvie_Bermann> <http://dbpedia.org/property/residence> ?v1 . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?native WHERE {
  # Find Sylvie Bermann's residence that is a settlement and British
  ?sylvie dbo:residence ?residence .
  FILTER (str(?sylvie) = ""Sylvie_Bermann"") .

  # Ensure the residence is a settlement
  ?residence rdf:type dbo:Settlement .

  # Check if the settlement is in the United Kingdom
  ?residence dbp:country dbr:United_Kingdom .

  # Find natives of this settlement
  ?native dbo:nativePlace ?residence .
}
```",2,4,3,2,1,3,3,71,0,0,9121,0,0.0,0
77,0,train,Give me the war of Alexander Chechenskiy.,SELECT ?result WHERE { <http://dbpedia.org/resource/Alexander_Chechenskiy> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?war WHERE {
  ?person rdfs:label ""Alexander Chechenskiy""@en .
  ?person dbo:participatedIn ?war .
}
```",1,1,2,1,1,3,2,20,0,0,9,0,0.0,0
827,8,train,"Give me the father of the child, that is a royalty, of Charles Augustus, Hereditary Grand Duke of Saxe-Weimar-Eisenach (1844–1894).","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Charles_Augustus,_Hereditary_Grand_Duke_of_Saxe-Weimar-Eisenach_(1844–1894)> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  # Identify Charles Augustus
  ?charlesAugustus a dbo:Person ;
                  foaf:name ""Charles Augustus, Hereditary Grand Duke of Saxe-Weimar-Eisenach""@en ;
                  dbo:birthDate ?birthDate ;
                  dbo:deathDate ?deathDate .
  
  FILTER (?birthDate >= ""1844-01-01""^^xsd:date && ?deathDate <= ""1894-12-31""^^xsd:date)

  # Find his children who are royalty
  ?charlesAugustus dbo:child ?royalChild .
  ?royalChild dbo:royaltyTitle ?title .

  # Get the father of this royal child
  ?royalChild dbo:father ?father .
}
```",2,3,3,2,1,3,2,20,0,0,1,0,0.0,0
115,0,train,Give me the alma mater of Vladimir Cerrón.,SELECT ?result WHERE { <http://dbpedia.org/resource/Vladimir_Cerrón> <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?university WHERE {
  ?person a dbo:Person ;
          foaf:name ""Vladimir Cerrón""@en .
  ?person dbo:almaMater ?university .
}
```",1,1,2,1,1,2,2,9,2,0,0,1.0,1.0,1.0
16,4,train,Who is the person born as Ted Martin McGinley?,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Ted Martin McGinley""@en . }","```sparql
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX schema: <http://schema.org/>

SELECT ?person ?fullName WHERE {
  ?person a foaf:Person .
  ?person foaf:givenName ""Ted"" .
  ?person foaf:middleName ""Martin"" .
  ?person schema:birthName ""Ted Martin McGinley"" .
  OPTIONAL { ?person foaf:name ?fullName }
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
44,2,train,Give me the band of John Pettibone.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/John_Pettibone> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?bandName WHERE {
  ?person foaf:name ""John Pettibone""@en .
  ?person dbo:band ?band .
  ?band rdfs:label ?bandName .
  FILTER (lang(?bandName) = 'en')
}
```",1,1,2,1,1,2,2,9,0,0,1,0,0.0,0
427,7,train,Give me the birth name of Romano Prodi.,SELECT ?result WHERE { <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/property/birthName> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?birthName WHERE {
  ?person dbo:birthName ?birthName .
  ?person rdfs:label ""Romano Prodi""@en .
}
```",1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
488,7,train,"Who is the spouse, that is a royalty, of Tokugawa Masako?",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Tokugawa_Masako> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?spouse WHERE {
  ?masako a dbo:Person ;
          foaf:name ""Tokugawa Masako""@en .
  ?masako dbo:spouse ?spouse .
  ?spouse rdf:type ?royaltyType .
  FILTER (
    ?royaltyType IN (dbo:Monarch, dbo:RoyalFamilyMember)
  )
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
701,17,train,"Give me the father of the commander, that is a royalty, in Battle of Perire.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Battle_of_Perire> <http://dbpedia.org/ontology/commander> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?father WHERE {
  ?battle dbo:wikiPageRedirects dbpedia-en:Battle_of_Perire .
  ?commander dbo:participatedIn ?battle ;
             a dbo:RoyalPerson ; # Assuming RoyalPerson is the class for royalty
             foaf:parent ?father .
}
```",2,3,3,2,1,3,3,71,0,0,1,0,0.0,0
959,12,train,Give me the manager of 2013 Júbilo Iwata season and native of Japan.,SELECT ?result WHERE { <http://dbpedia.org/resource/2013_Júbilo_Iwata_season> <http://dbpedia.org/ontology/manager> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Japan> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?manager WHERE {
  ?team dbo:manager ?manager .
  ?team rdfs:label ""Júbilo Iwata""@en .
  FILTER (YEAR(?startDate) <= 2013 && (YEAR(?endDate) >= 2013 || NOT EXISTS { ?team dbo:endManager ?endDate }))
  
  ?manager dbo:nationality dbr:Japan .
}
```",2,2,3,1,2,3,3,71,0,0,3,0,0.0,0
232,9,train,Give me the actor of Dog Soldiers (film) and child of Jon Pertwee.,SELECT ?result WHERE { <http://dbpedia.org/resource/Dog_Soldiers_(film)> <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actor WHERE {
  # Find actors in the film ""Dog Soldiers""
  ?film dbo:title ""Dog Soldiers""@en .
  FILTER (CONTAINS(LCASE(str(?film)), LCASE(""dog soldiers"")))
  
  ?film dbo:starring ?actor .

  # Find children of Jon Pertwee
  dbr:Jon_Pertwee dbo:child ?actor .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
617,4,train,"Who is the child, that is a royalty, of Seleucus II Callinicus?",SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seleucus_II_Callinicus> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child WHERE {
  ?parent rdf:type dbo:Monarch ;
          foaf:name ""Seleucus II Callinicus""@en .
  
  ?parent dbo:child ?child .

  ?child rdf:type dbo:Monarch .
}
```",1,2,2,1,1,3,3,71,0,0,2,0,0.0,0
294,3,train,"Who is the awardee, that is a politician, of Distinguished Service Medal (U.S. Army)?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Distinguished_Service_Medal_(U.S._Army)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?awardee WHERE {
  ?awardee dbo:award dbr:Distinguished_Service_Medal_(U.S._Army) .
  ?awardee dbo:occupation dbr:Politician .
}
```",1,2,2,1,1,2,3,28,0,0,11,0,0.0,0
547,16,train,Give me the actor of the show with Emily Richard.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emily_Richard> . ?v1 <http://dbpedia.org/property/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actor WHERE {
  ?show dbo:castMember dbr:Emily_Richard .
  ?show dbo:castMember ?actor .
  FILTER(?actor != dbr:Emily_Richard)
}
```",2,2,3,2,1,3,3,71,0,0,22,0,0.0,0
659,6,train,"Give me the war, that is an event and a military conflict, of 1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish).",SELECT ?result WHERE { <http://dbpedia.org/resource/1st_Light_Cavalry_Lancers_Regiment_of_the_Imperial_Guard_(Polish)> <http://dbpedia.org/ontology/battle> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?war WHERE {
  ?regiment rdf:type dbo:Regiment .
  ?regiment rdfs:label ""1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish)""@en .
  ?regiment dbp:participatedIn ?war .
  ?war rdf:type dbo:War ;
       rdf:type dbo:MilitaryConflict .
}
```",1,3,2,1,1,3,3,71,0,0,19,0,0.0,0
182,0,train,Give me the war of Mahesh Senanayake.,SELECT ?result WHERE { <http://dbpedia.org/resource/Mahesh_Senanayake> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war WHERE {
  ?person rdfs:label ""Mahesh Senanayake""@en.
  ?person dbo:participatedIn ?war.
  FILTER(CONTAINS(LCASE(?war), ""sri lankan civil war""))
}
```",1,1,2,1,1,2,3,28,0,0,2,0,0.0,0
54,14,train,"Give me the predecessor of the child, that is an office holder and a royalty, of Thihapate of Mohnyin.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Thihapate_of_Mohnyin> . ?result <http://dbpedia.org/ontology/successor> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?predecessor WHERE {
  ?thihapate a dbo:Person ;
             dbp:name ""Thihapate of Mohnyin""@en .
  
  ?child dbo:parent ?thihapate ;
         a dbo:Royalty, dbo:OfficeHolder .

  ?officeHolderPosition dbo:holder ?child ;
                        dbo:predecessor ?predecessor .
}
```",2,4,3,2,1,3,3,71,0,0,1,0,0.0,0
339,8,train,Give me the father of the child of Grand Duchess Elena Vladimirovna of Russia.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Grand_Duchess_Elena_Vladimirovna_of_Russia> <http://dbpedia.org/ontology/child> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?father WHERE {
  ?grandDuchess a dbo:Person ;
                foaf:name ""Elena Vladimirovna of Russia""@en .
  
  ?child dbo:parent ?grandDuchess ;
         dbo:father ?father .
}
```",2,2,3,2,1,3,2,20,0,0,1,0,0.0,0
77,10,train,"Who is the mayor of the territory administered, that is an organisation, from Warsaw?",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/property/leader> ?result . ?v0 <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Warsaw> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?organization ?mayorName WHERE {
  ?organization a dbo:Organization ;
                dbo:location dbr:Warsaw .
  OPTIONAL { ?organization dbo:mayor ?mayor . }
  OPTIONAL { ?mayor foaf:name ?mayorName . }
}
```",2,3,3,2,1,3,2,20,0,0,8,0,0.0,0
318,3,train,Give me the profession of Robert Xavier Rodriguez.,SELECT ?result WHERE { <http://dbpedia.org/resource/Robert_Xavier_Rodriguez> <http://dbpedia.org/property/occupation> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?occupation
WHERE {
  ?person rdfs:label ""Robert Xavier Rodriguez""@en .
  ?person dbo:occupation ?occupation .
}
```",1,1,2,1,1,2,2,9,1,1,1,0.5,0.5,0.5
963,7,train,"Give me the entity in the region, that is a country, of Central European Time.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?country 
WHERE {
  ?country a dbo:Country .
  ?country dbo:timeZone dbr:Central_European_Time .
}
```",2,3,3,2,1,3,2,20,29,65,173232,0.30851063829787234,0.00016737754024275515,0.00033457356292001964
435,4,train,Give me the time zone in Bombali Shebora Chiefdom.,SELECT ?result WHERE { <http://dbpedia.org/resource/Bombali_Shebora_Chiefdom> <http://dbpedia.org/ontology/timeZone> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?timeZone
WHERE {
  ?chiefdom a dbo:AdministrativeRegion ;
            rdfs:label ""Bombali Shebora Chiefdom""@en .
  OPTIONAL { ?chiefdom dbp:timeZone ?timeZone }
}
```",1,1,2,1,1,2,3,28,0,0,1,0,0.0,0
488,9,train,Give me the death place of Tokugawa Ieyasu and birth place of Enomoto Takeaki.,SELECT ?result WHERE { <http://dbpedia.org/resource/Enomoto_Takeaki> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Tokugawa_Ieyasu> <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?deathPlace ?birthPlace
WHERE {
  OPTIONAL { 
    dbr:Tokugawa_Ieyasu dbo:deathPlace ?deathPlace .
  }
  OPTIONAL { 
    dbr:Enomoto_Takeaki dbo:birthPlace ?birthPlace .
  }
}
```",2,2,3,1,2,3,3,71,1,2,0,0.3333333333333333,1.0,0.5
534,7,train,"Give me the birth place of the child, that is a politician and an office holder, of Desmond FitzGerald (politician).",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Desmond_FitzGerald_(politician)> <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?childName ?birthPlace WHERE {
  ?desmond rdf:type dbo:Politician ;
           foaf:name ""Desmond FitzGerald"" .
  
  ?desmond dbo:child ?child .
  ?child rdf:type dbo:Politician ;
         dbo:officeHolder ?office .

  ?child foaf:name ?childName .
  ?child dbo:birthPlace ?birthPlace .
}
```",2,4,3,2,1,3,2,20,0,0,1,0,0.0,0
285,4,train,Give me the award of Stan Lee.,SELECT ?result WHERE { <http://dbpedia.org/resource/Stan_Lee> <http://dbpedia.org/property/awards> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award WHERE {
  dbr:Stan_Lee dbo:award ?award .
}
```",1,1,2,1,1,3,2,20,0,4,5,0.0,0.0,0
534,2,train,"Who is the native, that is a politician, of Essex?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Essex> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  ?person dbo:birthPlace dbr:Essex .
  ?person dbo:occupation ?occupation .
  FILTER(CONTAINS(LCASE(STR(?occupation)), ""politician""))
}
```",1,2,2,1,1,3,2,20,0,0,89,0,0.0,0
161,14,train,"Give me the commander in the force, that is an event, of Emilio Mola.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Emilio_Mola> . },"```sparql
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?event WHERE {
  ?mola a dbo:Person ;
        foaf:name ""Emilio Mola""@en .
  
  ?mola dbp:commander ?event .
}
```",2,3,3,2,1,3,3,71,0,0,85,0,0.0,0
820,0,train,Give me the professional in .,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . }","```
# No valid SPARQL query can be constructed without additional details.
```",1,1,2,1,1,3,2,20,0,0,39640,0,0.0,0
314,4,train,Give me the award of Sergei Makovetsky.,SELECT ?result WHERE { <http://dbpedia.org/resource/Sergei_Makovetsky> <http://dbpedia.org/property/awards> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?award WHERE {
  ?s dbp:name ""Sergei Makovetsky""@en .
  ?s dbo:award ?award .
}
```",1,1,2,1,1,2,3,28,0,0,1,0,0.0,0
404,17,train,Who is the father of the spouse of Princess Victoria Louise of Prussia?,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?father WHERE {
  ?princess a dbo:Person ;
            rdfs:label ""Princess Victoria Louise of Prussia""@en .
  
  ?princess dbo:spouse ?spouse .

  ?spouse dbo:father ?father .
}
```",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
485,6,train,Give me the entity in United Kingdom and birth place of Thomas Warner (poet).,SELECT ?result WHERE { <http://dbpedia.org/resource/Thomas_Warner_(poet)> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?ukEntity ?birthPlace WHERE {
  ?person dbr:Thomas_Warner_(poet) .
  ?person rdf:type dbo:Poet .

  # Find the entity in United Kingdom
  OPTIONAL { 
    ?person dbo:country dbr:United_Kingdom .
    ?person rdfs:label ?ukEntity .
  }

  # Find the birth place of Thomas Warner (poet)
  ?person dbo:birthPlace ?birthPlace .
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
312,3,train,Give me the birthplace of Giorgio Grigolli.,SELECT ?result WHERE { <http://dbpedia.org/resource/Giorgio_Grigolli> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace WHERE {
  dbr:Giorgio_Grigolli dbo:birthPlace ?birthPlace .
}
```",1,1,2,1,1,2,2,9,2,0,0,1.0,1.0,1.0
232,8,train,"Give me the residence, that is a settlement and British, of Sylvie Bermann.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. <http://dbpedia.org/resource/Sylvie_Bermann> <http://dbpedia.org/property/residence> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?residence WHERE {
  ?sylvieBermann a dbo:Person ;
                 foaf:name ""Sylvie Bermann""@en .
  
  ?sylvieBermann dbo:residence ?residence .

  ?residence a dbo:Settlement .

  OPTIONAL { 
    ?residence dbo:country dbr:United_Kingdom .
  }

  FILTER NOT EXISTS {
    ?residence dbo:country ?otherCountry .
    FILTER (?otherCountry != dbr:United_Kingdom)
  }
}
```",1,3,2,1,1,3,3,71,2,0,0,1.0,1.0,1.0
747,4,train,Give me the birth date of Pavlo Khudzik.,SELECT ?result WHERE { <http://dbpedia.org/resource/Pavlo_Khudzik> <http://dbpedia.org/ontology/birthDate> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthDate WHERE {
  dbr:Pavlo_Khudzik dbo:birthDate ?birthDate .
}
```",1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
197,1,train,Give me the birthplace of George Lusztig.,SELECT ?result WHERE { <http://dbpedia.org/resource/George_Lusztig> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthPlace WHERE {
  ?person dbo:name ""George Lusztig""@en .
  ?person dbo:birthPlace ?birthPlace .
}
```",1,1,2,1,1,2,2,9,0,0,2,0,0.0,0
312,1,train,Give me the entity in Italy.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?entity WHERE {
  ?entity dbo:country dbr:Italy .
}
```",1,1,2,1,1,2,2,9,13092,0,0,1.0,1.0,1.0
9,17,train,"Give me the nickname of the entity, that is an organisation and an educational institution, in Northern Ireland.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Northern_Ireland> . ?v1 <http://dbpedia.org/property/nickname> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?nickname WHERE {
  ?entity a dbo:Organisation ;
          a dbo:EducationalInstitution ;
          dbo:country dbr:Northern_Ireland .
  OPTIONAL { ?entity rdfs:label ?nickname . FILTER (lang(?nickname) = 'en') }
}
```",2,4,3,2,1,3,3,71,0,133,5,0.0,0.0,0
16,17,train,Give me the birth name of the alumnus of Ohio State University.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Ohio_State_University> . ?v1 <http://dbpedia.org/property/birthName> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?alumnus ?birthName WHERE {
  ?alumnus dbo:almaMater dbr:Ohio_State_University .
  OPTIONAL { ?alumnus foaf:givenName ?birthName . }
}
```",2,2,3,2,1,3,3,71,0,467,90,0.0,0.0,0
429,4,train,Give me the country of 77th Ohio Infantry Regiment and administration of Andrew Johnson.,SELECT ?result WHERE { <http://dbpedia.org/resource/77th_Ohio_Infantry_Regiment> <http://dbpedia.org/ontology/country> ?result . ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Andrew_Johnson> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?country ?administrationStartDate ?administrationEndDate
WHERE {
  # Find the country for the 77th Ohio Infantry Regiment
  OPTIONAL { 
    dbr:77th_Ohio_Infantry_Regiment dbo:country ?country .
  }
  
  # Find Andrew Johnson's administration dates
  OPTIONAL {
    dbr:Andrew_Johnson dbo:presidency ?administration .
    ?administration dbo:startDate ?administrationStartDate ;
                   dbo:endDate ?administrationEndDate .
  }
}
```",2,2,3,1,2,2,2,9,1,1,0,0.5,1.0,0.6666666666666666
360,2,train,Give me the reference to Manfred Mann.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Manfred Mann""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?reference WHERE {
  ?manfredMann a dbo:MusicalArtist ;
               rdfs:label ""Manfred Mann""@en .
  
  ?manfredMann dbo:wikiPageWikiLink ?reference .
}
```",1,1,2,1,1,2,3,28,0,0,2,0,0.0,0
487,5,train,"Give me the person born, that is a soccer player, as Philip Brian Scott.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Philip Brian Scott""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person ?birthDate WHERE {
  ?person a dbo:SoccerPlayer .
  ?person foaf:name ""Philip Brian Scott"" .
  ?person dbo:birthDate ?birthDate .
}
```",1,2,2,1,1,3,2,20,0,0,1,0,0.0,0
994,6,train,"Give me the band member, that is a band and a group and an organisation, of Meshuggah.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Meshuggah> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?member WHERE {
  ?band rdf:type dbo:MusicalBand ;
        rdfs:label ""Meshuggah""@en .
  
  ?band dbo:bandMember ?member .

  OPTIONAL { ?member dbo:band ?otherBand . }
  OPTIONAL { ?member dbo:musicalGroup ?otherGroup . }
  OPTIONAL { ?member dbo:organization ?org . }

  FILTER (
    EXISTS { ?member dbo:band ?otherBand } ||
    EXISTS { ?member dbo:musicalGroup ?otherGroup } ||
    EXISTS { ?member dbo:organization ?org }
  )
}
```",1,4,2,1,1,3,3,71,0,0,6,0,0.0,0
427,8,train,"Who is the person born, that is an office holder and a politician, as Romano Antonio Prodi?","SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Romano Antonio Prodi""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name WHERE {
  ?person a dbo:OfficeHolder .
  ?person a dbo:Politician .
  ?person dbo:birthDate ?birthDate .
  OPTIONAL { ?person foaf:name ?name . }
}
ORDER BY ?name
LIMIT 10
```",1,3,2,1,1,3,3,71,0,15,1,0.0,0.0,0
747,13,train,Give me the band of the writer of Apollo (Hardwell song).,SELECT ?result WHERE { <http://dbpedia.org/resource/Apollo_(Hardwell_song)> <http://dbpedia.org/property/writer> ?v1 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?band WHERE {
  # Find the song ""Apollo"" by Hardwell
  ?song dbo:title ""Apollo""@en .
  ?song dbo:artist dbr:Hardwell .

  # Identify the lyricist(s) of the song
  ?song dbo:lyricist ?writer .

  # Check if the writer is a member of any band
  ?writer dbo:member ?band .
}
```",2,2,3,2,1,3,3,71,0,0,13,0,0.0,0
626,9,train,"Give me the force, that is a military conflict, of the commander in Battle of Paris (1814).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> ?v0 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Battle_of_Paris_(1814)> <http://dbpedia.org/ontology/commander> ?v0 . },"```sparql
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?commander ?force WHERE {
  ?battle dbp:name ""Battle of Paris (1814)"" .
  ?battle dbo:commander ?commander .
  OPTIONAL { 
    ?commander dbo:militaryConflict ?conflict .
    ?conflict dbo:participatedIn ?force .
  }
}
```",2,3,3,2,1,3,2,20,0,0,77,0,0.0,0
754,7,train,Give me the parent of the parent of May Hnin Htapi.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/May_Hnin_Htapi> <http://dbpedia.org/ontology/parent> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?grandparent WHERE {
  ?mayHninHtapi dbo:name ""May Hnin Htapi""@en .
  OPTIONAL { ?mayHninHtapi dbo:mother ?parent . }
  OPTIONAL { ?mayHninHtapi dbo:father ?parent . }
  FILTER(?parent != null)
  OPTIONAL { ?parent dbo:mother ?grandparent . }
  OPTIONAL { ?parent dbo:father ?grandparent . }
  FILTER(?grandparent != null)
}
```",2,2,3,2,1,3,2,20,0,0,1,0,0.0,0
92,8,train,Give me the person born as Joseph Michael Furney.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Joseph Michael Furney""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person ?name WHERE {
  ?person dbo:birthName ""Joseph Michael Furney"" .
  OPTIONAL { ?person foaf:name ?name . }
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
838,5,train,"Give me the band, that is a group, of YU Grupa.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. <http://dbpedia.org/resource/YU_Grupa> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?group WHERE {
  ?artist rdf:type dbo:MusicalArtist .
  ?artist rdfs:label ""YU Grupa""@en .
  ?artist dbo:band ?group .
}
```",1,2,2,1,1,3,2,20,0,0,8,0,0.0,0
659,11,train,"Give me the commander in the force of Arthur Wellesley, 1st Duke of Wellington.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Arthur_Wellesley,_1st_Duke_of_Wellington> . ?v0 <http://dbpedia.org/ontology/commander> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  dbr:Arthur_Wellesley,_1st_Duke_of_Wellington dbo:subordinateOf ?commander .
}
```",2,2,3,2,1,3,3,71,0,0,175,0,0.0,0
963,8,train,"Give me the administration of the ruling party, that is a political party, in Sremski Karlovci.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. <http://dbpedia.org/resource/Sremski_Karlovci> <http://dbpedia.org/property/leaderParty> ?v0 . ?result <http://dbpedia.org/property/leaderParty> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?party ?leader WHERE {
  ?city a dbo:City ;
        rdfs:label ""Sremski Karlovci""@en .
  
  ?city dbp:rulingParty ?party .

  OPTIONAL { 
    ?party dbo:leader ?leader .
  }
}
```",2,3,3,2,1,3,2,20,0,0,86,0,0.0,0
77,5,train,Who is the mayor of Congress Poland?,SELECT ?result WHERE { <http://dbpedia.org/resource/Congress_Poland> <http://dbpedia.org/property/leader> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?mayor WHERE {
  ?congressPoland dbo:officialName ""Congress Poland""@en .
  ?congressPoland dbo:mayor ?mayor .
}
```",1,1,2,1,1,3,2,20,0,0,2,0,0.0,0
54,17,train,"Give me the child, that is an office holder and a royalty, of the reference to Thihapate of Mohnyin.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/property/father> ?v1 . ?v1 <http://xmlns.com/foaf/0.1/name> ""Thihapate of Mohnyin""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?child WHERE {
  ?thihapate dbo:child ?child .
  FILTER (str(?thihapate) = ""Thihapate of Mohnyin"") .

  ?child rdf:type dbo:OfficeHolder .
  ?child rdf:type dbo:Monarch .
}
```",2,4,3,2,1,3,3,71,0,0,1,0,0.0,0
345,8,train,"Give me the team of the person born, that is a soccer player and a soccer manager, on 1978-09-15.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v0 <http://dbpedia.org/ontology/birthDate> ""1978-09-15""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://dbpedia.org/ontology/manager> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?team WHERE {
  ?person a dbo:SoccerPlayer .
  ?person a dbo:SoccerManager .
  ?person dbo:birthDate ""1978-09-15""^^xsd:date .
  OPTIONAL { ?person dbo:team ?team . }
}
```",2,4,3,2,1,3,2,20,1,37,1,0.02631578947368421,0.5,0.05
251,9,train,Give me the administration of Forza Italia (2013) and death place of Laura Mancinelli.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Forza_Italia_(2013)> . <http://dbpedia.org/resource/Laura_Mancinelli> <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?administration ?deathPlace
WHERE {
  # Find the administration of Forza Italia in 2013
  ?party a dbo:PoliticalParty ;
         rdfs:label ""Forza Italia""@en .
  OPTIONAL { 
    ?admin dbo:administration ?year .
    FILTER (?year = 2013)
    ?admin dbo:member ?party .
    BIND(?admin AS ?administration)
  }
  
  # Find the death place of Laura Mancinelli
  dbr:Laura_Mancinelli dbo:deathPlace ?deathPlace .
}
```",2,2,3,1,2,2,3,28,1,2,0,0.3333333333333333,1.0,0.5
404,4,train,"Who is the person born, that is a royalty, as Princess Victoria Louise of Prussia?","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/birthName> ""Princess Victoria Louise of Prussia""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person rdfs:label ""Princess Victoria Louise of Prussia""@en .
  ?person dbo:birthDate ?birthDate .
  ?person rdf:type ?type .
  FILTER (CONTAINS(LCASE(STR(?type)), ""princess"") || CONTAINS(LCASE(STR(?type)), ""royalty""))
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
617,3,train,"Give me the child, that is a royalty, of Boleslaus I, Duke of Bohemia.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Boleslaus_I,_Duke_of_Bohemia> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?child WHERE {
  ?boleslaus1 a dbo:Duke ;
              foaf:name ""Boleslaus I, Duke of Bohemia""@en .
  
  ?boleslaus1 dbo:child ?child .

  ?child dbo:royalty ?true .
}
```",1,2,2,1,1,3,2,20,0,0,2,0,0.0,0
92,5,train,Give me the actor of Return to Nuke 'Em High Volume 1.,SELECT ?result WHERE { <http://dbpedia.org/resource/Return_to_Nuke_'Em_High_Volume_1> <http://dbpedia.org/property/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
    ?film rdf:type dbo:Film .
    ?film rdfs:label ""Return to Nuke 'Em High Volume 1""@en .
    ?film dbo:starring ?actor .
}
```",1,1,2,1,1,3,3,71,0,1,19,0.0,0.0,0
345,7,train,Give me the figure known as the nickname of FC Vaduz.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ?v1 . <http://dbpedia.org/resource/FC_Vaduz> <http://dbpedia.org/property/nickname> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?nickname WHERE {
  ?club rdfs:label ""FC Vaduz""@en .
  ?club dbo:nickname ?nickname .
}
```",2,2,3,2,1,3,2,20,0,0,1,0,0.0,0
959,7,train,"Who is the manager, that is a sports manager, of 1998 Kashima Antlers season?",SELECT ?result WHERE { <http://dbpedia.org/resource/1998_Kashima_Antlers_season> <http://dbpedia.org/ontology/manager> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. },"```sparql
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?manager WHERE {
  ?team dbp:name ""Kashima Antlers""@en .
  ?team dbp:season ""1998""@en .
  ?team dbp:manager ?manager .

  OPTIONAL { 
    ?manager dbo:occupation ?occupation .
    FILTER(CONTAINS(LCASE(?occupation), ""sports manager""))
  }

  FILTER NOT EXISTS {
    ?manager dbo:occupation ?occupation .
    FILTER(!CONTAINS(LCASE(?occupation), ""sports manager""))
  }
}
```",1,2,2,1,1,3,3,71,0,0,2,0,0.0,0
485,0,train,Give me the entity in United Kingdom.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity WHERE {
  ?entity dbo:country dbr:United_Kingdom .
}
```",1,1,2,1,1,2,3,28,42999,0,0,1.0,1.0,1.0
959,14,train,Give me the manager of the team of Takashi Sekizuka.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Takashi_Sekizuka> . ?v0 <http://dbpedia.org/ontology/manager> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?manager WHERE {
  ?person rdfs:label ""Takashi Sekizuka""@en .
  ?team dbo:player ?person .
  ?team dbo:manager ?manager .
}
```",2,2,3,2,1,3,3,71,0,0,10,0,0.0,0
701,15,train,Give me the child of the spouse of Amun-her-khepeshef.,SELECT ?result WHERE { <http://dbpedia.org/resource/Amun-her-khepeshef> <http://dbpedia.org/ontology/spouse> ?v1 . ?v1 <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?child WHERE {
  ?amunherkhepeshef dbo:spouse ?spouse .
  FILTER (str(?amunherkhepeshef) = ""Amun-her-khepeshef"") .

  ?spouse dbo:child ?child .
}
```",2,2,3,2,1,3,3,71,0,0,6,0,0.0,0
963,6,train,Give me the entity in Serbia and administration of Serbian Progressive Party.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Serbia> . ?result <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Serbian_Progressive_Party> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?entity WHERE {
  ?entity dbp:country ""Serbia"" .
  ?entity dbo:member ?party .
  ?party rdfs:label ""Serbian Progressive Party""@en .
}
```",2,2,3,1,2,3,2,20,0,0,84,0,0.0,0
528,17,train,Give me the person born as the birth name of Narciso Campero.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Narciso_Campero> <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person ?name WHERE {
  # Get the birth name of Narciso Campero
  VALUES (?campero) { <http://dbpedia.org/resource/Narciso_Campero> }
  
  ?campero dbo:birthName ?birthName .
  
  # Find any person with the same birth name
  ?person a foaf:Person ;
          dbo:birthName ?birthName ;
          foaf:name ?name .

  FILTER (?person != ?campero) # Exclude Narciso Campero himself
}
```",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
659,7,train,Give me the reference to Rutger Jan Schimmelpenninck.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Rutger Jan Schimmelpenninck""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?reference WHERE {
  ?subject rdfs:label ""Rutger Jan Schimmelpenninck""@en .
  OPTIONAL { ?subject dbo:wikiPageWikiLink ?reference . }
  UNION
  OPTIONAL { ?subject rdfs:seeAlso ?reference . }
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
421,0,train,Give me the band member of Senidah.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Senidah> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?bandMember WHERE {
  ?senidah dbo:alias ""Senidah"" .
  ?senidah dbo:bandMember ?bandMember .
}
```",1,1,2,1,1,2,3,28,0,0,2,0,0.0,0
281,10,train,"Give me the war of New Zealand Army and war of Beauchamp Seymour, 1st Baron Alcester.","SELECT ?result WHERE { <http://dbpedia.org/resource/New_Zealand_Army> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Beauchamp_Seymour,_1st_Baron_Alcester> <http://dbpedia.org/ontology/battle> ?result . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/resource/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT DISTINCT ?war WHERE {
  ?nzArmy a dbo:MilitaryUnit ;
          rdfs:label ""New Zealand Army""@en .
  
  ?beauchamp a dbo:Person ;
             rdfs:label ""Beauchamp Seymour, 1st Baron Alcester""@en .

  ?nzArmy dbo:participatedIn ?war .
  ?beauchamp dbo:participatedIn ?war .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
251,7,train,Give me the death place of Laura Mancinelli and location of Battle of Marengo.,SELECT ?result WHERE { <http://dbpedia.org/resource/Battle_of_Marengo> <http://dbpedia.org/ontology/place> ?result . <http://dbpedia.org/resource/Laura_Mancinelli> <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

# Query for Laura Mancinelli's death place
SELECT ?deathPlace WHERE {
  ?person a dbo:Person ;
          foaf:name ""Laura Mancinelli""@en .
  ?person dbo:deathPlace ?deathPlace .
}

UNION

# Query for the location of the Battle of Marengo
SELECT ?location WHERE {
  ?battle dbp:title ""Battle of Marengo""@en ;
          dbp:location ?location .
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
498,4,train,Give me the band of Malevolent Creation and band of Will Rahmer.,SELECT ?result WHERE { <http://dbpedia.org/resource/Will_Rahmer> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Malevolent_Creation> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

# Query for Malevolent Creation's band
SELECT ?band WHERE {
  ?person a dbo:MusicalArtist ;
          foaf:name ""Malevolent Creation"" .
  ?person dbo:member ?band .
}

UNION

# Query for Will Rahmer's band
SELECT ?band WHERE {
  ?person a dbo:Person ;
          foaf:name ""Will Rahmer"" .
  ?person dbo:member ?band .
}
```",2,2,3,1,2,2,2,9,0,0,1,0,0.0,0
492,16,train,"Give me the war, that is a military conflict and an event, of the commander in Battle of Verdun.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Battle_of_Verdun> <http://dbpedia.org/ontology/commander> ?v1 . ?v1 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?war WHERE {
  # Find the commanders of the Battle of Verdun
  ?battle dbo:commander ?commander .
  
  FILTER (str(?battle) = ""Battle_of_Verdun"")

  # For each commander, find wars they commanded that are both military conflicts and events
  ?war dbo:commander ?commander ;
       a dbo:MilitaryConflict, dbo:Event .

}
```",2,4,3,2,1,3,3,71,0,0,11,0,0.0,0
465,1,train,Give me the administration of Czech Pirate Party.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Czech_Pirate_Party> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?position ?person
WHERE {
  VALUES ?party { dbr:Czech_Pirate_Party }
  
  ?party dbo:chairperson ?person .
  BIND(""Chairperson"" AS ?position)
  UNION
  ?party dbo:viceChairperson ?person .
  BIND(""Vice Chairperson"" AS ?position)
}
```",1,1,2,1,1,2,2,9,0,0,2,0,0.0,0
528,0,train,Give me the war of Irene Morales.,SELECT ?result WHERE { <http://dbpedia.org/resource/Irene_Morales> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war WHERE {
  ?person a dbo:Person ;
          foaf:name ""Irene Morales""@en .
  
  ?person dbo:participatedIn ?war .
}
```",1,1,2,1,1,3,3,71,0,0,6,0,0.0,0
487,7,train,Give me the country of the administration of Patricia McCoy.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Patricia_McCoy> . ?v1 <http://dbpedia.org/ontology/country> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?country WHERE {
  ?person rdfs:label ""Patricia McCoy""@en .
  FILTER (lang(?person) = 'en') .

  OPTIONAL { ?person dbo:positionHeld ?position . }
  OPTIONAL { ?person dbo:officeHolder ?office . }

  OPTIONAL { ?position dbo:office ?office . }
  OPTIONAL { ?office dbo:country ?country . }
}
```",2,2,3,2,1,3,2,20,0,0,1,0,0.0,0
994,12,train,Give me the band member of Don Dokken and associated musical artist of Red Tide (band).,SELECT ?result WHERE { <http://dbpedia.org/resource/Red_Tide_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Don_Dokken> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?donDokkenMember ?redTideAssociatedArtist WHERE {
  # Find band members of Don Dokken
  ?band a dbo:Band ;
        dbo:member ?person .
  FILTER(CONTAINS(LCASE(STR(?band)), ""don dokken""))
  
  BIND(?person AS ?donDokkenMember)

  OPTIONAL {
    # Find associated artists with Red Tide (band)
    ?redTide a dbo:MusicalArtist ;
             dbo:associatedBand ?artist .
    FILTER(CONTAINS(LCASE(STR(?redTide)), ""red tide""))
    
    BIND(?artist AS ?redTideAssociatedArtist)
  }
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
465,3,train,"Give me the leader, that is a political party and an organisation, of Chamber of Deputies of the Czech Republic.",SELECT ?result WHERE { <http://dbpedia.org/resource/Chamber_of_Deputies_of_the_Czech_Republic> <http://dbpedia.org/property/leader> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?leader ?party ?organization WHERE {
  # Identify the Chamber of Deputies of the Czech Republic
  dbr:Czech_Parliament/dbo:chamberOfDeputies dbr:Czech_Chamber_of_Deputies .

  # Find the leader of the Chamber of Deputies
  dbr:Czech_Chamber_of_Deputies dbo:leader ?leader .

  # Ensure the leader is a member of a political party
  ?leader dbo:memberOfParty ?party .
  
  # Ensure the leader is associated with an organization
  ?leader dbo:memberOfOrganization ?organization .
}
```",1,3,2,1,1,2,2,9,0,0,5,0,0.0,0
659,4,train,"Give me the force of Arthur Wellesley, 1st Duke of Wellington.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Arthur_Wellesley,_1st_Duke_of_Wellington> . }","```sparql
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?force WHERE {
  ?person rdfs:label ""Arthur Wellesley, 1st Duke of Wellington""@en .
  ?person dbo:commanded ?force .
}
```",1,1,2,1,1,3,3,71,0,0,52,0,0.0,0
827,1,train,"Give me the father of William Ernest, Grand Duke of Saxe-Weimar-Eisenach.","SELECT ?result WHERE { <http://dbpedia.org/resource/William_Ernest,_Grand_Duke_of_Saxe-Weimar-Eisenach> <http://dbpedia.org/property/father> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?fatherName WHERE {
  ?person dbp:name ""William Ernest, Grand Duke of Saxe-Weimar-Eisenach""@en .
  ?person dbo:father ?father .
  ?father rdfs:label ?fatherName .
  FILTER(LANG(?fatherName) = 'en')
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
465,4,train,Give me the death place of Jiřina Štěpničková and administration of Czech Pirate Party.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Czech_Pirate_Party> . <http://dbpedia.org/resource/Jiřina_Štěpničková> <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?deathPlace ?leader WHERE {
  # Query for Jiřina Štěpničková's death place
  dbr:Ji%C5%99ina_%C5%A0t%C4%9Bpn%C3%AD%C4%8Dkov%C3%A1 dbo:deathPlace ?deathPlace .

  # Query for the leader of Czech Pirate Party
  OPTIONAL {
    dbr:Czech_Pirate_Party dbo:leader ?leader .
  }
}
```",2,2,3,1,2,2,2,9,0,0,1,0,0.0,0
492,17,train,"Give me the capital, that is a settlement, of the country of Khemis Miliana District.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Khemis_Miliana_District> <http://dbpedia.org/ontology/country> ?v1 . ?v1 <http://dbpedia.org/ontology/capital> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?capital WHERE {
  ?district rdfs:label ""Khemis Miliana District""@en .
  ?district dbo:administrativeUnitOf dbr:Algeria .
  ?district dbo:capital ?capital .
  ?capital a dbo:Settlement .
}
```",2,3,3,2,1,3,3,71,0,0,1,0,0.0,0
427,1,train,Give me the party of Giulio Andreotti.,SELECT ?result WHERE { <http://dbpedia.org/resource/Giulio_Andreotti> <http://dbpedia.org/ontology/party> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?party
WHERE {
  ?person dbo:wikiPageID Q123456 . # Replace Q123456 with the actual DBpedia ID for Giulio Andreotti
  ?person a dbo:Person .
  ?person dbo:partyAffiliation ?party .
}
```

Note: The `Q123456` should be replaced with the actual DBpedia resource identifier (URI) for ""Giulio Andreotti."" You can find this by searching DBpedia or using an external tool to get the exact URI.",1,1,2,1,1,3,3,71,0,0,5,0,0.0,0
161,12,train,Give me the commander in Biscay Campaign and military force of Spanish Civil War.,SELECT ?result WHERE { <http://dbpedia.org/resource/Biscay_Campaign> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?campaign ?commanderLabel ?militaryForceLabel WHERE {
  ?campaign a dbo:MilitaryCampaign ;
            dbo:partOf dbr:Spanish_Civil_War ;
            rdfs:label ""Biscay Campaign""@en .
  
  OPTIONAL { 
    ?campaign dbo:commander ?commander .
    ?commander rdfs:label ?commanderLabel .
  }
  
  OPTIONAL {
    ?campaign dbo:militaryForce ?militaryForce .
    ?militaryForce rdfs:label ?militaryForceLabel .
  }

  FILTER (lang(?commanderLabel) = 'en')
  FILTER (lang(?militaryForceLabel) = 'en')
}
```",2,2,3,1,2,3,3,71,0,0,3,0,0.0,0
994,13,train,"Give me the associated musical artist of the band member, that is a band and a group and an organisation, of Meshuggah.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Meshuggah> . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?member ?associatedArtist WHERE {
  # Find members of Meshuggah
  ?meshuggah dbo:bandMember ?member .
  
  FILTER (str(?meshuggah) = ""Meshuggah"")

  # Find associated bands for each member
  ?member dbp:associatedBand ?associatedArtist .

  # Ensure the associated artist is both a band and an organization
  ?associatedArtist rdf:type dbo:MusicalGroup .
  ?associatedArtist rdf:type dbo:Organization .
}
```",2,5,3,2,1,3,3,71,0,0,33,0,0.0,0
30,1,train,"Give me the professional in Financier, businessman, vineyard owner, art collector, racehorse owner/breeder.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Financier, businessman, vineyard owner, art collector, racehorse owner/breeder""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  ?person dbo:profession ?occupation .
  
  FILTER (
    EXISTS { ?person dbo:profession dbo:Financier . }
    && EXISTS { ?person dbo:profession dbo:Businessman . }
    && EXISTS { ?person dbo:profession dbo:VineyardOwner . }
    && EXISTS { ?person dbo:profession dbo:ArtCollector . }
    && EXISTS { ?person dbo:profession dbo:RacehorseOwnerBreeder . }
  )
  
  FILTER (str(?person) = ""John_Paul_Getty_Jr"")
}
```",1,1,2,1,1,2,2,9,0,0,1,0,0.0,0
427,0,train,Give me the reference to Partito Popolare Italiano.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Partito Popolare Italiano""@en . }","```sparql
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?s ?redirect WHERE {
  ?s rdfs:label ""Partito Popolare Italiano""@it .
  OPTIONAL { ?s dbo:wikiPageRedirects ?redirect . }
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
404,1,train,Give me the parent of Prince Ernest Augustus of Hanover (born 1914).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Prince_Ernest_Augustus_of_Hanover_(born_1914)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?parent
WHERE {
  ?person dbo:name ""Prince Ernest Augustus of Hanover""@en .
  ?person dbo:birthYear ""1914""^^xsd:gYear .
  ?person dbo:child ?child .
  ?child dbo:parent ?parent .
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
659,13,train,"Give me the commander in the war, that is an event and a military conflict, of 1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish).",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/1st_Light_Cavalry_Lancers_Regiment_of_the_Imperial_Guard_(Polish)> <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  ?regiment rdf:type dbo:MilitaryUnit .
  ?regiment rdfs:label ""1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish)""@en .
  
  ?event rdf:type dbo:War ;
         dbo:participatingMilitaryUnit ?regiment .

  ?regiment dbo:commander ?commander .

  FILTER EXISTS { 
    ?event dbo:militaryConflict true .
  }
}
```",2,4,3,2,1,3,3,71,0,0,130,0,0.0,0
498,0,train,Give me the band of Malevolent Creation.,SELECT ?result WHERE { <http://dbpedia.org/resource/Malevolent_Creation> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?member ?band 
WHERE {
  VALUES ?malevolentCreation { dbr:Malevolent_Creation }
  
  ?malevolentCreation dbo:member ?member .
  ?member dbo:band ?band .
}
```",1,1,2,1,1,2,2,9,0,0,8,0,0.0,0
996,10,train,Give me the award of the native of Palestine (region).,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Palestine_(region)> . ?v0 <http://dbpedia.org/property/awards> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?award WHERE {
  ?person dbo:birthPlace dbr:Palestine_(region) .
  ?person dbo:award ?award .
}
```",2,2,3,2,1,3,2,20,0,0,14,0,0.0,0
959,10,train,Give me the manager of 2013 Júbilo Iwata season and member of University of Tsukuba.,SELECT ?result WHERE { <http://dbpedia.org/resource/2013_Júbilo_Iwata_season> <http://dbpedia.org/ontology/manager> ?result . ?result <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/University_of_Tsukuba> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?manager WHERE {
  # Find Júbilo Iwata's manager in 2013
  ?team dbo:coach ?manager .
  ?team dbp:sport ""Football"" .
  ?team dbp:season ""2013"" .

  FILTER regex(str(?team), ""Júbilo Iwata"", ""i"")

  # Check if the manager was associated with University of Tsukuba
  OPTIONAL {
    ?manager dbo:almaMater dbr:University_of_Tsukuba .
  }
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
92,13,train,"Give me the associated musical artist of the person born, that is an artist, as Jim Sheppard.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/property/birthName> ""Jim Sheppard""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?artist WHERE {
  ?person foaf:name ""Jim Sheppard""@en .
  ?person dbo:associatedBand ?band ;
          dbo:memberOfBand ?band .
  ?band dbo:member ?artist .
  FILTER EXISTS { ?artist dbo:occupation dbr/Musician }
}
```",2,3,3,2,1,3,3,71,0,0,2,0,0.0,0
197,5,train,Give me the birthplace of the member of FC Politehnica Timișoara.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/FC_Politehnica_Timișoara> . ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?player ?birthPlace
WHERE {
  ?player dbo:memberOf dbr:FC_Politehnica_Timișoara .
  ?player dbo:birthPlace ?birthPlace .
}
```",2,2,3,2,1,2,2,9,0,0,171,0,0.0,0
981,1,train,Give me the birth place of Novia Indriani Mamuaja.,SELECT ?result WHERE { <http://dbpedia.org/resource/Novia_Indriani_Mamuaja> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace
WHERE {
  dbr:Novia_Indriani_Mamuaja dbo:birthPlace ?birthPlace .
}
```",1,1,2,1,1,3,2,20,2,0,0,1.0,1.0,1.0
534,6,train,Give me the headquarter of Royal Dublin Society and birth place of Garret FitzGerald.,SELECT ?result WHERE { <http://dbpedia.org/resource/Garret_FitzGerald> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Royal_Dublin_Society> <http://dbpedia.org/ontology/headquarter> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?entityLabel ?headquarters ?birthPlace WHERE {
  {
    SELECT ?entityLabel ?headquarters WHERE {
      ?entity a dbo:Organisation ;
             rdfs:label ""Royal Dublin Society""@en .
      OPTIONAL { ?entity dbp:headquarters ?headquarters . }
      SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
    }
  } UNION {
    SELECT ?entityLabel ?birthPlace WHERE {
      ?person a dbo:Person ;
              rdfs:label ""Garret FitzGerald""@en .
      OPTIONAL { ?person dbo:birthPlace ?birthPlace . }
      SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
    }
  }
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
783,0,train,Give me the associated musical artist of Appietus.,SELECT ?result WHERE { <http://dbpedia.org/resource/Appietus> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artist WHERE {
  dbr:Appietus dbo:associatedMusicalArtist ?artist .
}
```",1,1,2,1,1,3,2,20,15,0,0,1.0,1.0,1.0
963,10,train,"Give me the ruling party, that is a political party, in the location for 21205.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/leaderParty> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v0 <http://dbpedia.org/ontology/postalCode> ""21205"" . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?rulingParty WHERE {
  # Find the location corresponding to postal code ""21205""
  ?location dbo:postalCode ""21205"" .
  
  # Identify the ruling political party in that location
  ?location dbo:government ?government .
  ?government dbo:rulingParty ?rulingParty .
  
  FILTER EXISTS { ?rulingParty a dbo:PoliticalParty }
}
```",2,3,3,2,1,3,2,20,0,0,1,0,0.0,0
427,15,train,Give me the name of the party of Michele Pinto.,SELECT ?result WHERE { <http://dbpedia.org/resource/Michele_Pinto> <http://dbpedia.org/ontology/party> ?v1 . ?v1 <http://xmlns.com/foaf/0.1/name> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?partyName WHERE {
  dbr:Michele_Pinto dbo:partyAffiliation ?party .
  ?party rdfs:label ?partyName .
  FILTER (lang(?partyName) = 'en')
}
```",2,2,3,2,1,3,3,71,0,0,4,0,0.0,0
981,0,train,Give me the entity in Indonesia.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Indonesia> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?entity
WHERE {
  ?entity (dbo:country|dbp:country) ""Indonesia""@en .
}
```",1,1,2,1,1,3,2,20,310,965,2639,0.24313725490196078,0.10512037978975924,0.14678030303030304
360,6,train,Give me the writer of The Roaring Silence and native of Johannesburg.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Johannesburg> . <http://dbpedia.org/resource/The_Roaring_Silence> <http://dbpedia.org/property/writer> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?authorName WHERE {
  ?book dbo:title ""The Roaring Silence""@en .
  ?book dbo:author ?author .
  ?author rdfs:label ?authorName .
  FILTER (lang(?authorName) = 'en')
  
  OPTIONAL { 
    ?author dbo:birthPlace dbr:Johannesburg .
  }
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
492,6,train,"Give me the war, that is a military conflict and an event, of Frédéric-Georges Herr.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Frédéric-Georges_Herr> <http://dbpedia.org/ontology/battle> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war WHERE {
  ?war a dbo:MilitaryConflict .
  ?war a dbo:Event .
  ?event dbo:agent dbr:Frédéric-Georges_Herr .
  ?event dbo:subject ?war .
}
```",1,3,2,1,1,3,3,71,0,0,1,0,0.0,0
712,0,train,Give me the capital of South Russia (1919–1920).,SELECT ?result WHERE { <http://dbpedia.org/resource/South_Russia_(1919–1920)> <http://dbpedia.org/ontology/capital> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?capital WHERE {
  dbr:Ukraine dbo:capital ?capital .
}
```",1,1,2,1,1,3,2,20,0,1,3,0.0,0.0,0
392,4,train,"Give me the time zone, that is a sports event, of Aguilar de Segarra.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsEvent>. <http://dbpedia.org/resource/Aguilar_de_Segarra> <http://dbpedia.org/ontology/timeZone> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?event ?timeZone
WHERE {
  ?event a dbo:Sport ;
         dbo:location dbr:Aguilar_de_Segarra .
  OPTIONAL { ?event dbp:timeZone ?timeZone }
}
```",1,2,2,1,1,2,3,28,0,0,1,0,0.0,0
617,9,train,Give me the spouse of Laodice IV and child of Antiochus III the Great.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Antiochus_III_the_Great> . <http://dbpedia.org/resource/Laodice_IV> <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?person WHERE {
  ?laodiceIV dbo:spouse ?person .
  FILTER (str(?laodiceIV) = ""Laodice_IV"")
  
  ?antiochusIII dbo:child ?person .
  FILTER (str(?antiochusIII) = ""Antiochus_III_the_Great"")
}
```",2,2,3,1,2,3,3,71,0,0,3,0,0.0,0
378,6,train,Who is the commander in Peninsular War?,SELECT ?result WHERE { <http://dbpedia.org/resource/Peninsular_War> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  ?war a dbo:MilitaryConflict ;
      rdfs:label ""Peninsular War""@en .
  
  ?battle dbo:partOf ?war ;
          dbo:commander ?commander .

  FILTER(LANG(?war->rdfs:label) = 'en')
}
```",1,1,2,1,1,3,3,71,0,0,37,0,0.0,0
281,4,train,Who is the awardee of Knight Grand Cross of the Order of the Bath?,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_the_Bath> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name WHERE {
  ?person dbo:award dbr:Knight_Grand_Cross_of_the_Order_of_the_Bath .
  OPTIONAL { ?person foaf:name ?name . }
}
```",1,1,2,1,1,3,3,71,544,596,14,0.47719298245614034,0.974910394265233,0.64075382803298
959,8,train,Give me the team of Takashi Sekizuka.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Takashi_Sekizuka> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?team
WHERE {
  ?person a dbo:BaseballPlayer ;
          foaf:name ""Takashi Sekizuka""@en .
  ?person dbo:team ?team .
}
```",1,1,2,1,1,3,3,71,0,0,10,0,0.0,0
547,7,train,Give me the award of Gerald Graham.,SELECT ?result WHERE { <http://dbpedia.org/resource/Gerald_Graham> <http://dbpedia.org/property/awards> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?award WHERE {
  ?person a dbo:Person ;
          foaf:name ""Gerald Graham""@en .
  ?person dbo:award ?award .
}
```",1,1,2,1,1,3,3,71,5,0,0,1.0,1.0,1.0
838,2,train,"Give me the band, that is a band and a group, of Žika Jelić.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Žika_Jelić> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?band WHERE {
  ?band rdf:type dbo:Band .
  ?band rdf:type dbo:MusicalGroup .
  ?band dbp:member Žika Jelić .
}
```",1,3,2,1,1,3,2,20,0,0,1,0,0.0,0
378,0,train,Give me the war of Carl Pontus Gahn.,SELECT ?result WHERE { <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war ?description WHERE {
  ?person rdfs:label ""Carl Pontus Gahn""@en .
  FILTER NOT EXISTS { ?person a dbo:War } # Ensure it's not directly classified as a war
  ?person dbo:participatedIn|dbo:associatedWith ?war .
  ?war rdf:type dbo:War .
  OPTIONAL { ?war rdfs:label ?name . }
  OPTIONAL { ?war dbo:description ?description . }
}
```",1,1,2,1,1,3,3,71,0,0,12,0,0.0,0
547,8,train,Give me the awardee of Knight Grand Cross of the Order of St Michael and St George.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_St_Michael_and_St_George> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person dbo:award dbr:Knight_Grand_Cross_of_the_Order_of_St_Michael_and_St_George .
}
```",1,1,2,1,1,3,3,71,59,3,2,0.9516129032258065,0.9672131147540983,0.959349593495935
485,3,train,"Give me the region, that is a country, of Western European Time.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Western_European_Time> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?country WHERE {
  ?country a dbo:Country .
  ?country dbp:timeZone ""Western European Time"" .
}
```",1,2,2,1,1,2,3,28,0,0,6,0,0.0,0
778,6,train,Give me the entity in United States and author of Chroot.,SELECT ?result WHERE { <http://dbpedia.org/resource/Chroot> <http://dbpedia.org/ontology/author> ?result . ?result <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/United_States> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?entity ?author WHERE {
  ?chroot dbo:wikiPageRedirects ?redirect .
  ?redirect dbo:creator ?author .
  ?entity dbo:wikiPageRedirects ?redirect .
  ?entity dbp:country ""United States""@en .
  FILTER (str(?author) = ""Dennis Ritchie"")
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
617,5,train,"Give me the father, that is a royalty, of Richeza of Poland, Queen of Hungary.","SELECT ?result WHERE { <http://dbpedia.org/resource/Richeza_of_Poland,_Queen_of_Hungary> <http://dbpedia.org/property/father> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  ?richeza a dbo:Person ;
           rdfs:label ""Richeza of Poland, Queen of Hungary""@en .
  
  OPTIONAL { ?richeza dbo:father ?father . }
  OPTIONAL { ?father dbo:title ?title . FILTER(CONTAINS(LCASE(str(?title)), ""king"") || CONTAINS(LCASE(str(?title)), ""queen"") || CONTAINS(LCASE(str(?title)), ""prince"") || CONTAINS(LCASE(str(?title)), ""duke"")) . }

  FILTER(langMatches(lang(?richeza), ""en""))
}
```",1,2,2,1,1,3,2,20,0,0,1,0,0.0,0
959,5,train,"Who is the leader, that is a politician, of 2010 Japanese House of Councillors election?",SELECT ?result WHERE { <http://dbpedia.org/resource/2010_Japanese_House_of_Councillors_election> <http://dbpedia.org/property/leader> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX db: <http://dbpedia.org/resource/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?leader WHERE {
  db:2010_Japanese_House_of_Councillors_election dbo:leader ?leader .
  OPTIONAL { ?leader a dbo:Politician . }
}
```",1,2,2,1,1,3,3,71,0,0,9,0,0.0,0
30,2,train,Give me the birthplace of Silvia Cohen.,SELECT ?result WHERE { <http://dbpedia.org/resource/Silvia_Cohen> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthPlace WHERE {
  ?person rdfs:label ""Silvia Cohen""@en.
  ?person dbo:birthPlace ?birthPlace.
}
```",1,1,2,1,1,2,2,9,2,0,0,1.0,1.0,1.0
77,3,train,Who is the awardee of Golden Weapon for Bravery?,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Golden_Weapon_for_Bravery> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name WHERE {
  ?person a dbo:Person .
  ?person dbo:award dbr:Golden_Weapon_for_Bravery .
  OPTIONAL { ?person foaf:name ?name . }
}
```",1,1,2,1,1,3,2,20,10,15,0,0.4,1.0,0.5714285714285715
232,16,train,"Give me the claim to fame, that is a film and a military conflict, of the professional in Actor, narrator and producer.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/occupation> ""Actor, narrator and producer""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/knownFor> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?film ?conflict WHERE {
  ?person dbo:profession dbr:Actor . 
  ?person dbo:profession dbr:Narrator .
  ?person dbo:profession dbr:Producer .
  ?person foaf:name ""Morgan Freeman""@en .

  OPTIONAL { ?person dbo:film ?film . }
  OPTIONAL { ?conflict dbo:narratedBy ?person . FILTER regex(?conflict, ""Vietnam War"", ""i"") }

  FILTER (?film = dbr:The_Shawshank_Redemption OR ?conflict != """")
}
```",2,4,3,2,1,3,3,71,0,0,1,0,0.0,0
281,7,train,"Who is the professional, that is an office holder and a politician, in New Zealand Army?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/New_Zealand_Army> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT DISTINCT ?person ?name WHERE {
  ?person rdf:type dbo:MilitaryPerson .
  ?person dbo:memberOf ?organization .
  ?organization rdfs:label ""New Zealand Army""@en .
  
  ?person dbo:occupation ?occupation .
  FILTER (
    EXISTS { ?occupation rdfs:label ?officeLabel . 
             FILTER (CONTAINS(LCASE(?officeLabel), ""office holder"") || CONTAINS(LCASE(?officeLabel), ""politician"")) }
  )
  
  OPTIONAL {
    ?person foaf:name ?name .
  }
}
```",1,3,2,1,1,3,3,71,0,0,1,0,0.0,0
747,17,train,Who is the person born as the persona of Shèna?,SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Shèna> <http://xmlns.com/foaf/0.1/givenName> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person ?fullName WHERE {
  ?person a dbo:Person .
  ?person dbo:birthName ""Shèna"" .
  ?person foaf:name ?fullName .
}
```",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
783,8,train,"Give me the band member of the person born, that is an artist and a musical artist, as Priscilla Opoku-Kwarteng.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://dbpedia.org/property/birthName> ""Priscilla Opoku-Kwarteng""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band WHERE {
  ?person a dbo:MusicalArtist ;
          foaf:name ""Priscilla Opoku-Kwarteng"" ;
          dbo:musicalArtist true .
  
  OPTIONAL { ?person dbo:occupation dbr:Artist . }
  
  ?person dbo:bandMember ?band .
}
```",2,4,3,2,1,3,2,20,0,0,7,0,0.0,0
378,9,train,Give me the war of Joaquín Blake and war of Carl Pontus Gahn.,SELECT ?result WHERE { <http://dbpedia.org/resource/Joaquín_Blake> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war ?description WHERE {
  # Joaquín Blake's involvement in wars
  OPTIONAL {
    dbr:Joaqu%C3%ADn_Blake dbo:participatedIn ?war .
    ?war rdfs:label ?description .
    FILTER (lang(?description) = 'en')
  }
  
  # Carl Pontus Gahn's historical context or indirect associations with wars
  OPTIONAL {
    dbr:C._P._Gahn dbo:birthPlace ?place .
    ?place dbo:locatedIn ?country .
    ?country dbo:participatedIn ?war .
    ?war rdfs:label ?description .
    FILTER (lang(?description) = 'en')
  }
}
```",2,2,3,1,2,3,3,71,0,0,2,0,0.0,0
391,13,train,"Give me the actor of the claim to fame, that is a work, of Michael Ballhaus.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Michael_Ballhaus> <http://dbpedia.org/ontology/knownFor> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actor WHERE {
  # Identify Michael Ballhaus
  dbr:Michael_Ballhaus a dbo:Person .

  # Find his claim to fame (films or TV series)
  OPTIONAL { 
    dbr:Michael_Ballhaus dbo:film ?work .
  }
  OPTIONAL {
    dbr:Michael_Ballhaus dbo:televisionSeries ?work .
  }

  # Extract actors from these works
  ?work dbo:starring ?actor .
}
```",2,3,3,2,1,3,3,71,0,0,20,0,0.0,0
534,9,train,"Who is the child, that is a politician and an office holder, of the native, that is a politician, of Essex?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Essex> . ?v0 <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child
WHERE {
  ?person dbo:birthPlace dbr:Essex .
  ?person dbo:occupation dbr:Politician .

  ?person dbo:child ?child .

  ?child dbo:occupation dbr:Politician .
  ?child dbo:officeHolder true .
}
```",2,5,3,2,1,3,2,20,0,0,7,0,0.0,0
392,8,train,"Give me the entity in the region, that is a country, of Central European Time.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?country WHERE {
  ?country a dbo:Country .
  ?country dbo:timeZone dbr:Central_European_Time .
}
```",2,3,3,2,1,2,3,28,29,65,173232,0.30851063829787234,0.00016737754024275515,0.00033457356292001964
378,16,train,"Who is the commander in the reference, that is a military conflict, to Peninsular War?","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://xmlns.com/foaf/0.1/name> ""Peninsular War""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  dbr:Peninsular_War dbo:commander ?commander .
}
```",2,3,3,2,1,3,3,71,37,0,0,1.0,1.0,1.0
435,0,train,Give me the territory administered from Reykjavík.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Reykjavík> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?territory WHERE {
  dbr:Reykjavík dbo:capital ?territory .
  OPTIONAL { ?territory rdfs:label ?label FILTER (lang(?label) = 'en') }
}
```",1,1,2,1,1,2,3,28,0,0,2,0,0.0,0
251,10,train,"Give me the administration of the ruling party, that is a political party and an organisation, in Sicily.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/leaderParty> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Sicily> <http://dbpedia.org/property/leaderParty> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?party ?leader WHERE {
  ?party a dbo:PoliticalParty ;
         a dbo:Organization ;
         dbp:country ""Italy""^^xsd:string .
  
  OPTIONAL { 
    ?party dbp:region ""Sicily""^^xsd:string .
  }
  
  OPTIONAL {
    ?party dbo:leader ?leader .
  }

  FILTER EXISTS { ?party dbp:region ""Sicily""^^xsd:string }
}
```",2,4,3,2,1,2,3,28,0,0,5,0,0.0,0
294,1,train,Give me the resting place of Edwin A. Keeble.,SELECT ?result WHERE { <http://dbpedia.org/resource/Edwin_A._Keeble> <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?burialPlace WHERE {
  ?person a dbo:Person ;
          foaf:name ""Edwin A. Keeble""@en .
  OPTIONAL { ?person dbo:burialPlace ?burialPlace . }
}
```",1,1,2,1,1,2,3,28,0,0,1,0,0.0,0
392,2,train,Give me the province of Schio.,SELECT ?result WHERE { <http://dbpedia.org/resource/Schio> <http://dbpedia.org/ontology/province> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?province WHERE {
  dbr:Schio dbo:locatedIn ?province .
}
```",1,1,2,1,1,2,3,28,0,0,1,0,0.0,0
994,10,train,Give me the band member of Don Dokken and associated musical artist of S.A. Slayer.,SELECT ?result WHERE { <http://dbpedia.org/resource/S.A._Slayer> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Don_Dokken> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandMember ?associatedArtist WHERE {
  # Find band members of Don Dokken's band (Dokken)
  OPTIONAL {
    ?dokkenBand a dbo:MusicalGroup ;
               dbo:leadMusician dbr:Don_Dokken .
    ?dokkenBand dbo:bandMember ?bandMember .
  }

  # Find associated musical artists with S.A. Slayer
  OPTIONAL {
    ?sASlayer a dbo:MusicalArtist ;
              dbo:associatedBand ?associatedBand .
    ?associatedBand dbo:artist ?associatedArtist .
  }
}
```",2,2,3,1,2,3,3,71,0,39,1,0.0,0.0,0
528,9,train,Give me the war of Orozimbo Barbosa and war of Irene Morales.,SELECT ?result WHERE { <http://dbpedia.org/resource/Orozimbo_Barbosa> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Irene_Morales> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war ?description WHERE {
  VALUES (?person) { 
    dbr:Orozimbo_Barbosa 
    dbr:Irene_Morales 
  }
  
  # Find wars related to Orozimbo Barbosa
  OPTIONAL {
    ?war dbo:wikiPageWikiLink ?person .
    ?war dbo:description ?description .
  }

  # Find wars related to Irene Morales
  OPTIONAL {
    ?war2 dbo:wikiPageWikiLink ?person .
    ?war2 dbo:description ?description .
  }
  
  FILTER(?war != ?war2)
}
```",2,2,3,1,2,3,3,71,0,0,2,0,0.0,0
994,17,train,"Who is the person born, that is a musical artist, as the persona of Don Dokken?",SELECT ?result WHERE { <http://dbpedia.org/resource/Don_Dokken> <http://xmlns.com/foaf/0.1/givenName> ?v0 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/birthName> ?v0 . },"```sparql
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?person ?realName WHERE {
  ?person a foaf:Person .
  ?person dbo:alias ""Don Dokken"" .
  ?person rdfs:label ?realName .
  FILTER (CONTAINS(LCASE(?realName), LCASE(""don dokken"")))
}
```",2,3,3,2,1,3,3,71,0,0,1,0,0.0,0
488,0,train,Give me the birth place of Enomoto Takeaki.,SELECT ?result WHERE { <http://dbpedia.org/resource/Enomoto_Takeaki> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthPlace
WHERE {
  ?person dbp:name ""Enomoto Takeaki""@en .
  ?person dbo:birthPlace ?birthPlace .
}
```",1,1,2,1,1,3,3,71,2,0,0,1.0,1.0,1.0
391,8,train,"Give me the movie, that is a movie and a work and a television show, with Roz Ryan.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Roz_Ryan> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?movie WHERE {
  ?movie rdf:type dbo:Film .
  ?movie rdf:type dbo:CreativeWork .
  ?movie rdf:type dbo:TelevisionShow .
  ?movie dbo:starring ?person .
  ?person foaf:name ""Roz Ryan""@en
}
```",1,4,2,1,1,3,3,71,0,0,1,0,0.0,0
294,11,train,"Give me the entity in the birth place, that is a settlement, of Marion James.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/location> ?v1 . <http://dbpedia.org/resource/Marion_James> <http://dbpedia.org/ontology/birthPlace> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?birthPlace WHERE {
  ?marionJames dbo:birthPlace ?birthPlace .
  FILTER EXISTS { ?birthPlace rdf:type rdfs:Class . }
  FILTER EXISTS { ?birthPlace rdfs:subClassOf* <http://dbpedia.org/class/yago/Settlement_12345678> } # Assuming a generic subclass for settlements
  VALUES ?marionJames { <http://dbpedia.org/resource/Marion_James> }
}
```",2,3,3,2,1,2,3,28,0,0,340,0,0.0,0
92,1,train,Give me the associated musical artist of Jim Sheppard.,SELECT ?result WHERE { <http://dbpedia.org/resource/Jim_Sheppard> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?band WHERE {
  ?person a dbo:Person ;
          foaf:name ""Jim Sheppard""@en .
  ?person dbo:associatedBand ?band .
}
```",1,1,2,1,1,3,3,71,2,0,0,1.0,1.0,1.0
92,10,train,Give me the band of Joseph Michael and band member of Nevermore.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Joseph_Michael> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Nevermore> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?bandOfJosephMichael ?memberOfNevermore
WHERE {
  # Find the band associated with Joseph Michael
  ?person a dbo:MusicalArtist ;
          foaf:name ""Joseph Michael""@en .
  ?person dbo:band ?bandOfJosephMichael .

  # Find a member of the band Nevermore
  ?nevermoreBand a dbo:Band ;
                 dbp:name ""Nevermore""@en .
  ?nevermoreBand dbo:member ?memberOfNevermore .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
392,1,train,Give me the region of Central European Time.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Central_European_Time> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?region WHERE {
  ?timeZone a dbo:TimeZone ;
            rdfs:label ""Central European Time""@en .
  OPTIONAL { ?timeZone dbp:country ?region . }
}
```",1,1,2,1,1,2,3,28,0,0,49990,0,0.0,0
281,11,train,Give me the war of the awardee of Knight Grand Cross of the Order of the Bath.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_the_Bath> . ?v0 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?recipient WHERE {
  ?award a dbo:Award ;
        dbo:rank ""Knight Grand Cross""^^xsd:string ;
        dbo:order dbr:Order_of_the_Bath .
  ?award dbo:recipient ?recipient .
}
```",2,2,3,2,1,3,3,71,0,0,450,0,0.0,0
427,16,train,Who is the father of the alumnus of Massachusetts Institute of Technology?,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Massachusetts_Institute_of_Technology> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT DISTINCT ?fatherName WHERE {
  ?alumnus dbo:alumniOf dbr:Massachusetts_Institute_of_Technology .
  ?alumnus dbo:father ?father .
  ?father rdfs:label ?fatherName .
  FILTER (lang(?fatherName) = 'en')
}
```",2,2,3,2,1,3,3,71,0,0,12,0,0.0,0
617,0,train,Give me the child of Antiochus III the Great.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Antiochus_III_the_Great> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child WHERE {
  ?person dbp:name ""Antiochus III the Great""@en .
  ?person dbo:child ?child .
}
```",1,1,2,1,1,3,3,71,0,0,5,0,0.0,0
161,8,train,"Give me the force, that is an event, of Emilio Mola.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Emilio_Mola> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?event WHERE {
  dbr:Emilio_Mola dbo:associatedWith ?event .
  ?event a dbo:Event .
}
```",1,2,2,1,1,3,3,71,0,0,10,0,0.0,0
838,4,train,"Give me the reference, that is a group and an organisation, to YU Grupa.","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""YU Grupa""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?yugrupa WHERE {
  ?yugrupa a dbo:Band .
  ?yugrupa a dbo:Organization .
  ?yugrupa rdfs:label ""YU Grupa""@en .
}
```",1,3,2,1,1,3,2,20,0,0,1,0,0.0,0
617,3,train,"Who is the successor, that is a royalty, of Antiochus II Theos?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Antiochus_II_Theos> <http://dbpedia.org/ontology/successor> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?successor WHERE {
  ?antiochus2 dbo:successor ?successor .
  FILTER (str(?antiochus2) = ""Antiochus_II_Theos"")
  ?successor rdf:type dbo:Monarch .
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
356,4,train,"Give me the birth place, that is English and a settlement, of Gary Williams (footballer, born 1960).","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. <http://dbpedia.org/resource/Gary_Williams_(footballer,_born_1960)> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?birthPlace
WHERE {
  ?person dbp:name ""Gary Williams"" ;
          dbo:birthYear ""1960"" ;
          rdf:type dbo:Footballer ;
          dbo:birthPlace ?birthPlace .
  
  ?birthPlace rdf:type dbo:Settlement, dbo:PopulatedPlace ;
              dbo:country dbpedia:England .

}
```",1,3,2,1,1,3,2,20,0,0,1,0,0.0,0
55,5,train,"Give me the reference, that is a band, to Newsted.","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Newsted""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band WHERE {
  ?band a dbo:Band .
  ?band dbo:member dbr:Jason_Newsted .
}
```",1,2,2,1,1,2,3,28,0,0,1,0,0.0,0
915,2,train,Give me the director of Pipe Dreams (1976 film).,SELECT ?result WHERE { <http://dbpedia.org/resource/Pipe_Dreams_(1976_film)> <http://dbpedia.org/ontology/director> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?director WHERE {
  ?film dbo:title ""Pipe Dreams""@en .
  ?film dbo:releaseDate ?date .
  FILTER(YEAR(?date) = 1976)
  ?film dbo:director ?director .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
488,3,train,"Give me the war, that is a military conflict and an event and a societal event, of Saitō Hajime.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Saitō_Hajime> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war WHERE {
  ?saitoHajime dbo:wikiPageDisambiguates dbr:Saitō_Hajime .
  ?saitoHajime dbo:participatedIn ?war .
  
  FILTER EXISTS { ?war a dbo:MilitaryConflict . }
  FILTER EXISTS { ?war a dbo:Event . }
  FILTER EXISTS { ?war a dbo:SocietalEvent . }
}
```",1,4,2,1,1,3,3,71,0,0,4,0,0.0,0
9,0,train,"Give me the alma mater of John Alderdice, Baron Alderdice.","SELECT ?result WHERE { <http://dbpedia.org/resource/John_Alderdice,_Baron_Alderdice> <http://dbpedia.org/ontology/almaMater> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?almaMater WHERE {
  ?person a dbo:Person ;
          foaf:name ""John Alderdice"" ;
          rdfs:label ""Baron Alderdice""@en .
  ?person dbo:almaMater ?almaMater .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
435,11,train,Give me the work of the author of Iceland.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/author> ?v1 . <http://dbpedia.org/resource/Iceland> <http://dbpedia.org/property/author> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?work WHERE {
  ?iceland dbo:author ?author .
  FILTER (str(?iceland) = ""Iceland"") .
  
  ?work dbo:author ?author .
}
```",2,2,3,2,1,2,3,28,0,0,1,0,0.0,0
294,8,train,"Give me the resting place of the awardee, that is a politician, of Distinguished Service Medal (U.S. Army).",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Distinguished_Service_Medal_(U.S._Army)> . ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?awardee ?restingPlace WHERE {
  ?awardee a dbo:Politician ;
           dbo:honoraryAward dbr:Distinguished_Service_Medal_(U.S._Army) .
  OPTIONAL { ?awardee dbo:deathPlace ?restingPlace . }
}
```",2,3,3,2,1,2,3,28,0,0,10,0,0.0,0
528,15,train,"Give me the military force of the entity, that is a societal event, in Chile.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Chile> . ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce WHERE {
  ?event a dbo:Coup ;
         dbo:location dbr:Chile .
  ?event dbo:militaryForce ?militaryEntity .
  ?militaryEntity rdfs:label ?militaryForce .
  FILTER (lang(?militaryForce) = 'en')
}
```",2,3,3,2,1,3,3,71,0,0,91,0,0.0,0
696,0,train,Give me the birth place of Tim Brennan.,SELECT ?result WHERE { <http://dbpedia.org/resource/Tim_Brennan> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?birthPlace WHERE {
  ?person rdf:type dbo:Person .
  ?person rdfs:label ""Tim Brennan""@en .
  FILTER NOT EXISTS { ?person dbo:abstract ?a . } # To ensure we get the correct person
  ?person dbo:birthPlace ?birthPlace .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
996,1,train,Give me the entity in France.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/France> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?entity WHERE {
  ?entity dbo:country dbr:France .
}
```",1,1,2,1,1,3,2,20,0,44301,292,0.0,0.0,0
115,5,train,Give me the alma mater of the alumnus of National University of San Marcos.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/National_University_of_San_Marcos> . ?v0 <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?almaMater
WHERE {
  ?person dbo:alumni dbr:National_University_of_San_Marcos .
  ?person foaf:almaMater ?almaMater .
}
```",2,2,3,2,1,2,2,9,0,0,49,0,0.0,0
487,8,train,"Give me the administration of the person born, that is a soccer player, as Philip Brian Scott.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/governor> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v0 <http://dbpedia.org/property/birthName> ""Philip Brian Scott""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?administration WHERE {
  ?person rdfs:label ""Philip Brian Scott""@en .
  ?person dbo:occupation dbr:Soccer_player .
  ?person dbo:positionHeld ?administration .
}
```",2,3,3,2,1,3,2,20,0,0,14,0,0.0,0
179,9,train,"Give me the birth name of the child, that is a royalty, of Nakkhatra Mangala.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Nakkhatra_Mangala> . ?v0 <http://dbpedia.org/property/birthName> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?childName WHERE {
  ?nakhatraMangala a dbo:Nakkhatra .
  ?nakhatraMangala rdfs:label ""Nakkhatra Mangala""@en .
  
  ?nakhatraMangala dbo:child ?child .
  ?child dbo:royalty ?royalTitle .

  OPTIONAL { ?child foaf:name ?childName . }
  FILTER (lang(?childName) = 'en')
}
```",2,3,3,2,1,3,2,20,0,0,1,0,0.0,0
767,3,train,Give me the writer of Where It's At (Dustin Lynch album).,SELECT ?result WHERE { <http://dbpedia.org/resource/Where_It's_At_(Dustin_Lynch_album)> <http://dbpedia.org/property/writer> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?writer WHERE {
  ?album a dbo:MusicAlbum ;
         rdfs:label ""Where It's At (Dustin Lynch album)""@en .
  OPTIONAL { ?album dbo:lyricsBy ?writer . }
}
```",1,1,2,1,1,3,3,71,0,0,35,0,0.0,0
427,12,train,Give me the party of Giulio Andreotti and party of Romano Prodi.,SELECT ?result WHERE { <http://dbpedia.org/resource/Giulio_Andreotti> <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/ontology/party> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person ?name ?partyLabel WHERE {
  VALUES (?person ?name) { 
    (dbo:Giulio_Andreotti ""Giulio Andreotti"") 
    (dbo:Romano_Prodi ""Romano Prodi"")
  }
  
  ?person foaf:name ?name .
  ?person dbo:partyAffiliation ?party .
  ?party rdfs:label ?partyLabel .
  FILTER(LANG(?partyLabel) = 'en')
}
```",2,2,3,1,2,3,3,71,0,0,3,0,0.0,0
617,2,train,Give me the parent of Mlada (abbess).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Mlada_(abbess)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parentOrganization WHERE {
  ?m ldr:abbessName ""Mlada""@en .
  ?m dbo:parentOrganization ?parentOrganization .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
360,5,train,Give me the author of Blinded by the Light.,SELECT ?result WHERE { <http://dbpedia.org/resource/Blinded_by_the_Light> <http://dbpedia.org/property/author> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?authorName WHERE {
  ?song dbo:title ""Blinded by the Light"" .
  ?song dbo:lyricsBy ?author .
  ?author foaf:name ?authorName .
}
```",1,1,2,1,1,2,3,28,0,0,1,0,0.0,0
161,9,train,Give me the military force of Rif War and military force of Spanish Civil War.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Rif_War> . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?rifWarForce ?rifWarOpponent ?civilWarForce ?civilWarOpponent WHERE {
  # Rif War forces
  OPTIONAL { 
    dbr:Rif_War dbo:militaryConflictParticipant ?rifWarEntity .
    ?rifWarEntity dbo:opponent ?rifWarOpponent .
    FILTER(CONTAINS(LCASE(?rifWarEntity), ""army"") || CONTAINS(LCASE(?rifWarEntity), ""forces""))
  }
  
  # Spanish Civil War forces
  OPTIONAL { 
    dbr:Spanish_Civil_War dbo:militaryConflictParticipant ?civilWarEntity .
    ?civilWarEntity dbo:opponent ?civilWarOpponent .
    FILTER(CONTAINS(LCASE(?civilWarEntity), ""army"") || CONTAINS(LCASE(?civilWarEntity), ""forces""))
  }
}
```",2,2,3,1,2,3,3,71,0,0,34,0,0.0,0
767,2,train,Give me the reference to .,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> """"@en . }","```
# No query can be generated due to lack of details in the question.
```",1,1,2,1,1,3,3,71,0,0,98447,0,0.0,0
421,9,train,Give me the person born as Edin Dervišhalidović and native of Socialist Federal Republic of Yugoslavia.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Socialist_Federal_Republic_of_Yugoslavia> . ?result <http://dbpedia.org/property/birthName> ""Edin Dervišhalidović""@en . }","```sparql
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?person WHERE {
  ?person foaf:givenName ""Edin"" .
  ?person foaf:familyName ""Dervišhalidović""@en .
  ?person dbo:nationality ?nationality .
  ?nationality rdfs:label ?countryLabel .
  FILTER (lang(?countryLabel) = 'en' && ?countryLabel = ""Socialist Federal Republic of Yugoslavia"")
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
142,4,train,Give me the birthplace of George Tokoro and entity in Japan.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan> . <http://dbpedia.org/resource/George_Tokoro> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthplace ?entityInJapan WHERE {
  # Find the birthplace of George Tokoro
  dbr:George_Tokoro dbo:birthPlace ?birthplace .

  # Find an entity associated with Japan
  ?entityInJapan dbo:country dbr:Japan .
}
```",2,2,3,1,2,2,2,9,1,8915,0,0.00011215791834903544,1.0,0.000224290680722216
617,1,train,Give me the spouse of Laodice IV.,SELECT ?result WHERE { <http://dbpedia.org/resource/Laodice_IV> <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?spouse
WHERE {
  ?person rdfs:label ""Laodice IV""@en .
  ?person dbo:spouse ?spouse .
}
```",1,1,2,1,1,3,3,71,3,0,0,1.0,1.0,1.0
281,8,train,"Give me the profession, that is a military unit, of Heather Roy.",SELECT ?result WHERE { <http://dbpedia.org/resource/Heather_Roy> <http://dbpedia.org/property/occupation> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?profession WHERE {
  ?heatherRoy a dbo:Person ;
              foaf:name ""Heather Roy""@en .
  
  ?heatherRoy dbo:occupation ?profession .

  OPTIONAL { 
    ?profession rdfs:subClassOf* ?militaryUnit .
    FILTER EXISTS { ?militaryUnit rdf:type/rdfs:subClassOf* <http://dbpedia.org/ontology/MilitaryUnit> }
  }

  FILTER NOT EXISTS {
    ?heatherRoy dbo:occupation ?nonMilitaryProfession .
    ?nonMilitaryProfession rdfs:subClassOf* ?otherType .
    FILTER NOT EXISTS { ?otherType rdf:type/rdfs:subClassOf* <http://dbpedia.org/ontology/MilitaryUnit> }
  }
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
360,7,train,Give me the reference to Manfred Mann and writer of The Roaring Silence.,"SELECT ?result WHERE { <http://dbpedia.org/resource/The_Roaring_Silence> <http://dbpedia.org/property/writer> ?result . ?result <http://xmlns.com/foaf/0.1/name> ""Manfred Mann""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?writer WHERE {
  ?album dbo:artist dbr:Manfred_Mann ;
         rdfs:label ""The Roaring Silence""@en .
  OPTIONAL { ?album dbo:composer ?writer . }
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
487,1,train,Give me the administration of Phil Scott.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/Phil_Scott> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?startDate ?policy 
WHERE {
  ?governor a dbo:Governor ;
            foaf:name ""Phil Scott""@en ;
            dbo:stateOrProvince dbr:Vermont .
  
  OPTIONAL { ?governor dbo:startDate ?startDate . }
  OPTIONAL { ?governor dbo:hasPolicy ?policy . }
}
```",1,1,2,1,1,3,2,20,0,0,14,0,0.0,0
184,10,train,Give me the parent of Géza von Habsburg and parent of Archduchess Ilona of Austria.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Ilona_of_Austria> . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Géza_von_Habsburg> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?parentGéza ?parentIlona WHERE {
  # Find parents of Géza von Habsburg
  ?géza a dbo:Person ;
        dbp:name ""Géza von Habsburg""@en .
  ?childGéza dbo:child ?géza .
  ?childGéza dbo:parent ?parentGéza .

  # Find parents of Archduchess Ilona of Austria
  ?ilona a dbo:Person ;
         dbp:name ""Archduchess Ilona of Austria""@en .
  ?childIlona dbo:child ?ilona .
  ?childIlona dbo:parent ?parentIlona .
}
```",2,2,3,1,2,3,3,71,0,0,2,0,0.0,0
294,0,train,"Give me the resting place of Luke Lea (American politician, born 1879).","SELECT ?result WHERE { <http://dbpedia.org/resource/Luke_Lea_(American_politician,_born_1879)> <http://dbpedia.org/ontology/restingPlace> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?burialPlace WHERE {
  ?person a dbo:Politician ;
          foaf:name ""Luke Lea"" ;
          dbo:birthDate ?birthDate .
  FILTER (YEAR(?birthDate) = 1879)
  ?person dbo:deathPlace ?burialPlace .
}
```",1,1,2,1,1,2,3,28,0,0,3,0,0.0,0
994,11,train,Give me the associated musical artist of the associated musical artist of Watchtower (band).,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Watchtower_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT DISTINCT ?secondLevelArtist WHERE {
  # Step 1: Find the associated musical artists of Watchtower
  ?watchtower dbo:associatedMusicalArtist ?firstLevelArtist .
  
  FILTER (str(?watchtower) = ""Watchtower_(band)"")

  # Step 2: For each first-level artist, find their associated musical artists
  ?firstLevelArtist dbo:associatedMusicalArtist ?secondLevelArtist .
}
```",2,2,3,2,1,3,3,71,0,0,16,0,0.0,0
232,15,train,Give me the person born as the birth name of Jon Pertwee.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>

SELECT ?givenName ?familyName WHERE {
  ?person a dbpedia-owl:Person ;
          foaf:name ""Jon Pertwee""@en .
  OPTIONAL { ?person foaf:givenName ?givenName . }
  OPTIONAL { ?person foaf:familyName ?familyName . }
}
```",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
314,6,train,Give me the person deceased at Madrid and awardee of 30.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ""30""^^<http://www.w3.org/2001/XMLSchema#integer> . ?result <http://dbpedia.org/ontology/restingPlace> <http://dbpedia.org/resource/Madrid> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
    ?person a dbo:Person .
    ?person dbo:deathPlace dbr:Madrid .
    ?person dbo:numberOfAwardsReceived ""30""^^xsd:int .
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
365,1,train,Give me the reference to The Blasters.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""The Blasters""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?reference WHERE {
  dbr:The_Blasters dbo:wikiPageWikiLink ?reference .
}
```",1,1,2,1,1,2,2,9,0,100,1,0.0,0.0,0
617,4,train,"Give me the reference, that is a royalty, to Richeza of Poland.","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Richeza of Poland""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?reference WHERE {
  ?richeza dbo:birthName ""Richeza of Poland""@en .
  FILTER EXISTS { ?richeza a dbo:Person . }
  
  # Check for spouse, child, or parent relationships
  {
    ?richeza dbo:spouse ?reference .
  } UNION {
    ?richeza dbo:child ?reference .
  } UNION {
    ?richeza dbo:parent ?reference .
  }

  # Ensure the reference is a royalty
  FILTER EXISTS { ?reference dbo:royalTitle ?title . }
}
```",1,2,2,1,1,3,2,20,0,0,3,0,0.0,0
10,4,train,"Give me the person born, that is an artist, as Luke Francis Vibert.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Luke Francis Vibert""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person ?birthDate WHERE {
  ?person rdf:type dbo:Artist .
  ?person foaf:name ""Luke Francis Vibert"" .
  OPTIONAL { ?person dbo:birthDate ?birthDate . }
}
```",1,2,2,1,1,2,3,28,0,0,1,0,0.0,0
767,11,train,"Give me the entity in the administration, that is a settlement, of Green.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/state> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://dbpedia.org/property/leaderParty> ""Green""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX skos: <http://www.w3.org/2004/02/skos/core#>

SELECT DISTINCT ?settlement
WHERE {
  ?settlement a dbo:PopulatedPlace .
  ?adminRegion rdfs:label ""Green""@en .
  ?settlement dbp:partOf ?adminRegion .
}
```",2,3,3,2,1,3,3,71,0,0,60,0,0.0,0
378,4,train,Who is the person born as Carl Pontus Gahn?,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Carl Pontus Gahn""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?person ?currentName WHERE {
  ?person dbo:birthName ""Carl Pontus Gahn"" .
  ?person rdfs:label ?currentName .
  FILTER (LANG(?currentName) = 'en')
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
996,7,train,Give me the force of the awardee of 1778.0.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> ?v1 . ?v1 <http://dbpedia.org/property/awards> ""1778.0""^^<http://www.w3.org/2001/XMLSchema#double> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?awardee ?force WHERE {
  ?award dbo:date ""1778-01-01""^^xsd:date ;
         dbo:awardedTo ?awardee .
  
  OPTIONAL { 
    ?awardee dbo:force ?force .
  }
}
```",2,2,3,2,1,3,2,20,0,0,11,0,0.0,0
360,1,train,Give me the native of Johannesburg.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Johannesburg> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?person ?name WHERE {
  ?person dbo:birthPlace dbr:Johannesburg .
  ?person foaf:name ?name .
}
```",1,1,2,1,1,2,3,28,910,1110,90,0.4504950495049505,0.91,0.6026490066225165
617,9,train,"Give me the child, that is a royalty, of the parent of Mlada (abbess).",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Mlada_(abbess)> . ?result <http://dbpedia.org/ontology/parent> ?v0 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?childName WHERE {
  # Find Mlada (abbess)
  ?mlada a dbo:ApostolicAbbess ;
         foaf:name ""Mlada""@en .
  
  # Identify her parent
  ?parent dbo:parentOf ?mlada .

  # Find children of the parent who are royalty
  ?child dbo:parentOf ?parent ;
         foaf:name ?childName .
  
  OPTIONAL {
    ?child dbo:royalTitle ?title .
  }
  
  FILTER EXISTS { ?child dbo:royalTitle ?title } # Ensure child is royalty
}
```",2,3,3,2,1,3,2,20,0,0,2,0,0.0,0
92,14,train,Give me the band of the person born as Joseph Michael Furney.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ""Joseph Michael Furney""@en . ?result <http://dbpedia.org/ontology/bandMember> ?v1 . }","```sparql
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?band WHERE {
  ?person foaf:givenName ""Joseph"" .
  ?person foaf:familyName ""Furney"" .
  ?person foaf:name ""Joe Perry"" .
  ?person dbp:band ?band .
}
```",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
659,17,train,"Give me the force, that is a societal event and an event and a military conflict, of the reference to Rutger Jan Schimmelpenninck.","SELECT ?result WHERE { ?v1 <http://xmlns.com/foaf/0.1/name> ""Rutger Jan Schimmelpenninck""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/commander> ?v1 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?event WHERE {
  ?redirect dbo:wikiPageRedirects dbr:Rutger_Jan_Schimmelpenninck .
  ?redirect dbo:wikiPageWikiLink ?event .

  FILTER EXISTS { ?event a dbo:SocietalEvent . }
  FILTER EXISTS { ?event a dbo:Event . }
  FILTER EXISTS { ?event a dbo:MilitaryConflict . }
}
```",2,5,3,2,1,3,3,71,0,0,2,0,0.0,0
184,6,train,Give me the child of Archduke Joseph Karl of Austria.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Karl_of_Austria> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?child
WHERE {
  ?person dbo:child ?child .
  ?person foaf:name ""Joseph Karl of Austria"" .
}
```",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
345,0,train,Give me the figure known as Stolz von Liechtenstein.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ""Stolz von Liechtenstein""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?name ?birthDate WHERE {
  ?horse a dbo:Horse ;
         rdfs:label ?name ;
         dbo:birthDate ?birthDate .
  FILTER (CONTAINS(LCASE(?name), ""stolz von liechtenstein""))
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
55,11,train,"Give me the band of the reference, that is a band, to Newsted.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://xmlns.com/foaf/0.1/name> ""Newsted""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band WHERE {
  ?person rdfs:label ""Jason Newsted""@en .
  ?person dbo:associatedBand ?band .
  FILTER (CONTAINS(LCASE(?band), ""band""))
}
```",2,3,3,2,1,2,3,28,0,0,9,0,0.0,0
701,10,train,Give me the spouse of Ramesses II and parent of Meritamen.,SELECT ?result WHERE { <http://dbpedia.org/resource/Meritamen> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Ramesses_II> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?spouse
WHERE {
  ?ramesses2 dbo:spouse ?spouse .
  ?meritamen dbo:parent ?spouse .
  FILTER (str(?ramesses2) = ""Ramesses II"")
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
767,10,train,Give me the entity in Baden-Württemberg and reference to .,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/state> <http://dbpedia.org/resource/Baden-Württemberg> . ?result <http://xmlns.com/foaf/0.1/name> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?entity ?reference WHERE {
  ?entity dbo:country <http://dbpedia.org/resource/Germany> .
  OPTIONAL { ?entity dbp:state <http://dbpedia.org/resource/Baden-W%C3%BCrttemberg> . }
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
  BIND(wd:Q1234 AS ?reference) # Replace Q1234 with the actual entity's Wikidata ID if known
}
```",2,2,3,1,2,3,3,71,0,0,7,0,0.0,0
44,0,train,Give me the band member of Undertow (band).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Undertow_(band)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?member WHERE {
  ?band rdfs:label ""Undertow""@en .
  ?band dbo:bandMember ?member .
}
```",1,1,2,1,1,2,2,9,0,0,2,0,0.0,0
915,8,train,"Give me the father of the child, that is a fictional character and a soap character, of Phillip Spaulding.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoapCharacter>. ?v0 <http://dbpedia.org/property/father> ?result . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Phillip_Spaulding> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  # Identify Phillip Spaulding's children
  ?child dbo:parent dbr:Phillip_Spaulding .
  
  # Ensure the child is a fictional character and specifically a soap opera character
  ?child dbo:genre ?genre .
  FILTER (
    EXISTS { ?genre rdfs:label ""Fictional character""@en . }
    && EXISTS { ?genre rdfs:label ""Soap opera""@en . }
  )
  
  # Find the father of this child
  ?father dbo:parent ?child .
}
```",2,4,3,2,1,3,2,20,0,0,1,0,0.0,0
783,10,train,"Give me the person born, that is an artist and a musical artist, as the persona of Ebony Reigns.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v0 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Ebony_Reigns> <http://xmlns.com/foaf/0.1/givenName> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person ?birthDate WHERE {
  ?person dbo:birthDate ?birthDate .
  ?person foaf:name ""Ebony Reigns""@en .
  ?person dbo:occupation ?occupation .
  FILTER (
    EXISTS { ?occupation rdfs:label ?label . FILTER (CONTAINS(LCASE(?label), ""musician"") || CONTAINS(LCASE(?label), ""artist"")) }
  )
}
```",2,4,3,2,1,3,2,20,0,0,1,0,0.0,0
77,1,train,Give me the force of Alexander I of Russia.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Alexander_I_of_Russia> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?property ?value
WHERE {
  VALUES ?subject { dbr:Alexander_I_of_Russia }
  
  ?subject ?property ?value .
  
  FILTER (
    ?property IN (dbo:commander, dbo:militaryRank, dbo:rank)
  )
}
```",1,1,2,1,1,3,2,20,0,0,25,0,0.0,0
115,1,train,Give me the alma mater of Jorge Sotomayor Tello.,SELECT ?result WHERE { <http://dbpedia.org/resource/Jorge_Sotomayor_Tello> <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?university WHERE {
  ?person a dbo:Person ;
          foaf:name ""Jorge Sotomayor Tello""@en .
  ?person dbo:almaMater ?university .
}
```",1,1,2,1,1,2,2,9,0,0,2,0,0.0,0
429,3,train,"Give me the military force, that is an organisation, of Camden Expedition.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Camden_Expedition> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce WHERE {
  ?expedition dbo:participatedIn ?event .
  ?militaryForce dbo:participatedIn ?event .
  
  FILTER(?expedition = dbr:Camden_Expedition)
}
```",1,2,2,1,1,2,2,9,0,0,22,0,0.0,0
285,6,train,Give me the parent of Alexander Onassis and spouse of Aristotle Onassis.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Aristotle_Onassis> . <http://dbpedia.org/resource/Alexander_Onassis> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parentOfAlexanderOnassis ?spouseOfAristotleOnassis
WHERE {
  ?alexanderOnassis dbo:child dbp:Alexander_Onassis .
  ?alexanderOnassis dbo:parent ?parentOfAlexanderOnassis .

  ?aristotleOnassis dbo:spouse ?spouseOfAristotleOnassis .
  FILTER (str(?aristotleOnassis) = ""http://dbpedia.org/resource/Aristotle_Onassis"")
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
645,8,train,Give me the alma mater of the child of Richard Pankhurst.,SELECT ?result WHERE { <http://dbpedia.org/resource/Richard_Pankhurst> <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?child ?almaMater WHERE {
  ?person a dbo:Person ;
          foaf:name ""Richard Pankhurst""@en .
  
  ?person dbo:child ?child .

  ?child dbo:almaMater ?almaMater .
}
```",2,2,3,2,1,3,2,20,2,1,0,0.6666666666666666,1.0,0.8
328,4,train,"Give me the award of Bruce Fraser, 1st Baron Fraser of North Cape.","SELECT ?result WHERE { <http://dbpedia.org/resource/Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape> <http://dbpedia.org/property/awards> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?award WHERE {
  ?person dbo:wikiPageRedirects dbpedia:Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape .
  ?person dbo:honours ?award .
}
```",1,1,2,1,1,3,3,71,0,0,9,0,0.0,0
617,15,train,"Who is the child, that is a royalty, of the successor, that is a royalty, of Antiochus II Theos?",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Antiochus_II_Theos> <http://dbpedia.org/ontology/successor> ?v1 . ?result <http://dbpedia.org/property/father> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?child WHERE {
  ?antiochus2 rdf:type dbo:Monarch ;
              rdfs:label ""Antiochus II Theos""@en .
  
  ?antiochus2 dbo:successor ?successor .
  ?successor rdf:type dbo:Monarch .

  ?successor dbo:child ?child .
  ?child rdf:type dbo:Monarch .
}
```",2,4,3,2,1,3,3,71,0,0,2,0,0.0,0
754,10,train,Give me the child of the reference to Ram Khamhaeng the Great.,"SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""Ram Khamhaeng the Great""@en . ?v0 <http://dbpedia.org/ontology/child> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child WHERE {
  ?person dbp:name ""Ram Khamhaeng the Great""@en .
  ?person dbo:child ?child .
}
```",2,2,3,2,1,3,2,20,3,0,0,1.0,1.0,1.0
356,3,train,Give me the successor of 2014 Sacramento Republic FC season.,SELECT ?result WHERE { <http://dbpedia.org/resource/2014_Sacramento_Republic_FC_season> <http://dbpedia.org/ontology/successor> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?successorSeason WHERE {
    ?team a dbo:SoccerClub ;
          dbo:location dbr:Sacramento,_California .
    
    ?season dbo:club ?team ;
            dbo:year ?year .

    FILTER (?year = 2014)
    
    OPTIONAL {
        ?nextSeason dbo:club ?team ;
                    dbo:year ?nextYear .
        
        FILTER (?nextYear > ?year)
    }
    
    BIND(IF(BOUND(?nextSeason), STR(?nextYear) + "" Sacramento Republic FC season"", ""No successor found"") AS ?successorSeason)
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
996,8,train,Give me the entity in the award of Ekrem Akurgal.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> ?v0 . <http://dbpedia.org/resource/Ekrem_Akurgal> <http://dbpedia.org/property/awards> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award WHERE {
  ?award dbo:recipient dbr:E_krem_Akurgal .
}
```",2,2,3,2,1,3,2,20,0,0,292,0,0.0,0
778,2,train,"Give me the awardee, that is American, of Wolf Prize in Medicine.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Wolf_Prize_in_Medicine> . ?result <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/United_States>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?recipientName WHERE {
  ?award dbr:Wolf_Prize_in_Medicine .
  ?award dbo:recipient ?recipient .
  ?recipient rdfs:label ?recipientName .
  FILTER (CONTAINS(LCASE(?recipientName), ""person"")) # Ensures we are selecting individuals
  OPTIONAL { ?recipient dbo:nationality ?nationality . }
  FILTER (
    EXISTS {
      ?nationality rdfs:label ""United States""@en
    } || 
    EXISTS {
      ?nationality rdfs:label ""American""@en
    }
  )
}
```",1,2,2,1,1,3,2,20,0,0,1,0,0.0,0
801,6,train,"Give me the work, that is a musical work and a song and a work, of 50 Cent.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/50_Cent> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?work WHERE {
  ?artist rdfs:label ""50 Cent""@en .
  ?album dbo:artist ?artist ;
         dbo:song ?work .
  ?work rdf:type dbo:Songs .
}
```",1,4,2,1,1,3,3,71,0,0,58,0,0.0,0
488,15,train,"Who is the commander in the war, that is a military conflict and an event and a societal event, of Saitō Hajime?",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Saitō_Hajime> <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?warName WHERE {
  ?war dbo:type/dbo:subClassOf* dbo:MilitaryConflict .
  ?war dbo:type/dbo:subClassOf* dbo:SocietalEvent .
  ?war dbo:commander dbr:Saitō_Hajime .
  ?war rdfs:label ?warName .
  FILTER (lang(?warName) = 'en')
}
```",2,5,3,2,1,3,3,71,0,0,29,0,0.0,0
981,8,train,"Give me the birth place of the person born, that is a beauty queen, as .","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> """"@en . ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BeautyQueen>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?birthPlace WHERE {
  ?person dbo:occupation dbr:Beauty_queen .
  ?person dbo:birthPlace ?birthPlace .
}
```",2,3,3,2,1,3,2,20,3,40,167,0.06976744186046512,0.01764705882352941,0.02816901408450704
547,14,train,Give me the resting place of the awardee of Knight Grand Cross of the Order of St Michael and St George.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_St_Michael_and_St_George> . ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?person ?restingPlace WHERE {
  ?person dbo:orderOfKnighthood dbr:Knight_Grand_Cross_of_the_Order_of_St_Michael_and_St_George .
  OPTIONAL { ?person dbo:finalRestingPlace ?restingPlace . }
}
```",2,2,3,2,1,3,3,71,0,0,28,0,0.0,0
64,6,train,"Give me the entity in the region, that is a country, of Central European Time.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v0 . ?v0 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?country 
WHERE {
  ?country a dbo:Country .
  ?country dbo:timeZone dbr:Central_European_Time .
}
```",2,3,3,2,1,2,2,9,29,65,173232,0.30851063829787234,0.00016737754024275515,0.00033457356292001964
666,6,train,Give me the figure known as The Three Lions and player in Steve Bruce.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Steve_Bruce> <http://dbpedia.org/ontology/team> ?result . ?result <http://dbpedia.org/property/nickname> ""The Three Lions""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?player WHERE {
  ?team dbo:commonName ""England national football team""@en .
  ?team dbo:member ?player .
  ?player dbo:manager dbr:Steve_Bruce .
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
55,7,train,Give me the band member of Guns N' Roses and band of Newsted.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Guns_N'_Roses> . <http://dbpedia.org/resource/Newsted> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
# Query to find members of Guns N' Roses
SELECT ?member WHERE {
  ?band dbo:bandName ""Guns N' Roses""@en .
  ?band dbo:bandMember ?member .
  ?member foaf:name ?name .
}

UNION

# Query to find bands associated with Jason Newsted
SELECT ?band WHERE {
  ?person foaf:name ""Jason Newsted""@en .
  ?person dbo:bandMember ?band .
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
488,4,train,Who is the commander in Boshin War?,SELECT ?result WHERE { <http://dbpedia.org/resource/Boshin_War> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  ?war a dbo:Boshin_War .
  ?war dbo:hasCommander ?commander .
}
```",1,1,2,1,1,3,3,71,0,0,26,0,0.0,0
142,1,train,Give me the birthplace of George Tokoro.,SELECT ?result WHERE { <http://dbpedia.org/resource/George_Tokoro> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?birthPlace
WHERE {
  ?person rdfs:label ""George Tokoro""@en .
  ?person dbo:birthPlace ?birthPlace .
}
```",1,1,2,1,1,2,2,9,1,0,0,1.0,1.0,1.0
339,10,train,Who is the child of the parent of Princess Olga of Greece and Denmark?,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?result . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Princess_Olga_of_Greece_and_Denmark> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?child
WHERE {
  ?olga dbo:parent ?parent .
  FILTER (str(?olga) = ""Princess_Olga_of_Greece_and_Denmark"")
  ?parent dbo:child ?child .
}
```",2,2,3,2,1,3,2,20,0,0,3,0,0.0,0
659,3,train,"Give me the native, that is an office holder, of Kingdom of Ireland.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Kingdom_of_Ireland> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?office WHERE {
  ?person a dbo:Person .
  ?person dbo:nationality dbr:Kingdom_of_Ireland .
  OPTIONAL { ?person dbo:officeHolder ?office . }
}
```",1,2,2,1,1,3,3,71,0,19,23,0.0,0.0,0
161,2,train,Give me the commander in Biscay Campaign.,SELECT ?result WHERE { <http://dbpedia.org/resource/Biscay_Campaign> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?commander WHERE {
  ?campaign rdfs:label ""Biscay Campaign""@en .
  ?campaign dbo:commander ?commander .
}
```",1,1,2,1,1,3,3,71,5,0,0,1.0,1.0,1.0
435,8,train,"Give me the territory administered from the figure known, that is a settlement and a town and Icelandic, as Land of fire and ice.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Iceland>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Town>. ?v1 <http://dbpedia.org/property/nickname> ""Land of fire and ice""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/capital> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?settlement WHERE {
  ?president dbo:country dbr:Iceland .
  ?president dbo:officeHolderOf dbr:President_of_Iceland .
  
  ?settlement a dbo:Settlement ;
              dbo:country dbr:Iceland ;
              dbp:name ?name .

  OPTIONAL { 
    ?territory dbo:administeredBy ?president ;
               dbo:administrativeTerritory ?settlement .
  }
  
  FILTER EXISTS {
    ?territory dbo:administrativeTerritory ?settlement
  }

  FILTER (LANG(?name) = ""is"")
}
```",2,5,3,2,1,2,3,28,0,0,2,0,0.0,0
54,6,train,Give me the child of Narapati I of Ava.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Narapati_I_of_Ava> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  dbr:Narapati_I_of_Ava dbo:child ?child .
}
```",1,1,2,1,1,3,3,71,3,0,0,1.0,1.0,1.0
345,2,train,"Give me the player, that is a sports club and an organisation and a soccer club, in Armando Heeb.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Armando_Heeb> <http://dbpedia.org/ontology/team> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT DISTINCT ?player WHERE {
  ?player dbo:playedFor dbr:Armando_Heeb .
  ?player rdf:type dbo:SoccerClub .
  ?player rdf:type dbo:SportsTeam .
  ?player rdf:type dbo:Organization .
}
```",1,4,2,1,1,3,2,20,0,0,8,0,0.0,0
314,5,train,"Give me the profession, that is an event and a societal event, of Lisa Gavrić.",SELECT ?result WHERE { <http://dbpedia.org/resource/Lisa_Gavrić> <http://dbpedia.org/property/occupation> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?profession WHERE {
  ?person dbo:wikiPageID ""Lisa_Gavrić"" .
  ?person rdf:type <http://dbpedia.org/resource/Lisa_Gavrić> .
  
  ?person dbo:occupation ?profession .

  FILTER EXISTS { 
    ?profession rdf:type <http://dbpedia.org/ontology/Event> .
  }
  FILTER EXISTS {
    ?profession rdf:type <http://dbpedia.org/ontology/Societal_event> .
  }
}
```",1,3,2,1,1,2,3,28,0,0,2,0,0.0,0
801,2,train,Give me the associated musical artist of Chris Taylor (music producer).,SELECT ?result WHERE { <http://dbpedia.org/resource/Chris_Taylor_(music_producer)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artist WHERE {
  ?person a dbo:MusicProducer ;
          foaf:name ""Chris Taylor"" .
  OPTIONAL { ?person dbo:associatedBand ?band . }
  OPTIONAL { ?person dbo:associatedMusicalArtist ?artist . }
  FILTER (?artist != dbr:Chris_Taylor)
}
```",1,1,2,1,1,3,3,71,0,0,7,0,0.0,0
64,0,train,Give me the alma mater of Jovan Hristić.,SELECT ?result WHERE { <http://dbpedia.org/resource/Jovan_Hristić> <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?almaMater WHERE {
  ?person a dbo:Person ;
          foaf:name ""Jovan Hristić""@en .
  ?person dbo:almaMater ?almaMater .
}
```",1,1,2,1,1,2,2,9,1,0,0,1.0,1.0,1.0
339,0,train,Give me the child of George I of Greece.,SELECT ?result WHERE { <http://dbpedia.org/resource/George_I_of_Greece> <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?child WHERE {
  ?person a dbo:Monarch ;
          foaf:name ""George I""@en .
  ?person dbo:child ?child .
}
```",1,1,2,1,1,3,2,20,0,0,7,0,0.0,0
48,5,train,"Give me the actor, that is a musical artist, of Honor Up.",SELECT ?result WHERE { <http://dbpedia.org/resource/Honor_Up> <http://dbpedia.org/property/starring> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  ?movie rdfs:label ""Honor Up""@en .
  ?movie dbo:starring ?actor .
  ?actor dbo:musicArtist ?musicArtist .
}
```",1,2,2,1,1,3,2,20,0,0,2,0,0.0,0
54,8,train,"Give me the child, that is an office holder and a royalty, of Thihapate of Mohnyin.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Thihapate_of_Mohnyin> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?child WHERE {
  ?thihapate dbo:child ?child .
  FILTER (str(?thihapate) = ""Thihapate of Mohnyin"") .

  ?child dbo:officeHolder ?office .
  ?child dbo:royalty ?royalty .
}
```",1,3,2,1,1,3,3,71,0,0,1,0,0.0,0
184,8,train,Give me the child of Archduke Joseph Francis of Austria.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Francis_of_Austria> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?child
WHERE {
  <http://dbpedia.org/resource/Archduke_Joseph_Francis_of_Austria> dbo:child ?child .
}
```",1,1,2,1,1,3,3,71,3,1,0,0.75,1.0,0.8571428571428571
294,4,train,Who is the architect of P. D. Houston Jr. House?,SELECT ?result WHERE { <http://dbpedia.org/resource/P._D._Houston_Jr._House> <http://dbpedia.org/ontology/architect> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?architect WHERE {
  dbr:P._D._Houston_Jr._House dbo:architect ?architect .
}
```",1,1,2,1,1,2,3,28,1,0,0,1.0,1.0,1.0
161,15,train,"Give me the force, that is a societal event and an event and a military conflict, of the person decedent at Francoist Spain.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Francoist_Spain> . ?result <http://dbpedia.org/ontology/commander> ?v1 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?force WHERE {
  ?force a dbo:MilitaryUnit ; 
         dbo:associatedWith ?event .
  
  ?event rdf:type ?eventType ;
         dbo:date ?date .

  FILTER (
    (?eventType = dbo:SocietalEvent || ?eventType = dbo:Event || ?eventType = dbo:MilitaryConflict) &&
    ?date >= ""1939-01-01""^^xsd:date && 
    ?date <= ""1975-12-31""^^xsd:date
  ).

  ?person dbo:deathPlace dbr:Francoist_Spain ;
          dbo:causeOfDeath ?force .

  FILTER EXISTS { ?person dbo:deathDate ?deathDate .
                 ?deathDate >= ""1939-01-01""^^xsd:date && 
                 ?deathDate <= ""1975-12-31""^^xsd:date
               }
}
```",2,5,3,2,1,3,3,71,0,0,29,0,0.0,0
356,1,train,Give me the team of Mark Briggs.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Mark_Briggs> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?team WHERE {
  ?person a dbo:Person ;
          foaf:name ""Mark Briggs""@en .
  OPTIONAL { ?person dbo:team ?team . }
}
```",1,1,2,1,1,3,2,20,1,14,4,0.06666666666666667,0.2,0.1
378,15,train,Who is the person born as the birth name of Carl Pontus Gahn?,SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
SELECT ?person ?fullName WHERE {
  ?person foaf:givenName ""Carl"" .
  ?person foaf:familyName ""Gahn"" .
  OPTIONAL { ?person foaf:name ?fullName }
}
```",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
963,4,train,Give me the location for 21205.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/postalCode> ""21205"" . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?location WHERE {
  ?entity dbo:postalCode ""21205"" .
  ?entity dbo:location ?location .
}
```",1,1,2,1,1,3,2,20,0,0,6,0,0.0,0
666,0,train,Give me the player in Steve Bruce.,SELECT ?result WHERE { <http://dbpedia.org/resource/Steve_Bruce> <http://dbpedia.org/ontology/team> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?player WHERE {
  ?manager a dbo:FootballManager ;
           foaf:name ""Steve Bruce""@en .
  
  ?team dbo:manager ?manager ;
        dbo:member ?player .

  FILTER(?player != ?manager)
}
```",1,1,2,1,1,3,2,20,0,0,7,0,0.0,0
30,3,train,Give me the profession of Édouard Alphonse James de Rothschild.,SELECT ?result WHERE { <http://dbpedia.org/resource/Édouard_Alphonse_James_de_Rothschild> <http://dbpedia.org/property/occupation> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?profession 
WHERE {
  ?person dbp:name ""Édouard Alphonse James de Rothschild""@en .
  ?person dbo:occupation ?profession .
}
```",1,1,2,1,1,2,2,9,0,0,1,0,0.0,0
767,5,train,Give me the reference to George Kilbon Nash.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""George Kilbon Nash""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?reference
WHERE {
  ?subject rdfs:label ""George Kilbon Nash""@en .
  ?subject a dbo:Person .
  ?subject dbo:wikiPageWikiLink ?reference .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
232,3,train,Give me the birth name of Jon Pertwee.,SELECT ?result WHERE { <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/property/birthName> ?result . },"```sparql
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?birthName
WHERE {
  ?person foaf:name ""Jon Pertwee""@en .
  OPTIONAL { ?person foaf:givenName ?birthName . }
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
55,10,train,"Give me the band member of the band member, that is a band and a group, of San Francisco Symphony.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/San_Francisco_Symphony> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?memberOfBandGroup
WHERE {
  # Step 1: Find band members of the San Francisco Symphony
  ?person dbo:bandMember dbp:San_Francisco_Symphony .

  # Step 2: Check if these individuals are bands/groups themselves
  ?person a dbo:MusicalArtist .
  
  OPTIONAL { 
    ?person dbo:bandMember ?memberOfBandGroup .
  }
}
```",2,4,3,2,1,2,3,28,0,0,15,0,0.0,0
696,5,train,Give me the award of Nie Rongzhen.,SELECT ?result WHERE { <http://dbpedia.org/resource/Nie_Rongzhen> <http://dbpedia.org/property/awards> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?award WHERE {
  ?person a dbo:Person ;
          foaf:name ""Nie Rongzhen""@en .
  ?person dbo:award ?award .
}
```",1,1,2,1,1,3,2,20,0,3,2,0.0,0.0,0
701,7,train,"Give me the commander, that is a royalty, in Battle of Perire.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Battle_of_Perire> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?commander WHERE {
  ?battle dbp:name ""Battle of Perire""@en .
  ?battle dbp:commander ?commander .
  ?commander a dbo:RoyalFamilyMember .
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
314,11,train,"Give me the commander in the profession, that is an event and a societal event, of Lisa Gavrić.",SELECT ?result WHERE { <http://dbpedia.org/resource/Lisa_Gavrić> <http://dbpedia.org/property/occupation> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?profession WHERE {
  ?person rdfs:label ""Lisa Gavrić""@en.
  ?person dbo:occupation ?profession.
  
  ?event dbo:commander ?person.
  ?event rdf:type dbo:Event .
  ?event rdf:type dbo:SocietalEvent .

  FILTER(LANG(?person) = 'en')
}
```",2,4,3,2,1,2,3,28,0,0,28,0,0.0,0
281,17,train,"Give me the profession, that is a military unit, of the professional, that is an office holder and a politician, in New Zealand Army.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/occupation> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v1 <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/New_Zealand_Army> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?profession
WHERE {
  ?person dbo:memberOf dbr:New_Zealand_Army .
  ?person dbo:profession ?profession .
  FILTER EXISTS { ?person dbo:officeHolder ?x . }
  FILTER EXISTS { ?person dbo:politician ?y . }
}
```",2,5,3,2,1,3,3,71,0,0,1,0,0.0,0
10,2,train,Give me the professional in .,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
# No valid SPARQL query can be generated due to insufficient information in the question.
```",1,1,2,1,1,2,3,28,0,0,39640,0,0.0,0
645,7,train,"Give me the entity in the residence, that is a country, of James Wilkes Maurice.",SELECT ?result WHERE { <http://dbpedia.org/resource/James_Wilkes_Maurice> <http://dbpedia.org/property/residence> ?v1 . ?result <http://dbpedia.org/ontology/country> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?country WHERE {
  ?person rdfs:label ""James Wilkes Maurice""@en .
  ?person dbo:residence ?residence .
  ?residence rdf:type dbo:Country .
  BIND(?residence AS ?country)
}
```",2,3,3,2,1,3,2,20,0,0,42999,0,0.0,0
421,4,train,Give me the birthplace of Samir Bekrić.,SELECT ?result WHERE { <http://dbpedia.org/resource/Samir_Bekrić> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthPlace WHERE {
  ?person dbp:name ""Samir Bekrić""@en .
  ?person dbo:birthPlace ?birthPlace .
}
```",1,1,2,1,1,2,3,28,2,0,0,1.0,1.0,1.0
421,8,train,Give me the band member of the awardee of [[#Awards and nominations.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://dbpedia.org/property/awards> ""[[#Awards and nominations""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?awardee ?band ?member WHERE {
  ?awardee dbo:award ?award .
  OPTIONAL { 
    ?awardee dbo:bandMember ?member .
    ?member dbo:band ?band .
  }
}
```",2,2,3,2,1,2,3,28,0,77969,582,0.0,0.0,0
232,2,train,Give me the native of London.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/London> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?label WHERE {
  ?person dbo:birthPlace dbp:London .
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
```",1,1,2,1,1,3,3,71,0,0,8939,0,0.0,0
92,3,train,Give me the name of Nevermore (2006 film).,SELECT ?result WHERE { <http://dbpedia.org/resource/Nevermore_(2006_film)> <http://xmlns.com/foaf/0.1/name> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?filmName WHERE {
  ?film a dbo:Film ;
        rdfs:label ""Nevermore""@en ;
        dbp:releaseDate ?date .
  FILTER (YEAR(?date) = 2006)
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
528,5,train,Give me the work of --01-09.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/author> ""--01-09""^^<http://www.w3.org/2001/XMLSchema#gMonthDay> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?work WHERE {
    ?date dbo:wikiPageDisambiguates ?work .
    FILTER(CONTAINS(LCASE(STR(?date)), ""january 9""))
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
659,16,train,"Give me the war, that is an event and a military conflict, of the figure known, that is a military unit and an organisation, as 'Polish Horse'.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/property/nickname> ""'Polish Horse'""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war WHERE {
  ?polishHorse rdf:type (dbo:MilitaryUnit|dbo:Organization) .
  ?polishHorse rdfs:label ""Polish Horse""@en .
  
  ?war rdf:type (dbo:Event|dbo:MilitaryConflict) .
  ?participation dbo:agent ?polishHorse ;
                 dbo:event ?war .
}
```",2,6,3,2,1,3,3,71,0,0,19,0,0.0,0
328,8,train,"Give me the office, that is a government agency, of Joseph Stalin.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. <http://dbpedia.org/resource/Joseph_Stalin> <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?officeName WHERE {
  ?stalin dbo:birthName ""Ioseb Besarionis dze Jughashvili""@en .
  ?stalin dbo:alias ""Joseph Stalin""@en .
  ?stalin dbo:office ?office .

  ?office rdfs:label ?officeName .
  FILTER(CONTAINS(LCASE(?officeName), ""government"") || CONTAINS(LCASE(?officeName), ""state""))
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
427,10,train,Give me the reference to Partito Popolare Italiano and party of Romano Prodi.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/ontology/party> ?result . ?result <http://xmlns.com/foaf/0.1/name> ""Partito Popolare Italiano""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?reference
WHERE {
  ?person a dbo:Politician ;
          foaf:name ""Romano Prodi""@en .
  
  ?party a dbo:PoliticalParty ;
         foaf:name ""Partito Popolare Italiano""@it .

  ?membership dbo:member ?person ;
              dbo:politicalOrganization ?party .

  BIND(CONCAT(""Reference to Romano Prodi's membership in "", STR(?party)) AS ?reference)
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
981,10,train,"Who is the person born, that is a beauty queen, as the author of Kamikaze Girls?",SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v0 . <http://dbpedia.org/resource/Kamikaze_Girls> <http://dbpedia.org/property/author> ?v0 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BeautyQueen>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?birthDate WHERE {
  ?book dbo:title ""Kamikaze Girls""@en .
  ?book dbo:author ?person .
  
  OPTIONAL { ?person dbo:occupation dbr:Beauty_queen . }
  
  FILTER EXISTS { ?person dbo:occupation dbr:Beauty_queen . }

  ?person dbp:birthday ?birthDate .
}
```",2,3,3,2,1,3,2,20,0,0,120,0,0.0,0
328,1,train,Give me the commander in Eastern Front (World War II).,SELECT ?result WHERE { <http://dbpedia.org/resource/Eastern_Front_(World_War_II)> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  ?commander dbo:nationality dbr:Germany .
  ?commander dbo:occupation dbr:Military_officer .
  ?commander dbo:birthPlace ?place .
  FILTER EXISTS { 
    ?battle dbo:participatedIn ?commander .
    ?battle dbo:location ?location .
    ?location rdfs:label ""Eastern Front""@en .
  }
}
LIMIT 10
```",1,1,2,1,1,3,3,71,0,0,63,0,0.0,0
318,0,train,Give me the person born in 1970.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthYear> ""1970""^^<http://www.w3.org/2001/XMLSchema#gYear> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name WHERE {
  ?person a dbo:Person .
  ?person dbo:birthYear ""1970""^^xsd:gYear .
  OPTIONAL { ?person foaf:name ?name . }
}
```",1,1,2,1,1,2,2,9,2810,2664,0,0.5133357690902448,1.0,0.6784162240463544
404,6,train,"Who is the child, that is a royalty, of Ernest Augustus, Duke of Brunswick?","SELECT ?result WHERE { <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/ontology/child> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child WHERE {
  ?person dbo:givenName ""Ernest"" .
  ?person dbo:familyName ""Augustus, Duke of Brunswick"" .
  ?person dbo:child ?child .

  FILTER EXISTS { 
    ?child dbo:title ?title .
    FILTER (
      CONTAINS(LCASE(?title), ""king"") ||
      CONTAINS(LCASE(?title), ""queen"") ||
      CONTAINS(LCASE(?title), ""prince"") ||
      CONTAINS(LCASE(?title), ""duke"") ||
      CONTAINS(LCASE(?title), ""princess"")
    )
  }
}
```",1,2,2,1,1,3,3,71,0,0,3,0,0.0,0
339,7,train,Give me the child of the child of Christian IX of Denmark.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Christian_IX_of_Denmark> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?grandchild WHERE {
  ?christianIX dbo:givenName ""Christian IX"" .
  ?christianIX dbo:spouse ?spouse .
  ?parent dbo:childOf ?christianIX ;
          (dbo:child|dbo:spouse) ?parent2 .
  ?parent2 dbo:child ?grandchild .
}
```",2,2,3,2,1,3,2,20,0,0,32,0,0.0,0
492,2,train,Give me the person decedent at Algiers.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Algiers> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name WHERE {
  ?event dbo:location dbr:Algiers .
  ?event dbo:eventType dbr:Decembrist_Affair .
  ?execution dbo:participatedIn ?event .
  ?execution dbo:participant ?person .
  ?person rdfs:label ?name .
  FILTER (CONTAINS(LCASE(?name), ""decembrist"") || CONTAINS(LCASE(?name), ""executed""))
}
```",1,1,2,1,1,3,3,71,0,0,122,0,0.0,0
959,9,train,Give me the native of Japan and member of University of Tsukuba.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/University_of_Tsukuba> . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Japan> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  ?person dbo:nationality dbr:Japan .
  ?person dbo:almaMater dbr:University_of_Tsukuba .
}
```",2,2,3,1,2,3,3,71,0,1,84,0.0,0.0,0
48,1,train,Give me the band of Murda Mook.,SELECT ?result WHERE { <http://dbpedia.org/resource/Murda_Mook> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?band WHERE {
  ?person a dbo:MusicalArtist ;
          foaf:name ""Murda Mook"" .
  
  OPTIONAL { 
    ?person dbo:associatedBand ?band .
  }
}
```",1,1,2,1,1,3,2,20,0,0,10,0,0.0,0
392,6,train,Give me the region of Central European Time and entity in Italy.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy> . ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Central_European_Time> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?region ?entityInItaly WHERE {
  ?timeZone dbp:timeZone ""Central European Time"" .
  ?region dbo:timeZone ?timeZone .

  ?entityInItaly dbo:country dbr:Italy .
}
```",2,2,3,1,2,2,3,28,0,0,513,0,0.0,0
427,6,train,Who is the father of Lamberto Andreotti?,SELECT ?result WHERE { <http://dbpedia.org/resource/Lamberto_Andreotti> <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?fatherName WHERE {
  ?person rdfs:label ""Lamberto Andreotti""@en .
  FILTER NOT EXISTS { ?person a dbo:Person } # Ensure we have the correct person
  ?person dbo:father ?father .
  ?father rdfs:label ?fatherName .
  FILTER(LANG(?fatherName) = 'en')
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
701,14,train,Give me the spouse of the father of Merneptah.,SELECT ?result WHERE { <http://dbpedia.org/resource/Merneptah> <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/ontology/spouse> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?spouse
WHERE {
  ?merneptah dbo:name ""Merneptah""@en .
  ?merneptah dbo:father ?father .
  ?father dbo:spouse ?spouse .
}
```",2,2,3,2,1,3,3,71,0,0,5,0,0.0,0
404,2,train,"Give me the child of Ernest Augustus, Crown Prince of Hanover.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ernest_Augustus,_Crown_Prince_of_Hanover> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child WHERE {
  ?person a dbo:CrownPrince ;
          foaf:name ""Ernest Augustus, Crown Prince of Hanover""@en .
  ?person dbo:child ?child .
}
```",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
48,8,train,"Give me the band of the actor, that is a musical artist, of Honor Up.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Honor_Up> <http://dbpedia.org/property/starring> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?band WHERE {
  ?actor rdf:type dbo:Actor ;
         foaf:name ""Honor Up""@en .
  
  ?actor rdf:type dbo:MusicalArtist .

  ?musicalArtist rdf:type dbo:MusicalArtist ;
                 foaf:name ""Honor Up""@en ;
                 dbo:band ?band .
}
```",2,3,3,2,1,3,2,20,0,0,10,0,0.0,0
184,14,train,Give me the parent of the child of Archduke Joseph Francis of Austria.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Francis_of_Austria> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT DISTINCT ?parent
WHERE {
  ?child dbo:parent dbr:Archduke_Joseph_Francis_of_Austria .
  ?child dbo:parent ?parent .
}
```",2,2,3,2,1,3,3,71,2,0,0,1.0,1.0,1.0
318,6,train,Give me the professional in the profession of Robert Xavier Rodriguez.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Robert_Xavier_Rodriguez> <http://dbpedia.org/property/occupation> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?professionalName
WHERE {
  # Find the profession of Robert Xavier Rodriguez
  dbr:Robert_Xavier_Rodriguez dbo:profession ?robertsProfession .
  
  # Find other professionals with the same profession
  ?person dbo:profession ?robertsProfession .
  ?person rdfs:label ?professionalName .

  FILTER(LANG(?professionalName) = 'en')
}
```",2,2,3,2,1,2,2,9,0,0,1942,0,0.0,0
996,5,train,Give me the award of Ekrem Akurgal.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ekrem_Akurgal> <http://dbpedia.org/property/awards> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award WHERE {
  dbr:Ekrem_Akurgal dbo:award ?award .
}
```

Note: If Ekrem Akurgal's exact DBpedia resource URI is different, it should be replaced in the query. Additionally, if there are other relevant properties for awards (like `dbo:honoraryTitle`), they can be added to the query using UNION.",1,1,2,1,1,3,2,20,0,0,5,0,0.0,0
617,10,train,"Give me the father, that is a royalty, of the reference, that is a royalty, to Richeza of Poland.","SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""Richeza of Poland""@en . ?v0 <http://dbpedia.org/property/father> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?father WHERE {
  ?richeza dbo:child ?person .
  ?richeza rdfs:label ""Richeza of Poland""@en .
  
  ?person dbo:title ?title1 .
  FILTER(CONTAINS(LCASE(?title1), ""king"") || CONTAINS(LCASE(?title1), ""queen"") || 
         CONTAINS(LCASE(?title1), ""prince"") || CONTAINS(LCASE(?title1), ""princess""))

  ?person dbo:father ?father .

  ?father dbo:title ?title2 .
  FILTER(CONTAINS(LCASE(?title2), ""king"") || CONTAINS(LCASE(?title2), ""queen"") || 
         CONTAINS(LCASE(?title2), ""prince"") || CONTAINS(LCASE(?title2), ""princess""))
}
```",2,4,3,2,1,3,2,20,0,0,3,0,0.0,0
281,9,train,"Give me the entity in Colony of New Zealand and war of Beauchamp Seymour, 1st Baron Alcester.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Colony_of_New_Zealand> . <http://dbpedia.org/resource/Beauchamp_Seymour,_1st_Baron_Alcester> <http://dbpedia.org/ontology/battle> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person WHERE {
  # Find people related to New Zealand
  { 
    ?person a dbo:Person ;
            dbo:residence dbr:New_Zealand .
  }
  UNION
  {
    ?person a dbo:Person ;
            dbo:placeOfBirth dbr:New_Zealand .
  }

  # Find the same people related to the First Boer War
  { 
    ?person dbo:participatedIn dbr:First_Boer_War .
  }
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
339,5,train,Who is the child of Grand Duchess Elena Vladimirovna of Russia?,SELECT ?result WHERE { <http://dbpedia.org/resource/Grand_Duchess_Elena_Vladimirovna_of_Russia> <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?child WHERE {
  ?person a dbo:Person ;
          foaf:name ""Elena Vladimirovna of Russia""@en .
  ?person dbo:child ?child .
}
```",1,1,2,1,1,3,2,20,0,0,3,0,0.0,0
801,3,train,Give me the true self of The Shadow.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/givenName> ""The Shadow""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?realName WHERE {
  ?character rdfs:label ""The Shadow""@en .
  FILTER NOT EXISTS { ?character rdfs:label ?otherLabel . FILTER (lang(?otherLabel) != 'en') }
  
  OPTIONAL { 
    ?character dbo:alias ?alias .
    FILTER regex(str(?alias), ""Lamont Cranston"", ""i"")
    BIND(""Lamont Cranston"" AS ?realName)
  }

  OPTIONAL {
    ?character dbo:realName ?realName .
  }
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
783,6,train,Give me the band member of Ebony Reigns and associated musical artist of Appietus.,SELECT ?result WHERE { <http://dbpedia.org/resource/Appietus> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Ebony_Reigns> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?bandMember ?associatedArtist WHERE {
  # Find the band member of Ebony Reigns
  { 
    ?ebony a dbo:MusicalArtist ;
           foaf:name ""Ebony Reigns"" .
    OPTIONAL { ?ebony dbo:bandMember ?bandMember . }
  }

  UNION

  # Find associated musical artist of Appietus
  {
    ?appietus a dbo:MusicProducer ;
              foaf:name ""Appietus"" .
    OPTIONAL { ?appietus dbp:associatedMusicalArtist ?associatedArtist . }
  }
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
696,1,train,Give me the landmark at elevation of 50.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/elevation> ""50""^^<http://www.w3.org/2001/XMLSchema#integer> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?landmark ?elevation
WHERE {
    ?landmark a dbo:Landmark .
    ?landmark dbo:elevation ?elevation .
    FILTER (?elevation = ""50""^^xsd:integer)
}
```",1,1,2,1,1,3,2,20,0,0,599,0,0.0,0
391,15,train,"Give me the figure known as the nick name of Jackson, Tennessee.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ?v1 . <http://dbpedia.org/resource/Jackson,_Tennessee> <http://xmlns.com/foaf/0.1/nick> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX geo: <http://www.opengis.net/ont/geosparql#>

SELECT ?nickname
WHERE {
  ?city a dbo:City ;
        dbp:name ""Jackson"" ;
        dbp:state ""Tennessee"" .
  
  OPTIONAL { 
    ?city rdfs:label ?nickname .
  }
}
```",2,2,3,2,1,3,3,71,0,0,4,0,0.0,0
184,9,train,Give me the child of Archduke Joseph August of Austria and parent of Géza von Habsburg.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_August_of_Austria> . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Géza_von_Habsburg> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?individual WHERE {
  ?individual dbo:childOf <http://dbpedia.org/resource/Archduke_Joseph_August_of_Austria> .
  ?individual dbo:parentOf <http://dbpedia.org/resource/G%C3%A9za_von_Habsburg> .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
44,6,train,"Give me the band member of the associated musical artist, that is a group and an organisation, of Queensrÿche.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . <http://dbpedia.org/resource/Queensrÿche> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandMember WHERE {
  ?associatedArtist a dbo:Band ;
                   a dbo:Organization ;
                   dbo:associatedMusicalArtist dbr:Queensrÿche .
  ?associatedArtist dbo:bandMember ?bandMember .
}
```",2,4,3,2,1,2,2,9,0,0,13,0,0.0,0
485,7,train,Give me the entity in United Kingdom and entity in Nottinghamshire.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Nottinghamshire> . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?ukEntity ?nottinghamshireEntity
WHERE {
  ?ukEntity a dbo:Country ;
            rdfs:label ""United Kingdom""@en .
  
  ?nottinghamshireEntity a dbo:County ;
                         dbp:country dbr:England ;
                         rdfs:label ""Nottinghamshire""@en .
}
```",2,2,3,1,2,2,3,28,0,0,357,0,0.0,0
747,14,train,Give me the band of the person born as Tracey Elizabeth McSween.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/property/birthName> ""Tracey Elizabeth McSween""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band WHERE {
  ?person dbo:birthName ""Tracey Elizabeth McSween""@en .
  ?person dbo:bandMember ?band .
}
```",2,2,3,2,1,3,3,71,0,0,8,0,0.0,0
314,8,train,Give me the person deceased at the headquarter of House of Sombrerete.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/restingPlace> ?v1 . <http://dbpedia.org/resource/House_of_Sombrerete> <http://dbpedia.org/ontology/location> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?personLabel
WHERE {
  # Find the headquarters of the House of Sombrerete
  dbr:House_of_Sombrerete dbo:headquarters ?location .

  # Find persons who died at this location
  ?person dbo:deathPlace ?location .
  
  # Get labels for better readability
  SERVICE <http://dbpedia.org/sparql> {
    ?person rdfs:label ?personLabel .
    FILTER (lang(?personLabel) = 'en')
  }
}
```",2,2,3,2,1,2,3,28,0,0,34,0,0.0,0
328,15,train,Give me the award of the commander in Volcano and Ryukyu Islands campaign.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/awards> ?result . <http://dbpedia.org/resource/Volcano_and_Ryukyu_Islands_campaign> <http://dbpedia.org/ontology/commander> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award WHERE {
  ?campaign a dbo:MilitaryOperation ;
            rdfs:label ""Volcano and Ryukyu Islands campaign""@en .
  
  OPTIONAL { 
    ?campaign dbo:awardedBy ?award .
  }
}
```",2,2,3,2,1,3,3,71,0,0,30,0,0.0,0
314,9,train,Give me the commander in Spanish Civil War and awardee of 30.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Spanish_Civil_War> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/property/awards> ""30""^^<http://www.w3.org/2001/XMLSchema#integer> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?awardee WHERE {
  # Find commanders in the Spanish Civil War
  ?commander dbo:nationality dbr:Spain ;
            dbo:occupation dbr:Military_person ;
            dbo:wikiPageDisambiguates ?disambiguation .
  
  FILTER(CONTAINS(LCASE(?disambiguation), ""spanish civil war""))

  # Find awardees of the Order of the Golden Fleece
  OPTIONAL {
    ?awardee dbo:award dbr:Order_of_the_Golden_Fleece ;
            dbo:wikiPageDisambiguates ?fleeceDisambiguation .
    
    FILTER(CONTAINS(LCASE(?fleeceDisambiguation), ""30""))
  }

  # Link the commander to the awardee
  VALUES ?link { dbr:Francisco_Franco }
  
  OPTIONAL {
    ?commander foaf:name ?name ;
               dbo:wikiPageRedirects ?link .
    
    ?awardee foaf:name ?awardeeName .
  }

}
```",2,2,3,1,2,2,3,28,0,0,2,0,0.0,0
328,6,train,Give me the force of Ferenc Szálasi.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Ferenc_Szálasi> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?property ?value
WHERE {
  VALUES ?szalasi { dbr:Ferenc_Szálasi }
  
  ?szalasi dbo:leader ?party .
  ?szalasi dbo:partyAffiliation ?affiliation .
  OPTIONAL { ?szalasi dbo:militaryService ?militaryRole . }

  BIND(""Leader of"" AS ?property)
  VALUES ?value { ?party }
  UNION
  BIND(""Party Affiliation"" AS ?property)
  VALUES ?value { ?affiliation }
  UNION
  BIND(""Military Service"" AS ?property)
  VALUES ?value { ?militaryRole }
}
```",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
827,6,train,"Give me the father of William Ernest, Grand Duke of Saxe-Weimar-Eisenach and child of Charles Alexander, Grand Duke of Saxe-Weimar-Eisenach.","SELECT ?result WHERE { <http://dbpedia.org/resource/Charles_Alexander,_Grand_Duke_of_Saxe-Weimar-Eisenach> <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/William_Ernest,_Grand_Duke_of_Saxe-Weimar-Eisenach> <http://dbpedia.org/property/father> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?father WHERE {
  ?williamErnest dbo:father ?father .
  ?williamErnest rdfs:label ""William Ernest, Grand Duke of Saxe-Weimar-Eisenach""@en .

  FILTER EXISTS { 
    ?charlesAlexander dbo:child ?father .
    ?charlesAlexander rdfs:label ""Charles Alexander, Grand Duke of Saxe-Weimar-Eisenach""@en .
  }
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
767,0,train,Give me the entity in Baden-Württemberg.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/state> <http://dbpedia.org/resource/Baden-Württemberg> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?entity WHERE {
  ?entity (dbo:location|dbp:state) ?place .
  FILTER (str(?place) = ""Baden-Württemberg"")
}
```",1,1,2,1,1,3,3,71,3,1259,57,0.002377179080824089,0.05,0.0045385779122541605
161,7,train,Who is the figure known as El Director?,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/nick> ""El Director""@en . }","```sparql
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?entity ?label WHERE {
  ?entity (rdfs:label|foaf:nick) ?alias .
  FILTER(CONTAINS(LCASE(?alias), ""el director""))
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
10,3,train,"Give me the person born, that is an artist, as Matt Colton.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Matt Colton""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person ?birthPlace WHERE {
  ?person rdf:type dbo:Artist .
  ?person foaf:name ""Matt Colton"" .
  OPTIONAL { ?person dbo:birthPlace ?birthPlace . }
}
```",1,2,2,1,1,2,3,28,0,0,1,0,0.0,0
345,10,train,"Who is the person born, that is a soccer player and a soccer manager, on the birth date of Eiður Guðjohnsen?",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthDate> ?v0 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Eiður_Guðjohnsen> <http://dbpedia.org/ontology/birthDate> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?birthDate WHERE {
  # Get Eiður Guðjohnsen's birth date
  dbr:Eiður_Guðjohnsen dbo:birthDate ?eiðurBirthDate .

  # Find persons with the same birth date who are both soccer players and managers
  ?person a dbo:SoccerPlayer ;
          dbo:birthDate ?birthDate .
  FILTER (?birthDate = ?eiðurBirthDate)
  
  OPTIONAL { 
    ?person dbo:occupation dbr:Soccer_manager .
  }
}
```",2,4,3,2,1,3,2,20,3,9,0,0.25,1.0,0.4
184,1,train,Give me the child of Archduke Joseph August of Austria.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_August_of_Austria> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?child WHERE {
  ?person rdfs:label ""Archduke Joseph August of Austria""@en .
  FILTER NOT EXISTS { ?person a dbo:Person . }
  ?person dbo:child ?child .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
666,4,train,"Give me the reference, that is an organisation and a soccer club and a sports club, to England.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?result <http://xmlns.com/foaf/0.1/name> ""England""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?org WHERE {
  ?org rdf:type dbo:SoccerClub .
  ?org rdf:type dbo:SportsTeam .
  ?org dbo:country dbr:England .
}
```",1,4,2,1,1,3,2,20,0,0,4,0,0.0,0
712,6,train,Give me the resting place of Nina Onilova and capital of South Russia (1919–1920).,SELECT ?result WHERE { <http://dbpedia.org/resource/South_Russia_(1919–1920)> <http://dbpedia.org/ontology/capital> ?result . <http://dbpedia.org/resource/Nina_Onilova> <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?burialPlace ?capitalCity
WHERE {
    # Find Nina Onilova's burial place
    OPTIONAL { 
        ?person a dbo:Person ;
                foaf:name ""Nina Onilova"" ;
                dbo:deathPlace ?burialPlace .
    }
    
    # Identify the capital of South Russia during 1919-1920
    {
        SELECT DISTINCT ?capitalCity WHERE {
            ?city dbo:country dbr:South_Russia ;
                  dbo:capital true ;
                  dbo:populationTotal ?population .
                  
            FILTER (?population > 0) # Ensures we have a valid city entry
            
            # Additional historical context might be needed to ensure the timeframe
            # Here, we assume Ekaterinodar (Krasnodar) is known as the capital during this period
        }
    } AS ?capitalCity
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
16,3,train,Give me the birth name of Ted McGinley.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/property/birthName> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?birthName
WHERE {
  ?person rdfs:label ""Ted McGinley""@en .
  ?person dbo:birthName ?birthName .
}
```",1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
528,4,train,Give me the military force of Battle of Pisagua.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Pisagua> . },"```sparql
PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?combatant1 ?combatant2 WHERE {
  ?battle a dbpedia-owl:Battle .
  ?battle rdfs:label ""Battle of Pisagua""@en .
  OPTIONAL { ?battle dbp:combatant1 ?combatant1 . }
  OPTIONAL { ?battle dbp:combatant2 ?combatant2 . }
}
```",1,1,2,1,1,3,3,71,0,0,7,0,0.0,0
838,9,train,"Give me the band member, that is an artist and a musical artist, of the band, that is a band and a group, of Žika Jelić.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v0 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Žika_Jelić> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?bandMember WHERE {
  ?person foaf:name ""Žika Jelić""@sr .
  ?person dbo:member ?band .

  ?band a dbo:Band ;
        a dbo:Group .

  ?bandMember dbo:member ?band ;
              a dbo:Artist, dbo:MusicalArtist .
}
```",2,6,3,2,1,3,2,20,0,0,4,0,0.0,0
801,14,train,"Give me the associated musical artist of the writer, that is a musical artist and an artist, of 40 Dayz & 40 Nightz.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/40_Dayz_&_40_Nightz> <http://dbpedia.org/property/writer> ?v1 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?artist WHERE {
  ?work dbo:title ""40 Dayz & 40 Nightz"" .
  ?work dbo:author ?writer .
  ?writer rdf:type dbo:Artist .
  ?writer rdf:type dbo:MusicalArtist .
  ?writer rdfs:label ?artist .
  FILTER(LANG(?artist) = 'en')
}
```",2,4,3,2,1,3,3,71,0,0,50,0,0.0,0
232,1,train,Give me the actor of Dog Soldiers (film).,SELECT ?result WHERE { <http://dbpedia.org/resource/Dog_Soldiers_(film)> <http://dbpedia.org/ontology/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?actorName WHERE {
  ?film rdf:type dbo:Film .
  ?film rdfs:label ""Dog Soldiers""@en .
  ?film dbo:starring ?actor .
  ?actor rdfs:label ?actorName .
  FILTER(LANG(?actorName) = 'en')
}
```",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
92,15,train,"Give me the reference, that is an artist, to the name of Nevermore (2006 film).",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Nevermore_(2006_film)> <http://xmlns.com/foaf/0.1/name> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artist WHERE {
    ?film a dbo:Film ;
          rdfs:label ""Nevermore""@en .
    OPTIONAL { ?film dbo:director ?artist . }
    OPTIONAL { ?film dbo:composer ?artist . }
    OPTIONAL { ?film dbo:actor ?artist . }
    FILTER EXISTS { 
        ?film dbo:releaseDate ?date .
        BIND(YEAR(?date) AS ?year)
        FILTER (?year = 2006)
    }
}
```",2,3,3,2,1,3,3,71,0,0,1,0,0.0,0
312,5,train,"Give me the entity in the administration, that is a settlement and a region and Italian and a state, of Democratic Party (Italy).",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v1 <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Democratic_Party_(Italy)> . ?result <http://dbpedia.org/ontology/province> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity WHERE {
  ?entity a dbo:Settlement .
  ?entity a dbo:Region .
  ?entity a dbo:State .
  ?entity dbo:country dbr:Italy .
  
  ?party dbr:Democratic_Party_(Italy) .
  ?party dbo:administrativeBody ?entity .

  FILTER (str(?entity) != """")
}
```",2,6,3,2,1,2,2,9,0,0,587,0,0.0,0
177,2,train,Give me the residence of Alexander Gamelin.,SELECT ?result WHERE { <http://dbpedia.org/resource/Alexander_Gamelin> <http://dbpedia.org/property/residence> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?residence WHERE {
  ?person rdf:type dbo:Person .
  ?person rdfs:label ""Alexander Gamelin""@en .
  ?person dbo:residence ?residence .
}
```",1,1,2,1,1,2,2,9,2,0,0,1.0,1.0,1.0
959,16,train,"Give me the residence, that is a country, of the leader, that is a politician, of 2010 Japanese House of Councillors election.",SELECT ?result WHERE { <http://dbpedia.org/resource/2010_Japanese_House_of_Councillors_election> <http://dbpedia.org/property/leader> ?v0 . ?v0 <http://dbpedia.org/property/residence> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?residence WHERE {
  ?politician dbo:office ?office .
  ?office dbo:election ?election .
  ?election dbp:date ""2010""^^xsd:gYear .
  ?politician dbo:country ?residence .
  FILTER (isLiteral(?residence) && datatype(?residence) = xsd:string)
}
```",2,4,3,2,1,3,3,71,0,0,1,0,0.0,0
182,3,train,Give me the author of 2019 Sri Lanka Easter bombings.,SELECT ?result WHERE { <http://dbpedia.org/resource/2019_Sri_Lanka_Easter_bombings> <http://dbpedia.org/property/author> ?result . },"```sparql
PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?author WHERE {
  ?event a dbpedia-owl:Event ;
         rdfs:label ""2019 Sri Lanka Easter bombings""@en .
  
  OPTIONAL { 
    ?event dbp:perpetrator ?author .
  }
}
```",1,1,2,1,1,2,3,28,0,0,3,0,0.0,0
10,7,train,Give me the professional in  and associated musical artist of Matt Colton.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Matt_Colton> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?profession ?associatedArtist WHERE {
  ?mattColton a dbo:Person ;
              foaf:name ""Matt Colton""@en .
  
  OPTIONAL { ?mattColton dbo:occupation ?profession . }
  OPTIONAL { ?mattColton dbp:associatedBand ?associatedArtist . }

  FILTER (lang(?mattColton) = 'en')
}
```",2,2,3,1,2,2,3,28,0,0,2,0,0.0,0
696,3,train,Who is the member of Dropkick Murphys?,SELECT ?result WHERE { <http://dbpedia.org/resource/Dropkick_Murphys> <http://dbpedia.org/ontology/bandMember> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT DISTINCT ?member WHERE {
  ?band rdf:type dbo:Band .
  ?band rdfs:label ""Dropkick Murphys""@en .
  ?band dbo:bandMember ?member .
  ?member rdf:type dbo:Person .
}
```",1,1,2,1,1,3,2,20,6,0,0,1.0,1.0,1.0
285,3,train,Who is the child of Tina Onassis Niarchos?,SELECT ?result WHERE { <http://dbpedia.org/resource/Tina_Onassis_Niarchos> <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?child WHERE {
  ?person a dbo:Person ;
          foaf:name ""Tina Onassis Niarchos""@en .
  ?person dbo:child ?child .
}
```",1,1,2,1,1,3,2,20,0,0,2,0,0.0,0
617,13,train,Give me the spouse of the child of Antiochus III the Great.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Antiochus_III_the_Great> <http://dbpedia.org/ontology/child> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?spouse
WHERE {
  ?antiochus a dbo:Monarch ;
             foaf:name ""Antiochus III the Great""@en .
  
  ?child dbo:parent ?antiochus ;
         a dbo:Person .

  ?spouse dbo:spouse ?child .
}
```",2,2,3,2,1,3,3,71,0,0,5,0,0.0,0
994,7,train,Give me the persona of Don Dokken.,SELECT ?result WHERE { <http://dbpedia.org/resource/Don_Dokken> <http://xmlns.com/foaf/0.1/givenName> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthName ?occupation ?genre ?band WHERE {
  VALUES ?dokken { dbr:Don_Dokken }
  
  ?dokken dbo:birthName ?birthName .
  ?dokken dbo:occupation ?occupation .
  OPTIONAL { ?dokken dbo:genre ?genre . }
  OPTIONAL { ?dokken dbo:associatedBand ?band . }
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
754,0,train,Give me the parent of Loe Thai.,SELECT ?result WHERE { <http://dbpedia.org/resource/Loe_Thai> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?parent WHERE {
  ?loethai rdf:type <http://dbpedia.org/resource/Loe_Thai> .
  ?loethai rdf:type ?type .
  ?type rdfs:subClassOf+ ?parent .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
77,2,train,Give me the award of Maxim Grigorievich Vlasov.,SELECT ?result WHERE { <http://dbpedia.org/resource/Maxim_Grigorievich_Vlasov> <http://dbpedia.org/property/awards> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?award WHERE {
  <http://dbpedia.org/resource/Maxim_Grigorievich_Vlasov> dbo:award ?award .
}
```",1,1,2,1,1,3,2,20,8,0,0,1.0,1.0,1.0
314,2,train,Give me the commander in Spanish Civil War.,SELECT ?result WHERE { <http://dbpedia.org/resource/Spanish_Civil_War> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name WHERE {
  ?event a dbo:War ;
         dbo:participatedInCountry [
           dbp:name ""Spain""@en ;
           dbo:countryName ""Spain"" ] .
  
  FILTER regex(str(?event), ""Spanish Civil War"", ""i"") .

  ?event dbo:commander ?person .
  ?person rdfs:label ?name .
  FILTER (langMatches(lang(?name), ""EN""))
}
```",1,1,2,1,1,2,3,28,0,0,28,0,0.0,0
959,1,train,Give me the native of Japan.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Japan> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?person ?name WHERE {
  ?person dbo:nationality dbr:Japan .
  ?person rdfs:label ?name .
  FILTER (LANG(?name) = 'en')
}
```",1,1,2,1,1,3,3,71,313,1981,8106,0.13644289450741065,0.03717781209169735,0.058433678708111635
534,3,train,"Who is the child, that is a politician and an office holder, of Desmond FitzGerald (politician)?",SELECT ?result WHERE { <http://dbpedia.org/resource/Desmond_FitzGerald_(politician)> <http://dbpedia.org/ontology/child> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?child WHERE {
  ?desmond a dbo:Person ;
           foaf:name ""Desmond FitzGerald"" .
  
  ?desmond dbo:child ?child .

  ?child dbo:occupation ?occupation .
  FILTER(CONTAINS(LCASE(STR(?occupation)), ""politician""))

  OPTIONAL { 
    ?child dbo:officeHolder ?office .
    FILTER(?office != rdf:nil)
  }
}
```",1,3,2,1,1,3,2,20,0,0,1,0,0.0,0
365,6,train,Give me the reference to the real name of The Blasters.,SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v1 . <http://dbpedia.org/resource/The_Blasters> <http://xmlns.com/foaf/0.1/name> ?v1 . },"```sparql
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>

SELECT ?realName WHERE {
  ?band foaf:name ""The Blasters""@en.
  OPTIONAL { ?band dbpedia-owl:realName ?realName }
}
```",2,2,3,2,1,2,2,9,0,0,1,0,0.0,0
360,3,train,"Give me the work, that is an album, of Dave Flett.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Album>. ?result <http://dbpedia.org/property/author> ""Dave Flett""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?album WHERE {
  ?artist rdfs:label ""Dave Flett""@en .
  FILTER NOT EXISTS { ?artist owl:sameAs ?other . }
  ?artist dbo:album ?album .
  ?album a dbo:Album .
}
```",1,2,2,1,1,2,3,28,0,0,1,0,0.0,0
54,7,train,Give me the reference to Thihapate of Mohnyin.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Thihapate of Mohnyin""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?reference WHERE {
  VALUES ?thihapate { 
    dbr:Thihapate_of_Mohnyin 
    # Add any known redirects if available, e.g., dbr:RedirectPage
  }
  
  ?thihapate dbo:wikiPageRedirects ?redirect .
  OPTIONAL { ?redirect dbo:wikiPageWikiLink ?reference . }
  FILTER NOT EXISTS { ?redirect a dbo:Redirect } # Ensure it's not just a redirect page itself
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
356,10,train,"Give me the native, that is a soccer player and a soccer manager, of the birth place, that is English and a settlement, of Gary Williams (footballer, born 1960).","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Gary_Williams_(footballer,_born_1960)> <http://dbpedia.org/ontology/birthPlace> ?v0 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?nativePerson WHERE {
  # Identify Gary Williams (footballer, born 1960)
  ?gW a dbo:SoccerPlayer ;
      dbp:birthday ""1960""^^xsd:gYear ;
      dbp:name ""Gary Williams""@en .
  
  # Determine his birthplace
  ?gW dbo:birthPlace ?birthPlace .

  # Filter for English settlements
  ?birthPlace dbo:country dbr:England ;
              a dbo:Settlement .

  # Find native individuals who are both soccer players and managers
  ?nativePerson dbo:birthPlace ?birthPlace ;
                a dbo:SoccerPlayer, dbo:SoccerManager .
}
```",2,6,3,2,1,3,2,20,0,0,17,0,0.0,0
429,1,train,Give me the country of 77th Ohio Infantry Regiment.,SELECT ?result WHERE { <http://dbpedia.org/resource/77th_Ohio_Infantry_Regiment> <http://dbpedia.org/ontology/country> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?countryLabel WHERE {
  ?regiment rdfs:label ""77th Ohio Infantry Regiment""@en .
  ?regiment dbo:country ?country .
  ?country rdfs:label ?countryLabel .
}
```",1,1,2,1,1,2,2,9,0,2,2,0.0,0.0,0
48,2,train,"Give me the work, that is a work, of Shellback (record producer).",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Shellback_(record_producer)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?work WHERE {
  ?producer a dbo:RecordProducer ;
            foaf:name ""Shellback (record producer)"" .
  ?producer dbo:work ?work .
}
```",1,2,2,1,1,3,2,20,0,0,57,0,0.0,0
281,5,train,"Who is the leader, that is a politician, of 1962 New South Wales state election?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/1962_New_South_Wales_state_election> <http://dbpedia.org/property/leader> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?leader WHERE {
  ?election dbo:year ""1962"" ;
            dbo:stateOrProvince dbr:New_South_Wales ;
            dbo:electionLeader ?leader .
  
  ?leader a dbo:Politician .
}
```",1,2,2,1,1,3,3,71,0,0,2,0,0.0,0
281,2,train,Give me the war of New Zealand Army.,SELECT ?result WHERE { <http://dbpedia.org/resource/New_Zealand_Army> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war ?warLabel WHERE {
  ?nzArmy a dbo:MilitaryUnit ;
          rdfs:label ""New Zealand Army""@en .
  
  ?nzArmy dbo:participatedIn ?war .

  ?war rdfs:label ?warLabel .
  FILTER(LANG(?warLabel) = 'en')
}
```",1,1,2,1,1,3,3,71,0,0,14,0,0.0,0
179,4,train,Who is the parent of Vajiralongkorn?,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Vajiralongkorn> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?parent WHERE {
  ?person dbo:parent ?parent .
  ?person rdfs:label ""Vajiralongkorn""@en .
}
```",1,1,2,1,1,3,2,20,2,0,0,1.0,1.0,1.0
328,16,train,Give me the force of the person decedent at Budapest.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> ?v1 . ?v1 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Budapest> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?role ?event WHERE {
  ?person a dbo:Politician ;
          foaf:name ""Imre Nagy""@en .
  
  OPTIONAL { ?person dbo:officeHolderOf ?position . }
  OPTIONAL { ?person dbo:spouse ?spouse . }

  ?event dbo:location dbr:Budapest ;
         dbo:participant ?person .

  FILTER (CONTAINS(LCASE(?event), ""revolution"") || CONTAINS(LCASE(?event), ""1956""))
}
```",2,2,3,2,1,3,3,71,0,0,23,0,0.0,0
64,5,train,"Give me the alma mater of the person decedent, that is a writer, at Sremska Kamenica.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>. ?v0 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Sremska_Kamenica> . ?v0 <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?person ?almaMater WHERE {
  ?person rdf:type dbo:Writer .
  ?person dbo:deathPlace dbr:Sremska_Kamenica .
  ?person dbo:almaMater ?almaMater .
}
```",2,3,3,2,1,2,2,9,1,1,0,0.5,1.0,0.6666666666666666
767,15,train,"Give me the administration, that is a settlement, of the writer of Where It's At (Dustin Lynch album).",SELECT ?result WHERE { <http://dbpedia.org/resource/Where_It's_At_(Dustin_Lynch_album)> <http://dbpedia.org/property/writer> ?v1 . ?result <http://dbpedia.org/property/leaderParty> ?v1 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?administration WHERE {
  # Find Dustin Lynch's place of birth or residence
  dbr:Dustin_Lynch dbo:birthPlace ?settlement .
  
  OPTIONAL { 
    dbr:Dustin_Lynch dbo:residence ?settlement .
  }
  
  # Ensure the settlement is a type of settlement
  ?settlement rdf:type dbo:Settlement .

  # Get the administration of that settlement
  ?settlement dbo:administrativeUnit ?administration .
}
```",2,3,3,2,1,3,3,71,0,0,31,0,0.0,0
251,5,train,Give me the author of The Twelve Abbots of Challant.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Twelve_Abbots_of_Challant> <http://dbpedia.org/property/author> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?author WHERE {
  ?book a dbo:Book .
  ?book rdfs:label ""The Twelve Abbots of Challant""@en .
  ?book dbo:author ?author .
}
```",1,1,2,1,1,2,3,28,1,0,0,1.0,1.0,1.0
314,1,train,Give me the awardee of 30.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ""30""^^<http://www.w3.org/2001/XMLSchema#integer> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award ?winner WHERE {
  ?award a dbo:Award ;
         dbo:year ""1958""^^xsd:gYear ;
         dbo:recipient ?winner .
}
```",1,1,2,1,1,2,3,28,0,0,951,0,0.0,0
184,12,train,Give me the parent of Archduchess Ilona of Austria and child of Archduke Joseph August of Austria.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_August_of_Austria> . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Ilona_of_Austria> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?ilona dbr:Archduchess_Ilona_of_Austria .
  ?person dbo:parent ?ilona .
  
  ?josephAugust dbr:Archduke_Joseph_August_of_Austria .
  ?person dbo:child ?josephAugust .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
328,5,train,Who is the person decedent at Budapest?,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Budapest> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name WHERE {
  ?person a dbo:Person .
  ?person dbo:deathPlace dbr:Budapest .
  OPTIONAL { ?person foaf:name ?name . }
}
```",1,1,2,1,1,3,3,71,1147,1090,0,0.5127402771569066,1.0,0.6778959810874704
184,11,train,Give me the parent of the native of Budapest.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Budapest> . ?result <http://dbpedia.org/ontology/child> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?parent WHERE {
  ?person dbo:nativePlace dbp:Budapest .
  ?person dbo:parent ?parent .
}
```",2,2,3,2,1,3,3,71,0,0,19,0,0.0,0
617,8,train,Who is the child of Antiochus (son of Antiochus III the Great)?,SELECT ?result WHERE { <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child WHERE {
  ?parent a dbo:Person ;
          rdfs:label ""Antiochus (son of Antiochus III the Great)""@en .
  
  ?parent dbo:child ?child .
}
```",1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
492,11,train,"Give me the person decedent at the work of US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/author> ""US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite""@en . ?result <http://dbpedia.org/ontology/deathPlace> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?successor WHERE {
  ?satterthwaite a dbo:Person ;
                 rdfs:label ""Joseph C. Satterthwaite""@en .
  
  ?position dbo:positionHeld ?satterthwaite ;
            rdfs:label ""United States Assistant Secretary of State for African Affairs""@en .

  ?successor dbo:predecessorOrSuccessorOf ?satterthwaite ;
             a dbo:Person .
}
```",2,2,3,2,1,3,3,71,0,0,30,0,0.0,0
645,2,train,Give me the commander in Battle of Diamond Rock.,SELECT ?result WHERE { <http://dbpedia.org/resource/Battle_of_Diamond_Rock> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?commander WHERE {
  ?battle a dbo:Battle .
  ?battle rdfs:label ""Battle of Diamond Rock""@en .
  OPTIONAL { ?battle dbp:commander ?commander . }
}
```",1,1,2,1,1,3,2,20,0,0,2,0,0.0,0
16,1,train,Give me the professional in Actress.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Actress""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?name WHERE {
  ?person a dbo:Actress .
  OPTIONAL { ?person foaf:name ?name . }
}
```",1,1,2,1,1,3,3,71,0,0,19241,0,0.0,0
498,1,train,Give me the band of Will Rahmer.,SELECT ?result WHERE { <http://dbpedia.org/resource/Will_Rahmer> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?band WHERE {
  ?person rdf:type dbo:Musician .
  ?person rdfs:label ""Will Rahmer""@en .
  ?person dbo:bandMember ?band .
}
```",1,1,2,1,1,2,2,9,0,0,2,0,0.0,0
747,7,train,Give me the persona of Shèna.,SELECT ?result WHERE { <http://dbpedia.org/resource/Shèna> <http://xmlns.com/foaf/0.1/givenName> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?name ?birthDate ?occupation ?notableWork WHERE {
  ?person a dbo:Person ;
          foaf:name ""Shèna""@en .
  OPTIONAL { ?person dbo:birthDate ?birthDate . }
  OPTIONAL { ?person dbo:occupation ?occupation . }
  OPTIONAL { ?person dbo:notableWork ?notableWork . }
  BIND(STR(?person) AS ?name)
}
```",1,1,2,1,1,3,3,71,0,1,1,0.0,0.0,0
915,6,train,"Give me the father of Lizzie Spaulding and resident of Springfield, Illinois.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Springfield,_Illinois> . <http://dbpedia.org/resource/Lizzie_Spaulding> <http://dbpedia.org/property/father> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  ?lizzie a dbo:Person ;
          foaf:name ""Lizzie Spaulding""@en .
  
  ?lizzie dbo:father ?father .

  ?father dbo:residence dbr:Springfield,_Illinois .
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
161,0,train,Give me the military force of Rif War.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Rif_War> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce WHERE {
  ?militaryForce dbo:participatedIn dbr:Rif_War .
}
```",1,1,2,1,1,3,3,71,0,0,56,0,0.0,0
179,2,train,"Who is the child, that is a royalty, of Nakkhatra Mangala?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Nakkhatra_Mangala> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?child WHERE {
  ?mars rdf:type dbo:AstrologicalBody .
  ?mars rdfs:label ""Mars""@en .
  
  ?mars dbo:hasChild ?child .

  ?child rdf:type ?type .
  FILTER (
    ?type = dbo:RoyalFamilyMember ||
    ?type = dbo:Monarch ||
    ?type = dbo:Prince ||
    ?type = dbo:Princess
  )
}
```",1,2,2,1,1,3,2,20,0,0,1,0,0.0,0
356,0,train,Give me the player in 2015 Sacramento Republic FC season.,SELECT ?result WHERE { <http://dbpedia.org/resource/2015_Sacramento_Republic_FC_season> <http://dbpedia.org/ontology/team> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?player WHERE {
  ?team dbo:officialName ""Sacramento Republic FC""@en .
  ?team dbo:location dbr:Sacramento,_California .
  ?player dbo:team ?team ;
          dbo:season ?season .
  FILTER (?season = ""2015""^^xsd:gYear)
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
54,3,train,Give me the child of Thinkhaya of Pagan.,SELECT ?result WHERE { <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?child WHERE {
  ?person a dbo:Person ;
          foaf:name ""Thinkhaya""@en .
  ?person dbo:child ?child .
}
```",1,1,2,1,1,3,3,71,3,1,0,0.75,1.0,0.8571428571428571
9,4,train,"Who is the mayor, that is a politician, of Northern Ireland Forum?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Northern_Ireland_Forum> <http://dbpedia.org/property/leader> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?mayor WHERE {
  ?forum dbo:mayor ?mayor .
  ?mayor rdf:type dbo:Politician .
  FILTER (str(?forum) = ""Northern Ireland Forum"")
}
```",1,2,2,1,1,3,3,71,0,0,10,0,0.0,0
626,4,train,Who is the military force of Battle of Borodino?,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Borodino> . },"```sparql
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?combatant WHERE {
  ?battle dbo:wikiPageRedirects dbp:Borodino_Battle .
  ?battle dbp:combatant ?combatant .
}
```",1,1,2,1,1,3,2,20,0,0,52,0,0.0,0
10,9,train,Give me the professional in  and band member of Luke Vibert.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Luke_Vibert> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?profession ?band WHERE {
  ?person a dbo:Person ;
          foaf:name ""Luke Vibert"" .
  
  OPTIONAL { ?person dbo:occupation ?profession . }
  OPTIONAL { ?person dbo:bandMember ?band . }

  FILTER (lang(?profession) = 'en' && lang(?bandLabel) = 'en')
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
485,4,train,"Who is the awardee, that is a writer and a poet, of Eric Gregory Award?",SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Eric_Gregory_Award> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Poet>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?awardee WHERE {
  ?awardee dbo:award <http://dbpedia.org/resource/Eric_Gregory_Award> .
  ?awardee dbo:occupation ?occupation1 .
  ?awardee dbo:occupation ?occupation2 .
  FILTER (
    (str(?occupation1) = ""Writer"" || str(?occupation1) = ""Poet"") &&
    (str(?occupation2) = ""Writer"" || str(?occupation2) = ""Poet"")
  )
}
```",1,3,2,1,1,2,3,28,0,0,7,0,0.0,0
783,2,train,Give me the person born as Samuel Ofori Amponsah.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Samuel Ofori Amponsah""@en . }","```sparql
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  ?person foaf:givenName ""Samuel"" .
  ?person foaf:familyName ""Ofori Amponsah"" .
  OPTIONAL { ?person dbp:birthName ?birthName . }
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
182,11,train,Give me the entity in the nationality of Tamara Kunanayakam.,SELECT ?result WHERE { <http://dbpedia.org/resource/Tamara_Kunanayakam> <http://dbpedia.org/ontology/nationality> ?v1 . ?result <http://dbpedia.org/ontology/place> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?nationality WHERE {
  dbpedia:Tamara_Kunanayakam dbo:nationality ?nationality .
}
```",2,2,3,2,1,2,3,28,0,0,62,0,0.0,0
488,17,train,"Who is the father of the spouse, that is a royalty, of Tokugawa Masako?",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Tokugawa_Masako> . ?v1 <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?father
WHERE {
  ?masako dbo:birthName ""Masako, Princess Toshi "" .
  ?masako dbo:spouse ?spouse .

  FILTER EXISTS { 
    ?spouse (dbo:royalTitle|dbo:positionHeld) ?title .
    FILTER (
      str(?title) = ""Emperor"" ||
      str(?title) = ""Empress"" ||
      str(?title) = ""Prince"" ||
      str(?title) = ""Princess""
    )
  }

  ?spouse dbo:father ?father
}
```",2,3,3,2,1,3,3,71,0,0,1,0,0.0,0
827,0,train,"Give me the child of Charles Alexander, Grand Duke of Saxe-Weimar-Eisenach.","SELECT ?result WHERE { <http://dbpedia.org/resource/Charles_Alexander,_Grand_Duke_of_Saxe-Weimar-Eisenach> <http://dbpedia.org/ontology/child> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child WHERE {
  ?person dbo:parent dbr:Charles_Alexander,_Grand_Duke_of_Saxe-Weimar-Eisenach .
  ?person a dbo:Person .
  ?person dbo:child ?child .
}
```",1,1,2,1,1,3,2,20,0,0,3,0,0.0,0
92,0,train,Give me the band member of Nevermore.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Nevermore> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?member WHERE {
  ?band a dbo:Band ;
        rdfs:label ""Nevermore""@en .
  
  ?bandMember dbo:bandMember ?band ;
              a dbo:MusicalArtist .

  BIND(?bandMember AS ?member)
}
```",1,1,2,1,1,3,3,71,0,0,12,0,0.0,0
115,6,train,Give me the alma mater of the awardee of National Order of Scientific Merit.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/almaMater> ?result . ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/National_Order_of_Scientific_Merit> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX db: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?almaMater WHERE {
  ?recipient dbo:award db:National_Order_of_Scientific_Merit .
  ?recipient foaf:almaMater ?almaMater .
}
```",2,2,3,2,1,2,2,9,0,0,5,0,0.0,0
701,2,train,Give me the spouse of Ramesses II.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Ramesses_II> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?spouseLabel WHERE {
  ?ramesses2 rdfs:label ""Ramesses II""@en .
  ?ramesses2 dbo:spouse ?spouse .
  ?spouse rdfs:label ?spouseLabel .
  FILTER(LANG(?spouseLabel) = 'en')
}
```",1,1,2,1,1,3,3,71,0,1,5,0.0,0.0,0
465,6,train,"Give me the administration of the leader, that is a political party and an organisation, of Chamber of Deputies of the Czech Republic.",SELECT ?result WHERE { <http://dbpedia.org/resource/Chamber_of_Deputies_of_the_Czech_Republic> <http://dbpedia.org/property/leader> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/property/leaderParty> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?leader ?party ?organization ?administration
WHERE {
  ?chamber a dbo:Legislature ;
           dbo:country dbr:Czech_Republic ;
           dbo:member ?leader .
  
  ?leader dbo:politicalParty ?party ;
          dbo:memberOf ?organization .

  OPTIONAL { ?leader dbo:positionHeld ?administration . }
  
  FILTER (CONTAINS(LCASE(STR(?chamber)), ""chamber of deputies""))
}
```",2,4,3,2,1,2,2,9,0,0,50,0,0.0,0
285,8,train,Give me the spouse of the professional in .,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v0 . ?v0 <http://dbpedia.org/property/occupation> """"@en . }","```sparql
# This query cannot be completed without specifying the individual.
SELECT ?spouse WHERE {
  # Placeholder for specific individual URI or name
  ?individual dbo:spouse ?spouse .
}
```",2,2,3,2,1,3,2,20,3214,56713,935,0.05363191883458208,0.7746444926488311,0.10031837193332918
820,8,train,Give me the child of the parent of Jason Schwartzman.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Jason_Schwartzman> . ?result <http://dbpedia.org/property/father> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?grandChild WHERE {
  ?person dbo:name ""Jason Schwartzman""@en .
  ?person dbo:parent ?parent .
  ?parent dbo:child ?grandChild .
}
```",2,2,3,2,1,3,2,20,0,0,2,0,0.0,0
778,0,train,Give me the entity in United States.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/United_States> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity ?entityLabel WHERE {
  ?entity dbo:country dbr:United_States_of_America .
  OPTIONAL { ?entity rdfs:label ?entityLabel . FILTER (lang(?entityLabel) = 'en') }
}
ORDER BY ?entityLabel
LIMIT 100
```",1,1,2,1,1,3,2,20,0,200,13008,0.0,0.0,0
161,3,train,Who is the person decedent at Francoist Spain?,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Francoist_Spain> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person ?name WHERE {
  ?person a dbo:Person .
  OPTIONAL { ?person dbo:causeOfDeath ?deathCause . }
  OPTIONAL { ?person rdfs:label ?name FILTER (lang(?name) = 'en') . }
  
  # Link to Francoist Spain or related events
  ?event dbr:Francoist_Spain ;
         dbo:wikiPageWikiLink ?person .
  
  # Filter for those with a cause of death linked to the regime
  OPTIONAL { 
    ?deathCause rdfs:label ?causeLabel FILTER (CONTAINS(LCASE(?causeLabel), ""franco"") || CONTAINS(LCASE(?causeLabel), ""civil war"")) .
  }
}
ORDER BY ?name
```",1,1,2,1,1,3,3,71,0,0,125,0,0.0,0
303,6,train,Give me the entity in Panama and party of Guillermo Endara.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Panama> . <http://dbpedia.org/resource/Guillermo_Endara> <http://dbpedia.org/ontology/party> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?endara ?party WHERE {
  ?endara a dbo:Politician ;
          foaf:name ""Guillermo Endara""@en ;
          dbo:birthPlace dbr:Panama .
  OPTIONAL { ?endara dbo:partyAffiliation ?party . }
}
```",2,2,3,1,2,2,3,28,0,0,2,0,0.0,0
547,17,train,Give me the awardee of the award of Gerald Graham.,SELECT ?result WHERE { <http://dbpedia.org/resource/Gerald_Graham> <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/property/awards> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?recipient WHERE {
  ?award dbo:awardee dbr:Gerald_Graham .
  ?award dbo:recipient ?recipient .
}
```",2,2,3,2,1,3,3,71,0,0,2075,0,0.0,0
959,13,train,"Give me the native of the residence, that is a country, of Yōichi Masuzoe.",SELECT ?result WHERE { <http://dbpedia.org/resource/Yōichi_Masuzoe> <http://dbpedia.org/property/residence> ?v1 . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?nativeName WHERE {
  ?person a dbo:Politician ;
          foaf:name ""Yōichi Masuzoe""@ja .
  
  ?person dbo:residence ?residence .

  ?residence rdf:type dbo:Country .

  ?residence rdfs:label ?countryLabel .
  FILTER (LANG(?countryLabel) = 'en')

  OPTIONAL { 
    ?residence rdfs:label ?nativeName .
    FILTER (LANG(?nativeName) != 'en')
  }
}
```",2,3,3,2,1,3,3,71,0,0,8419,0,0.0,0
251,3,train,"Give me the war, that is a military conflict, of Louis François Félix Musnier.",SELECT ?result WHERE { <http://dbpedia.org/resource/Louis_François_Félix_Musnier> <http://dbpedia.org/ontology/battle> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war WHERE {
  ?war a dbo:MilitaryConflict .
  ?war dbo:agent dbr:Louis_François_Félix_Musnier .
}
```",1,2,2,1,1,2,3,28,0,0,16,0,0.0,0
182,10,train,Give me the war of the work of Gotabhaya Rajapaksa.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Gotabhaya_Rajapaksa> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?war WHERE {
  ?person foaf:name ""Gotabhaya Rajapaksa""@en .
  ?person dbo:role ?role .
  ?role dbo:office ?office .
  ?office dbo:relatedWar ?war .
}
```",2,2,3,2,1,2,3,28,0,0,5,0,0.0,0
55,3,train,"Give me the producer, that is a band, of Used to Love Her.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. <http://dbpedia.org/resource/Used_to_Love_Her> <http://dbpedia.org/ontology/producer> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?producer WHERE {
  ?song dbo:title ""Used to Love Her"" .
  ?song dbo:producer ?producer .
  ?producer rdf:type dbo:Band .
}
```",1,2,2,1,1,2,3,28,0,0,1,0,0.0,0
981,5,train,"Who is the person born, that is a beauty queen, as ?","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BeautyQueen>. ?result <http://dbpedia.org/property/birthName> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name ?birthDate
WHERE {
  ?person a dbo:Person .
  ?person dbo:award ?award .
  FILTER EXISTS { ?award rdfs:label ?awardLabel . FILTER(CONTAINS(LCASE(?awardLabel), ""miss universe"") || CONTAINS(LCASE(?awardLabel), ""miss world"")) }
  OPTIONAL { ?person foaf:name ?name . }
  OPTIONAL { ?person dbo:birthDate ?birthDate . }
}
ORDER BY ?name
```",1,2,2,1,1,3,2,20,0,29,120,0.0,0.0,0
485,9,train,Give me the entity in Nottinghamshire and birth place of Thomas Warner (poet).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Nottinghamshire> . <http://dbpedia.org/resource/Thomas_Warner_(poet)> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?entity ?birthPlace WHERE {
  ?entity a dbo:Person ;
          foaf:name ""Thomas Warner"" .
  OPTIONAL { ?entity dbo:birthPlace ?birthPlace . }
  FILTER EXISTS { 
    ?location dbp:country ""United Kingdom"" ;
              dbp:administrativeArea ""Nottinghamshire"" .
    ?entity dbp:location ?location .
  }
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
783,7,train,Give me the associated musical artist of the band member of Ofori Amponsah.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Ofori_Amponsah> . },"```sparql
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT DISTINCT ?artist WHERE {
  ?person rdfs:label ""Ofori Amponsah""@en .
  ?person dbp:bandMember ?band .
  OPTIONAL { ?band dbo:associatedBand ?artist . }
}
```",2,2,3,2,1,3,2,20,0,0,35,0,0.0,0
251,8,train,"Give me the location of the war, that is a military conflict, of Louis François Félix Musnier.",SELECT ?result WHERE { <http://dbpedia.org/resource/Louis_François_Félix_Musnier> <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://dbpedia.org/ontology/place> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?conflict ?location WHERE {
  VALUES ?person { dbr:Louis_François_Félix_Musnier }
  
  ?person dbo:militaryConflict ?conflict .
  ?conflict dbo:place ?location .
}
```",2,3,3,2,1,2,3,28,0,0,25,0,0.0,0
345,3,train,Give me the nickname of FC Vaduz.,SELECT ?result WHERE { <http://dbpedia.org/resource/FC_Vaduz> <http://dbpedia.org/property/nickname> ?result . },"```sparql
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
SELECT ?nickname WHERE {
  ?club a dbo:FootballClub ;
        foaf:name ""FC Vaduz"" .
  ?club foaf:nick ?nickname .
}
```",1,1,2,1,1,3,2,20,0,0,3,0,0.0,0
92,9,train,Give me the band member of Nevermore and associated musical artist of Jim Sheppard.,SELECT ?result WHERE { <http://dbpedia.org/resource/Jim_Sheppard> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Nevermore> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?member ?associatedArtist WHERE {
  # Find members of the band Nevermore
  ?band a dbo:Band ;
        foaf:name ""Nevermore""@en .
  
  ?band dbo:bandMember ?member .

  OPTIONAL {
    # Find associated musical artists for Jim Sheppard
    ?sheppard foaf:name ""Jim Sheppard""@en .
    
    ?association a dbo:MusicalArtist ;
                 dbo:associatedBand ?sheppard ;
                 foaf:name ?associatedArtist .
  }
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
820,10,train,Who is the parent of the professional in Actor?,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://dbpedia.org/property/occupation> ""Actor""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?actor ?parent
WHERE {
  ?actor a dbo:Person .
  ?actor dbo:occupation dbp:Actor .
  OPTIONAL { ?actor dbo:parent ?parent . }
}
```",2,2,3,2,1,3,2,20,0,0,921,0,0.0,0
626,1,train,Give me the awardee of Order of St. Andrew.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Order_of_St._Andrew> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?recipient WHERE {
  ?award a dbo:Award ;
        rdfs:label ""Order of St. Andrew""@en .
  
  ?recipient dbo:recipientOfAwards ?award .
}
```",1,1,2,1,1,3,2,20,0,0,33,0,0.0,0
161,11,train,"Give me the military force of the force, that is a societal event and an event and a military conflict, of Francisco Franco.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v0 . ?v0 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Franco> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?militaryForce WHERE {
  ?franco rdf:type dbo:Person ;
          foaf:name ""Francisco Franco""@en .
  
  ?franco dbo:commander ?militaryForce .

  ?militaryForce rdf:type/rdfs:subClassOf*+ (dbo:SocietalEvent dbo:MilitaryConflict) .
}
```",2,5,3,2,1,3,3,71,0,0,545,0,0.0,0
666,3,train,"Give me the manager, that is a sports manager, of 2016–17 Hull City A.F.C. season.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. <http://dbpedia.org/resource/2016–17_Hull_City_A.F.C._season> <http://dbpedia.org/ontology/manager> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?manager WHERE {
  ?team a dbo:FootballClub ;
        dbo:officialWebsite ?website .
  
  FILTER(CONTAINS(LCASE(?website), ""hullcityafc.com"")) # Ensures we are dealing with Hull City A.F.C.

  ?team dbo:manager ?manager .

  OPTIONAL { ?manager dbo:occupation ?occupation . }
  OPTIONAL {
    ?managerStartYear dbo:startYear ?startYear .
    ?managerEndYear dbo:endYear ?endYear .
    FILTER(?startYear <= 2016 && (?endYear >= 2017 || NOT EXISTS { ?managerEndYear } ))
  }

  FILTER(EXISTS { ?occupation rdfs:label ""sports manager""@en }) # Ensures the occupation is sports manager
}
```",1,2,2,1,1,3,2,20,0,0,4,0,0.0,0
232,5,train,"Give me the professional in Actor, narrator and producer.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Actor, narrator and producer""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT DISTINCT ?person WHERE {
  ?person dbo:occupation ?occupation .
  FILTER (
    EXISTS { ?person dbo:occupation dbp:Actor . }
    && EXISTS { ?person dbo:occupation dbp:Narrator . }
    && EXISTS { ?person dbo:occupation dbp:Producer . }
  )
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
179,0,train,Give me the person born as Mom Rajawongse Sirikit Kitiyakara.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Mom Rajawongse Sirikit Kitiyakara""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person ?fullName WHERE {
  ?person dbo:birthName ""Mom Rajawongse Sirikit Kitiyakara""@en .
  OPTIONAL { ?person foaf:name ?fullName }
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
318,1,train,Give me the professional in Composer.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/Composer> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?composerLabel WHERE {
  ?composer rdf:type dbo:Composer .
  ?composer rdfs:label ?composerLabel .
  FILTER (lang(?composerLabel) = 'en')
}
ORDER BY ?composerLabel
```",1,1,2,1,1,2,2,9,0,0,1916,0,0.0,0
838,10,train,"Give me the band, that is a group, of the reference, that is a group and an organisation, to YU Grupa.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""YU Grupa""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band WHERE {
  ?association a dbo:Association .
  ?association dbo:associatedBand dbr:YU_Grupa .
  ?association dbo:associatedBand ?band .
  FILTER (rdf:type(?band, dbo:Band) && rdf:type(?band, dbo:MusicalGroup))
}
```",2,5,3,2,1,3,2,20,0,0,8,0,0.0,0
9,12,train,Give me the figure known as QUB and alma mater of Allen Hill (scientist).,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ""QUB""@en . <http://dbpedia.org/resource/Allen_Hill_(scientist)> <http://dbpedia.org/ontology/almaMater> ?result . }","```sparql
PREFIX wd: <http://www.wikidata.org/entity/>
PREFIX wdt: <http://www.wikidata.org/prop/direct/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?qub ?almaMater WHERE {
  # Find the entity known as QUB
  wd:QUB rdfs:label ?qubLabel .
  FILTER (lang(?qubLabel) = 'en' && regex(str(?qubLabel), ""Queen's University Belfast"", ""i""))

  # Find Allen Hill and his alma mater
  ?allenHill wdt:P31/wdt:P279* wd:Q36180 ; # Allen Hill is a scientist
             wdt:P69 ?almaMater . # Alma mater (institution where studied)
  FILTER EXISTS { ?allenHill rdfs:label ?nameLabel .
                 FILTER (lang(?nameLabel) = 'en' && regex(str(?nameLabel), ""Allen Hill"", ""i"")) }
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
9,16,train,"Who is the awardee of the reference, that is an award, to Royal Medals?","SELECT ?result WHERE { ?v1 <http://xmlns.com/foaf/0.1/name> ""Royal Medals""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?result <http://dbpedia.org/property/awards> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?awardee WHERE {
  ?award a dbo:Award ;
        rdfs:label ""Royal Medal""@en .
  
  ?recipient dbo:recipient ?award .
  ?recipient foaf:name ?awardee .
}
```",2,3,3,2,1,3,3,71,0,0,45,0,0.0,0
328,11,train,"Give me the awardee of the award of Bruce Fraser, 1st Baron Fraser of North Cape.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape> <http://dbpedia.org/property/awards> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?recipient WHERE {
    ?award a dbo:Award ;
           rdfs:label ""Victoria Cross""@en .
    
    ?award dbo:recipient ?recipient .

    FILTER EXISTS { 
        ?recipient rdfs:label ""Bruce Fraser, 1st Baron Fraser of North Cape""@en .
    }
}
```",2,2,3,2,1,3,3,71,0,0,1484,0,0.0,0
915,3,train,"Give me the birthplace, that is a settlement, of Stephen Verona.",SELECT ?result WHERE { <http://dbpedia.org/resource/Stephen_Verona> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthPlaceName ?birthPlaceURI
WHERE {
  ?person a dbo:Person ;
          foaf:name ""Stephen Verona""@en .
  
  ?person dbo:birthPlace ?birthPlace .

  ?birthPlace a dbo:Settlement ;
              rdfs:label ?birthPlaceName ;
              owl:sameAs ?birthPlaceURI .

  FILTER (lang(?birthPlaceName) = 'en')
}
```",1,2,2,1,1,3,2,20,0,7,1,0.0,0.0,0
55,4,train,"Give me the band member, that is a band and a group, of San Francisco Symphony.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/San_Francisco_Symphony> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. },"```sparql
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?memberName WHERE {
  ?symphony rdfs:label ""San Francisco Symphony""@en .
  ?symphony dbo:musicGroupMember ?member .

  ?member foaf:name ?memberName .
  
  OPTIONAL { 
    ?member dbo:memberOf ?band .
    ?band rdf:type ?bandType .
    FILTER (
      ?bandType = dbpedia-owl:MusicalBand ||
      ?bandType = dbpedia-owl:MusicGroup
    )
  }
}
```",1,3,2,1,1,2,3,28,0,0,3,0,0.0,0
345,1,train,Give me the team of Alessandro Mangiarratti.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Alessandro_Mangiarratti> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?team WHERE {
  ?person foaf:name ""Alessandro Mangiarratti""@en .
  ?person dbo:team ?team .
}
```",1,1,2,1,1,3,2,20,1,7,1,0.125,0.5,0.2
55,6,train,Give me the band member of Metallica and band member of Guns N' Roses.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Guns_N'_Roses> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Metallica> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?person WHERE {
  ?metallicaMember dbo:bandMember ?person .
  FILTER (str(?metallicaMember) = ""Metallica""^^xsd:string)
  
  ?gunsNRosesMember dbo:bandMember ?person .
  FILTER (str(?gunsNRosesMember) = ""Guns N' Roses""^^xsd:string)
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
827,2,train,"Who is the parent of Charles Alexander, Grand Duke of Saxe-Weimar-Eisenach?","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Charles_Alexander,_Grand_Duke_of_Saxe-Weimar-Eisenach> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parent WHERE {
  ?child dbo:child ?parent .
  ?child rdfs:label ""Charles Alexander, Grand Duke of Saxe-Weimar-Eisenach""@en .
}
```",1,1,2,1,1,3,2,20,0,3,2,0.0,0.0,0
547,12,train,Give me the resting place of Simon Cadell and resting place of Alan Cunningham.,SELECT ?result WHERE { <http://dbpedia.org/resource/Simon_Cadell> <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Alan_Cunningham> <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?deathPlace WHERE {
  VALUES ?person { 
    dbr:Simon_Cadell 
    dbr:Alan_Cunningham_(actor)
  }
  ?person dbo:deathPlace ?deathPlace .
}
```",2,2,3,1,2,3,3,71,0,0,2,0,0.0,0
92,4,train,"Give me the reference, that is an artist, to Nevermore.","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Nevermore""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artist WHERE {
  ?song dbo:title ""Nevermore""@en .
  ?song dbo:artist ?artist .
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
378,12,train,"Give me the war of Joaquín Blake and claim to fame of Louis des Balbes de Berton de Crillon, 1st Duke of Mahón.","SELECT ?result WHERE { <http://dbpedia.org/resource/Joaquín_Blake> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Louis_des_Balbes_de_Berton_de_Crillon,_1st_Duke_of_Mahón> <http://dbpedia.org/ontology/knownFor> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?joaquinBlakeWar ?crillonClaimToFame
WHERE {
  ?joaquinBlake a dbo:Person ;
                foaf:name ""Joaquín Blake"" ;
                dbp:participatedInWar ?joaquinBlakeWar .
  
  OPTIONAL { 
    ?crillon a dbo:Person ;
             foaf:name ""Louis des Balbes de Berton de Crillon, 1st Duke of Mahón"" ;
             (dbo:notableWork|dbo:award) ?crillonClaimToFame .
  }
}
```",2,2,3,1,2,3,3,71,0,0,2,0,0.0,0
645,1,train,Give me the alma mater of Sylvia Pankhurst.,SELECT ?result WHERE { <http://dbpedia.org/resource/Sylvia_Pankhurst> <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?almaMaterName WHERE {
  ?person rdfs:label ""Sylvia Pankhurst""@en .
  ?person dbo:almaMater ?institution .
  ?institution rdfs:label ?almaMaterName .
  FILTER(LANG(?almaMaterName) = 'en')
}
```",1,1,2,1,1,3,2,20,0,2,2,0.0,0.0,0
427,3,train,Give me the party of Michele Pinto.,SELECT ?result WHERE { <http://dbpedia.org/resource/Michele_Pinto> <http://dbpedia.org/ontology/party> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?partyName WHERE {
  ?person dbo:name ""Michele Pinto""@en .
  ?person dbp:party ?party .
  ?party rdfs:label ?partyName .
  FILTER(LANG(?partyName) = 'en')
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
498,6,train,"Give me the band of the member, that is an artist, of Mortician (band).",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Mortician_(band)> <http://dbpedia.org/ontology/bandMember> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?memberBand WHERE {
  # Find the DBpedia resource for Mortician as a band
  ?mortician dbp:name ""Mortician""@en .
  
  # Retrieve members of Mortician
  ?member dbo:bandMember ?mortician .

  # Filter members who are also artists
  ?member dbo:artist true .

  # Find other bands that this member belongs to, excluding Mortician
  ?member dbo:bandMember ?memberBand .
  FILTER (?memberBand != ?mortician)
}
```",2,3,3,2,1,2,2,9,0,0,2,0,0.0,0
44,1,train,Give me the band member of Sledgeback.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Sledgeback> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?member WHERE {
  ?band a dbo:Band ;
        foaf:name ""Sledgeback""@en .
  ?band dbo:bandMember ?member .
  FILTER (?member a foaf:Person)
}
```",1,1,2,1,1,2,2,9,0,0,8,0,0.0,0
281,15,train,Who is the awardee of the award of Jonathon Band?,SELECT ?result WHERE { <http://dbpedia.org/resource/Jonathon_Band> <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/property/awards> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?awardee WHERE {
  ?jonathonBand a dbo:Person ;
                foaf:name ""Jonathon Band""@en .
  
  ?award dbo:recipient ?jonathonBand .

  ?award dbo:recipient ?awardee .
  FILTER(?awardee != ?jonathonBand)
}
```",2,2,3,2,1,3,3,71,0,0,558,0,0.0,0
435,3,train,"Give me the figure known, that is a settlement and a town and Icelandic, as Land of fire and ice.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ""Land of fire and ice""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Town>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Iceland>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?town WHERE {
  ?town a dbo:Settlement ;
        dbo:settlementType dbr:Town ;
        dbo:location dbr:Iceland .
}
```",1,4,2,1,1,2,3,28,0,0,1,0,0.0,0
421,10,train,Give me the native of the birthplace of Samir Bekrić.,SELECT ?result WHERE { <http://dbpedia.org/resource/Samir_Bekrić> <http://dbpedia.org/ontology/birthPlace> ?v0 . ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?nativeLanguage
WHERE {
  ?samirBekric a dbo:Person ;
               foaf:name ""Samir Bekrić""@en .
  
  ?samirBekric dbo:birthPlace ?birthplace .

  ?birthplace dbp:officialLanguages ?language .
  ?language rdfs:label ?nativeLanguage .
  FILTER (lang(?nativeLanguage) = 'en')
}
```",2,2,3,2,1,2,3,28,0,0,5492,0,0.0,0
659,12,train,Give me the military force of Napoleonic Wars and commander in Battle of Leipzig.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Napoleonic_Wars> . <http://dbpedia.org/resource/Battle_of_Leipzig> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?militaryForce ?commander WHERE {
  # Find military forces involved in the Napoleonic Wars
  ?militaryForce dbo:partOf ?event .
  ?event rdfs:label ""Napoleonic Wars""@en .

  OPTIONAL {
    # Find commanders of the Battle of Leipzig
    ?battle dbp:name ""Battle of Leipzig""@en ;
            dbp:commander ?commander .
  }
}
```",2,2,3,1,2,3,3,71,0,0,5,0,0.0,0
712,1,train,Give me the resting place of Nina Onilova.,SELECT ?result WHERE { <http://dbpedia.org/resource/Nina_Onilova> <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?restingPlace WHERE {
  ?person a dbo:Person ;
          foaf:name ""Nina Onilova""@en .
  ?person dbo:finalRestingPlace ?restingPlace .
}
```",1,1,2,1,1,3,2,20,0,0,2,0,0.0,0
959,6,train,"Give me the residence, that is a country, of Yōichi Masuzoe.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Yōichi_Masuzoe> <http://dbpedia.org/property/residence> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX schema: <http://schema.org/>

SELECT ?residence WHERE {
  ?person dbo:name ""Yōichi Masuzoe""@en .
  ?person dbo:residence ?residence .
  FILTER EXISTS { ?residence rdf:type schema:Country }
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
712,2,train,"Give me the military force, that is an organisation and a military unit, of Vyoshenskaya Uprising.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Vyoshenskaya_Uprising> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce WHERE {
  ?uprising dbo:wikiPageRedirects dbr:Vyoshenskaya_Uprising .
  ?uprising dbo:militaryConflictOf ?conflict .
  ?conflict dbo:participatingMilitaryUnitOrFormations ?militaryForce .
  ?militaryForce a dbo:MilitaryUnit ;
                 a dbo:Organisation .
}
```",1,3,2,1,1,3,2,20,0,0,1,0,0.0,0
783,3,train,Give me the band member of Ofori Amponsah.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Ofori_Amponsah> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?member WHERE {
  ?band a dbo:MusicalBand ;
        rdfs:label ""Ofori Amponsah""@en .
  ?band dbo:bandMember ?member .
}
```",1,1,2,1,1,3,2,20,0,0,5,0,0.0,0
232,17,train,"Give me the residence, that is a settlement and British, of the native, that is a politician and an office holder, of France.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/France> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://dbpedia.org/property/residence> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?residence WHERE {
  ?person rdf:type dbo:Politician ;
          dbo:nationality dbp:Francois ; # Assuming 'Francois' is a placeholder for French nationality
          dbo:officeHolderOf ?office .
  
  ?person dbo:residence ?residence .

  ?residence rdf:type dbo:Settlement ;
             dbo:country dbr:United_Kingdom . # Ensuring the settlement is in the UK

  FILTER EXISTS { ?person dbo:nationality dbp:Francois } # Filter for French nationality
}
```",2,6,3,2,1,3,3,71,0,0,2,0,0.0,0
179,10,train,Who is the child of the parent of Vajiralongkorn?,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Vajiralongkorn> . ?v0 <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?child
WHERE {
  ?vajiralongkorn dbo:parent ?parent .
  FILTER(STR(?vajiralongkorn) = ""Vajiralongkorn"")
  
  ?parent dbo:child ?child .
}
```",2,2,3,2,1,3,2,20,0,0,4,0,0.0,0
10,10,train,"Give me the band member of the person born, that is an artist, as Luke Francis Vibert.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ""Luke Francis Vibert""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?bandMember
WHERE {
  ?person a foaf:Person ;
          foaf:name ""Luke Francis Vibert"" ;
          dbo:birthDate ?birthDate ;
          dbo:occupation ?occupation .
  
  FILTER EXISTS { ?person dbo:birthDate ?birthDate }
  FILTER CONTAINS(LCASE(?occupation), ""artist"")

  ?band ?bandMember ?person .
}
```",2,3,3,2,1,2,3,28,0,0,3,0,0.0,0
783,1,train,Give me the band member of Ebony Reigns.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Ebony_Reigns> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?bandMember WHERE {
  ?ebony a dbo:Singer ;
         rdfs:label ""Ebony Reigns""@en .
  
  OPTIONAL { 
    ?ebony dbo:memberOfBand ?band .
    ?band dbo:bandMember ?bandMember .
  }
}
```",1,1,2,1,1,3,2,20,0,0,7,0,0.0,0
232,0,train,Give me the child of Jon Pertwee.,SELECT ?result WHERE { <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child WHERE {
  ?person a dbo:Person ;
          foaf:name ""Jon Pertwee""@en .
  OPTIONAL { ?person dbo:child ?child . }
}
```",1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
182,4,train,Give me the work of Gotabhaya Rajapaksa.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Gotabhaya_Rajapaksa> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?work WHERE {
  ?person foaf:name ""Gotabhaya Rajapaksa""@en .
  ?person dbo:work ?work .
}
```",1,1,2,1,1,2,3,28,0,0,1,0,0.0,0
391,1,train,Give me the actor of The Departed.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Departed> <http://dbpedia.org/ontology/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  ?film rdf:type dbo:Film .
  ?film rdfs:label ""The Departed""@en .
  FILTER NOT EXISTS { ?film owl:sameAs+ ?other . }
  
  ?film dbo:starring ?actor .
}
```",1,1,2,1,1,3,3,71,0,0,9,0,0.0,0
547,2,train,Give me the resting place of Alan Cunningham.,SELECT ?result WHERE { <http://dbpedia.org/resource/Alan_Cunningham> <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?restingPlace WHERE {
  ?person a dbo:Person ;
          foaf:name ""Alan Cunningham""@en .
  OPTIONAL { ?person dbo:burialPlace ?restingPlace . }
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
142,5,train,Give me the entity in the region of Japan Standard Time.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Japan_Standard_Time> . ?result <http://dbpedia.org/ontology/country> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity WHERE {
  ?entity dbo:country dbr:Japan .
}
```",2,2,3,2,1,2,2,9,8916,0,6,1.0,0.9993275050437121,0.9996636394214597
981,7,train,Give me the entity in the region of Time in Indonesia.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Time_in_Indonesia> . ?result <http://dbpedia.org/ontology/country> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?entity WHERE {
  ?entity dbo:location ?location .
  ?location rdfs:label ""Time""@en .
  OPTIONAL { ?entity dbp:country ?country . }
  FILTER (lang(?location) = 'en' && str(?country) = ""Indonesia"")
}
```",2,2,3,2,1,3,2,20,0,0,2949,0,0.0,0
659,9,train,Give me the commander in German campaign of 1813 and commander in Battle of Leipzig.,SELECT ?result WHERE { <http://dbpedia.org/resource/Battle_of_Leipzig> <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/German_campaign_of_1813> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commander WHERE {
  # Commanders in the German Campaign of 1813
  VALUES ?campaignEvent { 
    dbr:German_Campaign_of_1813 
  }
  
  ?event dbo:partOf ?campaignEvent .
  ?event dbo:commander ?commander .

  UNION

  # Commanders in the Battle of Leipzig
  VALUES ?battleEvent {
    dbr:Battle_of_Leipzig
  }

  ?battleEvent dbo:commander ?commander .
}
```",2,2,3,1,2,3,3,71,0,0,16,0,0.0,0
465,5,train,Give me the death place of the native of Prague.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/deathPlace> ?result . ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Prague> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?deathPlace
WHERE {
  ?person dbo:birthPlace dbr:Prague .
  ?person dbo:deathPlace ?deathPlace .
}
```",2,2,3,2,1,2,2,9,254,484,0,0.34417344173441733,1.0,0.5120967741935484
963,9,train,"Give me the region, that is a country, of the time zone of Herzegovina-Neretva Canton.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/timeZone> ?v0 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Herzegovina-Neretva_Canton> <http://dbpedia.org/property/timeZone> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?country WHERE {
  ?canton a dbo:Canton ;
          rdfs:label ""Herzegovina-Neretva Canton""@en .
  
  ?canton dbo:timeZone ?timezone .

  ?timezone dbo:region ?country .
}
```",2,3,3,2,1,3,2,20,0,0,56,0,0.0,0
801,1,train,Give me the producer of Westside Story (song).,SELECT ?result WHERE { <http://dbpedia.org/resource/Westside_Story_(song)> <http://dbpedia.org/ontology/producer> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?producer WHERE {
  dbr:Westside_Story_(song) dbo:producer ?producer .
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
617,16,train,"Who is the child of the successor, that is a royalty, of Antiochus (son of Antiochus III the Great)?",SELECT ?result WHERE { <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/successor> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child WHERE {
  # Step 1: Identify Antiochus III the Great
  ?antiochusIII a dbo:Person ;
                rdfs:label ""Antiochus III the Great""@en .

  # Step 2: Find his son named Antiochus
  ?son a dbo:Person ;
       dbo:childOf ?antiochusIII ;
       rdfs:label ?name .
  FILTER(CONTAINS(LCASE(?name), ""antiochus""))

  # Step 3: Determine the successor of this Antiochus
  ?successor a dbo:Person ;
             dbo:successor ?son .

  # Step 4: Check if the successor is royalty (using title or role)
  OPTIONAL { ?successor dbp:title ?title . }
  FILTER(CONTAINS(LCASE(?title), ""king"") || CONTAINS(LCASE(?title), ""queen""))

  # Step 5: Identify the child of this royal successor
  ?child a dbo:Person ;
         dbo:childOf ?successor .
}
```",2,3,3,2,1,3,3,71,0,0,6,0,0.0,0
820,7,train,Give me the professional in the award of Scott McCloud.,SELECT ?result WHERE { <http://dbpedia.org/resource/Scott_McCloud> <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?profession 
WHERE {
  dbpedia:Scott_McCloud dbo:occupation ?profession .
}
```",2,2,3,2,1,3,2,20,0,0,39650,0,0.0,0
617,6,train,Give me the parent of Mieszko II Lambert and child of Doubravka of Bohemia.,SELECT ?result WHERE { <http://dbpedia.org/resource/Doubravka_of_Bohemia> <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Mieszko_II_Lambert> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?individual
WHERE {
  ?individual dbo:childOf dbr:Doubravka_of_Bohemia .
  ?individual dbo:parent dbr:Mieszko_II_Lambert .
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
801,0,train,Give me the professional in .,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
# No valid SPARQL query can be generated due to lack of specific details in the question.
```",1,1,2,1,1,3,3,71,0,0,39640,0,0.0,0
328,13,train,Give me the commander in the force of Ferenc Szálasi.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Ferenc_Szálasi> . ?v1 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?force WHERE {
  ?szalasi a dbo:Person ;
           foaf:name ""Ferenc Szálasi""@en .
  
  OPTIONAL { ?szalasi dbp:leader ?force . }
  FILTER EXISTS { ?force a dbo:MilitaryUnit } 
}
```",2,2,3,2,1,3,3,71,0,0,73,0,0.0,0
391,4,train,Give me the figure known as Hub City.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ""Hub City""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?city WHERE {
  ?city dbo:nickname ?nickname .
  FILTER (CONTAINS(LCASE(?nickname), ""hub city""))
}
```",1,1,2,1,1,3,3,71,0,0,4,0,0.0,0
659,14,train,"Give me the military force of the force, that is a societal event and an event and a military conflict, of Rutger Jan Schimmelpenninck.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> . ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce WHERE {
  ?person a dbo:Person ;
          foaf:name ""Rutger Jan Schimmelpenninck""@en .
  
  ?person dbo:militaryService ?militaryForce .

  ?event1 a dbo:SocietalEvent ;
          dbo:agent ?militaryForce .
  
  ?event2 a dbo:Event ;
          dbo:agent ?militaryForce .
  
  ?event3 a dbo:MilitaryConflict ;
          dbo:agent ?militaryForce .

  FILTER(?person = dbr:Rutger_Jan_Schimmelpenninck)
}
```",2,5,3,2,1,3,3,71,0,0,1127,0,0.0,0
617,17,train,Who is the child of the commander in Battle of Panium?,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Battle_of_Panium> <http://dbpedia.org/ontology/commander> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  ?battle a dbo:Battle .
  ?battle rdfs:label ""Battle of Panium""@en .
  
  ?battle dbo:commander ?commander .

  ?commander dbo:child ?child .
}
```",2,2,3,2,1,3,3,71,0,0,7,0,0.0,0
360,8,train,"Give me the writer of the work, that is an album, of Dave Flett.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Album>. ?v1 <http://dbpedia.org/property/author> ""Dave Flett""@en . ?v1 <http://dbpedia.org/property/writer> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?album WHERE {
  ?person foaf:name ""Dave Flett"" .
  ?album dbo:writer ?person ;
         a dbo:Album .
}
```",2,3,3,2,1,2,3,28,0,0,8,0,0.0,0
294,6,train,"Give me the resting place of Luke Lea (American politician, born 1879) and resting place of Edwin A. Keeble.","SELECT ?result WHERE { <http://dbpedia.org/resource/Edwin_A._Keeble> <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Luke_Lea_(American_politician,_born_1879)> <http://dbpedia.org/ontology/restingPlace> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?lukeLeaBurialPlace ?edwinABurialPlace
WHERE {
  ?lukeLea a dbo:Politician ;
           dbp:birthday ""1879-01-01""^^xsd:date ;
           dbo:burialPlace ?lukeLeaBurialPlace .
  
  ?edwinA a dbo:Person ;
          rdfs:label ""Edwin A. Keeble""@en ;
          dbo:deathPlace ?edwinABurialPlace .
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
184,0,train,Give me the parent of Géza von Habsburg.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Géza_von_Habsburg> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parent WHERE {
  ?person dbp:name ""Géza von Habsburg""@en .
  OPTIONAL { ?person dbo:parent ?parent . }
}
```",1,1,2,1,1,3,3,71,2,0,0,1.0,1.0,1.0
328,3,train,Who is the commander in Volcano and Ryukyu Islands campaign?,SELECT ?result WHERE { <http://dbpedia.org/resource/Volcano_and_Ryukyu_Islands_campaign> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?commander WHERE {
  ?campaign a dbo:MilitaryOperation ;
            rdfs:label ""Volcano and Ryukyu Islands campaign""@en .
  ?campaign dbp:commander ?commander .
}
```",1,1,2,1,1,3,3,71,0,0,20,0,0.0,0
626,0,train,Give me the commander in Battle of Leipzig.,SELECT ?result WHERE { <http://dbpedia.org/resource/Battle_of_Leipzig> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?commander WHERE {
  ?battle a dbo:Battle .
  ?battle rdfs:label ""Battle of Leipzig""@en .
  ?battle dbp:commander ?commander .
}
```",1,1,2,1,1,3,2,20,0,0,21,0,0.0,0
838,3,train,"Give me the band member, that is an artist and a musical artist, of YU Grupa.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/YU_Grupa> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?member WHERE {
  ?member dbp:bandMember <http://dbpedia.org/resource/YU_Grupa> .
  ?member dbo:occupation ?occupation .
  FILTER (
    EXISTS { ?member dbo:occupation dbo:Artist . }
    && EXISTS { ?member dbo:occupation dbo:MusicalArtist . }
  )
}
```",1,3,2,1,1,3,2,20,0,0,4,0,0.0,0
747,8,train,Who is the person born as Tracey Elizabeth McSween?,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Tracey Elizabeth McSween""@en . }","```sparql
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
SELECT ?person WHERE {
  ?person a foaf:Person .
  ?person foaf:givenName ?firstName .
  ?person foaf:familyName ?lastName .
  FILTER (str(?firstName) + "" "" + str(?lastName) = ""Tracey Elizabeth McSween"")
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
345,6,train,Give me the figure known as Stolz von Liechtenstein and team of Alessandro Mangiarratti.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ""Stolz von Liechtenstein""@en . ?result <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Alessandro_Mangiarratti> . }","```sparql
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?horse ?trainer WHERE {
  ?horse a dbo:Horse ;
         rdfs:label ""Stolz von Liechtenstein""@en .
  
  OPTIONAL { 
    ?horse dbp:trainer ?trainer .
    FILTER (langMatches(lang(?trainer), ""EN""))
  }
  
  VALUES ?trainerName { ""Alessandro Mangiarratti"" }
  
  FILTER (?trainer != '' && str(?trainer) = ?trainerName)
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
801,8,train,"Give me the writer, that is a musical artist and an artist, of 40 Dayz & 40 Nightz.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/40_Dayz_&_40_Nightz> <http://dbpedia.org/property/writer> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"```sparql
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?writer WHERE {
  ?song dbp:title ""40 Dayz & 40 Nightz"" .
  ?song dbp:lyrics ?lyrics .
  ?lyrics dbo:author ?writer .

  # Ensure the writer is a musical artist
  OPTIONAL { ?writer dbo:musicalArtist ?musicalArtist . }

  # Ensure the writer is an artist (broad sense)
  OPTIONAL { ?writer dbo:artist ?artist . }
}
```",1,3,2,1,1,3,3,71,0,0,12,0,0.0,0
666,7,train,"Give me the player in the manager, that is a sports manager, of 2016–17 Hull City A.F.C. season.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/2016–17_Hull_City_A.F.C._season> <http://dbpedia.org/ontology/manager> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?manager WHERE {
    ?team dbo:season ""2016–17"" .
    ?team rdfs:label ""Hull City A.F.C.""@en .
    
    ?manager dbo:position ""Manager""@en ;
             dbo:managedTeam ?team .

    OPTIONAL { 
        ?player dbo:playedFor ?team ;
                dbo:position ""Player""@en ;
                foaf:name ?name .
        
        FILTER (?manager = ?player)
    }
}
```",2,3,3,2,1,3,2,20,0,0,22,0,0.0,0
345,9,train,"Give me the nickname of the player, that is a sports club and an organisation and a soccer club, in Armando Heeb.",SELECT ?result WHERE { <http://dbpedia.org/resource/Armando_Heeb> <http://dbpedia.org/ontology/team> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v0 <http://dbpedia.org/property/nickname> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?nickname WHERE {
  ?player dbo:name ""Armando Heeb""@en .
  ?player dbo:playsFor ?club .
  
  FILTER EXISTS { ?club rdf:type dbo:SportsClub . }
  FILTER EXISTS { ?club rdf:type dbo:Organization . }
  FILTER EXISTS { ?club rdf:type dbo:FootballClub . }

  OPTIONAL { ?club rdfs:label ?nickname . FILTER (lang(?nickname) = ""en"") }
}
```",2,5,3,2,1,3,2,20,0,0,3,0,0.0,0
981,4,train,Give me the author of Kamikaze Girls.,SELECT ?result WHERE { <http://dbpedia.org/resource/Kamikaze_Girls> <http://dbpedia.org/property/author> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?author WHERE {
  ?book rdfs:label ""Kamikaze Girls""@en .
  ?book dbo:author ?author .
}
```",1,1,2,1,1,3,2,20,1,0,2,1.0,0.3333333333333333,0.5
391,6,train,"Give me the claim to fame, that is a work, of Michael Ballhaus.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Michael_Ballhaus> <http://dbpedia.org/ontology/knownFor> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?work WHERE {
  ?person rdfs:label ""Michael Ballhaus""@en .
  ?person a dbo:Cinematographer .
  ?film dbo:cinematographer ?person ;
        a dbo:Film .
  BIND(?film AS ?work)
}
LIMIT 1
```",1,2,2,1,1,3,3,71,0,0,4,0,0.0,0
9,10,train,"Give me the figure known as QUB and alma mater of John Alderdice, Baron Alderdice.","SELECT ?result WHERE { <http://dbpedia.org/resource/John_Alderdice,_Baron_Alderdice> <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://dbpedia.org/property/nickname> ""QUB""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?university WHERE {
  VALUES ?qub { <http://dbpedia.org/resource/QUB> }
  
  ?person a dbo:Person ;
          foaf:name ""John Alderdice"" ;
          dbp:title ""Baron Alderdice""@en .
  
  ?person dbo:almaMater ?university .

  FILTER (?university = ?qub)
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
197,2,train,Who is the member of FC Politehnica Timișoara?,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/FC_Politehnica_Timișoara> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?member WHERE {
  ?team rdfs:label ""FC Politehnica Timișoara""@en .
  ?team dbo:member ?member .
}
```",1,1,2,1,1,2,2,9,0,0,572,0,0.0,0
54,5,train,Give me the parent of Thado Minsaw of Prome.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?parentName
WHERE {
  ?person a dbo:Person ;
          foaf:name ""Thado Minsaw""@en .
  ?person dbo:parent ?parent .
  ?parent foaf:name ?parentName .
}
```",1,1,2,1,1,3,3,71,0,5,2,0.0,0.0,0
182,6,train,Give me the war of Mahesh Senanayake and war of Jagath Dias.,SELECT ?result WHERE { <http://dbpedia.org/resource/Jagath_Dias> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Mahesh_Senanayake> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?war WHERE {
  VALUES ?person { 
    dbr:Mahesh_Senanayake 
    dbr:Jagath_Dias 
  }
  
  ?person dbo:participatedIn ?war .
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
778,7,train,Give me the entity in the award of Ralph L. Brinster.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ralph_L._Brinster> <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/ontology/location> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?award WHERE {
  ?person rdf:type dbo:Person .
  ?person rdfs:label ""Ralph L. Brinster""@en .
  ?person dbo:award ?award .
}
```",2,2,3,2,1,3,2,20,0,9,18629,0.0,0.0,0
179,5,train,Who is the child of Bhumibol Adulyadej?,SELECT ?result WHERE { <http://dbpedia.org/resource/Bhumibol_Adulyadej> <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?child
WHERE {
  ?child dbo:parent dbr:Bhumibol_Adulyadej .
}
```",1,1,2,1,1,3,2,20,4,0,0,1.0,1.0,1.0
54,13,train,Give me the parent of the child of Narapati I of Ava.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Narapati_I_of_Ava> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT DISTINCT ?grandParent WHERE {
  ?narapatiI dbo:child ?child .
  FILTER (str(?narapatiI) = ""Narapati I of Ava"") .

  ?child dbo:parent ?grandParent .
}
```",2,2,3,2,1,3,3,71,0,0,2,0,0.0,0
303,5,train,"Who is the person born, that is a politician, as Arnulfo Arias Madrid?","SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Arnulfo Arias Madrid""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  # Get Arnulfo Arias Madrid's birth details
  dbr:Arnulfo_Arias_Madrid dbo:birthDate ?birthDate .
  dbr:Arnulfo_Arias_Madrid dbo:birthPlace ?birthPlace .

  # Find other individuals with the same birth date and place
  ?person a dbo:Person ;
          dbo:birthDate ?birthDate ;
          dbo:birthPlace ?birthPlace .

  # Filter to include only politicians
  ?person dbo:occupation dbr:Politician .
  
  FILTER(?person != dbr:Arnulfo_Arias_Madrid) # Exclude Arnulfo Arias Madrid himself
}
```",1,2,2,1,1,2,3,28,0,0,1,0,0.0,0
534,5,train,Give me the owner of RDS Arena.,SELECT ?result WHERE { <http://dbpedia.org/resource/RDS_Arena> <http://dbpedia.org/ontology/owner> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?owner WHERE {
  dbr:RDS_Arena dbo:operator ?owner .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
767,1,train,Give me the alma mater of Carl L. Nippert.,SELECT ?result WHERE { <http://dbpedia.org/resource/Carl_L._Nippert> <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?university WHERE {
  ?person dbp:name ""Carl L. Nippert""@en .
  ?person dbo:almaMater ?university .
}
```",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
963,1,train,Give me the administration of Serbian Progressive Party.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Serbian_Progressive_Party> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person ?role WHERE {
  ?party a dbo:PoliticalParty ;
         foaf:name ""Serbian Progressive Party""@en .
  
  ?person dbo:memberOf ?party .

  OPTIONAL { 
    ?person dbp:primeMinisterOf ?country .
    BIND(""Prime Minister"" AS ?role)
  }
  
  OPTIONAL {
    ?person dbp:presidentOf ?country .
    BIND(""President"" AS ?role)
  }

  FILTER(?role != """")
}
```",1,1,2,1,1,3,2,20,0,0,86,0,0.0,0
345,4,train,Give me the birth date of Eiður Guðjohnsen.,SELECT ?result WHERE { <http://dbpedia.org/resource/Eiður_Guðjohnsen> <http://dbpedia.org/ontology/birthDate> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?birthDate WHERE {
  dbpedia:Eiður_Guðjohnsen dbo:birthDate ?birthDate .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
10,6,train,Give me the associated musical artist of Matt Colton and band member of Luke Vibert.,SELECT ?result WHERE { <http://dbpedia.org/resource/Matt_Colton> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Luke_Vibert> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?artist WHERE {
  # Find the musical artist associated with Matt Colton
  ?entity foaf:name ""Matt Colton""@en .
  ?entity foaf:associatedMusicalArtist ?artist .

  UNION

  # Find a band member of Luke Vibert
  ?entity foaf:name ""Luke Vibert""@en .
  ?entity dbo:bandMemberOf ?band .
  ?band dbo:member ?artist .
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
391,3,train,"Give me the nick name of Jackson, Tennessee.","SELECT ?result WHERE { <http://dbpedia.org/resource/Jackson,_Tennessee> <http://xmlns.com/foaf/0.1/nick> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?nickname WHERE {
  ?city rdfs:label ""Jackson, Tennessee""@en .
  ?city dbo:nickname ?nickname .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
696,2,train,"Give me the associated musical artist, that is an organisation and a group and a band, of The Boils.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/The_Boils> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?associatedArtist
WHERE {
  ?boils a dbo:Band ;
         dbp:name ""The Boils""@en .
  
  ?boils dbo:associatedBand ?associatedArtist .

  FILTER (
    ?associatedArtist a ?class .
    (?class = dbo:Organization || 
     ?class = dbo:MusicalGroup ||
     ?class = dbo:Band)
  )
}
```",1,4,2,1,1,3,2,20,0,0,2,0,0.0,0
994,16,train,"Give me the band member, that is a band and a group and an organisation, of the band, that is an organisation, of Fredrik Thordendal.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Fredrik_Thordendal> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?member WHERE {
  ?band rdf:type dbo:Band ;
        dbo:member ?person .
  ?person rdfs:label ""Fredrik Thordendal""@en .

  FILTER EXISTS { ?band rdf:type dbo:Organization . }

  ?member dbo:memberOf ?band ;
          rdf:type dbo:Band, dbo:Group, dbo:Organization .
}
```",2,6,3,2,1,3,3,71,0,0,6,0,0.0,0
492,3,train,Give me the author of French Algeria.,SELECT ?result WHERE { <http://dbpedia.org/resource/French_Algeria> <http://dbpedia.org/property/author> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?author WHERE {
  ?work rdfs:label ?label .
  FILTER(CONTAINS(LCASE(?label), ""french algeria"")) .
  
  ?work dbo:subject ?topic .
  ?topic rdfs:label ?topicLabel .
  FILTER(CONTAINS(LCASE(?topicLabel), ""algeria"") || CONTAINS(LCASE(?topicLabel), ""france"")) .

  ?work dbo:author ?author .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
9,1,train,Give me the alma mater of Allen Hill (scientist).,SELECT ?result WHERE { <http://dbpedia.org/resource/Allen_Hill_(scientist)> <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?university WHERE {
  ?person a dbo:Scientist ;
          foaf:name ""Allen Hill"" .
  ?person foaf:almaMater ?university .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
54,4,train,Give me the father of Soe Min Wimala Dewi.,SELECT ?result WHERE { <http://dbpedia.org/resource/Soe_Min_Wimala_Dewi> <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?father WHERE {
  ?person dbp:name ""Soe Min Wimala Dewi""@en .
  ?person dbo:parent ?father .
  ?father a dbo:Male .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
492,13,train,"Give me the commander in the war, that is a military conflict and an event, of Frédéric-Georges Herr.",SELECT ?result WHERE { <http://dbpedia.org/resource/Frédéric-Georges_Herr> <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war ?commander WHERE {
  # Identify Frédéric-Georges Herr
  dbr:Frédéric_Georges_Herr a dbo:Person .

  # Find military conflicts he was involved in
  ?event dbo:participant dbr:Frédéric_Georges_Herr ;
         a dbo:MilitaryConflict .

  # Filter for events that are classified as both ""military conflict"" and ""war""
  ?event rdf:type dbo:War .

  # Get the commander of this war
  ?event dbo:commander ?commander .
}
```",2,4,3,2,1,3,3,71,0,0,2,0,0.0,0
485,2,train,Give me the entity in Nottinghamshire.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Nottinghamshire> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?entity WHERE {
  ?entity a dbo:Place .
  ?entity dbp:county ""Nottinghamshire"" .
}
```",1,1,2,1,1,2,3,28,0,0,369,0,0.0,0
827,10,train,"Who is the child, that is a royalty, of the spouse, that is a royalty, of Princess Pauline of Saxe-Weimar-Eisenach?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Princess_Pauline_of_Saxe-Weimar-Eisenach> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child WHERE {
  ?princess a dbo:Princess ;
            foaf:name ""Pauline of Saxe-Weimar-Eisenach""@en .
  
  ?princess dbo:spouse ?spouse .
  ?spouse rdf:type dbo:Monarch .

  ?spouse dbo:child ?child .
  ?child rdf:type dbo:RoyalFamilyMember .
}
```",2,4,3,2,1,3,2,20,0,0,2,0,0.0,0
142,0,train,Give me the entity in Japan.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?entity WHERE {
  ?entity a dbo:Place .
  ?entity dbo:country dbpedia:Japan .
}
```",1,1,2,1,1,2,2,9,0,0,8916,0,0.0,0
55,2,train,Give me the band of Newsted.,SELECT ?result WHERE { <http://dbpedia.org/resource/Newsted> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?band WHERE {
  ?person a dbo:MusicalArtist ;
          foaf:name ""Jason Newsted""@en .
  ?person dbo:bandMember ?band .
}
```",1,1,2,1,1,2,3,28,0,0,9,0,0.0,0
392,7,train,Give me the province of Schio and entity in Italy.,SELECT ?result WHERE { <http://dbpedia.org/resource/Schio> <http://dbpedia.org/ontology/province> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?province ?entity WHERE {
  # Find the province of Schio
  dbr:Schio dbo:locatedIn dbr:Vicenza_(province) .
  
  # Retrieve an entity related to Italy
  ?entity dbo:country dbr:Italy .
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
427,13,train,Give me the party of the father of Lamberto Andreotti.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Lamberto_Andreotti> <http://dbpedia.org/property/father> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?fatherParty WHERE {
  ?lamberto a dbo:Person ;
            foaf:name ""Lamberto Andreotti""@en .
  
  ?lamberto dbo:father ?father .

  ?father dbo:partyAffiliation ?fatherParty .
}
```",2,2,3,2,1,3,3,71,0,0,5,0,0.0,0
294,2,train,"Give me the entity in Nashville, Tennessee.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Nashville,_Tennessee> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?entity ?label
WHERE {
  ?entity dbo:location ?place .
  ?place rdfs:label ""Nashville, Tennessee""@en .
  ?entity rdfs:label ?label .
}
```",1,1,2,1,1,2,3,28,327,327,13,0.5,0.961764705882353,0.6579476861167002
303,11,train,"Give me the party of the person born, that is a politician, as Arnulfo Arias Madrid.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ""Arnulfo Arias Madrid""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/party> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX wd: <http://www.wikidata.org/entity/>

SELECT ?party WHERE {
  ?person rdfs:label ""Arnulfo Arias Madrid""@en .
  ?person dbo:wikiPageID ?id .
  ?person wdt:P31/wdt:P279* wd:Q82955 . # Q82955 is the Wikidata ID for politician
  OPTIONAL { ?person dbo:partyAffiliation ?party }
  FILTER(LANG(?person) = ""en"")
}
```",2,3,3,2,1,2,3,28,0,0,1,0,0.0,0
767,9,train,Give me the alma mater of Carl L. Nippert and entity in Baden-Württemberg.,SELECT ?result WHERE { <http://dbpedia.org/resource/Carl_L._Nippert> <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://dbpedia.org/ontology/state> <http://dbpedia.org/resource/Baden-Württemberg> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX geo: <http://www.w3.org/2003/01/geo/wgs84_pos#>

SELECT DISTINCT ?almaMater ?entityInBW
WHERE {
  # Query for Carl L. Nippert's alma mater
  dbr:C_L_Nippert dbo:almaMater ?almaMater .

  # Query for an entity in Baden-Württemberg
  ?entityInBW (dbo:location|dbr:Baden-Württemberg) .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
488,8,train,Who is the father of Emperor Go-Mizunoo?,SELECT ?result WHERE { <http://dbpedia.org/resource/Emperor_Go-Mizunoo> <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?fatherName WHERE {
  dbr:Emperor_Go-Mizunoo dbo:father ?father .
  ?father rdfs:label ?fatherName .
  FILTER (lang(?fatherName) = 'en')
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
838,8,train,"Give me the band member of the band, that is a group, of YU Grupa.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. <http://dbpedia.org/resource/YU_Grupa> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandMember WHERE {
  ?band dbr:YU_Grupa ;
        a dbo:MusicalGroup .
  ?band dbo:member ?bandMember .
}
```",2,3,3,2,1,3,2,20,0,0,40,0,0.0,0
801,17,train,"Give me the writer, that is a musical artist and an artist, of the album, that is a musical work and a work, of What U See Is What U Get.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/property/writer> ?result . <http://dbpedia.org/resource/What_U_See_Is_What_U_Get> <http://dbpedia.org/ontology/album> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artist WHERE {
  ?album dbo:title ""What U See Is What U Get"" .
  ?album dbo:creator ?artist .
  ?artist a dbo:MusicalArtist .
  ?artist dbo:occupation ?occupation .

  FILTER (
    EXISTS { ?artist dbo:occupation dbr:Writer . }
    && EXISTS { ?artist dbo:occupation dbr:Musician . }
  )
}
```",2,6,3,2,1,3,3,71,0,0,12,0,0.0,0
48,4,train,Give me the show with Stacey Dash.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Stacey_Dash> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?show
WHERE {
  ?actor rdf:type dbo:Actor .
  ?actor foaf:name ""Stacey Dash"" .
  ?work dbo:starring ?actor ;
        rdf:type dbo:TVSeries .
  BIND(?work AS ?show)
}
```",1,1,2,1,1,3,2,20,0,0,18,0,0.0,0
378,10,train,"Give me the claim to fame of Louis des Balbes de Berton de Crillon, 1st Duke of Mahón and war of Carl Pontus Gahn.","SELECT ?result WHERE { <http://dbpedia.org/resource/Louis_des_Balbes_de_Berton_de_Crillon,_1st_Duke_of_Mahón> <http://dbpedia.org/ontology/knownFor> ?result . <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/ontology/battle> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name ?claimToFame WHERE {
  VALUES ?person { 
    dbr:Louis_des_Balbes_de_Berton_de_Crillon_1st_Duke_of_Mahón
    dbr:C_P_Gahn
  }
  
  ?person rdfs:label ?name .
  FILTER (lang(?name) = 'en')
  
  OPTIONAL {
    ?person dbo:knownFor ?claimToFame .
    FILTER (lang(?claimToFame) = 'en')
  }
}
```",2,2,3,1,2,3,3,71,0,0,2,0,0.0,0
328,17,train,"Give me the office, that is a government agency, of the leader, that is an office holder and a politician, of Gustav Jonson.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Gustav_Jonson> <http://dbpedia.org/property/leader> ?v1 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v1 <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?office WHERE {
  ?person rdfs:label ""Gustav Jonson""@en .
  ?position dbo:leader ?person ;
            rdf:type dbo:OfficeHolder, dbo:Politician .
  ?position dbo:headOrganization ?office .
  ?office rdf:type dbo:GovernmentAgency .
}
```",2,5,3,2,1,3,3,71,0,0,1,0,0.0,0
339,4,train,Who is the parent of Princess Olga of Greece and Denmark?,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Princess_Olga_of_Greece_and_Denmark> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parent WHERE {
  ?olga dbp:name ""Princess Olga of Greece and Denmark""@en .
  OPTIONAL { ?olga dbo:mother ?parent . }
  OPTIONAL { ?olga dbo:father ?parent . }
}
```",1,1,2,1,1,3,2,20,0,0,2,0,0.0,0
701,16,train,Give me the child of the child of Seti I.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v1 . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seti_I> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?grandchild
WHERE {
  ?setiI dbo:wikiPageID ""Seti_I"" .
  ?setiI dbo:child ?child .
  ?child dbo:child ?grandchild .
}
```",2,2,3,2,1,3,3,71,0,0,8,0,0.0,0
996,6,train,Give me the entity in France and force of Dagobert Sigmund von Wurmser.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Dagobert_Sigmund_von_Wurmser> . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/France> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?force WHERE {
  VALUES ?wurmser { dbr:Dagobert_Sigmund_von_Wurmser }
  
  ?wurmser a dbo:MilitaryPerson .
  
  OPTIONAL {
    ?wurmser dbo:militaryRank ?rank .
    FILTER EXISTS { ?rank rdfs:label ?label . FILTER (lang(?label) = ""en"") }
    BIND(STR(?rank) AS ?force)
  }

  OPTIONAL {
    ?wurmser dbo:birthPlace ?place .
    FILTER EXISTS { ?place rdfs:label ?label . FILTER (lang(?label) = ""fr"" && str(?label) = ""France"") }
  }

  OPTIONAL {
    ?wurmser dbo:deathPlace ?place .
    FILTER EXISTS { ?place rdfs:label ?label . FILTER (lang(?label) = ""fr"" && str(?label) = ""France"") }
  }
}
```",2,2,3,1,2,3,2,20,0,0,4,0,0.0,0
492,10,train,Give me the person decedent at French Algeria and person decedent at Algiers.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Algiers> . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/French_Algeria> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person WHERE {
  ?person a dbo:Person .
  
  # Find persons with death place as French Algeria
  OPTIONAL { 
    ?deathPlace1 rdfs:label ""French Algeria""@en .
    ?person dbo:deathPlace ?deathPlace1 .
  }
  
  # Find persons with death place as Algiers
  OPTIONAL {
    ?deathPlace2 rdfs:label ""Algiers""@en .
    ?person dbo:deathPlace ?deathPlace2 .
  }

  FILTER EXISTS { ?deathPlace1 rdfs:label ""French Algeria""@en . }
  FILTER EXISTS { ?deathPlace2 rdfs:label ""Algiers""@en . }
}
```",2,2,3,1,2,3,3,71,16,0,0,1.0,1.0,1.0
421,6,train,Give me the band member of Senidah and native of Socialist Federal Republic of Yugoslavia.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Socialist_Federal_Republic_of_Yugoslavia> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Senidah> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?band dbo:member ?person .
  ?band dbr:Senidah .
  
  OPTIONAL { ?person dbo:birthPlace ?place . }
  
  FILTER (
    EXISTS {
      ?place dbo:country dbr:Socialist_Federal_Republic_of_Yugoslavia
    }
  )
}
```",2,2,3,1,2,2,3,28,0,0,2,0,0.0,0
487,4,train,Give me the birth name of Phil Scott.,SELECT ?result WHERE { <http://dbpedia.org/resource/Phil_Scott> <http://dbpedia.org/property/birthName> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX schema: <http://schema.org/>

SELECT ?birthName WHERE {
  ?person a dbo:Person ;
          foaf:name ""Phil Scott""@en .
  OPTIONAL { ?person schema:birthName ?birthName . }
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
827,3,train,"Who is the child, that is a royalty, of Grand Duchess Maria Pavlovna of Russia (1786–1859)?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Grand_Duchess_Maria_Pavlovna_of_Russia_(1786–1859)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child WHERE {
  ?person dbo:spouse ?mariaPavlovna .
  ?mariaPavlovna foaf:name ""Maria Pavlovna of Russia"" ;
                 dbo:birthDate ?birthDate ;
                 dbo:deathDate ?deathDate .

  FILTER (YEAR(?birthDate) = 1786 && YEAR(?deathDate) = 1859)

  ?person dbo:child ?child .
  
  OPTIONAL { ?child dbp:title ?title . }
  
  FILTER EXISTS {
    ?child dbp:title ?title .
    FILTER regex(?title, ""Prince|Princess|Duke|Duchess|King|Queen"", ""i"")
  }
}
```",1,2,2,1,1,3,2,20,0,0,2,0,0.0,0
435,9,train,"Give me the region of Greenwich Mean Time and work of Article 62, Section IV of Constitution of Iceland.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/author> ""Article 62, Section IV of Constitution of Iceland""@en . ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Greenwich_Mean_Time> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?region ?work
WHERE {
  # Part 1: Find regions associated with GMT
  ?gmtRegion a dbo:TimeZone ;
             dbo:timeZoneName ""Greenwich Mean Time"" .
  
  OPTIONAL { ?gmtRegion rdfs:label ?region . FILTER (lang(?region) = 'en') }

  # Part 2: Find the work of Article 62, Section IV of the Constitution of Iceland
  dbr:Iceland_Constitution dbo:article ?article .
  ?article dbo:number ""62"" ;
           dbo:section ""IV"" .
  
  OPTIONAL { ?article dbo:text ?work . FILTER (lang(?work) = 'en') }
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
488,12,train,Give me the administration of Emperor Go-Yōzei and death place of Tokugawa Ieyasu.,SELECT ?result WHERE { <http://dbpedia.org/resource/Tokugawa_Ieyasu> <http://dbpedia.org/ontology/deathPlace> ?result . ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Emperor_Go-Yōzei> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX owl: <http://www.w3.org/2002/07/owl#>

SELECT ?entityLabel ?propertyLabel ?valueLabel WHERE {
  {
    VALUES ?entity { dbpedia:Emperor_Go-Yōzei }
    ?entity dbo:reign ?value .
    ?property rdfs:label ""Reign""@en .
  } UNION {
    VALUES ?entity { dbpedia:Tokugawa_Ieyasu }
    ?entity dbo:deathPlace ?value .
    ?property rdfs:label ""Death place""@en .
  }
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
666,2,train,"Give me the team, that is a soccer club and a sports team season, of Leonid Slutsky (football coach).",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?result <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Leonid_Slutsky_(football_coach)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?team WHERE {
  ?coach foaf:name ""Leonid Slutsky""@en .
  ?coach dbo:position dbr:Football_manager .
  ?coach dbo:worksFor ?team .
  
  FILTER (
    (EXISTS { ?team a dbo:SoccerClub } || EXISTS { ?team a dbo:SportsTeamSeason }) &&
    (EXISTS { ?team dbo:sport dbr:Association_football } || EXISTS { ?team dbo:sport dbr:Soccer })
  )
}
```",1,3,2,1,1,3,2,20,0,0,3,0,0.0,0
767,8,train,Give me the alter ego of Black Hood.,SELECT ?result WHERE { <http://dbpedia.org/resource/Black_Hood> <http://dbpedia.org/property/alterEgo> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?alterEgo WHERE {
  ?character rdfs:label ""Black Hood""@en.
  ?character dbo:alterEgo ?alterEgo.
}
```",1,1,2,1,1,3,3,71,0,0,5,0,0.0,0
9,9,train,"Give me the alma mater of Allen Hill (scientist) and alma mater of John Alderdice, Baron Alderdice.","SELECT ?result WHERE { <http://dbpedia.org/resource/John_Alderdice,_Baron_Alderdice> <http://dbpedia.org/ontology/almaMater> ?result . <http://dbpedia.org/resource/Allen_Hill_(scientist)> <http://dbpedia.org/ontology/almaMater> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?almaMaterLabel WHERE {
  VALUES ?person { 
    (dbpedia:Allen_Hill_(scientist)) 
    (dbpedia:John_Alderdice)
  }
  
  ?person dbo:almaMater ?almaMater .
  SERVICE <http://dbpedia.org/sparql> {
    ?almaMater rdfs:label ?almaMaterLabel .
    FILTER(LANG(?almaMaterLabel) = 'en')
  }
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
281,1,train,Give me the entity in Colony of New Zealand.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Colony_of_New_Zealand> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity ?label WHERE {
  ?entity rdfs:label ?label .
  FILTER(CONTAINS(LCASE(?label), ""colony of new zealand""))
  OPTIONAL { ?entity dbo:wikiPageRedirects ?redirect . }
  FILTER(!BOUND(?redirect))
}
ORDER BY ?label
```",1,1,2,1,1,3,3,71,0,11,1,0.0,0.0,0
179,8,train,Give me the parent of the child of Bhumibol Adulyadej.,SELECT ?result WHERE { <http://dbpedia.org/resource/Bhumibol_Adulyadej> <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?parent
WHERE {
  ?bhumibol dbo:child ?child .
  FILTER (str(?bhumibol) = ""Bhumibol Adulyadej""^^xsd:string)
  
  OPTIONAL { ?child dbo:father ?parent . }
  OPTIONAL { ?child dbo:mother ?parent . }
}
```",2,2,3,2,1,3,2,20,0,0,3,0,0.0,0
142,6,train,Give me the birthplace of the actor of Papa wa Newscaster.,SELECT ?result WHERE { <http://dbpedia.org/resource/Papa_wa_Newscaster> <http://dbpedia.org/ontology/starring> ?v0 . ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace WHERE {
  ?actor a dbo:Actor ;
         foaf:name ""Actor Name""@en .
  ?actor dbo:birthPlace ?birthPlace .
}
```

Replace `""Actor Name""` with the actual name of the actor once identified.",2,2,3,2,1,2,2,9,0,0,3,0,0.0,0
778,8,train,"Give me the author of the work, that is a software, of Bill Joy.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Bill_Joy> . ?v0 <http://dbpedia.org/ontology/author> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Software>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?software WHERE {
  ?person foaf:name ""Bill Joy""@en .
  ?person dbo:author ?software .
  ?software a dbo:Software .
}
```",2,3,3,2,1,3,2,20,0,0,2,0,0.0,0
378,8,train,Who is the commander in Great Siege of Gibraltar?,SELECT ?result WHERE { <http://dbpedia.org/resource/Great_Siege_of_Gibraltar> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commanderName WHERE {
  ?event a dbo:MilitaryConflict ;
         rdfs:label ""Great Siege of Gibraltar""@en .
  
  OPTIONAL { 
    ?event dbo:commander ?commander .
    ?commander foaf:name ?commanderName .
  }
}
```",1,1,2,1,1,3,3,71,0,5,7,0.0,0.0,0
360,10,train,"Give me the native of the death place, that is a settlement, of Winnie Madikizela-Mandela.",SELECT ?result WHERE { <http://dbpedia.org/resource/Winnie_Madikizela-Mandela> <http://dbpedia.org/ontology/deathPlace> ?v1 . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?native 
WHERE {
  # Identify Winnie Madikizela-Mandela's death place
  dbr:Winnie_Madikizela-Mandela dbo:deathPlace ?deathPlace .
  
  # Ensure the death place is a settlement
  ?deathPlace rdf:type dbo:PopulatedPlace .

  # Find who is native of that place
  ?native dbo:nativeOf ?deathPlace .
}
```",2,3,3,2,1,2,3,28,0,0,1099,0,0.0,0
391,0,train,"Give me the native of Compton, California.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Compton,_California> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  ?person dbo:birthPlace dbp:Compton,_California .
}
```",1,1,2,1,1,3,3,71,0,0,97,0,0.0,0
534,0,train,Give me the birth place of Garret FitzGerald.,SELECT ?result WHERE { <http://dbpedia.org/resource/Garret_FitzGerald> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthPlace WHERE {
  ?person a dbo:Person ;
          foaf:name ""Garret FitzGerald""@en .
  ?person dbo:birthPlace ?birthPlace .
}
```",1,1,2,1,1,3,2,20,0,2,1,0.0,0.0,0
528,10,train,Give me the force of Narciso Campero and war of Irene Morales.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Narciso_Campero> . <http://dbpedia.org/resource/Irene_Morales> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?force ?war 
WHERE {
  # Query for Narciso Campero's force or rank
  OPTIONAL { 
    dbr:Narciso_Campero dbo:rank ?force .
  }
  
  # Query for wars associated with Irene Morales
  OPTIONAL {
    ?person rdfs:label ""Irene Morales""@en .
    ?person dbo:participatedIn ?war .
  }
}
```",2,2,3,1,2,3,3,71,0,0,2,0,0.0,0
303,3,train,"Who is the commander, that is a politician, in United States invasion of Panama?",SELECT ?result WHERE { <http://dbpedia.org/resource/United_States_invasion_of_Panama> <http://dbpedia.org/ontology/commander> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  # Identify the event of United States invasion of Panama
  dbr:United_States_invasion_of_Panama dbo:commander ?commander .
  
  # Ensure the commander is also a politician
  OPTIONAL { ?commander dbo:occupation dbr:Politician . }
  FILTER EXISTS { ?commander dbo:occupation dbr:Politician . }
}
```",1,2,2,1,1,2,3,28,0,0,6,0,0.0,0
492,7,train,Give me the country of Khemis Miliana District.,SELECT ?result WHERE { <http://dbpedia.org/resource/Khemis_Miliana_District> <http://dbpedia.org/ontology/country> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?country WHERE {
  ?district a dbo:District .
  ?district rdfs:label ""Khemis Miliana District""@en .
  ?district dbo:country ?country .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
427,9,train,Give me the reference to Partito Popolare Italiano and party of Giulio Andreotti.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Partito Popolare Italiano""@en . <http://dbpedia.org/resource/Giulio_Andreotti> <http://dbpedia.org/ontology/party> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?party WHERE {
  dbr:Giulio_Andreotti dbo:party ?party .
  OPTIONAL { ?party rdfs:label ""Partito Popolare Italiano""@it }
}
```",2,2,3,1,2,3,3,71,1,4,0,0.2,1.0,0.33333333333333337
9,11,train,"Give me the alma mater of the mayor, that is a politician, of Northern Ireland Forum.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Northern_Ireland_Forum> <http://dbpedia.org/property/leader> ?v0 . ?v0 <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?mayor ?almaMater WHERE {
  ?mayor a dbo:Politician ;
         dbo:officeHolderOf dbr:Northern_Ireland_Forum ;
         dbo:almaMater ?almaMater .
}
```",2,3,3,2,1,3,3,71,0,0,6,0,0.0,0
427,4,train,Give me the name of Italian People's Party (1994).,SELECT ?result WHERE { <http://dbpedia.org/resource/Italian_People's_Party_(1994)> <http://xmlns.com/foaf/0.1/name> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name WHERE {
    ?party a dbo:PoliticalParty ;
           rdfs:label ""Italian People's Party""@en .
    
    ?member dbo:memberOf ?party ;
            dbo:name ?name .

    FILTER (CONTAINS(LCASE(?party), ""italian people's party""))
    FILTER (YEAR(NOW()) - YEAR(?member) <= 30) # Assuming the person was active around 1994
}
ORDER BY ?name
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
182,2,train,Give me the entity in Sri Lanka.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Sri_Lanka> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?entity WHERE {
  ?entity dbo:country dbpedia:Sri_Lanka .
}
LIMIT 100
```",1,1,2,1,1,2,3,28,0,0,62,0,0.0,0
528,2,train,Give me the force of Narciso Campero.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Narciso_Campero> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?property ?value
WHERE {
  VALUES ?campero { dbr:Narciso_Campero }
  
  ?campero ?property ?value .
  
  FILTER (
    ?property IN (dbo:militaryRank, dbo:positionHeld) ||
    strstarts(str(?property), ""http://dbpedia.org/ontology/"")
  )
}
```",1,1,2,1,1,3,3,71,2,95,2,0.020618556701030927,0.5,0.0396039603960396
645,9,train,"Give me the residence, that is a country, of the commander in Battle of Diamond Rock.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/residence> ?result . <http://dbpedia.org/resource/Battle_of_Diamond_Rock> <http://dbpedia.org/ontology/commander> ?v0 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?country WHERE {
  ?battle dbp:name ""Battle of Diamond Rock"" .
  ?battle dbo:commander ?commander .
  ?commander dbo:residence ?residence .
  ?residence a dbo:Country .
  BIND(?residence AS ?country)
}
```",2,3,3,2,1,3,2,20,0,0,1,0,0.0,0
801,4,train,Give me the alter ego of The Shadow.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?alterEgo WHERE {
  ?character rdfs:label ""The Shadow""@en .
  ?character dbo:alterEgo ?alterEgo .
}
```",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
547,15,train,Give me the child of the child of William Haliburton.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> ""William Haliburton""@en . ?v1 <http://dbpedia.org/ontology/child> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT DISTINCT ?grandchild WHERE {
  ?grandparent dbo:birthName ""William Haliburton""@en .
  ?grandparent dbo:child ?child .
  ?child dbo:child ?grandchild .
  FILTER (isLiteral(?grandchild) = false)
}
```",2,2,3,2,1,3,3,71,0,0,3,0,0.0,0
10,0,train,Give me the associated musical artist of Matt Colton.,SELECT ?result WHERE { <http://dbpedia.org/resource/Matt_Colton> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artist WHERE {
  ?person a dbo:Person ;
          foaf:name ""Matt Colton""@en .
  
  OPTIONAL { 
    ?person dbo:worksFor ?organization .
    ?organization dbo:associatedBand ?artist .
    FILTER (isLiteral(?artist))
  }
  
  UNION
  
  OPTIONAL {
    ?person dbo:associatedBand ?artist .
    FILTER (isLiteral(?artist))
  }

  FILTER (?person = dbr:Matt_Colton)
}
```",1,1,2,1,1,2,3,28,0,0,4,0,0.0,0
528,6,train,Give me the commander in Battle of La Rinconada de Ate.,SELECT ?result WHERE { <http://dbpedia.org/resource/Battle_of_La_Rinconada_de_Ate> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?commanderLabel WHERE {
  ?battle a dbpedia-owl:Battle .
  ?battle rdfs:label ""Battle of La Rinconada de Ate""@en .
  
  OPTIONAL { ?battle dbp:commander ?commander . }
  
  ?commander rdfs:label ?commanderLabel .
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
294,7,train,"Give me the entity in Nashville, Tennessee and resting place of Luke Lea (American politician, born 1879).","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Nashville,_Tennessee> . <http://dbpedia.org/resource/Luke_Lea_(American_politician,_born_1879)> <http://dbpedia.org/ontology/restingPlace> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?restingPlace WHERE {
  ?person a dbo:Politician ;
          dbo:birthYear ""1879""^^xsd:gYear ;
          dbo:deathPlace ?restingPlace .
  
  ?restingPlace dbo:location dbr:Nashville,_Tennessee .

  FILTER (str(?person) = str(dbr:Luke_Lea))
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
754,8,train,Give me the parent of the child of Ram Khamhaeng.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ram_Khamhaeng> <http://dbpedia.org/ontology/child> ?v0 . ?result <http://dbpedia.org/ontology/child> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?grandParent WHERE {
  ?ramKhamhaeng a dbo:Person ;
                foaf:name ""Ram Khamhaeng""@en .
  
  ?ramKhamhaeng dbo:child ?child .

  ?child dbo:parent ?grandParent .
}
```",2,2,3,2,1,3,2,20,0,0,1,0,0.0,0
54,1,train,Give me the parent of Thado Minsaw of Prome.,SELECT ?result WHERE { <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parent WHERE {
  ?person dbp:name ""Thado Minsaw""@en .
  ?person dbo:birthPlace dbr:Prome .
  ?person dbo:parent ?parent .
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
360,9,train,Give me the native of Johannesburg and reference to Manfred Mann.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Johannesburg> . ?result <http://xmlns.com/foaf/0.1/name> ""Manfred Mann""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person dbo:birthPlace dbr:Johannesburg .
  OPTIONAL { 
    ?association dbo:associatedBand dbr:Manfred_Mann ;
                 dbo:member ?person .
  }
}
```",2,2,3,1,2,2,3,28,1,999,0,0.001,1.0,0.0019980019980019984
645,5,train,Give me the child of Richard Pankhurst.,SELECT ?result WHERE { <http://dbpedia.org/resource/Richard_Pankhurst> <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?child WHERE {
  ?person rdf:type dbo:Person .
  ?person rdfs:label ""Richard Pankhurst""@en .
  FILTER NOT EXISTS { ?person dbo:deathDate ?date } # Optional filter to ensure we are talking about the correct person if there's ambiguity
  ?person dbo:child ?child .
}
```",1,1,2,1,1,3,2,20,0,0,3,0,0.0,0
161,6,train,"Give me the force, that is a societal event and a military conflict, of Francisco Largo Caballero.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?event WHERE {
  dbr:Franco_Largo_Caballero dbo:associatedWith ?event .
  ?event rdf:type dbo:MilitaryConflict ;
         dbo:socialEvent true .
}
```",1,3,2,1,1,3,3,71,0,0,1,0,0.0,0
251,2,train,Give me the death place of Laura Mancinelli.,SELECT ?result WHERE { <http://dbpedia.org/resource/Laura_Mancinelli> <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?deathPlace
WHERE {
  dbr:Laura_Mancinelli dbo:deathPlace ?deathPlace .
}
```",1,1,2,1,1,2,3,28,3,0,0,1.0,1.0,1.0
314,0,train,Give me the person deceased at Madrid.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/restingPlace> <http://dbpedia.org/resource/Madrid> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?personLabel WHERE {
  ?person dbo:deathPlace ?place .
  FILTER (str(?place) = ""http://dbpedia.org/resource/Madrid"")
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
```",1,1,2,1,1,2,3,28,0,0,20,0,0.0,0
391,14,train,"Give me the actor of the movie, that is a movie and a work and a television show, with Roz Ryan.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/property/starring> ?result . ?v1 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Roz_Ryan> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?movie ?actor WHERE {
  ?movie a dbo:Film ;
         a dbo:CreativeWork ;
         a dbo:TelevisionShow .
  
  ?movie dbo:starring ?actor .
  
  ?actor rdfs:label ""Roz Ryan""@en .
}
```",2,5,3,2,1,3,3,71,0,0,5,0,0.0,0
712,7,train,Give me the capital of the country of Armed Forces of South Russia.,SELECT ?result WHERE { <http://dbpedia.org/resource/Armed_Forces_of_South_Russia> <http://dbpedia.org/ontology/country> ?v1 . ?v1 <http://dbpedia.org/ontology/capital> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?capital WHERE {
  OPTIONAL { 
    ?entity rdfs:label ""Armed Forces of South Russia""@en .
    ?entity dbo:country ?country .
  }
  ?country dbo:capital ?capital .
}
```",2,2,3,2,1,3,2,20,3,0,0,1.0,1.0,1.0
312,2,train,"Give me the administration, that is a settlement and a region and Italian and a state, of Democratic Party (Italy).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?result <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Democratic_Party_(Italy)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?administration WHERE {
  ?party rdf:type dbo:PoliticalParty ;
         rdfs:label ""Democratic Party (Italy)""@en .
  
  ?administration dbo:administrativeRegion ?party ;
                  a ?type1, ?type2, ?type3 ;
                  dbo:country dbr:Italy .

  FILTER (?type1 = dbo:City || ?type1 = dbo:Settlement)
  FILTER (?type2 = dbo:Region)
  FILTER (?type3 = dbo:State)
}
```",1,5,2,1,1,2,2,9,0,0,14,0,0.0,0
801,9,train,Give me the producer of Westside Story (song) and professional in .,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . <http://dbpedia.org/resource/Westside_Story_(song)> <http://dbpedia.org/ontology/producer> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?producer ?occupation 
WHERE {
  ?song rdf:type dbo:Songs .
  ?song rdfs:label ""West Side Story (song)""@en .
  ?song dbo:producer ?producer .

  OPTIONAL { ?producer dbo:occupation ?occupation . }
}
```",2,2,3,1,2,3,3,71,0,0,2,0,0.0,0
404,15,train,"Who is the person born, that is a royalty, as the birth name of Princess Victoria Louise of Prussia?",SELECT ?result WHERE { <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/property/birthName> ?v1 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?person ?birthName WHERE {
  ?person rdf:type dbo:RoyalPerson .
  ?person dbo:birthName ""Princess Victoria Louise of Prussia""@en .
}
```",2,3,3,2,1,3,3,71,0,0,1,0,0.0,0
294,10,train,Give me the resting place of the architect of P. D. Houston Jr. House.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/P._D._Houston_Jr._House> <http://dbpedia.org/ontology/architect> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?architect ?burialSite WHERE {
  # Find the architect of P. D. Houston Jr. House
  dbr:P._D._Houston_Jr._House dbo:architect ?architect .
  
  # Find the burial site of the identified architect
  ?architect dbo:deathPlace ?burialSite .
}
```",2,2,3,2,1,2,3,28,0,2,1,0.0,0.0,0
339,1,train,Give me the father of Princess Elizabeth of Greece and Denmark.,SELECT ?result WHERE { <http://dbpedia.org/resource/Princess_Elizabeth_of_Greece_and_Denmark> <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?father WHERE {
  ?person a dbo:Person ;
          rdfs:label ""Elizabeth of Greece and Denmark""@en .
  ?person dbo:father ?father .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
963,3,train,"Give me the region, that is a country, of Central European Time.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?country WHERE {
  ?country a dbo:Country .
  ?country dbp:timeZone ""Central European Time"" .
}
```",1,2,2,1,1,3,2,20,0,0,56,0,0.0,0
820,5,train,Who is the parent of Jason Schwartzman?,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Jason_Schwartzman> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?parentName WHERE {
  ?person foaf:name ""Jason Schwartzman""@en .
  ?person dbo:parent ?parent .
  ?parent foaf:name ?parentName .
}
```",1,1,2,1,1,3,2,20,0,0,2,0,0.0,0
994,5,train,"Give me the band, that is an organisation, of Fredrik Thordendal.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Fredrik_Thordendal> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?band WHERE {
  ?person a dbo:Person ;
          foaf:name ""Fredrik Thordendal""@en .
  ?person dbo:memberOrBandMember ?band .
  FILTER (isBlank(?band) || ?band != ?person)
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
617,0,train,Give me the child of Doubravka of Bohemia.,SELECT ?result WHERE { <http://dbpedia.org/resource/Doubravka_of_Bohemia> <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child WHERE {
  ?person dbp:name ""Doubravka of Bohemia""@en .
  ?person dbo:child ?child .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
16,9,train,Give me the professional in Actress and spouse of Ted McGinley.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Actress""@en . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?spouseName WHERE {
  ?person rdf:type dbo:Person .
  ?person dbo:spouse ?spouse .
  ?spouse rdfs:label ?spouseName .
  FILTER(CONTAINS(LCASE(?spouseName), ""ted mcginley"")).
  
  ?spouse dbo:occupation ?occupation .
  FILTER(CONTAINS(LCASE(STR(?occupation)), ""actress""))
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
915,9,train,"Give me the birthplace, that is a settlement, of the director of Pipe Dreams (1976 film).",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Pipe_Dreams_(1976_film)> <http://dbpedia.org/ontology/director> ?v0 . ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthPlace WHERE {
  ?film dbo:title ""Pipe Dreams""@en .
  ?film dbo:releaseYear ""1976""^^xsd:gYear .
  ?film dbo:director ?director .
  
  ?director dbp:birthPlace ?birthPlace .
  
  FILTER EXISTS { 
    ?birthPlace a dbo:Settlement .
  }
}
```",2,3,3,2,1,3,2,20,0,0,1,0,0.0,0
115,4,train,Give me the alma mater of Vladimir Cerrón and alma mater of Jorge Sotomayor Tello.,SELECT ?result WHERE { <http://dbpedia.org/resource/Jorge_Sotomayor_Tello> <http://dbpedia.org/ontology/almaMater> ?result . <http://dbpedia.org/resource/Vladimir_Cerrón> <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?almaMater WHERE {
  VALUES (?person ?label) { 
    (<http://dbpedia.org/resource/Vladimir_Cerrón> ""Vladimir Cerrón"")
    (<http://dbpedia.org/resource/Jorge_Sotomayor_Tello> ""Jorge Sotomayor Tello"")
  }
  
  ?person dbo:almaMater ?almaMater .
}
```",2,2,3,1,2,2,2,9,1,4,0,0.2,1.0,0.33333333333333337
184,4,train,Give me the native of Budapest.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Budapest> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbpedia: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person ?name WHERE {
  ?person dbo:birthPlace dbpedia:Budapest .
  OPTIONAL { ?person foaf:name ?name . }
}
```",1,1,2,1,1,3,3,71,2751,2618,0,0.5123859191655802,1.0,0.6775862068965517
801,7,train,"Give me the album, that is a musical work and a work, of What U See Is What U Get.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. <http://dbpedia.org/resource/What_U_See_Is_What_U_Get> <http://dbpedia.org/ontology/album> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?album
WHERE {
  ?album a dbo:Album ;
         dbo:title ""What U See Is What U Get"" .
}
```",1,3,2,1,1,3,3,71,0,0,1,0,0.0,0
427,5,train,Who is the alumnus of Massachusetts Institute of Technology?,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Massachusetts_Institute_of_Technology> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?person ?name
WHERE {
  ?person dbo:almaMater dbpedia:Massachusetts_Institute_of_Technology .
  ?person foaf:name ?name .
}
```",1,1,2,1,1,3,3,71,0,0,1559,0,0.0,0
16,12,train,Give me the professional in Actress and person born as Georgeanne Marie Rice.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Georgeanne Marie Rice""@en . ?result <http://dbpedia.org/property/occupation> ""Actress""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person WHERE {
  ?person foaf:givenName ""Georgeanne"" .
  ?person foaf:familyName ""Rice"" .
  ?person dbo:birthName ""Georgeanne Marie Rice"" .
  ?person dbo:occupation ?occupation .
  FILTER(CONTAINS(LCASE(?occupation), ""actress""))
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
16,14,train,Give me the person born as the birth name of Gigi Rice.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Gigi_Rice> <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?fullName WHERE {
  ?gigi a dbo:Person ;
        foaf:name ""Gigi Rice"" .
  ?gigi dbp:birthName ?birthName .

  ?person a dbo:Person ;
          dbp:birthName ?birthName ;
          foaf:name ?fullName .
  
  FILTER (?gigi != ?person)
}
```",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
959,0,train,Give me the member of University of Tsukuba.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/University_of_Tsukuba> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  ?person dbo:almaMater dbp:University_of_Tsukuba .
}
```",1,1,2,1,1,3,3,71,0,0,267,0,0.0,0
712,8,train,Give me the resting place of the awardee of Hero of the Soviet Union.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Hero_of_the_Soviet_Union> . ?v0 <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?restingPlace WHERE {
  ?award dbo:recipient ?person .
  ?award rdfs:label ""Hero of the Soviet Union""@en .
  OPTIONAL { ?person dbo:burialPlace ?restingPlace . }
}
```",2,2,3,2,1,3,2,20,0,0,49,0,0.0,0
767,17,train,"Give me the alter ego of the persona, that is a fictional character, of Matthew Burland.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/alterEgo> ""Matthew Burland""@en . ?v1 <http://dbpedia.org/property/alterEgo> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?character WHERE {
  ?person a dbo:Actor .
  ?person foaf:name ""Matthew Burland""@en .
  ?role dbo:actor ?person ;
        dbo:character ?character .
}
```",2,3,3,2,1,3,3,71,0,0,5,0,0.0,0
356,6,train,Give me the player in 2015 Sacramento Republic FC season and team of Mark Briggs.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Mark_Briggs> . <http://dbpedia.org/resource/2015_Sacramento_Republic_FC_season> <http://dbpedia.org/ontology/team> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?player ?team WHERE {
  ?player a dbo:FootballPlayer ;
          foaf:name ""Mark Briggs""@en .
  OPTIONAL { 
    ?player dbo:playsForTeam ?team .
    FILTER (CONTAINS(LCASE(STR(?team)), ""sacramento republic fc""))
  }
  OPTIONAL {
    ?season dbo:hasParticipant ?player .
    ?season dbo:year ""2015""^^xsd:gYear .
  }
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
55,1,train,Give me the band member of Metallica.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Metallica> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?memberLabel WHERE {
  ?band rdf:type dbo:Band .
  ?band rdfs:label ""Metallica""@en .
  ?band dbo:bandMember ?member .
  ?member rdf:type dbo:Person .
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
```",1,1,2,1,1,2,3,28,0,0,15,0,0.0,0
77,8,train,Give me the force of the mayor of Congress Poland.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> ?v0 . <http://dbpedia.org/resource/Congress_Poland> <http://dbpedia.org/property/leader> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?leader ?role WHERE {
  ?leader dbo:headOfState dbr:Congress_Poland .
  OPTIONAL { ?leader dbo:occupation ?role . }
  FILTER (YEAR(?startDate) >= 1815 && YEAR(?endDate) <= 1831)
}
```",2,2,3,2,1,3,2,20,0,0,33,0,0.0,0
696,8,train,Give me the landmark at elevation of the award of Nie Rongzhen.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/elevation> ?v0 . <http://dbpedia.org/resource/Nie_Rongzhen> <http://dbpedia.org/property/awards> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?landmark ?elevation WHERE {
  # Find the award associated with Nie Rongzhen
  ?award dbo:recipient dbr:Nie_Rongzhen .
  
  # Determine the elevation or rank of the award
  ?award dbo:elevation ?elevation .

  # Find a landmark that matches this elevation
  ?landmark dbo:elevation ?elevation .
}
```",2,2,3,2,1,3,2,20,0,0,599,0,0.0,0
427,14,train,"Give me the party of the person born, that is an office holder and a politician, as Romano Antonio Prodi.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/ontology/party> ?result . ?v1 <http://dbpedia.org/property/birthName> ""Romano Antonio Prodi""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?party WHERE {
  ?person a dbo:Politician ;
          foaf:name ""Romano Antonio Prodi""@en .
  OPTIONAL { ?person dbo:birthDate ?birthDate . }
  OPTIONAL { ?person dbo:officeHolder ?isOfficeHolder . }
  ?person dbo:party ?party .
}
```",2,4,3,2,1,3,3,71,0,0,7,0,0.0,0
77,4,train,"Give me the territory administered, that is an organisation, from Warsaw.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Warsaw> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?organization WHERE {
  ?organization a dbo:Organization .
  ?organization dbp:headquartersLocation dbr:Warsaw .
}
```",1,2,2,1,1,3,2,20,0,0,7,0,0.0,0
281,16,train,"Give me the birth place, that is a country, of the leader, that is a politician, of 1962 New South Wales state election.",SELECT ?result WHERE { <http://dbpedia.org/resource/1962_New_South_Wales_state_election> <http://dbpedia.org/property/leader> ?v1 . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthPlace WHERE {
  ?election dbo:date ""1962-03-10""^^xsd:date ;
            dbo:place dbr:New_South_Wales .
  
  ?candidate dbo:election ?election ;
             a dbo:Politician ;
             dbp:birthPlace ?birthPlace .

  FILTER EXISTS { ?birthPlace a dbo:Country }
}
```",2,4,3,2,1,3,3,71,0,0,1,0,0.0,0
801,12,train,Give me the associated musical artist of Chris Taylor (music producer) and producer of Westside Story (song).,SELECT ?result WHERE { <http://dbpedia.org/resource/Westside_Story_(song)> <http://dbpedia.org/ontology/producer> ?result . <http://dbpedia.org/resource/Chris_Taylor_(music_producer)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?artist WHERE {
  # Find artists associated with Chris Taylor as a music producer
  {
    SELECT DISTINCT ?artist WHERE {
      ?production dbo:producer dbr:Chris_Taylor_(musician) .
      ?production dbo:performer ?artist .
    }
  }

  UNION

  # Find the producer of the song ""Westside Story""
  {
    SELECT DISTINCT ?producer WHERE {
      ?song dbo:producer ?producer .
      FILTER (str(?song) = ""Westside_Story_(song)"")
    }
  }

  # Check for intersection
  VALUES ?artist { ?producer }
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
184,16,train,"Give me the child of the parent, that is a royalty, of Archduke Ladislaus Philipp of Austria.",SELECT ?result WHERE { <http://dbpedia.org/resource/Archduke_Ladislaus_Philipp_of_Austria> <http://dbpedia.org/ontology/parent> ?v1 . ?result <http://dbpedia.org/property/father> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?child WHERE {
  ?archduke a dbo:Archduke ;
            foaf:name ""Ladislaus Philipp of Austria"" .
  
  ?parent dbo:parentOf ?archduke .

  ?parent dbo:hasChild ?child .
  ?child dbo:royalty true .
}
```",2,3,3,2,1,3,3,71,0,0,3,0,0.0,0
391,11,train,Give me the native of the figure known as Hub City.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/nickname> ""Hub City""@en . ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?personLabel WHERE {
  ?person dbo:nativePlace dbr:Spartanburg,_South_Carolina .
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
```",2,2,3,2,1,3,3,71,0,0,176,0,0.0,0
77,9,train,Who is the awardee of the award of Maxim Grigorievich Vlasov?,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Maxim_Grigorievich_Vlasov> <http://dbpedia.org/property/awards> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award WHERE {
  ?person a dbo:Person ;
          foaf:name ""Maxim Grigorievich Vlasov""@en .
  
  OPTIONAL { ?person dbo:award ?award . }
  FILTER EXISTS { ?person foaf:name ""Maxim Grigorievich Vlasov""@en }
}
```",2,2,3,2,1,3,2,20,0,8,416,0.0,0.0,0
16,7,train,Who is the alumnus of Ohio State University?,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Ohio_State_University> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?person WHERE {
  ?person dbo:almaMater dbpedia:Ohio_State_University .
}
```",1,1,2,1,1,3,3,71,0,0,467,0,0.0,0
92,6,train,"Give me the person born, that is an artist, as Jim Sheppard.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Jim Sheppard""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person ?birthPlace WHERE {
  ?person a dbo:Artist ;
          foaf:name ""Jim Sheppard""@en .
  OPTIONAL { ?person dbo:birthPlace ?birthPlace . }
}
```",1,2,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
981,3,train,Give me the region of Time in Indonesia.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Time_in_Indonesia> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?region WHERE {
  ?location a dbo:Place ;
            dbo:country dbr:Indonesia ;
            dbo:timeZone ?timezone .
  OPTIONAL { ?location dbp:region ?region . }
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
