id,subid,split,question,sparql,generated_sparql,num_edges,num_edges_full,num_nodes,depth,breadth,base_depth,base_breadth,subgraphs,TP,FP,FN,Precision,Recall,F1
392,21,test,"Give me the region of Central European Time and entity in Italy and province of the residence, that is a settlement and Italian, of Sebastiano Bianchetti.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/province> ?result . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Central_European_Time> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy> . <http://dbpedia.org/resource/Sebastiano_Bianchetti> <http://dbpedia.org/property/residence> ?v1 . },"```sparql
SELECT ?region ?entityInItaly ?province WHERE {
  # Find the region associated with Central European Time
  <http://dbpedia.org/resource/Central_European_Time> <http://www.w3.org/2000/01/rdf-schema#seeAlso> ?timeZone .
  ?timeZone <http://dbpedia.org/ontology/timeZone> ?region .

  # Find an entity in Italy
  ?entityInItaly <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy> .

  # Find the residence of Sebastiano Bianchetti, which is a settlement and Italian
  <http://dbpedia.org/resource/Sebastiano_Bianchetti> <http://dbpedia.org/property/residence> ?residence .
  ?residence <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement> .
  ?residence <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy> .

  # Find the province of the residence
  ?residence <http://dbpedia.org/ontology/province> ?province .
}
```",4,6,5,2,3,2,3,28,0,0,1,0,0.0,0
421,24,test,Give me the person born as the birth name of Dino Merlin and native of the birthplace of Samir Bekrić.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . <http://dbpedia.org/resource/Dino_Merlin> <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Samir_Bekrić> <http://dbpedia.org/ontology/birthPlace> ?v2 . },"```sparql
SELECT ?person WHERE {
  ?dino dbpedia-owl:birthName ?merlinBirthName .
  ?samir dbpedia-owl:birthPlace ?bekricBirthPlace .
  ?person dbpedia-owl:birthName ?merlinBirthName .
  ?person dbpedia-ontology:nativeOf ?bekricBirthPlace .
}
```",4,4,5,2,2,2,3,28,0,0,1,0,0.0,0
427,55,test,"Give me the party of the person born, that is an office holder and a politician, as Romano Antonio Prodi and reference to the name of Italian People's Party (1994) and party of the father of Lamberto Andreotti.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ""Romano Antonio Prodi""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Lamberto_Andreotti> <http://dbpedia.org/property/father> ?v5 . ?v2 <http://dbpedia.org/ontology/party> ?result . ?v5 <http://dbpedia.org/ontology/party> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Italian_People's_Party_(1994)> <http://xmlns.com/foaf/0.1/name> ?v3 . }","```sparql
# Step 1: Identify Romano Antonio Prodi as an office holder and politician
SELECT ?prodi WHERE {
    ?prodi <http://dbpedia.org/ontology/birthName> ""Romano Antonio Prodi"" .
    ?prodi <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder> .
    ?prodi <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .
}

# Step 2: Ensure reference to Italian People's Party (1994)
SELECT ?party WHERE {
    ?prodi <http://dbpedia.org/property/reference> ?reference .
    ?reference <http://www.w3.org/2000/01/rdf-schema#label> ""Italian People's Party (1994)""@en .
}

# Step 3: Get the party of Romano Antonio Prodi
SELECT ?prodisParty WHERE {
    ?prodi <http://dbpedia.org/ontology/party> ?prodisParty .
}

# Step 4: Find Lamberto Andreotti's father and his party
SELECT ?father, ?fathersParty WHERE {
    ?andreotti <http://dbpedia.org/property/father> ?father .
    ?father <http://dbpedia.org/ontology/party> ?fathersParty .
    ?andreotti <http://www.w3.org/2000/01/rdf-schema#label> ""Lamberto Andreotti""@en .
}

# Step 5: Match the parties
SELECT DISTINCT ?prodisParty WHERE {
    { SELECT ?prodi ?prodisParty WHERE {
        ?prodi <http://dbpedia.org/ontology/birthName> ""Romano Antonio Prodi"" .
        ?prodi <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder> .
        ?prodi <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .
        ?prodi <http://dbpedia.org/property/reference> ?reference .
        ?reference <http://www.w3.org/2000/01/rdf-schema#label> ""Italian People's Party (1994)""@en .
        ?prodi <http://dbpedia.org/ontology/party> ?prodisParty .
    }}
    
    { SELECT ?father, ?fathersParty WHERE {
        ?andreotti <http://dbpedia.org/property/father> ?father .
        ?father <http://dbpedia.org/ontology/party> ?fathersParty .
        ?andreotti <http://www.w3.org/2000/01/rdf-schema#label> ""Lamberto Andreotti""@en .
    }}
    
    FILTER(?prodisParty = ?fathersParty)
}
```",6,8,7,2,3,3,3,71,0,0,1,0,0.0,0
996,19,test,Give me the force of the awardee of 1778.0 and entity in the award of the native of Palestine (region).,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> ""1778.0""^^<http://www.w3.org/2001/XMLSchema#double> . ?result <http://dbpedia.org/ontology/place> ?v4 . ?v0 <http://dbpedia.org/property/awards> ?v4 . ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Palestine_(region)> . ?result <http://dbpedia.org/ontology/commander> ?v2 . }","```sparql
SELECT ?force WHERE {
    ?entity <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Palestine_(region)> .
    ?entity <http://dbpedia.org/property/awards> ?award .
    ?award <http://www.w3.org/2000/01/rdf-schema#seeAlso> ?awardResource .
    ?awardResource <http://purl.org/dc/terms/date> ""1778""^^xsd:decimal .
    ?entity <http://dbpedia.org/ontology/militaryForce> ?force .
}
```",5,5,6,3,2,3,2,20,0,0,4,0,0.0,0
184,64,test,"Give me the parent of the child of the parent of Archduchess Margaret of Austria (born 1925) and parent of the native of the landmark at elevation, that is a settlement, of 96.0 and child of Archduke Joseph August of Austria.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_August_of_Austria> . ?v3 <http://dbpedia.org/ontology/elevation> ""96.0""^^<http://www.w3.org/2001/XMLSchema#double> . ?v2 <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Margaret_of_Austria_(born_1925)> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/property/father> ?v0 . }","```sparql
# Step 1: Find Archduchess Margaret's parent
SELECT ?parentMargaret WHERE {
    <http://dbpedia.org/resource/Archduchess_Margaret_of_Austria_(born_1925)> <http://www.w3.org/2000/01/rdf-schema#parent> ?parentMargaret .
}

# Step 2: Find the child of Archduchess Margaret's parent
SELECT ?childParent WHERE {
    ?parentMargaret <http://dbpedia.org/ontology/child> ?childParent .
}

# Step 3: Identify the native of a landmark at elevation 96.0, which is a settlement
SELECT ?nativeLandmark WHERE {
    ?landmark <http://www.w3.org/2000/01/rdf-schema#elevation> ""96.0""^^xsd:float ;
              <http://dbpedia.org/ontology/type> <http://dbpedia.org/resource/Settlement> .
    ?nativeLandmark <http://dbpedia.org/property/nativeOf> ?landmark .
}

# Step 4: Find the child of Archduke Joseph August
SELECT ?childJoseph WHERE {
    <http://dbpedia.org/resource/Archduke_Joseph_August_of_Austria> <http://www.w3.org/2000/01/rdf-schema#child> ?childJoseph .
}

# Step 5: Find the parent of both the child from step 2 and the native from step 3
SELECT DISTINCT ?parent WHERE {
    ?parent <http://dbpedia.org/ontology/child> ?childParent .
    ?parent <http://dbpedia.org/ontology/child> ?nativeLandmark .
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
492,46,test,"Give me the person decedent at the work of the author of French Algeria and commander in the war, that is a military conflict and an event, of Frédéric-Georges Herr.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/property/author> ?v2 . ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . ?v4 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/French_Algeria> <http://dbpedia.org/property/author> ?v2 . <http://dbpedia.org/resource/Frédéric-Georges_Herr> <http://dbpedia.org/ontology/battle> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
# Step 1: Find the war that is both a military conflict and an event associated with Frédéric-Georges Herr as a commander.
SELECT ?war WHERE {
    ?war rdf:type dbo:MilitaryConflict .
    ?war rdf:type dbo:Event .
    <http://dbpedia.org/resource/Frédéric-Georges_Herr> dbo:commander ?war .
}

# Step 2: Find the author of ""French Algeria.""
SELECT ?author WHERE {
    ?book dbo:title ""French Algeria""@en .
    ?book dbo:author ?author .
}

# Step 3: Determine the significant work location or place of employment for this author.
SELECT ?workLocation WHERE {
    ?author dbo:almaMater ?workLocation .
    # Alternatively, if almaMater is not available:
    # ?author dbo:employer ?workLocation .
}

# Step 4: Identify the person who died at this location.
SELECT ?decedent WHERE {
    ?deathEvent dbo:place ?workLocation .
    ?deathEvent dbo:deceased ?decedent .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
427,20,test,Give me the reference to Partito Popolare Italiano and party of the father of Lamberto Andreotti.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Lamberto_Andreotti> <http://dbpedia.org/property/father> ?v2 . ?result <http://xmlns.com/foaf/0.1/name> ""Partito Popolare Italiano""@en . }","```sparql
# Query to get the reference (URI) for Partito Popolare Italiano
SELECT ?partitoPopolareItaliano WHERE {
  ?partitoPopolareItaliano a dbo:PoliticalParty ;
                         rdfs:label ""Partito Popolare Italiano""@en .
}

# Query to find the party of Lamberto Andreotti's father
SELECT ?fatherParty WHERE {
  ?lambertoAndreotti dbo:father ?father .
  ?father dbo:partyAffiliation ?fatherParty .
  ?lambertoAndreotti rdfs:label ""Lamberto Andreotti""@en .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
747,61,test,"Give me the band of the person born as the persona of Shèna and band of the writer of the work, that is a song, of Amba Shepherd.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Amba_Shepherd> . ?v3 <http://dbpedia.org/property/birthName> ?v1 . ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/writer> ?v5 . <http://dbpedia.org/resource/Shèna> <http://xmlns.com/foaf/0.1/givenName> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
# Query 1: Band of the person born as Shèna
SELECT ?band WHERE {
    ?person <http://dbpedia.org/ontology/birthName> ""Shèna"" .
    ?person <http://dbpedia.org/property/memberOf> ?band .
}

UNION

# Query 2: Band of the writer of the song Amba Shepherd
SELECT ?band WHERE {
    ?song <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song> ;
          <http://purl.org/dc/terms/title> ""Amba Shepherd"" .
    ?song <http://dbpedia.org/property/writer> ?writer .
    ?writer <http://dbpedia.org/property/memberOf> ?band .
}
```",6,7,7,3,2,3,3,71,0,0,1,0,0.0,0
328,44,test,"Give me the awardee of Order of Suvorov and commander in the force of Ferenc Szálasi and leader of the office, that is a government agency, of Joseph Stalin.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Ferenc_Szálasi> . ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Order_of_Suvorov> . <http://dbpedia.org/resource/Joseph_Stalin> <http://dbpedia.org/property/office> ?v2 . ?v4 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v2 <http://dbpedia.org/ontology/leader> ?result . },"```sparql
SELECT ?entity WHERE {
  ?entity <http://dbpedia.org/ontology/awardee> <http://dbpedia.org/resource/Order_of_Suvorov>.
  ?entity <http://dbpedia.org/ontology/commander> ?force.
  ?force <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Ferenc_Szálasi>.
  ?entity <http://dbpedia.org/ontology/leader> ?office.
  ?office <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>.
  ?office <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Joseph_Stalin>.
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
294,28,test,"Give me the resting place of the architect of P. D. Houston Jr. House and entity in the birth place, that is a settlement, of Marion James and resting place of the awardee, that is a politician, of Distinguished Service Medal (U.S. Army).",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . ?result <http://dbpedia.org/ontology/location> ?v5 . ?v3 <http://dbpedia.org/ontology/restingPlace> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/P._D._Houston_Jr._House> <http://dbpedia.org/ontology/architect> ?v3 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Marion_James> <http://dbpedia.org/ontology/birthPlace> ?v5 . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Distinguished_Service_Medal_(U.S._Army)> . },"```sparql
# Part 1: Resting place of the architect of P. D. Houston Jr. House
SELECT ?architectRestingPlace WHERE {
    ?house dbo:architect ?architect .
    ?house rdfs:label ""P. D. Houston Jr. House"" .
    ?architect dbo:deathPlace ?architectRestingPlace .
}

# Part 2: Entity in the birthplace, that is a settlement, of Marion James
SELECT ?entity WHERE {
    ?marion dbo:birthPlace ?birthPlace .
    ?marion rdfs:label ""Marion James"" .
    ?birthPlace rdf:type dbo:Settlement .
    ?birthPlace dbo:location ?entity .
}

# Part 3: Resting place of the awardee, that is a politician, of Distinguished Service Medal (U.S. Army)
SELECT ?politicianRestingPlace WHERE {
    ?awardee dbo:award ""Distinguished Service Medal (U.S. Army)"" .
    ?awardee rdf:type dbo:Politician .
    ?awardee dbo:deathPlace ?politicianRestingPlace .
}
```",6,8,7,2,3,2,3,28,0,0,1,0,0.0,0
528,41,test,Give me the war of the military force of Battle of Pisagua and war of the commander in Battle of La Rinconada de Ate and force of Narciso Campero.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Battle_of_La_Rinconada_de_Ate> <http://dbpedia.org/ontology/commander> ?v4 . ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Narciso_Campero> . ?v2 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Pisagua> . ?v4 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
SELECT ?war WHERE {
  # Find the war related to Battle of Pisagua as a military force
  <http://dbpedia.org/resource/Battle_of_Pisagua> <http://dbpedia.org/ontology/militaryForce> ?force1 .
  
  # Find the war related to that force
  ?force1 <http://dbpedia.org/property/war> ?war .

  # Ensure this war is also associated with Battle of La Rinconada de Ate as a military force
  <http://dbpedia.org/resource/Battle_of_La_Rinconada_de_Ate> <http://dbpedia.org/ontology/militaryForce> ?force2 .
  
  # Find the same war related to that force
  ?force2 <http://dbpedia.org/property/war> ?war .

  # Ensure this war is also associated with Narciso Campero's military force
  <http://dbpedia.org/resource/Narciso_Campero> <http://dbpedia.org/ontology/militaryForce> ?force3 .
  
  # Find the same war related to that force
  ?force3 <http://dbpedia.org/property/war> ?war .
}
```",5,5,6,2,3,3,3,71,0,0,2,0,0.0,0
9,49,test,"Give me the alma mater of the mayor, that is a politician, of Northern Ireland Forum and figure known as the nickname of the entity, that is an organisation and an educational institution, in Northern Ireland.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/nickname> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/property/nickname> ?v1 . ?v2 <http://dbpedia.org/ontology/almaMater> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Northern_Ireland_Forum> <http://dbpedia.org/property/leader> ?v2 . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Northern_Ireland> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. },"```sparql
# Step 1: Identify the mayor of the Northern Ireland Forum who is also a politician
SELECT ?politician WHERE {
    ?politician <http://dbpedia.org/ontology/politician> _:b0 .
    ?politician <http://dbpedia.org/property/title> ""Mayor"" .
    ?politician <http://dbpedia.org/ontology/memberOf> <http://dbpedia.org/resource/Northern_Ireland_Forum> .
}

# Step 2: Check if this politician has a known nickname
SELECT ?nickname WHERE {
    ?politician :hasNickname ?nickname .
}

# Step 3: Verify the organization and educational institution associated with the nickname
SELECT ?organization ?institution WHERE {
    ?entity <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation> .
    ?entity <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution> .
    ?entity :knownAs ?nickname .
}

# Step 4: Retrieve the alma mater of this politician
SELECT ?almaMater WHERE {
    ?politician <http://dbpedia.org/property/almaMater> ?almaMater .
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
281,41,test,"Give me the entity in the birth place, that is a country, of Bob Heffron and war of the awardee of Knight Grand Cross of the Order of the Bath and war of New Zealand Army.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> ?v4 . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_the_Bath> . <http://dbpedia.org/resource/New_Zealand_Army> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Bob_Heffron> <http://dbpedia.org/ontology/birthPlace> ?v4 . },"```sparql
# Step 1: Get Bob Heffron's birthplace country
SELECT ?birthPlaceCountry WHERE {
    <http://dbpedia.org/resource/Bob_Heffron> <http://dbpedia.org/ontology/birthPlace> ?birthPlace.
    ?birthPlace <http://www.w3.org/2000/01/rdf-schema#seeAlso> ?countryResource.
    ?countryResource <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>.
    ?countryResource <http://www.w3.org/2004/02/skos/core#prefLabel> ?birthPlaceCountry.
}

# Step 2: Get entities in that country
SELECT DISTINCT ?entity WHERE {
    ?entity <http://www.w3.org/2000/01/rdf-schema#seeAlso> ?countryResource.
    FILTER(?birthPlaceCountry = ""Australia"") # Assuming we found Australia as the birthplace country
}

# Step 3: Get Knight Grand Cross awardees linked to New Zealand Army wars
SELECT DISTINCT ?awardee WHERE {
    ?awardee <http://dbpedia.org/ontology/honoraryTitle> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_the_Bath>.
    ?awardee <http://dbpedia.org/property/war> ?war.
    ?war <http://dbpedia.org/ontology/army> <http://dbpedia.org/resource/New_Zealand_Army>.
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
485,21,test,"Give me the entity in the birth place, that is a region, of Joseph Whitaker (naturalist) and entity in United Kingdom and birth place of Thomas Warner (poet).",SELECT ?result WHERE { <http://dbpedia.org/resource/Thomas_Warner_(poet)> <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?result <http://dbpedia.org/ontology/country> ?v1 . <http://dbpedia.org/resource/Joseph_Whitaker_(naturalist)> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . },"```sparql
SELECT DISTINCT ?entity WHERE {
  # Condition 1: Entity in the birth place of Joseph Whitaker, which is a region
  OPTIONAL {
    <http://dbpedia.org/resource/Joseph_Whitaker_(naturalist)> <http://dbpedia.org/ontology/birthPlace> ?birthPlaceJoseph .
    ?birthPlaceJoseph <http://www.w3.org/2000/01/rdf-schema#seeAlso> ?region .
    ?entity <http://dbpedia.org/property/location> ?region .
  }

  # Condition 2: Entity in the United Kingdom and birth place of Thomas Warner
  OPTIONAL {
    <http://dbpedia.org/resource/Thomas_Warner_(poet)> <http://dbpedia.org/ontology/birthPlace> ?birthPlaceThomas .
    ?birthPlaceThomas <http://www.w3.org/2000/01/rdf-schema#seeAlso> ?ukEntity .
    ?ukEntity <http://dbpedia.org/property/location> <http://dbpedia.org/resource/United_Kingdom> .
    ?entity = ?ukEntity .
  }
}
```",4,5,5,2,3,2,3,28,0,0,1,0,0.0,0
528,52,test,"Give me the war of the commander in Battle of La Rinconada de Ate and force of Narciso Campero and war of the military force of the entity, that is a societal event, in Chile.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Narciso_Campero> . ?v2 <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Battle_of_La_Rinconada_de_Ate> <http://dbpedia.org/ontology/commander> ?v5 . ?v3 <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Chile> . ?v5 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
# Wars related to the commander of Battle of La Rinconada de Ate
SELECT ?war1 WHERE {
  ?battle <http://dbpedia.org/ontology/commander> ?commander .
  ?commander <http://dbpedia.org/ontology/battle> ?war1 .
  FILTER(?battle = <http://dbpedia.org/resource/Battle_of_La_Rinconada_de_Ate>)
}

UNION

# Wars related to the military force commanded by Narciso Campero
SELECT ?war2 WHERE {
  ?force <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Narciso_Campero> .
  ?force <http://dbpedia.org/ontology/battle> ?war2 .
}

UNION

# Wars related to the military force of a societal event in Chile
SELECT ?war3 WHERE {
  ?event <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent> .
  ?event <http://dbpedia.org/property/country> <http://dbpedia.org/resource/Chile> .
  ?event <http://dbpedia.org/ontology/militaryForce> ?force .
  ?force <http://dbpedia.org/ontology/battle> ?war3 .
}
```",6,7,7,3,3,3,3,71,0,0,2,0,0.0,0
534,19,test,"Give me the birth place of the child, that is a politician and an office holder, of Desmond FitzGerald (politician) and headquarter of the owner of the location, that is a venue and an architectural structure, of 2012 Pro12 Grand Final.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/headquarter> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Venue>. <http://dbpedia.org/resource/Desmond_FitzGerald_(politician)> <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/ontology/owner> ?v4 . <http://dbpedia.org/resource/2012_Pro12_Grand_Final> <http://dbpedia.org/ontology/location> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ArchitecturalStructure>. },"```sparql
SELECT ?birthPlace WHERE {
    # Step 1: Find the child of Desmond FitzGerald who is a politician and an office holder
    ?child dbo:parent <http://dbpedia.org/resource/Desmond_FitzGerald_(politician)> .
    ?child rdf:type dbo:Politician ;
           dbo:officeHolder true .

    # Step 2: Get the birthplace of that individual
    ?child dbo:birthPlace ?birthPlace .

    # Step 3: Find the venue for the 2012 Pro12 Grand Final and its owner
    <http://dbpedia.org/resource/2012_Pro12_Grand_Final> dbo:location ?venue .
    ?venue rdf:type dbo:Venue ;
           dbo:architecturalStructure true .
    ?venue dbo:owner ?owner .

    # Step 4: Determine the headquarters of that owner
    ?owner dbo:headquarters ?birthPlace .
}
```",5,9,6,3,2,3,2,20,0,0,1,0,0.0,0
391,33,test,"Give me the actor of the claim to fame, that is a work, of the spouse of Sherry Hormann and native of Compton, California.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Compton,_California> . <http://dbpedia.org/resource/Sherry_Hormann> <http://dbpedia.org/ontology/spouse> ?v0 . ?v0 <http://dbpedia.org/ontology/knownFor> ?v3 . ?v3 <http://dbpedia.org/ontology/starring> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. }","```sparql
SELECT ?actor WHERE {
  ?spouse <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Sherry_Hormann> .
  ?spouse <http://www.w3.org/2000/01/rdf-schema#label> ""Compton, California""@en .
  ?work <http://dbpedia.org/property/claimToFame> ?spouse .
  ?work <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work> .
  ?work <http://dbpedia.org/ontology/actor> ?actor .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
54,54,test,Give me the child of the father of Soe Min Wimala Dewi and predecessor of Ameitta Thiri Maha Dhamma Dewi of Ava and parent of the child of the parent of Thado Minsaw of Prome.,SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/father> ?v0 . ?v5 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> . <http://dbpedia.org/resource/Soe_Min_Wimala_Dewi> <http://dbpedia.org/property/father> ?v3 . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Ameitta_Thiri_Maha_Dhamma_Dewi_of_Ava> . ?v3 <http://dbpedia.org/ontology/child> ?result . },"```sparql
SELECT ?result WHERE {
    ?soeMinWimalaDewi dbo:father ?father.
    ?ameittaThiriMahaDhammaDewiOfAva dbo:predecessor ?predecessor.
    ?father dbo:child ?predecessor.
    
    ?thadoMinsawOfProme dbo:parent ?parent.
    ?parent dbo:child ?child.
    
    ?child dbo:parent ?result.
}
```",6,6,7,3,3,3,3,71,0,167,1,0.0,0.0,0
10,27,test,"Give me the professional in the birth name of Sharon Kao and associated musical artist of Matt Colton and band member of the person born, that is an artist, as Luke Francis Vibert.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Sharon_Kao> <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Matt_Colton> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://dbpedia.org/property/birthName> ""Luke Francis Vibert""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
SELECT ?result WHERE {
  # Part 1: Professional in the birth name of Sharon Kao
  ?sharonBirthName <http://dbpedia.org/ontology/profession> ?profession .
  <http://dbpedia.org/resource/Sharon_Kao> <http://dbpedia.org/property/birthName> ?sharonBirthName .

  # Part 2: Associated musical artist of Matt Colton
  ?mattColton <http://dbpedia.org/ontology/associatedMusicalArtist> ?artist .
  <http://dbpedia.org/resource/Matt_Colton> ?mattColton .

  # Part 3: Band member of Luke Francis Vibert as an artist
  ?lukeVibert <http://dbpedia.org/ontology/bandMember> ?band .
  ?band <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
  <http://dbpedia.org/resource/Luke_Francis_Vibert> ?lukeVibert .

  # Find common result
  FILTER(?profession = ?artist && ?artist = ?band)
  BIND(?artist AS ?result)
}
```",5,6,6,2,3,2,3,28,0,0,1,0,0.0,0
528,65,test,Give me the war of the military force of Battle of Pisagua and war of the commander in the work of --01-09 and force of the person born as Narciso Campero Leyes.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> ?v3 . ?v3 <http://dbpedia.org/property/birthName> ""Narciso Campero Leyes""@en . ?v6 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/property/author> ""--01-09""^^<http://www.w3.org/2001/XMLSchema#gMonthDay> . ?v4 <http://dbpedia.org/ontology/battle> ?result . ?v4 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Pisagua> . ?v0 <http://dbpedia.org/ontology/commander> ?v6 . }","```sparql
# Step 1: Find the military force in Battle of Pisagua
SELECT ?force WHERE {
    <http://dbpedia.org/resource/Battle_of_Pisagua> <http://dbpedia.org/ontology/militaryForce> ?force .
}

# Step 2: Find the war associated with the commander from Battle of Pisagua
SELECT ?war WHERE {
    ?commander <http://dbpedia.org/ontology/battleCommanded> <http://dbpedia.org/resource/Battle_of_Pisagua> .
    ?commander <http://dbpedia.org/ontology/war> ?war .
}

# Step 3: Find the work related to --01-09 and its commander's war
SELECT ?workWar WHERE {
    ?work <http://www.w3.org/2000/01/rdf-schema#date> ""1901-01-09""^^xsd:date .
    ?commander <http://dbpedia.org/ontology/work> ?work .
    ?commander <http://dbpedia.org/ontology/war> ?workWar .
}

# Step 4: Find the military force associated with Narciso Campero Leyes
SELECT ?narcisoForce WHERE {
    <http://dbpedia.org/resource/Narciso_Campero_Leyes> <http://dbpedia.org/property/militaryForce> ?narcisoForce .
}

# Final Query: Combine to find common wars
SELECT DISTINCT ?commonWar WHERE {
    # Wars from Battle of Pisagua's commander
    ?commander1 <http://dbpedia.org/ontology/battleCommanded> <http://dbpedia.org/resource/Battle_of_Pisagua> .
    ?commander1 <http://dbpedia.org/ontology/war> ?commonWar .

    # Wars from work on --01-09's commander
    ?work .
    ?commander2 <http://dbpedia.org/ontology/work> ?work .
    ?commander2 <http://dbpedia.org/ontology/war> ?commonWar .

    # Wars from Narciso Campero Leyes' military force
    ?narcisoForce .
    ?force1 <http://dbpedia.org/property/militaryForce> ?narcisoForce .
    ?force1 <http://dbpedia.org/ontology/war> ?commonWar .
}
```",7,7,8,3,3,3,3,71,0,0,2,0,0.0,0
492,59,test,"Give me the person decedent at the work of the author of French Algeria and commander in the war, that is a military conflict and an event, of the commander in Battle of Verdun.",SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . ?v2 <http://dbpedia.org/property/author> ?v3 . <http://dbpedia.org/resource/Battle_of_Verdun> <http://dbpedia.org/ontology/commander> ?v0 . <http://dbpedia.org/resource/French_Algeria> <http://dbpedia.org/property/author> ?v3 . ?v0 <http://dbpedia.org/ontology/battle> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v5 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
# Step 1: Identify the war that is both a military conflict and an event related to the commander in the Battle of Verdun.
SELECT ?war WHERE {
    ?battle <http://dbpedia.org/ontology/commander> ?commander .
    ?commander <http://dbpedia.org/ontology/battle> ?war .
    ?battle <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/resource/Battle_of_Verdun> .
    ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
    ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event> .
}

# Step 2: Identify the author of ""French Algeria.""
SELECT ?author WHERE {
    ?work <http://purl.org/dc/terms/title> ""French Algeria"" .
    ?work <http://dbpedia.org/property/creator> ?author .
}

# Step 3: Determine the work associated with this author.
SELECT ?work WHERE {
    ?author <http://dbpedia.org/property/creator> ?work .
}

# Step 4: Identify the person who died at the location of this work.
SELECT ?decedent WHERE {
    ?work <http://dbpedia.org/ontology/location> ?location .
    ?event <http://dbpedia.org/ontology/location> ?location .
    ?event <http://dbpedia.org/property/death> ?decedent .
}
```",6,8,7,3,2,3,3,71,0,0,1,0,0.0,0
488,58,test,"Give me the administration of the father of the spouse, that is a royalty, of Tokugawa Masako and birth place of Enomoto Takeaki and death place of the father, that is a politician, of Yūki Hideyasu.",SELECT ?result WHERE { <http://dbpedia.org/resource/Yūki_Hideyasu> <http://dbpedia.org/property/father> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v5 <http://dbpedia.org/ontology/deathPlace> ?result . ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Tokugawa_Masako> . ?v1 <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/property/leader> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Enomoto_Takeaki> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT DISTINCT ?administration WHERE {
  # Part 1: Father of the spouse (that is a royalty) of Tokugawa Masako
  ?spouse wdt:P26 wd:Q123456;       # Spouse of Tokugawa Masako
          wdt:P31/wdt:P279* wd:Q43210. # Is a royalty

  ?father wdt:P22 ?spouse;           # Father of the spouse
          wdt:P106 wd:Q5.             # Is a human (to ensure we have a person)

  ?administration wdt:P137 ?father. # Administration associated with the father

  # Part 2: Birth place of Enomoto Takeaki
  OPTIONAL {
    wd:Q654321 wdt:P19 ?birthPlace.  # Birth place of Enomoto Takeaki
    FILTER(?administration = ?birthPlace)
  }

  # Part 3: Death place of the father (that is a politician) of Yūki Hideyasu
  OPTIONAL {
    ?yukiFather wdt:P22 wd:Q987654;   # Father of Yūki Hideyasu
                wdt:P106 wd:Q82955.   # Is a politician

    ?deathPlace wdt:P20 ?yukiFather.  # Death place of the father
    FILTER(?administration = ?deathPlace)
  }
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
801,56,test,"Give me the producer of Westside Story (song) and professional in the alter ego of The Shadow and associated musical artist of the writer, that is a musical artist and an artist, of the album, that is a musical work and a work, of What U See Is What U Get.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v2 . <http://dbpedia.org/resource/Westside_Story_(song)> <http://dbpedia.org/ontology/producer> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/What_U_See_Is_What_U_Get> <http://dbpedia.org/ontology/album> ?v0 . ?v0 <http://dbpedia.org/property/writer> ?v1 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"```sparql
# Step 1: Find the producer of ""Westside Story (song)""
SELECT ?producer WHERE {
    ?song <http://dbpedia.org/ontology/producer> ?producer .
    ?song <http://www.w3.org/2000/01/rdf-schema#label> ""Westside Story (song)""@en .
}

# Step 2: Find the professional in the alter ego of The Shadow
SELECT ?professional WHERE {
    ?person <http://dbpedia.org/ontology/alternateName> ""The Shadow"" .
    ?person <http://purl.org/dc/terms/profession> ?professional .
}

# Step 3: Identify the associated musical artist of the writer
SELECT ?associatedArtist WHERE {
    ?writer <http://dbpedia.org/property/wrote> ?work .
    ?work <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork> .
    ?writer <http://dbpedia.org/ontology/associatedMusicalArtist> ?associatedArtist .
}

# Step 4: Determine the writer of the album ""What U See Is What U Get""
SELECT ?writer WHERE {
    ?album <http://purl.org/dc/terms/creator> ?writer .
    ?album <http://www.w3.org/2000/01/rdf-schema#label> ""What U See Is What U Get""@en .
    ?writer <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
    ?writer <http://www.w3.org/2000/01/rdf-schema#label> ?label .
    FILTER(CONTAINS(LCASE(?label), ""artist""))
}

# Step 5: Combine the results to find the final answer
SELECT DISTINCT ?producer WHERE {
    # Producer of Westside Story (song)
    ?song <http://dbpedia.org/ontology/producer> ?producer .
    ?song <http://www.w3.org/2000/01/rdf-schema#label> ""Westside Story (song)""@en .

    # Professional in the alter ego of The Shadow
    ?person <http://dbpedia.org/ontology/alternateName> ""The Shadow"" .
    ?person <http://purl.org/dc/terms/profession> ?professional .

    # Associated musical artist of the writer
    ?writer <http://dbpedia.org/property/wrote> ?work .
    ?work <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork> .
    ?writer <http://dbpedia.org/ontology/associatedMusicalArtist> ?associatedArtist .

    # Writer of the album ""What U See Is What U Get""
    ?album <http://purl.org/dc/terms/creator> ?writer .
    ?album <http://www.w3.org/2000/01/rdf-schema#label> ""What U See Is What U Get""@en .
    ?writer <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
    ?writer <http://www.w3.org/2000/01/rdf-schema#label> ?label .
    FILTER(CONTAINS(LCASE(?label), ""artist""))

    # Ensure all entities are connected
    FILTER(?producer = ?professional)
    FILTER(?associatedArtist = ?writer)
}
```",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
232,54,test,"Give me the actor of the claim to fame, that is a film and a military conflict, of the professional in Actor, narrator and producer and child of the person born as John Devon Roland Pertwee and native of London.","SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/property/birthName> ""John Devon Roland Pertwee""@en . ?v3 <http://dbpedia.org/ontology/child> ?result . ?v0 <http://dbpedia.org/property/occupation> ""Actor, narrator and producer""@en . ?v0 <http://dbpedia.org/ontology/knownFor> ?v5 . ?v5 <http://dbpedia.org/ontology/starring> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/London> . }","```sparql
SELECT ?actor WHERE {
  ?person rdfs:label ""John Devon Roland Pertwee""@en .
  ?person dbo:nativePlace dbr:London .
  
  ?child dbo:parent ?person ;
         rdf:type dbo:Actor ;
         dbo:occupation ""narrator""@en, ""producer""@en .

  ?fame dbo:knownFor ?child ;
        a dbo:MilitaryConflict, dbo:Film .

  ?film dbo:actor ?actor .
  FILTER(?film = ?fame)
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
184,18,test,Give me the parent of Archduchess Ilona of Austria and parent of Géza von Habsburg and child of Archduke Joseph August of Austria.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_August_of_Austria> . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Géza_von_Habsburg> . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Ilona_of_Austria> . },"```sparql
SELECT ?parent WHERE {
    # Parent of Archduchess Ilona of Austria
    <http://dbpedia.org/resource/Archduchess_Ilona_of_Austria> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person> .
    ?parent <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Ilona_of_Austria> .

    # Parent of Géza von Habsburg
    <http://dbpedia.org/resource/G%C3%A9za_von_Habsburg> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person> .
    ?parent2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/G%C3%A9za_von_Habsburg> .

    # Common parent
    FILTER (?parent = ?parent2)

    # Parent of Archduke Joseph August of Austria
    ?commonParent <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduke_Joseph_August_of_Austria> .
    
    # Ensure the common parent is the same as the one found above
    FILTER (?parent = ?commonParent)
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
994,33,test,"Give me the associated musical artist of the band member, that is a band and a group and an organisation, of the band, that is an organisation, of Fredrik Thordendal and associated musical artist of S.A. Slayer.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Fredrik_Thordendal> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/S.A._Slayer> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
# Part 1: Find bands that are organizations
SELECT ?band WHERE {
    ?band <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>.
    ?band <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>.
}

# Part 2: Find band members of these bands associated with Fredrik Thordendal
SELECT DISTINCT ?member WHERE {
    ?band <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>.
    ?band <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>.
    ?member <http://dbpedia.org/property/memberOf> ?band.
    ?member <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Fredrik_Thordendal>.
}

# Part 3: Find associated musical artists for these band members
SELECT DISTINCT ?artist WHERE {
    ?member <http://dbpedia.org/property/memberOf> ?band.
    ?member <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BandMember>.
    ?member <http://dbpedia.org/ontology/associatedMusicalArtist> ?artist.
}

# Part 4: Find associated musical artist of S.A. Slayer
SELECT DISTINCT ?slayerArtist WHERE {
    <http://dbpedia.org/resource/S._A._Slayer> <http://dbpedia.org/ontology/associatedMusicalArtist> ?slayerArtist.
}
```",4,8,5,3,2,3,3,71,0,0,2,0,0.0,0
184,47,test,"Give me the parent of the native of Budapest and child of the child of the parent, that is a royalty, of Archduke Ladislaus Philipp of Austria.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Archduke_Ladislaus_Philipp_of_Austria> <http://dbpedia.org/ontology/parent> ?v0 . ?v2 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Budapest> . ?result <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/property/father> ?v4 . },"```sparql
SELECT ?result WHERE {
  # Step 1: Identify Archduke Ladislaus Philipp of Austria
  ?archduke rdf:type dbo:Archduke ;
            foaf:name ""Ladislaus Philipp of Austria"" .

  # Step 2: Find his parent
  ?parent dbo:child ?archduke .

  # Step 3: Determine the child of that parent
  ?grandchild dbo:child ?parent .

  # Step 4: Identify the native of Budapest who is also a child of the person found in step 3
  ?buda_native dbo:nativePlace dbr:Budapest ;
              dbo:child ?grandchild .

  # Step 5: Ensure this individual has royalty status and find their parent
  ?buda_native rdf:type dbo:Royalty .
  ?parent_of_buda_native dbo:child ?buda_native .

  # Return the result
  BIND(?parent_of_buda_native AS ?result)
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
617,60,test,"Give me the child of the child, that is a royalty, of the successor, that is a royalty, of Antiochus II Theos and parent of the child of the commander in Battle of Panium.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Antiochus_II_Theos> <http://dbpedia.org/ontology/successor> ?v3 . ?v0 <http://dbpedia.org/ontology/child> ?v1 . <http://dbpedia.org/resource/Battle_of_Panium> <http://dbpedia.org/ontology/commander> ?v0 . ?result <http://dbpedia.org/property/father> ?v2 . ?v2 <http://dbpedia.org/property/father> ?v3 . },"```sparql
SELECT ?finalResult WHERE {
  # Step 1: Find Antiochus II Theos's successor who is a royalty.
  ?successor <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Antiochus_II_Theos> .
  ?successor <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .

  # Step 2: Find the child of this successor who is a royalty.
  ?child1 <http://dbpedia.org/ontology/parent> ?successor .
  ?child1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .

  # Step 3: Find the commander in the Battle of Panium and their child.
  <http://dbpedia.org/resource/Battle_of_Panium> <http://dbpedia.org/ontology/commander> ?commander .
  ?child2 <http://dbpedia.org/ontology/parent> ?commander .

  # Step 4: Find the parent of this child (from step 3).
  ?finalResult <http://dbpedia.org/ontology/parent> ?child2 .
}
```",6,8,7,3,2,3,3,71,0,7,2,0.0,0.0,0
184,55,test,Give me the parent of the child of Archduke Joseph Francis of Austria and parent of the native of Budapest and child of the child of Archduke Joseph Karl of Austria.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v5 . ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Karl_of_Austria> . ?result <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Budapest> . ?result <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Francis_of_Austria> . },"```sparql
SELECT ?parent WHERE {
  # Step 1: Find the child of Archduke Joseph Francis of Austria
  ?child dbp:father <http://dbpedia.org/resource/Archduke_Joseph_Francis_of_Austria> .
  
  # Step 2: The parent of this child is Archduke Joseph Francis himself
  BIND(<http://dbpedia.org/resource/Archduke_Joseph_Francis_of_Austria> AS ?parent1)
  
  # Step 3: Find the native of Budapest who is a child of the child of Archduke Joseph Karl of Austria
  ?budaChild dbp:nativePlace <http://dbpedia.org/resource/Budapest> .
  ?grandchild dbp:father ?intermediateParent .
  ?intermediateParent dbp:father <http://dbpedia.org/resource/Archduke_Joseph_Karl_of_Austria> .
  FILTER(?budaChild = ?grandchild)
  
  # Step 4: Find the parent of this individual
  ?parent2 dbp:child ?budaChild .

  # Ensure both conditions are met for a single result
  FILTER(?parent1 = ?parent2)
}
```",6,6,7,2,3,3,3,71,0,0,1,0,0.0,0
92,37,test,"Give me the band of Joseph Michael and associated musical artist of the person born, that is an artist, as the actor of Return to Nuke 'Em High Volume 1.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Joseph_Michael> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v3 <http://dbpedia.org/property/birthName> ?v0 . <http://dbpedia.org/resource/Return_to_Nuke_'Em_High_Volume_1> <http://dbpedia.org/property/starring> ?v0 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT ?actor ?artistPerson ?band ?associatedArtist WHERE {
  # Step 1: Identify the actor of ""Return to Nuke 'Em High Volume 1""
  <http://dbpedia.org/resource/Return_to_Nuke_%27Em_High_Volume_1> <http://dbpedia.org/ontology/starring> ?actor .

  # Step 2: Find a person born as an artist and associated with the actor
  ?artistPerson <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist> .
  ?artistPerson <http://dbpedia.org/property/birthPlace> ?birthPlace .
  ?actor <http://dbpedia.org/ontology/associatedWith> ?artistPerson .

  # Step 3: Determine the band of Joseph Michael
  <http://dbpedia.org/resource/Joseph_Michael> <http://dbpedia.org/ontology/memberOf> ?band .

  # Step 4: Find the associated musical artist for the person identified in step 2
  ?artistPerson <http://dbpedia.org/ontology/associatedMusicalArtist> ?associatedArtist .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
528,69,test,"Give me the force of the person born as the birth name of Narciso Campero and war of the commander in Battle of La Rinconada de Ate and war of the military force of the entity, that is a societal event, in Chile.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/property/birthName> ?v1 . ?v7 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Battle_of_La_Rinconada_de_Ate> <http://dbpedia.org/ontology/commander> ?v7 . ?v4 <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Chile> . ?v3 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/commander> ?v2 . ?v3 <http://dbpedia.org/ontology/battle> ?v4 . <http://dbpedia.org/resource/Narciso_Campero> <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
# Part 1: Force of Narciso Campero
SELECT ?force WHERE {
    <http://dbpedia.org/resource/Narciso_Campero> <http://dbpedia.org/ontology/militaryForce> ?force .
}

UNION

# Part 2: War of the commander in Battle of La Rinconada de Ate
SELECT ?war WHERE {
    <http://dbpedia.org/resource/Battle_of_La_Rinconada_de_Ate> <http://dbpedia.org/ontology/commander> ?commander .
    ?commander <http://dbpedia.org/ontology/battle> ?battle .
    ?battle <http://dbpedia.org/ontology/war> ?war .
}

UNION

# Part 3: War of the military force of an entity that is a societal event in Chile
SELECT ?war WHERE {
    ?event <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent> .
    ?event <http://dbpedia.org/property/country> <http://dbpedia.org/resource/Chile> .
    ?event <http://dbpedia.org/ontology/militaryForce> ?force .
    ?force <http://dbpedia.org/ontology/war> ?war .
}
```",8,9,9,3,3,3,3,71,0,0,2,0,0.0,0
48,20,test,"Give me the band of the actor, that is a musical artist, of the show with Stacey Dash and band of the writer of the work, that is a work, of Shellback (record producer).",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Stacey_Dash> . ?v1 <http://dbpedia.org/property/writer> ?v2 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Shellback_(record_producer)> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://dbpedia.org/property/starring> ?v5 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. },"```sparql
# Part 1: Show with Stacey Dash and actor who is a musical artist
SELECT ?actorBand WHERE {
    ?show dbo:starring <http://dbpedia.org/resource/Stacey_Dash> .
    ?actor dbo:role ?show ;
           dbo:musicalArtist true ;
           dbo:band ?actorBand .
}

# Part 2: Work of Shellback and writer's band
SELECT ?writerBand WHERE {
    ?work dbo:producer <http://dbpedia.org/resource/Shellback_(record_producer)> .
    ?writer dbo:writtenWork ?work ;
            dbo:band ?writerBand .
}
```",6,8,7,3,2,3,2,20,0,0,3,0,0.0,0
314,21,test,"Give me the awardee of 30 and commander in the profession, that is an event and a societal event, of Lisa Gavrić and person deceased at Madrid.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Lisa_Gavrić> <http://dbpedia.org/property/occupation> ?v0 . ?result <http://dbpedia.org/property/awards> ""30""^^<http://www.w3.org/2001/XMLSchema#integer> . ?result <http://dbpedia.org/ontology/restingPlace> <http://dbpedia.org/resource/Madrid> . }","```sparql
SELECT ?awardee WHERE {
  ?entity <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>.
  ?entity <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>.
  
  ?awardee <http://dbpedia.org/property/award> ?entity.
  FILTER(CONTAINS(LCASE(?awardee), ""30"")).
  
  ?profession <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>.
  ?profession <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>.
  
  <http://dbpedia.org/resource/Lisa_Gavrić> <http://dbpedia.org/property/profession> ?profession.
  
  ?deceasedPerson <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>.
  ?deceasedPerson <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Madrid>.
  
  ?deceasedPerson <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?entity.
}
```",4,6,5,2,3,2,3,28,0,0,1,0,0.0,0
161,50,test,"Give me the commander in the force, that is an event, of Emilio Mola and military force of the force, that is a societal event and a military conflict, of the predecessor of Indalecio Prieto.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/commander> ?v0 . ?result <http://dbpedia.org/ontology/battle> ?v4 . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Emilio_Mola> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Indalecio_Prieto> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
# Step 1: Find the predecessor of Indalecio Prieto
SELECT ?predecessor WHERE {
    <http://dbpedia.org/resource/Indalecio_Prieto> <http://dbpedia.org/ontology/predecessor> ?predecessor .
}

# Step 2: Identify the military force associated with the societal event and military conflict of this predecessor
SELECT ?militaryForce WHERE {
    ?societalEvent <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocialEvent>.
    ?societalEvent <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>.
    ?predecessor <http://dbpedia.org/property/militaryForce> ?militaryForce .
}

# Step 3: Find the commander of this military force
SELECT ?commander WHERE {
    ?militaryForce <http://dbpedia.org/ontology/commander> ?commander .
}

# Step 4: Identify the event in which Emilio Mola was a commander
SELECT ?event WHERE {
    <http://dbpedia.org/resource/Emilio_Mola> <http://dbpedia.org/ontology/commander> ?event .
    ?event <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event> .
}

# Step 5: Find the commander of this event
SELECT ?finalCommander WHERE {
    ?event <http://dbpedia.org/ontology/commander> ?finalCommander .
}
```",5,8,6,3,2,3,3,71,0,0,32,0,0.0,0
767,66,test,"Give me the entity in the administration, that is a settlement, of Green and reference to the alter ego of the persona, that is a fictional character, of Matthew Burland and alma mater of the administration of George K. Nash.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/alterEgo> ""Matthew Burland""@en . ?v1 <http://dbpedia.org/property/alterEgo> ?v2 . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v6 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/George_K._Nash> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v3 <http://dbpedia.org/property/leaderParty> ""Green""@en . ?v6 <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://dbpedia.org/ontology/state> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. }","```sparql
SELECT ?entity WHERE {
  ?admin <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>.
  
  ?burlandFictionalCharacter <http://dbpedia.org/property/alterEgo> ?alterEgo.
  ?burlandFictionalCharacter <http://www.w3.org/2000/01/rdf-schema#label> ""Matthew Burland""@en.

  ?nashAlmaMater <http://xmlns.com/foaf/0.1/alumniOf> <http://dbpedia.org/resource/George_K._Nash>.
  
  ?entity <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?admin.
  ?entity <http://dbpedia.org/ontology/reference> ?alterEgo.
  ?entity <http://dbpedia.org/property/almaMater> ?nashAlmaMater.
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
182,21,test,Give me the war of Jagath Dias and entity in the nationality of Tamara Kunanayakam and war of Mahesh Senanayake.,SELECT ?result WHERE { <http://dbpedia.org/resource/Tamara_Kunanayakam> <http://dbpedia.org/ontology/nationality> ?v0 . <http://dbpedia.org/resource/Mahesh_Senanayake> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Jagath_Dias> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> ?v0 . },"```sparql
# Query for the war of Jagath Dias
SELECT ?warJagath WHERE {
  <http://dbpedia.org/resource/Jagath_Dias> <http://dbpedia.org/ontology/battle> ?warJagath .
  ?warJagath a <http://dbpedia.org/ontology/MilitaryConflict> .
}

# Query for the entity in the nationality of Tamara Kunanayakam
SELECT DISTINCT ?entity WHERE {
  <http://dbpedia.org/resource/Tamara_Kunanayakam> <http://www.w3.org/2000/01/rdf-schema#label> ""Tamara Kunanayakam""@en .
  <http://dbpedia.org/resource/Tamara_Kunanayakam> <http://dbpedia.org/ontology/nationality> ?nationality .
  ?entity <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?nationality .
}

# Query for the war of Mahesh Senanayake
SELECT ?warMahesh WHERE {
  <http://dbpedia.org/resource/Mahesh_Senanayake> <http://dbpedia.org/ontology/battle> ?warMahesh .
  ?warMahesh a <http://dbpedia.org/ontology/MilitaryConflict> .
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
92,71,test,"Give me the associated musical artist of the person born, that is an artist, as the actor of Return to Nuke 'Em High Volume 1 and band member of the reference, that is an artist, to the name of Nevermore (2006 film) and band of the person born as the birth name of Joseph Michael.",SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Joseph_Michael> <http://dbpedia.org/property/birthName> ?v7 . ?v8 <http://dbpedia.org/property/birthName> ?v7 . ?v2 <http://xmlns.com/foaf/0.1/name> ?v1 . <http://dbpedia.org/resource/Return_to_Nuke_'Em_High_Volume_1> <http://dbpedia.org/property/starring> ?v4 . ?v5 <http://dbpedia.org/property/birthName> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Nevermore_(2006_film)> <http://xmlns.com/foaf/0.1/name> ?v1 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?result <http://dbpedia.org/ontology/bandMember> ?v8 . },"```sparql
SELECT ?associatedMusicalArtist WHERE {
  # Step 1: Find the actor of ""Return to Nuke 'Em High Volume 1""
  ?actor a dbo:Actor ;
         dbo:actedIn <http://dbpedia.org/resource/Return_to_Nuke_%27Em_High_Volume_1> .

  # Step 2: Find the reference to ""Nevermore (2006 film)"" and its band member
  ?film a dbo:Film ;
        rdfs:label ""Nevermore (2006 film)""@en .
  ?bandMember dbo:memberOf ?film .

  # Step 3: Find Joseph Michael's birth name and his associated band
  ?person foaf:name ""Joseph Michael"" ;
          foaf:birthName ?birthName .
  ?person dbo:memberOf ?band .

  # Step 4: For each identified person, find their associated musical artist
  OPTIONAL { ?actor dbo:associatedMusicalArtist ?associatedMusicalArtist . }
  OPTIONAL { ?bandMember dbo:associatedMusicalArtist ?associatedMusicalArtist . }
  OPTIONAL { ?person dbo:associatedMusicalArtist ?associatedMusicalArtist . }
}
```",9,11,10,3,3,3,3,71,0,0,1,0,0.0,0
92,30,test,Give me the band of the person born as Joseph Michael Furney and band member of Nevermore and associated musical artist of Jim Sheppard.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Jim_Sheppard> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Nevermore> . ?result <http://dbpedia.org/ontology/bandMember> ?v1 . ?v1 <http://dbpedia.org/property/birthName> ""Joseph Michael Furney""@en . }","```sparql
# Step 1: Identify the person born as Joseph Michael Furney
SELECT ?person WHERE {
    ?person <http://dbpedia.org/ontology/birthName> ""Joseph Michael Furney"" .
}

# Step 2: Find the band(s) he is a member of, particularly Nevermore
SELECT DISTINCT ?band WHERE {
    ?person <http://dbpedia.org/ontology/memberOf> ?band .
    FILTER EXISTS { ?band <http://dbpedia.org/property/name> ""Nevermore"" }
}

# Step 3: Determine if there are other bands or musical artists he is associated with, especially involving Jim Sheppard
SELECT DISTINCT ?associatedBand WHERE {
    ?person <http://dbpedia.org/ontology/memberOf> ?associatedBand .
    OPTIONAL { 
        ?associatedBand <http://dbpedia.org/property/associatedMusicalArtist> <http://dbpedia.org/resource/Jim_Sheppard> .
    }
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
55,21,test,"Give me the band member of Metallica and band member of Guns N' Roses and band of the reference, that is a band, to Newsted.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://xmlns.com/foaf/0.1/name> ""Newsted""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Guns_N'_Roses> . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Metallica> . }","```sparql
SELECT ?entity WHERE {
  ?entity <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/Metallica> .
  ?entity <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/Guns_N%27_Roses> .
  ?reference <http://dbpedia.org/property/band> ?entity .
  ?reference rdfs:label ""Newsted""@en .
  ?entity a <http://dbpedia.org/ontology/Band> .
}
```",4,5,5,2,3,2,3,28,0,0,1,0,0.0,0
801,22,test,"Give me the associated musical artist of the writer, that is a musical artist and an artist, of 40 Dayz & 40 Nightz and professional in .","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/occupation> """"@en . <http://dbpedia.org/resource/40_Dayz_&_40_Nightz> <http://dbpedia.org/property/writer> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
SELECT ?writer ?associatedArtist WHERE {
    ?entity rdfs:label ""40 Dayz & 40 Nightz"" .
    ?entity dbo:artist ?writer .
    ?writer rdf:type <http://dbpedia.org/ontology/MusicalArtist> .
    ?writer rdf:type <http://dbpedia.org/ontology/Artist> .
    ?writer foaf:associatedMusicalArtist ?associatedArtist .
}
```",3,5,4,2,2,3,3,71,0,0,22,0,0.0,0
391,46,test,"Give me the actor of the claim to fame, that is a work, of Michael Ballhaus and native of the figure known as the nick name of Jackson, Tennessee.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/nickname> ?v2 . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Michael_Ballhaus> <http://dbpedia.org/ontology/knownFor> ?v4 . <http://dbpedia.org/resource/Jackson,_Tennessee> <http://xmlns.com/foaf/0.1/nick> ?v2 . ?v4 <http://dbpedia.org/ontology/starring> ?result . }","```sparql
# Step 1: Get the nickname associated with Jackson, Tennessee
SELECT ?nickname WHERE {
    ?place rdfs:label ""Jackson, Tennessee""@en .
    ?place dbo:nickname ?nickname .
}

# Step 2: Find the figure known by that nickname
SELECT ?figure WHERE {
    ?figure foaf:name ?nickname .
}

# Step 3: Determine the native place of that person
SELECT ?nativePlace WHERE {
    ?figure dbo:birthPlace ?nativePlace .
}

# Step 4: Identify works claimed as famous by Michael Ballhaus
SELECT ?work WHERE {
    <http://dbpedia.org/resource/Michael_Ballhaus> dbo:claimToFame ?work .
}

# Step 5: Retrieve actors involved in those works
SELECT DISTINCT ?actor WHERE {
    ?work dbo:starring ?actor .
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
378,55,test,Give me the war of the commander in Peninsular War and war of the person born as Carl Pontus Gahn and claim to fame of the commander in Great Siege of Gibraltar.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/knownFor> ?result . <http://dbpedia.org/resource/Peninsular_War> <http://dbpedia.org/ontology/commander> ?v5 . ?v3 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Great_Siege_of_Gibraltar> <http://dbpedia.org/ontology/commander> ?v2 . ?v3 <http://dbpedia.org/property/birthName> ""Carl Pontus Gahn""@en . ?v5 <http://dbpedia.org/ontology/battle> ?result . }","```sparql
# Query 1: Find the war commanded by the commander in the Peninsular War
SELECT ?war1 WHERE {
    ?commander <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Peninsular_War>.
    ?commander <http://dbpedia.org/ontology/battle> ?war1.
}

# Query 2: Find the war of Carl Pontus Gahn
SELECT ?war2 WHERE {
    ?person <http://www.w3.org/2000/01/rdf-schema#label> ""Carl Pontus Gahn""@en .
    ?person <http://dbpedia.org/ontology/birthName> ""Carl Pontus Gahn"" .
    ?person <http://dbpedia.org/ontology/battle> ?war2.
}

# Query 3: Find the claim to fame of the commander in the Great Siege of Gibraltar
SELECT ?claimToFame WHERE {
    ?commander <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Great_Siege_of_Gibraltar>.
    ?commander <http://dbpedia.org/ontology/knownFor> ?claimToFame.
}

# Combine results
SELECT DISTINCT ?war1 ?war2 ?claimToFame WHERE {
    { 
        ?commander <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Peninsular_War>.
        ?commander <http://dbpedia.org/ontology/battle> ?war1.
    }
    UNION
    {
        ?person <http://www.w3.org/2000/01/rdf-schema#label> ""Carl Pontus Gahn""@en .
        ?person <http://dbpedia.org/ontology/birthName> ""Carl Pontus Gahn"" .
        ?person <http://dbpedia.org/ontology/battle> ?war2.
    }
    UNION
    {
        ?commander <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Great_Siege_of_Gibraltar>.
        ?commander <http://dbpedia.org/ontology/knownFor> ?claimToFame.
    }
}
```",6,6,7,2,3,3,3,71,0,0,2,0,0.0,0
55,26,test,"Give me the band member of the producer, that is a band, of Used to Love Her and band member of Metallica and band of the reference, that is a band, to Newsted.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Used_to_Love_Her> <http://dbpedia.org/ontology/producer> ?v4 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Metallica> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?v1 <http://xmlns.com/foaf/0.1/name> ""Newsted""@en . }","```sparql
# Step 1: Find the producer of ""Used to Love Her"" who is also a band.
SELECT ?producerBand WHERE {
    ?song dbpedia-owl:title ""Used to Love Her""@en .
    ?song dbpedia-owl:producedBy ?producer .
    ?producer rdf:type dbo:MusicalArtist .
}

# Step 2: Find the band members of Metallica.
SELECT ?metallicaMember WHERE {
    ?metallicaMember dbo:band <http://dbpedia.org/resource/Metallica> .
}

# Step 3: Determine the reference band for Newsted and find its band members.
SELECT ?newstedBand WHERE {
    <http://dbpedia.org/resource/Jeff_Newsted> dbo:memberOf ?newstedBand .
}
SELECT ?newstedMember WHERE {
    ?newstedMember dbo:band ?newstedBand .
}

# Final query to find the intersection of these sets
SELECT DISTINCT ?person WHERE {
    VALUES ?producerBand { ?producerBand } # Replace with actual producer band from Step 1
    VALUES ?metallicaMember { ?metallicaMember }
    VALUES ?newstedMember { ?newstedMember }

    ?person dbo:band ?producerBand .
    ?person dbo:band <http://dbpedia.org/resource/Metallica> .
    ?person dbo:band ?newstedBand .
}
```",5,7,6,2,3,2,3,28,0,0,1,0,0.0,0
161,39,test,"Give me the military force of Spanish Civil War and commander in the force, that is an event, of the figure known as El Director.","SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/nick> ""El Director""@en . ?v1 <http://dbpedia.org/ontology/commander> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . }","```sparql
SELECT ?militaryForce ?event WHERE {
  ?militaryForce <http://dbpedia.org/ontology/event> ?spanishCivilWar .
  ?spanishCivilWar <http://www.w3.org/2000/01/rdf-schema#label> ""Spanish Civil War"" .

  ?figure <http://dbpedia.org/property/knowAs> ""El Director"" .
  ?figure <http://dbpedia.org/ontology/commander> ?militaryForce .
  
  ?event <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event> .
  ?figure <http://dbpedia.org/ontology/battle> ?event .
}
```",4,5,5,3,2,3,3,71,0,0,32,0,0.0,0
959,63,test,"Give me the manager of the team of Takashi Sekizuka and member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of the person born in 1958 and native of the residence, that is a country, of Yōichi Masuzoe.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?result <http://dbpedia.org/ontology/team> ?v1 . ?v0 <http://dbpedia.org/ontology/manager> ?result . ?v3 <http://dbpedia.org/ontology/birthYear> ""1958""^^<http://www.w3.org/2001/XMLSchema#gYear> . <http://dbpedia.org/resource/Yōichi_Masuzoe> <http://dbpedia.org/property/residence> ?v5 . ?v0 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Takashi_Sekizuka> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?result <http://dbpedia.org/ontology/birthPlace> ?v5 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?v3 <http://dbpedia.org/ontology/almaMater> ?v1 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. }","```sparql
# Step 1: Find Yōichi Masuzoe's residence country
SELECT ?residence WHERE {
    <http://dbpedia.org/resource/Y%C5%8Dichi_Masuzoe> <http://dbpedia.org/property/residence> ?residence .
}

# Step 2: Find a person born in 1958 and native of that country
SELECT ?person WHERE {
    ?person <http://www.w3.org/2000/01/rdf-schema#birthYear> ""1958""^^<http://www.w3.org/2001/XMLSchema#gYear> .
    ?person <http://dbpedia.org/ontology/nationality> ?residence .
}

# Step 3: Determine their alma mater
SELECT ?almaMater WHERE {
    ?person <http://dbpedia.org/property/almaMater> ?almaMater .
}

# Step 4: Check if the alma mater is Japanese, an organization, a university, and an educational institution
SELECT ?almaMater WHERE {
    ?almaMater <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organization> .
    ?almaMater <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University> .
    ?almaMater <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalOrganization> .
    ?almaMater <http://dbpedia.org/property/country> <http://dbpedia.org/resource/Japan> .
}

# Step 5: Find members of this alma mater
SELECT ?member WHERE {
    ?member <http://dbpedia.org/ontology/alumniOf> ?almaMater .
}

# Step 6: Identify Takashi Sekizuka's team
SELECT ?team WHERE {
    <http://dbpedia.org/resource/Takashi_Sekizuka> <http://dbpedia.org/property/teamManaged> ?team .
}

# Step 7: Find a manager of that team who is also a member of the alma mater
SELECT ?manager WHERE {
    ?manager <http://dbpedia.org/ontology/teamManaged> ?team .
    ?manager <http://dbpedia.org/ontology/alumniOf> ?almaMater .
}
```",7,12,8,3,3,3,3,71,0,0,3,0,0.0,0
959,49,test,"Give me the manager of the team of the manager, that is a sports manager, of 1998 Kashima Antlers season and member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of Eiji Ōtsuka.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/team> ?v2 . <http://dbpedia.org/resource/Eiji_Ōtsuka> <http://dbpedia.org/ontology/almaMater> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. <http://dbpedia.org/resource/1998_Kashima_Antlers_season> <http://dbpedia.org/ontology/manager> ?v4 . ?v0 <http://dbpedia.org/ontology/manager> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?v0 <http://dbpedia.org/ontology/manager> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. },"```sparql
SELECT ?managerOfTeam
WHERE {
    # Step 1: Find the sports manager for the 1998 Kashima Antlers season
    ?season <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/Kashima_Antlers> .
    ?season <http://dbpedia.org/property/year> ""1998""^^<http://www.w3.org/2001/XMLSchema#gYear> .
    ?season <http://dbpedia.org/ontology/coach> ?sportsManager .

    # Step 2: Find the team managed by this sports manager
    ?team <http://dbpedia.org/ontology/teamCoach> ?sportsManager .

    # Step 3: Find the manager of that team
    ?team <http://dbpedia.org/ontology/teamManager> ?managerOfTeam .

    # Step 4: Identify Eiji Ōtsuka's alma mater with specified properties
    <http://dbpedia.org/resource/Eiji_Ōtsuka> <http://dbpedia.org/property/almaMater> ?almaMater .
    ?almaMater <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organization> ;
               <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University> ;
               <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalOrganization> .
    ?almaMater <http://dbpedia.org/property/country> <http://dbpedia.org/resource/Japan> .
}
```",5,10,6,3,2,3,3,71,0,0,2,0,0.0,0
391,32,test,"Give me the actor of the claim to fame, that is a work, of Michael Ballhaus and native of the figure known as Hub City.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/nickname> ""Hub City""@en . <http://dbpedia.org/resource/Michael_Ballhaus> <http://dbpedia.org/ontology/knownFor> ?v3 . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://dbpedia.org/ontology/starring> ?result . }","```sparql
# Step 1: Find works related to Michael Ballhaus
SELECT ?work WHERE {
    <http://dbpedia.org/resource/Michael_Ballhaus> <http://purl.org/dc/terms/subject> ?work .
}

# Step 2: Identify the native city or figure known as ""Hub City""
SELECT ?hubCity WHERE {
    ?hubCity rdfs:label ""Hub City""@en .
}

# Step 3: Find an actor associated with the identified work
SELECT DISTINCT ?actor WHERE {
    # Assuming we found a specific work from step 1, replace `?work` with that URI
    ?work <http://dbpedia.org/ontology/starring> ?actor .
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
54,62,test,Give me the predecessor of Ameitta Thiri Maha Dhamma Dewi of Ava and parent of the child of the parent of Thado Minsaw of Prome and child of the father of the child of Thinkhaya of Pagan.,SELECT ?result WHERE { <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?v4 . ?v6 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> . ?v6 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Ameitta_Thiri_Maha_Dhamma_Dewi_of_Ava> . ?v3 <http://dbpedia.org/ontology/child> ?result . ?v4 <http://dbpedia.org/property/father> ?v3 . },"```sparql
# Step 1: Find predecessor of Ameitta Thiri Maha Dhamma Dewi of Ava
SELECT ?predecessor WHERE {
    ?ameitta dbo:predecessor ?predecessor .
    FILTER(STR(?ameitta) = ""Ameitta_Thiri_Maha_Dhamma_Dewi_of_Ava"")
}

# Step 2: Find the parent of Thado Minsaw of Prome, then find that parent's child
SELECT ?child WHERE {
    ?thado dbo:parent ?parent .
    ?parent dbo:child ?child .
    FILTER(STR(?thado) = ""Thado_Minsaw_of_Prome"")
}

# Step 3: Find the father of Thinkhaya of Pagan's child, then find that father's child
SELECT ?finalChild WHERE {
    ?thinkhaya dbo:child ?child .
    ?child dbo:father ?father .
    ?father dbo:child ?finalChild .
    FILTER(STR(?thinkhaya) = ""Thinkhaya_of_Pagan"")
}

# Combine results to find the final answer
SELECT ?predecessor, ?child AS ?parentOfThadoChild, ?finalChild AS ?childOfFatherOfThinkhayasChild WHERE {
    # Predecessor of Ameitta Thiri Maha Dhamma Dewi of Ava
    ?ameitta dbo:predecessor ?predecessor .
    FILTER(STR(?ameitta) = ""Ameitta_Thiri_Maha_Dhamma_Dewi_of_Ava"")

    # Parent of Thado Minsaw of Prome's child
    ?thado dbo:parent ?parent .
    ?parent dbo:child ?child .
    FILTER(STR(?thado) = ""Thado_Minsaw_of_Prome"")

    # Child of the father of Thinkhaya of Pagan's child
    ?thinkhaya dbo:child ?childOfThinkhaya .
    ?childOfThinkhaya dbo:father ?father .
    ?father dbo:child ?finalChild .
    FILTER(STR(?thinkhaya) = ""Thinkhaya_of_Pagan"")
}
```",7,7,8,3,3,3,3,71,0,0,1,0,0.0,0
488,49,test,"Give me the birth place of the commander in Boshin War and administration of the father of the spouse, that is a royalty, of Tokugawa Masako.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Tokugawa_Masako> . <http://dbpedia.org/resource/Boshin_War> <http://dbpedia.org/ontology/commander> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/leader> ?v1 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/father> ?v1 . },"```sparql
SELECT ?birthPlace WHERE {
  # Step 1: Find the commander in the Boshin War
  ?boshinWar dbpedia-owl:commander ?commander .
  
  # Ensure the Boshin War is a military conflict
  ?boshinWar rdf:type dbpedia-owl:MilitaryConflict .

  # Step 2: Get the birthplace of the commander
  ?commander dbpedia-owl:birthPlace ?birthPlace .

  # Step 3: Find Tokugawa Masako's spouse and their father
  dbpedia:Tokugawa_Masako dbpedia-owl:spouse ?spouse .
  
  # Ensure the spouse is royalty
  ?spouse rdf:type dbpedia-owl:Royalty .

  ?spouse dbpedia-owl:father ?father .

  # Step 4: Determine the administration under which the father served
  ?father dbpedia-owl:administers ?administration .

  # Ensure all entities are royalty
  ?commander rdf:type dbpedia-owl:Royalty .
  ?father rdf:type dbpedia-owl:Royalty .
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
747,71,test,"Give me the person born on the birth date of the person decedent, that is an athlete and a soccer player, at Zolotonosha and band of the person born as the persona of Shèna and band of the writer of the work, that is a song, of Amba Shepherd.",SELECT ?result WHERE { <http://dbpedia.org/resource/Shèna> <http://xmlns.com/foaf/0.1/givenName> ?v7 . ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v8 <http://dbpedia.org/property/birthName> ?v7 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v4 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Amba_Shepherd> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?result <http://dbpedia.org/ontology/birthDate> ?v2 . ?v1 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Zolotonosha> . ?v8 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://dbpedia.org/property/writer> ?v5 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v1 <http://dbpedia.org/ontology/birthDate> ?v2 . },"```sparql
# Step 1: Find Amba Shepherd's song
SELECT ?song WHERE {
    ?work <http://dbpedia.org/ontology/writer> <http://dbpedia.org/resource/Amba_Shepherd>.
    ?work <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>.
}

# Step 2: Find the writer of this song
SELECT ?writer WHERE {
    ?song <http://dbpedia.org/ontology/writer> ?writer.
}

# Step 3: Find the band of the person born as Shèna
SELECT ?band WHERE {
    ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>.
    ?person <http://dbpedia.org/property/birthName> ""Shèna"".
    ?person <http://dbpedia.org/ontology/memberOfBand> ?band.
}

# Step 4: Find the decedent's birth date
SELECT ?birthDate WHERE {
    ?decedent <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>.
    ?decedent <http://dbpedia.org/property/deathYear> ?deathYear.
    FILTER(?deathYear != ""unknown"").
    ?decedent <http://dbpedia.org/property/birthDate> ?birthDate.
}

# Step 5: Find an athlete and soccer player born on this date at Zolotonosha
SELECT ?person WHERE {
    ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>.
    ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>.
    ?person <http://dbpedia.org/property/birthDate> ?birthDate.
    ?person <http://dbpedia.org/property/placeOfBirth> <http://dbpedia.org/resource/Zolotonosha>.
}

# Final query combining all conditions
SELECT DISTINCT ?finalPerson WHERE {
    # Assuming intermediate variables are resolved in the above steps
    ?song <http://dbpedia.org/ontology/writer> ?writer.
    ?person1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>.
    ?person1 <http://dbpedia.org/property/birthName> ""Shèna"".
    ?person1 <http://dbpedia.org/ontology/memberOfBand> ?band.
    ?decedent <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>.
    ?decedent <http://dbpedia.org/property/deathYear> ?deathYear.
    FILTER(?deathYear != ""unknown"").
    ?decedent <http://dbpedia.org/property/birthDate> ?birthDate.
    ?athlete <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>.
    ?athlete <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>.
    ?athlete <http://dbpedia.org/property/birthDate> ?birthDate.
    ?athlete <http://dbpedia.org/property/placeOfBirth> <http://dbpedia.org/resource",9,12,10,3,3,3,3,71,0,0,1,0,0.0,0
492,63,test,"Give me the commander in the war, that is a military conflict and an event, of Frédéric-Georges Herr and person decedent at the capital, that is a settlement, of Algeria and person decedent at the work of the author of French Algeria.",SELECT ?result WHERE { ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Algeria> <http://dbpedia.org/ontology/capital> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v3 <http://dbpedia.org/property/author> ?v4 . ?v6 <http://dbpedia.org/ontology/commander> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/French_Algeria> <http://dbpedia.org/property/author> ?v4 . ?result <http://dbpedia.org/ontology/deathPlace> ?v3 . ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . <http://dbpedia.org/resource/Frédéric-Georges_Herr> <http://dbpedia.org/ontology/battle> ?v6 . },"```sparql
SELECT ?commander WHERE {
  # Step 1: Find the war involving Frédéric-Georges Herr
  ?war a dbo:MilitaryConflict ;
      a dbo:Event ;
      dbo:person ?herr .
  
  BIND(?herr AS ?frédéric_georges_herr)

  # Step 2: Identify the commander of that war
  ?war dbo:commander ?commander .

  # Step 3: Find the capital of Algeria
  ?capital a dbo:Settlement ;
           dbo:country dbr:Algeria ;
           rdfs:label ""Algiers""@en .
  
  # Step 4: Identify the author of French Algeria and their place of death
  ?author dbo:work dbr:French_Algeria ;
          dbo:deathPlace ?capital .

}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
617,68,test,"Give me the parent of the child of Antiochus (son of Antiochus III the Great) and child of the child, that is a royalty, of the successor, that is a royalty, of Antiochus II Theos and spouse of the child of the successor, that is a royalty, of Antiochus (son of Antiochus III the Great).",SELECT ?result WHERE { <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/child> ?v3 . ?v7 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/child> ?v3 . ?result <http://dbpedia.org/property/father> ?v4 . ?v0 <http://dbpedia.org/ontology/child> ?v7 . ?v4 <http://dbpedia.org/property/father> ?v5 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Antiochus_II_Theos> <http://dbpedia.org/ontology/successor> ?v5 . <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/successor> ?v0 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
SELECT ?parent
WHERE {
    # Step 1: Find Antiochus (son of Antiochus III the Great) and his child
    ?antiochus dbo:childOf <http://dbpedia.org/resource/Antiochus_III_the_Great> .
    ?antiochusChild dbo:parent ?antiochus .

    # Step 2: Find the parent of Antiochus's child
    ?grandchild dbo:parent ?antiochusChild .
    ?parent dbo:parent ?grandchild .

    # Step 3: Identify successor of Antiochus II Theos who is royalty and find their child
    ?successor dbo:succeededBy <http://dbpedia.org/resource/Antiochus_II_theos> ;
               a dbo:Royalty .
    ?successorChild dbo:parent ?successor .

    # Step 4: Determine the spouse of the successor's child
    ?spouse dbo:spouse ?successorChild .

    # Step 5: Ensure the parent from step 2 is related to the spouse found in step 4
    FILTER(?parent = ?spouse)
}
```",8,11,9,3,3,3,3,71,0,0,2,0,0.0,0
981,19,test,"Give me the birth place of the person born, that is a beauty queen, as the author of Kamikaze Girls and entity in the region of Time in Indonesia.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/birthName> ?v0 . <http://dbpedia.org/resource/Kamikaze_Girls> <http://dbpedia.org/property/author> ?v0 . ?v4 <http://dbpedia.org/ontology/birthPlace> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BeautyQueen>. ?result <http://dbpedia.org/ontology/country> ?v2 . ?v2 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Time_in_Indonesia> . },"```sparql
SELECT ?birthPlace WHERE {
  ?person <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BeautyQueen> .
  ?person <http://purl.org/dc/terms/creator> <http://dbpedia.org/resource/Kamikaze_Girls> .
  ?person <http://www.w3.org/2000/01/rdf-schema#seeAlso> ?region .
  ?region <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Time_(Indonesia)> .
}
```",5,6,6,3,2,3,2,20,0,0,19,0,0.0,0
378,60,test,"Give me the claim to fame of the commander in the war, that is a military conflict and a societal event and an event, of Thomas Trigge and war of the person born as the birth name of Carl Pontus Gahn.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/property/birthName> ?v3 . ?v2 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/property/birthName> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://dbpedia.org/ontology/commander> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/knownFor> ?result . <http://dbpedia.org/resource/Thomas_Trigge> <http://dbpedia.org/ontology/battle> ?v0 . },"```sparql
SELECT ?claimToFame WHERE {
  # Step 1: Find the birth name of Carl Pontus Gahn
  <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/ontology/birthName> ?birthName .

  # Step 2: Find the war associated with the person born as that birth name
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person> .
  ?person <http://dbpedia.org/property/birthName> ?birthName .
  ?person <http://dbpedia.org/ontology/war> ?war .

  # Step 3: Determine the commander in that war
  ?war <http://dbpedia.org/ontology/commander> ?commander .

  # Step 4: Identify wars that are both military conflicts and societal events
  ?societalWar <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
  ?societalWar <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocialEvent> .
  ?societalWar <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event> .

  # Step 5: Find the commander in the Battle of Verdun
  <http://dbpedia.org/resource/Battle_of_Verdun> <http://dbpedia.org/ontology/commander> ?verdunCommander .

  # Step 6: Determine the claim to fame of this commander
  ?commander <http://dbpedia.org/ontology/knownFor> ?claimToFame .
}
```",6,9,7,3,2,3,3,71,0,0,2,0,0.0,0
9,33,test,"Give me the alma mater of the awardee of the reference, that is an award, to Royal Medals and alma mater of John Alderdice, Baron Alderdice.","SELECT ?result WHERE { <http://dbpedia.org/resource/John_Alderdice,_Baron_Alderdice> <http://dbpedia.org/ontology/almaMater> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v3 <http://dbpedia.org/ontology/almaMater> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Royal Medals""@en . ?v3 <http://dbpedia.org/property/awards> ?v0 . }","```sparql
# Find the reference award related to Royal Medals
SELECT ?referenceAward WHERE {
  ?referenceAward <http://dbpedia.org/ontology/reference> <http://dbpedia.org/resource/Royal_Medals>.
}

# Find the awardee of this reference award and their alma mater
SELECT DISTINCT ?almaMater WHERE {
  ?awardee <http://dbpedia.org/ontology/award> ?referenceAward.
  ?awardee <http://dbpedia.org/property/almaMater> ?almaMater.
}

# Find the alma mater of John Alderdice, Baron Alderdice
SELECT DISTINCT ?johnAlmaMater WHERE {
  <http://dbpedia.org/resource/John_Alderdice,_Baron_Alderdice> <http://dbpedia.org/property/almaMater> ?johnAlmaMater.
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
981,18,test,"Give me the birth place of the person born, that is a beauty queen, as  and entity in the region of the time zone in Salak, North Sumatra.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v2 . ?v2 <http://dbpedia.org/property/timeZone> ?v1 . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v3 <http://dbpedia.org/property/birthName> """"@en . <http://dbpedia.org/resource/Salak,_North_Sumatra> <http://dbpedia.org/ontology/timeZone> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BeautyQueen>. }","```sparql
SELECT ?person ?birthPlace WHERE {
  ?person a dbo:BeautyQueen .
  ?person dbo:birthPlace ?birthPlace .

  ?birthPlace geo:hasGeometry ?geometry .
  ?geometry geo:asWKT ?wkt .
  
  # Assuming we have the WKT or coordinates for Salak, North Sumatra's time zone region
  FILTER (geo:sfWithin(?wkt, ""POLYGON((...))"")) 

  OPTIONAL { 
    ?birthPlace dbo:country dbr:Indonesia . 
  }
}
```

Note: The `FILTER` clause uses a placeholder polygon (`""POLYGON((...))""`), which should be replaced with the actual coordinates defining the region of Salak, North Sumatra's time zone. This requires external geographical data to accurately define.",5,6,6,3,2,3,2,20,0,0,19,0,0.0,0
54,49,test,"Give me the child of the father of Soe Min Wimala Dewi and predecessor of the child, that is an office holder and a royalty, of the reference to Thihapate of Mohnyin.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/successor> ?v1 . <http://dbpedia.org/resource/Soe_Min_Wimala_Dewi> <http://dbpedia.org/property/father> ?v2 . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Thihapate of Mohnyin""@en . ?v1 <http://dbpedia.org/property/father> ?v0 . }","```sparql
SELECT ?result WHERE {
  # Step 1: Identify Soe Min Wimala Dewi's father
  ?soeMinWimalaDewi dbo:father ?father .
  
  # Step 2: Find the child of Soe Min Wimala Dewi's father
  ?father dbo:child ?child .

  # Step 3: Determine the predecessor of that child
  ?predecessor dbo:successor ?child .

  # Step 4: Identify Thihapate of Mohnyin and find a reference related to him
  <http://dbpedia.org/resource/Thihapate_of_Mohnyin> dbo:reference ?reference .

  # Step 5: Find the child of this reference who is both an office holder and royalty
  ?reference dbo:child ?royalOfficeHolder .
  ?royalOfficeHolder a dbo:OfficeHolder ;
                   a dbo:Royalty .

  # Final step: Match the predecessor with the royal office holder
  FILTER(?predecessor = ?royalOfficeHolder)
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
161,48,test,"Give me the military force of the force, that is a societal event and an event and a military conflict, of the person decedent at Francoist Spain and commander in the force, that is an event, of Emilio Mola.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v3 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Francoist_Spain> . ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Emilio_Mola> . ?v2 <http://dbpedia.org/ontology/commander> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
SELECT ?militaryForce WHERE {
  ?force1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>.
  ?force1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>.
  ?force1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>.

  ?person <http://dbpedia.org/property/decedentAt> <http://dbpedia.org/resource/Francoist_Spain>.
  ?person <http://dbpedia.org/ontology/commander> ?force2.
  
  ?force2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>.

  ?person <http://dbpedia.org/property/militaryForce> ?militaryForce.

  FILTER(?person = <http://dbpedia.org/resource/Emilio_Mola>)
}
```",5,9,6,3,2,3,3,71,0,0,34,0,0.0,0
303,27,test,"Give me the party of Guillermo Endara and party of the person born, that is a politician, as Arnulfo Arias Madrid and entity in the country, that is a country, of El Valle de Antón.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Guillermo_Endara> <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/El_Valle_de_Antón> <http://dbpedia.org/ontology/country> ?v3 . ?v0 <http://dbpedia.org/property/birthName> ""Arnulfo Arias Madrid""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
# Find the party of Guillermo Endara
SELECT ?party1 WHERE {
  <http://dbpedia.org/resource/Guillermo_Endara> <http://dbpedia.org/ontology/party> ?party1 .
}

# Find the party of Arnulfo Arias Madrid
SELECT ?person ?party2 WHERE {
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> ;
          <http://dbpedia.org/property/birthName> ""Arnulfo Arias Madrid"" .
  ?person <http://dbpedia.org/ontology/party> ?party2 .
}

# Find entities in the country of El Valle de Antón
SELECT ?entity WHERE {
  <http://dbpedia.org/resource/El_Valle_de_Ant%C3%B3n> <http://dbpedia.org/property/country> ?country .
  ?entity <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?type ;
          <http://dbpedia.org/ontology/country> ?country .
}
```",5,7,6,2,3,2,3,28,0,0,1,0,0.0,0
488,45,test,"Give me the administration of the father of the spouse, that is a royalty, of Tokugawa Masako and birth place of Enomoto Takeaki and death place of Tokugawa Ieyasu.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Tokugawa_Masako> . <http://dbpedia.org/resource/Enomoto_Takeaki> <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/property/leader> ?v1 . <http://dbpedia.org/resource/Tokugawa_Ieyasu> <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
SELECT ?administration WHERE {
  # Find the spouse of Tokugawa Masako who is royalty
  ?spouse a dbo:Royalty ;
          dbo:spouse <http://dbpedia.org/resource/Tokugawa_Masako> .

  # Find the father of this spouse
  ?father dbo:child ?spouse .

  # Get the administration under which this father served
  ?administration dbo:head ?father .

  # Enomoto Takeaki's birthplace
  <http://dbpedia.org/resource/Enomoto_Takeaki> dbo:birthPlace ?birthPlace .

  # Tokugawa Ieyasu's death place
  <http://dbpedia.org/resource/Tokugawa_Ieyasu> dbo:deathPlace ?deathPlace .

  # Ensure the administration matches both birth and death places
  FILTER (?administration = ?birthPlace && ?administration = ?deathPlace)
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
281,61,test,"Give me the war of the profession, that is a military unit, of the professional, that is an office holder and a politician, in New Zealand Army and entity in the birth place, that is a country, of the leader, that is a politician, of 1962 New South Wales state election.",SELECT ?result WHERE { <http://dbpedia.org/resource/1962_New_South_Wales_state_election> <http://dbpedia.org/property/leader> ?v0 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/New_Zealand_Army> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/property/occupation> ?v3 . ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/ontology/birthPlace> ?v5 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?result <http://dbpedia.org/ontology/place> ?v5 . },"```sparql
# Step 1: Find the leader of the 1962 New South Wales state election who is a politician
SELECT ?leader WHERE {
    ?election dbpedia-owl:winner ?leader .
    ?leader rdf:type dbo:Politician .
    ?election dbpedia-owl:date ""1962""^^xsd:gYear .
    ?election dbpedia-owl:place <http://dbpedia.org/resource/New_South_Wales> .
}

# Step 2: Determine the birthplace country of this leader
SELECT ?birthCountry WHERE {
    ?leader dbo:birthPlace ?birthPlace .
    ?birthPlace dbo:country ?birthCountry .
}

# Step 3: Find an entity in that country
SELECT ?entity WHERE {
    ?entity dbo:country ?birthCountry .
}

# Step 4: Locate a professional who is both an office holder and a politician, associated with the New Zealand Army
SELECT ?professional WHERE {
    ?professional rdf:type dbo:Politician ;
                  dbo:officeHolder true ;
                  dbo:militaryUnit <http://dbpedia.org/resource/New_Zealand_Army> .
}

# Step 5: Identify the profession of this professional if it is a military unit
SELECT ?militaryUnit WHERE {
    ?professional dbo:militaryUnit ?militaryUnit .
}

# Step 6: Find the war related to this military unit
SELECT ?war WHERE {
    ?militaryUnit dbo:participatedIn ?war .
    ?war rdf:type dbo:MilitaryConflict .
}
```",6,11,7,3,2,3,3,71,0,0,1,0,0.0,0
421,23,test,Give me the person born as the birth name of Dino Merlin and band member of the awardee of [[#Awards and nominations.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?result <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Dino_Merlin> <http://dbpedia.org/property/birthName> ?v2 . ?v1 <http://dbpedia.org/property/awards> ""[[#Awards and nominations""@en . }","```sparql
SELECT ?person WHERE {
  # Step 1: Find Dino Merlin's birth name
  <http://dbpedia.org/resource/Dino_Merlin> <http://www.w3.org/2000/01/rdf-schema#label> ""Dino Merlin""@en .
  <http://dbpedia.org/resource/Dino_Merlin> <http://dbpedia.org/ontology/birthName> ?birthName .

  # Step 2: Find the band Dino Merlin is a member of
  OPTIONAL { 
    <http://dbpedia.org/resource/Dino_Merlin> <http://dbpedia.org/property/memberOf> ?band .
  }

  # Step 3: Find awards associated with the band and its members
  OPTIONAL {
    ?band <http://dbpedia.org/ontology/award> ?award .
    ?award <http://www.w3.org/2000/01/rdf-schema#label> ?awardLabel .
    
    # Find other members of the band who have won awards
    ?member <http://dbpedia.org/property/memberOf> ?band ;
            <http://dbpedia.org/ontology/birthName> ?person .
  }
}
```",4,4,5,2,2,2,3,28,0,0,1,0,0.0,0
801,19,test,Give me the producer of Westside Story (song) and professional in the alter ego of The Shadow.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v0 . <http://dbpedia.org/resource/Westside_Story_(song)> <http://dbpedia.org/ontology/producer> ?result . },"```sparql
# Step 1: Get the producer of Westside Story (song)
SELECT ?producer WHERE {
    <http://dbpedia.org/resource/Westside_Story_(song)> <http://purl.org/dc/terms/creator> ?producer .
}

# Step 2: Get the professional role or identity related to The Shadow's alter ego
SELECT ?professional WHERE {
    <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/ontology/profession> ?professional .
}

# Step 3: Find an entity that is both a producer of Westside Story (song) and the professional role related to The Shadow's alter ego
SELECT DISTINCT ?entity WHERE {
    VALUES (?role1) { (<http://purl.org/dc/terms/creator>) }
    VALUES (?role2) { (<http://dbpedia.org/ontology/profession>) }

    ?entity ?role1 <http://dbpedia.org/resource/Westside_Story_(song)> .
    ?entity ?role2 <http://dbpedia.org/resource/The_Shadow> .
}
```",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
994,44,test,"Give me the band member of the person born, that is a musical artist, as Donald Maynard Dokken and associated musical artist of the band member, that is a band and a group and an organisation, of Meshuggah and associated musical artist of S.A. Slayer.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Meshuggah> . ?v0 <http://dbpedia.org/property/birthName> ""Donald Maynard Dokken""@en . <http://dbpedia.org/resource/S.A._Slayer> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
SELECT ?bandMember ?associatedArtist1 ?associatedArtist2 WHERE {
  # Step 1: Identify Donald Maynard Dokken as a musical artist
  ?dokken a dbo:MusicalArtist ;
          foaf:name ""Donald Maynard Dokken"" ;
          dbo:birthPlace ?birthPlace .

  # Step 2: Find the band member associated with Dokken
  ?bandMember dbo:member ?dokken .
  
  # Step 3: Identify Meshuggah as a band that is both a group and an organization
  ?meshuggah a dbo:Band, dbo:Group, dbo:Organization ;
             foaf:name ""Meshuggah"" .

  # Step 4: Find the associated musical artist of the band member (Dokken's band)
  ?bandMember dbo:associatedMusicalArtist ?associatedArtist1 .
  
  # Step 5: Identify S.A. Slayer and find its associated musical artist
  ?sASlayer a dbo:Band ;
            foaf:name ""S.A. Slayer"" .
  ?sASlayer dbo:associatedMusicalArtist ?associatedArtist2 .
}
```",5,9,6,2,3,3,3,71,0,0,1,0,0.0,0
232,36,test,"Give me the child of Jon Pertwee and native of the residence, that is a settlement and British, of the native, that is a politician and an office holder, of France.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/France> . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/ontology/child> ?result . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v0 <http://dbpedia.org/property/residence> ?v1 . },"```sparql
# Step 1: Identify the native of France who is both a politician and an office holder.
SELECT ?native WHERE {
    ?native <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/France>.
    ?native <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>.
    ?native <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>.
}

# Step 2: Determine the residence of this individual that qualifies as a settlement in Britain.
SELECT ?residence WHERE {
    ?native <http://dbpedia.org/property/residence> ?residence.
    ?residence <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>.
    ?residence <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>.
}

# Step 3: Find Jon Pertwee's child whose native place matches the identified British settlement.
SELECT ?child WHERE {
    ?child <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Jon_Pertwee>.
    ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Human>.
    ?child <http://dbpedia.org/ontology/nativePlace> ?residence.
}
```",4,8,5,3,2,3,3,71,0,0,1,0,0.0,0
404,64,test,"Give me the child of the father of the spouse of Princess Victoria Louise of Prussia and spouse of the person born, that is a royalty, as the birth name of Princess Victoria Louise of Prussia and parent of Prince Ernest Augustus of Hanover (born 1914).",SELECT ?result WHERE { <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Prince_Ernest_Augustus_of_Hanover_(born_1914)> . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/property/birthName> ?v3 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/ontology/parent> ?v1 . ?v2 <http://dbpedia.org/property/birthName> ?v3 . },"```sparql
SELECT ?child WHERE {
    # Step 1: Identify Princess Victoria Louise of Prussia
    ?princess a dbo:Princess ;
              foaf:name ""Victoria Louise of Prussia"" .

    # Step 2: Find her spouse
    ?princess dbo:spouse ?spouse .

    # Step 3: Determine the father of that spouse
    ?spouse dbo:father ?father .

    # Step 4: Identify the child of this father (which should be the spouse)
    ?father dbo:child ?child .

    # Additional conditions:
    # The spouse was born as a royalty
    ?spouse dbo:birthName ?birthName ;
            a dbo:RoyalFamilyMember .

    # The spouse is also the parent of Prince Ernest Augustus of Hanover (born 1914)
    ?spouse dbo:child ?prince .
    ?prince foaf:name ""Prince Ernest Augustus of Hanover"" ;
           dbo:birthday ?birthday .
    FILTER(YEAR(?birthday) = 1914)
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
391,36,test,"Give me the native of Compton, California and actor of the movie, that is a movie and a work and a television show, with the professional in .","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/starring> ?v0 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Compton,_California> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v0 <http://dbpedia.org/property/occupation> """"@en . ?v1 <http://dbpedia.org/property/starring> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. }","```sparql
SELECT ?actor WHERE {
  ?person <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Compton,_California>.
  ?film <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>.
  ?film <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>.
  ?tvShow <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TVSeries>.
  ?film <http://dbpedia.org/property/adaptation> ?tvShow.
  ?person <http://dbpedia.org/ontology/profession> <http://dbpedia.org/resource/Actor>.
  ?film <http://dbpedia.org/ontology/starring> ?person.
}
```",4,7,5,3,2,3,3,71,0,0,1,0,0.0,0
9,55,test,"Give me the alma mater of the awardee of Royal Medal and figure known as the nickname of Queen's University Belfast and alma mater of the mayor, that is a politician, of Northern Ireland Forum.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ?v2 . <http://dbpedia.org/resource/Queen's_University_Belfast> <http://dbpedia.org/property/nickname> ?v2 . <http://dbpedia.org/resource/Northern_Ireland_Forum> <http://dbpedia.org/property/leader> ?v3 . ?v5 <http://dbpedia.org/ontology/almaMater> ?result . ?v3 <http://dbpedia.org/ontology/almaMater> ?result . ?v5 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Medal> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
# Step 1: Find awardees of the Royal Medal
SELECT ?awardee WHERE {
    ?awardee dbpedia-owl:award <http://dbpedia.org/resource/Royal_Medal> .
}

# Step 2: Identify the nickname associated with Queen's University Belfast
SELECT ?nickname WHERE {
    ?entity rdfs:label ""Queen's University Belfast""@en ;
            foaf:nick ?nickname .
}

# Step 3: Find the mayor of Northern Ireland Forum and their alma mater
SELECT ?mayor ?almaMater WHERE {
    ?mayor dbpedia-owl:occupation <http://dbpedia.org/resource/Politician> ;
           dbpedia-owl:officeHolder <http://dbpedia.org/resource/Northern_Ireland_Forum> .
    ?mayor foaf:almaMater ?almaMater .
}

# Step 4: Find the alma mater of the figure known as the nickname from step 2
SELECT ?figure ?almaMater WHERE {
    ?entity rdfs:label ""Queen's University Belfast""@en ;
            foaf:nick ?nickname .
    ?figure foaf:nick ?nickname ;
            foaf:almaMater ?almaMater .
}

# Final Step: Find the common alma mater
SELECT DISTINCT ?commonAlmaMater WHERE {
    VALUES ?entity { ?awardee ?figure ?mayor }
    ?entity foaf:almaMater ?commonAlmaMater .
}
```",6,7,7,2,3,3,3,71,0,0,1,0,0.0,0
328,40,test,Give me the commander in Eastern Front (World War II) and leader of People's Commissariat of Defense of the Soviet Union and awardee of the award of the commander in Volcano and Ryukyu Islands campaign.,SELECT ?result WHERE { <http://dbpedia.org/resource/People's_Commissariat_of_Defense_of_the_Soviet_Union> <http://dbpedia.org/ontology/leader> ?result . ?v2 <http://dbpedia.org/property/awards> ?v1 . <http://dbpedia.org/resource/Eastern_Front_(World_War_II)> <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Volcano_and_Ryukyu_Islands_campaign> <http://dbpedia.org/ontology/commander> ?v2 . ?result <http://dbpedia.org/property/awards> ?v1 . },"```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Eastern_Front_(World_War_II)> .
  ?person <http://dbpedia.org/ontology/leader> <http://dbpedia.org/resource/People's_Commissariat_of_Defense_of_the_Soviet_Union> .
  ?award <http://dbpedia.org/property/commanderIn> <http://dbpedia.org/resource/Volcano_and_Ryukyu_Islands_campaign> .
  ?person <http://dbpedia.org/ontology/awardee> ?award .
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
626,16,test,"Give me the awardee of the award of Aleksey Petrovich Yermolov and commander in the force, that is a military conflict, of Alexander I of Russia.",SELECT ?result WHERE { <http://dbpedia.org/resource/Aleksey_Petrovich_Yermolov> <http://dbpedia.org/property/awards> ?v3 . ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Alexander_I_of_Russia> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/property/awards> ?v3 . },"```sparql
# Find the awardee of an award related to Aleksey Petrovich Yermolov
SELECT ?awardee WHERE {
  ?award <http://dbpedia.org/ontology/receiver> ?awardee .
  ?award <http://dbpedia.org/property/relatedTo> <http://dbpedia.org/resource/Aleksey_Petrovich_Yermolov> .
}

# Find the commander in a military conflict involving Alexander I of Russia
SELECT ?commander WHERE {
  ?conflict <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
  ?conflict <http://dbpedia.org/property/commander> ?commander .
  ?conflict <http://dbpedia.org/property/participant> <http://dbpedia.org/resource/Alexander_I_of_Russia> .
}

# Find common entities between the two sets
SELECT DISTINCT ?commonEntity WHERE {
  VALUES ?commonEntity { ?awardee ?commander }
}
```",4,5,5,2,2,3,2,20,0,0,21,0,0.0,0
465,8,test,"Give me the death place of Jiřina Štěpničková and administration of the leader, that is a political party and an organisation, of Chamber of Deputies of the Czech Republic.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Chamber_of_Deputies_of_the_Czech_Republic> <http://dbpedia.org/property/leader> ?v0 . ?result <http://dbpedia.org/property/leaderParty> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. <http://dbpedia.org/resource/Jiřina_Štěpničková> <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
# Query to get the death place of Jiřina Štěpničková
SELECT ?deathPlace WHERE {
  <http://dbpedia.org/resource/Jiřina_Štěpničková> <http://www.w3.org/2002/07/owl#sameAs> ?person .
  ?person <http://dbpedia.org/ontology/deathPlace> ?deathPlace .
}

# Query to get the administration of the leader of Chamber of Deputies of the Czech Republic
SELECT ?administration WHERE {
  ?leader <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> ;
          <http://dbpedia.org/property/office> <http://dbpedia.org/resource/Chamber_of_Deputies_of_the_Czech_Republic> .
  ?leader <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?party .
  ?leader <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?organization .
  ?leader <http://dbpedia.org/ontology/memberOf> ?administration .
}
```",3,5,4,2,2,2,2,9,0,0,1,0,0.0,0
488,65,test,"Give me the death place of the father, that is a politician, of the father, that is an office holder, of Matsudaira Tadamasa and administration of the father of Emperor Go-Mizunoo and birth place of the commander in Boshin War.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> ?v3 . ?v6 <http://dbpedia.org/ontology/deathPlace> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Emperor_Go-Mizunoo> <http://dbpedia.org/property/father> ?v3 . ?v4 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Matsudaira_Tadamasa> <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/property/father> ?v6 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Boshin_War> <http://dbpedia.org/ontology/commander> ?v4 . },"```sparql
SELECT ?deathPlace WHERE {
  # Matsudaira Tadamasa's father who is a politician
  ?matPolitician dbo:child <http://dbpedia.org/resource/Matsudaira_Tadamasa> .
  ?matPolitician rdf:type dbo:Politician .

  # Death place of Matsudaira Tadamasa's father
  ?matPolitician dbo:deathPlace ?deathPlace .

  # Emperor Go-Mizunoo's father who is an office holder
  ?goOfficeHolder dbo:child <http://dbpedia.org/resource/Emperor_Go-Mizunoo> .
  ?goOfficeHolder rdf:type dbo:OfficeHolder .

  # Administration of Emperor Go-Mizunoo's father
  ?goOfficeHolder dbo:administration ?admin .

  # Commander in the Boshin War
  ?boshinCommander dbo:battle <http://dbpedia.org/resource/Boshin_War> .
  
  # Birth place of the commander in the Boshin War
  ?boshinCommander dbo:birthPlace ?deathPlace .

  FILTER(?admin = ?deathPlace)
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
488,68,test,"Give me the birth place of the commander in the war, that is a military conflict and an event and a societal event, of Saitō Hajime and administration of the father of Emperor Go-Mizunoo and death place of the father, that is a politician, of the father, that is an office holder, of Matsudaira Tadamasa.",SELECT ?result WHERE { <http://dbpedia.org/resource/Matsudaira_Tadamasa> <http://dbpedia.org/property/father> ?v0 . ?v4 <http://dbpedia.org/ontology/birthPlace> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v5 <http://dbpedia.org/ontology/commander> ?v4 . <http://dbpedia.org/resource/Saitō_Hajime> <http://dbpedia.org/ontology/battle> ?v5 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/property/father> ?v7 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v7 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Emperor_Go-Mizunoo> <http://dbpedia.org/property/father> ?v3 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/property/leader> ?v3 . },"```sparql
SELECT ?birthPlace
WHERE {
  # Part 1: War involving Saitō Hajime
  ?war a dbo:MilitaryConflict ;
      a dbo:Event ;
      a dbo:SocietalEvent ;
      dbo:participant [dbo:name ""Saitō Hajime""] .
  
  # Part 2: Commander of the war
  ?war dbo:commander ?commander .

  # Part 3: Birthplace of the commander
  ?commander dbo:birthPlace ?birthPlace .

  # Part 4: Administration under which Emperor Go-Mizunoo's father served
  ?administration dbo:head [dbo:name ""Emperor Go-Mizunoo""] .
  
  # Part 5: Father of Emperor Go-Mizunoo
  ?emperor dbp:father ?father .

  # Part 6: Death place of the father (politician)
  ?father a dbo:Politician ;
          dbo:deathPlace ?deathPlace .

  # Part 7: Father of Matsudaira Tadamasa who is an office holder
  ?matsudaira dbp:father ?officeHolder .
  
  # Part 8: Birthplace of the father (office holder)
  ?officeHolder a dbo:OfficeHolder ;
               dbo:birthPlace ?birthPlace .
}
```",8,13,9,3,3,3,3,71,0,0,1,0,0.0,0
184,57,test,"Give me the child of the child of the parent, that is a royalty, of Archduke Ladislaus Philipp of Austria and parent of Géza von Habsburg and parent of the child of Archduke Joseph Francis of Austria.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Géza_von_Habsburg> . ?result <http://dbpedia.org/property/father> ?v5 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Francis_of_Austria> . <http://dbpedia.org/resource/Archduke_Ladislaus_Philipp_of_Austria> <http://dbpedia.org/ontology/parent> ?v0 . ?result <http://dbpedia.org/ontology/child> ?v3 . },"```sparql
SELECT ?childOfChild WHERE {
  # Step 1: Find the parent of Archduke Ladislaus Philipp of Austria
  ?parent a dbo:Royalty ;
          dbo:spouse|dbo:child <http://dbpedia.org/resource/Archduke_Ladislaus_Philipp_of_Austria> .

  # Ensure this parent is also a parent of Géza von Habsburg
  ?parent dbo:child <http://dbpedia.org/resource/G%C3%A9za_von_Habsburg> .

  # Ensure this parent is also a parent of the child of Archduke Joseph Francis of Austria
  ?parent dbo:child ?intermediateChild .
  ?intermediateChild dbo:child <http://dbpedia.org/resource/Archduke_Joseph_Francis_of_Austria> .

  # Step 2: Find the child of this parent who is royalty
  ?royalChild a dbo:Royalty ;
              dbo:parent ?parent .

  # Step 3: Find the child of this royal individual
  ?secondLevelChild dbo:child ?royalChild .

  # Step 4: Find the child of this second-level child
  ?childOfChild dbo:child ?secondLevelChild .
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
488,50,test,"Give me the death place of the father, that is a politician, of the father, that is an office holder, of Matsudaira Tadamasa and administration of the father of Emperor Go-Mizunoo.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Matsudaira_Tadamasa> <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/property/leader> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Emperor_Go-Mizunoo> <http://dbpedia.org/property/father> ?v3 . ?v0 <http://dbpedia.org/property/father> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
SELECT ?deathPlace WHERE {
    # Step 1: Identify Matsudaira Tadamasa's father who is an office holder.
    ?matFather a dbo:OfficeHolder ;
               dbo:child <http://dbpedia.org/resource/Matsudaira_Tadamasa> .

    # Step 2: Determine the father of Emperor Go-Mizunoo and his administration role.
    ?goFather a dbo:OfficeHolder ;
              dbo:child <http://dbpedia.org/resource/Emperor_Go-Mizunoo> .

    # Step 3: Find the politician father for both identified fathers from steps 1 and 2.
    ?politician a dbo:Politician ;
                dbo:child ?matFather, ?goFather .

    # Step 4: Retrieve the death place of this common politician.
    ?politician dbo:deathPlace ?deathPlace .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
427,56,test,"Give me the party of the person born, that is an office holder and a politician, as the birth name of Romano Prodi and party of Giulio Andreotti and reference to the name of Italian People's Party (1994).",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://xmlns.com/foaf/0.1/name> ?v2 . <http://dbpedia.org/resource/Giulio_Andreotti> <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/property/birthName> ?v0 . ?v1 <http://dbpedia.org/ontology/party> ?result . ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Italian_People's_Party_(1994)> <http://xmlns.com/foaf/0.1/name> ?v2 . },"```sparql
# Step 1: Find Romano Prodi's birth name and his office holder/politician identity
SELECT ?prodiOfficeHolder WHERE {
    ?prodiOfficeHolder <http://dbpedia.org/ontology/birthName> ""Romano Prodi"" .
    ?prodiOfficeHolder <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder> .
    ?prodiOfficeHolder <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .
}

# Step 2: Retrieve the political party of Romano Prodi
SELECT ?partyProdi WHERE {
    ?prodiOfficeHolder <http://dbpedia.org/ontology/party> ?partyProdi .
}

# Step 3: Retrieve the political party of Giulio Andreotti
SELECT ?partyAndreotti WHERE {
    <http://dbpedia.org/resource/Giulio_Andreotti> <http://dbpedia.org/ontology/party> ?partyAndreotti .
}

# Step 4: Reference the Italian People's Party (1994)
SELECT ?italianPeopleParty WHERE {
    ?italianPeopleParty <http://www.w3.org/2000/01/rdf-schema#label> ""Italian People's Party (1994)"" .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
232,66,test,"Give me the native of the residence, that is a settlement and British, of the native, that is a politician and an office holder, of France and actor of the claim to fame, that is a film and a military conflict, of Sean Pertwee and child of the person born as John Devon Roland Pertwee.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/birthName> ""John Devon Roland Pertwee""@en . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. <http://dbpedia.org/resource/Sean_Pertwee> <http://dbpedia.org/ontology/knownFor> ?v6 . ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/France> . ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v3 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://dbpedia.org/property/residence> ?v2 . ?v6 <http://dbpedia.org/ontology/starring> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. }","```sparql
SELECT ?nativeOfBritishSettlement
WHERE {
  ?filmOrConflict rdf:type dbo:MilitaryConflict ;
                  rdf:type dbo:Film ;
                  dbp:SeanPertwee dbo:knownFor ?filmOrConflict .

  ?actor dbo:actedIn ?filmOrConflict ;
         dbo:nationality dbr:France ;
         rdf:type dbo:Politician ;
         dbo:officeHolder true .

  dbp:SeanPertwee dbo:childOf dbr:JohnDevonRolandPertwee .

  ?actor dbo:residence ?britishSettlement .
  ?britishSettlement rdf:type dbo:Settlement ;
                     dbo:country dbr:UnitedKingdom .

  ?nativeOfBritishSettlement dbo:nativePlace ?britishSettlement .
}
```",7,13,8,3,3,3,3,71,0,0,1,0,0.0,0
378,64,test,"Give me the claim to fame of the commander in the war, that is a military conflict and a societal event and an event, of Thomas Trigge and war of Joaquín Blake and war of the person born as the birth name of Carl Pontus Gahn.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Joaquín_Blake> <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/ontology/commander> ?v1 . <http://dbpedia.org/resource/Thomas_Trigge> <http://dbpedia.org/ontology/battle> ?v0 . ?v1 <http://dbpedia.org/ontology/knownFor> ?result . <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/property/birthName> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
SELECT ?claimToFame WHERE {
  # Step 1: Identify Carl Pontus Gahn
  ?gahn a dbo:Chemist ;
        foaf:name ""Carl Pontus Gahn""@en ;
        foaf:birthName ?birthName .

  FILTER(?birthName = ""Carl Pontus Gahn"")

  # Step 2: Find the war associated with Joaquín Blake that is also a societal event and an event
  ?war a dbo:MilitaryConflict, dbo:SocietalEvent, dbo:Event ;
       dbo:commander ?joaquinBlake .

  ?joaquinBlake foaf:name ""Joaquín Blake""@en .

  # Step 3: Find the commander in that war
  ?war dbo:commander ?commander .

  # Step 4: Identify Thomas Trigge's involvement in the same war
  ?trigge a dbo:MilitaryPerson ;
          foaf:name ""Thomas Trigge""@en ;
          dbo:battle ?war .

  # Step 5: Determine the claim to fame of this commander
  ?commander dbo:knownFor ?claimToFame .
}
```",7,10,8,3,3,3,3,71,0,0,2,0,0.0,0
9,48,test,"Give me the alma mater of the mayor, that is a politician, of the entity, that is an organisation, in Belfast and figure known as the nickname of Queen's University Belfast.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/almaMater> ?result . <http://dbpedia.org/resource/Queen's_University_Belfast> <http://dbpedia.org/property/nickname> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Belfast> . ?result <http://dbpedia.org/property/nickname> ?v1 . ?v3 <http://dbpedia.org/property/leader> ?v2 . },"```sparql
SELECT ?almaMater WHERE {
  # Step 1: Identify the entity that is an organization in Belfast
  ?organization <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation> .
  ?organization <http://dbpedia.org/property/location> <http://dbpedia.org/resource/Belfast> .

  # Step 2: Find the mayor of this organization who is also a politician
  ?mayor <http://dbpedia.org/ontology/politician> true .
  ?mayor <http://dbpedia.org/ontology/mayorFor> ?organization .

  # Step 3: Determine the nickname of Queen's University Belfast
  ?queenUni <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution> .
  ?queenUni <http://dbpedia.org/resource/Queen%27s_University_Belfast> true .
  ?queenUni <http://dbpedia.org/property/nickname> ?nickname .

  # Step 4: Find the alma mater of this mayor
  ?mayor <http://dbpedia.org/ontology/almaMater> ?almaMater .
  
  FILTER(?almaMater = ?queenUni)
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
528,54,test,Give me the war of the military force of Battle of Pisagua and war of the commander in the work of --01-09 and force of Narciso Campero.,"SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Pisagua> . ?v5 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/ontology/commander> ?v5 . ?v0 <http://dbpedia.org/property/author> ""--01-09""^^<http://www.w3.org/2001/XMLSchema#gMonthDay> . ?v3 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Narciso_Campero> . }","```sparql
# Part 1: War of the military force of Battle of Pisagua
SELECT ?war1 WHERE {
    ?battle <http://dbpedia.org/ontology/militaryForce> ?force .
    ?force <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
    FILTER(?battle = <http://dbpedia.org/resource/Battle_of_Pisagua>)
    
    # Find wars involving this force
    ?war1 <http://dbpedia.org/ontology/militaryForce> ?force .
}

UNION

# Part 2: War of the commander in the work of --01-09 and force of Narciso Campero
SELECT ?war2 WHERE {
    ?work <http://purl.org/dc/terms/date> ""----01-09""^^xsd:date .
    ?work <http://dbpedia.org/ontology/creator> ?commander .
    
    # Find wars where this commander was involved
    ?war2 <http://dbpedia.org/ontology/commander> ?commander .
    
    # Find force of Narciso Campero and associated wars
    ?forceCampero <http://dbpedia.org/ontology/militaryForceCommander> <http://dbpedia.org/resource/Narciso_Campero> .
    ?war2 <http://dbpedia.org/ontology/militaryForce> ?forceCampero .
}
```",6,6,7,3,3,3,3,71,0,0,2,0,0.0,0
161,46,test,"Give me the military force of the force, that is a societal event and a military conflict, of Francisco Largo Caballero and military force of the force, that is a societal event and an event and a military conflict, of the person decedent at Francoist Spain.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Francoist_Spain> . ?v1 <http://dbpedia.org/ontology/commander> ?v2 . },"```sparql
SELECT DISTINCT ?militaryForce1 ?militaryForce2 WHERE {
  # For Francisco Largo Caballero
  ?force1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>.
  ?force1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>.
  <http://dbpedia.org/resource/Francisco_Largo_Caballero> <http://dbpedia.org/property/force> ?force1.
  ?force1 <http://dbpedia.org/property/militaryForce> ?militaryForce1.

  # For the person decedent at Francoist Spain
  ?force2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>.
  ?force2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>.
  ?force2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>.
  ?personDecedent <http://dbpedia.org/property/deathPlace> <http://dbpedia.org/resource/Francoist_Spain>.
  ?personDecedent <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>.
  ?personDecedent <http://dbpedia.org/property/force> ?force2.
  ?force2 <http://dbpedia.org/property/militaryForce> ?militaryForce2.
}
```",5,10,6,3,2,3,3,71,0,0,514,0,0.0,0
184,25,test,Give me the child of Archduke Joseph August of Austria and parent of the child of Archduke Joseph Francis of Austria.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Francis_of_Austria> . ?result <http://dbpedia.org/ontology/child> ?v1 . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_August_of_Austria> . },"```sparql
SELECT ?commonIndividual WHERE {
  # Step 1: Find children of Archduke Joseph August of Austria
  ?childOfJosephAugust a dbo:Person ;
                      dbo:parent <http://dbpedia.org/resource/Archduke_Joseph_August_of_Austria> .

  # Step 2: Check if this child is also a parent of any child of Archduke Joseph Francis of Austria
  ?childOfJosephFrancis a dbo:Person ;
                        dbo:parent <http://dbpedia.org/resource/Archduke_Joseph_Francis_of_Austria> .
  
  # Find the common individual who is both a child and a parent as described
  ?commonIndividual = ?childOfJosephAugust ;
                     dbo:child ?childOfJosephFrancis .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
659,67,test,"Give me the commander in German campaign of 1813 and military force of the force, that is a societal event and an event and a military conflict, of the reference to Rutger Jan Schimmelpenninck and commander in the war, that is an event and a military conflict, of the figure known, that is a military unit and an organisation, as 'Polish Horse'.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/German_campaign_of_1813> <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/property/nickname> ""'Polish Horse'""@en . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://dbpedia.org/ontology/battle> ?v6 . ?v1 <http://xmlns.com/foaf/0.1/name> ""Rutger Jan Schimmelpenninck""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/ontology/commander> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v6 <http://dbpedia.org/ontology/commander> ?result . }","```sparql
# Step 1: Identify 'Polish Horse'
SELECT ?polishHorse WHERE {
    ?polishHorse <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>.
    ?polishHorse <http://www.w3.org/2000/01/rdf-schema#label> ""Polish Horse""@en.
}

# Step 2: Find the figure known for 'Polish Horse'
SELECT ?figure WHERE {
    ?figure <http://dbpedia.org/property/knownFor> ?polishHorse.
}

# Step 3: Determine the war involving this figure
SELECT ?war WHERE {
    ?figure <http://dbpedia.org/ontology/battle> ?battle.
    ?battle <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>.
    ?battle <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>.
}

# Step 4: Identify the commander in this war
SELECT ?commander WHERE {
    ?war <http://dbpedia.org/ontology/commander> ?commander.
}

# Step 5: Locate reference to Rutger Jan Schimmelpenninck
SELECT ?reference WHERE {
    ?reference <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>.
    ?reference <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>.
    ?reference <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>.
    ?reference <http://dbpedia.org/property/referenceTo> <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck>.
}

# Step 6: Find the military force associated with this reference
SELECT ?militaryForce WHERE {
    ?reference <http://dbpedia.org/ontology/militaryForce> ?militaryForce.
}

# Step 7: Determine the commander in the German campaign of 1813
SELECT ?germanCommander WHERE {
    <http://dbpedia.org/resource/German_campaign_of_1813> <http://dbpedia.org/ontology/commander> ?germanCommander.
}

# Step 8: Identify the military force commanded by this individual
SELECT ?force WHERE {
    ?germanCommander <http://dbpedia.org/property/militaryForce> ?force.
}
```",7,14,8,3,3,3,3,71,0,0,7,0,0.0,0
16,57,test,Give me the spouse of Ted McGinley and person born as the birth name of Gigi Rice and professional in the profession of the actor of Unnatural (TV series).,SELECT ?result WHERE { <http://dbpedia.org/resource/Unnatural_(TV_series)> <http://dbpedia.org/property/starring> ?v0 . <http://dbpedia.org/resource/Gigi_Rice> <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/property/occupation> ?v5 . ?result <http://dbpedia.org/property/birthName> ?v3 . ?result <http://dbpedia.org/property/occupation> ?v5 . },"```sparql
# Find the spouse of Ted McGinley
SELECT ?spouse WHERE {
  <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/ontology/spouse> ?spouse .
}

# Find a person born as Gigi Rice
SELECT ?person WHERE {
  ?person <http://dbpedia.org/property/birthName> ""Gigi Rice"" .
}

# Find the profession of the actor from Unnatural (TV series)
SELECT ?profession WHERE {
  ?actor <http://dbpedia.org/ontology/actor> <http://dbpedia.org/resource/Unnatural_(TV_series)> ;
         <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Actor> .
  ?actor <http://purl.org/dc/terms/profession> ?profession .
}

# Find a person who is the spouse of Ted McGinley, born as Gigi Rice, and has the same profession
SELECT DISTINCT ?person WHERE {
  # Spouse of Ted McGinley
  ?spouse <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Ted_McGinley> .
  
  # Person born as Gigi Rice
  ?person <http://dbpedia.org/property/birthName> ""Gigi Rice"" .
  
  # Profession of the actor from Unnatural (TV series)
  ?actor <http://dbpedia.org/ontology/actor> <http://dbpedia.org/resource/Unnatural_(TV_series)> ;
         <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Actor> .
  ?actor <http://purl.org/dc/terms/profession> ?profession .
  
  # The person must match all conditions
  FILTER (?spouse = ?person)
  OPTIONAL { ?person <http://purl.org/dc/terms/profession> ?profession . }
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
492,56,test,"Give me the person decedent at the capital, that is a settlement, of the country of Khemis Miliana District and person decedent at the work of US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite and commander in Franco-Hova Wars.","SELECT ?result WHERE { <http://dbpedia.org/resource/Khemis_Miliana_District> <http://dbpedia.org/ontology/country> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://dbpedia.org/property/author> ""US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite""@en . ?v0 <http://dbpedia.org/ontology/capital> ?v1 . ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . <http://dbpedia.org/resource/Franco-Hova_Wars> <http://dbpedia.org/ontology/commander> ?result . }","```sparql
# Step 1: Find the capital of Khemis Miliana District
SELECT ?capital WHERE {
    ?district <http://dbpedia.org/ontology/country> ?country .
    ?country <http://dbpedia.org/property/capital> ?capital .
    FILTER(?district = <http://dbpedia.org/resource/Khemis_Miliana_District>)
}

# Step 2: Find person decedent at the capital
SELECT DISTINCT ?person WHERE {
    ?person <http://dbpedia.org/ontology/deathPlace> ?deathPlace .
    ?deathPlace <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement> .
    FILTER(?deathPlace = ?capital) # Use the result from Step 1
}

# Step 3: Identify work of Joseph C. Satterthwaite
SELECT ?work WHERE {
    <http://dbpedia.org/resource/Joseph_C._Satterthwaite> <http://dbpedia.org/ontology/work> ?work .
}

# Step 4: Find person decedent at this work
SELECT DISTINCT ?person WHERE {
    ?person <http://dbpedia.org/ontology/deathPlace> ?deathPlace .
    ?deathPlace <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?workType .
    FILTER(?workType = ?work) # Use the result from Step 3
}

# Step 5: Identify commander in Franco-Hova Wars
SELECT ?commander WHERE {
    <http://dbpedia.org/resource/Franco-Hova_Wars> <http://dbpedia.org/ontology/commander> ?commander .
}

# Step 6: Find person decedent at this command
SELECT DISTINCT ?person WHERE {
    ?person <http://dbpedia.org/ontology/deathPlace> ?deathPlace .
    ?deathPlace <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?commandType .
    FILTER(?commandType = ?commander) # Use the result from Step 5
}

# Step 7: Find common person among all three conditions
SELECT DISTINCT ?person WHERE {
    { ?person <http://dbpedia.org/ontology/deathPlace> ?deathPlace1 .
      ?deathPlace1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement> .
      FILTER(?deathPlace1 = ?capital) # Use the result from Step 1
    }
    UNION
    { ?person <http://dbpedia.org/ontology/deathPlace> ?deathPlace2 .
      ?deathPlace2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?workType .
      FILTER(?workType = ?work) # Use the result from Step 3
    }
    UNION
    { ?person <http://dbpedia.org/ontology/deathPlace> ?deathPlace3 .
      ?deathPlace3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?commandType .
      FILTER(?commandType = ?commander) # Use the result from Step 5
    }
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
696,18,test,"Give me the landmark at elevation of the award of Nie Rongzhen and birth place of the member of the associated musical artist, that is an organisation and a group and a band, of The Boils.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/bandMember> ?v2 . <http://dbpedia.org/resource/The_Boils> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Nie_Rongzhen> <http://dbpedia.org/property/awards> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/elevation> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. },"```sparql
SELECT ?landmark WHERE {
    # Step 1: Find the award associated with Nie Rongzhen
    ?award dbo:recipient <http://dbpedia.org/resource/Nie_Rongzhen> .
    
    # Step 2: Determine the birthplace of a member of The Boils
    ?member dbo:musicalArtist <http://dbpedia.org/resource/The_Boils> ;
            dbo:birthPlace ?birthPlace .

    # Step 3: Find an organization that is also a group and a band associated with The Boils
    ?organization rdf:type dbo:Band, dbo:MusicalGroup, dbo:Organization ;
                  dbo:musicalArtist <http://dbpedia.org/resource/The_Boils> .
    
    # Step 4: Locate a landmark at the elevation related to the award from step 1
    ?landmark dbo:elevation ?elevation .
    FILTER(?elevation = ?awardElevation) .

    # Linking the elevation of the award to the landmark's elevation
    ?award dbo:elevation ?awardElevation .
}
```",5,8,6,3,2,3,2,20,0,0,1,0,0.0,0
328,49,test,"Give me the leader of the office, that is a government agency, of the leader, that is an office holder and a politician, of Gustav Jonson and awardee of the award of Bruce Fraser, 1st Baron Fraser of North Cape.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/office> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/leader> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape> <http://dbpedia.org/property/awards> ?v2 . ?result <http://dbpedia.org/property/awards> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. <http://dbpedia.org/resource/Gustav_Jonson> <http://dbpedia.org/property/leader> ?v0 . }","```sparql
SELECT ?leaderOfAgency WHERE {
  # Step 1: Find the leader of Gustav Jonson
  ?gustavLeader <http://dbpedia.org/ontology/leader> <http://dbpedia.org/resource/Gustav_Jonson> .
  
  # Step 2: Determine the office held by this leader
  ?office <http://dbpedia.org/ontology/holder> ?gustavLeader .
  ?office <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder> .
  
  # Step 3: Find the award received by Bruce Fraser, 1st Baron Fraser of North Cape
  ?fraserAward <http://dbpedia.org/property/awardee> <http://dbpedia.org/resource/Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape> .
  
  # Step 4: Identify the awardee of that award
  ?awardAwardee <http://dbpedia.org/property/awardee> ?fraserAward .
  
  # Step 5: Determine the leader of the government agency associated with the office holder who is both an office holder and a politician
  ?officeHolder <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder> .
  ?officeHolder <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .
  ?officeHolder <http://dbpedia.org/property/leader> ?awardAwardee .
  
  # Find the government agency associated with this office holder
  ?governmentAgency <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency> .
  ?officeHolder <http://dbpedia.org/property/officesHeld> ?governmentAgency .
  
  # Find the leader of this government agency
  ?leaderOfAgency <http://dbpedia.org/ontology/leader> ?governmentAgency .
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
778,20,test,"Give me the entity in the award of the awardee, that is American, of Wolf Prize in Medicine and author of the work, that is a software, of the author of Pushd and popd.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/United_States>. ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Wolf_Prize_in_Medicine> . ?v5 <http://dbpedia.org/property/author> ?v4 . <http://dbpedia.org/resource/Pushd_and_popd> <http://dbpedia.org/property/author> ?v4 . ?result <http://dbpedia.org/ontology/location> ?v2 . ?v1 <http://dbpedia.org/property/awards> ?v2 . ?v5 <http://dbpedia.org/ontology/author> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Software>. },"```sparql
SELECT ?entity WHERE {
  # Step 1: Find the author of Pushd and Popd
  ?author foaf:name ""Bill Joy""@en .
  
  # Step 2: Identify works that are software
  ?work dbo:author ?author ;
        rdf:type <http://dbpedia.org/ontology/Software> .

  # Step 3: Find authors related to the work who have won the Wolf Prize in Medicine and are American
  ?relatedAuthor dbo:award <http://dbpedia.org/resource/Wolf_Prize_in_Medicine> ;
                foaf:nationality <http://dbpedia.org/resource/Nationality_of_the_United_States> .
  
  # Step 4: Link the related author to the work and find entities associated with their award
  ?relatedAuthor dbo:work ?work .

  # Find entities in the award of the related author
  ?award dbo:recipient ?relatedAuthor ;
         dbo:entity ?entity .
}
```",6,8,7,3,2,3,2,20,0,0,1,0,0.0,0
427,65,test,"Give me the party of the father of the alumnus of Massachusetts Institute of Technology and party of the person born, that is an office holder and a politician, as Romano Antonio Prodi and reference to the name of Italian People's Party (1994).","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v4 . ?v0 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Massachusetts_Institute_of_Technology> . ?v6 <http://dbpedia.org/ontology/party> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/ontology/party> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Italian_People's_Party_(1994)> <http://xmlns.com/foaf/0.1/name> ?v4 . ?v0 <http://dbpedia.org/property/father> ?v6 . ?v3 <http://dbpedia.org/property/birthName> ""Romano Antonio Prodi""@en . }","```sparql
# Part 1: Party of the father of an alumnus of MIT
SELECT ?fatherParty WHERE {
    ?alumnus dbo:almaMater dbr:Massachusetts_Institute_of_Technology .
    ?alumnus dbo:father ?father .
    ?father dbo:party ?fatherParty .
}

UNION

# Part 2: Party of Romano Antonio Prodi
SELECT ?prodiParty WHERE {
    ?prodi foaf:name ""Romano Antonio Prodi"" ;
           dbo:birthPlace ?place ;
           dbo:officeHolder true ;
           dbo:politician true .
    ?prodi dbo:party ?prodiParty .
}

UNION

# Part 3: Reference to the name of Italian People's Party (1994)
SELECT ?partyName WHERE {
    ?party foaf:name ""Italian People's Party"" ;
           dbo:foundingDate ?foundingDate .
    FILTER(YEAR(?foundingDate) = 1994)
    ?party rdfs:label ?partyName .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
161,53,test,"Give me the commander in the force, that is an event, of Emilio Mola and military force of the force, that is a societal event and an event and a military conflict, of the person decedent at Francoist Spain and military force of Spanish Civil War.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Emilio_Mola> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v3 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Francoist_Spain> . ?v2 <http://dbpedia.org/ontology/commander> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT ?commander WHERE {
  # Step 1: Find the event involving Emilio Mola
  ?event a dbo:Event ;
         dbo:agent <http://dbpedia.org/resource/Emilio_Mola> .

  # Step 2: Get the military force associated with this event
  ?event dbo:militaryForce ?militaryForce .

  # Step 3: Find the person who died in Francoist Spain and was involved in the Spanish Civil War
  ?person dbo:deathPlace <http://dbpedia.org/resource/Francoist_Spain> ;
          dbo:causeOfDeath ?civilWarEvent .

  # Ensure this person was part of the Spanish Civil War
  ?civilWarEvent a dbo:MilitaryConflict, dbo:Event ;
                 dbo:participatedIn <http://dbpedia.org/resource/Spanish_Civil_War> .

  # Step 4: Identify societal events and military conflicts related to their death
  ?civilWarEvent a dbo:SocietalEvent, dbo:MilitaryConflict, dbo:Event .

  # Step 5: Find the commander of the military force from step 2
  ?militaryForce dbo:commander ?commander .
}
```",6,10,7,3,3,3,3,71,0,0,32,0,0.0,0
645,20,test,"Give me the alma mater of the child of the parent of Adela Pankhurst and entity in the residence, that is a country, of the commander in Battle of Diamond Rock.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v2 . ?v1 <http://dbpedia.org/property/residence> ?v2 . <http://dbpedia.org/resource/Adela_Pankhurst> <http://dbpedia.org/ontology/parent> ?v4 . ?v4 <http://dbpedia.org/ontology/child> ?v5 . ?v5 <http://dbpedia.org/ontology/almaMater> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Battle_of_Diamond_Rock> <http://dbpedia.org/ontology/commander> ?v1 . },"```sparql
SELECT ?almaMater ?entityInCountry WHERE {
  # Step 1: Identify the parent of Adela Pankhurst and their child
  ?parent <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Adela_Pankhurst> .
  ?child <http://dbpedia.org/ontology/birthParent> ?parent .

  # Step 2: Find the alma mater of that child
  ?child <http://dbpedia.org/property/almaMater> ?almaMater .

  # Step 3: Identify the commander in Battle of Diamond Rock
  <http://dbpedia.org/resource/Battle_of_Diamond_Rock> <http://dbpedia.org/ontology/commander> ?commander .

  # Step 4: Determine the residence (country) of that commander
  ?commander <http://dbpedia.org/property/residence> ?residence .
  ?residence <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country> .

  # Step 5: Find an entity located in that country
  ?entityInCountry <http://www.w3.org/2000/01/rdf-schema#seeAlso> ?residence .
}
```",6,7,7,3,2,3,2,20,0,0,1,0,0.0,0
182,25,test,Give me the war of the work of Gotabhaya Rajapaksa and war of the author of 2019 Sri Lanka Easter bombings and entity in Sri Lanka.,SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/battle> ?result . ?v4 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Gotabhaya_Rajapaksa> . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Sri_Lanka> . ?v3 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/2019_Sri_Lanka_Easter_bombings> <http://dbpedia.org/property/author> ?v3 . },"```sparql
SELECT ?war WHERE {
    ?work <http://dbpedia.org/ontology/work> ?war .
    ?work <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Gotabhaya_Rajapaksa> .

    ?event <http://dbpedia.org/ontology/author> ?author .
    ?event <http://dbpedia.org/ontology/topic> <http://dbpedia.org/resource/2019_Sri_Lanka_Easter_bombings> .
    
    ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
    ?war <http://dbpedia.org/property/location> <http://dbpedia.org/resource/Sri_Lanka> .

    FILTER(?work = ?event)
}
```",5,5,6,2,3,2,3,28,0,0,1,0,0.0,0
16,26,test,Give me the professional in the profession of the actor of Unnatural (TV series).,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/Unnatural_(TV_series)> <http://dbpedia.org/property/starring> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v2 . },"```sparql
# Step 1: Get the actor associated with ""Unnatural (TV series)""
SELECT ?actor WHERE {
    ?series <http://dbpedia.org/ontology/starring> ?actor .
    ?series <http://dbpedia.org/property/title> ""Unnatural (TV series)""^^<http://www.w3.org/2001/XMLSchema#string> .
}

# Step 2: Determine the profession of this actor
SELECT ?profession WHERE {
    ?actor <http://dbpedia.org/ontology/profession> ?profession .
}

# Step 3: Find other professionals in the same profession
SELECT DISTINCT ?professional WHERE {
    ?professional <http://dbpedia.org/ontology/profession> ?profession .
}
```",3,3,4,3,1,3,3,71,0,0,40872,0,0.0,0
184,44,test,Give me the child of the child of Archduke Joseph Karl of Austria and parent of the child of Archduke Joseph Francis of Austria and parent of Géza von Habsburg.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Francis_of_Austria> . ?result <http://dbpedia.org/property/father> ?v4 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Géza_von_Habsburg> . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Karl_of_Austria> . },"```sparql
SELECT ?person WHERE {
  # Find a person who is a child of the child of Archduke Joseph Karl of Austria
  ?child1 <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/Archduke_Joseph_Karl_of_Austria> .
  ?grandchild <http://dbpedia.org/ontology/birthParent> ?child1 .

  # Find a person who is a parent of the child of Archduke Joseph Francis of Austria
  ?child2 <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/Archduke_Joseph_Francis_of_Austria> .
  ?parent1 <http://dbpedia.org/ontology/birthChild> ?child2 .

  # Find a person who is a parent of Géza von Habsburg
  ?parent2 <http://dbpedia.org/ontology/birthChild> <http://dbpedia.org/resource/G%C3%A9za_von_Habsburg> .

  # The person must satisfy all three conditions
  FILTER (?grandchild = ?person && ?parent1 = ?person && ?parent2 = ?person)
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
838,16,test,"Give me the band of the band member, that is an artist and a musical artist, of YU Grupa and band member of the band, that is a group, of YU Grupa.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/YU_Grupa> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/YU_Grupa> . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . },"```sparql
SELECT ?bandMember ?band WHERE {
  ?member <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/YU_Grupa> .
  ?member <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
  ?member <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist> .
  ?member <http://dbpedia.org/ontology/member> ?band .
  ?band <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalGroup> .
}
```",4,7,5,2,2,3,2,20,0,0,5,0,0.0,0
427,45,test,"Give me the party of the person born, that is an office holder and a politician, as the birth name of Romano Prodi and party of Giulio Andreotti and reference to Partito Popolare Italiano.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/party> ?result . ?result <http://xmlns.com/foaf/0.1/name> ""Partito Popolare Italiano""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/property/birthName> ?v0 . <http://dbpedia.org/resource/Giulio_Andreotti> <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/property/birthName> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
SELECT ?prodiParty ?andreottiParty WHERE {
  # Romano Prodi's details
  OPTIONAL { 
    <http://dbpedia.org/resource/Romano_Prodi> <http://www.w3.org/2000/01/rdf-schema#label> ""Romano Prodi""@en .
    <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/ontology/birthName> ?prodiBirthName .
    <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/ontology/politicalParty> ?prodiParty .
    FILTER EXISTS { ?prodiParty rdfs:label ""Partito Popolare Italiano""@en }
  }

  # Giulio Andreotti's details
  OPTIONAL {
    <http://dbpedia.org/resource/Giulio_Andreotti> <http://www.w3.org/2000/01/rdf-schema#label> ""Giulio Andreotti""@en .
    <http://dbpedia.org/resource/Giulio_Andreotti> <http://dbpedia.org/ontology/politicalParty> ?andreottiParty .
  }
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
994,54,test,"Give me the associated musical artist of the associated musical artist of Watchtower (band) and associated musical artist of the band member, that is a band and a group and an organisation, of the band, that is an organisation, of Fredrik Thordendal and band member of Don Dokken.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . <http://dbpedia.org/resource/Watchtower_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v1 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Fredrik_Thordendal> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Don_Dokken> . },"```sparql
SELECT DISTINCT ?finalArtist WHERE {
  # Step 1: Find associated musical artist of Watchtower (band)
  ?watchtowerArtist <http://dbpedia.org/ontology/associatedBand> <http://dbpedia.org/resource/Watchtower_(band)> .
  
  # Step 2: Find the band member's associated musical artist
  ?donDokkenMember <http://dbpedia.org/ontology/memberOf> <http://dbpedia.org/resource/Don_Dokken> .
  ?donDokkenBand <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>, <http://dbpedia.org/ontology/Organisation>, <http://dbpedia.org/ontology/Group> .
  ?donDokkenMember <http://dbpedia.org/ontology/memberOf> ?donDokkenBand .
  
  # Step 3: Find Fredrik Thordendal's band
  ?fredrikThordendalBand <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation> .
  ?fredrikThordendalMember <http://dbpedia.org/ontology/memberOf> ?fredrikThordendalBand .
  ?fredrikThordendalMember foaf:name ""Fredrik Thordendal"" .

  # Step 4: Find the associated musical artist of the band member
  ?donDokkenArtist <http://dbpedia.org/ontology/associatedBand> ?donDokkenBand .
  
  # Final step: Get the associated musical artist of the artists found in steps 1 and 2
  ?finalArtist <http://dbpedia.org/ontology/associatedBand> ?watchtowerArtist .
  ?finalArtist <http://dbpedia.org/ontology/associatedBand> ?donDokkenArtist .
}
```",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
92,48,test,"Give me the band member of the reference, that is an artist, to the name of Nevermore (2006 film) and band of the person born as Joseph Michael Furney.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Nevermore_(2006_film)> <http://xmlns.com/foaf/0.1/name> ?v3 . ?result <http://dbpedia.org/ontology/bandMember> ?v1 . ?v1 <http://dbpedia.org/property/birthName> ""Joseph Michael Furney""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v2 <http://xmlns.com/foaf/0.1/name> ?v3 . }","```sparql
# Step 1: Find the artist related to ""Nevermore"" (2006 film)
SELECT ?artist WHERE {
    ?film <http://dbpedia.org/ontology/reference> ?artist .
    ?film <http://www.w3.org/2000/01/rdf-schema#label> ""Nevermore""@en .
    FILTER(STRSTARTS(STR(?film), STR(<http://dbpedia.org/resource/Nevermore_(2006_film)>)))
}

# Step 2: Find the band of Joseph Michael Furney
SELECT ?band WHERE {
    <http://dbpedia.org/resource/Joseph_Michael_Furney> <http://dbpedia.org/ontology/band> ?band .
}

# Step 3: Find a common band member between the artist and the band
SELECT DISTINCT ?member WHERE {
    # Assuming ?artistBand is the band of the artist found in step 1
    ?artistBand <http://dbpedia.org/ontology/member> ?member .
    
    # Assuming ?furneyBand is the band of Joseph Michael Furney found in step 2
    ?furneyBand <http://dbpedia.org/ontology/member> ?member .
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
701,70,test,"Give me the parent of the child of the child of Seti I and spouse of the father of the commander, that is a royalty, in Battle of Perire and parent of the child of Nefertari.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> ?v3 . <http://dbpedia.org/resource/Battle_of_Perire> <http://dbpedia.org/ontology/commander> ?v1 . <http://dbpedia.org/resource/Nefertari> <http://dbpedia.org/ontology/child> ?v4 . ?v1 <http://dbpedia.org/property/father> ?v3 . ?v4 <http://dbpedia.org/ontology/parent> ?result . ?v7 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/child> ?v7 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seti_I> . },"```sparql
SELECT ?parent WHERE {
  # Seti I's grandchild
  ?grandchild <http://dbpedia.org/ontology/birthParent> ?child .
  ?child <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/Seti_I> .

  # Commander in Battle of Perire and their father
  ?battleCommander <http://dbpedia.org/ontology/commander> ?commander .
  ?commander <http://dbpedia.org/ontology/father> ?father .

  # Spouse of the commander's father
  ?spouse <http://dbpedia.org/property/spouse> ?father .

  # Ensure the spouse is royalty and parent of Nefertari's child
  ?spouse <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
  ?nefertariChild <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/Nefertari> .
  ?spouse <http://dbpedia.org/ontology/birthParent> ?nefertariChild .

  # The parent of Seti I's grandchild
  ?grandchild <http://dbpedia.org/ontology/birthParent> ?parent .
}
```",8,9,9,3,3,3,3,71,0,0,1,0,0.0,0
281,45,test,"Give me the entity in Colony of New Zealand and war of the profession, that is a military unit, of the professional, that is an office holder and a politician, in New Zealand Army and war of Beauchamp Seymour, 1st Baron Alcester.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Colony_of_New_Zealand> . ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/New_Zealand_Army> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Beauchamp_Seymour,_1st_Baron_Alcester> <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v0 <http://dbpedia.org/property/occupation> ?v1 . }","```sparql
# Step 1: Find the military unit (profession)
SELECT ?militaryUnit WHERE {
    ?militaryUnit a <http://dbpedia.org/ontology/MilitaryUnit> .
}

# Step 2: Find the war associated with this military unit
SELECT ?war WHERE {
    ?militaryUnit dbp:partOfWar ?war .
}

# Step 3: Identify the professional who is an office holder and politician in the New Zealand Army
SELECT ?professional WHERE {
    ?professional a <http://dbpedia.org/ontology/OfficeHolder> ;
                  a <http://dbpedia.org/ontology/Politician> ;
                  dbp:militaryUnit <http://dbpedia.org/resource/New_Zealand_Army> .
}

# Step 4: Find the war associated with Beauchamp Seymour, 1st Baron Alcester
SELECT ?warSeymour WHERE {
    <http://dbpedia.org/resource/Beauchamp_Seymour,_1st_Baron_Alcester> dbp:partOfWar ?warSeymour .
}

# Final Step: Find the entity in both Colony of New Zealand and the war from step 2
SELECT DISTINCT ?entity WHERE {
    ?entity a <http://dbpedia.org/ontology/Settlement> ;
            dbp:country <http://dbpedia.org/resource/Colony_of_New_Zealand> .
    ?entity dbp:partOfWar ?war .
}
```",5,8,6,3,3,3,3,71,0,0,1,0,0.0,0
712,19,test,Give me the capital of the country of Armed Forces of South Russia and resting place of the awardee of the show of Soviet Union.,SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/restingPlace> ?result . ?v0 <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/Soviet_Union> . <http://dbpedia.org/resource/Armed_Forces_of_South_Russia> <http://dbpedia.org/ontology/country> ?v2 . ?v4 <http://dbpedia.org/property/awards> ?v0 . ?v2 <http://dbpedia.org/ontology/capital> ?result . },"```sparql
# Query to find the capital of the country associated with Armed Forces of South Russia
SELECT ?capital WHERE {
  ?entity <http://dbpedia.org/ontology/country> ?country .
  ?country <http://dbpedia.org/property/name> ""Russia"" .
  ?entity <http://dbpedia.org/ontology/militaryBranch> ?militaryEntity .
  ?militaryEntity <http://www.w3.org/2000/01/rdf-schema#label> ""Armed Forces of South Russia""@en .
  ?country <http://dbpedia.org/property/capital> ?capital .
}

# Query to find the resting place of an awardee from a show in the Soviet Union
SELECT DISTINCT ?restingPlace WHERE {
  ?show <http://www.w3.org/2000/01/rdf-schema#label> ?showLabel .
  FILTER(CONTAINS(LCASE(?showLabel), ""soviet union"")).
  ?awardee <http://dbpedia.org/ontology/show> ?show .
  ?awardee <http://dbpedia.org/property/burialPlace> ?restingPlace .
}
```",5,5,6,3,2,3,2,20,0,0,1,0,0.0,0
959,56,test,"Give me the native of Japan and manager of the team of the manager, that is a sports manager, of 1998 Kashima Antlers season and member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of Eiji Ōtsuka.",SELECT ?result WHERE { <http://dbpedia.org/resource/1998_Kashima_Antlers_season> <http://dbpedia.org/ontology/manager> ?v4 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Japan> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. <http://dbpedia.org/resource/Eiji_Ōtsuka> <http://dbpedia.org/ontology/almaMater> ?v2 . ?v0 <http://dbpedia.org/ontology/manager> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v0 <http://dbpedia.org/ontology/manager> ?v4 . ?result <http://dbpedia.org/ontology/team> ?v2 . },"```sparql
SELECT ?nativeManager WHERE {
  # Step 1: Find the manager of the 1998 Kashima Antlers season who is a sports manager.
  ?manager rdf:type dbo:SportsManager .
  ?manager dbo:managedTeam <http://dbpedia.org/resource/1998_Kashima_Antlers_season> .

  # Step 2: Determine the team managed by this person.
  ?team dbo:manager ?manager .

  # Step 3: Find the manager of that team who is native to Japan and also manages the same team.
  ?nativeManager rdf:type dbo:SportsManager .
  ?nativeManager dbo:nationality <http://dbpedia.org/resource/Japan> .
  ?nativeManager dbo:managedTeam ?team .

  # Step 4: Identify the alma mater of Eiji Ōtsuka, which must be Japanese, an organization, a university, and an educational institution.
  <http://dbpedia.org/resource/Eiji_Ōtsuka> dbo:almaMater ?almaMater .
  ?almaMater rdf:type dbo:Organization ;
             rdf:type dbo:University ;
             rdf:type dbo:EducationalInstitution ;
             dbo:country <http://dbpedia.org/resource/Japan> .

  # Ensure the manager found is associated with this alma mater.
  ?nativeManager dbo:almaMater ?almaMater .
}
```",6,11,7,3,3,3,3,71,0,0,2,0,0.0,0
404,61,test,"Give me the parent of the child, that is a royalty, of the parent, that is a royalty, of Prince George William of Hanover and child of the father of the spouse of Princess Victoria Louise of Prussia.",SELECT ?result WHERE { <http://dbpedia.org/resource/Prince_George_William_of_Hanover> <http://dbpedia.org/ontology/parent> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/child> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> ?v5 . ?v1 <http://dbpedia.org/property/father> ?v3 . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?v1 . ?result <http://dbpedia.org/ontology/parent> ?v3 . },"```sparql
# Step 1: Identify Princess Victoria Louise of Prussia
SELECT ?princess WHERE {
    ?princess rdfs:label ""Princess Victoria Louise of Prussia""@en .
}

# Step 2: Find her spouse and determine their father
SELECT ?spouse ?father WHERE {
    ?princess dbo:spouse ?spouse .
    ?spouse dbo:father ?father .
}

# Step 3: Identify the children of that father who are royalty
SELECT ?child WHERE {
    ?father dbo:child ?child .
    ?child rdf:type dbo:Royalty .
}

# Step 4: For each child identified in step 3, find their own children who are royalty
SELECT ?grandchild WHERE {
    ?child dbo:child ?grandchild .
    ?grandchild rdf:type dbo:Royalty .
}

# Step 5: Determine the parent of these grandchildren (from step 4)
SELECT DISTINCT ?parent WHERE {
    ?grandchild dbo:parent ?parent .
}
```",6,8,7,3,2,3,3,71,0,0,1,0,0.0,0
294,27,test,"Give me the entity in the birth place, that is a settlement, of Marion James and resting place of the architect of P. D. Houston Jr. House and resting place of Luke Lea (American politician, born 1879).","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/P._D._Houston_Jr._House> <http://dbpedia.org/ontology/architect> ?v3 . ?result <http://dbpedia.org/ontology/location> ?v0 . ?v3 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Marion_James> <http://dbpedia.org/ontology/birthPlace> ?v0 . <http://dbpedia.org/resource/Luke_Lea_(American_politician,_born_1879)> <http://dbpedia.org/ontology/restingPlace> ?result . }","```sparql
# Find the birthplace of Marion James
SELECT ?birthPlace WHERE {
    <http://dbpedia.org/resource/Marion_James> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
    FILTER (?birthPlace <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>)
}

# Find the resting place of the architect of P.D. Houston Jr. House
SELECT ?restingPlaceArchitect WHERE {
    ?architect <http://dbpedia.org/ontology/architectOf> <http://dbpedia.org/resource/P._D._Houston_Jr._House> .
    ?architect <http://dbpedia.org/property/burialPlace> ?restingPlaceArchitect .
}

# Find the resting place of Luke Lea (American politician, born 1879)
SELECT ?restingPlaceLukeLea WHERE {
    <http://dbpedia.org/resource/Luke_Lea_(politician,_born_1879)> <http://dbpedia.org/property/burialPlace> ?restingPlaceLukeLea .
}

# Find entities in the birthplace of Marion James and both resting places
SELECT DISTINCT ?entity WHERE {
    VALUES (?location) { 
        (<birthPlace>) 
        (<restingPlaceArchitect>) 
        (<restingPlaceLukeLea>)
    }
    
    ?entity <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?location .
}
```",5,6,6,2,3,2,3,28,0,0,1,0,0.0,0
92,69,test,"Give me the associated musical artist of the person born, that is an artist, as Jim Sheppard and band member of the reference, that is an artist, to the name of Nevermore (2006 film) and band of the person born as the birth name of Joseph Michael.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v3 <http://xmlns.com/foaf/0.1/name> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v7 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Joseph_Michael> <http://dbpedia.org/property/birthName> ?v1 . ?v7 <http://dbpedia.org/property/birthName> ""Jim Sheppard""@en . <http://dbpedia.org/resource/Nevermore_(2006_film)> <http://xmlns.com/foaf/0.1/name> ?v4 . ?result <http://dbpedia.org/ontology/bandMember> ?v2 . ?v2 <http://dbpedia.org/property/birthName> ?v1 . }","```sparql
# Step 1: Get Jim Sheppard as an artist and his band
SELECT ?jimSheppard ?band1 WHERE {
    ?jimSheppard <http://dbpedia.org/ontology/birthName> ""Jim Sheppard"" .
    ?jimSheppard <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
    ?jimSheppard <http://dbpedia.org/property/memberOf> ?band1 .
}

# Step 2: Get the reference artist related to ""Nevermore"" (2006 film) and their band
SELECT ?nevermoreFilm ?artist2 ?band2 WHERE {
    ?nevermoreFilm <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film> .
    ?nevermoreFilm <http://dbpedia.org/property/name> ""Nevermore"" .
    FILTER(YEAR(?nevermoreFilm) = 2006)
    ?artist2 <http://dbpedia.org/ontology/reference> ?nevermoreFilm .
    ?artist2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
    ?artist2 <http://dbpedia.org/property/memberOf> ?band2 .
}

# Step 3: Get Joseph Michael's birth name and his band
SELECT ?josephMichael ?birthName ?band3 WHERE {
    ?josephMichael <http://dbpedia.org/ontology/birthName> ?birthName .
    FILTER(?birthName = ""Joseph Michael"")
    ?josephMichael <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
    ?josephMichael <http://dbpedia.org/property/memberOf> ?band3 .
}

# Step 4: Find the associated musical artist common to all
SELECT DISTINCT ?associatedArtist WHERE {
    # Assuming there's a property that links these artists together, e.g., collaboration or influence
    OPTIONAL { ?jimSheppard <http://dbpedia.org/ontology/collaboratedWith> ?associatedArtist . }
    OPTIONAL { ?artist2 <http://dbpedia.org/ontology/collaboratedWith> ?associatedArtist . }
    OPTIONAL { ?josephMichael <http://dbpedia.org/ontology/collaboratedWith> ?associatedArtist . }
}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
701,57,test,Give me the spouse of the father of Merneptah and parent of the child of the child of Seti I and parent of Meritamen.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v3 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seti_I> . ?v5 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Merneptah> <http://dbpedia.org/property/father> ?v3 . <http://dbpedia.org/resource/Meritamen> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/child> ?v5 . },"```sparql
SELECT ?spouse WHERE {
  ?merneptah dbo:father <http://dbpedia.org/resource/Seti_I> .
  ?setiI dbo:child ?merneptah ;
         dbo:spouse ?spouse .
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
281,68,test,"Give me the war of the awardee of the award of Jonathon Band and entity in the birth place, that is a country, of the leader, that is a politician, of 1962 New South Wales state election and war of the profession, that is a military unit, of Heather Roy.",SELECT ?result WHERE { <http://dbpedia.org/resource/Heather_Roy> <http://dbpedia.org/property/occupation> ?v3 . ?result <http://dbpedia.org/ontology/place> ?v7 . ?v4 <http://dbpedia.org/property/awards> ?v5 . <http://dbpedia.org/resource/Jonathon_Band> <http://dbpedia.org/property/awards> ?v5 . ?v0 <http://dbpedia.org/ontology/birthPlace> ?v7 . ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v4 <http://dbpedia.org/ontology/battle> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. <http://dbpedia.org/resource/1962_New_South_Wales_state_election> <http://dbpedia.org/property/leader> ?v0 . },"```sparql
# Step 1: Find the awardee of Jonathon Band's award
SELECT ?awardee WHERE {
    ?award <http://dbpedia.org/ontology/recipient> ?awardee .
    ?award <http://dbpedia.org/property/awardedBy> <http://dbpedia.org/resource/Jonathon_Band> .
}

# Step 2: Find the leader of the 1962 New South Wales state election and their birthplace country
SELECT ?leader ?birthCountry WHERE {
    ?election <http://dbpedia.org/ontology/politician> ?leader .
    ?election <http://dbpedia.org/property/electionDate> ""1962""^^xsd:gYear .
    ?leader <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
    ?birthPlace <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country> .
}

# Step 3: Find the war related to Heather Roy's profession
SELECT ?war WHERE {
    ?profession <http://dbpedia.org/ontology/militaryUnit> ?unit .
    ?unit <http://dbpedia.org/property/member> <http://dbpedia.org/resource/Heather_Roy> .
    ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
    ?unit <http://dbpedia.org/property/war> ?war .
}

# Step 4: Combine the results to find the war
SELECT DISTINCT ?finalWar WHERE {
    # Awardee of Jonathon Band's award
    ?award <http://dbpedia.org/ontology/recipient> ?awardee .
    ?award <http://dbpedia.org/property/awardedBy> <http://dbpedia.org/resource/Jonathon_Band> .

    # Leader of the 1962 NSW election and their birthplace country
    ?election <http://dbpedia.org/ontology/politician> ?leader .
    ?election <http://dbpedia.org/property/electionDate> ""1962""^^xsd:gYear .
    ?leader <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
    ?birthPlace <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country> .

    # Entity in the birthplace country
    ?entity <http://dbpedia.org/ontology/country> ?birthPlace .

    # War related to Heather Roy's profession
    ?profession <http://dbpedia.org/ontology/militaryUnit> ?unit .
    ?unit <http://dbpedia.org/property/member> <http://dbpedia.org/resource/Heather_Roy> .
    ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
    ?unit <http://dbpedia.org/property/war> ?war .

    # Final war that connects all elements
    ?awardee <http://dbpedia.org/ontology/battle> ?finalWar .
    ?entity <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement> .
    ?leader <http://dbpedia.org/ontology/battle> ?finalWar .
}
```",8,11,9,3,3,3,3,71,0,0,1,0,0.0,0
161,31,test,"Give me the military force of the force, that is a societal event and an event and a military conflict, of the person decedent at Francoist Spain and military force of Spanish Civil War.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://dbpedia.org/ontology/commander> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . ?result <http://dbpedia.org/ontology/battle> ?v0 . ?v1 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Francoist_Spain> . },"```sparql
SELECT ?militaryForce WHERE {
  ?conflict <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>.
  ?conflict <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>.
  ?conflict <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>.

  ?person <http://dbpedia.org/property/decedentAt> <http://dbpedia.org/resource/Francoist_Spain>.
  ?person <http://dbpedia.org/ontology/battle> ?conflict.

  ?person <http://dbpedia.org/ontology/militaryForce> ?militaryForce.
}
```",4,7,5,3,2,3,3,71,0,0,514,0,0.0,0
820,19,test,Give me the child of the parent of the professional in Actor and professional in the award of Scott McCloud.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/occupation> ""Actor""@en . ?v4 <http://dbpedia.org/ontology/child> ?v0 . <http://dbpedia.org/resource/Scott_McCloud> <http://dbpedia.org/property/awards> ?v2 . ?result <http://dbpedia.org/property/occupation> ?v2 . ?result <http://dbpedia.org/property/father> ?v4 . }","```sparql
SELECT ?child WHERE {
  # Step 1: Identify Scott McCloud's award
  <http://dbpedia.org/resource/Scott_McCloud> <http://dbpedia.org/ontology/award> ?award .

  # Step 2: Find the professional field associated with that award
  ?award <http://dbpedia.org/ontology/profession> ?professional .

  # Step 3: Determine the parent of that professional field
  ?professional <http://www.w3.org/2004/02/skos/core#broader> ?parent .

  # Step 4: Find the child of that parent
  ?parent <http://www.w3.org/2004/02/skos/core#narrower> ?child .
}
```",5,5,6,3,2,3,2,20,0,0,128,0,0.0,0
161,68,test,"Give me the military force of the force, that is a societal event and an event and a military conflict, of the person decedent at Francoist Spain and military force of the force, that is a societal event and a military conflict, of the predecessor of Indalecio Prieto and commander in the force, that is an event, of Emilio Mola.",SELECT ?result WHERE { ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v7 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v7 <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Indalecio_Prieto> . ?v4 <http://dbpedia.org/ontology/commander> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v5 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Francoist_Spain> . ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Emilio_Mola> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"SELECT ?result WHERE { 
  ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. 
  ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. 
  ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. 
  ?v2 <http://dbpedia.org/property/decedent> <http://dbpedia.org/resource/Francoist_Spain>. 
  ?v2 <http://dbpedia.org/property/militaryForce> ?v1. 
  ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. 
  ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. 
  ?v4 <http://dbpedia.org/property/predecessor> <http://dbpedia.org/resource/Indalecio_Prieto>. 
  ?v4 <http://dbpedia.org/property/militaryForce> ?v3. 
  ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. 
  ?v6 <http://dbpedia.org/property/commander> <http://dbpedia.org/resource/Emilio_Mola>. 
  ?v6 <http://dbpedia.org/property/militaryForce> ?v5. 
  ?result <http://dbpedia.org/ontology/militaryForce> ?v1. 
  ?result <http://dbpedia.org/ontology/militaryForce> ?v3. 
  ?result <http://dbpedia.org/ontology/militaryForce> ?v5.
}",8,14,9,3,3,3,3,71,0,0,32,0,0.0,0
16,50,test,Give me the professional in the profession of the actor of Unnatural (TV series) and person born as the birth name of Gigi Rice.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v4 . ?result <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Gigi_Rice> <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Unnatural_(TV_series)> <http://dbpedia.org/property/starring> ?v0 . ?v0 <http://dbpedia.org/property/occupation> ?v4 . },"```sparql
# Step 1: Get the profession of an actor in ""Unnatural (TV series)""
SELECT ?actor ?profession WHERE {
    ?series <http://dbpedia.org/ontology/starring> ?actor .
    ?actor <http://purl.org/dc/terms/title> ""Unnatural (TV series)"" .
    ?actor <http://dbpedia.org/ontology/profession> ?profession .
}

# Step 2: Get the birth name of Gigi Rice
SELECT ?birthName WHERE {
    <http://dbpedia.org/resource/Gigi_Rice> <http://dbpedia.org/property/birthName> ?birthName .
}

# Step 3: Find a professional with the same profession and birth name
SELECT ?professional WHERE {
    ?professional <http://dbpedia.org/ontology/profession> ?profession .
    ?professional <http://dbpedia.org/property/birthName> ?birthName .
    FILTER(?profession = ?actorProfession && ?birthName = ?gigiBirthName)
}
```",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
54,22,test,"Give me the predecessor of the child, that is an office holder and a royalty, of Thihapate of Mohnyin and child of Thinkhaya of Pagan.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/successor> ?v1 . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Thihapate_of_Mohnyin> . <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?result . },"```sparql
# Step 1: Identify the person who is an office holder, royalty, and child of Thihapate of Mohnyin and Thinkhaya of Pagan
SELECT ?person WHERE {
    ?person <http://dbpedia.org/ontology/officeHolder> [] .
    ?person <http://dbpedia.org/ontology/royalty> [] .
    ?person <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Thihapate_of_Mohnyin> .
    ?person <http://dbpedia.org/property/mother> <http://dbpedia.org/resource/Thinkhaya_of_Pagan> .
}

# Step 2: Determine a child of this person
SELECT ?child WHERE {
    ?person :child ?child .
}

# Step 3: Find the predecessor of that child in their role or title
SELECT ?predecessor WHERE {
    ?child <http://dbpedia.org/ontology/predecessor> ?predecessor .
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
492,50,test,"Give me the commander in the war, that is a military conflict and an event, of the commander in Battle of Verdun and person decedent at the capital, that is a settlement, of Algeria.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> ?v3 . <http://dbpedia.org/resource/Battle_of_Verdun> <http://dbpedia.org/ontology/commander> ?v0 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://dbpedia.org/ontology/battle> ?v4 . <http://dbpedia.org/resource/Algeria> <http://dbpedia.org/ontology/capital> ?v3 . ?v4 <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
SELECT ?commander WHERE {
    # Step 1: Get the commander from the Battle of Verdun
    <http://dbpedia.org/resource/Battle_of_Verdun> <http://dbpedia.org/ontology/commander> ?verdunCommander .

    # Step 2: Find wars that are both military conflicts and events involving this commander
    ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
    ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event> .
    ?verdunCommander <http://dbpedia.org/ontology/commander> ?war .

    # Step 3: Identify the capital of Algeria as a settlement
    <http://dbpedia.org/resource/Algeria> <http://dbpedia.org/ontology/administrativeCapital> ?capital .
    ?capital <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement> .

    # Step 4: Find persons who died at this capital
    ?person <http://dbpedia.org/ontology/deathPlace> ?capital .
    
    # Step 5: Determine the commander associated with the war found in step 2
    ?war <http://dbpedia.org/ontology/commander> ?commander .
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
488,67,test,"Give me the birth place of Enomoto Takeaki and administration of the father of the spouse, that is a royalty, of Tokugawa Masako and death place of the father, that is a politician, of the father, that is an office holder, of Matsudaira Tadamasa.",SELECT ?result WHERE { ?v6 <http://dbpedia.org/ontology/deathPlace> ?result . ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Tokugawa_Masako> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Matsudaira_Tadamasa> <http://dbpedia.org/property/father> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Enomoto_Takeaki> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/property/leader> ?v3 . ?v1 <http://dbpedia.org/property/father> ?v3 . ?v0 <http://dbpedia.org/property/father> ?v6 . },"```sparql
SELECT ?enomotoBirthPlace ?royalAdmin ?politicianDeathPlace WHERE {
  # Birth place of Enomoto Takeaki
  <http://dbpedia.org/resource/Enomoto_Takeaki> <http://www.w3.org/2000/01/rdf-schema#label> ""Enomoto Takeaki""@en .
  <http://dbpedia.org/resource/Enomoto_Takeaki> <http://dbpedia.org/ontology/birthPlace> ?enomotoBirthPlace .

  # Administration of the father of the spouse (royalty) of Tokugawa Masako
  <http://dbpedia.org/resource/Tokugawa_Masako> <http://dbpedia.org/property/spouse> ?spouse .
  ?spouse <http://www.w3.org/2000/01/rdf-schema#label> ?spouseLabel .
  FILTER(CONTAINS(LCASE(?spouseLabel), ""royalty"")) .
  
  ?spouse <http://dbpedia.org/ontology/father> ?fatherOfSpouse .
  ?fatherOfSpouse <http://dbpedia.org/property/administration> ?royalAdmin .

  # Death place of the father (politician) of the father (office holder) of Matsudaira Tadamasa
  <http://dbpedia.org/resource/Matsudaira_Tadamasa> <http://dbpedia.org/ontology/father> ?fatherOfTadamasa .
  ?fatherOfTadamasa <http://www.w3.org/2000/01/rdf-schema#label> ""Office Holder""@en .

  ?fatherOfTadamasa <http://dbpedia.org/ontology/father> ?grandFatherOfTadamasa .
  ?grandFatherOfTadamasa <http://www.w3.org/2000/01/rdf-schema#label> ""Politician""@en .
  
  ?grandFatherOfTadamasa <http://dbpedia.org/ontology/deathPlace> ?politicianDeathPlace
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
184,59,test,"Give me the child of the child of the parent, that is a royalty, of Archduke Ladislaus Philipp of Austria and parent of the native of the landmark at elevation, that is a settlement, of 96.0.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/property/father> ?v5 . ?v5 <http://dbpedia.org/property/father> ?v0 . ?v3 <http://dbpedia.org/ontology/elevation> ""96.0""^^<http://www.w3.org/2001/XMLSchema#double> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Archduke_Ladislaus_Philipp_of_Austria> <http://dbpedia.org/ontology/parent> ?v0 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?v3 . }","```sparql
SELECT ?finalChild WHERE {
  # Step 1: Find the parent who is royalty
  ?parent a dbo:Royalty ;
          dbo:spouseOrPartner <http://dbpedia.org/resource/Archduke_Ladislaus_Philipp_of_Austria> .

  # Step 2: Find the child of that parent (grandchild of Archduke Ladislaus)
  ?grandChild dbo:parent ?parent .

  # Step 3: Identify the landmark at elevation 96.0 which is a settlement
  ?landmark a dbo:Settlement ;
            geo:elevation ""96.0""^^xsd:float .

  # Step 4: Find the native of this landmark
  ?native dbo:nativePlace ?landmark .

  # Step 5: Identify the parent of this native person
  ?parentOfNative dbo:child ?native .

  # Step 6: Find the child of this parent
  ?finalChild dbo:parent ?parentOfNative .
}
```",6,8,7,3,2,3,3,71,0,0,1,0,0.0,0
617,57,test,"Give me the spouse of the child of the successor, that is a royalty, of Antiochus (son of Antiochus III the Great) and parent of the child of Antiochus (son of Antiochus III the Great) and child of Antiochus III the Great.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?v5 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/successor> ?v0 . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Antiochus_III_the_Great> . ?result <http://dbpedia.org/ontology/child> ?v3 . <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/child> ?v3 . },"```sparql
SELECT ?spouse WHERE {
  # Step 1: Identify Antiochus (son of Antiochus III the Great)
  ?antiochus dbpedia-owl:parent <http://dbpedia.org/resource/Antiochus_III_the_Great> .
  
  # Step 2: Find his successor who is a royalty
  ?successor dbpedia-owl:successorOf ?antiochus ;
             a dbo:Royalty .

  # Step 3: Determine the child of this successor
  ?child dbpedia-owl:parent ?successor .

  # Step 4: Identify the spouse of this child
  ?spouse dbpedia-owl:spouse ?child .

  # Step 5: Ensure that this child is also a parent to another child of Antiochus (son of Antiochus III the Great)
  ?anotherChild dbpedia-owl:parent ?antiochus .
  ?child dbpedia-owl:parent ?anotherChild .

  # Additionally, ensure this child is a child of Antiochus III the Great
  ?child dbpedia-owl:parent <http://dbpedia.org/resource/Antiochus_III_the_Great> .
}
```",6,7,7,3,3,3,3,71,0,0,2,0,0.0,0
16,59,test,Give me the spouse of the person born as the birth name of Ted McGinley and professional in the profession of the actor of Unnatural (TV series).,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ?v3 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Unnatural_(TV_series)> <http://dbpedia.org/property/starring> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v5 . ?v0 <http://dbpedia.org/property/occupation> ?v5 . },"```sparql
# Step 1: Find Ted McGinley's birth name
SELECT ?birthName WHERE {
    <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/ontology/birthName> ?birthName .
}

# Step 2: Identify the actor of ""Unnatural (TV series)"" and their profession
SELECT ?actor ?profession WHERE {
    <http://dbpedia.org/resource/Unnatural_(TV_series)> <http://dbpedia.org/ontology/starring> ?actor .
    ?actor <http://dbpedia.org/ontology/profession> ?profession .
}

# Step 3: Find the person with both the birth name and profession
SELECT ?person WHERE {
    ?person <http://dbpedia.org/ontology/birthName> ?birthName .
    ?person <http://dbpedia.org/ontology/profession> ?profession .
    FILTER(?birthName = ""Ted McGinley's Birth Name"" && ?profession = ""Actor"")
}

# Step 4: Retrieve the spouse of this person
SELECT ?spouse WHERE {
    ?person <http://dbpedia.org/property/spouse> ?spouse .
}
```",6,6,7,3,2,3,3,71,0,0,1,0,0.0,0
994,53,test,"Give me the band member of the person born, that is a musical artist, as Donald Maynard Dokken and associated musical artist of Red Tide (band) and associated musical artist of the associated musical artist of the reference to Watchtower.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ""Donald Maynard Dokken""@en . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Red_Tide_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://xmlns.com/foaf/0.1/name> ""Watchtower""@en . }","```sparql
# Step 1: Identify Donald Maynard Dokken as a musical artist
SELECT ?dokken WHERE {
    ?dokken <http://dbpedia.org/ontology/birthName> ""Donald Maynard Dokken"" .
    ?dokken <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
}

# Step 2: Find associated musical artists of Red Tide (band)
SELECT ?redTide WHERE {
    ?redTide <http://dbpedia.org/ontology/bandMember> ?member .
    ?redTide <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalBand> .
    FILTER(?redTide = dbpedia:Red_Tide_(band))
}

# Step 3: Find associated musical artists of Watchtower
SELECT ?watchtower WHERE {
    ?watchtower <http://dbpedia.org/ontology/bandMember> ?member .
    ?watchtower <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalBand> .
    FILTER(?watchtower = dbpedia:Watchtower_(band))
}

# Step 4: Identify the band member that connects all these elements
SELECT ?bandMember WHERE {
    ?dokken <http://dbpedia.org/ontology/bandMember> ?bandMember .
    ?redTide <http://dbpedia.org/ontology/bandMember> ?bandMember .
    ?watchtower <http://dbpedia.org/ontology/bandMember> ?bandMember .
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
92,56,test,"Give me the band member of the reference, that is an artist, to Nevermore and associated musical artist of Jim Sheppard and band of the person born as the birth name of Joseph Michael.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Jim_Sheppard> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Joseph_Michael> <http://dbpedia.org/property/birthName> ?v0 . ?v2 <http://xmlns.com/foaf/0.1/name> ""Nevermore""@en . ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?result <http://dbpedia.org/ontology/bandMember> ?v1 . }","```sparql
# Step 1: Find the person born as Joseph Michael
SELECT ?person WHERE {
    ?person <http://dbpedia.org/property/birthName> ""Joseph Michael"" .
}

# Step 2: Determine the band associated with Jim Sheppard
SELECT ?band WHERE {
    ?sheppard <http://dbpedia.org/resource/Jim_Sheppard_(musician)> .
    ?sheppard <http://dbpedia.org/ontology/memberOf> ?band .
}

# Step 3: Find the reference artist related to Nevermore and associated musical artist of Jim Sheppard
SELECT ?artist WHERE {
    ?nevermore <http://dbpedia.org/resource/Nevermore_(band)> .
    ?nevermore <http://dbpedia.org/property/referenceArtist> ?artist .
    ?sheppard <http://dbpedia.org/ontology/memberOf> ?band2 .
    ?band2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?artist .
}

# Step 4: Identify the band member who fits all these criteria
SELECT ?member WHERE {
    ?person <http://dbpedia.org/property/birthName> ""Joseph Michael"" .
    ?person <http://dbpedia.org/ontology/memberOf> ?band3 .
    ?band3 = ?band2 .
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
696,19,test,Give me the birth place of the member of Dropkick Murphys and landmark at elevation of the award of the commander in Battle of Chishui River.,SELECT ?result WHERE { <http://dbpedia.org/resource/Dropkick_Murphys> <http://dbpedia.org/ontology/bandMember> ?v2 . <http://dbpedia.org/resource/Battle_of_Chishui_River> <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://dbpedia.org/property/awards> ?v4 . ?result <http://dbpedia.org/ontology/elevation> ?v4 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?birthPlace ?landmark WHERE {
  # Step 1: Identify a member of Dropkick Murphys
  ?member rdf:type dbo:Band ;
          dbo:bandMember ?person .
  
  FILTER(?member = dbp:Dropkick_Murphys) .

  # Step 2: Find the birthplace of that member
  ?person dbo:birthPlace ?birthPlace .

  # Step 3: Identify the commander in Battle of Chishui River
  dbp:Battle_of_Chishui_River dbo:commander ?commander .

  # Step 4: Determine an award received by that commander
  ?commander dbo:award ?award .

  # Step 5: Find a landmark associated with that award and check elevation
  ?award dbo:associatedLandmark ?landmark .
  
  ?landmark rdf:type dbo:Lighthouse ;
            dbo:elevation ?elevation .
  
  FILTER(?elevation > 0) # Assuming we want landmarks at some positive elevation
}
```",5,5,6,3,2,3,2,20,0,0,1,0,0.0,0
345,17,test,"Give me the figure known as Stolz von Liechtenstein and team of the person born, that is a soccer player and a soccer manager, on the birth date of Eiður Guðjohnsen.","SELECT ?result WHERE { <http://dbpedia.org/resource/Eiður_Guðjohnsen> <http://dbpedia.org/ontology/birthDate> ?v0 . ?result <http://dbpedia.org/property/nickname> ""Stolz von Liechtenstein""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v3 <http://dbpedia.org/ontology/birthDate> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?result <http://dbpedia.org/ontology/manager> ?v3 . }","```sparql
# Step 1: Get Eiður Guðjohnsen's birth date
SELECT ?birthDate WHERE {
    <http://dbpedia.org/resource/Eiður_Guðjohnsen> <http://www.w3.org/2000/01/rdf-schema#seeAlso> ?birthDate .
}

# Step 2: Find a person who is both a soccer player and manager born on that date
SELECT DISTINCT ?person WHERE {
    ?person <http://dbpedia.org/ontology/birthDate> ?birthDate .
    ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer> .
    ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager> .
}

# Step 3: Get the team of this person
SELECT DISTINCT ?team WHERE {
    ?person <http://dbpedia.org/property/team> ?team .
}

# Step 4: Identify ""Stolz von Liechtenstein""
SELECT ?figure WHERE {
    ?figure <http://www.w3.org/2000/01/rdf-schema#label> ""Stolz von Liechtenstein""@en .
}
```",4,6,5,3,2,3,2,20,0,0,1,0,0.0,0
64,9,test,"Give me the entity in the region, that is a country, of Central European Time and alma mater of the person decedent, that is a writer, at Sremska Kamenica.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . ?result <http://dbpedia.org/ontology/country> ?v3 . ?v1 <http://dbpedia.org/ontology/almaMater> ?result . ?v1 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Sremska_Kamenica> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>. },"```sparql
SELECT ?entity WHERE {
  ?region dbo:country ?country .
  ?country dbo:timeZone ""Central European Time"" .
  
  ?person foaf:almaMater ?entity .
  ?person dbo:deceasedAt <http://dbpedia.org/resource/Sremska_Kamenica> .
  ?person dbo:occupation dbc:Writers .

  FILTER EXISTS { ?entity a dbo:Agent } # Assuming 'entity' is an agent like a university or institution
}
```",4,6,5,2,2,2,2,9,0,0,1,0,0.0,0
9,34,test,"Give me the figure known as QUB and alma mater of the mayor, that is a politician, of the entity, that is an organisation, in Belfast.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/almaMater> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://dbpedia.org/property/leader> ?v1 . ?v2 <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Belfast> . ?result <http://dbpedia.org/property/nickname> ""QUB""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
SELECT ?figure WHERE {
  # Find organizations in Belfast
  ?organization <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>;
                <http://dbpedia.org/ontology/location> ?location.
  
  # Ensure the location is Belfast
  ?location <http://www.w3.org/2000/01/rdf-schema#label> ""Belfast""@en.

  # Find politicians who are mayors of these organizations
  ?mayor <http://dbpedia.org/ontology/politician> true;
         <http://dbpedia.org/ontology/mayorFor> ?organization.
  
  # Get the alma mater of the mayor
  ?mayor <http://dbpedia.org/property/almaMater> ?almaMater.

  # Find a figure known as QUB (likely Queen's University Belfast)
  ?figure <http://www.w3.org/2000/01/rdf-schema#label> ""Queen's University Belfast""@en;
          <http://dbpedia.org/ontology/alumni> ?mayor.
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
701,37,test,Give me the parent of the child of the child of Seti I and spouse of Ramesses II.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/child> ?v3 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seti_I> . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Ramesses_II> . },"```sparql
SELECT ?parent WHERE {
  ?grandchild <http://dbpedia.org/ontology/father> ?setiIChild .
  ?setiIChild <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Seti_I> .
  ?grandchild <http://dbpedia.org/ontology/mother> ?ramessesII .
  ?ramessesII <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Wife> .
  ?parent <http://dbpedia.org/ontology/spouse> ?ramessesII .
}
```",4,4,5,3,2,3,3,71,0,0,2,0,0.0,0
356,17,test,"Give me the team of the native, that is a soccer player and a soccer manager, of the birth place, that is English and a settlement, of Gary Williams (footballer, born 1960) and player in 2015 Sacramento Republic FC season.","SELECT ?result WHERE { <http://dbpedia.org/resource/2015_Sacramento_Republic_FC_season> <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/Gary_Williams_(footballer,_born_1960)> <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v3 <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/manager> ?v3 . }","```sparql
SELECT ?team WHERE {
    # Step 1: Find Gary Williams' birthplace in England
    <http://dbpedia.org/resource/Gary_Williams_(footballer,_born_1960)> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
    ?birthPlace <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement> ;
                <http://dbpedia.org/property/country> <http://dbpedia.org/resource/England> .

    # Step 2: Find a native soccer player and manager from this birthplace
    ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer> ;
            <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager> ;
            <http://dbpedia.org/property/nationality> ?nationality .
    ?nationality <http://www.w3.org/2000/01/rdf-schema#label> ""English""@en .
    ?person <http://dbpedia.org/ontology/birthPlace> ?birthPlace .

    # Step 3: Check if this person was part of the 2015 Sacramento Republic FC team
    ?playerTeam <http://dbpedia.org/property/team> ?team ;
                <http://dbpedia.org/property/player> ?person .
    ?team <http://www.w3.org/2000/01/rdf-schema#label> ""Sacramento Republic FC""@en .
    FILTER(year(?date) = 2015)
}
```",4,8,5,3,2,3,2,20,0,0,1,0,0.0,0
161,38,test,"Give me the commander in the force, that is an event, of Emilio Mola and military force of the force, that is a societal event and a military conflict, of Francisco Largo Caballero.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Emilio_Mola> . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . },"```sparql
SELECT ?force WHERE {
  ?force <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>.
  ?force <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>.
  ?force <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>.

  <http://dbpedia.org/resource/Emilio_Mola> <http://dbpedia.org/property/commander> ?force.
  
  ?v1 <http://dbpedia.org/property/militaryForce> ?force.
  ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/resource/Francisco_Largo_Caballero>.
}
```",4,7,5,2,2,3,3,71,0,0,32,0,0.0,0
994,70,test,"Give me the band member of the person born, that is a musical artist, as the persona of Don Dokken and associated musical artist of the associated musical artist of Watchtower (band) and associated musical artist of the band member, that is a band and a group and an organisation, of the band, that is an organisation, of Fredrik Thordendal.",SELECT ?result WHERE { ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Watchtower_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v0 <http://dbpedia.org/property/birthName> ?v5 . <http://dbpedia.org/resource/Don_Dokken> <http://xmlns.com/foaf/0.1/givenName> ?v5 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Fredrik_Thordendal> . ?v6 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v6 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
# Step 1: Identify the persona of Don Dokken
SELECT ?persona WHERE {
    ?dokken dbpedia-owl:birthName ""Don Dokken"" .
    ?dokken dbpedia-owl:associatedBand ?band .
    ?band dbpedia-owl:member ?persona .
}

# Step 2: Find the musical artist associated with this persona
SELECT ?artist WHERE {
    ?persona dbpedia-owl:birth ?birth .
    ?artist dbpedia-owl:birth ?birth .
    ?artist a <http://dbpedia.org/ontology/MusicalArtist> .
}

# Step 3: Determine the associated musical artist of Watchtower (band)
SELECT ?watchtowerArtist WHERE {
    <http://dbpedia.org/resource/Watchtower_(band)> dbpedia-owl:associatedMusicalArtist ?watchtowerArtist .
}

# Step 4: Find the band member who is also an associated musical artist from step 3
SELECT ?member WHERE {
    ?watchtowerArtist dbpedia-owl:associatedBand ?band .
    ?band dbpedia-owl:member ?member .
}

# Step 5: Identify the band that Fredrik Thordendal is a member of, which is both a band and an organization
SELECT ?thordendalBand WHERE {
    <http://dbpedia.org/resource/Fredrik_Thordendal> dbpedia-owl:associatedBand ?band .
    ?band a <http://dbpedia.org/ontology/Band> ;
          a <http://dbpedia.org/ontology/Organisation> .
}

# Step 6: Find the band member of the person identified in step 2
SELECT ?finalMember WHERE {
    ?artist dbpedia-owl:associatedBand ?band .
    ?band dbpedia-owl:member ?finalMember .
}
```",8,13,9,3,3,3,3,71,0,0,1,0,0.0,0
54,38,test,"Give me the parent of the child of Narapati I of Ava and predecessor of the child, that is an office holder and a royalty, of Thihapate of Mohnyin.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Narapati_I_of_Ava> . ?result <http://dbpedia.org/ontology/successor> ?v2 . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Thihapate_of_Mohnyin> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
SELECT ?parent WHERE {
  ?child <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Narapati_I_of_Ava> .
  ?predecessor <http://dbpedia.org/ontology/predecessor> ?child .
  ?predecessor <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder> .
  ?predecessor <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
  ?parent <http://dbpedia.org/ontology/father> ?predecessor .
}
```",4,6,5,2,2,3,3,71,0,0,1,0,0.0,0
404,52,test,"Give me the child of Ernest Augustus, Crown Prince of Hanover and parent of the child, that is a royalty, of Ernest Augustus, Duke of Brunswick and spouse of the person born, that is a royalty, as the birth name of Princess Victoria Louise of Prussia.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/birthName> ?v3 . ?result <http://dbpedia.org/ontology/child> ?v5 . <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/ontology/child> ?v5 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ernest_Augustus,_Crown_Prince_of_Hanover> . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/property/birthName> ?v3 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
SELECT ?child ?parent ?spouse WHERE {
  # Step 1: Find the child of Ernest Augustus, Crown Prince of Hanover
  <http://dbpedia.org/resource/Ernest_Augustus,_Crown_Prince_of_Hanover> <http://dbpedia.org/ontology/child> ?child .
  
  # Step 2: Ensure the child is royalty
  ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .

  # Step 3: Find the parent of this child, which should be Ernest Augustus, Duke of Brunswick
  ?child <http://dbpedia.org/ontology/parent> ?parent .
  FILTER (?parent = <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick>) .

  # Step 4: Identify the spouse of a person born as Princess Victoria Louise of Prussia
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
  ?person <http://dbpedia.org/property/birthName> ""Princess Victoria Louise of Prussia"" .
  ?person <http://dbpedia.org/ontology/spouse> ?spouse .

  # Ensure the child is related to the spouse
  ?child <http://dbpedia.org/ontology/spouse> ?spouse .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
232,55,test,"Give me the actor of the claim to fame, that is a film and a military conflict, of Sean Pertwee and child of the person born as John Devon Roland Pertwee and native of the residence, that is a settlement and British, of Sylvie Bermann.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/birthName> ""John Devon Roland Pertwee""@en . ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Sean_Pertwee> <http://dbpedia.org/ontology/knownFor> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v5 <http://dbpedia.org/ontology/starring> ?result . ?v3 <http://dbpedia.org/ontology/child> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Sylvie_Bermann> <http://dbpedia.org/property/residence> ?v2 . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. }","```sparql
# Step 1: Find Sean Pertwee's claim to fame that is both a film and a military conflict
SELECT ?filmConflict WHERE {
    ?filmConflict <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>.
    ?filmConflict <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>.
    <http://dbpedia.org/resource/Sean_Pertwee> <http://dbpedia.org/ontology/knownFor> ?filmConflict.
}

# Step 2: Find the actor of that film/military conflict
SELECT ?actor WHERE {
    ?filmConflict <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>.
    ?filmConflict <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>.
    <http://dbpedia.org/resource/Sean_Pertwee> <http://dbpedia.org/ontology/knownFor> ?filmConflict.
    ?filmConflict <http://dbpedia.org/ontology/starring> ?actor.
}

# Step 3: Find Sylvie Bermann's residence that is a settlement and British
SELECT ?residence WHERE {
    ?residence <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>.
    ?residence <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>.
    <http://dbpedia.org/resource/Sylvie_Bermann> <http://dbpedia.org/property/residence> ?residence.
}

# Step 4: Find the person born as John Devon Roland Pertwee who is native of that residence
SELECT ?person WHERE {
    ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>.
    ?person <http://dbpedia.org/ontology/birthName> ""John Devon Roland Pertwee""^^<http://www.w3.org/2001/XMLSchema#string>.
    ?residence <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>.
    ?residence <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>.
    <http://dbpedia.org/resource/Sylvie_Bermann> <http://dbpedia.org/property/residence> ?residence.
    ?person <http://dbpedia.org/ontology/birthPlace> ?residence.
}
```",6,10,7,2,3,3,3,71,0,0,1,0,0.0,0
16,52,test,Give me the professional in the profession of Satomi Ishihara and spouse of the person born as the birth name of Ted McGinley and person born as Georgeanne Marie Rice.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Georgeanne Marie Rice""@en . ?result <http://dbpedia.org/property/occupation> ?v5 . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Satomi_Ishihara> <http://dbpedia.org/property/occupation> ?v5 . ?v2 <http://dbpedia.org/property/birthName> ?v3 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
SELECT ?professional WHERE {
  # Find the profession of Satomi Ishihara
  <http://dbpedia.org/resource/Satomi_Ishihara> <http://dbpedia.org/ontology/profession> ?profession .

  # Find the person with the same profession as Satomi Ishihara
  ?professional <http://dbpedia.org/ontology/profession> ?profession .

  # Find the spouse of Ted McGinley by birth name
  ?tedMcGinley <http://dbpedia.org/property/birthName> ""Ted McGinley"" .
  ?tedMcGinley <http://dbpedia.org/ontology/spouse> ?spouse1 .

  # Find the spouse of Georgeanne Marie Rice by birth name
  ?georgeanneRice <http://dbpedia.org/property/birthName> ""Georgeanne Marie Rice"" .
  ?georgeanneRice <http://dbpedia.org/ontology/spouse> ?spouse2 .

  # Ensure the professional is married to both individuals
  FILTER (?professional = ?spouse1 && ?professional = ?spouse2)
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
9,52,test,"Give me the figure known as QUB and alma mater of the awardee of Royal Medal and alma mater of the mayor, that is a politician, of the entity, that is an organisation, in Belfast.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ""QUB""@en . ?v5 <http://dbpedia.org/ontology/almaMater> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://dbpedia.org/property/leader> ?v2 . ?v3 <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Belfast> . ?v2 <http://dbpedia.org/ontology/almaMater> ?result . ?v5 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Medal> . }","```sparql
SELECT ?figure WHERE {
  # Step 1: Identify organization in Belfast
  ?organization <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>;
                <http://dbpedia.org/property/location> ?location.
  
  FILTER(CONTAINS(LCASE(?location), ""belfast""))

  # Step 2: Find politician who is mayor of this organization
  ?politician <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>;
              <http://dbpedia.org/property/mayorOf> ?organization;
              <http://dbpedia.org/ontology/almaMater> ?almaMater.

  # Step 3: Find awardees of the Royal Medal with the same alma mater
  ?awardee <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>;
           <http://dbpedia.org/property/almaMater> ?almaMater;
           <http://dbpedia.org/ontology/award> ?award.
  
  ?award <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/RoyalMedal>.

  # Step 4: Find figure known as QUB
  ?figure <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>;
          <http://dbpedia.org/property/commonName> ""QUB""@en;
          <http://dbpedia.org/ontology/almaMater> ?almaMater.
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
666,19,test,"Give me the player in the manager, that is a sports manager, of 2016–17 Hull City A.F.C. season and figure known as the nickname of the reference, that is an organisation and a soccer club and a sports club, to England.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v0 <http://xmlns.com/foaf/0.1/name> ""England""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://dbpedia.org/ontology/team> ?result . ?result <http://dbpedia.org/property/nickname> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v0 <http://dbpedia.org/property/nickname> ?v4 . <http://dbpedia.org/resource/2016–17_Hull_City_A.F.C._season> <http://dbpedia.org/ontology/manager> ?v2 . }","```sparql
SELECT ?player WHERE {
    # Step 1: Find the manager of the 2016–17 Hull City A.F.C. season
    <http://dbpedia.org/resource/2016%E2%80%9317_Hull_City_A.FC_season> <http://dbpedia.org/ontology/coach> ?manager .
    
    # Step 2: Ensure the manager is a sports manager
    ?manager <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager> .

    # Step 3: Find players associated with this manager
    ?player <http://dbpedia.org/property/team> <http://dbpedia.org/resource/Hull_City_A.FC> .
    ?player <http://dbpedia.org/ontology/coach> ?manager .

    # Step 4: Identify the organization ""England"" which is an organization, soccer club, and sports club
    <http://dbpedia.org/resource/England_national_football_team> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?type .
    FILTER (?type IN (<http://dbpedia.org/ontology/Organisation>, <http://dbpedia.org/ontology/SoccerClub>, <http://dbpedia.org/ontology/SportsClub>)).
    
    # Step 5: Find the nickname of this organization
    <http://dbpedia.org/resource/England_national_football_team> <http://dbpedia.org/property/nickname> ?nickname .

    # Step 6: Identify figures known by this nickname
    ?figure <http://www.w3.org/2000/01/rdf-schema#label> ?nickname .
}
```",5,9,6,3,2,3,2,20,0,0,2,0,0.0,0
659,55,test,"Give me the commander in the war, that is an event and a military conflict, of 1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish) and military force of the force, that is a societal event and an event and a military conflict, of Rutger Jan Schimmelpenninck and commander in the force of Arthur Wellesley, 1st Duke of Wellington.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v2 . <http://dbpedia.org/resource/1st_Light_Cavalry_Lancers_Regiment_of_the_Imperial_Guard_(Polish)> <http://dbpedia.org/ontology/battle> ?v5 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v5 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Arthur_Wellesley,_1st_Duke_of_Wellington> . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> . }","```sparql
# Step 1: Identify the war involving the specified entities
SELECT ?war WHERE {
  ?war a <http://dbpedia.org/ontology/MilitaryConflict> .
  ?war a <http://dbpedia.org/ontology/Event> .

  # Involving 1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish)
  OPTIONAL { 
    ?regiment dbpedia-owl:partOfMilitaryUnit ?unit .
    ?unit dbpedia-owl:involvedInWar ?war .
    FILTER(STRSTARTS(LCASE(?regiment), ""1st light cavalry lancers regiment of the imperial guard (polish)""))
  }

  # Involving Rutger Jan Schimmelpenninck's military force
  OPTIONAL {
    ?schimmelpenninck dbpedia-owl:commanderOfMilitaryForce ?force .
    ?force dbpedia-owl:involvedInWar ?war .
    FILTER(STRSTARTS(LCASE(?schimmelpenninck), ""rutger jan schimmelpenninck""))
  }

  # Involving Arthur Wellesley's military force
  OPTIONAL {
    ?wellington dbpedia-owl:commanderOfMilitaryForce ?force2 .
    ?force2 dbpedia-owl:involvedInWar ?war .
    FILTER(STRSTARTS(LCASE(?wellington), ""arthur wellesley, 1st duke of wellington""))
  }
}

# Step 2: Determine the commander in this war
SELECT ?commander WHERE {
  ?war a <http://dbpedia.org/ontology/MilitaryConflict> .
  ?war dbpedia-owl:commander ?commander .

  # Ensure it's the same war identified in step 1
  FILTER(?war = ?identifiedWar)
}

# Step 3: Identify the societal event and military conflict involving the specified forces
SELECT ?societalEvent WHERE {
  ?force a <http://dbpedia.org/ontology/MilitaryForce> .
  ?force dbpedia-owl:involvedInMilitaryConflict ?militaryConflict .
  ?militaryConflict a <http://dbpedia.org/ontology/SocialEvent> .

  # Involving Rutger Jan Schimmelpenninck's military force
  OPTIONAL {
    ?schimmelpenninck dbpedia-owl:commanderOfMilitaryForce ?force .
    FILTER(STRSTARTS(LCASE(?schimmelpenninck), ""rutger jan schimmelpenninck""))
  }

  # Involving Arthur Wellesley's military force
  OPTIONAL {
    ?wellington dbpedia-owl:commanderOfMilitaryForce ?force2 .
    FILTER(STRSTARTS(LCASE(?wellington), ""arthur wellesley, 1st duke of wellington""))
  }
}

# Step 4: Find the commander of this second force
SELECT ?secondCommander WHERE {
  ?societalEvent a <http://dbpedia.org/ontology/SocialEvent> .
  ?societalEvent dbpedia-owl:commander ?secondCommander .

  # Ensure it's the same societal event identified in step 3
  FILTER(?societalEvent = ?identifiedSocietalEvent)
}

# Step 5: Find the commander in the war associated with both forces from steps 2 and 3
SELECT ?finalCommander WHERE {
  ?war a <http://dbpedia.org/ontology/MilitaryConflict> .
  ?war dbpedia-owl:commander ?finalCommander .

  # Ensure it's the same war identified in step 1
  FILTER(?war = ?identifiedWar)
}
```",6,11,7,2,3,3,3,71,0,0,15,0,0.0,0
488,31,test,"Give me the birth place of the commander in the war, that is a military conflict and an event and a societal event, of Saitō Hajime and death place of Tokugawa Ieyasu.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Saitō_Hajime> <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Tokugawa_Ieyasu> <http://dbpedia.org/ontology/deathPlace> ?result . ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?birthPlace ?deathPlace WHERE {
  ?war a <http://dbpedia.org/ontology/MilitaryConflict> ;
       a <http://dbpedia.org/ontology/Event> ;
       a <http://dbpedia.org/ontology/SocietalEvent> .
  
  ?saitoHajime a <http://dbpedia.org/resource/Saitō_Hajime> ;
               <http://dbpedia.org/property/commander> ?commander .

  ?war <http://dbpedia.org/ontology/participant> ?saitoHajime .
  
  ?commander <http://www.w3.org/2000/01/rdf-schema#label> ?commanderLabel ;
             <http://dbpedia.org/property/birthPlace> ?birthPlace .

  <http://dbpedia.org/resource/Tokugawa_Ieyasu> <http://dbpedia.org/ontology/deathPlace> ?deathPlace .
}
```",4,7,5,3,2,3,3,71,0,0,1,0,0.0,0
391,56,test,"Give me the actor of The Departed and native of the figure known as Hub City and actor of the movie, that is a movie and a work and a television show, with the professional in .","SELECT ?result WHERE { <http://dbpedia.org/resource/The_Departed> <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://dbpedia.org/property/starring> ?v0 . ?v2 <http://dbpedia.org/property/nickname> ""Hub City""@en . ?v0 <http://dbpedia.org/property/occupation> """"@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://dbpedia.org/property/starring> ?result . }","```sparql
# Step 1: Find the actor of ""The Departed""
SELECT ?actor WHERE {
    ?movie <http://dbpedia.org/ontology/starring> ?actor .
    ?movie <http://dbpedia.org/property/title> ""The Departed""@en .
}

# Step 2: Check if any of these actors are native to ""Hub City"" (Wilmington, NC)
SELECT DISTINCT ?actor WHERE {
    ?actor <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/United_States> .
    ?actor <http://dbpedia.org/property/placeOfBirth> <http://dbpedia.org/resource/Wilmington,_North_Carolina> .
}

# Step 3: Find the movie that is both a work and television show
SELECT DISTINCT ?movie WHERE {
    ?movie <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film> .
    ?movie <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work> .
    ?movie <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow> .
}

# Step 4: Combine the results to find the actor
SELECT DISTINCT ?actor WHERE {
    ?actor <http://dbpedia.org/ontology/starring> ?movie .
    ?movie <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film> .
    ?movie <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work> .
    ?movie <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow> .
    ?actor <http://dbpedia.org/property/placeOfBirth> <http://dbpedia.org/resource/Wilmington,_North_Carolina> .
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
981,17,test,"Give me the birth place of the person born, that is a beauty queen, as the author of Kamikaze Girls and entity in Indonesia.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BeautyQueen>. ?v3 <http://dbpedia.org/property/birthName> ?v0 . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Indonesia> . <http://dbpedia.org/resource/Kamikaze_Girls> <http://dbpedia.org/property/author> ?v0 . },"```sparql
SELECT ?person ?birthPlace WHERE {
  ?person <http://dbpedia.org/ontology/author> <http://dbpedia.org/resource/Kamikaze_Girls> .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BeautyQueen> .
  ?person <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Indonesia> .
  ?person <http://dbpedia.org/property/birthPlace> ?birthPlace .
}
```",4,5,5,3,2,3,2,20,0,0,19,0,0.0,0
55,22,test,"Give me the band member of the producer, that is a band, of Used to Love Her and band member of the band member, that is a band and a group, of San Francisco Symphony.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/San_Francisco_Symphony> . <http://dbpedia.org/resource/Used_to_Love_Her> <http://dbpedia.org/ontology/producer> ?v3 . },"```sparql
SELECT ?bandMember WHERE {
  # Step 1: Find the producer who is a band for ""Used to Love Her""
  ?producerBand <http://dbpedia.org/ontology/produced> <http://dbpedia.org/resource/Used_to_Love_Her> .
  ?producerBand <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band> .

  # Step 2: Find band members of the producer-band
  ?bandMember <http://dbpedia.org/ontology/member> ?producerBand .

  # Step 3: Check if this band member is also a member of another band or group
  ?otherBandGroup <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> (<http://dbpedia.org/ontology/Band> | <http://dbpedia.org/ontology/MusicalGroup>) .
  ?bandMember <http://dbpedia.org/ontology/member> ?otherBandGroup .

  # Step 4: Ensure the other band or group is associated with San Francisco Symphony
  ?otherBandGroup <http://dbpedia.org/property/associatedWith> <http://dbpedia.org/resource/San_Francisco_Symphony> .
}
```",4,7,5,2,2,2,3,28,0,0,1,0,0.0,0
281,60,test,"Give me the war of the awardee of the award of Jonathon Band and war of the profession, that is a military unit, of the professional, that is an office holder and a politician, in New Zealand Army.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/occupation> ?v1 . ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/property/awards> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/New_Zealand_Army> . <http://dbpedia.org/resource/Jonathon_Band> <http://dbpedia.org/property/awards> ?v3 . },"```sparql
SELECT DISTINCT ?war1 ?war2 WHERE {
  # Part 1: Find the award Jonathon Band received and its related war
  <http://dbpedia.org/resource/Jonathon_Band> <http://dbpedia.org/ontology/award> ?award .
  ?award <http://dbpedia.org/property/war> ?war1 .

  # Part 2: Identify a professional who is an office holder and politician in the New Zealand Army
  ?professional <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder> .
  ?professional <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .
  ?professional <http://dbpedia.org/property/profession> ?profession .
  ?profession <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit> .
  ?profession <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/New_Zealand_Army> .

  # Part 3: Find the war related to this military unit
  ?profession <http://dbpedia.org/property/war> ?war2 .
}
```",6,9,7,3,2,3,3,71,0,0,9,0,0.0,0
184,67,test,"Give me the child of the child of the parent, that is a royalty, of Archduke Ladislaus Philipp of Austria and parent of the child of the parent of Archduchess Margaret of Austria (born 1925) and parent of Géza von Habsburg.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v3 . ?v6 <http://dbpedia.org/property/father> ?v0 . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Margaret_of_Austria_(born_1925)> . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Géza_von_Habsburg> . ?v3 <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/property/father> ?v6 . <http://dbpedia.org/resource/Archduke_Ladislaus_Philipp_of_Austria> <http://dbpedia.org/ontology/parent> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
SELECT ?child WHERE {
  # Step 1: Find the parent of Archduke Ladislaus Philipp of Austria who is royalty
  ?parent rdf:type dbo:Royalty .
  <http://dbpedia.org/resource/Archduke_Ladislaus_Philipp_of_Austria> dbo:parent ?parent .

  # Step 2: Find the child of that parent
  ?descendant1 dbo:childOf ?parent .

  # Step 3: Find the child of this descendant
  ?descendant2 dbo:childOf ?descendant1 .

  # Step 4: Find the parent of Archduchess Margaret of Austria (born 1925) who is royalty
  ?parentMargaret rdf:type dbo:Royalty .
  <http://dbpedia.org/resource/Archduchess_Margaret_of_Austria_(born_1925)> dbo:parent ?parentMargaret .

  # Step 5: Find the child of that parent
  ?descendant3 dbo:childOf ?parentMargaret .

  # Step 6: Find the child of this descendant
  ?descendant4 dbo:childOf ?descendant3 .

  # Step 7: Find Géza von Habsburg's parent who is royalty
  ?parentGéza rdf:type dbo:Royalty .
  <http://dbpedia.org/resource/G%C3%A9za_von_Habsburg> dbo:parent ?parentGéza .

  # Step 8: Find the child of that parent
  ?descendant5 dbo:childOf ?parentGéza .

  # Step 9: Find the common child among these three lines
  FILTER (?descendant2 = ?descendant4 && ?descendant2 = ?descendant5)
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
54,45,test,"Give me the parent of Thado Minsaw of Prome and child of Thinkhaya of Pagan and predecessor of the child, that is an office holder and a royalty, of the reference to Thihapate of Mohnyin.","SELECT ?result WHERE { <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> ?v1 . ?v1 <http://dbpedia.org/property/father> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Thihapate of Mohnyin""@en . <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?result . }","```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> .
  ?person <http://www.w3.org/2000/01/rdf-schema#child> <http://dbpedia.org/resource/Thinkhaya_of_Pagan> .
  ?person a <http://dbpedia.org/ontology/OfficeHolder> ;
          a <http://dbpedia.org/ontology/Royalty> .
  ?successor <http://www.w3.org/2000/01/rdf-schema#child> ?person .
  ?reference <http://dbpedia.org/property/reference> ?successor .
  ?reference <http://dbpedia.org/property/reference> <http://dbpedia.org/resource/Thihapate_of_Mohnyin> .
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
959,59,test,"Give me the member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of the person born in 1958 and native of the residence, that is a country, of the leader, that is a politician, of 2010 Japanese House of Councillors election.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/birthYear> ""1958""^^<http://www.w3.org/2001/XMLSchema#gYear> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v3 <http://dbpedia.org/ontology/almaMater> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/birthPlace> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?v0 <http://dbpedia.org/property/residence> ?v4 . ?result <http://dbpedia.org/ontology/team> ?v1 . <http://dbpedia.org/resource/2010_Japanese_House_of_Councillors_election> <http://dbpedia.org/property/leader> ?v0 . }","```sparql
# Step 1: Find the leader of the 2010 Japanese House of Councillors election
SELECT ?leader WHERE {
    ?election dbpedia-owl:winner ?leader .
    ?election dbpedia-owl:date ""2010""^^xsd:gYear .
    ?election dbpedia-owl:country <http://dbpedia.org/resource/Japan> .
}

# Step 2: Determine the country of this leader's residence
SELECT ?residenceCountry WHERE {
    ?leader foaf:based_near ?location .
    ?location geo:hasCountry ?residenceCountry .
}

# Step 3: Find a person born in 1958 native to that country
SELECT ?person WHERE {
    ?person dbo:birthYear ""1958""^^xsd:gYear .
    ?person dbo:nationality ?residenceCountry .
}

# Step 4: Identify the alma mater of this person, ensuring it is Japanese and an educational institution
SELECT ?almaMater WHERE {
    ?person dbo:almaMater ?almaMater .
    ?almaMater dbpedia-owl:country <http://dbpedia.org/resource/Japan> .
    ?almaMater a <http://dbpedia.org/ontology/Organisation> ;
              a <http://dbpedia.org/ontology/University> ;
              a <http://dbpedia.org/ontology/EducationalOrganization> .
}

# Step 5: Find a member associated with this alma mater
SELECT ?member WHERE {
    ?almaMater dbo:member ?member .
}
```",6,12,7,3,2,3,3,71,0,0,167,0,0.0,0
498,9,test,"Give me the band of the band, that is an organisation and a band, of Solace of Requiem and band of the member, that is an artist, of Mortician (band).",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. <http://dbpedia.org/resource/Mortician_(band)> <http://dbpedia.org/ontology/bandMember> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Solace_of_Requiem> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT ?band WHERE {
  # Part 1: Band related to Solace of Requiem
  ?solace <http://dbpedia.org/ontology/member> ?member .
  ?member <http://dbpedia.org/property/band> ?band1 .
  ?band1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation> .
  ?band1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band> .

  # Part 2: Band related to a member of Mortician
  ?morticianMember <http://dbpedia.org/property/member> <http://dbpedia.org/resource/Mortician_(band)> .
  ?morticianMember <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist> .
  ?morticianMember <http://dbpedia.org/property/band> ?band2 .

  # Find common band
  FILTER (?band1 = ?band2)
  BIND(?band1 AS ?band)
}
```",4,7,5,2,2,2,2,9,0,0,1,0,0.0,0
547,62,test,Give me the resting place of the child of the child of William Haliburton and resting place of Alan Cunningham and resting place of the actor of the show with Emily Richard.,"SELECT ?result WHERE { ?v6 <http://dbpedia.org/ontology/restingPlace> ?result . ?v4 <http://dbpedia.org/property/father> ""William Haliburton""@en . <http://dbpedia.org/resource/Alan_Cunningham> <http://dbpedia.org/ontology/restingPlace> ?result . ?v4 <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://dbpedia.org/ontology/restingPlace> ?result . ?v0 <http://dbpedia.org/property/starring> ?v6 . ?v0 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emily_Richard> . }","```sparql
SELECT ?restingPlace WHERE {
  # Resting place of the child of the child of William Haliburton
  {
    ?grandchild dbpedia-owl:parent ?child .
    ?child dbpedia-owl:parent <http://dbpedia.org/resource/William_Haliburton> .
    ?grandchild dbpedia-owl:deathPlace ?restingPlace .
  }
  
  UNION
  
  # Resting place of Alan Cunningham
  {
    <http://dbpedia.org/resource/Alan_Cunningham> dbpedia-owl:deathPlace ?restingPlace .
  }
  
  UNION
  
  # Resting place of the actor of the show with Emily Richard
  {
    ?show dbo:starring <http://dbpedia.org/resource/E._Richard> ;
          dbo:starring ?actor .
    ?actor dbpedia-owl:deathPlace ?restingPlace .
  }
}
```",7,7,8,3,3,3,3,71,0,0,1,0,0.0,0
251,26,test,"Give me the administration of Forza Italia (2013) and location of the war, that is a military conflict, of Louis François Félix Musnier and death place of the author of The Twelve Abbots of Challant.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/place> ?result . ?result <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Forza_Italia_(2013)> . <http://dbpedia.org/resource/The_Twelve_Abbots_of_Challant> <http://dbpedia.org/property/author> ?v1 . ?v1 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Louis_François_Félix_Musnier> <http://dbpedia.org/ontology/battle> ?v2 . },"```sparql
SELECT ?administration ?warLocation ?deathPlace WHERE {
  # Administration of Forza Italia (2013)
  <http://dbpedia.org/resource/Forza_Italia_(2013)> <http://dbpedia.org/ontology/administration> ?administration .

  # Location of the war involving Louis François Félix Musnier
  ?musnierBattle <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
  <http://dbpedia.org/resource/Louis_François_Félix_Musnier> <http://dbpedia.org/ontology/battle> ?musnierBattle .
  ?musnierBattle <http://dbpedia.org/ontology/location> ?warLocation .

  # Death place of the author of The Twelve Abbots of Challant
  <http://dbpedia.org/resource/The_Twelve_Abbots_of_Challant> <http://dbpedia.org/property/author> ?author .
  ?author <http://dbpedia.org/ontology/deathPlace> ?deathPlace .
}
```",5,6,6,2,3,2,3,28,0,0,1,0,0.0,0
92,28,test,"Give me the band member of the reference, that is an artist, to Nevermore and band of Joseph Michael and associated musical artist of Jim Sheppard.","SELECT ?result WHERE { ?v1 <http://xmlns.com/foaf/0.1/name> ""Nevermore""@en . ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Joseph_Michael> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . <http://dbpedia.org/resource/Jim_Sheppard> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
SELECT ?bandMember WHERE {
  ?bandMember <http://dbpedia.org/ontology/member> ?nevermore .
  ?nevermore <http://www.w3.org/2000/01/rdf-schema#label> ""Nevermore""@en .

  ?bandMember <http://dbpedia.org/ontology/member> ?josephMichaelBand .
  ?josephMichaelBand <http://www.w3.org/2000/01/rdf-schema#label> ?josephMichaelLabel .
  FILTER(CONTAINS(LCASE(?josephMichaelLabel), ""joseph michael""))

  ?bandMember <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Jim_Sheppard> .
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
488,54,test,"Give me the death place of the father, that is a politician, of the father, that is an office holder, of Matsudaira Tadamasa and administration of Emperor Go-Yōzei and birth place of the commander in Boshin War.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Matsudaira_Tadamasa> <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Boshin_War> <http://dbpedia.org/ontology/commander> ?v3 . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/father> ?v5 . ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Emperor_Go-Yōzei> . },"```sparql
SELECT ?deathPlace ?birthPlace WHERE {
  # Step 1: Find Matsudaira Tadamasa's father who is an office holder
  ?officeHolder dbpedia-owl:child <http://dbpedia.org/resource/Matsudaira_Tadamasa> .
  ?officeHolder a dbo:OfficeHolder .

  # Step 2: Find the father of this office holder who is a politician
  ?politician dbpedia-owl:child ?officeHolder .
  ?politician a dbo:Politician .

  # Step 3: Get the death place of this politician
  ?politician dbpedia-owl:deathPlace ?deathPlace .

  # Step 4: Identify the commander in the Boshin War
  <http://dbpedia.org/resource/Boshin_War> dbo:commander ?commander .

  # Step 5: Get the birthplace of this commander
  ?commander dbpedia-owl:birthPlace ?birthPlace .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
391,50,test,"Give me the actor of the claim to fame, that is a work, of the spouse of Sherry Hormann and actor of the movie, that is a movie and a work and a television show, with Roz Ryan.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Roz_Ryan> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v3 <http://dbpedia.org/property/starring> ?result . ?v4 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Sherry_Hormann> <http://dbpedia.org/ontology/spouse> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v0 <http://dbpedia.org/ontology/knownFor> ?v4 . },"```sparql
# Step 1: Get Sherry Hormann's spouse
SELECT ?spouse WHERE {
    <http://dbpedia.org/resource/Sherry_Hormann> <http://dbpedia.org/ontology/spouse> ?spouse .
}

# Step 2: Find the claim to fame (work) of Sherry Hormann's spouse
SELECT ?work WHERE {
    ?spouse <http://dbpedia.org/property/claimToFame> ?work .
    FILTER(?spouse = ?sherrySpouse)
}

# Step 3: Identify actors in that work
SELECT DISTINCT ?actor WHERE {
    ?work <http://dbpedia.org/ontology/actor> ?actor .
    FILTER(?work = ?fameWork)
}

# Step 4: Retrieve movies involving Roz Ryan, classified as a movie, work, and television show
SELECT DISTINCT ?movie WHERE {
    ?movie <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Movie> .
    ?movie <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work> .
    ?movie <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow> .
    ?movie <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Roz_Ryan> .
}

# Step 5: Find common actors between the work and the movie
SELECT DISTINCT ?commonActor WHERE {
    # Actors in the spouse's claim to fame
    ?work <http://dbpedia.org/ontology/actor> ?commonActor .
    FILTER(?work = ?fameWork)
    
    # Actors in the Roz Ryan movie
    ?movie <http://dbpedia.org/ontology/starring> ?commonActor .
    FILTER(?movie = ?rozMovie)
}
```",5,9,6,3,2,3,3,71,0,0,1,0,0.0,0
54,50,test,"Give me the parent of the child of the parent of Thado Minsaw of Prome and predecessor of the child, that is an office holder and a royalty, of Thihapate of Mohnyin.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/successor> ?v3 . ?v4 <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Thihapate_of_Mohnyin> . ?v4 <http://dbpedia.org/property/father> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> . },"```sparql
SELECT ?result WHERE {
  # Step 1: Find Thado Minsaw of Prome's parent
  ?thadoMinsaw dbpedia-owl:parent ?parentThadoMinsaw .
  
  # Step 2: The child of that parent is Thado Minsaw himself
  ?childOfParent dbpedia-owl:parent ?parentThadoMinsaw .
  FILTER(?childOfParent = <http://dbpedia.org/resource/Thado_Minsaw_of_Prome>)

  # Step 3: Find the predecessor of Thado Minsaw (himself)
  ?predecessor dbpedia-owl:successor ?thadoMinsaw .

  # Step 4: Identify Thihapate of Mohnyin's child
  ?thihapateChild dbpedia-owl:parent <http://dbpedia.org/resource/Thihapate_of_Mohnyin> .
  
  # Step 5: Find the parent of that child
  ?parentOfChild dbpedia-owl:child ?thihapateChild .

  # Ensure all entities are office holders and royalty
  ?predecessor a dbpedia-owl:OfficeHolder, dbpedia-owl:Royalty .
  ?result ?p ?o .
  
  FILTER(?result = ?predecessor)
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
251,22,test,"Give me the administration of the ruling party, that is a political party and an organisation, in Sicily and location of the war, that is a military conflict, of Louis François Félix Musnier.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Sicily> <http://dbpedia.org/property/leaderParty> ?v3 . ?v2 <http://dbpedia.org/ontology/place> ?result . <http://dbpedia.org/resource/Louis_François_Félix_Musnier> <http://dbpedia.org/ontology/battle> ?v2 . ?result <http://dbpedia.org/property/leaderParty> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. },"```sparql
SELECT ?administration WHERE {
  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>.
  <http://dbpedia.org/resource/Louis_François_Félix_Musnier> <http://dbpedia.org/ontology/battle> ?war.
  ?war <http://dbpedia.org/property/location> ?location.

  ?party <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>.
  ?party <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>.
  ?party <http://dbpedia.org/property/location> ?location.
  ?party <http://dbpedia.org/ontology/rulingParty> ?rulingParty.

  ?rulingParty <http://dbpedia.org/ontology/administration> ?administration.
}
```",4,7,5,2,2,2,3,28,0,0,1,0,0.0,0
328,65,test,"Give me the awardee of the award of Bruce Fraser, 1st Baron Fraser of North Cape and leader of the office, that is a government agency, of Joseph Stalin and commander in the force of the person decedent at Budapest.","SELECT ?result WHERE { ?v6 <http://dbpedia.org/ontology/commander> ?result . ?v6 <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Budapest> . <http://dbpedia.org/resource/Joseph_Stalin> <http://dbpedia.org/property/office> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v3 <http://dbpedia.org/ontology/leader> ?result . ?result <http://dbpedia.org/property/awards> ?v4 . <http://dbpedia.org/resource/Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape> <http://dbpedia.org/property/awards> ?v4 . }","```sparql
SELECT ?awardee WHERE {
  # Find the award given by Bruce Fraser
  ?award <http://dbpedia.org/ontology/givenBy> <http://dbpedia.org/resource/Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape> .
  
  # Find the awardee of that award
  ?award <http://purl.org/dc/terms/creator> ?awardee .

  # Identify the leader of a government agency under Joseph Stalin
  ?agency <http://dbpedia.org/ontology/head> ?leader .
  ?agency <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency> .
  ?stalin <http://dbpedia.org/property/office> ?agency .
  ?stalin <http://dbpedia.org/resource/Joseph_Stalin> .

  # Find the commander in a force related to someone who died in Budapest
  ?commander <http://dbpedia.org/ontology/commander> ?force .
  ?person <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Budapest> .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person> .
  ?force <http://dbpedia.org/property/personDecedent> ?person .

  # Link the awardee to the leader and commander
  FILTER(?awardee = ?leader && ?awardee = ?commander)
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
251,23,test,"Give me the location of the war, that is a military conflict, of Louis François Félix Musnier and death place of the author of The Twelve Abbots of Challant.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Louis_François_Félix_Musnier> <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/The_Twelve_Abbots_of_Challant> <http://dbpedia.org/property/author> ?v1 . ?v2 <http://dbpedia.org/ontology/place> ?result . },"```sparql
# Find the war related to Louis François Félix Musnier
SELECT ?war WHERE {
  <http://dbpedia.org/resource/Louis_François_Félix_Musnier> <http://dbpedia.org/ontology/battle> ?battle .
  ?battle <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
  BIND(?battle AS ?war)
}

UNION

# Find the death place of the author of ""The Twelve Abbots of Challant""
SELECT ?deathPlace WHERE {
  ?author dbo:book <http://dbpedia.org/resource/The_Twelve_Abbots_of_Challant> .
  ?author dbo:deathPlace ?deathPlace .
}

# Get the location for both results
SELECT DISTINCT ?location WHERE {
  VALUES ?entity { ?war ?deathPlace }
  
  ?entity <http://www.w3.org/2000/01/rdf-schema#seeAlso> ?locationResource .
  ?locationResource <http://dbpedia.org/ontology/location> ?location .
}
```",4,5,5,2,2,2,3,28,0,0,2,0,0.0,0
528,66,test,Give me the war of the military force of Battle of Pisagua and force of the person born as the birth name of Narciso Campero and war of the commander in Battle of La Rinconada de Ate.,SELECT ?result WHERE { <http://dbpedia.org/resource/Battle_of_La_Rinconada_de_Ate> <http://dbpedia.org/ontology/commander> ?v6 . ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/property/birthName> ?v1 . ?v6 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/commander> ?v2 . ?v3 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Pisagua> . <http://dbpedia.org/resource/Narciso_Campero> <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
SELECT DISTINCT ?war WHERE {
  # Battle of Pisagua
  OPTIONAL {
    <http://dbpedia.org/resource/Battle_of_Pisagua> <http://dbpedia.org/ontology/militaryForce> ?force1 .
    ?force1 <http://dbpedia.org/ontology/war> ?war .
  }

  # Narciso Campero's birth name and military force
  OPTIONAL {
    <http://dbpedia.org/resource/Narciso_Campero> <http://dbpedia.org/property/birthName> ?birthName .
    ?person <http://www.w3.org/2000/01/rdf-schema#label> ?birthName .
    ?person <http://dbpedia.org/ontology/militaryForce> ?force2 .
    ?force2 <http://dbpedia.org/ontology/war> ?war .
  }

  # Battle of La Rinconada de Ate
  OPTIONAL {
    <http://dbpedia.org/resource/Battle_of_La_Rinconada_de_Ate> <http://dbpedia.org/ontology/commander> ?commander .
    ?commander <http://dbpedia.org/ontology/war> ?war .
  }
}
```",7,7,8,3,3,3,3,71,0,0,2,0,0.0,0
547,66,test,Give me the resting place of the awardee of the award of Gerald Graham and resting place of the child of James Burton (property developer) and resting place of the actor of Enemy at the Door.,SELECT ?result WHERE { <http://dbpedia.org/resource/James_Burton_(property_developer)> <http://dbpedia.org/ontology/child> ?v3 . <http://dbpedia.org/resource/Enemy_at_the_Door> <http://dbpedia.org/property/starring> ?v6 . ?v2 <http://dbpedia.org/property/awards> ?v1 . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . ?v6 <http://dbpedia.org/ontology/restingPlace> ?result . ?v3 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Gerald_Graham> <http://dbpedia.org/property/awards> ?v1 . },"```sparql
SELECT ?restingPlace WHERE {
  # Resting place of the awardee associated with Gerald Graham
  ?awardee <http://dbpedia.org/ontology/award> ?award .
  ?award <http://dbpedia.org/property/recipient> ?awardee .
  ?award <http://dbpedia.org/ontology/recipient> <http://dbpedia.org/resource/Gerald_Graham> .
  ?awardee <http://dbpedia.org/ontology/burialPlace> ?restingPlace .

  UNION

  # Resting place of the child of James Burton (property developer)
  ?child <http://www.w3.org/ns/prov#hadParent> <http://dbpedia.org/resource/James_Burton_(property_developer)> .
  ?child <http://dbpedia.org/ontology/burialPlace> ?restingPlace .

  UNION

  # Resting place of the actor in ""Enemy at the Door""
  ?film <http://dbpedia.org/ontology/starring> ?actor .
  ?film <http://dbpedia.org/resource/Enemy_at_the_Door> .
  ?actor <http://dbpedia.org/ontology/burialPlace> ?restingPlace
}
```",7,7,8,3,3,3,3,71,0,0,1,0,0.0,0
184,68,test,"Give me the parent of the native of the landmark at elevation, that is a settlement, of 96.0 and parent of the child of Archduke Joseph Francis of Austria and child of the child of the parent, that is a royalty, of Archduke Ladislaus Philipp of Austria.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/birthPlace> ?v5 . ?v5 <http://dbpedia.org/ontology/elevation> ""96.0""^^<http://www.w3.org/2001/XMLSchema#double> . ?result <http://dbpedia.org/ontology/child> ?v3 . ?result <http://dbpedia.org/ontology/child> ?v4 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Francis_of_Austria> . <http://dbpedia.org/resource/Archduke_Ladislaus_Philipp_of_Austria> <http://dbpedia.org/ontology/parent> ?v0 . ?v7 <http://dbpedia.org/property/father> ?v0 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/property/father> ?v7 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
SELECT ?finalParent WHERE {
  # Step 1: Find the landmark at elevation 96.0 that is a settlement
  ?landmark <http://dbpedia.org/ontology/elevation> ""96.0""^^<http://www.w3.org/2001/XMLSchema#float> .
  ?landmark <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement> .

  # Step 2: Find the native of this landmark
  ?native <http://dbpedia.org/property/nativeOf> ?landmark .
  
  # Step 3: Determine the parent of this native
  ?native <http://dbpedia.org/ontology/father> ?parent1 .

  # Step 4: Identify Archduke Joseph Francis of Austria's child
  ?child2 <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Archduke_Joseph_Francis_of_Austria> .
  
  # Step 5: Find the parent of this child
  ?child2 <http://dbpedia.org/ontology/mother> ?parent2 .

  # Step 6: Identify Archduke Ladislaus Philipp of Austria's royalty parent
  ?royaltyParent <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Archduke_Ladislaus_Philipp_of_Austria> .
  ?royaltyParent <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .

  # Step 7: Determine the child of this royalty parent
  ?child3 <http://dbpedia.org/ontology/father> ?royaltyParent .
  
  # Step 8: Find the parent of this child
  ?child3 <http://dbpedia.org/ontology/mother> ?finalParent .
}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
767,47,test,"Give me the alma mater of the administration of the reference to George Kilbon Nash and entity in the administration, that is a settlement, of Green.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/state> ?v2 . ?v2 <http://dbpedia.org/property/leaderParty> ""Green""@en . ?v4 <http://dbpedia.org/property/governor> ?v0 . ?v0 <http://xmlns.com/foaf/0.1/name> ""George Kilbon Nash""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v4 <http://dbpedia.org/ontology/almaMater> ?result . }","```sparql
SELECT ?almaMater WHERE {
  # Step 1: Find the administration related to George Kilbon Nash
  ?administration <http://dbpedia.org/ontology/administration> <http://dbpedia.org/resource/George_Kilbon_Nash> .
  
  # Step 2: Identify the settlement in that administration associated with ""Green""
  ?settlement <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement> ;
              <http://dbpedia.org/property/entityInAdministration> ?administration .
  
  # Assuming there's a property or way to link ""Green"" with the settlement
  ?settlement <http://dbpedia.org/ontology/name> ?name .
  FILTER(CONTAINS(LCASE(?name), ""green""))
  
  # Step 3: Retrieve the alma mater of this administration
  ?administration <http://dbpedia.org/property/almaMater> ?almaMater .
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
92,58,test,"Give me the band of the person born as the birth name of Joseph Michael and associated musical artist of the person born, that is an artist, as Jim Sheppard and band member of Nevermore.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Nevermore> . ?v5 <http://dbpedia.org/property/birthName> ""Jim Sheppard""@en . ?result <http://dbpedia.org/ontology/bandMember> ?v2 . <http://dbpedia.org/resource/Joseph_Michael> <http://dbpedia.org/property/birthName> ?v1 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
# Query to find the band of Joseph Michael
SELECT ?band WHERE {
  ?person <http://dbpedia.org/ontology/birthName> ""Joseph Michael"" .
  ?person <http://dbpedia.org/ontology/memberOf> ?band .
}

UNION

# Query to find the associated musical artist of Jim Sheppard and confirm he is a member of Nevermore
SELECT ?associatedArtist WHERE {
  ?person <http://dbpedia.org/ontology/birthName> ""Jim Sheppard"" .
  ?person <http://dbpedia.org/ontology/memberOf> <http://dbpedia.org/resource/Nevermore_(band)> .
  ?person <http://dbpedia.org/ontology/associatedMusicalArtist> ?associatedArtist .
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
959,22,test,Give me the member of University of Tsukuba and manager of the team of Takashi Sekizuka.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/University_of_Tsukuba> . ?v0 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Takashi_Sekizuka> . ?v0 <http://dbpedia.org/ontology/manager> ?result . },"```sparql
# Find all individuals who are members of the University of Tsukuba
SELECT ?member WHERE {
  ?member <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/University_of_Tsukuba> .
}

# Find all teams managed by Takashi Sekizuka and their managers
SELECT ?team ?manager WHERE {
  ?team <http://dbpedia.org/ontology/team> ?manager .
  ?manager <http://dbpedia.org/property/name> ""Takashi Sekizuka"" .
}

# Combine the results to find common entities
SELECT DISTINCT ?commonEntity WHERE {
  VALUES ?member { ?member1 }
  VALUES ?manager { ?manager1 }

  # Find members of University of Tsukuba
  ?member <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/University_of_Tsukuba> .

  # Find managers of teams managed by Takashi Sekizuka
  ?team <http://dbpedia.org/ontology/team> ?manager .
  ?manager <http://dbpedia.org/property/name> ""Takashi Sekizuka"" .

  # Check if the member is also a manager
  FILTER (?member = ?manager)
}
```",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
617,52,test,"Give me the parent of Nysa (wife of Pharnaces I of Pontus) and spouse of the child of Antiochus III the Great and child of the child, that is a royalty, of the successor, that is a royalty, of Antiochus II Theos.",SELECT ?result WHERE { <http://dbpedia.org/resource/Antiochus_III_the_Great> <http://dbpedia.org/ontology/child> ?v5 . ?v5 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/father> ?v2 . <http://dbpedia.org/resource/Antiochus_II_Theos> <http://dbpedia.org/ontology/successor> ?v3 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Nysa_(wife_of_Pharnaces_I_of_Pontus)> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/father> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
SELECT ?parentOfNysa ?spouseOfRoyalDescendant WHERE {
  # Step 1: Identify Nysa's parent
  <http://dbpedia.org/resource/Nysa_(wife_of_Pharaces_I_of_Pontus)> <http://dbpedia.org/ontology/father> ?father .
  <http://dbpedia.org/resource/Nysa_(wife_of_Pharaces_I_of_Pontus)> <http://dbpedia.org/ontology/mother> ?mother .
  BIND(CONCAT(""Parent of Nysa: "", STR(?father), "" or "", STR(?mother)) AS ?parentOfNysa)

  # Step 2: Find the child of Antiochus III the Great
  <http://dbpedia.org/resource/Antiochus_III_the_Great> <http://dbpedia.org/ontology/spouse> ?spouseAntiochus3 .
  ?childAntiochus3 <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Antiochus_III_the_Great> ;
                   <http://dbpedia.org/ontology/mother> ?spouseAntiochus3 .

  # Step 3: Find the spouse of this child
  ?childAntiochus3 <http://dbpedia.org/ontology/spouse> ?spouseChildAntiochus3 .

  # Step 4: Identify their child who is royalty
  ?royalDescendant <http://dbpedia.org/ontology/father> ?childAntiochus3 ;
                   <http://dbpedia.org/ontology/mother> ?spouseChildAntiochus3 ;
                   <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .

  # Step 5: Determine the successor of this royal child
  ?successor <http://dbpedia.org/ontology/predecessor> ?royalDescendant ;
             <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .

  # Step 6: Find the child of this successor related to Antiochus II Theos
  ?childSuccessor <http://dbpedia.org/ontology/father> ?successor ;
                  <http://dbpedia.org/ontology/mother> ?spouseSuccessor .
  
  # Step 7: Identify the spouse of this child
  ?childSuccessor <http://dbpedia.org/ontology/spouse> ?spouseOfRoyalDescendant .

}
```",6,8,7,3,3,3,3,71,0,0,2,0,0.0,0
92,52,test,"Give me the band member of the reference, that is an artist, to the name of Nevermore (2006 film) and associated musical artist of the person born, that is an artist, as Jim Sheppard and band of Joseph Michael.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Joseph_Michael> . ?v5 <http://dbpedia.org/property/birthName> ""Jim Sheppard""@en . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://xmlns.com/foaf/0.1/name> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Nevermore_(2006_film)> <http://xmlns.com/foaf/0.1/name> ?v3 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . }","```sparql
SELECT ?bandMember WHERE {
  # Step 1: Find the reference (artist) associated with ""Nevermore"" (2006 film)
  ?film rdf:type dbo:Film ;
        rdfs:label ""Nevermore""@en .
  
  ?reference dbo:associatedMusicalArtist ?artist ;
             dbo:referenceTo ?film .

  # Step 2: Find the associated musical artist of a person born as Jim Sheppard
  ?person foaf:name ""Jim Sheppard"" ;
          rdf:type dbo:Person ;
          dbo:birthName ""Jim Sheppard"" .
  
  ?associatedArtist dbo:associatedMusicalArtist ?person .

  # Step 3: Determine the band of Joseph Michael
  ?joseph foaf:name ""Joseph Michael"" ;
          rdf:type dbo:Person .
  
  ?band dbo:bandMember ?joseph .

  # Find the common artist who is a band member and fits all criteria
  ?artist rdf:type dbo:Artist ;
          dbo:bandMember ?bandMember .

  FILTER(?reference = ?associatedArtist)
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
747,51,test,Give me the band of the person born as the persona of Shèna and band of the writer of Apollo (Hardwell song).,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Apollo_(Hardwell_song)> <http://dbpedia.org/property/writer> ?v4 . <http://dbpedia.org/resource/Shèna> <http://xmlns.com/foaf/0.1/givenName> ?v1 . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
# Query for the band of the person born as the persona of Shèna
SELECT ?band1 WHERE {
  ?person <http://dbpedia.org/ontology/birthName> ""Shèna"" .
  ?person <http://dbpedia.org/property/memberOf> ?band1 .
}

UNION

# Query for the band of the writer of Apollo (Hardwell song)
SELECT ?band2 WHERE {
  ?song <http://purl.org/dc/terms/creator> ?writer .
  ?song <http://dbpedia.org/ontology/title> ""Apollo"" .
  ?song <http://dbpedia.org/property/artist> <http://dbpedia.org/resource/Hardwell> .
  ?writer <http://dbpedia.org/property/memberOf> ?band2 .
}
```",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
9,53,test,"Give me the figure known as the nickname of Queen's University Belfast and alma mater of Allen Hill (scientist) and alma mater of the mayor, that is a politician, of the entity, that is an organisation, in Belfast.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/leader> ?v2 . <http://dbpedia.org/resource/Allen_Hill_(scientist)> <http://dbpedia.org/ontology/almaMater> ?result . ?v3 <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Belfast> . ?v2 <http://dbpedia.org/ontology/almaMater> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Queen's_University_Belfast> <http://dbpedia.org/property/nickname> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/property/nickname> ?v1 . },"```sparql
SELECT ?university WHERE {
  ?university <http://dbpedia.org/ontology/nickname> ?nickname .
  ?university <http://dbpedia.org/property/almaMater> <http://dbpedia.org/resource/Allen_Hill_(scientist)> .
  ?mayor <http://dbpedia.org/ontology/politicianForParty> ?party ;
         <http://dbpedia.org/ontology/mayorForPlace> <http://dbpedia.org/resource/Belfast> ;
         <http://dbpedia.org/property/almaMater> ?university .
  ?organization <http://www.w3.org/2000/01/rdf-schema#label> ""Belfast""@en ;
                 <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Belfast> ;
                 <http://dbpedia.org/ontology/type> ?type .
  FILTER(?type = <http://dbpedia.org/class/yago/Organisation4320032>)
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
701,63,test,Give me the parent of the child of the spouse of Amun-her-khepeshef and parent of the child of Ramesses II and spouse of the father of Merneptah.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?result <http://dbpedia.org/ontology/child> ?v6 . ?v6 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ramesses_II> . ?v4 <http://dbpedia.org/ontology/child> ?v3 . <http://dbpedia.org/resource/Amun-her-khepeshef> <http://dbpedia.org/ontology/spouse> ?v4 . ?v3 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Merneptah> <http://dbpedia.org/property/father> ?v2 . },"```sparql
SELECT DISTINCT ?commonEntity WHERE {
  # Step 1: Amun-her-khepeshef's spouse
  ?amunHerKhepeshef dbo:spouse ?spouseAmun.
  
  # Step 2: Child of Amun-her-khepeshef and their parent
  ?childAmun dbo:parent ?amunHerKhepeshef .
  ?childAmun dbo:parent ?spouseAmun .

  # Step 3: Ramesses II's child and their parent
  ?ramessesII dbo:child ?childRamesses.
  ?childRamesses dbo:parent ?ramessesII .
  ?childRamesses dbo:parent ?spouseRamesses.

  # Step 4: Merneptah's father
  ?merneptah dbo:father ?fatherMerneptah .

  # Step 5: Spouse of Merneptah's father
  ?fatherMerneptah dbo:spouse ?spouseFatherMerneptah .

  # Find the common entity among these relationships
  VALUES (?amunHerKhepeshef) { <http://dbpedia.org/resource/Amun-her-khepeshef> }
  VALUES (?ramessesII) { <http://dbpedia.org/resource/Ramses_II> }
  VALUES (?merneptah) { <http://dbpedia.org/resource/Merenptah> }

  FILTER(?spouseAmun = ?commonEntity || ?spouseRamesses = ?commonEntity || ?spouseFatherMerneptah = ?commonEntity)
}
```",7,7,8,3,3,3,3,71,0,0,1,0,0.0,0
378,58,test,"Give me the war of the commander in Peninsular War and war of Carl Pontus Gahn and claim to fame of the commander in the war, that is a military conflict and a societal event and an event, of Thomas Trigge.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Peninsular_War> <http://dbpedia.org/ontology/commander> ?v5 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Thomas_Trigge> <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v5 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/ontology/knownFor> ?result . },"```sparql
SELECT ?peninsularCommander ?claimToFame ?carlWar ?triggeEvent WHERE {
  # Step 1: Find the commander of the Peninsular War
  <http://dbpedia.org/resource/Peninsular_War> <http://dbpedia.org/ontology/commander> ?peninsularCommander .

  # Step 2: Find the claim to fame of this commander
  ?peninsularCommander <http://dbpedia.org/property/knownFor> ?claimToFame .

  # Step 3: Find the war associated with Carl Pontus Gahn as a commander
  <http://dbpedia.org/resource/C_P_Gahn> <http://dbpedia.org/ontology/commander> ?carlWar .

  # Step 4: Identify the military conflict and societal event that is also an event, related to Thomas Trigge
  ?triggeEvent <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
  ?triggeEvent <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent> .
  ?triggeEvent <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event> .
  <http://dbpedia.org/resource/Thomas_Trigge> <http://dbpedia.org/ontology/commander> ?v1 .
  ?v1 <http://dbpedia.org/ontology/battle> ?triggeEvent .
}
```",6,9,7,3,3,3,3,71,0,0,2,0,0.0,0
427,68,test,"Give me the party of the father of the alumnus of Massachusetts Institute of Technology and reference to the name of the party of Michele Pinto and party of the person born, that is an office holder and a politician, as Romano Antonio Prodi.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/birthName> ""Romano Antonio Prodi""@en . ?v5 <http://xmlns.com/foaf/0.1/name> ?v4 . ?result <http://xmlns.com/foaf/0.1/name> ?v4 . <http://dbpedia.org/resource/Michele_Pinto> <http://dbpedia.org/ontology/party> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/property/father> ?v7 . ?v7 <http://dbpedia.org/ontology/party> ?result . ?v0 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Massachusetts_Institute_of_Technology> . ?v3 <http://dbpedia.org/ontology/party> ?result . }","```sparql
# Step 1: Identify an alumnus of MIT
SELECT ?alumnus WHERE {
    ?alumnus dbo:almaMater dbr:Massachusetts_Institute_of_Technology .
}

# Step 2: Find the father of that alumnus
SELECT ?father WHERE {
    ?alumnus foaf:parent ?father .
}

# Step 3: Determine the party of the father
SELECT ?party WHERE {
    ?father dbo:party ?party .
}

# Step 4: Reference the party of Michele Pinto
SELECT ?micheleParty WHERE {
    dbr:Michele_Pinto dbo:party ?micheleParty .
}

# Step 5 & 6: Identify Romano Antonio Prodi and his birthplace
SELECT ?birthPlace WHERE {
    dbr:Romano_Antonio_Prodi dbo:officeHolder true ;
                               dbo:politician true ;
                               dbo:birthPlace ?birthPlace .
}

# Step 7: Determine the party of the person born at that place
SELECT ?partyAtBirthPlace WHERE {
    ?person dbo:birthPlace ?birthPlace ;
            dbo:party ?partyAtBirthPlace .
}

# Final query to combine all references to parties
SELECT ?fatherParty, ?micheleParty, ?partyAtBirthPlace WHERE {
    # Assuming we have identified specific individuals for the father and birthplace party
    ?father dbo:party ?fatherParty .
    dbr:Michele_Pinto dbo:party ?micheleParty .
    ?person dbo:birthPlace ?birthPlace ;
            dbo:party ?partyAtBirthPlace .
}
```",8,10,9,3,3,3,3,71,0,0,2,0,0.0,0
391,61,test,"Give me the actor of the movie, that is a movie and a work and a television show, with the professional in  and actor of the claim to fame, that is a work, of the spouse of Sherry Hormann.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v3 <http://dbpedia.org/property/starring> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://dbpedia.org/property/starring> ?v1 . <http://dbpedia.org/resource/Sherry_Hormann> <http://dbpedia.org/ontology/spouse> ?v0 . ?v1 <http://dbpedia.org/property/occupation> """"@en . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v5 <http://dbpedia.org/ontology/starring> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v0 <http://dbpedia.org/ontology/knownFor> ?v5 . }","```sparql
SELECT ?actor WHERE {
  # Step 1: Identify Sherry Hormann's spouse
  <http://dbpedia.org/resource/Sherry_Hormann> <http://xmlns.com/foaf/0.1/spouse> ?spouse .

  # Step 2: Find the claim to fame of Sherry Hormann's spouse, which is a work
  ?spouse <http://dbpedia.org/ontology/knownFor> ?claimToFame .
  ?claimToFame <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work> .

  # Step 3: Determine the actor who has a professional role in both the identified work and another entity
  ?actor <http://dbpedia.org/ontology/profession> ?profession .
  ?actor <http://dbpedia.org/property/actor> ?claimToFame .
  
  # The other entity is a movie, a work, and a television show
  ?movie <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Movie> .
  ?movie <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work> .
  ?movie <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow> .

  # Step 4: Find the actor associated with this movie
  ?actor <http://dbpedia.org/property/actor> ?movie .
}
```",6,10,7,3,2,3,3,71,0,0,11,0,0.0,0
528,57,test,Give me the war of the commander in the work of --01-09 and war of Irene Morales and force of the person born as Narciso Campero Leyes.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/commander> ?v5 . ?v0 <http://dbpedia.org/property/author> ""--01-09""^^<http://www.w3.org/2001/XMLSchema#gMonthDay> . ?v5 <http://dbpedia.org/ontology/battle> ?result . ?v3 <http://dbpedia.org/property/birthName> ""Narciso Campero Leyes""@en . ?result <http://dbpedia.org/ontology/commander> ?v3 . <http://dbpedia.org/resource/Irene_Morales> <http://dbpedia.org/ontology/battle> ?result . }","```sparql
SELECT DISTINCT ?war1 ?war2 ?force WHERE {
  # Part 1: War associated with a commander in an event on ""--01-09""
  ?event <http://dbpedia.org/ontology/date> ?date .
  FILTER (STRSTARTS(STR(?date), ""-01-09""))
  ?event <http://dbpedia.org/ontology/commander> ?commander .
  ?commander <http://dbpedia.org/ontology/battle> ?war1 .

  # Part 2: War involving Irene Morales
  OPTIONAL {
    ?irene <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person> .
    ?irene <http://dbpedia.org/resource/Irene_Morales> .
    ?irene <http://dbpedia.org/ontology/battle> ?war2 .
  }

  # Part 3: Force associated with Narciso Campero Leyes
  OPTIONAL {
    ?narciso <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person> .
    ?narciso <http://dbpedia.org/resource/Narciso_Campero_Leyes> .
    ?narciso <http://dbpedia.org/property/militaryForce> ?force .
  }
}
```",6,6,7,3,3,3,3,71,0,0,2,0,0.0,0
48,19,test,"Give me the band of the writer of Emotion (Carly Rae Jepsen album) and band of the actor, that is a musical artist, of the show with Stacey Dash.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Stacey_Dash> . <http://dbpedia.org/resource/Emotion_(Carly_Rae_Jepsen_album)> <http://dbpedia.org/property/writer> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/property/starring> ?v4 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
# Part 1: Band of the writer of ""Emotion"" by Carly Rae Jepsen
SELECT ?writerBand WHERE {
    ?album rdf:type dbo:Album .
    ?album dbo:title ""Emotion""@en .
    ?album dbo:artist <http://dbpedia.org/resource/Carly_Rae_Jepsen> .
    ?album dbo:composer ?writer .
    ?writer dbo:musicGroup ?writerBand .
}

UNION

# Part 2: Band of the actor, who is a musical artist, in a show with Stacey Dash
SELECT ?actorBand WHERE {
    ?show dbo:starring <http://dbpedia.org/resource/Stacey_Dash> ;
          dbo:starring ?actor .
    ?actor rdf:type dbo:MusicalArtist .
    ?actor dbo:musicGroup ?actorBand .
}
```",5,6,6,3,2,3,2,20,0,0,1,0,0.0,0
391,65,test,"Give me the actor of the movie, that is a movie and a work and a television show, with Roz Ryan and actor of the claim to fame, that is a work, of the spouse of Sherry Hormann and native of the figure known as Hub City.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/starring> ?result . ?v6 <http://dbpedia.org/ontology/starring> ?result . ?v3 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Roz_Ryan> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?result <http://dbpedia.org/ontology/birthPlace> ?v4 . ?v4 <http://dbpedia.org/property/nickname> ""Hub City""@en . ?v0 <http://dbpedia.org/ontology/knownFor> ?v6 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. <http://dbpedia.org/resource/Sherry_Hormann> <http://dbpedia.org/ontology/spouse> ?v0 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. }","```sparql
# Step 1: Find the movie that is also a work and television show with Roz Ryan
SELECT ?movie WHERE {
    ?movie <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>.
    ?movie <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>.
    ?movie <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>.
    ?movie dbp:starring <http://dbpedia.org/resource/Roz_Ryan>.
}

# Step 2: Find the actor of this movie
SELECT ?actor WHERE {
    ?movie dbp:starring ?actor.
    # Bind ?movie from step 1
}

# Step 3: Identify the claim to fame of Sherry Hormann's spouse
SELECT ?work WHERE {
    <http://dbpedia.org/resource/Sherry_Hormann> foaf:marrigePartner ?spouse.
    ?spouse dbo:famousFor ?work.
}

# Step 4: Find the actor of this work
SELECT ?actor WHERE {
    ?work dbp:starring ?actor.
    # Bind ?work from step 3
}

# Step 5: Identify the native city of a figure known as Hub City
SELECT ?city WHERE {
    ?figure dbo:nativePlace ?city.
    ?figure rdfs:label ""Hub City""@en.
}

# Combine results to find an actor who fits all criteria
SELECT DISTINCT ?actor WHERE {
    # Bind ?actor from step 2 and step 4, ensuring it matches the criteria
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
617,66,test,"Give me the child of the child, that is a royalty, of Seleucus II Callinicus and parent of the child of the commander in Battle of Panium and spouse of the child of Antiochus III the Great.",SELECT ?result WHERE { <http://dbpedia.org/resource/Battle_of_Panium> <http://dbpedia.org/ontology/commander> ?v1 . ?v6 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Antiochus_III_the_Great> <http://dbpedia.org/ontology/child> ?v6 . ?v1 <http://dbpedia.org/ontology/child> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/property/father> ?v3 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seleucus_II_Callinicus> . },"```sparql
SELECT ?result WHERE {
  # Step 1: Find the child of Seleucus II Callinicus
  ?child1 dbo:parent <http://dbpedia.org/resource/Seleucus_II_Callinicus> .
  
  # Step 2: From that child, find their own child who is royalty
  ?grandChild dbo:parent ?child1 ;
              a dbo:Royalty .

  # Step 3: Identify the commander in the Battle of Panium and find their child
  <http://dbpedia.org/resource/Battle_of_Panium> dbo:commander ?commander .
  ?child2 dbo:parent ?commander .

  # Step 4: Find Antiochus III the Great's child and determine their spouse
  ?antiochusChild dbo:parent <http://dbpedia.org/resource/Antiochus_III_the_Great> .
  ?spouse dbo:marrigePartner ?antiochusChild .

  # Step 5: Ensure the identified royalty is also a parent to the child from step 3 and spouse to the person from step 4
  ?grandChild dbo:parent ?child2 ;
              dbo:marrigePartner ?spouse .
  
  BIND(?grandChild AS ?result)
}
```",7,8,8,3,3,3,3,71,0,0,2,0,0.0,0
251,21,test,Give me the death place of the author of The Twelve Abbots of Challant and administration of Forza Italia (2013) and location of Battle of Marengo.,SELECT ?result WHERE { <http://dbpedia.org/resource/Battle_of_Marengo> <http://dbpedia.org/ontology/place> ?result . ?result <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Forza_Italia_(2013)> . ?v0 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/The_Twelve_Abbots_of_Challant> <http://dbpedia.org/property/author> ?v0 . },"```sparql
SELECT ?deathPlace WHERE {
  ?author dbo:work <http://dbpedia.org/resource/The_Twelve_Abbots_of_Challant> .
  ?author dbo:deathPlace ?deathPlace .

  OPTIONAL { 
    ?forzaItalia dbo:location ?deathPlace .
    FILTER EXISTS { ?forzaItalia rdf:type <http://dbpedia.org/ontology/Administration> . }
    FILTER (YEAR(?forzaItalia) = 2013)
  }

  OPTIONAL {
    ?battle dbo:location ?deathPlace .
    FILTER (?battle = <http://dbpedia.org/resource/Battle_of_Marengo>)
  }

  FILTER EXISTS { ?author dbo:work <http://dbpedia.org/resource/The_Twelve_Abbots_of_Challant> }
  FILTER EXISTS { ?forzaItalia rdf:type <http://dbpedia.org/ontology/Administration> . FILTER (YEAR(?forzaItalia) = 2013) }
  FILTER (?battle = <http://dbpedia.org/resource/Battle_of_Marengo>)
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
747,54,test,"Give me the band of the writer of the work, that is a song, of Amba Shepherd and person born on the birth date of Pavlo Khudzik and band of Shèna.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/writer> ?v5 . ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Shèna> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Amba_Shepherd> . ?result <http://dbpedia.org/ontology/birthDate> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. <http://dbpedia.org/resource/Pavlo_Khudzik> <http://dbpedia.org/ontology/birthDate> ?v3 . },"```sparql
# Step 1: Find the song written by Amba Shepherd and its writer
SELECT ?song ?writer WHERE {
    ?song <http://dbpedia.org/ontology/writer> <http://dbpedia.org/resource/Amba_Shepherd> .
    ?song <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song> .
    ?song <http://dbpedia.org/ontology/writer> ?writer .
}

# Step 2: Find the birthdate of Pavlo Khudzik
SELECT ?birthdate WHERE {
    <http://dbpedia.org/resource/Pavlo_Khudzik> <http://dbpedia.org/property/birthDate> ?birthdate .
}

# Step 3: Find a person born on the same date as Pavlo Khudzik
SELECT DISTINCT ?person WHERE {
    ?person <http://dbpedia.org/property/birthDate> ?birthdate .
    FILTER (?birthdate = ?pavloBirthdate)
}

# Step 4: Find the band associated with Shèna
SELECT ?band WHERE {
    <http://dbpedia.org/resource/Shèna> <http://dbpedia.org/ontology/memberOf> ?band .
}

# Final step: Combine to find a common band
SELECT DISTINCT ?commonBand WHERE {
    # Assuming we have variables from previous steps: ?writer, ?person, ?shenaBand
    ?writer <http://dbpedia.org/ontology/memberOf> ?commonBand .
    ?person <http://dbpedia.org/ontology/memberOf> ?commonBand .
    ?shenaBand = ?commonBand .
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
404,53,test,"Give me the child of the father of Ernest Augustus, Duke of Brunswick and spouse of the person born, that is a royalty, as the birth name of Princess Victoria Louise of Prussia and parent of Prince Ernest Augustus of Hanover (born 1914).","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/property/father> ?v1 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/parent> ?v1 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Prince_Ernest_Augustus_of_Hanover_(born_1914)> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/property/birthName> ?v3 . }","```sparql
SELECT ?child WHERE {
    ?father <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick>.
    ?spouse <http://dbpedia.org/property/spouse> ?father.
    ?person <http://www.w3.org/2000/01/rdf-schema#label> ""Princess Victoria Louise of Prussia""@en .
    ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>.
    ?parent <http://dbpedia.org/property/birthName> ?person.
    ?parent <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Prince_Ernest_Augustus_of_Hanover_(born_1914)> .
    ?father <http://dbpedia.org/ontology/father> ?child.
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
404,55,test,"Give me the parent of the child, that is a royalty, of Ernest Augustus, Duke of Brunswick and spouse of the person born, that is a royalty, as Princess Victoria Louise of Prussia and child of the father of Ernest Augustus, Duke of Brunswick.","SELECT ?result WHERE { <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/property/father> ?v2 . ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?v3 <http://dbpedia.org/property/birthName> ""Princess Victoria Louise of Prussia""@en . ?result <http://dbpedia.org/ontology/child> ?v5 . <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/ontology/child> ?v5 . ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
SELECT ?parent WHERE {
  ?princess a dbo:Royalty ;
            foaf:name ""Princess Victoria Louise of Prussia""@en .
  
  ?spouse a dbo:Royalty ;
          dbo:spouse ?princess ;
          dbo:childOf ?duke .

  ?duke foaf:name ""Ernest Augustus, Duke of Brunswick""@en .

  ?child a dbo:Royalty ;
         dbo:parent ?spouse .

  ?child dbo:parent ?parent .
}
```",6,8,7,2,3,3,3,71,0,0,1,0,0.0,0
994,61,test,"Give me the band member of the person born, that is a musical artist, as the persona of Don Dokken and associated musical artist of the band member, that is a band and a group and an organisation, of the band, that is an organisation, of Fredrik Thordendal.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Don_Dokken> <http://xmlns.com/foaf/0.1/givenName> ?v3 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v1 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Fredrik_Thordendal> . ?v0 <http://dbpedia.org/property/birthName> ?v3 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"SELECT ?bandMember WHERE {
    ?band <http://dbpedia.org/ontology/member> ?member .
    ?band a <http://dbpedia.org/ontology/Band>, <http://dbpedia.org/ontology/Organisation>, <http://dbpedia.org/ontology/Group> .
    ?member <http://dbpedia.org/property/bandMember> ?associatedArtist .
    ?associatedArtist a <http://dbpedia.org/ontology/MusicalArtist> .
    ?persona a <http://dbpedia.org/ontology/MusicalArtist> ;
             rdfs:label ""Don Dokken""@en .
    ?person a <http://dbpedia.org/ontology/MusicalArtist> ;
            <http://dbpedia.org/property/bornAs> ?persona .
    FILTER(?associatedArtist = ?person)

    ?bandMember <http://dbpedia.org/ontology/member> ?member .
}
LIMIT 10",6,11,7,3,2,3,3,71,0,0,1,0,0.0,0
182,26,test,Give me the war of Jagath Dias and entity in the nationality of Tamara Kunanayakam and war of the author of 2019 Sri Lanka Easter bombings.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> ?v1 . <http://dbpedia.org/resource/Jagath_Dias> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/2019_Sri_Lanka_Easter_bombings> <http://dbpedia.org/property/author> ?v2 . <http://dbpedia.org/resource/Tamara_Kunanayakam> <http://dbpedia.org/ontology/nationality> ?v1 . },"```sparql
SELECT DISTINCT ?warJagathDias ?entityTamaraNationality ?warEasterBombingsAuthor WHERE {
  # War associated with Jagath Dias
  <http://dbpedia.org/resource/Jagath_Dias> <http://dbpedia.org/ontology/battle> ?battle .
  ?battle <http://dbpedia.org/ontology/conflict> ?warJagathDias .

  # Entity related to the nationality of Tamara Kunanayakam
  <http://dbpedia.org/resource/Tamara_Kunanayakam> <http://www.w3.org/2000/01/rdf-schema#label> ""Tamara Kunanayakam""@en .
  ?tamara <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person> ;
          <http://dbpedia.org/property/nationality> ?nationality .
  ?entityTamaraNationality <http://www.w3.org/2000/01/rdf-schema#label> ?label .
  FILTER(CONTAINS(LCASE(?label), LCASE(STR(?nationality)))) .

  # War associated with the author of the 2019 Sri Lanka Easter bombings
  <http://dbpedia.org/resource/2019_Sri_Lanka_Easter_bombings> <http://dbpedia.org/ontology/author> ?author .
  ?authorBattle <http://dbpedia.org/ontology/battle> ?battleEaster ;
                <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Battle> .
  ?battleEaster <http://dbpedia.org/ontology/conflict> ?warEasterBombingsAuthor .
}
```",5,5,6,2,3,2,3,28,0,0,1,0,0.0,0
404,62,test,"Give me the child of Ernest Augustus, Crown Prince of Hanover and parent of the child, that is a royalty, of the parent, that is a royalty, of Prince George William of Hanover and spouse of the person born, that is a royalty, as the birth name of Princess Victoria Louise of Prussia.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v6 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Prince_George_William_of_Hanover> <http://dbpedia.org/ontology/parent> ?v0 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ernest_Augustus,_Crown_Prince_of_Hanover> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/birthName> ?v4 . ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/ontology/child> ?v6 . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/property/birthName> ?v4 . }","```sparql
SELECT ?child WHERE {
  # Step 1: Find child of Ernest Augustus, Crown Prince of Hanover
  ?child <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/Ernest_Augustus,_Crown_Prince_of_Hanover>.

  # Step 2: Ensure the parent of this child is royalty
  ?parent <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/RoyalFamilyMember>.
  ?child <http://dbpedia.org/ontology/birthParent> ?parent.

  # Step 3: Find the child of this royal parent
  ?royalChild <http://dbpedia.org/ontology/birthParent> ?parent.
  
  # Step 4: Identify spouse of Princess Victoria Louise of Prussia
  ?spouse <http://dbpedia.org/property/spouse> <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia>.
  ?prince <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/RoyalFamilyMember>.
  ?prince <http://dbpedia.org/property/birthName> ""Prince George William of Hanover"".
  
  # Step 5: Ensure the royal child is also a spouse
  ?royalChild <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/RoyalFamilyMember>.
  ?royalChild <http://dbpedia.org/property/spouse> ?spouse.
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
421,25,test,Give me the person born as Edin Dervišhalidović and native of the birthplace of Samir Bekrić and band member of the awardee of [[#Awards and nominations.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Samir_Bekrić> <http://dbpedia.org/ontology/birthPlace> ?v4 . ?v2 <http://dbpedia.org/property/awards> ""[[#Awards and nominations""@en . ?result <http://dbpedia.org/property/birthName> ""Edin Dervišhalidović""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?result <http://dbpedia.org/ontology/birthPlace> ?v4 . }","```sparql
# Step 1: Find Edin Dervišhalidović's DBpedia resource
SELECT ?edin WHERE {
    ?edin <http://dbpedia.org/ontology/birthName> ""Edin Dervišhalidović"" .
}

# Step 2: Get the birthplace of Samir Bekrić
SELECT ?birthPlace WHERE {
    <http://dbpedia.org/resource/Samir_Bekrić> <http://dbpedia.org/ontology/placeOfBirth> ?birthPlace .
}

# Step 3: Find people native to that birthplace
SELECT DISTINCT ?person WHERE {
    ?person <http://dbpedia.org/ontology/nativeLanguage> ?lang .
    ?person <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
    FILTER(?birthPlace = ?birthPlaceSamir)
}

# Step 4: Identify a band member from an awardee
SELECT DISTINCT ?bandMember WHERE {
    ?award <http://dbpedia.org/property/awardee> ?entity .
    ?entity <http://dbpedia.org/ontology/member> ?bandMember .
}
```

Note: This query assumes the existence of certain properties and relationships in DBpedia. Adjustments may be needed based on actual data availability.",5,5,6,2,3,2,3,28,0,0,1,0,0.0,0
378,56,test,"Give me the claim to fame of the commander in the war, that is a military conflict and a societal event and an event, of Thomas Trigge and war of Joaquín Blake and war of the person born as Carl Pontus Gahn.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Joaquín_Blake> <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/property/birthName> ""Carl Pontus Gahn""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/knownFor> ?result . ?v0 <http://dbpedia.org/ontology/commander> ?v1 . <http://dbpedia.org/resource/Thomas_Trigge> <http://dbpedia.org/ontology/battle> ?v0 . }","```sparql
SELECT ?commander ?claimToFame WHERE {
  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>.
  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>.
  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>.

  ?war <http://dbpedia.org/property/commander> ?commander.
  
  ?commander <http://dbpedia.org/ontology/knownFor> ?claimToFame.

  ?war <http://dbpedia.org/property/personInvolved> <http://dbpedia.org/resource/Thomas_Trigge>.
  ?war <http://dbpedia.org/property/personInvolved> <http://dbpedia.org/resource/Joaqu%C3%ADn_Blake>.

  ?person <http://www.w3.org/2000/01/rdf-schema#label> ""Carl Pontus Gahn""@en.
  ?person <http://dbpedia.org/ontology/birthName> ""Carl Pontus Gahn"".
  
  ?war <http://dbpedia.org/property/personInvolved> ?person.
}
```",6,9,7,3,3,3,3,71,0,0,2,0,0.0,0
994,52,test,"Give me the associated musical artist of the associated musical artist of the reference to Watchtower and associated musical artist of the band member, that is a band and a group and an organisation, of Meshuggah and band member of Don Dokken.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Meshuggah> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Don_Dokken> . ?v3 <http://xmlns.com/foaf/0.1/name> ""Watchtower""@en . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . }","```sparql
# Step 1: Get associated musical artists of Watchtower
SELECT ?watchtowerArtist WHERE {
    <http://dbpedia.org/resource/Watchtower_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?watchtowerArtist .
}

# Step 2: For each artist found in step 1, get their associated musical artists
SELECT DISTINCT ?secondLevelArtist WHERE {
    ?watchtowerArtist <http://dbpedia.org/ontology/associatedMusicalArtist> ?secondLevelArtist .
    { SELECT ?watchtowerArtist WHERE {
        <http://dbpedia.org/resource/Watchtower_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?watchtowerArtist .
      }
    }
}

# Step 3: Get band members of Meshuggah
SELECT DISTINCT ?meshuggahMember WHERE {
    <http://dbpedia.org/resource/Meshuggah> <http://dbpedia.org/ontology/member> ?meshuggahMember .
    FILTER(STRSTARTS(STR(?meshuggahMember), ""http://dbpedia.org/resource/"") && 
           EXISTS { ?meshuggahMember <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band> } &&
           EXISTS { ?meshuggahMember <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation> } &&
           EXISTS { ?meshuggahMember <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalGroup> })
}

# Step 4: Find the band member who is also a member of Don Dokken
SELECT DISTINCT ?commonMember WHERE {
    ?meshuggahMember <http://dbpedia.org/ontology/member> ?commonMember .
    ?donDokkenBand <http://dbpedia.org/ontology/member> ?commonMember .
    FILTER(STRSTARTS(STR(?donDokkenBand), ""http://dbpedia.org/resource/"") && 
           EXISTS { ?donDokkenBand <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band> })
    FILTER(STRSTARTS(STR(?meshuggahMember), ""http://dbpedia.org/resource/"") && 
           EXISTS { ?meshuggahMember <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band> } &&
           EXISTS { ?meshuggahMember <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation> } &&
           EXISTS { ?meshuggahMember <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalGroup> })
}

# Step 5: Get the associated musical artist of this common band member
SELECT DISTINCT ?finalArtist WHERE {
    ?commonMember <http://dbpedia.org/ontology/associatedMusicalArtist> ?finalArtist .
    { SELECT DISTINCT ?commonMember WHERE {
        ?meshuggahMember <http://dbpedia.org/ontology/member> ?commonMember .
        ?donDokkenBand <http://dbpedia.org/ontology/member> ?commonMember .
        FILTER(STRSTARTS(STR(?donDokkenBand), ""http://dbpedia.org/resource/"") && 
               EXISTS { ?donDokkenBand <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band> })
        FILTER(STRSTARTS(STR(?meshuggahMember), ""http://dbpedia.org/resource/"") && 
               EXISTS { ?meshuggahMember <http://www.w3.org/1999/02/22-rdf-syntax-ns#",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
747,42,test,Give me the person born on the birth date of Pavlo Khudzik and band of Amba Shepherd and band of the person born as Tracey Elizabeth McSween.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Pavlo_Khudzik> <http://dbpedia.org/ontology/birthDate> ?v2 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/birthDate> ?v2 . ?v1 <http://dbpedia.org/property/birthName> ""Tracey Elizabeth McSween""@en . <http://dbpedia.org/resource/Amba_Shepherd> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
SELECT ?person ?band1 ?band2 WHERE {
  # Step 1: Retrieve the birth date of Pavlo Khudzik
  VALUES ?pavloBirthDate { 
    SELECT ?birthDate WHERE { <http://dbpedia.org/resource/Pavlo_Khudzik> <http://dbpedia.org/ontology/birthDate> ?birthDate . }
  }

  # Step 2: Find all persons born on that same birth date
  ?person <http://dbpedia.org/ontology/birthDate> ?pavloBirthDate .

  # Step 3: Get the band for Amba Shepherd
  VALUES ?band1 { 
    SELECT ?band WHERE { <http://dbpedia.org/resource/Amba_Shepherd> <http://dbpedia.org/property/memberOf> ?band . }
  }

  # Step 4: Get the band for Tracey Elizabeth McSween
  VALUES ?band2 { 
    SELECT ?band WHERE { <http://dbpedia.org/resource/Tracey_Elizabeth_McSween> <http://dbpedia.org/property/memberOf> ?band . }
  }

}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
281,20,test,"Give me the entity in the birth place, that is a country, of Bob Heffron and war of Beauchamp Seymour, 1st Baron Alcester.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/place> ?v2 . <http://dbpedia.org/resource/Bob_Heffron> <http://dbpedia.org/ontology/birthPlace> ?v2 . <http://dbpedia.org/resource/Beauchamp_Seymour,_1st_Baron_Alcester> <http://dbpedia.org/ontology/battle> ?result . }","```sparql
# Find the birthplace country of Bob Heffron
SELECT ?birthPlaceCountry WHERE {
  <http://dbpedia.org/resource/Bob_Heffron> <http://dbpedia.org/ontology/birthPlace> ?birthPlace.
  ?birthPlace <http://www.w3.org/2000/01/rdf-schema#seeAlso> ?countryResource.
  ?countryResource <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>.
  BIND(?countryResource AS ?birthPlaceCountry)
}

# Find the war associated with Beauchamp Seymour, 1st Baron Alcester
SELECT ?war WHERE {
  <http://dbpedia.org/resource/Beauchamp_Seymour,_1st_Baron_Alcester> <http://dbpedia.org/ontology/battle> ?battle.
  ?battle <http://www.w3.org/2000/01/rdf-schema#seeAlso> ?warResource.
  ?warResource <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>.
  BIND(?warResource AS ?war)
}

# Find entities in the birthplace country of Bob Heffron and involved in the war related to Beauchamp Seymour
SELECT DISTINCT ?entity WHERE {
  VALUES (?birthPlaceCountry) { (<INSERT_BIRTH_PLACE_COUNTRY_URI_HERE>) }
  VALUES (?war) { (<INSERT_WAR_URI_HERE>) }

  ?entity <http://www.w3.org/2000/01/rdf-schema#seeAlso> ?countryResource.
  ?countryResource = ?birthPlaceCountry.

  OPTIONAL {
    ?entity <http://dbpedia.org/ontology/battle> ?battle.
    ?battle <http://www.w3.org/2000/01/rdf-schema#seeAlso> ?warResource.
    ?warResource = ?war.
  }
}
```

Note: Replace `<INSERT_BIRTH_PLACE_COUNTRY_URI_HERE>` and `<INSERT_WAR_URI_HERE>` with the actual URIs obtained from the first two queries.",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
747,43,test,"Give me the person born on 1985-04-29 and band of Shèna and band of the writer of the work, that is a song, of Amba Shepherd.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthDate> ""1985-04-29""^^<http://www.w3.org/2001/XMLSchema#date> . ?v0 <http://dbpedia.org/property/writer> ?v4 . ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Amba_Shepherd> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. <http://dbpedia.org/resource/Shèna> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
# Step 1: Identify the person born on 1985-04-29 who is Shèna
SELECT ?shena WHERE {
    ?shena <http://dbpedia.org/ontology/birthDate> ""1985-04-29""^^<http://www.w3.org/2001/XMLSchema#date> .
    ?shena <http://dbpedia.org/ontology/wikiPageWikiLink> <http://dbpedia.org/resource/Shèna> .
}

# Step 2: Find the band associated with Shèna
SELECT ?band WHERE {
    ?shena <http://dbpedia.org/ontology/memberOf> ?band .
    FILTER(?shena IN {<result_of_step_1>})
}

# Step 3: Determine the writer of the song by Amba Shepherd
SELECT ?writer WHERE {
    ?song <http://dbpedia.org/property/writer> ?writer .
    ?song <http://dbpedia.org/ontology/wikiPageWikiLink> <http://dbpedia.org/resource/Amba_Shepherd> .
}

# Step 4: Find the band associated with this writer
SELECT ?band WHERE {
    ?writer <http://dbpedia.org/ontology/memberOf> ?band .
    FILTER(?writer IN {<result_of_step_3>})
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
959,27,test,"Give me the manager of the team of the manager, that is a sports manager, of 1998 Kashima Antlers season.",SELECT ?result WHERE { <http://dbpedia.org/resource/1998_Kashima_Antlers_season> <http://dbpedia.org/ontology/manager> ?v1 . ?v0 <http://dbpedia.org/ontology/manager> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v0 <http://dbpedia.org/ontology/manager> ?result . },"```sparql
SELECT ?finalManager WHERE {
  # Step 1: Find the manager for the 1998 Kashima Antlers season
  <http://dbpedia.org/resource/1998_Kashima_Antlers_season> <http://dbpedia.org/ontology/manager> ?seasonManager .
  
  # Ensure this is a sports manager
  ?seasonManager <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager> .

  # Step 2: Find the team managed by this manager
  ?seasonManager <http://dbpedia.org/ontology/team> ?team .
  
  # Step 3: Find the manager of that team
  ?team <http://dbpedia.org/ontology/manager> ?finalManager .
}
```",3,4,4,3,1,3,3,71,0,3,10,0.0,0.0,0
488,29,test,"Give me the death place of the father, that is a politician, of Yūki Hideyasu and administration of Emperor Go-Yōzei and birth place of Enomoto Takeaki.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/ontology/deathPlace> ?result . ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Emperor_Go-Yōzei> . <http://dbpedia.org/resource/Yūki_Hideyasu> <http://dbpedia.org/property/father> ?v3 . <http://dbpedia.org/resource/Enomoto_Takeaki> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?deathPlace WHERE {
  # Find the father of Yūki Hideyasu who is a politician
  ?father rdf:type dbo:Politician ;
          foaf:parentOf <http://dbpedia.org/resource/Y%C5%ABki_Hideyasu> .

  # Get the administration under which Emperor Go-Yōzei served
  ?administration dbo:emperor <http://dbpedia.org/resource/Emperor_Go-Y%C5%8Dzei> .

  # Find the birthplace of Enomoto Takeaki
  <http://dbpedia.org/resource/Enomoto_Takeaki> dbo:birthPlace ?birthPlace .

  # Get the death place of the father
  ?father dbo:deathPlace ?deathPlace .

  # Ensure the death place matches with both the administration and birthplace
  FILTER (?deathPlace = ?administration && ?deathPlace = ?birthPlace)
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
92,68,test,"Give me the band of the person born as Joseph Michael Furney and associated musical artist of the person born, that is an artist, as the actor of Return to Nuke 'Em High Volume 1 and band member of the reference, that is an artist, to the name of Nevermore (2006 film).","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?v7 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Nevermore_(2006_film)> <http://xmlns.com/foaf/0.1/name> ?v5 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v7 <http://dbpedia.org/property/birthName> ?v0 . <http://dbpedia.org/resource/Return_to_Nuke_'Em_High_Volume_1> <http://dbpedia.org/property/starring> ?v0 . ?result <http://dbpedia.org/ontology/bandMember> ?v3 . ?v4 <http://xmlns.com/foaf/0.1/name> ?v5 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v3 <http://dbpedia.org/property/birthName> ""Joseph Michael Furney""@en . }","```sparql
# Step 1: Identify Joseph Michael Furney and his associated band
SELECT ?person WHERE {
    ?person <http://dbpedia.org/ontology/birthName> ""Joseph Michael Furney"" .
}

SELECT ?band WHERE {
    ?person <http://dbpedia.org/property/memberOf> ?band .
    FILTER(?person = ?furneyPerson)
}

# Step 2: Find the musical artist associated with Joseph Michael Furney
SELECT ?artist WHERE {
    ?person <http://dbpedia.org/ontology/associatedMusicalArtist> ?artist .
    FILTER(?person = ?furneyPerson)
}

# Step 3: Determine the actor of ""Return to Nuke 'Em High Volume 1""
SELECT ?actor WHERE {
    ?movie <http://dbpedia.org/ontology/starring> ?actor .
    ?movie <http://dbpedia.org/property/title> ""Return to Nuke 'Em High Volume 1"" .
}

# Step 4: Find the band member reference related to Nevermore (2006 film)
SELECT ?bandMember WHERE {
    ?reference <http://dbpedia.org/ontology/reference> ?film .
    ?film <http://dbpedia.org/property/title> ""Nevermore (2006 film)"" .
    ?reference <http://dbpedia.org/ontology/memberOf> ?bandMember .
}

# Final step: Combine these elements to find the band
SELECT DISTINCT ?finalBand WHERE {
    # Assuming all previous steps are linked correctly, we need to combine them
    ?person <http://dbpedia.org/property/memberOf> ?finalBand .
    FILTER(?person = ?furneyPerson && ?artist = ?associatedArtist && ?actor = ?nukeActor && ?bandMember = ?nevermoreBandMember)
}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
184,42,test,Give me the parent of the native of Budapest and child of Archduke Joseph August of Austria and parent of the child of Archduke Joseph Francis of Austria.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v2 . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Francis_of_Austria> . ?v2 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Budapest> . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_August_of_Austria> . ?result <http://dbpedia.org/ontology/child> ?v1 . },"```sparql
SELECT ?parent WHERE {
  ?person <http://dbpedia.org/ontology/nativePlace> <http://dbpedia.org/resource/Budapest> .
  ?person <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Archduke_Joseph_August_of_Austria> .
  ?child <http://dbpedia.org/ontology/father> ?person .
  ?grandchild <http://dbpedia.org/ontology/father> ?child .
  ?grandchild <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Archduke_Joseph_Francis_of_Austria> .
  ?person <http://www.w3.org/2000/01/rdf-schema#parent> ?parent .
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
328,38,test,"Give me the commander in the force of Ferenc Szálasi and leader of the office, that is a government agency, of Joseph Stalin.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/leader> ?result . <http://dbpedia.org/resource/Joseph_Stalin> <http://dbpedia.org/property/office> ?v2 . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Ferenc_Szálasi> . },"```sparql
SELECT ?person WHERE {
  ?force <http://dbpedia.org/ontology/commander> ?person .
  ?office <http://dbpedia.org/ontology/leader> ?person ;
          <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency> .
  
  ?force <http://dbpedia.org/property/associatedWith> <http://dbpedia.org/resource/Ferenc_Sz%C3%A1lasi> .
  ?office <http://dbpedia.org/property/underLeadershipOf> <http://dbpedia.org/resource/Joseph_Stalin> .
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
801,46,test,"Give me the producer of the work, that is a musical work and a song and a work, of 50 Cent and professional in the alter ego of the true self of The Shadow.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://dbpedia.org/ontology/producer> ?result . ?result <http://dbpedia.org/property/occupation> ?v1 . ?v2 <http://dbpedia.org/property/alterEgo> ?v1 . ?v2 <http://xmlns.com/foaf/0.1/givenName> ""The Shadow""@en . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v4 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/50_Cent> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. }","```sparql
SELECT ?producer WHERE {
    ?work <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>.
    ?work <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>.
    ?work <http://dbpedia.org/ontology/work> ?workType.
    <http://dbpedia.org/resource/50_Cent> <http://dbpedia.org/property/artist> ?work.
    OPTIONAL { ?work <http://dbpedia.org/ontology/producers> ?producer. }
    
    ?alterEgo <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AlterEgo>.
    ?alterEgo <http://dbpedia.org/property/name> ""The Shadow"".
    ?alterEgo <http://dbpedia.org/ontology/profession> ?profession.
    
    FILTER EXISTS { ?work ?p1 ?alterEgo }
}
```",5,8,6,3,2,3,3,71,0,0,27,0,0.0,0
232,58,test,"Give me the actor of the claim to fame, that is a film and a military conflict, of Sean Pertwee and child of Jon Pertwee and native of the residence, that is a settlement and British, of the native, that is a politician and an office holder, of France.",SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/France> . <http://dbpedia.org/resource/Sean_Pertwee> <http://dbpedia.org/ontology/knownFor> ?v5 . ?v5 <http://dbpedia.org/ontology/starring> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/property/residence> ?v2 . <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/ontology/child> ?result . },"```sparql
SELECT ?actor WHERE {
  # Step 1: Find Sean Pertwee's claim to fame that is both a film and a military conflict
  ?fame <http://dbpedia.org/ontology/knownFor> <http://dbpedia.org/resource/Sean_Pertwee> .
  ?fame <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film> .
  ?fame <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .

  # Step 2: Find the actor of that film/military conflict
  ?fame <http://dbpedia.org/ontology/starring> ?actor .

  # Step 3: Identify Jon Pertwee's child
  ?child <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Jon_Pertwee> .

  # Step 4: Determine the residence of Jon Pertwee's child that is both a settlement and British
  ?residence <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement> .
  ?residence <http://dbpedia.org/property/country> <http://dbpedia.org/resource/United_Kingdom> .
  ?child <http://dbpedia.org/property/residence> ?residence .

  # Step 5: Identify the native politician and office holder from France
  ?politician <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .
  ?politician <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder> .
  ?politician <http://dbpedia.org/property/nationality> <http://dbpedia.org/resource/France> .

  # Step 6: Determine the residence of this French native that is a settlement
  ?residence2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement> .
  ?politician <http://dbpedia.org/property/residence> ?residence2 .

  # Ensure the residence of Jon Pertwee's child matches the residence of the French politician
  FILTER (?residence = ?residence2)
}
```",6,12,7,3,3,3,3,71,0,0,1,0,0.0,0
827,17,test,"Give me the child of Charles Alexander, Grand Duke of Saxe-Weimar-Eisenach and father of the child, that is a royalty, of the spouse, that is a royalty, of Princess Pauline of Saxe-Weimar-Eisenach.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Princess_Pauline_of_Saxe-Weimar-Eisenach> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Charles_Alexander,_Grand_Duke_of_Saxe-Weimar-Eisenach> <http://dbpedia.org/ontology/child> ?result . ?v3 <http://dbpedia.org/property/father> ?result . }","```sparql
SELECT ?child WHERE {
  # Step 1: Find the spouse of Princess Pauline of Saxe-Weimar-Eisenach who is royalty
  ?spouse a dbo:Royalty ;
          dbo:spouse <http://dbpedia.org/resource/Princess_Pauline_of_Saxe-Weimar-Eisenach> .

  # Step 2: Find their child who is also royalty
  ?child a dbo:Royalty ;
         dbo:parent ?spouse ;
         dbo:parent ?father .

  # Step 3: Determine the father of that child
  ?father a dbo:Person .

  # Step 4: Find the children of Charles Alexander, Grand Duke of Saxe-Weimar-Eisenach who match this father
  ?child2 dbo:parent <http://dbpedia.org/resource/Charles_Alexander,_Grand_Duke_of_Saxe-Weimar-Eisenach> ;
         dbo:parent ?father .
}
```",4,6,5,3,2,3,2,20,0,0,1,0,0.0,0
659,59,test,"Give me the commander in the force of the native, that is an office holder, of Kingdom of Ireland and commander in the war, that is an event and a military conflict, of the figure known, that is a military unit and an organisation, as 'Polish Horse'.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/commander> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Kingdom_of_Ireland> . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v0 <http://dbpedia.org/ontology/battle> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v5 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/property/nickname> ""'Polish Horse'""@en . }","```sparql
SELECT ?commander WHERE {
  # Step 1: Find the native office holder of the Kingdom of Ireland
  ?officeHolder a dbo:OfficeHolder ;
                dbo:nativeCountry dbr:Kingdom_of_Ireland .

  # Step 2: Determine the commander in a war that is both an event and a military conflict involving this office holder
  ?war a dbo:MilitaryConflict, dbo:Event .
  ?officeHolder dbo:commanderIn ?war .

  # Step 3: Find the figure known as 'Polish Horse', which is both a military unit and an organization
  ?polishHorse a dbo:MilitaryUnit, dbo:Organization ;
               rdfs:label ""Polish Horse""@en .

  # Step 4: Identify the force associated with this figure
  ?force dbo:commanderIn ?war .
  ?force dbo:member ?polishHorse .

  # Step 5: Find the commander of this force
  ?force dbo:commander ?commander .
}
```",6,11,7,3,2,3,3,71,0,0,71,0,0.0,0
16,63,test,Give me the professional in the profession of Satomi Ishihara and spouse of the person born as the birth name of Ted McGinley and person born as the birth name of Gigi Rice.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v2 . ?result <http://dbpedia.org/property/occupation> ?v6 . <http://dbpedia.org/resource/Gigi_Rice> <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Satomi_Ishihara> <http://dbpedia.org/property/occupation> ?v6 . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/property/birthName> ?v4 . ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?v3 <http://dbpedia.org/property/birthName> ?v4 . },"```sparql
# Step 1: Find the profession of Satomi Ishihara
SELECT ?profession WHERE {
    <http://dbpedia.org/resource/Satomi_Ishihara> <http://purl.org/dc/terms/subject> ?profession .
}

# Step 2: Find the spouse of Ted McGinley using his birth name
SELECT ?spouse WHERE {
    ?person <http://www.w3.org/2000/01/rdf-schema#label> ""Ted McGinley""@en .
    ?person <http://dbpedia.org/ontology/birthName> ?birthName .
    ?marriage <http://dbpedia.org/property/spouse> ?spouse .
    ?marriage <http://dbpedia.org/property/husbandOrWife> ?person .
}

# Step 3: Find the spouse of Gigi Rice using her birth name
SELECT ?spouse WHERE {
    ?person <http://www.w3.org/2000/01/rdf-schema#label> ""Gigi Rice""@en .
    ?person <http://dbpedia.org/ontology/birthName> ?birthName .
    ?marriage <http://dbpedia.org/property/spouse> ?spouse .
    ?marriage <http://dbpedia.org/property/husbandOrWife> ?person .
}

# Step 4: Find the professional who matches the profession of Satomi Ishihara and is a spouse to both individuals
SELECT DISTINCT ?professional WHERE {
    # Get the profession from step 1
    ?profession purl:subject <http://dbpedia.org/resource/Satomi_Ishihara> .
    
    # Get the spouses from steps 2 and 3
    ?spouse1 <http://dbpedia.org/property/spouse> ?professional .
    ?marriage1 <http://dbpedia.org/property/husbandOrWife> ?person1 .
    ?person1 <http://www.w3.org/2000/01/rdf-schema#label> ""Ted McGinley""@en .
    ?person1 <http://dbpedia.org/ontology/birthName> ?birthName1 .

    ?spouse2 <http://dbpedia.org/property/spouse> ?professional .
    ?marriage2 <http://dbpedia.org/property/husbandOrWife> ?person2 .
    ?person2 <http://www.w3.org/2000/01/rdf-schema#label> ""Gigi Rice""@en .
    ?person2 <http://dbpedia.org/ontology/birthName> ?birthName2 .

    # Ensure the professional has the same profession as Satomi Ishihara
    ?professional purl:subject ?profession .
}
```",7,7,8,3,3,3,3,71,0,0,1,0,0.0,0
378,46,test,Give me the war of the person born as the birth name of Carl Pontus Gahn and war of the commander in Peninsular War.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Peninsular_War> <http://dbpedia.org/ontology/commander> ?v4 . <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/property/birthName> ?v2 . ?v4 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
# Query 1: Wars associated with Carl Pontus Gahn
SELECT ?war WHERE {
    ?person <http://dbpedia.org/ontology/birthName> ""Carl Pontus Gahn"" .
    ?person <http://dbpedia.org/ontology/knows> ?war .
}

UNION

# Query 2: Wars involving the commander in Peninsular War
SELECT ?war WHERE {
    <http://dbpedia.org/resource/Peninsular_War> <http://dbpedia.org/ontology/commander> ?commander .
    ?commander <http://dbpedia.org/ontology/battle> ?war .
}
```",5,5,6,3,2,3,3,71,0,0,2,0,0.0,0
356,20,test,"Give me the player in the successor of the predecessor, that is a sports team season and a soccer club season, of 2015 Sacramento Republic FC season and team of the native, that is a soccer player and a soccer manager, of the birth place, that is English and a settlement, of Gary Williams (footballer, born 1960).","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/manager> ?v5 . ?v2 <http://dbpedia.org/ontology/team> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v5 <http://dbpedia.org/ontology/birthPlace> ?v4 . ?v4 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v1 <http://dbpedia.org/ontology/successor> ?v2 . ?v1 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/2015_Sacramento_Republic_FC_season> . <http://dbpedia.org/resource/Gary_Williams_(footballer,_born_1960)> <http://dbpedia.org/ontology/birthPlace> ?v4 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. }","```sparql
# Step 1: Find the birthplace of Gary Williams that is an English settlement
SELECT ?birthPlace WHERE {
    wd:Q1234567 <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
    ?birthPlace <http://www.w3.org/2000/01/rdf-schema#label> ""English""@en .
    ?birthPlace <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement> .
}

# Step 2: Find the native team of Gary Williams
SELECT ?nativeTeam WHERE {
    wd:Q1234567 <http://dbpedia.org/property/nativePlace> ?nativeTeam .
    ?nativeTeam <http://www.w3.org/2000/01/rdf-schema#label> ""Soccer Player""@en .
    ?nativeTeam <http://www.w3.org/2000/01/rdf-schema#label> ""Soccer Manager""@en .
}

# Step 3: Find the team associated with the native place
SELECT ?team WHERE {
    ?nativePlace <http://dbpedia.org/ontology/team> ?team .
    FILTER(?nativePlace = ?birthPlace)
}

# Step 4: Find the predecessor of the 2015 Sacramento Republic FC season
SELECT ?predecessorSeason WHERE {
    wd:Q7890123 <http://dbpedia.org/property/predecessor> ?predecessorSeason .
    ?predecessorSeason <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason> .
}

# Step 5: Find the successor of the predecessor season
SELECT ?successorSeason WHERE {
    ?predecessorSeason <http://dbpedia.org/property/successor> ?successorSeason .
    ?successorSeason <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason> .
}

# Step 6: Find the player in the successor season
SELECT ?player WHERE {
    ?successorSeason <http://dbpedia.org/property/team> ?team .
    ?player <http://dbpedia.org/ontology/playerInTeam> ?team .
}
```",6,12,7,3,2,3,2,20,0,0,1,0,0.0,0
645,17,test,Give me the entity in United Kingdom and alma mater of the child of the parent of Adela Pankhurst.,SELECT ?result WHERE { <http://dbpedia.org/resource/Adela_Pankhurst> <http://dbpedia.org/ontology/parent> ?v0 . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . ?v0 <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
SELECT ?entity WHERE {
  # Step 1: Find Adela Pankhurst's parent
  <http://dbpedia.org/resource/Adela_Pankhurst> <http://www.w3.org/2000/01/rdf-schema#parent> ?parent .

  # Step 2: Find the child of that parent (which should be Adela)
  ?child <http://www.w3.org/2000/01/rdf-schema#parent> ?parent .
  
  # Step 3: Get the alma mater of Adela Pankhurst
  <http://dbpedia.org/resource/Adela_Pankhurst> <http://dbpedia.org/ontology/almaMater> ?almaMater .

  # Step 4: Find an entity in the United Kingdom related to this alma mater
  ?entity <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?type .
  ?entity <http://dbpedia.org/ontology/almaMater> ?almaMater .
  ?entity <http://dbpedia.org/property/country> <http://dbpedia.org/resource/United_Kingdom> .
}
```",4,4,5,3,2,3,2,20,0,0,1,0,0.0,0
696,17,test,Give me the landmark at elevation of the award of the commander in Battle of Chishui River and birth place of Tim Brennan.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/elevation> ?v3 . <http://dbpedia.org/resource/Tim_Brennan> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Battle_of_Chishui_River> <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://dbpedia.org/property/awards> ?v3 . },"```sparql
SELECT ?landmark WHERE {
  ?battle <http://dbpedia.org/ontology/commander> ?commander .
  ?award <http://dbpedia.org/property/recipient> ?commander .
  ?brennan <http://dbpedia.org/ontology/birthPlace> ?birthplace .
  
  FILTER(?battle = <http://dbpedia.org/resource/Battle_of_Chishui_River>)
  FILTER(?brennan = <http://dbpedia.org/resource/Tim_Brennan_(footballer)>)
  
  ?landmark <http://www.w3.org/2000/01/rdf-schema#label> ?awardLabel .
  ?landmark <http://dbpedia.org/ontology/birthPlace> ?birthplace .
  ?landmark <http://dbpedia.org/ontology/elevation> ?elevation .
  
  FILTER(?awardLabel = ?award)
  FILTER(STRSTARTS(LCASE(?landmark), ""http://dbpedia.org/resource/"") && 
         EXISTS { ?landmark <http://www.w3.org/2000/01/rdf-schema#label> ?label . FILTER(CONTAINS(LCASE(?label), ""landmark"")) } )
}
```",4,4,5,3,2,3,2,20,0,0,1,0,0.0,0
184,54,test,"Give me the parent of Archduchess Ilona of Austria and child of the child of the parent, that is a royalty, of Archduke Ladislaus Philipp of Austria and parent of the native of Budapest.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/property/father> ?v5 . ?v3 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Budapest> . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Ilona_of_Austria> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> ?v3 . <http://dbpedia.org/resource/Archduke_Ladislaus_Philipp_of_Austria> <http://dbpedia.org/ontology/parent> ?v0 . },"```sparql
SELECT ?person WHERE {
  # Step 1: Parent of Archduchess Ilona of Austria
  ?parent1 dbpedia-owl:child <http://dbpedia.org/resource/Archduchess_Ilona_of_Austria> .

  # Step 2: Child of the parent from step 1
  ?child1 dbpedia-owl:parent ?parent1 .

  # Step 3: Parent of this child (and check if royalty)
  ?person dbpedia-owl:child ?child1 .
  ?person a <http://dbpedia.org/ontology/Royalty> .

  # Step 4: Parent of Archduke Ladislaus Philipp of Austria
  ?parent2 dbpedia-owl:child <http://dbpedia.org/resource/Archduke_Ladislaus_Philipp_of_Austria> .

  # Step 5: Child of the parent from step 4
  ?child2 dbpedia-owl:parent ?parent2 .

  # Step 6: Parent of this child (and check if royalty)
  ?person2 dbpedia-owl:child ?child2 .
  ?person2 a <http://dbpedia.org/ontology/Royalty> .

  # Step 7: Native of Budapest
  ?native dbpedia-owl:birthPlace <http://dbpedia.org/resource/Budapest> .

  # Step 8: Parent of the native from step 7
  ?person3 dbpedia-owl:child ?native .

  # Step 9: Match all conditions
  FILTER (?person = ?person2 && ?person = ?person3)
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
767,63,test,"Give me the reference to the alter ego of Black Hood and alma mater of the administration of George K. Nash and entity in the administration, that is a settlement, of the writer of Where It's At (Dustin Lynch album).",SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v2 . <http://dbpedia.org/resource/Where_It's_At_(Dustin_Lynch_album)> <http://dbpedia.org/property/writer> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v6 <http://dbpedia.org/ontology/almaMater> ?result . ?v6 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/George_K._Nash> . ?v3 <http://dbpedia.org/property/leaderParty> ?v4 . <http://dbpedia.org/resource/Black_Hood> <http://dbpedia.org/property/alterEgo> ?v2 . ?result <http://dbpedia.org/ontology/state> ?v3 . },"```sparql
# Find the alter ego of Black Hood
SELECT ?alterEgo WHERE {
  ?blackHood <http://dbpedia.org/ontology/alsoKnownAs> ?alterEgo .
  ?blackHood rdfs:label ""Black Hood""@en .
}

# Find the alma mater of George K. Nash
SELECT ?almaMater WHERE {
  <http://dbpedia.org/resource/George_K._Nash> <http://dbpedia.org/ontology/almaMater> ?almaMater .
}

# Find the writer of ""Where It's At"" and an entity in their administration that is a settlement
SELECT ?entity WHERE {
  ?song <http://purl.org/dc/terms/creator> ?writer .
  ?song rdfs:label ""Where It's At""@en .
  ?writer <http://dbpedia.org/ontology/administration> ?administration .
  ?administration <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement> .
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
54,53,test,"Give me the parent of Thado Minsaw of Prome and child of the father of the child of Thinkhaya of Pagan and predecessor of the child, that is an office holder and a royalty, of Thihapate of Mohnyin.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Thihapate_of_Mohnyin> . ?result <http://dbpedia.org/ontology/successor> ?v1 . ?v3 <http://dbpedia.org/property/father> ?v2 . <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/ontology/child> ?result . },"```sparql
SELECT ?parent WHERE {
    # Step 1: Find Thinkhaya of Pagan's child
    ?thinkhayaChild dbpedia-owl:childOf <http://dbpedia.org/resource/Thinkhaya_of_Pagan> .
    
    # Step 2: Thinkhaya is the father, so we use him directly
    
    # Step 3: Find predecessor of Thinkhaya's child
    ?predecessor dbpedia-owl:predecessorOf ?thinkhayaChild .
    
    # Step 4: Identify Thihapate of Mohnyin and his child who is an office holder and royalty
    ?thihapateChild dbpedia-owl:childOf <http://dbpedia.org/resource/Thihapate_of_Mohnyin> ;
                    a dbo:OfficeHolder, dbo:Royalty .
    
    # Step 5: Find the parent of Thado Minsaw of Prome
    ?thadoMinsaw dbpedia-owl:childOf ?parent ;
                 rdfs:label ""Thado Minsaw of Prome""@en .
    
    # Step 6: Ensure this parent matches the predecessor found in step 3
    FILTER (?predecessor = ?parent)
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
161,58,test,"Give me the commander in the force, that is an event, of the figure known as El Director and military force of the force, that is a societal event and a military conflict, of Francisco Largo Caballero and military force of Rif War.","SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v5 . ?v2 <http://dbpedia.org/ontology/commander> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://xmlns.com/foaf/0.1/nick> ""El Director""@en . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Rif_War> . ?v5 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . }","```sparql
# Step 1: Get the military force associated with ""El Director""
SELECT ?elDirectorForce WHERE {
    <http://dbpedia.org/resource/El_Director> <http://dbpedia.org/ontology/militaryForce> ?elDirectorForce .
}

# Step 2: Find the commander of El Director's military force
SELECT ?commander WHERE {
    ?elDirectorForce <http://dbpedia.org/ontology/commander> ?commander .
}

# Step 3: Get Francisco Largo Caballero's military force in a societal event and military conflict
SELECT ?caballeroForce WHERE {
    <http://dbpedia.org/resource/Francisco_Largo_Caballero> <http://dbpedia.org/ontology/militaryForce> ?caballeroForce .
    ?caballeroForce <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>.
    ?caballeroForce <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>.
}

# Step 4: Get the Rif War's military force
SELECT ?rifWarForce WHERE {
    <http://dbpedia.org/resource/Rif_War> <http://dbpedia.org/ontology/militaryForce> ?rifWarForce .
}

# Step 5: Find common commanders between these forces
SELECT DISTINCT ?commonCommander WHERE {
    # Commanders of El Director's force
    ?elDirectorForce <http://dbpedia.org/ontology/commander> ?commander1 .
    
    # Commanders of Caballero's force
    ?caballeroForce <http://dbpedia.org/ontology/commander> ?commander2 .
    
    # Commanders of Rif War's force
    ?rifWarForce <http://dbpedia.org/ontology/commander> ?commander3 .

    FILTER (?commander1 = ?commander2 && ?commander2 = ?commander3)
    BIND(?commander1 AS ?commonCommander)
}
```",6,9,7,3,3,3,3,71,0,0,11,0,0.0,0
9,43,test,"Give me the alma mater of John Alderdice, Baron Alderdice and alma mater of the awardee of the reference, that is an award, to Royal Medals and figure known as QUB.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v4 <http://dbpedia.org/ontology/almaMater> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Royal Medals""@en . ?v4 <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/John_Alderdice,_Baron_Alderdice> <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://dbpedia.org/property/nickname> ""QUB""@en . }","```sparql
# Find the alma mater of John Alderdice, Baron Alderdice
SELECT ?almaMaterAlderdice WHERE {
  <http://dbpedia.org/resource/John_Alderdice,_Baron_Alderdice> <http://dbpedia.org/ontology/almaMater> ?almaMaterAlderdice .
}

# Find the alma mater of an awardee associated with Royal Medals and QUB
SELECT DISTINCT ?almaMaterAward WHERE {
  ?award <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award> .
  ?award <http://purl.org/dc/terms/references> <http://dbpedia.org/resource/Royal_Medals> .
  ?award <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award> .
  ?figure <http://purl.org/dc/terms/identifier> ""QUB"" .
  ?figure <http://dbpedia.org/property/awardee> ?award .
  ?awardAwardee <http://dbpedia.org/ontology/almaMater> ?almaMaterAward .
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
645,19,test,"Give me the entity in the residence, that is a country, of James Wilkes Maurice and alma mater of the child of the parent of Adela Pankhurst.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v4 <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://dbpedia.org/ontology/country> ?v2 . <http://dbpedia.org/resource/James_Wilkes_Maurice> <http://dbpedia.org/property/residence> ?v2 . <http://dbpedia.org/resource/Adela_Pankhurst> <http://dbpedia.org/ontology/parent> ?v0 . },"```sparql
SELECT ?entity WHERE {
  # Step 1: Find the residence (country) of James Wilkes Maurice
  <http://dbpedia.org/resource/James_Wilkes_Maurice> <http://dbpedia.org/property/residence> ?residence .
  ?residence <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country> .

  # Step 2: Find the alma mater of a child whose parent is Adela Pankhurst
  OPTIONAL {
    ?child <http://dbpedia.org/property/parent> <http://dbpedia.org/resource/Adela_Pankhurst> .
    ?child <http://dbpedia.org/ontology/almaMater> ?almaMater .
  }

  # Step 3: Find entities in both the residence country and alma mater
  ?entity <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?type .
  OPTIONAL { ?entity <http://dbpedia.org/property/location> ?residence . }
  OPTIONAL { ?entity <http://dbpedia.org/ontology/almaMater> ?almaMater . }

  FILTER(?residence != null && ?almaMater != null)
}
```",5,6,6,3,2,3,2,20,0,0,1,0,0.0,0
617,20,test,Give me the spouse of the child of Antiochus III the Great and child of Antiochus III the Great.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Antiochus_III_the_Great> <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Antiochus_III_the_Great> . },"```sparql
SELECT ?child ?spouse WHERE {
  <http://dbpedia.org/resource/Antiochus_III_the_Great> <http://dbpedia.org/ontology/child> ?child .
  ?child <http://dbpedia.org/property/spouse> ?spouse .
}
```",3,3,4,2,2,3,3,71,4,3,0,0.5714285714285714,1.0,0.7272727272727273
547,29,test,Give me the resting place of Alan Cunningham and resting place of the actor of Enemy at the Door and resting place of James Burton (Egyptologist).,SELECT ?result WHERE { <http://dbpedia.org/resource/Enemy_at_the_Door> <http://dbpedia.org/property/starring> ?v3 . ?v3 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/James_Burton_(Egyptologist)> <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Alan_Cunningham> <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
SELECT ?individual ?restingPlace WHERE {
  { 
    <http://dbpedia.org/resource/Alan_Cunningham> dbo:finalRestingPlace ?restingPlace .
    BIND(<http://dbpedia.org/resource/Alan_Cunningham> AS ?individual)
  }
  UNION
  {
    ?actor dbo:film <http://dbpedia.org/resource/Enemy_at_the_Door> ;
           dbo:finalRestingPlace ?restingPlace .
    BIND(?actor AS ?individual)
  }
  UNION
  {
    <http://dbpedia.org/resource/James_Burton_(Egyptologist)> dbo:finalRestingPlace ?restingPlace .
    BIND(<http://dbpedia.org/resource/James_Burton_(Egyptologist)> AS ?individual)
  }
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
994,50,test,"Give me the associated musical artist of the band member, that is a band and a group and an organisation, of the band, that is an organisation, of Fredrik Thordendal and band member of the person born, that is a musical artist, as Donald Maynard Dokken.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v0 <http://dbpedia.org/property/birthName> ""Donald Maynard Dokken""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Fredrik_Thordendal> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . }","```sparql
# Step 1: Identify Fredrik Thordendal's band
SELECT ?band WHERE {
    <http://dbpedia.org/resource/Fredrik_Thordendal> <http://dbpedia.org/ontology/memberOf> ?band .
    ?band <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band> .
    ?band <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation> .
    ?band <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group> .
}

# Step 2: Identify Donald Maynard Dokken's band
SELECT ?dokkenBand WHERE {
    <http://dbpedia.org/resource/Dokken> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
    ?person <http://dbpedia.org/property/birthName> ""Donald Maynard Dokken"" .
    ?person <http://dbpedia.org/ontology/memberOf> ?dokkenBand .
}

# Step 3: Find common band member
SELECT DISTINCT ?commonMember WHERE {
    # Member of Fredrik Thordendal's band
    ?member <http://dbpedia.org/ontology/memberOf> ?band .
    
    # Member of Dokken's band
    ?member <http://dbpedia.org/ontology/memberOf> ?dokkenBand .
}

# Step 4: Get associated musical artists for the common member
SELECT DISTINCT ?associatedArtist WHERE {
    ?commonMember <http://dbpedia.org/ontology/associatedMusicalArtist> ?associatedArtist .
}
```",5,10,6,3,2,3,3,71,0,0,1,0,0.0,0
488,20,test,"Give me the birth place of Enomoto Takeaki and death place of the father, that is a politician, of Yūki Hideyasu.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/deathPlace> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Enomoto_Takeaki> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Yūki_Hideyasu> <http://dbpedia.org/property/father> ?v2 . },"```sparql
SELECT ?birthPlace (GROUP_CONCAT(?deathPlace; separator="";"") AS ?deathPlaces) WHERE {
  # Retrieve birth place of Enomoto Takeaki
  <http://dbpedia.org/resource/Enomoto_Takeaki> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .

  # Identify Yūki Hideyasu's father who is a politician and retrieve his death place
  OPTIONAL {
    <http://dbpedia.org/resource/Yūki_Hideyasu> <http://xmlns.com/foaf/0.1/familyName> ?father .
    ?father <http://dbpedia.org/ontology/politicalParty> ?party .
    ?father <http://dbpedia.org/property/deathPlace> ?deathPlace .
  }
}
```",3,4,4,2,2,3,3,71,1,2,0,0.3333333333333333,1.0,0.5
392,26,test,"Give me the entity in the region, that is a country, of Central European Time and province of the residence, that is a settlement and Italian, of Sebastiano Bianchetti and region of Central European Time.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Sebastiano_Bianchetti> <http://dbpedia.org/property/residence> ?v2 . ?v1 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://dbpedia.org/ontology/province> ?result . ?result <http://dbpedia.org/ontology/country> ?v1 . ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Central_European_Time> . },"```sparql
SELECT ?entity WHERE {
  # Step 1: Find Sebastiano Bianchetti's residence in Italy
  ?residence <http://dbpedia.org/property/residence> <http://dbpedia.org/resource/Sebastiano_Bianchetti> .
  ?residence <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement> .
  ?residence <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy> .

  # Step 2: Find the province of this Italian settlement
  ?province <http://dbpedia.org/property/province> ?residence .

  # Step 3: Identify regions associated with Central European Time
  ?region <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Central_European_Time> .
  
  # Step 4: Find entities that are countries within these CET regions and provinces of the Italian settlement
  ?entity <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country> ;
          <http://dbpedia.org/ontology/province> ?province ;
          <http://dbpedia.org/ontology/region> ?region .
}
```",5,8,6,2,3,2,3,28,0,0,1,0,0.0,0
994,57,test,"Give me the associated musical artist of S.A. Slayer and associated musical artist of the band member, that is a band and a group and an organisation, of the band, that is an organisation, of Fredrik Thordendal and band member of the person born, that is a musical artist, as Donald Maynard Dokken.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ""Donald Maynard Dokken""@en . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/S.A._Slayer> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Fredrik_Thordendal> . }","```sparql
SELECT ?associatedArtist1 ?associatedArtist2 WHERE {
  ?band1 <http://dbpedia.org/property/associatedMusicalArtist> <http://dbpedia.org/resource/S._A._Slayer> .
  
  ?member1 <http://dbpedia.org/ontology/member> ?band1 ;
           <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band> ;
           <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group> ;
           <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation> .
  
  ?band2 <http://dbpedia.org/property/associatedBand> <http://dbpedia.org/resource/Fredrik_Thordendal> .
  
  ?person <http://www.w3.org/2000/01/rdf-schema#label> ""Donald Maynard Dokken""@en ;",6,11,7,3,3,3,3,71,0,0,1,0,0.0,0
838,17,test,"Give me the band member of the band, that is a group, of the reference, that is a group and an organisation, to YU Grupa and band of Raša Đelmaš.","SELECT ?result WHERE { <http://dbpedia.org/resource/Raša_Đelmaš> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v0 <http://xmlns.com/foaf/0.1/name> ""YU Grupa""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. }","```sparql
SELECT ?bandMember WHERE {
  ?reference <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>.
  ?reference <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>.
  ?reference <http://dbpedia.org/property/reference> <http://dbpedia.org/resource/YU_Grupa>.
  ?reference <http://dbpedia.org/property/band> <http://dbpedia.org/resource/Raša_Đelmaš>.
  
  ?band <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>.
  ?reference <http://dbpedia.org/property/band> ?band.
  
  ?member <http://dbpedia.org/ontology/member> ?band.
}
```",4,7,5,3,2,3,2,20,0,0,4,0,0.0,0
994,27,test,"Give me the band member of the person born, that is a musical artist, as the persona of Don Dokken.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Don_Dokken> <http://xmlns.com/foaf/0.1/givenName> ?v1 . },"```sparql
SELECT ?bandMember WHERE {
  ?person <http://dbpedia.org/ontology/birthName> ""Don Dokken"" .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
  ?bandMember <http://dbpedia.org/ontology/memberOfBand> ?band .
  ?band <http://dbpedia.org/property/members> ?person .
}
```",3,4,4,3,1,3,3,71,0,0,2,0,0.0,0
281,54,test,"Give me the war of the awardee of Knight Grand Cross of the Order of the Bath and war of New Zealand Army and entity in the birth place, that is a country, of the leader, that is a politician, of 1962 New South Wales state election.",SELECT ?result WHERE { <http://dbpedia.org/resource/New_Zealand_Army> <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/ontology/birthPlace> ?v5 . ?result <http://dbpedia.org/ontology/place> ?v5 . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_the_Bath> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/1962_New_South_Wales_state_election> <http://dbpedia.org/property/leader> ?v0 . ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
SELECT DISTINCT ?war WHERE {
  # Step 1: Find the awardee of Knight Grand Cross of the Order of the Bath and their associated war
  ?awardee dbo:award <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_the_Bath> .
  ?awardee dbo:militaryConflict ?warA .

  # Step 2: Find the war involving the New Zealand Army
  ?nzWar dbo:participatingMilitaryUnit <http://dbpedia.org/resource/New_Zealand_Army> .
  
  # Step 3: Identify the leader in the 1962 NSW state election and their birthplace country
  ?election dbo:leader ?politician .
  FILTER (str(?election) = ""http://dbpedia.org/resource/1962_New_South_Wales_state_election"")
  ?politician rdf:type dbo:Politician .
  ?politician dbp:birthPlace ?birthPlace .
  ?birthPlace dbo:country <http://dbpedia.org/resource/Country> .

  # Step 4: Find the war associated with the birthplace country
  ?warB dbo:location ?birthPlace .

  # Step 5: Combine results to find common wars
  VALUES ?commonWar { ?warA ?nzWar ?warB }
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
701,26,test,Give me the parent of the child of the child of Seti I.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://dbpedia.org/property/father> ?v1 . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seti_I> . },"```sparql
SELECT ?grandchildParent WHERE {
  ?setiI dbp:spouse|dbp:wife ?setiISpouse .
  ?setiISpouse dbp:children ?child1 .
  ?child1 dbp:children ?grandchild .
  ?grandchild dbp:parent ?grandchildParent .
}
```",3,3,4,3,1,3,3,71,0,0,2,0,0.0,0
547,54,test,Give me the resting place of the child of James Burton (property developer) and resting place of the actor of the show with Emily Richard and resting place of Alan Cunningham.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/James_Burton_(property_developer)> <http://dbpedia.org/ontology/child> ?v3 . <http://dbpedia.org/resource/Alan_Cunningham> <http://dbpedia.org/ontology/restingPlace> ?result . ?v0 <http://dbpedia.org/property/starring> ?v5 . ?v0 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emily_Richard> . ?v5 <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
SELECT ?restingPlace WHERE {
  # Resting place of the child of James Burton (property developer)
  {
    ?child dbp:parent <http://dbpedia.org/resource/James_Burton_(property_developer)>.
    ?child dbo:deathPlace ?restingPlace.
  }
  
  UNION
  
  # Resting place of the actor in the show with Emily Richard
  {
    ?show dbo:actor ?actor.
    ?show dbp:starring <http://dbpedia.org/resource/Emily_Richard>.
    ?actor dbo:deathPlace ?restingPlace.
  }
  
  UNION
  
  # Resting place of Alan Cunningham
  {
    <http://dbpedia.org/resource/Alan_Cunningham> dbo:deathPlace ?restingPlace.
  }
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
294,22,test,"Give me the resting place of the awardee, that is a politician, of Distinguished Service Medal (U.S. Army) and resting place of the architect of P. D. Houston Jr. House.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Distinguished_Service_Medal_(U.S._Army)> . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/P._D._Houston_Jr._House> <http://dbpedia.org/ontology/architect> ?v3 . ?v3 <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
SELECT ?restingPlace WHERE {
  ?person <http://dbpedia.org/ontology/politician> true .
  ?person <http://dbpedia.org/property/awards> ?award .
  ?award <http://www.w3.org/2000/01/rdf-schema#label> ""Distinguished Service Medal (U.S. Army)""@en .

  ?person <http://dbpedia.org/ontology/deathPlace> ?restingPlace .

  ?architect <http://dbpedia.org/resource/P._D._Houston_Jr._House> <http://dbpedia.org/ontology/architect> true .
  ?architect <http://dbpedia.org/ontology/deathPlace> ?restingPlace .
}
```",4,5,5,2,2,2,3,28,0,0,1,0,0.0,0
232,47,test,"Give me the actor of the claim to fame, that is a film and a military conflict, of the professional in Actor, narrator and producer and child of the person born as John Devon Roland Pertwee.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/starring> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/ontology/knownFor> ?v4 . ?v0 <http://dbpedia.org/property/occupation> ""Actor, narrator and producer""@en . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v2 <http://dbpedia.org/ontology/child> ?result . ?v2 <http://dbpedia.org/property/birthName> ""John Devon Roland Pertwee""@en . }","```sparql
# Step 1: Identify John Devon Roland Pertwee
SELECT ?johnPertwee WHERE {
    ?johnPertwee <http://dbpedia.org/ontology/birthName> ""John Devon Roland Pertwee"" .
}

# Step 2: Find his child who is a professional in acting, narration, and production
SELECT ?child WHERE {
    ?child <http://dbpedia.org/ontology/father> ?johnPertwee .
    ?child <http://dbpedia.org/ontology/profession> ?profession .
    FILTER (
        EXISTS { ?profession <http://www.w3.org/2000/01/rdf-schema#label> ""Actor"" . }
        && EXISTS { ?profession <http://www.w3.org/2000/01/rdf-schema#label> ""Narrator"" . }
        && EXISTS { ?profession <http://www.w3.org/2000/01/rdf-schema#label> ""Producer"" . }
    )
}

# Step 3: Find the claim to fame that is both a film and a military conflict
SELECT ?claimToFame WHERE {
    ?child <http://dbpedia.org/ontology/knownFor> ?claimToFame .
    ?claimToFame <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film> .
    ?claimToFame <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
}

# Step 4: Identify the actor associated with this film
SELECT ?actor WHERE {
    ?claimToFame <http://dbpedia.org/ontology/starring> ?actor .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
161,29,test,"Give me the commander in Biscay Campaign and military force of Rif War and military force of the force, that is a societal event and a military conflict, of Francisco Largo Caballero.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Rif_War> . ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Biscay_Campaign> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
# Step 1: Find the commander of the Biscay Campaign
SELECT ?commander WHERE {
    <http://dbpedia.org/resource/Biscay_Campaign> <http://dbpedia.org/ontology/commander> ?commander .
}

# Step 2: Identify military forces in the Rif War
SELECT ?rifForce WHERE {
    <http://dbpedia.org/resource/Rif_War> <http://dbpedia.org/ontology/military_force> ?rifForce .
}

# Step 3: Find societal event and military conflict linked to Francisco Largo Caballero
SELECT ?event ?conflict WHERE {
    <http://dbpedia.org/resource/Francisco_Largo_Caballero> <http://dbpedia.org/property/associatedWithEvent> ?event .
    ?event <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent> .
    
    <http://dbpedia.org/resource/Francisco_Largo_Caballero> <http://dbpedia.org/property/associatedWithConflict> ?conflict .
    ?conflict <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
}

# Step 4: Find the military force in the societal event and conflict
SELECT ?force WHERE {
    ?event <http://dbpedia.org/ontology/military_force> ?force .
    ?conflict <http://dbpedia.org/ontology/military_force> ?force .
}

# Final step: Combine results to find common military forces
SELECT DISTINCT ?commander ?rifForce ?force WHERE {
    # Commander of Biscay Campaign
    <http://dbpedia.org/resource/Biscay_Campaign> <http://dbpedia.org/ontology/commander> ?commander .

    # Military force in Rif War
    <http://dbpedia.org/resource/Rif_War> <http://dbpedia.org/ontology/military_force> ?rifForce .

    # Common military force in societal event and conflict linked to Francisco Largo Caballero
    {
        SELECT DISTINCT ?force WHERE {
            ?event <http://dbpedia.org/ontology/military_force> ?force .
            ?conflict <http://dbpedia.org/ontology/military_force> ?force .

            # Societal event and military conflict associated with Francisco Largo Caballero
            <http://dbpedia.org/resource/Francisco_Largo_Caballero> <http://dbpedia.org/property/associatedWithEvent> ?event .
            ?event <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent> .

            <http://dbpedia.org/resource/Francisco_Largo_Caballero> <http://dbpedia.org/property/associatedWithConflict> ?conflict .
            ?conflict <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
        }
    }

    # Ensure the military force is common
    FILTER(?rifForce = ?force)
}
```",4,6,5,2,3,3,3,71,0,0,1,0,0.0,0
16,47,test,Give me the professional in the profession of the actor of Unnatural (TV series) and spouse of the person born as Ted Martin McGinley.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ""Ted Martin McGinley""@en . <http://dbpedia.org/resource/Unnatural_(TV_series)> <http://dbpedia.org/property/starring> ?v0 . ?v0 <http://dbpedia.org/property/occupation> ?v4 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/occupation> ?v4 . }","```sparql
SELECT ?professional WHERE {
  # Step 1: Find the actor of ""Unnatural (TV series)""
  ?unnatural <http://dbpedia.org/ontology/starring> ?actor .
  ?unnatural rdfs:label ""Unnatural (TV series)""@en .

  # Step 2: Determine the profession of that actor
  ?actor <http://dbpedia.org/ontology/profession> ?profession .

  # Step 3: Find Ted Martin McGinley and his spouse
  ?ted a <http://dbpedia.org/ontology/Person> ;
      rdfs:label ""Ted Martin McGinley""@en ;
      foaf:name ?name .
  ?ted <http://dbpedia.org/property/spouse> ?spouse .

  # Step 4: Find a professional with the same profession as the actor and who is Ted's spouse
  ?professional <http://dbpedia.org/ontology/profession> ?profession ;
                 owl:sameAs ?spouse .
}
```",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
427,24,test,Give me the party of Romano Prodi and party of the father of Lamberto Andreotti.,SELECT ?result WHERE { <http://dbpedia.org/resource/Lamberto_Andreotti> <http://dbpedia.org/property/father> ?v2 . <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/ontology/party> ?result . ?v2 <http://dbpedia.org/ontology/party> ?result . },"```sparql
SELECT ?prodiParty ?andreottiFatherParty WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/ontology/party> ?prodiParty .
  }
  OPTIONAL {
    <http://dbpedia.org/resource/Lamberto_Andreotti> <http://dbpedia.org/property/father> ?andreottiFather .
    ?andreottiFather <http://dbpedia.org/ontology/party> ?andreottiFatherParty .
  }
}
```",3,3,4,2,2,3,3,71,3,6,0,0.3333333333333333,1.0,0.5
801,45,test,"Give me the associated musical artist of the writer, that is a musical artist and an artist, of the album, that is a musical work and a work, of What U See Is What U Get and professional in  and producer of Westside Story (song).","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Westside_Story_(song)> <http://dbpedia.org/ontology/producer> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/What_U_See_Is_What_U_Get> <http://dbpedia.org/ontology/album> ?v0 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/writer> ?v1 . ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
SELECT ?associatedArtist WHERE {
    # Step 1: Find the album ""What U See Is What U Get""
    ?album rdf:type dbo:MusicalWork ;
           rdfs:label ""What U See Is What U Get""@en .
    
    # Step 2: Identify the writer of the album who is also a musical artist and an artist
    ?writer dbo:work ?album ;
            rdf:type dbo:MusicalArtist, dbo:Artist .

    # Step 3: Find the producer of ""Westside Story"" song
    ?producer dbo:producedWork ?westsideStorySong .
    
    ?westsideStorySong rdfs:label ""Westside Story (song)""@en ;
                       rdf:type dbo:MusicalWork .

    # Step 4: Identify the associated musical artist of the writer
    ?writer dbo:associatedMusicalArtist ?associatedArtist .
}
```",5,9,6,3,3,3,3,71,0,0,1,0,0.0,0
747,62,test,"Give me the person born on the birth date of the person decedent, that is an athlete and a soccer player, at Zolotonosha and band of the writer of the work, that is a song, of Amba Shepherd and band of Shèna.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Shèna> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v4 <http://dbpedia.org/ontology/birthDate> ?v3 . ?v4 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Zolotonosha> . ?v6 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Amba_Shepherd> . ?result <http://dbpedia.org/ontology/birthDate> ?v3 . ?v0 <http://dbpedia.org/property/writer> ?v6 . },"```sparql
SELECT ?person WHERE {
  # Step 1: Find the athlete and soccer player born in Zolotonosha
  ?athlete a dbo:Athlete ;
           dbo:soccerPlayer true ;
           dbo:birthPlace dbr:Zolotonosha .
  
  # Step 2: Get the birth date of their decedent
  ?decedent dbo:decedent ?athlete ;
            dbo:birthDate ?birthdate .

  # Step 3: Find the writer of a song associated with Amba Shepherd
  ?song dbo:work dbr:Amba_Shepherd ;
        dbo:writer ?writer .
  
  # Step 4: Determine the band associated with Shèna
  ?band dbo:member dbr:Shèna .

  # Step 5: Link the writer's work to the band of Shèna
  ?song dbo:work ?writer ;
        dbo:band ?band .

  # Step 6: Find a person born on the birth date found in step 2
  ?person dbo:birthDate ?birthdate .
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
328,45,test,"Give me the commander in Eastern Front (World War II) and awardee of Order of Suvorov and leader of the office, that is a government agency, of the leader, that is an office holder and a politician, of Gustav Jonson.",SELECT ?result WHERE { <http://dbpedia.org/resource/Gustav_Jonson> <http://dbpedia.org/property/leader> ?v0 . ?v1 <http://dbpedia.org/ontology/leader> ?result . ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Order_of_Suvorov> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/office> ?v1 . <http://dbpedia.org/resource/Eastern_Front_(World_War_II)> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT ?commander WHERE {
  ?commander <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Eastern_Front_(World_War_II)> .
  ?commander <http://dbpedia.org/property/awardee> <http://dbpedia.org/resource/Order_of_Suvorov> .
  
  ?office <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency> .
  ?leader <http://dbpedia.org/property/leader> ?office .
  ?leader <http://dbpedia.org/ontology/officeHolder> ?position .
  ?position <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .
  
  ?gustav <http://dbpedia.org/property/leader> ?position .
  ?gustav <http://dbpedia.org/resource/Gustav_Jonson> .

  FILTER(?commander = ?leader)
}
```",5,8,6,3,3,3,3,71,0,0,1,0,0.0,0
492,36,test,"Give me the person decedent at the capital, that is a settlement, of the country of Khemis Miliana District and person decedent at French Algeria.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . ?v0 <http://dbpedia.org/ontology/capital> ?v1 . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/French_Algeria> . <http://dbpedia.org/resource/Khemis_Miliana_District> <http://dbpedia.org/ontology/country> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
SELECT ?person WHERE {
  ?capital <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>.
  ?khemisMilianaDistrict <http://dbpedia.org/property/capital> ?capital.
  ?khemisMilianaDistrict <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Khemis_Miliana_District>.

  ?algeria <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>.
  ?algeria <http://dbpedia.org/property/name> ""French Algeria"".

  ?person <http://dbpedia.org/ontology/deathPlace> ?capital.
  ?person <http://dbpedia.org/ontology/deathPlace> ?algeria.
}
```",4,5,5,3,2,3,3,71,0,0,16,0,0.0,0
16,18,test,Give me the professional in Actress and spouse of Ted McGinley and person born as Georgeanne Marie Rice.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Georgeanne Marie Rice""@en . ?result <http://dbpedia.org/property/occupation> ""Actress""@en . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/profession> <http://dbpedia.org/resource/Actress> .
  ?person <http://dbpedia.org/property/spouse> <http://dbpedia.org/resource/Ted_McGinley> .
  ?person <http://dbpedia.org/ontology/birthName> ""Georgeanne Marie Rice""^^<http://www.w3.org/2001/XMLSchema#string> .
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
404,65,test,"Give me the child of the father of Ernest Augustus, Duke of Brunswick and spouse of the person born, that is a royalty, as Princess Victoria Louise of Prussia and parent of the child, that is a royalty, of the parent, that is a royalty, of Prince George William of Hanover.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/parent> ?v3 . ?v4 <http://dbpedia.org/property/birthName> ""Princess Victoria Louise of Prussia""@en . <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/property/father> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> ?v6 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Prince_George_William_of_Hanover> <http://dbpedia.org/ontology/parent> ?v0 . ?v0 <http://dbpedia.org/ontology/child> ?v6 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
# Step 1: Find the father of Ernest Augustus, Duke of Brunswick
SELECT ?father WHERE {
    <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/ontology/father> ?father .
}

# Step 2: Identify Princess Victoria Louise of Prussia and her spouse
SELECT ?spouse WHERE {
    <http://dbpedia.org/resource/Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?spouse .
}

# Step 3: Find the child of this spouse
SELECT ?child WHERE {
    ?spouse <http://dbpedia.org/ontology/child> ?child .
}

# Step 4: Identify the parent of Prince George William of Hanover
SELECT ?parent WHERE {
    <http://dbpedia.org/resource/Prince_George_William_of_Hanover> <http://dbpedia.org/ontology/parent> ?parent .
}

# Step 5: Find the child of this parent
SELECT ?child2 WHERE {
    ?parent <http://dbpedia.org/ontology/child> ?child2 .
}

# Final step: Combine these relationships to find the required connection
SELECT DISTINCT ?finalChild WHERE {
    # Assuming we have identified variables from previous steps
    ?father <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> .
    ?spouse <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Victoria_Louise_of_Prussia> .
    ?spouse <http://dbpedia.org/ontology/child> ?finalChild .
    ?parent <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Prince_George_William_of_Hanover> .
    ?parent <http://dbpedia.org/ontology/child> ?child2 .
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
959,47,test,"Give me the member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of Eiji Ōtsuka and native of the residence, that is a country, of the leader, that is a politician, of 2010 Japanese House of Councillors election.",SELECT ?result WHERE { <http://dbpedia.org/resource/2010_Japanese_House_of_Councillors_election> <http://dbpedia.org/property/leader> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?result <http://dbpedia.org/ontology/team> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?v0 <http://dbpedia.org/property/residence> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Eiji_Ōtsuka> <http://dbpedia.org/ontology/almaMater> ?v1 . },"```sparql
SELECT ?member WHERE {
    # Step 1: Identify the leader (politician) of the 2010 Japanese House of Councillors election
    ?election dbpedia-owl:electionDate ?date .
    FILTER(year(?date) = 2010 && contains(str(?election), ""Japanese House of Councillors""))
    
    ?candidate dbpedia-owl:officeHolderOf ?election ;
               a dbo:Politician .

    # Step 2: Determine the country where this leader's residence is located
    ?candidate foaf:nationality ?nationality .
    ?residence dbpedia-owl:country ?country .
    ?candidate foaf:based_near ?residence .

    # Step 3: Find individuals native to that country
    ?person dbo:nativePlace ?nativePlace ;
            dbo:nationality ?nationality .

    # Step 4: Filter those whose alma maters are Japanese organizations, universities, and educational institutions
    ?almaMater a dbo:EducationalOrganization, dbo:University, dbo:Organisation ;
               dbpedia-owl:country dbc:Japan .
    
    ?person dbo:almaMater ?almaMater .

    # Step 5: Identify members associated with such an alma mater
    ?member dbo:almaMater ?almaMater .
}
```",5,11,6,3,2,3,3,71,0,0,84,0,0.0,0
427,63,test,"Give me the party of the father of Lamberto Andreotti and reference to the name of the party of Michele Pinto and party of the person born, that is an office holder and a politician, as Romano Antonio Prodi.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ""Romano Antonio Prodi""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Michele_Pinto> <http://dbpedia.org/ontology/party> ?v4 . <http://dbpedia.org/resource/Lamberto_Andreotti> <http://dbpedia.org/property/father> ?v6 . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . ?v4 <http://xmlns.com/foaf/0.1/name> ?v3 . ?v2 <http://dbpedia.org/ontology/party> ?result . ?v6 <http://dbpedia.org/ontology/party> ?result . }","```sparql
SELECT ?party1 ?party2 ?party3 WHERE {
  # Query for the party of Lamberto Andreotti's father
  OPTIONAL { 
    <http://dbpedia.org/resource/Lamberto_Andreotti> <http://dbpedia.org/ontology/father> ?father .
    ?father <http://dbpedia.org/ontology/party> ?party1 .
  }

  # Query for the party of Michele Pinto
  OPTIONAL {
    <http://dbpedia.org/resource/Michele_Pinto> <http://dbpedia.org/ontology/party> ?party2 .
  }
  
  # Query for the party of Romano Antonio Prodi, who is an office holder and a politician
  OPTIONAL {
    <http://dbpedia.org/resource/Romano_Antonio_Prodi> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?type .
    FILTER (?type IN (<http://dbpedia.org/ontology/OfficeHolder>, <http://dbpedia.org/ontology/Politician>)).
    <http://dbpedia.org/resource/Romano_Antonio_Prodi> <http://dbpedia.org/ontology/party> ?party3 .
  }
}
```",7,9,8,3,3,3,3,71,2,0,0,1.0,1.0,1.0
778,16,test,"Give me the entity in the award of Ralph L. Brinster and author of the work, that is a software, of Bill Joy.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/location> ?v2 . ?v3 <http://dbpedia.org/ontology/author> ?result . <http://dbpedia.org/resource/Ralph_L._Brinster> <http://dbpedia.org/property/awards> ?v2 . ?v3 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Bill_Joy> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Software>. },"```sparql
SELECT ?entity WHERE {
  ?award <http://dbpedia.org/ontology/receiver> <http://dbpedia.org/resource/Ralph_L._Brinster> .
  ?software <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Software> .
  ?software <http://purl.org/dc/terms/creator> <http://dbpedia.org/resource/Bill_Joy> .
  FILTER EXISTS { ?entity = ?award }
  FILTER EXISTS { ?entity = ?software }
}
```",4,5,5,2,2,3,2,20,0,0,1,0,0.0,0
9,66,test,"Give me the alma mater of the mayor, that is a politician, of Northern Ireland Forum and alma mater of the awardee of Royal Medal and figure known as the nickname of the entity, that is an organisation and an educational institution, in Northern Ireland.",SELECT ?result WHERE { <http://dbpedia.org/resource/Northern_Ireland_Forum> <http://dbpedia.org/property/leader> ?v3 . ?result <http://dbpedia.org/property/nickname> ?v2 . ?v1 <http://dbpedia.org/property/nickname> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://dbpedia.org/ontology/almaMater> ?result . ?v6 <http://dbpedia.org/ontology/almaMater> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Northern_Ireland> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v6 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Medal> . },"```sparql
SELECT ?almaMater WHERE {
  # Step 1: Find the mayor who is a politician of Northern Ireland Forum
  ?mayor <http://dbpedia.org/ontology/politician> _:a .
  ?mayor <http://dbpedia.org/property/memberOf> <http://dbpedia.org/resource/Northern_Ireland_Forum> .

  # Step 2: Find the alma mater of this mayor
  ?mayor <http://dbpedia.org/ontology/almaMater> ?almaMater .

  # Step 3: Identify an awardee of the Royal Medal and find their alma mater
  ?awardee <http://dbpedia.org/ontology/award> <http://dbpedia.org/resource/Royal_Medal> .
  ?awardee <http://dbpedia.org/ontology/almaMater> ?almaMater .

  # Step 4: Determine the nickname of an organization that is both an educational institution in Northern Ireland
  ?org <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation> .
  ?org <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution> .
  ?org <http://dbpedia.org/property/location> <http://dbpedia.org/resource/Northern_Ireland> .
  ?org <http://dbpedia.org/ontology/nickName> ?nickname .

  # Step 5: Ensure all these entities point to the same alma mater
  OPTIONAL { ?mayor rdfs:label ?mayorLabel . FILTER(lang(?mayorLabel) = ""en"") }
  OPTIONAL { ?awardee rdfs:label ?awardeeLabel . FILTER(lang(?awardeeLabel) = ""en"") }
  OPTIONAL { ?org rdfs:label ?orgLabel . FILTER(lang(?orgLabel) = ""en"") }
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
281,66,test,"Give me the entity in the birth place, that is a country, of Bob Heffron and war of the profession, that is a military unit, of the professional, that is an office holder and a politician, in New Zealand Army and war of the awardee of Knight Grand Cross of the Order of the Bath.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Bob_Heffron> <http://dbpedia.org/ontology/birthPlace> ?v6 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_the_Bath> . ?v1 <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/New_Zealand_Army> . ?result <http://dbpedia.org/ontology/place> ?v6 . ?v1 <http://dbpedia.org/property/occupation> ?v2 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
SELECT DISTINCT ?entity WHERE {
  # Bob Heffron's birth place
  <http://dbpedia.org/resource/Bob_Heffron> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  
  # Ensure the birth place is a country
  ?birthPlace <http://www.w3.org/2000/01/rdf-schema#seeAlso> ?country .

  # Entity in Bob Heffron's birth place
  ?entity <http://www.w3.org/2000/01/rdf-schema#location> ?birthPlace .
  
  # Professional as office holder and politician in New Zealand Army
  OPTIONAL {
    <http://dbpedia.org/resource/New_Zealand_Army> <http://dbpedia.org/ontology/member> ?professional .
    ?professional <http://dbpedia.org/ontology/politicalParty> ?party .
    ?professional <http://dbpedia.org",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
747,69,test,"Give me the person born on the birth date of the person decedent, that is an athlete and a soccer player, at Zolotonosha and band of the person born as the persona of Shèna and band of the writer of Apollo (Hardwell song).",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v7 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Shèna> <http://xmlns.com/foaf/0.1/givenName> ?v1 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?result <http://dbpedia.org/ontology/birthDate> ?v3 . <http://dbpedia.org/resource/Apollo_(Hardwell_song)> <http://dbpedia.org/property/writer> ?v7 . ?v2 <http://dbpedia.org/property/birthName> ?v1 . ?v4 <http://dbpedia.org/ontology/birthDate> ?v3 . ?v4 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Zolotonosha> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. },"```sparql
# Step 1: Find the writer of ""Apollo"" by Hardwell
SELECT ?writer WHERE {
    ?song dbpedia-owl:title ""Apollo (Hardwell song)""@en .
    ?song dbo:lyricsWriter ?writer .
}

# Step 2: Find the band associated with Shèna
SELECT ?band WHERE {
    ?persona rdfs:label ""Shèna""@en .
    ?persona dbo:associatedBand ?band .
}

# Step 3: Locate a person born in Zolotonosha who is an athlete and a soccer player
SELECT ?person WHERE {
    ?person dbo:birthPlace <http://dbpedia.org/resource/Zolotonosha> ;
            rdf:type dbo:Athlete, dbo:SoccerPlayer .
}

# Step 4: Find the decedent with the same birth date as the person from step 3
SELECT ?decedent WHERE {
    ?person dbo:birthDate ?birthdate .
    ?decedent dbo:deathDate ?deathdate ;
              dbo:birthDate ?birthdate .
}

# Step 5: Identify the person born on this shared birth date who is an athlete and a soccer player
SELECT ?finalPerson WHERE {
    ?finalPerson dbo:birthDate ?birthdate ;
                 rdf:type dbo:Athlete, dbo:SoccerPlayer .
}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
92,21,test,"Give me the band member of the reference, that is an artist, to Nevermore and band of Joseph Michael.","SELECT ?result WHERE { ?v1 <http://xmlns.com/foaf/0.1/name> ""Nevermore""@en . ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Joseph_Michael> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . }","```sparql
SELECT ?artist WHERE {
  ?artist <http://dbpedia.org/ontology/member> ?nevermoreBand .
  ?nevermoreBand <http://dbpedia.org/ontology/reference> <http://dbpedia.org/resource/Nevermore> .
  ?artist <http://dbpedia.org/ontology/member> ?josephMichaelBand .
  ?josephMichaelBand <http://dbpedia.org/property/band> <http://dbpedia.org/resource/Joseph_Michael> .
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
161,70,test,"Give me the commander in the force, that is an event, of the figure known as El Director and military force of the force, that is a societal event and an event and a military conflict, of Francisco Franco and military force of the force, that is a societal event and a military conflict, of the predecessor of Indalecio Prieto.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/ontology/commander> ?v1 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Indalecio_Prieto> . ?v7 <http://dbpedia.org/ontology/commander> ?v0 . ?v1 <http://xmlns.com/foaf/0.1/nick> ""El Director""@en . ?result <http://dbpedia.org/ontology/battle> ?v7 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v4 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Franco> . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. }","```sparql
SELECT ?commander WHERE {
  # Step 1: Identify Francisco Franco as ""El Director""
  ?franco a dbo:Person ;
          foaf:name ""Francisco Franco""@en .

  # Step 2: Find the military force associated with Francisco Franco
  ?force1 a dbo:MilitaryConflict, dbo:SocietalEvent ;
          dbo:militaryForce ?franco .

  # Step 3: Identify Indalecio Prieto's predecessor
  ?prieto a dbo:Person ;
          foaf:name ""Indalecio Prieto""@en .
  ?predecessor a dbo:Person ;
               dbo:successorOf ?prieto .

  # Step 4: Find the military force associated with the predecessor
  ?force2 a dbo:MilitaryConflict, dbo:SocietalEvent ;
          dbo:militaryForce ?predecessor .

  # Step 5: Find the commander in the common force (event)
  ?commander dbo:commanderOf ?commonForce .
  FILTER (?force1 = ?commonForce && ?force2 = ?commonForce)
}
```",8,14,9,3,3,3,3,71,0,0,32,0,0.0,0
959,62,test,"Give me the member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of the person born in 1958 and manager of 2013 Júbilo Iwata season and native of the residence, that is a country, of the leader, that is a politician, of 2010 Japanese House of Councillors election.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/birthYear> ""1958""^^<http://www.w3.org/2001/XMLSchema#gYear> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. <http://dbpedia.org/resource/2013_Júbilo_Iwata_season> <http://dbpedia.org/ontology/manager> ?result . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?result <http://dbpedia.org/ontology/team> ?v2 . ?result <http://dbpedia.org/ontology/birthPlace> ?v5 . ?v4 <http://dbpedia.org/ontology/almaMater> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. <http://dbpedia.org/resource/2010_Japanese_House_of_Councillors_election> <http://dbpedia.org/property/leader> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/property/residence> ?v5 . }","```sparql
# Step 1: Find the leader (politician) of the 2010 Japanese House of Councillors election
SELECT ?leader WHERE {
    ?election dbpedia-owl:winner ?leader .
    ?election dbpedia-owl:date ""2010""^^xsd:gYear .
    ?election dbpedia-owl:country <http://dbpedia.org/resource/Japan> .
}

# Step 2: Determine the residence (country) of this leader
SELECT ?residence WHERE {
    ?leader foaf:nationality ?residence .
    ?residence a dbo:Country .
}

# Step 3: Find a person who is native of that country, manager of the 2013 Júbilo Iwata season, and born in 1958
SELECT ?person WHERE {
    ?person dbpedia-owl:nationality ?residence .
    ?person dbpedia-owl:birthYear ""1958""^^xsd:gYear .
    ?person dbo:manager <http://dbpedia.org/resource/2013_Júbilo_Iwata_season> .
}

# Step 4: Identify the alma mater of this person, which must be Japanese, an organization, a university, and an educational institution
SELECT ?almaMater WHERE {
    ?person dbo:almaMater ?almaMater .
    ?almaMater dbpedia-owl:country <http://dbpedia.org/resource/Japan> .
    ?almaMater a dbo:Organization ;
               a dbo:University ;
               a dbo:EducationalInstitution .
}

# Step 5: Find a member of this alma mater
SELECT ?member WHERE {
    ?member dbo:almaMater ?almaMater .
}
```",7,13,8,3,3,3,3,71,0,0,1,0,0.0,0
285,18,test,Give me the parent of the child of the spouse of Aristotle Onassis and spouse of the professional in .,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Aristotle_Onassis> . ?result <http://dbpedia.org/ontology/spouse> ?v3 . ?v3 <http://dbpedia.org/property/occupation> """"@en . ?v1 <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://dbpedia.org/ontology/parent> ?result . }","```sparql
SELECT ?result WHERE {
  # Step 1: Find Aristotle Onassis's spouse
  <http://dbpedia.org/resource/Aristotle_Onassis> <http://dbpedia.org/ontology/spouse> ?spouse .

  # Step 2: Find the child of that spouse
  ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Child> .
  ?child <http://dbpedia.org/ontology/familyName> ?spouse .

  # Step 3: Determine the parent of that child
  ?parent <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Parent> .
  ?child <http://dbpedia.org/ontology/parent> ?parent .

  # Step 4: Identify the professional (assumed to be the spouse)
  ?professional <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?profession .

  # Step 5: Find the spouse of this professional
  ?professional <http://dbpedia.org/ontology/spouse> ?result .
}
```",5,5,6,3,2,3,2,20,0,0,3,0,0.0,0
827,16,test,"Give me the child of the child, that is a royalty, of Grand Duchess Maria Pavlovna of Russia (1786–1859) and father of the child, that is a royalty, of Charles Augustus, Hereditary Grand Duke of Saxe-Weimar-Eisenach (1844–1894).","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Charles_Augustus,_Hereditary_Grand_Duke_of_Saxe-Weimar-Eisenach_(1844–1894)> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Grand_Duchess_Maria_Pavlovna_of_Russia_(1786–1859)> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> ?result . ?v2 <http://dbpedia.org/ontology/child> ?result . }","```sparql
# Find the child of the child (royalty) of Grand Duchess Maria Pavlovna
SELECT ?grandchild WHERE {
  ?parent <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Maria_Pavlovna_of_Russia_(1786-1859)> .
  ?parent <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Human> .
  ?parent <http://dbpedia.org/ontology/child> ?child .
  ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
  ?child <http://dbpedia.org/ontology/child> ?grandchild .
}

# Find the father of the child (royalty) of Charles Augustus
SELECT ?father WHERE {
  ?parent <http://dbpedia.org/property/husband> <http://dbpedia.org/resource/Charles_Augustus,_Hereditary_Grand_Duke_of_Saxe-Weimar-Eisenach> .
  ?parent <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Human> .
  ?parent <http://dbpedia.org/ontology/child> ?child .
  ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
}

# Find the common individual
SELECT DISTINCT ?individual WHERE {
  VALUES ?individual { ?grandchild ?father }
}
```",4,6,5,2,2,3,2,20,0,0,1,0,0.0,0
747,39,test,Give me the band of Amba Shepherd and band of the person born as the persona of Shèna.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ?v0 . <http://dbpedia.org/resource/Shèna> <http://xmlns.com/foaf/0.1/givenName> ?v0 . <http://dbpedia.org/resource/Amba_Shepherd> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
# Query to find the band associated with Amba Shepherd
SELECT ?band WHERE {
  <http://dbpedia.org/resource/Amba_Shepherd> <http://dbpedia.org/ontology/memberOf> ?band .
}

UNION

# Query to find the person born as Shèna and their associated band
SELECT ?band WHERE {
  ?person <http://www.w3.org/2000/01/rdf-schema#label> ""Shèna""@en .
  ?person <http://dbpedia.org/ontology/birthName> ""Shèna"" .
  ?person <http://dbpedia.org/ontology/memberOf> ?band .
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
281,51,test,"Give me the war of the profession, that is a military unit, of the professional, that is an office holder and a politician, in New Zealand Army and entity in the birth place, that is a country, of Bob Heffron.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/New_Zealand_Army> . ?v1 <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/Bob_Heffron> <http://dbpedia.org/ontology/birthPlace> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
# Step 1: Identify Bob Heffron's birthplace country
SELECT ?birthPlaceCountry WHERE {
    <http://dbpedia.org/resource/Bob_Heffron> <http://www.w3.org/2000/01/rdf-schema#birthPlace> ?birthPlace .
    ?birthPlace <http://www.w3.org/2000/01/rdf-schema#country> ?birthPlaceCountry .
}

# Step 2: Find entities in that country
SELECT DISTINCT ?entity WHERE {
    ?entity <http://www.w3.org/2000/01/rdf-schema#country> ?birthPlaceCountry .
}

# Step 3: Locate a professional who is both an office holder and a politician associated with the New Zealand Army
SELECT DISTINCT ?professional WHERE {
    ?professional <http://dbpedia.org/ontology/politicalParty> ?party .
    ?professional <http://dbpedia.org/property/profession> ?militaryUnit .
    ?militaryUnit <http://www.w3.org/2000/01/rdf-schema#isPartOf> <http://dbpedia.org/resource/New_Zealand_Army> .
    ?professional <http://purl.org/dc/terms/occupation> ?officeHolderRole .
}

# Step 4: Determine the military unit (profession) of that professional
SELECT DISTINCT ?militaryUnit WHERE {
    ?professional <http://dbpedia.org/property/profession> ?militaryUnit .
}

# Step 5: Find the war related to that military unit
SELECT DISTINCT ?war WHERE {
    ?militaryUnit <http://dbpedia.org/ontology/war> ?war .
}
```",5,9,6,3,2,3,3,71,0,0,1,0,0.0,0
294,25,test,"Give me the resting place of the awardee, that is a politician, of Distinguished Service Medal (U.S. Army) and resting place of the architect of P. D. Houston Jr. House and entity in Nashville, Tennessee.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Nashville,_Tennessee> . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Distinguished_Service_Medal_(U.S._Army)> . <http://dbpedia.org/resource/P._D._Houston_Jr._House> <http://dbpedia.org/ontology/architect> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/ontology/restingPlace> ?result . ?v4 <http://dbpedia.org/ontology/restingPlace> ?result . }","```sparql
SELECT DISTINCT ?restingPlace WHERE {
  ?person <http://dbpedia.org/ontology/politician> true .
  ?person <http://dbpedia.org/property/awards> ?award .
  ?award <http://www.w3.org/2000/01/rdf-schema#label> ""Distinguished Service Medal (U.S. Army)""@en .
  
  OPTIONAL { ?person <http://dbpedia.org/ontology/architectOf> <http://dbpedia.org/resource/P._D._Houston_Jr._House> . }
  
  ?person <http://dbpedia.org/property/placeOfBirth> ?placeOfBirth .
  ?placeOfBirth <http://www.w3.org/2000/01/rdf-schema#label> ""Nashville, Tennessee""@en .

  OPTIONAL { ?person <http://dbpedia.org/ontology/deathPlace> ?restingPlace . }
  
  FILTER EXISTS {
    ?person <http://dbpedia.org/ontology/architectOf> <http://dbpedia.org/resource/P._D._Houston_Jr._House> .
  }
}
```",5,6,6,2,3,2,3,28,0,0,1,0,0.0,0
378,41,test,"Give me the war of the person born as Carl Pontus Gahn and war of the commander in Peninsular War and claim to fame of Louis des Balbes de Berton de Crillon, 1st Duke of Mahón.","SELECT ?result WHERE { <http://dbpedia.org/resource/Peninsular_War> <http://dbpedia.org/ontology/commander> ?v4 . <http://dbpedia.org/resource/Louis_des_Balbes_de_Berton_de_Crillon,_1st_Duke_of_Mahón> <http://dbpedia.org/ontology/knownFor> ?result . ?v2 <http://dbpedia.org/property/birthName> ""Carl Pontus Gahn""@en . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v4 <http://dbpedia.org/ontology/battle> ?result . }","SELECT ?war WHERE {
  # Wars related to Carl Pontus Gahn by birth
  <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/ontology/birthPlace> ?place .
  ?place <http://dbpedia.org/ontology/war> ?war .

  UNION

  # Wars in which someone was the commander during the Peninsular War
  <http://dbpedia.org/resource/Peninsular_War> <http://dbpedia.org/ontology/commander> ?commander .
  ?commander <http://dbpedia.org/ontology/battle> ?war .

  UNION

  # Claim to fame of Louis des Balbes de Berton de Crillon, 1st Duke of Mahón
  <http://dbpedia.org/resource/Louis_des_Balbes_de_Berton_de_Crillon,_1st_Duke_of_Mahón> <http://dbpedia.org/ontology/knownFor> ?fame .
  ?fame <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
  ?fame ?p ?war .
}",5,5,6,2,3,3,3,71,0,0,2,0,0.0,0
303,21,test,"Give me the entity in Panama and party of the person born, that is a politician, as Arnulfo Arias Madrid and party of Guillermo Endara.","SELECT ?result WHERE { <http://dbpedia.org/resource/Guillermo_Endara> <http://dbpedia.org/ontology/party> ?result . ?v0 <http://dbpedia.org/property/birthName> ""Arnulfo Arias Madrid""@en . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Panama> . ?v0 <http://dbpedia.org/ontology/party> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
SELECT ?party WHERE {
  ?party <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Panama>.
  
  OPTIONAL { 
    ?arnulfo <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Panama>;
             <http://dbpedia.org/ontology/politicalParty> ?party;
             <http://www.w3.org/2000/01/rdf-schema#label> ""Arnulfo Arias Madrid""@en.
  }
  
  OPTIONAL { 
    ?guillermo <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Panama>;
               <http://dbpedia.org/ontology/politicalParty> ?party;
               <http://www.w3.org/2000/01/rdf-schema#label> ""Guillermo Endara""@en.
  }
  
  FILTER EXISTS { ?arnulfo <http://dbpedia.org/ontology/politicalParty> ?party }
  FILTER EXISTS { ?guillermo <http://dbpedia.org/ontology/politicalParty> ?party }
}
```",4,5,5,2,3,2,3,28,0,0,1,0,0.0,0
701,27,test,"Give me the spouse of the father of the commander, that is a royalty, in Battle of Perire.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> ?v2 . <http://dbpedia.org/resource/Battle_of_Perire> <http://dbpedia.org/ontology/commander> ?v1 . },"```sparql
SELECT ?spouse WHERE {
  # Step 1: Identify the commander in the Battle of Perire
  ?battle <http://dbpedia.org/ontology/commander> ?commander .
  
  FILTER(?battle = <http://dbpedia.org/resource/Battle_of_Perire>)
  
  # Step 2: Determine if this commander is a royalty
  ?commander <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
  
  # Step 3: Find out who the father of this commander is
  ?commander <http://dbpedia.org/property/father> ?father .
  
  # Step 4: Identify the spouse of that father
  ?father <http://dbpedia.org/ontology/spouse> ?spouse .
}
```",3,4,4,3,1,3,3,71,0,1,5,0.0,0.0,0
959,58,test,"Give me the manager of the team of the manager, that is a sports manager, of 1998 Kashima Antlers season and member of University of Tsukuba and native of the residence, that is a country, of Yōichi Masuzoe.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/manager> ?v4 . <http://dbpedia.org/resource/Yōichi_Masuzoe> <http://dbpedia.org/property/residence> ?v5 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?result <http://dbpedia.org/ontology/birthPlace> ?v5 . ?result <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/University_of_Tsukuba> . <http://dbpedia.org/resource/1998_Kashima_Antlers_season> <http://dbpedia.org/ontology/manager> ?v4 . ?v0 <http://dbpedia.org/ontology/manager> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
SELECT ?manager
WHERE {
  # Step 1: Find the manager of the 1998 Kashima Antlers season who is a sports manager.
  ?season dbpedia-owl:team <http://dbpedia.org/resource/Kashima_Antlers>;
          dbpedia-owl:year ""1998""^^xsd:gYear;
          dbpedia-owl:manager ?manager1 .
  
  FILTER EXISTS { ?manager1 rdf:type <http://dbpedia.org/ontology/SportsManager> }
  
  # Step 2: Determine the team managed by this individual.
  ?team dbpedia-owl:manager ?manager1 .

  # Step 3: Find out who manages that team.
  ?team dbpedia-owl:currentManager ?manager .
  
  # Step 4: Ensure this person is a member of the University of Tsukuba and native to the country where Yōichi Masuzoe resides.
  ?manager <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/University_of_Tsukuba> .

  ?residence dbpedia-owl:country ?country .
  ?yoshi dbpedia-owl:residence ?residence ;
         rdfs:label ""Yōichi Masuzoe""@en .
  
  ?manager <http://dbpedia.org/ontology/nationality> ?country .
}
```",6,8,7,3,3,3,3,71,0,0,2,0,0.0,0
421,20,test,Give me the band member of Senidah and native of the birthplace of Samir Bekrić and person born as Edin Dervišhalidović.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Edin Dervišhalidović""@en . <http://dbpedia.org/resource/Samir_Bekrić> <http://dbpedia.org/ontology/birthPlace> ?v3 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Senidah> . ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . }","```sparql
# Find the birthplace of Samir Bekrić
SELECT ?birthPlace WHERE {
  <http://dbpedia.org/resource/Samir_Bekrić> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
}

# Find a person who is native to that birthplace, a band member of Senidah, and known as Edin Dervišhalidović
SELECT DISTINCT ?person WHERE {
  # Person is native to the birthplace of Samir Bekrić
  ?person <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  
  # Person is a band member of Senidah
  ?person <http://dbpedia.org/ontology/memberOf> <http://dbpedia.org/resource/Senidah> .

  # Person is known as Edin Dervišhalidović
  OPTIONAL { ?person <http://www.w3.org/2000/01/rdf-schema#label> ""Edin Dervišhalidović""@en . }
  
  FILTER EXISTS {
    SELECT ?birthPlace WHERE {
      <http://dbpedia.org/resource/Samir_Bekrić> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
    }
  }
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
767,44,test,Give me the alma mater of the administration of George K. Nash and reference to the alter ego of Black Hood and entity in Baden-Württemberg.,SELECT ?result WHERE { <http://dbpedia.org/resource/Black_Hood> <http://dbpedia.org/property/alterEgo> ?v2 . ?v4 <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v4 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/George_K._Nash> . ?result <http://dbpedia.org/ontology/state> <http://dbpedia.org/resource/Baden-Württemberg> . },"```sparql
SELECT DISTINCT ?almaMater ?alterEgoEntity ?entityInBadenWurttemberg WHERE {
  # Alma mater of George K. Nash's administration
  <http://dbpedia.org/resource/George_K._Nash> <http://dbpedia.org/ontology/administration> ?administration .
  ?administration <http://dbpedia.org/ontology/almaMater> ?almaMater .

  # Alter ego of Black Hood
  <http://dbpedia.org/resource/Black_Hood> <http://dbpedia.org/ontology/alterEgo> ?alterEgoEntity .

  # Entity in Baden-Württemberg
  ?entityInBadenWurttemberg <http://www.w3.org/2000/01/rdf-schema#seeAlso> ?badenWurttembergResource .
  ?badenWurttembergResource <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Baden-Württemberg> .
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
994,56,test,"Give me the associated musical artist of the associated musical artist of Watchtower (band) and associated musical artist of Red Tide (band) and band member of the person born, that is a musical artist, as the persona of Don Dokken.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Red_Tide_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/birthName> ?v4 . <http://dbpedia.org/resource/Don_Dokken> <http://xmlns.com/foaf/0.1/givenName> ?v4 . <http://dbpedia.org/resource/Watchtower_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . },"```sparql
# Step 1: Find associated musical artist of Watchtower (band)
SELECT ?watchtowerArtist WHERE {
    <http://dbpedia.org/resource/Watchtower_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?watchtowerArtist .
}

# Step 2: Find associated musical artist of Red Tide (band)
SELECT ?redTideArtist WHERE {
    <http://dbpedia.org/resource/Red_Tide_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?redTideArtist .
}

# Step 3: Find common associated musical artist
SELECT DISTINCT ?commonArtist WHERE {
    ?watchtowerArtist <http://www.w3.org/2002/07/owl#sameAs> ?commonArtist .
    ?redTideArtist <http://www.w3.org/2002/07/owl#sameAs> ?commonArtist .
}

# Step 4: Find person born as persona of Don Dokken who is a band member
SELECT ?dokkenPerson WHERE {
    ?dokkenPerson <http://dbpedia.org/ontology/birthName> ""Don Dokken"" .
    ?dokkenPerson <http://dbpedia.org/ontology/memberOf> ?band .
}

# Step 5: Find associated musical artist of this person
SELECT ?finalArtist WHERE {
    ?dokkenPerson <http://dbpedia.org/ontology/associatedMusicalArtist> ?finalArtist .
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
488,64,test,"Give me the birth place of the commander in the war, that is a military conflict and an event and a societal event, of Saitō Hajime and administration of the father of the spouse, that is a royalty, of Tokugawa Masako and death place of Tokugawa Ieyasu.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v3 <http://dbpedia.org/ontology/commander> ?v2 . <http://dbpedia.org/resource/Saitō_Hajime> <http://dbpedia.org/ontology/battle> ?v3 . <http://dbpedia.org/resource/Tokugawa_Ieyasu> <http://dbpedia.org/ontology/deathPlace> ?result . ?v0 <http://dbpedia.org/property/father> ?v1 . ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Tokugawa_Masako> . ?result <http://dbpedia.org/property/leader> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
SELECT ?birthPlace WHERE {
  # Step 1: Identify the war
  ?war a dbo:MilitaryConflict ;
      a dbo:Event ;
      a dbo:SocietalEvent .

  # Step 2: Find the commander of Saitō Hajime in this war
  ?saitoHajimeCommander a dbo:Person ;
                        dbo:commanderOf ?war .
  
  # Step 3: Determine the birthplace of this commander
  ?saitoHajimeCommander dbo:birthPlace ?birthPlace .

  # Step 4: Identify Tokugawa Masako's spouse and their father's administration
  ?tokugawaMasako a dbo:Person ;
                  foaf:surname ""Tokugawa"" ;
                  dbo:spouse ?royalSpouse .
  
  ?royalSpouse a dbo:Royalty ;
               dbo:father ?royalFather .

  ?royalFather dbo:administers ?administration .

  # Step 5: Find the death place of Tokugawa Ieyasu
  ?tokugawaIeyasu a dbo:Person ;
                  foaf:surname ""Tokugawa"" ;
                  dbo:deathPlace ?deathPlace .
  
  FILTER(?birthPlace = ?deathPlace)
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
528,51,test,Give me the force of the person born as the birth name of Narciso Campero and war of the commander in Battle of La Rinconada de Ate.,SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/commander> ?v2 . ?v2 <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Narciso_Campero> <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Battle_of_La_Rinconada_de_Ate> <http://dbpedia.org/ontology/commander> ?v4 . },"```sparql
# Query 1: Force of Narciso Campero
SELECT ?force WHERE {
    <http://dbpedia.org/resource/Narciso_Campero> <http://www.w3.org/2000/01/rdf-schema#label> ""Narciso Campero""@en .
    OPTIONAL { 
        <http://dbpedia.org/resource/Narciso_Campero> <http://dbpedia.org/ontology/birthName> ?birthName .
    }
    ?person <http://www.w3.org/2000/01/rdf-schema#label> ?birthName .
    ?person <http://dbpedia.org/property/militaryForce> ?force .
}

# Query 2: War of the Commander in Battle of La Rinconada de Ate
SELECT ?war WHERE {
    <http://dbpedia.org/resource/Battle_of_La_Rinconada_de_Ate> <http://dbpedia.org/ontology/commander> ?commander .
    ?battle <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
    ?battle <http://dbpedia.org/ontology/battleOf> ?war .
}
```",5,5,6,3,2,3,3,71,0,0,2,0,0.0,0
92,24,test,"Give me the associated musical artist of the person born, that is an artist, as Jim Sheppard and band of Joseph Michael.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Joseph_Michael> . ?v2 <http://dbpedia.org/property/birthName> ""Jim Sheppard""@en . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
# Query for the associated musical artist of Jim Sheppard
SELECT ?artist WHERE {
  ?person <http://dbpedia.org/ontology/birthName> ""Jim Sheppard"" .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist> .
  OPTIONAL { ?person <http://dbpedia.org/ontology/associatedBand> ?artist . }
}

UNION

# Query for the band of Joseph Michael
SELECT ?band WHERE {
  ?person rdfs:label ""Joseph Michael""@en .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
  OPTIONAL { ?person <http://dbpedia.org/ontology/band> ?band . }
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
617,42,test,"Give me the child of the child, that is a royalty, of Seleucus II Callinicus and parent of the child of Antiochus (son of Antiochus III the Great) and spouse of Laodice IV.",SELECT ?result WHERE { <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/child> ?v1 . ?result <http://dbpedia.org/ontology/child> ?v1 . ?result <http://dbpedia.org/property/father> ?v2 . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seleucus_II_Callinicus> . <http://dbpedia.org/resource/Laodice_IV> <http://dbpedia.org/ontology/spouse> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
SELECT ?grandchild WHERE {
  ?parent <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Antiochus_III_the_Great#Antiochus_III_the_Great> .
  ?parent <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
  ?parent <http://dbpedia.org/property/spouse> <http://dbpedia.org/resource/Laodice_IV> .
  ?parent <http://dbpedia.org/ontology/child> ?antiochusSon .
  ?antiochusSon <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
  ?grandparent <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Seleucus_II_Callinicus> .
  ?grandparent <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
  ?grandparent <http://dbpedia.org/ontology/child> ?parent .
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
92,57,test,"Give me the associated musical artist of the person born, that is an artist, as the actor of Return to Nuke 'Em High Volume 1 and band member of Nevermore and band of the person born as Joseph Michael Furney.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Nevermore> . ?v5 <http://dbpedia.org/property/birthName> ?v0 . <http://dbpedia.org/resource/Return_to_Nuke_'Em_High_Volume_1> <http://dbpedia.org/property/starring> ?v0 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v3 <http://dbpedia.org/property/birthName> ""Joseph Michael Furney""@en . ?result <http://dbpedia.org/ontology/bandMember> ?v3 . }","```sparql
SELECT ?artist WHERE {
  # Step 1: Identify Joseph Michael Furney
  ?furney dbp:birthName ""Joseph Michael Furney"" .
  
  # Step 2: Find the band associated with Joseph Michael Furney
  ?band dbp:bandMember ?furney .
  
  # Step 3: Find the actor of ""Return to Nuke 'Em High Volume 1""
  ?actor dbo:actor <http://dbpedia.org/resource/Return_to_Nuke_%27Em_High_Volume_1> .
  
  # Step 4: Identify band Nevermore and its members
  ?nevermore dbp:name ""Nevermore"" .
  ?member dbp:bandMember ?nevermore .
  
  # Step 5: Find common musical artist between the bands or individuals identified
  OPTIONAL { ?band dbo:associatedBand ?artist . }
  OPTIONAL { ?member dbo:associatedBand ?artist . }
  FILTER(?artist != none)
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
92,35,test,"Give me the band of the person born as Joseph Michael Furney and band member of the reference, that is an artist, to Nevermore.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v1 <http://dbpedia.org/property/birthName> ""Joseph Michael Furney""@en . ?result <http://dbpedia.org/ontology/bandMember> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://xmlns.com/foaf/0.1/name> ""Nevermore""@en . }","```sparql
SELECT ?band ?reference WHERE {
  ?person <http://dbpedia.org/property/birthName> ""Joseph Michael Furney"" .
  ?person <http://dbpedia.org/ontology/memberOfBand> <http://dbpedia.org/resource/Nevermore_(band)> .
  ?person <http://dbpedia.org/ontology/memberOfBand> ?band .
  OPTIONAL { ?reference <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist> . 
             ?reference <http://dbpedia.org/property/referenceTo> <http://dbpedia.org/resource/Nevermore_(band)> .
             ?reference <http://dbpedia.org/property/person> ?person }
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
345,19,test,"Give me the team of the person born, that is a soccer player and a soccer manager, on the birth date of Eiður Guðjohnsen and figure known as the nickname of FC Vaduz.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/FC_Vaduz> <http://dbpedia.org/property/nickname> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v4 <http://dbpedia.org/ontology/birthDate> ?v0 . <http://dbpedia.org/resource/Eiður_Guðjohnsen> <http://dbpedia.org/ontology/birthDate> ?v0 . ?result <http://dbpedia.org/property/nickname> ?v2 . ?result <http://dbpedia.org/ontology/manager> ?v4 . },"```sparql
# Step 1: Get the birth date of Eiður Guðjohnsen
SELECT ?birthDate WHERE {
    <http://dbpedia.org/resource/Eiður_Guðjohnsen> <http://www.w3.org/2000/01/rdf-schema#seeAlso> ?birthDate .
}

# Step 2: Find individuals who are both soccer players and managers born on that date
SELECT DISTINCT ?person WHERE {
    ?person <http://dbpedia.org/ontology/birthDate> ?birthDate .
    ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer> .
    ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager> .
}

# Step 3: Get the nickname of FC Vaduz
SELECT ?nickname WHERE {
    <http://dbpedia.org/resource/FC_Vaduz> <http://dbpedia.org/property/nickname> ?nickname .
}

# Step 4: Find the team associated with these individuals using the nickname as a reference
SELECT DISTINCT ?team WHERE {
    ?person <http://dbpedia.org/ontology/team> ?team .
    ?team <http://dbpedia.org/property/nickname> ?nickname .
}
```",5,7,6,3,2,3,2,20,0,0,1,0,0.0,0
801,29,test,"Give me the associated musical artist of Chris Taylor (music producer) and producer of the work, that is a musical work and a song and a work, of 50 Cent and professional in .","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/50_Cent> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?result <http://dbpedia.org/property/occupation> """"@en . ?v3 <http://dbpedia.org/ontology/producer> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. <http://dbpedia.org/resource/Chris_Taylor_(music_producer)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
# Find the associated musical artist of Chris Taylor (music producer)
SELECT ?artist WHERE {
    <http://dbpedia.org/resource/Chris_Taylor_(music_producer)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?artist .
}

# Find a work that is a musical work, song, and work produced by 50 Cent where Chris Taylor is the producer
SELECT DISTINCT ?work WHERE {
    ?work <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork> .
    ?work <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song> .
    ?work <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work> .
    ?work <http://dbpedia.org/property/producer> <http://dbpedia.org/resource/50_Cent> .
    ?work <http://dbpedia.org/property/producer> <http://dbpedia.org/resource/Chris_Taylor_(music_producer)> .
}
```",4,7,5,2,3,3,3,71,0,0,1,0,0.0,0
184,69,test,"Give me the parent of the child of the parent of Archduchess Margaret of Austria (born 1925) and child of the child of Archduke Joseph Karl of Austria and parent of the native of the landmark at elevation, that is a settlement, of 96.0.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Margaret_of_Austria_(born_1925)> . ?v2 <http://dbpedia.org/property/father> ?v1 . ?v3 <http://dbpedia.org/ontology/birthPlace> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v7 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Karl_of_Austria> . ?result <http://dbpedia.org/property/father> ?v7 . ?v4 <http://dbpedia.org/ontology/elevation> ""96.0""^^<http://www.w3.org/2001/XMLSchema#double> . ?result <http://dbpedia.org/ontology/child> ?v3 . ?result <http://dbpedia.org/ontology/child> ?v2 . }","```sparql
# Step 1: Find Archduchess Margaret of Austria (born 1925) and her parent
SELECT ?margaret ?parentMargaret WHERE {
    ?margaret a dbo:Archduchess ;
             foaf:birthday ""1925-00-00""^^xsd:date ;
             dbo:parent ?parentMargaret .
}

# Step 2: Find the child of Archduchess Margaret's parent
SELECT ?childOfParent WHERE {
    ?parentMargaret dbo:child ?childOfParent .
}

# Step 3: Find Archduke Joseph Karl of Austria and his child
SELECT ?josephKarl ?childJosephKarl WHERE {
    ?josephKarl a dbo:Archduke ;
                foaf:name ""Joseph Karl of Austria"" ;
                dbo:child ?childJosephKarl .
}

# Step 4: Find the settlement at elevation 96.0 and its native
SELECT ?landmark ?native WHERE {
    ?landmark a dbo:Settlement ;
              dbo:elevation ""96.0""^^xsd:float ;
              dbo:native ?native .
}

# Step 5: Find the parent of the native person
SELECT ?parentNative WHERE {
    ?native dbo:parent ?parentNative .
}

# Final step: Combine to find the required relationships
SELECT DISTINCT ?finalResult WHERE {
    # Parent of the child of Archduchess Margaret's parent
    ?parentMargaret dbo:child ?intermediate1 .
    ?intermediate1 dbo:parent ?finalResult .

    UNION

    # Child of Archduke Joseph Karl's child
    ?childJosephKarl dbo:child ?finalResult .

    UNION

    # Parent of the native of the landmark
    ?native dbo:parent ?finalResult .
}
```",8,9,9,3,3,3,3,71,0,0,1,0,0.0,0
391,62,test,"Give me the native of the figure known as the nick name of Jackson, Tennessee and actor of the claim to fame, that is a work, of the spouse of Sherry Hormann and actor of All About the Andersons.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/nickname> ?v4 . ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . <http://dbpedia.org/resource/Jackson,_Tennessee> <http://xmlns.com/foaf/0.1/nick> ?v4 . ?v6 <http://dbpedia.org/ontology/starring> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/ontology/knownFor> ?v6 . <http://dbpedia.org/resource/Sherry_Hormann> <http://dbpedia.org/ontology/spouse> ?v0 . <http://dbpedia.org/resource/All_About_the_Andersons> <http://dbpedia.org/property/starring> ?result . }","```sparql
SELECT ?native WHERE {
  # Step 1: Find the nickname for Jackson, Tennessee
  ?jackson <http://dbpedia.org/ontology/nickName> ?nickname .
  FILTER (str(?jackson) = ""Jackson,_Tennessee"") .

  # Step 2: Find actors associated with this nickname
  ?actor <http://dbpedia.org/ontology/knownFor> ?work .
  ?work <http://www.w3.org/2000/01/rdf-schema#label> ?nicknameLabel .
  FILTER (str(?nicknameLabel) = str(?nickname)) .

  # Step 3: Get the claim to fame of Sherry Hormann's spouse
  ?sherryHormann <http://dbpedia.org/ontology/spouse> ?spouse .
  ?spouse <http://dbpedia.org/ontology/knownFor> ?claimToFameWork .
  FILTER (str(?claimToFameWork) = ""All About the Andersons"") .

  # Step 4: Identify an actor involved in both that work and ""All About the Andersons""
  ?actor2 <http://dbpedia.org/ontology/knownFor> ?work2 .
  ?work2 <http://www.w3.org/2000/01/rdf-schema#label> ?claimToFameLabel .
  FILTER (str(?claimToFameLabel) = str(?claimToFameWork)) .

  ?actor2 <http://dbpedia.org/ontology/knownFor> ?andersonsWork .
  ?andersonsWork <http://www.w3.org/2000/01/rdf-schema#label> ""All About the Andersons"" .

  # Step 5: Determine the native place of this actor
  ?actor2 <http://dbpedia.org/ontology/nativePlace> ?native .
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
391,45,test,"Give me the actor of the movie, that is a movie and a work and a television show, with the professional in  and native of Compton, California and actor of The Departed.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/occupation> """"@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Compton,_California> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://dbpedia.org/property/starring> ?v0 . ?v1 <http://dbpedia.org/property/starring> ?result . <http://dbpedia.org/resource/The_Departed> <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. }","```sparql
# Step 1: Identify the actor from Compton, California, who starred in ""The Departed""
SELECT ?actor WHERE {
    ?actor <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/United_States>.
    ?actor <http://dbpedia.org/ontology/placeOfBirth> <http://dbpedia.org/resource/Compton,_California>.
    ?actor <http://dbpedia.org/ontology/knownFor> <http://dbpedia.org/resource/The_Departed>.
}

# Step 2: Find movies that are categorized as a movie, work, and television show
SELECT DISTINCT ?movie WHERE {
    ?movie <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>.
    ?movie <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>.
    ?movie <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TVSeries>.
}

# Step 3: Determine which of these movies feature the identified actor
SELECT DISTINCT ?actor ?movie WHERE {
    VALUES ?actor { [URI_of_the_actor] } # Replace with actual URI from step 1
    ?actor <http://dbpedia.org/ontology/actedIn> ?movie.
    ?movie <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>.
    ?movie <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>.
    ?movie <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TVSeries>.
}
```",5,8,6,3,3,3,3,71,0,0,1,0,0.0,0
427,59,test,Give me the reference to the name of the party of Michele Pinto and party of the father of the alumnus of Massachusetts Institute of Technology.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Massachusetts_Institute_of_Technology> . ?v3 <http://xmlns.com/foaf/0.1/name> ?v2 . <http://dbpedia.org/resource/Michele_Pinto> <http://dbpedia.org/ontology/party> ?v3 . ?v5 <http://dbpedia.org/ontology/party> ?result . ?v0 <http://dbpedia.org/property/father> ?v5 . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . },"```sparql
SELECT ?party1 AS ?michelePintoParty, ?party2 AS ?fatherOfAlumnusParty WHERE {
  # Query for Michele Pinto's party
  <http://dbpedia.org/resource/Michele_Pinto> <http://dbpedia.org/ontology/party> ?party1 .

  UNION

  # Query for an alumnus of MIT, their father, and the father's party
  ?alumnus <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Alumnus> ;
           <http://dbpedia.org/property/almaMater> <http://dbpedia.org/resource/Massachusetts_Institute_of_Technology> .
  ?alumnus <http://dbpedia.org/ontology/father> ?father .
  ?father <http://dbpedia.org/ontology/party> ?party2
}
```",6,6,7,3,2,3,3,71,0,0,2,0,0.0,0
754,18,test,Give me the parent of the parent of the parent of Min Linka and parent of the child of Ram Khamhaeng.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v3 . <http://dbpedia.org/resource/Min_Linka> <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/Ram_Khamhaeng> <http://dbpedia.org/ontology/child> ?v3 . ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://dbpedia.org/ontology/parent> ?v2 . },"```sparql
# Step 1: Find Min Linka's parent
SELECT ?minLinkaParent WHERE {
    <http://dbpedia.org/resource/Min_Linka> <http://xmlns.com/foaf/0.1/family_name> ?minLinkaParent .
}

# Step 2: Find the grandparent of Min Linka
SELECT ?minLinkaGrandparent WHERE {
    ?minLinkaParent <http://xmlns.com/foaf/0.1/family_name> ?minLinkaGrandparent .
    { SELECT ?minLinkaParent WHERE {
        <http://dbpedia.org/resource/Min_Linka> <http://xmlns.com/foaf/0.1/family_name> ?minLinkaParent .
      }
    }
}

# Step 3: Find the great-grandparent of Min Linka
SELECT ?minLinkaGreatGrandparent WHERE {
    ?minLinkaGrandparent <http://xmlns.com/foaf/0.1/family_name> ?minLinkaGreatGrandparent .
    { SELECT ?minLinkaGrandparent WHERE {
        ?minLinkaParent <http://xmlns.com/foaf/0.1/family_name> ?minLinkaGrandparent .
        { SELECT ?minLinkaParent WHERE {
            <http://dbpedia.org/resource/Min_Linka> <http://xmlns.com/foaf/0.1/family_name> ?minLinkaParent .
          }
        }
      }
    }
}

# Step 4: Find Ram Khamhaeng's child
SELECT ?ramKhamhaengChild WHERE {
    <http://dbpedia.org/resource/Ram_Khamhaeng> <http://xmlns.com/foaf/0.1/family_name> ?ramKhamhaengChild .
}

# Step 5: Find the parent of Ram Khamhaeng's child
SELECT ?parentOfRamKhamhaengChild WHERE {
    ?ramKhamhaengChild <http://xmlns.com/foaf/0.1/family_name> ?parentOfRamKhamhaengChild .
    { SELECT ?ramKhamhaengChild WHERE {
        <http://dbpedia.org/resource/Ram_Khamhaeng> <http://xmlns.com/foaf/0.1/family_name> ?ramKhamhaengChild .
      }
    }
}

# Final Step: Find the common entity
SELECT DISTINCT ?commonEntity WHERE {
    { SELECT ?minLinkaGreatGrandparent WHERE {
        ?minLinkaGrandparent <http://xmlns.com/foaf/0.1/family_name> ?minLinkaGreatGrandparent .
        { SELECT ?minLinkaGrandparent WHERE {
            ?minLinkaParent <http://xmlns.com/foaf/0.1/family_name> ?minLinkaGrandparent .
            { SELECT ?minLinkaParent WHERE {
                <http://dbpedia.org/resource/Min_Linka> <http://xmlns.com/foaf/0.1/family_name> ?minLinkaParent .
              }
            }
          }
        }
      }
    }
    UNION
    { SELECT ?parentOfRamKhamhaengChild WHERE {
        ?ramKhamhaengChild <http://xmlns.com/foaf/0.1/family_name> ?parentOfRamKhamhaengChild .
        { SELECT ?ramKhamhaengChild WHERE {
            <http://dbpedia.org/resource/Ram_Khamhaeng> <http://xmlns.com/foaf/0.1/family_name> ?ramKhamhaengChild .
          }
        }
      }
    }
}
```",5,5,6,3,2,3,2,20,0,0,1,0,0.0,0
378,54,test,"Give me the war of the person born as Carl Pontus Gahn and claim to fame of Louis des Balbes de Berton de Crillon, 1st Duke of Mahón and war of the commander in the reference, that is a military conflict, to Peninsular War.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/birthName> ""Carl Pontus Gahn""@en . ?v0 <http://xmlns.com/foaf/0.1/name> ""Peninsular War""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/ontology/commander> ?v5 . ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v5 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Louis_des_Balbes_de_Berton_de_Crillon,_1st_Duke_of_Mahón> <http://dbpedia.org/ontology/knownFor> ?result . }","```sparql
SELECT DISTINCT ?war WHERE {
  # Part 1: War of Carl Pontus Gahn
  OPTIONAL {
    <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/ontology/battle> ?war .
    FILTER (?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>)
  }
  
  # Part 2: Claim to Fame of Louis des Balbes de Berton de Crillon, 1st Duke of Mahón
  OPTIONAL {
    <http://dbpedia.org/resource/Louis_des_Balbes_de_Berton_de_Crillon,_1st_Duke_of_Mahón> <http://dbpedia.org/ontology/knownFor> ?war .
    FILTER (?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> (<http://dbpedia.org/ontology/MilitaryConflict> || <http://dbpedia.org/ontology/Film>))
  }
  
  # Part 3: War of the Commander in Peninsular War
  OPTIONAL {
    <http://dbpedia.org/resource/Peninsular_War> <http://dbpedia.org/ontology/commander> ?commander .
    ?commander <http://dbpedia.org/ontology/battle> ?war .
    FILTER (?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>)
  }
}
```",6,7,7,3,3,3,3,71,0,0,2,0,0.0,0
701,65,test,Give me the parent of the child of the child of Seti I and spouse of the father of Merneptah and parent of the child of Nefertari.,SELECT ?result WHERE { <http://dbpedia.org/resource/Nefertari> <http://dbpedia.org/ontology/child> ?v4 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seti_I> . <http://dbpedia.org/resource/Merneptah> <http://dbpedia.org/property/father> ?v3 . ?result <http://dbpedia.org/ontology/spouse> ?v3 . ?v6 <http://dbpedia.org/property/father> ?v0 . ?v4 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/child> ?v6 . },"```sparql
SELECT ?parent WHERE {
  ?grandchild <http://dbpedia.org/ontology/birthParent> ?child .
  ?child <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/Seti_I> .
  
  ?merneptahFather <http://dbpedia.org/ontology/spouse> ?spouse .
  ?merneptahFather <http://dbpedia.org/property/name> ""Ramesses II"" .

  ?nephertariChild <http://dbpedia.org/ontology/birthParent> ?nephertari .
  ?nephertari <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Wife> .
  
  FILTER (?spouse = ?nephertari)
  
  ?grandchild <http://dbpedia.org/ontology/birthParent> ?parent .
}
```",7,7,8,3,3,3,3,71,0,0,1,0,0.0,0
783,18,test,"Give me the band member of the person born, that is an artist and a musical artist, as Priscilla Opoku-Kwarteng and associated musical artist of the band member of the person born as Samuel Ofori Amponsah.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://dbpedia.org/property/birthName> ""Priscilla Opoku-Kwarteng""@en . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://dbpedia.org/property/birthName> ""Samuel Ofori Amponsah""@en . }","```sparql
# Step 1: Find Priscilla Opoku-Kwarteng who is an artist and a musical artist
SELECT ?priscilla WHERE {
    ?priscilla <http://dbpedia.org/ontology/birthName> ""Priscilla Opoku-Kwarteng"" .
    ?priscilla <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist> .
    ?priscilla <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
}

# Step 2: Find band members associated with Priscilla Opoku-Kwarteng
SELECT DISTINCT ?bandMember WHERE {
    ?priscilla <http://dbpedia.org/ontology/bandMember> ?bandMember .
    FILTER(?priscilla IN {<URI_of_Priscilla_Opoku-Kwarteng>})
}

# Step 3: Find Samuel Ofori Amponsah who is an artist and a musical artist
SELECT ?samuel WHERE {
    ?samuel <http://dbpedia.org/ontology/birthName> ""Samuel Ofori Amponsah"" .
    ?samuel <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist> .
    ?samuel <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
}

# Step 4: Find band members associated with Samuel Ofori Amponsah
SELECT DISTINCT ?bandMember WHERE {
    ?samuel <http://dbpedia.org/ontology/bandMember> ?bandMember .
    FILTER(?samuel IN {<URI_of_Samuel_Ofori_Amponsah>})
}

# Step 5: Find common band members between Priscilla Opoku-Kwarteng and Samuel Ofori Amponsah
SELECT DISTINCT ?commonBandMember WHERE {
    ?priscilla <http://dbpedia.org/ontology/bandMember> ?commonBandMember .
    ?samuel <http://dbpedia.org/ontology/bandMember> ?commonBandMember .
    FILTER(?priscilla IN {<URI_of_Priscilla_Opoku-Kwarteng>})
    FILTER(?samuel IN {<URI_of_Samuel_Ofori_Amponsah>})
}
```

Note: Replace `<URI_of_Priscilla_Opoku-Kwarteng>` and `<URI_of_Samuel_Ofori_Amponsah>` with the actual URIs of these individuals from DBpedia.",5,7,6,3,2,3,2,20,0,0,1,0,0.0,0
959,57,test,"Give me the member of University of Tsukuba and native of the residence, that is a country, of the leader, that is a politician, of 2010 Japanese House of Councillors election and manager of the team of Takashi Sekizuka.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/manager> ?result . ?result <http://dbpedia.org/ontology/birthPlace> ?v4 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Takashi_Sekizuka> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/2010_Japanese_House_of_Councillors_election> <http://dbpedia.org/property/leader> ?v1 . ?result <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/University_of_Tsukuba> . ?v1 <http://dbpedia.org/property/residence> ?v4 . },"```sparql
SELECT ?member WHERE {
    # Step 1: Identify the leader who is a politician of the 2010 Japanese House of Councillors election.
    ?leader <http://dbpedia.org/ontology/politician> _:a .
    ?election <http://dbpedia.org/property/election> ""2010 Japanese House of Councillors election"" .
    ?election <http://dbpedia.org/ontology/leader> ?leader .

    # Step 2: Determine the residence (country) of this leader.
    ?leader <http://dbpedia.org/property/residence> ?residence .
    ?residence <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country> .

    # Step 3: Find the manager of the team associated with Takashi Sekizuka.
    <http://dbpedia.org/resource/Takashi_Sekizuka> <http://dbpedia.org/ontology/team> ?team .
    ?manager <http://dbpedia.org/ontology/team> ?team .

    # Step 4: Locate the university member from University of Tsukuba whose native place matches the country identified in step 2.
    ?member <http://dbpedia.org/ontology/memberOf> <http://dbpedia.org/resource/University_of_Tsukuba> .
    ?member <http://dbpedia.org/property/nativePlace> ?nativePlace .
    ?nativePlace <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country> .
    FILTER (?residence = ?nativePlace)
}
```",6,8,7,3,3,3,3,71,0,0,2,0,0.0,0
328,46,test,Give me the awardee of the award of the commander in Volcano and Ryukyu Islands campaign and commander in the force of Ferenc Szálasi.,SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Ferenc_Szálasi> . <http://dbpedia.org/resource/Volcano_and_Ryukyu_Islands_campaign> <http://dbpedia.org/ontology/commander> ?v2 . ?v4 <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/property/awards> ?v1 . ?v2 <http://dbpedia.org/property/awards> ?v1 . },"```sparql
# Step 1: Identify commanders in Volcano and Ryukyu Islands campaign
SELECT ?commander WHERE {
    ?campaign <http://dbpedia.org/ontology/commander> ?commander .
    FILTER(CONTAINS(LCASE(STR(?campaign)), ""volcano and ryukyu islands campaign""))
}

# Step 2: Find awards given by these commanders
SELECT DISTINCT ?award WHERE {
    ?commander <http://dbpedia.org/property/gaveAward> ?award .
}

# Step 3: Identify awardees of those awards
SELECT DISTINCT ?awardee WHERE {
    ?award <http://dbpedia.org/ontology/recipient> ?awardee .
}

# Step 4: Identify forces commanded by Ferenc Szálasi
SELECT ?force WHERE {
    <http://dbpedia.org/resource/Ferenc_Sz%C3%A1lasi> <http://dbpedia.org/ontology/commandedForce> ?force .
}

# Step 5: Determine awards given by him or his forces
SELECT DISTINCT ?award WHERE {
    ?force <http://dbpedia.org/property/gaveAward> ?award .
    UNION
    <http://dbpedia.org/resource/Ferenc_Sz%C3%A1lasi> <http://dbpedia.org/property/gaveAward> ?award .
}

# Step 6: Find common awardee(s)
SELECT DISTINCT ?commonAwardee WHERE {
    ?award1 <http://dbpedia.org/ontology/recipient> ?commonAwardee .
    ?award2 <http://dbpedia.org/ontology/recipient> ?commonAwardee .
    
    # Ensure award1 is from Volcano and Ryukyu Islands campaign commanders
    ?commander <http://dbpedia.org/property/gaveAward> ?award1 .
    FILTER(CONTAINS(LCASE(STR(?campaign)), ""volcano and ryukyu islands campaign""))
    ?campaign <http://dbpedia.org/ontology/commander> ?commander .

    # Ensure award2 is from Ferenc Szálasi or his forces
    {
        ?force <http://dbpedia.org/property/gaveAward> ?award2 .
        <http://dbpedia.org/resource/Ferenc_Sz%C3%A1lasi> <http://dbpedia.org/ontology/commandedForce> ?force .
    }
    UNION
    {
        <http://dbpedia.org/resource/Ferenc_Sz%C3%A1lasi> <http://dbpedia.org/property/gaveAward> ?award2 .
    }
}
```",5,5,6,3,2,3,3,71,0,0,5,0,0.0,0
404,66,test,"Give me the spouse of the person born, that is a royalty, as Princess Victoria Louise of Prussia and child of the father of the spouse of Princess Victoria Louise of Prussia and parent of the child, that is a royalty, of Ernest Augustus, Duke of Brunswick.","SELECT ?result WHERE { <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> ?v6 . <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/ontology/child> ?v6 . ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/birthName> ""Princess Victoria Louise of Prussia""@en . ?v1 <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/ontology/parent> ?v2 . }","```sparql
SELECT ?spouse WHERE {
  ?princess a dbo:Royalty ;
            foaf:name ""Princess Victoria Louise of Prussia"" ;
            dbo:birthPlace ?birthPlace ;
            dbo:father ?fatherOfPrincess .
  
  ?princess dbo:spouse ?spouse .

  ?spouse dbo:father ?fatherOfSpouse .

  ?child a dbo:Royalty ;
         dbo:parent ?fatherOfSpouse ;
         dbo:child ?ernestAugustus .

  ?ernestAugustus foaf:name ""Ernest Augustus, Duke of Brunswick"" .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
161,66,test,"Give me the commander in the force, that is an event, of the figure known as El Director and military force of the force, that is a societal event and an event and a military conflict, of Francisco Franco and military force of the force, that is a societal event and a military conflict, of Francisco Largo Caballero.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v6 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/commander> ?v1 . ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Franco> . ?v1 <http://xmlns.com/foaf/0.1/nick> ""El Director""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v6 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . }","```sparql
SELECT ?commander WHERE {
  # Step 1: Identify the figure known as ""El Director"" and find their military force.
  ?elDirector foaf:name ""El Director""@en .
  ?elDirector dbp:militaryForce ?force1 .

  # Step 2: Find the commander of that military force.
  ?force1 dbp:commander ?commander .

  # Step 3: Identify Francisco Franco's military force involved in a societal event and a military conflict.
  ?franco foaf:name ""Francisco Franco""@en .
  ?franco dbp:militaryForce ?force2 .
  ?force2 rdf:type dbo:MilitaryConflict .
  ?force2 rdf:type dbo:SocietalEvent .

  # Step 4: Identify Francisco Largo Caballero's military force involved in a societal event and a military conflict.
  ?caballero foaf:name ""Francisco Largo Caballero""@en .
  ?caballero dbp:militaryForce ?force3 .
  ?force3 rdf:type dbo:MilitaryConflict .
  ?force3 rdf:type dbo:SocietalEvent .

  # Step 5: Determine the common commander between these forces.
  ?force2 dbp:commander ?commander .
  ?force3 dbp:commander ?commander .
}
```",7,13,8,3,3,3,3,71,0,0,32,0,0.0,0
184,21,test,Give me the parent of Archduchess Ilona of Austria and parent of the native of Budapest.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v1 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Ilona_of_Austria> . ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Budapest> . },"```sparql
SELECT ?parent WHERE {
  # Get the parent of Archduchess Ilona of Austria
  <http://dbpedia.org/resource/Archduchess_Ilona_of_Austria> <http://dbpedia.org/ontology/father> ?father .
  UNION
  <http://dbpedia.org/resource/Archduchess_Ilona_of_Austria> <http://dbpedia.org/ontology/mother> ?mother .

  # Get individuals who are natives of Budapest
  ?native <http://www.w3.org/ns/prov#wasDerivedFrom> <http://dbpedia.org/resource/Budapest> .
  
  # Find a common entity that is both the parent and native of Budapest
  FILTER (?father = ?native || ?mother = ?native)
}
```",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
959,70,test,"Give me the native of the residence, that is a country, of the leader, that is a politician, of 2010 Japanese House of Councillors election and manager of the team of the manager, that is a sports manager, of 1998 Kashima Antlers season and member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of Eiji Ōtsuka.",SELECT ?result WHERE { <http://dbpedia.org/resource/1998_Kashima_Antlers_season> <http://dbpedia.org/ontology/manager> ?v5 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/ontology/manager> ?result . ?result <http://dbpedia.org/ontology/birthPlace> ?v6 . <http://dbpedia.org/resource/Eiji_Ōtsuka> <http://dbpedia.org/ontology/almaMater> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://dbpedia.org/property/residence> ?v6 . ?result <http://dbpedia.org/ontology/team> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. <http://dbpedia.org/resource/2010_Japanese_House_of_Councillors_election> <http://dbpedia.org/property/leader> ?v1 . ?v0 <http://dbpedia.org/ontology/manager> ?v5 . },"```sparql
SELECT ?nativeCountry WHERE {
    ?election dbpedia-owl:leader ?politician .
    FILTER EXISTS { ?election rdf:type <http://dbpedia.org/ontology/Election> . }
    FILTER regex(str(?election), ""2010 Japanese House of Councillors election"", ""i"") .

    ?politician dbo:nationality ?residenceCountry .
    
    ?kashimaSeason dbpedia-owl:manager ?sportsManager .
    FILTER EXISTS { ?kashimaSeason rdf:type <http://dbpedia.org/ontology/SportsTeam> . }
    FILTER regex(str(?kashimaSeason), ""1998 Kashima Antlers season"", ""i"") .

    ?team dbpedia-owl:manager ?teamManager .
    ?sportsManager dbo:managedTeam ?team .

    ?eijiAlmaMater rdf:type <http://dbpedia.org/ontology/Organisation> ;
                   rdf:type <http://dbpedia.org/ontology/EducationalOrganization> ;
                   rdf:type <http://dbpedia.org/ontology/University> .
    FILTER EXISTS { ?eijiAlmaMater dbo:country <http://dbpedia.org/resource/Japan> } .

    ?member dbpedia-owl:alumni ?eijiAlmaMater .

    ?politician dbpedia-owl:residenceLocation ?residenceCountry .
    
    ?nativeOf rdf:type <http://dbpedia.org/ontology/Country> ;
              rdfs:label ?nativeLabel .
    FILTER (str(?nativeLabel) = str(?residenceCountry)) .

    BIND(?residenceCountry AS ?nativeCountry)
}
```",8,15,9,3,3,3,3,71,0,0,2,0,0.0,0
547,49,test,Give me the resting place of the child of James Burton (property developer) and resting place of the awardee of the award of Gerald Graham.,SELECT ?result WHERE { <http://dbpedia.org/resource/James_Burton_(property_developer)> <http://dbpedia.org/ontology/child> ?v2 . <http://dbpedia.org/resource/Gerald_Graham> <http://dbpedia.org/property/awards> ?v0 . ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . ?v1 <http://dbpedia.org/property/awards> ?v0 . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
SELECT ?childRestingPlace ?awardeeRestingPlace WHERE {
  # Find the child of James Burton (property developer) and their resting place
  ?person a dbo:Person ;
          foaf:name ""James Burton"" ;
          dbo:occupation ""Property Developer"" .
  
  ?child dbo:parent ?person ;
         dbo:restingPlace ?childRestingPlace .

  # Find the awardee of an award associated with Gerald Graham and their resting place
  ?award a dbo:Award ;
         dbo:recipient ?awardee .
  
  ?gerald a dbo:Person ;
          foaf:name ""Gerald Graham"" .
  
  ?award dbo:associatedWith ?gerald .

  ?awardee dbo:restingPlace ?awardeeRestingPlace .
}
```",5,5,6,3,2,3,3,71,0,0,2,0,0.0,0
378,66,test,"Give me the war of the person born as Carl Pontus Gahn and war of the commander in Peninsular War and claim to fame of the commander in the war, that is a military conflict and a societal event and an event, of Thomas Trigge.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Peninsular_War> <http://dbpedia.org/ontology/commander> ?v6 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Thomas_Trigge> <http://dbpedia.org/ontology/battle> ?v1 . ?v3 <http://dbpedia.org/property/birthName> ""Carl Pontus Gahn""@en . ?v6 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/ontology/commander> ?v2 . ?v2 <http://dbpedia.org/ontology/knownFor> ?result . ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. }","```sparql
# Step 1: Find Carl Pontus Gahn's birth and associated wars
SELECT ?war WHERE {
    ?gahn dbpedia-owl:birthName ""Carl Pontus Gahn"" .
    ?gahn dbpedia-owl:knownFor ?war .
}

UNION

# Step 2: Find the commander in the Peninsular War and their associated wars
SELECT ?war WHERE {
    ?peninsularWar dbpedia-owl:commander ?commander .
    FILTER (str(?peninsularWar) = ""Peninsular_War"") .
    ?commander dbpedia-owl:knownFor ?war .
}

UNION

# Step 3: Find the claim to fame of the commander that is a military conflict, societal event, and general event
SELECT ?event WHERE {
    ?peninsularWar dbpedia-owl:commander ?commander .
    FILTER (str(?peninsularWar) = ""Peninsular_War"") .
    ?commander dbpedia-owl:knownFor ?event .
    ?event a <http://dbpedia.org/ontology/MilitaryConflict> .
    ?event a <http://dbpedia.org/ontology/SocietalEvent> .
    ?event a <http://dbpedia.org/ontology/Event> .
}

# Step 4: Find the war associated with Thomas Trigge that matches the criteria
SELECT ?war WHERE {
    ?trigge dbpedia-owl:knownFor ?war .
    FILTER (str(?trigge) = ""Thomas_Trigge"") .
    ?war a <http://dbpedia.org/ontology/MilitaryConflict> .
    ?war a <http://dbpedia.org/ontology/SocietalEvent> .
    ?war a <http://dbpedia.org/ontology/Event> .
}
```",7,10,8,3,3,3,3,71,0,0,2,0,0.0,0
9,56,test,"Give me the alma mater of Allen Hill (scientist) and figure known as the nickname of the entity, that is an organisation and an educational institution, in Northern Ireland and alma mater of the mayor, that is a politician, of Northern Ireland Forum.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/nickname> ?v1 . <http://dbpedia.org/resource/Northern_Ireland_Forum> <http://dbpedia.org/property/leader> ?v2 . ?v2 <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://dbpedia.org/property/nickname> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Northern_Ireland> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. <http://dbpedia.org/resource/Allen_Hill_(scientist)> <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
# Find the alma mater of Allen Hill (scientist)
SELECT ?almaMaterAllenHill WHERE {
  <http://dbpedia.org/resource/Allen_Hill_(scientist)> <http://dbpedia.org/ontology/almaMater> ?almaMaterAllenHill .
}

# Find the nickname of an organisation and educational institution in Northern Ireland
SELECT ?organisation ?nickname WHERE {
  ?organisation <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>.
  ?organisation <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>.
  ?organisation <http://dbpedia.org/property/country> <http://dbpedia.org/resource/Northern_Ireland>.
  OPTIONAL { ?organisation <http://xmlns.com/foaf/0.1/nick> ?nickname . }
}

# Find the alma mater of the mayor, a politician of the Northern Ireland Forum
SELECT ?almaMaterMayor WHERE {
  ?mayor <http://dbpedia.org/ontology/politician> true .
  ?mayor <http://dbpedia.org/property/memberOf> <http://dbpedia.org/resource/Northern_Ireland_Forum>.
  ?mayor <http://dbpedia.org/ontology/almaMater> ?almaMaterMayor .
}

# Combine the results to find a common alma mater or related entity
SELECT DISTINCT ?commonEntity WHERE {
  VALUES ?entity { ?almaMaterAllenHill ?organisation ?almaMaterMayor }
  ?entity <http://dbpedia.org/ontology/almaMater> ?commonEntity .
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
312,9,test,"Give me the entity in the administration, that is a settlement and a region and Italian and a state, of Democratic Party (Italy) and entity in the birthplace of Giorgio Grigolli.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. ?v1 <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Democratic_Party_(Italy)> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Giorgio_Grigolli> <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?result <http://dbpedia.org/ontology/province> ?v1 . },"```sparql
SELECT ?entity WHERE {
  ?entity <http://dbpedia.org/ontology/administrativeUnit> <http://dbpedia.org/resource/Democratic_Party_(Italy)> .
  ?entity <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement> .
  ?entity <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region> .
  ?entity <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/State> .
  ?entity <http://dbpedia.org/property/country> <http://dbpedia.org/resource/Italy> .

  OPTIONAL {
    <http://dbpedia.org/resource/Giorgio_Grigolli> <http://dbpedia.org/property/birthPlace> ?birthplace .
    ?birthplace <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement> .
    ?entity <http://dbpedia.org/resource/Giorgio_Grigolli> :birthPlace ?birthplace .
  }
}
```",4,8,5,2,2,2,2,9,0,0,587,0,0.0,0
232,69,test,"Give me the actor of the claim to fame, that is a film and a military conflict, of Sean Pertwee and child of the person born as the birth name of Jon Pertwee and native of the residence, that is a settlement and British, of the native, that is a politician and an office holder, of France.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/property/birthName> ?v4 . ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/property/residence> ?v2 . ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/France> . <http://dbpedia.org/resource/Sean_Pertwee> <http://dbpedia.org/ontology/knownFor> ?v7 . ?v3 <http://dbpedia.org/property/birthName> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v7 <http://dbpedia.org/ontology/starring> ?result . ?v3 <http://dbpedia.org/ontology/child> ?result . },"```sparql
# Step 1: Find Sean Pertwee's claim to fame that is both a film and a military conflict
SELECT ?filmConflict WHERE {
    ?filmConflict <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>.
    ?filmConflict <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>.
    <http://dbpedia.org/resource/Sean_Pertwee> <http://dbpedia.org/ontology/knownFor> ?filmConflict.
}

# Step 2: Find the actor of this film/military conflict
SELECT ?actor WHERE {
    ?filmConflict <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>.
    ?filmConflict <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>.
    <http://dbpedia.org/resource/Sean_Pertwee> <http://dbpedia.org/ontology/knownFor> ?filmConflict.
    ?filmConflict <http://dbpedia.org/ontology/starring> ?actor.
}

# Step 3: Find Jon Pertwee's birth name
SELECT ?birthName WHERE {
    <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/property/birthName> ?birthName.
}

# Step 4: Find the child of Jon Pertwee born with that birth name
SELECT ?child WHERE {
    ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>.
    ?child <http://dbpedia.org/property/birthName> ?birthName.
    ?child <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Jon_Pertwee>.
}

# Step 5: Find the British settlement where this person is native
SELECT ?settlement WHERE {
    ?settlement <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>.
    ?settlement <http://www.w3.org/2000/01/rdf-schema#label> ?label.
    FILTER(CONTAINS(LCASE(?label), ""british"")).
    ?child <http://dbpedia.org/property/nativePlace> ?settlement.
}

# Step 6: Find a French politician and office holder who is native to this settlement
SELECT ?politician WHERE {
    ?politician <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>.
    ?politician <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>.
    ?politician <http://dbpedia.org/property/nativePlace> ?settlement.
}

# Step 7: Find the residence of this French politician that is a settlement
SELECT ?residence WHERE {
    ?residence <http://www.w3.org/1999/02/22",8,14,9,3,3,3,3,71,0,0,1,0,0.0,0
391,70,test,"Give me the actor of the movie, that is a movie and a work and a television show, with the professional in  and native of the figure known as Hub City and actor of the claim to fame, that is a work, of the spouse of Sherry Hormann.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v3 <http://dbpedia.org/property/starring> ?result . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://dbpedia.org/property/nickname> ""Hub City""@en . ?result <http://dbpedia.org/ontology/birthPlace> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v7 <http://dbpedia.org/ontology/starring> ?result . ?v3 <http://dbpedia.org/property/starring> ?v1 . ?v0 <http://dbpedia.org/ontology/knownFor> ?v7 . ?v1 <http://dbpedia.org/property/occupation> """"@en . <http://dbpedia.org/resource/Sherry_Hormann> <http://dbpedia.org/ontology/spouse> ?v0 . }","```sparql
# Step 1: Find the spouse of Sherry Hormann
SELECT ?spouse WHERE {
    <http://dbpedia.org/resource/Sherry_Hormann> <http://xmlns.com/foaf/0.1/spouse> ?spouse .
}

# Step 2: Find the claim to fame (a work) of that spouse
SELECT ?work WHERE {
    ?spouse <http://dbpedia.org/ontology/knownFor> ?work .
    FILTER (?work <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>)
}

# Step 3: Determine who is an actor in that claim to fame
SELECT ?actor WHERE {
    ?work <http://dbpedia.org/ontology/starring> ?actor .
    FILTER (?actor <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Actor>)
}

# Step 4: Identify a figure known as Hub City and find their native place
SELECT ?nativePlace WHERE {
    ?figure <http://xmlns.com/foaf/0.1/knows> <http://dbpedia.org/resource/Hub_City> .
    ?figure <http://dbpedia.org/ontology/nativePlace> ?nativePlace .
}

# Step 5: Locate a professional associated with both the movie and this native place
SELECT ?professional WHERE {
    ?movie <http://dbpedia.org/property/professional> ?professional .
    ?movie <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Movie> .
    ?movie <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work> .
    ?movie <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow> .
    ?professional <http://dbpedia.org/property/nativePlace> ?nativePlace .
}

# Step 6: Identify the actor of a movie that fits all these criteria
SELECT ?actor WHERE {
    ?movie <http://dbpedia.org/ontology/starring> ?actor .
    FILTER (?actor <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Actor>)
}
```",8,12,9,3,3,3,3,71,0,0,1,0,0.0,0
161,28,test,"Give me the military force of Spanish Civil War and military force of the force, that is a societal event and an event and a military conflict, of Francisco Franco and commander in Biscay Campaign.",SELECT ?result WHERE { <http://dbpedia.org/resource/Biscay_Campaign> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Franco> . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
SELECT ?militaryForce WHERE {
  # Find the military force of the Spanish Civil War
  ?spanishCivilWar <http://dbpedia.org/ontology/militaryForce> ?militaryForce .
  
  FILTER(?spanishCivilWar = <http://dbpedia.org/resource/Spanish_Civil_War>) .

  # Find an event that is a societal event, an event, and a military conflict
  ?event <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
  ?event <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent> .
  ?event <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event> .

  # Ensure Francisco Franco was a commander in this event
  ?franco <http://dbpedia.org/property/commander> ?event .
  
  FILTER(?franco = <http://dbpedia.org/resource/Francisco_Franco>) .

  # Ensure the event involves the Biscay Campaign
  ?biscayCampaign <http://dbpedia.org/ontology/battle> ?event .

  FILTER(?biscayCampaign = <http://dbpedia.org/resource/Biscay_Campaign>) .

  # Find the military force of this event
  ?event <http://dbpedia.org/ontology/militaryForce> ?militaryForce .
}
```",4,7,5,2,3,3,3,71,0,0,3,0,0.0,0
783,20,test,"Give me the band member of the person born, that is an artist and a musical artist, as the persona of Ebony Reigns and associated musical artist of the band member of the person born as Samuel Ofori Amponsah.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v5 . <http://dbpedia.org/resource/Ebony_Reigns> <http://xmlns.com/foaf/0.1/givenName> ?v4 . ?v1 <http://dbpedia.org/property/birthName> ""Samuel Ofori Amponsah""@en . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v5 <http://dbpedia.org/property/birthName> ?v4 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
SELECT ?bandMember WHERE {
    # Step 1: Find Samuel Ofori Amponsah's birth details
    ?samuel a dbo:Person ;
            foaf:name ""Samuel Ofori Amponsah"" ;
            dbo:birthPlace ?birthPlace ;
            dbo:birthDate ?birthDate .

    # Step 2: Identify band members associated with Samuel Ofori Amponsah
    ?bandMember dbo:member ?samuel .

    # Step 3: Find the persona of Ebony Reigns and her birth details
    ?ebony a dbo:Person ;
           foaf:name ""Ebony Reigns"" ;
           dbo:birthPlace ?ebonyBirthPlace ;
           dbo:birthDate ?ebonyBirthDate .

    # Step 4: Identify artists who are both an artist and a musical artist, born as Ebony Reigns
    ?artist a dbo:Artist, dbo:MusicalArtist ;
            foaf:name ""Ebony Reigns"" ;
            dbo:birthPlace ?ebonyBirthPlace ;
            dbo:birthDate ?ebonyBirthDate .

    # Step 5: Find associated musical artists linked to the band members from step 2
    ?associatedArtist dbo:associatedWith ?bandMember .
}
```",6,8,7,3,2,3,2,20,0,0,1,0,0.0,0
281,64,test,"Give me the war of the awardee of the award of Jonathon Band and war of the profession, that is a military unit, of the professional, that is an office holder and a politician, in New Zealand Army and entity in Colony of New Zealand.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Colony_of_New_Zealand> . ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v2 <http://dbpedia.org/property/awards> ?v3 . ?v0 <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/New_Zealand_Army> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Jonathon_Band> <http://dbpedia.org/property/awards> ?v3 . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/property/occupation> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
# Step 1: Find the award received by Jonathon Band
SELECT ?award WHERE {
    <http://dbpedia.org/resource/Jonathon_Band> <http://dbpedia.org/ontology/awards> ?award .
}

# Step 2: Find the war associated with that award
SELECT ?war WHERE {
    ?award <http://dbpedia.org/property/war> ?war .
    FILTER(?award = ?awardFromStep1)
}

# Step 3: Identify a military unit and its profession
SELECT ?unit ?profession WHERE {
    ?unit <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit> .
    ?unit <http://dbpedia.org/property/profession> ?profession .
}

# Step 4: Find an office holder who is a politician in the New Zealand Army
SELECT ?person WHERE {
    ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder> .
    ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .
    ?person <http://dbpedia.org/property/militaryService> <http://dbpedia.org/resource/New_Zealand_Army> .
}

# Step 5: Find the war associated with that professional's role
SELECT ?war WHERE {
    ?person <http://dbpedia.org/ontology/battle> ?war .
    FILTER(?person = ?personFromStep4)
}

# Step 6: Identify an entity in the Colony of New Zealand
SELECT ?entity WHERE {
    ?entity <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?type .
    ?entity <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Colony_of_New_Zealand> .
}

# Combine the wars from steps 2 and 5
SELECT DISTINCT ?war WHERE {
    VALUES ?war { ?warFromStep2 ?warFromStep5 }
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
801,50,test,"Give me the associated musical artist of the writer, that is a musical artist and an artist, of 40 Dayz & 40 Nightz and producer of the work, that is a musical work and a song and a work, of the professional, that is a musical artist, in Rapper.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/writer> ?v0 . ?v4 <http://dbpedia.org/ontology/producer> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/40_Dayz_&_40_Nightz> <http://dbpedia.org/property/writer> ?v3 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v0 <http://dbpedia.org/property/occupation> ""Rapper""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
SELECT ?writer ?associatedArtist WHERE {
  ?album rdf:type dbo:Album .
  ?album dbo:title ""40 Dayz & 40 Nightz"" .
  
  ?album dbo:creator ?writer .
  ?writer rdf:type dbo:MusicalArtist, dbo:Artist .

  ?song dbo:work ?album .
  ?song rdf:type dbo:MusicalWork, dbo:Song, dbo:Work .

  ?producer dbo:profession dbo:Rapper .
  ?producer dbo:produced ?song .

  ?writer dbo:associatedMusicalArtist ?associatedArtist .
}
```",5,11,6,3,2,3,3,71,0,0,9,0,0.0,0
435,20,test,"Give me the work of Article 62, Section IV of Constitution of Iceland and territory administered from Reykjavík and region of the time zone in Bombali Shebora Chiefdom.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Reykjavík> . ?result <http://dbpedia.org/ontology/timeZone> ?v3 . ?result <http://dbpedia.org/property/author> ""Article 62, Section IV of Constitution of Iceland""@en . <http://dbpedia.org/resource/Bombali_Shebora_Chiefdom> <http://dbpedia.org/ontology/timeZone> ?v3 . }","```sparql
SELECT ?result WHERE {
  # Condition for Article 62, Section IV of Constitution of Iceland
  ?article <http://dbpedia.org/ontology/work> ?result .
  FILTER(STRSTARTS(LCASE(?article), ""article 62 section iv of constitution of iceland""))

  UNION

  # Condition for territory administered from Reykjavík
  ?territory <http://dbpedia.org/ontology/administrativeCapital> <http://dbpedia.org/resource/Reykjavík> .
  ?territory <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Territory> .
  ?territory <http://dbpedia.org/ontology/work> ?result .

  UNION

  # Condition for region of the time zone in Bombali Shebora Chiefdom
  ?chiefdom <http://dbpedia.org/property/timeZone> ?timeZone .
  FILTER(STRSTARTS(LCASE(?chiefdom), ""bombali shebora chiefdom""))
  ?region <http://dbpedia.org/ontology/timeZone> ?timeZone .
  ?region <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region> .
  ?region <http://dbpedia.org/ontology/work> ?result .
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
232,64,test,"Give me the actor of Dog Soldiers (film) and native of the residence, that is a settlement and British, of the native, that is a politician and an office holder, of France and child of the person born as the birth name of Jon Pertwee.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/property/birthName> ?v3 . ?v0 <http://dbpedia.org/property/residence> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v2 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Dog_Soldiers_(film)> <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/France> . ?v2 <http://dbpedia.org/property/birthName> ?v3 . },"```sparql
SELECT ?actor WHERE {
  # Step 1: Identify Jon Pertwee
  ?jonPertwee a dbo:Person ;
              foaf:name ""Jon Pertwee""@en .

  # Step 2: Find his child who is a politician and office holder in France
  ?child dbp:parent ?jonPertwee ;
         a dbo:Politician, dbo:OfficeHolder ;
         dbo:nationality dbr:France .

  # Step 3: Determine the native residence that is British
  ?residence dbo:type dbr:Settlement ;
             dbo:country dbr:United_Kingdom ;
             dbo:nativeOf ?child .

  # Step 4: Find the actor of ""Dog Soldiers"" who is native to this settlement
  ?actor dbo:birthPlace ?residence ;
         dbo:actedIn dbr:Dog_Soldiers_(film) .
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
232,49,test,"Give me the child of the person born as John Devon Roland Pertwee and native of the residence, that is a settlement and British, of the native, that is a politician and an office holder, of France.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/France> . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/residence> ?v1 . ?v2 <http://dbpedia.org/property/birthName> ""John Devon Roland Pertwee""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v2 <http://dbpedia.org/ontology/child> ?result . }","```sparql
SELECT ?child WHERE {
  # Step 1: Identify John Devon Roland Pertwee
  ?person a dbo:Person ;
          foaf:name ""John Devon Roland Pertwee"" ;
          dbp:birthName ""John Devon Roland Pertwee"" .

  # Step 2: Determine his native residence, ensuring it is a settlement and British
  ?person dbo:nativePlace ?residence .
  ?residence a dbo:Settlement ;
             dbo:country dbr:United_Kingdom .

  # Step 3: Find the politician and office holder from France who is native to this residence
  ?politician a dbo:Politician, dbo:OfficeHolder ;
              foaf:nativePlace ?residence ;
              dbo:country dbr:France .

  # Step 4: Get the child of John Devon Roland Pertwee
  ?person dbo:child ?child .
}
```",5,9,6,3,2,3,3,71,0,0,1,0,0.0,0
701,50,test,Give me the parent of the child of the child of Seti I and spouse of the father of Merneptah.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v3 . <http://dbpedia.org/resource/Merneptah> <http://dbpedia.org/property/father> ?v3 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seti_I> . ?result <http://dbpedia.org/ontology/child> ?v4 . ?v4 <http://dbpedia.org/property/father> ?v0 . },"```sparql
# Step 1: Identify Seti I's child (Ramesses II)
SELECT ?ramesses2 WHERE {
    <http://dbpedia.org/resource/Seti_I> <http://dbpedia.org/ontology/child> ?ramesses2 .
}

# Step 2: Determine the grandchild of Seti I
SELECT ?grandchild WHERE {
    ?ramesses2 <http://dbpedia.org/ontology/child> ?grandchild .
}

# Step 3: Find out who is the parent of this grandchild (Ramesses II or his wife)
SELECT DISTINCT ?parent WHERE {
    ?grandchild <http://dbpedia.org/ontology/parent> ?parent .
}

# Step 4: Identify Merneptah's father
SELECT ?ramesses2 WHERE {
    <http://dbpedia.org/resource/Merneptah> <http://dbpedia.org/ontology/father> ?ramesses2 .
}

# Step 5: Determine the spouse of Ramesses II
SELECT DISTINCT ?spouse WHERE {
    ?ramesses2 <http://dbpedia.org/property/spouse> ?spouse .
}
```",5,5,6,3,2,3,3,71,0,0,2,0,0.0,0
328,47,test,"Give me the awardee of the award of Bruce Fraser, 1st Baron Fraser of North Cape and commander in the force of the person decedent at Budapest.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/commander> ?v0 . ?result <http://dbpedia.org/property/awards> ?v2 . ?v4 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape> <http://dbpedia.org/property/awards> ?v2 . ?v0 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Budapest> . }","```sparql
# Step 1: Get the award received by Bruce Fraser, 1st Baron Fraser of North Cape
SELECT ?award WHERE {
    <http://dbpedia.org/resource/Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape> dbo:awarded <http://dbpedia.org/ontology/Award> ?award .
}

# Step 2: Find other awardees of the same award
SELECT DISTINCT ?otherAwardee WHERE {
    ?otherAwardee dbo:awarded ?award .
    FILTER(?otherAwardee != <http://dbpedia.org/resource/Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape>)
}

# Step 3: Determine the force commanded by Bruce Fraser in Budapest
SELECT ?force WHERE {
    <http://dbpedia.org/resource/Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape> dbo:commanderOf ?v1 .
    ?v1 dbo:eventLocation ""Budapest"" .
}

# Step 4: Identify deceased individuals related to this force
SELECT DISTINCT ?decedent WHERE {
    ?force dbo:member ?person .
    ?person dbo:dateOfDeath ?deathDate .
    FILTER(?deathDate != """")
}
```",5,5,6,3,2,3,3,71,0,0,5,0,0.0,0
747,66,test,Give me the band of the person born as the persona of Shèna and band of the writer of Apollo (Hardwell song) and person born on the birth date of Pavlo Khudzik.,SELECT ?result WHERE { ?v6 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/birthDate> ?v3 . <http://dbpedia.org/resource/Apollo_(Hardwell_song)> <http://dbpedia.org/property/writer> ?v6 . ?v2 <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Shèna> <http://xmlns.com/foaf/0.1/givenName> ?v1 . <http://dbpedia.org/resource/Pavlo_Khudzik> <http://dbpedia.org/ontology/birthDate> ?v3 . },"```sparql
SELECT DISTINCT ?band WHERE {
  # Part 1: Band of the person known as Shèna
  { 
    ?person rdfs:label ""Shèna""@en.
    ?person dbo:band ?band.
  }
  
  UNION
  
  # Part 2: Band of the writer of Apollo (Hardwell song)
  {
    ?song dbo:lyricsBy ?writer.
    ?song dbo:title ""Apollo""^^xsd:string.
    ?song dbo:artist <http://dbpedia.org/resource/Hardwell>.
    ?writer dbo:band ?band.
  }
  
  UNION
  
  # Part 3: Band of the person born on the same date as Pavlo Khudzik
  {
    ?person dbo:birthDate ?date.
    ?khudzik dbo:birthDate ?date.
    ?khudzik rdfs:label ""Pavlo Khudzik""@en.
    ?person dbo:band ?band.
  }
}
```",7,7,8,3,3,3,3,71,0,0,1,0,0.0,0
492,64,test,"Give me the person decedent at the work of the author of French Algeria and person decedent at the capital, that is a settlement, of the country of Khemis Miliana District and commander in Franco-Hova Wars.",SELECT ?result WHERE { <http://dbpedia.org/resource/Khemis_Miliana_District> <http://dbpedia.org/ontology/country> ?v0 . ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . ?v0 <http://dbpedia.org/ontology/capital> ?v1 . <http://dbpedia.org/resource/French_Algeria> <http://dbpedia.org/property/author> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . ?v2 <http://dbpedia.org/property/author> ?v3 . <http://dbpedia.org/resource/Franco-Hova_Wars> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT ?personDecedent WHERE {
  # Part 1: Author of ""French Algeria""
  ?author dbo:work <http://dbpedia.org/resource/French_Algeria> .
  
  # Person decedent at the work of the author
  ?author dbo:deathPlace ?deceasedWork .
  ?deceasedWork dbp:personDecedent ?personDecedent1 .

  UNION

  # Part 2: Capital city of Khemis Miliana District and its person decedent
  <http://dbpedia.org/resource/Khemis_Miliana_District> dbo:capital ?capitalCity .
  ?capitalCity dbp:country <http://dbpedia.org/resource/Algeria> .
  ?capitalCity dbp:personDecedent ?personDecedent2 .

  UNION

  # Part 3: Commander in Franco-Hova Wars
  ?commander dbo:commanderInBattle <http://dbpedia.org/resource/Franco-Hova_Wars> .
  ?commander dbp:deathPlace ?deceasedCommander .
  ?deceasedCommander dbp:personDecedent ?personDecedent3 .

  # Find common person decedents
  FILTER(?personDecedent1 = ?personDecedent2 || ?personDecedent1 = ?personDecedent3 || ?personDecedent2 = ?personDecedent3)
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
184,53,test,"Give me the child of Archduke Joseph August of Austria and parent of the native of the landmark at elevation, that is a settlement, of 96.0 and parent of the child of Archduke Joseph Francis of Austria.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v1 . ?result <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_August_of_Austria> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Francis_of_Austria> . ?v3 <http://dbpedia.org/ontology/elevation> ""96.0""^^<http://www.w3.org/2001/XMLSchema#double> . ?v2 <http://dbpedia.org/ontology/birthPlace> ?v3 . }","```sparql
SELECT ?child1 ?parent ?child2 WHERE {
  # Step 1: Find the child of Archduke Joseph August of Austria
  <http://dbpedia.org/resource/Archduke_Joseph_August_of_Austria> <http://dbpedia.org/ontology/child> ?child1 .

  # Step 2: Find a landmark that is a settlement at an elevation of 96.0 meters and its native's parent
  ?landmark <http://www.w3.org/2000/01/rdf-schema#label> ?name .
  ?landmark <http://dbpedia.org/ontology/elevation> ""96.0""^^xsd:float .
  ?landmark <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement> .
  ?native <http://dbpedia.org/property/nativePlace> ?landmark .
  ?native <http://dbpedia.org/ontology/birthParent> ?parent .

  # Step 3: Find the child of Archduke Joseph Francis of Austria
  <http://dbpedia.org/resource/Archduke_Joseph_Francis_of_Austria> <http://dbpedia.org/ontology/child> ?child2 .

  # Combine conditions to find the common entity
  FILTER(?child1 = ?parent)
  FILTER(?parent = ?child2)
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
701,31,test,Give me the parent of the child of the spouse of Amun-her-khepeshef and parent of Henuttawy (19th dynasty).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Henuttawy_(19th_dynasty)> . ?v0 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Amun-her-khepeshef> <http://dbpedia.org/ontology/spouse> ?v1 . ?v1 <http://dbpedia.org/ontology/child> ?v0 . },"```sparql
# Step 1: Get Amun-her-khepeshef's spouse
SELECT ?spouse WHERE {
    <http://dbpedia.org/resource/Amun-her-khepeshef> <http://dbpedia.org/ontology/spouse> ?spouse .
}

# Step 2: Find the children of that spouse
SELECT ?child WHERE {
    ?spouse <http://dbpedia.org/ontology/child> ?child .
}

# Step 3: Get the parent(s) of those children
SELECT ?parent WHERE {
    ?child <http://dbpedia.org/ontology/parent> ?parent .
}

# Step 4: Identify Henuttawy (19th dynasty) and find her parents
SELECT ?henuttawyParent WHERE {
    <http://dbpedia.org/resource/Henuttawy_(19th_dynasty)> <http://dbpedia.org/ontology/parent> ?henuttawyParent .
}

# Step 5: Find the common parent between results from steps 3 and 4
SELECT DISTINCT ?commonParent WHERE {
    { ?child <http://dbpedia.org/ontology/parent> ?commonParent . }
    UNION
    { <http://dbpedia.org/resource/Henuttawy_(19th_dynasty)> <http://dbpedia.org/ontology/parent> ?commonParent . }
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
328,50,test,"Give me the commander in the force of the person decedent at Budapest and leader of the office, that is a government agency, of Joseph Stalin.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Budapest> . ?v4 <http://dbpedia.org/ontology/commander> ?v0 . ?v4 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v3 <http://dbpedia.org/ontology/leader> ?result . <http://dbpedia.org/resource/Joseph_Stalin> <http://dbpedia.org/property/office> ?v3 . },"```sparql
SELECT ?commander WHERE {
  ?person <http://dbpedia.org/ontology/decedentAt> <http://dbpedia.org/resource/Budapest>.
  ?force <http://dbpedia.org/property/commander> ?commander.
  ?person <http://dbpedia.org/ontology/memberOfForce> ?force.
  
  ?office <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>.
  ?office <http://dbpedia.org/property/leader> ?commander.
  ?stalin <http://dbpedia.org/ontology/leaderOfOffice> ?office.
  
  ?stalin <http://dbpedia.org/resource/Joseph_Stalin>.
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
179,19,test,Give me the parent of the child of the parent of Vajiralongkorn and person born as the birth name of Sirikit.,SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Sirikit> <http://dbpedia.org/property/birthName> ?v2 . ?v0 <http://dbpedia.org/ontology/child> ?v4 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Vajiralongkorn> . ?result <http://dbpedia.org/property/birthName> ?v2 . },"```sparql
SELECT ?parentOfParent
WHERE {
  # Step 1: Find Vajiralongkorn's parent
  ?vajiralongkorn <http://dbpedia.org/ontology/birthName> ""Vajiralongkorn"" .
  
  # Step 2: Get the child of that parent (which is Vajiralongkorn)
  ?parentOfParent <http://dbpedia.org/ontology/child> ?vajiralongkorn .

  # Step 3: Identify Sirikit by her birth name
  ?sirikit <http://dbpedia.org/ontology/birthName> ""Sirikit"" .
  
  # Ensure Sirikit is a person (optional, for clarity)
  ?sirikit a <http://dbpedia.org/ontology/Person> .

  # Step 4: Find the parent of Vajiralongkorn
}
```",5,5,6,3,2,3,2,20,0,0,1,0,0.0,0
77,18,test,Give me the force of the mayor of Congress Poland and war of the awardee of the award of Maxim Grigorievich Vlasov.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> ?v3 . ?v2 <http://dbpedia.org/property/awards> ?v1 . <http://dbpedia.org/resource/Congress_Poland> <http://dbpedia.org/property/leader> ?v3 . <http://dbpedia.org/resource/Maxim_Grigorievich_Vlasov> <http://dbpedia.org/property/awards> ?v1 . ?v2 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
# Query to get the force of the mayor of Congress Poland
SELECT ?force WHERE {
  ?mayor <http://dbpedia.org/ontology/mayor> <http://dbpedia.org/resource/Congress_Poland>.
  ?mayor <http://dbpedia.org/ontology/memberOf> ?force.
}

# Query to get the war related to the awardee of Maxim Grigorievich Vlasov's award
SELECT ?war WHERE {
  <http://dbpedia.org/resource/Maxim_Grigorievich_Vlasov> <http://dbpedia.org/ontology/award> ?award.
  ?awardee <http://dbpedia.org/ontology/award> ?award.
  ?awardee <http://dbpedia.org/ontology/battle> ?war.
}
```",5,5,6,3,2,3,2,20,0,0,24,0,0.0,0
303,20,test,"Give me the entity in the country, that is a country, of El Valle de Antón and party of Guillermo Endara and party of Arnulfo Arias.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/El_Valle_de_Antón> <http://dbpedia.org/ontology/country> ?v3 . <http://dbpedia.org/resource/Arnulfo_Arias> <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Guillermo_Endara> <http://dbpedia.org/ontology/party> ?result . },"```sparql
# Step 1: Find the country of El Valle de Antón
SELECT ?country WHERE {
    <http://dbpedia.org/resource/El_Valle_de_Antón> <http://www.w3.org/2000/01/rdf-schema#seeAlso> ?country .
}

# Step 2: Find political parties associated with Guillermo Endara and Arnulfo Arias in that country
SELECT DISTINCT ?party WHERE {
    # Assuming we found the country URI from step 1, replace <Country_URI> with the actual URI
    OPTIONAL { 
        <http://dbpedia.org/resource/Guillermo_Endara> <http://dbpedia.org/ontology/party> ?party .
    }
    OPTIONAL { 
        <http://dbpedia.org/resource/Arnulfo_Arias> <http://dbpedia.org/ontology/party> ?party .
    }
    FILTER(?country = <Country_URI>) # Replace <Country_URI> with the actual country URI found in step 1
}
```",4,5,5,2,3,2,3,28,0,0,1,0,0.0,0
959,24,test,"Give me the native of the residence, that is a country, of Yōichi Masuzoe and manager of 2013 Júbilo Iwata season.",SELECT ?result WHERE { <http://dbpedia.org/resource/Yōichi_Masuzoe> <http://dbpedia.org/property/residence> ?v2 . ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . <http://dbpedia.org/resource/2013_Júbilo_Iwata_season> <http://dbpedia.org/ontology/manager> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
# Step 1: Get Yōichi Masuzoe's residence that is a country
SELECT ?residence WHERE {
    <http://dbpedia.org/resource/Y%C5%8Dichi_Masuzoe> <http://dbpedia.org/property/residence> ?residence .
    ?residence <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country> .
}

# Step 2: Get the manager of the 2013 Júbilo Iwata season
SELECT ?manager WHERE {
    <http://dbpedia.org/resource/2013_J%C5%ABbilo_Iwata_season> <http://dbpedia.org/property/teamManager> ?manager .
}

# Step 3: Find the native place of this manager
SELECT ?nativePlace WHERE {
    ?manager <http://dbpedia.org/ontology/nativePlace> ?nativePlace .
}
```",3,4,4,2,2,3,3,71,0,0,3,0,0.0,0
617,64,test,"Give me the child of the child, that is a royalty, of the successor, that is a royalty, of Antiochus II Theos and spouse of Laodice IV and parent of the child of the commander in Battle of Panium.",SELECT ?result WHERE { <http://dbpedia.org/resource/Antiochus_II_Theos> <http://dbpedia.org/ontology/successor> ?v3 . ?result <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/ontology/child> ?v1 . ?v0 <http://dbpedia.org/ontology/child> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Laodice_IV> <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Battle_of_Panium> <http://dbpedia.org/ontology/commander> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/father> ?v3 . },"```sparql
SELECT ?finalAnswer WHERE {
  # Step 1: Find Antiochus II Theos's successor who is a royalty
  ?successor <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Antiochus_II_Theos> .
  ?successor <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .

  # Step 2: Find the spouse of Laodice IV who is a royalty and related to the successor
  ?spouse <http://dbpedia.org/property/spouse> <http://dbpedia.org/resource/Laodice_IV> .
  ?spouse <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
  ?spouse <http://dbpedia.org/property/spouse> ?successor .

  # Step 3: Find the child of the commander in Battle of Panium
  ?battle <http://dbpedia.org/resource/Battle_of_Panium> .
  ?commander <http://dbpedia.org/ontology/commander> ?battle .
  ?child <http://dbpedia.org/property/parent> ?commander .

  # Step 4: Find the parent of the child found in step 3
  ?finalAnswer <http://dbpedia.org/property/parent> ?child .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
281,59,test,"Give me the entity in the birth place, that is a country, of the leader, that is a politician, of 1962 New South Wales state election and war of the awardee of the award of Jonathon Band.",SELECT ?result WHERE { <http://dbpedia.org/resource/1962_New_South_Wales_state_election> <http://dbpedia.org/property/leader> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/place> ?v5 . <http://dbpedia.org/resource/Jonathon_Band> <http://dbpedia.org/property/awards> ?v3 . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/ontology/birthPlace> ?v5 . ?v2 <http://dbpedia.org/property/awards> ?v3 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
SELECT ?entity WHERE {
  # Step 1: Find the leader (politician) of the 1962 New South Wales state election
  ?election dbpedia-owl:leader ?politician .
  FILTER(?election = dbpedia:1962_New_South_Wales_state_election) .

  # Step 2: Determine the birthplace country of that politician
  ?politician dbo:birthPlace ?birthPlace .
  ?birthPlace dbo:country ?country .

  # Step 3: Identify the award received by Jonathon Band and any wars associated with it
  dbpedia:Jonathon_Band dbo:award ?award .
  ?award dbo:war ?war .

  # Step 4: Find entities in the birthplace country
  ?entity dbo:country ?country .
}
```",6,8,7,3,2,3,3,71,0,0,1,0,0.0,0
963,20,test,"Give me the administration of the ruling party, that is a political party, in the location for 21205 and entity in the region, that is a country, of the time zone of Herzegovina-Neretva Canton.","SELECT ?result WHERE { <http://dbpedia.org/resource/Herzegovina-Neretva_Canton> <http://dbpedia.org/property/timeZone> ?v1 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v2 <http://dbpedia.org/property/timeZone> ?v1 . ?result <http://dbpedia.org/ontology/country> ?v2 . ?v4 <http://dbpedia.org/property/leaderParty> ?v5 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/property/leaderParty> ?v5 . ?v4 <http://dbpedia.org/ontology/postalCode> ""21205"" . }","```sparql
SELECT ?administration WHERE {
  # Step 1: Find Herzegovina-Neretva Canton's time zone
  <http://dbpedia.org/resource/Herzegovina-Neretva_Canton> <http://www.w3.org/2006/time#during> ?timeZone .

  # Step 2: Identify the country in this time zone
  ?country <http://www.w3.org/2006/time#hasTimezone> ?timeZone .
  
  # Step 3: Ensure it's a country entity
  ?country rdf:type <http://dbpedia.org/class/yago/Country108069068> .

  # Step 4: Find the location for postal code 21205
  ?location <http://www.w3.org/2006/time#during> ?postalCode .
  FILTER(STR(?postalCode) = ""21205"")

  # Step 5: Identify ruling party in this location
  ?rulingParty <http://dbpedia.org/ontology/rulingParty> ?location .

  # Ensure it's a political party
  ?rulingParty rdf:type <http://dbpedia.org/class/yago/PoliticalParty108069068> .

  # Step 6: Find the administration of this ruling party
  ?administration <http://dbpedia.org/ontology/administration> ?rulingParty .
}
```",6,8,7,3,2,3,2,20,0,0,84,0,0.0,0
328,42,test,"Give me the commander in Eastern Front (World War II) and leader of the office, that is a government agency, of Joseph Stalin and awardee of the award of Bruce Fraser, 1st Baron Fraser of North Cape.","SELECT ?result WHERE { <http://dbpedia.org/resource/Joseph_Stalin> <http://dbpedia.org/property/office> ?v1 . ?result <http://dbpedia.org/property/awards> ?v2 . ?v1 <http://dbpedia.org/ontology/leader> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. <http://dbpedia.org/resource/Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape> <http://dbpedia.org/property/awards> ?v2 . <http://dbpedia.org/resource/Eastern_Front_(World_War_II)> <http://dbpedia.org/ontology/commander> ?result . }","```sparql
SELECT ?result WHERE {
  ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Eastern_Front_(World_War_II)> .
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency> .
  ?office <http://dbpedia.org/property/leader> ?result .
  ?office <http://dbpedia.org/ontology/officer> <http://dbpedia.org/resource/Joseph_Stalin> .
  ?result <http://dbpedia.org/ontology/awardee> <http://dbpedia.org/resource/Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape> .
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
488,66,test,"Give me the death place of the father, that is a politician, of Yūki Hideyasu and birth place of the commander in Boshin War and administration of the father of the spouse, that is a royalty, of Tokugawa Masako.",SELECT ?result WHERE { ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/property/leader> ?v2 . <http://dbpedia.org/resource/Yūki_Hideyasu> <http://dbpedia.org/property/father> ?v6 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Boshin_War> <http://dbpedia.org/ontology/commander> ?v3 . ?v6 <http://dbpedia.org/ontology/deathPlace> ?result . ?v1 <http://dbpedia.org/property/father> ?v2 . ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Tokugawa_Masako> . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?deathPlace ?birthPlace ?administration WHERE {
  # Step 1: Identify Yūki Hideyasu's father who is a politician.
  ?father rdf:type dbo:Politician ;
          foaf:parent <http://dbpedia.org/resource/Y%C5%ABki_Hideyasu> .

  # Step 2: Find the death place of Yūki Hideyasu's father.
  ?deathEvent dct:subject ?father ;
              dbo:place ?deathPlace .
  
  # Step 3: Identify the commander in the Boshin War and find their birthplace.
  ?boshinWar dbo:commander ?commander .
  ?birthEvent dct:subject ?commander ;
              dbo:placeOfBirth ?birthPlace .

  # Step 4: Determine Tokugawa Masako's spouse, who is royalty, and identify their father.
  ?tokugawaMasako dbo:spouse ?royaltySpouse ;
                  rdf:type dbo:Royalty .
  ?royalFather foaf:parent ?royaltySpouse .

  # Step 5: Find the administration of this royal father.
  ?adminEvent dct:subject ?royalFather ;
              dbo:administration ?administration .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
10,22,test,"Give me the associated musical artist of the person born, that is an artist, as Matt Colton and band member of the person born, that is an artist, as Luke Francis Vibert.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/property/birthName> ""Matt Colton""@en . ?v0 <http://dbpedia.org/property/birthName> ""Luke Francis Vibert""@en . }","```sparql
SELECT ?associatedArtist WHERE {
  ?mattColton rdf:type dbo:Artist .
  ?mattColton foaf:name ""Matt Colton"" .
  ?mattColton dbo:associatedMusicalArtist ?associatedArtist .

  ?lukeVibert rdf:type dbo:Artist .
  ?lukeVibert foaf:name ""Luke Francis Vibert"" .
  ?lukeVibert dbo:bandMemberOf ?band .

  OPTIONAL {
    ?band dbo:associatedMusicalArtist ?associatedArtist .
  }
}
```",4,6,5,2,2,2,3,28,0,0,1,0,0.0,0
92,46,test,"Give me the associated musical artist of the person born, that is an artist, as Jim Sheppard and band member of the reference, that is an artist, to the name of Nevermore (2006 film).","SELECT ?result WHERE { <http://dbpedia.org/resource/Nevermore_(2006_film)> <http://xmlns.com/foaf/0.1/name> ?v2 . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://dbpedia.org/property/birthName> ""Jim Sheppard""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://xmlns.com/foaf/0.1/name> ?v2 . }","```sparql
# Step 1: Find Jim Sheppard who is an artist
SELECT ?person WHERE {
    ?person <http://dbpedia.org/ontology/birthName> ""Jim Sheppard"" .
    ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist> .
}

# Step 2: Find the band associated with Jim Sheppard
SELECT ?band WHERE {
    ?person <http://dbpedia.org/property/memberOf> ?band .
    FILTER(?person = ?person1) # Use the result from step 1
}

# Step 3: Find the reference to Nevermore (2006 film)
SELECT ?reference WHERE {
    ?film <http://dbpedia.org/ontology/name> ""Nevermore"" .
    ?film <http://dbpedia.org/property/releaseDate> ?date .
    FILTER(YEAR(?date) = 2006)
}

# Step 4: Find the associated musical artist
SELECT ?associatedArtist WHERE {
    ?reference <http://dbpedia.org/ontology/artist> ?associatedArtist .
    ?band <http://dbpedia.org/property/memberOf> ?associatedArtist .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
767,69,test,"Give me the alma mater of the administration of George K. Nash and entity in the administration, that is a settlement, of the writer of Where It's At (Dustin Lynch album) and reference to the alter ego of the persona, that is a fictional character, of Matthew Burland.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/alterEgo> ""Matthew Burland""@en . ?result <http://dbpedia.org/ontology/state> ?v3 . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v3 <http://dbpedia.org/property/leaderParty> ?v4 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. <http://dbpedia.org/resource/Where_It's_At_(Dustin_Lynch_album)> <http://dbpedia.org/property/writer> ?v4 . ?v1 <http://dbpedia.org/property/alterEgo> ?v2 . ?v7 <http://dbpedia.org/ontology/almaMater> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v7 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/George_K._Nash> . }","```sparql
SELECT ?almaMater ?settlement ?writerReference ?fictionalCharacter WHERE {
  # Part 1: Alma Mater of George K. Nash's Administration
  ?admin a dbo:GovernmentOfficial ;
         dbo:positionHeldBy <http://dbpedia.org/resource/George_K._Nash> .
  ?admin dbo:almaMater ?almaMater .

  # Part 2: Entity in the Administration that is a Settlement
  OPTIONAL {
    ?settlement a dbo:Settlement ;
                dbo:associatedWith ?admin .
  }

  # Part 3: Writer of ""Where It's At"" by Dustin Lynch
  <http://dbpedia.org/resource/Where_It%27s_At_(Dustin_Lynch_album)> dbo:lyricsBy ?writer .
  ?writer dbo:reference ?writerReference .

  # Part 4: Alter Ego of Matthew Burland's Persona that is a Fictional Character
  <http://dbpedia.org/resource/Matthew_Burland> dbo:alterEgo ?persona .
  ?persona a dbo:FictionalCharacter ;
           rdfs:label ?fictionalCharacter .
}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
16,44,test,Give me the person born as the birth name of Gigi Rice and spouse of Ted McGinley and professional in the profession of Satomi Ishihara.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Gigi_Rice> <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Satomi_Ishihara> <http://dbpedia.org/property/occupation> ?v4 . ?result <http://dbpedia.org/property/occupation> ?v4 . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
SELECT ?person WHERE {
  # Condition 1: The birth name of Gigi Rice
  <http://dbpedia.org/resource/Gigi_Rice> <http://dbpedia.org/ontology/birthName> ?birthName .
  
  # Condition 2: The spouse of Ted McGinley
  ?spouse <http://dbpedia.org/property/spouse> <http://dbpedia.org/resource/Ted_McGinley> .

  # Condition 3: Shares the same profession as Satomi Ishihara
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person> .
  ?person <http://purl.org/dc/terms/profession> ?profession .
  <http://dbpedia.org/resource/Satomi_Ishihara> <http://purl.org/dc/terms/profession> ?sameProfession .

  # Join conditions
  FILTER (?birthName = ?spouse)
  FILTER (?profession = ?sameProfession)

  BIND(?person AS ?result)
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
488,36,test,"Give me the birth place of Enomoto Takeaki and administration of the father of the spouse, that is a royalty, of Tokugawa Masako.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> ?v1 . ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Tokugawa_Masako> . <http://dbpedia.org/resource/Enomoto_Takeaki> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
# Query to get the birthplace of Enomoto Takeaki
SELECT ?birthPlace WHERE {
  <http://dbpedia.org/resource/Enomoto_Takeaki> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
}

UNION

# Query to get the administration of the father of the spouse (who is royalty) of Tokugawa Masako
SELECT ?administration WHERE {
  # Find Tokugawa Masako's spouse
  <http://dbpedia.org/resource/Tokugawa_Masako> <http://dbpedia.org/ontology/spouse> ?spouse .
  
  # Ensure the spouse has a father who is royalty
  ?spouse <http://dbpedia.org/ontology/father> ?father .
  ?father <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .

  # Get the administration associated with this royal father
  ?father <http://dbpedia.org/property/administration> ?administration .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
161,57,test,"Give me the military force of the force, that is a societal event and a military conflict, of the predecessor of Indalecio Prieto and commander in the force, that is an event, of Emilio Mola and military force of Rif War.",SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Emilio_Mola> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v5 . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v5 <http://dbpedia.org/ontology/commander> ?v0 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Rif_War> . ?v0 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Indalecio_Prieto> . },"```sparql
SELECT ?militaryForce WHERE {
  # Step 1: Get predecessor of Indalecio Prieto
  <http://dbpedia.org/resource/Indalecio_Prieto> <http://dbpedia.org/ontology/predecessor> ?predecessor .

  # Step 2: Find societal event and military conflict for the predecessor
  ?event <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent> .
  ?event <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
  ?predecessor <http://dbpedia.org/property/associatedWith> ?event .

  # Step 3: Get military force for the event
  ?event <http://dbpedia.org/ontology/militaryForce> ?militaryForce1 .

  # Step 4: Find Emilio Mola's command role in an event
  ?emilioEvent <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event> .
  <http://dbpedia.org/resource/Emilio_Mola> <http://dbpedia.org/ontology/commander> ?emilioEvent .

  # Step 5: Get military force for Emilio Mola's event
  ?emilioEvent <http://dbpedia.org/ontology/militaryForce> ?militaryForce2 .

  # Step 6: Find military force in Rif War
  <http://dbpedia.org/resource/Rif_War> <http://dbpedia.org/ontology/militaryForce> ?rifWarMilitaryForce .

  # Step 7: Find common military forces
  FILTER (?militaryForce1 = ?militaryForce2 && ?militaryForce2 = ?rifWarMilitaryForce)
}
```",6,9,7,3,3,3,3,71,0,0,11,0,0.0,0
767,32,test,"Give me the entity in the administration, that is a settlement, of Green and alma mater of the administration of George K. Nash.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/George_K._Nash> . ?result <http://dbpedia.org/ontology/state> ?v1 . ?v1 <http://dbpedia.org/property/leaderParty> ""Green""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v3 <http://dbpedia.org/ontology/almaMater> ?result . }","```sparql
SELECT ?entity WHERE {
  ?admin <http://dbpedia.org/ontology/administration> ?settlement .
  ?settlement <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement> .
  ?admin <http://dbpedia.org/property/almaMater> ?entity .
  FILTER(?admin = <http://dbpedia.org/resource/George_K._Nash>)
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
391,23,test,"Give me the native of the figure known as the nick name of Jackson, Tennessee.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v0 <http://dbpedia.org/property/nickname> ?v2 . <http://dbpedia.org/resource/Jackson,_Tennessee> <http://xmlns.com/foaf/0.1/nick> ?v2 . }","```sparql
SELECT ?native WHERE {
  ?entity <http://dbpedia.org/ontology/nickName> ""Jackson, Tennessee"" .
  ?entity <http://www.w3.org/2000/01/rdf-schema#label> ?label .
  OPTIONAL { ?entity <http://dbpedia.org/property/nativePlace> ?native . }
}
```",3,3,4,3,1,3,3,71,0,0,176,0,0.0,0
404,22,test,"Give me the child of the father of Ernest Augustus, Duke of Brunswick and spouse of Princess Victoria Louise of Prussia.","SELECT ?result WHERE { <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/parent> ?v1 . }","```sparql
SELECT ?child WHERE {
  ?father <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick>.
  ?mother <http://dbpedia.org/ontology/spouse> ?father.
  ?mother <http://dbpedia.org/ontology/husband> ?father.
  ?mother <http://dbpedia.org/property/spouse> <http://dbpedia.org/resource/Victoria_Louise_of_Prussia>.
  ?father <http://dbpedia.org/property/spouse> ?mother.
  ?father <http://dbpedia.org/ontology/child> ?child.
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
427,58,test,"Give me the party of the father of Lamberto Andreotti and party of the person born, that is an office holder and a politician, as the birth name of Romano Prodi and reference to Partito Popolare Italiano.","SELECT ?result WHERE { <http://dbpedia.org/resource/Lamberto_Andreotti> <http://dbpedia.org/property/father> ?v5 . <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://dbpedia.org/property/birthName> ?v1 . ?v5 <http://dbpedia.org/ontology/party> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://xmlns.com/foaf/0.1/name> ""Partito Popolare Italiano""@en . ?v2 <http://dbpedia.org/ontology/party> ?result . }","```sparql
SELECT ?party WHERE {
  <http://dbpedia.org/resource/Lamberto_Andreotti> <http://xmlns.com/foaf/0.1/family_name> ?father .
  ?father <http://dbpedia.org/ontology/party> ?party .
}

SELECT ?party, ?reference WHERE {
  <http://dbpedia.org/resource/Romano_Prodi> a <http://dbpedia.org/ontology/OfficeHolder> .
  <http://dbpedia.org/resource/Romano_Prodi> a <http://dbpedia.org/ontology/Politician> .
  <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/property/birthName> ?birthName .
  ?birthName <http://dbpedia.org/ontology/party> ?party .
  OPTIONAL { ?reference <http://www.w3.org/2004/02/skos/core#broader> <http://dbpedia.org/resource/Partito_Popolare_Italiano> . }
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
701,38,test,Give me the parent of the child of Ramesses II and spouse of the father of Merneptah.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v3 . <http://dbpedia.org/resource/Merneptah> <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ramesses_II> . },"```sparql
SELECT ?parent WHERE {
  # Step 1: Identify children of Ramesses II
  ?child <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Ramesses_II> .
  
  # Step 2: The parent of the child is Ramesses II, but we need to find a connection to Merneptah's father
  ?merneptahFather <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Merenptah> .

  # Step 3: Find the spouse of Merneptah's father
  ?spouse <http://dbpedia.org/ontology/spouse> ?merneptahFather .
  
  # Step 4: Check if this spouse is also a parent of any child of Ramesses II
  OPTIONAL { ?child <http://dbpedia.org/ontology/mother> ?spouse . }
  
  FILTER(?spouse != <http://dbpedia.org/resource/Ramesses_II>) # Ensure it's not directly Ramesses II

  BIND(?spouse AS ?parent)
}
```",4,4,5,2,2,3,3,71,0,0,2,0,0.0,0
281,62,test,"Give me the war of New Zealand Army and war of the awardee of the award of Jonathon Band and entity in the birth place, that is a country, of the leader, that is a politician, of 1962 New South Wales state election.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> ?v6 . ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v3 <http://dbpedia.org/property/awards> ?v4 . <http://dbpedia.org/resource/1962_New_South_Wales_state_election> <http://dbpedia.org/property/leader> ?v0 . ?v0 <http://dbpedia.org/ontology/birthPlace> ?v6 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Jonathon_Band> <http://dbpedia.org/property/awards> ?v4 . <http://dbpedia.org/resource/New_Zealand_Army> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
# Step 1: Identify the leader of the 1962 New South Wales state election
SELECT ?leader WHERE {
    ?election dbpedia-owl:stateElection ""New South Wales"" .
    ?election dbpedia-owl:date ""1962""^^xsd:gYear .
    ?election dbpedia-owl:winner ?leader .
    ?leader a dbo:Politician .
}

# Step 2: Find the country of birth of this leader
SELECT ?country WHERE {
    ?leader foaf:birthPlace ?place .
    ?place geo:hasCountry ?country .
    ?country a dbo:Country .
}

# Step 3: Identify entities in this country
SELECT DISTINCT ?entity WHERE {
    ?entity dbpedia-owl:country ?country .
}

# Step 4: Determine the awardee of Jonathon Band's award
SELECT ?awardee WHERE {
    ?awardEvent dbo:recipient ?awardee ;
                dbo:givenBy <http://dbpedia.org/resource/Jonathon_Band> .
}

# Step 5: Find wars involving the New Zealand Army and the awardee
SELECT DISTINCT ?war WHERE {
    ?war a dbo:MilitaryConflict .
    ?war dbo:participatingMilitaryUnit <http://dbpedia.org/resource/New_Zealand_Army> ;
         dbo:participant ?awardee .
}

# Combine results to get the final answer
SELECT DISTINCT ?war WHERE {
    # Leader of 1962 NSW election
    ?election dbpedia-owl:stateElection ""New South Wales"" .
    ?election dbpedia-owl:date ""1962""^^xsd:gYear .
    ?election dbpedia-owl:winner ?leader .
    ?leader a dbo:Politician .

    # Country of birth of the leader
    ?leader foaf:birthPlace ?place .
    ?place geo:hasCountry ?country .
    ?country a dbo:Country .

    # Entities in this country
    ?entity dbpedia-owl:country ?country .

    # Awardee of Jonathon Band's award
    ?awardEvent dbo:recipient ?awardee ;
                dbo:givenBy <http://dbpedia.org/resource/Jonathon_Band> .

    # Wars involving New Zealand Army and the awardee
    ?war a dbo:MilitaryConflict .
    ?war dbo:participatingMilitaryUnit <http://dbpedia.org/resource/New_Zealand_Army> ;
         dbo:participant ?awardee .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
994,39,test,"Give me the associated musical artist of Red Tide (band) and band member of the person born, that is a musical artist, as the persona of Don Dokken.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . <http://dbpedia.org/resource/Don_Dokken> <http://xmlns.com/foaf/0.1/givenName> ?v2 . <http://dbpedia.org/resource/Red_Tide_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/birthName> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
SELECT ?result WHERE {
  # Part 1: Associated Musical Artist of Red Tide (band)
  ?redTide <http://dbpedia.org/ontology/associatedMusicalArtist> ?result .

  # Part 2: Band Member of the Person Born as Don Dokken
  ?dokken <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
  ?dokken <http://dbpedia.org/property/birthName> ""Don Dokken"" .
  ?dokken <http://dbpedia.org/ontology/memberOfBand> ?band .
  ?bandMember <http://dbpedia.org/ontology/memberOfBand> ?band .
  
  # Combine both parts
  FILTER(?result = ?bandMember)
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
16,62,test,Give me the person born as Georgeanne Marie Rice and spouse of the person born as the birth name of Ted McGinley and professional in the profession of the actor of Unnatural (TV series).,"SELECT ?result WHERE { <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/property/birthName> ?v4 . ?result <http://dbpedia.org/property/birthName> ""Georgeanne Marie Rice""@en . ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?v3 <http://dbpedia.org/property/birthName> ?v4 . ?v0 <http://dbpedia.org/property/occupation> ?v6 . ?result <http://dbpedia.org/property/occupation> ?v6 . <http://dbpedia.org/resource/Unnatural_(TV_series)> <http://dbpedia.org/property/starring> ?v0 . }","```sparql
SELECT ?spouse WHERE {
  # Step 1: Find Georgeanne Marie Rice
  ?rice a dbo:Person;
        foaf:name ""Georgeanne Marie Rice"" ;
        foaf:birthName ""Georgeanne Marie Rice"".

  # Step 2: Find Ted McGinley's birth name
  ?ted a dbo:Person;
       foaf:name ""Ted McGinley"";
       foaf:birthName ?tedBirthName.

  # Step 3: Determine the profession of the actor in ""Unnatural""
  ?unnaturalActor a dbo:Actor;
                  dbo:actedIn dbr:Unnatural_(TV_series);
                  rdf:type dbo:Person;
                  dbo:profession dbc:Actors.

  # Step 4: Find the spouse
  ?ted spousalRelationship ?spouse.
  
  FILTER (?spouse = ?rice && ?spouse.rdfs:label = ""actor"")
}
```",7,7,8,3,3,3,3,71,0,0,1,0,0.0,0
528,49,test,Give me the force of the person born as the birth name of Narciso Campero and war of the military force of Battle of Pisagua.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Pisagua> . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?result <http://dbpedia.org/ontology/commander> ?v1 . <http://dbpedia.org/resource/Narciso_Campero> <http://dbpedia.org/property/birthName> ?v0 . },"```sparql
# Query 1: Find the force associated with Narciso Campero
SELECT ?force WHERE {
    ?person <http://dbpedia.org/ontology/birthName> ""Narciso Campero"" .
    ?person <http://dbpedia.org/ontology/militaryForce> ?force .
}

UNION

# Query 2: Find the war related to the military force of Battle of Pisagua
SELECT ?war WHERE {
    <http://dbpedia.org/resource/Battle_of_Pisagua> <http://dbpedia.org/ontology/militaryForce> ?militaryForce .
    ?militaryForce <http://dbpedia.org/ontology/war> ?war .
}
```",5,5,6,3,2,3,3,71,0,0,3,0,0.0,0
747,52,test,"Give me the band of the writer of Apollo (Hardwell song) and band of Shèna and person born on the birth date of the person decedent, that is an athlete and a soccer player, at Zolotonosha.",SELECT ?result WHERE { <http://dbpedia.org/resource/Shèna> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Zolotonosha> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v3 <http://dbpedia.org/ontology/birthDate> ?v2 . <http://dbpedia.org/resource/Apollo_(Hardwell_song)> <http://dbpedia.org/property/writer> ?v5 . ?result <http://dbpedia.org/ontology/birthDate> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
# Part 1: Writer of Apollo (Hardwell song) and their band
SELECT ?writer ?band WHERE {
  ?song dbpedia-owl:title ""Apollo""@en .
  ?song dbo:lyricsBy ?writer .
  OPTIONAL { ?writer dbo:memberOfBand ?band . }
}

UNION

# Part 2: Band of Shèna
SELECT ?shenaBand WHERE {
  <http://dbpedia.org/resource/Shèna> dbo:memberOfBand ?shenaBand .
}

UNION

# Part 3: Person born on the birth date of a decedent who is an athlete and soccer player at Zolotonosha
SELECT ?person WHERE {
  ?decedent dbo:sport ""Soccer""@en ;
            dbo:placeOfBirth <http://dbpedia.org/resource/Zolotonosha> ;
            dbo:dateOfDeath ?deathDate .
  ?person dbo:dateOfBirth ?birthDate .
  FILTER (?birthDate = ?deathDate)
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
281,70,test,"Give me the war of the profession, that is a military unit, of the professional, that is an office holder and a politician, in New Zealand Army and entity in the birth place, that is a country, of the leader, that is a politician, of 1962 New South Wales state election and war of the awardee of Knight Grand Cross of the Order of the Bath.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/New_Zealand_Army> . <http://dbpedia.org/resource/1962_New_South_Wales_state_election> <http://dbpedia.org/property/leader> ?v0 . ?v4 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_the_Bath> . ?v0 <http://dbpedia.org/ontology/birthPlace> ?v7 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?result <http://dbpedia.org/ontology/place> ?v7 . ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/property/occupation> ?v3 . },"```sparql
SELECT ?war WHERE {
  # Step 1: Identify the leader of the 1962 New South Wales state election who is a politician.
  ?leader rdf:type dbo:Politician ;
          dbo:officeHolderOf ?election .
  
  # Step 2: Determine the birthplace country of this leader.
  ?leader dbo:birthPlace ?birthPlace .
  ?birthPlace dbo:country ?country .

  # Step 3: Find entities in that country.
  ?entity dbo:location ?country .

  # Step 4: Identify an awardee of the Knight Grand Cross of the Order of the Bath and find the war associated with them.
  ?awardee dbo:award ""Knight Grand Cross of the Order of the Bath"" ;
           dbo:servedInMilitaryConflict ?war1 .
  
  # Step 5: Locate a professional who is both an office holder and a politician, and identify their profession as a military unit within the New Zealand Army.
  ?professional rdf:type dbo:Politician, dbo:OfficeHolder ;
                dbo:militaryUnit ?militaryUnit ;
                dbo:servedInMilitaryUnit ?nzArmy .
  
  # Step 6: Finally, determine the war associated with this military unit.
  ?militaryUnit dbo:servedInMilitaryConflict ?war2 .

  FILTER(?election = <http://dbpedia.org/resource/1962_New_South_Wales_state_election>)
}
```",8,13,9,3,3,3,3,71,0,0,1,0,0.0,0
617,69,test,"Give me the spouse of the child of Antiochus III the Great and child of the child, that is a royalty, of the successor, that is a royalty, of Antiochus II Theos and parent of the child of the commander in Battle of Panium.",SELECT ?result WHERE { <http://dbpedia.org/resource/Battle_of_Panium> <http://dbpedia.org/ontology/commander> ?v1 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> ?v2 . ?v7 <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://dbpedia.org/ontology/child> ?v2 . ?v3 <http://dbpedia.org/property/father> ?v4 . <http://dbpedia.org/resource/Antiochus_II_Theos> <http://dbpedia.org/ontology/successor> ?v4 . ?result <http://dbpedia.org/property/father> ?v3 . <http://dbpedia.org/resource/Antiochus_III_the_Great> <http://dbpedia.org/ontology/child> ?v7 . },"```sparql
SELECT ?spouse WHERE {
  # Step 1: Identify Antiochus III the Great's child
  ?child a dbo:Person ;
         dbo:parent <http://dbpedia.org/resource/Antiochus_III_the_Great> .

  # Step 2: Find the spouse of that child
  ?child dbo:spouse ?spouse .

  # Step 3: Identify successor of Antiochus II Theos and their royal child
  ?successor a dbo:Person ;
             dbo:predecessor <http://dbpedia.org/resource/Antiochus_II_theos> .
  ?royalChild a dbo:Royalty ;
              dbo:parent ?successor .

  # Step 4: Find the parent of the child of the commander in Battle of Panium
  ?battleCommander dbo:commander <http://dbpedia.org/resource/Battle_of_Panium> .
  ?childOfCommander dbo:parent ?battleCommander ;
                    dbo:parent ?royalChild .

  # Ensure the spouse is related to the royal child through the chain
  FILTER(?spouse = ?royalChild)
}
```",8,10,9,3,3,3,3,71,0,0,2,0,0.0,0
801,71,test,"Give me the professional in the alter ego of the true self of The Shadow and producer of the work, that is a musical work and a song and a work, of the professional, that is a musical artist, in Rapper and associated musical artist of the writer, that is a musical artist and an artist, of the album, that is a musical work and a work, of What U See Is What U Get.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/occupation> ""Rapper""@en . ?result <http://dbpedia.org/property/occupation> ?v2 . ?v8 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v1 <http://dbpedia.org/property/alterEgo> ?v2 . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. <http://dbpedia.org/resource/What_U_See_Is_What_U_Get> <http://dbpedia.org/ontology/album> ?v7 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v7 <http://dbpedia.org/property/writer> ?v8 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v5 <http://dbpedia.org/ontology/producer> ?result . ?v1 <http://xmlns.com/foaf/0.1/givenName> ""The Shadow""@en . ?v5 <http://dbpedia.org/property/writer> ?v4 . }","```sparql
SELECT ?professional WHERE {
  # Step 1: Find the writer who is a musical artist and an artist of the album ""What U See Is What U Get.""
  ?album <http://dbpedia.org/ontology/artist> ?writer .
  ?album <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork> .
  ?album <http://rdfs.org/ns/void#label> ""What U See Is What U Get"" .
  ?writer <http://dbpedia.org/ontology/occupation> ?musicalArtist1 .
  ?writer <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .

  # Step 2: Find the associated musical artist in Rapper for this writer.
  ?rapper <http://dbpedia.org/property/associatedMusicalArtist> ?writer .
  ?rapper <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .

  # Step 3: Determine the professional (musical artist) linked with this rapper.
  ?professional <http://dbpedia.org/property/profession> ?musicalArtist2 .
  ?professional <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .

  # Step 4: Locate the work that is a musical work, song, and work produced by this professional.
  ?work <http://purl.org/dc/terms/creator> ?professional .
  ?work <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork> .
  ?work <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song> .

  # Step 5: Identify the alter ego of The Shadow's true self.
  ?alterEgo <http://dbpedia.org/property/trueSelf> <http://dbpedia.org/resource/The_Shadow> .
  
  # Step 6: Find the professional associated with this alter ego.
  ?professional <http://dbpedia.org/ontology/profession> ?alterEgo .
}
```",9,17,10,3,3,3,3,71,0,0,8,0,0.0,0
767,54,test,"Give me the reference to  and alma mater of the administration of the reference to George Kilbon Nash and entity in the administration, that is a settlement, of Green.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://xmlns.com/foaf/0.1/name> """"@en . ?v3 <http://dbpedia.org/property/leaderParty> ""Green""@en . ?v5 <http://dbpedia.org/ontology/almaMater> ?result . ?v5 <http://dbpedia.org/property/governor> ?v0 . ?v0 <http://xmlns.com/foaf/0.1/name> ""George Kilbon Nash""@en . ?result <http://dbpedia.org/ontology/state> ?v3 . }","```sparql
SELECT ?administration ?almaMater ?settlement WHERE {
  # Step 1: Find the administration of George Kilbon Nash
  <http://dbpedia.org/resource/George_Kilbon_Nash> <http://dbpedia.org/ontology/administration> ?administration .
  
  # Step 2: Get the alma mater from this administration
  ?administration <http://dbpedia.org/property/almaMater> ?almaMater .

  # Step 3: Find a settlement in this administration with a reference to ""Green""
  ?settlement <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement> .
  ?settlement <http://dbpedia.org/property/inAdministration> ?administration .
  ?settlement <http://dbpedia.org/ontology/reference> ""Green"" .
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
179,16,test,Give me the parent of the child of Bhumibol Adulyadej and person born as the birth name of Sirikit.,SELECT ?result WHERE { <http://dbpedia.org/resource/Bhumibol_Adulyadej> <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Sirikit> <http://dbpedia.org/property/birthName> ?v2 . ?result <http://dbpedia.org/property/birthName> ?v2 . },"```sparql
SELECT ?parent WHERE {
  # Step 1: Identify Bhumibol Adulyadej's children
  <http://dbpedia.org/resource/Bhumibol_Adulyadej> <http://dbpedia.org/ontology/spouse> ?spouse .
  ?child <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Bhumibol_Adulyadej> ;
         <http://dbpedia.org/ontology/mother> ?spouse .

  # Step 2: Use one child to find their parent (Bhumibol Adulyadej)
  
  # Step 3: Get Sirikit's birth name
  <http://dbpedia.org/resource/Sirikit> <http://dbpedia.org/property/birthName> ?birthName .

  # Step 4: Find a person with that birth name
  ?person <http://www.w3.org/2000/01/rdf-schema#label> ?birthName ;
          <http://dbpedia.org/ontology/birthPlace> ?place .

  # Step 5: Determine the parent of this person
  ?person <http://dbpedia.org/ontology/father|<http://dbpedia.org/ontology/mother>> ?parent .
}
```",4,4,5,2,2,3,2,20,0,0,1,0,0.0,0
801,53,test,"Give me the producer of Westside Story (song) and professional in the alter ego of the true self of The Shadow and associated musical artist of the writer, that is a musical artist and an artist, of 40 Dayz & 40 Nightz.","SELECT ?result WHERE { <http://dbpedia.org/resource/40_Dayz_&_40_Nightz> <http://dbpedia.org/property/writer> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v3 <http://xmlns.com/foaf/0.1/givenName> ""The Shadow""@en . ?result <http://dbpedia.org/property/occupation> ?v2 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Westside_Story_(song)> <http://dbpedia.org/ontology/producer> ?result . ?v3 <http://dbpedia.org/property/alterEgo> ?v2 . }","```sparql
SELECT ?result WHERE {
  # Producer of ""Westside Story"" (song)
  ?westsideStory <http://dbpedia.org/ontology/producer> ?result .
  
  # Professional in the alter ego of The Shadow's true self
  ?shadowAlterEgo <http://dbpedia.org/property/profession> ?result .
  ?theShadow <http://dbpedia.org/ontology/alterEgo> ?shadowAlterEgo .

  # Associated musical artist of the writer of ""40 Dayz & 40 Nightz""
  ?writer <http://dbpedia.org/ontology/wrote> <http://dbpedia.org/resource/40_Dayz_%26_40_Nightz> .
  ?writer <http://dbpedia.org/property/associatedMusicalArtist> ?result .

  # Ensure the result is both a musical artist and an artist
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist> .

  # ""Westside Story"" (song) entity
  VALUES ?westsideStory { <http://dbpedia.org/resource/Westside_Story_(song)> }
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
747,55,test,Give me the band of the writer of Apollo (Hardwell song) and band of the person born as Tracey Elizabeth McSween and person born on the birth date of Pavlo Khudzik.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ""Tracey Elizabeth McSween""@en . <http://dbpedia.org/resource/Pavlo_Khudzik> <http://dbpedia.org/ontology/birthDate> ?v3 . ?result <http://dbpedia.org/ontology/birthDate> ?v3 . ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Apollo_(Hardwell_song)> <http://dbpedia.org/property/writer> ?v5 . }","```sparql
# Part 1: Writer of ""Apollo"" by Hardwell and their band
SELECT ?writerBand WHERE {
    ?song dbpedia-owl:title ""Apollo (Hardwell song)""@en .
    ?song dbo:lyricsBy ?writer .
    ?writer dbo:musicalBand ?writerBand .
}

UNION

# Part 2: Band of Tracey Elizabeth McSween
SELECT ?band WHERE {
    ?person foaf:name ""Tracey Elizabeth McSween""@en ;
            dbp:birthName ""Tracey Elizabeth McSween"" .
    ?person dbo:musicalBand ?band .
}

UNION

# Part 3: Person born on the same date as Pavlo Khudzik and their band
SELECT ?personBand WHERE {
    ?khudzik dbo:birthday ?date ;
             foaf:name ""Pavlo Khudzik""@en .
    ?person dbo:birthday ?date ;
            dbo:musicalBand ?personBand .
}
```",6,6,7,2,3,3,3,71,0,0,1,0,0.0,0
404,54,test,"Give me the parent of the child, that is a royalty, of the parent, that is a royalty, of Prince George William of Hanover and spouse of the person born, that is a royalty, as Princess Victoria Louise of Prussia and child of Ernest Augustus, Crown Prince of Hanover.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Prince_George_William_of_Hanover> <http://dbpedia.org/ontology/parent> ?v0 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ernest_Augustus,_Crown_Prince_of_Hanover> . ?result <http://dbpedia.org/ontology/child> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/child> ?v5 . ?v3 <http://dbpedia.org/property/birthName> ""Princess Victoria Louise of Prussia""@en . }","```sparql
SELECT ?parent
WHERE {
  # Step 1: Identify Princess Victoria Louise of Prussia
  ?princess a dbo:Royalty ;
            foaf:name ""Victoria Louise of Prussia""@en ;
            dbo:birthPlace ?birthPlace .

  # Step 2: Find her spouse, who is also royalty
  ?spouse a dbo:Royalty ;
          dbo:spouse ?princess ;
          foaf:name ?spouseName .

  # Step 3: Determine the parent of Prince George William of Hanover
  ?parent1 a dbo:Royalty ;
           dbo:child ?georgeWilliam ;
           foaf:name ""Prince George William of Hanover""@en .

  # Step 4: Identify the child (royalty) of this parent
  ?child a dbo:Royalty ;
         dbo:parent ?parent1 .

  # Step 5: Find the parent of this child
  ?finalParent a dbo:Royalty ;
               dbo:child ?child .
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
485,24,test,"Give me the entity in the birth place, that is a region, of Joseph Whitaker (naturalist) and birth place of the awardee, that is a writer and a poet, of Eric Gregory Award.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Poet>. ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Eric_Gregory_Award> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?result <http://dbpedia.org/ontology/country> ?v1 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Joseph_Whitaker_(naturalist)> <http://dbpedia.org/ontology/birthPlace> ?v1 . },"```sparql
# Find entities in the birthplace region of Joseph Whitaker (naturalist)
SELECT DISTINCT ?entity1 WHERE {
  ?whitaker a dbo:Naturalist ;
           foaf:birthPlace ?birthPlaceWhitaker .
  ?birthPlaceWhitaker a dbo:Region .
  ?entity1 dbo:location ?birthPlaceWhitaker .
}

UNION

# Find entities in the birthplace region of an awardee who is both a writer and poet of the Eric Gregory Award
SELECT DISTINCT ?entity2 WHERE {
  ?awardee a dbo:Writer ;
           dbo:awardReceived ?gregoryAward ;
           foaf:birthPlace ?birthPlaceAwardee .
  ?gregoryAward a dbo:EducationalAward ;
                dbo:name ""Eric Gregory Award"" .
  ?poet a dbo:Poet ;
        owl:sameAs ?awardee .
  ?birthPlaceAwardee a dbo:Region .
  ?entity2 dbo:location ?birthPlaceAwardee .
}
```",4,7,5,2,2,2,3,28,0,0,1,0,0.0,0
767,18,test,Give me the alma mater of Carl L. Nippert and reference to  and entity in Baden-Württemberg.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Carl_L._Nippert> <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://xmlns.com/foaf/0.1/name> """"@en . ?result <http://dbpedia.org/ontology/state> <http://dbpedia.org/resource/Baden-Württemberg> . }","```sparql
SELECT ?almaMater ?entity WHERE {
  # Find alma mater of Carl L. Nippert
  <http://dbpedia.org/resource/Carl_L._Nippert> <http://dbpedia.org/ontology/almaMater> ?almaMater .

  # Find entities in Baden-Württemberg, Germany
  ?entity <http://www.w3.org/2000/01/rdf-schema#label> ?label .
  ?entity <http://dbpedia.org/property/country> <http://dbpedia.org/resource/Germany> .
  OPTIONAL { ?entity <http://dbpedia.org/ontology/location> ?location . }
  FILTER(CONTAINS(LCASE(?location), ""baden-württemberg""))
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
801,23,test,Give me the professional in the alter ego of the true self of The Shadow.,"SELECT ?result WHERE { ?v2 <http://xmlns.com/foaf/0.1/givenName> ""The Shadow""@en . ?result <http://dbpedia.org/property/occupation> ?v0 . ?v2 <http://dbpedia.org/property/alterEgo> ?v0 . }","```sparql
SELECT ?professional WHERE {
  ?entity <http://dbpedia.org/ontology/alterEgo> <http://dbpedia.org/resource/The_Shadow> .
  ?entity <http://dbpedia.org/ontology/profession> ?professional .
}
```",3,3,4,3,1,3,3,71,0,0,39640,0,0.0,0
485,26,test,"Give me the entity in the region, that is a country, of Western European Time and entity in the birth place, that is a region, of Joseph Whitaker (naturalist) and birth place of Thomas Warner (poet).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v1 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Western_European_Time> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Joseph_Whitaker_(naturalist)> <http://dbpedia.org/ontology/birthPlace> ?v2 . <http://dbpedia.org/resource/Thomas_Warner_(poet)> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/country> ?v2 . },"```sparql
# Step 1: Find the country associated with Western European Time
SELECT ?country WHERE {
    ?timeZone <http://dbpedia.org/ontology/country> ?country .
    ?timeZone <http://www.w3.org/2000/01/rdf-schema#label> ""Western European Time"" .
}

# Step 2: Find entities in that country
SELECT DISTINCT ?entity WHERE {
    ?entity <http://dbpedia.org/ontology/country> ?country .
    FILTER(?country = ?countryFromStep1)
}

# Step 3: Find the birthplace of Joseph Whitaker (naturalist)
SELECT ?birthPlace WHERE {
    <http://dbpedia.org/resource/Joseph_Whitaker_(naturalist)> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
}

# Step 4: Find entities in that birthplace (region)
SELECT DISTINCT ?entity WHERE {
    ?entity <http://dbpedia.org/ontology/location> ?birthPlaceFromStep3 .
}

# Step 5: Find the birthplace of Thomas Warner (poet)
SELECT ?birthPlace WHERE {
    <http://dbpedia.org/resource/Thomas_Warner_(poet)> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
}
```",5,7,6,2,3,2,3,28,0,0,1,0,0.0,0
360,28,test,"Give me the writer of the work, that is an album, of Dave Flett and reference to the author of Blinded by the Light and native of the death place, that is a settlement, of Winnie Madikizela-Mandela.","SELECT ?result WHERE { <http://dbpedia.org/resource/Blinded_by_the_Light> <http://dbpedia.org/property/author> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://dbpedia.org/property/author> ""Dave Flett""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Album>. ?v1 <http://dbpedia.org/property/writer> ?result . <http://dbpedia.org/resource/Winnie_Madikizela-Mandela> <http://dbpedia.org/ontology/deathPlace> ?v3 . ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?result <http://xmlns.com/foaf/0.1/name> ?v5 . }","```sparql
SELECT ?writer WHERE {
  # Step 1: Get the author of ""Blinded by the Light""
  ?blinded <http://dbpedia.org/ontology/author> ?author .
  ?blinded <http://www.w3.org/2000/01/rdf-schema#label> ""Blinded by the Light""@en .

  # Step 2: Get the birthplace of Winnie Madikizela-Mandela
  ?winnie <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  ?winnie <http://www.w3.org/2000/01/rdf-schema#label> ""Winnie Madikizela-Mandela""@en .

  # Step 3: Get the death place of Winnie Madikizela-Mandela and ensure it is a settlement
  ?winnie <http://dbpedia.org/ontology/deathPlace> ?deathPlace .
  ?deathPlace <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement> .

  # Step 4: Identify the album associated with Dave Flett
  ?album <http://dbpedia.org/property/musicians> ?daveFlett .
  ?daveFlett <http://www.w3.org/2000/01/rdf-schema#label> ""Dave Flett""@en .

  # Step 5: Find the writer of that album
  ?album <http://dbpedia.org/ontology/writer> ?writer .
}
```",6,8,7,2,3,2,3,28,0,0,1,0,0.0,0
378,62,test,"Give me the war of the person born as the birth name of Carl Pontus Gahn and claim to fame of Louis des Balbes de Berton de Crillon, 1st Duke of Mahón and war of the commander in the reference, that is a military conflict, to Peninsular War.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v3 <http://dbpedia.org/property/birthName> ?v4 . <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/property/birthName> ?v4 . ?v6 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Louis_des_Balbes_de_Berton_de_Crillon,_1st_Duke_of_Mahón> <http://dbpedia.org/ontology/knownFor> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Peninsular War""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/ontology/commander> ?v6 . }","```sparql
SELECT DISTINCT ?war WHERE {
  # Find the birth name of Carl Pontus Gahn
  ?gahn dbpedia-owl:birthName ?birthName .
  FILTER(?gahn = <http://dbpedia.org/resource/Carl_Pontus_Gahn>) .

  # Find the claim to fame of Louis des Balbes de Berton de Crillon, 1st Duke of Mahón
  ?crillon dbo:knownFor ?claimToFame .
  FILTER(?crillon = <http://dbpedia.org/resource/Louis_des_Balbes_de_Berton_de_Crillon,_1st_Duke_of_Mahón>) .

  # Find the war related to Peninsular War through its commander
  ?peninsularWar dbo:commander ?commander .
  FILTER(?peninsularWar = <http://dbpedia.org/resource/Peninsular_War>) .

  # Ensure all are military conflicts
  ?war a dbo:MilitaryConflict ;
      (dbo:knownFor|dbo:battle) ?claimToFame ;
      (dbo:birthName|dbo:commander) ?commander .
}
```",7,8,8,3,3,3,3,71,0,0,2,0,0.0,0
528,20,test,Give me the war of Irene Morales and war of the commander in Battle of La Rinconada de Ate.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Battle_of_La_Rinconada_de_Ate> <http://dbpedia.org/ontology/commander> ?v2 . <http://dbpedia.org/resource/Irene_Morales> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
# Query to find the war associated with Irene Morales
SELECT ?war WHERE {
  <http://dbpedia.org/resource/Irene_Morales> <http://dbpedia.org/ontology/knownFor> ?war .
  ?war a <http://dbpedia.org/ontology/MilitaryConflict> .
}

UNION

# Query to find the war associated with the commander of the Battle of La Rinconada de Ate
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Battle_of_La_Rinconada_de_Ate> <http://dbpedia.org/ontology/commander> ?commander .
  ?commander <http://dbpedia.org/ontology/battle> ?battle .
  ?battle a <http://dbpedia.org/ontology/MilitaryConflict> .
  BIND(?battle AS ?result)
}
```",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
488,61,test,"Give me the administration of the father of the spouse, that is a royalty, of Tokugawa Masako and death place of the father, that is a politician, of the father, that is an office holder, of Matsudaira Tadamasa.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/deathPlace> ?result . ?result <http://dbpedia.org/property/leader> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Matsudaira_Tadamasa> <http://dbpedia.org/property/father> ?v0 . ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Tokugawa_Masako> . ?v1 <http://dbpedia.org/property/father> ?v3 . ?v0 <http://dbpedia.org/property/father> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
SELECT ?administration ?deathPlace WHERE {
  # Step 1: Identify Tokugawa Masako's spouse
  ?spouse a dbo:Spouse ;
          dbo:spouse <http://dbpedia.org/resource/Tokugawa_Masako> .

  # Step 2: Determine the father of that spouse
  ?father a dbo:Father ;
          dbo:child ?spouse .

  # Step 3: Check if this father is royalty and find his administration
  OPTIONAL { ?father a dbo:Royalty .
             ?administration dbo:administeredBy ?father . }

  # Step 4: Identify Matsudaira Tadamasa's father
  ?mat_father a dbo:Father ;
              dbo:child <http://dbpedia.org/resource/Matsudaira_Tadamasa> .

  # Step 5: Confirm if this father is an office holder and politician
  OPTIONAL { ?mat_father a dbo:OfficeHolder, dbo:Politician . }

  # Step 6: Determine the death place of Matsudaira Tadamasa's father
  OPTIONAL { ?deathPlace dbo:deathPlace ?mat_father . }
}
```",6,9,7,3,2,3,3,71,0,0,1,0,0.0,0
747,56,test,Give me the band of Amba Shepherd and person born on the birth date of Pavlo Khudzik and band of the person born as the persona of Shèna.,SELECT ?result WHERE { <http://dbpedia.org/resource/Amba_Shepherd> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Pavlo_Khudzik> <http://dbpedia.org/ontology/birthDate> ?v2 . <http://dbpedia.org/resource/Shèna> <http://xmlns.com/foaf/0.1/givenName> ?v0 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?result <http://dbpedia.org/ontology/birthDate> ?v2 . },"```sparql
# Step 1: Find the band of Amba Shepherd
SELECT ?band AS ?ambaShepherdBand WHERE {
    <http://dbpedia.org/resource/Amba_Shepherd> <http://dbpedia.org/ontology/band> ?band .
}

UNION

# Step 2: Find a person born on the same date as Pavlo Khudzik and their band
SELECT ?person AS ?sameBirthDatePerson, ?band AS ?sameBirthDateBand WHERE {
    # Get Pavlo Khudzik's birth date
    <http://dbpedia.org/resource/Pavlo_Khudzik> <http://dbpedia.org/ontology/birthDate> ?birthDate .
    
    # Find any person born on that same date
    ?person <http://dbpedia.org/ontology/birthDate> ?birthDate .
    
    # Get the band of this person
    OPTIONAL { ?person <http://dbpedia.org/ontology/band> ?band . }
}

UNION

# Step 3: Find the persona of Shèna and the band of the person born as that persona
SELECT ?persona AS ?shenaPersona, ?person AS ?bornAsShena, ?band AS ?bornAsShenaBand WHERE {
    # Get the persona of Shèna
    <http://dbpedia.org/resource/Shèna> <http://dbpedia.org/ontology/persona> ?persona .
    
    # Find any person born as that persona
    ?person <http://dbpedia.org/property/bornAs> ?persona .
    
    # Get the band of this person
    OPTIONAL { ?person <http://dbpedia.org/ontology/band> ?band . }
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
54,36,test,"Give me the child of Thinkhaya of Pagan and predecessor of the child, that is an office holder and a royalty, of the reference to Thihapate of Mohnyin.","SELECT ?result WHERE { <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Thihapate of Mohnyin""@en . ?result <http://dbpedia.org/ontology/successor> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","```sparql
SELECT ?child ?predecessor WHERE {
  <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?child .
  ?child <http://dbpedia.org/ontology/predecessor> ?predecessor .
  ?predecessor <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder> .
  ?predecessor <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
  OPTIONAL { 
    ?reference <http://dbpedia.org/resource/Thihapate_of_Mohnyin> ?relatedEntity .
    FILTER(?predecessor = ?relatedEntity)
  }
}
```",4,6,5,3,2,3,3,71,1,1,0,0.5,1.0,0.6666666666666666
427,29,test,Give me the party of the father of Lamberto Andreotti and reference to Partito Popolare Italiano and party of Romano Prodi.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Lamberto_Andreotti> <http://dbpedia.org/property/father> ?v3 . <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/ontology/party> ?result . ?result <http://xmlns.com/foaf/0.1/name> ""Partito Popolare Italiano""@en . ?v3 <http://dbpedia.org/ontology/party> ?result . }","```sparql
# Step 1: Identify the father of Lamberto Andreotti
SELECT ?father WHERE {
    <http://dbpedia.org/resource/Lamberto_Andreotti> <http://xmlns.com/foaf/0.1/familyName> ?father .
}

# Step 2: Determine the political party of Lamberto Andreotti's father
SELECT ?party WHERE {
    ?person <http://dbpedia.org/ontology/party> ?party .
    FILTER(?person = ?father)
}

# Step 3: Find references to Partito Popolare Italiano
SELECT ?reference WHERE {
    ?entity <http://dbpedia.org/property/reference> ?reference .
    FILTER(CONTAINS(LCASE(STR(?reference)), ""partito popolare italiano""))
}

# Step 4: Identify the political party of Romano Prodi
SELECT ?party WHERE {
    <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/ontology/party> ?party .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
492,53,test,"Give me the person decedent at the work of the author of French Algeria and commander in Franco-Hova Wars and person decedent at the capital, that is a settlement, of Algeria.",SELECT ?result WHERE { <http://dbpedia.org/resource/French_Algeria> <http://dbpedia.org/property/author> ?v3 . <http://dbpedia.org/resource/Algeria> <http://dbpedia.org/ontology/capital> ?v1 . ?v2 <http://dbpedia.org/property/author> ?v3 . <http://dbpedia.org/resource/Franco-Hova_Wars> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . },"```sparql
# Step 1: Identify the author of ""French Algeria""
SELECT ?author WHERE {
    ?work <http://dbpedia.org/ontology/author> ?author .
    ?work <http://www.w3.org/2000/01/rdf-schema#label> ""French Algeria""@en .
}

# Step 2: Identify the commander in Franco-Hova Wars
SELECT ?commander WHERE {
    ?war <http://dbpedia.org/ontology/commander> ?commander .
    ?war <http://www.w3.org/2000/01/rdf-schema#label> ""Franco-Hova Wars""@en .
}

# Step 3: Identify the capital of Algeria that is a settlement
SELECT ?capital WHERE {
    ?place <http://dbpedia.org/ontology/capital> ?capital .
    ?place <http://www.w3.org/2000/01/rdf-schema#label> ""Algeria""@en .
    ?capital <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement> .
}

# Step 4: Find the person decedent at the work of the author
SELECT ?decedentWork WHERE {
    ?work <http://dbpedia.org/ontology/death> ?deathEvent .
    ?deathEvent <http://dbpedia.org/property/personDecedent> ?decedentWork .
    ?work <http://dbpedia.org/ontology/author> ?author .
    FILTER(?author = ?authorOfFrenchAlgeria)
}

# Step 5: Find the person decedent at the capital of Algeria
SELECT ?decedentCapital WHERE {
    ?capital <http://dbpedia.org/ontology/death> ?deathEvent .
    ?deathEvent <http://dbpedia.org/property/personDecedent> ?decedentCapital .
}

# Step 6: Find common person decedent
SELECT DISTINCT ?commonDecedent WHERE {
    VALUES ?decedentWork { ?decedentWork }
    VALUES ?decedentCapital { ?decedentCapital }
    FILTER(?decedentWork = ?decedentCapital)
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
485,25,test,"Give me the entity in the region, that is a country, of Western European Time and entity in Nottinghamshire and birth place of the awardee, that is a writer and a poet, of Eric Gregory Award.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v4 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Eric_Gregory_Award> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Poet>. ?v2 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Western_European_Time> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>. ?v4 <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Nottinghamshire> . },"```sparql
# Step 1: Find the country associated with Western European Time (WET)
SELECT ?country WHERE {
    ?timeZone <http://dbpedia.org/ontology/country> ?country .
    ?timeZone <http://www.w3.org/2000/01/rdf-schema#label> ""Western European Time""@en .
}

# Step 2: Find entities in Nottinghamshire within the identified country
SELECT DISTINCT ?entity WHERE {
    ?entity <http://dbpedia.org/ontology/location> ?location .
    ?location <http://www.w3.org/2000/01/rdf-schema#label> ""Nottinghamshire""@en .
    ?country <http://dbpedia.org/ontology/country> ?entityCountry .
    FILTER(?entityCountry = ?country)
}

# Step 3: Find the birthplace of an awardee who is both a writer and a poet of the Eric Gregory Award
SELECT DISTINCT ?birthPlace WHERE {
    ?person <http://dbpedia.org/property/birthPlace> ?birthPlace .
    ?person <http://purl.org/dc/terms/subject> <http://dbpedia.org/resource/Eric_Gregory_Award> .
    ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer> .
    ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Poet> .
}
```",5,8,6,2,3,2,3,28,0,0,1,0,0.0,0
994,38,test,"Give me the band member of the person born, that is a musical artist, as Donald Maynard Dokken and associated musical artist of the band member, that is a band and a group and an organisation, of Meshuggah.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ""Donald Maynard Dokken""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Meshuggah> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
SELECT ?bandMember ?associatedArtist WHERE {
  # Step 1: Identify Donald Maynard Dokken as a musical artist
  ?dokken a dbo:MusicalArtist ;
          foaf:name ""Donald Maynard Dokken"" ;
          dbo:birthPlace ?birthPlace .

  # Step 2: Find band members associated with Donald Maynard Dokken
  ?bandMember dbo:member ?dokken .

  # Step 3: Identify bands that are groups, organizations, and have Meshuggah as a member
  ?band a dbo:Band ;
        dbo:groupType ""Group"" ;
        dbo:organizationType ""Organization"" ;
        dbo:member <http://dbpedia.org/resource/Meshuggah> .

  # Step 4: Find associated musical artists of these band members
  ?bandMember dbo:associatedMusicalArtist ?associatedArtist .
}
```",4,8,5,2,2,3,3,71,0,0,1,0,0.0,0
10,21,test,Give me the associated musical artist of Matt Colton and band member of Luke Vibert and professional in the birth name of Sharon Kao.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Luke_Vibert> . ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Matt_Colton> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Sharon_Kao> <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
SELECT DISTINCT ?entity WHERE {
  # Condition 1: Associated musical artist of Matt Colton
  { 
    ?entity <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Matt_Colton> .
  }
  
  UNION
  
  # Condition 2: Band member of Luke Vibert
  {
    ?entity <http://dbpedia.org/ontology/memberOfBand> <http://dbpedia.org/resource/Luke_Vibert> .
  }

  UNION

  # Condition 3: Professional in the birth name of Sharon Kao
  {
    ?entity <http://www.w3.org/2000/01/rdf-schema#label> ?name .
    FILTER(CONTAINS(LCASE(?name), LCASE(""Sharon Kao"")))
  }
}
```",4,4,5,2,3,2,3,28,0,2,1,0.0,0.0,0
488,69,test,"Give me the birth place of the commander in the war, that is a military conflict and an event and a societal event, of Saitō Hajime and administration of the father of the spouse, that is a royalty, of Tokugawa Masako and death place of the father, that is a politician, of Yūki Hideyasu.",SELECT ?result WHERE { <http://dbpedia.org/resource/Yūki_Hideyasu> <http://dbpedia.org/property/father> ?v7 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Tokugawa_Masako> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Saitō_Hajime> <http://dbpedia.org/ontology/battle> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/property/father> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v7 <http://dbpedia.org/ontology/deathPlace> ?result . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://dbpedia.org/ontology/commander> ?v3 . ?result <http://dbpedia.org/property/leader> ?v2 . },"```sparql
# Part 1: Find the war involving Saitō Hajime
SELECT ?war WHERE {
    ?war rdf:type dbo:MilitaryConflict .
    ?war rdf:type dbo:Event .
    ?war rdf:type dbo:SocietalEvent .
    ?saito dbo:commanderOf ?war .
    FILTER (str(?saito) = ""Saitō_Hajime"")
}

# Part 2: Find the commander of that war and their birthplace
SELECT ?commanderBirthPlace WHERE {
    ?war rdf:type dbo:MilitaryConflict .
    ?war rdf:type dbo:Event .
    ?war rdf:type dbo:SocietalEvent .
    ?saito dbo:commanderOf ?war .
    FILTER (str(?saito) = ""Saitō_Hajime"")
    
    ?war dbo:commander ?commander .
    ?commander dbo:birthPlace ?commanderBirthPlace .
}

# Part 3: Find the spouse of Tokugawa Masako who is royalty
SELECT ?spouse WHERE {
    ?tokugawa dbo:spouse ?spouse .
    FILTER (str(?tokugawa) = ""Tokugawa_Masako"")
    
    ?spouse rdf:type dbo:Royalty .
}

# Part 4: Find the father of that spouse and his administration
SELECT ?administration WHERE {
    ?spouse dbo:father ?father .
    
    ?father dbo:administers ?administration .
}

# Part 5: Find Yūki Hideyasu's father who is a politician and his death place
SELECT ?deathPlace WHERE {
    ?yuki dbo:father ?father .
    FILTER (str(?yuki) = ""Yūki_Hideyasu"")
    
    ?father rdf:type dbo:Politician .
    
    ?father dbo:deathPlace ?deathPlace .
}

# Combine results to get the birthplace of the commander
SELECT ?commanderBirthPlace WHERE {
    # Part 1 and 2 combined
    ?war rdf:type dbo:MilitaryConflict .
    ?war rdf:type dbo:Event .
    ?war rdf:type dbo:SocietalEvent .
    ?saito dbo:commanderOf ?war .
    FILTER (str(?saito) = ""Saitō_Hajime"")
    
    ?war dbo:commander ?commander .
    ?commander dbo:birthPlace ?commanderBirthPlace .

    # Part 3 and 4 combined
    ?tokugawa dbo:spouse ?spouse .
    FILTER (str(?tokugawa) = ""Tokugawa_Masako"")
    
    ?spouse rdf:type dbo:Royalty .
    ?spouse dbo:father ?father .
    
    ?father dbo:administers ?administration .

    # Part 5
    ?yuki dbo:father ?father2 .
    FILTER (str(?yuki) = ""Yūki_Hideyasu"")
    
    ?father2 rdf:type dbo:Politician .
    ?father2 dbo:deathPlace ?deathPlace .
}
```",8,13,9,3,3,3,3,71,0,0,1,0,0.0,0
54,68,test,"Give me the child of the father of the child of Thinkhaya of Pagan and predecessor of the child, that is an office holder and a royalty, of Thihapate of Mohnyin and parent of the child of the parent of Thado Minsaw of Prome.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/father> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> . <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?v5 . ?v7 <http://dbpedia.org/property/father> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v7 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/successor> ?v3 . ?v4 <http://dbpedia.org/ontology/child> ?result . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Thihapate_of_Mohnyin> . },"```sparql
SELECT ?child WHERE {
  # Step 1: Find Thinkhaya's child
  ?thinkhayaChild dbo:parent <http://dbpedia.org/resource/Thinkhaya_of_Pagan> .

  # Step 2: Predecessor of Thinkhaya
  ?predecessor dbo:successor <http://dbpedia.org/resource/Thinkhaya_of_Pagan> .

  # Step 3: Child of the predecessor
  ?child dbo:parent ?predecessor .

  # Step 4: Thihapate's child who is an office holder and royalty
  ?thihapateChild dbo:parent <http://dbpedia.org/resource/Thihapate_of_Mohnyin> .
  ?thihapateChild a dbo:OfficeHolder ;
                 a dbo:Royalty .

  # Step 5: Parent of Thado Minsaw
  ?thadoParent dbo:child <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> .

  # Step 6: Child of this parent (Thado Minsaw)
  ?thadoChild dbo:parent ?thadoParent .
  FILTER (?thadoChild = <http://dbpedia.org/resource/Thado_Minsaw_of_Prome>) .

  # Final condition: Match the child from step 3 with conditions from steps 4 and 6
  FILTER (?child = ?thihapateChild && ?child = ?thadoChild)
}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
427,48,test,"Give me the party of the person born, that is an office holder and a politician, as Romano Antonio Prodi and reference to the name of the party of Michele Pinto.","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v1 <http://dbpedia.org/ontology/party> ?result . ?v1 <http://dbpedia.org/property/birthName> ""Romano Antonio Prodi""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Michele_Pinto> <http://dbpedia.org/ontology/party> ?v3 . ?v3 <http://xmlns.com/foaf/0.1/name> ?v2 . }","```sparql
SELECT ?prodiParty (GROUP_CONCAT(DISTINCT ?pintoParty; separator="", "") AS ?michelePintoParties)
WHERE {
  # Find the party of Romano Antonio Prodi
  ?person a dbo:OfficeHolder ;
          a dbo:Politician ;
          foaf:name ""Romano Antonio Prodi""@en ;
          dbo:party ?prodiParty .
  
  # Find the parties associated with Michele Pinto
  ?michelePinto dbo:party ?pintoParty .
}
```",5,7,6,3,2,3,3,71,0,0,2,0,0.0,0
281,53,test,"Give me the war of the awardee of the award of Jonathon Band and entity in Colony of New Zealand and war of the profession, that is a military unit, of Heather Roy.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> ?v3 . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Colony_of_New_Zealand> . ?v2 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Jonathon_Band> <http://dbpedia.org/property/awards> ?v3 . ?v1 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Heather_Roy> <http://dbpedia.org/property/occupation> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. },"```sparql
# Step 1: Find the award received by Jonathon Band
SELECT ?award WHERE {
    <http://dbpedia.org/resource/Jonathon_Band> <http://dbpedia.org/ontology/awards> ?award .
}

# Step 2: Find the war associated with that award
SELECT DISTINCT ?war WHERE {
    ?award <http://dbpedia.org/property/relatedToWar> ?war .
    # Assuming we have found the award from step 1, replace ?award with the actual URI
}

# Step 3: Identify an entity in the Colony of New Zealand
SELECT ?entity WHERE {
    ?entity <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>.
    ?entity <http://dbpedia.org/property/location> <http://dbpedia.org/resource/Colony_of_New_Zealand> .
}

# Step 4: Find the war associated with Heather Roy's profession
SELECT DISTINCT ?war WHERE {
    <http://dbpedia.org/resource/Heather_Roy> <http://dbpedia.org/ontology/profession> ?profession .
    ?profession <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>.
    ?profession <http://dbpedia.org/property/relatedToWar> ?war .
}

# Step 5: Combine these elements to find the wars
SELECT DISTINCT ?war WHERE {
    # Replace ?award with the actual URI from step 1
    ?award <http://dbpedia.org/property/relatedToWar> ?war .
    
    ?entity <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>.
    ?entity <http://dbpedia.org/property/location> <http://dbpedia.org/resource/Colony_of_New_Zealand> .
    
    <http://dbpedia.org/resource/Heather_Roy> <http://dbpedia.org/ontology/profession> ?profession .
    ?profession <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>.
    ?profession <http://dbpedia.org/property/relatedToWar> ?war .
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
404,41,test,"Give me the spouse of the person born, that is a royalty, as Princess Victoria Louise of Prussia and child of Ernest Augustus, Crown Prince of Hanover and parent of the child, that is a royalty, of Ernest Augustus, Duke of Brunswick.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/ontology/child> ?v4 . ?v2 <http://dbpedia.org/property/birthName> ""Princess Victoria Louise of Prussia""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ernest_Augustus,_Crown_Prince_of_Hanover> . }","```sparql
SELECT ?spouse WHERE {
  ?person a dbo:Royalty ;
          foaf:name ""Princess Victoria Louise of Prussia"" ;
          dbo:parent <http://dbpedia.org/resource/Ernest_Augustus,_Crown_Prince_of_Hanover> .

  ?child a dbo:Royalty ;
         dbo:parent ?person ;
         dbo:parent <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> .

  ?person foaf:mbox ?spouse .
}
```",5,7,6,2,3,3,3,71,0,0,1,0,0.0,0
915,18,test,"Give me the resident of the birthplace, that is a settlement, of the director of Pipe Dreams (1976 film) and father of the child, that is a fictional character and a soap character, of Phillip Spaulding.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoapCharacter>. ?v3 <http://dbpedia.org/property/father> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v1 <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Phillip_Spaulding> . ?result <http://dbpedia.org/ontology/residence> ?v2 . <http://dbpedia.org/resource/Pipe_Dreams_(1976_film)> <http://dbpedia.org/ontology/director> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
SELECT ?resident WHERE {
    ?film dbp:director ?director .
    FILTER (str(?film) = ""Pipe_Dreams_(1976_film)"")
    
    ?director dbo:birthPlace ?birthplace .
    ?birthplace a dbo:Settlement .

    ?child rdf:type dbo:FictionalCharacter ;
           dbo:soapCharacter true ;
           dbp:father ?father .
    ?spaulding dbp:child ?child .
    FILTER (str(?spaulding) = ""Phillip_Spaulding"")

    ?birthplace dbo:resident ?resident .
}
```",5,8,6,3,2,3,2,20,0,0,1,0,0.0,0
487,17,test,"Give me the country of 2022 Vermont House of Representatives election and administration of the person born, that is a soccer player, as the birth name of Phil Scott.",SELECT ?result WHERE { <http://dbpedia.org/resource/Phil_Scott> <http://dbpedia.org/property/birthName> ?v0 . <http://dbpedia.org/resource/2022_Vermont_House_of_Representatives_election> <http://dbpedia.org/ontology/country> ?result . ?v3 <http://dbpedia.org/property/birthName> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?result <http://dbpedia.org/property/governor> ?v3 . },"```sparql
# Part 1: Get the country associated with the 2022 Vermont House of Representatives election
SELECT ?country WHERE {
    <http://dbpedia.org/resource/2022_Vermont_House_of_Representatives_election> <http://dbpedia.org/ontology/country> ?country .
}

# Part 2: Find the person born as Phil Scott who is a soccer player and determine their birth name and administration
SELECT ?birthName ?administration WHERE {
    ?person <http://www.w3.org/2000/01/rdf-schema#label> ""Phil Scott""@en .
    ?person <http://dbpedia.org/ontology/birthName> ?birthName .
    ?person <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Soccer_player> .
    ?person <http://dbpedia.org/property/placeOfBirth> ?placeOfBirth .
    ?placeOfBirth <http://dbpedia.org/ontology/administrativeUnit> ?administration .
}
```",4,5,5,3,2,3,2,20,0,0,1,0,0.0,0
801,62,test,"Give me the professional in the alter ego of the true self of The Shadow and associated musical artist of Chris Taylor (music producer) and producer of the work, that is a musical work and a song and a work, of the professional, that is a musical artist, in Rapper.","SELECT ?result WHERE { ?v4 <http://xmlns.com/foaf/0.1/givenName> ""The Shadow""@en . ?v0 <http://dbpedia.org/property/occupation> ""Rapper""@en . ?result <http://dbpedia.org/property/occupation> ?v3 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v6 <http://dbpedia.org/ontology/producer> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v6 <http://dbpedia.org/property/writer> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Chris_Taylor_(music_producer)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://dbpedia.org/property/alterEgo> ?v3 . }","```sparql
SELECT ?professional WHERE {
  # Step 1: Find The Shadow's alter ego
  ?shadow <http://dbpedia.org/ontology/alterEgo> ?alterEgo .
  
  # Step 2: Find associated professional with the alter ego
  ?alterEgo <http://dbpedia.org/property/professional> ?professional1 .

  # Step 3: Find Chris Taylor's associated musical artist
  ?chrisTaylor <http://dbpedia.org/ontology/associatedMusicalArtist> ?musicalArtist .
  
  # Ensure the professional is linked to the musical artist
  ?professional1 <http://dbpedia.org/property/professional> ?musicalArtist .

  # Step 4: Identify a work that is both a musical work and a song produced by this professional
  ?work <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork> .
  ?work <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song> .
  ?work <http://dbpedia.org/property/producer> ?professional1 .

  # Step 5: Ensure the professional is in the rapper category
  ?professional1 <http://dbpedia.org/ontology/profession> <http://dbpedia.org/resource/Rapper> .
}
```",7,11,8,3,3,3,3,71,0,0,2,0,0.0,0
9,60,test,"Give me the alma mater of the mayor, that is a politician, of the entity, that is an organisation, in Belfast and figure known as the nickname of the entity, that is an organisation and an educational institution, in Northern Ireland.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Northern_Ireland> . ?result <http://dbpedia.org/property/nickname> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v3 <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Belfast> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/property/leader> ?v2 . ?v2 <http://dbpedia.org/ontology/almaMater> ?result . ?v0 <http://dbpedia.org/property/nickname> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
SELECT ?almaMater WHERE {
  # Step 1: Find organizations in Belfast
  ?organization <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation> .
  ?organization <http://dbpedia.org/property/location> ?location .
  FILTER(CONTAINS(LCASE(?location), ""belfast"")) .

  # Step 2: Find a politician who is the mayor of this organization
  ?mayor <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .
  ?mayor <http://dbpedia.org/ontology/politicalOffice> ?office .
  ?office <http://dbpedia.org/property/organization> ?organization .

  # Step 3: Determine the alma mater of this politician
  ?mayor <http://dbpedia.org/ontology/almaMater> ?almaMater .

  # Step 4: Identify educational institutions in Northern Ireland with a nickname
  ?institution <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalOrganization> .
  ?institution <http://dbpedia.org/property/location> ?instLocation .
  FILTER(CONTAINS(LCASE(?instLocation), ""northern ireland"")) .
  ?institution <http://dbpedia.org/ontology/nickname> ?nickname .

  # Step 5: Ensure the organization and educational institution are the same entity
  FILTER(?organization = ?institution)
}
```",6,10,7,3,2,3,3,71,0,0,1,0,0.0,0
994,58,test,"Give me the associated musical artist of S.A. Slayer and band member of the person born, that is a musical artist, as the persona of Don Dokken and associated musical artist of the band member, that is a band and a group and an organisation, of Meshuggah.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Meshuggah> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://dbpedia.org/property/birthName> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Don_Dokken> <http://xmlns.com/foaf/0.1/givenName> ?v4 . ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. <http://dbpedia.org/resource/S.A._Slayer> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
# Step 1: Find the person associated with S.A. Slayer
SELECT ?person WHERE {
    ?sasSlayer <http://dbpedia.org/ontology/associatedMusicalArtist> ?person .
    FILTER(STRSTARTS(LCASE(?sasSlayer), ""s.a. slayer""))
}

# Step 2: Find the band member of this person who is also born as Don Dokken
SELECT ?bandMember WHERE {
    ?person <http://dbpedia.org/ontology/bandMember> ?bandMember .
    ?bandMember <http://dbpedia.org/property/birthName> ""Don Dokken"" .
}

# Step 3: Find the associated musical artist of this band member
SELECT ?associatedArtist WHERE {
    ?bandMember <http://dbpedia.org/ontology/associatedMusicalArtist> ?associatedArtist .
}

# Step 4: Identify the band members of Meshuggah
SELECT ?meshuggahBandMember WHERE {
    ?meshuggah <http://dbpedia.org/ontology/member> ?meshuggahBandMember .
    FILTER(STRSTARTS(LCASE(?meshuggah), ""meshuggah""))
}

# Step 5: Find the associated musical artist of this Meshuggah band member
SELECT ?meshAssociatedArtist WHERE {
    ?meshuggahBandMember <http://dbpedia.org/ontology/associatedMusicalArtist> ?meshAssociatedArtist .
}
```",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
994,63,test,"Give me the associated musical artist of the associated musical artist of the reference to Watchtower and associated musical artist of the band member, that is a band and a group and an organisation, of Meshuggah and band member of the person born, that is a musical artist, as Donald Maynard Dokken.","SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://dbpedia.org/property/birthName> ""Donald Maynard Dokken""@en . ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Meshuggah> . ?v3 <http://xmlns.com/foaf/0.1/name> ""Watchtower""@en . }","```sparql
# Step 1: Reference to Watchtower
SELECT ?watchtowerArtist WHERE {
    ?artist <http://dbpedia.org/ontology/associatedBand> <http://dbpedia.org/resource/Watchtower> .
}

# Step 2: Associated Musical Artist of Watchtower's Associated Artist
SELECT ?step2Artist WHERE {
    ?artist1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?watchtowerArtist .
    ?artist1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?step2Artist .
}

# Step 3: Band Member of Meshuggah
SELECT ?meshuggahMember WHERE {
    ?member <http://dbpedia.org/ontology/memberOfBand> <http://dbpedia.org/resource/Meshuggah> .
    <http://dbpedia.org/resource/Meshuggah> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band> .
    <http://dbpedia.org/resource/Meshuggah> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group> .
    <http://dbpedia.org/resource/Meshuggah> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation> .
}

# Step 4: Associated Musical Artist of Meshuggah's Band Member
SELECT ?step4Artist WHERE {
    ?member1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?meshuggahMember .
    ?member1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?step4Artist .
}

# Step 5: Person Born as Donald Maynard Dokken
SELECT ?dokken WHERE {
    ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
    ?person <http://dbpedia.org/property/birthName> ""Donald Maynard Dokken"" .
}

# Step 6: Band Member of Donald Maynard Dokken
SELECT ?dokkenMember WHERE {
    ?member2 <http://dbpedia.org/ontology/memberOfBand> ?dokken .
}

# Final Query: Find the common associated musical artist from steps 2 and 4, considering step 6
SELECT DISTINCT ?commonArtist WHERE {
    VALUES (?artist) { ?step2Artist ?step4Artist }
    ?artist <http://dbpedia.org/ontology/associatedMusicalArtist> ?commonArtist .
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
391,49,test,"Give me the actor of the movie, that is a movie and a work and a television show, with the professional in  and native of the figure known as Hub City.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/nickname> ""Hub City""@en . ?v0 <http://dbpedia.org/property/occupation> """"@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://dbpedia.org/property/starring> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://dbpedia.org/property/starring> ?result . }","```sparql
SELECT ?actor WHERE {
  ?movie <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Movie>.
  ?movie <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>.
  ?movie <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>.
  
  ?actor <http://dbpedia.org/property/starring> ?movie.
  
  ?actor <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/United_States>. # Assuming Hub City is in the US
  ?actor <http://dbpedia.org/ontology/birthPlace> ?hubCity.

  FILTER (str(?hubCity) = ""Hub City"") # Replace with actual URI or label if available
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
747,67,test,"Give me the band of the person born as the persona of Shèna and band of the writer of the work, that is a song, of Amba Shepherd and person born on 1985-04-29.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Shèna> <http://xmlns.com/foaf/0.1/givenName> ?v1 . ?v3 <http://dbpedia.org/property/birthName> ?v1 . ?v6 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Amba_Shepherd> . ?result <http://dbpedia.org/ontology/birthDate> ""1985-04-29""^^<http://www.w3.org/2001/XMLSchema#date> . ?v0 <http://dbpedia.org/property/writer> ?v6 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. }","```sparql
# Part 1: Band of the person born as the persona of Shèna
SELECT ?bandShena WHERE {
    ?person rdfs:label ""Shèna""@en .
    ?person foaf:nick ?persona .
    FILTER(?persona = ""Shèna"")
    ?person dbo:memberOfBand ?bandShena .
}

UNION

# Part 2: Band of the writer of the work, that is a song, of Amba Shepherd and person born on 1985-04-29
SELECT ?bandWriter WHERE {
    ?song dbo:lyricsBy ?writer .
    ?song dbo:workExample ?example .
    ?example rdfs:label ""Amba Shepherd""@en .
    ?person dbo:birthDate ""1985-04-29""^^xsd:date .
    ?writer dbo:memberOfBand ?bandWriter .
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
488,63,test,"Give me the birth place of the commander in the war, that is a military conflict and an event and a societal event, of Saitō Hajime and death place of the father, that is a politician, of Yūki Hideyasu and administration of the father of Emperor Go-Mizunoo.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Emperor_Go-Mizunoo> <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/property/leader> ?v2 . <http://dbpedia.org/resource/Saitō_Hajime> <http://dbpedia.org/ontology/battle> ?v4 . <http://dbpedia.org/resource/Yūki_Hideyasu> <http://dbpedia.org/property/father> ?v6 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v6 <http://dbpedia.org/ontology/deathPlace> ?result . ?v4 <http://dbpedia.org/ontology/commander> ?v3 . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
# Part 1: Birth Place of Commander in War
SELECT ?birthPlace WHERE {
    ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>.
    ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>.
    ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>.
    ?saito <http://dbpedia.org/resource/Saitō_Hajime> <http://dbpedia.org/ontology/battleCommander> ?war.
    ?commander <http://dbpedia.org/ontology/birthPlace> ?birthPlace.
    ?war <http://dbpedia.org/ontology/commander> ?commander.
}

UNION

# Part 2: Death Place of Father of Yūki Hideyasu
SELECT ?deathPlace WHERE {
    ?yukiFather <http://dbpedia.org/resource/Yūki_Hideyasu> <http://dbpedia.org/property/father> ?yukiFather.
    ?yukiFather <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>.
    ?yukiFather <http://dbpedia.org/ontology/deathPlace> ?deathPlace.
}

UNION

# Part 3: Administration of Father of Emperor Go-Mizunoo
SELECT ?administration WHERE {
    ?goMizunooFather <http://dbpedia.org/resource/Emperor_Go-Mizunoo> <http://dbpedia.org/property/father> ?goMizunooFather.
    ?goMizunooFather <http://dbpedia.org/ontology/administration> ?administration.
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
994,67,test,"Give me the associated musical artist of the band member, that is a band and a group and an organisation, of the band, that is an organisation, of Fredrik Thordendal and band member of the person born, that is a musical artist, as the persona of Don Dokken and associated musical artist of S.A. Slayer.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Don_Dokken> <http://xmlns.com/foaf/0.1/givenName> ?v4 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/birthName> ?v4 . ?v1 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Fredrik_Thordendal> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. <http://dbpedia.org/resource/S.A._Slayer> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . },"```sparql
SELECT ?associatedArtist WHERE {
  # Step 1: Identify Fredrik Thordendal's band
  ?band a <http://dbpedia.org/ontology/Band> ;
        <http://dbpedia.org/property/member> <http://dbpedia.org/resource/Fredrik_Thordendal> .

  # Step 2: Ensure the band is an organization and a group
  ?band a <http://dbpedia.org/ontology/Organisation> ;
        a <http://dbpedia.org/ontology/SocialGroup> .

  # Step 3: Identify Don Dokken's persona
  ?person a <http://dbpedia.org/ontology/MusicalArtist> ;
          <http://dbpedia.org/property/birthName> ""Don Dokken""@en .

  # Step 4: Find S.A. Slayer's associated musical artist
  ?slayer a <http://dbpedia.org/resource/Tom_Araya> ;
          <http://dbpedia.org/ontology/associatedMusicalArtist> ?sASlave .

  # Step 5: Find the associated musical artist of the band member from Meshuggah
  ?bandMember a <http://dbpedia.org/ontology/BandMember> ;
              <http://dbpedia.org/property/memberOf> ?band ;
              <http://dbpedia.org/ontology/associatedMusicalArtist> ?associatedArtist .
}
```",7,12,8,3,3,3,3,71,0,0,1,0,0.0,0
421,26,test,Give me the person born as the birth name of Dino Merlin and band member of the awardee of [[#Awards and nominations and native of Socialist Federal Republic of Yugoslavia.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v2 . ?v1 <http://dbpedia.org/property/awards> ""[[#Awards and nominations""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Socialist_Federal_Republic_of_Yugoslavia> . <http://dbpedia.org/resource/Dino_Merlin> <http://dbpedia.org/property/birthName> ?v2 . }","```sparql
SELECT ?person WHERE {
  # Step 1: Get Dino Merlin's birth name
  <http://dbpedia.org/resource/Dino_Merlin> <http://www.w3.org/2000/01/rdf-schema#label> ""Dino Merlin""@en .
  <http://dbpedia.org/resource/Dino_Merlin> <http://dbpedia.org/ontology/birthName> ?birthName .

  # Step 2: Find band members of Dino Merlin
  OPTIONAL {
    ?bandMember <http://dbpedia.org/ontology/memberOfBand> ?band .
    ?band <http://www.w3.org/2000/01/rdf-schema#label> ?bandLabel .
    FILTER(CONTAINS(LCASE(?bandLabel), LCASE(?birthName)))
  }

  # Step 3: Check if the band member is associated with an awardee
  OPTIONAL {
    ?person <http://dbpedia.org/ontology/memberOfBand> ?band .
    ?award <http://dbpedia.org/property/recipient> ?person .
  }

  # Step 4: Ensure the person is native to Socialist Federal Republic of Yugoslavia
  ?person <http://dbpedia.org/ontology/nativeCountry> <http://dbpedia.org/resource/Socialist_Federal_Republic_of_Yugoslavia> .

  FILTER(?person != <http://dbpedia.org/resource/Dino_Merlin>)
}
```",5,5,6,2,3,2,3,28,0,0,1,0,0.0,0
378,68,test,"Give me the war of the person born as the birth name of Carl Pontus Gahn and claim to fame of the commander in Great Siege of Gibraltar and war of the commander in the reference, that is a military conflict, to Peninsular War.","SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""Peninsular War""@en . ?v4 <http://dbpedia.org/property/birthName> ?v5 . ?v4 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/ontology/commander> ?v7 . ?v3 <http://dbpedia.org/ontology/knownFor> ?result . ?v7 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Great_Siege_of_Gibraltar> <http://dbpedia.org/ontology/commander> ?v3 . <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/property/birthName> ?v5 . }","```sparql
# Step 1: Get Carl Pontus Gahn's birth name
SELECT ?birthName WHERE {
    <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://xmlns.com/foaf/0.1/birthName> ?birthName .
}

# Step 2: Find the claim to fame of the commander in the Great Siege of Gibraltar
SELECT ?claimToFame WHERE {
    ?commander <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Great_Siege_of_Gibraltar> .
    ?commander <http://dbpedia.org/property/knownFor> ?claimToFame .
}

# Step 3: Identify the war associated with the commander in the reference to Peninsular War
SELECT ?war WHERE {
    ?peninsularCommander <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Peninsular_War> .
    ?peninsularCommander <http://dbpedia.org/property/battle> ?war .
    ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
}

# Step 4: Find the common war
SELECT DISTINCT ?commonWar WHERE {
    # Assuming we have variables from previous queries: ?birthName, ?claimToFame, ?war
    ?person <http://xmlns.com/foaf/0.1/birthName> ?birthName .
    ?commander <http://dbpedia.org/property/knownFor> ?claimToFame .
    ?peninsularCommander <http://dbpedia.org/ontology/commander> ?commonWar .
    ?commonWar <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
}
```",8,9,9,3,3,3,3,71,0,0,2,0,0.0,0
360,26,test,"Give me the reference to the author of Blinded by the Light and native of Johannesburg and writer of the work, that is an album, of Dave Flett.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Album>. ?v2 <http://dbpedia.org/property/author> ""Dave Flett""@en . <http://dbpedia.org/resource/Blinded_by_the_Light> <http://dbpedia.org/property/author> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . ?v2 <http://dbpedia.org/property/writer> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Johannesburg> . }","```sparql
SELECT ?author WHERE {
  ?work <http://dbpedia.org/ontology/author> ?author .
  ?work <http://dbpedia.org/property/title> ""Blinded by the Light"" .
  
  ?person <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Johannesburg> .
  FILTER (?author = ?person)
  
  ?album <http://dbpedia.org/ontology/writer> ?author .
  ?album <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalAlbum> .
  ?album <http://dbpedia.org/property/contributor> <http://dbpedia.org/resource/Dave_Flett> .
}
```",5,6,6,2,3,2,3,28,0,0,1,0,0.0,0
435,26,test,"Give me the work of the author of Iceland and region of Greenwich Mean Time and territory administered from the figure known, that is a settlement and a town and Icelandic, as Land of fire and ice.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Greenwich_Mean_Time> . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Iceland>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Iceland> <http://dbpedia.org/property/author> ?v2 . ?v1 <http://dbpedia.org/property/nickname> ""Land of fire and ice""@en . ?result <http://dbpedia.org/ontology/capital> ?v1 . ?result <http://dbpedia.org/property/author> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Town>. }","```sparql
SELECT ?work WHERE {
    # Step 1: Identify Iceland as a settlement and town that is Icelandic
    ?iceland <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement> .
    ?iceland <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Town> .
    ?iceland <http://dbpedia.org/property/country> <http://dbpedia.org/resource/Iceland> .

    # Step 2: Find the author of ""Iceland""
    ?book <http://purl.org/dc/terms/title> ""Iceland""@en .
    ?book <http://dbpedia.org/ontology/author> ?author .

    # Step 3: Identify the region associated with GMT
    ?gmtRegion <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region> .
    ?gmtRegion <http://dbpedia.org/property/timeZone> ""Greenwich Mean Time""@en .

    # Step 4: Determine the territory administered from this GMT region
    ?territory <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Territory> .
    ?territory <http://dbpedia.org/property/administeredFrom> ?gmtRegion .

    # Step 5: Retrieve the works of the author
    ?work <http://dbpedia.org/ontology/author> ?author .
}
```",5,8,6,2,3,2,3,28,0,0,1,0,0.0,0
427,70,test,"Give me the reference to the name of Italian People's Party (1994) and party of the father of the alumnus of Massachusetts Institute of Technology and party of the person born, that is an office holder and a politician, as the birth name of Romano Prodi.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://dbpedia.org/property/birthName> ?v1 . ?v7 <http://dbpedia.org/ontology/party> ?result . ?v0 <http://dbpedia.org/property/father> ?v7 . <http://dbpedia.org/resource/Italian_People's_Party_(1994)> <http://xmlns.com/foaf/0.1/name> ?v4 . <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/property/birthName> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Massachusetts_Institute_of_Technology> . ?v3 <http://dbpedia.org/ontology/party> ?result . },"```sparql
# Query for Italian People's Party (1994) reference
SELECT ?partyName WHERE {
  ?party rdf:type dbo:PoliticalParty ;
         rdfs:label ""Italian People's Party (1994)""@en .
  ?party foaf:name ?partyName .
}

UNION

# Query for the party of the father of an alumnus of MIT
SELECT ?fatherParty WHERE {
  ?alumnus dbo:almaMater <http://dbpedia.org/resource/Massachusetts_Institute_of_Technology> ;
           dbo:father ?father .
  ?father dbo:partyAffiliation ?fatherParty .
}

UNION

# Query for the party of a person born as Romano Prodi
SELECT ?personParty WHERE {
  ?person foaf:name ""Romano Prodi""@en ;
          rdf:type dbo:OfficeHolder, dbo:Politician ;
          dbo:birthName ""Romano Prodi""@en .
  ?person dbo:partyAffiliation ?personParty .
}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
360,20,test,"Give me the reference to Manfred Mann and native of the death place, that is a settlement, of Winnie Madikizela-Mandela and writer of The Roaring Silence.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . <http://dbpedia.org/resource/Winnie_Madikizela-Mandela> <http://dbpedia.org/ontology/deathPlace> ?v3 . ?result <http://xmlns.com/foaf/0.1/name> ""Manfred Mann""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/The_Roaring_Silence> <http://dbpedia.org/property/writer> ?result . }","```sparql
SELECT ?result WHERE {
  # Condition 1: Reference by Manfred Mann
  <http://dbpedia.org/resource/Manfred_Mann> <http://dbpedia.org/ontology/reference> ?result .

  # Condition 2: Native place of Winnie Madikizela-Mandela's death location, which is a settlement
  OPTIONAL {
    <http://dbpedia.org/resource/Winnie_Madikizela-Mandela> <http://dbpedia.org/ontology/deathPlace> ?deathPlace .
    ?deathPlace <http://dbpedia.org/ontology/nativePlace> ?result .
    ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement> .
  }

  # Condition 3: Written about in ""The Roaring Silence""
  OPTIONAL {
    ?book <http://purl.org/dc/terms/title> ""The Roaring Silence"" .
    ?book <http://dbpedia.org/property/writtenBy> ?result .
  }
}
```",4,5,5,2,3,2,3,28,0,0,1,0,0.0,0
92,45,test,Give me the band member of Nevermore and associated musical artist of Jim Sheppard and band of the person born as the birth name of Joseph Michael.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Nevermore> . <http://dbpedia.org/resource/Joseph_Michael> <http://dbpedia.org/property/birthName> ?v0 . <http://dbpedia.org/resource/Jim_Sheppard> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/bandMember> ?v1 . },"```sparql
# Query 1: Band members of Nevermore
SELECT ?person WHERE {
    ?band rdf:type dbo:Band .
    ?band foaf:name ""Nevermore"" .
    ?band dbo:member ?person .
}

UNION

# Query 2: Associated musical artist of Jim Sheppard
SELECT ?artist WHERE {
    ?person foaf:name ""Jim Sheppard"" .
    ?person dbo:musicalArtist ?artist .
}

UNION

# Query 3: Band of the person born as Joseph Michael
SELECT ?band WHERE {
    ?person foaf:name ?name .
    ?person dbo:birthName ""Joseph Michael"" .
    ?person dbo:member ?band .
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
161,45,test,"Give me the commander in the force, that is an event, of the figure known as El Director and military force of Rif War and military force of Spanish Civil War.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> ?v0 . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Rif_War> . ?v0 <http://xmlns.com/foaf/0.1/nick> ""El Director""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . }","```sparql
SELECT ?commander WHERE {
  ?elDirector foaf:name ""El Director"" .
  ?rifWar dbo:wikiPageRedirects dbpedia-es:Guerra_del_Rif .
  ?civilWar dbo:wikiPageRedirects dbpedia-es:Guerra_Civil_Española .
  
  ?elDirector dbo:militaryForce ?rifWar ;
              dbo:militaryForce ?civilWar .

  ?event dbo:type dbr:Event ;
         dbo:commander ?elDirector .

  ?force dbo:event ?event .
}
```",5,6,6,3,3,3,3,71,0,0,11,0,0.0,0
232,44,test,"Give me the child of Jon Pertwee and native of the residence, that is a settlement and British, of Sylvie Bermann and actor of the claim to fame, that is a film and a military conflict, of Sean Pertwee.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v4 <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . <http://dbpedia.org/resource/Sean_Pertwee> <http://dbpedia.org/ontology/knownFor> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Sylvie_Bermann> <http://dbpedia.org/property/residence> ?v2 . <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/ontology/child> ?result . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. },"```sparql
SELECT ?child WHERE {
  # Step 1: Identify the child of Jon Pertwee
  ?child <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/Jon_Pertwee>.

  # Step 2: Find the native of the residence of Sylvie Bermann
  ?residence <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>.
  ?residence <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>.
  <http://dbpedia.org/resource/Sylvie_Bermann> <http://dbpedia.org/property/residence> ?residence.
  ?child <http://dbpedia.org/ontology/birthPlace> ?residence.

  # Step 3: Identify the actor of the claim to fame of Sean Pertwee
  ?film <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>.
  ?film <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>.
  <http://dbpedia.org/resource/Sean_Pertwee> <http://dbpedia.org/ontology/knownFor> ?film.
  ?child <http://dbpedia.org/ontology/performance> ?film.
}
```",5,9,6,2,3,3,3,71,0,0,1,0,0.0,0
617,37,test,"Give me the parent of Nysa (wife of Pharnaces I of Pontus) and spouse of the child of the successor, that is a royalty, of Antiochus (son of Antiochus III the Great).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Nysa_(wife_of_Pharnaces_I_of_Pontus)> . <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/successor> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
# Step 1: Find Nysa (wife of Pharnaces I of Pontus) and her parent
SELECT ?nysa ?parent WHERE {
    ?nysa <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Pharnaces_I_of_Pontus> .
    ?nysa <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Wife> .
    OPTIONAL { ?nysa <http://dbpedia.org/property/father> ?parent . }
}

# Step 2: Find the successor of Antiochus (son of Antiochus III the Great)
SELECT ?successor WHERE {
    ?antiochus <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Son> .
    ?antiochus <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Antiochus_III_the_Great> .
    ?antiochus <http://dbpedia.org/ontology/successor> ?successor .
}

# Step 3: Find the child of that successor who is royalty
SELECT ?child WHERE {
    ?successor <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
    ?successor <http://dbpedia.org/property/child> ?child .
}

# Step 4: Identify the spouse of this child
SELECT ?spouse WHERE {
    ?child <http://dbpedia.org/ontology/spouse> ?spouse .
}

# Final step: Check if there's a connection between Nysa's parent and this spouse
SELECT DISTINCT ?parent ?spouse WHERE {
    { SELECT ?nysa ?parent WHERE {
        ?nysa <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Pharnaces_I_of_Pontus> .
        ?nysa <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Wife> .
        OPTIONAL { ?nysa <http://dbpedia.org/property/father> ?parent . }
    } }

    { SELECT ?spouse WHERE {
        ?successor <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
        ?successor <http://dbpedia.org/property/child> ?child .
        ?child <http://dbpedia.org/ontology/spouse> ?spouse .
    } }
}
```",4,5,5,3,2,3,3,71,0,0,2,0,0.0,0
54,70,test,"Give me the predecessor of the child, that is an office holder and a royalty, of the reference to Thihapate of Mohnyin and child of the father of Soe Min Wimala Dewi and parent of the child of the parent of Thado Minsaw of Prome.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/ontology/child> ?result . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> . ?v1 <http://xmlns.com/foaf/0.1/name> ""Thihapate of Mohnyin""@en . ?v7 <http://dbpedia.org/ontology/parent> ?result . ?v7 <http://dbpedia.org/property/father> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Soe_Min_Wimala_Dewi> <http://dbpedia.org/property/father> ?v4 . }","```sparql
SELECT ?predecessor WHERE {
  # Step 1: Find Thado Minsaw of Prome's parent
  ?thadoMinsaw dbpedia-owl:parent ?parentOfThadoMinsaw.

  # Step 2: Find the child of that parent
  ?childOfParent dbpedia-owl:parent ?parentOfThadoMinsaw.

  # Step 3: Determine the father of Soe Min Wimala Dewi
  ?soeMinWimalaDewi dbpedia-owl:father ?fatherOfSoeMinWimalaDewi.

  # Step 4: Identify the parent of the child from step 2
  ?childOfParent dbpedia-owl:parent ?fatherOfSoeMinWimalaDewi.

  # Step 5: Find the reference to Thihapate of Mohnyin's child
  ?thihapateChild dbpedia-owl:child ?referenceToThihapateOfMohnyin.

  # Step 6: Ensure this child is an office holder and royalty
  ?thihapateChild a dbpedia-owl:OfficeHolder;
                  a dbpedia-owl:Royalty.

  # Step 7: Determine the predecessor of this child
  ?thihapateChild dbpedia-owl:predecessor ?predecessor.
}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
48,17,test,"Give me the band of the actor, that is a musical artist, of the show with Stacey Dash and band of Carl Falk.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/property/starring> ?v3 . ?v0 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Stacey_Dash> . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Carl_Falk> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
# Step 1: Find the show featuring Stacey Dash
SELECT ?show WHERE {
    ?stacey dbo:actor ?show .
    ?stacey rdfs:label ""Stacey Dash""@en .
}

# Step 2: Identify actors from that show who are musical artists
SELECT DISTINCT ?actor ?band WHERE {
    # Reuse the result of step 1 to find actors in the same show
    ?show dbo:actor ?actor .
    
    # Ensure the actor is a musical artist
    ?actor dbo:musicalArtist true .

    # Find the band associated with this musical artist
    ?actor dbo:band ?band .
}

# Step 3: Find the band of Carl Falk
SELECT DISTINCT ?falkBand WHERE {
    ?carlFalk rdfs:label ""Carl Falk""@en .
    ?carlFalk dbo:band ?falkBand .
}
```",4,5,5,3,2,3,2,20,0,0,1,0,0.0,0
9,68,test,"Give me the alma mater of the mayor, that is a politician, of the entity, that is an organisation, in Belfast and figure known as the nickname of Queen's University Belfast and alma mater of the awardee of the reference, that is an award, to Royal Medals.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Belfast> . <http://dbpedia.org/resource/Queen's_University_Belfast> <http://dbpedia.org/property/nickname> ?v3 . ?v4 <http://dbpedia.org/ontology/almaMater> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v7 <http://dbpedia.org/ontology/almaMater> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?result <http://dbpedia.org/property/nickname> ?v3 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v5 <http://dbpedia.org/property/leader> ?v4 . ?v7 <http://dbpedia.org/property/awards> ?v0 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Royal Medals""@en . }","```sparql
# Step 1: Find the entity that is an organization in Belfast
SELECT ?organization WHERE {
    ?organization <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>.
    ?organization <http://dbpedia.org/property/location> <http://dbpedia.org/resource/Belfast>.
}

# Step 2: Find the nickname of Queen's University Belfast
SELECT ?nickname WHERE {
    <http://dbpedia.org/resource/Queen%27s_University_Belfast> <http://dbpedia.org/ontology/nickname> ?nickname.
}

# Step 3: Find the alma mater of individuals who have received Royal Medals
SELECT DISTINCT ?almaMater WHERE {
    ?person <http://dbpedia.org/property/almaMater> ?almaMater.
    ?person <http://dbpedia.org/ontology/awardReceived> ?award.
    ?award <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/resource/Royal_Medals>.
}

# Step 4: Identify the mayor of the organization found in step 1, ensuring they are a politician
SELECT DISTINCT ?mayor WHERE {
    ?organization <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>.
    ?organization <http://dbpedia.org/property/location> <http://dbpedia.org/resource/Belfast>.
    ?mayor <http://dbpedia.org/ontology/politicianFor> ?organization.
    ?mayor <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>.
}

# Step 5: Determine the alma mater of this mayor
SELECT DISTINCT ?almaMater WHERE {
    ?mayor <http://dbpedia.org/property/almaMater> ?almaMater.
    ?organization <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>.
    ?organization <http://dbpedia.org/property/location> <http://dbpedia.org/resource/Belfast>.
    ?mayor <http://dbpedia.org/ontology/politicianFor> ?organization.
    ?mayor <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>.
}
```",8,11,9,3,3,3,3,71,0,0,1,0,0.0,0
48,16,test,"Give me the band of the actor, that is a musical artist, of Honor Up and band of the writer of Emotion (Carly Rae Jepsen album).",SELECT ?result WHERE { <http://dbpedia.org/resource/Honor_Up> <http://dbpedia.org/property/starring> ?v3 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Emotion_(Carly_Rae_Jepsen_album)> <http://dbpedia.org/property/writer> ?v2 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"SELECT ?band1, ?band2 WHERE {
  ?actor <http://dbpedia.org/ontology/profession> <http://dbpedia.org/resource/Musical_artist> .
  ?actor <http://dbpedia.org/property/knowsFor> ""Honor Up"" .
  ?actor <http://dbpedia.org/ontology/memberOfBand> ?band1 .

  ?writer <http://purl.org/dc/terms/contributor> <http://dbpedia.org/resource/Emotion_(Carly_Rae_Jepsen_album)> .
  ?writer <http://dbpedia.org/ontology/memberOfBand> ?band2 .
}",4,5,5,2,2,3,2,20,0,0,1,0,0.0,0
801,48,test,"Give me the professional in the alter ego of the true self of The Shadow and associated musical artist of the writer, that is a musical artist and an artist, of 40 Dayz & 40 Nightz.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/alterEgo> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/occupation> ?v2 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://xmlns.com/foaf/0.1/givenName> ""The Shadow""@en . <http://dbpedia.org/resource/40_Dayz_&_40_Nightz> <http://dbpedia.org/property/writer> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
SELECT ?result WHERE {
  # Find The Shadow's alter ego
  ?shadow <http://dbpedia.org/ontology/alterEgo> ?alterEgo .
  
  # Identify the true self of the alter ego
  ?alterEgo <http://dbpedia.org/ontology/trueSelf> ?trueSelf .

  # Find the writer of 40 Dayz & 40 Nightz and their associated musical artist
  ?album <http://dbpedia.org/ontology/writer> ?writer .
  ?writer <http://dbpedia.org/property/associatedMusicalArtist> ?result .

  # Ensure the result is both a musical artist and an artist
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist> .

  # Filter for the specific album
  FILTER(STR(?album) = ""40 Dayz & 40 Nightz"")
}
```",5,7,6,3,2,3,3,71,0,0,22,0,0.0,0
488,57,test,"Give me the birth place of Enomoto Takeaki and death place of the father, that is a politician, of the father, that is an office holder, of Matsudaira Tadamasa and administration of the father of Emperor Go-Mizunoo.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?v5 . ?result <http://dbpedia.org/property/leader> ?v3 . <http://dbpedia.org/resource/Enomoto_Takeaki> <http://dbpedia.org/ontology/birthPlace> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Emperor_Go-Mizunoo> <http://dbpedia.org/property/father> ?v3 . <http://dbpedia.org/resource/Matsudaira_Tadamasa> <http://dbpedia.org/property/father> ?v0 . ?v5 <http://dbpedia.org/ontology/deathPlace> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
SELECT DISTINCT ?birthPlace ?deathPlace ?administration WHERE {
  # Birth place of Enomoto Takeaki
  dbp:Enomoto_Takeaki dbo:birthPlace ?birthPlace .

  # Death place of Matsudaira Tadamasa's father
  dbp:Matsudaira_Tadamasa dbo:father ?father .
  ?father a dbo:Politician ;
          a dbo:OfficeHolder .
  ?father dbo:deathPlace ?deathPlace .

  # Administration of Emperor Go-Mizunoo's father
  dbp:Emperor_Go-Mizunoo dbo:father ?goMizunooFather .
  ?goMizunooFather dbo:administration ?administration .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
427,50,test,"Give me the party of the father of the alumnus of Massachusetts Institute of Technology and party of the person born, that is an office holder and a politician, as Romano Antonio Prodi.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/birthName> ""Romano Antonio Prodi""@en . ?v0 <http://dbpedia.org/property/father> ?v4 . ?v3 <http://dbpedia.org/ontology/party> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://dbpedia.org/ontology/party> ?result . ?v0 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Massachusetts_Institute_of_Technology> . }","```sparql
SELECT DISTINCT ?party WHERE {
  # Part 1: Party of the father of an MIT alumnus
  {
    ?alumnus dbo:almaMater dbr:Massachusetts_Institute_of_Technology .
    ?alumnus foaf:parent ?father .
    ?father dbo:party ?party .
  }
  
  UNION
  
  # Part 2: Party of Romano Antonio Prodi
  {
    ?prodi foaf:name ""Romano Antonio Prodi""@en .
    ?prodi rdf:type dbo:OfficeHolder ;
           rdf:type dbo:Politician .
    ?prodi dbo:party ?party .
  }
}
```",5,7,6,3,2,3,3,71,0,0,3,0,0.0,0
492,67,test,"Give me the person decedent at French Algeria and person decedent at the capital, that is a settlement, of the country of Khemis Miliana District and commander in the war, that is a military conflict and an event, of the commander in Battle of Verdun.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/French_Algeria> . ?v0 <http://dbpedia.org/ontology/battle> ?v6 . ?v6 <http://dbpedia.org/ontology/commander> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/deathPlace> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Khemis_Miliana_District> <http://dbpedia.org/ontology/country> ?v1 . ?v1 <http://dbpedia.org/ontology/capital> ?v3 . <http://dbpedia.org/resource/Battle_of_Verdun> <http://dbpedia.org/ontology/commander> ?v0 . },"```sparql
# Step 1: Find the capital of Khemis Miliana District
SELECT ?capital WHERE {
    ?district <http://dbpedia.org/ontology/country> ?country.
    ?district <http://www.w3.org/2000/01/rdf-schema#label> ""Khemis Miliana District""@en.
    ?country <http://dbpedia.org/property/administrativeCapital> ?capital.
}

# Step 2: Find wars that are both military conflicts and events
SELECT ?war WHERE {
    ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>.
    ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>.
}

# Step 3: Find the commander in the Battle of Verdun
SELECT ?commander WHERE {
    <http://dbpedia.org/resource/Battle_of_Verdun> <http://dbpedia.org/ontology/commander> ?commander.
}

# Step 4: Link the commander to the identified war
SELECT ?war WHERE {
    ?commander <http://dbpedia.org/ontology/battle> ?war.
    FILTER(?commander IN {COMMANDER_FROM_VERDUN})
}

# Step 5: Find persons deceased at French Algeria and the capital of Khemis Miliana District
SELECT DISTINCT ?person WHERE {
    ?person <http://dbpedia.org/property/deathPlace> <http://dbpedia.org/resource/French_Algeria>.
    ?person <http://dbpedia.org/property/deathPlace> ?capital.
    FILTER(?capital IN {CAPITAL_FROM_STEP_1})
}

# Step 6: Combine all conditions
SELECT DISTINCT ?person WHERE {
    ?person <http://dbpedia.org/property/deathPlace> <http://dbpedia.org/resource/French_Algeria>.
    ?person <http://dbpedia.org/property/deathPlace> ?capital.
    FILTER(?capital IN {CAPITAL_FROM_STEP_1})
    
    ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>.
    ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>.
    
    ?commander <http://dbpedia.org/ontology/battle> ?war.
    FILTER(?commander IN {COMMANDER_FROM_VERDUN})
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
701,60,test,"Give me the spouse of the father of the commander, that is a royalty, in Battle of Perire and parent of the child of the spouse of Amun-her-khepeshef.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v1 . <http://dbpedia.org/resource/Battle_of_Perire> <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://dbpedia.org/property/father> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://dbpedia.org/ontology/child> ?v2 . <http://dbpedia.org/resource/Amun-her-khepeshef> <http://dbpedia.org/ontology/spouse> ?v3 . },"```sparql
SELECT ?spouse WHERE {
    ?battle rdf:type dbo:MilitaryConflict .
    ?battle dbo:commander ?commander .
    ?commander rdf:type dbo:Royalty .

    ?amunHerKhepeshef dbo:spouse ?spouseAmun .
    ?spouseAmun dbo:child ?child .
    ?parentParent dbo:parent ?child .

    ?father dbo:child ?commander .
    ?father dbo:spouse ?spouse .

    FILTER(?battle = dbpedia:Battle_of_Perire)
}
```",6,7,7,3,2,3,3,71,0,0,1,0,0.0,0
747,28,test,Give me the band of Shèna and person born on the birth date of Pavlo Khudzik and band of Amba Shepherd.,SELECT ?result WHERE { <http://dbpedia.org/resource/Shèna> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Amba_Shepherd> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Pavlo_Khudzik> <http://dbpedia.org/ontology/birthDate> ?v1 . ?result <http://dbpedia.org/ontology/birthDate> ?v1 . },"```sparql
# Step 1: Find the band of Shèna
SELECT ?bandShena WHERE {
    <http://dbpedia.org/resource/Shèna> <http://dbpedia.org/ontology/band> ?bandShena .
}

UNION

# Step 2 and 3: Find person born on Pavlo Khudzik's birth date
SELECT ?person WHERE {
    # Get Pavlo Khudzik's birth date
    <http://dbpedia.org/resource/Pavlo_Khudzik> <http://dbpedia.org/ontology/birthDate> ?birthDate .
    
    # Find any person born on that date
    ?person <http://dbpedia.org/ontology/birthDate> ?birthDate .
}

UNION

# Step 4: Find the band of Amba Shepherd
SELECT ?bandAmba WHERE {
    <http://dbpedia.org/resource/Amba_Shepherd> <http://dbpedia.org/ontology/band> ?bandAmba .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
659,50,test,"Give me the commander in the war, that is an event and a military conflict, of the figure known, that is a military unit and an organisation, as 'Polish Horse' and military force of the force, that is a societal event and an event and a military conflict, of Rutger Jan Schimmelpenninck.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/property/nickname> ""'Polish Horse'""@en . ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://dbpedia.org/ontology/battle> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v4 <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> ?v3 . }","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> <http://dbpedia.org/property/militaryForce> ?v1 . ?v1 <http://dbpedia.org/ontology/battle> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/property/knownAs> ""Polish Horse"". ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/property/commander> ?v2 . }",5,12,6,3,2,3,3,71,0,0,31,0,0.0,0
182,27,test,Give me the war of Mahesh Senanayake and war of the work of Gotabhaya Rajapaksa and entity in the nationality of Tamara Kunanayakam.,SELECT ?result WHERE { <http://dbpedia.org/resource/Tamara_Kunanayakam> <http://dbpedia.org/ontology/nationality> ?v0 . ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v3 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Gotabhaya_Rajapaksa> . ?result <http://dbpedia.org/ontology/place> ?v0 . <http://dbpedia.org/resource/Mahesh_Senanayake> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
SELECT ?result WHERE {
  # Part 1: War of Mahesh Senanayake
  {
    ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>.
    <http://dbpedia.org/resource/Mahesh_Senanayake> <http://dbpedia.org/property/battle> ?result.
  }
  
  UNION
  
  # Part 2: War of the work of Gotabhaya Rajapaksa
  {
    ?work <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>.
    <http://dbpedia.org/resource/Gotabhaya_Rajapaksa> <http://purl.org/dc/terms/subject> ?work.
  }
  
  UNION
  
  # Part 3: Entity in the nationality of Tamara Kunanayakam
  {
    ?entity ?p ?o.
    <http://dbpedia.org/resource/Tamara_Kunanayakam> <http://www.w3.org/2000/01/rdf-schema#label> ?nationalityLabel.
    ?nationalityLabel <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>.
    ?entity <http://dbpedia.org/property/nationality> ?nationality.
  }
}
```",5,5,6,2,3,2,3,28,0,0,1,0,0.0,0
701,64,test,"Give me the parent of Henuttawy (19th dynasty) and parent of the child of the spouse of Amun-her-khepeshef and spouse of the father of the commander, that is a royalty, in Battle of Perire.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> ?v1 . ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Henuttawy_(19th_dynasty)> . <http://dbpedia.org/resource/Battle_of_Perire> <http://dbpedia.org/ontology/commander> ?v0 . <http://dbpedia.org/resource/Amun-her-khepeshef> <http://dbpedia.org/ontology/spouse> ?v3 . },"```sparql
# Step 1: Find the parent of Henuttawy (19th dynasty)
SELECT ?parent WHERE {
    ?henuttawy dbpedia-owl:birthPlace ?place .
    ?henuttawy dbpedia-owl:spouse ?spouse .
    ?henuttawy a dbo:Person .
    ?henuttawy rdfs:label ""Henuttawy (19th dynasty)""@en .
    ?henuttawy dbpedia-owl:parent ?parent .
}

# Step 2: Find the child of the spouse of Amun-her-khepeshef
SELECT ?child WHERE {
    ?amunHerKhepeshef a dbo:Person .
    ?amunHerKhepeshef rdfs:label ""Amun-her-khepeshef""@en .
    ?amunHerKhepeshef dbpedia-owl:spouse ?spouse .
    ?spouse dbpedia-owl:child ?child .
}

# Step 3: Find the spouse of the father of the commander in Battle of Perire
SELECT ?spouse WHERE {
    ?battle a dbo:MilitaryConflict .
    ?battle rdfs:label ""Battle of Perire""@en .
    ?battle dbo:commander ?commander .
    ?commander dbpedia-owl:father ?father .
    ?father dbpedia-owl:spouse ?spouse .
}

# Step 4: Ensure all individuals are royalty
SELECT DISTINCT ?parent WHERE {
    { 
        # Parent of Henuttawy (19th dynasty)
        ?henuttawy a dbo:Person .
        ?henuttawy rdfs:label ""Henuttawy (19th dynasty)""@en .
        ?henuttawy dbpedia-owl:parent ?parent .
        ?parent rdf:type dbo:Royalty .
    }
    UNION
    {
        # Child of the spouse of Amun-her-khepeshef
        ?amunHerKhepeshef a dbo:Person .
        ?amunHerKhepeshef rdfs:label ""Amun-her-khepeshef""@en .
        ?amunHerKhepeshef dbpedia-owl:spouse ?spouse .
        ?spouse dbpedia-owl:child ?child .
        ?child rdf:type dbo:Royalty .
    }
    UNION
    {
        # Spouse of the father of the commander in Battle of Perire
        ?battle a dbo:MilitaryConflict .
        ?battle rdfs:label ""Battle of Perire""@en .
        ?battle dbo:commander ?commander .
        ?commander dbpedia-owl:father ?father .
        ?father dbpedia-owl:spouse ?spouse .
        ?spouse rdf:type dbo:Royalty .
    }
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
232,53,test,"Give me the native of the residence, that is a settlement and British, of Sylvie Bermann and actor of Dog Soldiers (film) and child of the person born as the birth name of Jon Pertwee.",SELECT ?result WHERE { <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Sylvie_Bermann> <http://dbpedia.org/property/residence> ?v1 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v2 <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Dog_Soldiers_(film)> <http://dbpedia.org/ontology/starring> ?result . },"```sparql
SELECT ?nativePerson WHERE {
  # Step 1: Find Sylvie Bermann's British residence that is a settlement
  ?residence <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> .
  ?residence <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement> .
  <http://dbpedia.org/resource/Sylvie_Bermann> <http://dbpedia.org/property/residence> ?residence .

  # Step 2: Find the native of that residence
  ?nativePerson <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/British_people> .
  ?nativePerson <http://dbpedia.org/ontology/placeOfBirth> ?residence .

  # Step 3: Identify an actor from ""Dog Soldiers""
  ?actor <http://dbpedia.org/ontology/actor> <http://dbpedia.org/resource/Dog_Soldiers_(film)> .

  # Step 4: Find the child of Jon Pertwee
  ?child <http://dbpedia.org/ontology/birthName> <http://dbpedia.org/resource/Jon_Pertwee> .
  ?child <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Jon_Pertwee> .

  # Combine conditions to find the person who satisfies all
  FILTER (?nativePerson = ?actor && ?nativePerson = ?child)
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
197,8,test,Give me the birthplace of the awardee of Leroy P. Steele Prize and birthplace of Dumitru Nadu.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> ""Leroy P. Steele Prize""@en . <http://dbpedia.org/resource/Dumitru_Nadu> <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . }","```sparql
# Query to find the birthplace of any awardee of the Leroy P. Steele Prize
SELECT DISTINCT ?birthPlace WHERE {
  ?person dbpedia-owl:award <http://dbpedia.org/resource/Leroy_P._Steele_Prize> .
  ?person dbpedia-owl:birthPlace ?birthPlace .
}

UNION

# Query to find the birthplace of Dumitru Nadu
SELECT DISTINCT ?birthPlace WHERE {
  <http://dbpedia.org/resource/Dumitru_Nadu> dbpedia-owl:birthPlace ?birthPlace .
}
```",3,3,4,2,2,2,2,9,0,0,1,0,0.0,0
747,45,test,Give me the person born on 1985-04-29 and band of Amba Shepherd and band of the person born as the persona of Shèna.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Amba_Shepherd> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Shèna> <http://xmlns.com/foaf/0.1/givenName> ?v0 . ?result <http://dbpedia.org/ontology/birthDate> ""1985-04-29""^^<http://www.w3.org/2001/XMLSchema#date> . ?v1 <http://dbpedia.org/property/birthName> ?v0 . }","```sparql
# Find Amba Shepherd's band
SELECT ?ambaBand WHERE {
  ?amba a dbo:Person;
        foaf:name ""Amba Shepherd"";
        dbo:birthday ""1985-04-29""^^xsd:date.
  ?amba dbo:bandMemberOf ?ambaBand.
}

UNION

# Find the persona known as Shèna, their birthdate and band
SELECT ?shenaBand WHERE {
  ?shena a dbo:Person;
         foaf:name ?name;
         dbo:birthday ?birthdate.
  FILTER(CONTAINS(LCASE(?name), ""shèna""))
  
  # Assuming there is only one person with the persona Shèna, find their band
  ?shena dbo:bandMemberOf ?shenaBand.
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
963,17,test,"Give me the entity in Serbia and administration of the ruling party, that is a political party, in the location for 21205.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/leaderParty> ?v3 . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Serbia> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v0 <http://dbpedia.org/ontology/postalCode> ""21205"" . ?v0 <http://dbpedia.org/property/leaderParty> ?v3 . }","```sparql
SELECT ?party WHERE {
  ?party <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Serbia>.
  ?party <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>.
  OPTIONAL { ?party <http://dbpedia.org/property/administrationOfRulingParty> ?rulingParty. }
  OPTIONAL { ?location <http://www.w3.org/2000/01/rdf-schema#label> ""21205"" .
             ?party <http://dbpedia.org/ontology/location> ?location.
           }
}
```",4,5,5,3,2,3,2,20,0,114,84,0.0,0.0,0
391,47,test,"Give me the native of the figure known as Hub City and actor of the claim to fame, that is a work, of the spouse of Sherry Hormann.","SELECT ?result WHERE { <http://dbpedia.org/resource/Sherry_Hormann> <http://dbpedia.org/ontology/spouse> ?v0 . ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v4 <http://dbpedia.org/ontology/starring> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/property/nickname> ""Hub City""@en . ?v0 <http://dbpedia.org/ontology/knownFor> ?v4 . }","```sparql
SELECT ?nativePlace WHERE {
  # Step 1: Identify Sherry Hormann's spouse
  ?spouse a dbo:Spouse;
          dbo:spouse <http://dbpedia.org/resource/Sherry_Hormann> .

  # Step 2: Determine the claim to fame of Sherry Hormann's spouse that is a work
  ?work dbo:actor ?actor .
  ?spouse dbo:knownFor ?work .

  # Step 3: Find out who the actor is in that particular work
  ?actor rdfs:label ?actorLabel .

  # Step 4: Identify the figure known as ""Hub City""
  ?hubCity rdfs:label ""Hub City""@en .
  
  # Step 5: Determine the native city or place associated with this figure
  ?hubCity dbo:nativePlace ?nativePlace .
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
392,22,test,"Give me the entity in the region, that is a country, of Central European Time and region of the time zone, that is a sports event, of Aguilar de Segarra.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/timeZone> ?v3 . ?result <http://dbpedia.org/ontology/country> ?v2 . ?v2 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . <http://dbpedia.org/resource/Aguilar_de_Segarra> <http://dbpedia.org/ontology/timeZone> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsEvent>. },"```sparql
SELECT ?entity WHERE {
  ?region <http://dbpedia.org/ontology/country> ?country .
  ?timeZone <http://dbpedia.org/ontology/timeZone> ?region .
  ?timeZone <http://www.w3.org/2000/01/rdf-schema#label> ""Central European Time"" .
  
  ?event <http://dbpedia.org/ontology/location> ?location .
  ?location <http://dbpedia.org/ontology/country> ?country .
  ?event <http://dbpedia.org/ontology/event> ?sportsEvent .
  ?sportsEvent <http://www.w3.org/2000/01/rdf-schema#label> ?label .
  
  FILTER(CONTAINS(?label, ""Aguilar de Segarra""))
  
  ?entity <http://dbpedia.org/ontology/country> ?country .
}
```",4,6,5,2,2,2,3,28,0,0,28787,0,0.0,0
9,35,test,"Give me the alma mater of the mayor, that is a politician, of Northern Ireland Forum and figure known as the nickname of Queen's University Belfast.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/almaMater> ?result . <http://dbpedia.org/resource/Queen's_University_Belfast> <http://dbpedia.org/property/nickname> ?v1 . ?result <http://dbpedia.org/property/nickname> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Northern_Ireland_Forum> <http://dbpedia.org/property/leader> ?v2 . },"```sparql
SELECT ?almaMater WHERE {
  ?person <http://dbpedia.org/ontology/politician> _:a .
  ?person <http://dbpedia.org/property/mayor> <http://dbpedia.org/resource/Northern_Ireland_Forum> .
  ?person <http://www.w3.org/2000/01/rdf-schema#label> ""Queen's University Belfast""@en .
  ?person <http://dbpedia.org/ontology/almaMater> ?almaMater .
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
488,62,test,"Give me the birth place of the commander in the war, that is a military conflict and an event and a societal event, of Saitō Hajime and administration of Emperor Go-Yōzei and death place of the father, that is a politician, of the father, that is an office holder, of Matsudaira Tadamasa.",SELECT ?result WHERE { <http://dbpedia.org/resource/Saitō_Hajime> <http://dbpedia.org/ontology/battle> ?v4 . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Emperor_Go-Yōzei> . <http://dbpedia.org/resource/Matsudaira_Tadamasa> <http://dbpedia.org/property/father> ?v0 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/father> ?v6 . ?v4 <http://dbpedia.org/ontology/commander> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v6 <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
SELECT ?birthPlace WHERE {
  # Part 1: Identify the war involving Saitō Hajime that is a military conflict, an event, and a societal event.
  ?war rdf:type dbo:MilitaryConflict .
  ?war rdf:type dbo:Event .
  ?war rdf:type dbo:SocietalEvent .
  
  # Find the commander of this war
  ?war dbo:commander ?commander .

  # Get the birthplace of this commander
  ?commander dbo:birthPlace ?birthPlace .

  # Part 2: Identify the administration under which Emperor Go-Yōzei served.
  ?administration dbo:emperor ?emperor .
  ?emperor rdfs:label ""Emperor Go-Yōzei""@en .

  # Find the war associated with both Saitō Hajime and this administration
  ?war2 dbo:commander ?commander2 .
  ?commander2 rdfs:label ""Saitō Hajime""@en .
  ?administration dbo:militaryConflict ?war2 .

  # Identify the father who is a politician of Matsudaira Tadamasa
  ?matsudairaTadamasa dbo:father ?father .
  ?father rdf:type dbo:Politician .
  
  # Determine the office held by this father
  ?father dbo:officeHolder ?officeHolder .

  # Find the death place of this father
  ?father dbo:deathPlace ?deathPlace .
}
```",7,12,8,3,3,3,3,71,0,0,1,0,0.0,0
184,50,test,"Give me the parent of the child of Archduke Joseph Francis of Austria and child of the child of the parent, that is a royalty, of Archduke Ladislaus Philipp of Austria.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Francis_of_Austria> . <http://dbpedia.org/resource/Archduke_Ladislaus_Philipp_of_Austria> <http://dbpedia.org/ontology/parent> ?v0 . ?result <http://dbpedia.org/ontology/child> ?v3 . ?v4 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v4 . },"```sparql
SELECT ?parentOfGrandchild WHERE {
  # Step 1: Find child of Archduke Joseph Francis of Austria
  ?child1 dbp:father <http://dbpedia.org/resource/Archduke_Joseph_Francis_of_Austria> .
  
  # Step 2: Parent of the child (should be Archduke Joseph Francis)
  ?parentOfChild1 dbp:child ?child1 .

  # Step 3: Find grandchild of Archduke Joseph Francis
  ?grandchild dbp:father ?parentOfChild1 .

  # Step 4: Find parent of Archduke Ladislaus Philipp of Austria
  ?ladislausParent dbp:child <http://dbpedia.org/resource/Archduke_Ladislaus_Philipp_of_Austria> .
  
  # Step 5: Find child of that parent (Ladislaus's sibling or another child)
  ?ladislausSiblingOrChild dbp:parent ?ladislausParent .

  # Step 6: Ensure the individual is royalty
  ?ladislausSiblingOrChild a <http://dbpedia.org/ontology/Royalty> .

  # Final step: Find parent of grandchild from Joseph Francis's lineage who matches the criteria
  ?parentOfGrandchild dbp:child ?grandchild .
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
161,49,test,"Give me the military force of the force, that is a societal event and an event and a military conflict, of Francisco Franco and commander in the force, that is an event, of the figure known as El Director.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://xmlns.com/foaf/0.1/nick> ""El Director""@en . ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Franco> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. }","```sparql
SELECT ?militaryForce WHERE {
  ?event1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>.
  ?event1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>.
  ?event1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>.
  <http://dbpedia.org/resource/Francisco_Franco> <http://dbpedia.org/property/commander> ?event1.
  
  ?event2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>.
  ?elDirector <http://dbpedia.org/ontology/knowsAs> ""El Director"".
  ?elDirector <http://dbpedia.org/property/commander> ?event2.
  
  ?militaryForce <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryForce>.
  ?militaryForce <http://dbpedia.org/ontology/associatedWithEvent> ?event1.
  ?militaryForce <http://dbpedia.org/ontology/associatedWithEvent> ?event2.
}
```",5,9,6,3,2,3,3,71,0,0,34,0,0.0,0
547,70,test,Give me the resting place of the awardee of the award of Gerald Graham and resting place of the actor of the show with Emily Richard and resting place of the child of James Burton (property developer).,SELECT ?result WHERE { <http://dbpedia.org/resource/James_Burton_(property_developer)> <http://dbpedia.org/ontology/child> ?v4 . ?v0 <http://dbpedia.org/property/starring> ?v7 . ?v3 <http://dbpedia.org/property/awards> ?v1 . ?v3 <http://dbpedia.org/ontology/restingPlace> ?result . ?v4 <http://dbpedia.org/ontology/restingPlace> ?result . ?v0 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emily_Richard> . ?v7 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Gerald_Graham> <http://dbpedia.org/property/awards> ?v1 . },"```sparql
SELECT DISTINCT ?restingPlaceGeraldAwardee ?restingPlaceEmilyActor ?restingPlaceJamesChild WHERE {
  # Resting place of the awardee of Gerald Graham
  ?awardee <http://dbpedia.org/ontology/recipient> <http://dbpedia.org/resource/Gerald_Graham> .
  ?awardee <http://dbpedia.org/property/restingPlace> ?restingPlaceGeraldAwardee .

  # Resting place of an actor from a show with Emily Richard
  ?show <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/E._Richard> .
  ?actor <http://dbpedia.org/ontology/starring> ?show .
  ?actor <http://dbpedia.org/property/restingPlace> ?restingPlaceEmilyActor .

  # Resting place of a child of James Burton (property developer)
  ?child <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/J._Burton_(property_developer)> .
  ?child <http://dbpedia.org/property/restingPlace> ?restingPlaceJamesChild .
}
```",8,8,9,3,3,3,3,71,0,0,1,0,0.0,0
488,53,test,"Give me the birth place of the commander in the war, that is a military conflict and an event and a societal event, of Saitō Hajime and administration of the father of Emperor Go-Mizunoo and death place of Tokugawa Ieyasu.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Tokugawa_Ieyasu> <http://dbpedia.org/ontology/deathPlace> ?result . ?v3 <http://dbpedia.org/ontology/commander> ?v2 . <http://dbpedia.org/resource/Saitō_Hajime> <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/property/leader> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Emperor_Go-Mizunoo> <http://dbpedia.org/property/father> ?v1 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
# Step 1: Find the war that is a military conflict, an event, and a societal event
SELECT ?war WHERE {
    ?war rdf:type dbo:MilitaryConflict .
    ?war rdf:type dbo:Event .
    ?war rdf:type dbo:SocietalEvent .
}

# Step 2: Identify the commander of this war
SELECT ?commander WHERE {
    ?war dbo:commander ?commander .
    FILTER(?war IN (<result_from_step_1>))
}

# Step 3: Find the birthplace of this commander
SELECT ?birthPlace WHERE {
    ?commander dbo:birthPlace ?birthPlace .
    FILTER(?commander IN (<result_from_step_2>))
}

# Step 4: Identify the administration under which Emperor Go-Mizunoo's father served
SELECT ?administration WHERE {
    <http://dbpedia.org/resource/Emperor_Go-Yōzei> dbo:father ?father .
    ?father dbo:administeredBy ?administration .
}

# Step 5: Confirm that Tokugawa Ieyasu died in the same place as the birthplace of the commander
SELECT ?deathPlace WHERE {
    <http://dbpedia.org/resource/Tokugawa_Ieyasu> dbo:deathPlace ?deathPlace .
    FILTER(?deathPlace = ?birthPlace)
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
754,17,test,Give me the parent of the child of the reference to Ram Khamhaeng the Great and parent of Loe Thai.,"SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""Ram Khamhaeng the Great""@en . ?v0 <http://dbpedia.org/ontology/child> ?v3 . <http://dbpedia.org/resource/Loe_Thai> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/child> ?v3 . }","```sparql
SELECT ?parent WHERE {
  ?child <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/Ram_Khamhaeng_the_Great> .
  ?child <http://dbpedia.org/ontology/spouse> ?spouse .
  ?spouse <http://dbpedia.org/ontology/offspring> <http://dbpedia.org/resource/Loe_Thai> .
  ?child <http://dbpedia.org/ontology/birthParent> ?parent .
}
```",4,4,5,3,2,3,2,20,0,0,1,0,0.0,0
55,20,test,"Give me the band of Newsted and band member of the band member, that is a band and a group, of San Francisco Symphony and band member of Guns N' Roses.",SELECT ?result WHERE { <http://dbpedia.org/resource/Newsted> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/San_Francisco_Symphony> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Guns_N'_Roses> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. },"```sparql
SELECT ?firstBand WHERE {
  # Find bands where Newsted was a member
  ?newstedMember <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/Metallica>.
  ?newstedMember <http://dbpedia.org/ontology/band> ?firstBand.

  # Find members of the first band who are in another band that is both a ""band"" and a ""group""
  ?member <http://dbpedia.org/ontology/member> ?firstBand.
  ?member <http://dbpedia.org/ontology/member> ?secondBand.
  ?secondBand <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>.
  ?secondBand <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>.

  # Check if the San Francisco Symphony is a member of this second band
  ?symphonyMember <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/San_Francisco_Symphony>.
  ?symphonyMember <http://dbpedia.org/ontology/member> ?secondBand.

  # Ensure that one of the members of this second band is also in Guns N' Roses
  ?gnrMember <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/Guns_N%27_Roses>.
  ?gnrMember <http://dbpedia.org/ontology/member> ?secondBand.
}
```",4,6,5,2,3,2,3,28,0,0,1,0,0.0,0
184,56,test,Give me the parent of the child of the parent of Archduchess Margaret of Austria (born 1925) and parent of the native of Budapest and child of Archduke Joseph August of Austria.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Margaret_of_Austria_(born_1925)> . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_August_of_Austria> . ?result <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Budapest> . },"```sparql
# Step 1: Find Archduchess Margaret of Austria (born 1925) and her parent
SELECT ?margaret ?parentMargaret WHERE {
    ?margaret a dbo:Person ;
             foaf:name ""Archduchess Margaret of Austria"" ;
             dbo:birthYear ""1925"" .
    OPTIONAL { ?margaret dbo:childOf ?parentMargaret . }
}

# Step 2: Find the child of the parent identified in step 1
SELECT ?grandChild WHERE {
    ?parentMargaret dbo:child ?grandChild .
}

# Step 3: Identify the native of Budapest who is a child of Archduke Joseph August of Austria
SELECT ?budaNative WHERE {
    ?budaNative a dbo:Person ;
                foaf:nationality ""Budapest"" ;
                dbo:parent ?josephAugust .
    ?josephAugust foaf:name ""Archduke Joseph August of Austria"" .
}

# Step 4: Determine the parent of this individual from step 3
SELECT ?budaParent WHERE {
    ?budaNative dbo:childOf ?budaParent .
}

# Step 5: Identify the parent of the person found in step 2
SELECT ?finalParent WHERE {
    ?grandChild dbo:parent ?finalParent .
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
427,69,test,"Give me the reference to the name of the party of Michele Pinto and party of the father of Lamberto Andreotti and party of the person born, that is an office holder and a politician, as the birth name of Romano Prodi.",SELECT ?result WHERE { ?v4 <http://xmlns.com/foaf/0.1/name> ?v3 . <http://dbpedia.org/resource/Michele_Pinto> <http://dbpedia.org/ontology/party> ?v4 . ?v7 <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Lamberto_Andreotti> <http://dbpedia.org/property/father> ?v7 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/property/birthName> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . ?v2 <http://dbpedia.org/ontology/party> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
SELECT ?micheleParty ?lambertoFatherParty ?romanoBirthName ?romanoParty
WHERE {
  # Michele Pinto's party
  <http://dbpedia.org/resource/Michele_Pinto> <http://dbpedia.org/ontology/party> ?micheleParty .

  # Lamberto Andreotti's father's party
  OPTIONAL {
    <http://dbpedia.org/resource/Lamberto_Andreotti> <http://dbpedia.org/ontology/father> ?lambertoFather .
    ?lambertoFather <http://dbpedia.org/ontology/party> ?lambertoFatherParty .
  }

  # Romano Prodi's birth name and party
  OPTIONAL {
    ?romanoProdi <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder> ;
                 <http://dbpedia.org/ontology/politicianOf> ?country ;
                 <http://dbpedia.org/property/birthName> ?romanoBirthName .
    ?romanoProdi <http://dbpedia.org/ontology/party> ?romanoParty .
  }
}
```",8,10,9,3,3,3,3,71,2,0,0,1.0,1.0,1.0
617,41,test,"Give me the spouse of the child of Antiochus III the Great and parent of Nysa (wife of Pharnaces I of Pontus) and child of the child, that is a royalty, of Seleucus II Callinicus.",SELECT ?result WHERE { <http://dbpedia.org/resource/Antiochus_III_the_Great> <http://dbpedia.org/ontology/child> ?v4 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Nysa_(wife_of_Pharnaces_I_of_Pontus)> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seleucus_II_Callinicus> . ?result <http://dbpedia.org/property/father> ?v2 . ?v4 <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
SELECT ?spouse WHERE {
  # Step 1: Identify Antiochus III the Great's child who is a parent of Nysa
  ?child a dbo:Person ;
         dbo:parent <http://dbpedia.org/resource/Antiochus_III_the_Great> ;
         dbo:child <http://dbpedia.org/resource/Nysa_(wife_of_Pharaces_I_of_Pontus)> .

  # Step 2: Determine the spouse of that child
  ?child dbo:spouse ?spouse .

  # Step 3: Find the royal descendant of Seleucus II Callinicus among these children
  ?grandChild a dbo:Royalty ;
              dbo:parent ?child ;
              dbo:parent <http://dbpedia.org/resource/Seleucus_II_Callinicus> .
}
```",5,6,6,2,3,3,3,71,0,0,2,0,0.0,0
232,42,test,"Give me the native of the residence, that is a settlement and British, of Sylvie Bermann and child of the person born as John Devon Roland Pertwee and actor of Dog Soldiers (film).","SELECT ?result WHERE { <http://dbpedia.org/resource/Sylvie_Bermann> <http://dbpedia.org/property/residence> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Dog_Soldiers_(film)> <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v2 <http://dbpedia.org/property/birthName> ""John Devon Roland Pertwee""@en . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. }","```sparql
# Step 1: Find Sylvie Bermann's residence that is a settlement in Britain.
SELECT ?residence WHERE {
    <http://dbpedia.org/resource/Sylvie_Bermann> <http://dbpedia.org/property/residence> ?residence .
    ?residence <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement> .
    ?residence <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> .
}

# Step 2: Find Sean Pertwee's child who acted in ""Dog Soldiers.""
SELECT ?child WHERE {
    <http://dbpedia.org/resource/Sean_Pertwee> <http://dbpedia.org/ontology/birthName> ""John Devon Roland Pertwee"" .
    ?child <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Sean_Pertwee> .
    ?child <http://dbpedia.org/ontology/performance> <http://dbpedia.org/resource/Dog_Soldiers_(film)> .
}

# Step 3: Find the native of the residence identified in step 1.
SELECT ?native WHERE {
    ?residence <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement> .
    ?residence <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> .
    ?native <http://dbpedia.org/property/nativePlace> ?residence .
}
```",5,7,6,2,3,3,3,71,0,0,1,0,0.0,0
915,19,test,"Give me the father of the child, that is a fictional character and a soap character, of the parent, that is a fictional character and a soap character, of Lizzie Spaulding and resident of the birthplace, that is a settlement, of Stephen Verona.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/residence> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v4 <http://dbpedia.org/property/father> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoapCharacter>. ?v4 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Lizzie_Spaulding> <http://dbpedia.org/ontology/parent> ?v0 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. <http://dbpedia.org/resource/Stephen_Verona> <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoapCharacter>. },"```sparql
SELECT ?father WHERE {
  # Step 1: Find the parent of Lizzie Spaulding who is a fictional character and soap character
  ?parent <http://dbpedia.org/ontology/fictionalCharacter> _:a .
  ?parent <http://dbpedia.org/ontology/soapCharacter> _:b .
  ?parent <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Lizzie_Spaulding> .

  # Step 2: Find the child of that parent who is also a fictional character and soap character
  ?parent <http://dbpedia.org/ontology/child> ?child .
  ?child <http://dbpedia.org/ontology/fictionalCharacter> _:c .
  ?child <http://dbpedia.org/ontology/soapCharacter> _:d .

  # Step 3: Find the father of that child
  ?father <http://dbpedia.org/ontology/father> ?child .

  # Step 4: Ensure this father resides in the birthplace of Stephen Verona, which is a settlement
  ?stephenVeronaBirthPlace <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement> .
  ?stephenVeronaBirthPlace <http://dbpedia.org/property/birthPlace> <http://dbpedia.org/resource/Stephen_Verona> .
  ?father <http://dbpedia.org/property/residence> ?stephenVeronaBirthPlace
}
```",5,10,6,3,2,3,2,20,0,0,1,0,0.0,0
427,41,test,Give me the party of the father of Lamberto Andreotti and reference to the name of Italian People's Party (1994) and party of Romano Prodi.,SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/party> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . <http://dbpedia.org/resource/Lamberto_Andreotti> <http://dbpedia.org/property/father> ?v4 . <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Italian_People's_Party_(1994)> <http://xmlns.com/foaf/0.1/name> ?v2 . },"```sparql
SELECT ?fatherParty ?partyReference ?prodiParty WHERE {
  # Find Lamberto Andreotti's father
  <http://dbpedia.org/resource/Lamberto_Andreotti> <http://xmlns.com/foaf/0.1/familyName> ?father .
  
  # Get the political party of Lamberto Andreotti's father
  ?father <http://dbpedia.org/ontology/party> ?fatherParty .

  # Find references to Italian People's Party (1994)
  ?partyReference <http://www.w3.org/2000/01/rdf-schema#label> ""Italian People's Party (1994)""@en .
  
  # Get the political party of Romano Prodi
  <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/ontology/party> ?prodiParty .
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
161,41,test,"Give me the military force of the force, that is a societal event and a military conflict, of Francisco Largo Caballero and military force of the force, that is a societal event and an event and a military conflict, of Francisco Franco and commander in Biscay Campaign.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Biscay_Campaign> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v4 . ?v4 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Franco> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
SELECT DISTINCT ?forceLargoCaballero ?militaryForceLargoCaballero 
         ?forceFranco ?militaryForceFranco
WHERE {
  # For Francisco Largo Caballero
  ?forceLargoCaballero <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>.
  ?forceLargoCaballero <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>.
  <http://dbpedia.org/resource/Francisco_Largo_Caballero> <http://dbpedia.org/property/force> ?forceLargoCaballero.
  ?forceLargoCaballero <http://dbpedia.org/ontology/militaryForce> ?militaryForceLargoCaballero.

  # For Francisco Franco
  ?forceFranco <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>.
  ?forceFranco <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>.
  ?forceFranco <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>.
  <http://dbpedia.org/resource/Francisco_Franco> <http://dbpedia.org/property/force> ?forceFranco.
  <http://dbpedia.org/resource/Biscay_Campaign> <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Franco>.
  ?forceFranco <http://dbpedia.org/ontology/militaryForce> ?militaryForceFranco.
}
```",5,10,6,2,3,3,3,71,0,0,3,0,0.0,0
404,47,test,"Give me the spouse of the person born, that is a royalty, as Princess Victoria Louise of Prussia and parent of the child, that is a royalty, of the parent, that is a royalty, of Prince George William of Hanover.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v2 <http://dbpedia.org/property/birthName> ""Princess Victoria Louise of Prussia""@en . <http://dbpedia.org/resource/Prince_George_William_of_Hanover> <http://dbpedia.org/ontology/parent> ?v0 . ?v0 <http://dbpedia.org/ontology/child> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> ?v4 . }","```sparql
SELECT ?spouse WHERE {
  # Step 1: Identify Princess Victoria Louise of Prussia
  ?princess a dbo:Royalty ;
            foaf:name ""Princess Victoria Louise of Prussia"" .

  # Step 2: Determine her children who are royalty
  ?child dbo:parent ?princess ;
         a dbo:Royalty .

  # Step 3: For each child, identify their parents (who must also be royalty)
  ?grandchild dbo:parent ?child ;
              a dbo:Royalty .

  # Step 4: Find Prince George William of Hanover's parent
  ?georgeParent dbo:name ""Prince George William of Hanover"" .
  ?grandchild foaf:name ?georgeParent .

  # Step 5: Determine the spouse of Princess Victoria Louise of Prussia
  ?princess dbo:spouse ?spouse .
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
959,55,test,"Give me the manager of the team of Takashi Sekizuka and native of the residence, that is a country, of Yōichi Masuzoe and member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of Eiji Ōtsuka.",SELECT ?result WHERE { <http://dbpedia.org/resource/Eiji_Ōtsuka> <http://dbpedia.org/ontology/almaMater> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/ontology/manager> ?result . ?result <http://dbpedia.org/ontology/team> ?v2 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Takashi_Sekizuka> . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. <http://dbpedia.org/resource/Yōichi_Masuzoe> <http://dbpedia.org/property/residence> ?v5 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?result <http://dbpedia.org/ontology/birthPlace> ?v5 . },"```sparql
# Step 1: Find the team managed by Takashi Sekizuka
SELECT ?team WHERE {
    <http://dbpedia.org/resource/Takashi_Sekizuka> <http://dbpedia.org/ontology/team> ?team .
}

# Step 2: Find the manager of that team
SELECT ?manager WHERE {
    ?team <http://dbpedia.org/ontology/manager> ?manager .
}

# Step 3: Find the residence (country) of Yōichi Masuzoe
SELECT ?residence WHERE {
    <http://dbpedia.org/resource/Yōichi_Masuzoe> <http://dbpedia.org/property/residence> ?residence .
    ?residence <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country> .
}

# Step 4: Find the alma mater of Eiji Ōtsuka that meets all criteria
SELECT ?almaMater WHERE {
    <http://dbpedia.org/resource/Eiji_Ōtsuka> <http://dbpedia.org/ontology/almaMater> ?almaMater .
    ?almaMater <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation> .
    ?almaMater <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University> .
    ?almaMater <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalOrganization> .
    ?almaMater <http://dbpedia.org/property/nationality> <http://dbpedia.org/resource/Japan> .
}

# Step 5: Find the manager who is native to the residence (country) of Yōichi Masuzoe
SELECT DISTINCT ?manager WHERE {
    # Manager from step 2
    ?team <http://dbpedia.org/ontology/team> ?team1 .
    ?team1 <http://dbpedia.org/ontology/manager> ?manager .
    
    # Native condition
    ?manager <http://dbpedia.org/property/nationality> ?residence .
}
```",6,11,7,2,3,3,3,71,0,0,2,0,0.0,0
179,17,test,Give me the parent of the child of the parent of Vajiralongkorn and person born as Mom Rajawongse Sirikit Kitiyakara.,"SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Vajiralongkorn> . ?v0 <http://dbpedia.org/ontology/child> ?v3 . ?result <http://dbpedia.org/property/birthName> ""Mom Rajawongse Sirikit Kitiyakara""@en . }","```sparql
SELECT ?parentOfParent ?mother ?parentOfSirikit WHERE {
  # Step 1: Identify Vajiralongkorn's parent (his mother)
  <http://dbpedia.org/resource/Vajiralongkorn> <http://www.w3.org/2000/01/rdf-schema#label> ""Vajiralongkorn""@en .
  ?mother <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Bhumibol_Adulyadej> ;
          <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Vajiralongkorn> .

  # Step 2: Find the child of Vajiralongkorn's parent (Vajiralongkorn himself)
  ?mother <http://dbpedia.org/ontology/child> ?vajiralongkornChild .
  
  # Step 3: Determine the parent of Vajiralongkorn (his mother again)
  ?vajiralongkornChild <http://dbpedia.org/ontology/mother> ?mother .

  # Step 4: Identify Mom Rajawongse Sirikit Kitiyakara
  ?sirikit <http://www.w3.org/2000/01/rdf-schema#label> ""Mom Rajawongse Sirikit Kitiyakara""@en ;
           <http://dbpedia.org/ontology/birthName> ""Sirikit Kitiyakara""@en .

  # Step 5: Find the parent of Mom Rajawongse Sirikit Kitiyakara
  ?sirikit <http://dbpedia.org/ontology/father> ?parentOfSirikit .
  
  # Return the results
  BIND(?mother AS ?parentOfParent)
}
```",4,4,5,3,2,3,2,20,0,0,1,0,0.0,0
303,28,test,"Give me the party of the person born, that is a politician, as Arnulfo Arias Madrid and entity in the country, that is a country, of El Valle de Antón and party of the commander, that is a politician, in United States invasion of Panama.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/country> ?v3 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/United_States_invasion_of_Panama> <http://dbpedia.org/ontology/commander> ?v1 . ?v5 <http://dbpedia.org/ontology/party> ?result . ?v1 <http://dbpedia.org/ontology/party> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/El_Valle_de_Antón> <http://dbpedia.org/ontology/country> ?v3 . ?v5 <http://dbpedia.org/property/birthName> ""Arnulfo Arias Madrid""@en . }","```sparql
# Part 1: Get the party of Arnulfo Arias Madrid
SELECT ?party WHERE {
    <http://dbpedia.org/resource/Arnulfo_Arias_Madrid> <http://dbpedia.org/ontology/politicalParty> ?party .
}

UNION

# Part 2: Find entities in the country associated with El Valle de Antón and get their party
SELECT ?entity ?party WHERE {
    <http://dbpedia.org/resource/El_Valle_de_Antón> <http://www.w3.org/2000/01/rdf-schema#seeAlso> ?country .
    ?entity <http://dbpedia.org/ontology/country> ?country .
    ?entity <http://dbpedia.org/ontology/politicalParty> ?party .
}

UNION

# Part 3: Get the party of the commander in the United States invasion of Panama
SELECT ?commanderParty WHERE {
    <http://dbpedia.org/resource/United_States_invasion_of_Panama> <http://dbpedia.org/ontology/commander> ?commander .
    ?commander <http://dbpedia.org/ontology/politicalParty> ?commanderParty .
}
```",6,9,7,2,3,2,3,28,0,0,1,0,0.0,0
659,69,test,"Give me the commander in the war, that is an event and a military conflict, of 1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish) and military force of the force, that is a societal event and an event and a military conflict, of the reference to Rutger Jan Schimmelpenninck and commander in the force of the native, that is an office holder, of Kingdom of Ireland.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v7 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://dbpedia.org/ontology/commander> ?v4 . ?v1 <http://xmlns.com/foaf/0.1/name> ""Rutger Jan Schimmelpenninck""@en . ?v4 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Kingdom_of_Ireland> . <http://dbpedia.org/resource/1st_Light_Cavalry_Lancers_Regiment_of_the_Imperial_Guard_(Polish)> <http://dbpedia.org/ontology/battle> ?v7 . ?v2 <http://dbpedia.org/ontology/commander> ?v1 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. }","```sparql
SELECT ?commander WHERE {
  # Part 1: Identify the war involving the 1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish)
  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>.
  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>.
  
  # Find the military force involved in this war
  ?force <http://dbpedia.org/ontology/battle> ?war.
  
  # Ensure the force is a societal event and an event and a military conflict
  ?force <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>.
  ?force <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>.
  ?force <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>.

  # Reference to Rutger Jan Schimmelpenninck
  ?reference rdfs:label ""Rutger Jan Schimmelpenninck""@en.
  
  # Find the commander in the force related to this reference
  ?force <http://dbpedia.org/property/commander> ?commander1.

  # Part 2: Identify the native office holder of the Kingdom of Ireland
  ?officeHolder <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>.
  ?officeHolder <http://dbpedia.org/property/nativeCountry> <http://dbpedia.org/resource/Kingdom_of_Ireland>.

  # Find the commander of this office holder
  ?force2 <http://dbpedia.org/property/commander> ?commander2.
  ?officeHolder <http://dbpedia.org/ontology/memberOf> ?force2.

  # Ensure the force is a societal event and an event and a military conflict
  ?force2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>.
  ?force2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>.
  ?force2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>.

  # Find the commander in the war
  ?war <http://dbpedia.org/property/commander> ?commander.
}
```",8,14,9,3,3,3,3,71,0,0,15,0,0.0,0
281,56,test,"Give me the war of the profession, that is a military unit, of the professional, that is an office holder and a politician, in New Zealand Army and entity in Colony of New Zealand and war of the awardee of Knight Grand Cross of the Order of the Bath.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/New_Zealand_Army> . ?v1 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Colony_of_New_Zealand> . ?v0 <http://dbpedia.org/property/occupation> ?v1 . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_the_Bath> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. },"```sparql
SELECT DISTINCT ?war WHERE {
  # Step 1: Office holders who are politicians in New Zealand
  ?person a dbo:Politician ;
          dbo:officeHolderOf ?office ;
          dbo:nationality dbr:New_Zealand .

  # Step 2: Profession related to a military unit
  ?person dbo:profession ?militaryUnit .
  ?militaryUnit a dbo:MilitaryUnit .

  # Step 3: Wars associated with these professions (military units)
  ?militaryUnit dbo:participatedIn ?war .

  # Step 4: Entities from the Colony of New Zealand
  ?entity dbo:country dbr:Colony_of_New_Zealand .

  # Step 5: Awardees of Knight Grand Cross of the Order of the Bath and their wars
  ?awardee dbo:award dbr:Knight_Grand_Cross_of_the_Order_of_the_Bath .
  ?awardee dbo:participatedIn ?war .

  # Step 6: Return common wars
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
404,24,test,"Give me the parent of the child, that is a royalty, of Ernest Augustus, Duke of Brunswick and child of Ernest Augustus, Crown Prince of Hanover.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ernest_Augustus,_Crown_Prince_of_Hanover> . }","```sparql
SELECT ?grandparent ?parent WHERE {
  ?child a dbo:Royalty ;
         dbo:father <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> .
  
  ?grandchild dbo:mother|dbo:father ?child .
  ?grandchild dbo:parent ?parent .

  BIND(<http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> AS ?grandparent)
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
492,62,test,"Give me the person decedent at Algiers and person decedent at the work of the author of French Algeria and commander in the war, that is a military conflict and an event, of the commander in Battle of Verdun.",SELECT ?result WHERE { ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v6 <http://dbpedia.org/ontology/commander> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://dbpedia.org/property/author> ?v4 . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Algiers> . <http://dbpedia.org/resource/Battle_of_Verdun> <http://dbpedia.org/ontology/commander> ?v0 . ?result <http://dbpedia.org/ontology/deathPlace> ?v3 . <http://dbpedia.org/resource/French_Algeria> <http://dbpedia.org/property/author> ?v4 . ?v0 <http://dbpedia.org/ontology/battle> ?v6 . },"```sparql
SELECT ?personDecedentAtAlgiers ?personDecedentAtWar WHERE {
  # Step 1: Identify the author of ""French Algeria""
  ?author dbo:work <http://dbpedia.org/resource/French_Algeria> .
  
  # Step 2: Find the work associated with this author
  ?work dbo:author ?author .

  # Step 3: Determine the person decedent at Algiers related to this work
  ?personDecedentAtAlgiers dbo:deathPlace <http://dbpedia.org/resource/Algiers> .
  ?personDecedentAtAlgiers dbo:relatedWork ?work .

  # Step 4: Identify the commander in the Battle of Verdun
  <http://dbpedia.org/resource/Battle_of_Verdun> dbo:commander ?verdunCommander .

  # Step 5: Find the war that is both a military conflict and an event, commanded by the identified commander from step 4
  ?war rdf:type <http://dbpedia.org/ontology/MilitaryConflict> .
  ?war rdf:type <http://dbpedia.org/ontology/Event> .
  ?verdunCommander dbo:battle ?war .

  # Step 6: Find the person decedent associated with this war
  ?personDecedentAtWar dbo:deathPlace ?war .
  
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
391,67,test,"Give me the actor of the movie, that is a movie and a work and a television show, with the professional in  and native of Compton, California and actor of the claim to fame, that is a work, of the spouse of Sherry Hormann.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Compton,_California> . ?v1 <http://dbpedia.org/property/occupation> """"@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v6 <http://dbpedia.org/ontology/starring> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://dbpedia.org/property/starring> ?result . ?v3 <http://dbpedia.org/property/starring> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/ontology/knownFor> ?v6 . <http://dbpedia.org/resource/Sherry_Hormann> <http://dbpedia.org/ontology/spouse> ?v0 . }","```sparql
SELECT ?actor WHERE {
  # Step 1: Identify the spouse of Sherry Hormann
  ?spouse dbo:spouse dbp:Sherry_Hormann .
  
  # Step 2: Find the claim to fame (a work) associated with that spouse
  ?work dbo:knownFor ?spouse .
  ?work a dbo:Work .

  # Step 3: Determine the actor involved in that claim to fame
  ?actor dbo:actedIn ?work .

  # Step 4: Identify a professional who is native to Compton, California and an actor in a movie
  ?professional foaf:nativePlace dbpedia:Compton,_California ;
                  rdf:type dbo:Actor .
  
  # Step 5: Find the movie that qualifies as a movie, work, and television show
  ?movie dbo:starring ?professional ;
         a dbo:Film , dbo:Work , dbo:TelevisionShow .

  # Final step: Get the actor of this specific movie
  ?actor dbo:actedIn ?movie .
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
547,51,test,Give me the resting place of the actor of Enemy at the Door and resting place of the awardee of the award of Gerald Graham.,SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/restingPlace> ?result . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Enemy_at_the_Door> <http://dbpedia.org/property/starring> ?v4 . <http://dbpedia.org/resource/Gerald_Graham> <http://dbpedia.org/property/awards> ?v1 . ?v2 <http://dbpedia.org/property/awards> ?v1 . },"```sparql
SELECT DISTINCT ?restingPlace1 ?restingPlace2 WHERE {
  # Part 1: Resting place of the actor in ""Enemy at the Door""
  ?film rdf:type dbo:Film ;
        dbo:title ""Enemy at the Door""@en .
  ?actor dbo:actedIn ?film ;
         foaf:deathPlace ?burialPlace1 .

  # Part 2: Resting place of the awardee associated with Gerald Graham
  ?award dbo:recipient ?awardee ;
         dbo:winner ?awardee .
  ?gerald rdf:type dbo:Person ;
          foaf:name ""Gerald Graham""@en ;
          dbo:award ?award .
  ?awardee foaf:deathPlace ?burialPlace2 .

  BIND(?burialPlace1 AS ?restingPlace1)
  BIND(?burialPlace2 AS ?restingPlace2)
}
```",5,5,6,3,2,3,3,71,0,0,2,0,0.0,0
820,20,test,Give me the child of the parent of the professional in Actor and professional in the award of the author of Understanding Comics.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Understanding_Comics> <http://dbpedia.org/ontology/author> ?v1 . ?v5 <http://dbpedia.org/ontology/child> ?v4 . ?result <http://dbpedia.org/property/father> ?v5 . ?result <http://dbpedia.org/property/occupation> ?v2 . ?v1 <http://dbpedia.org/property/awards> ?v2 . ?v4 <http://dbpedia.org/property/occupation> ""Actor""@en . }","```sparql
SELECT ?child WHERE {
  # Step 1: Find the author of ""Understanding Comics""
  dbpedia:Understanding_Comics dbo:author ?author .

  # Step 2: Find the award associated with this author
  ?award dbo:recipient ?author .
  
  # Step 3: Determine who is a professional in that award
  ?professional dbo:profession ?awardType ;
                rdf:type dbo:Professional .

  FILTER(?awardType IN (dbpedia:Actor, dbpedia:Writer)).

  # Step 4: Identify the parent of this professional
  ?parent dbo:child ?professional .
  
  # Step 5: Find the child of this parent
  ?parent dbo:child ?child .
}
```",6,6,7,3,2,3,2,20,0,0,128,0,0.0,0
701,54,test,Give me the parent of the child of the child of Seti I and spouse of Ramesses II and parent of the child of Nefertari.,SELECT ?result WHERE { <http://dbpedia.org/resource/Nefertari> <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Ramesses_II> . ?result <http://dbpedia.org/ontology/child> ?v5 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seti_I> . ?v5 <http://dbpedia.org/property/father> ?v0 . },"```sparql
SELECT ?parent WHERE {
  ?child1 <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/Seti_I>.
  ?grandchild <http://dbpedia.org/ontology/birthParent> ?child1.
  ?spouse <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Ramesses_II>.
  ?nephewOrNiece <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/Nefertari>.
  ?spouse <http://dbpedia.org/ontology/birthParent> ?nephewOrNiece.
  ?grandchild <http://dbpedia.org/ontology/birthParent> ?spouse.
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
547,63,test,Give me the resting place of the child of the child of William Haliburton and resting place of the awardee of Knight Grand Cross of the Order of St Michael and St George and resting place of the actor of Enemy at the Door.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Enemy_at_the_Door> <http://dbpedia.org/property/starring> ?v6 . ?v6 <http://dbpedia.org/ontology/restingPlace> ?result . ?v3 <http://dbpedia.org/ontology/restingPlace> ?result . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_St_Michael_and_St_George> . ?v4 <http://dbpedia.org/property/father> ""William Haliburton""@en . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . ?v4 <http://dbpedia.org/ontology/child> ?v3 . }","```sparql
SELECT ?restingPlace WHERE {
  # Resting place of the child of the child of William Haliburton
  {
    ?grandchild a dbo:Person ;
               dbo:parent ?child .
    ?child a dbo:Person ;
           dbo:parent <http://dbpedia.org/resource/William_Haliburton> .
    ?grandchild dbo:placeOfBurialOrMemorial ?restingPlace .
  }
  
  UNION
  
  # Resting place of the awardee of Knight Grand Cross of the Order of St Michael and St George
  {
    ?person a dbo:Person ;
            dbo:honoraryTitle <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_St_Michael_and_St_George> .
    ?person dbo:placeOfBurialOrMemorial ?restingPlace .
  }
  
  UNION
  
  # Resting place of the actor of Enemy at the Door
  {
    ?actor a dbo:Actor ;
           dbo:actedIn <http://dbpedia.org/resource/Enemy_at_the_Door> .
    ?actor dbo:placeOfBurialOrMemorial ?restingPlace .
  }
}
```",7,7,8,3,3,3,3,71,0,0,1,0,0.0,0
659,60,test,"Give me the commander in the force of the native, that is an office holder, of Kingdom of Ireland and military force of the force, that is a societal event and an event and a military conflict, of the reference to Rutger Jan Schimmelpenninck.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Kingdom_of_Ireland> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/commander> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://dbpedia.org/ontology/commander> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Rutger Jan Schimmelpenninck""@en . }","```sparql
SELECT ?commander WHERE {
  ?native a dbo:OfficeHolder ;
          dbo:country dbr:Kingdom_of_Ireland .
  
  ?force dbo:militaryForceOf ?native .

  ?event a dbo:SocietalEvent, dbo:Event, dbo:MilitaryConflict ;
         dbo:militaryForce ?force .

  ?reference dbo:referenceTo dbr:Rutger_Jan_Schimmelpenninck ;
             dbo:event ?event .

  ?event dbo:commander ?commander .
}
```",6,10,7,3,2,3,3,71,0,0,40,0,0.0,0
783,19,test,"Give me the band member of the person born, that is an artist and a musical artist, as the persona of Ebony Reigns and associated musical artist of the band member of Ofori Amponsah.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v4 <http://dbpedia.org/property/birthName> ?v0 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . <http://dbpedia.org/resource/Ebony_Reigns> <http://xmlns.com/foaf/0.1/givenName> ?v0 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Ofori_Amponsah> . },"```sparql
SELECT ?bandMember WHERE {
  ?person <http://dbpedia.org/ontology/birthName> ""Ebony Reigns"" .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist> .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
  
  ?associatedArtist <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Ofori_Amponsah> .
  ?person <http://dbpedia.org/ontology/associatedMusicalArtist> ?associatedArtist .

  ?bandMember <http://dbpedia.org/ontology/memberOfBand> ?person .
}
```",5,7,6,3,2,3,2,20,0,0,1,0,0.0,0
232,30,test,"Give me the child of Jon Pertwee and actor of Dog Soldiers (film) and native of the residence, that is a settlement and British, of Sylvie Bermann.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . <http://dbpedia.org/resource/Dog_Soldiers_(film)> <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Sylvie_Bermann> <http://dbpedia.org/property/residence> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
SELECT ?child ?actor ?residence WHERE {
  # Step 1: Identify the child of Jon Pertwee
  <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/ontology/child> ?child .

  # Step 2: Find actors who acted in ""Dog Soldiers (film)""
  ?actor <http://dbpedia.org/ontology/performedIn> <http://dbpedia.org/resource/Dog_Soldiers_(film)> .

  # Step 3: Determine the residence of Sylvie Bermann that is a settlement and British
  <http://dbpedia.org/resource/Sylvie_Bermann> <http://dbpedia.org/property/residence> ?residence .
  ?residence <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement> .
  ?residence <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> .

  # Step 4: Find individuals who are native to the identified residence
  ?native <http://dbpedia.org/property/nativePlace> ?residence .

  # Combine all conditions
  FILTER (?child = ?actor && ?child = ?native)
}
```",4,6,5,2,3,3,3,71,0,0,1,0,0.0,0
492,44,test,"Give me the person decedent at French Algeria and person decedent at the capital, that is a settlement, of Algeria and commander in the war, that is a military conflict and an event, of Frédéric-Georges Herr.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/French_Algeria> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v4 <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Algeria> <http://dbpedia.org/ontology/capital> ?v2 . <http://dbpedia.org/resource/Frédéric-Georges_Herr> <http://dbpedia.org/ontology/battle> ?v4 . },"```sparql
SELECT ?person WHERE {
  # Find the capital of Algeria that is a settlement
  ?capital <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>;
           <http://dbpedia.org/property/capital> <http://dbpedia.org/resource/Algeria>.

  # Find the war that is a military conflict and an event involving Frédéric-Georges Herr
  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>;
       <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>;
       <http://dbpedia.org/property/commander> <http://dbpedia.org/resource/Frédéric-Georges_Herr>.

  # Find the person who died in French Algeria and at the capital of Algeria
  ?person <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/French_Algeria>;
          <http://dbpedia.org/ontology/deathPlace> ?capital.
}
```",5,8,6,2,3,3,3,71,0,0,1,0,0.0,0
767,59,test,"Give me the alma mater of the administration of the reference to George Kilbon Nash and entity in the administration, that is a settlement, of the writer of Where It's At (Dustin Lynch album).","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://xmlns.com/foaf/0.1/name> ""George Kilbon Nash""@en . ?v2 <http://dbpedia.org/property/leaderParty> ?v3 . ?result <http://dbpedia.org/ontology/state> ?v2 . <http://dbpedia.org/resource/Where_It's_At_(Dustin_Lynch_album)> <http://dbpedia.org/property/writer> ?v3 . ?v5 <http://dbpedia.org/property/governor> ?v0 . ?v5 <http://dbpedia.org/ontology/almaMater> ?result . }","```sparql
# Step 1: Identify the writer of ""Where It's At"" by Dustin Lynch
SELECT ?writer WHERE {
    ?album <http://dbpedia.org/ontology/writer> ?writer .
    ?album <http://dbpedia.org/property/title> ""Where It's At (Dustin Lynch album)""^^<http://www.w3.org/2001/XMLSchema#string> .
}

# Step 2: Identify the administration related to George Kilbon Nash
SELECT ?administration WHERE {
    ?administration <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/George_Kilbon_Nash> .
}

# Step 3: Find the residence of this administration that is a settlement
SELECT ?residence WHERE {
    ?administration <http://dbpedia.org/property/residence> ?residence .
    ?residence <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement> .
}

# Step 4: Determine the alma mater of this administration
SELECT ?almaMater WHERE {
    ?administration <http://dbpedia.org/property/almaMater> ?almaMater .
}
```",6,7,7,3,2,3,3,71,0,0,1,0,0.0,0
16,71,test,Give me the professional in the profession of the actor of Unnatural (TV series) and spouse of the person born as the birth name of Ted McGinley and person born as the birth name of the alumnus of Ohio State University.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/birthName> ?v8 . ?v7 <http://dbpedia.org/property/birthName> ?v8 . ?v7 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Ohio_State_University> . ?v4 <http://dbpedia.org/property/occupation> ?v5 . <http://dbpedia.org/resource/Unnatural_(TV_series)> <http://dbpedia.org/property/starring> ?v4 . ?result <http://dbpedia.org/property/occupation> ?v5 . ?v2 <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
# Step 1: Find the actor of ""Unnatural (TV series)""
SELECT ?actor WHERE {
    ?series <http://dbpedia.org/ontology/starring> ?actor .
    ?series <http://dbpedia.org/property/title> ""Unnatural (TV series)""^^<http://www.w3.org/2001/XMLSchema#string> .
}

# Step 2: Determine the profession of that actor
SELECT ?profession WHERE {
    ?actor <http://dbpedia.org/ontology/profession> ?profession .
}

# Step 3: Find Ted McGinley's birth name and his spouse
SELECT ?spouse WHERE {
    ?ted <http://xmlns.com/foaf/0.1/name> ""Ted McGinley""^^<http://www.w3.org/2001/XMLSchema#string> .
    ?ted <http://dbpedia.org/ontology/birthName> ?birthName .
    ?ted <http://dbpedia.org/property/spouse> ?spouse .
}

# Step 4: Find the alumnus of Ohio State University, their birth name, and the person with that birth name
SELECT ?person WHERE {
    ?alumnus <http://dbpedia.org/ontology/alumniOf> <http://dbpedia.org/resource/Ohio_State_University> .
    ?alumnus <http://dbpedia.org/ontology/birthName> ?birthName .
    ?person <http://xmlns.com/foaf/0.1/name> ?birthName .
}

# Step 5: Identify the common spouse
SELECT DISTINCT ?commonSpouse WHERE {
    { ?ted <http://dbpedia.org/property/spouse> ?commonSpouse . }
    UNION
    { ?person <http://dbpedia.org/property/spouse> ?commonSpouse . }
}

# Step 6: Find a professional with the same profession as the actor from step 2
SELECT DISTINCT ?professional WHERE {
    ?actor <http://dbpedia.org/ontology/profession> ?profession .
    ?professional <http://dbpedia.org/ontology/profession> ?profession .
}
```",9,9,10,3,3,3,3,71,0,0,1,0,0.0,0
285,19,test,Give me the spouse of the professional in the award of Stan Lee and parent of the child of Tina Onassis Niarchos.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Tina_Onassis_Niarchos> <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/ontology/spouse> ?v4 . ?v4 <http://dbpedia.org/property/occupation> ?v0 . <http://dbpedia.org/resource/Stan_Lee> <http://dbpedia.org/property/awards> ?v0 . },"```sparql
SELECT ?spouse WHERE {
  # Step 1: Find the child of Tina Onassis Niarchos
  ?child <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/Tina_Onassis_Niarchos>.

  # Step 2: Identify the parent (Tina Onassis Niarchos) and find her spouse
  OPTIONAL { 
    ?tina <http://dbpedia.org/property/spouse> ?spouse.
  }

  # Step 3: Find the professional associated with an award given by Stan Lee
  ?professional <http://dbpedia.org/ontology/receivesAward> ?award .
  ?award <http://www.w3.org/2000/01/rdf-schema#label> ""Stan Lee"" .

  # Step 4: Ensure that this professional is the same person whose spouse we found in step 2
  FILTER(?spouse = ?professional)
}
```",5,5,6,3,2,3,2,20,0,0,2,0,0.0,0
391,64,test,"Give me the native of the figure known as the nick name of Jackson, Tennessee and actor of The Departed and actor of the movie, that is a movie and a work and a television show, with the professional in .","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. <http://dbpedia.org/resource/Jackson,_Tennessee> <http://xmlns.com/foaf/0.1/nick> ?v3 . ?v2 <http://dbpedia.org/property/nickname> ?v3 . ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/property/starring> ?v0 . ?v1 <http://dbpedia.org/property/starring> ?result . ?v0 <http://dbpedia.org/property/occupation> """"@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. <http://dbpedia.org/resource/The_Departed> <http://dbpedia.org/ontology/starring> ?result . }","```sparql
SELECT ?nativePlace WHERE {
    ?movie <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Movie>.
    ?movie <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>.
    ?movie <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>.
    ?actor <http://dbpedia.org/ontology/actor> ?movie.
    ?actor foaf:name ""Leonardo DiCaprio""@en.
    ?actor dbo:nativePlace ?nativePlace.
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
528,45,test,Give me the war of Orozimbo Barbosa and war of Irene Morales and force of the person born as the birth name of Narciso Campero.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> ?v1 . <http://dbpedia.org/resource/Irene_Morales> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Narciso_Campero> <http://dbpedia.org/property/birthName> ?v0 . <http://dbpedia.org/resource/Orozimbo_Barbosa> <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/property/birthName> ?v0 . },"```sparql
SELECT DISTINCT ?warOrozimbo ?warIrene ?forceNarciso WHERE {
  OPTIONAL { <http://dbpedia.org/resource/Orozimbo_Barbosa> <http://dbpedia.org/ontology/battle> ?warOrozimbo . }
  OPTIONAL { <http://dbpedia.org/resource/Irene_Morales> <http://dbpedia.org/ontology/battle> ?warIrene . }
  {
    SELECT ?person WHERE {
      ?person <http://www.w3.org/2000/01/rdf-schema#label> ""Narciso Campero""@en .
      ?person <http://dbpedia.org/ontology/birthName> ""Narciso Campero"" .
    }
  }
  OPTIONAL { ?person <http://dbpedia.org/property/militaryRole> ?forceNarciso . }
}
```",5,5,6,3,3,3,3,71,0,0,2,0,0.0,0
251,25,test,"Give me the location of the war, that is a military conflict, of Louis François Félix Musnier and administration of the ruling party, that is a political party and an organisation, in Sicily and death place of Laura Mancinelli.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Sicily> <http://dbpedia.org/property/leaderParty> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v3 <http://dbpedia.org/ontology/place> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Laura_Mancinelli> <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Louis_François_Félix_Musnier> <http://dbpedia.org/ontology/battle> ?v3 . ?result <http://dbpedia.org/property/leaderParty> ?v4 . },"```sparql
SELECT ?location WHERE {
  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
  <http://dbpedia.org/resource/Louis_François_Félix_Musnier> <http://dbpedia.org/ontology/commander> ?war .
  
  ?party <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation> ;
         <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty> .
  ?administration <http://dbpedia.org/ontology/administrationOf> ?party ;
                  <http://dbpedia.org/property/location> <http://dbpedia.org/resource/Sicily> .

  <http://dbpedia.org/resource/Laura_Mancinelli> <http://dbpedia.org/ontology/deathPlace> ?location .
  
  FILTER(?war = ?administration)
}
```",5,8,6,2,3,2,3,28,0,0,1,0,0.0,0
281,49,test,"Give me the war of the profession, that is a military unit, of the professional, that is an office holder and a politician, in New Zealand Army and war of the awardee of Knight Grand Cross of the Order of the Bath.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/occupation> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v0 <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/New_Zealand_Army> . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_the_Bath> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
SELECT DISTINCT ?war WHERE {
  # Step 1: Find office holders and politicians in the New Zealand Army
  ?person a dbo:OfficeHolder ;
          dbo:officeHolderOf dbp:New_Zealand_Army ;
          dbo:occupation ?profession .
  
  FILTER (EXISTS { ?person dbo:positionTitle ""Politician"" }).

  # Step 2: Check if the profession is a military unit
  ?profession a dbo:MilitaryUnit .

  # Step 3: Find wars associated with these professions
  ?profession dbo:participatedIn ?war1 .

  # Step 4: Identify awardees of Knight Grand Cross of the Order of the Bath
  ?awardee dbo:award ""Knight Grand Cross of the Order of the Bath"" ;
          dbo:participatedIn ?war2 .

  # Step 5: Find common wars between these two groups
  FILTER (?war1 = ?war2)
  BIND(?war1 AS ?war)
}
```",5,8,6,3,2,3,3,71,0,0,9,0,0.0,0
9,62,test,"Give me the alma mater of the mayor, that is a politician, of the entity, that is an organisation, in Belfast and figure known as QUB and alma mater of the awardee of the reference, that is an award, to Royal Medals.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Royal Medals""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v6 <http://dbpedia.org/property/awards> ?v0 . ?v3 <http://dbpedia.org/ontology/almaMater> ?result . ?v4 <http://dbpedia.org/property/leader> ?v3 . ?result <http://dbpedia.org/property/nickname> ""QUB""@en . ?v4 <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Belfast> . ?v6 <http://dbpedia.org/ontology/almaMater> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. }","```sparql
# Step 1: Identify QUB in Belfast
SELECT ?qub WHERE {
    ?qub <http://dbpedia.org/ontology/location> ?location.
    ?location <http://www.w3.org/2000/01/rdf-schema#label> ""Belfast""@en.
    ?qub <http://dbpedia.org/property/commonName> ""Queen's University Belfast""@en.
}

# Step 2: Find the mayor of QUB who is a politician
SELECT ?mayor WHERE {
    ?mayor <http://dbpedia.org/ontology/politicalParty> ?party.
    ?qub <http://dbpedia.org/property/mayor> ?mayor.
    FILTER EXISTS { ?mayor <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }
}

# Step 3: Determine the alma mater of this mayor
SELECT ?almaMater WHERE {
    ?mayor <http://dbpedia.org/ontology/alumniOf> ?almaMater.
}

# Step 4: Identify the award reference known as Royal Medals
SELECT ?royalMedals WHERE {
    ?award <http://www.w3.org/2000/01/rdf-schema#label> ""Royal Medal""@en.
    FILTER EXISTS { ?award <http://dbpedia.org/ontology/reference> ?royalMedals. }
}

# Step 5: Find the awardee of the Royal Medals
SELECT ?awardee WHERE {
    ?awardee <http://dbpedia.org/ontology/recipientOfAward> ?royalMedals.
}

# Step 6: Confirm if the alma mater of both the mayor and the awardee is the same
SELECT DISTINCT ?commonAlmaMater WHERE {
    ?mayor <http://dbpedia.org/ontology/alumniOf> ?commonAlmaMater.
    ?awardee <http://dbpedia.org/ontology/alumniOf> ?commonAlmaMater.
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
994,51,test,"Give me the band member of the person born, that is a musical artist, as the persona of Don Dokken and associated musical artist of the band member, that is a band and a group and an organisation, of Meshuggah.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. <http://dbpedia.org/resource/Don_Dokken> <http://xmlns.com/foaf/0.1/givenName> ?v3 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Meshuggah> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/property/birthName> ?v3 . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. },"```sparql
SELECT ?bandMember WHERE {
  ?person rdfs:label ""Don Dokken""@en .
  ?person dbo:birthName ?bornAsArtist .
  ?bornAsArtist dbo:occupation dbp:musical_artist .

  ?bandMember dbo:associatedBand ?bornAsArtist .
  
  ?meshuggahBand rdf:type dbo:Band, dbo:Group, dbo:Organization .
  ?meshuggahBand dbo:member ?bandMember .
  ?meshuggahBand rdfs:label ""Meshuggah""@en .

  ?bandMember dbo:memberOf ?targetBand .
}
```",5,9,6,3,2,3,3,71,0,0,1,0,0.0,0
528,56,test,Give me the war of Orozimbo Barbosa and war of the military force of Battle of Pisagua and force of the person born as the birth name of Narciso Campero.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?v2 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Orozimbo_Barbosa> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Narciso_Campero> <http://dbpedia.org/property/birthName> ?v0 . ?v2 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Pisagua> . ?result <http://dbpedia.org/ontology/commander> ?v1 . },"```sparql
SELECT ?war WHERE {
  # Find the war associated with Orozimbo Barbosa
  <http://dbpedia.org/resource/Orozimbo_Barbosa> <http://dbpedia.org/ontology/battle> ?war1 .
  
  # Find the military force involved in the Battle of Pisagua and its associated war
  <http://dbpedia.org/resource/Battle_of_Pisagua> <http://dbpedia.org/ontology/militaryForce> ?force .
  ?force <http://dbpedia.org/ontology/battle> ?war2 .

  # Find Narciso Campero's birth name and the military force associated with it, then find its war
  <http://dbpedia.org/resource/Narciso_Campero> <http://dbpedia.org/property/birthName> ?birthName .
  ?person <http://dbpedia.org/ontology/birthName> ?birthName .
  ?person <http://dbpedia.org/ontology/militaryForce> ?force2 .
  ?force2 <http://dbpedia.org/ontology/battle> ?war3 .

  # Ensure all wars are the same
  FILTER (?war1 = ?war2 && ?war2 = ?war3)
  BIND(?war1 AS ?war)
}
```",6,6,7,3,3,3,3,71,0,0,2,0,0.0,0
55,24,test,"Give me the band member of the band member, that is a band and a group, of San Francisco Symphony and band of the reference, that is a band, to Newsted.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/San_Francisco_Symphony> . ?v1 <http://xmlns.com/foaf/0.1/name> ""Newsted""@en . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . }","```sparql
SELECT ?bandMember WHERE {
  ?entity1 <http://dbpedia.org/ontology/band> ?band .
  ?entity1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group> .
  ?entity1 <http://dbpedia.org/property/memberOf> <http://dbpedia.org/resource/San_Francisco_Symphony> .

  ?entity2 <http://dbpedia.org/ontology/band> ?bandRef .
  ?entity2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band> .
  ?entity2 <http://dbpedia.org/resource/Newsted> <http://dbpedia.org/property/reference> .

  ?bandMember <http://dbpedia.org/ontology/memberOfBand> ?entity1 ;
              <http://dbpedia.org/ontology/memberOfBand> ?entity2 .
}
```",4,7,5,2,2,2,3,28,0,0,3,0,0.0,0
16,70,test,Give me the professional in the profession of the actor of Unnatural (TV series) and spouse of the person born as Ted Martin McGinley and person born as the birth name of the alumnus of Ohio State University.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v7 . ?v4 <http://dbpedia.org/property/birthName> ""Ted Martin McGinley""@en . ?v4 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/property/occupation> ?v7 . ?v1 <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Unnatural_(TV_series)> <http://dbpedia.org/property/starring> ?v0 . ?result <http://dbpedia.org/property/birthName> ?v3 . ?v1 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Ohio_State_University> . }","```sparql
# Step 1: Get the actor of ""Unnatural (TV series)""
SELECT ?actor WHERE {
    ?series <http://dbpedia.org/ontology/starring> ?actor .
    ?series <http://dbpedia.org/property/title> ""Unnatural (TV series)""^^<http://www.w3.org/2001/XMLSchema#string> .
}

# Step 2: Get the profession of that actor
SELECT ?profession WHERE {
    ?actor <http://dbpedia.org/ontology/profession> ?profession .
}

# Step 3: Find Ted Martin McGinley and his spouse
SELECT ?spouse WHERE {
    ?person <http://www.w3.org/2000/01/rdf-schema#label> ""Ted Martin McGinley""^^<http://www.w3.org/2001/XMLSchema#string> .
    ?person <http://dbpedia.org/ontology/spouse> ?spouse .
}

# Step 4: Find the alumnus of Ohio State University by their birth name
SELECT ?alumnus WHERE {
    ?person <http://dbpedia.org/property/birthName> ?birthName .
    ?person <http://dbpedia.org/ontology/alumniOf> <http://dbpedia.org/resource/OHIO_State_University> .
}

# Step 5: Find the professional in the profession from step 2 who is also a spouse to both individuals
SELECT DISTINCT ?professional WHERE {
    # Get the profession of the actor from ""Unnatural (TV series)""
    ?series <http://dbpedia.org/ontology/starring> ?actor .
    ?series <http://dbpedia.org/property/title> ""Unnatural (TV series)""^^<http://www.w3.org/2001/XMLSchema#string> .
    ?actor <http://dbpedia.org/ontology/profession> ?profession .

    # Find the spouse of Ted Martin McGinley
    ?person1 <http://www.w3.org/2000/01/rdf-schema#label> ""Ted Martin McGinley""^^<http://www.w3.org/2001/XMLSchema#string> .
    ?person1 <http://dbpedia.org/ontology/spouse> ?spouse .

    # Find the alumnus of Ohio State University by their birth name
    ?person2 <http://dbpedia.org/property/birthName> ?birthName .
    ?person2 <http://dbpedia.org/ontology/alumniOf> <http://dbpedia.org/resource/OHIO_State_University> .

    # Ensure the spouse is common and has the same profession as the actor from ""Unnatural (TV series)""
    ?spouse <http://dbpedia.org/ontology/profession> ?profession .
    FILTER(?spouse = ?person2)
}
```",8,8,9,3,3,3,3,71,0,0,1,0,0.0,0
404,68,test,"Give me the spouse of the person born, that is a royalty, as the birth name of Princess Victoria Louise of Prussia and child of the father of Ernest Augustus, Duke of Brunswick and parent of the child, that is a royalty, of the parent, that is a royalty, of Prince George William of Hanover.","SELECT ?result WHERE { <http://dbpedia.org/resource/Prince_George_William_of_Hanover> <http://dbpedia.org/ontology/parent> ?v0 . ?v4 <http://dbpedia.org/property/birthName> ?v5 . ?result <http://dbpedia.org/ontology/parent> ?v3 . ?v4 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/ontology/child> ?v7 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/property/father> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/property/birthName> ?v5 . ?result <http://dbpedia.org/ontology/child> ?v7 . }","```sparql
SELECT ?spouse WHERE {
  ?princess a dbo:Royalty ;
            foaf:name ""Princess Victoria Louise of Prussia"" ;
            dbo:birthName ""Princess Victoria Louise of Prussia"" ;
            dbo:parent ?father .
  
  ?father a dbo:Person ;
          foaf:name ""Ernest Augustus, Duke of Brunswick"" .

  ?princess dbo:spouse ?spouse .

  ?child a dbo:Royalty ;
         dbo:parent ?princess .

  ?grandparent a dbo:Royalty ;
               dbo:parent ?child .

  ?greatGrandparent a dbo:Royalty ;
                    foaf:name ""Prince George William of Hanover"" ;
                    dbo:parent ?grandparent .
}
```",8,11,9,3,3,3,3,71,0,0,1,0,0.0,0
617,62,test,"Give me the parent of Nysa (wife of Pharnaces I of Pontus) and child of the child, that is a royalty, of the successor, that is a royalty, of Antiochus II Theos and spouse of the child of the successor, that is a royalty, of Antiochus (son of Antiochus III the Great).",SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v3 . <http://dbpedia.org/resource/Antiochus_II_Theos> <http://dbpedia.org/ontology/successor> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v6 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/successor> ?v0 . ?v0 <http://dbpedia.org/ontology/child> ?v6 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Nysa_(wife_of_Pharnaces_I_of_Pontus)> . ?v3 <http://dbpedia.org/property/father> ?v4 . },"```sparql
# Step 1: Identify Nysa's parent
SELECT ?parent WHERE {
    ?nysa <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Pharnaces_I_of_Pontus> .
    ?nysa <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Wife> .
    ?nysa <http://dbpedia.org/ontology/birthParent> ?parent .
}

# Step 2: Find the child of Nysa's parent who is royalty
SELECT ?child WHERE {
    ?parent <http://dbpedia.org/ontology/offspring> ?child .
    ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
}

# Step 3: Identify the successor of Antiochus II Theos who is royalty
SELECT ?successor WHERE {
    <http://dbpedia.org/resource/Antiochus_II_Theos> <http://dbpedia.org/ontology/successor> ?successor .
    ?successor <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
}

# Step 4: Find the child of this successor who is royalty
SELECT ?child WHERE {
    ?successor <http://dbpedia.org/ontology/offspring> ?child .
    ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
}

# Step 5: Determine the spouse of the child found in step 4
SELECT ?spouse WHERE {
    ?child <http://dbpedia.org/ontology/spouse> ?spouse .
}
```",7,10,8,3,3,3,3,71,0,0,2,0,0.0,0
659,18,test,Give me the military force of Napoleonic Wars and commander in Battle of Leipzig and commander in German campaign of 1813.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Napoleonic_Wars> . <http://dbpedia.org/resource/Battle_of_Leipzig> <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/German_campaign_of_1813> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT ?militaryForce WHERE {
    ?militaryForce <http://dbpedia.org/ontology/militaryConflict> <http://dbpedia.org/resource/Napoleonic_Wars>.
    ?battleOfLeipzig <http://dbpedia.org/ontology/commander> ?militaryForce.
    ?germanCampaign1813 <http://dbpedia.org/ontology/commander> ?militaryForce.
    
    FILTER(?battleOfLeipzig = <http://dbpedia.org/resource/Battle_of_Leipzig>)
    FILTER(?germanCampaign1813 = <http://dbpedia.org/resource/German_campaign_of_1813>)
}
```",3,3,4,1,3,3,3,71,0,0,5,0,0.0,0
391,69,test,"Give me the actor of the claim to fame, that is a work, of Michael Ballhaus and native of the figure known as the nick name of Jackson, Tennessee and actor of the movie, that is a movie and a work and a television show, with the professional in .","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Michael_Ballhaus> <http://dbpedia.org/ontology/knownFor> ?v7 . ?v3 <http://dbpedia.org/property/nickname> ?v4 . <http://dbpedia.org/resource/Jackson,_Tennessee> <http://xmlns.com/foaf/0.1/nick> ?v4 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/property/starring> ?result . ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v2 <http://dbpedia.org/property/starring> ?v1 . ?v7 <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://dbpedia.org/property/occupation> """"@en . }","```sparql
# Step 1: Find the nickname of Jackson, Tennessee
SELECT ?nickname WHERE {
    ?place rdfs:label ""Jackson, Tennessee""@en .
    ?place dbo:nickname ?nickname .
}

# Step 2: Identify a figure known by that nickname who is an actor in a movie
SELECT ?actor WHERE {
    ?person foaf:name ?nickname ;
            dbo:occupation dbp:Actor .
    ?movie dbo:starring ?person ;
           dbo:type dbp:Film .
}

# Step 3: Find Michael Ballhaus's claim to fame (work)
SELECT ?work WHERE {
    <http://dbpedia.org/resource/Michael_Ballhaus> dbo:knownFor ?work .
}

# Step 4: Find the actor of that work
SELECT ?actor WHERE {
    ?work dbo:starring ?actor .
}

# Step 5: Identify a movie that is also a television show and involves an actor from step 4
SELECT ?movie WHERE {
    ?movie dbo:type dbp:Film ;
           dbo:type dbp:TelevisionShow .
    ?movie dbo:starring ?actor .
}
```",8,12,9,3,3,3,3,71,0,0,1,0,0.0,0
959,60,test,"Give me the manager of the team of the manager, that is a sports manager, of 1998 Kashima Antlers season and member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of the person born in 1958.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/manager> ?result . <http://dbpedia.org/resource/1998_Kashima_Antlers_season> <http://dbpedia.org/ontology/manager> ?v5 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v4 <http://dbpedia.org/ontology/almaMater> ?v2 . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?result <http://dbpedia.org/ontology/team> ?v2 . ?v4 <http://dbpedia.org/ontology/birthYear> ""1958""^^<http://www.w3.org/2001/XMLSchema#gYear> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v0 <http://dbpedia.org/ontology/manager> ?v5 . }","```sparql
# Step 1: Find the person born in 1958 associated with a Japanese university
SELECT ?person WHERE {
    ?person dbo:birthYear ""1958""^^xsd:gYear .
    ?person dbo:nationality dbr:Japan .
    ?person dbo:almaMater ?university .
    ?university rdf:type dbo:University ;
                dbo:country dbr:Japan .
}

# Step 2: Find the alma mater of this person
SELECT ?almaMater WHERE {
    ?person dbo:almaMater ?almaMater .
    FILTER(?person IN (?person))
}

# Step 3: Find members of this alma mater
SELECT ?member WHERE {
    ?member dbo:almaMater ?almaMater .
    FILTER(?almaMater IN (?almaMater))
}

# Step 4: Identify the manager from these members who managed the team during the 1998 Kashima Antlers season
SELECT ?manager WHERE {
    ?manager dbo:team dbr:Kashima_Antlers ;
             dbo:season ""1998"" .
    FILTER(?member IN (?member))
}

# Step 5: Find the manager of this identified manager
SELECT ?finalManager WHERE {
    ?finalManager dbo:employee ?manager .
}
```",6,11,7,3,2,3,3,71,0,0,3,0,0.0,0
281,38,test,"Give me the entity in the birth place, that is a country, of Bob Heffron and war of the profession, that is a military unit, of Heather Roy.",SELECT ?result WHERE { <http://dbpedia.org/resource/Bob_Heffron> <http://dbpedia.org/ontology/birthPlace> ?v3 . <http://dbpedia.org/resource/Heather_Roy> <http://dbpedia.org/property/occupation> ?v2 . ?result <http://dbpedia.org/ontology/place> ?v3 . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. },"```sparql
# Part 1: Entities in Bob Heffron's birthplace country
SELECT ?entity WHERE {
    <http://dbpedia.org/resource/Bob_Heffron> <http://www.w3.org/2000/01/rdf-schema#birthPlace> ?birthPlace .
    ?birthPlace <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country> .
    ?entity <http://www.w3.org/2000/01/rdf-schema#country> ?birthPlace .
}

UNION

# Part 2: Wars related to Heather Roy's profession as a military unit
SELECT ?war WHERE {
    <http://dbpedia.org/resource/Heather_Roy> <http://purl.org/dc/terms/profession> ?profession .
    ?profession <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit> .
    ?war <http://dbpedia.org/ontology/involvesMilitaryUnit> ?profession .
}
```",4,6,5,2,2,3,3,71,0,0,1,0,0.0,0
404,46,test,"Give me the parent of the child, that is a royalty, of Ernest Augustus, Duke of Brunswick and spouse of the person born, that is a royalty, as the birth name of Princess Victoria Louise of Prussia.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/property/birthName> ?v2 . ?v1 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/child> ?v4 . ?v1 <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/ontology/child> ?v4 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
SELECT ?parent WHERE {
  # Step 1: Identify Princess Victoria Louise of Prussia by birth name
  ?princess a dbo:Royalty ;
            foaf:name ""Princess Victoria Louise of Prussia""@en ;
            dbo:birthName ?birthName .

  # Step 2: Determine her spouse
  ?spouse dbo:spouse ?princess .

  # Step 3: Find the child who is royalty and related to Ernest Augustus, Duke of Brunswick
  ?child a dbo:Royalty ;
         dbo:parent ?ernestAugustus ;
         dbo:parent ?spouse .

  # Identify Ernest Augustus, Duke of Brunswick
  ?ernestAugustus foaf:name ""Ernest Augustus, Duke of Brunswick""@en .

  # Step 4: Retrieve the parent of that child
  ?child dbo:parent ?parent .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
959,45,test,"Give me the manager of the team of the manager, that is a sports manager, of 1998 Kashima Antlers season and native of Japan and member of University of Tsukuba.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Japan> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v0 <http://dbpedia.org/ontology/manager> ?v3 . ?result <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/University_of_Tsukuba> . ?v0 <http://dbpedia.org/ontology/manager> ?result . <http://dbpedia.org/resource/1998_Kashima_Antlers_season> <http://dbpedia.org/ontology/manager> ?v3 . },"```sparql
SELECT ?finalManager WHERE {
  # Step 1: Identify the manager of the 1998 Kashima Antlers season who is a sports manager
  ?manager a dbo:SportsManager ;
           dbo:managedTeam <http://dbpedia.org/resource/1998_Kashima_Antlers_season> ;
           foaf:nationality <http://dbpedia.org/resource/Japan> .

  # Step 2: Ensure this manager is a member of University of Tsukuba
  ?manager dbo:almaMater <http://dbpedia.org/resource/University_of_Tsukuba> .

  # Step 3: Find out which team this manager manages
  ?team dbo:manager ?manager .
  
  # Step 4: Identify the manager of that team
  ?finalManager dbo:managedTeam ?team ;
                a dbo:SportsManager .
}
```",5,6,6,3,3,3,3,71,0,0,2,0,0.0,0
378,40,test,"Give me the claim to fame of Louis des Balbes de Berton de Crillon, 1st Duke of Mahón and war of Joaquín Blake and war of the person born as the birth name of Carl Pontus Gahn.","SELECT ?result WHERE { <http://dbpedia.org/resource/Louis_des_Balbes_de_Berton_de_Crillon,_1st_Duke_of_Mahón> <http://dbpedia.org/ontology/knownFor> ?result . ?v1 <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Joaquín_Blake> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/property/birthName> ?v2 . ?v1 <http://dbpedia.org/ontology/battle> ?result . }","```sparql
# Query 1: Claim to Fame of Louis des Balbes de Berton de Crillon
SELECT ?claimToFame WHERE {
  <http://dbpedia.org/resource/Louis_des_Balbes_de_Berton_de_Crillon,_1st_Duke_of_Mahón> <http://dbpedia.org/ontology/knownFor> ?claimToFame .
}

# Query 2: Wars of Joaquín Blake
SELECT ?war WHERE {
  <http://dbpedia.org/resource/Joaqu%C3%ADn_Blake_y_Jord%C3%A1n> <http://dbpedia.org/ontology/battle> ?war .
}

# Query 3: Birth Name and Wars of Carl Pontus Gahn
# Step 1: Find the birth name
SELECT ?birthName WHERE {
  <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/ontology/birthName> ?birthName .
}

# Step 2: Use the birth name to find associated wars
SELECT ?war WHERE {
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person> .
  ?person <http://dbpedia.org/property/birthName> ""Carl Pontus Gahn""@en .
  ?person <http://dbpedia.org/ontology/battle> ?war .
}
```",5,5,6,3,3,3,3,71,0,0,2,0,0.0,0
701,62,test,Give me the parent of the child of the spouse of Amun-her-khepeshef and spouse of Ramesses II and parent of the child of the child of Seti I.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Ramesses_II> . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seti_I> . ?v3 <http://dbpedia.org/ontology/parent> ?result . ?v6 <http://dbpedia.org/property/father> ?v0 . ?v4 <http://dbpedia.org/ontology/child> ?v3 . ?result <http://dbpedia.org/ontology/child> ?v6 . <http://dbpedia.org/resource/Amun-her-khepeshef> <http://dbpedia.org/ontology/spouse> ?v4 . },"```sparql
SELECT ?parent
WHERE {
  # Step 1: Identify Amun-her-khepeshef's spouse
  ?spouse_amun a dbo:Spouse;
               dbo:spouse <http://dbpedia.org/resource/Amun-her-khepeshef>.

  # Step 2: Find the child of Amun-her-khepeshef and his spouse
  ?child_amun dbo:parent ?spouse_amun;
             dbo:parent <http://dbpedia.org/resource/Amun-her-khepeshef>.

  # Step 3: Determine the parent of that child (should be Amun-her-khepeshef or his spouse)
  OPTIONAL { ?parent1 dbo:child ?child_amun. }

  # Step 4: Identify Ramesses II's spouse who is also connected to Amun-her-khepeshef
  ?spouse_ramesses a dbo:Spouse;
                   dbo:spouse <http://dbpedia.org/resource/Ramesses_II>;
                   rdfs:label ""Amun-her-khepeshef""@en.

  # Step 5: Find the child of this spouse and Ramesses II
  ?child_ramesses dbo:parent ?spouse_ramesses;
                 dbo:parent <http://dbpedia.org/resource/Ramesses_II>.

  # Step 6: Determine the parent of that child (should be Ramesses II or his spouse)
  OPTIONAL { ?parent2 dbo:child ?child_ramesses. }

  # Step 7: Identify Seti I's child, then find the grandchild of Seti I
  ?child_seti dbo:parent <http://dbpedia.org/resource/Seti_I>.
  ?grandchild_seti dbo:parent ?child_seti.

  # Step 8: Determine the parent of that grandchild
  OPTIONAL { ?parent3 dbo:child ?grandchild_seti. }

  # Final step: Find the common entity among these parents
  FILTER(?parent1 = ?parent2 && ?parent2 = ?parent3)
}
```",7,7,8,3,3,3,3,71,0,0,1,0,0.0,0
801,67,test,"Give me the professional in  and producer of the work, that is a musical work and a song and a work, of the professional, that is a musical artist, in Rapper and associated musical artist of the writer, that is a musical artist and an artist, of the album, that is a musical work and a work, of What U See Is What U Get.","SELECT ?result WHERE { ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v6 <http://dbpedia.org/ontology/producer> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> """"@en . <http://dbpedia.org/resource/What_U_See_Is_What_U_Get> <http://dbpedia.org/ontology/album> ?v1 . ?v1 <http://dbpedia.org/property/writer> ?v3 . ?v0 <http://dbpedia.org/property/occupation> ""Rapper""@en . ?v6 <http://dbpedia.org/property/writer> ?v0 . }","```sparql
SELECT DISTINCT ?professional WHERE {
  # Step 1: Identify the album ""What U See Is What U Get""
  ?album rdf:type dbo:MusicalWork ;
         rdfs:label ""What U See Is What U Get""@en .
  
  # Step 2: Find the writer(s) of this album who are both musical artists and general artists
  ?writer dbo:creatorOf ?album ;
          rdf:type dbo:MusicalArtist, dbo:Artist .

  # Step 3: Determine the associated musical artist(s) of these writers who are rappers
  ?associatedArtist dbo:associatedBandMember ?writer ;
                    dbo:genre dbc:Rap_music .
  
  # Step 4: Locate the professional in these associated musical artists who is also a musical artist
  ?professional rdf:type dbo:MusicalArtist, dbo:Producer ;
                dbo:associatedBandMember ?associatedArtist .

  # Step 5: Identify the work that is a musical work, song, and work produced by this professional
  ?work rdf:type dbo:MusicalWork, dbo:Song ;
        dbo:producer ?professional .
}
```",7,15,8,3,3,3,3,71,0,0,8,0,0.0,0
747,47,test,"Give me the band of the writer of the work, that is a song, of Amba Shepherd and person born on the birth date of Pavlo Khudzik.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Amba_Shepherd> . ?result <http://dbpedia.org/ontology/birthDate> ?v2 . ?v0 <http://dbpedia.org/property/writer> ?v4 . <http://dbpedia.org/resource/Pavlo_Khudzik> <http://dbpedia.org/ontology/birthDate> ?v2 . },"```sparql
# Step 1: Get the birth date of Pavlo Khudzik
SELECT ?birthDate WHERE {
    <http://dbpedia.org/resource/Pavlo_Khudzik> <http://www.w3.org/2002/07/owl#sameAs> ?person .
    ?person <http://dbpedia.org/ontology/birthDate> ?birthDate .
}

# Step 2: Find a person born on the same birth date
SELECT DISTINCT ?person WHERE {
    ?person <http://dbpedia.org/ontology/birthDate> ?birthDate .
    FILTER(?birthDate = ""Birth_Date_of_Pavlo_Khudzik"") # Replace with actual birth date from step 1
}

# Step 3: Find the song associated with Amba Shepherd and the person found in step 2
SELECT DISTINCT ?song WHERE {
    ?work <http://dbpedia.org/ontology/work> ?song .
    ?work <http://dbpedia.org/property/contributor> <http://dbpedia.org/resource/Amba_Shepherd> .
    ?work <http://dbpedia.org/property/contributor> ?person .
    FILTER(?person = ""Person_ID_from_Step_2"") # Replace with actual person ID from step 2
}

# Step 4: Identify the writer of this song
SELECT DISTINCT ?writer WHERE {
    ?song <http://purl.org/dc/terms/creator> ?writer .
    FILTER(?song = ""Song_ID_from_Step_3"") # Replace with actual song ID from step 3
}

# Step 5: Find the band associated with this writer
SELECT DISTINCT ?band WHERE {
    ?writer <http://dbpedia.org/ontology/memberOfBand> ?band .
    FILTER(?writer = ""Writer_ID_from_Step_4"") # Replace with actual writer ID from step 4
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
77,20,test,"Give me the war of the awardee of the award of Maxim Grigorievich Vlasov and force of the mayor of the territory administered, that is an organisation, from Warsaw.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> ?v1 . ?v4 <http://dbpedia.org/property/leader> ?v5 . ?result <http://dbpedia.org/ontology/commander> ?v5 . ?v4 <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Warsaw> . <http://dbpedia.org/resource/Maxim_Grigorievich_Vlasov> <http://dbpedia.org/property/awards> ?v1 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
# Part 1: War of the Awardee
SELECT ?war WHERE {
    ?award <http://dbpedia.org/ontology/receiver> <http://dbpedia.org/resource/Maxim_Grigorievich_Vlasov> .
    ?award <http://dbpedia.org/property/relatedTo> ?war .
}

# Part 2: Force of the Mayor's Territory
SELECT ?force WHERE {
    ?organization <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation> .
    ?organization <http://dbpedia.org/property/administers> <http://dbpedia.org/resource/Warsaw> .
    ?mayor <http://dbpedia.org/ontology/officelocation> ?organization .
    ?mayor <http://dbpedia.org/ontology/memberOf> ?force .
}
```",6,7,7,3,2,3,2,20,0,0,26,0,0.0,0
994,46,test,"Give me the associated musical artist of the band member, that is a band and a group and an organisation, of Meshuggah and associated musical artist of the associated musical artist of the reference to Watchtower.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://xmlns.com/foaf/0.1/name> ""Watchtower""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Meshuggah> . }","```sparql
# Step 1: Find bands/groups/organizations associated with Meshuggah
WITH {
    SELECT ?band WHERE {
        ?band <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/Meshuggah>.
        ?band <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?type.
        FILTER (?type IN (<http://dbpedia.org/ontology/Band>, <http://dbpedia.org/ontology/Organisation>, <http://dbpedia.org/ontology/MusicalGroup>)).
    }
} AS %bands

# Step 2: Find associated musical artists of these bands
WITH %bands, {
    SELECT ?band ?artist WHERE {
        VALUES ?band { %bands }
        ?band <http://dbpedia.org/property/associatedMusicalArtist> ?artist.
    }
} AS %artists

# Step 3: For each artist found in step 2, find their associated musical artists
WITH %artists, {
    SELECT ?artist1 ?artist2 WHERE {
        VALUES (?band ?artist) { %artists }
        ?artist <http://dbpedia.org/property/associatedMusicalArtist> ?artist2.
    }
} AS %relatedArtists

# Step 4: Find the reference to Watchtower and its associated musical artist
WITH %relatedArtists, {
    SELECT ?watchtowerArtist WHERE {
        <http://dbpedia.org/resource/Watchtower_(band)> <http://dbpedia.org/property/associatedMusicalArtist> ?watchtowerArtist.
    }
} AS %watchtowerArtist

# Final result: Combine results from steps 3 and 4
SELECT DISTINCT ?artist2, ?watchtowerArtist WHERE {
    VALUES ?artist2 { %relatedArtists }
    OPTIONAL { VALUES ?watchtowerArtist { %watchtowerArtist } }
}
```",5,8,6,3,2,3,3,71,0,0,5,0,0.0,0
492,45,test,"Give me the commander in Franco-Hova Wars and person decedent at the capital, that is a settlement, of the country of Khemis Miliana District and person decedent at French Algeria.",SELECT ?result WHERE { <http://dbpedia.org/resource/Khemis_Miliana_District> <http://dbpedia.org/ontology/country> ?v0 . ?v0 <http://dbpedia.org/ontology/capital> ?v1 . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/French_Algeria> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . <http://dbpedia.org/resource/Franco-Hova_Wars> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT ?person WHERE {
  ?war <http://dbpedia.org/ontology/commander> ?person .
  FILTER(?war = <http://dbpedia.org/resource/Franco-Hova_Wars>) .

  ?person <http://dbpedia.org/property/deathPlace> ?deathPlace1 ;
          <http://dbpedia.org/property/deathPlace> ?deathPlace2 .

  ?capital <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement> .
  ?capital <http://dbpedia.org/ontology/capital> ?khemisMilianaDistrict .
  ?khemisMilianaDistrict <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion> ;
                        <http://dbpedia.org/property/country> ?country .

  ?country <http://www.w3.org/2000/01/rdf-schema#label> ""Khemis Miliana District""@en .
  
  FILTER(?deathPlace1 = ?capital || ?deathPlace2 = ?capital) .
  FILTER(?deathPlace1 = <http://dbpedia.org/resource/French_Algeria> || ?deathPlace2 = <http://dbpedia.org/resource/French_Algeria>) .
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
184,61,test,"Give me the child of the child of the parent, that is a royalty, of Archduke Ladislaus Philipp of Austria and parent of the child of the parent of Archduchess Margaret of Austria (born 1925).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v3 . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Margaret_of_Austria_(born_1925)> . ?v3 <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Archduke_Ladislaus_Philipp_of_Austria> <http://dbpedia.org/ontology/parent> ?v0 . ?result <http://dbpedia.org/property/father> ?v5 . ?v5 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
SELECT ?childOfChild WHERE {
  # Step 1: Find the parent of Archduchess Margaret of Austria (born 1925)
  <http://dbpedia.org/resource/Archduchess_Margaret_of_Austria_(born_1925)> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person> .
  ?parent <http://dbpedia.org/property/spouse> <http://dbpedia.org/resource/Archduchess_Margaret_of_Austria_(born_1925)> ;
           <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person> .

  # Step 2: Find the child of this parent
  ?child <http://dbpedia.org/property/spouse> ?parent ;
         <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person> .

  # Step 3: Find the parent of this child
  ?grandParent <http://dbpedia.org/property/spouse> ?child ;
               <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person> .

  # Step 4: Find the child of this grandparent
  ?grandChild <http://dbpedia.org/property/spouse> ?grandParent ;
              <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person> .

  # Step 5: Find the child of this grandchild
  ?greatGrandChild <http://dbpedia.org/property/spouse> ?grandChild ;
                   <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person> .

  # Step 6: Filter by royalty
  ?greatGrandChild <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
}
```",6,7,7,3,2,3,3,71,0,0,1,0,0.0,0
16,49,test,Give me the person born as the birth name of the alumnus of Ohio State University and spouse of the person born as Ted Martin McGinley.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Ohio_State_University> . ?v2 <http://dbpedia.org/property/birthName> ""Ted Martin McGinley""@en . ?v0 <http://dbpedia.org/property/birthName> ?v1 . }","```sparql
SELECT ?personBirthName WHERE {
  ?alumnus <http://dbpedia.org/ontology/alumniOf> <http://dbpedia.org/resource/Ohio_State_University>.
  ?spouse <http://www.w3.org/2000/01/rdf-schema#label> ""Ted Martin McGinley""@en.
  ?alumnus <http://xmlns.com/foaf/0.1/spouse> ?spouse.
  ?alumnus <http://dbpedia.org/ontology/birthName> ?personBirthName.
}
```",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
16,65,test,Give me the person born as the birth name of Gigi Rice and spouse of the person born as Ted Martin McGinley and professional in the profession of the actor of Unnatural (TV series).,"SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/birthName> ""Ted Martin McGinley""@en . ?v4 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Gigi_Rice> <http://dbpedia.org/property/birthName> ?v3 . ?v0 <http://dbpedia.org/property/occupation> ?v6 . ?result <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Unnatural_(TV_series)> <http://dbpedia.org/property/starring> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v6 . }","```sparql
# Step 1: Find Gigi Rice's birth name
SELECT ?birthName WHERE {
    <http://dbpedia.org/resource/Gigi_Rice> <http://dbpedia.org/ontology/birthName> ?birthName .
}

# Step 2: Find the person married to Ted Martin McGinley
SELECT ?spouse WHERE {
    ?person <http://dbpedia.org/ontology/birthName> ""Ted Martin McGinley"" .
    ?person <http://dbpedia.org/ontology/spouse> ?spouse .
}

# Step 3: Determine the profession of the actor from ""Unnatural (TV series)""
SELECT ?profession WHERE {
    ?actor <http://dbpedia.org/property/actedIn> <http://dbpedia.org/resource/Unnatural_(TV_series)> .
    ?actor <http://purl.org/dc/terms/profession> ?profession .
}

# Final query to find the person born as Gigi Rice's birth name, spouse of Ted Martin McGinley, and professional in the actor's profession
SELECT ?person WHERE {
    # Person with Gigi Rice's birth name
    ?person <http://dbpedia.org/ontology/birthName> ?birthName .
    
    # Spouse of Ted Martin McGinley
    ?spouse <http://dbpedia.org/ontology/spouse> ?tedMcGinley .
    ?tedMcGinley <http://dbpedia.org/ontology/birthName> ""Ted Martin McGinley"" .

    # Professional in the actor's profession from Unnatural (TV series)
    ?actor <http://dbpedia.org/property/actedIn> <http://dbpedia.org/resource/Unnatural_(TV_series)> .
    ?actor <http://purl.org/dc/terms/profession> ?profession .
    ?person <http://purl.org/dc/terms/profession> ?profession .

    FILTER (?birthName = ""Gigi Rice's birth name"" && ?spouse = ?tedMcGinley)
}
```",7,7,8,3,3,3,3,71,0,0,1,0,0.0,0
16,60,test,Give me the person born as the birth name of the alumnus of Ohio State University and spouse of the person born as the birth name of Ted McGinley.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Ohio_State_University> . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/property/birthName> ?v3 . ?result <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
# Step 1: Get the alumnus of Ohio State University
SELECT ?alumnus WHERE {
    ?alumnus <http://dbpedia.org/ontology/alumni> <http://dbpedia.org/resource/Ohio_State_University>.
}

# Step 2: Get the birth name of the alumnus
SELECT ?birthNameAlumnus WHERE {
    ?alumnus <http://dbpedia.org/property/birthName> ?birthNameAlumnus.
}

# Step 3: Get Ted McGinley's spouse
SELECT ?spouse WHERE {
    <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/ontology/spouse> ?spouse.
}

# Step 4: Get the birth name of Ted McGinley's spouse
SELECT ?birthNameSpouse WHERE {
    ?spouse <http://dbpedia.org/property/birthName> ?birthNameSpouse.
}

# Final step: Find a person whose birth name matches both retrieved birth names
SELECT DISTINCT ?person WHERE {
    ?person <http://dbpedia.org/property/birthName> ?commonBirthName.
    FILTER (?commonBirthName = ?birthNameAlumnus && ?commonBirthName = ?birthNameSpouse)
}
```",6,6,7,3,2,3,3,71,0,0,1,0,0.0,0
547,60,test,Give me the resting place of the awardee of the award of Gerald Graham and resting place of the child of the child of William Haliburton.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Gerald_Graham> <http://dbpedia.org/property/awards> ?v0 . ?v1 <http://dbpedia.org/property/awards> ?v0 . ?v3 <http://dbpedia.org/ontology/child> ?v2 . ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . ?v3 <http://dbpedia.org/property/father> ""William Haliburton""@en . }","```sparql
# Part 1: Resting place of Gerald Graham's awardee
SELECT ?awardeeRestingPlace WHERE {
    ?award <http://dbpedia.org/ontology/recipient> ?awardee .
    ?gGraham <http://dbpedia.org/property/associatedAward> ?award .
    FILTER(?gGraham = <http://dbpedia.org/resource/Gerald_Graham>) .
    ?awardee <http://dbpedia.org/ontology/burialPlace> ?awardeeRestingPlace .
}

UNION

# Part 2: Resting place of William Haliburton's great-grandchild
SELECT ?greatGrandchildRestingPlace WHERE {
    ?grandparent <http://dbpedia.org/ontology/spouse> ?parent1 ;
                 <http://dbpedia.org/ontology/spouse> ?parent2 .
    FILTER(?grandparent = <http://dbpedia.org/resource/William_Haliburton>) .

    ?parent1 <http://dbpedia.org/ontology/offspring> ?child1 .
    ?parent2 <http://dbpedia.org/ontology/offspring> ?child2 .
    
    OPTIONAL { ?child1 <http://dbpedia.org/ontology/spouse> ?spouseChild1 }
    OPTIONAL { ?child2 <http://dbpedia.org/ontology/spouse> ?spouseChild2 }

    ?child1 <http://dbpedia.org/ontology/offspring> ?grandchild .
    ?child2 <http://dbpedia.org/ontology/offspring> ?grandchild .

    ?grandchild <http://dbpedia.org/ontology/offspring> ?greatGrandchild .
    ?greatGrandchild <http://dbpedia.org/ontology/burialPlace> ?greatGrandchildRestingPlace .
}
```",6,6,7,3,2,3,3,71,0,0,2,0,0.0,0
659,49,test,"Give me the commander in the force of Arthur Wellesley, 1st Duke of Wellington and military force of the force, that is a societal event and an event and a military conflict, of the reference to Rutger Jan Schimmelpenninck.","SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""Rutger Jan Schimmelpenninck""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Arthur_Wellesley,_1st_Duke_of_Wellington> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/ontology/commander> ?v0 . ?result <http://dbpedia.org/ontology/battle> ?v1 . }","```sparql
SELECT ?conflict ?commander WHERE {
  ?conflict <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>.
  ?conflict <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>.
  ?conflict <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>.

  <http://dbpedia.org/resource/Arthur_Wellesley,_1st_Duke_of_Wellington> <http://dbpedia.org/property/commander> ?commander.
  ?commander <http://dbpedia.org/ontology/battle> ?conflict.

  <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> <http://dbpedia.org/ontology/referenceTo> ?conflict.
}
```",5,8,6,3,2,3,3,71,0,0,38,0,0.0,0
547,67,test,Give me the resting place of James Burton (Egyptologist) and resting place of the awardee of the award of Gerald Graham and resting place of the actor of the show with Emily Richard.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/awards> ?v1 . <http://dbpedia.org/resource/Gerald_Graham> <http://dbpedia.org/property/awards> ?v1 . ?v6 <http://dbpedia.org/ontology/restingPlace> ?result . ?v0 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emily_Richard> . <http://dbpedia.org/resource/James_Burton_(Egyptologist)> <http://dbpedia.org/ontology/restingPlace> ?result . ?v3 <http://dbpedia.org/ontology/restingPlace> ?result . ?v0 <http://dbpedia.org/property/starring> ?v6 . },"```sparql
SELECT DISTINCT ?restingPlace1, ?restingPlace2, ?restingPlace3 WHERE {
  # Resting place of James Burton (Egyptologist)
  OPTIONAL { 
    <http://dbpedia.org/resource/James_Burton_(egyptologist)> <http://dbpedia.org/ontology/burial> ?restingPlace1 .
  }

  # Resting place of the awardee of Gerald Graham
  OPTIONAL {
    ?awardee <http://dbpedia.org/property/award> <http://dbpedia.org/resource/Gerald_Graham> ;
             <http://dbpedia.org/ontology/burial> ?restingPlace2 .
  }

  # Resting place of the actor in a show with Emily Richard
  OPTIONAL {
    ?show <http://dbpedia.org/property/starring> ?actor .
    ?actor <http://dbpedia.org/ontology/burial> ?restingPlace3 .
    ?show <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/E._Richard> .
  }
}
```",7,7,8,3,3,3,3,71,0,0,1,0,0.0,0
994,62,test,"Give me the associated musical artist of the associated musical artist of the reference to Watchtower and band member of Don Dokken and associated musical artist of the band member, that is a band and a group and an organisation, of the band, that is an organisation, of Fredrik Thordendal.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v4 <http://xmlns.com/foaf/0.1/name> ""Watchtower""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Don_Dokken> . ?v1 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Fredrik_Thordendal> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. }","```sparql
# Step 1: Find the band associated with Fredrik Thordendal
SELECT ?band WHERE {
    <http://dbpedia.org/resource/Fredrik_Thordendal> <http://dbpedia.org/ontology/memberOf> ?band .
    ?band <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation> .
}

# Step 2: Find band members of this band who are part of bands that are organizations, groups, and bands
SELECT DISTINCT ?member WHERE {
    ?band <http://dbpedia.org/ontology/member> ?member .
    ?memberBand <http://dbpedia.org/ontology/memberOf> ?member .
    ?memberBand <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?type .
    FILTER(?type IN (<http://dbpedia.org/ontology/Organisation>, <http://dbpedia.org/ontology/Band>, <http://dbpedia.org/ontology/Group>)).
}

# Step 3: Identify associated musical artists for these band members
SELECT DISTINCT ?artist WHERE {
    ?member <http://dbpedia.org/property/associatedMusicalArtist> ?artist .
}

# Step 4: Find the associated musical artist of the reference to Watchtower
SELECT DISTINCT ?watchtowerArtist WHERE {
    <http://dbpedia.org/resource/Watchtower_(band)> <http://dbpedia.org/ontology/reference> ?reference .
    ?reference <http://dbpedia.org/property/associatedMusicalArtist> ?watchtowerArtist .
}

# Step 5: Find the associated musical artist of Don Dokken's band members
SELECT DISTINCT ?donDokkenArtist WHERE {
    <http://dbpedia.org/resource/Don_Dokken> <http://dbpedia.org/ontology/memberOf> ?band .
    ?band <http://dbpedia.org/ontology/member> ?member .
    ?member <http://dbpedia.org/property/associatedMusicalArtist> ?donDokkenArtist .
}

# Step 6: Combine results to find the common associated musical artist
SELECT DISTINCT ?commonArtist WHERE {
    VALUES ?artist1 { ?watchtowerArtist }
    VALUES ?artist2 { ?donDokkenArtist }
    FILTER(?artist1 = ?artist2)
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
328,71,test,"Give me the commander in the force of the person decedent at Budapest and awardee of the award of the commander in Volcano and Ryukyu Islands campaign and leader of the office, that is a government agency, of the leader, that is an office holder and a politician, of Gustav Jonson.",SELECT ?result WHERE { ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/property/awards> ?v2 . ?v8 <http://dbpedia.org/ontology/leader> ?result . ?v5 <http://dbpedia.org/ontology/commander> ?v4 . ?v1 <http://dbpedia.org/property/awards> ?v2 . <http://dbpedia.org/resource/Gustav_Jonson> <http://dbpedia.org/property/leader> ?v7 . ?v5 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Volcano_and_Ryukyu_Islands_campaign> <http://dbpedia.org/ontology/commander> ?v1 . ?v4 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Budapest> . ?v7 <http://dbpedia.org/property/office> ?v8 . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. },"```sparql
SELECT ?commander WHERE {
  # Step 1: Identify Gustav Jonson as an office holder and politician
  ?gustav a dbo:OfficeHolder ;
          dbo:positionHeld ?office .

  # Step 2: Find the leader of the government agency that Gustav Jonson leads
  ?office dbo:leaderOf ?agency .
  ?agency a dbo:GovernmentAgency .
  ?agencyLeader a dbo:OfficeHolder, dbo:Politician ;
                dbo:leaderOf ?agency .

  # Step 3: Determine the commander in Volcano and Ryukyu Islands campaign who received an award
  ?campaign a dbo:MilitaryConflict ;
            rdfs:label ""Volcano and Ryukyu Islands campaign"" .
  ?commanderInCampaign a dbo:Commander ;
                       dbo:commanderIn ?campaign ;
                       dbo:awardeeOf ?award .

  # Step 4: Identify the person decedent at Budapest
  ?personDecedent dbo:deceasedAtLocation <http://dbpedia.org/resource/Budapest> ;
                  dbo:memberOfForce ?force .

  # Step 5: Link the commander to the force of the person decedent at Budapest
  ?commanderInForce a dbo:Commander ;
                    dbo:commanderOf ?force .
  
  # Ensure the commander is the same in both contexts
  FILTER(?commanderInCampaign = ?commanderInForce)
}
```",9,12,10,3,3,3,3,71,0,0,1,0,0.0,0
391,66,test,"Give me the actor of the movie, that is a movie and a work and a television show, with the professional in  and actor of the claim to fame, that is a work, of Michael Ballhaus and native of the figure known as Hub City.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/nickname> ""Hub City""@en . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v6 <http://dbpedia.org/ontology/starring> ?result . ?v2 <http://dbpedia.org/property/starring> ?result . ?v1 <http://dbpedia.org/property/occupation> """"@en . ?v2 <http://dbpedia.org/property/starring> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . <http://dbpedia.org/resource/Michael_Ballhaus> <http://dbpedia.org/ontology/knownFor> ?v6 . }","```sparql
SELECT ?actor WHERE {
  # Step 1: Find the native place of the figure known as Hub City
  <http://dbpedia.org/resource/Hub_City> <http://www.w3.org/2000/01/rdf-schema#label> ""Hub City"" .
  <http://dbpedia.org/resource/Hub_City> <http://dbpedia.org/ontology/nativePlace> ?nativePlace .

  # Step 2: Find the claim to fame of Michael Ballhaus that is a work
  <http://dbpedia.org/resource/Michael_Ballhaus> <http://dbpedia.org/property/claimToFame> ?work .
  ?work <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work> .

  # Step 3: Find the movie that is a work, television show, and has an actor who acted in Michael Ballhaus's claim to fame
  ?movie <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Movie> .
  ?movie <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work> .
  ?movie <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow> .
  
  # Find the actor who acted in both the movie and Michael Ballhaus's claim to fame
  ?actor <http://dbpedia.org/ontology/actedIn> ?movie .
  ?actor <http://dbpedia.org/ontology/actedIn> ?work .

  # Step 4: Return the actor of this movie
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
801,69,test,"Give me the producer of the work, that is a musical work and a song and a work, of 50 Cent and professional in the alter ego of the true self of The Shadow and associated musical artist of the writer, that is a musical artist and an artist, of the album, that is a musical work and a work, of What U See Is What U Get.","SELECT ?result WHERE { <http://dbpedia.org/resource/What_U_See_Is_What_U_Get> <http://dbpedia.org/ontology/album> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v4 <http://xmlns.com/foaf/0.1/givenName> ""The Shadow""@en . ?v7 <http://dbpedia.org/ontology/producer> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v1 <http://dbpedia.org/property/writer> ?v2 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v7 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/50_Cent> . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v4 <http://dbpedia.org/property/alterEgo> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/property/occupation> ?v3 . }","```sparql
SELECT ?producer WHERE {
  ?album rdf:type dbo:Album .
  ?album rdfs:label ""What U See Is What U Get""@en .
  
  ?writer dbo:creatorOf ?album ;
          rdf:type dbo:MusicalArtist, dbo:Artist .

  ?associatedArtist dbo:associatedMusicalArtist ?writer ;
                    dbo:alterEgo ?shadowAlterEgo .

  ?trueSelf dbo:professionalIn ?shadowAlterEgo .

  ?work rdf:type dbo:Songs, dbo:MusicalWork, dbo:Work ;
        dbo:creator [ a dbo:MusicalArtist ; foaf:name ""50 Cent"" ] ;
        dbo:creator ?trueSelf .

  ?work dbo:producer ?producer .
}
```",8,15,9,3,3,3,3,71,0,0,1,0,0.0,0
488,21,test,Give me the administration of Emperor Go-Yōzei and birth place of the commander in Boshin War.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Emperor_Go-Yōzei> . <http://dbpedia.org/resource/Boshin_War> <http://dbpedia.org/ontology/commander> ?v1 . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
# Query to get the administration of Emperor Go-Yōzei
SELECT ?administration WHERE {
  <http://dbpedia.org/resource/Emperor_Go-Yōzei> <http://dbpedia.org/ontology/administration> ?administration .
}

# Query to get the birthplace of the commander in Boshin War
SELECT ?birthPlace WHERE {
  ?commander <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Boshin_War> .
  ?commander <http://dbpedia.org/property/birthPlace> ?birthPlace .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
429,9,test,"Give me the country of the military force, that is an organisation, of Camden Expedition and administration of the father of Martha Johnson Patterson.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://dbpedia.org/ontology/country> ?result . ?v3 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Camden_Expedition> . ?result <http://dbpedia.org/property/leader> ?v1 . <http://dbpedia.org/resource/Martha_Johnson_Patterson> <http://dbpedia.org/property/father> ?v1 . },"```sparql
SELECT DISTINCT ?country WHERE {
  # Step 1: Identify the military force involved in the Camden Expedition
  ?expedition dbpedia-owl:participatingOrganisation ?militaryForce .
  FILTER(?expedition = dbpedia:Camden_Expedition) .

  # Step 2: Determine the country associated with this military force
  ?militaryForce dbpedia-owl:country ?country1 .

  # Step 3: Identify the administration under which Martha Johnson Patterson's father served
  ?father dbo:occupation dbo:Politician .
  ?father dbo:spouse ?marthaJohnsonPatterson .
  ?administration dbo:member ?father .

  # Step 4: Determine the country associated with this administration
  ?administration dbpedia-owl:country ?country2 .

  # Step 5: Find a common country between these two entities
  FILTER(?country1 = ?country2)
}
```",4,5,5,2,2,2,2,9,0,0,1,0,0.0,0
427,53,test,"Give me the reference to the name of the party of Michele Pinto and party of Giulio Andreotti and party of the person born, that is an office holder and a politician, as Romano Antonio Prodi.","SELECT ?result WHERE { <http://dbpedia.org/resource/Giulio_Andreotti> <http://dbpedia.org/ontology/party> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/party> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://xmlns.com/foaf/0.1/name> ?v2 . ?v1 <http://dbpedia.org/property/birthName> ""Romano Antonio Prodi""@en . <http://dbpedia.org/resource/Michele_Pinto> <http://dbpedia.org/ontology/party> ?v3 . }","```sparql
SELECT ?person ?party WHERE {
  { 
    <http://dbpedia.org/resource/Michele_Pinto> <http://dbpedia.org/ontology/party> ?party .
    BIND(<http://dbpedia.org/resource/Michele_Pinto> AS ?person)
  }
  UNION
  {
    <http://dbpedia.org/resource/Giulio_Andreotti> <http://dbpedia.org/ontology/party> ?party .
    BIND(<http://dbpedia.org/resource/Giulio_Andreotti> AS ?person)
  }
  UNION
  {
    ?prodi <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder> .
    ?prodi <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .
    ?prodi <http://dbpedia.org/resource/Romano_Antonio_Prodi> .
    ?prodi <http://dbpedia.org/ontology/party> ?party .
    BIND(<http://dbpedia.org/resource/Romano_Antonio_Prodi> AS ?person)
  }
}
```",6,8,7,3,3,3,3,71,0,0,2,0,0.0,0
285,17,test,Give me the spouse of the professional in the award of Stan Lee and parent of Alexander Onassis.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/occupation> ?v0 . <http://dbpedia.org/resource/Stan_Lee> <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Alexander_Onassis> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/spouse> ?v3 . },"```sparql
SELECT ?spouse WHERE {
  ?individual <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alexander_Onassis> .
  ?individual <http://dbpedia.org/property/award> <http://dbpedia.org/resource/Stan_Lee> .
  ?individual <http://dbpedia.org/ontology/spouse> ?spouse .
}
```",4,4,5,3,2,3,2,20,0,0,2,0,0.0,0
232,67,test,"Give me the actor of the claim to fame, that is a film and a military conflict, of the professional in Actor, narrator and producer and native of the residence, that is a settlement and British, of the native, that is a politician and an office holder, of France and child of Jon Pertwee.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/residence> ?v3 . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v0 <http://dbpedia.org/property/occupation> ""Actor, narrator and producer""@en . ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/France> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://dbpedia.org/ontology/knownFor> ?v6 . <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/ontology/child> ?result . ?v6 <http://dbpedia.org/ontology/starring> ?result . }","SELECT ?actor WHERE {
    ?politician a dbo:Politician ;
                dbo:nationality dbr:France ;
                dbo:parent dbr:Jon_Pertwee .

    ?residence a dbo:Settlement ;
               dbo:country dbr:United_Kingdom .
    ?politician dbo:residenceLocation ?residence .

    ?professional a dbo:Actor ;
                  dbo:narrator true ;
                  dbo:producer true ;
                  dbo:nativePlace ?residence .

    ?claimToFame a dbo:Film, dbo:MilitaryConflict ;
                 dbo:knownFor ?professional .

    ?actor a dbo:Actor ;
           dbo:actedIn ?claimToFame .
}",7,13,8,3,3,3,3,71,0,0,1,0,0.0,0
281,67,test,"Give me the entity in the birth place, that is a country, of the leader, that is a politician, of 1962 New South Wales state election and war of the profession, that is a military unit, of the professional, that is an office holder and a politician, in New Zealand Army and war of Beauchamp Seymour, 1st Baron Alcester.","SELECT ?result WHERE { <http://dbpedia.org/resource/1962_New_South_Wales_state_election> <http://dbpedia.org/property/leader> ?v0 . ?v0 <http://dbpedia.org/ontology/birthPlace> ?v6 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://dbpedia.org/property/occupation> ?v3 . ?v1 <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/New_Zealand_Army> . <http://dbpedia.org/resource/Beauchamp_Seymour,_1st_Baron_Alcester> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> ?v6 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. }","```sparql
SELECT ?entity WHERE {
    # Step 1: Identify the leader (politician) of the 1962 New South Wales state election
    ?leader a dbo:Politician ;
            dbo:officeHolderOf <http://dbpedia.org/resource/1962_New_South_Wales_state_election> .

    # Step 2: Determine the birthplace country of that leader
    ?leader foaf:birthPlace ?birthPlace .
    ?birthPlace dbo:country ?country .

    # Step 3: Find the profession (military unit) associated with a professional in the New Zealand Army
    ?professional a dbo:OfficeHolder, dbo:Politician ;
                  dbo:militaryUnit <http://dbpedia.org/resource/New_Zealand_Army> .
    ?professional dbo:profession ?militaryUnit .

    # Step 4: Identify the war related to Beauchamp Seymour, 1st Baron Alcester
    <http://dbpedia.org/resource/Beauchamp_Seymour,_1st_Baron_Alcester> dbo:militaryConflict ?war .

    # Step 5: Find the entity located in the birthplace country of the leader and connected to both the military unit and the war
    ?entity a dbo:MilitaryUnit, dbo:Event ;
            dbo:location ?birthPlace .
}
```",7,12,8,3,3,3,3,71,0,0,1,0,0.0,0
487,16,test,"Give me the administration of the person born, that is a soccer player, as Philip Brian Scott and country of the administration of Patricia McCoy.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/country> ?result . ?result <http://dbpedia.org/property/governor> ?v3 . ?v3 <http://dbpedia.org/property/birthName> ""Philip Brian Scott""@en . ?v2 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Patricia_McCoy> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. }","```sparql
SELECT ?administration ?country WHERE {
  # Find the administration of Philip Brian Scott, who is a soccer player
  <http://dbpedia.org/resource/Philip_Brian_Scott> <http://dbpedia.org/ontology/team> ?administration .
  
  # Find the country associated with Patricia McCoy's administration
  ?admin <http://dbpedia.org/property/administration> <http://dbpedia.org/resource/Patricia_McCoy> .
  ?admin <http://www.w3.org/2000/01/rdf-schema#seeAlso> ?countryResource .
  ?countryResource <http://dbpedia.org/ontology/country> ?country .
}
```",4,5,5,2,2,3,2,20,0,0,1,0,0.0,0
232,50,test,"Give me the native of the residence, that is a settlement and British, of Sylvie Bermann and actor of the claim to fame, that is a film and a military conflict, of the professional in Actor, narrator and producer.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v4 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Sylvie_Bermann> <http://dbpedia.org/property/residence> ?v3 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/ontology/knownFor> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v0 <http://dbpedia.org/property/occupation> ""Actor, narrator and producer""@en . ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . }","```sparql
SELECT ?native ?actor WHERE {
  # Find Sylvie Bermann's British residence that is a settlement
  <http://dbpedia.org/resource/Sylvie_Bermann> <http://dbpedia.org/property/residence> ?residence .
  ?residence <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement> .
  ?residence <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> .

  # Find the native of that residence
  ?native <http://dbpedia.org/property/nationality> <http://dbpedia.org/resource/British_nationality> .
  ?native <http://dbpedia.org/ontology/placeOfBirth> ?residence .

  # Identify the claim to fame for an actor, narrator, and producer that is both a film and a military conflict
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Actor> .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Narrator> .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Producer> .
  ?claimToFame <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film> .
  ?claimToFame <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
  ?person <http://dbpedia.org/property/knownFor> ?claimToFame .

  # Link the actor to the claim to fame
  ?actor <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Actor> .
  ?actor <http://dbpedia.org/property/knownFor> ?claimToFame .
}
```",5,9,6,3,2,3,3,71,0,0,1,0,0.0,0
281,71,test,"Give me the war of the awardee of the award of Jonathon Band and entity in the birth place, that is a country, of the leader, that is a politician, of 1962 New South Wales state election and war of the profession, that is a military unit, of the professional, that is an office holder and a politician, in New Zealand Army.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/birthPlace> ?v5 . <http://dbpedia.org/resource/Jonathon_Band> <http://dbpedia.org/property/awards> ?v1 . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v8 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/1962_New_South_Wales_state_election> <http://dbpedia.org/property/leader> ?v4 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/place> ?v5 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/property/awards> ?v1 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v7 <http://dbpedia.org/property/occupation> ?v8 . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v7 <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/New_Zealand_Army> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
SELECT DISTINCT ?war WHERE {
  # Part 1: Awardee of an award related to Jonathon Band
  ?award <http://dbpedia.org/ontology/recipient> ?awardee .
  ?award <http://dbpedia.org/property/relatedTo> <http://dbpedia.org/resource/Jonathon_Band> .

  # Part 2: Entity in the birthplace of a leader from the 1962 NSW state election
  ?leader <http://dbpedia.org/ontology/politicalPartyMember> <http://dbpedia.org/resource/New_South_Wales_state_election,_1962> .
  ?leader <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .
  ?leader <http://dbpedia.org/property/birthPlace> ?birthPlace .
  ?birthPlace <http://www.w3.org/2000/01/rdf-schema#seeAlso> ?entityInBirthplace .

  # Part 3: War related to the entity in the birthplace
  ?entityInBirthplace <http://dbpedia.org/ontology/war> ?war1 .

  # Part 4: Profession that is a military unit for a professional in New Zealand Army
  ?professional <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder> .
  ?professional <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .
  ?professional <http://dbpedia.org/property/profession> ?profession .
  ?profession <http://www.w3.org/2000/01/rdf-schema#seeAlso> <http://dbpedia.org/resource/New_Zealand_Army> .

  # Part 5: War related to the profession
  ?profession <http://dbpedia.org/ontology/war> ?war2 .

  # Final condition: The wars must be the same
  FILTER (?war1 = ?war2)
  BIND(?war1 AS ?war)
}
```",9,14,10,3,3,3,3,71,0,0,1,0,0.0,0
30,9,test,Give me the professional in the profession of Édouard Alphonse James de Rothschild and native of the birthplace of Silvia Cohen.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v3 . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . <http://dbpedia.org/resource/Silvia_Cohen> <http://dbpedia.org/ontology/birthPlace> ?v1 . <http://dbpedia.org/resource/Édouard_Alphonse_James_de_Rothschild> <http://dbpedia.org/property/occupation> ?v3 . },"```sparql
SELECT ?person WHERE {
  # Get the profession of Édouard Alphonse James de Rothschild
  <http://dbpedia.org/resource/Édouard_Alphonse_James_de_Rothschild> <http://purl.org/dc/terms/subject> ?profession .

  # Get the birthplace of Silvia Cohen
  <http://dbpedia.org/resource/Silvia_Cohen> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .

  # Find individuals with the same profession and native to the same birthplace
  ?person <http://purl.org/dc/terms/subject> ?profession .
  ?person <http://dbpedia.org/ontology/nationality> ?nationality .
  ?nationality <http://www.w3.org/ns/prov#wasDerivedFrom> ?birthPlace .
}
```",4,4,5,2,2,2,2,9,0,0,1,0,0.0,0
528,58,test,Give me the war of the commander in Battle of La Rinconada de Ate and war of Irene Morales and force of the person born as the birth name of Narciso Campero.,SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Battle_of_La_Rinconada_de_Ate> <http://dbpedia.org/ontology/commander> ?v5 . <http://dbpedia.org/resource/Narciso_Campero> <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/ontology/commander> ?v2 . ?v2 <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Irene_Morales> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
SELECT ?war1 ?war2 ?force WHERE {
  # War associated with the commander in Battle of La Rinconada de Ate
  <http://dbpedia.org/resource/Battle_of_La_Rinconada_de_Ate> <http://dbpedia.org/ontology/commander> ?commander .
  ?commander <http://dbpedia.org/ontology/battle> ?war1 .

  # War associated with Irene Morales
  <http://dbpedia.org/resource/Irene_Morales> <http://dbpedia.org/ontology/knownFor> ?war2 .
  
  # Force associated with Narciso Campero
  OPTIONAL {
    <http://dbpedia.org/resource/Narciso_Campero> <http://www.w3.org/2000/01/rdf-schema#label> ""Narciso Campero""@en ;
      <http://xmlns.com/foaf/0.1/birthName> ?birthName .
    ?person <http://xmlns.com/foaf/0.1/name> ?birthName .
    ?person <http://dbpedia.org/ontology/memberOf> ?force .
  }
}
```",6,6,7,3,3,3,3,71,0,0,2,0,0.0,0
617,45,test,Give me the spouse of Laodice IV and child of Antiochus III the Great and parent of the child of the commander in Battle of Panium.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?v1 . <http://dbpedia.org/resource/Laodice_IV> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Antiochus_III_the_Great> . ?result <http://dbpedia.org/ontology/child> ?v1 . <http://dbpedia.org/resource/Battle_of_Panium> <http://dbpedia.org/ontology/commander> ?v0 . },"```sparql
SELECT ?spouse WHERE {
  # Step 1: Identify Laodice IV's spouse
  <http://dbpedia.org/resource/Laodice_IV> <http://xmlns.com/foaf/0.1/spouse> ?spouse .

  # Step 2: Confirm Laodice IV is a child of Antiochus III the Great
  OPTIONAL {
    <http://dbpedia.org/resource/Antiochus_III_the_Great> <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Laodice_IV> .
  }

  # Step 3: Determine the commander in the Battle of Panium and identify their child
  ?commander <http://dbpedia.org/property/commandedBattle> <http://dbpedia.org/resource/Battle_of_Panium> .
  ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Child> ;
         <http://dbpedia.org/ontology/father> ?commander .

  # Step 4: Find the parent of this child
  OPTIONAL {
    ?parent <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Parent> ;
            <http://dbpedia.org/ontology/child> ?child .
  }
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
161,59,test,"Give me the military force of the force, that is a societal event and a military conflict, of the predecessor of Indalecio Prieto and military force of the force, that is a societal event and an event and a military conflict, of the person decedent at Francoist Spain.",SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Indalecio_Prieto> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v2 . ?result <http://dbpedia.org/ontology/battle> ?v5 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Francoist_Spain> . ?v5 <http://dbpedia.org/ontology/commander> ?v0 . ?v2 <http://dbpedia.org/ontology/commander> ?v3 . },"```sparql
# Part 1: Predecessor of Indalecio Prieto
SELECT ?predecessor WHERE {
    <http://dbpedia.org/resource/Indalecio_Prieto> <http://dbpedia.org/ontology/predecessor> ?predecessor .
}

# Part 2: Societal event and military conflict for the predecessor
SELECT DISTINCT ?event1 WHERE {
    ?predecessor <http://dbpedia.org/ontology/knownFor> ?event1 .
    ?event1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent> .
    ?event1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
}

# Part 3: Military force for the event related to predecessor
SELECT DISTINCT ?militaryForce1 WHERE {
    ?event1 <http://dbpedia.org/property/militaryForce> ?militaryForce1 .
}

# Part 4: Person decedent at Francoist Spain
SELECT DISTINCT ?person WHERE {
    ?person <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Francoist_Spain> .
}

# Part 5: Societal event, general event, and military conflict for the person
SELECT DISTINCT ?event2 WHERE {
    ?person <http://dbpedia.org/ontology/knownFor> ?event2 .
    ?event2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent> .
    ?event2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event> .
    ?event2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
}

# Part 6: Military force for the event related to person
SELECT DISTINCT ?militaryForce2 WHERE {
    ?event2 <http://dbpedia.org/property/militaryForce> ?militaryForce2 .
}
```",6,11,7,3,2,3,3,71,0,0,514,0,0.0,0
801,70,test,"Give me the associated musical artist of the writer, that is a musical artist and an artist, of the album, that is a musical work and a work, of What U See Is What U Get and producer of the work, that is a musical work and a song and a work, of the professional, that is a musical artist, in Rapper and professional in the alter ego of The Shadow.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. <http://dbpedia.org/resource/What_U_See_Is_What_U_Get> <http://dbpedia.org/ontology/album> ?v1 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v7 <http://dbpedia.org/property/writer> ?v0 . ?v1 <http://dbpedia.org/property/writer> ?v3 . ?result <http://dbpedia.org/property/occupation> ?v4 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v4 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v7 <http://dbpedia.org/ontology/producer> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v0 <http://dbpedia.org/property/occupation> ""Rapper""@en . }","```sparql
# Step 1: Find the professional with alter ego The Shadow
SELECT ?professional WHERE {
    ?professional <http://dbpedia.org/ontology/profession> <http://dbpedia.org/resource/Rapper>.
    ?professional <http://dbpedia.org/property/alterEgo> ""The Shadow"" .
}

# Step 2: Find the work associated with this professional
SELECT ?work WHERE {
    ?work <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>.
    ?work <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>.
    ?professional <http://dbpedia.org/ontology/performed> ?work .
}

# Step 3: Find the producer of this work
SELECT ?producer WHERE {
    ?work <http://dbpedia.org/property/producer> ?producer .
}

# Step 4: Find the album produced by this individual
SELECT ?album WHERE {
    ?album <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>.
    ?album <http://dbpedia.org/property/producer> ?producer .
}

# Step 5: Find the writer of this album who is a musical artist and an artist
SELECT ?writer WHERE {
    ?album <http://dbpedia.org/property/writer> ?writer .
    ?writer <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>.
    ?writer <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist> .
}

# Step 6: Find the associated musical artist of this writer
SELECT ?associatedArtist WHERE {
    ?writer <http://dbpedia.org/property/associatedMusicalArtist> ?associatedArtist .
}
```",8,16,9,3,3,3,3,71,0,0,8,0,0.0,0
981,20,test,"Give me the birth place of the person born, that is a beauty queen, as the author of Kamikaze Girls and entity in the region of the time zone in Salak, North Sumatra.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/birthName> ?v4 . <http://dbpedia.org/resource/Kamikaze_Girls> <http://dbpedia.org/property/author> ?v4 . ?v2 <http://dbpedia.org/property/timeZone> ?v1 . ?v5 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Salak,_North_Sumatra> <http://dbpedia.org/ontology/timeZone> ?v1 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BeautyQueen>. ?result <http://dbpedia.org/ontology/country> ?v2 . }","```sparql
SELECT ?birthPlace WHERE {
  ?author foaf:name ""Kamikaze Girls"" ;
          dbo:birthPlace ?birthPlace .
  ?author dbo:occupation dbr:Beauty_queen .
  ?region dbo:timeZone dbr:WIB ;
          dbo:location dbr:Salak,_North_Sumatra .
  ?entity dbo:locatedIn ?region .
  ?author dbo:associatedWith ?entity .
}
```",6,7,7,3,2,3,2,20,0,0,19,0,0.0,0
666,16,test,"Give me the figure known as the nickname of England national beach soccer team and player in the manager, that is a sports manager, of 2016–17 Hull City A.F.C. season.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v2 <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/2016–17_Hull_City_A.F.C._season> <http://dbpedia.org/ontology/manager> ?v2 . ?result <http://dbpedia.org/property/nickname> ?v3 . <http://dbpedia.org/resource/England_national_beach_soccer_team> <http://dbpedia.org/property/nickname> ?v3 . },"```sparql
SELECT ?manager ?nickname WHERE {
    # Step 1: Identify the manager of Hull City A.F.C. for the 2016-17 season
    <http://dbpedia.org/resource/2016%E2%80%9317_Hull_City_A.FC_season> <http://dbpedia.org/ontology/manager> ?manager .
    
    # Step 2: Check if this manager was a player in the England national beach soccer team
    ?manager <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/England_national_beach_soccer_team> .

    # Step 3: Find out the nickname associated with this individual
    OPTIONAL { ?manager <http://dbpedia.org/property/nickname> ?nickname . }
}
```",4,5,5,2,2,3,2,20,0,0,2,0,0.0,0
427,22,test,"Give me the reference to Partito Popolare Italiano and party of the person born, that is an office holder and a politician, as Romano Antonio Prodi.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://xmlns.com/foaf/0.1/name> ""Partito Popolare Italiano""@en . ?v1 <http://dbpedia.org/ontology/party> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/property/birthName> ""Romano Antonio Prodi""@en . }","```sparql
SELECT ?person ?party WHERE {
  ?person <http://dbpedia.org/ontology/birthName> ""Romano Antonio Prodi"" .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder> .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .
  ?person <http://dbpedia.org/property/party> ?party .
  OPTIONAL { ?party <http://dbpedia.org/ontology/reference> <http://dbpedia.org/resource/Partito_Popolare_Italiano> }
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
528,40,test,"Give me the war of the military force of the entity, that is a societal event, in Chile and war of Orozimbo Barbosa and force of Narciso Campero.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> ?v2 . ?v1 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Orozimbo_Barbosa> <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Chile> . ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Narciso_Campero> . },"```sparql
SELECT ?war WHERE {
  ?event <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>.
  ?event <http://dbpedia.org/property/country> <http://dbpedia.org/resource/Chile>.
  
  ?entity <http://dbpedia.org/ontology/militaryForce> ?force.
  ?entity rdfs:label ?event.

  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>.
  
  ?barbosa <http://dbpedia.org/ontology/militaryForce> ?forceBarbosa.
  ?campero <http://dbpedia.org/ontology/militaryForce> ?forceCampero.

  ?war <http://dbpedia.org/property/participant> ?barbosa.
  ?war <http://dbpedia.org/property/participant> ?campero.
}
```",5,6,6,3,3,3,3,71,0,0,2,0,0.0,0
328,63,test,"Give me the commander in the force of Ferenc Szálasi and leader of the office, that is a government agency, of Joseph Stalin and awardee of the award of the commander in Volcano and Ryukyu Islands campaign.",SELECT ?result WHERE { <http://dbpedia.org/resource/Joseph_Stalin> <http://dbpedia.org/property/office> ?v2 . ?result <http://dbpedia.org/property/awards> ?v3 . ?v6 <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://dbpedia.org/property/awards> ?v3 . <http://dbpedia.org/resource/Volcano_and_Ryukyu_Islands_campaign> <http://dbpedia.org/ontology/commander> ?v4 . ?v2 <http://dbpedia.org/ontology/leader> ?result . ?v6 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Ferenc_Szálasi> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. },"```sparql
SELECT DISTINCT ?person WHERE {
  # Commander in Ferenc Szálasi's force
  ?szalasiForce <http://dbpedia.org/ontology/commander> ?person .
  ?szalasiForce <http://dbpedia.org/resource/Ferenc_Szálasi#forces> ?force .

  # Leader of a government agency associated with Joseph Stalin
  ?stalinAgency <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency> .
  ?stalinAgency <http://dbpedia.org/resource/Joseph_Stalin#offices> ?office .
  ?office <http://dbpedia.org/ontology/leader> ?person .

  # Awardee of an award for commanding in the Volcano and Ryukyu Islands campaign
  ?volcanoCampaign <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
  ?volcanoCampaign <http://dbpedia.org/resource/Volcano_and_Ryukyu_Islands_campaign> .
  ?volcanoCampaign <http://dbpedia.org/ontology/commander> ?commander .
  ?award <http://dbpedia.org/property/awardee> ?commander .
  FILTER(?person = ?commander)
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
659,29,test,"Give me the commander in the war, that is an event and a military conflict, of 1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish) and military force of Napoleonic Wars and commander in German campaign of 1813.",SELECT ?result WHERE { <http://dbpedia.org/resource/German_campaign_of_1813> <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/1st_Light_Cavalry_Lancers_Regiment_of_the_Imperial_Guard_(Polish)> <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Napoleonic_Wars> . },"```sparql
SELECT ?commander WHERE {
    ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>.
    ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>.

    ?war <http://dbpedia.org/property/involves> <http://dbpedia.org/resource/1st_Light_Cavalry_Lancers_Regiment_of_the_Imperial_Guard_(Polish)>.
    ?war <http://dbpedia.org/property/partOf> <http://dbpedia.org/resource/Napoleonic_Wars>.

    ?commander <http://dbpedia.org/ontology/commander> ?war.

    ?campaign <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>.
    ?campaign <http://dbpedia.org/property/name> ""German campaign of 1813""^^<http://www.w3.org/2001/XMLSchema#string>.

    ?commander <http://dbpedia.org/ontology/commander> ?campaign.
}
```",4,6,5,2,3,3,3,71,0,0,6,0,0.0,0
659,52,test,"Give me the commander in the force of the native, that is an office holder, of Kingdom of Ireland and military force of Napoleonic Wars and commander in the war, that is an event and a military conflict, of 1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish).",SELECT ?result WHERE { <http://dbpedia.org/resource/1st_Light_Cavalry_Lancers_Regiment_of_the_Imperial_Guard_(Polish)> <http://dbpedia.org/ontology/battle> ?v5 . ?v3 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Kingdom_of_Ireland> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Napoleonic_Wars> . ?v5 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://dbpedia.org/ontology/commander> ?v3 . },"```sparql
SELECT ?commander WHERE {
  # Step 1: Find the native office holder of the Kingdom of Ireland
  ?officeHolder a dbo:OfficeHolder ;
                dbo:nativeCountry dbr:Kingdom_of_Ireland .

  # Step 2: Determine the military force associated with this office holder during the Napoleonic Wars
  ?militaryForce dbo:militaryConflict dbr:Napoleonic_Wars ;
                 dbo:commander ?officeHolder .

  # Step 3: Find the commander of that military force
  ?commander dbo:commanderOfMilitaryForce ?militaryForce .

  # Step 4: Identify the war involving the 1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish)
  ?war a dbo:MilitaryConflict, dbo:Event ;
       dbo:militaryUnit dbr:1st_Light_Cavalry_Lancers_Regiment_of_the_Imperial_Guard_(Polish) .

  # Step 5: Find the commander in that war
  ?commanderInWar dbo:commanderOfMilitaryConflict ?war .
  
  FILTER(?commander = ?commanderInWar)
}
```",6,9,7,3,3,3,3,71,0,0,13,0,0.0,0
404,71,test,"Give me the spouse of the person born, that is a royalty, as the birth name of Princess Victoria Louise of Prussia and child of the father of the spouse of Princess Victoria Louise of Prussia and parent of the child, that is a royalty, of the parent, that is a royalty, of Prince George William of Hanover.",SELECT ?result WHERE { <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?v7 . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v4 <http://dbpedia.org/ontology/child> ?v5 . ?result <http://dbpedia.org/ontology/child> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Prince_George_William_of_Hanover> <http://dbpedia.org/ontology/parent> ?v4 . ?v2 <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/ontology/parent> ?v8 . ?v7 <http://dbpedia.org/property/father> ?v8 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
SELECT ?spouse WHERE {
  ?princess a dbo:Royalty ;
            foaf:name ""Princess Victoria Louise of Prussia"" ;
            dbo:birthName ?birthName .
  
  ?princess dbo:childOf ?father .
  ?princess dbo:spouse ?spouse .

  ?father dbo:parentOf ?royalChild .
  ?royalChild a dbo:Royalty .

  ?royalParent dbo:parentOf ?royalChild ;
               a dbo:Royalty .

  ?georgeWilliam dbo:parent ?royalParent ;
                 foaf:name ""Prince George William of Hanover"" .
}
```",9,12,10,3,3,3,3,71,0,0,1,0,0.0,0
16,55,test,Give me the person born as the birth name of Gigi Rice and professional in the profession of Satomi Ishihara and spouse of the person born as Ted Martin McGinley.,"SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Satomi_Ishihara> <http://dbpedia.org/property/occupation> ?v5 . ?result <http://dbpedia.org/property/occupation> ?v5 . <http://dbpedia.org/resource/Gigi_Rice> <http://dbpedia.org/property/birthName> ?v2 . ?result <http://dbpedia.org/property/birthName> ?v2 . ?v3 <http://dbpedia.org/property/birthName> ""Ted Martin McGinley""@en . }","```sparql
SELECT ?person WHERE {
  # Find the person with the birth name ""Gigi Rice""
  ?gigi a dbo:Person;
        foaf:name ""Gigi Rice""@en;
        dbp:birthName ?birthName.
  
  # Find Satomi Ishihara's profession
  ?satomi a dbo:Person;
          foaf:name ""Satomi Ishihara""@en;
          dbo:occupation ?profession.

  # Find the person whose birth name is Ted Martin McGinley and their spouse
  ?ted a dbo:Person;
       foaf:name ""Ted Martin McGinley""@en;
       dbp:birthName ?birthNameTed.
  
  ?spouse a dbo:Person;
          foaf:spouse ?ted.

  # Combine conditions to find the person who satisfies all criteria
  ?person a dbo:Person;
          dbp:birthName ?birthName;
          dbo:occupation ?profession;
          foaf:spouse ?spouse.
}
```",6,6,7,2,3,3,3,71,0,0,1,0,0.0,0
404,51,test,"Give me the child of the father of the spouse of Princess Victoria Louise of Prussia and parent of the child, that is a royalty, of Ernest Augustus, Duke of Brunswick.","SELECT ?result WHERE { <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/ontology/child> ?v4 . ?result <http://dbpedia.org/ontology/parent> ?v2 . ?result <http://dbpedia.org/ontology/child> ?v4 . ?v1 <http://dbpedia.org/property/father> ?v2 . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?v1 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
SELECT ?child WHERE {
  # Step 1: Find the spouse of Princess Victoria Louise of Prussia
  <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> :spouse ?spouse .

  # Step 2: Determine the father of that spouse
  ?spouse :parent ?father .

  # Step 3: Find the child of this father
  ?father :child ?child .

  # Step 4: Ensure this child is a parent of Ernest Augustus, Duke of Brunswick's child and is royalty
  ?child :parent <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> .
  ?child :parent ?grandChild .
  ?grandChild :type <http://dbpedia.org/ontology/Royalty> .
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
161,20,test,"Give me the military force of the force, that is a societal event and a military conflict, of Francisco Largo Caballero and military force of Rif War.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . ?result <http://dbpedia.org/ontology/battle> ?v2 . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Rif_War> . },"```sparql
SELECT ?event1 ?militaryForce1 ?event2 ?militaryForce2 WHERE {
  # Find societal event and military conflict related to Francisco Largo Caballero
  ?event1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>.
  ?event1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>.
  <http://dbpedia.org/resource/Francisco_Largo_Caballero> <http://dbpedia.org/property/associatedWithEvent> ?event1.
  
  # Find military force associated with the event related to Francisco Largo Caballero
  ?event1 <http://dbpedia.org/ontology/militaryForce> ?militaryForce1.

  # Identify Rif War as a military conflict
  <http://dbpedia.org/resource/Rif_War> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>.
  
  # Find military force associated with the Rif War
  <http://dbpedia.org/resource/Rif_War> <http://dbpedia.org/ontology/militaryForce> ?militaryForce2.
}
```",3,5,4,2,2,3,3,71,0,0,34,0,0.0,0
281,58,test,"Give me the war of the profession, that is a military unit, of the professional, that is an office holder and a politician, in New Zealand Army and entity in the birth place, that is a country, of Bob Heffron and war of Beauchamp Seymour, 1st Baron Alcester.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> ?v5 . ?v1 <http://dbpedia.org/property/occupation> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. <http://dbpedia.org/resource/Beauchamp_Seymour,_1st_Baron_Alcester> <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/New_Zealand_Army> . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Bob_Heffron> <http://dbpedia.org/ontology/birthPlace> ?v5 . }","```sparql
# Step 1: Find Bob Heffron's Birth Place Country
SELECT ?country WHERE {
    <http://dbpedia.org/resource/Bob_Heffron> <http://www.w3.org/2000/01/rdf-schema#birthPlace> ?place .
    ?place <http://www.w3.org/2000/01/rdf-schema#country> ?country .
}

# Step 2: Find Entity in Bob Heffron's Birth Place
SELECT ?entity WHERE {
    ?entity <http://www.w3.org/2000/01/rdf-schema#location> ?place .
    ?place <http://www.w3.org/2000/01/rdf-schema#country> ?country .
}

# Step 3: Find Beauchamp Seymour's War
SELECT ?war WHERE {
    <http://dbpedia.org/resource/Beauchamp_Seymour,_1st_Baron_Alcester> <http://dbpedia.org/ontology/battle> ?battle .
    ?battle <http://www.w3.org/2000/01/rdf-schema#isPartOf> ?war .
}

# Step 4: Find Professional Office Holder and Politician in New Zealand Army
SELECT ?professional WHERE {
    ?professional <http://dbpedia.org/ontology/politicalParty> ?party .
    ?professional <http://www.w3.org/2000/01/rdf-schema#officeHolder> ?office .
    ?professional <http://dbpedia.org/ontology/memberOf> <http://dbpedia.org/resource/New_Zealand_Army> .
}

# Step 5: Determine Profession as Military Unit
SELECT ?militaryUnit WHERE {
    ?professional <http://dbpedia.org/ontology/profession> ?militaryUnit .
}

# Step 6: Identify War of the Profession (Military Unit)
SELECT ?war WHERE {
    ?militaryUnit <http://dbpedia.org/ontology/battle> ?battle .
    ?battle <http://www.w3.org/2000/01/rdf-schema#isPartOf> ?war .
}
```",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
838,20,test,"Give me the band member of the band, that is a group, of the reference, that is a group and an organisation, to YU Grupa and band of the band member, that is an artist and a musical artist, of the band, that is a band and a group, of Žika Jelić.","SELECT ?result WHERE { ?v4 <http://xmlns.com/foaf/0.1/name> ""YU Grupa""@en . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v5 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Žika_Jelić> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v5 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. }","```sparql
SELECT ?bandMember WHERE {
  # Step 1: Find reference to YU Grupa
  ?reference a <http://dbpedia.org/ontology/Organisation> ;
             a <http://dbpedia.org/ontology/Band> ;
             <http://dbpedia.org/property/reference> <http://dbpedia.org/resource/YU_Grupa> .

  # Step 2: Find the band associated with this reference
  ?reference <http://dbpedia.org/ontology/member> ?band .

  # Step 3: Find the band member who is an artist and musical artist
  ?bandMember a <http://dbpedia.org/ontology/MusicalArtist> ;
              a <http://dbpedia.org/ontology/Artist> ;
              <http://dbpedia.org/property/member> ?band .

  # Step 4: Identify Žika Jelić's band
  <http://dbpedia.org/resource/Žika_Jelić> <http://dbpedia.org/ontology/member> ?jelicBand .
}
```",6,13,7,3,2,3,2,20,0,0,5,0,0.0,0
92,60,test,"Give me the band of the person born as the birth name of Joseph Michael and band member of the reference, that is an artist, to the name of Nevermore (2006 film).",SELECT ?result WHERE { ?v2 <http://xmlns.com/foaf/0.1/name> ?v3 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?result <http://dbpedia.org/ontology/bandMember> ?v1 . <http://dbpedia.org/resource/Joseph_Michael> <http://dbpedia.org/property/birthName> ?v0 . ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Nevermore_(2006_film)> <http://xmlns.com/foaf/0.1/name> ?v3 . },"```sparql
SELECT ?band WHERE {
  ?person <http://dbpedia.org/property/birthName> ""Joseph Michael""@en .
  ?person <http://dbpedia.org/ontology/memberOf> ?band .
  ?reference <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist> ;
             <http://dbpedia.org/property/name> ""Nevermore""@en .
  FILTER EXISTS { 
    ?film <http://dbpedia.org/ontology/releaseDate> ?date .
    ?film <http://dbpedia.org/ontology/title> ""Nevermore (2006 film)""@en .
    FILTER(year(?date) = 2006)
  }
  ?person <http://dbpedia.org/property/reference> ?reference .
}
```",6,7,7,3,2,3,3,71,0,0,1,0,0.0,0
827,20,test,"Give me the father of the child, that is a royalty, of the spouse, that is a royalty, of Princess Pauline of Saxe-Weimar-Eisenach and child of the child, that is a royalty, of the parent of Charles Alexander, Grand Duke of Saxe-Weimar-Eisenach.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Charles_Alexander,_Grand_Duke_of_Saxe-Weimar-Eisenach> . ?v5 <http://dbpedia.org/property/father> ?v4 . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/parent> ?v1 . ?v4 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Princess_Pauline_of_Saxe-Weimar-Eisenach> . ?v5 <http://dbpedia.org/property/father> ?result . }","```sparql
SELECT ?father WHERE {
    # Step 1: Identify Princess Pauline's spouse
    ?princess a dbo:Royalty ;
              foaf:surname ""Pauline of Saxe-Weimar-Eisenach"" .
    
    ?spouse a dbo:Royalty ;
            dbo:spouse ?princess .

    # Step 2: Find the children of that spouse who are royalty
    ?child a dbo:Royalty ;
           dbo:parent ?spouse .

    # Step 3: Determine the parent of Charles Alexander, Grand Duke of Saxe-Weimar-Eisenach
    ?charlesAlexander a dbo:Royalty ;
                      foaf:name ""Charles Alexander, Grand Duke of Saxe-Weimar-Eisenach"" .
    
    ?parent a dbo:Royalty ;
            dbo:child ?charlesAlexander .

    # Step 4: Identify the child (who is royalty) of this parent
    ?royalChild a dbo:Royalty ;
                dbo:parent ?parent .

    # Step 5: Find the father of the child identified in step 2
    ?father a dbo:Royalty ;
            dbo:child ?child .
}
```",6,9,7,3,2,3,2,20,0,0,1,0,0.0,0
54,46,test,Give me the child of the father of the child of Thinkhaya of Pagan and parent of the child of Narapati I of Ava.,SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://dbpedia.org/ontology/child> ?result . ?v2 <http://dbpedia.org/property/father> ?v1 . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Narapati_I_of_Ava> . <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?v2 . },"```sparql
SELECT ?childOfThinkhaya ?parentOfNarapatiChild WHERE {
  # Step 1: Find the child of Thinkhaya of Pagan
  <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?childOfThinkhaya .

  # Step 2: The father of this child is Thinkhaya himself, so we use ?childOfThinkhaya directly

  # Step 3: Find the parent of the child of Narapati I of Ava
  <http://dbpedia.org/resource/Narapati_I_of_Ava> <http://dbpedia.org/ontology/child> ?narapatiChild .
  ?narapatiChild <http://dbpedia.org/property/haveParent> ?parentOfNarapatiChild .

  # Step 4: Find the child of Thinkhaya who is also a parent of Narapati's child
  FILTER (?childOfThinkhaya = ?parentOfNarapatiChild)
}
```",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
994,71,test,"Give me the associated musical artist of the band member, that is a band and a group and an organisation, of the band, that is an organisation, of Fredrik Thordendal and band member of the person born, that is a musical artist, as the persona of Don Dokken and associated musical artist of the associated musical artist of the reference to Watchtower.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Don_Dokken> <http://xmlns.com/foaf/0.1/givenName> ?v7 . ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v8 <http://dbpedia.org/property/birthName> ?v7 . ?v4 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Fredrik_Thordendal> . ?v1 <http://xmlns.com/foaf/0.1/name> ""Watchtower""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v8 . }","```sparql
SELECT ?associatedArtist WHERE {
  # Step 1: Fredrik Thordendal's Band
  ?band a <http://dbpedia.org/ontology/Band> ;
        <http://dbpedia.org/property/member> <http://dbpedia.org/resource/Fredrik_Thordendal> .

  # Step 2: Band Member Born as Don Dokken Persona
  ?member a <http://dbpedia.org/ontology/MusicalArtist> ;
          <http://dbpedia.org/ontology/bandMember> ?band ;
          <http://dbpedia.org/property/birthName> ""Don Dokken"" .

  # Step 3: Associated Musical Artist
  ?associatedArtist a <http://dbpedia.org/ontology/MusicalArtist> ;
                    <http://dbpedia.org/ontology/associatedMusicalArtist> ?member .

  # Step 4: Reference to Watchtower
  ?reference a <http://dbpedia.org/ontology/MusicalArtist> ;
             <http://dbpedia.org/property/referenceTo> ""Watchtower"" .
  
  FILTER(?associatedArtist = ?reference)
}
```",9,14,10,3,3,3,3,71,0,0,1,0,0.0,0
179,20,test,"Give me the person born as the birth name of the child, that is a royalty, of Nakkhatra Mangala and parent of the child of the parent of Vajiralongkorn.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/birthName> ?v2 . ?v5 <http://dbpedia.org/ontology/parent> ?result . ?v4 <http://dbpedia.org/ontology/child> ?v5 . ?v4 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Vajiralongkorn> . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Nakkhatra_Mangala> . },"```sparql
SELECT ?person WHERE {
  # Step 1: Identify Vajiralongkorn's parent
  <http://dbpedia.org/resource/Vajiralongkorn> <http://dbpedia.org/ontology/father> ?parentVajiralongkorn .

  # Step 2: Find the child of that parent (another sibling or relation)
  ?sibling <http://dbpedia.org/ontology/father> ?parentVajiralongkorn .
  
  # Step 3: Determine the parent of this child
  ?sibling <http://dbpedia.org/ontology/mother> ?motherSib .

  # Step 4: From this parent, find their child who is royalty and has a birth name
  ?royaltyChild <http://dbpedia.org/ontology/father> ?parentVajiralongkorn ;
                 <http://dbpedia.org/ontology/mother> ?motherSib ;
                 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .

  # Step 5: Retrieve the person born with that birth name
  ?royaltyChild <http://dbpedia.org/property/birthName> ?birthName .
  
  # Find the person who was born as this birth name
  ?person <http://www.w3.org/2000/01/rdf-schema#label> ?birthName ;
          <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person> .
}
```",6,7,7,3,2,3,2,20,0,0,1,0,0.0,0
547,53,test,Give me the resting place of the awardee of Knight Grand Cross of the Order of St Michael and St George and resting place of the child of the child of William Haliburton and resting place of Simon Cadell.,"SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> ""William Haliburton""@en . <http://dbpedia.org/resource/Simon_Cadell> <http://dbpedia.org/ontology/restingPlace> ?result . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_St_Michael_and_St_George> . ?v3 <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . }","```sparql
SELECT DISTINCT ?restingPlace WHERE {
  # Condition 1: Resting place of an awardee of Knight Grand Cross of the Order of St Michael and St George
  ?person a dbo:AwardRecipient ;
          dbo:awardReceived db:KnightGrandCrossOfTheOrderOfStMichaelAndStGeorge .
  ?person dbo:placeOfRestingPlace ?restingPlace .

  # Condition 2: Resting place of a grandchild of William Haliburton
  ?grandchild dbo:parent ?childOfHaliburton ;
              dbo:placeOfRestingPlace ?restingPlace .
  ?childOfHaliburton dbo:parent db:WilliamHaliburton .

  # Condition 3: Resting place of Simon Cadell
  db:SimonCadell dbo:placeOfRestingPlace ?restingPlace .
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
617,48,test,"Give me the parent of the child of Antiochus (son of Antiochus III the Great) and child of the child, that is a royalty, of the successor, that is a royalty, of Antiochus II Theos.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> ?v3 . <http://dbpedia.org/resource/Antiochus_II_Theos> <http://dbpedia.org/ontology/successor> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/child> ?v1 . ?result <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/ontology/child> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
SELECT ?grandchildParent WHERE {
  # Step 1: Find Antiochus (son of Antiochus III the Great)
  ?antiochus dbo:father <http://dbpedia.org/resource/Antiochus_III_the_Great> .
  
  # Step 2: Find his child
  ?child dbo:parent ?antiochus .
  
  # Step 3: Find the grandchild (child of the child)
  ?grandchild dbo:parent ?child .

  # Step 4: Identify successor of Antiochus II Theos who is royalty
  ?successor dbo:succeededBy <http://dbpedia.org/resource/Antiochus_II_theos> .
  FILTER (?successor a dbo:Royalty)

  # Step 5: Find the child of this successor, ensuring they are also royalty
  ?royalChild dbo:parent ?successor .
  FILTER (?royalChild a dbo:Royalty)

  # Step 6: Determine the parent of the grandchild from step 3
  ?grandchildParent dbo:child ?grandchild .
}
```",5,7,6,3,2,3,3,71,0,0,2,0,0.0,0
659,23,test,"Give me the commander in the force of the native, that is an office holder, of Kingdom of Ireland.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/commander> ?v2 . ?v2 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Kingdom_of_Ireland> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT ?commander WHERE {
  ?officeHolder <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Ireland>.
  ?officeHolder <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>.
  ?force <http://dbpedia.org/property/nativeOf> ?officeHolder.
  ?force <http://dbpedia.org/ontology/commander> ?commander.
}
```",3,4,4,3,1,3,3,71,0,0,269,0,0.0,0
161,61,test,"Give me the military force of the force, that is a societal event and a military conflict, of the predecessor of Indalecio Prieto and commander in the force, that is an event, of the figure known as El Director.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v5 . ?v1 <http://xmlns.com/foaf/0.1/nick> ""El Director""@en . ?v3 <http://dbpedia.org/ontology/commander> ?v1 . ?v0 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Indalecio_Prieto> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v5 <http://dbpedia.org/ontology/commander> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","```sparql
SELECT ?militaryForce WHERE {
  # Step 1: Find predecessor of Indalecio Prieto
  <http://dbpedia.org/resource/Indalecio_Prieto> <http://dbpedia.org/ontology/predecessor> ?predecessor .

  # Step 2: Identify societal event and military conflict related to the predecessor
  ?event <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent> .
  ?event <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
  ?predecessor <http://dbpedia.org/property/knownFor> ?event .

  # Step 3: Identify the event associated with ""El Director""
  <http://dbpedia.org/resource/El_Director> <http://dbpedia.org/ontology/knownFor> ?elDirectorEvent .
  ?elDirectorEvent <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event> .

  # Step 4: Find the commander in that event
  ?elDirectorEvent <http://dbpedia.org/ontology/commander> ?commander .

  # Step 5: Determine the military force associated with both conditions
  ?event <http://dbpedia.org/property/militaryForce> ?militaryForce .
  ?elDirectorEvent <http://dbpedia.org/property/militaryForce> ?militaryForce .
}
```",6,9,7,3,2,3,3,71,0,0,32,0,0.0,0
161,60,test,"Give me the military force of the force, that is a societal event and an event and a military conflict, of the person decedent at Francoist Spain and commander in the force, that is an event, of the figure known as El Director.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> ?v0 . ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/ontology/commander> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Francoist_Spain> . ?v0 <http://xmlns.com/foaf/0.1/nick> ""El Director""@en . }","```sparql
SELECT ?militaryForce WHERE {
  # Step 1: Identify the event associated with ""El Director""
  ?elDirector dbo:knownAs ""El Director"" .
  ?event dbo:knownFor ?elDirector .

  # Step 2: Determine the force (military conflict) related to that event
  ?force dbo:type dbr:MilitaryConflict ;
         dbo:event ?event .

  # Step 3: Find the commander of that force
  ?commander dbo:commander ?force .

  # Step 4: Identify the person who was a decedent at Francoist Spain and also served as a commander in the identified force
  ?person dbo:decedentAtLocation dbr:Francoist_Spain ;
          rdfs:label ?commanderLabel .
  
  FILTER(CONTAINS(LCASE(?commanderLabel), LCASE(STR(?commander)))) .

  # Step 5: Determine the military force associated with this person
  ?militaryForce dbo:militaryForce ?person .
}
```",6,10,7,3,2,3,3,71,0,0,34,0,0.0,0
55,23,test,"Give me the band member of the producer, that is a band, of Used to Love Her and band of the reference, that is a band, to Newsted.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://xmlns.com/foaf/0.1/name> ""Newsted""@en . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Used_to_Love_Her> <http://dbpedia.org/ontology/producer> ?v3 . }","```sparql
# Part 1: Find the producer of ""Used to Love Her"" who is also a band member.
SELECT ?producer WHERE {
    ?song dbpedia-owl:title ""Used to Love Her""@en .
    ?song dbpedia-owl:producer ?producer .
    ?producer dbpedia-owl:bandMember ?band .
}

# Part 2: Find the band that references ""Newsted.""
SELECT ?band WHERE {
    ?reference dbpedia-owl:referenceTo <http://dbpedia.org/resource/Newsted> .
    ?reference dbpedia-owl:band ?band .
}

# Combine results to find common band member
SELECT DISTINCT ?commonMember WHERE {
    # Producer of ""Used to Love Her"" who is a band member
    ?producer dbpedia-owl:bandMember ?commonMember .
    ?song dbpedia-owl:title ""Used to Love Her""@en .
    ?song dbpedia-owl:producer ?producer .

    # Band that references ""Newsted""
    ?reference dbpedia-owl:referenceTo <http://dbpedia.org/resource/Newsted> .
    ?reference dbpedia-owl:band ?band .
    ?commonMember dbpedia-owl:bandMember ?band .
}
```",4,6,5,2,2,2,3,28,0,0,1,0,0.0,0
659,61,test,"Give me the military force of the force, that is a societal event and an event and a military conflict, of the reference to Rutger Jan Schimmelpenninck and commander in the war, that is an event and a military conflict, of the figure known, that is a military unit and an organisation, as 'Polish Horse'.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/commander> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v5 <http://dbpedia.org/ontology/commander> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/property/nickname> ""'Polish Horse'""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://xmlns.com/foaf/0.1/name> ""Rutger Jan Schimmelpenninck""@en . ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://dbpedia.org/ontology/battle> ?v5 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. }","```sparql
SELECT ?militaryForce WHERE {
  ?war rdf:type dbpedia-owl:MilitaryConflict .
  ?war rdf:type dbpedia-owl:Event .

  ?commander dbpedia-owl:commanderOf ?war .
  
  ?figure dbpedia-owl:knownFor ?event .
  ?figure rdf:type dbpedia-owl:MilitaryUnit .
  ?figure rdf:type dbpedia-owl:Organization .
  ?figure rdfs:label ""Polish Horse""@en .

  ?reference dbpedia-owl:referenceTo ?societalEvent .
  ?reference dbpedia-owl:referenceTo ?event .
  ?reference dbpedia-owl:referenceTo ?militaryConflict .
  ?reference dbpedia-owl:referenceTo <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> .

  ?societalEvent rdf:type dbpedia-owl:SocietalEvent .
  ?event rdf:type dbpedia-owl:Event .
  ?militaryConflict rdf:type dbpedia-owl:MilitaryConflict .

  ?force dbpedia-owl:militaryForceOf ?commander .
  ?force dbpedia-owl:referenceTo ?figure .

  ?militaryForce dbpedia-owl:militaryForceOf ?force .
}
```",6,13,7,3,2,3,3,71,0,0,31,0,0.0,0
328,35,test,"Give me the leader of the office, that is a government agency, of Joseph Stalin and awardee of the award of Bruce Fraser, 1st Baron Fraser of North Cape.","SELECT ?result WHERE { <http://dbpedia.org/resource/Joseph_Stalin> <http://dbpedia.org/property/office> ?v1 . ?v1 <http://dbpedia.org/ontology/leader> ?result . <http://dbpedia.org/resource/Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape> <http://dbpedia.org/property/awards> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?result <http://dbpedia.org/property/awards> ?v2 . }","```sparql
SELECT ?result WHERE {
    ?office <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>.
    <http://dbpedia.org/resource/Joseph_Stalin> <http://dbpedia.org/property/leaderOf> ?office.
    ?award <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>.
    <http://dbpedia.org/resource/Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape> <http://dbpedia.org/property/awardee> ?award.
    ?office <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?result.
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
328,51,test,"Give me the leader of the office, that is a government agency, of the leader, that is an office holder and a politician, of Gustav Jonson and commander in the force of Ferenc Szálasi.",SELECT ?result WHERE { <http://dbpedia.org/resource/Gustav_Jonson> <http://dbpedia.org/property/leader> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Ferenc_Szálasi> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/property/office> ?v2 . ?v4 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://dbpedia.org/ontology/leader> ?result . },"```sparql
SELECT ?agencyLeader WHERE {
  # Find Gustav Jonson's leader who is an office holder and a politician
  ?gustavLeader <http://dbpedia.org/ontology/leader> <http://dbpedia.org/resource/Gustav_Jonson> .
  ?gustavLeader <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder> .
  ?gustavLeader <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .

  # Find Ferenc Szálasi's commander in the force
  ?ferencCommander <http://dbpedia.org/property/commanderInForce> <http://dbpedia.org/resource/Ferenc_Sz%C3%A1lasi> .
  
  # Check if these two roles refer to the same individual
  FILTER (?gustavLeader = ?ferencCommander)

  # Identify the government agency (office) led by this person
  ?agency <http://dbpedia.org/ontology/leader> ?gustavLeader .
  ?agency <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency> .

  # Determine the leader of that government agency
  ?agencyLeader <http://dbpedia.org/ontology/leader> ?agency .
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
92,54,test,"Give me the band of Joseph Michael and band member of the reference, that is an artist, to Nevermore and associated musical artist of the person born, that is an artist, as the actor of Return to Nuke 'Em High Volume 1.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/birthName> ?v0 . ?v3 <http://xmlns.com/foaf/0.1/name> ""Nevermore""@en . <http://dbpedia.org/resource/Return_to_Nuke_'Em_High_Volume_1> <http://dbpedia.org/property/starring> ?v0 . ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Joseph_Michael> . }","```sparql
SELECT ?band ?artist ?associatedArtist WHERE {
  # Step 1: Find Joseph Michael's band
  ?person rdfs:label ""Joseph Michael""@en .
  ?person dbo:musicBand ?band .

  # Step 2: Find an artist associated with Nevermore as a band member
  ?reference rdfs:label ?artistLabel .
  FILTER(CONTAINS(LCASE(?artistLabel), ""nevermore"")).
  ?reference dbo:memberOf ?nevermoreEntity .
  ?nevermoreEntity rdfs:label ""Nevermore""@en .

  # Step 3: Find the associated musical artist of a person born who acted in ""Return to Nuke 'Em High Volume 1""
  ?actor rdfs:label ?actorLabel .
  FILTER(CONTAINS(LCASE(?actorLabel), ""return to nuke 'em high volume 1"")).
  ?actor dbo:birthPlace ?place .
  ?actor dbo:associatedMusicalArtist ?associatedArtist .

  # Ensure the artist is an artist
  ?reference dbo:type <http://dbpedia.org/ontology/Artist> .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
281,19,test,Give me the war of the awardee of Knight Grand Cross of the Order of the Bath and entity in Colony of New Zealand.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Colony_of_New_Zealand> . ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_the_Bath> . },"```sparql
SELECT ?entity ?war WHERE {
  ?entity <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/New_Zealand>.
  ?entity <http://dbpedia.org/property/honours> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_the_Bath>.
  OPTIONAL { ?entity <http://dbpedia.org/ontology/battle> ?war. }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
391,68,test,"Give me the actor of the claim to fame, that is a work, of the spouse of Sherry Hormann and actor of the movie, that is a movie and a work and a television show, with Roz Ryan and native of the figure known as the nick name of Jackson, Tennessee.","SELECT ?result WHERE { <http://dbpedia.org/resource/Sherry_Hormann> <http://dbpedia.org/ontology/spouse> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://dbpedia.org/property/nickname> ?v5 . ?v7 <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/ontology/birthPlace> ?v4 . <http://dbpedia.org/resource/Jackson,_Tennessee> <http://xmlns.com/foaf/0.1/nick> ?v5 . ?v3 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Roz_Ryan> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v0 <http://dbpedia.org/ontology/knownFor> ?v7 . ?v3 <http://dbpedia.org/property/starring> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. }","```sparql
# Step 1: Identify Sherry Hormann's spouse
SELECT ?spouse WHERE {
    <http://dbpedia.org/resource/Sherry_Hormann> <http://xmlns.com/foaf/0.1/spouse> ?spouse .
}

# Step 2: Find the claim to fame of Sherry Hormann's spouse
SELECT ?work WHERE {
    ?spouse <http://dbpedia.org/ontology/claimToFame> ?work .
    FILTER(?work <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>)
}

# Step 3: Determine the actor of this work
SELECT ?actor WHERE {
    ?work <http://dbpedia.org/ontology/actor> ?actor .
}

# Step 4: Identify the movie involving Roz Ryan
SELECT ?movie WHERE {
    ?movie <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Movie>.
    ?movie <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>.
    ?movie <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Roz_Ryan> .
}

# Step 5: Find the actor of this movie
SELECT ?actor WHERE {
    ?movie <http://dbpedia.org/ontology/actor> ?actor .
}

# Step 6: Find the native city of Jackson, Tennessee's nickname figure
SELECT ?figure ?city WHERE {
    ?figure <http://xmlns.com/foaf/0.1/nickName> ""Jackson, Tennessee"" .
    ?figure <http://dbpedia.org/ontology/nativePlace> ?city .
}

# Step 7: Combine these elements to identify the final actor
SELECT DISTINCT ?actor WHERE {
    # Actor of Sherry Hormann's spouse's work
    ?work1 <http://dbpedia.org/ontology/actor> ?actor .
    
    # Actor of the movie involving Roz Ryan
    ?movie2 <http://dbpedia.org/ontology/actor> ?actor .
    
    # Native city condition
    ?figure <http://xmlns.com/foaf/0.1/nickName> ""Jackson, Tennessee"" .
    ?figure <http://dbpedia.org/ontology/nativePlace> ?city .
    ?actor <http://dbpedia.org/ontology/birthPlace> ?city .
}
```",8,12,9,3,3,3,3,71,0,0,1,0,0.0,0
404,70,test,"Give me the parent of the child, that is a royalty, of the parent, that is a royalty, of Prince George William of Hanover and spouse of the person born, that is a royalty, as Princess Victoria Louise of Prussia and child of the father of the spouse of Princess Victoria Louise of Prussia.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v3 . ?v4 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/child> ?v7 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Prince_George_William_of_Hanover> <http://dbpedia.org/ontology/parent> ?v0 . ?v1 <http://dbpedia.org/property/father> ?v3 . ?v4 <http://dbpedia.org/property/birthName> ""Princess Victoria Louise of Prussia""@en . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?v1 . ?v0 <http://dbpedia.org/ontology/child> ?v7 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
SELECT ?finalParent WHERE {
  # Step 1: Identify Princess Victoria Louise of Prussia
  ?princessVictoriaLouise dbp:birthName ""Princess Victoria Louise of Prussia""@en ;
                          a dbo:Royalty .

  # Step 2: Find her spouse
  ?spouse dbp:spouse ?princessVictoriaLouise ;
          a dbo:Person .

  # Step 3: Determine the father of that spouse
  ?father dbp:child ?spouse ;
          a dbo:Person .

  # Step 4: Identify the child of this father (Princess Victoria Louise)
  ?child dbp:parent ?father ;
         a dbo:Royalty .

  # Step 5: Find the parent of Princess Victoria Louise who is royalty
  ?royalParent dbp:child ?princessVictoriaLouise ;
               a dbo:Royalty .

  # Step 6: Identify the child of this parent who is royalty
  ?royalChild dbp:parent ?royalParent ;
              a dbo:Royalty .

  # Step 7: Find the parent of this child
  ?finalParent dbp:child ?royalChild .
}
```",8,11,9,3,3,3,3,71,0,0,1,0,0.0,0
659,45,test,"Give me the military force of the force, that is a societal event and an event and a military conflict, of the reference to Rutger Jan Schimmelpenninck and commander in Battle of Leipzig and commander in German campaign of 1813.","SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""Rutger Jan Schimmelpenninck""@en . ?result <http://dbpedia.org/ontology/battle> ?v1 . <http://dbpedia.org/resource/Battle_of_Leipzig> <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/German_campaign_of_1813> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/ontology/commander> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. }","```sparql
SELECT ?result WHERE {
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>.
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>.
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>.

  OPTIONAL { <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> <http://dbpedia.org/property/referenceTo> ?result . }
  
  OPTIONAL {
    <http://dbpedia.org/resource/Battle_of_Leipzig> <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> .
    <http://dbpedia.org/resource/German_campaign_of_1813> <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> .
  }

  ?result <http://dbpedia.org/property/militaryForce> ?militaryForce .
}
```",5,8,6,3,3,3,3,71,0,0,6,0,0.0,0
161,47,test,"Give me the military force of the force, that is a societal event and an event and a military conflict, of Francisco Franco and military force of the force, that is a societal event and a military conflict, of the predecessor of Indalecio Prieto.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/commander> ?v0 . ?result <http://dbpedia.org/ontology/battle> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v0 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Indalecio_Prieto> . ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Franco> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
# Query for Francisco Franco's Force
SELECT ?francoForce WHERE {
  ?francoForce <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>.
  ?francoForce <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocialEvent>.
  ?francoForce <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>.
  <http://dbpedia.org/resource/Francisco_Franco> <http://dbpedia.org/property/militaryForce> ?francoForce.
}

UNION

# Query for Predecessor of Indalecio Prieto's Force
SELECT ?prietoPredecessorForce WHERE {
  ?predecessor <http://dbpedia.org/ontology/predecessor> <http://dbpedia.org/resource/Indalecio_Prieto>.
  ?prietoPredecessorForce <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>.
  ?prietoPredecessorForce <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocialEvent>.
  ?predecessor <http://dbpedia.org/property/militaryForce> ?prietoPredecessorForce.
}
```",5,10,6,3,2,3,3,71,0,0,514,0,0.0,0
232,45,test,"Give me the native of the residence, that is a settlement and British, of the native, that is a politician and an office holder, of France and child of Jon Pertwee and actor of Dog Soldiers (film).",SELECT ?result WHERE { <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/ontology/child> ?result . ?v0 <http://dbpedia.org/property/residence> ?v1 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/France> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Dog_Soldiers_(film)> <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . },"```sparql
# Step 1: Find the actor of ""Dog Soldiers (film)""
SELECT ?actor WHERE {
    <http://dbpedia.org/resource/Dog_Soldiers_(film)> dbo:starring ?actor .
}

# Step 2: Check if this actor is a child of Jon Pertwee and a politician/office holder in France
SELECT ?person WHERE {
    ?actor foaf:sibling ?child .
    ?child dbp:parent <http://dbpedia.org/resource/Jon_Pertwee> .
    ?person dbo:nationality dbc:French_politicians .
    ?person dbo:occupation dbo:Politician .
    ?person dbo:officeHolderOf <http://dbpedia.org/resource/France> .
    FILTER(?actor = ?person)
}

# Step 3: Find the native place of this person
SELECT ?nativePlace WHERE {
    ?person dbp:nativePlace ?nativePlace .
}

# Step 4: Identify the residence, ensuring it is a settlement and British
SELECT ?residence WHERE {
    ?person dbo:residence ?residence .
    ?residence rdf:type <http://dbpedia.org/ontology/Settlement> .
    ?residence dbp:country dbc:United_Kingdom .
}

# Step 5: Find who is native to that residence
SELECT ?nativeOfResidence WHERE {
    ?nativeOfResidence dbp:nativePlace ?residence .
}
```",5,9,6,3,3,3,3,71,0,0,1,0,0.0,0
617,55,test,"Give me the parent of the child of Antiochus (son of Antiochus III the Great) and spouse of the child of Antiochus III the Great and child of the child, that is a royalty, of Seleucus II Callinicus.",SELECT ?result WHERE { <http://dbpedia.org/resource/Antiochus_III_the_Great> <http://dbpedia.org/ontology/child> ?v5 . ?result <http://dbpedia.org/ontology/child> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://dbpedia.org/ontology/spouse> ?result . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seleucus_II_Callinicus> . <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/property/father> ?v3 . },"```sparql
SELECT ?parent WHERE {
  # Step 1: Identify Antiochus (son of Antiochus III) and his child
  ?antiochus dbo:childOf <http://dbpedia.org/resource/Antiochus_III_the_Great> .
  ?antiochus dbo:spouse ?spouse .
  ?child dbo:parent ?antiochus .

  # Step 2: Determine the spouse of Antiochus's child
  ?spouse dbo:spouse ?child .

  # Step 3: Find the parent of this spouse
  ?parent dbo:child ?spouse .

  # Step 4: Ensure the parent is royalty and a child of Seleucus II Callinicus
  ?parent rdf:type <http://dbpedia.org/ontology/RoyalPerson> .
  ?parent dbo:childOf <http://dbpedia.org/resource/Seleucus_II_Callinicus> .
}
```",6,7,7,2,3,3,3,71,0,0,2,0,0.0,0
391,43,test,"Give me the actor of the claim to fame, that is a work, of the spouse of Sherry Hormann and native of Compton, California and actor of All About the Andersons.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://dbpedia.org/ontology/knownFor> ?v4 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Compton,_California> . <http://dbpedia.org/resource/Sherry_Hormann> <http://dbpedia.org/ontology/spouse> ?v0 . <http://dbpedia.org/resource/All_About_the_Andersons> <http://dbpedia.org/property/starring> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. }","```sparql
# Step 1: Find Sherry Hormann's spouse
SELECT ?spouse WHERE {
    <http://dbpedia.org/resource/Sherry_Hormann> <http://xmlns.com/foaf/0.1/spouse> ?spouse .
}

# Step 2: Verify the spouse is native of Compton, California and an actor in ""All About the Andersons""
SELECT ?person WHERE {
    ?person <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Compton,_California> .
    ?person <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/United_States> .
    ?person <http://dbpedia.org/ontology/work> <http://dbpedia.org/resource/All_About_the_Andersons> .
}

# Step 3: Find the claim to fame (work) of this person
SELECT ?work WHERE {
    ?person <http://dbpedia.org/ontology/knownFor> ?work .
}

# Step 4: Identify actors involved in this work
SELECT ?actor WHERE {
    ?work <http://dbpedia.org/ontology/starring> ?actor .
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
184,71,test,"Give me the parent of the child of the parent of Archduchess Margaret of Austria (born 1925) and parent of the native of the landmark at elevation, that is a settlement, of 96.0 and child of the child of the parent, that is a royalty, of Archduke Ladislaus Philipp of Austria.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v2 . ?v7 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Margaret_of_Austria_(born_1925)> . ?v1 <http://dbpedia.org/ontology/elevation> ""96.0""^^<http://www.w3.org/2001/XMLSchema#double> . ?result <http://dbpedia.org/ontology/child> ?v8 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Archduke_Ladislaus_Philipp_of_Austria> <http://dbpedia.org/ontology/parent> ?v4 . ?result <http://dbpedia.org/property/father> ?v5 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v5 <http://dbpedia.org/property/father> ?v4 . ?v8 <http://dbpedia.org/property/father> ?v7 . }","```sparql
# Step 1: Find Archduchess Margaret's parent
SELECT ?parentMargaret WHERE {
    wd:Q1234567 <http://dbpedia.org/ontology/birthDate> ""1925-01-01""^^xsd:date .
    wd:Q1234567 <http://dbpedia.org/ontology/father> ?parentMargaret .
}

# Step 2: Find the child of Archduchess Margaret's parent who is royalty
SELECT ?childRoyalty WHERE {
    ?parentMargaret <http://dbpedia.org/ontology/child> ?childRoyalty .
    ?childRoyalty <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> wd:Q1234568 . # Assuming Q1234568 is the type for royalty
}

# Step 3: Find Archduke Ladislaus's parent who is royalty
SELECT ?parentLadislaus WHERE {
    wd:Q2345678 <http://dbpedia.org/ontology/father> ?parentLadislaus .
    ?parentLadislaus <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> wd:Q1234568 . # Assuming Q1234568 is the type for royalty
}

# Step 4: Find the child of Archduke Ladislaus's parent who is native to a landmark at 96.0 meters elevation
SELECT ?childNative WHERE {
    ?parentLadislaus <http://dbpedia.org/ontology/child> ?childNative .
    ?landmark <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> wd:Q1234569 . # Assuming Q1234569 is the type for settlement
    ?landmark <http://dbpedia.org/property/elevation> ""96.0""^^xsd:float .
    ?childNative <http://dbpedia.org/ontology/nativeOf> ?landmark .
}

# Step 5: Find the parent of the child identified in step 4
SELECT ?parentChildNative WHERE {
    ?childNative <http://dbpedia.org/ontology/father> ?parentChildNative .
}

# Final Step: Find the common parent of the two individuals identified in steps 2 and 5
SELECT ?finalParent WHERE {
    ?childRoyalty <http://dbpedia.org/ontology/father> ?finalParent .
    ?parentChildNative <http://dbpedia.org/ontology/mother> ?finalParent .
}
```",9,11,10,3,3,3,3,71,0,0,1,0,0.0,0
617,18,test,"Give me the parent of the father, that is a royalty, of Richeza of Poland, Queen of Hungary and child of the child, that is a royalty, of the parent of Mlada (abbess).","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/parent> ?v1 . ?v2 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Richeza_of_Poland,_Queen_of_Hungary> <http://dbpedia.org/property/father> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Mlada_(abbess)> . ?result <http://dbpedia.org/ontology/child> ?v3 . }","```sparql
SELECT ?parentOfFather WHERE {
  # Step 1: Identify Richeza of Poland, Queen of Hungary
  ?richeza a dbo:Person ;
           foaf:name ""Richeza of Poland, Queen of Hungary"" .

  # Step 2: Find her father who is royalty
  ?richeza dbo:father ?father .
  ?father a dbo:Royalty .

  # Step 3: Determine the parent (likely mother) of that father
  ?father dbo:parent ?parentOfFather .

  # Step 4: Identify Mlada (abbess)
  ?mlada a dbo:Person ;
         foaf:name ""Mlada (abbess)"" .

  # Step 5: Find the child of Mlada's parent who is royalty
  ?mlada dbo:parent ?parentOfMlada .
  ?childOfParent a dbo:Royalty ;
                 dbo:parent ?parentOfMlada .

  # Step 6: Ensure the child found in step 5 matches with the parent from step 3
  FILTER(?parentOfFather = ?childOfParent)
}
```",5,7,6,3,2,3,2,20,0,0,1,0,0.0,0
281,47,test,"Give me the entity in the birth place, that is a country, of the leader, that is a politician, of 1962 New South Wales state election and war of the awardee of Knight Grand Cross of the Order of the Bath.",SELECT ?result WHERE { <http://dbpedia.org/resource/1962_New_South_Wales_state_election> <http://dbpedia.org/property/leader> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/place> ?v4 . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/ontology/birthPlace> ?v4 . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_the_Bath> . },"```sparql
SELECT ?entity WHERE {
    # Step 1: Identify the leader of the 1962 New South Wales state election
    ?leader a dbo:Politician ;
            dbo:officeHolderOf <http://dbpedia.org/resource/1962_New_South_Wales_state_election> .

    # Step 2: Determine the birthplace country of that leader
    ?leader dbo:birthPlace ?birthPlace .
    ?birthPlace dbo:country ?country .

    # Step 3: Find the awardee of the Knight Grand Cross of the Order of the Bath who was involved in a war
    ?awardee dbo:award <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_the_Bath> ;
             dbo:militaryConflict ?war .

    # Step 5: Find entities located in the birthplace country identified in step 2
    ?entity dbo:country ?country .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
314,27,test,"Give me the person deceased at Madrid and awardee of the award of Sergei Makovetsky and commander in the profession, that is an event and a societal event, of Lisa Gavrić.",SELECT ?result WHERE { <http://dbpedia.org/resource/Sergei_Makovetsky> <http://dbpedia.org/property/awards> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/property/awards> ?v3 . ?result <http://dbpedia.org/ontology/restingPlace> <http://dbpedia.org/resource/Madrid> . <http://dbpedia.org/resource/Lisa_Gavrić> <http://dbpedia.org/property/occupation> ?v0 . ?v0 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Madrid>.
  
  ?award <http://dbpedia.org/property/recipient> ?person.
  ?makovetskyAward <http://dbpedia.org/property/recipient> <http://dbpedia.org/resource/Sergei_Makovetsky>.
  FILTER(?award = ?makovetskyAward).
  
  ?event <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>.
  ?societalEvent <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocialEvent>.
  
  ?lisaGavric <http://dbpedia.org/property/profession> ?profession.
  ?person <http://dbpedia.org/ontology/commander> ?profession.
  FILTER(?event = ?societalEvent).
}
```",5,7,6,2,3,2,3,28,0,0,1,0,0.0,0
996,16,test,Give me the entity in the award of Ekrem Akurgal and force of the awardee of 1778.0.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> ""1778.0""^^<http://www.w3.org/2001/XMLSchema#double> . <http://dbpedia.org/resource/Ekrem_Akurgal> <http://dbpedia.org/property/awards> ?v3 . ?result <http://dbpedia.org/ontology/commander> ?v2 . ?result <http://dbpedia.org/ontology/place> ?v3 . }","```sparql
SELECT ?entity WHERE {
  # Find entities related to an award received by Ekrem Akurgal
  ?award <http://dbpedia.org/ontology/receiver> <http://dbpedia.org/resource/Ekrem_Akurgal> .
  
  # Find the force of the awardee who was recognized in 1778
  ?entity <http://dbpedia.org/property/force> ?force .
  ?award2 <http://dbpedia.org/ontology/receiver> ?force .
  ?award2 <http://purl.org/dc/terms/date> ""1778""^^xsd:dateTime .

  # Ensure the entity is related to both conditions
  FILTER EXISTS { ?entity ?p ?award . }
}
```",4,4,5,2,2,3,2,20,0,0,4,0,0.0,0
701,66,test,"Give me the spouse of the father of the commander, that is a royalty, in Battle of Perire and parent of the child of Ramesses II and parent of the child of Nefertari.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v6 . ?v6 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ramesses_II> . <http://dbpedia.org/resource/Nefertari> <http://dbpedia.org/ontology/child> ?v3 . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v1 <http://dbpedia.org/property/father> ?v2 . <http://dbpedia.org/resource/Battle_of_Perire> <http://dbpedia.org/ontology/commander> ?v1 . ?v3 <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
SELECT ?spouse WHERE {
  ?battle rdf:type dbo:MilitaryConflict .
  ?battle dbo:place ?location .
  FILTER(?location = dbpedia:Battle_of_Perire) .

  ?commander dbo:role ""Commander"" ;
             dbo:parent ?father ;
             dbo:royalty ""Royalty"" ;
             dbo:childOfRamessesII ?ramessesChild ;
             dbo:childOfNefertari ?nefertariChild .

  ?father dbo:spouse ?spouse .

  ?ramessesChild dbo:parent dbpedia:Ramesses_II .
  ?nefertariChild dbo:parent dbpedia:Nefertari .
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
378,61,test,"Give me the claim to fame of the commander in the war, that is a military conflict and a societal event and an event, of Thomas Trigge and war of the commander in the reference, that is a military conflict, to Peninsular War.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/ontology/commander> ?v5 . ?v1 <http://dbpedia.org/ontology/commander> ?v3 . ?v3 <http://dbpedia.org/ontology/knownFor> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Thomas_Trigge> <http://dbpedia.org/ontology/battle> ?v1 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Peninsular War""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v5 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","```sparql
# Step 1: Find the war involving Thomas Trigge that is a military conflict, societal event, and an event.
SELECT ?war WHERE {
    ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>.
    ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>.
    ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>.
    ?war <http://dbpedia.org/ontology/person> <http://dbpedia.org/resource/Thomas_Trigge>.
}

# Step 2: Find the commander of this war.
SELECT ?commander WHERE {
    ?war <http://dbpedia.org/property/commander> ?commander.
    FILTER(?war IN {<result_of_step_1>})
}

# Step 3: Get the claim to fame of this commander.
SELECT ?claimToFame WHERE {
    ?commander <http://dbpedia.org/ontology/knownFor> ?claimToFame.
    FILTER(?commander IN {<result_of_step_2>})
}

# Step 4: Find the reference war related to Peninsular War.
SELECT ?referenceWar WHERE {
    <http://dbpedia.org/resource/Peninsular_War> <http://dbpedia.org/ontology/reference> ?referenceWar.
    ?referenceWar <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>.
}

# Step 5: Find the commander of this reference war.
SELECT ?secondCommander WHERE {
    ?referenceWar <http://dbpedia.org/property/commander> ?secondCommander.
    FILTER(?referenceWar IN {<result_of_step_4>})
}

# Step 6: Get the war associated with this second commander.
SELECT ?secondWar WHERE {
    ?secondCommander <http://dbpedia.org/ontology/battle> ?secondWar.
    FILTER(?secondCommander IN {<result_of_step_5>})
}
```",6,10,7,3,2,3,3,71,0,0,2,0,0.0,0
767,52,test,"Give me the alma mater of the administration of George K. Nash and reference to  and entity in the administration, that is a settlement, of the writer of Where It's At (Dustin Lynch album).","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/leaderParty> ?v3 . ?v5 <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://xmlns.com/foaf/0.1/name> """"@en . <http://dbpedia.org/resource/Where_It's_At_(Dustin_Lynch_album)> <http://dbpedia.org/property/writer> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/state> ?v2 . ?v5 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/George_K._Nash> . }","```sparql
SELECT ?almaMater ?settlement WHERE {
  # Step 1: Find the writer of ""Where It's At""
  dbpedia-owl:album <http://dbpedia.org/resource/Where_It%27s_At_(Dustin_Lynch_album)> dbo:writer ?writer .

  # Step 2: Identify the administration associated with George K. Nash
  ?administration dbo:administrator ?georgeKash .
  ?georgeKash foaf:name ""George K. Nash"" .

  # Step 3: Determine the alma mater of that administration
  ?administration dbo:almaMater ?almaMater .

  # Step 4: Locate an entity in the administration that is a settlement
  ?entityInAdmin dbo:partOfAdministration ?administration .
  ?entityInAdmin rdf:type dbpedia-owl:Settlement .
  ?entityInAdmin rdfs:label ?settlement .
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
528,70,test,Give me the war of the commander in the work of --01-09 and force of the person born as the birth name of Narciso Campero and war of the military force of Battle of Pisagua.,"SELECT ?result WHERE { ?v7 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Narciso_Campero> <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/ontology/commander> ?v7 . ?result <http://dbpedia.org/ontology/commander> ?v3 . ?v4 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Pisagua> . ?v4 <http://dbpedia.org/ontology/battle> ?result . ?v3 <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/property/author> ""--01-09""^^<http://www.w3.org/2001/XMLSchema#gMonthDay> . }","```sparql
SELECT DISTINCT ?war1 ?force2 ?war3 WHERE {
  # Part 1: Work associated with --01-09, its commander, and the war of that commander
  ?work dbp:date ""--01-09"" ;
        dbo:commander ?commander .
  ?commander dbo:militaryConflict ?war1 .

  # Part 2: Person born as Narciso Campero, their birth name, and associated force
  ?person foaf:name ""Narciso Campero""@en ;
          dbo:birthName ?birthName .
  ?force2 dbo:leader ?birthName .

  # Part 3: Battle of Pisagua, its military force, and the war of that force
  dbp:PisaguaBattle dbo:militaryForce ?militaryForce .
  ?militaryForce dbo:militaryConflict ?war3 .
}
```",8,8,9,3,3,3,3,71,0,0,2,0,0.0,0
404,48,test,"Give me the spouse of the person born, that is a royalty, as the birth name of Princess Victoria Louise of Prussia and child of the father of Ernest Augustus, Duke of Brunswick.","SELECT ?result WHERE { <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/property/father> ?v1 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/property/birthName> ?v3 . ?result <http://dbpedia.org/ontology/parent> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/birthName> ?v3 . }","```sparql
SELECT ?spouse WHERE {
  ?person <http://dbpedia.org/ontology/birthName> ""Princess Victoria Louise of Prussia"" .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
  ?person <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> .
  ?person <http://dbpedia.org/property/spouse> ?spouse .
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
617,38,test,Give me the spouse of the child of Antiochus III the Great and parent of the child of Antiochus (son of Antiochus III the Great).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v2 . <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/child> ?v2 . <http://dbpedia.org/resource/Antiochus_III_the_Great> <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
SELECT ?spouse WHERE {
  ?child1 dbo:parent <http://dbpedia.org/resource/Antiochus_III_the_Great> .
  ?antiochus dbo:parent ?child1 .
  FILTER(?antiochus = <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)>)
  ?child1 dbo:spouse ?spouse .
}
```",4,4,5,2,2,3,3,71,0,0,2,0,0.0,0
528,63,test,"Give me the force of the person born as Narciso Campero Leyes and war of the military force of the entity, that is a societal event, in Chile and war of the commander in Battle of La Rinconada de Ate.","SELECT ?result WHERE { <http://dbpedia.org/resource/Battle_of_La_Rinconada_de_Ate> <http://dbpedia.org/ontology/commander> ?v6 . ?v2 <http://dbpedia.org/property/birthName> ""Narciso Campero Leyes""@en . ?v3 <http://dbpedia.org/ontology/battle> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/commander> ?v2 . ?v4 <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Chile> . ?v6 <http://dbpedia.org/ontology/battle> ?result . }","```sparql
# Part 1: Get the force of Narciso Campero Leyes
SELECT ?force WHERE {
    ?person <http://dbpedia.org/ontology/birthName> ""Narciso Campero Leyes"" .
    ?person <http://dbpedia.org/property/militaryForce> ?force .
}

# Part 2: Get wars related to societal events in Chile and their military forces
SELECT DISTINCT ?war WHERE {
    ?event <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent> ;
           <http://dbpedia.org/property/country> <http://dbpedia.org/resource/Chile> .
    OPTIONAL { ?event <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> . }
    ?force <http://dbpedia.org/property/country> <http://dbpedia.org/resource/Chile> .
    OPTIONAL { ?event <http://dbpedia.org/ontology/militaryForce> ?force . }
}

# Part 3: Get wars related to the commander of Battle of La Rinconada de Ate
SELECT DISTINCT ?war WHERE {
    <http://dbpedia.org/resource/Battle_of_La_Rinconada_de_Ate> <http://dbpedia.org/ontology/commander> ?commander .
    ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> ;
         <http://dbpedia.org/ontology/commander> ?commander .
}
```",7,8,8,3,3,3,3,71,0,0,2,0,0.0,0
712,18,test,"Give me the resting place of the awardee of Hero of the Soviet Union and capital of the country of the military force, that is an organisation and a military unit, of Vyoshenskaya Uprising.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/capital> ?result . ?v1 <http://dbpedia.org/ontology/country> ?v2 . ?v3 <http://dbpedia.org/ontology/restingPlace> ?result . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Hero_of_the_Soviet_Union> . ?v1 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Vyoshenskaya_Uprising> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
SELECT ?restingPlace WHERE {
  # Step 1: Find the military organization and unit related to Vyoshenskaya Uprising
  ?militaryForce <http://dbpedia.org/ontology/event> <http://dbpedia.org/resource/Vyoshenskaya_Uprising> .
  
  # Step 2: Determine the country of this military force
  ?militaryForce <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation> ;
                 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit> .
  ?militaryForce <http://dbpedia.org/property/country> ?country .

  # Step 3: Find the capital of this country
  ?country <http://dbpedia.org/ontology/administrativeCapital> ?capital .

  # Step 4: Identify individuals awarded Hero of the Soviet Union
  ?hero <http://dbpedia.org/ontology/honoraryTitle> <http://dbpedia.org/resource/Hero_of_the_Soviet_Union> .
  
  # Step 5: Find the resting place of these awardees
  ?hero <http://dbpedia.org/property/burialPlace> ?restingPlace .
}
```",5,7,6,3,2,3,2,20,0,0,1,0,0.0,0
281,42,test,"Give me the war of the awardee of Knight Grand Cross of the Order of the Bath and entity in Colony of New Zealand and war of the profession, that is a military unit, of Heather Roy.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_the_Bath> . <http://dbpedia.org/resource/Heather_Roy> <http://dbpedia.org/property/occupation> ?v1 . ?v1 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Colony_of_New_Zealand> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. },"```sparql
# Step 1: Get the awardee of Knight Grand Cross of the Order of the Bath
SELECT ?awardee WHERE {
    ?awardee <http://dbpedia.org/ontology/honoraryTitle> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_the_Bath> .
}

# Step 2: Find wars in the Colony of New Zealand
SELECT ?war WHERE {
    ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
    ?war <http://dbpedia.org/property/location> <http://dbpedia.org/resource/Colony_of_New_Zealand> .
}

# Step 3: Find Heather Roy's profession and related military units
SELECT ?profession WHERE {
    <http://dbpedia.org/resource/Heather_Roy> <http://purl.org/dc/terms/profession> ?profession .
}
SELECT ?militaryUnit WHERE {
    ?militaryUnit <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit> .
    ?militaryUnit <http://purl.org/dc/terms/profession> ?profession .
}

# Step 4: Find the war(s) that connect these elements
SELECT DISTINCT ?war WHERE {
    # Awardee's wars
    ?awardee <http://dbpedia.org/ontology/battle> ?war .
    
    # Wars in Colony of New Zealand
    ?war2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
    ?war2 <http://dbpedia.org/property/location> <http://dbpedia.org/resource/Colony_of_New_Zealand> .

    # Heather Roy's military unit wars
    ?militaryUnit <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit> .
    ?militaryUnit <http://purl.org/dc/terms/profession> ?profession .
    ?militaryUnit <http://dbpedia.org/ontology/battle> ?war3 .

    # Find common wars
    FILTER (?war = ?war2 && ?war = ?war3)
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
360,27,test,"Give me the writer of The Roaring Silence and native of the death place, that is a settlement, of Winnie Madikizela-Mandela and reference to the author of Blinded by the Light.",SELECT ?result WHERE { <http://dbpedia.org/resource/Blinded_by_the_Light> <http://dbpedia.org/property/author> ?v0 . ?result <http://xmlns.com/foaf/0.1/name> ?v0 . <http://dbpedia.org/resource/The_Roaring_Silence> <http://dbpedia.org/property/writer> ?result . <http://dbpedia.org/resource/Winnie_Madikizela-Mandela> <http://dbpedia.org/ontology/deathPlace> ?v3 . ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
# Step 1: Identify the writer of ""The Roaring Silence""
SELECT ?writer WHERE {
    ?book <http://dbpedia.org/ontology/author> ?writer .
    ?book <http://purl.org/dc/terms/title> ""The Roaring Silence"" .
}

# Step 2: Determine the death place of Winnie Madikizela-Mandela
SELECT ?deathPlace WHERE {
    <http://dbpedia.org/resource/Winnie_Madikizela-Mandela> <http://dbpedia.org/ontology/deathPlace> ?deathPlace .
    ?deathPlace <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement> .
}

# Step 3: Find the native of this settlement who is also referenced by the author of ""Blinded by the Light""
SELECT ?person WHERE {
    # Native of the death place
    ?person <http://dbpedia.org/property/nationality> ?deathPlace .
    
    # Reference to the author of ""Blinded by the Light""
    ?author <http://dbpedia.org/ontology/author> ?blindedByTheLightBook .
    ?blindedByTheLightBook <http://purl.org/dc/terms/title> ""Blinded by the Light"" .
    ?person <http://www.w3.org/2004/02/skos/core#broader> ?author .
    
    # Combine conditions
    FILTER(?writer = ?person)
}
```",5,6,6,2,3,2,3,28,0,0,1,0,0.0,0
701,69,test,"Give me the parent of the child of the spouse of Amun-her-khepeshef and parent of the child of Ramesses II and spouse of the father of the commander, that is a royalty, in Battle of Perire.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v7 . <http://dbpedia.org/resource/Battle_of_Perire> <http://dbpedia.org/ontology/commander> ?v1 . ?v7 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ramesses_II> . ?v4 <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Amun-her-khepeshef> <http://dbpedia.org/ontology/spouse> ?v4 . ?v1 <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
SELECT ?person WHERE {
  # Step 1: Amun-her-khepeshef's spouse
  ?amun sp:spouse ?spouse .
  
  # Step 2: Their child
  ?child sp:parent ?spouse ;
         sp:parent ?amun .

  # Step 3: Parent of this child (Amun or his spouse)
  ?parent sp:child ?child .

  # Step 4: Ramesses II's child
  ?ramessesChild sp:parent <http://dbpedia.org/resource/Ramses_II> ;
                 sp:parent ?ramessesSpouse .

  # Step 5: Parent of this child (Ramesses II or his spouse)
  ?parent2 sp:child ?ramessesChild .

  # Step 6: Commander in Battle of Perire
  <http://dbpedia.org/resource/Battle_of_Perire> sp:commander ?commander .
  
  # Father of the commander
  ?father sp:child ?commander .

  # Spouse of this father
  ?spouseFather sp:spouse ?father .

  # Step 7: Common entity and royalty check
  FILTER (?parent = ?parent2 && ?parent = ?spouseFather)
  ?person rdf:type <http://dbpedia.org/ontology/Royalty> .
}
```",8,9,9,3,3,3,3,71,0,0,1,0,0.0,0
528,50,test,Give me the war of the commander in the work of --01-09 and force of the person born as Narciso Campero Leyes.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> ?v3 . ?v0 <http://dbpedia.org/property/author> ""--01-09""^^<http://www.w3.org/2001/XMLSchema#gMonthDay> . ?v0 <http://dbpedia.org/ontology/commander> ?v4 . ?v4 <http://dbpedia.org/ontology/battle> ?result . ?v3 <http://dbpedia.org/property/birthName> ""Narciso Campero Leyes""@en . }","```sparql
SELECT ?war ?force WHERE {
  # Find the war associated with a commander involved in an event/work dated ""--01-09""
  ?event <http://dbpedia.org/ontology/date> ?date .
  FILTER (STRSTARTS(STR(?date), ""-01-09""))
  ?commander <http://dbpedia.org/ontology/commanderOf> ?war .
  ?event <http://dbpedia.org/ontology/creatorOrContributor> ?commander .

  # Find the force associated with Narciso Campero Leyes
  <http://dbpedia.org/resource/Narciso_Campero_Leyes> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person> .
  <http://dbpedia.org/resource/Narciso_Campero_Leyes> <http://dbpedia.org/property/birth> ?birth .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person> ;
          <http://dbpedia.org/property/birth> ?birth ;
          <http://dbpedia.org/ontology/memberOfMilitaryForce> ?force .
}
```",5,5,6,3,2,3,3,71,0,0,2,0,0.0,0
16,51,test,Give me the professional in the profession of Satomi Ishihara and person born as the birth name of the alumnus of Ohio State University.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Ohio_State_University> . ?result <http://dbpedia.org/property/birthName> ?v2 . ?result <http://dbpedia.org/property/occupation> ?v4 . ?v1 <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Satomi_Ishihara> <http://dbpedia.org/property/occupation> ?v4 . },"```sparql
SELECT ?person WHERE {
  # Step 1: Get the profession of Satomi Ishihara
  <http://dbpedia.org/resource/Satomi_Ishihara> <http://purl.org/dc/terms/subject> ?profession .

  # Step 2: Find alumni of Ohio State University and their birth names
  ?alumnus <http://dbpedia.org/ontology/alumniOf> <http://dbpedia.org/resource/Ohio_State_University> .
  ?alumnus <http://xmlns.com/foaf/0.1/name> ?birthName .

  # Step 3: Find a person with the same birth name and profession
  ?person <http://purl.org/dc/terms/subject> ?profession .
  ?person <http://xmlns.com/foaf/0.1/givenname> ?givenName .
  ?person <http://xmlns.com/foaf/0.1/family_name> ?familyName .

  # Ensure the full name matches
  FILTER (CONCAT(?givenName, "" "", ?familyName) = ?birthName)
}
```",5,5,6,3,2,3,3,71,0,0,3,0,0.0,0
378,63,test,Give me the war of the person born as the birth name of Carl Pontus Gahn and claim to fame of the commander in Great Siege of Gibraltar and war of the commander in Peninsular War.,SELECT ?result WHERE { <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/property/birthName> ?v4 . <http://dbpedia.org/resource/Peninsular_War> <http://dbpedia.org/ontology/commander> ?v6 . ?v3 <http://dbpedia.org/property/birthName> ?v4 . ?v6 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/ontology/knownFor> ?result . ?v3 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Great_Siege_of_Gibraltar> <http://dbpedia.org/ontology/commander> ?v2 . },"```sparql
# Step 1: Find the person born as ""Carl Pontus Gahn""
SELECT ?person WHERE {
    ?person <http://dbpedia.org/ontology/birthName> ""Carl Pontus Gahn"" .
}

# Step 2: Find the commander of the Great Siege of Gibraltar and their claim to fame
SELECT ?commander ?claimToFame WHERE {
    ?gibraltarEvent <http://dbpedia.org/ontology/commander> ?commander .
    ?commander <http://dbpedia.org/ontology/knownFor> ?claimToFame .
    FILTER(?gibraltarEvent = <http://dbpedia.org/resource/Great_Siege_of_Gibraltar>)
}

# Step 3: Find the commander of the Peninsular War and their associated war
SELECT ?peninsularCommander ?war WHERE {
    ?peninsularWar <http://dbpedia.org/ontology/commander> ?peninsularCommander .
    ?peninsularCommander <http://dbpedia.org/ontology/battle> ?war .
    FILTER(?peninsularWar = <http://dbpedia.org/resource/Peninsular_War>)
}

# Step 4: Find the war associated with Carl Pontus Gahn using the results from steps 2 and 3
SELECT ?gahnWar WHERE {
    ?person <http://dbpedia.org/ontology/birthName> ""Carl Pontus Gahn"" .
    ?person <http://dbpedia.org/ontology/knownFor> ?claimToFame .
    ?commander <http://dbpedia.org/ontology/knownFor> ?claimToFame .
    ?peninsularCommander <http://dbpedia.org/ontology/battle> ?gahnWar .
    ?person <http://dbpedia.org/ontology/battle> ?gahnWar .
}
```",7,7,8,3,3,3,3,71,0,0,2,0,0.0,0
767,27,test,"Give me the reference to the alter ego of the persona, that is a fictional character, of Matthew Burland.","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v1 <http://dbpedia.org/property/alterEgo> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v1 <http://dbpedia.org/property/alterEgo> ""Matthew Burland""@en . }","```sparql
SELECT ?alterEgo ?reference WHERE {
  ?character <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/Matthew_Burland> .
  ?character <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter> .
  OPTIONAL { ?character <http://dbpedia.org/ontology/alsoKnownAs> ?alterEgo . }
  OPTIONAL { ?alterEgo <http://xmlns.com/foaf/0.1/page> ?reference . }
}
```",3,4,4,3,1,3,3,71,0,0,98447,0,0.0,0
281,30,test,"Give me the war of Beauchamp Seymour, 1st Baron Alcester and war of the profession, that is a military unit, of Heather Roy and entity in Colony of New Zealand.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Beauchamp_Seymour,_1st_Baron_Alcester> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Colony_of_New_Zealand> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. <http://dbpedia.org/resource/Heather_Roy> <http://dbpedia.org/property/occupation> ?v1 . }","```sparql
SELECT ?war WHERE {
  # Wars associated with Beauchamp Seymour, 1st Baron Alcester
  <http://dbpedia.org/resource/Beauchamp_Seymour,_1st_Baron_Alcester> <http://dbpedia.org/ontology/war> ?war .

  # Military units related to Heather Roy's profession
  ?unit <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit> .
  <http://dbpedia.org/resource/Heather_Roy> <http://dbpedia.org/property/profession> ?profession .
  ?profession <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?unit .

  # Ensure the war is an entity in the Colony of New Zealand
  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
  ?war <http://dbpedia.org/ontology/entityIn> <http://dbpedia.org/resource/Colony_of_New_Zealand> .

  # Ensure the war is a military unit related to Heather Roy's profession
  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?unit .
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
488,56,test,"Give me the birth place of the commander in Boshin War and death place of Tokugawa Ieyasu and administration of the father of the spouse, that is a royalty, of Tokugawa Masako.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?v1 . ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Tokugawa_Masako> . <http://dbpedia.org/resource/Tokugawa_Ieyasu> <http://dbpedia.org/ontology/deathPlace> ?result . ?result <http://dbpedia.org/property/leader> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Boshin_War> <http://dbpedia.org/ontology/commander> ?v2 . },"```sparql
SELECT DISTINCT ?birthPlace ?deathPlace ?administration WHERE {
  # Part 1: Birth place of the commander in Boshin War
  ?commander dbo:commanderOf <http://dbpedia.org/resource/Boshin_War> .
  ?commander foaf:bornIn ?birthPlace .

  # Part 2: Death place of Tokugawa Ieyasu
  <http://dbpedia.org/resource/Tokugawa_Ieyasu> dbo:deathPlace ?deathPlace .

  # Part 3: Administration of the father of the spouse, that is a royalty, of Tokugawa Masako
  <http://dbpedia.org/resource/Tokugawa_Masako> foaf:spouse ?spouse .
  ?spouse rdf:type dbo:Royalty .
  ?spouse dbo:father ?father .
  ?father dbo:administers ?administration .
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
492,34,test,Give me the person decedent at the work of the author of French Algeria and person decedent at Algiers.,SELECT ?result WHERE { <http://dbpedia.org/resource/French_Algeria> <http://dbpedia.org/property/author> ?v2 . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Algiers> . ?v1 <http://dbpedia.org/property/author> ?v2 . ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . },"```sparql
SELECT ?personDecedent WHERE {
  ?work <http://dbpedia.org/ontology/author> ?author .
  ?work <http://www.w3.org/2000/01/rdf-schema#label> ""French Algeria""@en .
  
  ?decedentAtWork <http://dbpedia.org/ontology/decedent> ?personDecedent .
  ?decedentAtWork <http://dbpedia.org/property/work> ?work .

  ?decedentAtAlgiers <http://dbpedia.org/ontology/decedent> ?personDecedent .
  ?decedentAtAlgiers <http://www.w3.org/2000/01/rdf-schema#label> ""Algiers""@en .
}
```",4,4,5,3,2,3,3,71,0,0,16,0,0.0,0
10,26,test,"Give me the band member of Luke Vibert and associated musical artist of the person born, that is an artist, as Matt Colton and professional in the birth name of Sharon Kao.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Luke_Vibert> . ?v4 <http://dbpedia.org/property/birthName> ""Matt Colton""@en . ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Sharon_Kao> <http://dbpedia.org/property/birthName> ?v1 . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
SELECT ?person WHERE {
  # Part 1: Band member of Luke Vibert
  ?bandMember <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/Luke_Vibert> .
  
  # Part 2: Associated musical artist of Matt Colton (born as an artist)
  ?artist <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist> .
  ?artist <http://dbpedia.org/property/birthName> ""Matt Colton""^^<http://www.w3.org/2001/XMLSchema#string> .
  ?associatedArtist <http://dbpedia.org/ontology/associatedMusicalArtist> ?artist .

  # Part 3: Professional in the birth name of Sharon Kao
  ?professional <http://dbpedia.org/property/birthName> ""Sharon Kao""^^<http://www.w3.org/2001/XMLSchema#string> .
  
  # Combine all conditions to find a common person
  FILTER (?bandMember = ?associatedArtist && ?bandMember = ?professional)
}
```",5,6,6,2,3,2,3,28,0,0,1,0,0.0,0
9,59,test,"Give me the alma mater of the mayor, that is a politician, of the entity, that is an organisation, in Belfast and alma mater of the awardee of the reference, that is an award, to Royal Medals.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/almaMater> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Royal Medals""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v5 <http://dbpedia.org/property/awards> ?v0 . ?v3 <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Belfast> . ?v2 <http://dbpedia.org/ontology/almaMater> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://dbpedia.org/property/leader> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
SELECT ?almaMater WHERE {
  # Step 1: Find the organization in Belfast
  ?organization <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>;
                <http://dbpedia.org/ontology/location> ?location.
  
  # Ensure the location is Belfast
  ?location <http://www.w3.org/2000/01/rdf-schema#label> ""Belfast""@en.

  # Step 2: Find the mayor who is a politician of this organization
  ?mayor <http://dbpedia.org/ontology/politicianFor> ?organization;
         <http://dbpedia.org/ontology/almaMater> ?almaMater1.
  
  # Step 3: Identify the award reference related to Royal Medals
  ?awardReference <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>;
                  <http://dbpedia.org/property/reference> ?reference.
  
  # Ensure the reference is to Royal Medals
  ?reference <http://www.w3.org/2000/01/rdf-schema#label> ""Royal Medals""@en.

  # Step 4: Find the awardee of this award and their alma mater
  ?awardee <http://dbpedia.org/ontology/award> ?awardReference;
           <http://dbpedia.org/ontology/almaMater> ?almaMater2.
  
  # Ensure both alma maters are the same
  FILTER(?almaMater1 = ?almaMater2)
  
  BIND(?almaMater1 AS ?almaMater)
}
```",6,9,7,3,2,3,3,71,0,0,1,0,0.0,0
115,8,test,Give me the alma mater of Vladimir Cerrón and alma mater of the awardee of National Order of Scientific Merit.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/almaMater> ?result . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/National_Order_of_Scientific_Merit> . <http://dbpedia.org/resource/Vladimir_Cerrón> <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
SELECT ?vladimirAlmaMater ?awardeeAlmaMater WHERE {
  # Retrieve alma mater for Vladimir Cerrón
  <http://dbpedia.org/resource/Vladimiro_Cerrón> <http://dbpedia.org/ontology/almaMater> ?vladimirAlmaMater .

  # Retrieve awardees of the National Order of Scientific Merit and their alma maters
  ?awardee <http://dbpedia.org/property/nationalOrderOfScientificMeritAwardee> true .
  ?awardee <http://dbpedia.org/ontology/almaMater> ?awardeeAlmaMater .
}
```",3,3,4,2,2,2,2,9,0,0,1,0,0.0,0
232,65,test,"Give me the actor of the claim to fame, that is a film and a military conflict, of the professional in Actor, narrator and producer and child of the person born as John Devon Roland Pertwee and native of the residence, that is a settlement and British, of Sylvie Bermann.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. <http://dbpedia.org/resource/Sylvie_Bermann> <http://dbpedia.org/property/residence> ?v3 . ?v0 <http://dbpedia.org/property/occupation> ""Actor, narrator and producer""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v4 <http://dbpedia.org/property/birthName> ""John Devon Roland Pertwee""@en . ?v6 <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://dbpedia.org/ontology/knownFor> ?v6 . ?v4 <http://dbpedia.org/ontology/child> ?result . }","```sparql
SELECT ?actor WHERE {
  # Step 1: Find Sylvie Bermann's British Settlement Residence
  ?residence <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>.
  ?residence <http://dbpedia.org/property/country> <http://dbpedia.org/resource/United_Kingdom>.
  <http://dbpedia.org/resource/Sylvie_Bermann> <http://dbpedia.org/property/residence> ?residence.

  # Step 2: Find the Person Born as John Devon Roland Pertwee
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>.
  ?person <http://dbpedia.org/property/birthName> ""John Devon Roland Pertwee""@en.

  # Step 3: Determine the Child of This Person Who Is an Actor, Narr",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
328,24,test,Give me the leader of People's Commissariat of Defense of the Soviet Union and commander in the force of Ferenc Szálasi.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Ferenc_Szálasi> . <http://dbpedia.org/resource/People's_Commissariat_of_Defense_of_the_Soviet_Union> <http://dbpedia.org/ontology/leader> ?result . ?v2 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT ?leader WHERE {
  ?person <http://dbpedia.org/ontology/officeHolder> <http://dbpedia.org/resource/People's_Commissariat_of_Defense_of_the_Soviet_Union>.
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>.
  ?person <http://dbpedia.org/ontology/title> ""Leader""@en.
  
  ?szalasi <http://dbpedia.org/property/commander> ?force.
  ?leader <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>.
  ?leader <http://dbpedia.org/ontology/battleCommanded> ?force.

  FILTER(?person = ?leader)
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
9,63,test,"Give me the figure known as the nickname of Queen's University Belfast and alma mater of the mayor, that is a politician, of the entity, that is an organisation, in Belfast and alma mater of the awardee of Royal Medal.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v6 <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://dbpedia.org/property/nickname> ?v2 . ?v4 <http://dbpedia.org/property/leader> ?v3 . ?v6 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Medal> . <http://dbpedia.org/resource/Queen's_University_Belfast> <http://dbpedia.org/property/nickname> ?v2 . ?v4 <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Belfast> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
SELECT DISTINCT ?figure WHERE {
  # Step 1: Identify the organization in Belfast
  ?organization a dbo:Organisation ;
                dbo:location dbr:Belfast .

  # Step 2: Find the mayor of this organization who is a politician and their alma mater
  ?mayor dbo:position ""Mayor""@en ;
         dbo:almaMater ?almaMater1 ;
         dbo:memberOf ?organization .
  FILTER EXISTS { ?mayor a dbo:Politician }

  # Step 3: Determine the awardee of the Royal Medal and their alma mater
  ?awardee dbo:award ""Royal Medal""@en ;
           dbo:almaMater ?almaMater2 .

  # Step 4: Identify Queen's University Belfast by its nickname
  dbr:Queen's_University_Belfast dbo:nickname ?figure .
  
  # Ensure the alma maters match
  FILTER (?almaMater1 = ?almaMater2)
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
747,57,test,"Give me the band of the person born as Tracey Elizabeth McSween and person born on 1985-04-29 and band of the writer of the work, that is a song, of Amba Shepherd.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/writer> ?v5 . ?v3 <http://dbpedia.org/property/birthName> ""Tracey Elizabeth McSween""@en . ?result <http://dbpedia.org/ontology/birthDate> ""1985-04-29""^^<http://www.w3.org/2001/XMLSchema#date> . ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Amba_Shepherd> . ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
SELECT DISTINCT ?band WHERE {
  # Part 1: Band of Tracey Elizabeth McSween
  {
    ?person foaf:name ""Tracey Elizabeth McSween"" .
    ?person dbo:birthName ""Tracey Elizabeth McSween"" .
    ?person dbo:member ?band .
  }
  
  UNION
  
  # Part 2: Band of person born on 1985-04-29
  {
    ?person dbo:birthday ""1985-04-29""^^xsd:date .
    ?person dbo:member ?band .
  }
  
  UNION
  
  # Part 3: Band of the writer of a song by Amba Shepherd
  {
    ?work dbo:type <http://dbpedia.org/ontology/Song> .
    ?work dbo:lyricist ?writer .
    ?writer foaf:name ""Amba Shepherd"" .
    ?writer dbo:member ?band .
  }
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
328,61,test,"Give me the commander in the force of the person decedent at Budapest and leader of the office, that is a government agency, of the leader, that is an office holder and a politician, of Gustav Jonson.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/leader> ?result . ?v5 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Budapest> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v5 <http://dbpedia.org/ontology/commander> ?v0 . ?v1 <http://dbpedia.org/property/office> ?v3 . <http://dbpedia.org/resource/Gustav_Jonson> <http://dbpedia.org/property/leader> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. },"```sparql
SELECT ?commander WHERE {
  # Step 1: Identify Gustav Jonson's leader role
  ?leader a dbo:OfficeHolder ;
          a dbo:Politician ;
          dbo:leaderOf <http://dbpedia.org/resource/Gustav_Jonson> .

  # Step 2: Find the government agency led by this person
  ?agency a dbo:GovernmentAgency ;
          dbo:head <#leader> .

  # Step 3: Determine the commander of the force associated with the decedent at Budapest
  ?decedent dbo:placeOfDeath <http://dbpedia.org/resource/Budapest> .
  ?force dbo:commander ?commander ;
         dbo:associatedWith ?agency .
}
```",6,9,7,3,2,3,3,71,0,0,1,0,0.0,0
994,48,test,"Give me the band member of the person born, that is a musical artist, as Donald Maynard Dokken and associated musical artist of the associated musical artist of the reference to Watchtower.","SELECT ?result WHERE { ?v3 <http://xmlns.com/foaf/0.1/name> ""Watchtower""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/birthName> ""Donald Maynard Dokken""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . }","```sparql
SELECT ?bandMember WHERE {
    # Step 1: Identify the person born as Donald Maynard Dokken who is a musical artist.
    ?person foaf:bornAs ""Donald Maynard Dokken""@en .
    ?person dbo:musicalArtist ?musicalArtist .

    # Step 2: Find associated musical artists of this person.
    ?associatedArtist dbo:associatedMusicalArtist ?musicalArtist .

    # Step 3: Identify those associated musical artists that reference Watchtower.
    ?referenceResource rdfs:seeAlso <http://dbpedia.org/resource/Watchtower> .
    ?associatedArtist dbo:reference ?referenceResource .

    # Step 4: Find the band members of the identified person from step 1.
    ?bandMember dbo:member ?person .
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
9,65,test,"Give me the alma mater of the awardee of the reference, that is an award, to Royal Medals and figure known as the nickname of Queen's University Belfast and alma mater of the mayor, that is a politician, of Northern Ireland Forum.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. <http://dbpedia.org/resource/Queen's_University_Belfast> <http://dbpedia.org/property/nickname> ?v3 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Royal Medals""@en . <http://dbpedia.org/resource/Northern_Ireland_Forum> <http://dbpedia.org/property/leader> ?v4 . ?v6 <http://dbpedia.org/ontology/almaMater> ?result . ?v6 <http://dbpedia.org/property/awards> ?v0 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://dbpedia.org/property/nickname> ?v3 . }","```sparql
# Step 1: Find the reference that is an award related to Royal Medals
SELECT ?reference WHERE {
    ?reference <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>.
    ?reference <http://dbpedia.org/property/reference> ""Royal Medals"".
}

# Step 2: Find the awardee of this reference
SELECT ?awardee WHERE {
    ?awardEvent <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>.
    ?awardEvent <http://dbpedia.org/property/reference> ""Royal Medals"".
    ?awardEvent <http://purl.org/dc/terms/creator> ?awardee.
}

# Step 3: Determine the alma mater of this awardee
SELECT ?almaMater WHERE {
    ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>.
    ?person <http://dbpedia.org/property/almaMater> ?almaMater.
    FILTER(?person = ?awardee)
}

# Step 4: Identify the nickname of Queen's University Belfast
SELECT ?nickname WHERE {
    <http://dbpedia.org/resource/Queen%27s_University_Belfast> <http://dbpedia.org/ontology/nickname> ?nickname.
}

# Step 5: Find the figure known by this nickname
SELECT ?figure WHERE {
    ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>.
    ?person <http://dbpedia.org/property/nickname> ?nickname.
}

# Step 6: Determine the alma mater of this figure
SELECT ?almaMaterFigure WHERE {
    ?figure <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>.
    ?figure <http://dbpedia.org/property/almaMater> ?almaMaterFigure.
}

# Step 7: Identify the mayor, who is a politician, of Northern Ireland Forum
SELECT ?mayor WHERE {
    ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>.
    ?person <http://dbpedia.org/property/mayorOf> <http://dbpedia.org/resource/Northern_Ireland_Forum>.
}

# Step 8: Find the alma mater of this mayor
SELECT ?almaMaterMayor WHERE {
    ?mayor <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>.
    ?mayor <http://dbpedia.org/property/almaMater> ?almaMaterMayor.
}

# Final Query: Combine the results to get the alma mater of the awardee
SELECT ?finalAlmaMater WHERE {
    ?awardee <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>.
    ?awardee <http://dbpedia.org/property/almaMater> ?finalAlmaMater.
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
959,46,test,"Give me the native of the residence, that is a country, of Yōichi Masuzoe and member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of the person born in 1958.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v2 <http://dbpedia.org/ontology/birthYear> ""1958""^^<http://www.w3.org/2001/XMLSchema#gYear> . ?v2 <http://dbpedia.org/ontology/almaMater> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Yōichi_Masuzoe> <http://dbpedia.org/property/residence> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?result <http://dbpedia.org/ontology/team> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. }","```sparql
SELECT ?native WHERE {
    # Step 1: Find Yōichi Masuzoe's residence which is a country
    <http://dbpedia.org/resource/Y%C5%8Dichi_Masuzoe> <http://dbpedia.org/property/residence> ?residence .
    ?residence <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country> .

    # Step 2: Find the native of that country
    ?native <http://dbpedia.org/property/nationality> ?residence .
    
    # Step 3: Find the alma mater of a person born in 1958 which is Japanese and an organization, university, and educational institution
    ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person> .
    ?person <http://dbpedia.org/property/birthYear> ""1958""^^<http://www.w3.org/2001/XMLSchema#gYear> .
    ?person <http://dbpedia.org/ontology/almaMater> ?almaMater .
    ?almaMater <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organization> ;
               <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University> ;
               <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalOrganization> .
    ?almaMater <http://dbpedia.org/property/country> <http://dbpedia.org/resource/Japan> .
}
```",5,10,6,3,2,3,3,71,0,0,167,0,0.0,0
547,68,test,Give me the resting place of the child of the child of William Haliburton and resting place of the actor of the show with Emily Richard and resting place of the awardee of Knight Grand Cross of the Order of St Michael and St George.,"SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_St_Michael_and_St_George> . ?v5 <http://dbpedia.org/property/father> ""William Haliburton""@en . ?v4 <http://dbpedia.org/ontology/restingPlace> ?result . ?v0 <http://dbpedia.org/property/starring> ?v7 . ?v5 <http://dbpedia.org/ontology/child> ?v4 . ?v7 <http://dbpedia.org/ontology/restingPlace> ?result . ?v0 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emily_Richard> . ?v3 <http://dbpedia.org/ontology/restingPlace> ?result . }","```sparql
SELECT DISTINCT ?restingPlace WHERE {
  # Part 1: Resting place of the child of the child of William Haliburton
  {
    ?grandchild dbpedia-owl:parent ?child .
    ?child dbpedia-owl:parent <http://dbpedia.org/resource/William_Haliburton> .
    ?grandchild dbpedia-owl:deathPlace ?restingPlace .
  }
  
  UNION
  
  # Part 2: Resting place of the actor of the show with Emily Richard
  {
    ?show dbo:starring <http://dbpedia.org/resource/Emily_Richard> .
    ?actor dbo:starring ?show .
    ?actor dbpedia-owl:deathPlace ?restingPlace .
  }
  
  UNION
  
  # Part 3: Resting place of the awardee of Knight Grand Cross of the Order of St Michael and St George
  {
    ?person dbo:award <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_St_Michael_and_St_George> .
    ?person dbpedia-owl:deathPlace ?restingPlace .
  }
}
```",8,8,9,3,3,3,3,71,0,0,1,0,0.0,0
659,62,test,"Give me the commander in the war, that is an event and a military conflict, of the figure known, that is a military unit and an organisation, as 'Polish Horse' and military force of Napoleonic Wars and commander in the force of the native, that is an office holder, of Kingdom of Ireland.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/property/nickname> ""'Polish Horse'""@en . ?v6 <http://dbpedia.org/ontology/commander> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v4 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Kingdom_of_Ireland> . ?v3 <http://dbpedia.org/ontology/commander> ?v4 . ?v0 <http://dbpedia.org/ontology/battle> ?v6 . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Napoleonic_Wars> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. }","```sparql
SELECT ?commander WHERE {
  ?polishHorse <http://dbpedia.org/ontology/militaryUnit> ?unit .
  ?polishHorse <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation> .
  ?polishHorse rdfs:label ""Polish Horse""@en .

  ?force <http://dbpedia.org/property/militaryForce> ?polishHorse .
  ?force <http://dbpedia.org/ontology/event> ?napoleonicWar .
  ?napoleonicWar <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .

  ?commander <http://dbpedia.org/ontology/commander> ?force .
  
  ?nativeOfficeHolder <http://dbpedia.org/property/nativeCountry> <http://dbpedia.org/resource/Kingdom_of_Ireland> .
  ?nativeOfficeHolder <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder> .
  
  ?commander rdfs:label ?name .
  FILTER(CONTAINS(LCASE(?name), ""polish horse"") && CONTAINS(LCASE(?name), ""napoleonic wars""))
}
```",7,12,8,3,3,3,3,71,0,0,13,0,0.0,0
54,60,test,"Give me the child of the father of the child of Thinkhaya of Pagan and predecessor of the child, that is an office holder and a royalty, of the reference to Thihapate of Mohnyin.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Thihapate of Mohnyin""@en . ?v2 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?v3 . ?v1 <http://dbpedia.org/property/father> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://dbpedia.org/property/father> ?v2 . }","```sparql
SELECT ?result WHERE {
  # Step 1: Find Thinkhaya of Pagan's child
  ?thinkhaya dbo:child ?child1 .
  FILTER(STRSTARTS(LCASE(?thinkhaya), ""thinkhaya of pagan"")) .

  # Step 2: The father of the child is Thinkhaya himself, so we move to step 3

  # Step 3: Find the predecessor of Thinkhaya's child
  ?child1 dbo:predecessor ?predecessor .

  # Step 4: Identify Thihapate of Mohnyin and find his child who is an office holder and royalty
  ?thihapate dbo:reference ?ref .
  FILTER(STRSTARTS(LCASE(?thihapate), ""thihapate of mohnyin"")) .
  ?ref dbo:child ?child2 .
  ?child2 a dbo:OfficeHolder ;
          a dbo:Royalty .

  # Step 5: Find the child of the predecessor
  ?predecessor dbo:child ?result .
}
```",6,8,7,3,2,3,3,71,0,0,1,0,0.0,0
427,64,test,"Give me the party of the person born, that is an office holder and a politician, as the birth name of Romano Prodi and reference to the name of the party of Michele Pinto and party of Giulio Andreotti.",SELECT ?result WHERE { <http://dbpedia.org/resource/Michele_Pinto> <http://dbpedia.org/ontology/party> ?v3 . <http://dbpedia.org/resource/Giulio_Andreotti> <http://dbpedia.org/ontology/party> ?result . ?v3 <http://xmlns.com/foaf/0.1/name> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?v1 <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/property/birthName> ?v0 . },"```sparql
# Step 1: Get the birth name of Romano Prodi
SELECT ?birthName WHERE {
    <http://dbpedia.org/resource/Romano_Prodi> <http://xmlns.com/foaf/0.1/birthName> ?birthName .
}

# Step 2: Find the party affiliation for Romano Prodi
SELECT ?party WHERE {
    ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>.
    ?person <http://dbpedia.org/ontology/politician> [] .
    ?person <http://xmlns.com/foaf/0.1/birthName> ""Romano Prodi""^^<http://www.w3.org/2001/XMLSchema#string> .
    ?person <http://dbpedia.org/property/party> ?party .
}

# Step 3: Get the party affiliation for Michele Pinto
SELECT ?micheleParty WHERE {
    <http://dbpedia.org/resource/Michele_Pinto> <http://dbpedia.org/ontology/party> ?micheleParty .
}

# Step 4: Get the party affiliation for Giulio Andreotti
SELECT ?giulioParty WHERE {
    <http://dbpedia.org/resource/Giulio_Andreotti> <http://dbpedia.org/ontology/party> ?giulioParty .
}

# Final Query: Ensure Romano Prodi's party matches both Michele Pinto's and Giulio Andreotti's parties
SELECT DISTINCT ?party WHERE {
    ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>.
    ?person <http://dbpedia.org/ontology/politician> [] .
    ?person <http://xmlns.com/foaf/0.1/birthName> ""Romano Prodi""^^<http://www.w3.org/2001/XMLSchema#string> .
    ?person <http://dbpedia.org/property/party> ?party .

    <http://dbpedia.org/resource/Michele_Pinto> <http://dbpedia.org/ontology/party> ?micheleParty .
    <http://dbpedia.org/resource/Giulio_Andreotti> <http://dbpedia.org/ontology/party> ?giulioParty .

    FILTER (?party = ?micheleParty && ?party = ?giulioParty)
}
```",7,9,8,3,3,3,3,71,0,0,2,0,0.0,0
9,47,test,"Give me the alma mater of the mayor, that is a politician, of Northern Ireland Forum and alma mater of the awardee of the reference, that is an award, to Royal Medals.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/almaMater> ?result . <http://dbpedia.org/resource/Northern_Ireland_Forum> <http://dbpedia.org/property/leader> ?v2 . ?v4 <http://dbpedia.org/property/awards> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/ontology/almaMater> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Royal Medals""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. }","SELECT ?almaMater
WHERE {
  {
    ?mayor <http://dbpedia.org/ontology/politician> _:b0 .
    ?mayor <http://dbpedia.org/property/mayorFor> <http://dbpedia.org/resource/Northern_Ireland_Forum> .
    ?mayor <http://dbpedia.org/ontology/almaMater> ?almaMater .
  }
  UNION
  {
    ?awardee <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AwardRecipient> .
    ?awardee <http://dbpedia.org/property/reference> <http://dbpedia.org/resource/Royal_Medals> .
    ?awardee <http://dbpedia.org/ontology/almaMater> ?almaMater .
  }
}",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
184,63,test,"Give me the child of the child of Archduke Joseph Karl of Austria and parent of the native of the landmark at elevation, that is a settlement, of 96.0 and parent of the child of Archduke Joseph Francis of Austria.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v3 . ?v6 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Karl_of_Austria> . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Francis_of_Austria> . ?v4 <http://dbpedia.org/ontology/elevation> ""96.0""^^<http://www.w3.org/2001/XMLSchema#double> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/property/father> ?v6 . ?result <http://dbpedia.org/ontology/child> ?v2 . ?v3 <http://dbpedia.org/ontology/birthPlace> ?v4 . }","```sparql
# Step 1: Get the child of Archduke Joseph Karl of Austria
SELECT ?child1 WHERE {
    <http://dbpedia.org/resource/Archduke_Joseph_Karl_of_Austria> <http://dbpedia.org/ontology/child> ?child1 .
}

# Step 2: Get the grandchild (child of the child) of Archduke Joseph Karl
SELECT ?grandchild WHERE {
    ?child1 <http://dbpedia.org/ontology/child> ?grandchild .
    FILTER(?child1 IN {<result_of_step_1>})
}

# Step 3: Find a landmark at elevation 96.0 and its native's parent
SELECT ?parent WHERE {
    ?landmark <http://www.w3.org/2003/01/geo/wgs84_pos#lat> ?lat .
    ?landmark <http://www.w3.org/2003/01/geo/wgs84_pos#long> ?long .
    FILTER(?lat = 96.0)
    ?native <http://dbpedia.org/ontology/nationality> ?country .
    ?native <http://dbpedia.org/property/placeOfBirth> ?landmark .
    ?parent <http://dbpedia.org/ontology/child> ?native .
}

# Step 4: Get the child of Archduke Joseph Francis of Austria
SELECT ?child2 WHERE {
    <http://dbpedia.org/resource/Archduke_Joseph_Francis_of_Austria> <http://dbpedia.org/ontology/child> ?child2 .
}

# Final step: Find the common entity that satisfies all conditions
SELECT DISTINCT ?result WHERE {
    VALUES ?grandchild {<results_from_step_2>}
    VALUES ?parent {<results_from_step_3>}
    VALUES ?child2 {<results_from_step_4>}
    
    FILTER(?grandchild = ?parent && ?parent = ?child2)
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
994,65,test,"Give me the associated musical artist of the band member, that is a band and a group and an organisation, of the band, that is an organisation, of Fredrik Thordendal and band member of the person born, that is a musical artist, as Donald Maynard Dokken and associated musical artist of the associated musical artist of Watchtower (band).","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v1 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Fredrik_Thordendal> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v0 <http://dbpedia.org/property/birthName> ""Donald Maynard Dokken""@en . <http://dbpedia.org/resource/Watchtower_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
SELECT ?finalArtist WHERE {
  # Step 1: Fredrik Thordendal's band
  ?meshuggah <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/Fredrik_Thordendal> .
  
  # Step 2: Band member of Meshuggah who is also an organization and group
  ?bandMember <http://dbpedia.org/ontology/member> ?meshuggah .
  ?bandMember <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band> .
  ?bandMember <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation> .
  ?bandMember <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group> .

  # Step 3: Person born as Donald Maynard Dokken
  ?dokken <http://dbpedia.org/property/birthName> ""Donald Maynard Dokken"" .
  
  # Step 4: Musical artist associated with Dokken
  ?musicalArtist1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?dokken .

  # Step 5: Associated musical artist of Watchtower (band)
  ?watchtower <http://dbpedia.org/resource/Watchtower_(band)> .
  ?musicalArtist2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?watchtower .

  # Step 6: Associated musical artist of the result from step 5
  ?finalArtist <http://dbpedia.org/ontology/associatedMusicalArtist> ?musicalArtist2 .
}
```",7,12,8,3,3,3,3,71,0,0,1,0,0.0,0
492,48,test,"Give me the person decedent at the work of the author of French Algeria and person decedent at the capital, that is a settlement, of Algeria.",SELECT ?result WHERE { <http://dbpedia.org/resource/French_Algeria> <http://dbpedia.org/property/author> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . <http://dbpedia.org/resource/Algeria> <http://dbpedia.org/ontology/capital> ?v1 . ?v2 <http://dbpedia.org/property/author> ?v3 . },"```sparql
SELECT DISTINCT ?decedent1 ?decedent2 WHERE {
  # Find the author of ""French Algeria""
  ?book dbpedia:author ?author .
  ?book rdfs:label ""French Algeria""@en .

  # Find a work by this author and its decedent
  ?work dbpedia:author ?author .
  ?work dbo:decedent ?decedent1 .

  # Identify the capital of Algeria
  ?capital dbo:country <http://dbpedia.org/resource/Algeria> ;
           rdf:type dbo:Settlement .

  # Find the decedent associated with the capital
  ?capital dbo:decedent ?decedent2 .
}
```",5,6,6,3,2,3,3,71,0,0,16,0,0.0,0
617,51,test,Give me the parent of the child of the commander in Battle of Panium and spouse of the child of Antiochus III the Great.,SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://dbpedia.org/ontology/child> ?v2 . <http://dbpedia.org/resource/Antiochus_III_the_Great> <http://dbpedia.org/ontology/child> ?v4 . <http://dbpedia.org/resource/Battle_of_Panium> <http://dbpedia.org/ontology/commander> ?v1 . ?result <http://dbpedia.org/ontology/child> ?v2 . },"```sparql
SELECT ?parent
WHERE {
    # Step 1: Find the commander in the Battle of Panium
    ?battle dbp:commander ?commander .
    FILTER (str(?battle) = ""Battle_of_Panium"") .

    # Step 2: Find the child of that commander
    ?child dbp:parent ?commander .

    # Step 3: Determine the parent of this child
    ?child dbp:parent ?parent .

    # Step 4: Identify Antiochus III the Great and find his child
    ?antiochus dbp:name ""Antiochus_III_the_Great""@en .
    ?child2 dbp:parent ?antiochus .

    # Step 5: Determine the spouse of this child
    ?spouse dbp:spouse ?child2 .

    # Step 6: Find the common entity between steps 3 and 5
    FILTER (?parent = ?spouse)
}
```",5,5,6,3,2,3,3,71,0,0,2,0,0.0,0
16,61,test,Give me the professional in the profession of the actor of Unnatural (TV series) and person born as the birth name of the alumnus of Ohio State University.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Unnatural_(TV_series)> <http://dbpedia.org/property/starring> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v5 . ?v1 <http://dbpedia.org/property/birthName> ?v3 . ?v0 <http://dbpedia.org/property/occupation> ?v5 . ?v1 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Ohio_State_University> . },"```sparql
# Step 1: Find the actor of ""Unnatural (TV series)"" and their profession
SELECT ?actor ?profession WHERE {
    ?series <http://dbpedia.org/ontology/starring> ?actor .
    ?actor <http://dbpedia.org/ontology/profession> ?profession .
    FILTER(STR(?series) = ""Unnatural (TV series)"")
}

# Step 2: Find an alumnus of Ohio State University and their birth name
SELECT ?alumnus ?birthName WHERE {
    ?alumnus <http://dbpedia.org/ontology/alumniOf> <http://dbpedia.org/resource/OHIO_State_University> .
    ?alumnus <http://dbpedia.org/property/birthName> ?birthName .
}

# Step 3: Find a person with the same birth name
SELECT ?person WHERE {
    ?person <http://dbpedia.org/property/birthName> ?birthName .
    FILTER(?birthName IN (SELECT ?birthName WHERE {
        ?alumnus <http://dbpedia.org/ontology/alumniOf> <http://dbpedia.org/resource/OHIO_State_University> .
        ?alumnus <http://dbpedia.org/property/birthName> ?birthName .
    }))
}

# Step 4: Find a professional in the same profession as the actor
SELECT DISTINCT ?professional WHERE {
    ?actor <http://dbpedia.org/ontology/profession> ?profession .
    FILTER(STR(?series) = ""Unnatural (TV series)"")
    
    ?person <http://dbpedia.org/property/birthName> ?birthName .
    FILTER(?birthName IN (SELECT ?birthName WHERE {
        ?alumnus <http://dbpedia.org/ontology/alumniOf> <http://dbpedia.org/resource/OHIO_State_University> .
        ?alumnus <http://dbpedia.org/property/birthName> ?birthName .
    }))
    
    ?professional <http://dbpedia.org/ontology/profession> ?profession .
}
```",6,6,7,3,2,3,3,71,0,0,3,0,0.0,0
378,36,test,"Give me the war of Carl Pontus Gahn and claim to fame of the commander in the war, that is a military conflict and a societal event and an event, of Thomas Trigge.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/commander> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Thomas_Trigge> <http://dbpedia.org/ontology/battle> ?v0 . ?v1 <http://dbpedia.org/ontology/knownFor> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
SELECT ?war ?claimToFame WHERE {
  # Step 1: Find the war associated with Carl Pontus Gahn
  <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/ontology/battle> ?war .
  
  # Step 2: Find the commander in that war
  ?war <http://dbpedia.org/ontology/commander> ?commander .

  # Step 3: Determine the claim to fame of that commander
  ?commander <http://dbpedia.org/ontology/knownFor> ?claimToFame .
  
  # Step 4: Identify a military conflict and societal event involving Thomas Trigge
  ?event <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> ;
         <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent> ;
         <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event> .
  ?event <http://dbpedia.org/ontology/personInvolved> <http://dbpedia.org/resource/Thomas_Trigge> .
}
```",4,7,5,3,2,3,3,71,0,0,2,0,0.0,0
801,68,test,"Give me the associated musical artist of the writer, that is a musical artist and an artist, of 40 Dayz & 40 Nightz and producer of the work, that is a musical work and a song and a work, of the professional, that is a musical artist, in Rapper and professional in the alter ego of the true self of The Shadow.","SELECT ?result WHERE { ?v7 <http://dbpedia.org/ontology/producer> ?result . <http://dbpedia.org/resource/40_Dayz_&_40_Nightz> <http://dbpedia.org/property/writer> ?v3 . ?v5 <http://dbpedia.org/property/alterEgo> ?v4 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v5 <http://xmlns.com/foaf/0.1/givenName> ""The Shadow""@en . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/occupation> ?v4 . ?v7 <http://dbpedia.org/property/writer> ?v0 . ?v0 <http://dbpedia.org/property/occupation> ""Rapper""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. }","```sparql
# Step 1: Find The Shadow's true self
SELECT ?trueSelf WHERE {
    ?shadow <http://dbpedia.org/ontology/alterEgo> ""The Shadow"" .
    ?shadow <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
}

# Step 2: Find the professional who is a rapper and has The Shadow as their alter ego
SELECT ?professional WHERE {
    ?trueSelf <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
    ?trueSelf <http://dbpedia.org/property/profession> ""Rapper"" .
}

# Step 3: Find the work that is a musical work, song, and produced by this professional
SELECT ?work WHERE {
    ?professional <http://dbpedia.org/ontology/work> ?work .
    ?work <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork> .
    ?work <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song> .
}

# Step 4: Find the writer associated with ""40 Dayz & 40 Nightz""
SELECT ?writer WHERE {
    ?album <http://dbpedia.org/property/writer> ?writer .
    ?album <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalAlbum> .
    ?album <http://dbpedia.org/ontology/title> ""40 Dayz & 40 Nightz"" .
    ?writer <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
    ?writer <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist> .
}

# Step 5: Find the associated musical artist of this writer
SELECT ?associatedArtist WHERE {
    ?writer <http://dbpedia.org/property/associatedMusicalArtist> ?associatedArtist .
}
```",8,14,9,3,3,3,3,71,0,0,8,0,0.0,0
547,52,test,Give me the resting place of the child of the child of William Haliburton and resting place of Alan Cunningham and resting place of the actor of Enemy at the Door.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Enemy_at_the_Door> <http://dbpedia.org/property/starring> ?v5 . ?v5 <http://dbpedia.org/ontology/restingPlace> ?result . ?v3 <http://dbpedia.org/ontology/child> ?v2 . ?v3 <http://dbpedia.org/property/father> ""William Haliburton""@en . <http://dbpedia.org/resource/Alan_Cunningham> <http://dbpedia.org/ontology/restingPlace> ?result . }","```sparql
SELECT ?restingPlace WHERE {
  # Resting place of the child of the child of William Haliburton
  {
    ?grandchild <http://dbpedia.org/ontology/birthParent> ?parent.
    ?parent <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/William_Haliburton>.
    ?grandchild <http://dbpedia.org/ontology/deathPlace> ?restingPlace.
  }
  
  UNION
  
  # Resting place of Alan Cunningham
  {
    <http://dbpedia.org/resource/Alan_Cunningham> <http://dbpedia.org/ontology/deathPlace> ?restingPlace.
  }
  
  UNION
  
  # Resting place of the actor of ""Enemy at the Door""
  {
    ?actor <http://dbpedia.org/ontology/film> <http://dbpedia.org/resource/Enemy_at_the_Door>.
    ?actor <http://dbpedia.org/ontology/deathPlace> ?restingPlace.
  }
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
528,35,test,Give me the force of the person born as Narciso Campero Leyes and war of the military force of Battle of Pisagua.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> ?v1 . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/property/birthName> ""Narciso Campero Leyes""@en . ?v2 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Pisagua> . }","```sparql
# Query to get the military force of Narciso Campero Leyes
SELECT ?force WHERE {
  <http://dbpedia.org/resource/Narciso_Campero> <http://dbpedia.org/ontology/militaryForce> ?force .
}

# Query to get the war involving the military force in Battle of Pisagua
SELECT DISTINCT ?war WHERE {
  # Find the military force involved in the Battle of Pisagua
  <http://dbpedia.org/resource/Battle_of_Pisagua> <http://dbpedia.org/ontology/militaryForce> ?militaryForce .
  
  # Find wars involving this military force
  ?militaryForce <http://dbpedia.org/ontology/war> ?war .
}
```",4,4,5,2,2,3,3,71,0,0,3,0,0.0,0
92,70,test,"Give me the band of the person born as the birth name of Joseph Michael and band member of the reference, that is an artist, to Nevermore and associated musical artist of the person born, that is an artist, as the actor of Return to Nuke 'Em High Volume 1.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/birthName> ?v1 . ?v4 <http://xmlns.com/foaf/0.1/name> ""Nevermore""@en . <http://dbpedia.org/resource/Joseph_Michael> <http://dbpedia.org/property/birthName> ?v1 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Return_to_Nuke_'Em_High_Volume_1> <http://dbpedia.org/property/starring> ?v0 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/bandMember> ?v3 . ?v7 <http://dbpedia.org/property/birthName> ?v0 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?v7 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
SELECT ?band WHERE {
  ?person rdfs:label ""Warrel Dane""@en .
  ?person foaf:name ""Joseph Michael"" .
  ?person dbo:memberOfBand ?band .
  
  OPTIONAL { 
    ?referenceArtist dbo:associatedMusicalArtist ?actor .
    ?actor dbo:birthName ""Bruce Campbell"" .
    ?referenceArtist dbo:associatedWithBand <http://dbpedia.org/resource/Nevermore> .
  }
}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
184,62,test,"Give me the parent of Archduchess Ilona of Austria and parent of the native of the landmark at elevation, that is a settlement, of 96.0 and child of the child of the parent, that is a royalty, of Archduke Ladislaus Philipp of Austria.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v6 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Archduke_Ladislaus_Philipp_of_Austria> <http://dbpedia.org/ontology/parent> ?v0 . ?v4 <http://dbpedia.org/ontology/elevation> ""96.0""^^<http://www.w3.org/2001/XMLSchema#double> . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Ilona_of_Austria> . ?v3 <http://dbpedia.org/ontology/birthPlace> ?v4 . ?result <http://dbpedia.org/ontology/child> ?v3 . ?result <http://dbpedia.org/property/father> ?v6 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. }","```sparql
# Step 1: Find the parent of Archduchess Ilona of Austria who is royalty.
SELECT ?parentIlona WHERE {
    <http://dbpedia.org/resource/Archduchess_Ilona_of_Austria> <http://www.w3.org/2000/01/rdf-schema#parent> ?parentIlona .
    ?parentIlona <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Royalty> .
}

# Step 2: Find the native of a landmark at elevation 96.0 that is a settlement.
SELECT ?native WHERE {
    ?landmark <http://www.w3.org/2003/01/geo/wgs84_pos#lat> ?lat .
    ?landmark <http://www.w3.org/2003/01/geo/wgs84_pos#long> ?long .
    ?landmark <http://dbpedia.org/ontology/elevation> ""96.0""^^xsd:float .
    ?landmark <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement> .
    ?landmark <http://dbpedia.org/property/native> ?native .
}

# Step 3: Find the child of the child of the parent (that is royalty) of Archduke Ladislaus Philipp of Austria.
SELECT ?grandchild WHERE {
    ?parentLadislaus <http://www.w3.org/2000/01/rdf-schema#parent> <http://dbpedia.org/resource/Archduke_Ladislaus_Philipp_of_Austria> .
    ?parentLadislaus <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Royalty> .
    ?child1 <http://www.w3.org/2000/01/rdf-schema#parent> ?parentLadislaus .
    ?grandchild <http://www.w3.org/2000/01/rdf-schema#parent> ?child1 .
}

# Final step: Find the common entity between the parent of Archduchess Ilona and the native from Step 2, which also connects through lineage in Step 3.
SELECT DISTINCT ?commonEntity WHERE {
    VALUES (?entity) { ?parentIlona ?native }
    ?entity = ?grandchild .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
303,22,test,"Give me the party of the commander, that is a politician, in United States invasion of Panama and entity in the country, that is a country, of El Valle de Antón.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/El_Valle_de_Antón> <http://dbpedia.org/ontology/country> ?v3 . <http://dbpedia.org/resource/United_States_invasion_of_Panama> <http://dbpedia.org/ontology/commander> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/ontology/party> ?result . ?result <http://dbpedia.org/ontology/country> ?v3 . },"```sparql
SELECT ?party WHERE {
  ?commander <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/United_States_invasion_of_Panama>.
  ?commander <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>.
  ?commander <http://dbpedia.org/ontology/party> ?party.
  
  OPTIONAL {
    ?entity <http://dbpedia.org/property/location> <http://dbpedia.org/resource/El_Valle_de_Antón>.
    ?entity <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>.
    ?country <http://dbpedia.org/property/location> ?entity.
    ?country <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>.
    
    ?commander <http://dbpedia.org/ontology/entityLocatedIn> ?country.
  }
}
```",4,6,5,2,2,2,3,28,0,0,2,0,0.0,0
547,44,test,Give me the resting place of the actor of Enemy at the Door and resting place of James Burton (Egyptologist) and resting place of the awardee of Knight Grand Cross of the Order of St Michael and St George.,SELECT ?result WHERE { <http://dbpedia.org/resource/Enemy_at_the_Door> <http://dbpedia.org/property/starring> ?v4 . ?v4 <http://dbpedia.org/ontology/restingPlace> ?result . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_St_Michael_and_St_George> . <http://dbpedia.org/resource/James_Burton_(Egyptologist)> <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
# Query to get the resting place of the actor of ""Enemy at the Door""
SELECT ?actor ?restingPlace WHERE {
  ?movie dbpedia-owl:knownTitle ""Enemy at the Door""@en.
  ?movie dbpedia-owl:starring ?actor.
  ?actor dbpedia-owl:deathPlace ?restingPlace.
}

UNION

# Query to get the resting place of James Burton (Egyptologist)
SELECT ?person ?restingPlace WHERE {
  ?person rdfs:label ""James Burton (Egyptologist)""@en.
  ?person dbpedia-owl:deathPlace ?restingPlace.
}

UNION

# Query to get the resting place of an awardee of Knight Grand Cross of the Order of St Michael and St George
SELECT ?recipient ?restingPlace WHERE {
  ?award rdfs:label ""Knight Grand Cross of the Order of St Michael and St George""@en.
  ?recipient dbpedia-owl:receivedAward ?award.
  ?recipient dbpedia-owl:deathPlace ?restingPlace.
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
492,26,test,"Give me the commander in the war, that is a military conflict and an event, of the commander in Battle of Verdun.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> ?v2 . <http://dbpedia.org/resource/Battle_of_Verdun> <http://dbpedia.org/ontology/commander> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/commander> ?result . },"SELECT ?warCommander WHERE {
  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>.
  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>.
  ?war <http://dbpedia.org/ontology/commander> ?warCommander.
  
  OPTIONAL {
    <http://dbpedia.org/resource/Battle_of_Verdun> <http://dbpedia.org/ontology/commander> ?verdunCommander.
    ?verdunWar <http://dbpedia.org/ontology/commander> ?verdunCommander.
    ?verdunWar <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>.
    ?verdunWar <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>.
  }
}",3,5,4,3,1,3,3,71,92,34787,0,0.0026376903007540352,1.0,0.005261502387692659
339,17,test,Give me the father of the child of the parent of Princess Olga of Greece and Denmark and child of George I of Greece.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/George_I_of_Greece> <http://dbpedia.org/ontology/child> ?result . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Princess_Olga_of_Greece_and_Denmark> . },"```sparql
SELECT ?grandfather WHERE {
  ?princess rdf:type dbo:Person ;
            foaf:name ""Princess Olga of Greece and Denmark"" .
  ?parent1 dbo:child ?princess ;
           dbo:spouse ?parent2 .
  ?parent1 foaf:name ""George I of Greece"" .
  ?sibling dbo:childOf ?parent1, ?parent2 .
  ?grandchild dbo:child ?sibling .
  ?grandfather dbo:father ?sibling .
}
```",4,4,5,3,2,3,2,20,0,0,1,0,0.0,0
959,21,test,"Give me the manager of 2013 Júbilo Iwata season and member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of Eiji Ōtsuka.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/team> ?v2 . <http://dbpedia.org/resource/Eiji_Ōtsuka> <http://dbpedia.org/ontology/almaMater> ?v2 . <http://dbpedia.org/resource/2013_Júbilo_Iwata_season> <http://dbpedia.org/ontology/manager> ?result . },"```sparql
# Query for the manager of the 2013 Júbilo Iwata season
SELECT ?manager WHERE {
    <http://dbpedia.org/resource/2013_Júbilo_Iwata_season> <http://dbpedia.org/ontology/teamManager> ?manager .
}

# Query for the alma mater that is Japanese, an organization, a university, and an educational institution of Eiji Ōtsuka
SELECT ?almaMater WHERE {
    <http://dbpedia.org/resource/Eiji_Ōtsuka> <http://dbpedia.org/ontology/almaMater> ?almaMater .
    ?almaMater <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organization> .
    ?almaMater <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University> .
    ?almaMater <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalOrganization> .
    ?almaMater <http://dbpedia.org/property/country> <http://dbpedia.org/resource/Japan> .
}
```",3,7,4,2,2,3,3,71,0,0,1,0,0.0,0
427,71,test,"Give me the party of the father of the alumnus of Massachusetts Institute of Technology and reference to the name of the party of Michele Pinto and party of the person born, that is an office holder and a politician, as the birth name of Romano Prodi.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/party> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v8 <http://dbpedia.org/property/birthName> ?v7 . ?v4 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Massachusetts_Institute_of_Technology> . ?v4 <http://dbpedia.org/property/father> ?v5 . <http://dbpedia.org/resource/Michele_Pinto> <http://dbpedia.org/ontology/party> ?v1 . ?v1 <http://xmlns.com/foaf/0.1/name> ?v2 . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/property/birthName> ?v7 . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v8 <http://dbpedia.org/ontology/party> ?result . },"```sparql
# Step 1: Find an alumnus of MIT and their father
SELECT ?alumnus ?father WHERE {
  ?alumnus dbo:almaMater dbr:Massachusetts_Institute_of_Technology .
  ?alumnus foaf:parent ?father .
}

# Step 2: Determine the party of this father
SELECT ?party WHERE {
  ?father dbo:party ?party .
}

# Step 3: Reference the name of the party of Michele Pinto
SELECT ?micheleParty WHERE {
  dbr:Michele_Pinto dbo:party ?micheleParty .
}

# Step 4: Find Romano Prodi's birth name and a matching person who is an office holder and politician
SELECT ?birthName WHERE {
  dbr:Romano_Prodi foaf:name ?birthName .
}

SELECT ?person ?party WHERE {
  ?person foaf:name ?birthName ;
          dbo:officeHolder true ;
          dbo:politician true .
  ?person dbo:party ?party .
}
```",9,11,10,3,3,3,3,71,0,0,2,0,0.0,0
281,55,test,"Give me the war of the profession, that is a military unit, of Heather Roy and war of the awardee of Knight Grand Cross of the Order of the Bath and entity in the birth place, that is a country, of Bob Heffron.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. <http://dbpedia.org/resource/Heather_Roy> <http://dbpedia.org/property/occupation> ?v2 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> ?v5 . <http://dbpedia.org/resource/Bob_Heffron> <http://dbpedia.org/ontology/birthPlace> ?v5 . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_the_Bath> . },"```sparql
SELECT DISTINCT ?war1 ?war2 WHERE {
  # Heather Roy's Profession
  ?profession <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>.
  <http://dbpedia.org/resource/Heather_Roy> <http://dbpedia.org/property/profession> ?profession.
  
  # War of Heather Roy's Profession
  ?profession <http://dbpedia.org/ontology/war> ?war1.

  # Knight Grand Cross of the Order of the Bath Awardee
  ?awardee <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>.
  ?awardee <http://dbpedia.org/property/name> ""Knight Grand Cross of the Order of the Bath"".
  
  # War of the Awardee
  ?awardee <http://dbpedia.org/ontology/war> ?war2.

  # Bob Heffron's Birth Place
  <http://dbpedia.org/resource/Bob_Heffron> <http://dbpedia.org/property/birthPlace> ?birthPlace.
  
  # Entity in Bob Heffron's Birth Place
  ?entity <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?type.
  ?entity <http://dbpedia.org/ontology/country> ?country.
  FILTER(?country = ?birthPlace)
}
```",6,8,7,2,3,3,3,71,0,0,1,0,0.0,0
16,46,test,Give me the professional in the profession of Satomi Ishihara and spouse of the person born as the birth name of Ted McGinley.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v4 . ?v1 <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Satomi_Ishihara> <http://dbpedia.org/property/occupation> ?v4 . ?v1 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/property/birthName> ?v2 . },"```sparql
SELECT ?person WHERE {
  # Find Satomi Ishihara's profession
  <http://dbpedia.org/resource/Satomi_Ishihara> <http://purl.org/dc/terms/subject> ?profession .

  # Find the person with the same profession as Satomi Ishihara
  ?candidate <http://purl.org/dc/terms/subject> ?profession .
  
  # Find Ted McGinley's birth name and his spouse
  ?ted <http://dbpedia.org/ontology/birthName> ""Ted McGinley""^^<http://www.w3.org/2001/XMLSchema#string> .
  ?ted <http://dbpedia.org/property/spouse> ?spouse .

  # Match the candidate with the spouse of Ted McGinley
  FILTER (?candidate = ?spouse)
  
  BIND(?candidate AS ?person)
}
```",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
959,50,test,"Give me the manager of the team of Takashi Sekizuka and native of the residence, that is a country, of the leader, that is a politician, of 2010 Japanese House of Councillors election.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://dbpedia.org/property/residence> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/2010_Japanese_House_of_Councillors_election> <http://dbpedia.org/property/leader> ?v1 . ?v0 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Takashi_Sekizuka> . },"```sparql
# Step 1: Find the leader (politician) of the 2010 Japanese House of Councillors election
SELECT ?leader WHERE {
    ?election dbp:electionDate ?date .
    ?election dbp:country <http://dbpedia.org/resource/Japan> .
    ?election dbp:year ""2010""^^xsd:gYear .
    ?election dbo:winner ?leader .
    ?leader a dbo:Politician .
}

# Step 2: Determine the residence (country) of that leader
SELECT ?residence WHERE {
    ?leader foaf:nationality ?nationality .
    ?nationality dbp:countryName ?residence .
}

# Step 3: Find a manager who is native to that country
SELECT ?manager WHERE {
    ?person dbo:nationality ?nationality .
    ?nationality dbp:countryName ?residence .
    ?person a dbo:FootballManager .
}

# Step 4: Identify the team managed by Takashi Sekizuka
SELECT ?team WHERE {
    <http://dbpedia.org/resource/Takashi_Sekizuka> dbo:managedTeam ?team .
}

# Step 5: Find the manager of that team
SELECT ?manager WHERE {
    ?team dbo:currentManager ?manager .
}
```

Note: This query assumes certain properties and relationships are available in DBpedia. Adjustments may be needed based on actual data availability.",5,7,6,3,2,3,3,71,0,0,6,0,0.0,0
161,65,test,"Give me the commander in the force, that is an event, of Emilio Mola and military force of the force, that is a societal event and an event and a military conflict, of Francisco Franco and military force of the force, that is a societal event and a military conflict, of the predecessor of Indalecio Prieto.",SELECT ?result WHERE { ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v6 <http://dbpedia.org/ontology/commander> ?v0 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v4 . ?v0 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Indalecio_Prieto> . ?v4 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Franco> . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v6 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Emilio_Mola> . },"```sparql
# Step 1: Identify the force involving Emilio Mola
SELECT ?forceEmilioMola WHERE {
    ?forceEmilioMola <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>.
    ?forceEmilioMola <http://dbpedia.org/property/commander> <http://dbpedia.org/resource/Emilio_Mola>.
}

# Step 2: Find the military force associated with this event
SELECT ?militaryForce1 WHERE {
    ?forceEmilioMola <http://dbpedia.org/ontology/militaryForce> ?militaryForce1.
}

# Step 3: Determine the commander of this military force
SELECT ?commander1 WHERE {
    ?militaryForce1 <http://dbpedia.org/property/commander> ?commander1.
}

# Step 4: Identify the force involving Francisco Franco
SELECT ?forceFranciscoFranco WHERE {
    ?forceFranciscoFranco <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocialEvent>.
    ?forceFranciscoFranco <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>.
    ?forceFranciscoFranco <http://dbpedia.org/property/commander> <http://dbpedia.org/resource/Francisco_Franco>.
}

# Step 5: Find the military force associated with this event
SELECT ?militaryForce2 WHERE {
    ?forceFranciscoFranco <http://dbpedia.org/ontology/militaryForce> ?militaryForce2.
}

# Step 6: Determine the military force associated with this second force
SELECT ?militaryForce3 WHERE {
    ?militaryForce2 <http://dbpedia.org/property/militaryForce> ?militaryForce3.
}

# Step 7: Identify the predecessor of Indalecio Prieto
SELECT ?predecessor WHERE {
    <http://dbpedia.org/resource/Indalecio_Prieto> <http://dbpedia.org/ontology/predecessor> ?predecessor.
}

# Step 8: Find the force related to this predecessor
SELECT ?forcePredecessor WHERE {
    ?forcePredecessor <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocialEvent>.
    ?forcePredecessor <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>.
    ?forcePredecessor <http://dbpedia.org/property/commander> ?predecessor.
}

# Step 9: Determine the military force associated with this third force
SELECT ?militaryForce4 WHERE {
    ?forcePredecessor <http://dbpedia.org/ontology/militaryForce> ?militaryForce4.
}

# Final step: Find common commander or military force across these forces
SELECT DISTINCT ?commonCommander WHERE {
    { ?commander1 = ?commonCommander }
    UNION
    { ?militaryForce3 = ?militaryForce4 }
}
```",7,13,8,3,3,3,3,71,0,0,32,0,0.0,0
492,69,test,"Give me the commander in the war, that is a military conflict and an event, of Frédéric-Georges Herr and person decedent at the work of the author of French Algeria and person decedent at the capital, that is a settlement, of the country of Khemis Miliana District.",SELECT ?result WHERE { <http://dbpedia.org/resource/French_Algeria> <http://dbpedia.org/property/author> ?v4 . <http://dbpedia.org/resource/Khemis_Miliana_District> <http://dbpedia.org/ontology/country> ?v1 . <http://dbpedia.org/resource/Frédéric-Georges_Herr> <http://dbpedia.org/ontology/battle> ?v7 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://dbpedia.org/ontology/capital> ?v2 . ?v7 <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/deathPlace> ?v3 . ?v3 <http://dbpedia.org/property/author> ?v4 . },"```sparql
SELECT ?commander WHERE {
  # Step 1: Identify the war linked to Frédéric-Georges Herr
  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>.
  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>.
  <http://dbpedia.org/resource/Frédéric-Georges_Herr> <http://dbpedia.org/ontology/battle> ?war.

  # Step 2: Get the commander of this war
  ?war <http://dbpedia.org/property/commander> ?commander.

  # Step 3: Find the author of ""French Algeria"" and their work where Frédéric-Georges Herr is a decedent
  ?author <http://purl.org/dc/terms/subject> <http://dbpedia.org/resource/French_Algeria_(book)>.
  ?work <http://dbpedia.org/ontology/author> ?author.
  ?work <http://dbpedia.org/property/decedents> <http://dbpedia.org/resource/Frédéric-Georges_Herr>.

  # Step 4: Identify the capital of Khemis Miliana District and another person decedent
  ?capital <http://www",8,11,9,3,3,3,3,71,0,0,1,0,0.0,0
54,57,test,"Give me the child of Thinkhaya of Pagan and parent of the child of the parent of Thado Minsaw of Prome and predecessor of the child, that is an office holder and a royalty, of Thihapate of Mohnyin.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Thihapate_of_Mohnyin> . ?v5 <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/successor> ?v3 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> . <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?result . },"```sparql
# Step 1: Find the child of Thinkhaya of Pagan
SELECT ?childOfThinkhaya WHERE {
    <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?childOfThinkhaya .
}

# Step 2: Find the parent of Thado Minsaw of Prome
SELECT ?parentOfThadoMinsaw WHERE {
    <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> <http://dbpedia.org/ontology/parent> ?parentOfThadoMinsaw .
}

# Step 3: Find the child of the parent from step 2
SELECT ?childOfParent WHERE {
    ?parentOfThadoMinsaw <http://dbpedia.org/ontology/child> ?childOfParent .
}

# Step 4: Find the predecessor of this child
SELECT ?predecessor WHERE {
    ?childOfParent <http://dbpedia.org/ontology/predecessor> ?predecessor .
}

# Step 5: Find the office holder and royalty related to Thihapate of Mohnyin
SELECT ?officeHolderRoyalty WHERE {
    ?officeHolderRoyalty <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder> .
    ?officeHolderRoyalty <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
    ?officeHolderRoyalty <http://dbpedia.org/property/relatedTo> <http://dbpedia.org/resource/Thihapate_of_Mohnyin> .
}

# Step 6: Combine these relationships to find the final answer
SELECT DISTINCT ?finalAnswer WHERE {
    ?childOfThinkhaya <http://dbpedia.org/ontology/child> ?childOfThinkhaya .
    ?parentOfThadoMinsaw <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> .
    ?parentOfThadoMinsaw <http://dbpedia.org/ontology/child> ?childOfParent .
    ?childOfParent <http://dbpedia.org/ontology/predecessor> ?predecessor .
    ?officeHolderRoyalty <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder> .
    ?officeHolderRoyalty <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
    ?officeHolderRoyalty <http://dbpedia.org/property/relatedTo> <http://dbpedia.org/resource/Thihapate_of_Mohnyin> .
    FILTER(?childOfThinkhaya = ?predecessor)
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
767,67,test,"Give me the entity in Baden-Württemberg and reference to the alter ego of the persona, that is a fictional character, of Matthew Burland and alma mater of the administration of the reference to George Kilbon Nash.","SELECT ?result WHERE { ?v6 <http://dbpedia.org/property/governor> ?v0 . ?v0 <http://xmlns.com/foaf/0.1/name> ""George Kilbon Nash""@en . ?v6 <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . ?v1 <http://dbpedia.org/property/alterEgo> ?v3 . ?v1 <http://dbpedia.org/property/alterEgo> ""Matthew Burland""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?result <http://dbpedia.org/ontology/state> <http://dbpedia.org/resource/Baden-Württemberg> . }","```sparql
SELECT ?entity WHERE {
  # Entity located in Baden-Württemberg
  ?entity <http://dbpedia.org/ontology/location> ?location .
  ?location <http://www.w3.org/2000/01/rdf-schema#label> ""Baden-Württemberg""@en .

  # Reference to the alter ego of a fictional character associated with Matthew Burland
  ?fictionalCharacter <http://dbpedia.org/ontology/fictionalWork> ?work .
  ?alterEgo <http://dbpedia.org/property/alterEgo> ?fictionalCharacter .
  ?burlandFictionalCharacter <http://dbpedia.org/ontology/fictionalWork> ?fictionalCharacter .
  ?burlandFictionalCharacter <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/Matthew_Burland> .

  # Alma mater of the administration related to George Kilbon Nash
  ?administration <http://dbpedia.org/property/administrationOf> ?nash .
  ?nash <http://www.w3.org/2000/01/rdf-schema#label> ""George_Kilbon_Nash""@en .
  ?adminAlmaMater <http://dbpedia.org/ontology/almaMater> ?administration .

  # Ensure the entity matches all conditions
  FILTER(?entity = ?alterEgo && ?entity = ?adminAlmaMater)
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
492,55,test,"Give me the commander in the war, that is a military conflict and an event, of Frédéric-Georges Herr and person decedent at the work of US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite and person decedent at the capital, that is a settlement, of Algeria.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . <http://dbpedia.org/resource/Algeria> <http://dbpedia.org/ontology/capital> ?v2 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/property/author> ""US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite""@en . ?v5 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Frédéric-Georges_Herr> <http://dbpedia.org/ontology/battle> ?v5 . ?result <http://dbpedia.org/ontology/deathPlace> ?v3 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. }","```sparql
SELECT ?commander WHERE {
  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>.
  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>.

  <http://dbpedia.org/resource/Frédéric-Georges_Herr> <http://dbpedia.org/ontology/commander> ?commander.
  ?commander <http://dbpedia.org/ontology/battle> ?war.

  <http://dbpedia.org/resource/Joseph_C._Satterthwaite> <http://dbpedia.org/property/deathPlace> ?deathPlace.
  ?deathPlace <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Location>.
  ?deathPlace <http://dbpedia.org/ontology/location> ?war.

  ?capital <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>.
  ?capital <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Algeria>.
  ?capital = ?deathPlace.
}
```",6,9,7,2,3,3,3,71,0,0,1,0,0.0,0
360,24,test,"Give me the reference to the author of Blinded by the Light and native of the death place, that is a settlement, of Winnie Madikizela-Mandela.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?result <http://xmlns.com/foaf/0.1/name> ?v0 . <http://dbpedia.org/resource/Blinded_by_the_Light> <http://dbpedia.org/property/author> ?v0 . <http://dbpedia.org/resource/Winnie_Madikizela-Mandela> <http://dbpedia.org/ontology/deathPlace> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
SELECT ?authorReference ?nativeOfDeathPlace
WHERE {
  ?book dbpedia-owl:knownFor ""Blinded by the Light"" .
  ?book dbpedia-owl:author ?author .
  ?author rdfs:label ?authorLabel .
  FILTER (LANG(?authorLabel) = 'en') .
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
  
  ?winnie dbo:diedPlace ?deathPlace .
  ?deathPlace a <http://dbpedia.org/ontology/Settlement> .
  ?native wdt:P19 ?deathPlace .
}
```",4,5,5,2,2,2,3,28,0,0,1,0,0.0,0
959,39,test,"Give me the native of Japan and manager of the team of the manager, that is a sports manager, of 1998 Kashima Antlers season.",SELECT ?result WHERE { <http://dbpedia.org/resource/1998_Kashima_Antlers_season> <http://dbpedia.org/ontology/manager> ?v2 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Japan> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v0 <http://dbpedia.org/ontology/manager> ?result . ?v0 <http://dbpedia.org/ontology/manager> ?v2 . },"```sparql
SELECT ?nativeManager WHERE {
  ?season <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/Kashima_Antlers> .
  ?season <http://dbpedia.org/property/year> ""1998""^^<http://www.w3.org/2001/XMLSchema#gYear> .
  ?season <http://dbpedia.org/ontology/manager> ?manager .
  ?team <http://dbpedia.org/ontology/team> ?subsequentTeam .
  ?subsequentTeam <http://dbpedia.org/ontology/manager> ?nativeManager .
  ?nativeManager <http://dbpedia.org/property/nationality> <http://dbpedia.org/resource/Japan> .
  ?nativeManager <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager> .
}
```",4,5,5,3,2,3,3,71,0,0,6,0,0.0,0
339,19,test,Give me the child of the child of Christian IX of Denmark and father of the child of the parent of Princess Olga of Greece and Denmark.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Princess_Olga_of_Greece_and_Denmark> . ?v4 <http://dbpedia.org/property/father> ?result . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v0 <http://dbpedia.org/ontology/child> ?v4 . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Christian_IX_of_Denmark> . },"```sparql
SELECT ?grandchild ?father WHERE {
  # Step 1: Find Christian IX's children
  ?child dbo:childOf <http://dbpedia.org/resource/Christian_IX_of_Denmark> .

  # Step 2: Find grandchildren of Christian IX
  ?grandchild dbo:childOf ?child .

  # Step 3: Find Princess Olga's parent(s)
  ?parent dbo:child <http://dbpedia.org/resource/Olga_of_Greece_and_Denmark> .

  # Step 4: Find the child(ren) of that parent
  ?olgaChild dbo:childOf ?parent .

  # Step 5: Find the father of these children
  ?father dbo:spouse ?mother .
  ?olgaChild dbo:childOf ?father .
  
  FILTER(?grandchild = ?olgaChild)
}
```",5,5,6,3,2,3,2,20,0,0,1,0,0.0,0
55,25,test,"Give me the band member of the band member, that is a band and a group, of San Francisco Symphony and band of Newsted and band member of the producer, that is a band, of Used to Love Her.",SELECT ?result WHERE { <http://dbpedia.org/resource/Used_to_Love_Her> <http://dbpedia.org/ontology/producer> ?v4 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/San_Francisco_Symphony> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. <http://dbpedia.org/resource/Newsted> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT ?bandMember WHERE {
  # Step 1: Find bands associated with San Francisco Symphony
  ?entity1 <http://dbpedia.org/ontology/band> ?band .
  ?entity1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group> .
  ?entity1 <http://dbpedia.org/property/memberOf> <http://dbpedia.org/resource/San_Francisco_Symphony> .

  # Step 2: Find bands associated with Newsted
  ?entity2 <http://dbpedia.org/ontology/band> ?bandNewsted .
  ?entity2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group> .
  ?entity2 <http://dbpedia.org/property/memberOf> <http://dbpedia.org/resource/Jason_Newsted> .

  # Step 3: Find the producer of ""Used to Love Her""
  ?producer <http://dbpedia.org/ontology/produced> <http://dbpedia.org/resource/Used_to_Love_Her> .
  
  # Step 4: Find common band members
  ?bandMember <http://dbpedia.org/property/memberOf> ?band .
  ?bandMember <http://dbpedia.org/property/memberOf> ?bandNewsted .
  ?bandMember <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .

  # Ensure the producer is also a band member
  ?bandMember <http://dbpedia.org/property/memberOf> ?producer .
}
```",5,8,6,2,3,2,3,28,0,0,1,0,0.0,0
547,58,test,Give me the resting place of the actor of Enemy at the Door and resting place of James Burton (Egyptologist) and resting place of the awardee of the award of Gerald Graham.,SELECT ?result WHERE { <http://dbpedia.org/resource/Enemy_at_the_Door> <http://dbpedia.org/property/starring> ?v5 . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/James_Burton_(Egyptologist)> <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Gerald_Graham> <http://dbpedia.org/property/awards> ?v1 . ?v2 <http://dbpedia.org/property/awards> ?v1 . ?v5 <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
SELECT DISTINCT ?restingPlace WHERE {
  # Resting place of the actor in ""Enemy at the Door""
  ?actor dbo:actedIn <http://dbpedia.org/resource/Enemy_at_the_Door> .
  ?actor dbo:deathPlace ?restingPlace .

  UNION

  # Resting place of James Burton (Egyptologist)
  ?james dbr:James_Burton_(Egyptologist) .
  ?james dbo:deathPlace ?restingPlace .

  UNION

  # Resting place of the awardee of Gerald Graham
  ?award dbo:recipient ?awardee .
  ?award dbo:name ""Gerald Graham"" .
  ?awardee dbo:deathPlace ?restingPlace .
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
488,59,test,"Give me the birth place of the commander in the war, that is a military conflict and an event and a societal event, of Saitō Hajime and death place of the father, that is a politician, of the father, that is an office holder, of Matsudaira Tadamasa.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/commander> ?v2 . <http://dbpedia.org/resource/Matsudaira_Tadamasa> <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Saitō_Hajime> <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v5 <http://dbpedia.org/ontology/deathPlace> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/property/father> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?birthPlace ?deathPlace WHERE {
  # Part 1: Birthplace of the commander in the war involving Saitō Hajime
  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event> .
  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent> .
  <http://dbpedia.org/resource/Saitō_Hajime> <http://dbpedia.org/ontology/battle> ?war .
  
  ?commander <http://dbpedia.org/ontology/commander> ?war .
  ?commander <http://www.w3.org/2000/01/rdf-schema#label> ""Commander""@en .
  ?commander <http://dbpedia.org/ontology/birthPlace> ?birthPlace .

  # Part 2: Death place of the father, who is a politician, of Matsudaira Tadamasa's father
  <http://dbpedia.org/resource/Matsudaira_Tadamasa> <http://dbpedia.org/property/father> ?officeHolder .
  ?officeHolder <http://dbpedia.org/ontology/officeroledby> ?position .
  
  ?officeHolder <http://dbpedia.org/property/father> ?politicianFather .
  ?politicianFather <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .
  ?politicianFather <http://dbpedia.org/ontology/deathPlace> ?deathPlace .
}
```",6,11,7,3,2,3,3,71,0,0,1,0,0.0,0
528,48,test,"Give me the force of the person born as Narciso Campero Leyes and war of the military force of the entity, that is a societal event, in Chile.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/property/birthName> ""Narciso Campero Leyes""@en . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Chile> . }","```sparql
# Query 1: Retrieve the force of Narciso Campero Leyes
SELECT ?force WHERE {
    <http://dbpedia.org/resource/Narciso_Campero_Leyes> <http://dbpedia.org/ontology/militaryForce> ?force .
}

# Query 2: Retrieve wars (military forces) involved in societal events in Chile
SELECT DISTINCT ?event ?force WHERE {
    ?event <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent> .
    ?event <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Chile> .
    ?event <http://dbpedia.org/ontology/militaryForce> ?force .
}
```",5,6,6,3,2,3,3,71,0,0,4,0,0.0,0
488,51,test,"Give me the death place of the father, that is a politician, of Yūki Hideyasu and administration of the father of the spouse, that is a royalty, of Tokugawa Masako.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Tokugawa_Masako> . <http://dbpedia.org/resource/Yūki_Hideyasu> <http://dbpedia.org/property/father> ?v4 . ?v4 <http://dbpedia.org/ontology/deathPlace> ?result . ?v1 <http://dbpedia.org/property/father> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/property/leader> ?v2 . },"```sparql
SELECT ?deathPlace ?admin
WHERE {
  # Part 1: Yūki Hideyasu's father who is a politician
  ?yukiFather <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Y%C5%ABki_Hideyasu> .
  ?yukiFather <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .

  # Part 2: Death place of Yūki Hideyasu's father
  ?yukiFather <http://dbpedia.org/property/deathPlace> ?deathPlace .

  # Part 3: Tokugawa Masako's spouse who is royalty
  ?tokugawaSpouse <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Tokugawa_Masako> .
  ?tokugawaSpouse <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .

  # Part 4: Administration of Tokugawa Masako's spouse's father
  ?spouseFather <http://dbpedia.org/ontology/father> ?tokugawaSpouse .
  ?spouseFather <http://dbpedia.org/property/administration> ?admin .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
427,57,test,"Give me the reference to Partito Popolare Italiano and party of the father of the alumnus of Massachusetts Institute of Technology and party of the person born, that is an office holder and a politician, as Romano Antonio Prodi.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/party> ?result . ?v3 <http://dbpedia.org/property/birthName> ""Romano Antonio Prodi""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://xmlns.com/foaf/0.1/name> ""Partito Popolare Italiano""@en . ?v5 <http://dbpedia.org/ontology/party> ?result . ?v0 <http://dbpedia.org/property/father> ?v5 . ?v0 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Massachusetts_Institute_of_Technology> . }","```sparql
# Step 1: Identify the alumnus of Massachusetts Institute of Technology
SELECT ?alumnus WHERE {
    ?alumnus <http://dbpedia.org/ontology/alumni> <http://dbpedia.org/resource/Massachusetts_Institute_of_Technology>.
}

# Step 2: Determine the father of that alumnus
SELECT ?father WHERE {
    ?alumnus <http://dbpedia.org/property/father> ?father.
}

# Step 3: Find out which party the father is associated with
SELECT ?partyFather WHERE {
    ?father <http://dbpedia.org/ontology/party> ?partyFather.
}

# Step 4: Identify Romano Antonio Prodi and confirm his roles as an office holder and politician
SELECT ?prodi WHERE {
    ?prodi <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>.
    ?prodi <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>.
    ?prodi <http://dbpedia.org/property/birthName> ""Romano Antonio Prodi"".
}

# Step 5: Determine the party associated with Romano Antonio Prodi
SELECT ?partyProdi WHERE {
    ?prodi <http://dbpedia.org/ontology/party> ?partyProdi.
}

# Final step: Find references to Partito Popolare Italiano in relation to both parties identified above
SELECT ?reference WHERE {
    VALUES ?party { ?partyFather ?partyProdi }
    ?reference <http://dbpedia.org/property/referenceTo> <http://dbpedia.org/resource/Partito_Popolare_Italiano>.
    ?reference <http://dbpedia.org/ontology/party> ?party.
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
498,8,test,"Give me the band of the member, that is an artist, of Mortician (band) and band of Malevolent Creation.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Mortician_(band)> <http://dbpedia.org/ontology/bandMember> ?v0 . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Malevolent_Creation> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
# Step 1: Get members of Mortician (band)
SELECT ?member WHERE {
    ?member <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/Mortician_(band)> .
}

# Step 2: Get members of Malevolent Creation
SELECT ?member WHERE {
    ?member <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/Malevolent_Creation> .
}

# Step 3: Find common member between Mortician and Malevolent Creation
SELECT DISTINCT ?commonMember WHERE {
    ?commonMember <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/Mortician_(band)> .
    ?commonMember <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/Malevolent_Creation> .
}

# Step 4: Get bands of the common member
SELECT DISTINCT ?band WHERE {
    ?commonMember <http://dbpedia.org/ontology/member> ?band .
}
```",3,4,4,2,2,2,2,9,0,0,1,0,0.0,0
485,23,test,"Give me the entity in the region, that is a country, of Western European Time and entity in the birth place, that is a region, of Joseph Whitaker (naturalist).",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Western_European_Time> . ?result <http://dbpedia.org/ontology/country> ?v1 . <http://dbpedia.org/resource/Joseph_Whitaker_(naturalist)> <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?result <http://dbpedia.org/ontology/country> ?v2 . },"```sparql
# Query for entities in the country of Western European Time
SELECT ?entity WHERE {
  ?region <http://dbpedia.org/ontology/country> ?country .
  ?country <http://www.w3.org/2006/timezone#timezone> <http://dbpedia.org/resource/Western_European_Time> .
  ?entity <http://dbpedia.org/ontology/country> ?country .
}

UNION

# Query for entities in the birthplace region of Joseph Whitaker (naturalist)
SELECT ?entity WHERE {
  <http://dbpedia.org/resource/Joseph_Whitaker_(naturalist)> <http://dbpedia.org/property/birthPlace> ?region .
  ?entity <http://dbpedia.org/ontology/birthPlace> ?region .
}
```",4,6,5,2,2,2,3,28,0,0,357,0,0.0,0
547,30,test,Give me the resting place of James Burton (Egyptologist) and resting place of Simon Cadell and resting place of the awardee of Knight Grand Cross of the Order of St Michael and St George.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/James_Burton_(Egyptologist)> <http://dbpedia.org/ontology/restingPlace> ?result . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_St_Michael_and_St_George> . <http://dbpedia.org/resource/Simon_Cadell> <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
SELECT ?person ?restingPlace WHERE {
  { 
    <http://dbpedia.org/resource/James_Burton_(Egyptologist)> dbpedia-owl:restingPlace ?restingPlace .
    BIND(<http://dbpedia.org/resource/James_Burton_(Egyptologist)> AS ?person)
  }
  UNION
  { 
    <http://dbpedia.org/resource/Simon_Cadell> dbpedia-owl:restingPlace ?restingPlace .
    BIND(<http://dbpedia.org/resource/Simon_Cadell> AS ?person)
  }
  UNION
  {
    ?awardee dbo:honoraryTitle dbr:Knight_Grand_Cross_of_the_Order_of_St_Michael_and_St_George ;
             dbpedia-owl:restingPlace ?restingPlace .
    BIND(?awardee AS ?person)
  }
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
492,40,test,Give me the person decedent at the work of the author of French Algeria and person decedent at Algiers and commander in Franco-Hova Wars.,SELECT ?result WHERE { <http://dbpedia.org/resource/Franco-Hova_Wars> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . <http://dbpedia.org/resource/French_Algeria> <http://dbpedia.org/property/author> ?v2 . ?v1 <http://dbpedia.org/property/author> ?v2 . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Algiers> . },"```sparql
SELECT ?person WHERE {
  # Find the author of ""French Algeria""
  ?work dcterms:creator ?author .
  ?work rdfs:label ""French Algeria""@en .

  # The person is a decedent at the work of this author
  ?decedentAtWork dbpedia-owl:decedentAtWork ?work .
  
  # The same person is also a decedent at Algiers
  ?decedentAtPlace dbpedia-owl:decedentAtPlace <http://dbpedia.org/resource/Algiers> .

  # Ensure the person matches both conditions above
  FILTER (?person = ?decedentAtWork && ?person = ?decedentAtPlace)

  # The same person was a commander in the Franco-Hova Wars
  ?francoHovaWars dbpedia-owl:commander ?person .
  ?francoHovaWars rdfs:label ""Franco-Hova Wars""@en .

}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
54,66,test,"Give me the predecessor of the child, that is an office holder and a royalty, of the reference to Thihapate of Mohnyin and parent of the child of Narapati I of Ava and child of the father of Soe Min Wimala Dewi.","SELECT ?result WHERE { ?v6 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Narapati_I_of_Ava> . ?v2 <http://dbpedia.org/property/father> ?v1 . ?v6 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Soe_Min_Wimala_Dewi> <http://dbpedia.org/property/father> ?v3 . ?v3 <http://dbpedia.org/ontology/child> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://xmlns.com/foaf/0.1/name> ""Thihapate of Mohnyin""@en . ?result <http://dbpedia.org/ontology/successor> ?v2 . }","```sparql
SELECT ?predecessor WHERE {
  ?child a dbo:OfficeHolder ;
         dbo:royalty ""true""^^xsd:boolean ;
         dbo:parent <http://dbpedia.org/resource/Thihapate_of_Mohnyin> .
  
  ?office dbo:holder ?child ;
          dbo:predecessor ?predecessor .

  ?narapatiI a dbo:Person ;
             dbo:childOf <http://dbpedia.org/resource/Narapati_I_of_Ava> ;
             dbo:parent ?child .

  ?soeMinWimalaDewi a dbo:Person ;
                    dbo:father ?child .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
92,50,test,"Give me the associated musical artist of the person born, that is an artist, as the actor of Return to Nuke 'Em High Volume 1 and band of the person born as Joseph Michael Furney.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/bandMember> ?v3 . ?v3 <http://dbpedia.org/property/birthName> ""Joseph Michael Furney""@en . ?v4 <http://dbpedia.org/property/birthName> ?v0 . <http://dbpedia.org/resource/Return_to_Nuke_'Em_High_Volume_1> <http://dbpedia.org/property/starring> ?v0 . }","```sparql
# Part 1: Find the person who is both an artist and the actor of ""Return to Nuke 'Em High Volume 1""
SELECT ?person WHERE {
    ?person <http://dbpedia.org/ontology/birthPlace> ?birthPlace.
    ?person <http://dbpedia.org/ontology/actor> <http://dbpedia.org/resource/Return_to_Nuke_'Em_High_Volume_1>.
    ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>.
}

# Part 2: Find the band associated with Joseph Michael Furney
SELECT ?band WHERE {
    ?furney <http://dbpedia.org/property/birthName> ""Joseph Michael Furney"".
    ?furney <http://dbpedia.org/ontology/memberOf> ?band.
}

# Combine results to get the associated musical artist of the first person and the band of Joseph Michael Furney
SELECT ?associatedArtist, ?band WHERE {
    # Find the associated musical artist for the person from Part 1
    ?person <http://dbpedia.org/ontology/associatedMusicalArtist> ?associatedArtist.
    
    # Use results from Part 2 to get the band of Joseph Michael Furney
    ?furney <http://dbpedia.org/property/birthName> ""Joseph Michael Furney"".
    ?furney <http://dbpedia.org/ontology/memberOf> ?band.

    # Ensure the person is the same as identified in Part 1
    FILTER(?person = ?actor)
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
54,27,test,"Give me the predecessor of the child, that is an office holder and a royalty, of the reference to Thihapate of Mohnyin.","SELECT ?result WHERE { ?v1 <http://xmlns.com/foaf/0.1/name> ""Thihapate of Mohnyin""@en . ?v2 <http://dbpedia.org/property/father> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/successor> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
SELECT ?child ?predecessor WHERE {
  ?thihapate dbo:reference ""Thihapate of Mohnyin"" .
  ?thihapate dbo:child ?child .
  ?child a dbo:OfficeHolder ;
         a dbo:Royalty .
  ?child dbo:positionHeld ?position .
  ?predecessor dbo:positionHeld ?position .
  FILTER(?predecessor != ?child)
}
```",3,5,4,3,1,3,3,71,0,0,1,0,0.0,0
314,25,test,Give me the awardee of the award of Sergei Makovetsky and commander in Spanish Civil War and person deceased at the headquarter of House of Sombrerete.,SELECT ?result WHERE { <http://dbpedia.org/resource/Spanish_Civil_War> <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Sergei_Makovetsky> <http://dbpedia.org/property/awards> ?v4 . ?result <http://dbpedia.org/ontology/restingPlace> ?v3 . ?result <http://dbpedia.org/property/awards> ?v4 . <http://dbpedia.org/resource/House_of_Sombrerete> <http://dbpedia.org/ontology/location> ?v3 . },"```sparql
SELECT ?person WHERE {
  ?award <http://dbpedia.org/ontology/recipient> ?person .
  ?award <http://dbpedia.org/property/associatedWith> <http://dbpedia.org/resource/Sergei_Makovetsky> .

  ?civilWar <http://dbpedia.org/ontology/commander> ?person .
  ?civilWar <http://www.w3.org/2002/07/owl#sameAs> <http://dbpedia.org/resource/Spanish_Civil_War> .

  ?person <http://dbpedia.org/property/deceasedAt> ?location .
  ?location <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/House_of_Sombrerete> .
}
```",5,5,6,2,3,2,3,28,0,0,1,0,0.0,0
767,60,test,"Give me the entity in the administration, that is a settlement, of the writer of Where It's At (Dustin Lynch album) and reference to the alter ego of the persona, that is a fictional character, of Matthew Burland.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/alterEgo> ""Matthew Burland""@en . ?v2 <http://dbpedia.org/property/leaderParty> ?v3 . <http://dbpedia.org/resource/Where_It's_At_(Dustin_Lynch_album)> <http://dbpedia.org/property/writer> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://xmlns.com/foaf/0.1/name> ?v1 . ?v0 <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://dbpedia.org/ontology/state> ?v2 . }","```sparql
# Step 1: Find the writer of ""Where It's At"" by Dustin Lynch
SELECT ?writer WHERE {
    ?album dct:creator ?writer .
    ?album foaf:name ""Where It's At (Dustin Lynch album)"" .
}

# Step 2: Find the administration (settlement) related to this writer
SELECT ?administration WHERE {
    ?writer dbo:residenceLocation ?administration .
    ?administration a dbo:Settlement .
}

# Step 3: Determine Matthew Burland's alter ego, which is a fictional character
SELECT ?alterEgo WHERE {
    ?burland dbo:fictionalCharacter ?alterEgo .
    ?burland foaf:name ""Matthew Burland"" .
}

# Step 4: Find an entity in the settlement that relates to both the writer and the fictional character
SELECT ?entity WHERE {
    ?entity dbo:location ?administration .
    ?writer dbo:residenceLocation ?administration .
    ?alterEgo dbo:relatedEntity ?entity .
}
```",6,8,7,3,2,3,3,71,0,0,8,0,0.0,0
547,59,test,Give me the resting place of the child of the child of William Haliburton and resting place of the actor of the show with Emily Richard.,"SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> ""William Haliburton""@en . ?v0 <http://dbpedia.org/property/starring> ?v5 . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . ?v0 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emily_Richard> . ?v5 <http://dbpedia.org/ontology/restingPlace> ?result . ?v3 <http://dbpedia.org/ontology/child> ?v2 . }","```sparql
SELECT ?restingPlace WHERE {
  # Part 1: Resting place of the child's child of William Haliburton
  {
    ?grandchild <http://dbpedia.org/ontology/birthParent> ?parent.
    ?parent <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/William_Haliburton>.
    ?grandchild <http://dbpedia.org/ontology/deathPlace> ?restingPlace.
  }
  
  UNION
  
  # Part 2: Resting place of the actor in a show with Emily Richard
  {
    ?show <http://dbpedia.org/ontology/starring> ?actor.
    ?show <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/E._Richard>.
    ?actor <http://dbpedia.org/ontology/deathPlace> ?restingPlace.
  }
}
```",6,6,7,3,2,3,3,71,0,0,1,0,0.0,0
251,27,test,"Give me the death place of the author of The Twelve Abbots of Challant and administration of the ruling party, that is a political party and an organisation, in Sicily and location of Battle of Marengo.",SELECT ?result WHERE { <http://dbpedia.org/resource/Sicily> <http://dbpedia.org/property/leaderParty> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/The_Twelve_Abbots_of_Challant> <http://dbpedia.org/property/author> ?v0 . <http://dbpedia.org/resource/Battle_of_Marengo> <http://dbpedia.org/ontology/place> ?result . ?result <http://dbpedia.org/property/leaderParty> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. },"```sparql
SELECT DISTINCT ?deathPlace ?partyAdminLocation ?organizationAdminLocation ?battleLocation WHERE {
  # Part 1: Death place of the author of ""The Twelve Abbots of Challant""
  ?author dbo:book ?book .
  ?book rdfs:label ""The Twelve Abbots of Challant""@en .
  ?author dbo:deathPlace ?deathPlace .

  # Part 2: Administration office of the ruling party in Sicily
  ?party a dbo:PoliticalParty ;
         dbo:country <http://dbpedia.org/resource/Sicily> ;
         dbo:headquarters ?partyAdminLocation .

  # Part 3: Administration office of a political party that is also an organization
  ?organization a dbo:PoliticalParty, dbo:Organization ;
                dbo:headquarters ?organizationAdminLocation .

  # Part 4: Location of the Battle of Marengo
  ?battle dbo:location ?battleLocation .
  ?battle rdfs:label ""Battle of Marengo""@en .
}
```",5,7,6,2,3,2,3,28,0,0,1,0,0.0,0
747,20,test,Give me the person born on 1985-04-29 and band of the writer of Apollo (Hardwell song).,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthDate> ""1985-04-29""^^<http://www.w3.org/2001/XMLSchema#date> . <http://dbpedia.org/resource/Apollo_(Hardwell_song)> <http://dbpedia.org/property/writer> ?v2 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
# Step 1: Find the writer of Apollo (Hardwell song)
SELECT ?writer WHERE {
    <http://dbpedia.org/resource/Apollo_(Hardwell_song)> <http://purl.org/dc/terms/creator> ?writer .
}

# Step 2: Find a person born on 1985-04-29 and their band
SELECT DISTINCT ?person ?band WHERE {
    # Find the writer from step 1
    ?writer <http://dbpedia.org/resource/Apollo_(Hardwell_song)> <http://purl.org/dc/terms/creator> .
    
    # Find a person born on 1985-04-29 who is in a band
    ?person <http://www.w3.org/2000/01/rdf-schema#label> ?name ;
            <http://dbpedia.org/ontology/birthDate> ""1985-04-29""^^<http://www.w3.org/2001/XMLSchema#date> .
    
    # Check if this person is in a band
    ?person <http://dbpedia.org/property/memberOfBand> ?band .

    # Link the person to the writer (if any connection exists)
    OPTIONAL { ?writer <http://dbpedia.org/ontology/knows> ?person . }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
712,17,test,Give me the capital of South Russia (1919–1920) and resting place of the awardee of the show of Soviet Union.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/awards> ?v0 . ?v3 <http://dbpedia.org/ontology/restingPlace> ?result . ?v0 <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/Soviet_Union> . <http://dbpedia.org/resource/South_Russia_(1919–1920)> <http://dbpedia.org/ontology/capital> ?result . },"```sparql
SELECT ?capital ?restingPlace WHERE {
  ?southRussia dbo:type dbr:South_Russia_(1919%E2%80%931920);
               dbo:capital ?capital.
  
  ?person dbo:award dbr:Soviet_Union_show_award;
          dbo:deathPlace ?restingPlace.

  FILTER(?capital = ?restingPlace)
}
```",4,4,5,3,2,3,2,20,0,0,1,0,0.0,0
16,56,test,Give me the person born as the birth name of the alumnus of Ohio State University and spouse of the person born as Ted Martin McGinley and professional in Actress.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://dbpedia.org/property/birthName> ""Ted Martin McGinley""@en . ?result <http://dbpedia.org/property/occupation> ""Actress""@en . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Ohio_State_University> . ?result <http://dbpedia.org/property/birthName> ?v1 . }","```sparql
SELECT ?person WHERE {
    ?alumnus <http://dbpedia.org/ontology/alumni> <http://dbpedia.org/resource/Ohio_State_University>;
             <http://xmlns.com/foaf/0.1/name> ?name.
    
    ?spouse <http://dbpedia.org/property/spouse> <http://dbpedia.org/resource/Ted_Martin_McGinley>;
            <http://purl.org/dc/terms/profession> ""Actress""@en;
            <http://xmlns.com/foaf/0.1/name> ?spouseName.
    
    ?alumnus <http://xmlns.com/foaf/0.1/marriedTo> ?spouse.
    
    ?person <http://dbpedia.org/ontology/birthName> ?birthName;
             <http://www.w3.org/1999/02/22-rdf-syntax-ns#sameAs> ?alumnus.

}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
959,54,test,"Give me the member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of Eiji Ōtsuka and native of the residence, that is a country, of the leader, that is a politician, of 2010 Japanese House of Councillors election and manager of 2013 Júbilo Iwata season.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?v1 <http://dbpedia.org/property/residence> ?v4 . ?result <http://dbpedia.org/ontology/birthPlace> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. <http://dbpedia.org/resource/Eiji_Ōtsuka> <http://dbpedia.org/ontology/almaMater> ?v2 . ?result <http://dbpedia.org/ontology/team> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/2013_Júbilo_Iwata_season> <http://dbpedia.org/ontology/manager> ?result . <http://dbpedia.org/resource/2010_Japanese_House_of_Councillors_election> <http://dbpedia.org/property/leader> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. },"```sparql
SELECT ?member WHERE {
    # Step 1: Get the leader (politician) of the 2010 Japanese House of Councillors election
    ?leader <http://dbpedia.org/ontology/politician> _:a .
    ?election <http://dbpedia.org/property/electionYear> ""2010""^^xsd:gYear .
    ?election <http://dbpedia.org/property/country> <http://dbpedia.org/resource/Japan> .
    ?leader <http://dbpedia.org/ontology/officeHolder> _:b .
    _:b <http://dbpedia.org/ontology/election> ?election .

    # Step 2: Get the country of residence for this leader
    ?leader <http://dbpedia.org/property/residence> ?residence .
    ?residence <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country> .

    # Step 3: Find the manager of the 2013 Júbilo Iwata season
    ?manager <http://dbpedia.org/property/team> <http://dbpedia.org/resource/Júbilo_Iwata> .
    ?season <http://dbpedia.org/ontology/sportSeason> ""2013""^^xsd:gYear .
    ?manager <http://dbpedia.org/ontology/manages> ?season .

    # Step 4: Identify Eiji Ōtsuka's alma mater
    <http://dbpedia.org/resource/Eiji_Ōtsuka> <http://dbpedia.org/property/almaMater> ?almaMater .
    ?almaMater <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation> ;
               <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University> ;
               <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalOrganization> .
    ?almaMater <http://dbpedia.org/property/country> <http://dbpedia.org/resource/Japan> .

    # Step 5: Return a member of this alma mater
    ?member <http://dbpedia.org/ontology/memberOf> ?almaMater .
}
```",6,12,7,3,3,3,3,71,0,0,1,0,0.0,0
801,47,test,"Give me the producer of the work, that is a musical work and a song and a work, of the professional, that is a musical artist, in Rapper and professional in the alter ego of The Shadow.","SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?result <http://dbpedia.org/property/occupation> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/property/occupation> ""Rapper""@en . ?v4 <http://dbpedia.org/property/writer> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v4 <http://dbpedia.org/ontology/producer> ?result . }","```sparql
SELECT ?producer WHERE {
  ?artist <http://dbpedia.org/ontology/profession> <http://dbpedia.org/resource/Rapper> .
  ?artist <http://dbpedia.org/property/alterEgo> ""The Shadow"" .
  ?work <http://purl.org/dc/terms/creator> ?artist ;
        <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork> ;
        <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song> .
  ?work <http://purl.org/dc/terms/work> ?workGeneral .
  ?workGeneral <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work> .
  ?work <http://dbpedia.org/property/producer> ?producer .
}
```",5,9,6,3,2,3,3,71,0,0,473,0,0.0,0
488,70,test,"Give me the administration of the father of the spouse, that is a royalty, of Tokugawa Masako and birth place of the commander in Boshin War and death place of the father, that is a politician, of the father, that is an office holder, of Matsudaira Tadamasa.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Tokugawa_Masako> . ?v1 <http://dbpedia.org/property/father> ?v3 . ?v7 <http://dbpedia.org/ontology/deathPlace> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Boshin_War> <http://dbpedia.org/ontology/commander> ?v4 . ?v4 <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/property/leader> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/father> ?v7 . <http://dbpedia.org/resource/Matsudaira_Tadamasa> <http://dbpedia.org/property/father> ?v0 . },"```sparql
# Step 1: Identify Tokugawa Masako's spouse
SELECT ?spouse WHERE {
    <http://dbpedia.org/resource/Tokugawa_Masako> <http://dbpedia.org/ontology/spouse> ?spouse .
}

# Step 2: Find the father of Tokugawa Masako's spouse
SELECT ?father WHERE {
    ?spouse <http://dbpedia.org/property/father> ?father .
}

# Step 3: Determine if the father is royalty and find his administration
SELECT ?administration WHERE {
    ?father <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
    ?father <http://dbpedia.org/property/administration> ?administration .
}

# Step 4: Identify the commander in the Boshin War
SELECT ?commander WHERE {
    <http://dbpedia.org/resource/Boshin_War> <http://dbpedia.org/ontology/commander> ?commander .
}

# Step 5: Find the birthplace of the Boshin War commander
SELECT ?birthPlace WHERE {
    ?commander <http://dbpedia.org/property/birthPlace> ?birthPlace .
}

# Step 6: Identify Matsudaira Tadamasa's father
SELECT ?fatherTadamasa WHERE {
    <http://dbpedia.org/resource/Matsudaira_Tadamasa> <http://dbpedia.org/ontology/father> ?fatherTadamasa .
}

# Step 7: Determine if Matsudaira Tadamasa's grandfather is a politician and find his death place
SELECT ?deathPlace WHERE {
    ?fatherTadamasa <http://dbpedia.org/property/father> ?grandfather .
    ?grandfather <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .
    ?grandfather <http://dbpedia.org/property/deathPlace> ?deathPlace .
}

# Step 8: Identify Matsudaira Tadamasa's great-grandfather as an office holder and find his birthplace
SELECT ?birthPlaceGreatGrandfather WHERE {
    ?grandfather <http://dbpedia.org/property/father> ?greatGrandfather .
    ?greatGrandfather <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder> .
    ?greatGrandfather <http://dbpedia.org/property/birthPlace> ?birthPlaceGreatGrandfather .
}

# Final query to combine results
SELECT DISTINCT ?administration, ?birthPlace WHERE {
    # Administration of the father of Tokugawa Masako's spouse
    ?spouse <http://dbpedia.org/property/father> ?father .
    ?father <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
    ?father <http://dbpedia.org/property/administration> ?administration .

    # Birthplace of the commander in Boshin War
    <",8,11,9,3,3,3,3,71,0,0,1,0,0.0,0
285,16,test,Give me the parent of the child of Tina Onassis Niarchos and spouse of the professional in .,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v3 . ?v3 <http://dbpedia.org/property/occupation> """"@en . ?v2 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Tina_Onassis_Niarchos> <http://dbpedia.org/ontology/child> ?v2 . }","```sparql
SELECT ?parent WHERE {
  ?child <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/Tina_Onassis_Niarchos>.
  ?child <http://dbpedia.org/ontology/birthParent> ?parent.
}
```",4,4,5,2,2,3,2,20,0,0,2,0,0.0,0
659,70,test,"Give me the military force of the force, that is a societal event and an event and a military conflict, of the reference to Rutger Jan Schimmelpenninck and commander in the force of Arthur Wellesley, 1st Duke of Wellington and commander in the war, that is an event and a military conflict, of the figure known, that is a military unit and an organisation, as 'Polish Horse'.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/nickname> ""'Polish Horse'""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v0 <http://dbpedia.org/ontology/battle> ?v7 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v4 <http://dbpedia.org/ontology/commander> ?result . ?v7 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v4 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Arthur_Wellesley,_1st_Duke_of_Wellington> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://xmlns.com/foaf/0.1/name> ""Rutger Jan Schimmelpenninck""@en . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://dbpedia.org/ontology/commander> ?v1 . }","```sparql
SELECT ?militaryForce WHERE {
  # Step 1: Identify 'Polish Horse'
  ?polishHorse <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>.
  ?polishHorse <http://www.w3.org/2000/01/rdf-schema#label> ""Polish Horse""@en.

  # Step 2: Find the war associated with 'Polish Horse'
  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>.
  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>.
  ?polishHorse <http://dbpedia.org/property/foughtIn> ?war.

  # Step 3: Find Arthur Wellesley, 1st Duke of Wellington as commander in that war
  ?welshCommander <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>.
  ?welshCommander <http://dbpedia.org/property/name> ""Arthur Wellesley, 1st Duke of Wellington""@en.
  ?war <http://dbpedia.org/ontology/commander> ?welshCommander.

  # Step 4: Identify the force commanded by Arthur Wellesley
  ?force <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>.
  ?welshCommander <http://dbpedia.org/property/commanded> ?force.

  # Step 5: Find reference to Rutger Jan Schimmelpenninck in that force
  ?schimmelpenninck <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>.
  ?schimmelpenninck <http://dbpedia.org/property/name> ""Rutger Jan Schimmelpenninck""@en.
  ?force <http://dbpedia.org/ontology/member> ?schimmelpenninck.

  # Step 6: Determine the military force associated with the societal event and conflict linked to Rutger Jan Schimmelpenninck
  ?societalEvent <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocialEvent>.
  ?societalEvent <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>.
  ?schimmelpenninck <http://dbpedia.org/property/associatedWith> ?societalEvent.
  
  ?militaryForce <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>.
  ?societalEvent <http://dbpedia.org/ontology/militaryForce> ?militaryForce.
}
```",8,15,9,3,3,3,3,71,0,0,15,0,0.0,0
328,59,test,Give me the commander in the force of the person decedent at Budapest and awardee of the award of the commander in Volcano and Ryukyu Islands campaign.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/awards> ?v2 . ?v0 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Budapest> . <http://dbpedia.org/resource/Volcano_and_Ryukyu_Islands_campaign> <http://dbpedia.org/ontology/commander> ?v3 . ?v5 <http://dbpedia.org/ontology/commander> ?v0 . ?v5 <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/property/awards> ?v2 . },"```sparql
SELECT ?commander WHERE {
  ?person <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Budapest> .
  ?awardscheme <http://dbpedia.org/property/awardedTo> ?person ;
                <http://dbpedia.org/property/relatedToCommander> ?commander .
  ?volcanoCampaign <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> ;
                    <http://dbpedia.org/ontology/commander> ?commander .
  ?ryukyuCampaign <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> ;
                   <http://dbpedia.org/ontology/commander> ?commander .
}
```",6,6,7,3,2,3,3,71,0,0,15,0,0.0,0
54,64,test,"Give me the child of the father of the child of Thinkhaya of Pagan and predecessor of the child, that is an office holder and a royalty, of the reference to Thihapate of Mohnyin and parent of Thado Minsaw of Prome.","SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""Thihapate of Mohnyin""@en . ?v3 <http://dbpedia.org/property/father> ?v2 . ?v1 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?v3 . ?result <http://dbpedia.org/ontology/successor> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> <http://dbpedia.org/ontology/parent> ?result . }","```sparql
SELECT ?grandchild WHERE {
  ?thinkhaya dbo:spouse ?mother .
  ?thinkhaya dbp:child ?child1 .
  ?child1 dbp:child ?grandchild .

  ?thihapate dbp:child ?officeHolderRoyalty .
  ?officeHolderRoyalty rdf:type dbo:OfficeHolder ;
                       rdf:type dbo:Royalty .
  
  ?officeHolderRoyalty dbp:parent ?thadoMinsawParent .
  ?thadoMinsawParent dbp:child <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> .

  FILTER(?grandchild = ?officeHolderRoyalty)
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
232,61,test,"Give me the native of the residence, that is a settlement and British, of the native, that is a politician and an office holder, of France and actor of the claim to fame, that is a film and a military conflict, of the professional in Actor, narrator and producer.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/France> . ?v0 <http://dbpedia.org/ontology/knownFor> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v0 <http://dbpedia.org/property/occupation> ""Actor, narrator and producer""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v5 <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://dbpedia.org/property/residence> ?v3 . }","```sparql
SELECT ?native
WHERE {
  # Step 1: Find professionals in Actor, narrator, and producer
  ?person a <http://dbpedia.org/ontology/Actor> ;
          a <http://dbpedia.org/ontology/Narrator> ;
          a <http://dbpedia.org/ontology/Producer> .

  # Step 2: Identify their claims to fame that are both films and military conflicts
  ?fame a <http://dbpedia.org/ontology/Film> ;
        a <http://dbpedia.org/ontology/MilitaryConflict> ;
        <http://dbpedia.org/property/knownFor> ?person .

  # Step 3: Find actors of these films/military conflicts who are politicians and office holders from France
  ?actor a <http://dbpedia.org/ontology/Politician> ;
         a <http://dbpedia.org/ontology/OfficeHolder> ;
         <http://dbpedia.org/property/nationality> <http://dbpedia.org/resource/France> ;
         <http://dbpedia.org/ontology/performedIn> ?fame .

  # Step 4: Locate the residence of these French politicians/office holders that is a settlement and British
  ?residence a <http://dbpedia.org/ontology/Settlement> ;
             <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country> ;
             <http://dbpedia.org/resource/United_Kingdom> ;
             <http://dbpedia.org/property/residence> ?actor .

  # Step 5: Find the native of this British settlement
  ?native a <http://www.w3.org/2002/07/owl#Thing> ; # Assuming 'native' is linked to a person or entity
          <http://dbpedia.org/ontology/nativeOf> ?residence .
}
```",6,12,7,3,2,3,3,71,0,0,1,0,0.0,0
184,45,test,Give me the parent of Géza von Habsburg and parent of the child of the parent of Archduchess Margaret of Austria (born 1925) and child of Archduke Joseph August of Austria.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Géza_von_Habsburg> . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_August_of_Austria> . ?v1 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/child> ?v1 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Margaret_of_Austria_(born_1925)> . },"```sparql
# Step 1: Find the parent of Géza von Habsburg
SELECT ?parentGéza WHERE {
    <http://dbpedia.org/resource/G%C3%A9za_von_Habsburg> <http://dbpedia.org/ontology/father> ?parentGéza .
}

UNION

SELECT ?parentGéza WHERE {
    <http://dbpedia.org/resource/G%C3%A9za_von_Habsburg> <http://dbpedia.org/ontology/mother> ?parentGéza .
}

# Step 2: Find the parent of Archduchess Margaret of Austria (born 1925)
SELECT ?parentMargaret WHERE {
    <http://dbpedia.org/resource/Margaret_of_Austria_(1925)> <http://dbpedia.org/ontology/father> ?parentMargaret .
}

UNION

SELECT ?parentMargaret WHERE {
    <http://dbpedia.org/resource/Margaret_of_Austria_(1925)> <http://dbpedia.org/ontology/mother> ?parentMargaret .
}

# Step 3: Find the child of the parent identified in step 2
SELECT ?childOfParentMargaret WHERE {
    ?parentMargaret <http://dbpedia.org/ontology/father> ?childOfParentMargaret .
}

UNION

SELECT ?childOfParentMargaret WHERE {
    ?parentMargaret <http://dbpedia.org/ontology/mother> ?childOfParentMargaret .
}

# Step 4: Find the child of Archduke Joseph August of Austria
SELECT ?childJosephAugust WHERE {
    <http://dbpedia.org/resource/Joseph_August_of_Austria> <http://dbpedia.org/ontology/father> ?childJosephAugust .
}

UNION

SELECT ?childJosephAugust WHERE {
    <http://dbpedia.org/resource/Joseph_August_of_Austria> <http://dbpedia.org/ontology/mother> ?childJosephAugust .
}

# Step 5: Find the common parent between results from steps 1 and 4
SELECT DISTINCT ?commonParent WHERE {
    VALUES ?parentGéza { ?parentGéza }
    VALUES ?childJosephAugust { ?childJosephAugust }

    ?parentGéza <http://dbpedia.org/ontology/father> ?commonParent .
    UNION
    ?parentGéza <http://dbpedia.org/ontology/mother> ?commonParent .

    ?commonParent <http://dbpedia.org/ontology/father> ?childJosephAugust .
    UNION
    ?commonParent <http://dbpedia.org/ontology/mother> ?childJosephAugust .
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
747,58,test,Give me the person born on 1985-04-29 and band of the writer of Apollo (Hardwell song) and band of the person born as the persona of Shèna.,"SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/birthDate> ""1985-04-29""^^<http://www.w3.org/2001/XMLSchema#date> . ?v2 <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Apollo_(Hardwell_song)> <http://dbpedia.org/property/writer> ?v5 . <http://dbpedia.org/resource/Shèna> <http://xmlns.com/foaf/0.1/givenName> ?v1 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
# Part 1: Find the writer of ""Apollo"" (Hardwell song) and their band
SELECT ?writer ?band1 WHERE {
    ?song <http://dbpedia.org/ontology/writer> ?writer .
    ?writer <http://dbpedia.org/property/band> ?band1 .
    FILTER(STR(?song) = ""Apollo_(Hardwell_song)"")
}

UNION

# Part 2: Find the person born as Shèna and their band
SELECT ?person ?band2 WHERE {
    ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person> .
    ?person <http://dbpedia.org/property/birthDate> ""1985-04-29""^^<http://www.w3.org/2001/XMLSchema#date> .
    ?person <http://dbpedia.org/ontology/knownAs> ""Shèna"" .
    ?person <http://dbpedia.org/property/band> ?band2 .
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
488,60,test,"Give me the birth place of the commander in the war, that is a military conflict and an event and a societal event, of Saitō Hajime and administration of the father of the spouse, that is a royalty, of Tokugawa Masako.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Saitō_Hajime> <http://dbpedia.org/ontology/battle> ?v3 . ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Tokugawa_Masako> . ?result <http://dbpedia.org/property/leader> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/ontology/commander> ?v2 . },"```sparql
SELECT ?birthPlace WHERE {
  # Step 1: Identify the war involving Saitō Hajime that is a military conflict, an event, and a societal event.
  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event> .
  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent> .
  <http://dbpedia.org/resource/Saitō_Hajime> <http://dbpedia.org/property/battle> ?war .

  # Step 2: Determine the commander of that war.
  ?war <http://dbpedia.org/ontology/commander> ?commander .

  # Step 3: Find the birthplace of that commander.
  ?commander <http://dbpedia.org/ontology/birthPlace> ?birthPlace .

  # Step 4: Identify Tokugawa Masako's spouse who has royalty status.
  <http://dbpedia.org/resource/Tokugawa_Masako> <http://dbpedia.org/property/spouse> ?spouse .
  ?spouse <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .

  # Step 5: Determine the father of that spouse.
  ?spouse <http://dbpedia.org/property/father> ?father .

  # Step 6: Find the administration under which this father served.
  ?father <http://dbpedia.org/ontology/administration> ?administration .
}
```",6,10,7,3,2,3,3,71,0,0,1,0,0.0,0
54,24,test,Give me the parent of the child of Narapati I of Ava and predecessor of Ameitta Thiri Maha Dhamma Dewi of Ava.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Narapati_I_of_Ava> . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Ameitta_Thiri_Maha_Dhamma_Dewi_of_Ava> . ?v2 <http://dbpedia.org/ontology/parent> ?result . },"```sparql
SELECT ?parent WHERE {
  # Find the child of Narapati I of Ava
  <http://dbpedia.org/resource/Narapati_I_of_Ava> <http://dbpedia.org/ontology/child> ?child .
  
  # Find the predecessor of Ameitta Thiri Maha Dhamma Dewi of Ava
  <http://dbpedia.org/resource/Ameitta_Thiri_Maha_Dhamma_Dewi_of_Ava> <http://dbpedia.org/ontology/predecessor> ?predecessor .
  
  # Check if the child and predecessor are the same entity
  FILTER (?child = ?predecessor)
  
  # Find the parent of this entity
  ?child <http://dbpedia.org/ontology/parent> ?parent .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
328,56,test,"Give me the commander in Eastern Front (World War II) and awardee of the award of Bruce Fraser, 1st Baron Fraser of North Cape and leader of the office, that is a government agency, of the leader, that is an office holder and a politician, of Gustav Jonson.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/office> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape> <http://dbpedia.org/property/awards> ?v2 . ?result <http://dbpedia.org/property/awards> ?v2 . <http://dbpedia.org/resource/Eastern_Front_(World_War_II)> <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Gustav_Jonson> <http://dbpedia.org/property/leader> ?v0 . ?v1 <http://dbpedia.org/ontology/leader> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","```sparql
SELECT ?commander WHERE {
  # Find commanders in Eastern Front (World War II)
  ?commander <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Eastern_Front_(World_War_II)> .

  # Find awardees of Bruce Fraser, 1st Baron Fraser of North Cape
  ?awardee <http://dbpedia.org/property/awardedBy> <http://dbpedia.org/resource/Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape> .
  
  # Find leaders of a government agency
  ?leader <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder> ;
           <http://dbpedia.org/ontology/politician> ?politician ;
           <http://dbpedia.org/property/officeLeader> ?agency .
  ?agency <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency> .

  # Find the leader of Gustav Jonson
  ?gustavLeader <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Gustav_Jonson> ;
                <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder> ;
                <http://dbpedia.org/ontology/politician> ?politician .

  # Combine conditions
  FILTER (?commander = ?awardee && ?leader = ?gustavLeader)
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
534,17,test,"Give me the birth place of Garret FitzGerald and headquarter of the owner of the location, that is a venue and an architectural structure, of 2012 Pro12 Grand Final.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/owner> ?v3 . ?v3 <http://dbpedia.org/ontology/headquarter> ?result . <http://dbpedia.org/resource/2012_Pro12_Grand_Final> <http://dbpedia.org/ontology/location> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ArchitecturalStructure>. <http://dbpedia.org/resource/Garret_FitzGerald> <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Venue>. },"```sparql
SELECT ?birthPlace ?headquarters WHERE {
  # Step 1: Get birthplace of Garret FitzGerald
  <http://dbpedia.org/resource/Garret_FitzGerald> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .

  # Step 2: Identify the venue for the 2012 Pro12 Grand Final
  ?venue <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Venue> .
  ?venue <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ArchitecturalStructure> .
  ?event <http://dbpedia.org/property/location> ?venue .
  ?event <http://dbpedia.org/property/eventName> ""2012 Pro12 Grand Final""@en .

  # Step 3: Find the owner of this venue
  ?venue <http://dbpedia.org/ontology/owner> ?owner .

  # Step 4: Get headquarters of the owner
  ?owner <http://dbpedia.org/property/headquarters> ?headquarters .
}
```",4,6,5,3,2,3,2,20,0,0,1,0,0.0,0
659,65,test,"Give me the commander in the war, that is an event and a military conflict, of the figure known, that is a military unit and an organisation, as 'Polish Horse' and commander in the force of Arthur Wellesley, 1st Duke of Wellington and military force of the force, that is a societal event and an event and a military conflict, of Rutger Jan Schimmelpenninck.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v4 <http://dbpedia.org/ontology/commander> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v4 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Arthur_Wellesley,_1st_Duke_of_Wellington> . ?v0 <http://dbpedia.org/ontology/battle> ?v6 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v6 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/property/nickname> ""'Polish Horse'""@en . ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","```sparql
SELECT ?commanderInWar WHERE {
  ?polishHorse <http://dbpedia.org/ontology/knownFor> 'Polish Horse' .
  ?polishHorse <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit> .
  ?polishHorse <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organization> .
  
  ?commanderOfPolishHorse <http://dbpedia.org/ontology/commander> ?polishHorse .

  ?welshForce <http://dbpedia.org/property/commander> <http://dbpedia.org/resource/Arthur_Wellesley,_1st_Duke_of_Wellington> .
  
  ?schimmelpenninckForce <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent> .
  ?schimmelpenninckForce <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event> .
  ?schimmelpenninckForce <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .

  ?forceOfSchimmelpenninck <http://dbpedia.org/property/force> ?schimmelpenninckForce .
  
  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event> .

  ?commanderOfPolishHorse <http://dbpedia.org/ontology/commander> ?war .
}
```",7,14,8,3,3,3,3,71,0,0,15,0,0.0,0
994,59,test,"Give me the associated musical artist of the associated musical artist of the reference to Watchtower and associated musical artist of the band member, that is a band and a group and an organisation, of the band, that is an organisation, of Fredrik Thordendal.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Fredrik_Thordendal> . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://xmlns.com/foaf/0.1/name> ""Watchtower""@en . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . }","```sparql
# Step 1: Find the band associated with Fredrik Thordendal that is an organization
SELECT ?band WHERE {
    <http://dbpedia.org/resource/Fredrik_Thordendal> <http://dbpedia.org/ontology/memberOf> ?band .
    ?band <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation> .
}

# Step 2: Find a band member of this band who is part of a group and an organization
SELECT ?member WHERE {
    ?band <http://dbpedia.org/property/member> ?member .
    ?member <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band> .
    ?member <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group> .
    ?member <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation> .
}

# Step 3: Determine the reference to Watchtower for this band member
SELECT ?watchtower WHERE {
    ?member <http://dbpedia.org/property/referenceTo> ?watchtower .
    ?watchtower rdfs:label ""Watchtower""@en .
}

# Step 4: Identify the associated musical artist of this reference
SELECT ?artist1 WHERE {
    ?watchtower <http://dbpedia.org/ontology/associatedMusicalArtist> ?artist1 .
}

# Step 5: Find the associated musical artist of the result from step 4
SELECT ?artist2 WHERE {
    ?artist1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?artist2 .
}
```",6,10,7,3,2,3,3,71,0,0,5,0,0.0,0
712,20,test,"Give me the resting place of the awardee of the show of Soviet Union and capital of the country of the military force, that is an organisation and a military unit, of Vyoshenskaya Uprising.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/awards> ?v4 . ?v1 <http://dbpedia.org/ontology/country> ?v2 . ?v2 <http://dbpedia.org/ontology/capital> ?result . ?v5 <http://dbpedia.org/ontology/restingPlace> ?result . ?v1 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Vyoshenskaya_Uprising> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v4 <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/Soviet_Union> . },"```sparql
SELECT ?restingPlace WHERE {
  # Step 1: Identify the military force associated with Vyoshenskaya Uprising
  ?militaryForce <http://dbpedia.org/ontology/event> <http://dbpedia.org/resource/Vyoshenskaya_Uprising> .
  
  # Ensure it is an organization and a military unit
  ?militaryForce <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation> ;
                 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit> .
  
  # Step 2: Determine the country of this military force and find its capital
  ?militaryForce <http://dbpedia.org/property/country> ?country .
  ?capital <http://www.w3.org/2000/01/rdf-schema#label> ""Capital"" ;
           <http://dbpedia.org/ontology/capital> ?country .

  # Step 3: Find a show that was aired in the Soviet Union
  ?show <http://dbpedia.org/property/country> <http://dbpedia.org/resource/Soviet_Union> .
  
  # Step 4: Identify an awardee of this show
  ?awardee <http://dbpedia.org/ontology/award> ?show .

  # Step 5: Determine the resting place of that awardee
  ?awardee <http://dbpedia.org/property/restingPlace> ?restingPlace .
}
```",6,8,7,3,2,3,2,20,0,0,1,0,0.0,0
435,28,test,"Give me the work of the author of Iceland and region of the time zone in Bombali Shebora Chiefdom and territory administered from the figure known, that is a settlement and a town and Icelandic, as Land of fire and ice.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/capital> ?v1 . ?result <http://dbpedia.org/property/author> ?v5 . ?v1 <http://dbpedia.org/property/nickname> ""Land of fire and ice""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Bombali_Shebora_Chiefdom> <http://dbpedia.org/ontology/timeZone> ?v3 . <http://dbpedia.org/resource/Iceland> <http://dbpedia.org/property/author> ?v5 . ?result <http://dbpedia.org/ontology/timeZone> ?v3 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Iceland>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Town>. }","```sparql
SELECT ?work ?region WHERE {
  # Step 1: Identify ""Land of fire and ice""
  ?iceland <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement> .
  ?iceland <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Town> .
  ?iceland <http://dbpedia.org/property/country> <http://dbpedia.org/resource/Iceland> .

  # Step 2: Find the author associated with Iceland
  ?author <http://purl.org/dc/terms/about> ?iceland .
  ?author <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer> .

  # Step 3: Determine the work authored by this individual
  ?work <http://purl.org/dc/terms/creator> ?author .

  # Step 4: Locate the time zone related to Bombali Shebora Chiefdom
  ?chiefdom <http://dbpedia.org/ontology/timeZone> ?timezone .
  FILTER(?chiefdom = <http://dbpedia.org/resource/Bombali_Shebora_Cheifdom>) .

  # Step 5: Identify the region within this time zone
  ?region <http://www.w3.org/2006/time#during> ?timezone .
}
```",6,9,7,2,3,2,3,28,0,0,1,0,0.0,0
534,18,test,"Give me the birth place of the child, that is a politician and an office holder, of the native, that is a politician, of Essex and headquarter of the owner of RDS Arena.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/RDS_Arena> <http://dbpedia.org/ontology/owner> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Essex> . ?v3 <http://dbpedia.org/ontology/headquarter> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/child> ?v2 . },"```sparql
SELECT ?birthPlace WHERE {
    # Step 1: Find the native politician of Essex
    ?essexPolitician a dbo:Person ;
                     dbo:nationality dbr:United_Kingdom ;
                     dbo:residence dbr:Essex .

    # Step 2: Determine the owner of RDS Arena and its headquarters
    dbr:RDS_Arena dbo:owner ?arenaOwner .
    ?arenaOwner dbo:headquarters ?hqLocation .

    # Step 3: Find a child who is both a politician and an office holder related to the native politician from Essex
    ?essexPolitician dbo:child ?child ;
                     rdf:type dbo:Politician .
    ?child rdf:type dbo:OfficeHolder .

    # Step 4: Retrieve the birthplace of this child
    ?child dbo:birthPlace ?birthPlace .
}
```",5,8,6,3,2,3,2,20,0,0,1,0,0.0,0
339,18,test,Give me the father of the child of Grand Duchess Elena Vladimirovna of Russia and child of the child of the predecessor of Frederick VIII of Denmark.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Frederick_VIII_of_Denmark> . ?v2 <http://dbpedia.org/property/father> ?v1 . ?v3 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Grand_Duchess_Elena_Vladimirovna_of_Russia> <http://dbpedia.org/ontology/child> ?v3 . },"```sparql
SELECT ?father WHERE {
  # Step 1: Identify the child of Grand Duchess Elena Vladimirovna of Russia
  ?child elena_vladimirovna_of_russia:child ?grand_duchess_elena .
  
  # Step 2: Determine the father of that child
  ?child dbpedia-owl:father ?father .

  # Step 3: Identify the predecessor of Frederick VIII of Denmark
  ?predecessor dbpedia-owl:successor <http://dbpedia.org/resource/Frederick_VIII_of_Denmark> .
  
  # Step 4: Find the child of the child of that predecessor
  ?grandchild1 dbpedia-owl:parent ?predecessor ;
               dbpedia-owl:parent ?intermediate_child .
  ?grandchild2 dbpedia-owl:parent ?intermediate_child .

  # Step 5: Ensure we are looking at the same individual from both parts of the query
  FILTER(?grandchild1 = ?child)

  # Find the father of this grandchild
  ?grandchild2 dbpedia-owl:father ?father .
}
```",5,5,6,3,2,3,2,20,0,0,1,0,0.0,0
666,20,test,"Give me the figure known as the nickname of the reference, that is an organisation and a soccer club and a sports club, to England and player in the manager, that is a sports manager, of the team, that is a soccer club and a sports team season, of Leonid Slutsky (football coach).","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v4 <http://dbpedia.org/property/nickname> ?v5 . ?result <http://dbpedia.org/property/nickname> ?v5 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v1 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Leonid_Slutsky_(football_coach)> . ?v2 <http://dbpedia.org/ontology/team> ?result . ?v4 <http://xmlns.com/foaf/0.1/name> ""England""@en . ?v1 <http://dbpedia.org/ontology/manager> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. }","```sparql
# Step 1: Identify Leonid Slutsky's managed team
SELECT ?team WHERE {
    ?manager <http://dbpedia.org/ontology/team> ?team .
    ?manager <http://www.w3.org/2000/01/rdf-schema#label> ""Leonid Slutsky"" .
    ?team <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub> ;
          <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason> .
}

# Step 2: Find the manager who was a player in another team
SELECT ?playerManager WHERE {
    ?team1 <http://dbpedia.org/ontology/team> ?manager .
    ?manager <http://www.w3.org/2000/01/rdf-schema#label> ""Leonid Slutsky"" .
    ?playerManager <http://dbpedia.org/ontology/playerForTeam> ?team2 .
    ?playerManager <http://dbpedia.org/ontology/team> ?team1 .
}

# Step 3: Identify the organization related to England
SELECT ?organisation WHERE {
    ?organisation <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub> ;
                   <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsOrganization> .
    ?organisation <http://dbpedia.org/property/country> <http://dbpedia.org/resource/England> .
}

# Step 4: Find the nickname of this organization
SELECT ?nickname WHERE {
    ?organisation <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub> ;
                   <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsOrganization> .
    ?organisation <http://dbpedia.org/property/country> <http://dbpedia.org/resource/England> .
    ?organisation <http://dbpedia.org/ontology/nickname> ?nickname .
}
```",6,12,7,3,2,3,2,20,0,0,2,0,0.0,0
16,67,test,Give me the professional in the profession of the actor of Unnatural (TV series) and spouse of Ted McGinley and person born as the birth name of the alumnus of Ohio State University.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Ohio_State_University> . ?result <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/property/occupation> ?v6 . ?v1 <http://dbpedia.org/property/birthName> ?v3 . ?result <http://dbpedia.org/property/occupation> ?v6 . <http://dbpedia.org/resource/Unnatural_(TV_series)> <http://dbpedia.org/property/starring> ?v0 . },"```sparql
# Step 1: Find the actor of ""Unnatural (TV series)""
SELECT ?actor WHERE {
    ?tvSeries <http://dbpedia.org/ontology/starring> ?actor .
    ?tvSeries <http://dbpedia.org/property/title> ""Unnatural (TV series)""^^<http://www.w3.org/2001/XMLSchema#string> .
}

# Step 2: Identify the spouse of Ted McGinley
SELECT ?spouse WHERE {
    ?person <http://xmlns.com/foaf/0.1/spouse> <http://dbpedia.org/resource/Ted_McGinley> .
    ?actor = ?person .
}

# Step 3: Find a person born with the birth name of an alumnus of Ohio State University
SELECT ?alumnusBirthName WHERE {
    ?alumnus <http://xmlns.com/foaf/0.1/name> ?birthName .
    ?alumnus <http://dbpedia.org/ontology/alumniOf> <http://dbpedia.org/resource/Ohio_State_University> .
}

SELECT ?person WHERE {
    ?person <http://xmlns.com/foaf/0.3/birthName> ?alumnusBirthName .
}

# Final Step: Find a professional in the same profession as the actor
SELECT DISTINCT ?professional WHERE {
    ?actor <http://dbpedia.org/ontology/profession> ?profession .
    ?person <http://dbpedia.org/ontology/profession> ?profession .
}
```",7,7,8,3,3,3,3,71,0,0,1,0,0.0,0
378,52,test,"Give me the war of the commander in Peninsular War and claim to fame of Louis des Balbes de Berton de Crillon, 1st Duke of Mahón and war of the person born as the birth name of Carl Pontus Gahn.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Peninsular_War> <http://dbpedia.org/ontology/commander> ?v5 . ?v2 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Louis_des_Balbes_de_Berton_de_Crillon,_1st_Duke_of_Mahón> <http://dbpedia.org/ontology/knownFor> ?result . <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/property/birthName> ?v3 . ?v5 <http://dbpedia.org/ontology/battle> ?result . }","```sparql
# Part 1: Louis des Balbes de Berton de Crillon, 1st Duke of Mahón
SELECT ?war WHERE {
    # Find the claim to fame of Louis des Balbes de Berton de Crillon
    <http://dbpedia.org/resource/Louis_des_Balbes_de_Berton_de_Crillon,_1st_Duke_of_Mah%C3%B3n> <http://dbpedia.org/ontology/knownFor> ?claimToFame .
    
    # Ensure the claim to fame is a military conflict
    ?claimToFame <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .

    # Find the war associated with the Peninsular War commander
    OPTIONAL { 
        ?peninsularWarCommander <http://dbpedia.org/ontology/commander> ?claimToFame .
        FILTER(?peninsularWarCommander = <http://dbpedia.org/resource/Louis_des_Balbes_de_Berton_de_Crillon,_1st_Duke_of_Mah%C3%B3n>)
    }
    
    # Return the war
    BIND(?claimToFame AS ?war)
}

UNION

# Part 2: Carl Pontus Gahn
SELECT ?war WHERE {
    # Find the birth name of Carl Pontus Gahn
    <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/ontology/birthName> ?birthName .

    # Find the person with that birth name
    ?person <http://dbpedia.org/ontology/birthName> ?birthName .
    
    # Ensure this person is associated with a military conflict
    ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
    ?person <http://dbpedia.org/ontology/battle> ?war .
}
```",6,6,7,3,3,3,3,71,0,0,2,0,0.0,0
328,60,test,"Give me the awardee of the award of the commander in Volcano and Ryukyu Islands campaign and leader of the office, that is a government agency, of the leader, that is an office holder and a politician, of Gustav Jonson.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/leader> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v3 <http://dbpedia.org/property/awards> ?v2 . ?v0 <http://dbpedia.org/property/office> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/property/awards> ?v2 . <http://dbpedia.org/resource/Volcano_and_Ryukyu_Islands_campaign> <http://dbpedia.org/ontology/commander> ?v3 . <http://dbpedia.org/resource/Gustav_Jonson> <http://dbpedia.org/property/leader> ?v0 . },"```sparql
SELECT ?awardee WHERE {
  ?campaign <http://dbpedia.org/ontology/commander> ?commander .
  FILTER(STRSTARTS(LCASE(?campaign), ""volcano and ryukyu islands campaign""))
  
  ?award <http://dbpedia.org/property/recipient> ?commander .
  
  ?awardee <http://dbpedia.org/property/recipient> ?award .

  ?office <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency> .
  ?leader <http://dbpedia.org/ontology/leader> ?office .
  FILTER(STRSTARTS(LCASE(?leader), ""gustav jonson""))
  
  ?leader <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder> .
  ?leader <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .

  ?office <http://dbpedia.org/property/leader> ?leader .
}
```",6,9,7,3,2,3,3,71,0,0,1,0,0.0,0
391,60,test,"Give me the native of the figure known as the nick name of Jackson, Tennessee and actor of the movie, that is a movie and a work and a television show, with the professional in .","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. <http://dbpedia.org/resource/Jackson,_Tennessee> <http://xmlns.com/foaf/0.1/nick> ?v3 . ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/property/starring> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v2 <http://dbpedia.org/property/nickname> ?v3 . ?v1 <http://dbpedia.org/property/starring> ?v0 . ?v0 <http://dbpedia.org/property/occupation> """"@en . }","```sparql
SELECT ?native WHERE {
  # Step 1: Find the nickname of Jackson, Tennessee
  <http://dbpedia.org/resource/Jackson,_Tennessee> <http://dbpedia.org/ontology/nickName> ?nickname .

  # Step 2: Identify a movie that is also classified as a work and a television show
  ?movie <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Movie> .
  ?movie <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work> .
  ?movie <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow> .

  # Step 3: Find an actor associated with this movie
  ?actor <http://dbpedia.org/ontology/starring> ?movie .
  
  # Step 4: Determine the native place of this actor
  ?actor <http://dbpedia.org/property/nativePlace> ?native .
}
```",6,9,7,3,2,3,3,71,0,0,1,0,0.0,0
184,46,test,"Give me the parent of the native of the landmark at elevation, that is a settlement, of 96.0 and child of the child of Archduke Joseph Karl of Austria.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Karl_of_Austria> . ?result <http://dbpedia.org/ontology/child> ?v1 . ?v2 <http://dbpedia.org/ontology/elevation> ""96.0""^^<http://www.w3.org/2001/XMLSchema#double> . ?v1 <http://dbpedia.org/ontology/birthPlace> ?v2 . ?result <http://dbpedia.org/property/father> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. }","```sparql
SELECT ?parent WHERE {
  # Step 1: Find the child of Archduke Joseph Karl of Austria
  ?grandchild <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Archduke_Joseph_Karl_of_Austria> .
  
  # Step 2: Find the grandchild (child of the above child)
  ?native <http://dbpedia.org/ontology/father> ?grandchild .

  # Step 3: Identify the native's settlement with a landmark at elevation 96.0
  ?landmark <http://dbpedia.org/ontology/location> ?native ;
            <http://dbpedia.org/property/elevation> ""96.0""^^xsd:float .
  
  # Ensure the location is a settlement
  ?landmark <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement> .

  # Step 4: Find the parent of this native
  ?native <http://dbpedia.org/ontology/father|<http://dbpedia.org/ontology/mother> ?parent .
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
701,53,test,Give me the spouse of the father of Merneptah and parent of Henuttawy (19th dynasty) and parent of the child of the spouse of Amun-her-khepeshef.,SELECT ?result WHERE { <http://dbpedia.org/resource/Amun-her-khepeshef> <http://dbpedia.org/ontology/spouse> ?v3 . ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/ontology/spouse> ?v1 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Henuttawy_(19th_dynasty)> . <http://dbpedia.org/resource/Merneptah> <http://dbpedia.org/property/father> ?v1 . },"```sparql
SELECT ?spouse WHERE {
    # Step 1: Identify Merneptah's father
    ?merneptahFather dbo:child <http://dbpedia.org/resource/Merneptah> .
    
    # Step 2: Find the spouse of Merneptah's father
    ?merneptahFather dbo:spouse ?spouse .

    # Step 3: Ensure this person is a parent of Henuttawy (19th dynasty)
    ?spouse dbo:child <http://dbpedia.org/resource/Henuttawy_(19th_dynasty)> .
    
    # Step 4: Verify that this person is a parent of the child of Amun-her-khepeshef's spouse
    ?amunHerKhepeshefSpouse dbo:spouse <http://dbpedia.org/resource/Amun-her-khepeshef> .
    ?amunHerKhepeshefSpouse dbo:child ?child .
    ?spouse dbo:child ?child .
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
488,46,test,"Give me the death place of the father, that is a politician, of Yūki Hideyasu and birth place of the commander in the war, that is a military conflict and an event and a societal event, of Saitō Hajime.",SELECT ?result WHERE { <http://dbpedia.org/resource/Saitō_Hajime> <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v4 <http://dbpedia.org/ontology/deathPlace> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/ontology/commander> ?v1 . <http://dbpedia.org/resource/Yūki_Hideyasu> <http://dbpedia.org/property/father> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
SELECT ?deathPlace ?birthPlace WHERE {
  # Step 1: Identify Yūki Hideyasu's father who is a politician
  ?father rdf:type dbo:Politician ;
          dbo:child <http://dbpedia.org/resource/Y%C5%ABki_Hideyasu> .

  # Step 2: Find the death place of Yūki Hideyasu's father
  ?deathEvent dbo:agent ?father ;
              dbo:place ?deathPlace .
  
  # Step 3: Identify the war involving Saitō Hajime as a commander
  ?war rdf:type dbo:MilitaryConflict, dbo:Event, dbo:SocietalEvent ;
       dbo:commander <http://dbpedia.org/resource/Sait%C5%8D_Hajime> .

  # Step 4: Determine the birthplace of the commander (Saitō Hajime)
  ?birthPlace dbo:birthPlace <http://dbpedia.org/resource/Sait%C5%8D_Hajime> .
}
```",5,9,6,3,2,3,3,71,0,0,1,0,0.0,0
659,35,test,"Give me the military force of the force, that is a societal event and an event and a military conflict, of Rutger Jan Schimmelpenninck and commander in the force of Arthur Wellesley, 1st Duke of Wellington.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Arthur_Wellesley,_1st_Duke_of_Wellington> . ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","```sparql
SELECT ?force WHERE {
    ?force <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>.
    ?force <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>.
    ?force <http://dbpedia.org/property/commander> <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck>.
    ?force <http://dbpedia.org/property/commander> <http://dbpedia.org/resource/Arthur_Wellesley,_1st_Duke_of_Wellington>.
}
```",4,7,5,2,2,3,3,71,0,0,38,0,0.0,0
659,48,test,"Give me the commander in the force of the native, that is an office holder, of Kingdom of Ireland and military force of the force, that is a societal event and an event and a military conflict, of Rutger Jan Schimmelpenninck.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Kingdom_of_Ireland> . ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v2 <http://dbpedia.org/ontology/commander> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"SELECT ?result WHERE { 
  ?v1 <http://dbpedia.org/ontology/nativeCountry> <http://dbpedia.org/resource/Kingdom_of_Ireland>. 
  ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>.
  ?v2 <http://dbpedia.org/ontology/militaryForce> ?v1.
  ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>.
  ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>.
  ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>.
  <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> <http://dbpedia.org/property/militaryForce> ?v2.
  ?v3 <http://dbpedia.org/ontology/commander> ?result.
  ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryForce>.
}",5,9,6,3,2,3,3,71,0,0,40,0,0.0,0
64,8,test,"Give me the alma mater of Jovan Hristić and entity in the region, that is a country, of Central European Time.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . ?result <http://dbpedia.org/ontology/country> ?v2 . <http://dbpedia.org/resource/Jovan_Hristić> <http://dbpedia.org/ontology/almaMater> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
# Query to get the alma mater of Jovan Hristić
SELECT ?almaMater WHERE {
  <http://dbpedia.org/resource/Jovan_Hristić> <http://dbpedia.org/ontology/almaMater> ?almaMater .
}

UNION

# Query to find entities in a region that is a country and falls under Central European Time
SELECT ?country WHERE {
  ?region <http://www.w3.org/2000/01/rdf-schema#label> ""Central European Time""@en .
  ?region <http://dbpedia.org/ontology/country> ?country .
  ?country <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country> .
}
```",3,4,4,2,2,2,2,9,0,0,1,0,0.0,0
232,41,test,"Give me the native of London and actor of the claim to fame, that is a film and a military conflict, of Sean Pertwee and child of the person born as John Devon Roland Pertwee.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ""John Devon Roland Pertwee""@en . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v4 <http://dbpedia.org/ontology/starring> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v2 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Sean_Pertwee> <http://dbpedia.org/ontology/knownFor> ?v4 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/London> . }","```sparql
SELECT ?child WHERE {
  # Step 1: Find Sean Pertwee's claims to fame that are both films and military conflicts
  ?fame <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>.
  ?fame <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>.
  <http://dbpedia.org/resource/Sean_Pertwee> <http://dbpedia.org/ontology/knownFor> ?fame.

  # Step 2: Identify John Devon Roland Pertwee
  ?john a <http://dbpedia.org/ontology/Person>;
        <http://dbpedia.org/property/birthName> ""John Devon Roland Pertwee""@en;
        <http://dbpedia.org/ontology/spouse> ?spouse.

  # Step 3: Find the child of John Devon Roland Pertwee
  ?child <http://dbpedia.org/ontology/parent> ?john.
  
  # Step 4: Ensure this child is an actor, has a matching claim to fame, and is native to London
  ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Actor>.
  ?child <http://dbpedia.org/ontology/knownFor> ?fame.
  ?child <http://dbpedia.org/ontology/nativePlace> <http://dbpedia.org/resource/London>.

}
```",5,7,6,2,3,3,3,71,0,0,1,0,0.0,0
92,62,test,"Give me the associated musical artist of the person born, that is an artist, as the actor of Return to Nuke 'Em High Volume 1 and band of Joseph Michael and band member of the reference, that is an artist, to the name of Nevermore (2006 film).",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v3 <http://xmlns.com/foaf/0.1/name> ?v4 . <http://dbpedia.org/resource/Nevermore_(2006_film)> <http://xmlns.com/foaf/0.1/name> ?v4 . ?v6 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Return_to_Nuke_'Em_High_Volume_1> <http://dbpedia.org/property/starring> ?v0 . ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Joseph_Michael> . ?v6 <http://dbpedia.org/property/birthName> ?v0 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"```sparql
SELECT ?associatedMusicalArtist WHERE {
  # Step 1: Find the actor of ""Return to Nuke 'Em High Volume 1""
  ?movie dbp:title ""Return to Nuke 'Em High Volume 1""@en .
  ?movie dbo:actor ?actor .

  # Step 2: Find the person born who is an artist and associated with this actor
  ?artist dbo:birthPlace ?place .
  ?artist a dbo:Artist .
  ?actor dbp:associatedMusicalArtist ?artist .

  # Step 3: Determine the band of Joseph Michael
  ?josephMichael dbo:band ?band .
  ?josephMichael foaf:name ""Joseph Michael""@en .

  # Step 4: Identify the reference (artist) related to the name of ""Nevermore"" (2006 film)
  ?reference dbp:title ""Nevermore""@en .
  ?reference a dbo:Film .
  ?reference dbo:reference ?artistRef .
  ?artistRef a dbo:Artist .

  # Step 5: Find the band member of this reference
  ?bandMember dbo:member ?artistRef .

  # Step 6: Find the associated musical artist connecting all these elements
  ?associatedMusicalArtist dbp:associatedBandMember ?bandMember .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
959,25,test,Give me the native of Japan and manager of the team of Takashi Sekizuka.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/manager> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Japan> . ?v0 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Takashi_Sekizuka> . },"```sparql
SELECT ?manager WHERE {
  ?team <http://dbpedia.org/ontology/team> ?manager .
  ?manager <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Manager> .
  ?manager <http://dbpedia.org/property/nationality> <http://dbpedia.org/resource/Japan> .
  <http://dbpedia.org/resource/Takashi_Sekizuka> <http://dbpedia.org/ontology/team> ?team .
}
```",3,3,4,2,2,3,3,71,0,0,6,0,0.0,0
427,61,test,"Give me the party of the person born, that is an office holder and a politician, as the birth name of Romano Prodi and party of the father of the alumnus of Massachusetts Institute of Technology.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?v5 . ?v3 <http://dbpedia.org/property/birthName> ?v1 . ?v5 <http://dbpedia.org/ontology/party> ?result . ?v3 <http://dbpedia.org/ontology/party> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Massachusetts_Institute_of_Technology> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
SELECT DISTINCT ?party1 ?party2 WHERE {
  # Part 1: Find the party of Romano Prodi who is an office holder and politician
  {
    ?person dbpedia-owl:birthName ""Romano Prodi""@en;
            a dbo:OfficeHolder, dbo:Politician.
    ?person dbo:party ?party1.
  }
  
  UNION
  
  # Part 2: Find the party of the father of an MIT alumnus
  {
    ?alumnus dbo:almaMater <http://dbpedia.org/resource/Massachusetts_Institute_of_Technology>;
             dbo:father ?father.
    ?father dbo:party ?party2.
  }
}
```",6,8,7,3,2,3,3,71,0,0,3,0,0.0,0
626,18,test,"Give me the awardee of the award of Aleksey Petrovich Yermolov and commander in the force, that is a military conflict, of the commander in Battle of Paris (1814).",SELECT ?result WHERE { <http://dbpedia.org/resource/Aleksey_Petrovich_Yermolov> <http://dbpedia.org/property/awards> ?v3 . ?result <http://dbpedia.org/property/awards> ?v3 . <http://dbpedia.org/resource/Battle_of_Paris_(1814)> <http://dbpedia.org/ontology/commander> ?v1 . ?v2 <http://dbpedia.org/ontology/commander> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT ?awardee WHERE {
  # Step 1: Identify the award associated with Aleksey Petrovich Yermolov
  <http://dbpedia.org/resource/Aleksey_Petrovich_Yermolov> <http://dbpedia.org/ontology/receivedAward> ?award .

  # Step 2: Find the awardee of that specific award
  ?awardee <http://dbpedia.org/ontology/receivedAward> ?award .

  # Step 3: Determine the commander in the Battle of Paris (1814)
  <http://dbpedia.org/resource/Battle_of_Paris_(1814)> <http://dbpedia.org/ontology/commander> ?commanderParis .

  # Step 4: Identify the force commanded by this individual during a military conflict
  ?commanderParis <http://dbpedia.org/ontology/battleCommanded> ?militaryConflict .
}
```",5,6,6,3,2,3,2,20,0,0,23,0,0.0,0
959,48,test,"Give me the member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of the person born in 1958 and manager of the team of Takashi Sekizuka.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Takashi_Sekizuka> . ?v3 <http://dbpedia.org/ontology/birthYear> ""1958""^^<http://www.w3.org/2001/XMLSchema#gYear> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v3 <http://dbpedia.org/ontology/almaMater> ?v1 . ?result <http://dbpedia.org/ontology/team> ?v1 . }","```sparql
SELECT ?member WHERE {
    # Step 1: Find the team managed by Takashi Sekizuka
    <http://dbpedia.org/resource/Takashi_Sekizuka> <http://dbpedia.org/ontology/team> ?team .
    
    # Step 2: Identify the manager of this team who was born in 1958
    ?person <http://dbpedia.org/property/birthYear> ""1958""^^xsd:gyear ;
            <http://dbpedia.org/ontology/manager> ?team .
    
    # Step 3: Determine the alma mater of this person, ensuring it meets all criteria
    ?person <http://dbpedia.org/ontology/almaMater> ?almaMater .
    ?almaMater <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organization> ;
               <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University> ;
               <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalOrganization> ;
               <http://dbpedia.org/property/country> <http://dbpedia.org/resource/Japan> .
    
    # Step 4: Find a member of this alma mater
    ?member <http://dbpedia.org/ontology/alumniOf> ?almaMater .
}
```",5,9,6,3,2,3,3,71,0,0,3,0,0.0,0
754,20,test,Give me the parent of the child of the reference to Ram Khamhaeng the Great and parent of the parent of the parent of Min Linka.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Min_Linka> <http://dbpedia.org/ontology/parent> ?v1 . ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://dbpedia.org/ontology/parent> ?v2 . ?v4 <http://dbpedia.org/ontology/child> ?v5 . ?v4 <http://xmlns.com/foaf/0.1/name> ""Ram Khamhaeng the Great""@en . ?result <http://dbpedia.org/ontology/child> ?v5 . }","```sparql
# Step 1: Reference to Ram Khamhaeng the Great
SELECT ?reference WHERE {
    ?reference rdfs:label ""Ram Khamhaeng the Great""@en .
}

# Step 2: Child of the Reference
SELECT ?child WHERE {
    VALUES ?reference { <URI_of_Ram_Khamhaeng_the_Great> }
    ?child dbo:parent ?reference .
}

# Step 3: Parent of the Child
SELECT ?parentOfChild WHERE {
    SELECT ?child WHERE {
        VALUES ?reference { <URI_of_Ram_Khamhaeng_the_Great> }
        ?child dbo:parent ?reference .
    }
    ?parentOfChild dbo:child ?child .
}

# Step 4: Min Linka's Ancestry
SELECT ?greatGrandparent WHERE {
    SELECT ?grandparent WHERE {
        SELECT ?parent WHERE {
            ?minLinka rdfs:label ""Min Linka""@en .
            ?minLinka dbo:parent ?parent .
        }
        ?grandparent dbo:child ?parent .
    }
    ?greatGrandparent dbo:child ?grandparent .
}

# Step 5: Parent of the Great-Grandparent
SELECT ?parentOfGreatGrandparent WHERE {
    SELECT ?greatGrandparent WHERE {
        SELECT ?grandparent WHERE {
            SELECT ?parent WHERE {
                ?minLinka rdfs:label ""Min Linka""@en .
                ?minLinka dbo:parent ?parent .
            }
            ?grandparent dbo:child ?parent .
        }
        ?greatGrandparent dbo:child ?grandparent .
    }
    ?parentOfGreatGrandparent dbo:child ?greatGrandparent .
}

# Step 6: Common Parent
SELECT DISTINCT ?commonParent WHERE {
    # Parent of the child of Ram Khamhaeng the Great
    SELECT ?parentOfChild WHERE {
        VALUES ?reference { <URI_of_Ram_Khamhaeng_the_Great> }
        ?child dbo:parent ?reference .
        ?parentOfChild dbo:child ?child .
    }

    # Parent of the great-grandparent of Min Linka
    SELECT ?parentOfGreatGrandparent WHERE {
        SELECT ?greatGrandparent WHERE {
            SELECT ?grandparent WHERE {
                SELECT ?parent WHERE {
                    ?minLinka rdfs:label ""Min Linka""@en .
                    ?minLinka dbo:parent ?parent .
                }
                ?grandparent dbo:child ?parent .
            }
            ?greatGrandparent dbo:child ?grandparent .
        }
        ?parentOfGreatGrandparent dbo:child ?greatGrandparent .
    }

    # Find the common parent
    VALUES (?commonParent) { ?parentOfChild ?parentOfGreatGrandparent }
}
```",6,6,7,3,2,3,2,20,0,0,1,0,0.0,0
528,62,test,"Give me the force of Narciso Campero and war of the military force of the entity, that is a societal event, in Chile and war of the commander in the work of --01-09.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Chile> . ?v6 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/ontology/commander> ?v6 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Narciso_Campero> . ?v3 <http://dbpedia.org/ontology/battle> ?v4 . ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/property/author> ""--01-09""^^<http://www.w3.org/2001/XMLSchema#gMonthDay> . }","```sparql
SELECT ?force WHERE {
  ?event <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Chile>.
  ?event <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>.
  
  ?militaryForce <http://dbpedia.org/property/militaryForce> ?event.
  ?war <http://dbpedia.org/ontology/militaryForce> ?militaryForce.

  ?commander <http://dbpedia.org/ontology/commander> ?war.

  ?work <http://dbpedia.org/ontology/date> ""01-09""^^xsd:date.
  ?work <http://dbpedia.org/ontology/commander> ?commander.

  <http://dbpedia.org/resource/Narciso_Campero> <http://dbpedia.org/property/force> ?force.
}
```",7,8,8,3,3,3,3,71,0,0,2,0,0.0,0
767,70,test,"Give me the entity in the administration, that is a settlement, of Green and reference to the alter ego of the persona, that is a fictional character, of Matthew Burland and alma mater of the administration of the reference to George Kilbon Nash.","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v3 . ?v7 <http://dbpedia.org/property/governor> ?v0 . ?v1 <http://dbpedia.org/property/alterEgo> ""Matthew Burland""@en . ?v1 <http://dbpedia.org/property/alterEgo> ?v3 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v7 <http://dbpedia.org/ontology/almaMater> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""George Kilbon Nash""@en . ?v4 <http://dbpedia.org/property/leaderParty> ""Green""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?result <http://dbpedia.org/ontology/state> ?v4 . }","```sparql
SELECT ?entity WHERE {
  ?admin <http://dbpedia.org/ontology/administration> <http://dbpedia.org/resource/Green>.
  ?admin <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>.
  
  OPTIONAL { 
    ?fictionalCharacter <http://dbpedia.org/property/alterEgo> <http://dbpedia.org/resource/Matthew_Burland>.
    ?fictionalCharacter <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>.
  }
  
  OPTIONAL {
    ?nash <http://dbpedia.org/property/almaMater> ?university.
    ?university <http://dbpedia.org/ontology/administration> ?admin.
    <http://dbpedia.org/resource/George_Kilbon_Nash> = ?nash.
  }
  
  FILTER EXISTS { ?fictionalCharacter }
}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
392,25,test,"Give me the province of Schio and region of the time zone, that is a sports event, of Aguilar de Segarra and entity in the region, that is a country, of Central European Time.",SELECT ?result WHERE { <http://dbpedia.org/resource/Aguilar_de_Segarra> <http://dbpedia.org/ontology/timeZone> ?v4 . ?v2 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsEvent>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Schio> <http://dbpedia.org/ontology/province> ?result . ?result <http://dbpedia.org/ontology/timeZone> ?v4 . ?result <http://dbpedia.org/ontology/country> ?v2 . },"```sparql
# Step 1: Find the province of Schio
SELECT ?province WHERE {
    <http://dbpedia.org/resource/Schio> <http://www.w3.org/2000/01/rdf-schema#seeAlso> ?v1 .
    ?v1 <http://dbpedia.org/ontology/province> ?province .
}

UNION

# Step 2: Find the region of Central European Time
SELECT ?region WHERE {
    <http://dbpedia.org/resource/Central_European_Time> <http://www.w3.org/2000/01/rdf-schema#seeAlso> ?v1 .
    ?v1 <http://dbpedia.org/ontology/timeZone> ?timeZone .
    ?timeZone <http://dbpedia.org/ontology/country> ?country .
    ?country <http://dbpedia.org/ontology/administrativeTerritory> ?region .
}

UNION

# Step 3: Find the sports event of Aguilar de Segarra
SELECT ?sportsEvent WHERE {
    <http://dbpedia.org/resource/Aguilar_de_Segarra> <http://dbpedia.org/property/sportsEvent> ?sportsEvent .
    ?sportsEvent <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsEvent> .
}

UNION

# Step 4: Find an entity in the region (of Central European Time) that is a country
SELECT ?entity WHERE {
    ?region <http://www.w3.org/2000/01/rdf-schema#seeAlso> ?v1 .
    ?v1 <http://dbpedia.org/ontology/country> ?entity .
}
```",5,7,6,2,3,2,3,28,0,0,1,0,0.0,0
360,23,test,"Give me the reference to the author of Blinded by the Light and writer of the work, that is an album, of Dave Flett.","SELECT ?result WHERE { <http://dbpedia.org/resource/Blinded_by_the_Light> <http://dbpedia.org/property/author> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . ?v2 <http://dbpedia.org/property/author> ""Dave Flett""@en . ?v2 <http://dbpedia.org/property/writer> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Album>. }","```sparql
SELECT ?authorReference ?albumWriterReference WHERE {
  # Find the author of ""Blinded by the Light""
  <http://dbpedia.org/resource/Blinded_by_the_Light_(song)> dbo:author ?author .
  
  # Get a reference to the author (Bruce Springsteen)
  ?author rdfs:label ?authorLabel .
  FILTER(CONTAINS(LCASE(?authorLabel), ""bruce springsteen""))
  ?author dbp:wikiPageWikiLink ?authorReference .

  # Find the album written by Dave Flett
  <http://dbpedia.org/resource/Dave_Flett> dbo:work ?album .
  
  # Ensure it is classified as an album
  ?album rdf:type <http://dbpedia.org/ontology/Album> .
  
  # Get a reference to Dave Flett
  ?album dbp:writer ?albumWriter .
  FILTER(CONTAINS(LCASE(?albumWriter), ""dave flett""))
  ?albumWriter rdfs:label ?albumWriterLabel .
  ?albumWriter dbp:wikiPageWikiLink ?albumWriterReference .
}
```",4,5,5,2,2,2,3,28,0,0,1,0,0.0,0
547,45,test,Give me the resting place of the awardee of the award of Gerald Graham and resting place of James Burton (Egyptologist) and resting place of Simon Cadell.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . ?v1 <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Simon_Cadell> <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Gerald_Graham> <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/James_Burton_(Egyptologist)> <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
SELECT DISTINCT ?person ?restingPlace WHERE {
  # Gerald Graham's award and resting place
  OPTIONAL {
    ?gPerson a dbo:Person;
             foaf:name ""Gerald Graham"" .
    ?awardAwardedTo dbp:recipient ?gPerson;
                    dbo:awardee ?gPerson .
    ?gPerson dbo:deathPlace ?restingPlace .
  }

  # James Burton (Egyptologist)'s resting place
  OPTIONAL {
    ?jBurton a dbo:Person;
             foaf:name ""James Burton"" ;
             dbo:occupation dbp:Egyptologist .
    ?jBurton dbo:deathPlace ?restingPlace .
  }

  # Simon Cadell's resting place
  OPTIONAL {
    ?sCadell a dbo:Person;
             foaf:name ""Simon Cadell"" .
    ?sCadell dbo:deathPlace ?restingPlace .
  }
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
391,51,test,"Give me the actor of the claim to fame, that is a work, of Michael Ballhaus and actor of the movie, that is a movie and a work and a television show, with the professional in .","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://dbpedia.org/property/occupation> """"@en . ?v2 <http://dbpedia.org/property/starring> ?v1 . ?v2 <http://dbpedia.org/property/starring> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v4 <http://dbpedia.org/ontology/starring> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Michael_Ballhaus> <http://dbpedia.org/ontology/knownFor> ?v4 . }","```sparql
SELECT DISTINCT ?actor
WHERE {
  # Part 1: Actors from Michael Ballhaus's works
  ?work <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/Michael_Ballhaus> .
  ?work <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work> .
  ?work <http://dbpedia.org/ontology/starring> ?actor .

  # Part 2: Actors from movies that are also works and television shows
  ?movie <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Movie> .
  ?movie <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work> .
  ?movie <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow> .
  ?movie <http://dbpedia.org/ontology/starring> ?actor .

}
```",5,9,6,3,2,3,3,71,0,0,11,0,0.0,0
391,59,test,"Give me the native of the figure known as the nick name of Jackson, Tennessee and actor of the claim to fame, that is a work, of the spouse of Sherry Hormann.","SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v5 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Sherry_Hormann> <http://dbpedia.org/ontology/spouse> ?v0 . ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://dbpedia.org/property/nickname> ?v3 . ?v0 <http://dbpedia.org/ontology/knownFor> ?v5 . <http://dbpedia.org/resource/Jackson,_Tennessee> <http://xmlns.com/foaf/0.1/nick> ?v3 . }","```sparql
# Step 1: Identify the spouse of Sherry Hormann
SELECT ?spouse WHERE {
    <http://dbpedia.org/resource/Sherry_Hormann> <http://xmlns.com/foaf/0.1/spouse> ?spouse .
}

# Step 2: Determine the claim to fame (a work) of that spouse
SELECT ?work WHERE {
    ?spouse <http://dbpedia.org/ontology/knownFor> ?work .
    FILTER (?work <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>)
}

# Step 3: Find out who is an actor in that particular work
SELECT ?actor WHERE {
    ?work <http://dbpedia.org/ontology/starring> ?actor .
}

# Step 4: Locate the nickname for Jackson, Tennessee
SELECT ?nickname WHERE {
    <http://dbpedia.org/resource/Jackson,_Tennessee> <http://dbpedia.org/property/nickname> ?nickname .
}

# Step 5: Find the native person associated with this nickname
SELECT ?native WHERE {
    ?native <http://dbpedia.org/ontology/nativePlace> ?place .
    ?place <http://www.w3.org/2000/01/rdf-schema#label> ?nickname .
}
```",6,7,7,3,2,3,3,71,0,0,1,0,0.0,0
16,66,test,Give me the professional in the profession of Satomi Ishihara and spouse of the person born as Ted Martin McGinley and person born as the birth name of the alumnus of Ohio State University.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v6 . ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?v3 <http://dbpedia.org/property/birthName> ""Ted Martin McGinley""@en . ?v1 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Ohio_State_University> . ?v1 <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Satomi_Ishihara> <http://dbpedia.org/property/occupation> ?v6 . ?result <http://dbpedia.org/property/birthName> ?v2 . }","```sparql
# Step 1: Get the profession of Satomi Ishihara
SELECT ?profession WHERE {
    <http://dbpedia.org/resource/Satomi_Ishihara> <http://purl.org/dc/terms/subject> ?profession .
}

# Step 2: Find Ted Martin McGinley's spouse
SELECT ?spouse WHERE {
    ?person <http://www.w3.org/2000/01/rdf-schema#label> ""Ted Martin McGinley""@en .
    ?person <http://dbpedia.org/ontology/spouse> ?spouse .
}

# Step 3: Find an alumnus of Ohio State University and their birth name
SELECT ?alumnus ?birthName WHERE {
    ?alumnus <http://dbpedia.org/property/almaMater> <http://dbpedia.org/resource/Ohio_State_University> .
    ?alumnus <http://dbpedia.org/ontology/birthName> ?birthName .
}

# Step 4: Find the spouse who matches both criteria
SELECT DISTINCT ?professional WHERE {
    # Get profession of Satomi Ishihara
    <http://dbpedia.org/resource/Satomi_Ishihara> <http://purl.org/dc/terms/subject> ?profession .

    # Ted Martin McGinley's spouse
    ?person1 <http://www.w3.org/2000/01/rdf-schema#label> ""Ted Martin McGinley""@en .
    ?person1 <http://dbpedia.org/ontology/spouse> ?professional .

    # Alumnus of Ohio State University and their birth name's spouse
    ?alumnus <http://dbpedia.org/property/almaMater> <http://dbpedia.org/resource/Ohio_State_University> .
    ?alumnus <http://dbpedia.org/ontology/birthName> ?birthName .
    ?person2 <http://www.w3.org/2000/01/rdf-schema#label> ?birthName .
    ?person2 <http://dbpedia.org/ontology/spouse> ?professional .

    # Ensure the professional has the same profession as Satomi Ishihara
    ?professional <http://purl.org/dc/terms/subject> ?profession .
}
```",7,7,8,3,3,3,3,71,0,0,1,0,0.0,0
421,22,test,Give me the native of the birthplace of Samir Bekrić and band member of the awardee of [[#Awards and nominations.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v2 <http://dbpedia.org/property/awards> ""[[#Awards and nominations""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . <http://dbpedia.org/resource/Samir_Bekrić> <http://dbpedia.org/ontology/birthPlace> ?v3 . }","```sparql
SELECT ?native ?band ?award WHERE {
  # Find the birthplace of Samir Bekrić
  <http://dbpedia.org/resource/Samir_Bekrić> <http://dbpedia.org/ontology/birthPlace> ?birthplace .

  # Find natives of that birthplace who are band members
  ?native <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BandMember> ;
          <http://dbpedia.org/ontology/nationality> ?birthplace .

  # Find the band of which they are a member
  ?native <http://dbpedia.org/property/memberOf> ?band .

  # Check if the band has any awards or nominations
  ?band <http://dbpedia.org/ontology/award> ?award .
}
```",4,4,5,2,2,2,3,28,0,0,2,0,0.0,0
54,30,test,"Give me the predecessor of the child, that is an office holder and a royalty, of Thihapate of Mohnyin and parent of Thado Minsaw of Prome and child of Thinkhaya of Pagan.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Thihapate_of_Mohnyin> . <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
SELECT ?predecessor WHERE {
  ?person <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> .
  ?person <http://dbpedia.org/ontology/mother> <http://dbpedia.org/resource/Thihapate_of_Mohnyin> .
  ?person <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Thinkhaya_of_Pagan> .

  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder> .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .

  ?office <http://dbpedia.org/property/holder> ?person .
  ?office <http://dbpedia.org/ontology/predecessor> ?predecessor .
}
```",4,6,5,2,3,3,3,71,0,0,1,0,0.0,0
378,53,test,Give me the war of Joaquín Blake and claim to fame of the commander in Great Siege of Gibraltar and war of the person born as the birth name of Carl Pontus Gahn.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/knownFor> ?result . <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Joaquín_Blake> <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Great_Siege_of_Gibraltar> <http://dbpedia.org/ontology/commander> ?v1 . },"```sparql
# Part 1: Find the war of Joaquín Blake
SELECT ?war WHERE {
    <http://dbpedia.org/resource/Joaqu%C3%ADn_Blake> <http://dbpedia.org/ontology/battle> ?war .
}

# Part 2: Identify the commander in the Great Siege of Gibraltar and their claim to fame
SELECT ?commander ?claimToFame WHERE {
    <http://dbpedia.org/resource/Great_Siege_of_Gibraltar> <http://dbpedia.org/ontology/commander> ?commander .
    ?commander <http://dbpedia.org/ontology/knownFor> ?claimToFame .
}

# Part 3: Find the war involving Carl Pontus Gahn
SELECT ?war WHERE {
    <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/property/birthName> ?birthName .
    ?person <http://www.w3.org/2000/01/rdf-schema#label> ?birthName .
    ?person <http://dbpedia.org/ontology/battle> ?war .
}
```",6,6,7,3,3,3,3,71,0,0,2,0,0.0,0
801,59,test,"Give me the producer of the work, that is a musical work and a song and a work, of the professional, that is a musical artist, in Rapper and professional in the alter ego of the true self of The Shadow.","SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v3 <http://dbpedia.org/property/alterEgo> ?v2 . ?result <http://dbpedia.org/property/occupation> ?v2 . ?v5 <http://dbpedia.org/ontology/producer> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/property/occupation> ""Rapper""@en . ?v5 <http://dbpedia.org/property/writer> ?v0 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://xmlns.com/foaf/0.1/givenName> ""The Shadow""@en . }","```sparql
SELECT ?producer WHERE {
  ?trueSelf <http://dbpedia.org/ontology/alterEgo> <http://dbpedia.org/resource/The_Shadow> .
  ?artist <http://dbpedia.org/ontology/profession> <http://dbpedia.org/resource/Rapper> ;
          <http://dbpedia.org/ontology/alias> ?trueSelf .
  ?work <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork> , <http://dbpedia.org/ontology/Song> ;
        <http://dbpedia.org/ontology/work> ?artist .
  ?work <http://dbpedia.org/ontology/producer> ?producer .
}
```",6,10,7,3,2,3,3,71,0,0,473,0,0.0,0
767,68,test,"Give me the reference to the alter ego of Black Hood and entity in the administration, that is a settlement, of the writer of Where It's At (Dustin Lynch album) and alma mater of the administration of the reference to George Kilbon Nash.","SELECT ?result WHERE { ?v7 <http://dbpedia.org/ontology/almaMater> ?result . <http://dbpedia.org/resource/Black_Hood> <http://dbpedia.org/property/alterEgo> ?v3 . ?v4 <http://dbpedia.org/property/leaderParty> ?v5 . ?result <http://dbpedia.org/ontology/state> ?v4 . ?v7 <http://dbpedia.org/property/governor> ?v0 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Where_It's_At_(Dustin_Lynch_album)> <http://dbpedia.org/property/writer> ?v5 . ?v0 <http://xmlns.com/foaf/0.1/name> ""George Kilbon Nash""@en . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . }","```sparql
SELECT ?alterEgo ?settlement WHERE {
  # Step 1: Identify the alter ego of Black Hood
  ?blackHood <http://dbpedia.org/ontology/alsoKnownAs> ?alterEgo .
  FILTER(STR(?blackHood) = ""Black_Hood"")

  # Step 2: Find the writer of ""Where It's At"" by Dustin Lynch and their administrative connection
  ?album <http://dbpedia.org/property/writer> ?writer .
  ?admin <http://dbpedia.org/ontology/administration> ?writer .
  FILTER(STR(?album) = ""Where_It's_At_(Dustin_Lynch_album)"")

  # Step 3: Find George Kilbon Nash's alma mater and its administrative reference
  ?nash <http://dbpedia.org/property/almaMater> ?almaMater .
  ?admin2 <http://dbpedia.org/ontology/administration> ?almaMater .
  FILTER(STR(?nash) = ""George_Kilbon_Nash"")

  # Step 4: Ensure the final entity is a settlement
  ?settlement <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement> .
  FILTER(STR(?admin) = STR(?admin2))
}
```",8,9,9,3,3,3,3,71,0,0,1,0,0.0,0
801,66,test,"Give me the producer of the work, that is a musical work and a song and a work, of 50 Cent and professional in the alter ego of The Shadow and associated musical artist of the writer, that is a musical artist and an artist, of the album, that is a musical work and a work, of What U See Is What U Get.",SELECT ?result WHERE { ?v6 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/50_Cent> . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v1 <http://dbpedia.org/property/writer> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/What_U_See_Is_What_U_Get> <http://dbpedia.org/ontology/album> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v3 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v6 <http://dbpedia.org/ontology/producer> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
SELECT ?producer WHERE {
    # Step 1: Identify the album ""What U See Is What U Get"" and its writer who is a musical artist
    ?album rdf:type dbo:MusicalWork ;
           rdfs:label ""What U See Is What U Get""@en .
    
    ?writer dbo:associatedMusicalArtist ?album ;
            rdf:type dbo:MusicalArtist, dbo:Artist .

    # Step 2: Find works that are both songs and musical works involving 50 Cent as The Shadow
    ?work rdf:type dbo:SongsAndMusic, dbo:MusicalWork ;
          dbo:artist [dbo:alterEgo ""The Shadow"" ; rdfs:label ""50 Cent""@en] .

    # Step 3: Retrieve the producer of these identified works
    ?work dbo:producer ?producer .
}
```",7,14,8,3,3,3,3,71,0,0,1,0,0.0,0
378,32,test,Give me the war of the commander in Peninsular War and war of the person born as Carl Pontus Gahn.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v3 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Peninsular_War> <http://dbpedia.org/ontology/commander> ?v3 . ?v1 <http://dbpedia.org/property/birthName> ""Carl Pontus Gahn""@en . }","```sparql
SELECT DISTINCT ?war WHERE {
  # Part 1: Wars commanded by the Peninsular War commander
  <http://dbpedia.org/resource/Peninsular_War> <http://dbpedia.org/ontology/commander> ?commander .
  ?commander <http://dbpedia.org/ontology/battle> ?war .

  UNION

  # Part 2: Wars associated with Carl Pontus Gahn
  <http://dbpedia.org/resource/C._P._Gahn> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person> .
  <http://dbpedia.org/resource/C._P._Gahn> <http://dbpedia.org/property/birthName> ""Carl Pontus Gahn"" .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person> .
  ?person <http://dbpedia.org/property/birthName> ""Carl Pontus Gahn"" .
  ?person <http://dbpedia.org/ontology/battle> ?war .
}
```",4,4,5,2,2,3,3,71,0,0,2,0,0.0,0
9,23,test,"Give me the alma mater of the mayor, that is a politician, of the entity, that is an organisation, in Belfast.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/property/leader> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/ontology/almaMater> ?result . ?v2 <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Belfast> . },"```sparql
SELECT ?almaMater WHERE {
  ?organization <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Belfast> .
  ?organization <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation> .
  
  ?mayor <http://dbpedia.org/ontology/politicalParty> ?party ;
         <http://dbpedia.org/ontology/mayorFor> ?organization ;
         <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .
  
  ?mayor <http://dbpedia.org/property/almaMater> ?almaMater .
}
```",3,5,4,3,1,3,3,71,0,0,10,0,0.0,0
328,53,test,"Give me the commander in Eastern Front (World War II) and leader of the office, that is a government agency, of Joseph Stalin and awardee of the award of the commander in Volcano and Ryukyu Islands campaign.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/awards> ?v2 . <http://dbpedia.org/resource/Eastern_Front_(World_War_II)> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v1 <http://dbpedia.org/ontology/leader> ?result . <http://dbpedia.org/resource/Joseph_Stalin> <http://dbpedia.org/property/office> ?v1 . ?result <http://dbpedia.org/property/awards> ?v2 . <http://dbpedia.org/resource/Volcano_and_Ryukyu_Islands_campaign> <http://dbpedia.org/ontology/commander> ?v3 . },"```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Eastern_Front_(World_War_II)> .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder> .
  ?office <http://dbpedia.org/property/leader> ?person .
  ?office <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency> .
  ?office <http://dbpedia.org/resource/Joseph_Stalin> <http://dbpedia.org/property/leader> .
  ?person <http://dbpedia.org/ontology/awardee> ?award1 .
  ?award1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Volcano_and_Ryukyu_Islands_campaign> .
  ?person <http://dbpedia.org/ontology/awardee> ?award2 .
  ?award2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Ryukyu_Islands_campaign> .
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
492,70,test,"Give me the person decedent at the work of US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite and commander in the war, that is a military conflict and an event, of the commander in Battle of Verdun and person decedent at the capital, that is a settlement, of the country of Khemis Miliana District.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/capital> ?v3 . <http://dbpedia.org/resource/Battle_of_Verdun> <http://dbpedia.org/ontology/commander> ?v0 . ?v4 <http://dbpedia.org/property/author> ""US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite""@en . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v7 <http://dbpedia.org/ontology/commander> ?result . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/deathPlace> ?v3 . ?v0 <http://dbpedia.org/ontology/battle> ?v7 . <http://dbpedia.org/resource/Khemis_Miliana_District> <http://dbpedia.org/ontology/country> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/deathPlace> ?v4 . }","```sparql
# Step 1: Find the decedent at Joseph C. Satterthwaite's work
SELECT ?decedentSatterthwaite WHERE {
    ?work <http://dbpedia.org/ontology/person> <http://dbpedia.org/resource/Joseph_C._Satterthwaite>.
    ?work <http://dbpedia.org/property/decedent> ?decedentSatterthwaite.
}

# Step 2: Find the commander in a war that is both a military conflict and an event related to Battle of Verdun
SELECT ?commanderVerdunWar WHERE {
    ?verdunCommander <http://dbpedia.org/ontology/commander> ?battleOfVerdun.
    ?battleOfVerdun <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Battle>.
    ?verdunCommander <http://dbpedia.org/ontology/battle> ?war.
    ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>.
    ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>.
}

# Step 3: Find the decedent at the capital of Khemis Miliana District
SELECT ?decedentKhemis WHERE {
    ?capital <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>.
    ?capital <http://dbpedia.org/property/capital> ?khemisMiliana.
    ?khemisMiliana <http://dbpedia.org/ontology/administrativeUnit> <http://dbpedia.org/resource/Khemis_Miliana_District>.
    ?capital <http://dbpedia.org/property/decedent> ?decedentKhemis.
}

# Step 4: Find the common person among these roles
SELECT DISTINCT ?person WHERE {
    VALUES ?person { ?decedentSatterthwaite ?commanderVerdunWar ?decedentKhemis }
}
```",8,11,9,3,3,3,3,71,0,0,1,0,0.0,0
184,70,test,"Give me the child of the child of the parent, that is a royalty, of Archduke Ladislaus Philipp of Austria and parent of the child of the parent of Archduchess Margaret of Austria (born 1925) and parent of the native of Budapest.",SELECT ?result WHERE { ?v7 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/child> ?v4 . <http://dbpedia.org/resource/Archduke_Ladislaus_Philipp_of_Austria> <http://dbpedia.org/ontology/parent> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v7 . ?v3 <http://dbpedia.org/property/father> ?v1 . ?v4 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Budapest> . ?result <http://dbpedia.org/ontology/child> ?v3 . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Margaret_of_Austria_(born_1925)> . },"```sparql
# Step 1: Archduke Ladislaus Philipp's parent who is royalty
SELECT ?parentLadislaus WHERE {
    <http://dbpedia.org/resource/Archduke_Ladislaus_Philipp_of_Austria> <http://www.w3.org/2000/01/rdf-schema#parent> ?parentLadislaus .
    ?parentLadislaus <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
}

# Step 2: Child of the parent found in step 1
SELECT ?childOfParent WHERE {
    ?parentLadislaus <http://www.w3.org/2000/01/rdf-schema#child> ?childOfParent .
}

# Step 3: Child of the child found in step 2
SELECT ?grandChildLadislaus WHERE {
    ?childOfParent <http://www.w3.org/2000/01/rdf-schema#child> ?grandChildLadislaus .
}

# Step 4: Archduchess Margaret's parent who is royalty
SELECT ?parentMargaret WHERE {
    <http://dbpedia.org/resource/Archduchess_Margaret_of_Austria_(born_1925)> <http://www.w3.org/2000/01/rdf-schema#parent> ?parentMargaret .
    ?parentMargaret <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
}

# Step 5: Child of the parent found in step 4
SELECT ?childOfParentMargaret WHERE {
    ?parentMargaret <http://www.w3.org/2000/01/rdf-schema#child> ?childOfParentMargaret .
}

# Step 6: Child of the child found in step 5
SELECT ?grandChildMargaret WHERE {
    ?childOfParentMargaret <http://www.w3.org/2000/01/rdf-schema#child> ?grandChildMargaret .
}

# Step 7: Native of Budapest who is royalty
SELECT ?nativeBudapest WHERE {
    ?nativeBudapest <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Hungary> .
    ?nativeBudapest <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
}

# Step 8: Parent of the native found in step 7
SELECT ?parentNative WHERE {
    ?nativeBudapest <http://www.w3.org/2000/01/rdf-schema#parent> ?parentNative .
}

# Final step: Find common child among grandChildLadislaus, grandChildMargaret, and parentNative
SELECT DISTINCT ?commonChild WHERE {
    VALUES (?individual) { ?grandChildLadislaus ?grandChildMargaret ?parentNative }
    ?individual <http://www.w3.org/2000/01/rdf-schema#child> ?commonChild .
}
```",8,9,9,3,3,3,3,71,0,0,1,0,0.0,0
492,58,test,"Give me the person decedent at French Algeria and person decedent at the capital, that is a settlement, of the country of Khemis Miliana District and commander in the war, that is a military conflict and an event, of Frédéric-Georges Herr.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Frédéric-Georges_Herr> <http://dbpedia.org/ontology/battle> ?v5 . ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . <http://dbpedia.org/resource/Khemis_Miliana_District> <http://dbpedia.org/ontology/country> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/French_Algeria> . ?v1 <http://dbpedia.org/ontology/capital> ?v2 . },"```sparql
# Step 1: Find the capital of Khemis Miliana District
SELECT ?capital WHERE {
    <http://dbpedia.org/resource/Khemis_Miliana_District> <http://dbpedia.org/ontology/capital> ?capital.
}

# Step 2: Identify persons who were decedents in both French Algeria and the capital city
SELECT DISTINCT ?person WHERE {
    ?person <http://dbpedia.org/property/decedentPlace> <http://dbpedia.org/resource/French_Algeria>.
    ?person <http://dbpedia.org/property/decedentPlace> ?capital.
}

# Step 3: Determine the military conflict/event where Frédéric-Georges Herr was a commander
SELECT DISTINCT ?war WHERE {
    ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>.
    ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>.
    <http://dbpedia.org/resource/Frédéric-Georges_Herr> <http://dbpedia.org/ontology/commander> ?war.
}

# Step 4: Find the person who was a commander in that war
SELECT DISTINCT ?person WHERE {
    ?person <http://dbpedia.org/property/decedentPlace> <http://dbpedia.org/resource/French_Algeria>.
    ?person <http://dbpedia.org/property/decedentPlace> ?capital.
    ?person <http://dbpedia.org/ontology/commander> ?war.
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
617,50,test,"Give me the spouse of the child of the successor, that is a royalty, of Antiochus (son of Antiochus III the Great) and parent of the child of Antiochus (son of Antiochus III the Great).",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/child> ?v4 . ?v4 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/child> ?v3 . <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/successor> ?v0 . ?result <http://dbpedia.org/ontology/child> ?v3 . },"```sparql
SELECT ?spouse WHERE {
  ?antiochus dbpedia-owl:parent ?parent .
  FILTER(?parent = dbpedia:Antiochus_III_the_Great) .

  ?antiochus dbpedia-owl:succesor ?successor .
  ?successor a dbo:Royalty .

  ?successorChild dbpedia-owl:child ?successor ;
                  dbpedia-owl:spouse ?spouse .

  ?antiochusChild dbpedia-owl:parent ?antiochus ;
                  dbpedia-owl:child ?successorChild .
}
```",5,6,6,3,2,3,3,71,0,0,2,0,0.0,0
345,18,test,"Give me the team of the person born, that is a soccer player and a soccer manager, on 1978-09-15 and figure known as the nickname of the player, that is a sports club and an organisation and a soccer club, in Armando Heeb.","SELECT ?result WHERE { <http://dbpedia.org/resource/Armando_Heeb> <http://dbpedia.org/ontology/team> ?v1 . ?result <http://dbpedia.org/ontology/manager> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v3 <http://dbpedia.org/ontology/birthDate> ""1978-09-15""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://dbpedia.org/property/nickname> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v1 <http://dbpedia.org/property/nickname> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. }","```sparql
SELECT ?team WHERE {
  ?person dbpedia-owl:birthDate ""1978-09-15""^^xsd:date ;
          rdf:type dbo:SoccerPlayer, dbo:SoccerManager .
  
  ?person dbo:playsFor ?team .

  ?nickname rdfs:label ?clubLabel ;
            rdf:type dbo:SportsClub, dbo:Organization, dbo:SoccerClub .

  ?person foaf:nick ?nickname .

  ?club dbpedia-owl:wikiPageRedirects ?nickname ;
        dbo:foundedByArmandoHeeb true .

  FILTER (lang(?clubLabel) = 'en')
}
```",5,10,6,3,2,3,2,20,0,0,1,0,0.0,0
528,59,test,"Give me the war of the military force of the entity, that is a societal event, in Chile and war of the commander in the work of --01-09.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/author> ""--01-09""^^<http://www.w3.org/2001/XMLSchema#gMonthDay> . ?v2 <http://dbpedia.org/ontology/battle> ?v3 . ?v5 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/ontology/commander> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Chile> . }","```sparql
SELECT DISTINCT ?war1 ?war2 WHERE {
  # Part 1: Societal event in Chile and its military force's war
  ?entity <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent> .
  ?entity <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Chile> .
  ?entity <http://dbpedia.org/property/militaryForce> ?militaryForce .
  ?militaryForce <http://dbpedia.org/ontology/war> ?war1 .

  # Part 2: Work with specific date and its commander's war
  ?work <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/CreativeWork> .
  ?work <http://purl.org/dc/terms/date> ?date .
  FILTER (STRSTARTS(STR(?date), ""-01-09"")) .
  ?work <http://dbpedia.org/property/commander> ?commander .
  ?commander <http://dbpedia.org/ontology/war> ?war2 .
}
```",6,7,7,3,2,3,3,71,0,0,14,0,0.0,0
281,50,test,"Give me the war of the profession, that is a military unit, of Heather Roy and entity in the birth place, that is a country, of the leader, that is a politician, of 1962 New South Wales state election.",SELECT ?result WHERE { <http://dbpedia.org/resource/1962_New_South_Wales_state_election> <http://dbpedia.org/property/leader> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://dbpedia.org/ontology/birthPlace> ?v4 . <http://dbpedia.org/resource/Heather_Roy> <http://dbpedia.org/property/occupation> ?v3 . ?result <http://dbpedia.org/ontology/place> ?v4 . ?v3 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
# Step 1: Get the leader (politician) of the 1962 New South Wales state election
SELECT ?leader WHERE {
    ?election dbpedia-owl:stateElection ""New South Wales"" .
    ?election dbpedia-owl:date ""1962""^^xsd:gYear .
    ?election dbpedia-owl:winner ?leader .
    ?leader a dbo:Politician .
}

# Step 2: Get the birthplace country of that leader
SELECT ?birthCountry WHERE {
    ?leader foaf:bornIn ?birthPlace .
    ?birthPlace geo:hasCoordinates ?coordinates .
    ?birthPlace dbpedia-owl:country ?birthCountry .
}

# Step 3: Find an entity in that birthplace country
SELECT ?entity WHERE {
    ?entity dbpedia-owl:country ?birthCountry .
}

# Step 4: Identify Heather Roy's profession and find a military unit associated with it
SELECT ?militaryUnit WHERE {
    dbo:Heather_Roy dbo:profession ?profession .
    ?profession rdfs:label ""Politician""@en .
    ?militaryUnit dbpedia-owl:member ?person .
    ?person dbo:occupation ?profession .
}

# Step 5: Determine the war related to that military unit
SELECT ?war WHERE {
    ?militaryUnit dbpedia-owl:partOfMilitaryConflict ?war .
    ?war a dbo:MilitaryConflict .
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
281,52,test,"Give me the entity in the birth place, that is a country, of Bob Heffron and war of New Zealand Army and war of the awardee of the award of Jonathon Band.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> ?v3 . ?result <http://dbpedia.org/ontology/place> ?v5 . ?v2 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/New_Zealand_Army> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Jonathon_Band> <http://dbpedia.org/property/awards> ?v3 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Bob_Heffron> <http://dbpedia.org/ontology/birthPlace> ?v5 . },"```sparql
SELECT DISTINCT ?entity WHERE {
  # Step 1: Find Bob Heffron's birthplace country
  <http://dbpedia.org/resource/Bob_Heffron> <http://www.w3.org/2000/01/rdf-schema#birthPlace> ?birthPlace .
  ?birthPlace <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country> .

  # Step 2: Find entities in that country
  ?entity <http://www.w3.org/2000/01/rdf-schema#location> ?birthPlace .

  # Step 3: Identify wars involving the New Zealand Army
  OPTIONAL {
    ?newZealandWar <http://dbpedia.org/ontology/army> <http://dbpedia.org/resource/New_Zealand_Army> .
  }

  # Step 4: Identify awards received by Jonathon Band and find related wars
  OPTIONAL {
    <http://dbpedia.org/resource/Jonathon_Band> <http://dbpedia.org/property/award> ?award .
    ?war <http://dbpedia.org/ontology/awardee> ?award .
  }

  FILTER EXISTS { ?newZealandWar }
  FILTER EXISTS { ?war }
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
328,48,test,"Give me the leader of the office, that is a government agency, of Joseph Stalin and awardee of the award of the commander in Volcano and Ryukyu Islands campaign.",SELECT ?result WHERE { <http://dbpedia.org/resource/Joseph_Stalin> <http://dbpedia.org/property/office> ?v1 . ?result <http://dbpedia.org/property/awards> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v3 <http://dbpedia.org/property/awards> ?v2 . ?v1 <http://dbpedia.org/ontology/leader> ?result . <http://dbpedia.org/resource/Volcano_and_Ryukyu_Islands_campaign> <http://dbpedia.org/ontology/commander> ?v3 . },"```sparql
SELECT ?result WHERE {
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>.
  <http://dbpedia.org/resource/Joseph_Stalin> <http://dbpedia.org/property/leaderOf> ?result.
  
  OPTIONAL {
    ?office <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>.
    ?office <http://dbpedia.org/ontology/awardee> ?commander.
    ?campaign <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>.
    ?campaign <http://dbpedia.org/property/name> ""Volcano and Ryukyu Islands campaign"".
    ?commander <http://dbpedia.org/ontology/commanderIn> ?campaign.
    
    FILTER(?office = ?result)
  }
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
391,71,test,"Give me the native of the figure known as the nick name of Jackson, Tennessee and actor of the movie, that is a movie and a work and a television show, with the professional in  and actor of the claim to fame, that is a work, of the spouse of Sherry Hormann.","SELECT ?result WHERE { <http://dbpedia.org/resource/Jackson,_Tennessee> <http://xmlns.com/foaf/0.1/nick> ?v1 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://dbpedia.org/property/nickname> ?v1 . ?v7 <http://dbpedia.org/property/occupation> """"@en . ?v4 <http://dbpedia.org/ontology/knownFor> ?v5 . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v8 <http://dbpedia.org/property/starring> ?result . ?v8 <http://dbpedia.org/property/starring> ?v7 . <http://dbpedia.org/resource/Sherry_Hormann> <http://dbpedia.org/ontology/spouse> ?v4 . ?v5 <http://dbpedia.org/ontology/starring> ?result . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. }","```sparql
# Step 1: Find Sherry Hormann's spouse
SELECT ?spouse WHERE {
    ?sherry <http://dbpedia.org/ontology/spouse> ?spouse .
    FILTER (str(?sherry) = ""Sherry_Hormann"")
}

# Step 2: Find the claim to fame of Sherry Hormann's spouse
SELECT ?work WHERE {
    ?spouse <http://dbpedia.org/property/claimToFame> ?work .
    ?work <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work> .
}

# Step 3: Identify the actor in that work
SELECT ?actor WHERE {
    ?work <http://dbpedia.org/property/actor> ?actor .
}

# Step 4: Determine the movie involving this actor, which is also a television show
SELECT ?movie WHERE {
    ?actor <http://dbpedia.org/ontology/work> ?movie .
    ?movie <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Movie> .
    ?movie <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work> .
    ?movie <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow> .
}

# Step 5: Find the actor of that movie
SELECT ?anotherActor WHERE {
    ?movie <http://dbpedia.org/property/actor> ?anotherActor .
}

# Step 6: Identify Jackson, Tennessee's nickname
SELECT ?nickname WHERE {
    <http://dbpedia.org/resource/Jackson,_Tennessee> <http://dbpedia.org/ontology/nickName> ?nickname .
}

# Step 7: Determine the native of this nickname who is also an actor in the identified movie
SELECT ?native WHERE {
    ?person <http://www.w3.org/2000/01/rdf-schema#label> ?nickname .
    ?person <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/United_States> .
    ?person <http://dbpedia.org/ontology/work> ?movie .
    ?anotherActor <http://dbpedia.org/property/nativeOf> ?native .
}

# Step 8: Find the residence of Sebastiano Bianchetti
SELECT ?residence WHERE {
    <http://dbpedia.org/resource/Sebastiano_Bianchetti> <http://dbpedia.org/ontology/residence> ?residence .
    ?residence <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement> .
    ?residence <http://dbpedia.org/property/country> <http://dbpedia.org/resource/Italy> .
}

# Step 9: Combine all these elements
SELECT DISTINCT ?native WHERE {
    # All previous steps combined logically to find the final native
}
```",9,13,10,3,3,3,3,71,0,0,1,0,0.0,0
659,24,test,"Give me the commander in the war, that is an event and a military conflict, of 1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish) and military force of Napoleonic Wars.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/1st_Light_Cavalry_Lancers_Regiment_of_the_Imperial_Guard_(Polish)> <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Napoleonic_Wars> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"```sparql
SELECT ?war ?commander WHERE {
  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>.
  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>.
  
  ?war <http://dbpedia.org/property/battle> ?battle.
  ?battle <http://dbpedia.org/ontology/unit> <http://dbpedia.org/resource/1st_Light_Cavalry_Lancers_Regiment_of_the_Imperial_Guard_(Polish)>.

  ?war <http://dbpedia.org/ontology/militaryForce> <http://dbpedia.org/resource/Napoleonic_Wars>.

  ?battle <http://dbpedia.org/ontology/commander> ?commander.
}
```",3,5,4,2,2,3,3,71,0,0,29,0,0.0,0
232,62,test,"Give me the actor of the claim to fame, that is a film and a military conflict, of the professional in Actor, narrator and producer and native of London and child of the person born as the birth name of Jon Pertwee.","SELECT ?result WHERE { ?v6 <http://dbpedia.org/ontology/starring> ?result . ?v3 <http://dbpedia.org/ontology/child> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/property/birthName> ?v4 . <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/property/birthName> ?v4 . ?v0 <http://dbpedia.org/ontology/knownFor> ?v6 . ?v0 <http://dbpedia.org/property/occupation> ""Actor, narrator and producer""@en . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/London> . }","```sparql
SELECT ?actor WHERE {
  # Step 1: Identify Jon Pertwee
  ?jonPertwee dbp:birthName ""Jon Pertwee"" .
  
  # Step 2: Find his child who is an actor, narrator, producer and native of London
  ?child dbp:parent ?jonPertwee ;
         rdf:type dbo:Actor ;
         dbo:narrator true ;
         dbo:producer true ;
         dbo:birthPlace dbr:London .
  
  # Step 3: Find the claim to fame that is both a film and a military conflict
  ?claimToFame rdf:type dbo:MilitaryConflict, dbo:Film ;
               dbo:knownFor ?child .
  
  # Step 4: Retrieve the actor associated with this claim to fame
  ?actor dbo:actedIn ?claimToFame .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
659,71,test,"Give me the military force of the force, that is a societal event and an event and a military conflict, of the reference to Rutger Jan Schimmelpenninck and commander in the war, that is an event and a military conflict, of the figure known, that is a military unit and an organisation, as 'Polish Horse' and commander in the force of the native, that is an office holder, of Kingdom of Ireland.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v8 . ?v2 <http://dbpedia.org/ontology/commander> ?v1 . ?v8 <http://dbpedia.org/ontology/commander> ?v7 . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v5 <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v4 <http://dbpedia.org/property/nickname> ""'Polish Horse'""@en . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Kingdom_of_Ireland> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v4 <http://dbpedia.org/ontology/battle> ?v5 . ?v7 <http://xmlns.com/foaf/0.1/name> ""Rutger Jan Schimmelpenninck""@en . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. }","```sparql
# Step 1: Find the native office holder of the Kingdom of Ireland
SELECT ?native WHERE {
    ?officeHolder <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Kingdom_of_Ireland>.
    ?officeHolder <http://dbpedia.org/ontology/office> ?office.
}

# Step 2: Find the force commanded by this office holder
SELECT ?force WHERE {
    ?native <http://dbpedia.org/property/commandedForce> ?force.
}

# Step 3: Determine the figure known as 'Polish Horse' and find the war they commanded in
SELECT ?figure, ?war WHERE {
    ?figure <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>.
    ?figure <http://www.w3.org/2000/01/rdf-schema#label> ""Polish Horse"".
    ?figure <http://dbpedia.org/property/commandedForce> ?war.
}

# Step 4: Locate the commander in that war
SELECT ?commander WHERE {
    ?war <http://dbpedia.org/ontology/commander> ?commander.
}

# Step 5: Identify the reference to Rutger Jan Schimmelpenninck and find the societal event, event, and military conflict associated with them
SELECT ?reference, ?event WHERE {
    ?reference <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>.
    ?reference <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>.
    ?reference <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>.
    ?reference <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> ?event.
}

# Step 6: Determine the military force of this complex chain
SELECT ?militaryForce WHERE {
    ?commander <http://dbpedia.org/property/militaryForce> ?militaryForce.
}
```",9,17,10,3,3,3,3,71,0,0,15,0,0.0,0
427,46,test,Give me the reference to the name of the party of Michele Pinto and party of the father of Lamberto Andreotti.,SELECT ?result WHERE { ?v2 <http://xmlns.com/foaf/0.1/name> ?v1 . <http://dbpedia.org/resource/Lamberto_Andreotti> <http://dbpedia.org/property/father> ?v4 . ?v4 <http://dbpedia.org/ontology/party> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . <http://dbpedia.org/resource/Michele_Pinto> <http://dbpedia.org/ontology/party> ?v2 . },"```sparql
SELECT ?micheleParty ?lambertoFatherParty WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/Michele_Pinto> <http://dbpedia.org/ontology/party> ?micheleParty .
  }
  OPTIONAL {
    <http://dbpedia.org/resource/Lamberto_Andreotti> <http://dbpedia.org/property/father> ?father .
    ?father <http://dbpedia.org/ontology/party> ?lambertoFatherParty .
  }
}
```",5,5,6,3,2,3,3,71,2,3,0,0.4,1.0,0.5714285714285715
161,62,test,"Give me the commander in Biscay Campaign and military force of the force, that is a societal event and a military conflict, of the predecessor of Indalecio Prieto and military force of the force, that is a societal event and an event and a military conflict, of the person decedent at Francoist Spain.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v4 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Francoist_Spain> . ?v0 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Indalecio_Prieto> . ?result <http://dbpedia.org/ontology/battle> ?v6 . ?v6 <http://dbpedia.org/ontology/commander> ?v0 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Biscay_Campaign> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://dbpedia.org/ontology/commander> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
# Step 1: Find predecessor of Indalecio Prieto
SELECT ?predecessor WHERE {
    ?indalecio dbo:successorOf ?predecessor .
    FILTER (str(?indalecio) = ""Indalecio_Prieto"")
}

# Step 2: Identify societal events and military conflicts related to the predecessor
SELECT DISTINCT ?force1, ?commander1 WHERE {
    ?event1 dbo:type dbr:Societal_event ;
           dbo:type dbr:Military_conflict .
    ?predecessor dbo:militaryForce ?force1 .
    ?force1 dbo:commander ?commander1 .
}

# Step 3: Identify person decedent at Francoist Spain
SELECT ?decedent WHERE {
    ?francoistSpain dbo:placeOfDeath ?location .
    ?person dbo:dateOfDeath ?date ;
            dbo:causeOfDeath ""Francoist_Spain"" .
    FILTER (year(?date) >= 1939 && year(?date) <= 1975)
}

# Step 4: Identify societal events, events, and military conflicts related to the decedent
SELECT DISTINCT ?force2, ?commander2 WHERE {
    ?event2 dbo:type dbr:Societal_event ;
           dbo:type dbr:Event ;
           dbo:type dbr:Military_conflict .
    ?decedent dbo:militaryForce ?force2 .
    ?force2 dbo:commander ?commander2 .
}

# Step 5: Find common commander or force
SELECT DISTINCT ?commonCommander WHERE {
    { SELECT ?commander1 WHERE { ... } }
    UNION
    { SELECT ?commander2 WHERE { ... } }
    FILTER (?commander1 = ?commander2)
    BIND(?commander1 AS ?commonCommander)
}

# Step 6: Identify commander in Biscay Campaign and military force
SELECT ?biscayCommander, ?militaryForce WHERE {
    ?biscayCampaign dbo:type dbr:Military_conflict ;
                    rdfs:label ""Biscay_Campaign"" .
    ?biscayCampaign dbo:commander ?biscayCommander .
    ?biscayCampaign dbo:militaryForce ?militaryForce .
}
```",7,12,8,3,3,3,3,71,0,0,3,0,0.0,0
435,25,test,"Give me the territory administered from the figure known, that is a settlement and a town and Icelandic, as Land of fire and ice and work of Article 62, Section IV of Constitution of Iceland and region of the time zone in Bombali Shebora Chiefdom.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/capital> ?v2 . ?result <http://dbpedia.org/property/author> ""Article 62, Section IV of Constitution of Iceland""@en . ?v2 <http://dbpedia.org/property/nickname> ""Land of fire and ice""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Iceland>. ?result <http://dbpedia.org/ontology/timeZone> ?v4 . <http://dbpedia.org/resource/Bombali_Shebora_Chiefdom> <http://dbpedia.org/ontology/timeZone> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Town>. }","```sparql
SELECT ?result WHERE {
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>.
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Town>.
  ?result <http://dbpedia.org/property/country> <http://dbpedia.org/resource/Iceland>.
  FILTER(CONTAINS(LCASE(?resultLabel), ""land of fire and ice""))
  
  OPTIONAL {
    ?region <http://dbpedia.org/ontology/administrativeRegion> ?result.
    ?region <http://dbpedia.org/ontology/article> <http://dbpedia.org/resource/Article_62,_Section_IV_of_the_Constitution_of_Iceland>.
  }
  
  OPTIONAL {
    ?timeZone <http://dbpedia.org/ontology/timeZone> ?tz;
              <http://dbpedia.org/ontology/administrativeRegion> ?region.
    ?region <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Bombali_Shebora_Chembe>.
  }
}
```",5,8,6,2,3,2,3,28,0,0,1,0,0.0,0
281,35,test,"Give me the war of the profession, that is a military unit, of Heather Roy and war of the awardee of Knight Grand Cross of the Order of the Bath.",SELECT ?result WHERE { <http://dbpedia.org/resource/Heather_Roy> <http://dbpedia.org/property/occupation> ?v1 . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_the_Bath> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. },"```sparql
SELECT ?war WHERE {
  # Condition for Heather Roy's profession involving a military unit
  ?heather rdf:type dbo:Person ;
           foaf:name ""Heather Roy"" .
  ?heather dbo:profession ?profession .
  ?profession dbo:militaryUnit ?militaryUnit .
  
  # Condition for the awardee of Knight Grand Cross of the Order of the Bath
  ?awardee rdf:type dbo:Person ;
           dbo:award ""Knight Grand Cross of the Order of the Bath"" .
  
  # Find a war associated with both conditions
  ?war rdf:type dbo:MilitaryConflict ;
       dbo:militaryUnit ?militaryUnit ;
       dbo:participant ?awardee .
}
```",4,5,5,2,2,3,3,71,0,0,9,0,0.0,0
281,69,test,"Give me the war of the awardee of the award of Jonathon Band and war of the profession, that is a military unit, of the professional, that is an office holder and a politician, in New Zealand Army and entity in the birth place, that is a country, of Bob Heffron.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Jonathon_Band> <http://dbpedia.org/property/awards> ?v4 . <http://dbpedia.org/resource/Bob_Heffron> <http://dbpedia.org/ontology/birthPlace> ?v7 . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> ?v7 . ?v1 <http://dbpedia.org/property/occupation> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/New_Zealand_Army> . ?v3 <http://dbpedia.org/property/awards> ?v4 . ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
# Step 1: Find the award received by Jonathon Band
SELECT ?award WHERE {
    <http://dbpedia.org/resource/Jonathon_Band> dbo:awarded <?award>.
}

# Step 2: Find the war associated with that award
SELECT DISTINCT ?war WHERE {
    ?award dbo:relatedTo ?war.
    ?award rdf:type dbo:Award.
    ?war rdf:type dbo:MilitaryConflict.
}

# Step 3: Identify a professional role in the New Zealand Army that is also an office holder and politician
SELECT DISTINCT ?profession WHERE {
    ?person dbo:memberOf <http://dbpedia.org/resource/New_Zealand_Army>.
    ?person dbo:officeHolder <?office>.
    ?person rdf:type dbo:Politician.
    ?person dbo:occupation ?profession.
}

# Step 4: Find the war associated with this profession
SELECT DISTINCT ?war WHERE {
    ?profession dbo:relatedTo ?unit.
    ?unit rdf:type dbo:MilitaryUnit.
    ?unit dbo:partOf ?war.
    ?war rdf:type dbo:MilitaryConflict.
}

# Step 5: Identify Bob Heffron's birthplace country
SELECT ?country WHERE {
    <http://dbpedia.org/resource/Bob_Heffron> dbo:birthPlace ?place.
    ?place dbo:country <?country>.
}

# Step 6: Find entities related to that country
SELECT DISTINCT ?entity WHERE {
    ?entity dbo:country <?country>.
}

# Combine results for final output
SELECT DISTINCT ?war1, ?war2, ?entity WHERE {
    # Wars from Jonathon Band's award
    ?award dbo:relatedTo ?war1.
    ?award rdf:type dbo:Award.
    ?war1 rdf:type dbo:MilitaryConflict.

    # Wars from the profession in New Zealand Army
    ?profession dbo:relatedTo ?unit.
    ?unit rdf:type dbo:MilitaryUnit.
    ?unit dbo:partOf ?war2.
    ?war2 rdf:type dbo:MilitaryConflict.

    # Entities related to Bob Heffron's birthplace country
    <http://dbpedia.org/resource/Bob_Heffron> dbo:birthPlace ?place.
    ?place dbo:country ?country.
    ?entity dbo:country ?country.
}
```",8,12,9,3,3,3,3,71,0,0,1,0,0.0,0
547,69,test,Give me the resting place of the child of the child of William Haliburton and resting place of the awardee of the award of Gerald Graham and resting place of the actor of Enemy at the Door.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> ?v1 . <http://dbpedia.org/resource/Gerald_Graham> <http://dbpedia.org/property/awards> ?v1 . <http://dbpedia.org/resource/Enemy_at_the_Door> <http://dbpedia.org/property/starring> ?v7 . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . ?v4 <http://dbpedia.org/property/father> ""William Haliburton""@en . ?v4 <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://dbpedia.org/ontology/restingPlace> ?result . ?v7 <http://dbpedia.org/ontology/restingPlace> ?result . }","```sparql
SELECT ?restingPlace WHERE {
  # Resting place of the child's child of William Haliburton
  {
    ?grandchild <http://dbpedia.org/ontology/birthParent> ?parent.
    ?parent <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/William_Haliburton>.
    ?grandchild <http://dbpedia.org/ontology/deathPlace> ?restingPlace.
  }
  
  UNION
  
  # Resting place of the awardee of the award of Gerald Graham
  {
    ?award <http://dbpedia.org/property/honoree> ?awardee.
    ?gGraham <http://dbpedia.org/ontology/receivesAward> ?award.
    FILTER(?gGraham = <http://dbpedia.org/resource/Gerald_Graham>)
    ?awardee <http://dbpedia.org/ontology/deathPlace> ?restingPlace.
  }
  
  UNION
  
  # Resting place of the actor of ""Enemy at the Door""
  {
    ?actor <http://dbpedia.org/ontology/performedIn> <http://dbpedia.org/resource/Enemy_at_the_Door>.
    ?actor <http://dbpedia.org/ontology/deathPlace> ?restingPlace.
  }
}
```",8,8,9,3,3,3,3,71,0,0,1,0,0.0,0
492,65,test,"Give me the person decedent at the work of US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite and person decedent at the capital, that is a settlement, of Algeria and commander in the war, that is a military conflict and an event, of the commander in Battle of Verdun.","SELECT ?result WHERE { ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Battle_of_Verdun> <http://dbpedia.org/ontology/commander> ?v0 . ?result <http://dbpedia.org/ontology/deathPlace> ?v4 . <http://dbpedia.org/resource/Algeria> <http://dbpedia.org/ontology/capital> ?v3 . ?v4 <http://dbpedia.org/property/author> ""US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite""@en . ?result <http://dbpedia.org/ontology/deathPlace> ?v3 . ?v0 <http://dbpedia.org/ontology/battle> ?v6 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v6 <http://dbpedia.org/ontology/commander> ?result . }","```sparql
SELECT DISTINCT ?personDecedent1 ?personDecedent2 ?personDecedent3 WHERE {
  # Part 1: Person decedent at the work of Joseph C. Satterthwaite
  <http://dbpedia.org/resource/Joseph_C._Satterthwaite> <http://dbpedia.org/ontology/work> ?work .
  ?work <http://dbpedia.org/property/personDecedent> ?personDecedent1 .

  # Part 2: Person decedent at the capital of Algeria
  <http://dbpedia.org/resource/Algeria> <http://dbpedia.org/ontology/capital> ?capital .
  ?capital <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement> .
  ?capital <http://dbpedia.org/property/personDecedent> ?personDecedent2 .

  # Part 3: Person decedent at the war involving commander in Battle of Verdun
  <http://dbpedia.org/resource/Battle_of_Verdun> <http://dbpedia.org/ontology/commander> ?commander .
  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event> .
  ?commander <http://dbpedia.org/ontology/battle> ?war .
  ?war <http://dbpedia.org/property/personDecedent> ?personDecedent3 .
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
981,16,test,"Give me the entity in the region of Time in Indonesia and birth place of the person born, that is a beauty queen, as .","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v2 . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v3 <http://dbpedia.org/property/birthName> """"@en . ?v2 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Time_in_Indonesia> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BeautyQueen>. }","```sparql
# Part 1: Entities in the ""Time"" region of Indonesia
SELECT ?entity WHERE {
    ?entity <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement> .
    ?entity <http://dbpedia.org/property/location> ?location .
    ?location <http://dbpedia.org/ontology/administrativeRegion> <http://dbpedia.org/resource/Time_(regency)> .
}

UNION

# Part 2: Birthplace of a beauty queen
SELECT ?birthPlace WHERE {
    ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BeautyQueen> .
    ?person <http://dbpedia.org/property/birthPlace> ?birthPlace .
}
```",4,5,5,2,2,3,2,20,0,0,19,0,0.0,0
391,35,test,"Give me the native of the figure known as Hub City and actor of the movie, that is a movie and a work and a television show, with Roz Ryan.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/property/nickname> ""Hub City""@en . ?v1 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Roz_Ryan> . ?v1 <http://dbpedia.org/property/starring> ?result . }","```sparql
SELECT ?native WHERE {
  ?movie <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Movie>.
  ?movie <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>.
  ?movie <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>.
  ?movie <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Roz_Ryan>.

  ?figure <http://dbpedia.org/ontology/nativePlace> ?native.
  ?figure <http://www.w3.org/1999/02/22-rdf-syntax-ns#label> ""Hub City""@en.

  ?actor <http://dbpedia.org/property/starring> ?movie.
  ?actor <http://dbpedia.org/ontology/nativePlace> ?native.
}
```",4,7,5,2,2,3,3,71,0,0,1,0,0.0,0
485,27,test,"Give me the birth place of the awardee, that is a writer and a poet, of Eric Gregory Award and entity in the birth place, that is a region, of Joseph Whitaker (naturalist) and entity in United Kingdom.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?result <http://dbpedia.org/ontology/country> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Poet>. <http://dbpedia.org/resource/Joseph_Whitaker_(naturalist)> <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>. ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Eric_Gregory_Award> . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . },"```sparql
SELECT ?birthPlace WHERE {
  ?person a dbo:Writer ;
          a dbo:Poet ;
          dbo:awardReceived dbr:Eric_Gregory_Award .
  
  ?person dbo:birthPlace ?birthPlace .

  ?birthPlace a dbo:Region ;
              dbo:country dbr:United_Kingdom .

  ?whitaker dbo:birthPlace ?birthPlace .
  ?whitaker rdf:type dbo:Naturalist ;
            rdfs:label ""Joseph Whitaker (naturalist)""@en .
}
```",5,8,6,2,3,2,3,28,0,0,1,0,0.0,0
435,23,test,"Give me the territory administered from the figure known, that is a settlement and a town and Icelandic, as Land of fire and ice and work of the author of Iceland.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/nickname> ""Land of fire and ice""@en . ?result <http://dbpedia.org/ontology/capital> ?v1 . ?result <http://dbpedia.org/property/author> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Town>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Iceland>. <http://dbpedia.org/resource/Iceland> <http://dbpedia.org/property/author> ?v2 . }","```sparql
SELECT ?result WHERE {
  ?settlement <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Town>.
  ?settlement <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>.
  ?settlement <http://dbpedia.org/property/country> <http://dbpedia.org/resource/Iceland>.
  ?settlement <http://dbpedia.org/ontology/kindOf> <http://dbpedia.org/resource/Land_of_fire_and_ice_(disambiguation)>.
  OPTIONAL { ?work <http://dbpedia.org/ontology/author> ?author. ?work <http://dbpedia.org/property/title> ""Iceland"". }
  ?settlement <http://dbpedia.org/ontology/administeredFrom> ?result.
}
```",4,7,5,2,2,2,3,28,0,0,1,0,0.0,0
378,42,test,Give me the war of the person born as Carl Pontus Gahn and claim to fame of the commander in Great Siege of Gibraltar and war of Joaquín Blake.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ""Carl Pontus Gahn""@en . <http://dbpedia.org/resource/Joaquín_Blake> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Great_Siege_of_Gibraltar> <http://dbpedia.org/ontology/commander> ?v1 . ?v1 <http://dbpedia.org/ontology/knownFor> ?result . ?v2 <http://dbpedia.org/ontology/battle> ?result . }","```sparql
# Part 1: War associated with Carl Pontus Gahn
SELECT ?war WHERE {
    ?person <http://dbpedia.org/ontology/birthName> ""Carl Pontus Gahn"" .
    ?person <http://dbpedia.org/ontology/knows> ?war .
}

UNION

# Part 2: Claim to fame of the commander in Great Siege of Gibraltar and war involving Joaquín Blake
SELECT ?claimToFame WHERE {
    ?siege <http://dbpedia.org/ontology/commander> ?commander .
    ?commander <http://dbpedia.org/ontology/knownFor> ?claimToFame .
    FILTER(?siege = <http://dbpedia.org/resource/Great_Siege_of_Gibraltar>)
}

UNION

SELECT ?war WHERE {
    ?person <http://dbpedia.org/property/birthName> ""Joaquín Blake"" .
    ?person <http://dbpedia.org/ontology/knows> ?war .
}
```",5,5,6,2,3,3,3,71,0,0,2,0,0.0,0
360,25,test,"Give me the writer of the work, that is an album, of Dave Flett and reference to Manfred Mann and native of the death place, that is a settlement, of Winnie Madikizela-Mandela.","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Manfred Mann""@en . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Winnie_Madikizela-Mandela> <http://dbpedia.org/ontology/deathPlace> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Album>. ?result <http://dbpedia.org/ontology/birthPlace> ?v4 . ?v3 <http://dbpedia.org/property/author> ""Dave Flett""@en . ?v3 <http://dbpedia.org/property/writer> ?result . }","```sparql
SELECT ?writer WHERE {
  # Step 1: Find the death place of Winnie Madikizela-Mandela that is a settlement
  <http://dbpedia.org/resource/Winnie_Madikizela-Mandela> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person> .
  ?deathPlace <http://dbpedia.org/property/deathPlace> <http://dbpedia.org/resource/Winnie_Madikizela-Mandela> .
  ?deathPlace <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement> .

  # Step 2: Find someone native to this settlement
  ?nativePerson <http://dbpedia.org/property/nationality> ?deathPlace .
  
  # Step 3: Determine the work (album) associated with Dave Flett and Manfred Mann
  ?album <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalAlbum> ;
         <http://dbpedia.org/property/artist> <http://dbpedia.org/resource/Dave_Flett> , <http://dbpedia.org/resource/Manfred_Mann> .

  # Step 4: Identify the writer of this album
  ?album <http://dbpedia.org/ontology/writer> ?writer .
}
```",5,7,6,2,3,2,3,28,0,0,1,0,0.0,0
318,9,test,Give me the professional in the profession of Robert Xavier Rodriguez and person born in the founding year of Eel Pie Publishing.,SELECT ?result WHERE { <http://dbpedia.org/resource/Robert_Xavier_Rodriguez> <http://dbpedia.org/property/occupation> ?v3 . ?result <http://dbpedia.org/ontology/birthYear> ?v1 . <http://dbpedia.org/resource/Eel_Pie_Publishing> <http://dbpedia.org/ontology/foundingYear> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v3 . },"```sparql
SELECT ?person WHERE {
  # Get the profession of Robert Xavier Rodriguez
  <http://dbpedia.org/resource/Robert_Xavier_Rodriguez> <http://purl.org/dc/terms/profession> ?profession .

  # Get the founding year of Eel Pie Publishing
  <http://dbpedia.org/resource/Eel_Pie_Publishing> <http://dbpedia.org/ontology/foundingDate> ?foundingYear .

  # Find persons with the same profession and born in the founding year
  ?person <http://purl.org/dc/terms/profession> ?profession .
  ?person <http://dbpedia.org/property/birthYear> ?birthYear .
  
  FILTER (?birthYear = YEAR(?foundingYear))
}
```",4,4,5,2,2,2,2,9,0,0,7,0,0.0,0
701,55,test,Give me the parent of the child of Ramesses II and spouse of the father of Merneptah and parent of the child of Nefertari.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ramesses_II> . <http://dbpedia.org/resource/Nefertari> <http://dbpedia.org/ontology/child> ?v3 . <http://dbpedia.org/resource/Merneptah> <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/ontology/child> ?v5 . },"```sparql
SELECT ?parent WHERE {
  ?child <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/Ramesses_II> .
  ?merneptah <http://dbpedia.org/ontology/father> ?v1 .
  ?v1 <http://dbpedia.org/property/spouse> ?parent .
  ?n_child <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/Nefertari> .
  ?n_child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Human> .
  ?parent <http://dbpedia.org/ontology/birthParent> ?n_child .
}
```",6,6,7,2,3,3,3,71,0,0,1,0,0.0,0
285,20,test,Give me the parent of the child of the spouse of Aristotle Onassis and spouse of the professional in the award of Stan Lee.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/spouse> ?v5 . ?v5 <http://dbpedia.org/property/occupation> ?v4 . <http://dbpedia.org/resource/Stan_Lee> <http://dbpedia.org/property/awards> ?v4 . ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Aristotle_Onassis> . ?v1 <http://dbpedia.org/ontology/child> ?v2 . },"```sparql
# Step 1: Find the spouse of Aristotle Onassis
SELECT ?spouse WHERE {
    <http://dbpedia.org/resource/Aristotle_Onassis> <http://dbpedia.org/ontology/spouse> ?spouse .
}

# Step 2: Find the child of that spouse
SELECT ?child WHERE {
    ?spouse <http://dbpedia.org/ontology/child> ?child .
}

# Step 3: Determine the parent of that child (should be Aristotle Onassis or his spouse)
SELECT ?parent WHERE {
    ?child <http://dbpedia.org/ontology/parent> ?parent .
}

# Step 4: Identify the professional associated with Stan Lee's award
SELECT ?professional WHERE {
    <http://dbpedia.org/resource/Stan_Lee> <http://dbpedia.org/property/award> ?award .
    ?award <http://dbpedia.org/ontology/professional> ?professional .
}

# Step 5: Find the spouse of that professional
SELECT ?spouse2 WHERE {
    ?professional <http://dbpedia.org/ontology/spouse> ?spouse2 .
}

# Final step: Find a common entity between the parent from step 3 and the spouse from step 5
SELECT DISTINCT ?commonEntity WHERE {
    { ?parent ?p ?commonEntity . }
    UNION
    { ?commonEntity ?p2 ?spouse2 . }
}
```",6,6,7,3,2,3,2,20,0,0,3,0,0.0,0
487,18,test,"Give me the administration of the person born, that is a soccer player, as Philip Brian Scott and country of the administration of the person born on 1955-01-26.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v2 <http://dbpedia.org/ontology/country> ?result . ?v2 <http://dbpedia.org/property/leader> ?v1 . ?v3 <http://dbpedia.org/property/birthName> ""Philip Brian Scott""@en . ?result <http://dbpedia.org/property/governor> ?v3 . ?v1 <http://dbpedia.org/ontology/birthDate> ""1955-01-26""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
# Part 1: Find the administration of Philip Brian Scott
SELECT ?administration WHERE {
    ?person <http://dbpedia.org/property/birthName> ""Philip Brian Scott"" .
    ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer> .
    ?person <http://dbpedia.org/ontology/team> ?administration .
}

UNION

# Part 2: Find the country of administration for a person born on 1955-01-26
SELECT ?country WHERE {
    ?person <http://www.w3.org/2000/01/rdf-schema#label> ?name .
    ?person <http://dbpedia.org/property/birthDate> ""1955-01-26""^^<http://www.w3.org/2001/XMLSchema#date> .
    ?administration <http://dbpedia.org/ontology/team> ?person .
    ?administration <http://dbpedia.org/ontology/country> ?country .
}
```",5,6,6,3,2,3,2,20,0,0,1,0,0.0,0
465,9,test,"Give me the death place of the native of Prague and administration of the leader, that is a political party and an organisation, of Chamber of Deputies of the Czech Republic.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Chamber_of_Deputies_of_the_Czech_Republic> <http://dbpedia.org/property/leader> ?v3 . ?result <http://dbpedia.org/property/leaderParty> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v1 <http://dbpedia.org/ontology/deathPlace> ?result . ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Prague> . },"```sparql
SELECT ?deathPlace WHERE {
  ?party a dbo:PoliticalParty ;
         dbo:leader ?leader .
  ?leader foaf:nativePlace <http://dbpedia.org/resource/Prague> ;
          dbo:placeOfBirth ?birthPlace .
  ?leader dbo:deathPlace ?deathPlace .
  ?chamber dbo:administration ?party .
  ?chamber a dbo:ChamberOfDeputies .
}
```",4,6,5,2,2,2,2,9,0,0,8,0,0.0,0
161,69,test,"Give me the military force of the force, that is a societal event and an event and a military conflict, of the person decedent at Francoist Spain and military force of the force, that is a societal event and a military conflict, of Francisco Largo Caballero and commander in the force, that is an event, of the figure known as El Director.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v7 . ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://dbpedia.org/ontology/commander> ?v1 . ?v4 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Francoist_Spain> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://xmlns.com/foaf/0.1/nick> ""El Director""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/ontology/commander> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v7 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","```sparql
SELECT ?militaryForce WHERE {
  # Step 1: Find the person decedent at Francoist Spain
  ?personDecedent <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Francoist_Spain> .
  
  # Step 2: Find the military force of the societal event and military conflict related to that person
  ?event1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent> ;
          <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
  ?event1 <http://dbpedia.org/property/relatedPerson> ?personDecedent .
  
  # Step 3: Find Francisco Largo Caballero's involvement in another societal event and military conflict
  <http://dbpedia.org/resource/Francisco_Largo_Caballero> <http://dbpedia.org/ontology/involvedIn> ?event2 .
  ?event2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent> ;
          <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
  
  # Step 4: Determine the commander of an event known as ""El Director""
  ?event3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event> ;
          <http://dbpedia.org/property/knownAs> ""El Director"" .
  ?commander <http://dbpedia.org/ontology/commander> ?event3 .
  
  # Step 5: Find the military force related to all these connections
  ?militaryForce <http://dbpedia.org/ontology/militaryForce> ?event1 ;
                  <http://dbpedia.org/ontology/militaryForce> ?event2 ;
                  <http://dbpedia.org/ontology/militaryForce> ?commander .
}
```",8,14,9,3,3,3,3,71,0,0,32,0,0.0,0
488,28,test,Give me the death place of Tokugawa Ieyasu and administration of Emperor Go-Yōzei and birth place of the commander in Boshin War.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Emperor_Go-Yōzei> . <http://dbpedia.org/resource/Boshin_War> <http://dbpedia.org/ontology/commander> ?v1 . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Tokugawa_Ieyasu> <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
SELECT ?deathPlace WHERE {
  <http://dbpedia.org/resource/Tokugawa_Ieyasu> <http://dbpedia.org/ontology/deathPlace> ?deathPlace .
}
UNION
SELECT ?administration WHERE {
  <http://dbpedia.org/resource/Emperor_Go-Yōzei> <http://dbpedia.org/property/reign> ?administration .
}
UNION
SELECT ?birthPlace WHERE {
  ?commander <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Boshin_War> .
  ?commander <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
701,68,test,Give me the parent of the child of the child of Seti I and spouse of the father of Merneptah and parent of the child of the spouse of Amun-her-khepeshef.,SELECT ?result WHERE { ?v7 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Amun-her-khepeshef> <http://dbpedia.org/ontology/spouse> ?v5 . <http://dbpedia.org/resource/Merneptah> <http://dbpedia.org/property/father> ?v3 . ?v5 <http://dbpedia.org/ontology/child> ?v4 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seti_I> . ?v4 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/spouse> ?v3 . ?result <http://dbpedia.org/ontology/child> ?v7 . },"```sparql
SELECT ?result WHERE {
  # Seti I's child (Ramesses II)
  ?setiI dbo:child ?ramessesII .
  
  # Ramesses II's child (one of his children, e.g., Merneptah)
  ?ramessesII dbo:child ?merneptah .

  # Spouse of Ramesses II
  ?ramessesII dbo:spouse ?nefertari .

  # Amun-her-khepeshef's spouse and their child
  ?amunHerKhepeshef dbo:spouse ?spouse .
  ?spouse dbo:child ?childOfSpouse .

  # Parent of the child of Amun-her-khepeshef's spouse
  ?childOfSpouse dbo:parent ?result .

  # Filter to ensure correct historical figures
  FILTER(?setiI = <http://dbpedia.org/resource/Seti_I>)
  FILTER(?ramessesII = <http://dbpedia.org/resource/Ramesses_II>)
  FILTER(?merneptah = <http://dbpedia.org/resource/Merenptah>)
  FILTER(?amunHerKhepeshef = <http://dbpedia.org/resource/Amun-her-khepeshef>)
}
```",8,8,9,3,3,3,3,71,0,0,1,0,0.0,0
754,19,test,Give me the parent of the parent of May Hnin Htapi and parent of the child of the reference to Ram Khamhaeng the Great.,"SELECT ?result WHERE { <http://dbpedia.org/resource/May_Hnin_Htapi> <http://dbpedia.org/ontology/parent> ?v2 . ?result <http://dbpedia.org/ontology/child> ?v4 . ?v0 <http://dbpedia.org/ontology/child> ?v4 . ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Ram Khamhaeng the Great""@en . }","```sparql
# Query for May Hnin Htapi's grandparent
SELECT ?grandparent WHERE {
  ?mayHninHtapi <http://dbpedia.org/ontology/birthParent> ?parent1 .
  ?parent1 <http://dbpedia.org/ontology/birthParent> ?grandparent .
  FILTER(?mayHninHtapi = <http://dbpedia.org/resource/May_Hnin_Htapi>)
}

UNION

# Query for Ram Khamhaeng the Great's referenced parent
SELECT ?referencedParent WHERE {
  ?reference <http://dbpedia.org/ontology/birthChild> ?child .
  ?child <http://dbpedia.org/ontology/birthParent> ?referencedParent .
  FILTER(?reference = <http://dbpedia.org/resource/Ram_Khamhaeng_the_Great>)
}
```",5,5,6,3,2,3,2,20,0,0,1,0,0.0,0
701,51,test,"Give me the spouse of the father of the commander, that is a royalty, in Battle of Perire and parent of the child of Ramesses II.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ramesses_II> . <http://dbpedia.org/resource/Battle_of_Perire> <http://dbpedia.org/ontology/commander> ?v1 . ?v1 <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/ontology/child> ?v4 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
SELECT ?spouse WHERE {
    ?battle <http://dbpedia.org/ontology/commander> ?commander .
    FILTER(?battle = <http://dbpedia.org/resource/Battle_of_Perire>)
    
    ?commander <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .

    ?child <http://dbpedia.org/property/parent> ?ramessesII .
    FILTER(?ramessesII = <http://dbpedia.org/resource/Ramesses_II>)
    
    ?parent <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Parent> .
    ?parent <http://dbpedia.org/property/child> ?child .

    ?father <http://dbpedia.org/ontology/father> ?commander .
    
    ?spouse <http://dbpedia.org/ontology/spouse> ?father .
}
```",5,6,6,3,2,3,3,71,0,0,2,0,0.0,0
747,48,test,"Give me the band of the person born as Tracey Elizabeth McSween and person born on the birth date of the person decedent, that is an athlete and a soccer player, at Zolotonosha.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ""Tracey Elizabeth McSween""@en . ?v3 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Zolotonosha> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v3 <http://dbpedia.org/ontology/birthDate> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?result <http://dbpedia.org/ontology/birthDate> ?v2 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
# Step 1: Find Tracey Elizabeth McSween's resource
SELECT ?tracey WHERE {
    ?tracey <http://dbpedia.org/ontology/birthName> ""Tracey Elizabeth McSween"" .
}

# Step 2: Find a decedent's birth date
SELECT DISTINCT ?birthDate WHERE {
    ?decedent <http://www.w3.org/2000/01/rdf-schema#label> ?name .
    ?decedent <http://dbpedia.org/ontology/deathDate> ?deathDate .
    FILTER EXISTS { ?decedent <http://dbpedia.org/ontology/birthDate> ?birthDate }
}

# Step 3: Find an athlete and soccer player born on that date in Zolotonosha
SELECT DISTINCT ?athlete WHERE {
    ?athlete <http://www.w3.org/2000/01/rdf-schema#label> ?name .
    ?athlete <http://dbpedia.org/ontology/birthDate> ?birthDate .
    ?athlete <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Zolotonosha> .
    ?athlete <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete> .
    ?athlete <http://dbpedia.org/ontology/soccerPlayer> true .
}

# Step 4: Find the band associated with both Tracey Elizabeth McSween and the athlete
SELECT DISTINCT ?band WHERE {
    # Band for Tracey Elizabeth McSween
    ?tracey <http://dbpedia.org/property/band> ?band .
    
    # Band for the athlete
    ?athlete <http://dbpedia.org/property/band> ?band .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
959,52,test,"Give me the manager of 2013 Júbilo Iwata season and native of the residence, that is a country, of Yōichi Masuzoe and member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of the person born in 1958.","SELECT ?result WHERE { <http://dbpedia.org/resource/Yōichi_Masuzoe> <http://dbpedia.org/property/residence> ?v4 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. <http://dbpedia.org/resource/2013_Júbilo_Iwata_season> <http://dbpedia.org/ontology/manager> ?result . ?result <http://dbpedia.org/ontology/team> ?v1 . ?v3 <http://dbpedia.org/ontology/almaMater> ?v1 . ?v3 <http://dbpedia.org/ontology/birthYear> ""1958""^^<http://www.w3.org/2001/XMLSchema#gYear> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?result <http://dbpedia.org/ontology/birthPlace> ?v4 . }","```sparql
# Step 1: Find the manager of the 2013 Júbilo Iwata season
SELECT ?manager WHERE {
    ?season <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/Júbilo_Iwata> .
    ?season <http://dbpedia.org/property/year> ""2013""^^xsd:integer .
    ?season <http://dbpedia.org/ontology/coach> ?manager .
}

# Step 2: Identify the native country of Yōichi Masuzoe's residence
SELECT ?country WHERE {
    <http://dbpedia.org/resource/Yōichi_Masuzoe> <http://dbpedia.org/property/residence> ?residence .
    ?residence <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country> .
    ?residence <http://www.w3.org/2000/01/rdf-schema#label> ?countryLabel .
    FILTER (lang(?countryLabel) = ""en"")
}

# Step 3: Find the alma mater that fits multiple criteria
SELECT ?almaMater WHERE {
    ?person <http://dbpedia.org/property/birthYear> ""1958""^^xsd:gYear .
    ?person <http://dbpedia.org/ontology/almaMater> ?almaMater .
    ?almaMater <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organization> ;
               <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University> ;
               <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalOrganization> .
    ?almaMater <http://dbpedia.org/property/country> <http://dbpedia.org/resource/Japan> .
}

# Step 4: Combine these elements to identify the manager
SELECT ?finalManager WHERE {
    # Assuming we have variables from previous queries: ?manager, ?country, ?almaMater
    ?finalManager <http://dbpedia.org/ontology/residenceCountry> ?country .
    ?finalManager <http://dbpedia.org/ontology/almaMater> ?almaMater .
}
```",6,11,7,3,3,3,3,71,0,0,1,0,0.0,0
16,68,test,Give me the person born as the birth name of Gigi Rice and spouse of the person born as the birth name of Ted McGinley and professional in the profession of the actor of Unnatural (TV series).,SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Gigi_Rice> <http://dbpedia.org/property/birthName> ?v3 . ?v0 <http://dbpedia.org/property/occupation> ?v7 . ?v4 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Unnatural_(TV_series)> <http://dbpedia.org/property/starring> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v7 . ?v4 <http://dbpedia.org/property/birthName> ?v5 . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/property/birthName> ?v5 . },"```sparql
# Step 1: Find Gigi Rice's birth name
SELECT ?gigiBirthName WHERE {
    <http://dbpedia.org/resource/Gigi_Rice> <http://dbpedia.org/ontology/birthName> ?gigiBirthName .
}

# Step 2: Find Ted McGinley's birth name and his spouse
SELECT ?tedSpouse WHERE {
    ?ted <http://dbpedia.org/ontology/birthName> ""Thomas Edward McGinley"" .
    ?ted <http://xmlns.com/foaf/0.1/spouse> ?tedSpouse .
}

# Step 3: Find the profession of an actor from ""Unnatural (TV series)""
SELECT ?actorProfession WHERE {
    ?unnaturalActor <http://dbpedia.org/ontology/actor> <http://dbpedia.org/resource/Unnatural_(TV_series)> .
    ?unnaturalActor <http://purl.org/dc/terms/profession> ?actorProfession .
}

# Step 4: Find the person who matches all criteria
SELECT ?person WHERE {
    # Gigi Rice's birth name as a person
    ?gigiPerson <http://dbpedia.org/ontology/birthName> ?gigiBirthName .

    # Ted McGinley's spouse
    ?tedSpouse <http://xmlns.com/foaf/0.1/spouse> ?person .

    # Profession match with the actor from ""Unnatural (TV series)""
    ?person <http://purl.org/dc/terms/profession> ?actorProfession .
}
```",8,8,9,3,3,3,3,71,0,0,1,0,0.0,0
328,57,test,"Give me the awardee of Order of Suvorov and commander in the force of the person decedent at Budapest and leader of the office, that is a government agency, of Joseph Stalin.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Budapest> . ?v5 <http://dbpedia.org/ontology/commander> ?v0 . ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Order_of_Suvorov> . ?v5 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://dbpedia.org/ontology/leader> ?result . <http://dbpedia.org/resource/Joseph_Stalin> <http://dbpedia.org/property/office> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. },"```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/awardee> <http://dbpedia.org/resource/Order_of_Suvorov>.
  ?person <http://dbpedia.org/ontology/commander> ?force.
  ?force <http://dbpedia.org/property/location> ""Budapest"".
  ?person <http://dbpedia.org/ontology/leaderOf> ?office.
  ?office <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>.
  ?office <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Joseph_Stalin>.
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
161,71,test,"Give me the military force of the force, that is a societal event and an event and a military conflict, of the person decedent at Francoist Spain and military force of the force, that is a societal event and a military conflict, of the predecessor of Indalecio Prieto and commander in the force, that is an event, of the figure known as El Director.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v8 <http://dbpedia.org/ontology/commander> ?v7 . ?v8 <http://dbpedia.org/ontology/commander> ?result . ?v7 <http://xmlns.com/foaf/0.1/nick> ""El Director""@en . ?result <http://dbpedia.org/ontology/battle> ?v5 . ?v1 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Francoist_Spain> . ?v4 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Indalecio_Prieto> . ?v5 <http://dbpedia.org/ontology/commander> ?v4 . ?v2 <http://dbpedia.org/ontology/commander> ?v1 . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. }","SELECT ?result WHERE { 
  ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. 
  ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. 
  ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. 
  ?v2 <http://dbpedia.org/property/decedent> <http://dbpedia.org/resource/Francoist_Spain>. 
  ?v2 <http://dbpedia.org/property/militaryForce> ?v1. 
  ?v3 <http://dbpedia.org/ontology/predecessor> <http://dbpedia.org/resource/Indalecio_Prieto>. 
  ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. 
  ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. 
  ?v3 <http://dbpedia.org/property/militaryForce> ?v4. 
  ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. 
  ?v6 <http://dbpedia.org/ontology/commander> ?v5. 
  ?v7 <http://dbpedia.org/resource/El_Director> = ?v6. 
  ?v2 <http://dbpedia.org/property/militaryForce> ?result. 
}",9,15,10,3,3,3,3,71,0,0,32,0,0.0,0
915,17,test,"Give me the resident of Springfield, Illinois and father of the child, that is a fictional character and a soap character, of the parent, that is a fictional character and a soap character, of Lizzie Spaulding.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoapCharacter>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v3 <http://dbpedia.org/property/father> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. <http://dbpedia.org/resource/Lizzie_Spaulding> <http://dbpedia.org/ontology/parent> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoapCharacter>. ?result <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Springfield,_Illinois> . ?v3 <http://dbpedia.org/property/father> ?result . }","```sparql
SELECT ?father WHERE {
  # Step 1: Identify Lizzie Spaulding's parents
  ?parent a dbo:FictionalCharacter ;
          dbo:soapCharacter ""true""^^xsd:boolean ;
          dbo:child <http://dbpedia.org/resource/Lizzie_Spaulding> .

  # Step 2: Find the child of these parents
  ?parent dbo:child ?child .

  # Step 3: Identify the father of this child
  ?father a dbo:FictionalCharacter ;
          dbo:soapCharacter ""true""^^xsd:boolean ;
          dbo:spouse ?mother ;
          dbo:child ?child .

  # Step 4: Ensure the father is a resident of Springfield, Illinois
  ?father dbo:residence <http://dbpedia.org/resource/Springfield,_Illinois> .
}
```",4,8,5,3,2,3,2,20,0,0,1,0,0.0,0
617,46,test,"Give me the spouse of the child of Antiochus III the Great and child of the child, that is a royalty, of the successor, that is a royalty, of Antiochus II Theos.",SELECT ?result WHERE { <http://dbpedia.org/resource/Antiochus_II_Theos> <http://dbpedia.org/ontology/successor> ?v2 . <http://dbpedia.org/resource/Antiochus_III_the_Great> <http://dbpedia.org/ontology/child> ?v4 . ?result <http://dbpedia.org/property/father> ?v1 . ?v4 <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
SELECT ?spouse WHERE {
    # Step 1: Identify Antiochus III the Great's child
    ?antiochusIII dbo:child ?childAntiochusIII.
    
    # Step 2: Find the spouse of that child
    ?childAntiochusIII dbo:spouse ?spouse.

    # Step 3: Identify the successor of Antiochus II Theos who is royalty
    ?antiochusII dbo:succeededBy ?successor.
    ?successor rdf:type dbo:Royalty.

    # Step 4: Determine the child of that successor who is also royalty
    ?successor dbo:child ?royalChild.
    ?royalChild rdf:type dbo:Royalty.

    # Step 5: Find the spouse of the child identified in step 1 (already done in step 2)
}
```",5,7,6,3,2,3,3,71,0,0,4,0,0.0,0
767,38,test,Give me the reference to the alter ego of Black Hood and alma mater of the administration of George K. Nash.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/almaMater> ?result . <http://dbpedia.org/resource/Black_Hood> <http://dbpedia.org/property/alterEgo> ?v2 . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v3 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/George_K._Nash> . },"```sparql
# Find the alter ego of Black Hood
SELECT ?alterEgo WHERE {
  ?blackHood <http://dbpedia.org/ontology/alsoKnownAs> ""Black Hood"" .
  ?blackHood <http://www.w3.org/2000/01/rdf-schema#label> ?alterEgo .
}

# Find the alma mater of George K. Nash
SELECT ?almaMater WHERE {
  <http://dbpedia.org/resource/George_K._Nash> <http://dbpedia.org/ontology/almaMater> ?almaMater .
}

# Find a reference that connects both entities with the administration of George K. Nash
SELECT ?reference WHERE {
  ?alterEgo <http://dbpedia.org/property/administration> <http://dbpedia.org/resource/George_K._Nash> .
  ?almaMater <http://www.w3.org/2000/01/rdf-schema#seeAlso> ?reference .
}
```",4,4,5,2,2,3,3,71,0,0,2,0,0.0,0
161,67,test,"Give me the military force of Rif War and commander in the force, that is an event, of the figure known as El Director and military force of the force, that is a societal event and a military conflict, of the predecessor of Indalecio Prieto.","SELECT ?result WHERE { ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://xmlns.com/foaf/0.1/nick> ""El Director""@en . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v6 <http://dbpedia.org/ontology/commander> ?v0 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/ontology/commander> ?v1 . ?v0 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Indalecio_Prieto> . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Rif_War> . ?result <http://dbpedia.org/ontology/battle> ?v6 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. }","```sparql
SELECT ?rifWarForce ?commanderEvent ?elDirectorForce ?prietoPredecessorForce WHERE {
  # Step 1: Identify the military force of the Rif War
  <http://dbpedia.org/resource/Rif_War> <http://dbpedia.org/ontology/military_force> ?rifWarForce .

  # Step 2: Find the commander of that military force who is associated with an event
  ?rifWarForce <http://dbpedia.org/ontology/commander> ?commander .
  ?commanderEvent <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event> .
  ?commander <http://dbpedia.org/property/knownFor> ?commanderEvent .

  # Step 3: Identify ""El Director"" and his military force
  <http://dbpedia.org/resource/El_Director> <http://dbpedia.org/ontology/military_force> ?elDirectorForce .

  # Step 4: Determine Indalecio Prieto's predecessor, their military force, and ensure it is both a societal event and a military conflict
  ?prietoPredecessor <http://dbpedia.org/ontology/predecessor> <http://dbpedia.org/resource/Indalecio_Prieto> .
  ?prietoPredecessorForce <http://dbpedia.org/ontology/military_force> ?prietoPredecessor .
  ?prietoPredecessorForce <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent> .
  ?prietoPredecessorForce <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
}
```",7,10,8,3,3,3,3,71,0,0,11,0,0.0,0
767,55,test,"Give me the alma mater of the administration of George K. Nash and entity in the administration, that is a settlement, of Green and reference to the alter ego of Black Hood.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/almaMater> ?result . ?v5 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/George_K._Nash> . <http://dbpedia.org/resource/Black_Hood> <http://dbpedia.org/property/alterEgo> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v3 <http://dbpedia.org/property/leaderParty> ""Green""@en . ?result <http://dbpedia.org/ontology/state> ?v3 . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . }","```sparql
SELECT ?almaMater ?settlement ?alterEgo WHERE {
  # Part 1: Alma Mater of George K. Nash's Administration
  <http://dbpedia.org/resource/George_K._Nash> <http://dbpedia.org/ontology/administration> ?administration .
  ?administration <http://dbpedia.org/property/almaMater> ?almaMater .

  # Part 2: Entity in the Administration that is a Settlement
  ?administration <http://dbpedia.org/ontology/entity> ?entity .
  ?entity <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement> .

  # Part 3: Reference to the Alter Ego of Black Hood
  <http://dbpedia.org/resource/Black_Hood> <http://dbpedia.org/property/alterEgo> ?alterEgo .
}
```",6,7,7,2,3,3,3,71,0,0,1,0,0.0,0
429,8,test,"Give me the administration of Andrew Johnson and country of the military force, that is an organisation, of Camden Expedition.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Andrew_Johnson> . ?v0 <http://dbpedia.org/ontology/country> ?result . ?v0 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Camden_Expedition> . },"```sparql
# Query 1: Administration of Andrew Johnson
SELECT ?administration WHERE {
    <http://dbpedia.org/resource/Andrew_Johnson> <http://dbpedia.org/ontology/administration> ?administration .
}

# Query 2: Country of Military Force in Camden Expedition
SELECT ?country WHERE {
    ?militaryForce <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>.
    <http://dbpedia.org/resource/Camden_Expedition> <http://dbpedia.org/property/military_force> ?militaryForce.
    ?militaryForce <http://dbpedia.org/ontology/country> ?country.
}
```",3,4,4,2,2,2,2,9,0,0,1,0,0.0,0
701,48,test,Give me the spouse of the father of Merneptah and parent of the child of the spouse of Amun-her-khepeshef.,SELECT ?result WHERE { <http://dbpedia.org/resource/Merneptah> <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/ontology/spouse> ?v1 . <http://dbpedia.org/resource/Amun-her-khepeshef> <http://dbpedia.org/ontology/spouse> ?v3 . ?v3 <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://dbpedia.org/ontology/parent> ?result . },"```sparql
# Step 1: Identify Merneptah's father
SELECT ?merneptahFather WHERE {
    <http://dbpedia.org/resource/Merneptah> <http://www.w3.org/2002/07/owl#sameAs> ?merneptahResource.
    ?merneptahResource <http://dbpedia.org/ontology/father> ?merneptahFather.
}

# Step 2: Find the spouse of Merneptah's father
SELECT ?spouse WHERE {
    ?merneptahFather <http://dbpedia.org/property/spouse> ?spouse.
}

# Step 3: Determine Amun-her-khepeshef's spouse
SELECT ?amunSpouse WHERE {
    <http://dbpedia.org/resource/Amun-her-khepeshef> <http://www.w3.org/2002/07/owl#sameAs> ?amunResource.
    ?amunResource <http://dbpedia.org/ontology/spouse> ?amunSpouse.
}

# Step 4: Identify the child of Amun-her-khepeshef's spouse
SELECT ?child WHERE {
    ?amunSpouse <http://dbpedia.org/ontology/child> ?child.
}

# Step 5: Find the parent of that child, which should be the same as the spouse found in step 2
SELECT ?parent WHERE {
    ?child <http://dbpedia.org/ontology/parent> ?parent.
}
```",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
994,55,test,"Give me the band member of the person born, that is a musical artist, as Donald Maynard Dokken and associated musical artist of the associated musical artist of Watchtower (band) and associated musical artist of the band member, that is a band and a group and an organisation, of Meshuggah.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Meshuggah> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/property/birthName> ""Donald Maynard Dokken""@en . <http://dbpedia.org/resource/Watchtower_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. }","```sparql
# Step 1: Identify Donald Maynard Dokken's associated musical artists
SELECT ?dokkenArtist WHERE {
    ?person foaf:name ""Donald Maynard Dokken"" .
    ?person dbo:birthName ""Donald Maynard Dokken"" .
    ?person dbo:associatedMusicalArtist ?dokkenArtist .
}

# Step 2: Find the associated musical artist of Watchtower (band)
SELECT ?watchtowerArtist WHERE {
    ?watchtower dbo:name ""Watchtower"" ;
                a dbo:Band .
    ?watchtower dbo:associatedMusicalArtist ?watchtowerArtist .
}

# Step 3: Identify Meshuggah's band members
SELECT ?meshuggahMember WHERE {
    ?meshuggah dbo:name ""Meshuggah"" ;
               a dbo:Band, dbo:Group, dbo:Organization .
    ?meshuggah dbo:bandMember ?meshuggahMember .
}

# Step 4: Find the common band member that links all associations
SELECT DISTINCT ?commonMember WHERE {
    # Linking Dokken's associated artists to Watchtower's artist
    ?dokkenArtist dbo:associatedMusicalArtist ?watchtowerArtist .

    # Linking Watchtower's artist to Meshuggah's band members
    ?watchtowerArtist dbo:bandMember ?meshuggahMember .
    
    # The common member is the one who is a band member of Meshuggah and linked through associations
    ?commonMember = ?meshuggahMember .
}
```",6,10,7,2,3,3,3,71,0,0,1,0,0.0,0
747,26,test,"Give me the band of the writer of the work, that is a song, of Amba Shepherd.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/writer> ?v2 . ?v1 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Amba_Shepherd> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT ?band WHERE {
  ?song <http://dbpedia.org/ontology/writtenBy> ?writer .
  ?writer <http://dbpedia.org/property/memberOf> ?band .
  ?song <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song> .
  ?song <http://dbpedia.org/ontology/artist> <http://dbpedia.org/resource/Amba_Shepherd> .
}
```",3,4,4,3,1,3,3,71,0,0,13,0,0.0,0
528,30,test,Give me the war of Irene Morales and force of the person born as Narciso Campero Leyes and war of Orozimbo Barbosa.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ""Narciso Campero Leyes""@en . <http://dbpedia.org/resource/Orozimbo_Barbosa> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/commander> ?v1 . <http://dbpedia.org/resource/Irene_Morales> <http://dbpedia.org/ontology/battle> ?result . }","```sparql
SELECT ?warIrene ?forceNarciso ?warOrozimbo WHERE {
  # Find the war associated with Irene Morales
  <http://dbpedia.org/resource/Irene_Morales> <http://dbpedia.org/ontology/battle> ?warIrene .
  
  # Find the force associated with Narciso Campero Leyes and the war associated with Orozimbo Barbosa
  OPTIONAL {
    <http://dbpedia.org/resource/Narciso_Campero_Leyes> <http://dbpedia.org/property/militaryForce> ?forceNarciso .
  }
  
  OPTIONAL {
    <http://dbpedia.org/resource/Orozimbo_Barbosa> <http://dbpedia.org/ontology/battle> ?warOrozimbo .
  }
}
```",4,4,5,2,3,3,3,71,2,11,0,0.15384615384615385,1.0,0.2666666666666667
378,30,test,Give me the war of Carl Pontus Gahn and claim to fame of the commander in Great Siege of Gibraltar and war of Joaquín Blake.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/knownFor> ?result . <http://dbpedia.org/resource/Great_Siege_of_Gibraltar> <http://dbpedia.org/ontology/commander> ?v1 . <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Joaquín_Blake> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
# Query 1: Find the war associated with Carl Pontus Gahn
SELECT ?war WHERE {
    <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/ontology/battle> ?war .
}

# Query 2: Find the claim to fame of the commander in the Great Siege of Gibraltar and war of Joaquín Blake

# Step 1: Identify the commander(s) of the Great Siege of Gibraltar
SELECT ?commander WHERE {
    <http://dbpedia.org/resource/Great_Siege_of_Gibraltar> <http://dbpedia.org/ontology/commander> ?commander .
}

# Step 2: Find the wars associated with Joaquín Blake
SELECT ?war WHERE {
    <http://dbpedia.org/resource/Joaquín_Blake> <http://dbpedia.org/ontology/battle> ?war .
}

# Step 3: Retrieve the claims to fame for these commanders
SELECT ?commander ?claimToFame WHERE {
    ?commander <http://dbpedia.org/property/knownFor> ?claimToFame .
}
```",4,4,5,2,3,3,3,71,0,0,2,0,0.0,0
16,58,test,Give me the spouse of Ted McGinley and professional in the profession of Satomi Ishihara and person born as the birth name of the alumnus of Ohio State University.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Satomi_Ishihara> <http://dbpedia.org/property/occupation> ?v5 . ?v1 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Ohio_State_University> . ?result <http://dbpedia.org/property/occupation> ?v5 . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://dbpedia.org/property/birthName> ?v2 . },"```sparql
SELECT ?person WHERE {
  # Condition 1: Spouse of Ted McGinley
  <http://dbpedia.org/resource/Ted_McGinley> <http://xmlns.com/foaf/0.1/spouse> ?person .

  # Condition 2: Professional in the same profession as Satomi Ishihara
  ?person <http://purl.org/dc/terms/profession> ?profession .
  <http://dbpedia.org/resource/Satomi_Ishihara> <http://purl.org/dc/terms/profession> ?sameProfession .
  FILTER(?profession = ?sameProfession)

  # Condition 3: Born with the birth name of an alumnus of Ohio State University
  ?person <http://dbpedia.org/ontology/birthName> ?birthName .
  ?alumnus <http://dbpedia.org/ontology/alumniOf> <http://dbpedia.org/resource/OHIO_State_University> .
  ?alumnus <http://dbpedia.org/ontology/birthName> ?birthName .
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
404,27,test,Give me the child of the father of the spouse of Princess Victoria Louise of Prussia.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v2 . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?v1 . ?v1 <http://dbpedia.org/property/father> ?v2 . },"```sparql
SELECT ?child WHERE {
  ?spouse <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> .
  ?father <http://dbpedia.org/ontology/father> ?spouse .
  ?father <http://dbpedia.org/ontology/child> ?child .
}
```",3,3,4,3,1,3,3,71,0,0,3,0,0.0,0
281,65,test,"Give me the entity in the birth place, that is a country, of the leader, that is a politician, of 1962 New South Wales state election and war of the awardee of Knight Grand Cross of the Order of the Bath and war of the profession, that is a military unit, of Heather Roy.",SELECT ?result WHERE { <http://dbpedia.org/resource/Heather_Roy> <http://dbpedia.org/property/occupation> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v0 <http://dbpedia.org/ontology/birthPlace> ?v6 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/1962_New_South_Wales_state_election> <http://dbpedia.org/property/leader> ?v0 . ?v4 <http://dbpedia.org/ontology/battle> ?result . ?v4 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_the_Bath> . ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/place> ?v6 . },"```sparql
SELECT ?entity WHERE {
  # Step 1: Identify the leader of the 1962 New South Wales state election
  ?leader dbp:election ""1962 New South Wales state election"" .
  ?leader a dbo:Politician .

  # Step 2: Determine the birthplace country of that leader
  ?leader foaf:birthPlace ?birthPlace .
  ?birthPlace a dbo:Country ;
              rdfs:label ?countryLabel .

  # Step 3: Find the awardee of the Knight Grand Cross of the Order of the Bath and identify a war associated with them
  ?awardee dbo:honours ""Knight Grand Cross of the Order of the Bath"" .
  ?awardee dbo:militaryConflict ?war1 .

  # Step 4: Determine Heather Roy's profession, which is a military unit, and find a war associated with it
  dbp:HeatherRoy dbo:profession ?militaryUnit .
  ?militaryUnit dbo:militaryConflict ?war2 .

  # Step 5: Find an entity in the birthplace country that relates to both wars
  ?entity a ?type ;
          dbo:country ?birthPlace ;
          dbo:militaryConflict [ rdf:type/rdfs:label ?war1Label ] ,
                               [ rdf:type/rdfs:label ?war2Label ] .
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
801,49,test,"Give me the professional in the alter ego of The Shadow and associated musical artist of the writer, that is a musical artist and an artist, of the album, that is a musical work and a work, of What U See Is What U Get.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/property/writer> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/What_U_See_Is_What_U_Get> <http://dbpedia.org/ontology/album> ?v0 . },"```sparql
SELECT ?professional WHERE {
  # Step 1: Find the album ""What U See Is What U Get"" and its associated musical artist
  ?album <http://dbpedia.org/ontology/work> <http://dbpedia.org/resource/What_U_See_Is_What_U_Get_(album)> .
  ?album <http://purl.org/dc/terms/creator> ?writer .

  # Step 2: Ensure the writer is a musical artist and an artist
  ?writer <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
  ?writer <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist> .

  # Step 3: Find the alter ego of The Shadow and its professional connection
  ?alterEgo <http://dbpedia.org/property/alterEgo> <http://dbpedia.org/resource/The_Shadow> .
  ?alterEgo <http://dbpedia.org/ontology/profession> ?professional .

  # Step 4: Associate the writer with the alter ego's professional
  ?writer <http://dbpedia.org/ontology/associatedMusicalArtist> ?alterEgo .
}
```",5,9,6,3,2,3,3,71,0,0,22,0,0.0,0
659,58,test,"Give me the commander in German campaign of 1813 and military force of the force, that is a societal event and an event and a military conflict, of the reference to Rutger Jan Schimmelpenninck and commander in the war, that is an event and a military conflict, of 1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish).","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/German_campaign_of_1813> <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://dbpedia.org/ontology/commander> ?v1 . <http://dbpedia.org/resource/1st_Light_Cavalry_Lancers_Regiment_of_the_Imperial_Guard_(Polish)> <http://dbpedia.org/ontology/battle> ?v5 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v5 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://xmlns.com/foaf/0.1/name> ""Rutger Jan Schimmelpenninck""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","```sparql
SELECT ?commanderInGermanCampaign
WHERE {
    # Step 1: Find the societal event related to Rutger Jan Schimmelpenninck
    ?event a dbo:SocietalEvent ;
           a dbo:Event ;
           a dbo:MilitaryConflict ;
           dbo:referenceTo <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> .

    # Step 2: Find the commander of the war involving the 1st Light Cavalry Lancers Regiment
    ?war a dbo:Event ;
         a dbo:MilitaryConflict .
    ?war dbo:commander ?commanderInWar .
    ?regiment dbo:partOf ?war ;
              rdfs:label ""1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish)""@en .

    # Step 3: Find the military force associated with the societal event
    ?event dbo:militaryForce ?militaryForce .
    
    # Link the commander from step 2 to the military force
    ?commanderInWar dbo:memberOf ?militaryForce .

    # Step 4: Identify the commander in the German campaign of 1813 linked to the military force
    ?germanCampaign a dbo:MilitaryConflict ;
                    rdfs:label ""German campaign of 1813""@en .
    ?germanCampaign dbo:commander ?commanderInGermanCampaign .
    
    # Ensure the military force is the same as in step 3
    ?germanCampaign dbo:militaryForce ?militaryForce .
}
```",6,11,7,3,3,3,3,71,0,0,7,0,0.0,0
294,26,test,"Give me the resting place of Edwin A. Keeble and entity in the birth place, that is a settlement, of Marion James and resting place of the awardee, that is a politician, of Distinguished Service Medal (U.S. Army).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/location> ?v1 . <http://dbpedia.org/resource/Marion_James> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Edwin_A._Keeble> <http://dbpedia.org/ontology/restingPlace> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Distinguished_Service_Medal_(U.S._Army)> . },"```sparql
SELECT ?restingPlaceKeeble ?entityInBirthplaceJames ?restingPlaceAwardee 
WHERE {
  # Resting place of Edwin A. Keeble
  OPTIONAL { 
    <http://dbpedia.org/resource/Edwin_A._Keeble> <http://dbpedia.org/ontology/burialPlace> ?restingPlaceKeeble .
  }

  # Entity in the birthplace of Marion James, where the birthplace is a settlement
  OPTIONAL {
    <http://dbpedia.org/resource/Marion_James> <http://dbpedia.org/property/placeOfBirth> ?birthPlaceJames .
    ?birthPlaceJames <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement> .
    ?entityInBirthplaceJames <http://dbpedia.org/ontology/location> ?birthPlaceJames .
  }

  # Resting place of the awardee who is a politician and has received the Distinguished Service Medal (U.S. Army)
  OPTIONAL {
    ?awardee <http://dbpedia.org/ontology/politicalParty> ?party . 
    ?awardee <http://dbpedia.org/property/burialPlace> ?restingPlaceAwardee .
    ?award <http://dbpedia.org/ontology/receiver> ?awardee ;
           <http://dbpedia.org/ontology/recipient> ?awardee ;
           <http://dbpedia.org/ontology/award> <http://dbpedia.org/resource/Distinguished_Service_Medal_(U.S._Army)> .
  }
}
```",5,7,6,2,3,2,3,28,0,0,1,0,0.0,0
16,22,test,Give me the spouse of Ted McGinley and person born as the birth name of Gigi Rice.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Gigi_Rice> <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
SELECT ?spouse WHERE {
  <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/ontology/spouse> ?spouse .
}

UNION

SELECT ?person WHERE {
  ?person <http://dbpedia.org/property/birthName> ""Gigi Rice"" .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
801,61,test,"Give me the producer of the work, that is a musical work and a song and a work, of the professional, that is a musical artist, in Rapper and associated musical artist of the writer, that is a musical artist and an artist, of the album, that is a musical work and a work, of What U See Is What U Get.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/writer> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v5 <http://dbpedia.org/ontology/producer> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/What_U_See_Is_What_U_Get> <http://dbpedia.org/ontology/album> ?v1 . ?v0 <http://dbpedia.org/property/occupation> ""Rapper""@en . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v5 <http://dbpedia.org/property/writer> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
SELECT ?producer WHERE {
  # Step 1: Find the writer of the album ""What U See Is What U Get""
  ?album <http://dbpedia.org/ontology/writer> ?writer .
  ?album <http://www.w3.org/2000/01/rdf-schema#label> ""What U See Is What U Get"" .

  # Step 2: Find associated musical artists who are rappers
  ?writer <http://dbpedia.org/ontology/associatedMusicalArtist> ?rapper .
  ?rapper <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
  ?rapper <http://dbpedia.org/ontology/profession> <http://dbpedia.org/resource/Rapper> .

  # Step 3: Identify the professional (musical artist) among these associated artists
  ?professional <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
  FILTER(?rapper = ?professional)

  # Step 4: Locate the work that is a musical work, song, and work by this professional
  ?work <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork> .
  ?work <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song> .
  ?work <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work> .
  ?professional <http://purl.org/dc/terms/creator> ?work .

  # Step 5: Find the producer of this specific work
  ?work <http://dbpedia.org/property/producer> ?producer .
}
```",6,14,7,3,2,3,3,71,0,0,9,0,0.0,0
182,23,test,Give me the war of the author of 2019 Sri Lanka Easter bombings and entity in the nationality of Tamara Kunanayakam.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Tamara_Kunanayakam> <http://dbpedia.org/ontology/nationality> ?v1 . <http://dbpedia.org/resource/2019_Sri_Lanka_Easter_bombings> <http://dbpedia.org/property/author> ?v2 . ?result <http://dbpedia.org/ontology/place> ?v1 . },"```sparql
# Part 1: Find the war related to the author of ""2019 Sri Lanka Easter bombings""
SELECT ?author ?war WHERE {
    ?event rdfs:label ""2019 Sri Lanka Easter bombings""@en .
    ?event dbo:author ?author .
    ?author dbo:knownFor ?work .
    ?work dbo:subject ?war .
}

UNION

# Part 2: Find the war related to an entity in the nationality of Tamara Kunanayakam
SELECT ?entity ?war WHERE {
    ?person rdfs:label ""Tamara Kunanayakam""@en .
    ?person dbo:nationality ?nationality .
    ?entity dbo:country ?nationality .
    ?entity dbo:subject ?war .
}
```",4,4,5,2,2,2,3,28,0,0,1,0,0.0,0
303,26,test,"Give me the party of the person born, that is a politician, as Arnulfo Arias Madrid and entity in Panama and party of the commander, that is a politician, in United States invasion of Panama.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ""Arnulfo Arias Madrid""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/United_States_invasion_of_Panama> <http://dbpedia.org/ontology/commander> ?v2 . ?v1 <http://dbpedia.org/ontology/party> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/ontology/party> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Panama> . }","```sparql
# Part 1: Get the party of Arnulfo Arias Madrid
SELECT ?partyArias WHERE {
    ?person rdfs:label ""Arnulfo Arias Madrid""@en .
    ?person dbo:birthPlace ?place .
    ?person dbo:occupation dbr:Politician .
    ?person dbo:nationality <http://dbpedia.org/resource/Panama> .
    ?person dbo:party ?partyArias .
}

# Part 2: Get the party of the commander in United States invasion of Panama
SELECT ?partyCommander WHERE {
    ?invasion dcterms:title ""United States invasion of Panama""@en .
    ?invasion dbo:commander ?commander .
    ?commander dbo:occupation dbr:Politician .
    ?commander dbo:party ?partyCommander .
}
```",5,7,6,2,3,2,3,28,0,0,1,0,0.0,0
767,62,test,"Give me the alma mater of the administration of the reference to George Kilbon Nash and entity in the administration, that is a settlement, of the writer of Where It's At (Dustin Lynch album) and reference to .","SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""George Kilbon Nash""@en . ?v6 <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://dbpedia.org/ontology/state> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v3 <http://dbpedia.org/property/leaderParty> ?v4 . <http://dbpedia.org/resource/Where_It's_At_(Dustin_Lynch_album)> <http://dbpedia.org/property/writer> ?v4 . ?v6 <http://dbpedia.org/property/governor> ?v0 . ?result <http://xmlns.com/foaf/0.1/name> """"@en . }","```sparql
# Step 1: Find the writer of ""Where It's At""
SELECT ?writer WHERE {
    ?album <http://dbpedia.org/ontology/writer> ?writer .
    ?album <http://dbpedia.org/property/title> ""Where It's At"" .
    ?album <http://dbpedia.org/property/artist> <http://dbpedia.org/resource/Dustin_Lynch_(singer)> .
}

# Step 2: Find the administration related to George Kilbon Nash and a settlement within it
SELECT ?administration ?settlement WHERE {
    ?nash <http://dbpedia.org/ontology/administration> ?administration .
    ?nash foaf:name ""George Kilbon Nash"" .
    ?settlement <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement> .
    ?administration <http://dbpedia.org/property/entity> ?settlement .
}

# Step 3: Find the alma mater of the administration
SELECT ?almaMater WHERE {
    ?administration <http://dbpedia.org/ontology/almaMater> ?almaMater .
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
801,36,test,"Give me the associated musical artist of the writer, that is a musical artist and an artist, of the album, that is a musical work and a work, of What U See Is What U Get and professional in .","SELECT ?result WHERE { <http://dbpedia.org/resource/What_U_See_Is_What_U_Get> <http://dbpedia.org/ontology/album> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v0 <http://dbpedia.org/property/writer> ?v1 . ?result <http://dbpedia.org/property/occupation> """"@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
SELECT ?associatedArtist WHERE {
  ?album <http://dbpedia.org/ontology/work> ?musicalWork .
  ?album <http://purl.org/dc/terms/title> ""What U See Is What U Get"" .
  ?album <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork> .
  
  ?writer <http://dbpedia.org/ontology/writer> ?album .
  ?writer <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
  ?writer <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist> .

  ?writer <http://dbpedia.org/property/associatedMusicalArtist> ?associatedArtist .
}
```",4,8,5,3,2,3,3,71,0,0,22,0,0.0,0
617,30,test,Give me the child of Antiochus III the Great and spouse of Laodice IV and parent of the child of Antiochus (son of Antiochus III the Great).,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Antiochus_III_the_Great> . <http://dbpedia.org/resource/Laodice_IV> <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/child> ?v1 . ?result <http://dbpedia.org/ontology/child> ?v1 . },"```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Antiochus_III_the_Great> .
  ?person <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Laodice_IV> .
  ?child <http://dbpedia.org/ontology/father> ?person .
  ?antiochus <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Antiochus_III_the_Great> .
  ?antiochus <http://dbpedia.org/ontology/mother> ?child .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
801,60,test,"Give me the associated musical artist of the writer, that is a musical artist and an artist, of the album, that is a musical work and a work, of What U See Is What U Get and professional in the alter ego of the true self of The Shadow.","SELECT ?result WHERE { ?v3 <http://xmlns.com/foaf/0.1/givenName> ""The Shadow""@en . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/property/occupation> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/property/writer> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v3 <http://dbpedia.org/property/alterEgo> ?v2 . <http://dbpedia.org/resource/What_U_See_Is_What_U_Get> <http://dbpedia.org/ontology/album> ?v0 . }","```sparql
SELECT ?associatedArtist WHERE {
  # Step 1: Identify The Shadow's true self
  ?shadow <http://dbpedia.org/ontology/alterEgo> ?trueSelf .
  
  # Step 2: Find professional association with this true self
  ?artist <http://dbpedia.org/ontology/profession> ?profession .
  FILTER(?profession = ""musician"" || ?profession = ""singer"" || ?profession = ""composer"")
  ?artist <http://dbpedia.org/property/associatedWith> ?trueSelf .

  # Step 3: Identify the album
  ?album <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork> .
  ?album <http://dbpedia.org/property/title> ""What U See Is What U Get"" .

  # Step 4: Determine the writer of the album
  ?writer <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
  ?writer <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist> .
  ?album <http://dbpedia.org/property/writer> ?writer .

  # Step 5: Find associated musical artist of this writer
  ?writer <http://dbpedia.org/property/associatedWith> ?associatedArtist .
}
```",6,10,7,3,2,3,3,71,0,0,22,0,0.0,0
421,21,test,Give me the band member of Senidah and native of Socialist Federal Republic of Yugoslavia and person born as the birth name of Dino Merlin.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Senidah> . ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Dino_Merlin> <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Socialist_Federal_Republic_of_Yugoslavia> . },"```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Senidah> .
  ?person <http://dbpedia.org/property/nativeCountry> <http://dbpedia.org/resource/Socialist_Federal_Republic_of_Yugoslavia> .
  ?person <http://dbpedia.org/ontology/birthName> ""Dino Merlin"" .
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
48,18,test,"Give me the band of the writer of the work, that is a work, of Shellback (record producer) and band of the actor, that is a musical artist, of Honor Up.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/writer> ?v2 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Honor_Up> <http://dbpedia.org/property/starring> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Shellback_(record_producer)> . },"```sparql
# Part 1: Find the band of the writer of a work by Shellback
SELECT DISTINCT ?band1 WHERE {
  ?work <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Shellback_(record_producer)> .
  ?work <http://purl.org/dc/terms/creator> ?writer .
  ?writer <http://dbpedia.org/property/band> ?band1 .
}

UNION

# Part 2: Find the band of the actor who is a musical artist for ""Honor Up""
SELECT DISTINCT ?band2 WHERE {
  ?work <http://purl.org/dc/terms/title> ""Honor Up"" .
  ?work <http://dbpedia.org/ontology/starring> ?actor .
  ?actor <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
  ?actor <http://dbpedia.org/property/band> ?band2 .
}
```",5,7,6,3,2,3,2,20,0,0,1,0,0.0,0
747,64,test,"Give me the band of the person born as the persona of Shèna and person born on the birth date of the person decedent, that is an athlete and a soccer player, at Zolotonosha and band of Amba Shepherd.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Zolotonosha> . ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?result <http://dbpedia.org/ontology/birthDate> ?v2 . <http://dbpedia.org/resource/Shèna> <http://xmlns.com/foaf/0.1/givenName> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Amba_Shepherd> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v3 <http://dbpedia.org/ontology/birthDate> ?v2 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
# Step 1: Identify the athlete and soccer player born in Zolotonosha
SELECT ?athlete WHERE {
    ?athlete <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Zolotonosha>;
              <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>;
              <http://dbpedia.org/ontology/sport> <http://dbpedia.org/resource/Soccer>.
}

# Step 2: Find the persona of Shèna with the same birth date as the decedent from step 1
SELECT ?persona WHERE {
    ?athlete <http://dbpedia.org/property/deathDate> ?deathDate.
    ?persona <http://dbpedia.org/ontology/birthDate> ?birthDate;
             <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/resource/Shèna>.
    FILTER (?birthDate = ?deathDate)
}

# Step 3: Retrieve the band for this persona
SELECT ?band WHERE {
    ?persona <http://dbpedia.org/ontology/band> ?band.
}

# Step 4: Retrieve the band associated with Amba Shepherd
SELECT ?ambaband WHERE {
    <http://dbpedia.org/resource/Amba_Shepherd> <http://dbpedia.org/ontology/band> ?ambaband.
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
54,47,test,Give me the child of the father of Soe Min Wimala Dewi and parent of the child of the parent of Thado Minsaw of Prome.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/child> ?result . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> . ?v4 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Soe_Min_Wimala_Dewi> <http://dbpedia.org/property/father> ?v2 . ?v4 <http://dbpedia.org/ontology/parent> ?result . },"```sparql
SELECT ?child WHERE {
  # Step 1: Find the father of Soe Min Wimala Dewi
  <http://dbpedia.org/resource/Soe_Min_Wimala_Dewi> <http://dbpedia.org/ontology/father> ?father .
  
  # Step 2: The child of that father is Soe Min Wimala Dewi herself
  ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Human> .
  ?child <http://dbpedia.org/property/father> ?father .

  # Step 3: Find the parent of Thado Minsaw of Prome
  <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> <http://dbpedia.org/ontology/parent> ?thadoParent .
  
  # Step 4: Determine the child of that parent
  ?childOfThadoParent <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Human> .
  ?childOfThadoParent <http://dbpedia.org/property/parent> ?thadoParent .

  # Step 5: Find the parent of this child
  ?finalChild <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Human> .
  ?finalChild <http://dbpedia.org/property/parent> ?childOfThadoParent .

  FILTER (?child = ?finalChild)
}
```",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
404,60,test,"Give me the child of the father of the spouse of Princess Victoria Louise of Prussia and spouse of the person born, that is a royalty, as the birth name of Princess Victoria Louise of Prussia.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/property/father> ?v1 . ?v2 <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/property/birthName> ?v3 . ?result <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
SELECT ?child WHERE {
  # Step 1: Identify Princess Victoria Louise of Prussia
  ?princess rdf:type dbo:Person ;
            foaf:name ""Princess Victoria Louise of Prussia""@en ;
            dbo:birthName ?birthName .

  # Step 2: Find her spouse
  ?princess dbo:spouse ?spouse .

  # Step 3: Determine the father of that spouse
  ?spouse dbo:father ?father .

  # Step 4: Identify the child of this father (which should be the spouse itself)
  ?father dbo:child ?child .

  # Step 5: Confirm royalty status and match birth name
  FILTER (?child = ?spouse) .
  ?child rdf:type dbo:Royalty ;
         foaf:name ?birthName .
}
```",6,7,7,3,2,3,3,71,0,0,1,0,0.0,0
197,9,test,Give me the birthplace of the awardee of Leroy P. Steele Prize and birthplace of the member of FC Politehnica Timișoara.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/FC_Politehnica_Timișoara> . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v3 <http://dbpedia.org/property/awards> ""Leroy P. Steele Prize""@en . }","```sparql
SELECT DISTINCT ?birthPlaceSteeleAwardee ?birthPlaceTeamMember WHERE {
  # Find the birthplace of Leroy P. Steele Prize awardees
  ?steeleAwardee dbp:award ""Leroy P. Steele Prize"" .
  ?steeleAwardee dbo:birthPlace ?birthPlaceSteeleAwardee .

  # Find the birthplace of members of FC Politehnica Timișoara
  ?teamMember dbo:team <http://dbpedia.org/resource/FC_Politehnica_Timișoara> .
  ?teamMember dbo:birthPlace ?birthPlaceTeamMember .
}
```",4,4,5,2,2,2,2,9,0,0,4,0,0.0,0
54,31,test,Give me the child of the father of the child of Thinkhaya of Pagan and parent of Thado Minsaw of Prome.,SELECT ?result WHERE { <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?v1 . ?v0 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://dbpedia.org/property/father> ?v0 . },"```sparql
SELECT ?child WHERE {
  ?thinkhaya <http://dbpedia.org/ontology/spouse> ?spouse .
  ?thinkhaya <http://dbpedia.org/ontology/child> ?child1 .
  ?child1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Human> .
  ?child1 <http://dbpedia.org/ontology/father> ?thinkhaya .
  
  ?child1 <http://dbpedia.org/ontology/parent> ?thadoMinsaw .
  ?thadoMinsaw <http://www.w3.org/2000/01/rdf-schema#label> ""Thado Minsaw of Prome""@en .

  FILTER(?child = ?child1)
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
9,26,test,"Give me the alma mater of the awardee of the reference, that is an award, to Royal Medals.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/almaMater> ?result . ?v2 <http://dbpedia.org/property/awards> ?v1 . ?v1 <http://xmlns.com/foaf/0.1/name> ""Royal Medals""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. }","```sparql
SELECT ?almaMater WHERE {
  ?award <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award> .
  ?award <http://dbpedia.org/property/name> ""Royal Medals"" .
  ?awardee <http://dbpedia.org/ontology/recipient> ?award .
  ?awardee <http://dbpedia.org/ontology/almaMater> ?almaMater .
}
```",3,4,4,3,1,3,3,71,0,0,31,0,0.0,0
391,54,test,"Give me the actor of the claim to fame, that is a work, of the spouse of Sherry Hormann and actor of All About the Andersons and native of the figure known as Hub City.","SELECT ?result WHERE { <http://dbpedia.org/resource/Sherry_Hormann> <http://dbpedia.org/ontology/spouse> ?v0 . <http://dbpedia.org/resource/All_About_the_Andersons> <http://dbpedia.org/property/starring> ?result . ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v0 <http://dbpedia.org/ontology/knownFor> ?v5 . ?v3 <http://dbpedia.org/property/nickname> ""Hub City""@en . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v5 <http://dbpedia.org/ontology/starring> ?result . }","```sparql
# Step 1: Find Sherry Hormann's spouse
SELECT ?spouse WHERE {
    <http://dbpedia.org/resource/Sherry_Hormann> <http://dbpedia.org/ontology/spouse> ?spouse .
}

# Step 2: Identify the claim to fame (work) of that spouse
SELECT ?work WHERE {
    ?spouse <http://dbpedia.org/ontology/claimToFame> ?work .
    FILTER(?spouse = [SPOUSE_URI_FROM_STEP_1])
}

# Step 3: Find actors associated with both ""All About the Andersons"" and the identified work
SELECT DISTINCT ?actor WHERE {
    ?actor <http://dbpedia.org/ontology/actedIn> <http://dbpedia.org/resource/All_About_the_Andersons> .
    ?actor <http://dbpedia.org/ontology/actedIn> ?work .
    FILTER(?work = [WORK_URI_FROM_STEP_2])
}

# Step 4: Ensure this actor is native to a place known as Hub City
SELECT DISTINCT ?actor WHERE {
    ?actor <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Hub_City> .
    ?actor <http://dbpedia.org/ontology/actedIn> <http://dbpedia.org/resource/All_About_the_Andersons> .
    ?actor <http://dbpedia.org/ontology/actedIn> ?work .
    FILTER(?work = [WORK_URI_FROM_STEP_2])
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
345,20,test,"Give me the figure known as the nickname of the player, that is a sports club and an organisation and a soccer club, in Armando Heeb and team of the person born, that is a soccer player and a soccer manager, on the birth date of Eiður Guðjohnsen.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?result <http://dbpedia.org/property/nickname> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v5 <http://dbpedia.org/ontology/birthDate> ?v4 . <http://dbpedia.org/resource/Eiður_Guðjohnsen> <http://dbpedia.org/ontology/birthDate> ?v4 . ?v1 <http://dbpedia.org/property/nickname> ?v2 . <http://dbpedia.org/resource/Armando_Heeb> <http://dbpedia.org/ontology/team> ?v1 . ?result <http://dbpedia.org/ontology/manager> ?v5 . },"```sparql
# Step 1: Get the birth date of Eiður Guðjohnsen
SELECT ?birthDate WHERE {
    <http://dbpedia.org/resource/Eiður_Guðjohnsen> <http://www.w3.org/2000/01/rdf-schema#seeAlso> ?birthDate .
}

# Step 2: Find a person who is both a soccer player and a soccer manager born on that date
SELECT ?person WHERE {
    ?person <http://dbpedia.org/ontology/birthDate> ?birthDate .
    ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer> .
    ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager> .
}

# Step 3: Determine the team associated with this person
SELECT ?team WHERE {
    ?person <http://dbpedia.org/property/team> ?team .
}

# Step 4: Identify Armando Heeb's sports club, which must be an organization and a soccer club
SELECT ?club WHERE {
    <http://dbpedia.org/resource/Armando_Heeb> <http://dbpedia.org/ontology/team> ?club .
    ?club <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation> .
    ?club <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub> .
}

# Step 5: Find the nickname of the player from step 2 who is associated with the team in step 4
SELECT ?nickname WHERE {
    ?person <http://dbpedia.org/property/team> ?team .
    ?team = ?club .
    ?person <http://dbpedia.org/ontology/nicknames> ?nickname .
}
```",6,11,7,3,2,3,2,20,0,0,1,0,0.0,0
617,43,test,"Give me the child of Antiochus III the Great and parent of Nysa (wife of Pharnaces I of Pontus) and spouse of the child of the successor, that is a royalty, of Antiochus (son of Antiochus III the Great).",SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Antiochus_III_the_Great> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/successor> ?v0 . ?v0 <http://dbpedia.org/ontology/child> ?v4 . ?v4 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Nysa_(wife_of_Pharnaces_I_of_Pontus)> . },"```sparql
SELECT ?spouse WHERE {
  # Step 1: Identify Antiochus III the Great's child who is a royalty
  ?child1 dbpedia-owl:parent <http://dbpedia.org/resource/Antiochus_III_the_Great> .
  ?child1 rdf:type dbo:Royalty .

  # Step 2: Determine the successor of that child and identify their child who is also a royalty
  ?successor dbpedia-owl:parent ?child1 .
  ?grandChild dbpedia-owl:parent ?successor .
  ?grandChild rdf:type dbo:Royalty .

  # Step 3: Find the spouse of this second-generation royal child
  ?spouse dbpedia-owl:spouse ?grandChild .

  # Step 4: Ensure this spouse is also the parent of Nysa (wife of Pharnaces I of Pontus)
  ?nysa rdf:type dbo:Person ;
        rdfs:label ""Nysa""@en .
  ?pharnaces dbpedia-owl:spouse ?nysa ;
             rdfs:label ""Pharnaces I of Pontus""@en .
  ?spouse dbpedia-owl:child ?nysa .
}
```",5,6,6,3,3,3,3,71,0,0,2,0,0.0,0
801,20,test,"Give me the professional in  and producer of the work, that is a musical work and a song and a work, of 50 Cent.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v2 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/50_Cent> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/ontology/producer> ?result . }","```sparql
SELECT ?work ?professional ?producer WHERE {
    ?work a <http://dbpedia.org/ontology/MusicalWork> ;
          a <http://dbpedia.org/ontology/Song> ;
          <http://dbpedia.org/property/artist> <http://dbpedia.org/resource/50_Cent> .
    
    OPTIONAL { ?work <http://dbpedia.org/ontology/professional> ?professional . }
    OPTIONAL { ?work <http://dbpedia.org/ontology/producer> ?producer . }
}
```",3,6,4,2,2,3,3,71,0,0,27,0,0.0,0
360,21,test,Give me the writer of The Roaring Silence and native of Johannesburg and reference to the author of Blinded by the Light.,SELECT ?result WHERE { <http://dbpedia.org/resource/Blinded_by_the_Light> <http://dbpedia.org/property/author> ?v0 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Johannesburg> . <http://dbpedia.org/resource/The_Roaring_Silence> <http://dbpedia.org/property/writer> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v0 . },"```sparql
SELECT ?writer WHERE {
  ?book dbp:title ""The Roaring Silence"" .
  ?book dbo:author ?writer .
  
  ?writer dbo:nationality dbr:South_Africa ;
          dbo:birthPlace dbr:Johannesburg .

  OPTIONAL { 
    ?reference dbo:wikiPageRedirects ?blindedByLightAuthor .
    ?reference dbp:title ""Blinded by the Light"" .
    ?writer foaf:isPrimaryTopicOf ?reference .
  }
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
801,39,test,"Give me the associated musical artist of the writer, that is a musical artist and an artist, of the album, that is a musical work and a work, of What U See Is What U Get and producer of Westside Story (song).",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/property/writer> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Westside_Story_(song)> <http://dbpedia.org/ontology/producer> ?result . <http://dbpedia.org/resource/What_U_See_Is_What_U_Get> <http://dbpedia.org/ontology/album> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. },"```sparql
SELECT ?associatedArtist WHERE {
    # Step 1: Find the album ""What U See Is What U Get""
    ?album rdf:type dbo:MusicalWork ;
           rdfs:label ""What U See Is What U Get""@en .
    
    # Step 2: Identify the writer of the album who is also a musical artist and an artist
    ?writer dbo:work ?album ;
            rdf:type dbo:MusicalArtist, dbo:Artist .

    # Step 3: Find the producer of ""Westside Story"" song
    ?producer dbo:producedSong <http://dbpedia.org/resource/Westside_Story_(song)> .
    
    # Step 4: Identify the associated musical artist of the writer
    ?writer dbo:associatedMusicalArtist ?associatedArtist .
}
```",4,8,5,3,2,3,3,71,0,0,1,0,0.0,0
314,26,test,"Give me the person deceased at the headquarter of House of Sombrerete and commander in the profession, that is an event and a societal event, of Lisa Gavrić and awardee of 30.","SELECT ?result WHERE { <http://dbpedia.org/resource/House_of_Sombrerete> <http://dbpedia.org/ontology/location> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/restingPlace> ?v2 . ?result <http://dbpedia.org/property/awards> ""30""^^<http://www.w3.org/2001/XMLSchema#integer> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Lisa_Gavrić> <http://dbpedia.org/property/occupation> ?v1 . }","```sparql
SELECT ?person WHERE {
  # Find the headquarters of House of Sombrerete
  <http://dbpedia.org/resource/House_of_Sombrerete> <http://dbpedia.org/ontology/headquarters> ?headquarters .
  
  # Identify a person who died at this location
  ?person <http://dbpedia.org/property/deathPlace> ?headquarters .
  
  # Ensure the profession is both an event and a societal event
  ?profession <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event> .
  ?profession <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent> .
  
  # The person is a commander in this profession
  ?person <http://dbpedia.org/property/profession> ?profession .
  ?person <http://dbpedia.org/ontology/commander> ?commanderRole .
  
  # Link with Lisa Gavrić
  ?gavric <http://dbpedia.org/resource/Lisa_Gavrić> .
  ?person <http://www.w3.org/2000/01/rdf-schema#seeAlso> ?gavric .
  
  # Identify the awardee of something numbered 30
  ?person <http://dbpedia.org/ontology/award> ?award .
  ?award <http://dbpedia.org/property/number> ""30""^^<http://www.w3.org/2001/XMLSchema#integer> .
}
```",5,7,6,2,3,2,3,28,0,0,1,0,0.0,0
281,57,test,"Give me the war of Beauchamp Seymour, 1st Baron Alcester and entity in the birth place, that is a country, of the leader, that is a politician, of 1962 New South Wales state election and war of the profession, that is a military unit, of Heather Roy.","SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Beauchamp_Seymour,_1st_Baron_Alcester> <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/ontology/birthPlace> ?v5 . ?result <http://dbpedia.org/ontology/place> ?v5 . <http://dbpedia.org/resource/Heather_Roy> <http://dbpedia.org/property/occupation> ?v3 . <http://dbpedia.org/resource/1962_New_South_Wales_state_election> <http://dbpedia.org/property/leader> ?v0 . }","```sparql
# Part 1: War of Beauchamp Seymour, 1st Baron Alcester
SELECT ?war1 WHERE {
    ?person rdfs:label ""Beauchamp Seymour, 1st Baron Alcester""@en .
    ?person dbo:militaryConflict ?war1 .
}

UNION

# Part 2: Entity in the birth place (country) of the leader of the 1962 New South Wales state election
SELECT ?entity WHERE {
    ?election rdfs:label ""1962 New South Wales state election""@en .
    ?election dbo:leader ?leader .
    ?leader dbo:birthPlace ?place .
    ?place dbo:country ?country .
    ?entity dbo:locationCountry ?country .
}

UNION

# Part 3: War of the profession (military unit) of Heather Roy
SELECT ?war2 WHERE {
    ?person rdfs:label ""Heather Roy""@en .
    ?person dbo:militaryUnit ?unit .
    ?unit dbo:militaryConflict ?war2 .
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
232,63,test,"Give me the native of the residence, that is a settlement and British, of Sylvie Bermann and actor of the claim to fame, that is a film and a military conflict, of Sean Pertwee and child of the person born as the birth name of Jon Pertwee.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v3 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/property/birthName> ?v4 . <http://dbpedia.org/resource/Sylvie_Bermann> <http://dbpedia.org/property/residence> ?v2 . ?v3 <http://dbpedia.org/property/birthName> ?v4 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v6 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Sean_Pertwee> <http://dbpedia.org/ontology/knownFor> ?v6 . },"```sparql
# Step 1: Find the British residence of Sylvie Bermann
SELECT ?residence WHERE {
    <http://dbpedia.org/resource/Sylvie_Bermann> <http://dbpedia.org/property/residence> ?residence .
    ?residence <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement> .
    ?residence <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> .
}

# Step 2: Find the native of that residence
SELECT ?native WHERE {
    ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person> .
    ?person <http://dbpedia.org/property/nativePlace> ?residence .
}

# Step 3: Find the film and military conflict associated with Sean Pertwee
SELECT ?filmMilitaryConflict WHERE {
    ?filmMilitaryConflict <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
    ?filmMilitaryConflict <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film> .
    <http://dbpedia.org/resource/Sean_Pertwee> <http://dbpedia.org/ontology/knownFor> ?filmMilitaryConflict .
}

# Step 4: Find the actor of that film/military conflict and check if they are a child of Jon Pertwee
SELECT ?actor WHERE {
    ?actor <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Actor> .
    ?actor <http://dbpedia.org/ontology/film> ?filmMilitaryConflict .
    ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person> .
    ?child <http://dbpedia.org/property/birthName> ""Jon Pertwee"" .
    ?child <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Jon_Pertwee> .
    ?actor <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?child .
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
659,63,test,"Give me the commander in the war, that is an event and a military conflict, of 1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish) and military force of the force, that is a societal event and an event and a military conflict, of Rutger Jan Schimmelpenninck and commander in the force of the native, that is an office holder, of Kingdom of Ireland.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v4 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Kingdom_of_Ireland> . ?v3 <http://dbpedia.org/ontology/commander> ?v4 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v6 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/1st_Light_Cavalry_Lancers_Regiment_of_the_Imperial_Guard_(Polish)> <http://dbpedia.org/ontology/battle> ?v6 . ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"```sparql
SELECT ?commander WHERE {
  ?war rdf:type dbo:MilitaryConflict .
  ?war rdf:type dbo:Event .

  ?regiment dbo:partOfMilitaryForce ?force1 .
  ?force1 dbo:commander ?commander1 .
  
  ?schimmelpenninck dbo:militaryForce ?force2 .
  ?force2 dbo:commander ?commander2 .
  
  FILTER(?commander1 = ?commander2)

  ?kingdomOfIrelandNative dbo:nativePlace ?nativePlace .
  ?kingdomOfIrelandNative rdf:type dbo:OfficeHolder .
  ?kingdomOfIrelandNative dbo:officeHolderOf <http://dbpedia.org/resource/Kingdom_of_Ireland> .

  ?force3 dbo:commander ?commander3 .
  ?force3 rdf:type dbo:SocietalEvent .
  ?force3 rdf:type dbo:Event .
  ?force3 rdf:type dbo:MilitaryConflict .

  ?kingdomOfIrelandNative dbo:militaryForce ?force3 .

  FILTER(?commander = ?commander3)
}
```",7,13,8,3,3,3,3,71,0,0,15,0,0.0,0
232,31,test,Give me the actor of Dog Soldiers (film) and child of the person born as the birth name of Jon Pertwee.,SELECT ?result WHERE { <http://dbpedia.org/resource/Dog_Soldiers_(film)> <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/ontology/child> ?result . },"```sparql
# Step 1: Retrieve Jon Pertwee's birth name
SELECT ?birthName WHERE {
    <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/ontology/birthName> ?birthName .
}

# Step 2: Identify Jon Pertwee's child using his birth name
SELECT ?child WHERE {
    ?person <http://dbpedia.org/ontology/birthName> ?birthName .
    ?person <http://dbpedia.org/ontology/child> ?child .
    FILTER(?birthName = ""Jon Pertwee"") # Replace with actual birth name from Step 1
}

# Step 3: Find the actor of ""Dog Soldiers"" who matches the identified child
SELECT ?actor WHERE {
    ?film <http://dbpedia.org/ontology/starring> ?actor .
    ?actor <http://dbpedia.org/ontology/birthName> ?birthName .
    FILTER(?film = <http://dbpedia.org/resource/Dog_Soldiers_(film)>)
    FILTER(?birthName = ""Child's Birth Name"") # Replace with actual birth name from Step 2
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
528,60,test,"Give me the force of the person born as the birth name of Narciso Campero and war of the military force of the entity, that is a societal event, in Chile.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Chile> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?v2 <http://dbpedia.org/ontology/battle> ?v3 . ?v2 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Narciso_Campero> <http://dbpedia.org/property/birthName> ?v0 . ?result <http://dbpedia.org/ontology/commander> ?v1 . },"```sparql
# Part 1: Force of Narciso Campero
SELECT ?force WHERE {
    <http://dbpedia.org/resource/Narciso_Campero> <http://www.w3.org/2000/01/rdf-schema#label> ""Narciso Campero""@en .
    OPTIONAL { <http://dbpedia.org/resource/Narciso_Campero> <http://dbpedia.org/ontology/birthName> ?birthName . }
    ?person <http://www.w3.org/2000/01/rdf-schema#label> ?birthName .
    ?person <http://dbpedia.org/ontology/militaryService> ?service .
    ?service <http://dbpedia.org/property/force> ?force .
}

UNION

SELECT ?result WHERE {
    # Part 2: War of the Military Force in Chile
    ?event <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent> .
    ?event <http://dbpedia.org/property/country> <http://dbpedia.org/resource/Chile> .
    ?event <http://dbpedia.org/ontology/militaryForce> ?force .
    ?war <http://dbpedia.org/ontology/involvesMilitaryForce> ?force .
    ?war <http://www.w3.org/2000/01/rdf-schema#label> ?result .
}
```",6,7,7,3,2,3,3,71,0,0,4,0,0.0,0
232,24,test,"Give me the actor of the claim to fame, that is a film and a military conflict, of Sean Pertwee and native of London.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Sean_Pertwee> <http://dbpedia.org/ontology/knownFor> ?v2 . ?v2 <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/London> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. },"```sparql
SELECT ?actor WHERE {
  ?film <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>.
  ?film <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>.
  <http://dbpedia.org/resource/Sean_Pertwee> <http://dbpedia.org/ontology/knownFor> ?film.
  ?film <http://dbpedia.org/ontology/starring> ?actor.
  ?actor <http://dbpedia.org/property/nationality> <http://dbpedia.org/resource/London>.
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
659,53,test,"Give me the commander in the force of the native, that is an office holder, of Kingdom of Ireland and commander in Battle of Leipzig and military force of the force, that is a societal event and an event and a military conflict, of Rutger Jan Schimmelpenninck.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/commander> ?v3 . ?result <http://dbpedia.org/ontology/battle> ?v1 . <http://dbpedia.org/resource/Battle_of_Leipzig> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Kingdom_of_Ireland> . ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> . },"```sparql
SELECT ?commander WHERE {
  # Step 1: Find the native who is an office holder of Kingdom of Ireland
  ?native a dbo:OfficeHolder ;
          dbo:nationality dbr:Kingdom_of_Ireland .

  # Step 2: Find the commander in Battle of Leipzig associated with this native's military force
  ?battle dbr:Battle_of_Leipzig ;
         dbo:commander ?commanderInBattle .
  
  ?native dbo:militaryForce ?militaryForce .
  ?militaryForce dbo:commander ?commanderInBattle .

  # Step 3: Determine the societal event and military conflict related to Rutger Jan Schimmelpenninck
  dbr:Rutger_Jan_Schimmelpenninck dbo:militaryForce ?relatedMilitaryForce .
  
  ?societalEvent a dbo:SocietalEvent, dbo:Event, dbo:MilitaryConflict ;
                dbo:militaryForce ?relatedMilitaryForce .

  # Step 4: Find the commander in charge of this force
  ?relatedMilitaryForce dbo:commander ?finalCommander .

  FILTER(?commanderInBattle = ?finalCommander)
}
```",6,10,7,3,3,3,3,71,0,0,6,0,0.0,0
54,59,test,Give me the child of the father of the child of Thinkhaya of Pagan and parent of the child of the parent of Thado Minsaw of Prome.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> ?v2 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> . ?v5 <http://dbpedia.org/ontology/parent> ?result . ?v5 <http://dbpedia.org/property/father> ?v0 . ?v2 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?v3 . },"```sparql
SELECT ?result WHERE {
    # Step 1: Find the child of Thinkhaya of Pagan
    ?childOfThinkhaya dbpedia-owl:parent <http://dbpedia.org/resource/Thihathu_of_Pagan> .
    
    # Step 2: Find the father of that child (which is Thihathu of Pagan)
    ?fatherOfChild dbpedia-owl:child ?childOfThinkhaya .
    
    # Step 3: Determine the child of this father
    ?grandchildOfThinkhaya dbpedia-owl:parent ?fatherOfChild .
    
    # Step 4: Identify Thado Minsaw of Prome
    ?thadoMinsawParent dbpedia-owl:child <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> .
    
    # Step 5: Find the parent of Thado Minsaw of Prome
    ?parentOfThadoMinsaw dbpedia-owl:child ?thadoMinsawParent .
    
    # Step 6: Determine the child of this parent
    ?grandchildOfThadoMinsaw dbpedia-owl:parent ?parentOfThadoMinsaw .
    
    # Step 7: Find the parent of that grandchild
    ?result dbpedia-owl:child ?grandchildOfThadoMinsaw .
}
```",6,6,7,3,2,3,3,71,0,0,1,0,0.0,0
10,25,test,"Give me the band member of the person born, that is an artist, as Luke Francis Vibert and associated musical artist of the person born, that is an artist, as Matt Colton and professional in .","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . ?v0 <http://dbpedia.org/property/birthName> ""Luke Francis Vibert""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v3 <http://dbpedia.org/property/birthName> ""Matt Colton""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
SELECT ?vibertBandMember ?coltonMusicalArtist WHERE {
  ?vibert dbo:birthName ""Luke Francis Vibert"" .
  ?vibert dbo:occupation ""artist"" .
  ?vibert dbo:bandMember ?vibertBandMember .

  ?colton dbo:birthName ""Matt Colton"" .
  ?colton dbo:occupation ""artist"" .
  ?colton dbo:musicalArtist ?coltonMusicalArtist .
}
```",5,7,6,2,3,2,3,28,0,0,1,0,0.0,0
801,54,test,"Give me the professional in the alter ego of The Shadow and producer of the work, that is a musical work and a song and a work, of the professional, that is a musical artist, in Rapper and associated musical artist of Chris Taylor (music producer).","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/occupation> ""Rapper""@en . <http://dbpedia.org/resource/Chris_Taylor_(music_producer)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v5 <http://dbpedia.org/ontology/producer> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v5 <http://dbpedia.org/property/writer> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v3 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v3 . }","```sparql
SELECT ?professional WHERE {
  ?shadow <http://dbpedia.org/ontology/alterEgo> <http://dbpedia.org/resource/The_Shadow> .
  
  ?work <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork> ;
        <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song> ;
        <http://dbpedia.org/ontology/work> ?work .
  ?shadow <http://dbpedia.org/property/professional> ?professional .
  ?professional <http://dbpedia.org/ontology/producer> ?work .

  ?artist <http://dbpedia.org/ontology/category> <http://dbpedia.org/resource/Rapper> ;
          <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Chris_Taylor_(music_producer)> .
  ?professional <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> ;
                <http://dbpedia.org/ontology/professional> ?artist .
}
```",6,10,7,3,3,3,3,71,0,0,2,0,0.0,0
994,49,test,"Give me the associated musical artist of the associated musical artist of Watchtower (band) and band member of the person born, that is a musical artist, as the persona of Don Dokken.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://dbpedia.org/property/birthName> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Don_Dokken> <http://xmlns.com/foaf/0.1/givenName> ?v4 . <http://dbpedia.org/resource/Watchtower_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
# Step 1: Find the associated musical artist of Watchtower (band)
SELECT ?artist1 WHERE {
    <http://dbpedia.org/resource/Watchtower_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?artist1 .
}

# Step 2: Using the result from step 1, find its associated musical artist
WITH ?artist1
SELECT ?artist2 WHERE {
    ?artist1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?artist2 .
}

# Step 3: Find the band member who was born as a persona of Don Dokken
SELECT ?person WHERE {
    ?persona <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
    ?persona <http://dbpedia.org/property/birthName> ""Don Dokken"" .
    ?person <http://dbpedia.org/ontology/memberOfBand> ?band .
    ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
}

# Step 4: Find the associated musical artist of the person identified in step 3
WITH ?person
SELECT ?artist3 WHERE {
    ?person <http://dbpedia.org/ontology/associatedMusicalArtist> ?artist3 .
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
392,28,test,"Give me the entity in the region, that is a country, of Central European Time and region of the time zone, that is a sports event, of Aguilar de Segarra and province of the residence, that is a settlement and Italian, of Sebastiano Bianchetti.",SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Aguilar_de_Segarra> <http://dbpedia.org/ontology/timeZone> ?v3 . <http://dbpedia.org/resource/Sebastiano_Bianchetti> <http://dbpedia.org/property/residence> ?v5 . ?v5 <http://dbpedia.org/ontology/province> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/country> ?v1 . ?result <http://dbpedia.org/ontology/timeZone> ?v3 . ?v1 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . ?v5 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. },"```sparql
SELECT ?entity WHERE {
  # Find countries in the region of Central European Time
  ?country <http://dbpedia.org/ontology/timeZone> ?tz .
  ?tz <http://www.w3.org/2000/01/rdf-schema#label> ""Central European Time"" .

  # Find sports events related to Aguilar de Segarra
  ?event <http://dbpedia.org/ontology/location> ?location .
  ?location <http://dbpedia.org/property/name> ""Aguilar de Segarra"" .

  # Find Sebastiano Bianchetti's Italian residence
  ?residence <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement> .
  ?residence <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy> .
  <http://dbpedia.org/resource/Sebastiano_Bianchetti> <http://dbpedia.org/property/residence> ?residence .

  # Combine conditions to find the entity
  ?entity <http://www.w3.org/2000/01/rdf-schema#seeAlso> ?country .
  ?entity <http://www.w3.org/2000/01/rdf-schema#seeAlso> ?event .
  ?entity <http://www.w3.org/2000/01/rdf-schema#seeAlso> ?residence .
}
```",6,10,7,2,3,2,3,28,0,0,1,0,0.0,0
356,18,test,"Give me the team of the native, that is a soccer player and a soccer manager, of Wolverhampton and player in the successor of the predecessor, that is a sports team season and a soccer club season, of 2015 Sacramento Republic FC season.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/team> ?result . ?v3 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Wolverhampton> . ?v1 <http://dbpedia.org/ontology/successor> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?result <http://dbpedia.org/ontology/manager> ?v3 . ?v1 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/2015_Sacramento_Republic_FC_season> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. },"```sparql
# Step 1: Find the predecessor of the 2015 Sacramento Republic FC season
SELECT ?predecessor WHERE {
    ?season <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/2015_Sacramento_Republic_FC_season> .
    ?season a <http://dbpedia.org/ontology/SportsTeamSeason> ;
            a <http://dbpedia.org/ontology/SoccerClubSeason> .
}

# Step 2: Find the successor of that predecessor season
SELECT ?successor WHERE {
    ?predecessor <http://dbpedia.org/ontology/successor> ?successor .
}

# Step 3: Identify players in the successor season
SELECT DISTINCT ?player WHERE {
    ?successor <http://dbpedia.org/property/player> ?player .
    ?player a <http://dbpedia.org/ontology/SoccerPlayer> ;
            <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Wolverhampton> .
}

# Step 4: Filter players who are also managers
SELECT DISTINCT ?player WHERE {
    ?player a <http://dbpedia.org/ontology/SoccerManager> .
}

# Step 5: Find the current team of such a player
SELECT DISTINCT ?team WHERE {
    ?player <http://dbpedia.org/property/currentTeam> ?team .
}
```",5,9,6,3,2,3,2,20,0,0,1,0,0.0,0
312,8,test,Give me the entity in the birthplace of Giorgio Grigolli and entity in Province of Bergamo.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v1 . ?result <http://dbpedia.org/ontology/province> <http://dbpedia.org/resource/Province_of_Bergamo> . <http://dbpedia.org/resource/Giorgio_Grigolli> <http://dbpedia.org/ontology/birthPlace> ?v1 . },"```sparql
# Query for entities related to Giorgio Grigolli's birthplace
SELECT ?entity WHERE {
  <http://dbpedia.org/resource/Giorgio_Grigolli> <http://www.w3.org/2000/01/rdf-schema#label> ""Giorgio Grigolli""@en .
  <http://dbpedia.org/resource/Giorgio_Grigolli> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  ?entity <http://www.w3.org/2000/01/rdf-schema#label> ?label .
  FILTER(CONTAINS(LCASE(STR(?label)), LCASE(STR(?birthPlace))))
}

UNION

# Query for entities in the Province of Bergamo
SELECT ?entity WHERE {
  ?entity <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Province_of_Bergamo> .
}
```",3,3,4,2,2,2,2,9,0,0,228,0,0.0,0
314,22,test,Give me the awardee of the award of Sergei Makovetsky and person deceased at the headquarter of House of Sombrerete.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/restingPlace> ?v2 . ?result <http://dbpedia.org/property/awards> ?v3 . <http://dbpedia.org/resource/Sergei_Makovetsky> <http://dbpedia.org/property/awards> ?v3 . <http://dbpedia.org/resource/House_of_Sombrerete> <http://dbpedia.org/ontology/location> ?v2 . },"```sparql
SELECT ?awardee WHERE {
  # Find awards associated with Sergei Makovetsky
  ?award <http://dbpedia.org/ontology/receiver> <http://dbpedia.org/resource/Sergei_Makovetsky> .
  
  # Find individuals who received the same award
  ?award <http://dbpedia.org/ontology/receiver> ?awardee .

  # Check if the awardee is deceased and their place of death matches House of Sombrerete's headquarter
  OPTIONAL { ?awardee <http://dbpedia.org/property/deathPlace> ?deathPlace . }
  FILTER EXISTS {
    ?house <http://dbpedia.org/ontology/headquarters> ?headquarter .
    ?house <http://www.w3.org/2000/01/rdf-schema#label> ""House of Sombrerete"" .
    ?awardee <http://dbpedia.org/property/deathPlace> ?headquarter .
  }
}
```",4,4,5,2,2,2,3,28,0,0,1,0,0.0,0
54,51,test,"Give me the predecessor of the child, that is an office holder and a royalty, of the reference to Thihapate of Mohnyin and parent of the child of Narapati I of Ava.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Narapati_I_of_Ava> . ?v1 <http://xmlns.com/foaf/0.1/name> ""Thihapate of Mohnyin""@en . ?v2 <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/ontology/successor> ?v2 . ?v4 <http://dbpedia.org/ontology/parent> ?result . }","```sparql
SELECT ?predecessor WHERE {
  ?child a dbo:OfficeHolder ;
         a dbo:Royalty ;
         dbo:referenceTo <http://dbpedia.org/resource/Thihapate_of_Mohnyin> ;
         dbo:parentOf ?grandChild .
  
  ?narapatiI dbo:child ?grandChild .

  ?child dbo:predecessor ?predecessor .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
182,28,test,Give me the war of the work of Gotabhaya Rajapaksa and entity in the nationality of Tamara Kunanayakam and war of the author of 2019 Sri Lanka Easter bombings.,SELECT ?result WHERE { <http://dbpedia.org/resource/2019_Sri_Lanka_Easter_bombings> <http://dbpedia.org/property/author> ?v1 . ?v3 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Gotabhaya_Rajapaksa> . ?v1 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> ?v5 . ?v3 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Tamara_Kunanayakam> <http://dbpedia.org/ontology/nationality> ?v5 . },"```sparql
SELECT DISTINCT ?war WHERE {
  # Part 1: War of the work of Gotabhaya Rajapaksa
  ?work dbr:Gotabhaya_Rajapaksa dbo:author ?person .
  ?work dbo:subject ?war .

  # Part 2: Entity in the nationality of Tamara Kunanayakam
  dbr:Tamara_Kunanayakam dbo:nationality dbr:Sri_Lanka .
  ?entity dbo:country dbr:Sri_Lanka .

  # Part 3: War of the author of 2019 Sri Lanka Easter bombings
  ?article dbo:subject dbr:2019_Sri_Lanka_Easter_bombings .
  ?article dbo:author ?author .
  ?work2 dbo:author ?author .
  ?work2 dbo:subject ?war .

  # Combine all parts to find a common war
  FILTER(?war = ?war)
}
```",6,6,7,2,3,2,3,28,0,0,1,0,0.0,0
959,61,test,"Give me the manager of the team of the manager, that is a sports manager, of 1998 Kashima Antlers season and native of the residence, that is a country, of the leader, that is a politician, of 2010 Japanese House of Councillors election.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://dbpedia.org/ontology/manager> ?v3 . ?result <http://dbpedia.org/ontology/birthPlace> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. <http://dbpedia.org/resource/1998_Kashima_Antlers_season> <http://dbpedia.org/ontology/manager> ?v3 . ?v1 <http://dbpedia.org/property/residence> ?v4 . <http://dbpedia.org/resource/2010_Japanese_House_of_Councillors_election> <http://dbpedia.org/property/leader> ?v1 . },"```sparql
SELECT ?manager WHERE {
    # Step 1: Get the leader of the 2010 Japanese House of Councillors election and their residence (country)
    ?leader a dbo:Politician ;
            dbo:electedDuring dbr:2010_Japanese_House_of_Councillors_election ;
            foaf:nationality ?residenceCountry .

    # Step 2: Find a sports manager native to that country
    ?sportsManager a dbo:SportsManager ;
                   foaf:nationality ?residenceCountry .

    # Step 3: Identify the team managed by this sports manager in 1998
    ?team dbo:manager ?sportsManager ;
          dbo:season dbr:1998_Kashima_Antlers_season .

    # Step 4: Determine the manager of that team
    ?team dbo:currentManager ?manager .
}
```",6,9,7,3,2,3,3,71,0,0,6,0,0.0,0
179,18,test,"Give me the person born as the birth name of the child, that is a royalty, of Nakkhatra Mangala and parent of the child of Bhumibol Adulyadej.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v2 . ?v1 <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Bhumibol_Adulyadej> <http://dbpedia.org/ontology/child> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Nakkhatra_Mangala> . ?v3 <http://dbpedia.org/ontology/parent> ?result . },"```sparql
SELECT ?person ?birthName WHERE {
  ?person <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Thailand> .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
  ?person <http://dbpedia.org/ontology/birthName> ?birthName .
  
  ?parent <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Nakkhatra_Mangala> .
  ?parent <http://dbpedia.org/ontology/child> ?person .

  ?grandParent <http://dbpedia.org/ontology/birthName> ""Bhumibol Adulyadej"" .
  ?grandParent <http://dbpedia.org/ontology/child> ?parent .
}
```",5,6,6,3,2,3,2,20,0,0,1,0,0.0,0
547,36,test,Give me the resting place of James Burton (Egyptologist) and resting place of the awardee of the award of Gerald Graham.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/James_Burton_(Egyptologist)> <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Gerald_Graham> <http://dbpedia.org/property/awards> ?v0 . ?v1 <http://dbpedia.org/property/awards> ?v0 . },"```sparql
SELECT ?burialJamesBurton ?burialAwardeeGeraldGraham WHERE {
  # Find the resting place of James Burton (Egyptologist)
  OPTIONAL {
    <http://dbpedia.org/resource/James_Burton_(Egyptologist)> <http://dbpedia.org/ontology/burialPlace> ?burialJamesBurton .
  }
  
  # Find the awardee of Gerald Graham and their resting place
  OPTIONAL {
    ?awardee <http://dbpedia.org/property/award> <http://dbpedia.org/resource/Gerald_Graham> ;
             <http://dbpedia.org/ontology/burialPlace> ?burialAwardeeGeraldGraham .
  }
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
427,51,test,"Give me the party of the person born, that is an office holder and a politician, as the birth name of Romano Prodi and party of the father of Lamberto Andreotti.",SELECT ?result WHERE { <http://dbpedia.org/resource/Lamberto_Andreotti> <http://dbpedia.org/property/father> ?v4 . <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/ontology/party> ?result . ?v4 <http://dbpedia.org/ontology/party> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
# Query for Romano Prodi's party
SELECT ?party WHERE {
  ?person <http://dbpedia.org/ontology/birthName> ""Romano Prodi"" .
  ?person a <http://dbpedia.org/ontology/OfficeHolder> ;
          a <http://dbpedia.org/ontology/Politician> .
  ?person <http://dbpedia.org/ontology/party> ?party .
}

UNION

# Query for Lamberto Andreotti's father's party
SELECT ?fatherParty WHERE {
  ?lamberto <http://dbpedia.org/property/father> ?father .
  ?father a <http://dbpedia.org/ontology/Politician> ;
          <http://dbpedia.org/ontology/party> ?fatherParty .
  FILTER(?lamberto = <http://dbpedia.org/resource/Lamberto_Andreotti>)
}
```",5,7,6,3,2,3,3,71,0,0,3,0,0.0,0
747,50,test,"Give me the band of the person born as Tracey Elizabeth McSween and band of the writer of the work, that is a song, of Amba Shepherd.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/birthName> ""Tracey Elizabeth McSween""@en . ?v0 <http://dbpedia.org/property/writer> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Amba_Shepherd> . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
# Query for Tracey Elizabeth McSween's band
SELECT ?band WHERE {
  <http://dbpedia.org/resource/Tracey_McSweeney> <http://dbpedia.org/ontology/band> ?band .
}

UNION

# Query for the writer of Amba Shepherd's song and their band
SELECT ?writerBand WHERE {
  ?song <http://purl.org/dc/terms/creator> <http://dbpedia.org/resource/Amba_Shepherd> .
  ?song <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song> .
  ?song <http://purl.org/dc/terms/contributor> ?writer .
  ?writer <http://dbpedia.org/ontology/band> ?writerBand .
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
9,28,test,"Give me the alma mater of the mayor, that is a politician, of Northern Ireland Forum and figure known as QUB and alma mater of Allen Hill (scientist).","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Allen_Hill_(scientist)> <http://dbpedia.org/ontology/almaMater> ?result . <http://dbpedia.org/resource/Northern_Ireland_Forum> <http://dbpedia.org/property/leader> ?v1 . ?result <http://dbpedia.org/property/nickname> ""QUB""@en . ?v1 <http://dbpedia.org/ontology/almaMater> ?result . }","```sparql
SELECT ?almaMater WHERE {
  ?politician <http://dbpedia.org/ontology/politician> _:a .
  ?politician <http://dbpedia.org/property/mayorOf> <http://dbpedia.org/resource/Northern_Ireland_Forum> .
  ?politician <http://dbpedia.org/ontology/almaMater> ?almaMater .

  ?scientist <http://dbpedia.org/ontology/scientist> _:b .
  ?scientist <http://dbpedia.org/resource/Allen_Hill_(scientist)> _:c .
  ?scientist <http://dbpedia.org/ontology/almaMater> ?almaMater .

  FILTER(?almaMater = <http://dbpedia.org/resource/Queen's_University_Belfast>)
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
9,70,test,"Give me the figure known as the nickname of the entity, that is an organisation and an educational institution, in Northern Ireland and alma mater of the mayor, that is a politician, of Northern Ireland Forum and alma mater of the awardee of the reference, that is an award, to Royal Medals.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Northern_Ireland> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?result <http://dbpedia.org/property/nickname> ?v3 . ?v4 <http://dbpedia.org/ontology/almaMater> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v7 <http://dbpedia.org/ontology/almaMater> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Royal Medals""@en . <http://dbpedia.org/resource/Northern_Ireland_Forum> <http://dbpedia.org/property/leader> ?v4 . ?v7 <http://dbpedia.org/property/awards> ?v0 . ?v1 <http://dbpedia.org/property/nickname> ?v3 . }","```sparql
SELECT ?nickname WHERE {
    ?institution a dbo:EducationalInstitution ;
                 dbo:location dbr:Northern_Ireland ;
                 dbo:organizationType dbr:Organization .
                 
    ?mayor dbo:almaMater ?institution ;
           dbo:position dbr:Mayor_of_Northern_Ireland_Forum ;
           dbo:occupation dbr:Politician .

    ?award a dbo:Award ;
          dbo:reference dbr:Royal_Medals .

    ?awardee dbo:recipientOf ?award ;
             dbo:almaMater ?institution .

    ?institution dbo:nickname ?nickname .
}
```",8,12,9,3,3,3,3,71,0,0,1,0,0.0,0
184,52,test,"Give me the child of the child of Archduke Joseph Karl of Austria and parent of Archduchess Ilona of Austria and parent of the native of the landmark at elevation, that is a settlement, of 96.0.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Karl_of_Austria> . ?result <http://dbpedia.org/property/father> ?v5 . ?result <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?v3 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Ilona_of_Austria> . ?v3 <http://dbpedia.org/ontology/elevation> ""96.0""^^<http://www.w3.org/2001/XMLSchema#double> . }","```sparql
SELECT ?grandchild WHERE {
    # Step 1: Find the child of Archduke Joseph Karl of Austria
    ?child rdf:type dbo:Person ;
           dbo:parent <http://dbpedia.org/resource/Archduke_Joseph_Karl_of_Austria> .

    # Step 2: From that child, find their own child (grandchild of Archduke Joseph Karl)
    ?grandchild rdf:type dbo:Person ;
                dbo:parent ?child .

    # Step 3: Ensure this grandchild is a parent of Archduchess Ilona of Austria
    ?grandchild dbo:child <http://dbpedia.org/resource/Archduchess_Ilona_of_Austria> .

    # Step 4: Ensure this person is native to a landmark settlement at elevation 96.0
    ?landmark rdf:type dbo:Settlement ;
              dbo:elevation ""96.0""^^xsd:float .
    ?grandchild dbo:nativePlace ?landmark .
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
391,52,test,"Give me the native of the figure known as the nick name of Jackson, Tennessee and actor of All About the Andersons and actor of the claim to fame, that is a work, of Michael Ballhaus.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/All_About_the_Andersons> <http://dbpedia.org/property/starring> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/property/nickname> ?v3 . <http://dbpedia.org/resource/Michael_Ballhaus> <http://dbpedia.org/ontology/knownFor> ?v5 . <http://dbpedia.org/resource/Jackson,_Tennessee> <http://xmlns.com/foaf/0.1/nick> ?v3 . ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . }","```sparql
# Step 1: Get the nickname of Jackson, Tennessee
SELECT ?nickname WHERE {
    <http://dbpedia.org/resource/Jackson,_Tennessee> <http://dbpedia.org/ontology/nickName> ?nickname .
}

# Step 2: Find actors in ""All About the Andersons""
SELECT DISTINCT ?actor WHERE {
    ?film <http://dbpedia.org/property/starring> ?actor .
    ?film <http://dbpedia.org/ontology/title> ""All About the Andersons""@en .
}

# Step 3: Get Michael Ballhaus's claim to fame that is a work
SELECT DISTINCT ?work WHERE {
    <http://dbpedia.org/resource/Michael_Ballhaus> <http://dbpedia.org/ontology/knownFor> ?work .
    ?work <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film> .
}

# Step 4: Find the common actor and their native place
SELECT DISTINCT ?actor ?nativePlace WHERE {
    # Actor from ""All About the Andersons""
    ?film1 <http://dbpedia.org/property/starring> ?actor .
    ?film1 <http://dbpedia.org/ontology/title> ""All About the Andersons""@en .

    # Actor in Michael Ballhaus's work
    ?film2 <http://dbpedia.org/property/director> <http://dbpedia.org/resource/Michael_Ballhaus> .
    ?film2 <http://dbpedia.org/property/starring> ?actor .

    # Get native place of the actor
    ?actor <http://dbpedia.org/ontology/birthPlace> ?nativePlace .
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
994,47,test,"Give me the associated musical artist of the associated musical artist of Watchtower (band) and associated musical artist of the band member, that is a band and a group and an organisation, of the band, that is an organisation, of Fredrik Thordendal.",SELECT ?result WHERE { <http://dbpedia.org/resource/Watchtower_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Fredrik_Thordendal> . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. },"```sparql
# Step 1: Identify the band associated with Fredrik Thordendal
SELECT ?band WHERE {
    <http://dbpedia.org/resource/Fredrik_Thordendal> <http://dbpedia.org/ontology/memberOf> ?band .
}

# Step 2: Determine a band member of that band who is also part of another band and group that qualifies as an organization
SELECT DISTINCT ?member WHERE {
    ?band <http://dbpedia.org/ontology/member> ?member .
    ?otherBand <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band> ;
               <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group> ;
               <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organization> .
    ?member <http://dbpedia.org/ontology/memberOf> ?otherBand .
}

# Step 3: Find the associated musical artist of that band member's other band
SELECT DISTINCT ?artist WHERE {
    ?otherBand <http://dbpedia.org/ontology/associatedMusicalArtist> ?artist .
}

# Step 4: Find the associated musical artist of Watchtower (band)
SELECT DISTINCT ?watchtowerArtist WHERE {
    <http://dbpedia.org/resource/Watchtower_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?watchtowerArtist .
}

# Final step: Combine results to find a connection
SELECT DISTINCT ?finalArtist WHERE {
    VALUES ?artist1 { ?watchtowerArtist }
    VALUES ?artist2 { ?artist }
    ?finalArtist <http://dbpedia.org/ontology/associatedMusicalArtist> ?artist1 .
    ?finalArtist <http://dbpedia.org/ontology/associatedMusicalArtist> ?artist2 .
}
```",5,9,6,3,2,3,3,71,0,0,5,0,0.0,0
659,66,test,"Give me the commander in the force of Arthur Wellesley, 1st Duke of Wellington and military force of the force, that is a societal event and an event and a military conflict, of the reference to Rutger Jan Schimmelpenninck and commander in the war, that is an event and a military conflict, of 1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish).","SELECT ?result WHERE { ?v6 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://dbpedia.org/ontology/commander> ?v1 . ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://xmlns.com/foaf/0.1/name> ""Rutger Jan Schimmelpenninck""@en . ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Arthur_Wellesley,_1st_Duke_of_Wellington> . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/1st_Light_Cavalry_Lancers_Regiment_of_the_Imperial_Guard_(Polish)> <http://dbpedia.org/ontology/battle> ?v6 . }","```sparql
SELECT ?commanderInWar
WHERE {
    # Step 1: Find the societal event that is also an event and a military conflict related to Rutger Jan Schimmelpenninck.
    ?event rdf:type dbo:MilitaryConflict .
    ?event rdf:type dbo:Event .
    ?event dbo:societalEvent true .
    ?event dbo:referenceTo <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> .

    # Step 2: Find the commander in this war.
    ?commanderInWar dbo:commanderOf ?event .

    # Step 3: Determine the military force commanded by Arthur Wellesley, 1st Duke of Wellington.
    <http://dbpedia.org/resource/Arthur_Wellesley,_1st_Duke_of_Wellington> dbo:militaryForce ?militaryForce .

    # Step 4: Identify the commander in the force of Arthur Wellesley.
    ?commanderInForce dbo:commanderOf ?militaryForce .

    # Step 5: Find the commander in the war that is an event and a military conflict for the 1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish).
    ?war rdf:type dbo:MilitaryConflict .
    ?war rdf:type dbo:Event .
    <http://dbpedia.org/resource/1st_Light_Cavalry_Lancers_Regiment_of_the_Imperial_Guard_(Polish)> dbo:commanderInWar ?war .

    # Link the commanders found in steps 2 and 5.
    FILTER(?commanderInWar = ?commanderInForce)
}
```",7,12,8,3,3,3,3,71,0,0,15,0,0.0,0
547,65,test,Give me the resting place of the actor of the show with Emily Richard and resting place of the awardee of Knight Grand Cross of the Order of St Michael and St George and resting place of the child of James Burton (property developer).,SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/James_Burton_(property_developer)> <http://dbpedia.org/ontology/child> ?v4 . ?v3 <http://dbpedia.org/ontology/restingPlace> ?result . ?v0 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emily_Richard> . ?v6 <http://dbpedia.org/ontology/restingPlace> ?result . ?v0 <http://dbpedia.org/property/starring> ?v6 . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_St_Michael_and_St_George> . },"```sparql
SELECT ?restingPlace WHERE {
  # Part 1: Resting place of the actor of the show with Emily Richard
  {
    ?show dbo:starring <http://dbpedia.org/resource/Emily_Richard> .
    ?actor dbo:role ?show .
    ?actor dbo:deathPlace ?restingPlace .
  }
  
  UNION
  
  # Part 2: Resting place of the awardee of Knight Grand Cross of the Order of St Michael and St George
  {
    ?person dbp:honours ""Knight Grand Cross of the Order of St Michael and St George""@en .
    ?person dbo:deathPlace ?restingPlace .
  }
  
  UNION
  
  # Part 3: Resting place of the child of James Burton (property developer)
  {
    <http://dbpedia.org/resource/James_Burton_(property_developer)> dbo:child ?child .
    ?child dbo:deathPlace ?restingPlace .
  }
}
```",7,7,8,3,3,3,3,71,0,1,1,0.0,0.0,0
547,71,test,Give me the resting place of the awardee of the award of Gerald Graham and resting place of the actor of the show with Emily Richard and resting place of the child of the child of William Haliburton.,"SELECT ?result WHERE { ?v8 <http://dbpedia.org/property/awards> ?v7 . ?v4 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emily_Richard> . ?v5 <http://dbpedia.org/ontology/restingPlace> ?result . ?v1 <http://dbpedia.org/ontology/child> ?v2 . ?v8 <http://dbpedia.org/ontology/restingPlace> ?result . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . ?v1 <http://dbpedia.org/property/father> ""William Haliburton""@en . <http://dbpedia.org/resource/Gerald_Graham> <http://dbpedia.org/property/awards> ?v7 . ?v4 <http://dbpedia.org/property/starring> ?v5 . }","```sparql
# Part 1: Resting place of the awardee of Gerald Graham's award
SELECT ?restingPlace WHERE {
  ?award <http://dbpedia.org/property/awardedBy> <http://dbpedia.org/resource/Gerald_Graham> .
  ?person <http://dbpedia.org/ontology/receivesAward> ?award .
  ?person <http://dbpedia.org/ontology/burialPlace> ?restingPlace .
}

UNION

# Part 2: Resting place of the actor in a show with Emily Richard
SELECT ?restingPlace WHERE {
  ?show <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/E._Richard> .
  ?actor <http://dbpedia.org/ontology/performedIn> ?show .
  ?actor <http://dbpedia.org/ontology/burialPlace> ?restingPlace .
}

UNION

# Part 3: Resting place of the child of the child of William Haliburton
SELECT ?grandchildRestingPlace WHERE {
  ?child <http://dbpedia.org/property/parent> <http://dbpedia.org/resource/William_Haliburton> .
  ?grandchild <http://dbpedia.org/property/parent> ?child .
  ?grandchild <http://dbpedia.org/ontology/burialPlace> ?grandchildRestingPlace .
}
```",9,9,10,3,3,3,3,71,0,0,1,0,0.0,0
55,28,test,"Give me the band of the reference, that is a band, to Newsted and band member of the producer, that is a band, of Used to Love Her and band member of the band member, that is a band and a group, of San Francisco Symphony.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. <http://dbpedia.org/resource/Used_to_Love_Her> <http://dbpedia.org/ontology/producer> ?v1 . ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v5 <http://xmlns.com/foaf/0.1/name> ""Newsted""@en . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/San_Francisco_Symphony> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . }","```sparql
SELECT ?band WHERE {
  # Step 1: Find the band associated with Newsted
  ?newstedBand <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Newsted> .
  
  # Step 2: Find the producer of ""Used to Love Her"" and their band membership
  ?usedToLoveHerProducer <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Used_to_Love_Her> .
  ?usedToLoveHerBand <http://dbpedia.org/ontology/bandMember> ?usedToLoveHerProducer .

  # Step 3: Find common band members between the bands from steps 1 and 2
  ?commonMember <http://dbpedia.org/ontology/bandMember> ?newstedBand .
  ?commonMember <http://dbpedia.org/ontology/bandMember> ?usedToLoveHerBand .

  # Step 4: Ensure the final band is linked to the San Francisco Symphony
  ?finalBand <http://dbpedia.org/ontology/bandMember> ?commonMember .
  ?finalBand <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band> .
  ?finalBand <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalGroup> .
  ?finalBand <http://dbpedia.org/property/bandMember> <http://dbpedia.org/resource/San_Francisco_Symphony> .

  # Return the final band
  VALUES ?band { ?finalBand }
}
```",6,10,7,2,3,2,3,28,0,0,1,0,0.0,0
303,25,test,"Give me the entity in the country, that is a country, of El Valle de Antón and party of Arnulfo Arias and party of the commander, that is a politician, in United States invasion of Panama.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v4 . ?v3 <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/United_States_invasion_of_Panama> <http://dbpedia.org/ontology/commander> ?v3 . <http://dbpedia.org/resource/Arnulfo_Arias> <http://dbpedia.org/ontology/party> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/El_Valle_de_Antón> <http://dbpedia.org/ontology/country> ?v4 . },"```sparql
# Step 1: Get the country for El Valle de Antón
SELECT ?country WHERE {
    <http://dbpedia.org/resource/El_Valle_de_Antón> <http://www.w3.org/2000/01/rdf-schema#seeAlso> ?location .
    ?location <http://dbpedia.org/ontology/country> ?country .
}

# Step 2: Find entities in that country
SELECT DISTINCT ?entity WHERE {
    ?entity <http://dbpedia.org/ontology/country> ?country .
    FILTER(?country = <URI_OF_COUNTRY_FROM_STEP_1>)
}

# Step 3: Get the party of Arnulfo Arias
SELECT ?party WHERE {
    <http://dbpedia.org/resource/Arnulfo_Arias> <http://dbpedia.org/ontology/party> ?party .
}

# Step 4: Find the commander in United States invasion of Panama who is a politician and get their party
SELECT DISTINCT ?commanderParty WHERE {
    <http://dbpedia.org/resource/United_States_invasion_of_Panama> <http://dbpedia.org/ontology/commander> ?commander .
    ?commander <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .
    ?commander <http://dbpedia.org/ontology/party> ?commanderParty .
}
```

Note: Replace `<URI_OF_COUNTRY_FROM_STEP_1>` with the actual URI obtained from Step 1.",5,7,6,2,3,2,3,28,0,0,1,0,0.0,0
404,49,test,"Give me the spouse of the person born, that is a royalty, as Princess Victoria Louise of Prussia and child of the father of the spouse of Princess Victoria Louise of Prussia.","SELECT ?result WHERE { <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?v0 . ?result <http://dbpedia.org/ontology/parent> ?v1 . ?v0 <http://dbpedia.org/property/father> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/birthName> ""Princess Victoria Louise of Prussia""@en . ?v2 <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
SELECT ?spouse WHERE {
  # Step 1: Identify Princess Victoria Louise of Prussia
  ?princess a dbo:Royalty ;
            foaf:name ""Princess Victoria Louise of Prussia""@en ;
            dbo:birthPlace ?birthPlace .

  # Step 2: Determine her spouse
  ?princess dbo:spouse ?spouse .

  # Step 3: Find out who is the father of that spouse
  ?spouse dbo:father ?father .

  # Step 4: Identify the children of that father
  ?child dbo:father ?father ;
         a dbo:Person .

  # Step 5: Finally, find the spouses of those children
  ?child dbo:spouse ?finalSpouse .
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
427,62,test,Give me the reference to the name of the party of Michele Pinto and party of the father of the alumnus of Massachusetts Institute of Technology and party of Romano Prodi.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?v6 . ?v4 <http://xmlns.com/foaf/0.1/name> ?v3 . ?v0 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Massachusetts_Institute_of_Technology> . <http://dbpedia.org/resource/Michele_Pinto> <http://dbpedia.org/ontology/party> ?v4 . <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/ontology/party> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . ?v6 <http://dbpedia.org/ontology/party> ?result . },"```sparql
SELECT ?michelePartyRef ?fatherPartyRef ?romanoPartyRef WHERE {
  # Michele Pinto's Party
  <http://dbpedia.org/resource/Michele_Pinto> <http://dbpedia.org/ontology/party> ?micheleParty.
  ?micheleParty rdfs:label ?michelePartyLabel.
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
  BIND(wd:Q123456 AS ?michelePartyRef) # Replace with actual QID for Michele Pinto's party

  # Father of an MIT Alumnus' Party
  ?alumnus <http://dbpedia.org/ontology/alumni> <http://dbpedia.org/resource/Massachusetts_Institute_of_Technology>.
  ?alumnus <http://dbpedia.org/property/father> ?father.
  ?father <http://dbpedia.org/ontology/party> ?fatherParty.
  ?fatherParty rdfs:label ?fatherPartyLabel.
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
  BIND(wd:Q654321 AS ?fatherPartyRef) # Replace with actual QID for the father's party

  # Romano Prodi's Party
  <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/ontology/party> ?romanoParty.
  ?romanoParty rdfs:label ?romanoPartyLabel.
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
  BIND(wd:Q789012 AS ?romanoPartyRef) # Replace with actual QID for Romano Prodi's party
}
```",7,7,8,3,3,3,3,71,0,0,2,0,0.0,0
547,48,test,Give me the resting place of the child of the child of William Haliburton and resting place of the awardee of Knight Grand Cross of the Order of St Michael and St George.,"SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> ""William Haliburton""@en . ?v3 <http://dbpedia.org/ontology/child> ?v2 . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_St_Michael_and_St_George> . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . }","```sparql
SELECT DISTINCT ?restingPlace WHERE {
  # Query for the child of William Haliburton's child
  {
    ?grandchild wdt:P25 wd:Q123456;  # Assuming Q123456 is the Wikidata ID for a child of William Haliburton
             wdt:P91 ?restingPlace.
  }
  
  UNION
  
  # Query for awardees of Knight Grand Cross of the Order of St Michael and St George
  {
    ?person wdt:P166 wd:Q789012;  # Assuming Q789012 is the Wikidata ID for Knight Grand Cross of the Order of St Michael and St George
             wdt:P91 ?restingPlace.
  }
}
```",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
16,38,test,Give me the professional in the profession of Satomi Ishihara and person born as the birth name of Gigi Rice.,SELECT ?result WHERE { <http://dbpedia.org/resource/Gigi_Rice> <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Satomi_Ishihara> <http://dbpedia.org/property/occupation> ?v3 . ?result <http://dbpedia.org/property/birthName> ?v2 . ?result <http://dbpedia.org/property/occupation> ?v3 . },"```sparql
# Get the profession of Satomi Ishihara
SELECT ?profession WHERE {
  <http://dbpedia.org/resource/Satomi_Ishihara> <http://purl.org/dc/terms/subject> ?profession .
}

# Get the birth name of Gigi Rice
SELECT ?birthName WHERE {
  <http://dbpedia.org/resource/Gigi_Rice> <http://dbpedia.org/ontology/birthName> ?birthName .
}

# Find a person who matches both criteria
SELECT DISTINCT ?person WHERE {
  # Person with the same profession as Satomi Ishihara
  ?person <http://purl.org/dc/terms/subject> ?profession .
  
  # Person born with the birth name of Gigi Rice
  ?person <http://dbpedia.org/ontology/birthName> ?birthName .

  # Joining conditions from above queries
  VALUES ?profession { ?profession1 }
  VALUES ?birthName { ?birthName1 }

  # Subqueries to get the specific values for profession and birth name
  {
    SELECT DISTINCT ?profession1 WHERE {
      <http://dbpedia.org/resource/Satomi_Ishihara> <http://purl.org/dc/terms/subject> ?profession1 .
    }
  }

  {
    SELECT DISTINCT ?birthName1 WHERE {
      <http://dbpedia.org/resource/Gigi_Rice> <http://dbpedia.org/ontology/birthName> ?birthName1 .
    }
  }
}
```",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
404,31,test,"Give me the parent of Prince Ernest Augustus of Hanover (born 1914) and spouse of the person born, that is a royalty, as the birth name of Princess Victoria Louise of Prussia.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Prince_Ernest_Augustus_of_Hanover_(born_1914)> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
SELECT ?person WHERE {
  # Find the parent of Prince Ernest Augustus of Hanover (born 1914)
  <http://dbpedia.org/resource/Prince_Ernest_Augustus_of_Hanover_(born_1914)> <http://dbpedia.org/ontology/birthParent> ?parent .
  
  # Find the spouse of Princess Victoria Louise of Prussia
  <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?spouse .

  # Ensure the person is royalty and matches both conditions
  FILTER (?parent = ?spouse)
  FILTER EXISTS { ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> }
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
492,49,test,"Give me the person decedent at the capital, that is a settlement, of the country of Khemis Miliana District and person decedent at the work of US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite.","SELECT ?result WHERE { <http://dbpedia.org/resource/Khemis_Miliana_District> <http://dbpedia.org/ontology/country> ?v0 . ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . ?v2 <http://dbpedia.org/property/author> ""US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . ?v0 <http://dbpedia.org/ontology/capital> ?v1 . }","```sparql
# Step 1: Find the capital of Khemis Miliana District
SELECT ?capital WHERE {
    ?district <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Algeria>.
    ?district <http://dbpedia.org/property/name> ""Khemis Miliana District"" .
    ?district <http://dbpedia.org/ontology/administrativeUnit> ?capital.
}

# Step 2: Find the person decedent at this capital
SELECT ?person WHERE {
    ?person <http://dbpedia.org/ontology/deathPlace> ?capital.
}

# Step 3: Find the work location of Joseph C. Satterthwaite
SELECT ?workLocation WHERE {
    <http://dbpedia.org/resource/Joseph_C._Satterthwaite> <http://dbpedia.org/property/work> ?workLocation.
}

# Step 4: Find the person decedent at this work location
SELECT ?person2 WHERE {
    ?person2 <http://dbpedia.org/ontology/deathPlace> ?workLocation.
}

# Final step: Find the common person from both locations
SELECT DISTINCT ?commonPerson WHERE {
    ?commonPerson <http://dbpedia.org/ontology/deathPlace> ?capital.
    ?commonPerson <http://dbpedia.org/ontology/deathPlace> ?workLocation.
}
```",5,6,6,3,2,3,3,71,0,0,16,0,0.0,0
10,20,test,"Give me the professional in  and associated musical artist of Matt Colton and band member of the person born, that is an artist, as Luke Francis Vibert.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ""Luke Francis Vibert""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/property/occupation> """"@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . <http://dbpedia.org/resource/Matt_Colton> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
SELECT ?profession ?associatedArtist ?bandMember WHERE {
  # Part 1: Get Matt Colton's profession
  <http://dbpedia.org/resource/Matt_Colton> <http://xmlns.com/foaf/0.1/profession> ?profession .

  # Part 2: Find associated musical artists of Matt Colton
  OPTIONAL { 
    ?associatedArtist <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Matt_Colton> .
  }

  # Part 3: Identify the person born as Luke Francis Vibert who is an artist and a band member
  ?bandMember <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist> ;
              <http://dbpedia.org/ontology/bandMember> ?band ;
              <http://dbpedia.org/property/birthName> ""Luke Francis Vibert"" .
}
```",4,5,5,2,3,2,3,28,0,0,1,0,0.0,0
328,66,test,"Give me the commander in the force of Ferenc Szálasi and awardee of the award of Bruce Fraser, 1st Baron Fraser of North Cape and leader of the office, that is a government agency, of the leader, that is an office holder and a politician, of Gustav Jonson.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/leader> ?result . <http://dbpedia.org/resource/Gustav_Jonson> <http://dbpedia.org/property/leader> ?v1 . ?v6 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?result <http://dbpedia.org/property/awards> ?v3 . ?v6 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Ferenc_Szálasi> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape> <http://dbpedia.org/property/awards> ?v3 . ?v1 <http://dbpedia.org/property/office> ?v2 . }","```sparql
# Step 1: Identify the force of Ferenc Szálasi
SELECT ?force WHERE {
    <http://dbpedia.org/resource/Ferenc_Szálasi> <http://dbpedia.org/ontology/commanded> ?force .
}

# Step 2: Find the commander in that force
SELECT ?commander WHERE {
    ?force <http://dbpedia.org/ontology/commander> ?commander .
}

# Step 3: Identify the award received by Bruce Fraser, 1st Baron Fraser of North Cape
SELECT ?award WHERE {
    <http://dbpedia.org/resource/Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape> <http://dbpedia.org/ontology/receivedAward> ?award .
}

# Step 4: Find the awardee of that award
SELECT DISTINCT ?awardee WHERE {
    ?awardee <http://dbpedia.org/ontology/receivedAward> ?award .
    FILTER(?awardee != <http://dbpedia.org/resource/Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape>)
}

# Step 5: Identify the office led by this awardee
SELECT DISTINCT ?office WHERE {
    ?awardee <http://dbpedia.org/ontology/leader> ?office .
    ?office <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency> .
}

# Step 6: Identify the leader of Gustav Jonson
SELECT DISTINCT ?leader WHERE {
    <http://dbpedia.org/resource/Gustav_Jonson> <http://dbpedia.org/ontology/leader> ?leader .
    ?leader <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> (<http://dbpedia.org/ontology/OfficeHolder> <http://dbpedia.org/ontology/Politician>) .
}

# Step 7: Find the government agency associated with this leader
SELECT DISTINCT ?agency WHERE {
    ?leader <http://dbpedia.org/ontology/office> ?agency .
    ?agency <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency> .
}

# Step 8: Combine all these elements
SELECT DISTINCT ?commander WHERE {
    # From Step 2
    ?force <http://dbpedia.org/ontology/commander> ?commander .

    # From Step 1
    <http://dbpedia.org/resource/Ferenc_Szálasi> <http://dbpedia.org/ontology/commanded> ?force .

    # From Steps 3-5
    ?awardee <http://dbpedia.org/ontology/receivedAward> ?award .
    FILTER(?awardee != <http://dbpedia.org/resource/Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape>)
    ?awardee <http://dbpedia.org/ontology/leader> ?office .
    ?office <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency> .

    # From Steps 6-7
    ?leader <http://dbpedia.org/ontology/leader> <http://dbpedia.org/resource/Gustav_Jonson> .
    ?leader <",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
427,34,test,Give me the party of Romano Prodi and reference to the name of the party of Michele Pinto.,SELECT ?result WHERE { <http://dbpedia.org/resource/Michele_Pinto> <http://dbpedia.org/ontology/party> ?v2 . <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/ontology/party> ?result . ?v2 <http://xmlns.com/foaf/0.1/name> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . },"```sparql
SELECT ?prodiParty ?pintoPartyName WHERE {
  <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/ontology/party> ?prodiParty .
  <http://dbpedia.org/resource/Michele_Pinto> <http://dbpedia.org/ontology/party> ?pintoParty .
  ?pintoParty rdfs:label ?pintoPartyName .
}
```",4,4,5,3,2,3,3,71,2,7,0,0.2222222222222222,1.0,0.3636363636363636
617,70,test,"Give me the spouse of the child of the successor, that is a royalty, of Antiochus (son of Antiochus III the Great) and parent of the child of the commander in Battle of Panium and child of the child, that is a royalty, of Seleucus II Callinicus.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/successor> ?v0 . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seleucus_II_Callinicus> . ?result <http://dbpedia.org/ontology/child> ?v3 . ?result <http://dbpedia.org/property/father> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/child> ?v3 . <http://dbpedia.org/resource/Battle_of_Panium> <http://dbpedia.org/ontology/commander> ?v1 . ?v7 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/ontology/child> ?v7 . },"```sparql
# Step 1: Identify Antiochus (son of Antiochus III the Great)
SELECT ?antiochus WHERE {
    ?antiochus <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Antiochus_III_the_Great>.
}

# Step 2: Find his successor
SELECT ?successor WHERE {
    ?antiochus <http://dbpedia.org/ontology/successor> ?successor.
}

# Step 3: Locate the child of the successor
SELECT ?childOfSuccessor WHERE {
    ?successor <http://dbpedia.org/ontology/child> ?childOfSuccessor.
}

# Step 4: Determine the spouse of that child
SELECT ?spouse WHERE {
    ?childOfSuccessor <http://dbpedia.org/property/spouse> ?spouse.
}

# Step 5: Identify the commander in Battle of Panium
SELECT ?commander WHERE {
    <http://dbpedia.org/resource/Battle_of_Panium> <http://dbpedia.org/ontology/commander> ?commander.
}

# Step 6: Find the child of this commander
SELECT ?childOfCommander WHERE {
    ?commander <http://dbpedia.org/ontology/child> ?childOfCommander.
}

# Step 7: Locate Seleucus II Callinicus and his royal child
SELECT ?royalChild WHERE {
    <http://dbpedia.org/resource/Seleucus_II_Callinicus> <http://dbpedia.org/ontology/child> ?royalChild.
    ?royalChild <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>.
}

# Step 8: Identify the child of that royal child
SELECT ?grandchild WHERE {
    ?royalChild <http://dbpedia.org/ontology/child> ?grandchild.
}

# Final step: Connect these relationships to find the spouse
SELECT DISTINCT ?spouse WHERE {
    # Assuming all previous steps are connected correctly in a real SPARQL query environment
    ?successor <http://dbpedia.org/ontology/child> ?childOfSuccessor.
    ?childOfSuccessor <http://dbpedia.org/property/spouse> ?spouse.
}
```",8,10,9,3,3,3,3,71,0,0,2,0,0.0,0
184,58,test,Give me the parent of the child of the parent of Archduchess Margaret of Austria (born 1925) and parent of Géza von Habsburg and child of the child of Archduke Joseph Karl of Austria.,SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Karl_of_Austria> . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Géza_von_Habsburg> . ?v2 <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/property/father> ?v5 . ?result <http://dbpedia.org/ontology/child> ?v2 . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Margaret_of_Austria_(born_1925)> . },"```sparql
# Step 1: Identify Archduchess Margaret of Austria (born 1925) and find her parent.
SELECT ?parentMargaret WHERE {
    ?margaret dbo:birthYear ""1925""^^xsd:gYear .
    ?margaret rdfs:label ""Archduchess Margaret of Austria""@en .
    ?margaret dbo:parent ?parentMargaret .
}

# Step 2: Find the child of that parent.
SELECT ?childOfParent WHERE {
    ?parentMargaret dbo:child ?childOfParent .
}

# Step 3: Identify Géza von Habsburg and find his parent.
SELECT ?parentGéza WHERE {
    ?géza rdfs:label ""Géza von Habsburg""@en .
    ?géza dbo:parent ?parentGéza .
}

# Step 4: Ensure the parent from step 3 is also a child of the child identified in step 2.
SELECT ?commonChild WHERE {
    ?childOfParent dbo:child ?commonChild .
    ?commonChild = ?parentGéza .
}

# Step 5: Identify Archduke Joseph Karl of Austria and find his child.
SELECT ?childJosephKarl WHERE {
    ?josephKarl rdfs:label ""Archduke Joseph Karl of Austria""@en .
    ?josephKarl dbo:child ?childJosephKarl .
}

# Step 6: Find the child of the child identified in step 5.
SELECT ?grandChild WHERE {
    ?childJosephKarl dbo:child ?grandChild .
}

# Step 7: The final answer is the parent of the individual identified in step 4.
SELECT ?finalParent WHERE {
    ?commonChild dbo:parent ?finalParent .
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
404,69,test,"Give me the spouse of the person born, that is a royalty, as the birth name of Princess Victoria Louise of Prussia and parent of the child, that is a royalty, of Ernest Augustus, Duke of Brunswick and child of the father of the spouse of Princess Victoria Louise of Prussia.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v7 . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?v1 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> ?v2 . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/property/birthName> ?v4 . ?v3 <http://dbpedia.org/property/birthName> ?v4 . ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/ontology/child> ?v7 . }","```sparql
SELECT ?spouse WHERE {
    ?princess a dbo:Royalty ;
              foaf:name ""Princess Victoria Louise of Prussia"" ;
              dbo:birthName ""Princess Victoria Louise of Prussia"" .
    
    ?princess dbo:spouse ?spouse .

    ?child a dbo:Royalty ;
           dbo:parent <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> .

    ?father dbo:child ?spouse .

    ?princess dbo:spouse ?spouse .
}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
184,24,test,Give me the parent of Archduchess Ilona of Austria and child of the child of Archduke Joseph Karl of Austria.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Ilona_of_Austria> . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Karl_of_Austria> . ?result <http://dbpedia.org/property/father> ?v2 . },"```sparql
SELECT ?person WHERE {
  # Step 1: Find the parent of Archduchess Ilona of Austria
  ?parent <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Archduchess_Ilona_of_Austria> .
  
  # Step 2: Find the children of Archduke Joseph Karl of Austria
  ?child <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/Archduke_Joseph_Karl_of_Austria> .

  # Step 3: Find the grandchildren of Archduke Joseph Karl (children of his children)
  ?grandchild <http://dbpedia.org/ontology/birthParent> ?child .
  
  # Final step: Match the parent from step 1 with a grandchild from step 3
  FILTER (?parent = ?grandchild)
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
820,17,test,Give me the child of the parent of the professional in Actor and professional in .,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v3 . ?v3 <http://dbpedia.org/ontology/child> ?v0 . ?result <http://dbpedia.org/property/occupation> """"@en . ?v0 <http://dbpedia.org/property/occupation> ""Actor""@en . }","```sparql
SELECT ?child WHERE {
    ?actor <http://dbpedia.org/ontology/profession> <http://dbpedia.org/resource/Actor> .
    ?parent <http://dbpedia.org/ontology/birthParent> ?actor .
    ?parent <http://dbpedia.org/ontology/birthChild> ?child .
}
```",4,4,5,3,2,3,2,20,0,0,128,0,0.0,0
767,71,test,"Give me the reference to the alter ego of the persona, that is a fictional character, of Matthew Burland and alma mater of the administration of the reference to George Kilbon Nash and entity in the administration, that is a settlement, of the writer of Where It's At (Dustin Lynch album).","SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/almaMater> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://xmlns.com/foaf/0.1/name> ?v8 . ?result <http://dbpedia.org/ontology/state> ?v2 . <http://dbpedia.org/resource/Where_It's_At_(Dustin_Lynch_album)> <http://dbpedia.org/property/writer> ?v1 . ?v5 <http://dbpedia.org/property/governor> ?v4 . ?v7 <http://dbpedia.org/property/alterEgo> ?v8 . ?v4 <http://xmlns.com/foaf/0.1/name> ""George Kilbon Nash""@en . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v2 <http://dbpedia.org/property/leaderParty> ?v1 . ?v7 <http://dbpedia.org/property/alterEgo> ""Matthew Burland""@en . }","```sparql
# Step 1: Find the writer of ""Where It's At"" (Dustin Lynch album)
SELECT ?writer WHERE {
    ?album dbpedia-owl:title ""Where It's At""@en .
    ?album dbo:composer ?writer .
}

# Step 2: Find the administration of the settlement where this writer is located
SELECT ?administration WHERE {
    ?writer dbo:residence ?settlement .
    ?settlement a dbo:Settlement .
    ?settlement dbo:administrativeUnit ?administration .
}

# Step 3: Locate George Kilbon Nash and his alma mater
SELECT ?almaMater WHERE {
    ?georgeKilbonNash foaf:name ""George Kilbon Nash""@en .
    ?georgeKilbonNash dbo:almaMater ?almaMater .
}

# Step 4: Determine Matthew Burland's persona and its alter ego
SELECT ?alterEgo WHERE {
    ?matthewBurland foaf:name ""Matthew Burland""@en .
    ?matthewBurland dbo:fictionalCharacter ?persona .
    ?persona dbo:alterEgo ?alterEgo .
}

# Step 5: Combine these elements to find the reference
SELECT ?reference WHERE {
    # Assuming we have variables from previous queries: ?writer, ?administration, ?almaMater, ?alterEgo
    ?alterEgo a dbo:FictionalCharacter .
    ?alterEgo dbpedia-owl:wikiPageRedirects ?reference .
    FILTER EXISTS { ?administration = ?adminFromWriter }
    FILTER EXISTS { ?almaMater = ?adminAlmaMater }
}
```",9,11,10,3,3,3,3,71,0,0,1,0,0.0,0
77,17,test,"Give me the force of the mayor of the territory administered, that is an organisation, from Warsaw and war of Alexander Chechenskiy.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Warsaw> . ?result <http://dbpedia.org/ontology/commander> ?v3 . ?v0 <http://dbpedia.org/property/leader> ?v3 . <http://dbpedia.org/resource/Alexander_Chechenskiy> <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Warsaw> <http://dbpedia.org/property/administeredBy> ?v1 . <http://dbpedia.org/resource/Alexander_Chechenskiy> <http://dbpedia.org/property/warOf> ?v2 . ?v1 <http://dbpedia.org/ontology/mayor> ?v3 . ?v3 <http://dbpedia.org/ontology/force> ?result . },4,5,5,3,2,3,2,20,0,0,6,0,0.0,0
54,58,test,"Give me the child of Thinkhaya of Pagan and parent of the child of Narapati I of Ava and predecessor of the child, that is an office holder and a royalty, of the reference to Thihapate of Mohnyin.","SELECT ?result WHERE { <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?result . ?v5 <http://dbpedia.org/ontology/parent> ?result . ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Narapati_I_of_Ava> . ?result <http://dbpedia.org/ontology/successor> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/property/father> ?v1 . ?v1 <http://xmlns.com/foaf/0.1/name> ""Thihapate of Mohnyin""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
# Step 1: Find the child of Thinkhaya of Pagan
SELECT ?childOfThinkhaya WHERE {
    <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?childOfThinkhaya .
}

# Step 2: Find the parent of the child of Narapati I of Ava
SELECT ?parentOfChildNarapati WHERE {
    ?childOfNarapati <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Narapati_I_of_Ava> .
    ?childOfNarapati <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person> .
    ?parentOfChildNarapati <http://dbpedia.org/ontology/child> ?childOfNarapati .
}

# Step 3: Find the predecessor of the child, which is an office holder and royalty, related to Thihapate of Mohnyin
SELECT ?predecessor WHERE {
    ?officeHolder <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder> .
    ?officeHolder <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
    ?officeHolder <http://dbpedia.org/property/reference> <http://dbpedia.org/resource/Thihapate_of_Mohnyin> .
    ?predecessor <http://dbpedia.org/ontology/predecessor> ?officeHolder .
}

# Step 4: Combine the results to find the final answer
SELECT DISTINCT ?finalAnswer WHERE {
    ?childOfThinkhaya <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person> .
    ?parentOfChildNarapati <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person> .
    ?predecessor <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person> .
    FILTER (?childOfThinkhaya = ?parentOfChildNarapati && ?childOfThinkhaya = ?predecessor)
    BIND(?childOfThinkhaya AS ?finalAnswer)
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
391,55,test,"Give me the native of the figure known as Hub City and actor of the movie, that is a movie and a work and a television show, with Roz Ryan and actor of the claim to fame, that is a work, of Michael Ballhaus.","SELECT ?result WHERE { <http://dbpedia.org/resource/Michael_Ballhaus> <http://dbpedia.org/ontology/knownFor> ?v5 . ?v5 <http://dbpedia.org/ontology/starring> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/property/starring> ?result . ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v3 <http://dbpedia.org/property/nickname> ""Hub City""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v2 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Roz_Ryan> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. }","```sparql
SELECT ?native WHERE {
  # Step 1: Identify the figure known as Hub City
  ?person rdfs:label ""Hub City""@en .
  
  # Step 2: Find the movie involving Roz Ryan and an actor linked to Michael Ballhaus's claim to fame
  ?movie <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Movie> ;
         <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work> ;
         <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow> .
  
  ?movie dbp:starring ?actor1, ?actor2 .
  FILTER(?actor1 = <http://dbpedia.org/resource/Roz_Ryan>)
  
  # Link the actor to Michael Ballhaus's claim to fame
  ?actor2 <http://dbpedia.org/ontology/knownFor> ?work .
  ?work <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work> .
  ?work dbp:director <http://dbpedia.org/resource/Michael_Ballhaus> .

  # Step 3: Determine the native of the figure known as Hub City
  ?person dbo:nativePlace ?native .
}
```",6,10,7,2,3,3,3,71,0,0,1,0,0.0,0
701,28,test,Give me the parent of Henuttawy (19th dynasty) and spouse of Ramesses II and parent of the child of Nefertari.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Henuttawy_(19th_dynasty)> . <http://dbpedia.org/resource/Nefertari> <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Ramesses_II> . },"```sparql
SELECT ?person WHERE {
  # Condition 1: Parent of Henuttawy (19th dynasty)
  <http://dbpedia.org/resource/Henuttawy_(19th_dynasty)> <http://dbpedia.org/ontology/birthParent> ?person .
  
  # Condition 2: Spouse of Ramesses II
  ?person <http://dbpedia.org/property/spouse> <http://dbpedia.org/resource/Ramesses_II> .
  
  # Condition 3: Parent of a child of Nefertari
  ?child <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/Nefertari> .
  ?person <http://dbpedia.org/ontology/birthParent> ?child .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
16,45,test,Give me the spouse of Ted McGinley and person born as the birth name of the alumnus of Ohio State University and professional in Actress.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Actress""@en . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Ohio_State_University> . ?v0 <http://dbpedia.org/property/birthName> ?v1 . }","```sparql
# Query to find the spouse of Ted McGinley
SELECT ?spouse WHERE {
  <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/ontology/spouse> ?spouse .
}

# Query to find a person who is an alumnus of Ohio State University and a professional actress, born with a specific birth name
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/birthName> ?birthName .
  ?person <http://dbpedia.org/ontology/alumniOf> <http://dbpedia.org/resource/Ohio_State_University> .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Actress> .
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
328,64,test,"Give me the leader of the office, that is a government agency, of the leader, that is an office holder and a politician, of Gustav Jonson and commander in Eastern Front (World War II) and awardee of the award of the commander in Volcano and Ryukyu Islands campaign.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Volcano_and_Ryukyu_Islands_campaign> <http://dbpedia.org/ontology/commander> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. <http://dbpedia.org/resource/Gustav_Jonson> <http://dbpedia.org/property/leader> ?v0 . <http://dbpedia.org/resource/Eastern_Front_(World_War_II)> <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/property/office> ?v1 . ?v1 <http://dbpedia.org/ontology/leader> ?result . ?v3 <http://dbpedia.org/property/awards> ?v2 . ?result <http://dbpedia.org/property/awards> ?v2 . },"```sparql
SELECT ?finalLeader WHERE {
  # Step 1: Find the leader who is an office holder and politician of Gustav Jonson
  <http://dbpedia.org/resource/Gustav_Jonson> <http://dbpedia.org/ontology/leader> ?officeHolder .
  
  # Ensure the leader is also a politician
  ?officeHolder <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .

  # Step 2: Find the commander in Eastern Front (World War II) related to this leader
  ?easternFrontCommander <http://dbpedia.org/ontology/commander> ?officeHolder .
  <http://dbpedia.org/resource/Eastern_Front_(World_War_II)> <http://www.w3.org/2000/01/rdf-schema#subject> ?easternFrontCommander .

  # Step 3: Determine the awardee of an award given by the commander in Volcano and Ryukyu Islands campaign
  ?volcanoRyukyuCommander <http://dbpedia.org/ontology/commander> ?awardGiver .
  <http://dbpedia.org/resource/Volcano_and_Ryukyu_Islands_campaign> <http://www.w3.org/2000/01/rdf-schema#subject> ?volcanoRyukyuCommander .

  ?awardee <http://dbpedia.org/ontology/awardee> ?awardGiver .
  
  # Step 4: Find the leader of the government agency office associated with these connections
  ?governmentAgencyOffice <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Government_Agency> .
  ?governmentAgencyOffice <http://dbpedia.org/ontology/leader> ?finalLeader .

  # Link the awardee to the government agency office
  ?awardee <http://dbpedia.org/property/residence> ?governmentAgencyOffice .
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
54,52,test,Give me the parent of the child of Narapati I of Ava and child of the father of the child of Thinkhaya of Pagan and predecessor of Ameitta Thiri Maha Dhamma Dewi of Ava.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> ?v2 . <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?v3 . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v5 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Ameitta_Thiri_Maha_Dhamma_Dewi_of_Ava> . ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Narapati_I_of_Ava> . },"```sparql
SELECT ?parent WHERE {
  # Narapati I of Ava's child
  ?narapatichild dbo:childOf <http://dbpedia.org/resource/Narapati_I_of_Ava> .
  
  # Thinkhaya of Pagan's child and his father (Thinkhaya himself)
  ?thinkhayachild dbo:childOf <http://dbpedia.org/resource/Thihathu> ;
                  dbo:father <http://dbpedia.org/resource/Thihathu> .

  # Ameitta Thiri Maha Dhamma Dewi of Ava's predecessor
  ?predecessor dbo:successor <http://dbpedia.org/resource/Ameitta_Thiri_Maha_Dhamma_Dewi_of_Ava> .

  # The parent we are looking for is the child of Thinkhaya and also a predecessor of Ameitta Thiri Maha Dhamma Dewi
  ?parent dbo:childOf <http://dbpedia.org/resource/Thihathu> ;
          dbo:predecessor <http://dbpedia.org/resource/Ameitta_Thiri_Maha_Dhamma_Dewi_of_Ava> .

  # The parent must also be the parent of Narapati I's child
  ?narapatichild dbo:parent ?parent .
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
9,54,test,"Give me the alma mater of the awardee of the reference, that is an award, to Royal Medals and alma mater of the mayor, that is a politician, of Northern Ireland Forum and figure known as QUB.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Royal Medals""@en . <http://dbpedia.org/resource/Northern_Ireland_Forum> <http://dbpedia.org/property/leader> ?v3 . ?v5 <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://dbpedia.org/property/nickname> ""QUB""@en . ?v3 <http://dbpedia.org/ontology/almaMater> ?result . ?v5 <http://dbpedia.org/property/awards> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. }","```sparql
SELECT ?almaMater WHERE {
  # Step 1: Find the award related to Royal Medals
  ?award <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award> .
  ?award rdfs:label ""Royal Medal""@en .

  # Step 2: Find the awardee of this award and their alma mater
  ?awardee <http://dbpedia.org/property/recipient> ?award .
  ?awardee <http://dbpedia.org/ontology/almaMater> ?almaMater1 .

  # Step 3: Identify the mayor who was a politician in the Northern Ireland Forum
  ?mayor <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .
  ?mayor <http://dbpedia.org/property/politicalAffiliation> ?forum .
  ?forum rdfs:label ""Northern Ireland Forum""@en .

  # Step 4: Determine the alma mater of this mayor
  ?mayor <http://dbpedia.org/ontology/almaMater> ?almaMater2 .

  # Step 5: Identify the figure known as QUB (Queen's University Belfast)
  ?figure rdfs:label ""QUB""@en .
  ?figure <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organization> .

  # Step 6: Ensure the alma mater is the same
  FILTER (?almaMater1 = ?almaMater2)
  ?figure <http://dbpedia.org/ontology/almaMater> ?almaMater3 .
  
  FILTER (?almaMater1 = ?almaMater3)

  # Return the common alma mater
  BIND(?almaMater1 AS ?almaMater)
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
492,68,test,"Give me the commander in the war, that is a military conflict and an event, of the commander in Battle of Verdun and person decedent at the capital, that is a settlement, of Algeria and person decedent at the work of the author of French Algeria.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> ?v4 . <http://dbpedia.org/resource/Battle_of_Verdun> <http://dbpedia.org/ontology/commander> ?v0 . <http://dbpedia.org/resource/Algeria> <http://dbpedia.org/ontology/capital> ?v3 . ?v7 <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://dbpedia.org/property/author> ?v5 . ?result <http://dbpedia.org/ontology/deathPlace> ?v3 . <http://dbpedia.org/resource/French_Algeria> <http://dbpedia.org/property/author> ?v5 . ?v0 <http://dbpedia.org/ontology/battle> ?v7 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
# Step 1: Find commander of Battle of Verdun
SELECT ?verdunCommander WHERE {
    <http://dbpedia.org/resource/Battle_of_Verdun> <http://dbpedia.org/ontology/commander> ?verdunCommander .
}

# Step 2 & 3: Find wars that are both military conflicts and events involving the commander from Verdun
SELECT DISTINCT ?war WHERE {
    ?verdunCommander <http://dbpedia.org/ontology/battle> ?battle .
    ?battle <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
    ?battle <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event> .
    BIND(?battle AS ?war)
}

# Step 4: Find the capital of Algeria
SELECT DISTINCT ?capital WHERE {
    <http://dbpedia.org/resource/Algeria> <http://dbpedia.org/ontology/administrativeCapital> ?capital .
    ?capital <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement> .
}

# Step 5: Find persons deceased at the capital of Algeria
SELECT DISTINCT ?decedent WHERE {
    ?decedent <http://dbpedia.org/property/deathPlace> ?capital .
}

# Step 6: Find author of ""French Algeria""
SELECT DISTINCT ?author WHERE {
    ?work <http://purl.org/dc/terms/title> ""French Algeria"" .
    ?work <http://dbpedia.org/ontology/author> ?author .
}

# Step 7: Find persons deceased at the work location of the author
SELECT DISTINCT ?decedent WHERE {
    ?author <http://dbpedia.org/ontology/author> ?work .
    ?decedent <http://dbpedia.org/property/deathPlace> ?workLocation .
    ?work <http://purl.org/dc/terms/subject> ?workLocation .
}

# Step 8: Find common decedents
SELECT DISTINCT ?commonDecedent WHERE {
    { ?commonDecedent <http://dbpedia.org/property/deathPlace> ?capital . }
    UNION
    { ?commonDecedent <http://dbpedia.org/property/deathPlace> ?workLocation . }
}

# Step 9: Find commanders in the wars involving these common decedents
SELECT DISTINCT ?commander WHERE {
    ?war <http://dbpedia.org/ontology/commander> ?commander .
    ?commonDecedent <http://dbpedia.org/property/deathPlace> ?place .
    FILTER(?place IN (?capital, ?workLocation))
}
```",8,11,9,3,3,3,3,71,0,0,1,0,0.0,0
488,55,test,"Give me the death place of the father, that is a politician, of Yūki Hideyasu and birth place of the commander in Boshin War and administration of the father of Emperor Go-Mizunoo.",SELECT ?result WHERE { <http://dbpedia.org/resource/Boshin_War> <http://dbpedia.org/ontology/commander> ?v3 . <http://dbpedia.org/resource/Yūki_Hideyasu> <http://dbpedia.org/property/father> ?v5 . <http://dbpedia.org/resource/Emperor_Go-Mizunoo> <http://dbpedia.org/property/father> ?v2 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v5 <http://dbpedia.org/ontology/deathPlace> ?result . ?result <http://dbpedia.org/property/leader> ?v2 . },"```sparql
SELECT ?place WHERE {
  # Step 1: Find Yūki Hideyasu's father who is a politician
  ?yukiHideyasu dbo:father ?father .
  ?father rdf:type dbo:Politician .

  # Step 2: Get the death place of this father
  ?father dbo:deathPlace ?place .

  # Step 3: Find the commander in the Boshin War and their birthplace
  ?boshinWar dbo:commander ?commander .
  ?commander dbo:birthPlace ?place .

  # Step 4: Determine Emperor Go-Mizunoo's father and his administration location
  ?goMizunoo dbo:father ?emperorFather .
  ?emperorFather dbo:administration ?place .
}
```",6,7,7,2,3,3,3,71,0,0,1,0,0.0,0
378,70,test,"Give me the war of the commander in the reference, that is a military conflict, to Peninsular War and claim to fame of the commander in the war, that is a military conflict and a societal event and an event, of Thomas Trigge and war of the person born as Carl Pontus Gahn.","SELECT ?result WHERE { ?v7 <http://dbpedia.org/ontology/battle> ?result . ?v4 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Peninsular War""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/ontology/knownFor> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Thomas_Trigge> <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://dbpedia.org/ontology/commander> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/ontology/commander> ?v7 . ?v4 <http://dbpedia.org/property/birthName> ""Carl Pontus Gahn""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. }","```sparql
SELECT ?war WHERE {
  # Step 1: Find a reference military conflict related to Peninsular War
  ?reference <http://dbpedia.org/ontology/reference> <http://dbpedia.org/resource/Peninsular_War> .
  
  # Step 2: Identify the commander of this referenced war
  ?reference <http://dbpedia.org/ontology/commander> ?commander .

  # Step 3: Find the claim to fame of this commander that is a military conflict and societal event
  ?commander <http://dbpedia.org/property/knownFor> ?claimToFame .
  ?claimToFame <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
  ?claimToFame <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent> .

  # Step 4: Identify the war related to Thomas Trigge's claim to fame
  <http://dbpedia.org/resource/Thomas_Trigge> <http://dbpedia.org/property/knownFor> ?claimToFame .
  
  # Step 5: Find the person born as Carl Pontus Gahn
  ?person <http://www.w3.org/2000/01/rdf-schema#label> ""Carl Pontus Gahn""@en .
  ?person <http://dbpedia.org/ontology/birthName> ""Carl Pontus Gahn"" .

  # Step 6: Determine the war of this person
  ?person <http://dbpedia.org/property/war> ?war .
}
```",8,12,9,3,3,3,3,71,0,0,2,0,0.0,0
617,67,test,"Give me the parent of the child of the commander in Battle of Panium and spouse of the child of the successor, that is a royalty, of Antiochus (son of Antiochus III the Great) and child of Antiochus III the Great.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Antiochus_III_the_Great> . ?v6 <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://dbpedia.org/ontology/child> ?v3 . ?v0 <http://dbpedia.org/ontology/child> ?v6 . ?result <http://dbpedia.org/ontology/child> ?v3 . <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/successor> ?v0 . <http://dbpedia.org/resource/Battle_of_Panium> <http://dbpedia.org/ontology/commander> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
SELECT ?parent WHERE {
    # Step 1: Identify the commander in the Battle of Panium
    <http://dbpedia.org/resource/Battle_of_Panium> <http://dbpedia.org/ontology/commander> ?commander .

    # Step 2: Find the child of this commander
    ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Child> .
    ?child <http://dbpedia.org/property/father> ?commander .

    # Step 3: Determine the successor of Antiochus (son of Antiochus III the Great)
    <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/successor> ?successor .

    # Step 4: Find the child of this successor
    ?childOfSuccessor <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Child> .
    ?childOfSuccessor <http://dbpedia.org/property/father> ?successor .

    # Step 5: Find the spouse of this child, ensuring they are royalty and a child of Antiochus III the Great
    ?spouse <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
    ?spouse <http://dbpedia.org/property/spouse> ?childOfSuccessor .
    ?spouse <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Antiochus_III_the_Great> .

    # Step 6: Find the parent of this spouse
    ?parent <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Parent> .
    ?parent <http://dbpedia.org/property/child> ?spouse .
}
```",7,8,8,3,3,3,3,71,0,0,2,0,0.0,0
747,60,test,"Give me the band of the person born as the persona of Shèna and person born on the birth date of the person decedent, that is an athlete and a soccer player, at Zolotonosha.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?v3 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Zolotonosha> . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Shèna> <http://xmlns.com/foaf/0.1/givenName> ?v0 . ?result <http://dbpedia.org/ontology/birthDate> ?v2 . ?v3 <http://dbpedia.org/ontology/birthDate> ?v2 . },"```sparql
# Step 1: Find the athlete and soccer player born in Zolotonosha
SELECT ?athlete WHERE {
    ?athlete <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Zolotonosha>;
              <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>,
                      <http://dbpedia.org/ontology/SoccerPlayer>.
}

# Step 2: Find the decedent's birth date of the athlete
SELECT ?decedentBirthDate WHERE {
    ?athlete <http://dbpedia.org/property/decedent> ?decedent.
    ?decedent <http://dbpedia.org/ontology/birthDate> ?decedentBirthDate.
}

# Step 3: Find a person born on the decedent's birth date
SELECT ?person WHERE {
    ?person <http://dbpedia.org/ontology/birthDate> ?decedentBirthDate.
}

# Step 4: Identify the persona ""Shèna""
SELECT ?personaPerson WHERE {
    ?persona <http://www.w3.org/2000/01/rdf-schema#label> ""Shèna""@en;
             <http://dbpedia.org/ontology/persona> ?personaPerson.
}

# Step 5: Find the band of the person identified in step 3
SELECT ?band WHERE {
    ?person <http://dbpedia.org/property/band> ?band.
}
```

Note: This query assumes that all necessary properties and relationships are available in DBpedia. Adjustments may be needed based on actual data availability.",6,8,7,3,2,3,3,71,0,0,1,0,0.0,0
492,66,test,"Give me the person decedent at the capital, that is a settlement, of the country of Khemis Miliana District and person decedent at the work of US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite and commander in the war, that is a military conflict and an event, of Frédéric-Georges Herr.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> ?v3 . <http://dbpedia.org/resource/Khemis_Miliana_District> <http://dbpedia.org/ontology/country> ?v1 . ?v3 <http://dbpedia.org/property/author> ""US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite""@en . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . <http://dbpedia.org/resource/Frédéric-Georges_Herr> <http://dbpedia.org/ontology/battle> ?v6 . ?v1 <http://dbpedia.org/ontology/capital> ?v2 . ?v6 <http://dbpedia.org/ontology/commander> ?result . }","```sparql
# Step 1: Identify the capital of Khemis Miliana District that is a settlement
SELECT ?capital WHERE {
    ?district <http://dbpedia.org/ontology/capital> ?capital.
    ?district <http://www.w3.org/2000/01/rdf-schema#label> ""Khemis Miliana District""@en.
    ?capital <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>.
}

# Step 2: Find the person who was decedent at this capital
SELECT ?person WHERE {
    ?person <http://dbpedia.org/property/decedentAt> ?capital.
}

# Step 3: Identify the work associated with Joseph C. Satterthwaite and find the person who was decedent there
SELECT ?work WHERE {
    ?satterthwaite <http://dbpedia.org/ontology/work> ?work.
    ?satterthwaite <http://www.w3.org/2000/01/rdf-schema#label> ""Joseph C. Satterthwaite""@en.
}

SELECT ?person WHERE {
    ?person <http://dbpedia.org/property/decedentAt> ?work.
}

# Step 4: Determine the war that Frédéric-Georges Herr commanded in
SELECT ?war WHERE {
    ?herr <http://dbpedia.org/ontology/commander> ?battle.
    ?battle <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>.
    ?battle <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>.
    ?herr <http://www.w3.org/2000/01/rdf-schema#label> ""Frédéric-Georges Herr""@en.
}

# Step 5: Find the person who was decedent at this war
SELECT ?person WHERE {
    ?person <http://dbpedia.org/property/decedentAt> ?war.
}

# Final step: Identify any common individual fitting all criteria
SELECT DISTINCT ?commonPerson WHERE {
    VALUES ?capital { ?capital1 } # Replace with actual capital URI from Step 1
    VALUES ?work { ?work1 }       # Replace with actual work URI from Step 3
    VALUES ?war { ?war1 }         # Replace with actual war URI from Step 4

    ?commonPerson <http://dbpedia.org/property/decedentAt> ?capital.
    ?commonPerson <http://dbpedia.org/property/decedentAt> ?work.
    ?commonPerson <http://dbpedia.org/property/decedentAt> ?war.
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
778,19,test,"Give me the author of the work, that is a software, of the author of Pushd and popd and entity in the award of Ralph L. Brinster.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/author> ?v0 . <http://dbpedia.org/resource/Pushd_and_popd> <http://dbpedia.org/property/author> ?v0 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Software>. ?result <http://dbpedia.org/ontology/location> ?v2 . ?v4 <http://dbpedia.org/ontology/author> ?result . <http://dbpedia.org/resource/Ralph_L._Brinster> <http://dbpedia.org/property/awards> ?v2 . },"```sparql
SELECT DISTINCT ?author WHERE {
  ?work <http://dbpedia.org/ontology/creator> ?author1 .
  FILTER(CONTAINS(LCASE(STR(?work)), ""pushd"") || CONTAINS(LCASE(STR(?work)), ""popd""))
  
  ?software <http://dbpedia.org/ontology/creator> ?author2 .
  ?software <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Software> .
  FILTER(?author1 = ?author2)
  
  ?award <http://dbpedia.org/property/recipient> <http://dbpedia.org/resource/Ralph_L._Brinster> .
  ?award <http://dbpedia.org/ontology/entity> ?entity .
  
  ?entity <http://dbpedia.org/property/relatedTo> ?author2 .
  FILTER(?author1 = ?author2)
}
```",5,6,6,3,2,3,2,20,0,0,1,0,0.0,0
360,22,test,"Give me the writer of the work, that is an album, of Dave Flett and native of the death place, that is a settlement, of Winnie Madikizela-Mandela.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v2 <http://dbpedia.org/property/author> ""Dave Flett""@en . ?v2 <http://dbpedia.org/property/writer> ?result . <http://dbpedia.org/resource/Winnie_Madikizela-Mandela> <http://dbpedia.org/ontology/deathPlace> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Album>. }","```sparql
SELECT ?writer WHERE {
    # Step 1: Find the death place of Winnie Madikizela-Mandela that is a settlement
    ?deathPlace <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Winnie_Madikizela-Mandela> .
    ?deathPlace <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement> .

    # Step 2: Find the native place associated with this death place
    ?nativePlace <http://dbpedia.org/property/nativePlace> ?deathPlace .
    
    # Step 3: Identify the album created by Dave Flett and its writer
    ?album <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/Dave_Flett> ;
           <http://purl.org/dc/terms/creator> ?writer .

    # Step 4: Link the writer of the album to the native place found in step 2
    ?nativePlace <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?type .
    FILTER(?type = <http://dbpedia.org/ontology/Settlement>)
}
```",4,6,5,2,2,2,3,28,0,0,1,0,0.0,0
666,18,test,"Give me the player in the manager, that is a sports manager, of the team, that is a soccer club and a sports team season, of Leonid Slutsky (football coach) and figure known as the nickname of England national beach soccer team.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?result <http://dbpedia.org/property/nickname> ?v3 . ?v1 <http://dbpedia.org/ontology/manager> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v1 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Leonid_Slutsky_(football_coach)> . <http://dbpedia.org/resource/England_national_beach_soccer_team> <http://dbpedia.org/property/nickname> ?v3 . ?v2 <http://dbpedia.org/ontology/team> ?result . },"```sparql
SELECT ?player WHERE {
  # Step 1: Find Leonid Slutsky's team
  ?team <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Lenid_Slutskiy> .
  
  # Step 2: Ensure the team is a soccer club and has sports seasons
  ?team <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub> .
  ?team <http://dbpedia.org/ontology/sportsTeamSeason> ?season .

  # Step 3: Find the nickname of England national beach soccer team
  ?nickname <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Figure> .
  ?nickname <http://dbpedia.org/property/nickname> ""England national beach soccer team"" .

  # Step 4: Find a player in the manager's team that connects to this nickname
  ?player <http://dbpedia.org/ontology/team> ?team .
  
  # Assuming there is some connection or property linking the player and the nickname
  OPTIONAL { ?player <http://dbpedia.org/property/nickname> ?nickname . }
}
```",5,8,6,3,2,3,2,20,0,0,2,0,0.0,0
701,20,test,Give me the parent of the child of Ramesses II and parent of Meritamen.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ramesses_II> . ?result <http://dbpedia.org/ontology/child> ?v2 . <http://dbpedia.org/resource/Meritamen> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
SELECT ?parent WHERE {
  ?child <http://dbpedia.org/ontology/birthPlace> ?place .
  ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Human> .
  ?child <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ramesses_II> .
  ?child <http://dbpedia.org/ontology/spouse> ?spouse .
  ?spouse <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Meritamen> .
  ?parent <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Human> .
  ?parent <http://dbpedia.org/property/father> ?child .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
659,68,test,"Give me the military force of the force, that is a societal event and an event and a military conflict, of Rutger Jan Schimmelpenninck and commander in the force of the native, that is an office holder, of Kingdom of Ireland and commander in the war, that is an event and a military conflict, of the figure known, that is a military unit and an organisation, as 'Polish Horse'.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v5 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Kingdom_of_Ireland> . ?v4 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/ontology/battle> ?v7 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> . ?v0 <http://dbpedia.org/property/nickname> ""'Polish Horse'""@en . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v4 <http://dbpedia.org/ontology/commander> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v7 <http://dbpedia.org/ontology/commander> ?result . }","```sparql
SELECT ?militaryForce WHERE {
    ?event rdf:type dbo:MilitaryConflict .
    ?event rdf:type dbo:Event .
    ?event rdf:type dbo:SocietalEvent .
    <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> dbo:knownFor ?event .

    ?force1 dbo:militaryForce ?militaryForce .
    ?event dbo:commander ?force1 .

    ?officeHolder dbo:nativeOf <http://dbpedia.org/resource/Kingdom_of_Ireland> ;
                  a dbo:OfficeHolder .
    ?event dbo:commander ?officeHolder .

    ?polishHorse rdf:type dbo:MilitaryUnit ;
                 dbo:knownAs ""Polish Horse"" .
    ?figure dbo:knownFor ?polishHorse .
    ?war rdf:type dbo:MilitaryConflict ;
         rdf:type dbo:Event .
    ?figure dbo:commander ?war .

    FILTER(?event = ?war)
}
```",8,16,9,3,3,3,3,71,0,0,15,0,0.0,0
9,45,test,"Give me the alma mater of John Alderdice, Baron Alderdice and alma mater of Allen Hill (scientist) and figure known as the nickname of the entity, that is an organisation and an educational institution, in Northern Ireland.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Allen_Hill_(scientist)> <http://dbpedia.org/ontology/almaMater> ?result . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Northern_Ireland> . <http://dbpedia.org/resource/John_Alderdice,_Baron_Alderdice> <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://dbpedia.org/property/nickname> ?v1 . ?v0 <http://dbpedia.org/property/nickname> ?v1 . }","```sparql
# Find the common alma mater for John Alderdice, Baron Alderdice and Allen Hill (scientist)
SELECT ?almaMater WHERE {
    <http://dbpedia.org/resource/John_Alderdice,_Baron_Alderdice> <http://dbpedia.org/ontology/almaMater> ?almaMater1 .
    <http://dbpedia.org/resource/Allen_Hill_(scientist)> <http://dbpedia.org/ontology/almaMater> ?almaMater2 .
    
    FILTER (?almaMater1 = ?almaMater2)
    BIND(?almaMater1 AS ?almaMater)
}

# Find the organization in Northern Ireland that is an educational institution and has a nickname
SELECT DISTINCT ?organization WHERE {
    ?organization <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation> .
    ?organization <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution> .
    ?organization <http://dbpedia.org/property/location> <http://dbpedia.org/resource/Northern_Ireland> .
    ?organization <http://dbpedia.org/ontology/nickname> ?nickname .

    # Ensure the organization matches the alma mater found above
    FILTER EXISTS {
        ?almaMater <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution> .
        ?almaMater <http://www.w3.org/1999/02/22-rdf-syntax-ns#sameAs> ?organization .
    }
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
281,25,test,"Give me the entity in Colony of New Zealand and war of the profession, that is a military unit, of Heather Roy.",SELECT ?result WHERE { <http://dbpedia.org/resource/Heather_Roy> <http://dbpedia.org/property/occupation> ?v1 . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Colony_of_New_Zealand> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v1 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
SELECT ?result WHERE {
  ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Colony_of_New_Zealand>.
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>.
  <http://dbpedia.org/resource/Heather_Roy> <http://dbpedia.org/property/profession> ?v1.
  ?v1 <http://dbpedia.org/ontology/unit> ?result.
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
182,24,test,Give me the entity in the nationality of Tamara Kunanayakam and war of the work of Gotabhaya Rajapaksa.,SELECT ?result WHERE { <http://dbpedia.org/resource/Tamara_Kunanayakam> <http://dbpedia.org/ontology/nationality> ?v0 . ?result <http://dbpedia.org/ontology/place> ?v0 . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Gotabhaya_Rajapaksa> . },"```sparql
# Step 1: Find the nationality of Tamara Kunanayakam
SELECT ?nationality WHERE {
    <http://dbpedia.org/resource/Tamara_Kunanayakam> <http://dbpedia.org/ontology/nationality> ?nationality .
}

# Step 2: Retrieve entities in that nationality
SELECT DISTINCT ?entity WHERE {
    ?entity <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person> .
    ?entity <http://dbpedia.org/ontology/nationality> ?nationality .
}

# Step 3: Find the work related to Gotabhaya Rajapaksa
SELECT ?work WHERE {
    <http://dbpedia.org/resource/Gotabhaya_Rajapaksa> <http://dbpedia.org/property/work> ?work .
}

# Step 4: Retrieve wars associated with that work
SELECT DISTINCT ?war WHERE {
    ?work <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
    ?work <http://dbpedia.org/property/work> ?relatedWork .
}
```",4,4,5,2,2,2,3,28,0,0,5,0,0.0,0
994,19,test,Give me the associated musical artist of the associated musical artist of Watchtower (band) and associated musical artist of Red Tide (band).,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Red_Tide_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Watchtower_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . },"```sparql
# Step 1: Get associated musical artists of Watchtower
SELECT ?watchtowerArtist WHERE {
    <http://dbpedia.org/resource/Watchtower_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?watchtowerArtist .
}

# Step 2: Get associated musical artists of Red Tide
SELECT ?redTideArtist WHERE {
    <http://dbpedia.org/resource/Red_Tide_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?redTideArtist .
}

# Step 3 & 4: Find common associated musical artists from the above results
SELECT DISTINCT ?commonArtist WHERE {
    # For Watchtower's associated artist
    ?watchtowerArtist <http://dbpedia.org/ontology/associatedMusicalArtist> ?commonArtist .

    # For Red Tide's associated artist
    ?redTideArtist <http://dbpedia.org/ontology/associatedMusicalArtist> ?commonArtist .
}
```",3,3,4,2,2,3,3,71,0,0,3,0,0.0,0
747,41,test,Give me the person born on the birth date of Pavlo Khudzik and band of Shèna and band of the writer of Apollo (Hardwell song).,SELECT ?result WHERE { <http://dbpedia.org/resource/Pavlo_Khudzik> <http://dbpedia.org/ontology/birthDate> ?v2 . <http://dbpedia.org/resource/Shèna> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/birthDate> ?v2 . <http://dbpedia.org/resource/Apollo_(Hardwell_song)> <http://dbpedia.org/property/writer> ?v4 . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
# Step 1: Retrieve the birth date of Pavlo Khudzik
SELECT ?birthDate WHERE {
    <http://dbpedia.org/resource/Pavlo_Khudzik> <http://www.w3.org/2002/07/owl#sameAs> ?person .
    ?person <http://dbpedia.org/ontology/birthDate> ?birthDate .
}

# Step 2: Find people born on the same date
SELECT DISTINCT ?person WHERE {
    ?person <http://dbpedia.org/ontology/birthDate> ?birthDate .
    FILTER (?birthDate = ""REPLACE_WITH_BIRTH_DATE"")
}

# Step 3: Identify the band associated with Shèna
SELECT ?band WHERE {
    <http://dbpedia.org/resource/Shèna> <http://dbpedia.org/property/currentBand> ?band .
}

# Step 4: Determine the writer of the song ""Apollo"" by Hardwell
SELECT ?writer WHERE {
    <http://dbpedia.org/resource/Apollo_(Hardwell_song)> <http://dbpedia.org/ontology/writtenBy> ?writer .
}

# Step 5: Identify the band associated with this writer
SELECT ?band WHERE {
    ?writer <http://dbpedia.org/property/currentBand> ?band .
}
```

Note: Replace ""REPLACE_WITH_BIRTH_DATE"" with the actual birth date retrieved from step 1.",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
915,16,test,"Give me the resident of the birthplace, that is a settlement, of Stephen Verona and father of the child, that is a fictional character and a soap character, of Phillip Spaulding.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v3 <http://dbpedia.org/property/father> ?result . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Phillip_Spaulding> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoapCharacter>. ?result <http://dbpedia.org/ontology/residence> ?v2 . <http://dbpedia.org/resource/Stephen_Verona> <http://dbpedia.org/ontology/birthPlace> ?v2 . },"```sparql
SELECT ?resident WHERE {
  ?birthPlace <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>.
  <http://dbpedia.org/resource/Stephen_Verona> <http://dbpedia.org/property/birthPlace> ?birthPlace.
  ?resident <http://www.w3.org/2006/vcard/ns#hasAddress> ?address.
  ?address <http://www.w3.org/2006/vcard/ns#adr> ?location.
  ?location <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?birthPlace.

  ?child <http://dbpedia.org/ontology/father> ?father.
  ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>.
  ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoapCharacter>.
  <http://dbpedia.org/resource/Phillip_Spaulding> <http://dbpedia.org/ontology/parent> ?child.

  FILTER(?resident = ?father)
}
```",4,7,5,2,2,3,2,20,0,0,1,0,0.0,0
184,49,test,Give me the parent of the child of the parent of Archduchess Margaret of Austria (born 1925) and parent of the native of Budapest.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/ontology/child> ?v1 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Margaret_of_Austria_(born_1925)> . ?v2 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Budapest> . },"```sparql
SELECT ?parent WHERE {
  # Step 1: Identify Archduchess Margaret of Austria (born 1925)
  ?margaret a dbo:Archduchess ;
            foaf:name ""Margaret of Austria"" ;
            dbo:birthYear ""1925""^^xsd:gYear .

  # Step 2: Find her parent
  OPTIONAL { ?margaret dbo:father ?parent1 . }
  OPTIONAL { ?margaret dbo:mother ?parent1 . }

  # Step 3: Determine the child of this parent (another entity related to them as a parent)
  ?child dbo:father ?parent1 .
  UNION
  ?child dbo:mother ?parent1 .

  # Step 4: Identify the native of Budapest
  ?budaNative dbo:nativePlace dbr:Budapest ;
              dbo:birthPlace dbr:Budapest .

  # Step 5: Find the common parent between the child and the native of Budapest
  OPTIONAL { ?budaNative dbo:father ?parent . }
  OPTIONAL { ?budaNative dbo:mother ?parent . }

  FILTER(?child = ?budaNative)
}
```",5,5,6,3,2,3,3,71,0,0,2,0,0.0,0
994,41,test,"Give me the associated musical artist of the associated musical artist of Watchtower (band) and band member of Don Dokken and associated musical artist of the band member, that is a band and a group and an organisation, of Meshuggah.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Meshuggah> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. <http://dbpedia.org/resource/Watchtower_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Don_Dokken> . },"```sparql
# Step 1: Find the associated musical artist of Watchtower (band)
SELECT ?artist WHERE {
    <http://dbpedia.org/resource/Watchtower_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?artist .
}

# Step 2: Identify band members of Don Dokken
SELECT ?member WHERE {
    ?artist <http://dbpedia.org/property/memberOf> <http://dbpedia.org/resource/Don_Dokken> .
    FILTER(?artist IN (?artistFromStep1))
}

# Step 3: Find the associated musical artist of the band member identified in step 2
SELECT ?associatedArtist WHERE {
    ?member <http://dbpedia.org/ontology/associatedMusicalArtist> ?associatedArtist .
    FILTER(?member IN (?memberFromStep2))
}

# Step 4: Identify band members of Meshuggah
SELECT ?meshuggahMember WHERE {
    ?person <http://dbpedia.org/property/memberOf> <http://dbpedia.org/resource/Meshuggah> .
}

# Step 5: Determine the associated musical artist of these Meshuggah members
SELECT ?associatedArtistMeshuggah WHERE {
    ?meshuggahMember <http://dbpedia.org/ontology/associatedMusicalArtist> ?associatedArtistMeshuggah .
    FILTER(?meshuggahMember IN (?meshuggahMemberFromStep4))
}

# Step 6: Filter results by band, group, and organization type
SELECT DISTINCT ?finalResult WHERE {
    {
        VALUES ?type { <http://dbpedia.org/ontology/Band> <http://dbpedia.org/ontology/MusicalGroup> <http://dbpedia.org/ontology/Organisation> }
        ?associatedArtistMeshuggah <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?type .
    } UNION {
        VALUES ?type { <http://dbpedia.org/ontology/Band> <http://dbpedia.org/ontology/MusicalGroup> <http://dbpedia.org/ontology/Organisation> }
        ?associatedArtist <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?type .
    }
}
```",5,8,6,2,3,3,3,71,0,0,1,0,0.0,0
161,56,test,"Give me the military force of the force, that is a societal event and an event and a military conflict, of Francisco Franco and commander in the force, that is an event, of the figure known as El Director and military force of Spanish Civil War.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/ontology/commander> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://xmlns.com/foaf/0.1/nick> ""El Director""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Franco> . }","```sparql
# Step 1: Find forces related to Francisco Franco that are societal events, events, and military conflicts.
SELECT ?force1 WHERE {
    ?force1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>.
    ?force1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocialEvent>.
    ?force1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>.
    <http://dbpedia.org/resource/Francisco_Franco> <http://dbpedia.org/property/militaryForce> ?force1.
}

# Step 2: Identify a commander of another event-related force.
SELECT ?force2 WHERE {
    ?force2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>.
    ?commander <http://dbpedia.org/property/commander> ?force2.
}

# Step 3: Locate the figure known as ""El Director"" and his connection to the Spanish Civil War.
SELECT ?elDirector WHERE {
    ?elDirector <http://www.w3.org/2000/01/rdf-schema#label> ""El Director""@en.
    ?elDirector <http://dbpedia.org/property/militaryForce> <http://dbpedia.org/resource/Spanish_Civil_War>.
}

# Step 4: Determine the common military force associated with all these elements.
SELECT ?militaryForce WHERE {
    ?force1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>.
    ?force2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>.
    ?elDirector <http://dbpedia.org/property/militaryForce> ?militaryForce.
    FILTER(?force1 = ?force2)
}
```",6,10,7,3,3,3,3,71,0,0,32,0,0.0,0
318,8,test,Give me the professional in the profession of Robert Xavier Rodriguez and person born in 1970.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthYear> ""1970""^^<http://www.w3.org/2001/XMLSchema#gYear> . ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Robert_Xavier_Rodriguez> <http://dbpedia.org/property/occupation> ?v1 . }","```sparql
SELECT ?person WHERE {
    # Get the profession of Robert Xavier Rodriguez
    <http://dbpedia.org/resource/Robert_Xavier_Rodriguez> dbo:profession ?profession .
    
    # Find other persons with the same profession and born in 1970
    ?person a dbo:Person ;
            dbo:birthYear ""1970""^^xsd:gYear ;
            dbo:profession ?profession .
}
```",3,3,4,2,2,2,2,9,0,0,7,0,0.0,0
659,43,test,"Give me the military force of Napoleonic Wars and commander in German campaign of 1813 and commander in the war, that is an event and a military conflict, of the figure known, that is a military unit and an organisation, as 'Polish Horse'.","SELECT ?result WHERE { <http://dbpedia.org/resource/German_campaign_of_1813> <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Napoleonic_Wars> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/property/nickname> ""'Polish Horse'""@en . ?v4 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/ontology/battle> ?v4 . }","```sparql
SELECT ?militaryForce WHERE {
    ?war <http://dbpedia.org/ontology/partOf> <http://dbpedia.org/resource/Napoleonic_Wars>.
    ?commander <http://dbpedia.org/ontology/commandedMilitaryForce> ?militaryForce.
    ?commander <http://dbpedia.org/ontology/battleCommanded> <http://dbpedia.org/resource/German_campaign_of_1813>.
    
    ?war2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>.
    ?war2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>.
    ?commander <http://dbpedia.org/ontology/battleCommanded> ?war2.
    
    ?figure <http://dbpedia.org/property/knownFor> ?unit.
    ?unit <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>.
    ?unit <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>.
    ?figure rdfs:label ""Polish Horse""@en.
    
    ?commander foaf:name ?figureName.
}
```",5,9,6,3,3,3,3,71,0,0,6,0,0.0,0
963,19,test,"Give me the administration of the ruling party, that is a political party, in the location for 21205 and entity in the region, that is a country, of Central European Time.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v2 . ?result <http://dbpedia.org/property/leaderParty> ?v4 . ?v0 <http://dbpedia.org/property/leaderParty> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . ?v0 <http://dbpedia.org/ontology/postalCode> ""21205"" . }","```sparql
# Step 1: Find the location associated with postal code 21205
SELECT ?location WHERE {
    ?location <http://dbpedia.org/ontology/postalCode> ""21205"" .
}

# Step 2: Identify the country in Central European Time zone
SELECT DISTINCT ?country WHERE {
    ?country <http://www.w3.org/2006/timezone#timezone> <http://dbpedia.org/resource/Central_European_Time> .
}

# Step 3: Find the ruling political party's administration in that location
SELECT ?administration WHERE {
    ?location <http://dbpedia.org/ontology/country> ?country .
    ?party <http://dbpedia.org/ontology/rulingParty> ?location .
    ?party <http://dbpedia.org/ontology/administration> ?administration .
}
```",5,7,6,3,2,3,2,20,0,0,84,0,0.0,0
391,53,test,"Give me the native of the figure known as the nick name of Jackson, Tennessee and actor of the movie, that is a movie and a work and a television show, with Roz Ryan and actor of The Departed.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . <http://dbpedia.org/resource/Jackson,_Tennessee> <http://xmlns.com/foaf/0.1/nick> ?v3 . ?v1 <http://dbpedia.org/property/starring> ?result . ?v2 <http://dbpedia.org/property/nickname> ?v3 . ?v1 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Roz_Ryan> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. <http://dbpedia.org/resource/The_Departed> <http://dbpedia.org/ontology/starring> ?result . }","```sparql
# Step 1: Get the nickname of Jackson, Tennessee
SELECT ?nickname WHERE {
    <http://dbpedia.org/resource/Jackson,_Tennessee> <http://www.w3.org/2000/01/rdf-schema#label> ?nickname .
}

# Step 2: Find a movie that is also a work and television show with Roz Ryan
SELECT DISTINCT ?movie WHERE {
    ?movie <http://purl.org/dc/terms/subject> <http://dbpedia.org/resource/Roz_Ryan> .
    ?movie <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film> .
    ?movie <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work> .
    ?movie <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow> .
}

# Step 3: Find an actor in both this movie and ""The Departed""
SELECT DISTINCT ?actor WHERE {
    # Replace ?movie with the actual URI of the movie found in Step 2
    ?actor <http://dbpedia.org/property/starring> ?movie .
    ?actor <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/The_Departed> .
}

# Step 4: Find the native place of this actor
SELECT DISTINCT ?native WHERE {
    # Replace ?actor with the actual URI of the actor found in Step 3
    ?actor <http://dbpedia.org/ontology/birthPlace> ?native .
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
232,70,test,"Give me the native of the residence, that is a settlement and British, of the native, that is a politician and an office holder, of France and actor of the claim to fame, that is a film and a military conflict, of the professional in Actor, narrator and producer and child of the person born as John Devon Roland Pertwee.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/ontology/knownFor> ?v7 . ?v4 <http://dbpedia.org/property/birthName> ""John Devon Roland Pertwee""@en . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/France> . ?v0 <http://dbpedia.org/property/occupation> ""Actor, narrator and producer""@en . ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v1 <http://dbpedia.org/property/residence> ?v3 . ?v7 <http://dbpedia.org/ontology/starring> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. }","```sparql
# Step 1: Identify John Devon Roland Pertwee
SELECT ?pertweeChild WHERE {
    ?person foaf:name ""John Devon Roland Pertwee"" .
    ?person dbo:child ?pertweeChild .
}

# Step 2: Find the child who is a professional actor, narrator, and producer
SELECT ?actor WHERE {
    VALUES ?roles { <http://dbpedia.org/ontology/Actor> <http://dbpedia.org/ontology/Narrator> <http://dbpedia.org/ontology/Producer> }
    ?actor dbo:profession ?role .
    FILTER(?role IN ?roles)
    ?actor dbo:parent ?pertweeChild .
}

# Step 3: Determine the claim to fame involving a film and military conflict
SELECT ?claimToFame WHERE {
    ?actor dbo:knownFor ?claimToFame .
    ?claimToFame rdf:type <http://dbpedia.org/ontology/Film> .
    ?claimToFame rdf:type <http://dbpedia.org/ontology/MilitaryConflict> .
}

# Step 4: Identify the actor associated with this claim to fame
SELECT ?actor2 WHERE {
    ?claimToFame dbo:actor ?actor2 .
}

# Step 5: Find the native politician and office holder from France related to this actor
SELECT ?politician WHERE {
    ?actor2 dbo:nationality <http://dbpedia.org/resource/France> .
    ?actor2 dbo:knownFor ?politician .
    ?politician rdf:type <http://dbpedia.org/ontology/Politician> .
    ?politician dbo:officeHolder true .
}

# Step 6: Determine the residence of this French politician, ensuring it is a settlement in Britain
SELECT ?residence WHERE {
    ?politician dbo:residence ?residence .
    ?residence rdf:type <http://dbpedia.org/ontology/Settlement> .
    ?residence dbo:country <http://dbpedia.org/resource/United_Kingdom> .
}

# Step 7: Identify the native of this British settlement
SELECT ?native WHERE {
    ?residence dbo:native ?native .
}
```",8,14,9,3,3,3,3,71,0,0,1,0,0.0,0
16,69,test,Give me the spouse of the person born as the birth name of Ted McGinley and person born as the birth name of the alumnus of Ohio State University and professional in the profession of Satomi Ishihara.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/property/birthName> ?v4 . <http://dbpedia.org/resource/Satomi_Ishihara> <http://dbpedia.org/property/occupation> ?v7 . ?v1 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Ohio_State_University> . ?v1 <http://dbpedia.org/property/birthName> ?v2 . ?result <http://dbpedia.org/property/birthName> ?v2 . ?v3 <http://dbpedia.org/property/birthName> ?v4 . ?result <http://dbpedia.org/property/occupation> ?v7 . },"```sparql
# Find Ted McGinley's birth name and his spouse
SELECT ?tedSpouse WHERE {
  ?ted dbpedia-owl:birthName ?tedBirthName .
  FILTER(?tedBirthName = ""Ted McGinley"") .
  ?ted dbpedia-owl:spouse ?tedSpouse .
}

UNION

# Find the alumnus of Ohio State University who is a professional in the same field as Satomi Ishihara
SELECT ?alumnusSpouse WHERE {
  ?satomi dbpedia-owl:profession ?profession .
  FILTER(?satomi = dbpedia:Satomi_Ishihara) .

  ?alumnus dbpedia-owl:almaMater <http://dbpedia.org/resource/Ohio_State_University> ;
           dbpedia-owl:profession ?profession .

  ?alumnus dbpedia-owl:spouse ?alumnusSpouse .
}
```",8,8,9,3,3,3,3,71,0,0,1,0,0.0,0
701,45,test,"Give me the spouse of the father of the commander, that is a royalty, in Battle of Perire and parent of Meritamen and parent of Henuttawy (19th dynasty).",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Battle_of_Perire> <http://dbpedia.org/ontology/commander> ?v0 . <http://dbpedia.org/resource/Meritamen> <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Henuttawy_(19th_dynasty)> . ?result <http://dbpedia.org/ontology/spouse> ?v1 . },"```sparql
SELECT ?spouse WHERE {
  ?battle <http://dbpedia.org/ontology/commander> ?commander .
  ?commander <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
  FILTER(STR(?battle) = ""Battle of Perire"") .

  ?parent <http://dbpedia.org/property/child> ?meritamen .
  ?parent <http://dbpedia.org/property/child> ?henuttawy19th .
  FILTER(STR(?meritamen) = ""Meritamen"" && STR(?henuttawy19th) = ""Henuttawy (19th dynasty)"") .

  ?commander <http://www.w3.org/2000/01/rdf-schema#parent> ?father .
  
  ?father <http://dbpedia.org/property/spouse> ?spouse .
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
232,68,test,"Give me the actor of the claim to fame, that is a film and a military conflict, of the professional in Actor, narrator and producer and native of the residence, that is a settlement and British, of Sylvie Bermann and child of the person born as the birth name of Jon Pertwee.","SELECT ?result WHERE { <http://dbpedia.org/resource/Sylvie_Bermann> <http://dbpedia.org/property/residence> ?v3 . ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v0 <http://dbpedia.org/ontology/knownFor> ?v7 . ?v0 <http://dbpedia.org/property/occupation> ""Actor, narrator and producer""@en . ?v4 <http://dbpedia.org/ontology/child> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/property/birthName> ?v5 . ?v4 <http://dbpedia.org/property/birthName> ?v5 . ?v7 <http://dbpedia.org/ontology/starring> ?result . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. }","```sparql
# Step 1: Find Jon Pertwee's birth name
SELECT ?birthName WHERE {
    <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/ontology/birthName> ?birthName .
}

# Step 2: Find the person born with that name
SELECT ?person WHERE {
    ?person <http://dbpedia.org/ontology/birthName> ?birthName .
}

# Step 3: Determine Sylvie Bermann's British residence
SELECT ?residence WHERE {
    <http://dbpedia.org/resource/Sylvie_Bermann> <http://dbpedia.org/property/residence> ?residence .
    ?residence <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement> .
    ?residence <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> .
}

# Step 4: Identify her child
SELECT ?child WHERE {
    <http://dbpedia.org/resource/Sylvie_Bermann> <http://dbpedia.org/ontology/child> ?child .
}

# Step 5: Check if the child is an actor, narrator, and producer
SELECT ?person WHERE {
    ?person <http://dbpedia.org/ontology/profession> <http://dbpedia.org/resource/Actor> ;
            <http://dbpedia.org/ontology/profession> <http://dbpedia.org/resource/Narrator> ;
            <http://dbpedia.org/ontology/profession> <http://dbpedia.org/resource/Producer> .
    FILTER(?person = ?child)
}

# Step 6: Determine their native place
SELECT ?nativePlace WHERE {
    ?person <http://dbpedia.org/ontology/nativePlace> ?nativePlace .
    ?nativePlace <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement> .
}

# Step 7: Find the claim to fame that is both a film and a military conflict for Sean Pertwee
SELECT ?claimToFame WHERE {
    <http://dbpedia.org/resource/Sean_Pertwee> <http://dbpedia.org/ontology/knownFor> ?claimToFame .
    ?claimToFame <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> ;
                 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film> .
}

# Step 8: Identify the actor of that work
SELECT ?actor WHERE {
    ?claimToFame <http://dbpedia.org/ontology/starring> ?actor .
}
```",8,12,9,3,3,3,3,71,0,0,1,0,0.0,0
378,51,test,"Give me the claim to fame of the commander in the war, that is a military conflict and a societal event and an event, of Thomas Trigge and war of the commander in Peninsular War.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Peninsular_War> <http://dbpedia.org/ontology/commander> ?v4 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/knownFor> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Thomas_Trigge> <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://dbpedia.org/ontology/commander> ?v2 . },"```sparql
# Step 1: Identify wars that are both military conflicts and societal events
SELECT ?war WHERE {
    ?war a <http://dbpedia.org/ontology/MilitaryConflict> .
    ?war a <http://dbpedia.org/ontology/SocietalEvent> .
    ?war a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event> .
}

# Step 2: Find the commander of Thomas Trigge in one of these wars
SELECT ?commander WHERE {
    ?trigge a <http://dbpedia.org/resource/Thomas_Trigge> .
    ?war a <http://dbpedia.org/ontology/MilitaryConflict> ;
         a <http://dbpedia.org/ontology/SocietalEvent> ;
         a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event> .
    ?trigge <http://dbpedia.org/property/commander> ?commander .
}

# Step 3: Determine the war involving the commander from the Peninsular War
SELECT ?peninsularWarCommander WHERE {
    ?peninsularWar a <http://dbpedia.org/resource/Peninsular_War> ;
                   <http://dbpedia.org/ontology/commander> ?commander .
}

# Step 4: Retrieve the claim to fame for these commanders
SELECT ?claimToFame WHERE {
    ?commander1 <http://dbpedia.org/ontology/knownFor> ?claimToFame .
    ?commander2 <http://dbpedia.org/ontology/knownFor> ?claimToFame .
}
```",5,8,6,3,2,3,3,71,0,0,2,0,0.0,0
528,42,test,Give me the war of Orozimbo Barbosa and force of the person born as Narciso Campero Leyes and war of the military force of Battle of Pisagua.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Orozimbo_Barbosa> <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Pisagua> . ?result <http://dbpedia.org/ontology/commander> ?v1 . ?v1 <http://dbpedia.org/property/birthName> ""Narciso Campero Leyes""@en . }","```sparql
# Query 1: Find the war associated with Orozimbo Barbosa
SELECT ?war WHERE {
    <http://dbpedia.org/resource/Orozimbo_Barbosa> <http://dbpedia.org/ontology/battle> ?war .
}

UNION

# Query 2: Determine the military force of Narciso Campero Leyes and find any wars they were involved in
SELECT ?force WHERE {
    <http://dbpedia.org/resource/Narciso_Campero_Leyes> <http://dbpedia.org/ontology/militaryForce> ?force .
}
UNION
SELECT ?war WHERE {
    ?person <http://dbpedia.org/ontology/militaryForce> ?force .
    ?force <http://dbpedia.org/ontology/battle> ?war .
    FILTER(?person = <http://dbpedia.org/resource/Narciso_Campero_Leyes>)
}

UNION

# Query 3: Identify the military force involved in the Battle of Pisagua and find any wars they participated in
SELECT ?force WHERE {
    <http://dbpedia.org/resource/Battle_of_Pisagua> <http://dbpedia.org/ontology/militaryForce> ?force .
}
UNION
SELECT ?war WHERE {
    ?battle <http://dbpedia.org/ontology/militaryForce> ?force .
    ?force <http://dbpedia.org/ontology/battle> ?war .
    FILTER(?battle = <http://dbpedia.org/resource/Battle_of_Pisagua>)
}
```",5,5,6,2,3,3,3,71,0,0,2,0,0.0,0
747,68,test,"Give me the person born on the birth date of the person decedent, that is an athlete and a soccer player, at Zolotonosha and band of the person born as Tracey Elizabeth McSween and band of the writer of the work, that is a song, of Amba Shepherd.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Amba_Shepherd> . ?v0 <http://dbpedia.org/property/writer> ?v7 . ?v7 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v5 <http://dbpedia.org/ontology/birthDate> ?v4 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v5 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Zolotonosha> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?result <http://dbpedia.org/ontology/birthDate> ?v4 . ?v3 <http://dbpedia.org/property/birthName> ""Tracey Elizabeth McSween""@en . }","```sparql
# Step 1: Find the decedent born in Zolotonosha
SELECT ?decedent ?birthDate WHERE {
    ?decedent <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Zolotonosha>;
              <http://dbpedia.org/ontology/death> ?death;
              <http://www.w3.org/2002/07/owl#sameAs> <http://dbpedia.org/resource/Category:Deceased_persons>.
    ?decedent <http://dbpedia.org/ontology/birthDate> ?birthDate.
}

# Step 2: Find an athlete and soccer player born on that date
SELECT ?athlete WHERE {
    ?athlete <http://dbpedia.org/ontology/sport> <http://dbpedia.org/resource/Soccer>;
              <http://dbpedia.org/ontology/birthDate> ?birthDate;
              <http://www.w3.org/2002/07/owl#sameAs> <http://dbpedia.org/resource/Category:Athletes>.
}

# Step 3: Find Tracey Elizabeth McSween's band
SELECT ?band1 WHERE {
    <http://dbpedia.org/resource/Tracey_Elizabeth_McSween> <http://dbpedia.org/ontology/memberOfBand> ?band1.
}

# Step 4: Identify the writer of Amba Shepherd's song
SELECT ?writer WHERE {
    ?song <http://purl.org/dc/terms/creator> ?writer;
          <http://www.w3.org/2002/07/owl#sameAs> <http://dbpedia.org/resource/Amba_Shepherd>.
}

# Step 5: Find the band associated with this writer
SELECT ?band2 WHERE {
    ?writer <http://dbpedia.org/ontology/memberOfBand> ?band2.
}

# Final query combining all conditions
SELECT DISTINCT ?athlete WHERE {
    # Decedent born in Zolotonosha
    ?decedent <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Zolotonosha>;
              <http://dbpedia.org/ontology/death> ?death;
              <http://www.w3.org/2002/07/owl#sameAs> <http://dbpedia.org/resource/Category:Deceased_persons>.
    ?decedent <http://dbpedia.org/ontology/birthDate> ?birthDate.

    # Athlete and soccer player born on that date
    ?athlete <http://dbpedia.org/ontology/sport> <http://dbpedia.org/resource/Soccer>;
              <http://dbpedia.org/ontology/birthDate> ?birthDate;
              <http://www.w3.org/2002/07/owl#sameAs> <http://dbpedia.org/resource/Category:Athletes>.

    # Tracey Elizabeth McSween's band
    ?band1 <http://dbpedia.org/ontology/memberOfBand> ?athlete.

    # Writer of Amba Shepherd's song and their band
    ?song <http://purl.org/dc/terms/creator> ?writer;
          <http://www.w3.org/2002/07/owl#sameAs> <http://dbpedia.org/resource/Amba_Shepherd>.
    ?writer <http://dbpedia.org/ontology/memberOfBand> ?band2.
    FILTER(?band1 = ?band2)
}",8,11,9,3,3,3,3,71,0,0,1,0,0.0,0
427,47,test,Give me the party of the father of the alumnus of Massachusetts Institute of Technology and reference to the name of Italian People's Party (1994).,SELECT ?result WHERE { <http://dbpedia.org/resource/Italian_People's_Party_(1994)> <http://xmlns.com/foaf/0.1/name> ?v2 . ?v0 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Massachusetts_Institute_of_Technology> . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v4 <http://dbpedia.org/ontology/party> ?result . ?v0 <http://dbpedia.org/property/father> ?v4 . },"```sparql
SELECT DISTINCT ?alumnus ?father ?party ?ippName WHERE {
  # Step 1: Find alumni of MIT
  ?alumnus dbo:almaMater dbr:Massachusetts_Institute_of_Technology .
  
  # Step 2: Find the father of each alumnus
  ?alumnus dbp:father ?father .

  # Step 3: Get the political party of each father
  OPTIONAL { ?father dbo:party ?party . }

  # Step 4: Retrieve information about the Italian People's Party from 1994
  dbr:Italian_People%27s_Party_(1994) rdfs:label ?ippName .
}
```",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
994,66,test,"Give me the band member of the person born, that is a musical artist, as the persona of Don Dokken and associated musical artist of the associated musical artist of Watchtower (band) and associated musical artist of the band member, that is a band and a group and an organisation, of Meshuggah.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Don_Dokken> <http://xmlns.com/foaf/0.1/givenName> ?v5 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. <http://dbpedia.org/resource/Watchtower_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v0 <http://dbpedia.org/property/birthName> ?v5 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v6 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Meshuggah> . ?v6 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT ?bandMember WHERE {
  # Step 1: Identify Don Dokken's persona and related person born as musical artist
  ?personBorn a dbo:MusicalArtist ;
              dbo:associatedWith <http://dbpedia.org/resource/Don_Dokken> .

  # Step 2: Find associated musical artists of Watchtower
  ?watchtowerAssociated a dbo:MusicalArtist ;
                        dbo:associatedWith <http://dbpedia.org/resource/Watchtower_(band)> .

  # Step 3: Identify band members of Meshuggah who are part of another group or organization
  ?meshuggahMember a dbo:BandMember, dbo:Group, dbo:Organization ;
                   dbo:memberOf <http://dbpedia.org/resource/Meshuggah> .

  # Step 4: Find associated musical artists of the band member from Meshuggah
  ?associatedArtist a dbo:MusicalArtist ;
                    dbo:associatedWith ?meshuggahMember .

  # Final connection to find the band member
  ?bandMember a dbo:BandMember ;
              dbo:associatedWith ?personBorn, ?watchtowerAssociated, ?associatedArtist .
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
356,16,test,"Give me the team of the native, that is a soccer player and a soccer manager, of Wolverhampton and player in the successor of 2014 Sacramento Republic FC season.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/manager> ?v3 . ?v3 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Wolverhampton> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/2014_Sacramento_Republic_FC_season> <http://dbpedia.org/ontology/successor> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v2 <http://dbpedia.org/ontology/team> ?result . },"```sparql
# Step 1: Identify the successor of the 2014 Sacramento Republic FC season
SELECT ?successor WHERE {
    ?sacramento dcterms:isPartOf ?league .
    ?sacramento dbp:succeededBy ?successor .
    FILTER(year(?sacramento) = 2014)
}

# Step 2: Find players from the successor team
SELECT DISTINCT ?player WHERE {
    ?successor dbp:teamMember ?player .
    ?player dbo:occupation dbc:Soccer_players .
}

# Step 3: Filter these players by those who are also managers and natives of Wolverhampton
SELECT DISTINCT ?player WHERE {
    ?player dbo:nationality dbr:Wolverhampton_Wanderers_F.C. ;
            dbo:occupation dbc:Soccer_managers, dbc:Soccer_players .
    
    # Ensure the player is part of the successor team
    ?successor dbp:teamMember ?player .
}

# Step 4: Retrieve the current team associated with this individual
SELECT DISTINCT ?currentTeam WHERE {
    ?player dbo:currentTeam ?currentTeam .
}
```",4,6,5,2,2,3,2,20,0,0,1,0,0.0,0
92,66,test,"Give me the associated musical artist of the person born, that is an artist, as Jim Sheppard and band of the person born as the birth name of Joseph Michael and band member of the reference, that is an artist, to Nevermore.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?result <http://dbpedia.org/ontology/bandMember> ?v2 . ?v6 <http://dbpedia.org/property/birthName> ""Jim Sheppard""@en . ?v6 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Joseph_Michael> <http://dbpedia.org/property/birthName> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v3 <http://xmlns.com/foaf/0.1/name> ""Nevermore""@en . ?v2 <http://dbpedia.org/property/birthName> ?v1 . }","```sparql
# Part 1: Jim Sheppard
SELECT ?artist WHERE {
    ?person <http://dbpedia.org/ontology/birthName> ""Jim Sheppard"" .
    ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist> .
    ?person <http://dbpedia.org/property/associatedMusicalArtist> ?artist .
}

UNION

# Part 2: Joseph Michael (likely Warrel Dane)
SELECT ?artist WHERE {
    ?person <http://dbpedia.org/ontology/birthName> ""Joseph Michael"" .
    ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BandMember> .
    ?band <http://dbpedia.org/property/member> ?person .
    ?band <http://dbpedia.org/ontology/reference> ""Nevermore"" .
    ?person <http://dbpedia.org/property/associatedMusicalArtist> ?artist .
}

# Find common associated musical artist
SELECT DISTINCT ?commonArtist WHERE {
    { SELECT ?artist WHERE {
        ?person1 <http://dbpedia.org/ontology/birthName> ""Jim Sheppard"" .
        ?person1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist> .
        ?person1 <http://dbpedia.org/property/associatedMusicalArtist> ?artist .
    }}
    
    UNION
    
    { SELECT ?artist WHERE {
        ?person2 <http://dbpedia.org/ontology/birthName> ""Joseph Michael"" .
        ?person2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BandMember> .
        ?band <http://dbpedia.org/property/member> ?person2 .
        ?band <http://dbpedia.org/ontology/reference> ""Nevermore"" .
        ?person2 <http://dbpedia.org/property/associatedMusicalArtist> ?artist .
    }}
    
    BIND(?artist AS ?commonArtist)
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
701,29,test,Give me the parent of Meritamen and spouse of Ramesses II and parent of the child of Ramesses II.,SELECT ?result WHERE { <http://dbpedia.org/resource/Meritamen> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Ramesses_II> . ?result <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ramesses_II> . },"```sparql
SELECT ?person WHERE {
  # Condition 1: Parent of Meritamen
  ?parent dbo:child <http://dbpedia.org/resource/Meritamen> .

  # Condition 2: Spouse of Ramesses II
  ?parent dbo:spouse <http://dbpedia.org/resource/Ramesses_II> .

  # Condition 3: Parent of a child of Ramesses II
  ?child dbo:parent <http://dbpedia.org/resource/Ramesses_II> .
  ?parent dbo:child ?child .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
617,53,test,"Give me the parent of the child of Antiochus (son of Antiochus III the Great) and child of the child, that is a royalty, of the successor, that is a royalty, of Antiochus II Theos and spouse of Laodice IV.",SELECT ?result WHERE { <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/child> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> ?v1 . ?v2 <http://dbpedia.org/property/father> ?v3 . ?result <http://dbpedia.org/property/father> ?v2 . <http://dbpedia.org/resource/Antiochus_II_Theos> <http://dbpedia.org/ontology/successor> ?v3 . <http://dbpedia.org/resource/Laodice_IV> <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
SELECT ?grandchildParent WHERE {
  # Step 1: Find Antiochus (son of Antiochus III the Great)
  ?antiochus dbo:father <http://dbpedia.org/resource/Antiochus_III_the_Great> .
  
  # Step 2: Find his child
  ?child dbo:parent ?antiochus .
  
  # Step 3: Find the grandchild of Antiochus and ensure it's a royalty
  ?grandchild dbo:parent ?child .
  ?grandchild rdf:type <http://dbpedia.org/ontology/Royalty> .

  # Step 4: Identify successor of Antiochus II Theos who is a royalty
  ?successor dbo:succeededBy <http://dbpedia.org/resource/Antiochus_II_theos> .
  ?successor rdf:type <http://dbpedia.org/ontology/Royalty> .

  # Step 5: Find the spouse of Laodice IV, who is the successor
  ?spouse dbo:spouse <http://dbpedia.org/resource/Laodice_IV> .
  FILTER (?spouse = ?successor)

  # Step 6: Find the child of that successor and ensure it's a royalty
  ?childOfSuccessor dbo:parent ?successor .
  ?childOfSuccessor rdf:type <http://dbpedia.org/ontology/Royalty> .

  # Step 7: Ensure this child is the same as the grandchild found in step 3
  FILTER (?grandchild = ?childOfSuccessor)

  # Step 8: Identify the parent of the grandchild
  ?grandchildParent dbo:parent ?grandchild .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
161,33,test,"Give me the military force of Rif War and military force of the force, that is a societal event and a military conflict, of the predecessor of Indalecio Prieto.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Rif_War> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Indalecio_Prieto> . ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
SELECT ?rifWarForce ?eventMilitaryConflict ?forceOfEventMilitaryConflict WHERE {
  # Find the military force of Rif War
  <http://dbpedia.org/resource/Rif_War> <http://dbpedia.org/ontology/military_force> ?rifWarForce .

  # Find the predecessor of Indalecio Prieto
  OPTIONAL { 
    <http://dbpedia.org/resource/Indalecio_Prieto> <http://dbpedia.org/ontology/predecessor> ?predecessor .
    
    # Find an entity that is both a societal event and a military conflict associated with this predecessor
    ?eventMilitaryConflict <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent> ;
                          <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
    
    # Ensure the event/military conflict is associated with the predecessor
    ?predecessor <http://dbpedia.org/property/associatedWith> ?eventMilitaryConflict .

    # Find the military force of this societal event and military conflict
    ?eventMilitaryConflict <http://dbpedia.org/ontology/military_force> ?forceOfEventMilitaryConflict .
  }
}
```",4,6,5,3,2,3,3,71,0,0,34,0,0.0,0
801,26,test,"Give me the producer of the work, that is a musical work and a song and a work, of the professional, that is a musical artist, in Rapper.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/writer> ?v1 . ?v2 <http://dbpedia.org/ontology/producer> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v1 <http://dbpedia.org/property/occupation> ""Rapper""@en . }","```sparql
SELECT ?producer WHERE {
  ?rapper a dbo:Rapper ;
          dbo:profession dbr:Musical_artist .
  ?work dbo:genre dbr:Songs ;
        dbo:artist ?rapper ;
        rdf:type dbo:MusicalWork .
  ?work dbo:producer ?producer .
}
```",3,7,4,3,1,3,3,71,0,0,956,0,0.0,0
547,46,test,Give me the resting place of the child of the child of William Haliburton and resting place of the actor of Enemy at the Door.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Enemy_at_the_Door> <http://dbpedia.org/property/starring> ?v4 . ?v2 <http://dbpedia.org/ontology/child> ?v1 . ?v4 <http://dbpedia.org/ontology/restingPlace> ?result . ?v2 <http://dbpedia.org/property/father> ""William Haliburton""@en . ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . }","```sparql
SELECT DISTINCT ?restingPlace WHERE {
  # Part 1: Resting place of the child's child of William Haliburton
  {
    ?grandchild <http://dbpedia.org/ontology/birthParent> ?parent.
    ?parent <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/William_Haliburton>.
    ?grandchild <http://dbpedia.org/ontology/deathPlace> ?restingPlace.
  }
  
  UNION
  
  # Part 2: Resting place of the actor in ""Enemy at the Door""
  {
    ?actor <http://dbpedia.org/ontology/film> <http://dbpedia.org/resource/Enemy_at_the_Door>.
    ?actor <http://dbpedia.org/ontology/deathPlace> ?restingPlace.
  }
}
```",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
294,24,test,"Give me the resting place of the architect of P. D. Houston Jr. House and entity in the birth place, that is a settlement, of Marion James.",SELECT ?result WHERE { <http://dbpedia.org/resource/P._D._Houston_Jr._House> <http://dbpedia.org/ontology/architect> ?v2 . ?result <http://dbpedia.org/ontology/location> ?v0 . <http://dbpedia.org/resource/Marion_James> <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
# Query 1: Resting place of the architect of P.D. Houston Jr. House
SELECT ?restingPlace WHERE {
    ?house <http://dbpedia.org/ontology/architect> ?architect .
    ?architect <http://dbpedia.org/property/deathPlace> ?restingPlace .
    FILTER(STR(?house) = ""P._D._Houston_Jr._House"")
}

# Query 2: Entity in the birth place of Marion James
SELECT ?entity WHERE {
    ?marion <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
    ?birthPlace <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement> .
    ?entity <http://dbpedia.org/property/location> ?birthPlace .
    FILTER(STR(?marion) = ""Marion_James"")
}
```",4,5,5,2,2,2,3,28,0,0,1,0,0.0,0
492,51,test,"Give me the commander in the war, that is a military conflict and an event, of Frédéric-Georges Herr and person decedent at the capital, that is a settlement, of the country of Khemis Miliana District.",SELECT ?result WHERE { <http://dbpedia.org/resource/Frédéric-Georges_Herr> <http://dbpedia.org/ontology/battle> ?v4 . <http://dbpedia.org/resource/Khemis_Miliana_District> <http://dbpedia.org/ontology/country> ?v1 . ?v4 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/capital> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . },"```sparql
SELECT ?commander WHERE {
  # Step 1: Get the capital of Khemis Miliana District, ensuring it is a settlement
  ?capital <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>;
           <http://dbpedia.org/ontology/capital> ?khemisMilianaDistrict.
  
  # Step 2: Find the person who died in that capital
  ?person <http://dbpedia.org/property/deathPlace> ?capital;
          <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>.

  # Step 3: Determine the war associated with Frédéric-Georges Herr
  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>;
       <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>.
  ?war <http://dbpedia.org/property/personInvolved> <http://dbpedia.org/resource/Frédéric-Georges_Herr>.

  # Step 4: Find the commander involved in that specific war
  ?commander <http://dbpedia.org/ontology/commander> ?war.
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
92,67,test,"Give me the associated musical artist of the person born, that is an artist, as the actor of Return to Nuke 'Em High Volume 1 and band member of Nevermore and band of the person born as the birth name of Joseph Michael.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/birthName> ?v1 . ?v6 <http://dbpedia.org/property/birthName> ?v0 . <http://dbpedia.org/resource/Return_to_Nuke_'Em_High_Volume_1> <http://dbpedia.org/property/starring> ?v0 . ?v6 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/bandMember> ?v3 . <http://dbpedia.org/resource/Joseph_Michael> <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Nevermore> . },"```sparql
# Step 1: Get the actor of ""Return to Nuke 'Em High Volume 1""
SELECT ?actor WHERE {
    ?movie <http://dbpedia.org/ontology/starring> ?actor .
    ?movie <http://dbpedia.org/property/title> ""Return to Nuke 'Em High Volume 1"" .
}

# Step 2: Get the band member of Nevermore associated with this actor
SELECT ?bandMember WHERE {
    ?actor <http://dbpedia.org/ontology/memberOfBand> ?nevermore .
    ?nevermore <http://www.w3.org/2000/01/rdf-schema#label> ""Nevermore"" .
}

# Step 3: Get the person born as Joseph Michael
SELECT ?person WHERE {
    ?person <http://dbpedia.org/ontology/birthName> ""Joseph Michael"" .
}

# Step 4: Get the band of this person
SELECT ?band WHERE {
    ?person <http://dbpedia.org/ontology/memberOfBand> ?band .
}

# Step 5: Find associated musical artists for both bands
SELECT DISTINCT ?associatedArtist WHERE {
    { 
        ?nevermore <http://dbpedia.org/property/associatedMusicalArtist> ?associatedArtist .
    }
    UNION
    {
        ?band <http://dbpedia.org/property/associatedMusicalArtist> ?associatedArtist .
    }
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
488,48,test,"Give me the birth place of the commander in the war, that is a military conflict and an event and a societal event, of Saitō Hajime and administration of the father of Emperor Go-Mizunoo.",SELECT ?result WHERE { <http://dbpedia.org/resource/Saitō_Hajime> <http://dbpedia.org/ontology/battle> ?v3 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Emperor_Go-Mizunoo> <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/property/leader> ?v1 . ?v3 <http://dbpedia.org/ontology/commander> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
# Step 1: Find a war that is a military conflict, an event, and a societal event.
SELECT ?war WHERE {
    ?war rdf:type dbo:MilitaryConflict .
    ?war rdf:type dbo:Event .
    ?war rdf:type dbo:SocietalEvent .
}

# Step 2: Identify the commander of this war.
SELECT ?commander WHERE {
    ?war dbo:commander ?commander .
    FILTER(?war IN (<list_of_wars_from_step_1>))
}

# Step 3: Find the birthplace of this commander.
SELECT ?birthPlace WHERE {
    ?commander dbo:birthPlace ?birthPlace .
    FILTER(?commander IN (<list_of_commanders_from_step_2>))
}

# Additional Step: Identify the administration under which Emperor Go-Mizunoo's father served.
SELECT ?administration WHERE {
    dbo:Emperor_Go-Mizunoo dbo:father ?father .
    ?father dbo:administeredBy ?administration .
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
232,59,test,"Give me the child of the person born as the birth name of Jon Pertwee and actor of the claim to fame, that is a film and a military conflict, of the professional in Actor, narrator and producer.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/starring> ?result . ?v2 <http://dbpedia.org/property/birthName> ?v3 . ?v0 <http://dbpedia.org/property/occupation> ""Actor, narrator and producer""@en . ?v0 <http://dbpedia.org/ontology/knownFor> ?v5 . ?v2 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/property/birthName> ?v3 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. }","```sparql
SELECT ?child WHERE {
    # Step 1: Get Jon Pertwee's birth name
    <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/ontology/birthName> ?birthName .

    # Step 2: Find a person with that birth name
    ?person <http://dbpedia.org/ontology/birthName> ?birthName .
    
    # Step 3: Identify the claim to fame for an actor involved in both films and military conflicts, who is also a narrator and producer
    ?actor <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Actor> .
    ?actor <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Narrator> .
    ?actor <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Producer> .
    ?claimToFame <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film> .
    ?claimToFame <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
    ?actor <http://dbpedia.org/ontology/knownFor> ?claimToFame .

    # Step 4: Determine the child of the person found in step 2
    ?person <http://dbpedia.org/property/child> ?child .
}
```",6,8,7,3,2,3,3,71,0,0,1,0,0.0,0
182,20,test,Give me the war of the work of Gotabhaya Rajapaksa and war of Mahesh Senanayake and entity in Sri Lanka.,SELECT ?result WHERE { <http://dbpedia.org/resource/Mahesh_Senanayake> <http://dbpedia.org/ontology/battle> ?result . ?v3 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Gotabhaya_Rajapaksa> . ?v3 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Sri_Lanka> . },"```sparql
SELECT DISTINCT ?war WHERE {
  # Find wars related to Gotabhaya Rajapaksa's work
  ?work1 <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/Gotabhaya_Rajapaksa> .
  ?work1 <http://dbpedia.org/ontology/subject> ?war .

  # Find wars related to Mahesh Senanayake's work
  ?work2 <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/Mahesh_Senanayake> .
  ?work2 <http://dbpedia.org/ontology/subject> ?war .

  # Ensure the war is related to an entity in Sri Lanka
  ?entity <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation> .
  ?entity <http://dbpedia.org/property/country> <http://dbpedia.org/resource/Sri_Lanka> .
  ?war <http://dbpedia.org/ontology/entity> ?entity .
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
161,52,test,"Give me the military force of the force, that is a societal event and an event and a military conflict, of the person decedent at Francoist Spain and commander in Biscay Campaign and military force of the force, that is a societal event and a military conflict, of Francisco Largo Caballero.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v5 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . ?v3 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Francoist_Spain> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v5 . ?v2 <http://dbpedia.org/ontology/commander> ?v3 . <http://dbpedia.org/resource/Biscay_Campaign> <http://dbpedia.org/ontology/commander> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
SELECT ?militaryForce WHERE {
  ?personDecedent <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Francoist_Spain> .
  ?biscayCampaign <http://dbpedia.org/ontology/commander> ?personDecedent ;
                   <http://dbpedia.org/ontology/militaryForce> ?militaryForce1 .
  
  ?franciscoEvent <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent> ;
                  <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> ;
                  <http://dbpedia.org/ontology/person> <http://dbpedia.org/resource/Francisco_Largo_Caballero> .
  ?franciscoEvent <http://dbpedia.org/ontology/militaryForce> ?militaryForce2 .

  FILTER(?militaryForce1 = ?militaryForce2)
}
```",6,11,7,3,3,3,3,71,0,0,3,0,0.0,0
391,20,test,"Give me the native of Compton, California and actor of the claim to fame, that is a work, of Michael Ballhaus.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Compton,_California> . <http://dbpedia.org/resource/Michael_Ballhaus> <http://dbpedia.org/ontology/knownFor> ?v2 . ?v2 <http://dbpedia.org/ontology/starring> ?result . }","```sparql
SELECT ?actor WHERE {
  ?work <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/Michael_Ballhaus> .
  ?work <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work> .
  ?work <http://dbpedia.org/ontology/starring> ?actor .
  ?actor <http://dbpedia.org/property/nativePlace> <http://dbpedia.org/resource/Compton,_California> .
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
345,16,test,"Give me the figure known as the nickname of FC Vaduz and team of the person born, that is a soccer player and a soccer manager, on 1978-09-15.","SELECT ?result WHERE { <http://dbpedia.org/resource/FC_Vaduz> <http://dbpedia.org/property/nickname> ?v2 . ?result <http://dbpedia.org/property/nickname> ?v2 . ?result <http://dbpedia.org/ontology/manager> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v3 <http://dbpedia.org/ontology/birthDate> ""1978-09-15""^^<http://www.w3.org/2001/XMLSchema#date> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. }","```sparql
SELECT ?nickname ?team WHERE {
  # Part 1: Get the nickname of FC Vaduz
  OPTIONAL {
    <http://dbpedia.org/resource/FC_Vaduz> <http://dbpedia.org/ontology/nickname> ?nickname .
  }

  # Part 2: Find a person born on 1978-09-15 who is both a soccer player and manager, and get their team
  OPTIONAL {
    ?person <http://www.w3.org/2000/01/rdf-schema#label> ""Soccer player""@en .
    ?person <http://dbpedia.org/ontology/birthDate> ""1978-09-15""^^xsd:date .
    ?person <http://dbpedia.org/ontology/team> ?team .
    ?person <http://www.w3.org/2000/01/rdf-schema#label> ""Soccer manager""@en .
  }
}
```",4,6,5,2,2,3,2,20,0,0,1,0,0.0,0
232,25,test,"Give me the native of the residence, that is a settlement and British, of Sylvie Bermann and actor of Dog Soldiers (film).",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . <http://dbpedia.org/resource/Dog_Soldiers_(film)> <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Sylvie_Bermann> <http://dbpedia.org/property/residence> ?v1 . },"```sparql
SELECT ?person WHERE {
  # Find Sylvie Bermann's British residence
  ?residence <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement> .
  ?residence <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> .
  <http://dbpedia.org/resource/Sylvie_Bermann> <http://dbpedia.org/property/residence> ?residence .

  # Find actors of Dog Soldiers
  ?film <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film> .
  ?film <http://dbpedia.org/ontology/title> ""Dog Soldiers""@en .
  ?film <http://dbpedia.org/ontology/starring> ?actor .

  # Find natives of the residence
  ?actor <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person> .
  ?actor <http://dbpedia.org/property/nativePlace> ?residence .

  # Bind the person who satisfies both conditions
  BIND(?actor AS ?person)
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
404,50,test,"Give me the parent of the child, that is a royalty, of the parent, that is a royalty, of Prince George William of Hanover and child of the father of Ernest Augustus, Duke of Brunswick.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?v4 . ?result <http://dbpedia.org/ontology/child> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v3 . <http://dbpedia.org/resource/Prince_George_William_of_Hanover> <http://dbpedia.org/ontology/parent> ?v0 . <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/property/father> ?v3 . }","```sparql
SELECT ?parentOfChild WHERE {
  # Step 1: Identify the father of Ernest Augustus, Duke of Brunswick.
  ?father rdf:type dbo:Royalty .
  ?father dbo:child dbr:Ernest_Augustus,_Duke_of_Brunswick .

  # Step 2: Find the child of this father who is royalty.
  ?child rdf:type dbo:Royalty .
  ?child dbo:parent ?father .

  # Step 3: Determine the parent (who must also be royalty) of this child.
  ?secondParent rdf:type dbo:Royalty .
  ?secondParent dbo:child ?child .

  # Step 4: Find the child of this second parent who is royalty and identify their own parent.
  ?thirdChild rdf:type dbo:Royalty .
  ?thirdChild dbo:parent ?secondParent .
  
  ?parentOfChild dbo:parent ?thirdChild .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
16,64,test,Give me the professional in Actress and person born as the birth name of the alumnus of Ohio State University and spouse of the person born as the birth name of Ted McGinley.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Ohio_State_University> . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v2 <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/property/birthName> ?v3 . ?result <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/property/occupation> ""Actress""@en . }","```sparql
SELECT ?professional WHERE {
  # Step 1: Find the alumnus of Ohio State University
  ?alumnus dbpedia-owl:alumni <http://dbpedia.org/resource/Ohio_State_University> .
  
  # Step 2: Get the birth name of this alumnus
  ?alumnus foaf:name ?birthName .

  # Step 3: Find the spouse of the person with this birth name
  ?spouse dbpedia-owl:spouse ?alumnus .
  
  # Step 4: Identify the birth name of Ted McGinley
  <http://dbpedia.org/resource/Ted_McGinley> foaf:name ?tedBirthName .

  # Step 5: Find the professional who is both an actress and has this birth name
  ?professional a dbo:Actress ;
                foaf:name ?tedBirthName .
}
```",7,7,8,3,3,3,3,71,0,0,1,0,0.0,0
184,34,test,"Give me the parent of Archduchess Ilona of Austria and parent of the native of the landmark at elevation, that is a settlement, of 96.0.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/child> ?v1 . ?v2 <http://dbpedia.org/ontology/elevation> ""96.0""^^<http://www.w3.org/2001/XMLSchema#double> . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Ilona_of_Austria> . }","```sparql
SELECT ?parent1 AS ?result WHERE {
  <http://dbpedia.org/resource/Archduchess_Ilona_of_Austria> <http://dbpedia.org/ontology/father> ?parent1 .
}
UNION
SELECT ?parent2 AS ?result WHERE {
  ?landmark <http://www.w3.org/2000/01/rdf-schema#seeAlso> ?elevation ;
            <http://dbpedia.org/ontology/location> ?location .
  ?location <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement> .
  ?elevation <http://dbpedia.org/property/elevation> ""96.0""^^<http://www.w3.org/2001/XMLSchema#float> .
  ?landmark <http://dbpedia.org/ontology/native> ?native .
  ?native <http://dbpedia.org/ontology/father> ?parent2 .
}
```",4,5,5,3,2,3,3,71,0,0,2,0,0.0,0
617,61,test,"Give me the parent of the child of the commander in Battle of Panium and spouse of the child of the successor, that is a royalty, of Antiochus (son of Antiochus III the Great).",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://dbpedia.org/ontology/child> ?v3 . <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/successor> ?v0 . <http://dbpedia.org/resource/Battle_of_Panium> <http://dbpedia.org/ontology/commander> ?v1 . ?result <http://dbpedia.org/ontology/child> ?v3 . ?v0 <http://dbpedia.org/ontology/child> ?v5 . },"```sparql
SELECT ?parent WHERE {
  # Step 1: Find the commander in the Battle of Panium
  ?battle dbpedia-owl:commander ?commander .
  FILTER(STR(?battle) = ""Battle_of_Panium"") .

  # Step 2: Find the child of that commander
  ?commander dbpedia-owl:child ?child .

  # Step 3: Identify Antiochus (son of Antiochus III the Great)
  ?antiochus dbpedia-owl:succesor ?successor .
  FILTER(STR(?antiochus) = ""Antiochus_(son_of_Antiochus_III_the_Great)"") .

  # Step 4: Find the child of the successor
  ?successor dbpedia-owl:child ?successorChild .

  # Step 5: Determine the spouse of this child, ensuring they are royalty
  ?successorChild dbpedia-owl:spouse ?spouse .
  ?spouse a <http://dbpedia.org/ontology/Royalty> .

  # Step 6: Ensure this spouse is also the spouse of the child from step 2
  FILTER(?spouse = ?child) .

  # Step 7: Find the parent of the child from step 2
  ?child dbpedia-owl:parent ?parent .
}
```",6,7,7,3,2,3,3,71,0,0,2,0,0.0,0
659,56,test,"Give me the commander in Battle of Leipzig and commander in the force of Arthur Wellesley, 1st Duke of Wellington and military force of the force, that is a societal event and an event and a military conflict, of the reference to Rutger Jan Schimmelpenninck.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/ontology/commander> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Battle_of_Leipzig> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Rutger Jan Schimmelpenninck""@en . ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Arthur_Wellesley,_1st_Duke_of_Wellington> . ?result <http://dbpedia.org/ontology/battle> ?v1 . }","```sparql
SELECT ?commander WHERE {
  # Commander in Battle of Leipzig
  <http://dbpedia.org/resource/Battle_of_Leipzig> <http://dbpedia.org/ontology/commander> ?commander .
  
  # Same commander under Arthur Wellesley, 1st Duke of Wellington
  ?force <http://dbpedia.org/ontology/commander> ?commander ;
         <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Arthur_Wellesley,_1st_Duke_of_Wellington> .
  
  # Military force associated with an event that is both a societal event and a military conflict
  ?event <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> ;
         <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocialEvent> .
  ?force <http://dbpedia.org/property/battle> ?event .

  # Event referenced by Rutger Jan Schimmelpenninck
  <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> <http://dbpedia.org/ontology/referencedBy> ?event .
}
```",6,9,7,3,3,3,3,71,0,0,6,0,0.0,0
747,34,test,"Give me the band of Shèna and person born on the birth date of the person decedent, that is an athlete and a soccer player, at Zolotonosha.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v2 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Zolotonosha> . ?v2 <http://dbpedia.org/ontology/birthDate> ?v1 . <http://dbpedia.org/resource/Shèna> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/birthDate> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. },"```sparql
# Step 1: Find the decedent who is an athlete and a soccer player at Zolotonosha
SELECT ?decedent WHERE {
    ?decedent <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Zolotonosha>;
              <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> (<http://dbpedia.org/ontology/Athlete> <http://dbpedia.org/ontology/SoccerPlayer>);
              <http://dbpedia.org/ontology/deathDate> ?deathDate.
}

# Step 2: Find the birth date of the decedent
SELECT ?birthDate WHERE {
    ?decedent <http://dbpedia.org/ontology/birthDate> ?birthDate.
}

# Step 3: Find a person born on that same birth date who is an athlete
SELECT DISTINCT ?person WHERE {
    ?person <http://dbpedia.org/ontology/birthDate> ?birthDate;
            <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> (<http://dbpedia.org/ontology/Athlete>).
}

# Step 4: Find the band of Shèna
SELECT DISTINCT ?band WHERE {
    <http://dbpedia.org/resource/Shèna> <http://dbpedia.org/property/band> ?band.
}

# Final query combining all steps
SELECT DISTINCT ?person ?band WHERE {
    # Decedent details
    ?decedent <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Zolotonosha>;
              <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> (<http://dbpedia.org/ontology/Athlete> <http://dbpedia.org/ontology/SoccerPlayer>);
              <http://dbpedia.org/ontology/deathDate> ?deathDate;
              <http://dbpedia.org/ontology/birthDate> ?birthDate.
    
    # Person born on the same date who is an athlete
    ?person <http://dbpedia.org/ontology/birthDate> ?birthDate;
            <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> (<http://dbpedia.org/ontology/Athlete>).
    
    # Shèna's band
    <http://dbpedia.org/resource/Shèna> <http://dbpedia.org/property/band> ?band.
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
994,69,test,"Give me the associated musical artist of the band member, that is a band and a group and an organisation, of Meshuggah and associated musical artist of the associated musical artist of the reference to Watchtower and band member of the person born, that is a musical artist, as the persona of Don Dokken.","SELECT ?result WHERE { ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v4 <http://xmlns.com/foaf/0.1/name> ""Watchtower""@en . <http://dbpedia.org/resource/Don_Dokken> <http://xmlns.com/foaf/0.1/givenName> ?v5 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v0 <http://dbpedia.org/property/birthName> ?v5 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v6 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v6 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Meshuggah> . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
# Step 1: Identify Meshuggah as a band, group, and organization
SELECT ?meshuggah WHERE {
    ?meshuggah <http://dbpedia.org/ontology/band> ?x .
    ?meshuggah <http://dbpedia.org/ontology/group> ?y .
    ?meshuggah <http://dbpedia.org/ontology/organization> ?z .
}

# Step 2: Find associated musical artists of Meshuggah band members
SELECT DISTINCT ?associatedArtist WHERE {
    ?member <http://dbpedia.org/property/memberOf> ?meshuggah .
    ?member <http://dbpedia.org/ontology/associatedMusicalArtist> ?associatedArtist .
}

# Step 3: Reference Watchtower within associated musical artists
SELECT DISTINCT ?watchtowerReference WHERE {
    ?artist <http://dbpedia.org/ontology/referenceTo> ?watchtowerReference .
    ?watchtowerReference <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
}

# Step 4: Identify band members related to Watchtower
SELECT DISTINCT ?bandMember WHERE {
    ?artist <http://dbpedia.org/ontology/referenceTo> ?watchtowerReference .
    ?member <http://dbpedia.org/property/memberOf> ?artist .
}

# Step 5: Find the person born as Don Dokken
SELECT ?donDokken WHERE {
    ?person <http://dbpedia.org/ontology/bornAs> ""Don Dokken"" .
    ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
}

# Step 6: Determine associated musical artists of Don Dokken
SELECT DISTINCT ?associatedArtist WHERE {
    ?donDokken <http://dbpedia.org/ontology/associatedMusicalArtist> ?associatedArtist .
}
```",8,12,9,3,3,3,3,71,0,0,1,0,0.0,0
10,28,test,"Give me the professional in the birth name of Sharon Kao and associated musical artist of the person born, that is an artist, as Matt Colton and band member of the person born, that is an artist, as Luke Francis Vibert.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/property/occupation> ?v5 . ?v1 <http://dbpedia.org/property/birthName> ""Matt Colton""@en . ?v3 <http://dbpedia.org/property/birthName> ""Luke Francis Vibert""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Sharon_Kao> <http://dbpedia.org/property/birthName> ?v5 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
# Part 1: Retrieve Sharon Kao's birth name
SELECT ?birthName WHERE {
    <http://dbpedia.org/resource/Sharon_Kao> <http://dbpedia.org/ontology/birthName> ?birthName .
}

# Part 2: Find the associated musical artist for Matt Colton
SELECT ?associatedArtist WHERE {
    ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
    ?person <http://dbpedia.org/property/birthName> ""Matt Colton"" .
    ?person <http://dbpedia.org/ontology/associatedMusicalArtist> ?associatedArtist .
}

# Part 3: Identify a band member of Luke Francis Vibert
SELECT ?bandMember WHERE {
    ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
    ?person <http://dbpedia.org/property/birthName> ""Luke Francis Vibert"" .
    ?person <http://dbpedia.org/ontology/memberOfBand> ?bandMember .
}
```",6,8,7,2,3,2,3,28,0,0,1,0,0.0,0
16,48,test,Give me the person born as the birth name of Gigi Rice and spouse of the person born as the birth name of Ted McGinley.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Gigi_Rice> <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/property/birthName> ?v3 . ?result <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
SELECT ?person WHERE {
  # Step 1: Find the birth name of Gigi Rice
  <http://dbpedia.org/resource/Gigi_Rice> <http://dbpedia.org/ontology/birthName> ?birthNameGigiRice .

  # Step 2: Use this birth name to find Ted McGinley
  ?person <http://dbpedia.org/ontology/birthName> ?birthNameGigiRice .
  
  # Ensure the person is known by the birth name Ted McGinley
  FILTER(?person = <http://dbpedia.org/resource/Ted_McGinley>)
  
  # Step 3: Find the spouse of Ted McGinley
  ?person <http://dbpedia.org/ontology/spouse> ?spouse .
}
```",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
328,52,test,Give me the commander in the force of Ferenc Szálasi and awardee of the award of the commander in Volcano and Ryukyu Islands campaign and leader of People's Commissariat of Defense of the Soviet Union.,SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://dbpedia.org/property/awards> ?v2 . <http://dbpedia.org/resource/Volcano_and_Ryukyu_Islands_campaign> <http://dbpedia.org/ontology/commander> ?v3 . ?v5 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Ferenc_Szálasi> . ?result <http://dbpedia.org/property/awards> ?v2 . <http://dbpedia.org/resource/People's_Commissariat_of_Defense_of_the_Soviet_Union> <http://dbpedia.org/ontology/leader> ?result . },"```sparql
SELECT ?person WHERE {
  ?szalasiForce <http://dbpedia.org/ontology/commander> ?person .
  FILTER(?szalasiForce = <http://dbpedia.org/resource/Ferenc_Szálasi#Military_force>)

  ?volcanoRyukyuCommander <http://dbpedia.org/property/awardee> ?award .
  ?person <http://dbpedia.org/ontology/awardee> ?award .

  ?sovietDefenseLeader <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organization>.
  FILTER(?sovietDefenseLeader = <http://dbpedia.org/resource/People's_Commissariat_of_Defense_of_the_Soviet_Union>)
  ?sovietDefenseLeader <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organization>.
  ?sovietDefenseLeader <http://dbpedia.org/property/leader> ?person .
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
314,20,test,Give me the awardee of the award of Sergei Makovetsky and person deceased at Madrid and commander in Spanish Civil War.,SELECT ?result WHERE { <http://dbpedia.org/resource/Spanish_Civil_War> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/restingPlace> <http://dbpedia.org/resource/Madrid> . ?result <http://dbpedia.org/property/awards> ?v3 . <http://dbpedia.org/resource/Sergei_Makovetsky> <http://dbpedia.org/property/awards> ?v3 . },"```sparql
SELECT DISTINCT ?person WHERE {
  # Find awards received by Sergei Makovetsky
  ?award <http://dbpedia.org/ontology/receiver> <http://dbpedia.org/resource/Sergei_Makovetsky> .
  
  # Find persons who are awardees of the same award
  ?award <http://dbpedia.org/ontology/receiver> ?person .

  # Ensure the person died in Madrid
  ?person <http://dbpedia.org/property/deathPlace> <http://dbpedia.org/resource/Madrid> .
  
  # Ensure the person was a commander during the Spanish Civil War
  ?person <http://dbpedia.org/ontology/commander> ?event .
  ?event <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
  ?event <http://dbpedia.org/property/name> ""Spanish Civil War""^^<http://www.w3.org/2001/XMLSchema#string> .
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
712,16,test,Give me the capital of the country of Armed Forces of South Russia and resting place of the awardee of Hero of the Soviet Union.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Armed_Forces_of_South_Russia> <http://dbpedia.org/ontology/country> ?v2 . ?v2 <http://dbpedia.org/ontology/capital> ?result . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Hero_of_the_Soviet_Union> . },"```sparql
# Query to find the capital of the country associated with Armed Forces of South Russia
SELECT ?capital WHERE {
  ?armedForces <http://dbpedia.org/ontology/country> ?country .
  ?country <http://dbpedia.org/property/capital> ?capital .
  FILTER(STR(?armedForces) = ""Armed_Forces_of_South_Russia"")
}

# Query to find the resting place of an awardee of Hero of the Soviet Union
SELECT DISTINCT ?restingPlace WHERE {
  ?person <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Russian_Federation> .
  ?person <http://dbpedia.org/property/honours> ?award .
  FILTER(STR(?award) = ""Hero_of_the_Soviet_Union"") .
  OPTIONAL { ?person <http://dbpedia.org/ontology/burialPlace> ?restingPlace . }
}
```",4,4,5,2,2,3,2,20,0,0,1,0,0.0,0
547,25,test,Give me the resting place of Simon Cadell and resting place of the awardee of Knight Grand Cross of the Order of St Michael and St George.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_St_Michael_and_St_George> . ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Simon_Cadell> <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
SELECT ?simonCadellRestingPlace ?awardeeRestingPlace WHERE {
  # Find the resting place of Simon Cadell
  <http://dbpedia.org/resource/Simon_Cadell> <http://dbpedia.org/ontology/restingPlace> ?simonCadellRestingPlace .

  # Find individuals who have been awarded Knight Grand Cross of the Order of St Michael and St George
  ?awardee <http://dbpedia.org/property/honours> ?honour .
  FILTER(CONTAINS(LCASE(STR(?honour)), ""knight grand cross of the order of st michael and st george"")) .

  # Find the resting place of these awardees
  ?awardee <http://dbpedia.org/ontology/restingPlace> ?awardeeRestingPlace .
}
```",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
659,31,test,"Give me the commander in the force of the native, that is an office holder, of Kingdom of Ireland and commander in Battle of Leipzig.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/commander> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Battle_of_Leipzig> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Kingdom_of_Ireland> . ?v0 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT ?commander ?force WHERE {
  ?person <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Kingdom_of_Ireland>.
  ?person <http://dbpedia.org/ontology/battleCommanded> <http://dbpedia.org/resource/Battle_of_Leipzig>.
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>.
  ?battle <http://dbpedia.org/ontology/commander> ?commander.
  ?commander <http://dbpedia.org/ontology/battleCommanded> ?force.
}
```",4,5,5,3,2,3,3,71,0,0,19,0,0.0,0
328,22,test,"Give me the awardee of Order of Suvorov and leader of the office, that is a government agency, of Joseph Stalin.",SELECT ?result WHERE { <http://dbpedia.org/resource/Joseph_Stalin> <http://dbpedia.org/property/office> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v1 <http://dbpedia.org/ontology/leader> ?result . ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Order_of_Suvorov> . },"```sparql
SELECT ?awardee WHERE {
  ?awardee <http://dbpedia.org/ontology/award> <http://dbpedia.org/resource/Order_of_Suvorov> .
  ?office <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency> .
  ?office <http://dbpedia.org/property/leader> ?awardee .
  ?stalin <http://dbpedia.org/ontology/leader> ?office .
  FILTER(?stalin = <http://dbpedia.org/resource/Joseph_Stalin>)
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
339,16,test,Give me the child of the child of Christian IX of Denmark and father of the child of Grand Duchess Elena Vladimirovna of Russia.,SELECT ?result WHERE { <http://dbpedia.org/resource/Grand_Duchess_Elena_Vladimirovna_of_Russia> <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://dbpedia.org/property/father> ?result . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Christian_IX_of_Denmark> . ?v2 <http://dbpedia.org/ontology/child> ?result . },"```sparql
SELECT ?grandchildOfChristianIX ?fatherOfElenaChild WHERE {
  # Find the children of Christian IX of Denmark
  ?child1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Christian_IX_of_Denmark> .
  
  # Find the grandchildren (children of those children)
  ?grandchildOfChristianIX <http://dbpedia.org/property/birthParent> ?child1 .

  # Find the children of Grand Duchess Elena Vladimirovna of Russia
  ?child2 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Grand_Duchess_Elena_Vladimirovna_of_Russia> .
  
  # Find the fathers of those children (assuming father is a birth parent)
  ?fatherOfElenaChild <http://dbpedia.org/property/birthParent> ?child2 .

  FILTER(?grandchildOfChristianIX = ?fatherOfElenaChild) 
}
```",4,4,5,2,2,3,2,20,0,0,1,0,0.0,0
177,9,test,"Give me the headquarter of the office, that is an organisation, of Joo Don-sik and entity in the residence of Alexander Gamelin.",SELECT ?result WHERE { <http://dbpedia.org/resource/Alexander_Gamelin> <http://dbpedia.org/property/residence> ?v1 . <http://dbpedia.org/resource/Joo_Don-sik> <http://dbpedia.org/property/office> ?v3 . ?v3 <http://dbpedia.org/ontology/location> ?result . ?result <http://dbpedia.org/ontology/country> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
SELECT ?organization ?headquarters WHERE {
  ?organization <http://dbpedia.org/ontology/officeHolder> <http://dbpedia.org/resource/Joo_Don-sik>.
  ?organization <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>.
  ?organization <http://dbpedia.org/property/headquarters> ?headquarters.
  
  ?residence <http://dbpedia.org/ontology/country> ?country.
  <http://dbpedia.org/resource/Alexander_Gamelin> <http://dbpedia.org/property/residence> ?residence.
  
  ?headquarters <http://www.w3.org/2000/01/rdf-schema#seeAlso> ?residence.
}
```",4,5,5,2,2,2,2,9,0,0,1,0,0.0,0
617,47,test,"Give me the child of the child, that is a royalty, of Seleucus II Callinicus and spouse of the child of the successor, that is a royalty, of Antiochus (son of Antiochus III the Great).",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seleucus_II_Callinicus> . ?v4 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/father> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/child> ?v4 . <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/successor> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
SELECT ?grandchild ?spouse WHERE {
  # Seleucus II Callinicus's children who are royalty
  ?child dbo:parent <http://dbpedia.org/resource/Seleucus_II_Callinicus> ;
         a dbo:Royalty .
  
  # Their children (grandchildren of Seleucus II Callinicus) who are royalty
  ?grandchild dbo:parent ?child ;
              a dbo:Royalty .

  # Antiochus III the Great's successor and their child who is royalty
  <http://dbpedia.org/resource/Antiochus_III_the_Great> dbo:successor ?successor .
  ?royalChild dbo:parent ?successor ;
               a dbo:Royalty .

  # Spouse of the royal child from Antiochus III's successor
  ?royalChild dbo:spouse ?spouse .
  
  # Match the grandchild with the spouse
  FILTER(?grandchild = ?spouse)
}
```",5,7,6,3,2,3,3,71,0,0,4,0,0.0,0
492,60,test,"Give me the person decedent at the capital, that is a settlement, of the country of Khemis Miliana District and person decedent at the work of the author of French Algeria.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . ?v2 <http://dbpedia.org/property/author> ?v3 . <http://dbpedia.org/resource/Khemis_Miliana_District> <http://dbpedia.org/ontology/country> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://dbpedia.org/ontology/capital> ?v1 . <http://dbpedia.org/resource/French_Algeria> <http://dbpedia.org/property/author> ?v3 . ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . },"```sparql
# Step 1: Find the capital of Khemis Miliana District that is a settlement.
SELECT ?capital WHERE {
    ?district <http://dbpedia.org/ontology/capital> ?capital .
    ?district <http://www.w3.org/2000/01/rdf-schema#label> ""Khemis Miliana District"" .
    FILTER(LANG(?district) = 'en')
    ?capital <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement> .
}

# Step 2: Find works related to French Algeria and identify common person decedents.
SELECT DISTINCT ?person WHERE {
    # Get the capital from step 1
    VALUES ?capital { 
        # Replace with actual URI of the capital found in step 1
    }
    
    # Find works related to French Algeria
    ?work <http://dbpedia.org/ontology/author> ?author .
    ?author <http://www.w3.org/2000/01/rdf-schema#label> ""French Algeria"" .
    FILTER(LANG(?author) = 'en')
    
    # Identify person decedents at the capital
    ?person <http://dbpedia.org/ontology/deathPlace> ?capital .
    
    # Identify person decedents associated with the work
    ?person <http://dbpedia.org/ontology/deathPlace> ?work .
}
```

Note: The actual URI for the capital of Khemis Miliana District should be determined and replaced in the `VALUES` clause. This query assumes that such a URI can be found or is known.",6,7,7,3,2,3,3,71,0,0,16,0,0.0,0
391,57,test,"Give me the native of Compton, California and actor of the claim to fame, that is a work, of the spouse of Sherry Hormann and actor of the movie, that is a movie and a work and a television show, with Roz Ryan.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Sherry_Hormann> <http://dbpedia.org/ontology/spouse> ?v0 . ?v0 <http://dbpedia.org/ontology/knownFor> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v5 <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Compton,_California> . ?v3 <http://dbpedia.org/property/starring> ?result . ?v3 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Roz_Ryan> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. }","```sparql
# Step 1: Find Sherry Hormann's spouse
SELECT ?spouse WHERE {
    <http://dbpedia.org/resource/Sherry_Hormann> <http://xmlns.com/foaf/0.1/spouse> ?spouse .
}

# Step 2: Get the claim to fame of the spouse that is a work and involves an actor from Compton, California
SELECT DISTINCT ?actor WHERE {
    ?work <http://dbpedia.org/ontology/knownFor> ?spouse .
    ?work <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work> .
    ?actor <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/United_States> ;
           <http://dbpedia.org/property/placeOfBirth> <http://dbpedia.org/resource/Compton,_California> ;
           <http://dbpedia.org/ontology/actedIn> ?work .
}

# Step 3: Identify the movie that is a work and television show with Roz Ryan
SELECT DISTINCT ?movie WHERE {
    ?movie <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Movie>, <http://dbpedia.org/ontology/Work>, <http://dbpedia.org/ontology/TVSeries> .
    ?movie <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Roz_Ryan> .
}
```",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
767,45,test,"Give me the alma mater of Carl L. Nippert and entity in Baden-Württemberg and reference to the alter ego of the persona, that is a fictional character, of Matthew Burland.","SELECT ?result WHERE { <http://dbpedia.org/resource/Carl_L._Nippert> <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v0 <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://dbpedia.org/ontology/state> <http://dbpedia.org/resource/Baden-Württemberg> . ?v0 <http://dbpedia.org/property/alterEgo> ""Matthew Burland""@en . }","```sparql
SELECT ?almaMater ?entityInBW ?fictionalCharacter WHERE {
  # Alma mater of Carl L. Nippert
  <http://dbpedia.org/resource/Carl_L._Nippert> <http://dbpedia.org/ontology/almaMater> ?almaMater .

  # Entity in Baden-Württemberg
  ?entityInBW <http://www.w3.org/2000/01/rdf-schema#label> ?label .
  FILTER(CONTAINS(LCASE(?label), ""baden-württemberg""))
  
  # Fictional character associated with Matthew Burland
  OPTIONAL {
    <http://dbpedia.org/resource/Matthew_Burland> <http://dbpedia.org/ontology/knownFor> ?fictionalCharacter .
    ?fictionalCharacter <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter> .
  }
}
```",5,6,6,3,3,3,3,71,1,443,0,0.0022522522522522522,1.0,0.00449438202247191
92,26,test,"Give me the associated musical artist of the person born, that is an artist, as the actor of Return to Nuke 'Em High Volume 1.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Return_to_Nuke_'Em_High_Volume_1> <http://dbpedia.org/property/starring> ?v1 . ?v2 <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"```sparql
SELECT ?actor ?associatedArtist WHERE {
  ?movie <http://dbpedia.org/ontology/starring> ?actor .
  ?actor <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist> .
  ?actor <http://dbpedia.org/property/birthPlace> ?birthPlace .
  ?movie <http://dbpedia.org/ontology/title> ""Return to Nuke 'Em High Volume 1"" .
  ?actor <http://dbpedia.org/ontology/musicArtist> ?associatedArtist .
}
```",3,4,4,3,1,3,3,71,0,0,126,0,0.0,0
281,46,test,"Give me the entity in the birth place, that is a country, of Bob Heffron and war of the awardee of the award of Jonathon Band.",SELECT ?result WHERE { <http://dbpedia.org/resource/Bob_Heffron> <http://dbpedia.org/ontology/birthPlace> ?v4 . <http://dbpedia.org/resource/Jonathon_Band> <http://dbpedia.org/property/awards> ?v2 . ?v1 <http://dbpedia.org/property/awards> ?v2 . ?result <http://dbpedia.org/ontology/place> ?v4 . ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
SELECT ?entity WHERE {
  {
    # Part 1: Entity in the birth place of Bob Heffron
    <http://dbpedia.org/resource/Bob_Heffron> <http://www.w3.org/2000/01/rdf-schema#birthPlace> ?birthPlace .
    ?birthPlace <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country> .
    ?entity <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?type .
    FILTER(?type != <http://dbpedia.org/ontology/Country>)
  }
  UNION
  {
    # Part 2: War of the awardee of the award of Jonathon Band
    <http://dbpedia.org/resource/Jonathon_Band> <http://dbpedia.org/property/award> ?award .
    ?award <http://dbpedia.org/ontology/recipient> ?awardee .
    ?awardee <http://dbpedia.org/ontology/battle> ?war .
    ?entity <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
  }
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
161,55,test,"Give me the military force of the force, that is a societal event and a military conflict, of Francisco Largo Caballero and commander in the force, that is an event, of Emilio Mola and military force of the force, that is a societal event and an event and a military conflict, of Francisco Franco.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v5 . ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Franco> . ?v5 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Emilio_Mola> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"```sparql
# Step 1: Find forces related to Francisco Largo Caballero
SELECT ?forceLargo WHERE {
    ?forceLargo <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>.
    ?forceLargo <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>.
    <http://dbpedia.org/resource/Francisco_Largo_Caballero> <http://dbpedia.org/property/memberOf> ?forceLargo.
}

# Step 2: Find forces related to Emilio Mola and their commanders
SELECT ?forceMola ?commander WHERE {
    ?forceMola <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>.
    <http://dbpedia.org/resource/Emilio_Mola> <http://dbpedia.org/property/memberOf> ?forceMola.
    ?forceMola <http://dbpedia.org/ontology/commander> ?commander.
}

# Step 3: Find forces related to Francisco Franco
SELECT ?forceFranco WHERE {
    ?forceFranco <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>.
    ?forceFranco <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>.
    ?forceFranco <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>.
    <http://dbpedia.org/resource/Francisco_Franco> <http://dbpedia.org/property/memberOf> ?forceFranco.
}

# Final Query: Get the military force of the first identified force
SELECT ?militaryForce WHERE {
    ?forceLargo <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>.
    ?forceLargo <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>.
    <http://dbpedia.org/resource/Francisco_Largo_Caballero> <http://dbpedia.org/property/memberOf> ?forceLargo.
    ?forceLargo <http://dbpedia.org/ontology/militaryForce> ?militaryForce.
}
```",6,12,7,2,3,3,3,71,0,0,32,0,0.0,0
378,45,test,"Give me the war of Joaquín Blake and war of Carl Pontus Gahn and claim to fame of the commander in the war, that is a military conflict and a societal event and an event, of Thomas Trigge.",SELECT ?result WHERE { <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/knownFor> ?result . ?v0 <http://dbpedia.org/ontology/commander> ?v1 . <http://dbpedia.org/resource/Joaquín_Blake> <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Thomas_Trigge> <http://dbpedia.org/ontology/battle> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"```sparql
# Step 1: Identify wars involving Joaquín Blake
SELECT ?warBlake WHERE {
    <http://dbpedia.org/resource/Joaqu%C3%ADn_Blake> <http://dbpedia.org/ontology/battle> ?warBlake .
}

# Step 2: Identify wars involving Carl Pontus Gahn
SELECT ?warGahn WHERE {
    <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/ontology/battle> ?warGahn .
}

# Step 3: Find common war between Joaquín Blake and Carl Pontus Gahn
SELECT DISTINCT ?commonWar WHERE {
    ?commonWar <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Joaqu%C3%ADn_Blake> .
    ?commonWar <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Carl_Pontus_Gahn> .
}

# Step 4: Determine the type of events for Thomas Trigge's involvement
SELECT DISTINCT ?war WHERE {
    ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
    ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent> .
    ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event> .
    <http://dbpedia.org/resource/Thomas_Trigge> <http://dbpedia.org/ontology/battle> ?war .
}

# Step 5: Retrieve the claim to fame of the commander in that context
SELECT DISTINCT ?claimToFame WHERE {
    ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
    ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent> .
    ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event> .
    <http://dbpedia.org/resource/Thomas_Trigge> <http://dbpedia.org/ontology/battle> ?war .
    ?war <http://dbpedia.org/ontology/commander> ?commander .
    ?commander <http://dbpedia.org/ontology/knownFor> ?claimToFame .
}
```",5,8,6,3,3,3,3,71,0,0,2,0,0.0,0
161,32,test,"Give me the military force of the force, that is a societal event and an event and a military conflict, of Francisco Franco and military force of the force, that is a societal event and a military conflict, of Francisco Largo Caballero.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Franco> . ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
SELECT DISTINCT ?francoForce ?caballeroForce WHERE {
  # For Francisco Franco
  ?event1 a dbo:MilitaryConflict ;
          a dbo:Event ;
          a dbo:SocietalEvent .
  <http://dbpedia.org/resource/Francisco_Franco> dbo:commander ?event1 .
  ?event1 dbo:militaryForce ?francoForce .

  # For Francisco Largo Caballero
  ?event2 a dbo:MilitaryConflict ;
          a dbo:SocietalEvent .
  <http://dbpedia.org/resource/Francisco_Largo_Caballero> dbo:commander ?event2 .
  ?event2 dbo:militaryForce ?caballeroForce .
}
```",4,9,5,2,2,3,3,71,0,0,514,0,0.0,0
617,54,test,"Give me the parent of Nysa (wife of Pharnaces I of Pontus) and spouse of the child of the successor, that is a royalty, of Antiochus (son of Antiochus III the Great) and child of the child, that is a royalty, of Seleucus II Callinicus.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Nysa_(wife_of_Pharnaces_I_of_Pontus)> . ?v0 <http://dbpedia.org/ontology/child> ?v5 . ?result <http://dbpedia.org/property/father> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seleucus_II_Callinicus> . <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/successor> ?v0 . },"```sparql
SELECT ?parent ?spouse WHERE {
  # Step 1: Identify Nysa's parent
  ?nysa a dbo:Person ;
        foaf:name ""Nysa"" ;
        dbo:spouse ?pharnacesI .
  
  ?pharnacesI dbo:title ""Pharnaces I of Pontus"" .

  ?nysa dbo:parent ?parent .

  # Step 2: Find the successor of Antiochus (son of Antiochus III the Great)
  ?antiochus a dbo:Person ;
             foaf:name ""Antiochus"" ;
             dbo:father ?antiochusIII .
  
  ?antiochusIII foaf:name ""Antiochus III the Great"" .

  ?successor dbo:succeededBy ?antiochus .

  # Step 3: Find the child of this successor who is royalty
  ?child dbo:parent ?successor ;
         a dbo:Royalty .

  # Step 4: Identify the spouse of the child found in step 3
  ?child dbo:spouse ?spouse .

  # Step 5: Determine the child of Seleucus II Callinicus who is royalty
  ?seleucusII a dbo:Person ;
              foaf:name ""Seleucus II Callinicus"" .
  
  ?royalChild dbo:parent ?seleucusII ;
              a dbo:Royalty .

  # Step 6: Find the parent of the child identified in step 5
  ?royalChild dbo:parent ?parent2 .

  FILTER(?parent = ?parent2)
}
```",6,8,7,3,3,3,3,71,0,0,2,0,0.0,0
617,19,test,"Give me the child of the child, that is a royalty, of Boleslaus I, Duke of Bohemia and parent of the father, that is a royalty, of the reference, that is a royalty, to Richeza of Poland.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?v4 . ?result <http://dbpedia.org/ontology/child> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Boleslaus_I,_Duke_of_Bohemia> . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Richeza of Poland""@en . }","```sparql
SELECT ?grandchild WHERE {
  # Step 1: Find Boleslaus I's child who is royalty
  ?child dbo:parent <http://dbpedia.org/resource/Boleslaus_I,_Duke_of_Bohemia> ;
         a dbo:Royalty .
  
  # Step 2: From that child, find their own child (grandchild of Boleslaus I) who is royalty
  ?grandchild dbo:parent ?child ;
              a dbo:Royalty .

  # Step 3: For Richeza of Poland, find her reference who is royalty
  <http://dbpedia.org/resource/Richeza_of_Poland> dbo:reference ?reference ;
                                                 a dbo:Royalty .
  
  # Step 4: Identify the father of this reference and then his parent, both being royalty
  ?father dbo:parent ?reference ;
          a dbo:Royalty .

  ?grandparent dbo:parent ?father ;
               a dbo:Royalty .
}
```",5,8,6,3,2,3,2,20,0,0,1,0,0.0,0
666,17,test,"Give me the player in Steve Bruce and figure known as the nickname of the reference, that is an organisation and a soccer club and a sports club, to England.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ?v3 . ?v0 <http://dbpedia.org/property/nickname> ?v3 . ?v0 <http://xmlns.com/foaf/0.1/name> ""England""@en . <http://dbpedia.org/resource/Steve_Bruce> <http://dbpedia.org/ontology/team> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. }","```sparql
SELECT ?player WHERE {
  ?org <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>.
  ?org <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>.
  ?org <http://dbpedia.org/property/country> <http://dbpedia.org/resource/England>.
  ?org <http://dbpedia.org/ontology/nickname> ?nickname.
  ?player <http://dbpedia.org/ontology/team> ?org.
  ?player <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Steve_Bruce>.
}
```",4,7,5,3,2,3,2,20,0,0,1,0,0.0,0
492,37,test,"Give me the commander in the war, that is a military conflict and an event, of the commander in Battle of Verdun and person decedent at Algiers.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/battle> ?v3 . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Algiers> . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Battle_of_Verdun> <http://dbpedia.org/ontology/commander> ?v0 . },"```sparql
SELECT ?commanderInWar WHERE {
  # Step 1: Find the commander in the Battle of Verdun
  <http://dbpedia.org/resource/Battle_of_Verdun> <http://dbpedia.org/ontology/commander> ?verdunCommander .

  # Step 2: Identify wars that are both military conflicts and events involving this commander
  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event> .
  ?verdunCommander <http://dbpedia.org/ontology/commander> ?war .

  # Step 3: Find commanders in these wars
  ?war <http://dbpedia.org/ontology/commander> ?commanderInWar .

  # Step 4: Ensure the commander also died in Algiers
  ?commanderInWar <http://dbpedia.org/property/placeOfDeath> <http://dbpedia.org/resource/Algiers> .
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
9,57,test,"Give me the alma mater of John Alderdice, Baron Alderdice and figure known as the nickname of Queen's University Belfast and alma mater of the awardee of the reference, that is an award, to Royal Medals.","SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""Royal Medals""@en . ?result <http://dbpedia.org/property/nickname> ?v3 . ?v5 <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Queen's_University_Belfast> <http://dbpedia.org/property/nickname> ?v3 . <http://dbpedia.org/resource/John_Alderdice,_Baron_Alderdice> <http://dbpedia.org/ontology/almaMater> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v5 <http://dbpedia.org/ontology/almaMater> ?result . }","```sparql
SELECT ?university WHERE {
  # Alma mater of John Alderdice
  <http://dbpedia.org/resource/John_Alderdice,_Baron_Alderdice> <http://dbpedia.org/ontology/almaMater> ?university .
  
  # Nickname condition for Queen's University Belfast
  ?university <http://www.w3.org/2000/01/rdf-schema#label> ""Queen's University Belfast""@en .
  
  # Alma mater of an awardee of Royal Medals
  ?awardee <http://dbpedia.org/ontology/almaMater> ?university .
  ?awardee <http://dbpedia.org/property/award> <http://dbpedia.org/resource/Royal_Medal> .
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
328,70,test,"Give me the awardee of the award of Bruce Fraser, 1st Baron Fraser of North Cape and commander in the force of the person decedent at Budapest and leader of the office, that is a government agency, of the leader, that is an office holder and a politician, of Gustav Jonson.","SELECT ?result WHERE { ?v7 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://dbpedia.org/ontology/leader> ?result . <http://dbpedia.org/resource/Gustav_Jonson> <http://dbpedia.org/property/leader> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Budapest> . ?v7 <http://dbpedia.org/ontology/commander> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?result <http://dbpedia.org/property/awards> ?v4 . <http://dbpedia.org/resource/Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape> <http://dbpedia.org/property/awards> ?v4 . ?v1 <http://dbpedia.org/property/office> ?v3 . }","```sparql
SELECT ?awardee WHERE {
  # Step 1: Identify Bruce Fraser's Award
  <http://dbpedia.org/resource/Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape> <http://dbpedia.org/ontology/award> ?fraserAward .

  # Step 2: Find Awardee of That Award
  ?awardee <http://dbpedia.org/ontology/recipient> ?fraserAward .

  # Step 3: Determine Decedent at Budapest
  ?budaDecedent <http://dbpedia.org/property/decedentAtBudapestEvent> ?budaEvent .
  
  # Step 4: Identify Force Commander
  ?forceCommander <http://dbpedia.org/ontology/commander> ?budaDecedent .

  # Step 5: Find Leader of Government Agency
  ?govAgency <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency> .
  ?govAgency <http://dbpedia.org/ontology/leader> ?forceCommander .

  # Step 6: Determine Leader's Office Holder and Politician Role
  ?gustavLeader <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder> .
  ?gustavLeader <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .
  ?gustavLeader <http://dbpedia.org/property/leaderOf> <http://dbpedia.org/resource/Gustav_Jonson> .

  # Step 7: Link to Awardee
  FILTER(?forceCommander = ?gustavLeader)
}
```",8,11,9,3,3,3,3,71,0,0,1,0,0.0,0
534,20,test,"Give me the headquarter of the owner of the location, that is a venue and an architectural structure, of 2012 Pro12 Grand Final and birth place of the child, that is a politician and an office holder, of the native, that is a politician, of Essex.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Venue>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/child> ?v2 . ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Essex> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ArchitecturalStructure>. <http://dbpedia.org/resource/2012_Pro12_Grand_Final> <http://dbpedia.org/ontology/location> ?v4 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v5 <http://dbpedia.org/ontology/headquarter> ?result . ?v4 <http://dbpedia.org/ontology/owner> ?v5 . },"```sparql
# Step 1: Find the native politician of Essex
SELECT ?essexPolitician WHERE {
    ?essexPolitician <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/British_people>.
    ?essexPolitician <http://dbpedia.org/ontology/placeOfBirth> ?place.
    FILTER(CONTAINS(LCASE(STR(?place)), ""essex""))
}

# Step 2: Find the child of this politician who is both a politician and an office holder
SELECT ?child WHERE {
    ?child <http://dbpedia.org/ontology/father> ?essexPolitician.
    ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>.
    ?child <http://dbpedia.org/ontology/officeHolder> ?office.
}

# Step 3: Determine the birthplace of this child
SELECT ?birthPlace WHERE {
    ?child <http://dbpedia.org/ontology/birthPlace> ?birthPlace.
}

# Step 4: Locate the venue for the 2012 Pro12 Grand Final, which is both a venue and an architectural structure
SELECT ?venue WHERE {
    ?event <http://dbpedia.org/property/location> ?venue.
    ?event <http://dbpedia.org/ontology/event> <http://dbpedia.org/resource/2012_Pro12_Grand_Final>.
    ?venue <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Venue>.
    ?venue <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ArchitecturalStructure>.
}

# Step 5: Identify the owner of this venue
SELECT ?owner WHERE {
    ?venue <http://dbpedia.org/property/owner> ?owner.
}

# Step 6: Find the headquarters of this owner
SELECT ?headquarters WHERE {
    ?owner <http://dbpedia.org/ontology/headquarter> ?headquarters.
}
```",6,11,7,3,2,3,2,20,0,0,1,0,0.0,0
528,64,test,"Give me the war of the military force of the entity, that is a societal event, in Chile and war of Orozimbo Barbosa and force of the person born as the birth name of Narciso Campero.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/battle> ?v3 . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/commander> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Chile> . <http://dbpedia.org/resource/Narciso_Campero> <http://dbpedia.org/property/birthName> ?v0 . <http://dbpedia.org/resource/Orozimbo_Barbosa> <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/property/birthName> ?v0 . },"```sparql
# Step 1: Identify societal event in Chile
SELECT ?event WHERE {
    ?event <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>.
    ?event <http://dbpedia.org/property/country> <http://dbpedia.org/resource/Chile>.
}

# Step 2: Find military force associated with the event
SELECT ?force WHERE {
    ?event <http://dbpedia.org/ontology/militaryForce> ?force.
}

# Step 3: Determine war involving this military force
SELECT ?war1 WHERE {
    ?force <http://dbpedia.org/property/war> ?war1.
}

# Step 4: Identify Orozimbo Barbosa and find the war he was involved in
SELECT ?war2 WHERE {
    <http://dbpedia.org/resource/Orozimbo_Barbosa> <http://dbpedia.org/ontology/militaryForce> ?forceBarbosa.
    ?forceBarbosa <http://dbpedia.org/property/war> ?war2.
}

# Step 5: Find Narciso Campero's birth name and force
SELECT ?forceCampero WHERE {
    <http://dbpedia.org/resource/Narciso_Campero> <http://www.w3.org/2000/01/rdf-schema#label> ""Narciso Campero""@en.
    <http://dbpedia.org/resource/Narciso_Campero> <http://dbpedia.org/ontology/militaryForce> ?forceCampero.
}

# Step 6: Find the war involving Narciso Campero's force
SELECT ?war3 WHERE {
    ?forceCampero <http://dbpedia.org/property/war> ?war3.
}

# Final step: Return common wars from steps 3, 4, and 5
SELECT DISTINCT ?commonWar WHERE {
    VALUES ?commonWar { ?war1 ?war2 ?war3 }
}
```",7,8,8,3,3,3,3,71,0,0,2,0,0.0,0
421,27,test,Give me the band member of Senidah and person born as the birth name of Dino Merlin and native of the birthplace of Samir Bekrić.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v2 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Senidah> . <http://dbpedia.org/resource/Dino_Merlin> <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Samir_Bekrić> <http://dbpedia.org/ontology/birthPlace> ?v3 . ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . },"```sparql
SELECT ?person WHERE {
  # Condition 1: Band member of Senidah
  ?person <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/Senidah>.

  # Condition 2: Birth name is the same as Dino Merlin's birth name
  ?person <http://dbpedia.org/property/birthName> ?birthName.
  <http://dbpedia.org/resource/Dino_Merlin> <http://dbpedia.org/property/birthName> ?birthName.

  # Condition 3: Native of the birthplace of Samir Bekrić
  ?person <http://dbpedia.org/ontology/nativePlace> ?nativePlace.
  <http://dbpedia.org/resource/Samir_Bekrić> <http://dbpedia.org/property/birthPlace> ?birthPlace.
  FILTER (?nativePlace = ?birthPlace)
}
```",5,5,6,2,3,2,3,28,0,0,1,0,0.0,0
404,57,test,"Give me the parent of the child, that is a royalty, of the parent, that is a royalty, of Prince George William of Hanover and spouse of Princess Victoria Louise of Prussia and child of the father of Ernest Augustus, Duke of Brunswick.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v5 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/property/father> ?v3 . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/ontology/child> ?v5 . <http://dbpedia.org/resource/Prince_George_William_of_Hanover> <http://dbpedia.org/ontology/parent> ?v0 . ?result <http://dbpedia.org/ontology/parent> ?v3 . }","```sparql
SELECT ?parent
WHERE {
  # Step 1: Identify the father of Ernest Augustus, Duke of Brunswick
  ?father a dbo:Royalty ;
          dbo:child ?ernestAugustus .
  
  # Step 2: Find the child of this person who is also royalty
  ?child a dbo:Royalty ;
         dbo:parent ?father .

  # Step 3: Determine the spouse of Princess Victoria Louise of Prussia from these children
  ?spouse a dbo:Royalty ;
          dbo:spouse <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> ;
          dbo:child ?child .

  # Step 4: Find their child, which must be royalty
  ?royalChild a dbo:Royalty ;
              dbo:parent ?spouse .

  # Step 5: Identify the parent of this child
  ?parent dbo:child ?royalChild .
}
```",6,8,7,3,3,3,3,71,1,1,0,0.5,1.0,0.6666666666666666
547,21,test,Give me the resting place of Alan Cunningham and resting place of the child of James Burton (property developer).,SELECT ?result WHERE { <http://dbpedia.org/resource/James_Burton_(property_developer)> <http://dbpedia.org/ontology/child> ?v1 . <http://dbpedia.org/resource/Alan_Cunningham> <http://dbpedia.org/ontology/restingPlace> ?result . ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
SELECT ?alanCunninghamRestingPlace ?childRestingPlace WHERE {
  # Resting place of Alan Cunningham
  dbpedia:Alan_Cunningham_(British_Army_officer) dbo:placeOfBurial ?alanCunninghamRestingPlace .

  # Resting place of the child of James Burton (property developer)
  dbpedia:James_Burton_(property_developer) dbo:child ?child .
  ?child dbo:placeOfBurial ?childRestingPlace
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
16,33,test,Give me the spouse of Ted McGinley and professional in the profession of the actor of Unnatural (TV series).,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/occupation> ?v3 . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Unnatural_(TV_series)> <http://dbpedia.org/property/starring> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v3 . },"```sparql
# Step 1: Find the spouse of Ted McGinley
SELECT ?spouse WHERE {
    <http://dbpedia.org/resource/Ted_McGinley> <http://xmlns.com/foaf/0.1/spouse> ?spouse .
}

# Step 2: Identify the profession associated with actors in ""Unnatural""
SELECT DISTINCT ?profession WHERE {
    ?actor <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Actor> ;
           <http://dbpedia.org/ontology/film> <http://dbpedia.org/resource/Unnatural_(TV_series)> .
    ?actor <http://purl.org/dc/terms/profession> ?profession .
}

# Step 3: Find professionals in the identified profession
SELECT DISTINCT ?professional WHERE {
    ?professional <http://purl.org/dc/terms/profession> ?profession .
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
696,16,test,Give me the landmark at elevation of the award of Nie Rongzhen and birth place of the member of Dropkick Murphys.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/elevation> ?v3 . <http://dbpedia.org/resource/Dropkick_Murphys> <http://dbpedia.org/ontology/bandMember> ?v2 . <http://dbpedia.org/resource/Nie_Rongzhen> <http://dbpedia.org/property/awards> ?v3 . },"```sparql
SELECT ?landmark WHERE {
  ?award <http://dbpedia.org/ontology/receiver> <http://dbpedia.org/resource/Nie_Rongzhen> .
  ?award <http://dbpedia.org/property/elevation> ?elevation .
  
  ?member <http://dbpedia.org/ontology/memberOf> <http://dbpedia.org/resource/Dropkick_Murphys> .
  ?member <http://dbpedia.org/ontology/birthPlace> ?landmark .

  ?landmark <http://www.w3.org/2000/01/rdf-schema#label> ?label .
}
```",4,4,5,2,2,3,2,20,0,0,1,0,0.0,0
767,39,test,"Give me the alma mater of Carl L. Nippert and reference to the alter ego of the persona, that is a fictional character, of Matthew Burland.","SELECT ?result WHERE { <http://dbpedia.org/resource/Carl_L._Nippert> <http://dbpedia.org/ontology/almaMater> ?result . ?v0 <http://dbpedia.org/property/alterEgo> ?v1 . ?v0 <http://dbpedia.org/property/alterEgo> ""Matthew Burland""@en . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. }","```sparql
# Query for Alma Mater of Carl L. Nippert
SELECT ?almaMater WHERE {
  <http://dbpedia.org/resource/Carl_L._Nippert> <http://dbpedia.org/ontology/almaMater> ?almaMater .
}

# Query for Alter Ego of Fictional Character associated with Matthew Burland
SELECT ?alterEgo WHERE {
  ?character <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter> .
  <http://dbpedia.org/resource/Matthew_Burland> <http://dbpedia.org/property/knownFor> ?character .
  ?character <http://dbpedia.org/ontology/alterEgo> ?alterEgo .
}
```",4,5,5,3,2,3,3,71,0,0,2,0,0.0,0
77,16,test,Give me the force of the mayor of Congress Poland and war of the awardee of Golden Weapon for Bravery.,SELECT ?result WHERE { <http://dbpedia.org/resource/Congress_Poland> <http://dbpedia.org/property/leader> ?v3 . ?result <http://dbpedia.org/ontology/commander> ?v3 . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Golden_Weapon_for_Bravery> . },"```sparql
# Query to find the force of the mayor of Congress Poland
SELECT ?force WHERE {
  ?mayor <http://dbpedia.org/ontology/mayor> <http://dbpedia.org/resource/Congress_Poland>.
  ?mayor <http://dbpedia.org/ontology/memberOf> ?force.
}

# Query to find the war associated with an awardee of Golden Weapon for Bravery
SELECT ?war WHERE {
  ?person <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Golden_Weapon_for_Bravery>.
  ?person <http://dbpedia.org/ontology/battle> ?war.
}
```",4,4,5,2,2,3,2,20,0,0,13,0,0.0,0
54,55,test,"Give me the predecessor of the child, that is an office holder and a royalty, of Thihapate of Mohnyin and parent of the child of Narapati I of Ava and child of the father of Soe Min Wimala Dewi.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/successor> ?v2 . ?v5 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Soe_Min_Wimala_Dewi> <http://dbpedia.org/property/father> ?v3 . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Thihapate_of_Mohnyin> . ?v3 <http://dbpedia.org/ontology/child> ?result . ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Narapati_I_of_Ava> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
SELECT ?predecessor WHERE {
  # Find Thihapate of Mohnyin's children who are office holders and royalty
  ?child a dbo:OfficeHolder ;
         dbo:royalty ""true""^^xsd:boolean ;
         dbo:parent <http://dbpedia.org/resource/Thihapate_of_Mohnyin> .

  # Ensure the child is a parent of Narapati I of Ava's child
  ?narapatiChild dbo:childOf <http://dbpedia.org/resource/Narapati_I_of_Ava> .
  ?child dbo:parent ?narapatiChild .

  # Ensure the child is related to Soe Min Wimala Dewi through their father
  ?soeMinWimalaDewi dbo:father ?father .
  ?child dbo:childOf ?father .

  # Find the predecessor of this child in an office or title
  ?officeHolderPosition a dbo:Office ;
                        dbo:successor ?child .
  ?predecessor dbo:successor ?officeHolderPosition .
}
```",6,8,7,2,3,3,3,71,0,0,1,0,0.0,0
55,27,test,"Give me the band of the reference, that is a band, to Newsted and band member of the band member, that is a band and a group, of San Francisco Symphony and band member of Guns N' Roses.","SELECT ?result WHERE { ?v1 <http://xmlns.com/foaf/0.1/name> ""Newsted""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Guns_N'_Roses> . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/San_Francisco_Symphony> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. }","```sparql
SELECT ?band WHERE {
  ?metallicaAlbum <http://dbpedia.org/ontology/band> ""Metallica"" .
  ?metallicaAlbum <http://www.w3.org/2000/01/rdf-schema#label> ?albumLabel .
  
  OPTIONAL { 
    ?newsted <http://dbpedia.org/property/memberOf> ?bandMember .
    ?bandMember <http://dbpedia.org/ontology/band> ""Metallica"" .
  }
  
  OPTIONAL {
    ?gunsNrosesMember <http://dbpedia.org/property/memberOf> ?gnrBandMember .
    ?gnrBandMember <http://dbpedia.org/ontology/band> ""Guns N' Roses"" .
    ?metallicaAlbum <http://www.w3.org/2000/01/rdf-schema#label> ?albumLabel .
  }
  
  OPTIONAL {
    ?symphonyPerformance <http://dbpedia.org/property/performedWith> ?band .
    ?band <http://dbpedia.org/ontology/band> ""Metallica"" .
    ?symphonyPerformance <http://dbpedia.org/ontology/group> ""San Francisco Symphony"" .
  }
  
  FILTER(?albumLabel IN (""Load"", ""Reload""))
}
```",5,8,6,2,3,2,3,28,0,0,1,0,0.0,0
492,47,test,"Give me the commander in the war, that is a military conflict and an event, of the commander in Battle of Verdun and person decedent at the work of US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://dbpedia.org/property/author> ""US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite""@en . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Battle_of_Verdun> <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://dbpedia.org/ontology/battle> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . }","```sparql
# Step 1: Get the commander of the Battle of Verdun
SELECT ?verdunCommander WHERE {
    <http://dbpedia.org/resource/Battle_of_Verdun> <http://dbpedia.org/ontology/commander> ?verdunCommander .
}

# Step 2: Find a war that is both a military conflict and an event involving the commander from step 1
SELECT ?war WHERE {
    ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
    ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event> .
    ?verdunCommander <http://dbpedia.org/ontology/battle> ?war .
}

# Step 3: Identify Joseph C. Satterthwaite's decedent at his work location
SELECT ?decedent WHERE {
    <http://dbpedia.org/resource/Joseph_C._Satterthwaite> <http://dbpedia.org/property/workLocation> ?workLocation .
    ?workLocation <http://dbpedia.org/ontology/personDecedent> ?decedent .
}

# Step 4: Find the commander of the war identified in step 2 who matches the person from step 3
SELECT ?commander WHERE {
    ?war <http://dbpedia.org/ontology/commander> ?commander .
    FILTER(?commander = ?decedent)
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
404,67,test,"Give me the spouse of Princess Victoria Louise of Prussia and parent of the child, that is a royalty, of the parent, that is a royalty, of Prince George William of Hanover and child of the father of the spouse of Princess Victoria Louise of Prussia.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> ?v3 . <http://dbpedia.org/resource/Prince_George_William_of_Hanover> <http://dbpedia.org/ontology/parent> ?v0 . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/child> ?v6 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?v1 . ?result <http://dbpedia.org/ontology/child> ?v6 . ?result <http://dbpedia.org/ontology/parent> ?v3 . },"```sparql
SELECT ?spouse WHERE {
    ?princess rdf:type dbo:Person ;
              rdfs:label ""Princess Victoria Louise of Prussia""@en .
    
    ?princess dbo:spouse ?spouse .

    ?child dbo:parent ?spouse ;
           rdf:type dbo:Royalty .

    ?royalParent dbo:parent ?child ;
                 rdf:type dbo:Royalty .

    ?georgeWilliam dbo:label ""Prince George William of Hanover""@en ;
                   dbo:parent ?parentOfGeorgeWilliam .
    
    ?parentOfGeorgeWilliam rdf:type dbo:Royalty .

    ?fatherOfSpouse dbo:spouse ?spouse ;
                    rdfs:label ?fatherLabel .

    ?childOfFather dbo:parent ?fatherOfSpouse ;
                   rdf:type dbo:Person .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
378,65,test,"Give me the war of the person born as Carl Pontus Gahn and claim to fame of the commander in Great Siege of Gibraltar and war of the commander in the reference, that is a military conflict, to Peninsular War.","SELECT ?result WHERE { ?v6 <http://dbpedia.org/ontology/battle> ?result . ?v3 <http://dbpedia.org/ontology/knownFor> ?result . <http://dbpedia.org/resource/Great_Siege_of_Gibraltar> <http://dbpedia.org/ontology/commander> ?v3 . ?v0 <http://dbpedia.org/ontology/commander> ?v6 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v4 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Peninsular War""@en . ?v4 <http://dbpedia.org/property/birthName> ""Carl Pontus Gahn""@en . }","```sparql
# Step 1: Get the person born as Carl Pontus Gahn
SELECT ?gahn WHERE {
    ?gahn <http://dbpedia.org/ontology/birthName> ""Carl Pontus Gahn"" .
}

# Step 2: Find the war associated with Carl Pontus Gahn
SELECT ?war WHERE {
    ?gahn dbp:occupation ?occupation .
    ?occupation dbo:relatedTo ?war .
    FILTER EXISTS { ?gahn <http://dbpedia.org/ontology/birthName> ""Carl Pontus Gahn"" }
}

# Step 3: Find the commander in the Great Siege of Gibraltar and their claim to fame
SELECT ?commander ?claimToFame WHERE {
    ?siege dbp:commander ?commander .
    ?commander dbo:knownFor ?claimToFame .
    FILTER EXISTS { ?siege <http://dbpedia.org/ontology/event> <http://dbpedia.org/resource/Great_Siege_of_Gibraltar> }
}

# Step 4: Identify the war associated with the commander from the Great Siege of Gibraltar
SELECT ?war WHERE {
    ?commander dbo:relatedTo ?war .
    FILTER EXISTS { 
        ?siege dbp:commander ?commander .
        ?siege <http://dbpedia.org/ontology/event> <http://dbpedia.org/resource/Great_Siege_of_Gibraltar>
    }
}

# Step 5: Locate the reference to a military conflict related to Peninsular War and find its commander
SELECT ?conflict ?commander WHERE {
    ?peninsularWar dbo:relatedTo ?conflict .
    ?conflict dbp:commander ?commander .
    FILTER EXISTS { ?peninsularWar <http://dbpedia.org/ontology/event> <http://dbpedia.org/resource/Peninsular_War> }
}

# Step 6: Determine the war associated with this commander
SELECT ?war WHERE {
    ?commander dbo:relatedTo ?war .
    FILTER EXISTS { 
        ?peninsularWar dbo:relatedTo ?conflict .
        ?conflict dbp:commander ?commander .
        ?peninsularWar <http://dbpedia.org/ontology/event> <http://dbpedia.org/resource/Peninsular_War>
    }
}
```",7,8,8,3,3,3,3,71,0,0,2,0,0.0,0
54,32,test,Give me the child of the father of Soe Min Wimala Dewi and parent of the child of Narapati I of Ava.,SELECT ?result WHERE { <http://dbpedia.org/resource/Soe_Min_Wimala_Dewi> <http://dbpedia.org/property/father> ?v1 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Narapati_I_of_Ava> . ?v3 <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://dbpedia.org/ontology/child> ?result . },"```sparql
# Find the father of Soe Min Wimala Dewi
SELECT ?father WHERE {
  ?soeMinWimalaDewi <http://dbpedia.org/ontology/father> ?father .
  FILTER(STR(?soeMinWimalaDewi) = ""Soe_Min_Wimala_Dewi"")
}

# Find the child of Narapati I of Ava
SELECT ?child WHERE {
  <http://dbpedia.org/resource/Narapati_I_of_Ava> <http://dbpedia.org/ontology/child> ?child .
}

# Find the common entity that is both a child of Soe Min Wimala Dewi's father and a parent of Narapati I of Ava's child
SELECT DISTINCT ?commonEntity WHERE {
  # The child of Soe Min Wimala Dewi's father
  ?father <http://dbpedia.org/ontology/child> ?commonEntity .
  
  # The parent of Narapati I of Ava's child
  ?commonEntity <http://dbpedia.org/ontology/parent> ?child .

  # Subqueries to get the specific individuals
  {
    SELECT ?father WHERE {
      ?soeMinWimalaDewi <http://dbpedia.org/ontology/father> ?father .
      FILTER(STR(?soeMinWimalaDewi) = ""Soe_Min_Wimala_Dewi"")
    }
  }

  {
    SELECT ?child WHERE {
      <http://dbpedia.org/resource/Narapati_I_of_Ava> <http://dbpedia.org/ontology/child> ?child .
    }
  }
}
```",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
161,64,test,"Give me the military force of Spanish Civil War and commander in the force, that is an event, of the figure known as El Director and military force of the force, that is a societal event and an event and a military conflict, of the person decedent at Francoist Spain.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Francoist_Spain> . ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v1 <http://dbpedia.org/ontology/commander> ?v0 . ?v2 <http://dbpedia.org/ontology/commander> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://xmlns.com/foaf/0.1/nick> ""El Director""@en . ?v1 <http://dbpedia.org/ontology/commander> ?result . }","```sparql
SELECT ?militaryForce ?commander ?event WHERE {
  # Step 1: Identify military forces of the Spanish Civil War
  ?militaryForce <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
  ?militaryForce <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation> .
  ?militaryForce <http://dbpedia.org/property/event> <http://dbpedia.org/resource/Spanish_Civil_War> .

  # Step 2: Find the commander known as ""El Director""
  ?commander <http://www.w3.org/2000/01/rdf-schema#label> ""El Director""@en .
  ?militaryForce <http://dbpedia.org/ontology/commander> ?commander .

  # Step 3: Identify societal event, event, and military conflict related to Francoist Spain
  ?event <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocialEvent> .
  ?event <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event> .
  ?event <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
  ?person <http://dbpedia.org/property/deathPlace> <http://dbpedia.org/resource/Francoist_Spain> .
  ?event <http://dbpedia.org/ontology/personDied> ?person .

  # Step 4: Link the commander's force to this event
  ?militaryForce <http://dbpedia.org/property/event> ?event .
}
```",7,11,8,3,3,3,3,71,0,0,32,0,0.0,0
92,49,test,"Give me the band member of the reference, that is an artist, to Nevermore and band of the person born as the birth name of Joseph Michael.","SELECT ?result WHERE { ?v2 <http://xmlns.com/foaf/0.1/name> ""Nevermore""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?result <http://dbpedia.org/ontology/bandMember> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Joseph_Michael> <http://dbpedia.org/property/birthName> ?v0 . }","```sparql
SELECT ?bandMember WHERE {
  ?artist <http://dbpedia.org/ontology/reference> <http://dbpedia.org/resource/Nevermore> .
  ?artist <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist> .
  ?artist <http://dbpedia.org/ontology/memberOfBand> ?bandMember .

  OPTIONAL {
    ?person <http://dbpedia.org/property/birthName> ""Joseph Michael"" .
    ?person <http://dbpedia.org/ontology/memberOfBand> ?band .
    FILTER(?band = ?bandMember)
  }
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
701,59,test,Give me the parent of the child of the child of Seti I and parent of the child of the spouse of Amun-her-khepeshef.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/ontology/child> ?v5 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seti_I> . ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v5 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Amun-her-khepeshef> <http://dbpedia.org/ontology/spouse> ?v3 . },"```sparql
SELECT DISTINCT ?parent
WHERE {
  # Seti I's children
  ?setiI dbo:child ?child1 .
  
  # One of Seti I's child's child (grandchild)
  ?child1 dbo:child ?grandchild .
  
  # Parent of the grandchild is one of Seti I's children
  ?grandchild dbo:parent ?parent .

  # Amun-her-khepeshef's spouse
  ?amunHerKhepeshef dbo:spouse ?spouse .

  # Child of Amun-her-khepeshef's spouse
  ?spouse dbo:child ?child2 .

  # Parent of that child is the spouse itself
  ?child2 dbo:parent ?spouse .

  # Filter by names
  FILTER(STR(?setiI) = ""Seti I"")
  FILTER(STR(?amunHerKhepeshef) = ""Amun-her-khepeshef"")

  # Find the common parent/spouse
  VALUES ?commonEntity { ?parent ?spouse }
}
```",6,6,7,3,2,3,3,71,0,0,1,0,0.0,0
378,47,test,"Give me the war of the commander in the reference, that is a military conflict, to Peninsular War and war of the person born as Carl Pontus Gahn.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/property/birthName> ""Carl Pontus Gahn""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Peninsular War""@en . ?v0 <http://dbpedia.org/ontology/commander> ?v4 . }","```sparql
SELECT ?war WHERE {
  # Find a commander related to the Peninsular War
  ?peninsularWar <http://dbpedia.org/ontology/commander> ?commander .
  FILTER(?peninsularWar = <http://dbpedia.org/resource/Peninsular_War>) .

  # Ensure this reference is a military conflict
  ?peninsularWar <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .

  # Find wars commanded by the same commander
  ?war <http://dbpedia.org/ontology/commander> ?commander .
  FILTER(?war != ?peninsularWar) .

  # Ensure these are military conflicts
  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .

  # Find wars involving Carl Pontus Gahn
  ?person <http://xmlns.com/foaf/0.1/name> ""Carl Pontus Gahn"" .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person> .
  ?person <http://dbpedia.org/property/birthName> ""Carl Pontus Gahn"" .

  # Ensure Carl Pontus Gahn was involved in the war
  ?war <http://dbpedia.org/ontology/personInvolvedInBattleOrWar> ?person .
}
```",5,6,6,3,2,3,3,71,0,0,2,0,0.0,0
701,71,test,"Give me the parent of the child of the spouse of Amun-her-khepeshef and parent of the child of the child of Seti I and spouse of the father of the commander, that is a royalty, in Battle of Perire.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seti_I> . <http://dbpedia.org/resource/Amun-her-khepeshef> <http://dbpedia.org/ontology/spouse> ?v1 . ?v5 <http://dbpedia.org/property/father> ?v4 . ?result <http://dbpedia.org/ontology/child> ?v5 . ?v1 <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/ontology/spouse> ?v8 . ?v7 <http://dbpedia.org/property/father> ?v8 . <http://dbpedia.org/resource/Battle_of_Perire> <http://dbpedia.org/ontology/commander> ?v7 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
SELECT ?parent WHERE {
  # Step 1: Amun-her-khepeshef's spouse
  ?amun_her_khepeshef dbo:spouse ?spouse .
  
  # Step 2: Child of Amun-her-khepeshef's spouse
  ?spouse dbo:child ?child .
  
  # Step 3: Parent of this child (Amun-her-khepeshef or their spouse)
  OPTIONAL { ?amun_her_khepeshef dbo:parent ?parent1 . }
  OPTIONAL { ?spouse dbo:parent ?parent2 . }
  
  # Step 4: Seti I's child
  ?seti_i dbo:child ?seti_child .
  
  # Step 5: Child of Seti I's child (grandchild)
  ?seti_child dbo:child ?grandchild .
  
  # Step 6: Parent of this grandchild (one of Seti I's children)
  OPTIONAL { ?seti_i dbo:parent ?parent3 . }
  OPTIONAL { ?seti_child dbo:parent ?parent4 . }
  
  # Step 7: Common parent
  FILTER (?parent1 = ?parent2 && ?parent3 = ?parent4)
  BIND(?parent1 AS ?parent)
  
  # Step 8: Commander in Battle of Perire
  ?battlePerire dbo:commander ?commander .
  
  # Step 9: Father of this commander
  ?commander dbo:father ?father .
  
  # Step 10: Spouse of this father
  ?father dbo:spouse ?spouseFather .
  
  # Step 11: Ensure the final result is a royalty
  ?parent rdf:type dbo:Royalty .
}
```",9,10,10,3,3,3,3,71,0,6,1,0.0,0.0,0
92,61,test,"Give me the band of the person born as the birth name of Joseph Michael and associated musical artist of the person born, that is an artist, as the actor of Return to Nuke 'Em High Volume 1.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> ?v3 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Return_to_Nuke_'Em_High_Volume_1> <http://dbpedia.org/property/starring> ?v0 . <http://dbpedia.org/resource/Joseph_Michael> <http://dbpedia.org/property/birthName> ?v1 . ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v5 <http://dbpedia.org/property/birthName> ?v0 . ?v3 <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
# Step 1: Find the person born as Joseph Michael
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/birthName> ""Joseph Michael"" .
}

# Step 2: Find the associated musical artist of that person
SELECT ?musicalArtist WHERE {
  ?person <http://dbpedia.org/property/musicalArtist> ?musicalArtist .
}

# Step 3: Identify the actor of ""Return to Nuke 'Em High Volume 1""
SELECT ?actor WHERE {
  <http://dbpedia.org/resource/Return_to_Nuke_%27Em_High_Volume_1> <http://dbpedia.org/ontology/starring> ?actor .
}

# Step 4: Check if this actor is also an artist
SELECT ?artist WHERE {
  ?actor <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist> .
}

# Step 5: Find the band associated with both the musical artist and the artist
SELECT DISTINCT ?band WHERE {
  ?musicalArtist <http://dbpedia.org/property/band> ?band .
  ?artist <http://dbpedia.org/property/band> ?band .
}
```",6,7,7,3,2,3,3,71,0,0,1,0,0.0,0
701,58,test,"Give me the parent of the child of Ramesses II and parent of Meritamen and spouse of the father of the commander, that is a royalty, in Battle of Perire.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/ontology/child> ?v5 . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Battle_of_Perire> <http://dbpedia.org/ontology/commander> ?v1 . ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ramesses_II> . <http://dbpedia.org/resource/Meritamen> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
SELECT ?parent WHERE {
  # Ramesses II's child
  ?child <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/Ramesses_II>.
  
  # Parent of the child (Ramesses II)
  ?parent <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Monarch>.
  ?child <http://dbpedia.org/ontology/birthParent> ?parent.
  
  # Parent of Meritamen (Ramesses II)
  ?meritamen <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/Ramesses_II>.
  ?meritamen <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Human>.
  
  # Spouse of Ramesses II
  ?spouse <http://dbpedia.org/property/spouse> <http://dbpedia.org/resource/Ramesses_II>.
  ?spouse <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Monarch>.

  # Commander in the Battle of Perire
  ?battle <http://dbpedia.org/property/commander> ?commander.
  FILTER(STRSTARTS(STR(?battle), ""http://dbpedia.org/resource/Battle_of_Perire""))
  
  # Father of the commander
  ?father <http://dbpedia.org/ontology/birthParent> ?commander.
  ?father <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Monarch>.

  # Ensure all are royalty
  FILTER(?parent = ?spouse)
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
251,24,test,"Give me the administration of the ruling party, that is a political party and an organisation, in Sicily and death place of the author of The Twelve Abbots of Challant.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. <http://dbpedia.org/resource/Sicily> <http://dbpedia.org/property/leaderParty> ?v2 . <http://dbpedia.org/resource/The_Twelve_Abbots_of_Challant> <http://dbpedia.org/property/author> ?v0 . ?result <http://dbpedia.org/property/leaderParty> ?v2 . ?v0 <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
SELECT ?party ?administration WHERE {
  ?author dbo:work <http://dbpedia.org/resource/The_Twelve_Abbots_of_Challant> .
  ?author dbo:deathPlace ?deathPlace .

  ?party a dbo:PoliticalParty ;
         dbo:isOrganisationOf ?organisation ;
         dbo:administrativeArea <http://dbpedia.org/resource/Sicily> ;
         dbo:administrationLocation ?administration .

  FILTER (?administration = ?deathPlace)
}
```",4,6,5,2,2,2,3,28,0,0,1,0,0.0,0
994,45,test,"Give me the associated musical artist of Red Tide (band) and associated musical artist of S.A. Slayer and band member of the person born, that is a musical artist, as the persona of Don Dokken.",SELECT ?result WHERE { <http://dbpedia.org/resource/S.A._Slayer> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Don_Dokken> <http://xmlns.com/foaf/0.1/givenName> ?v3 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Red_Tide_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
# Find associated musical artist for Red Tide (band)
SELECT ?artist WHERE {
  <http://dbpedia.org/resource/Red_Tide_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?artist .
}

UNION

# Find associated musical artist for S.A. Slayer
SELECT ?artist WHERE {
  <http://dbpedia.org/resource/S._A._Slayer> <http://dbpedia.org/ontology/associatedMusicalArtist> ?artist .
}

UNION

# Find band member of the person born as Don Dokken's persona
SELECT ?bandMember WHERE {
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> ;
          <http://dbpedia.org/property/bornAs> ""Don Dokken"" .
  ?person <http://dbpedia.org/ontology/memberOfBand> ?band .
  ?band <http://dbpedia.org/ontology/member> ?bandMember .
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
16,54,test,Give me the spouse of the person born as Ted Martin McGinley and professional in the profession of the actor of Unnatural (TV series) and person born as Georgeanne Marie Rice.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Unnatural_(TV_series)> <http://dbpedia.org/property/starring> ?v0 . ?v3 <http://dbpedia.org/property/birthName> ""Ted Martin McGinley""@en . ?result <http://dbpedia.org/property/occupation> ?v5 . ?result <http://dbpedia.org/property/birthName> ""Georgeanne Marie Rice""@en . ?v0 <http://dbpedia.org/property/occupation> ?v5 . ?v3 <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
# Step 1: Find the actor associated with ""Unnatural (TV series)""
SELECT ?unnaturalActor WHERE {
    ?unnaturalSeries <http://dbpedia.org/ontology/starring> ?unnaturalActor .
    ?unnaturalSeries <http://dbpedia.org/property/title> ""Unnatural (TV series)""^^<http://www.w3.org/2001/XMLSchema#string> .
}

# Step 2: Find the person born as Georgeanne Marie Rice
SELECT ?georgeanne WHERE {
    ?georgeanne <http://dbpedia.org/ontology/birthName> ""Georgeanne Marie Rice""^^<http://www.w3.org/2001/XMLSchema#string> .
}

# Step 3: Confirm both Ted Martin McGinley and the actor from Unnatural are actors
SELECT ?ted WHERE {
    ?ted <http://dbpedia.org/ontology/birthName> ""Ted Martin McGinley""^^<http://www.w3.org/2001/XMLSchema#string> .
    ?ted <http://dbpedia.org/ontology/profession> <http://dbpedia.org/resource/Actor> .
}

SELECT ?unnaturalActor WHERE {
    ?unnaturalActor <http://dbpedia.org/ontology/profession> <http://dbpedia.org/resource/Actor> .
}

# Step 4: Retrieve the spouse of Ted Martin McGinley
SELECT ?spouse WHERE {
    ?ted <http://dbpedia.org/property/spouse> ?spouse .
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
994,64,test,"Give me the associated musical artist of the associated musical artist of the reference to Watchtower and band member of the person born, that is a musical artist, as the persona of Don Dokken and associated musical artist of Red Tide (band).","SELECT ?result WHERE { <http://dbpedia.org/resource/Red_Tide_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v4 <http://xmlns.com/foaf/0.1/name> ""Watchtower""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . <http://dbpedia.org/resource/Don_Dokken> <http://xmlns.com/foaf/0.1/givenName> ?v5 . ?v0 <http://dbpedia.org/property/birthName> ?v5 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
# Step 1: Find the person associated with the persona of Don Dokken
SELECT ?person WHERE {
    ?person <http://dbpedia.org/ontology/persona> <http://dbpedia.org/resource/Don_Dokken>.
}

# Step 2: Find the musical artist born as that person
SELECT ?bornArtist WHERE {
    ?bornArtist <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>.
    ?bornArtist <http://dbpedia.org/property/birthName> ?person.
}

# Step 3: Check if this person is a band member
SELECT ?band WHERE {
    ?bornArtist <http://dbpedia.org/ontology/memberOfBand> ?band.
}

# Step 4: Find the associated musical artist of Watchtower
SELECT ?watchtowerArtist WHERE {
    ?watchtowerArtist <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>.
    ?watchtowerArtist <http://dbpedia.org/property/referenceTo> <http://dbpedia.org/resource/Watchtower_(band)>.
}

# Step 5: Find the associated musical artist of Red Tide (band)
SELECT ?redTideArtist WHERE {
    ?redTideArtist <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>.
    ?redTideArtist <http://dbpedia.org/property/associatedBand> <http://dbpedia.org/resource/Red_Tide_(band)>.
}

# Step 6: Find the associated musical artist of the result from step 5
SELECT ?finalArtist WHERE {
    ?finalArtist <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>.
    ?finalArtist <http://dbpedia.org/property/associatedBand> ?redTideArtist.
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
161,63,test,"Give me the military force of the force, that is a societal event and an event and a military conflict, of the person decedent at Francoist Spain and commander in the force, that is an event, of Emilio Mola and military force of the force, that is a societal event and a military conflict, of Francisco Largo Caballero.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/commander> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v4 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Francoist_Spain> . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v6 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v6 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Emilio_Mola> . },"SELECT ?result WHERE { 
  ?event <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. 
  ?event <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. 
  ?event <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>.
  
  ?decedent <http://dbpedia.org/property/deceasedAtLocation> <http://dbpedia.org/resource/Francoist_Spain>. 
  ?decedent <http://dbpedia.org/ontology/battleCommander> ?event.
  
  ?mola_event <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>.
  <http://dbpedia.org/resource/Emilio_Mola> <http://dbpedia.org/property/commander> ?mola_event.
  
  ?caballero_force <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>.
  ?caballero_force <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>.
  <http://dbpedia.org/resource/Francisco_Largo_Caballero> <http://dbpedia.org/property/militaryForce> ?caballero_force.
  
  ?decedent <http://dbpedia.org/ontology/militaryForce> ?result.
}",7,13,8,3,3,3,3,71,0,0,32,0,0.0,0
54,69,test,"Give me the parent of the child of Narapati I of Ava and child of the father of the child of Thinkhaya of Pagan and predecessor of the child, that is an office holder and a royalty, of the reference to Thihapate of Mohnyin.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/child> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://xmlns.com/foaf/0.1/name> ""Thihapate of Mohnyin""@en . ?v4 <http://dbpedia.org/property/father> ?v3 . ?v7 <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v7 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Narapati_I_of_Ava> . ?result <http://dbpedia.org/ontology/successor> ?v2 . }","```sparql
SELECT ?parent WHERE {
  # Step 1: Narapati I of Ava's child
  ?narapatiChild dbpedia-owl:childOf <http://dbpedia.org/resource/Narapati_I_of_Ava> .

  # Step 2: Thinkhaya of Pagan's child and predecessor
  ?thinkhayasChild dbpedia-owl:childOf <http://dbpedia.org/resource/Thinkhaya_of_Pagan> .
  ?predecessor dbpedia-owl:predecessorOf ?thinkhayasChild .

  # Step 3: Thihapate of Mohnyin's reference and office holder royalty
  ?thihapateRef <http://dbpedia.org/resource/Thihapate_of_Mohnyin> .
  ?officeHolder dbpedia-owl:childOf ?thihapateRef ;
                a dbo:OfficeHolder, dbo:Royalty .

  # Step 4: Combine relationships
  ?parent dbpedia-owl:parentOf ?narapatiChild ;
          dbpedia-owl:childOf ?predecessor .
}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
801,65,test,"Give me the associated musical artist of the writer, that is a musical artist and an artist, of 40 Dayz & 40 Nightz and producer of the work, that is a musical work and a song and a work, of the professional, that is a musical artist, in Rapper and professional in the alter ego of The Shadow.","SELECT ?result WHERE { ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v4 . ?v0 <http://dbpedia.org/property/occupation> ""Rapper""@en . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/40_Dayz_&_40_Nightz> <http://dbpedia.org/property/writer> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v6 <http://dbpedia.org/ontology/producer> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v6 <http://dbpedia.org/property/writer> ?v0 . }","```sparql
SELECT ?associatedMusicalArtist WHERE {
    # Step 1: Find the professional with alter ego The Shadow who is a rapper
    ?professional <http://dbpedia.org/ontology/profession> <http://dbpedia.org/resource/Rapper> .
    ?professional <http://dbpedia.org/property/alterEgo> ""The Shadow"" .

    # Step 2: Find the work that is a musical work, song, and associated with this professional
    ?work <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork> .
    ?work <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song> .
    ?professional <http://dbpedia.org/property/professionalIn> ?work .

    # Step 3: Find the producer of this work
    ?producer <http://dbpedia.org/ontology/producedWork> ?work .

    # Step 4: Identify the writer who is a musical artist and an artist, associated with ""40 Dayz & 40 Nightz""
    ?writer <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
    ?writer <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist> .
    ?writer <http://dbpedia.org/property/writtenWork> <http://dbpedia.org/resource/40_Dayz_%26_40_Nightz> .

    # Step 5: Find the associated musical artist of this writer
    ?writer <http://dbpedia.org/ontology/associatedMusicalArtist> ?associatedMusicalArtist .
}
```",7,13,8,3,3,3,3,71,0,0,8,0,0.0,0
44,8,test,"Give me the band member of Undertow (band) and band member of the associated musical artist, that is a group and an organisation, of Queensrÿche.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Undertow_(band)> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. <http://dbpedia.org/resource/Queensrÿche> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
SELECT ?person WHERE {
  # Band members of Undertow
  ?undertowMember <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/Undertow_(band)> .
  
  # Associated band with Queensrÿche and its members
  ?queensrycheBand <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Queensrÿche> .
  ?queensrycheMember <http://dbpedia.org/ontology/member> ?queensrycheBand .

  # Ensure the bands are groups and organizations
  ?undertowGroup <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
  ?undertowGroup <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation> .
  
  ?queensrycheGroup <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
  ?queensrycheGroup <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation> .

  # Find common members
  FILTER (?undertowMember = ?queensrycheMember)
  
  BIND(?undertowMember AS ?person)
}
```",3,5,4,2,2,2,2,9,0,0,1,0,0.0,0
92,47,test,"Give me the band member of the reference, that is an artist, to Nevermore and associated musical artist of the person born, that is an artist, as the actor of Return to Nuke 'Em High Volume 1.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://dbpedia.org/property/birthName> ?v0 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v2 <http://xmlns.com/foaf/0.1/name> ""Nevermore""@en . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Return_to_Nuke_'Em_High_Volume_1> <http://dbpedia.org/property/starring> ?v0 . }","```sparql
SELECT ?bandMember WHERE {
    ?person <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
    ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Actor> .
    ?film <http://dbpedia.org/property/starring> ?person .
    FILTER(STRSTARTS(LCASE(?film), ""return to nuke 'em high volume 1""))
    
    ?person <http://dbpedia.org/ontology/associatedMusicalArtist> ?musicalArtist .

    ?reference <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist> .
    ?reference <http://dbpedia.org/property/referenceTo> ?bandMember .
    FILTER(STRSTARTS(LCASE(?bandMember), ""nevermore""))
    
    ?musicalArtist <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
    ?reference <http://dbpedia.org/property/associatedMusicalArtist> ?musicalArtist .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
378,57,test,"Give me the war of Carl Pontus Gahn and war of the commander in the reference, that is a military conflict, to Peninsular War and claim to fame of the commander in Great Siege of Gibraltar.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/battle> ?result . ?v3 <http://dbpedia.org/ontology/knownFor> ?result . <http://dbpedia.org/resource/Great_Siege_of_Gibraltar> <http://dbpedia.org/ontology/commander> ?v3 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Peninsular War""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/ontology/commander> ?v5 . }","```sparql
SELECT ?war WHERE {
  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>.
  
  # War associated with Carl Pontus Gahn
  OPTIONAL { 
    <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/property/war> ?war.
  }
  
  # Reference to Peninsular War
  OPTIONAL {
    ?reference <http://www.w3.org/2004/02/skos/core#broader> <http://dbpedia.org/resource/Peninsular_War>.
    ?reference <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>.
    FILTER(?war = ?reference)
  }
  
  # Claim to fame for the commander in Great Siege of Gibraltar
  OPTIONAL {
    <http://dbpedia.org/resource/Great_Siege_of_Gibraltar> <http://dbpedia.org/ontology/commander> ?commander.
    ?commander <http://dbpedia.org/ontology/knownFor> ?war.
  }
}
```",6,7,7,3,3,3,3,71,2,32216,0,6.207709975789931e-05,1.0,0.00012414649286157667
801,51,test,"Give me the associated musical artist of the writer, that is a musical artist and an artist, of the album, that is a musical work and a work, of What U See Is What U Get and producer of the work, that is a musical work and a song and a work, of 50 Cent.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/50_Cent> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v1 <http://dbpedia.org/property/writer> ?v2 . ?v4 <http://dbpedia.org/ontology/producer> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. <http://dbpedia.org/resource/What_U_See_Is_What_U_Get> <http://dbpedia.org/ontology/album> ?v1 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
SELECT ?associatedArtist WHERE {
  # Step 1: Find the writer who is also a musical artist for the album ""What U See Is What U Get""
  ?album rdf:type dbo:MusicalWork ;
         dbo:title ""What U See Is What U Get"" .
  
  ?album dbo:writer ?writer .
  ?writer rdf:type dbo:MusicalArtist, dbo:Artist .

  # Step 2: Find the producer of any work by 50 Cent that is both a song and a musical work
  ?work rdf:type dbo:MusicalWork, dbo:Song ;
        dbo:artist ""50 Cent""^^xsd:string .
  
  ?work dbo:producer ?producer .

  # Step 3: Find the associated musical artist of the writer from step 1
  ?writer dbo:associatedMusicalArtist ?associatedArtist .
}
```",5,12,6,3,2,3,3,71,0,0,1,0,0.0,0
404,58,test,"Give me the parent of the child, that is a royalty, of Ernest Augustus, Duke of Brunswick and child of the father of the spouse of Princess Victoria Louise of Prussia and spouse of Princess Victoria Louise of Prussia.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?v1 . ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v1 <http://dbpedia.org/property/father> ?v2 . <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/ontology/child> ?v5 . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
SELECT ?parent WHERE {
  # Step 1: Find Princess Victoria Louise of Prussia's spouse
  ?princess a dbo:Princess ;
            foaf:name ""Victoria Louise of Prussia"" .
  
  ?princess dbo:spouse ?spouse .

  # Step 2: Determine the father of that spouse
  ?spouse dbo:childOf ?father .

  # Step 3: Find the child of this father who is also a royalty
  ?father dbo:child ?royaltyChild .
  
  ?royaltyChild a dbo:Royalty ;
                dbo:parent ?childParent .

  # Step 4: Identify the parent of this child
  ?childParent dbo:parent ?parent .
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
767,29,test,Give me the reference to  and entity in Baden-Württemberg and alma mater of the administration of George K. Nash.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/state> <http://dbpedia.org/resource/Baden-Württemberg> . ?v3 <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://xmlns.com/foaf/0.1/name> """"@en . ?v3 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/George_K._Nash> . }","```sparql
SELECT ?entity ?reference WHERE {
    ?administration <http://dbpedia.org/ontology/almaMater> ?entity .
    FILTER(?administration = <http://dbpedia.org/resource/George_K._Nash_(historian)>)
    
    ?entity <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement> .
    ?entity <http://dbpedia.org/property/location> ?location .
    ?location <http://dbpedia.org/ontology/administrativeUnit> <http://dbpedia.org/resource/Baden-W%C3%BCrttemberg> .

    OPTIONAL { ?entity <http://www.w3.org/2000/01/rdf-schema#seeAlso> ?reference }
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
232,57,test,"Give me the native of the residence, that is a settlement and British, of Sylvie Bermann and actor of the claim to fame, that is a film and a military conflict, of the professional in Actor, narrator and producer and child of Jon Pertwee.","SELECT ?result WHERE { <http://dbpedia.org/resource/Sylvie_Bermann> <http://dbpedia.org/property/residence> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v5 <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://dbpedia.org/ontology/knownFor> ?v5 . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/ontology/child> ?result . ?v0 <http://dbpedia.org/property/occupation> ""Actor, narrator and producer""@en . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. }","```sparql
# Step 1: Find Sylvie Bermann's British residence
SELECT ?residence WHERE {
    <http://dbpedia.org/resource/Sylvie_Bermann> <http://dbpedia.org/property/residence> ?residence .
    ?residence <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement> .
    ?residence <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> .
}

# Step 2: Find the native of that residence
SELECT ?native WHERE {
    ?person <http://dbpedia.org/property/nationality> <http://dbpedia.org/resource/United_Kingdom> .
    ?person <http://dbpedia.org/ontology/birthPlace> ?residence .
}

# Step 3: Identify the child of Jon Pertwee who is an actor, narrator, and producer
SELECT ?child WHERE {
    ?child <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Jon_Pertwee> .
    ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Actor> .
    ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Narrator> .
    ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Producer> .
}

# Step 4: Find the claim to fame that is both a film and a military conflict
SELECT ?claimToFame WHERE {
    ?child <http://dbpedia.org/ontology/knownFor> ?claimToFame .
    ?claimToFame <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film> .
    ?claimToFame <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
}
```",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
801,64,test,"Give me the associated musical artist of the writer, that is a musical artist and an artist, of the album, that is a musical work and a work, of What U See Is What U Get and professional in the alter ego of the true self of The Shadow and producer of Westside Story (song).","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/writer> ?v1 . <http://dbpedia.org/resource/What_U_See_Is_What_U_Get> <http://dbpedia.org/ontology/album> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. <http://dbpedia.org/resource/Westside_Story_(song)> <http://dbpedia.org/ontology/producer> ?result . ?v3 <http://xmlns.com/foaf/0.1/givenName> ""The Shadow""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://dbpedia.org/property/alterEgo> ?v2 . }","```sparql
# Step 1: Find the writer of the album ""What U See Is What U Get"" who is also a musical artist and an artist.
SELECT ?writer WHERE {
    ?album <http://dbpedia.org/ontology/writer> ?writer .
    ?album <http://purl.org/dc/terms/title> ""What U See Is What U Get"" .
    ?writer <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
    ?writer <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist> .
}

# Step 2: Identify The Shadow's alter ego and their role as a producer for ""Westside Story (song).""
SELECT ?producer WHERE {
    ?alterEgo <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AlterEgo> .
    ?alterEgo <http://dbpedia.org/property/trueSelf> <http://dbpedia.org/resource/The_Shadow> .
    ?producer <http://dbpedia.org/ontology/profession> ?alterEgo .
    ?producer <http://dbpedia.org/ontology/produced> <http://dbpedia.org/resource/Westside_Story_(song)> .
}

# Step 3: Find the associated musical artist connecting these entities.
SELECT ?associatedArtist WHERE {
    ?writer <http://dbpedia.org/property/associatedMusicalArtist> ?associatedArtist .
    ?producer <http://dbpedia.org/ontology/associatedMusicalArtist> ?associatedArtist .
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
281,63,test,"Give me the entity in the birth place, that is a country, of Bob Heffron and war of the awardee of the award of Jonathon Band and war of the profession, that is a military unit, of Heather Roy.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> ?v6 . <http://dbpedia.org/resource/Bob_Heffron> <http://dbpedia.org/ontology/birthPlace> ?v6 . <http://dbpedia.org/resource/Heather_Roy> <http://dbpedia.org/property/occupation> ?v2 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Jonathon_Band> <http://dbpedia.org/property/awards> ?v4 . ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v3 <http://dbpedia.org/property/awards> ?v4 . ?v2 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
SELECT DISTINCT ?entityInBirthPlace ?warOfAwardee ?warOfProfession WHERE {
  # Bob Heffron's birth place
  <http://dbpedia.org/resource/Bob_Heffron> <http://www.w3.org/2000/01/rdf-schema#birthPlace> ?birthPlace .
  
  # Ensure the birth place is a country
  ?birthPlace <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country> .

  # Find an entity in Bob Heffron's birth place
  ?entityInBirthPlace <http://www.w3.org/2000/01/rdf-schema#location> ?birthPlace .
  
  # Jonathon Band's award
  <http://dbpedia.org/resource/Jonathon_Band> <http://dbpedia.org/ontology/receivedAward> ?award .

  # Find the awardee of that award and their associated war
  ?awardee <http://dbpedia.org/ontology/receivedAward> ?award .
  ?awardee <http://dbpedia.org/ontology/war> ?warOfAwardee .

  # Heather Roy's profession as a military unit
  <http://dbpedia.org/resource/Heather_Roy> <http://dbpedia.org/ontology/profession> ?profession .
  
  # Ensure the profession is a military unit
  ?profession <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit> .

  # Find the war associated with Heather Roy's profession
  ?profession <http://dbpedia.org/ontology/war> ?warOfProfession .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
767,56,test,"Give me the entity in the administration, that is a settlement, of Green and reference to the alter ego of the persona, that is a fictional character, of Matthew Burland and alma mater of Carl L. Nippert.","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v1 . ?v0 <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://dbpedia.org/ontology/state> ?v2 . <http://dbpedia.org/resource/Carl_L._Nippert> <http://dbpedia.org/ontology/almaMater> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://dbpedia.org/property/leaderParty> ""Green""@en . ?v0 <http://dbpedia.org/property/alterEgo> ""Matthew Burland""@en . }","```sparql
SELECT ?entity WHERE {
  # Find the alter ego of the persona that is a fictional character associated with Matthew Burland
  ?alterEgo <http://dbpedia.org/ontology/person> <http://dbpedia.org/resource/Matthew_Burland> .
  ?alterEgo <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter> .

  # Find the alma mater of Carl L. Nippert
  <http://dbpedia.org/resource/Carl_L._Nippert> <http://dbpedia.org/property/almaMater> ?almaMater .

  # Find a settlement involved in an administration related to Green
  ?settlement <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement> .
  ?administration <http://dbpedia.org/property/administration> ?settlement .
  ?administration <http://dbpedia.org/property/reference> <http://dbpedia.org/resource/Green> .

  # The entity should be connected through these relationships
  ?entity <http://dbpedia.org/ontology/inAdministration> ?administration .
  ?entity <http://www.w3.org/2000/01/rdf-schema#seeAlso> ?alterEgo .
  ?entity <http://dbpedia.org/property/almaMater> ?almaMater .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
9,61,test,"Give me the alma mater of the awardee of the reference, that is an award, to Royal Medals and figure known as the nickname of the entity, that is an organisation and an educational institution, in Northern Ireland.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v5 <http://dbpedia.org/ontology/almaMater> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://dbpedia.org/property/nickname> ?v3 . ?v5 <http://dbpedia.org/property/awards> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Northern_Ireland> . ?result <http://dbpedia.org/property/nickname> ?v3 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Royal Medals""@en . }","```sparql
SELECT ?almaMater WHERE {
  ?entity a dbo:EducationalInstitution ;
          dbo:country dbc:Northern_Ireland ;
          rdfs:label ?nickname .
  
  ?figure foaf:nick ?nickname ;
          dbo:award ?award .

  ?award dbo:name ?awardName ;
         rdf:type dbo:Award ;
         dbo:reference ?reference .

  FILTER CONTAINS(LCASE(?awardName), ""royal medal"")

  ?awardee dbo:award ?award ;
           dbo:almaMater ?almaMater .
}
```",6,9,7,3,2,3,3,71,0,0,1,0,0.0,0
378,49,test,"Give me the war of the person born as Carl Pontus Gahn and claim to fame of the commander in the war, that is a military conflict and a societal event and an event, of Thomas Trigge.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://dbpedia.org/ontology/commander> ?v1 . ?v2 <http://dbpedia.org/property/birthName> ""Carl Pontus Gahn""@en . ?v1 <http://dbpedia.org/ontology/knownFor> ?result . <http://dbpedia.org/resource/Thomas_Trigge> <http://dbpedia.org/ontology/battle> ?v0 . }","```sparql
SELECT ?war ?commanderFame WHERE {
  # Step 1: Identify Carl Pontus Gahn's associated war
  ?person rdfs:label ""Carl Pontus Gahn""@en.
  ?person dbo:birthName ""Carl Pontus Gahn"".
  
  # Assuming there is a property linking the person to a war (e.g., dbo:associatedWith)
  ?person dbo:associatedWith ?war.

  # Step 2: Ensure the war is a military conflict and also a societal event and an event
  ?war rdf:type <http://dbpedia.org/ontology/MilitaryConflict>.
  ?war rdf:type <http://dbpedia.org/ontology/SocietalEvent>.
  ?war rdf:type <http://dbpedia.org/ontology/Event>.

  # Step 3: Find the commander in that war
  ?war dbo:commander ?commander.

  # Step 4: Get the claim to fame of this commander
  ?commander dbo:knownFor ?commanderFame.
  
  # Ensure the war is related to Thomas Trigge
  ?trigge rdfs:label ""Thomas Trigge""@en.
  ?trigge dbo:associatedWith ?war.
}
```",5,8,6,3,2,3,3,71,0,0,2,0,0.0,0
996,18,test,Give me the force of the awardee of the elevation of Lac d'Avoriaz and entity in the award of Ekrem Akurgal.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> ?v2 . ?result <http://dbpedia.org/ontology/place> ?v3 . <http://dbpedia.org/resource/Lac_d'Avoriaz> <http://dbpedia.org/ontology/elevation> ?v1 . ?v2 <http://dbpedia.org/property/awards> ?v1 . <http://dbpedia.org/resource/Ekrem_Akurgal> <http://dbpedia.org/property/awards> ?v3 . },"```sparql
# Part 1: Find the force of the awardee of the elevation of Lac d'Avoriaz
SELECT ?force WHERE {
    ?award <http://dbpedia.org/ontology/awardedTo> ?person .
    ?award <http://dbpedia.org/property/reason> ""Lac d'Avoriaz"" .
    ?person <http://dbpedia.org/ontology/hasForce> ?force .
}

UNION

# Part 2: Find an entity in the award of Ekrem Akurgal
SELECT ?entity WHERE {
    ?award <http://dbpedia.org/ontology/awardedTo> <http://dbpedia.org/resource/Ekrem_Akurgal> .
    ?award <http://www.w3.org/2000/01/rdf-schema#member> ?entity .
}
```",5,5,6,3,2,3,2,20,0,0,4,0,0.0,0
328,55,test,"Give me the commander in the force of Ferenc Szálasi and leader of the office, that is a government agency, of Joseph Stalin and awardee of the award of Bruce Fraser, 1st Baron Fraser of North Cape.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Ferenc_Szálasi> . ?result <http://dbpedia.org/property/awards> ?v3 . <http://dbpedia.org/resource/Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape> <http://dbpedia.org/property/awards> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. <http://dbpedia.org/resource/Joseph_Stalin> <http://dbpedia.org/property/office> ?v2 . ?v5 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://dbpedia.org/ontology/leader> ?result . }","```sparql
SELECT ?entity WHERE {
    ?entity <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Ferenc_Szálasi>.
    ?office <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>;
            <http://dbpedia.org/ontology/leader> ?entity;
            <http://dbpedia.org/property/minister> <http://dbpedia.org/resource/Joseph_Stalin>.
    ?award <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>;
           <http://dbpedia.org/ontology/recipient> <http://dbpedia.org/resource/Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape>.
    ?entity <http://dbpedia.org/ontology/award> ?award.
}
```",6,7,7,2,3,3,3,71,0,0,1,0,0.0,0
959,32,test,"Give me the member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of Eiji Ōtsuka and native of the residence, that is a country, of Yōichi Masuzoe.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?result <http://dbpedia.org/ontology/team> ?v1 . ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . <http://dbpedia.org/resource/Yōichi_Masuzoe> <http://dbpedia.org/property/residence> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. <http://dbpedia.org/resource/Eiji_Ōtsuka> <http://dbpedia.org/ontology/almaMater> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
SELECT ?university WHERE {
  ?university <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organization> .
  ?university <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalOrganization> .
  ?university <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University> .
  ?university <http://dbpedia.org/property/country> <http://dbpedia.org/resource/Japan> .

  <http://dbpedia.org/resource/Eiji_Ōtsuka> <http://dbpedia.org/ontology/almaMater> ?university .

  ?member <http://dbpedia.org/ontology/memberOf> ?university .
  ?member <http://www.w3.org/2000/01/rdf-schema#label> ""Yōichi Masuzoe""@en .
  
  ?residence <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country> .
  ?residence <http://dbpedia.org/property/nationality> ?member .
}
```",4,9,5,2,2,3,3,71,0,0,84,0,0.0,0
232,60,test,"Give me the child of the person born as the birth name of Jon Pertwee and native of the residence, that is a settlement and British, of the native, that is a politician and an office holder, of France.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/France> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v0 <http://dbpedia.org/property/residence> ?v1 . <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/property/birthName> ?v3 . ?v2 <http://dbpedia.org/property/birthName> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. },"```sparql
# Step 1: Find Jon Pertwee's birth name
SELECT ?birthName WHERE {
    <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/ontology/birthName> ?birthName .
}

# Step 2: Find a person with the same birth name as Jon Pertwee
SELECT DISTINCT ?person WHERE {
    ?person <http://dbpedia.org/ontology/birthName> ?birthName .
    FILTER(?birthName = ""Jon Pertwee's Birth Name"") # Replace with actual birth name from Step 1
}

# Step 3: Find the residence of this person, ensuring it is a settlement and British
SELECT DISTINCT ?residence WHERE {
    ?person <http://dbpedia.org/ontology/residence> ?residence .
    ?residence <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement> .
    ?residence <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> .
}

# Step 4: Identify a native politician and office holder from France
SELECT DISTINCT ?native WHERE {
    ?native <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> ;
            <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/France> .
}

# Step 5: Determine their residence, ensuring it is a settlement and British
SELECT DISTINCT ?residence WHERE {
    ?native <http://dbpedia.org/ontology/residence> ?residence .
    ?residence <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement> .
    ?residence <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> .
}

# Step 6: Find the child of the person identified in Step 2
SELECT DISTINCT ?child WHERE {
    ?person <http://dbpedia.org/property/hasChild> ?child .
}
```

Note: Replace `""Jon Pertwee's Birth Name""` with the actual birth name obtained from Step 1. The query assumes that the necessary properties and relationships are available in DBpedia. Adjustments may be needed based on the actual data structure.",6,10,7,3,2,3,3,71,0,0,1,0,0.0,0
959,41,test,"Give me the native of the residence, that is a country, of Yōichi Masuzoe and member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of Eiji Ōtsuka and manager of 2013 Júbilo Iwata season.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v4 . <http://dbpedia.org/resource/Yōichi_Masuzoe> <http://dbpedia.org/property/residence> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Eiji_Ōtsuka> <http://dbpedia.org/ontology/almaMater> ?v2 . ?result <http://dbpedia.org/ontology/team> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. <http://dbpedia.org/resource/2013_Júbilo_Iwata_season> <http://dbpedia.org/ontology/manager> ?result . },"```sparql
# Step 1: Find the residence country of Yōichi Masuzoe
SELECT ?residenceCountry WHERE {
    <http://dbpedia.org/resource/Y%C5%8Dichi_Masuzoe> <http://dbpedia.org/property/residence> ?residence .
    ?residence <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country> .
}

# Step 2: Find the alma mater of Eiji Ōtsuka
SELECT ?almaMater WHERE {
    <http://dbpedia.org/resource/Eiji_%C5%8Csuka> <http://dbpedia.org/property/almaMater> ?almaMater .
    ?almaMater <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation> ;
               <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University> ;
               <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalOrganization> .
    ?almaMater <http://dbpedia.org/property/country> <http://dbpedia.org/resource/Japan> .
}

# Step 3: Find the manager of 2013 Júbilo Iwata season
SELECT ?manager WHERE {
    <http://dbpedia.org/resource/2013_J%C3%BAbilo_Iwata_season> <http://dbpedia.org/ontology/manager> ?manager .
}

# Final step: Find the native person associated with these entities
SELECT DISTINCT ?nativePerson WHERE {
    # Native of the residence country of Yōichi Masuzoe
    ?nativePerson <http://dbpedia.org/property/nationality> ?residenceCountry .

    # Member of the alma mater of Eiji Ōtsuka
    ?member <http://dbpedia.org/ontology/member> ?almaMater .
    ?member = ?nativePerson .

    # Manager of 2013 Júbilo Iwata season
    ?manager = ?nativePerson .
}
```",5,10,6,2,3,3,3,71,0,0,1,0,0.0,0
492,31,test,Give me the commander in Franco-Hova Wars and person decedent at the work of the author of French Algeria.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/author> ?v1 . ?result <http://dbpedia.org/ontology/deathPlace> ?v0 . <http://dbpedia.org/resource/French_Algeria> <http://dbpedia.org/property/author> ?v1 . <http://dbpedia.org/resource/Franco-Hova_Wars> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT ?commander WHERE {
  ?francoHovaWar <http://dbpedia.org/ontology/commander> ?commander .
  FILTER(STRSTARTS(LCASE(?francoHovaWar), ""franco-hova war""))

  ?author <http://dbpedia.org/property/writtenWork> ?work .
  FILTER(STRSTARTS(LCASE(?work), ""french algeria""))
  
  ?decedent <http://dbpedia.org/ontology/deathPlace> ?work .
  ?commander <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person> .

  FILTER(?commander = ?decedent)
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
378,69,test,"Give me the war of the person born as the birth name of Carl Pontus Gahn and war of the commander in Peninsular War and claim to fame of the commander in the war, that is a military conflict and a societal event and an event, of Thomas Trigge.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/commander> ?v2 . <http://dbpedia.org/resource/Peninsular_War> <http://dbpedia.org/ontology/commander> ?v7 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v7 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Thomas_Trigge> <http://dbpedia.org/ontology/battle> ?v1 . ?v3 <http://dbpedia.org/property/birthName> ?v4 . ?v3 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/property/birthName> ?v4 . ?v2 <http://dbpedia.org/ontology/knownFor> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"```sparql
# Step 1: Find Carl Pontus Gahn's birth name
SELECT ?birthName WHERE {
    <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://xmlns.com/foaf/0.1/name> ?birthName .
}

# Step 2: Find the war associated with Carl Pontus Gahn (using his birth name)
SELECT ?war WHERE {
    ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person> .
    ?person <http://xmlns.com/foaf/0.1/name> ?birthName .
    ?person <http://dbpedia.org/property/battle> ?war .
}

# Step 3: Find the commander in the Peninsular War
SELECT ?commander WHERE {
    <http://dbpedia.org/resource/Peninsular_War> <http://dbpedia.org/ontology/commander> ?commander .
}

# Step 4: Determine the claim to fame of this commander (a war and societal event)
SELECT ?claimToFame WHERE {
    ?commander <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
    ?commander <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent> .
    ?commander <http://dbpedia.org/ontology/knownFor> ?claimToFame .
}

# Step 5: Find the war associated with Thomas Trigge
SELECT ?war WHERE {
    <http://dbpedia.org/resource/Thomas_Trigge> <http://dbpedia.org/property/battle> ?war .
}

# Final Query: Combine all elements to find the desired result
SELECT DISTINCT ?resultWar WHERE {
    # War of Carl Pontus Gahn's birth name
    ?person1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person> .
    ?person1 <http://xmlns.com/foaf/0.1/name> ?birthName .
    ?person1 <http://dbpedia.org/property/battle> ?resultWar .

    # War of the commander in Peninsular War
    ?commander <http://dbpedia.org/ontology/commander> ?peninsularCommander .
    ?peninsularCommander <http://dbpedia.org/property/battle> ?resultWar .

    # Claim to fame of the commander (a war and societal event)
    ?peninsularCommander <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
    ?peninsularCommander <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent> .
    ?peninsularCommander <http://dbpedia.org/ontology/knownFor> ?claimToFame .

    # War of Thomas Trigge
    <http://dbpedia.org/resource/Thomas_Trigge> <http://dbpedia.org/property/battle> ?resultWar .
}
```",8,11,9,3,3,3,3,71,0,0,2,0,0.0,0
391,63,test,"Give me the native of the figure known as the nick name of Jackson, Tennessee and actor of the claim to fame, that is a work, of Michael Ballhaus and actor of the movie, that is a movie and a work and a television show, with Roz Ryan.","SELECT ?result WHERE { <http://dbpedia.org/resource/Michael_Ballhaus> <http://dbpedia.org/ontology/knownFor> ?v6 . <http://dbpedia.org/resource/Jackson,_Tennessee> <http://xmlns.com/foaf/0.1/nick> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v2 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Roz_Ryan> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://dbpedia.org/property/nickname> ?v4 . ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v2 <http://dbpedia.org/property/starring> ?result . ?v6 <http://dbpedia.org/ontology/starring> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. }","```sparql
# Step 1: Find the nickname for Jackson, Tennessee
SELECT ?nickname WHERE {
    <http://dbpedia.org/resource/Jackson,_Tennessee> <http://dbpedia.org/ontology/nickName> ?nickname .
}

# Step 2: Identify works associated with Michael Ballhaus and find actors linked to those works
SELECT DISTINCT ?actor WHERE {
    ?work <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film> ;
          <http://dbpedia.org/property/director> <http://dbpedia.org/resource/Michael_Ballhaus> .
    ?actor <http://dbpedia.org/ontology/starring> ?work .
}

# Step 3: Locate movies that are also classified as works and television shows involving Roz Ryan
SELECT DISTINCT ?movie WHERE {
    ?movie <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film> ;
           <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work> ;
           <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TVSeries> .
    ?movie <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Roz_Ryan> .
}

# Step 4: Find the native of the actor who fits all these criteria
SELECT DISTINCT ?native WHERE {
    ?actor <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Actor> ;
           <http://dbpedia.org/property/nationality> ?nationality .
    ?actor <http://dbpedia.org/ontology/starring> ?work1, ?work2 .
    ?work1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film> ;
           <http://dbpedia.org/property/director> <http://dbpedia.org/resource/Michael_Ballhaus> .
    ?work2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film> ;
           <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work> ;
           <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TVSeries> ;
           <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Roz_Ryan> .
    ?actor <http://dbpedia.org/ontology/nationality> ?nationality .
    ?nationality <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement> ;
                 <http://dbpedia.org/property/nickName> ?nickname .
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
701,56,test,"Give me the parent of Henuttawy (19th dynasty) and parent of the child of Nefertari and spouse of the father of the commander, that is a royalty, in Battle of Perire.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Nefertari> <http://dbpedia.org/ontology/child> ?v2 . <http://dbpedia.org/resource/Battle_of_Perire> <http://dbpedia.org/ontology/commander> ?v0 . ?result <http://dbpedia.org/ontology/spouse> ?v1 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Henuttawy_(19th_dynasty)> . ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/property/father> ?v1 . },"```sparql
# Step 1: Find parent of Henuttawy (19th dynasty)
SELECT ?henuttawyParent WHERE {
    ?henuttawy dbo:parent ?henuttawyParent .
    ?henuttawy dbo:era ""19th dynasty"" .
}

# Step 2: Find child of Nefertari
SELECT ?nefertariChild WHERE {
    ?nefertari dbo:child ?nefertariChild .
    ?nefertari rdfs:label ""Nefertari""@en .
}

# Step 3: Find spouse of the father of the commander in Battle of Perire
SELECT ?spouse WHERE {
    ?battle dbo:commander ?commander .
    ?battle rdfs:label ""Battle of Perire""@en .
    
    ?commander dbo:father ?commanderFather .
    ?commanderFather dbo:spouse ?spouse .
}

# Step 4: Find parent who is royalty for both the child of Nefertari and the spouse
SELECT DISTINCT ?parent WHERE {
    # Parent of the child of Nefertari
    ?nefertariChild dbo:parent ?parent .
    
    # Parent of the spouse (who must be royalty)
    ?spouse dbo:parent ?parent .
    ?parent rdf:type <http://dbpedia.org/ontology/Royalty> .

    # Bind variables from previous queries
    VALUES (?nefertariChild) { (<URI_of_Nefertari_Child>) }
    VALUES (?spouse) { (<URI_of_Spouse>) }
}
```

Note: Replace `<URI_of_Nefertari_Child>` and `<URI_of_Spouse>` with the actual URIs obtained from steps 2 and 3.",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
959,67,test,"Give me the native of the residence, that is a country, of the leader, that is a politician, of 2010 Japanese House of Councillors election and manager of the team of the manager, that is a sports manager, of 1998 Kashima Antlers season and member of University of Tsukuba.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://dbpedia.org/property/residence> ?v5 . ?result <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/University_of_Tsukuba> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v0 <http://dbpedia.org/ontology/manager> ?v4 . ?result <http://dbpedia.org/ontology/birthPlace> ?v5 . <http://dbpedia.org/resource/2010_Japanese_House_of_Councillors_election> <http://dbpedia.org/property/leader> ?v1 . <http://dbpedia.org/resource/1998_Kashima_Antlers_season> <http://dbpedia.org/ontology/manager> ?v4 . },"```sparql
SELECT ?native
WHERE {
  # Step 1: Identify the leader (politician) of the 2010 Japanese House of Councillors election
  ?leader <http://dbpedia.org/ontology/politician> _:a .
  ?leader <http://dbpedia.org/property/role> ""Leader"" .
  ?leader <http://dbpedia.org/property/election> <http://dbpedia.org/resource/2010_Japanese_House_of_Councillors_election> .

  # Step 2: Determine the residence (country) of that leader
  ?leader <http://dbpedia.org/ontology/residence> ?residence .
  ?residence <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country> .

  # Step 3: Find the native of that country
  ?native <http://dbpedia.org/property/nativePlace> ?residence .

  # Step 4: Identify the manager (sports manager) of the 1998 Kashima Antlers season
  ?manager <http://dbpedia.org/ontology/sportsManager> _:b .
  ?manager <http://dbpedia.org/",7,10,8,3,3,3,3,71,0,0,2,0,0.0,0
184,60,test,"Give me the parent of the child of the parent of Archduchess Margaret of Austria (born 1925) and parent of the native of the landmark at elevation, that is a settlement, of 96.0.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v3 <http://dbpedia.org/ontology/elevation> ""96.0""^^<http://www.w3.org/2001/XMLSchema#double> . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Margaret_of_Austria_(born_1925)> . ?result <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v1 <http://dbpedia.org/property/father> ?v0 . }","```sparql
SELECT ?finalParent WHERE {
  # Step 1: Find Archduchess Margaret of Austria (born 1925) and her parent
  ?margaret dbo:birthYear ""1925""^^xsd:gYear .
  ?margaret rdfs:label ""Archduchess Margaret of Austria""@en .
  ?margaret dbo:parent ?parent1 .

  # Step 2: Find the child of that parent
  ?child dbo:parent ?parent1 .

  # Step 3: Determine the parent of this child
  ?parent2 dbo:child ?child .

  # Step 4: Identify a landmark at an elevation of 96.0 meters, which is also a settlement
  ?landmark dbo:elevation ""96.0""^^xsd:float .
  ?landmark rdf:type dbo:Settlement .

  # Step 5: Find the native of this landmark
  ?native dbo:nativePlace ?landmark .

  # Step 6: Identify the parent of this native
  ?finalParent dbo:child ?native .
}
```",6,7,7,3,2,3,3,71,0,0,2,0,0.0,0
747,23,test,"Give me the person born on the birth date of the person decedent, that is an athlete and a soccer player, at Zolotonosha.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Zolotonosha> . ?result <http://dbpedia.org/ontology/birthDate> ?v0 . ?v2 <http://dbpedia.org/ontology/birthDate> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. },"```sparql
SELECT ?person WHERE {
  ?person a <http://dbpedia.org/ontology/Athlete> ;
          a <http://dbpedia.org/ontology/SoccerPlayer> .
  
  ?decedent <http://dbpedia.org/ontology/deathDate> ?deathDate ;
            <http://dbpedia.org/ontology/birthDate> ?birthDate .

  ?person <http://dbpedia.org/ontology/birthDate> ?birthDate .

  OPTIONAL { 
    ?person <http://dbpedia.org/property/residence> ?zolotonosha .
    FILTER (CONTAINS(LCASE(STR(?zolotonosha)), ""zolotonosha""))
  }
}
```",3,5,4,3,1,3,3,71,8,79436,22,0.00010069986405518353,0.26666666666666666,0.0002013237033495231
16,53,test,Give me the person born as the birth name of Gigi Rice and spouse of the person born as the birth name of Ted McGinley and professional in Actress.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ?v3 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Gigi_Rice> <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/property/occupation> ""Actress""@en . ?result <http://dbpedia.org/property/birthName> ?v1 . }","```sparql
SELECT ?person WHERE {
  # Step 1: Find the birth name of Gigi Rice
  <http://dbpedia.org/resource/Gigi_Rice> <http://dbpedia.org/ontology/birthName> ?birthNameGigiRice .

  # Step 2: Find Ted McGinley's birth name and his spouse who is also an actress
  ?person <http://dbpedia.org/ontology/birthName> ?birthNameTedMcGinley .
  ?person <http://dbpedia.org/property/spouse> ?spouse .
  
  # Ensure the person with Ted McGinley's birth name has a spouse who is also Gigi Rice
  FILTER(?birthNameTedMcGinley = ?birthNameGigiRice)

  # Step 3: Check if this spouse is an actress
  ?spouse <http://dbpedia.org/ontology/profession> <http://dbpedia.org/resource/Actress> .
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
281,44,test,"Give me the war of the profession, that is a military unit, of Heather Roy and entity in the birth place, that is a country, of Bob Heffron and war of Beauchamp Seymour, 1st Baron Alcester.","SELECT ?result WHERE { <http://dbpedia.org/resource/Beauchamp_Seymour,_1st_Baron_Alcester> <http://dbpedia.org/ontology/battle> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Heather_Roy> <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/Bob_Heffron> <http://dbpedia.org/ontology/birthPlace> ?v4 . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?result <http://dbpedia.org/ontology/place> ?v4 . }","```sparql
# Step 1: Get Heather Roy's profession which is a military unit
SELECT ?profession WHERE {
    <http://dbpedia.org/resource/Heather_Roy> <http://dbpedia.org/ontology/profession> ?profession .
    ?profession <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit> .
}

# Step 2: Get the country of birth for Bob Heffron
SELECT ?country WHERE {
    <http://dbpedia.org/resource/Bob_Heffron> <http://dbpedia.org/property/birthPlace> ?place .
    ?place <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country> .
}

# Step 3: Get the war associated with Beauchamp Seymour, 1st Baron Alcester
SELECT ?war WHERE {
    <http://dbpedia.org/resource/Beauchamp_Seymour,_1st_Baron_Alcester> <http://dbpedia.org/ontology/war> ?war .
}

# Step 4: Find wars related to Heather Roy's military unit profession
SELECT DISTINCT ?war WHERE {
    ?profession <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit> .
    ?profession <http://dbpedia.org/ontology/war> ?war .
}

# Step 5: Find entities in the country where Bob Heffron was born
SELECT DISTINCT ?entity WHERE {
    ?place <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country> .
    ?entity <http://dbpedia.org/property/country> ?place .
}

# Step 6: Find wars related to entities in Bob Heffron's birth country
SELECT DISTINCT ?war WHERE {
    ?entity <http://dbpedia.org/property/country> ?country .
    ?entity <http://dbpedia.org/ontology/war> ?war .
}

# Final step: Combine results to find common wars
SELECT DISTINCT ?commonWar WHERE {
    VALUES ?heatherRoyWar { ?heatherRoyWar1 ... } # Replace with actual values from Step 4
    VALUES ?beauchampSeymourWar { ?beauchampSeymourWar1 ... } # Replace with actual values from Step 3
    VALUES ?entityWar { ?entityWar1 ... } # Replace with actual values from Step 6

    FILTER (?commonWar IN(?heatherRoyWar, ?beauchampSeymourWar, ?entityWar))
}
```",5,7,6,2,3,3,3,71,0,0,1,0,0.0,0
294,21,test,"Give me the resting place of Edwin A. Keeble and resting place of Luke Lea (American politician, born 1879) and entity in the birth place, that is a settlement, of Marion James.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/location> ?v0 . <http://dbpedia.org/resource/Luke_Lea_(American_politician,_born_1879)> <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Marion_James> <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Edwin_A._Keeble> <http://dbpedia.org/ontology/restingPlace> ?result . }","```sparql
SELECT ?restingPlaceEdwinAkeebles ?restingPlaceLukeLea ?entityInBirthPlaceMarionJames WHERE {
  # Resting place of Edwin A. Keeble
  dbpedia:Edwin_A._Keeble dbo:restingPlace ?restingPlaceEdwinAkeebles .

  # Resting place of Luke Lea (American politician, born 1879)
  dbpedia:Luke_Lea_(American_politician,_born_1879) dbo:restingPlace ?restingPlaceLukeLea .

  # Birthplace of Marion James
  dbpedia:Marion_James dbo:birthPlace ?birthPlaceMarionJames .
  
  # Ensure the birthplace is a settlement
  ?birthPlaceMarionJames rdf:type dbo:Settlement .

  # Find entities in the birthplace of Marion James
  ?entityInBirthPlaceMarionJames dbo:location ?birthPlaceMarionJames .
}
```",4,5,5,2,3,2,3,28,0,0,1,0,0.0,0
328,69,test,"Give me the commander in the force of Ferenc Szálasi and awardee of the award of the commander in Volcano and Ryukyu Islands campaign and leader of the office, that is a government agency, of the leader, that is an office holder and a politician, of Gustav Jonson.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ?v3 . ?v1 <http://dbpedia.org/property/office> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v7 <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://dbpedia.org/property/awards> ?v3 . <http://dbpedia.org/resource/Gustav_Jonson> <http://dbpedia.org/property/leader> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Volcano_and_Ryukyu_Islands_campaign> <http://dbpedia.org/ontology/commander> ?v4 . ?v2 <http://dbpedia.org/ontology/leader> ?result . ?v7 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Ferenc_Szálasi> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
SELECT ?commander WHERE {
  ?szalasi <http://dbpedia.org/ontology/commander> ?force.
  ?force <http://dbpedia.org/property/member> ?commander.
  
  ?campaign <http://dbpedia.org/ontology/campaign> <http://dbpedia.org/resource/Volcano_and_Ryukyu_Islands_campaign>.
  ?campaign <http://dbpedia.org/ontology/commander> ?volcanoCommander.
  ?award <http://dbpedia.org/property/awardee> ?volcanoCommander.
  
  ?jonson <http://dbpedia.org/ontology/politician> true;
          <http://dbpedia.org/ontology/officeHolder> true.
  ?agency <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>;
          <http://dbpedia.org/property/leader> ?jonson.
  
  ?commander = ?volcanoCommander;
              <http://dbpedia.org/ontology/officeHolder> true;
              <http://dbpedia.org/ontology/politician> true.
}
```",8,11,9,3,3,3,3,71,0,0,1,0,0.0,0
617,32,test,"Give me the child of the child, that is a royalty, of Seleucus II Callinicus and spouse of the child of Antiochus III the Great.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Antiochus_III_the_Great> <http://dbpedia.org/ontology/child> ?v3 . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seleucus_II_Callinicus> . },"```sparql
SELECT ?grandchild ?spouse WHERE {
  # Seleucus II Callinicus's child
  ?child1 dbo:parent <http://dbpedia.org/resource/Seleucus_II_Callinicus> .
  
  # Grandchild of Seleucus II Callinicus who is royalty
  ?grandchild dbo:parent ?child1 ;
              a dbo:Royalty .

  # Antiochus III the Great's child
  ?spouseParent dbo:parent <http://dbpedia.org/resource/Antiochus_III_the_Great> .
  
  # Spouse of the grandchild who is also a child of Antiochus III
  ?grandchild dbo:spouse ?spouse ;
              ?spouse dbo:parent ?spouseParent .
}
```",4,5,5,2,2,3,3,71,0,0,4,0,0.0,0
392,27,test,"Give me the province of the residence, that is a settlement and Italian, of Sebastiano Bianchetti and region of the time zone, that is a sports event, of Aguilar de Segarra and entity in Italy.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsEvent>. ?result <http://dbpedia.org/ontology/timeZone> ?v3 . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. <http://dbpedia.org/resource/Aguilar_de_Segarra> <http://dbpedia.org/ontology/timeZone> ?v3 . ?v2 <http://dbpedia.org/ontology/province> ?result . <http://dbpedia.org/resource/Sebastiano_Bianchetti> <http://dbpedia.org/property/residence> ?v2 . },"```sparql
SELECT ?province ?region ?entity WHERE {
  # Step 1: Find the residence of Sebastiano Bianchetti that is a settlement and Italian
  ?residence <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy> .
  ?residence <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement> .
  <http://dbpedia.org/resource/Sebastiano_Bianchetti> <http://dbpedia.org/property/residence> ?residence .

  # Step 2: Get the province of the residence
  ?residence <http://dbpedia.org/ontology/province> ?province .

  # Step 3: Find the time zone associated with a sports event related to Aguilar de Segarra
  ?event <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsEvent> .
  ?event <http://dbpedia.org/property/location> <http://dbpedia.org/resource/Aguilar_de_Segarra> .
  ?event <http://dbpedia.org/ontology/timeZone> ?timeZone .

  # Step 4: Get the region of the time zone
  ?timeZone <http://dbpedia.org/ontology/region> ?region .

  # Step 5: Find an entity in Italy
  ?entity <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy> .
}
```",5,8,6,2,3,2,3,28,0,0,1,0,0.0,0
427,60,test,"Give me the reference to the name of the party of Michele Pinto and party of the person born, that is an office holder and a politician, as the birth name of Romano Prodi.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . <http://dbpedia.org/resource/Michele_Pinto> <http://dbpedia.org/ontology/party> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/ontology/party> ?result . ?v3 <http://xmlns.com/foaf/0.1/name> ?v2 . <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/property/birthName> ?v0 . },"```sparql
SELECT ?micheleParty (GROUP_CONCAT(DISTINCT ?person) AS ?personsWithBirthName) 
WHERE {
  # Get the party of Michele Pinto
  <http://dbpedia.org/resource/Michele_Pinto> <http://dbpedia.org/ontology/party> ?micheleParty .

  # Get the birth name of Romano Prodi
  <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/property/birthName> ?birthName .

  # Find office holders or politicians with that birth name and get their parties
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> (<http://dbpedia.org/ontology/OfficeHolder> | <http://dbpedia.org/ontology/Politician>) .
  ?person <http://dbpedia.org/property/birthName> ?birthName .
  ?person <http://dbpedia.org/ontology/party> ?party .

  # Ensure the person is distinct
  FILTER(?person != <http://dbpedia.org/resource/Romano_Prodi>)
}
GROUP BY ?micheleParty
```",6,8,7,3,2,3,3,71,0,0,2,0,0.0,0
404,26,test,"Give me the parent of the child, that is a royalty, of the parent, that is a royalty, of Prince George William of Hanover.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Prince_George_William_of_Hanover> <http://dbpedia.org/ontology/parent> ?v1 . ?v1 <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/ontology/child> ?v2 . },"```sparql
SELECT ?grandparent WHERE {
  # Step 1: Find the parent of Prince George William of Hanover who is royalty
  <http://dbpedia.org/resource/Prince_George_William_of_Hanover> <http://dbpedia.org/ontology/father> ?parent .
  
  # Ensure the parent is a member of royalty
  ?parent <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .

  # Step 2: Find the child (royalty) of that parent
  ?parent <http://dbpedia.org/ontology/child> ?child .
  
  # Ensure the child is a member of royalty
  ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .

  # Step 3: Find the parent of that child
  ?child <http://dbpedia.org/ontology/father|<http://dbpedia.org/ontology/mother>> ?grandparent .
  
  # Ensure the grandparent is a member of royalty
  ?grandparent <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
}
```",3,5,4,3,1,3,3,71,0,0,2,0,0.0,0
767,57,test,Give me the entity in Baden-Württemberg and reference to the alter ego of Black Hood and alma mater of the administration of the reference to George Kilbon Nash.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Black_Hood> <http://dbpedia.org/property/alterEgo> ?v3 . ?v0 <http://xmlns.com/foaf/0.1/name> ""George Kilbon Nash""@en . ?result <http://dbpedia.org/ontology/state> <http://dbpedia.org/resource/Baden-Württemberg> . ?v5 <http://dbpedia.org/property/governor> ?v0 . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . ?v5 <http://dbpedia.org/ontology/almaMater> ?result . }","```sparql
SELECT ?entity WHERE {
  # Entity located in Baden-Württemberg
  ?entity <http://dbpedia.org/ontology/location> ?location .
  ?location <http://www.w3.org/2000/01/rdf-schema#label> ""Baden-Württemberg""@en .

  # Reference to the alter ego of Black Hood
  OPTIONAL {
    ?blackHood <http://dbpedia.org/property/alterEgo> ?entity .
    ?blackHood <http://www.w3.org/2000/01/rdf-schema#label> ""Black Hood""@en .
  }

  # Alma mater of the administration related to George Kilbon Nash
  OPTIONAL {
    ?admin <http://dbpedia.org/ontology/administration> ?entity .
    ?admin <http://dbpedia.org/property/almaMater> ?almaMater .
    ?nash <http://www.w3.org/2000/01/rdf-schema#label> ""George Kilbon Nash""@en .
    ?admin <http://dbpedia.org/ontology/reference> ?nash .
  }
}
```",6,6,7,3,3,3,3,71,0,201,1,0.0,0.0,0
994,68,test,"Give me the associated musical artist of the band member, that is a band and a group and an organisation, of the band, that is an organisation, of Fredrik Thordendal and band member of the person born, that is a musical artist, as Donald Maynard Dokken and associated musical artist of the associated musical artist of the reference to Watchtower.","SELECT ?result WHERE { ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v6 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v6 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v0 <http://dbpedia.org/property/birthName> ""Donald Maynard Dokken""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Fredrik_Thordendal> . ?v4 <http://xmlns.com/foaf/0.1/name> ""Watchtower""@en . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. }","```sparql
SELECT ?associatedArtist
WHERE {
  ?band a <http://dbpedia.org/ontology/Band> ;
        a <http://dbpedia.org/ontology/Organisation> ;
        <http://dbpedia.org/property/member> <http://dbpedia.org/resource/Fredrik_Thordendal>.

  ?member a <http://dbpedia.org/ontology/MusicalArtist> ;
          <http://dbpedia.org/ontology/birthName> ""Donald Maynard Dokken""^^<http://www.w3.org/2001/XMLSchema#string> ;
          <http://dbpedia.org/property/member> ?band.

  ?member <http://dbpedia.org/ontology/associatedMusicalArtist> ?artist.

  ?artist rdfs:label ""Watchtower""@en .

  ?artist <http://dbpedia.org/ontology/associatedMusicalArtist> ?associatedArtist.
}
```",8,13,9,3,3,3,3,71,0,0,1,0,0.0,0
391,22,test,"Give me the native of Compton, California and actor of the movie, that is a movie and a work and a television show, with Roz Ryan.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Roz_Ryan> . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Compton,_California> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://dbpedia.org/property/starring> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. }","```sparql
SELECT ?actor WHERE {
  ?actor <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Compton,_California>.
  ?actor <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Actor>.
  ?project <http://purl.org/dc/terms/contributor> <http://dbpedia.org/resource/Roz_Ryan>.
  ?project <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>.
  ?project <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>.
  ?project <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TVSeries>.
  ?actor <http://dbpedia.org/ontology/performedIn> ?project.
}
```",3,6,4,2,2,3,3,71,0,0,1,0,0.0,0
232,46,test,"Give me the actor of the claim to fame, that is a film and a military conflict, of Sean Pertwee and child of the person born as the birth name of Jon Pertwee.",SELECT ?result WHERE { <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Sean_Pertwee> <http://dbpedia.org/ontology/knownFor> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://dbpedia.org/property/birthName> ?v2 . ?v1 <http://dbpedia.org/ontology/child> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v4 <http://dbpedia.org/ontology/starring> ?result . },"```sparql
# Step 1: Find Sean Pertwee's claim to fame that is both a film and a military conflict.
SELECT ?filmConflict WHERE {
    ?filmConflict <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>.
    ?filmConflict <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>.
    <http://dbpedia.org/resource/Sean_Pertwee> <http://dbpedia.org/ontology/knownFor> ?filmConflict.
}

# Step 2: Find Jon Pertwee's birth name.
SELECT ?birthName WHERE {
    <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/property/birthName> ?birthName.
}

# Step 3: Determine the person born with Jon Pertwee's birth name (i.e., his child).
SELECT ?child WHERE {
    ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>.
    ?person <http://dbpedia.org/property/birthName> ?birthName.
    FILTER(?birthName = ""Jon Pertwee"") # Assuming the birth name is directly used as a filter
}

# Step 4: Find the actor of the identified film from step 1.
SELECT ?actor WHERE {
    ?filmConflict <http://dbpedia.org/ontology/starring> ?actor.
}
```

Note: This query assumes that DBpedia has direct links for these relationships and properties. Adjustments may be needed based on actual data availability in DBpedia.",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
701,67,test,"Give me the parent of Meritamen and spouse of the father of the commander, that is a royalty, in Battle of Perire and parent of the child of the child of Seti I.",SELECT ?result WHERE { <http://dbpedia.org/resource/Meritamen> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/spouse> ?v3 . <http://dbpedia.org/resource/Battle_of_Perire> <http://dbpedia.org/ontology/commander> ?v1 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seti_I> . ?result <http://dbpedia.org/ontology/child> ?v6 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> ?v3 . ?v6 <http://dbpedia.org/property/father> ?v0 . },"```sparql
SELECT ?person WHERE {
  # Step 1: Identify the commander in the Battle of Perire
  ?battle dbpedia-owl:commander ?commander .
  FILTER(STR(?battle) = ""Battle_of_Perire"") .

  # Step 2: Determine the father of that commander
  ?father dbpedia-owl:child ?commander .

  # Step 3: Find the spouse of the father identified in step 2
  ?spouse dbpedia-owl:spouse ?father .

  # Step 4: Ensure this person is also a royalty and parent of Meritamen
  ?spouse rdf:type dbo:Royalty .
  ?spouse dbpedia-owl:parent ?meritamen .
  FILTER(STR(?meritamen) = ""Meritamen"") .

  # Step 5: Verify that this person is the parent of the child of the child of Seti I
  ?setiI dbpedia-owl:child ?grandchild1 .
  ?grandchild1 dbpedia-owl:child ?grandchild2 .
  FILTER(STR(?setiI) = ""Seti_I"") .
  ?spouse dbpedia-owl:parent ?grandchild2 .

  # Return the person who satisfies all conditions
  BIND(?spouse AS ?person)
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
659,42,test,"Give me the military force of the force, that is a societal event and an event and a military conflict, of Rutger Jan Schimmelpenninck and commander in Battle of Leipzig and commander in the force of Arthur Wellesley, 1st Duke of Wellington.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Arthur_Wellesley,_1st_Duke_of_Wellington> . <http://dbpedia.org/resource/Battle_of_Leipzig> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","```sparql
SELECT ?result WHERE {
  ?result a <http://dbpedia.org/ontology/MilitaryConflict> .
  ?result a <http://dbpedia.org/ontology/SocietalEvent> .
  ?result a <http://dbpedia.org/ontology/Event> .

  OPTIONAL { 
    <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> <http://dbpedia.org/ontology/battle> ?result . 
  }

  OPTIONAL {
    <http://dbpedia.org/resource/Battle_of_Leipzig> <http://dbpedia.org/ontology/commander> ?v1 .
    ?v1 <http://dbpedia.org/ontology/battle> ?result .
  }

  OPTIONAL {
    <http://dbpedia.org/resource/Arthur_Wellesley,_1st_Duke_of_Wellington> <http://dbpedia.org/ontology/commander> ?v2 .
    ?v2 <http://dbpedia.org/ontology/militaryForce> ?force .
    ?result <http://dbpedia.org/ontology/militaryForce> ?force .
  }
}
```",5,8,6,2,3,3,3,71,0,18704,6,0.0,0.0,0
547,23,test,Give me the resting place of the child of the child of William Haliburton.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://dbpedia.org/ontology/restingPlace> ?result . ?v2 <http://dbpedia.org/property/father> ""William Haliburton""@en . }","```sparql
SELECT ?grandchildRestingPlace WHERE {
    # Step 1: Find children of William Haliburton
    ?child a dbo:Child ;
           dbo:parent <http://dbpedia.org/resource/William_Haliburton> .

    # Step 2: For each child, find their children (i.e., grandchildren of William Haliburton)
    ?grandchild a dbo:Child ;
                dbo:parent ?child .

    # Step 3: Find the resting place for each grandchild
    OPTIONAL { ?grandchild dbo:finalRestingPlace ?grandchildRestingPlace }
}
```",3,3,4,3,1,3,3,71,0,0,2,0,0.0,0
314,28,test,"Give me the commander in the profession, that is an event and a societal event, of Lisa Gavrić and awardee of the award of Sergei Makovetsky and person deceased at the headquarter of House of Sombrerete.",SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/House_of_Sombrerete> <http://dbpedia.org/ontology/location> ?v1 . ?result <http://dbpedia.org/ontology/restingPlace> ?v1 . ?v5 <http://dbpedia.org/ontology/commander> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Sergei_Makovetsky> <http://dbpedia.org/property/awards> ?v3 . ?result <http://dbpedia.org/property/awards> ?v3 . <http://dbpedia.org/resource/Lisa_Gavrić> <http://dbpedia.org/property/occupation> ?v5 . },"```sparql
SELECT ?commander WHERE {
  ?event <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>.
  ?event <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>.
  ?commander <http://dbpedia.org/ontology/commander> ?event.
  
  ?profession <http://purl.org/dc/terms/contributor> <http://dbpedia.org/resource/Lisa_Gavrić>.
  ?commander <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?profession.

  ?award <http://dbpedia.org/ontology/awardee> ?commander.
  ?award <http://purl.org/dc/terms/contributor> <http://dbpedia.org/resource/Sergei_Makovetsky>.

  ?deathEvent <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Death>.
  ?deathEvent <http://dbpedia.org/property/location> <http://dbpedia.org/resource/House_of_Sombrerete>.
  ?deathEvent <http://dbpedia.org/property/person> ?commander.
}
```",6,8,7,2,3,2,3,28,0,0,1,0,0.0,0
184,35,test,Give me the parent of the child of Archduke Joseph Francis of Austria and parent of the native of Budapest.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v2 . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Francis_of_Austria> . ?result <http://dbpedia.org/ontology/child> ?v1 . ?v2 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Budapest> . },"```sparql
SELECT ?parent WHERE {
  # Find the parent of a child of Archduke Joseph Francis of Austria
  ?child <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/Archduke_Joseph_Francis_of_Austria> .
  ?child <http://dbpedia.org/ontology/birthParent> ?parent .

  # Find the parent of someone whose native place is Budapest
  OPTIONAL {
    ?native <http://dbpedia.org/property/nativePlace> <http://dbpedia.org/resource/Budapest> .
    ?native <http://dbpedia.org/ontology/birthParent> ?parent .
  }

  FILTER EXISTS { ?child <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/Archduke_Joseph_Francis_of_Austria> }
}
```",4,4,5,2,2,3,3,71,0,0,2,0,0.0,0
801,55,test,"Give me the associated musical artist of the writer, that is a musical artist and an artist, of 40 Dayz & 40 Nightz and producer of the work, that is a musical work and a song and a work, of 50 Cent and professional in the alter ego of The Shadow.",SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v5 <http://dbpedia.org/ontology/producer> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v5 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/50_Cent> . <http://dbpedia.org/resource/40_Dayz_&_40_Nightz> <http://dbpedia.org/property/writer> ?v2 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v3 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v3 . },"```sparql
SELECT ?associatedArtist WHERE {
  ?writer rdf:type dbo:MusicalArtist ;
          dbo:artistType dbo:Artist ;
          dbo:work ""40 Dayz & 40 Nightz"" .
  
  ?producer rdf:type dbo:MusicalWork, dbo:Song ;
            dbo:artist 50 Cent ;
            dbo:producer ?shadowAlias .

  ?shadowAlias rdfs:label ""The Shadow""@en .

  ?writer dbo:associatedWith ?associatedArtist .
}
```",6,11,7,2,3,3,3,71,0,0,1,0,0.0,0
488,42,test,Give me the death place of Tokugawa Ieyasu and administration of the father of Emperor Go-Mizunoo and birth place of the commander in Boshin War.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> ?v1 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Tokugawa_Ieyasu> <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Boshin_War> <http://dbpedia.org/ontology/commander> ?v2 . <http://dbpedia.org/resource/Emperor_Go-Mizunoo> <http://dbpedia.org/property/father> ?v1 . },"```sparql
SELECT ?deathPlace ?administration ?birthPlace WHERE {
  # Death place of Tokugawa Ieyasu
  OPTIONAL {
    <http://dbpedia.org/resource/Tokugawa_Ieyasu> <http://dbpedia.org/ontology/deathPlace> ?deathPlace .
  }
  
  # Administration of the father of Emperor Go-Mizunoo
  OPTIONAL {
    <http://dbpedia.org/resource/Emperor_Go-Mizunoo> <http://dbpedia.org/ontology/father> ?father .
    ?father <http://dbpedia.org/property/administration> ?administration .
  }
  
  # Birth place of the commander in Boshin War
  OPTIONAL {
    <http://dbpedia.org/resource/Boshin_War> <http://dbpedia.org/ontology/commander> ?commander .
    ?commander <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  }
}
```",5,5,6,2,3,3,3,71,1,15,0,0.0625,1.0,0.11764705882352941
528,46,test,"Give me the war of the commander in Battle of La Rinconada de Ate and war of the military force of the entity, that is a societal event, in Chile.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/battle> ?v2 . ?v1 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Battle_of_La_Rinconada_de_Ate> <http://dbpedia.org/ontology/commander> ?v4 . ?v2 <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Chile> . ?v4 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
# Query for the first condition: War of the commander in Battle of La Rinconada de Ate
SELECT ?war1 WHERE {
  ?battle <http://dbpedia.org/ontology/commander> ?commander .
  ?commander <http://dbpedia.org/ontology/battle> ?war1 .
  FILTER(?battle = <http://dbpedia.org/resource/Battle_of_La_Rinconada_de_Ate>)
}

UNION

# Query for the second condition: War of the military force in a societal event in Chile
SELECT ?war2 WHERE {
  ?event <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent> .
  ?event <http://dbpedia.org/property/country> <http://dbpedia.org/resource/Chile> .
  ?event <http://dbpedia.org/ontology/militaryForce> ?militaryForce .
  ?militaryForce <http://dbpedia.org/ontology/battle> ?war2 .
}
```",5,6,6,3,2,3,3,71,0,0,14,0,0.0,0
701,52,test,Give me the parent of the child of the spouse of Amun-her-khepeshef and spouse of Ramesses II and parent of the child of Ramesses II.,SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ramesses_II> . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Ramesses_II> . ?result <http://dbpedia.org/ontology/child> ?v5 . ?v3 <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Amun-her-khepeshef> <http://dbpedia.org/ontology/spouse> ?v3 . },"```sparql
SELECT ?parent
WHERE {
    # Step 1: Identify Amun-her-khepeshef's spouse
    <http://dbpedia.org/resource/Amun-her-khepeshef> <http://dbpedia.org/ontology/spouse> ?spouse .

    # Step 2: Find the child of Amun-her-khepeshef and their spouse
    ?child <http://www.w3.org/2000/01/rdf-schema#parent> ?spouse .
    ?child <http://www.w3.org/2000/01/rdf-schema#parent> <http://dbpedia.org/resource/Amun-her-khepeshef> .

    # Step 3: Determine the parent of that child
    OPTIONAL { ?parent1 <http://www.w3.org/2000/01/rdf-schema#child> ?child . }

    # Step 4: Identify Ramesses II's spouse who is also Amun-her-khepeshef's spouse
    <http://dbpedia.org/resource/Ramesses_II> <http://dbpedia.org/ontology/spouse> ?sharedSpouse .
    FILTER(?spouse = ?sharedSpouse)

    # Step 5: Find the child of Ramesses II and this shared spouse
    ?child2 <http://www.w3.org/2000/01/rdf-schema#parent> ?sharedSpouse .
    ?child2 <http://www.w3.org/2000/01/rdf-schema#parent> <http://dbpedia.org/resource/Ramesses_II> .

    # Step 6: Determine the parent of that child
    OPTIONAL { ?parent2 <http://www.w3.org/2000/01/rdf-schema#child> ?child2 . }

    # Step 7: Find the parent of the identified parent from step 3
    OPTIONAL { ?finalParent <http://www.w3.org/2000/01/rdf-schema#parent> ?parent1 . }
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
427,54,test,Give me the party of the father of the alumnus of Massachusetts Institute of Technology and reference to the name of Italian People's Party (1994) and party of Romano Prodi.,SELECT ?result WHERE { <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/ontology/party> ?result . ?v0 <http://dbpedia.org/property/father> ?v5 . <http://dbpedia.org/resource/Italian_People's_Party_(1994)> <http://xmlns.com/foaf/0.1/name> ?v3 . ?v5 <http://dbpedia.org/ontology/party> ?result . ?v0 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Massachusetts_Institute_of_Technology> . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . },"```sparql
# Find the alumnus of MIT
SELECT ?alumnus WHERE {
  ?alumnus <http://dbpedia.org/ontology/alumniOf> <http://dbpedia.org/resource/Massachusetts_Institute_of_Technology>.
}

# For each alumnus, find their father and his party
SELECT DISTINCT ?fatherParty WHERE {
  ?alumnus <http://dbpedia.org/ontology/father> ?father.
  ?father <http://dbpedia.org/ontology/party> ?fatherParty.
  
  # Reference to the Italian People's Party (1994)
  OPTIONAL { 
    ?italianPeopleParty <http://www.w3.org/2000/01/rdf-schema#label> ""Italian People's Party (1994)""@en .
  }
  
  # Find the party of Romano Prodi
  OPTIONAL {
    <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/ontology/party> ?prodiParty.
  }
}

# Note: This query assumes that the relationships and properties are correctly defined in DBpedia.
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
963,16,test,"Give me the administration of the ruling party, that is a political party, in Sremski Karlovci and entity in the region, that is a country, of Central European Time.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/leaderParty> ?v3 . ?result <http://dbpedia.org/ontology/country> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Sremski_Karlovci> <http://dbpedia.org/property/leaderParty> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v2 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . },"```sparql
SELECT ?party ?administration ?country WHERE {
  # Step 1: Find the ruling political party in Sremski Karlovci
  <http://dbpedia.org/resource/Sremski_Karlovci> <http://dbpedia.org/ontology/rulingParty> ?party .
  
  # Ensure it is a political party
  ?party <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty> .

  # Step 2: Find the administration of this ruling party
  ?party <http://dbpedia.org/property/administration> ?administration .
  
  # Step 3: Identify countries in the Central European Time region
  ?country <http://www.w3.org/2000/01/rdf-schema#label> ?label .
  FILTER(CONTAINS(LCASE(?label), ""central european time"") || CONTAINS(LCASE(?label), ""cet""))

  # Step 4: Ensure this country is an entity in the region
  ?country <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country> .
  
  # Link the political party to a country in CET region
  OPTIONAL { ?party <http://dbpedia.org/property/country> ?country . }
}
```",4,6,5,2,2,3,2,20,0,0,84,0,0.0,0
435,27,test,Give me the territory administered from Reykjavík and work of the author of Iceland and region of the time zone in Bombali Shebora Chiefdom.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/timeZone> ?v3 . <http://dbpedia.org/resource/Iceland> <http://dbpedia.org/property/author> ?v2 . <http://dbpedia.org/resource/Bombali_Shebora_Chiefdom> <http://dbpedia.org/ontology/timeZone> ?v3 . ?result <http://dbpedia.org/property/author> ?v2 . ?result <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Reykjavík> . },"```sparql
# Part 1: Territory administered from Reykjavík
SELECT ?territory WHERE {
    ?territory <http://dbpedia.org/ontology/administrativeCapital> <http://dbpedia.org/resource/Reykjavík>.
}

UNION

# Part 2: Work of the author of Iceland
SELECT ?work WHERE {
    ?author <http://www.w3.org/2000/01/rdf-schema#label> ""Iceland""@en.
    ?author <http://dbpedia.org/ontology/work> ?work.
}

UNION

# Part 3: Region of the time zone in Bombali Shebora Chiefdom
SELECT ?region WHERE {
    <http://dbpedia.org/resource/Bombali_Shebora_Cheifdom> <http://www.w3.org/2006/timezone#timezone> ?timeZone.
    ?timeZone <http://dbpedia.org/ontology/location> ?location.
    ?location <http://dbpedia.org/ontology/administrativeRegion> ?region.
}
```",5,5,6,2,3,2,3,28,0,0,1,0,0.0,0
184,48,test,"Give me the parent of the child of Archduke Joseph Francis of Austria and parent of the native of the landmark at elevation, that is a settlement, of 96.0.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v1 . ?result <http://dbpedia.org/ontology/child> ?v2 . ?v3 <http://dbpedia.org/ontology/elevation> ""96.0""^^<http://www.w3.org/2001/XMLSchema#double> . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Francis_of_Austria> . ?v2 <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. }","```sparql
# Part 1: Find the parent of the child of Archduke Joseph Francis of Austria
SELECT ?parentOfChild WHERE {
    ?child <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Archduke_Joseph_Francis_of_Austria> .
    ?child <http://dbpedia.org/ontology/mother> ?mother .
    ?mother <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Human> .
    ?mother <http://dbpedia.org/property/spouse> ?parentOfChild .
}

UNION

SELECT ?parentOfChild WHERE {
    ?child <http://dbpedia.org/ontology/father> ?father .
    ?father <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Human> .
    ?father <http://dbpedia.org/resource/Archduke_Joseph_Francis_of_Austria> .
    ?child <http://dbpedia.org/ontology/mother> ?mother .
    ?mother <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Human> .
    ?mother <http://dbpedia.org/property/spouse> ?parentOfChild .
}

UNION

SELECT ?parentOfChild WHERE {
    ?child <http://dbpedia.org/ontology/father> ?father .
    ?father <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Human> .
    ?father <http://dbpedia.org/resource/Archduke_Joseph_Francis_of_Austria> .
    ?child <http://dbpedia.org/ontology/mother> ?mother .
    ?mother <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Human> .
    ?father <http://dbpedia.org/property/spouse> ?parentOfChild .
}

UNION

SELECT ?parentOfChild WHERE {
    ?child <http://dbpedia.org/ontology/father> ?father .
    ?father <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Human> .
    ?mother <http://dbpedia.org/ontology/husband> ?father .
    ?child <http://dbpedia.org/ontology/mother> ?mother .
    ?mother <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Human> .
    ?mother <http://dbpedia.org/resource/Archduke_Joseph_Francis_of_Austria> .
    ?father <http://dbpedia.org/property/spouse> ?parentOfChild .
}

# Part 2: Find the parent of the native of a landmark at elevation 96.0
SELECT ?parent WHERE {
    ?landmark <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Landmark> .
    ?landmark <http://dbpedia.org/property/elevation> ""96.0""^^<http://www.w3.org/2001/XMLSchema#float> .
    ?landmark <http://dbpedia.org/ontology/location> ?settlement .
    ?settlement <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement> .
    ?native <http://dbpedia.org/property/nationality> ?settlement .
    ?native <http://www.w3.org/1999/02/22-rdf-syntax-ns#type",5,6,6,3,2,3,3,71,0,0,2,0,0.0,0
659,47,test,"Give me the commander in the force of Arthur Wellesley, 1st Duke of Wellington and commander in the war, that is an event and a military conflict, of the figure known, that is a military unit and an organisation, as 'Polish Horse'.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/property/nickname> ""'Polish Horse'""@en . ?v0 <http://dbpedia.org/ontology/battle> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Arthur_Wellesley,_1st_Duke_of_Wellington> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v4 <http://dbpedia.org/ontology/commander> ?result . }","```sparql
SELECT ?commander WHERE {
  ?polishHorse <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit> .
  ?polishHorse <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation> .
  ?polishHorse rdfs:label ""Polish Horse""@en .

  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event> .
  ?polishHorse <http://dbpedia.org/property/involvedIn> ?war .

  ?commander <http://dbpedia.org/ontology/commander> ?war .

  ?welshCommander <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Battle_of_Waterloo> .
  ?welshCommander rdfs:label ""Arthur Wellesley, 1st Duke of Wellington""@en .
  
  FILTER(?commander = ?welshCommander)
}
```",5,9,6,3,2,3,3,71,0,0,71,0,0.0,0
534,16,test,"Give me the headquarter of the owner of RDS Arena and birth place of the child, that is a politician and an office holder, of Desmond FitzGerald (politician).",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/ontology/headquarter> ?result . <http://dbpedia.org/resource/RDS_Arena> <http://dbpedia.org/ontology/owner> ?v3 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Desmond_FitzGerald_(politician)> <http://dbpedia.org/ontology/child> ?v2 . },"```sparql
# Step 1: Find the owner of RDS Arena
SELECT ?owner WHERE {
    <http://dbpedia.org/resource/RDS_Arena> <http://dbpedia.org/ontology/owner> ?owner .
}

# Step 2: Get the headquarters of the owner found in step 1
SELECT ?headquarters WHERE {
    ?owner <http://dbpedia.org/ontology/headquarter> ?headquarters .
    FILTER(?owner = ?ownerFromStep1) # Replace with actual variable from step 1
}

# Step 3: Find the child of Desmond FitzGerald who is a politician and an office holder
SELECT ?child WHERE {
    <http://dbpedia.org/resource/Desmond_FitzGerald_(politician)> <http://dbpedia.org/ontology/child> ?child .
    ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .
    ?child <http://dbpedia.org/ontology/officeHolder> ?office .
}

# Step 4: Get the birthplace of the child found in step 3
SELECT ?birthPlace WHERE {
    ?child <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
    FILTER(?child = ?childFromStep3) # Replace with actual variable from step 3
}
```

Note: The above query is structured to be executed in parts, and you will need to replace placeholders like `?ownerFromStep1` and `?childFromStep3` with the actual variables obtained from previous steps when executing them sequentially.",4,6,5,2,2,3,2,20,0,0,1,0,0.0,0
754,16,test,Give me the parent of the child of Ram Khamhaeng and parent of the parent of May Hnin Htapi.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ram_Khamhaeng> <http://dbpedia.org/ontology/child> ?v3 . <http://dbpedia.org/resource/May_Hnin_Htapi> <http://dbpedia.org/ontology/parent> ?v2 . ?result <http://dbpedia.org/ontology/child> ?v3 . ?v2 <http://dbpedia.org/ontology/parent> ?result . },"```sparql
SELECT ?commonParent WHERE {
  # Step 1: Find the child of Ram Khamhaeng
  ?childOfRamKhamhaeng <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Ram_Khamhaeng> .
  
  # Step 2: Find the parent of that child
  ?parentOfChild <http://dbpedia.org/property/parent> ?childOfRamKhamhaeng .

  # Step 3: Identify May Hnin Htapi's parent
  ?mayHninHtapi <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/May_Hnin_Htapi> .
  
  # Step 4: Find the grandparent of May Hnin Htapi
  ?grandparentOfMay <http://dbpedia.org/property/parent> ?mayHninHtapiParent .
  ?mayHninHtapiParent <http://dbpedia.org/property/parent> ?mayHninHtapi .

  # Step 5: Find the common entity
  FILTER (?parentOfChild = ?grandparentOfMay)
}
```",4,4,5,2,2,3,2,20,0,0,1,0,0.0,0
92,64,test,"Give me the band of the person born as the birth name of Joseph Michael and associated musical artist of Jim Sheppard and band member of the reference, that is an artist, to the name of Nevermore (2006 film).",SELECT ?result WHERE { ?v2 <http://xmlns.com/foaf/0.1/name> ?v3 . ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . <http://dbpedia.org/resource/Jim_Sheppard> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Joseph_Michael> <http://dbpedia.org/property/birthName> ?v0 . ?result <http://dbpedia.org/ontology/bandMember> ?v1 . <http://dbpedia.org/resource/Nevermore_(2006_film)> <http://xmlns.com/foaf/0.1/name> ?v3 . },"```sparql
# Step 1: Find the person with birth name Joseph Michael and their associated band
SELECT ?person ?band WHERE {
  ?person <http://dbpedia.org/ontology/birthName> ""Joseph Michael"" .
  ?person <http://dbpedia.org/ontology/memberOf> ?band .
}

# Step 2: Find the musical artist associated with Jim Sheppard
SELECT ?artist WHERE {
  ?association <http://dbpedia.org/property/associatedWith> <http://dbpedia.org/resource/Jim_Sheppard> .
  ?association <http://dbpedia.org/ontology/associatedMusicalArtist> ?artist .
}

# Step 3: Find the band member who is an artist referenced to ""Nevermore (2006 film)""
SELECT ?bandMember WHERE {
  ?film <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film> .
  ?film <http://dbpedia.org/property/name> ""Nevermore"" .
  FILTER(YEAR(?film) = 2006)
  ?bandMember <http://dbpedia.org/ontology/referencedIn> ?film .
}

# Step 4: Combine the results to find the common band
SELECT DISTINCT ?commonBand WHERE {
  VALUES ?person { ?person1 } # Replace with actual person URI from step 1
  VALUES ?artist { ?artist1 } # Replace with actual artist URI from step 2
  VALUES ?bandMember { ?bandMember1 } # Replace with actual band member URI from step 3

  ?person <http://dbpedia.org/ontology/memberOf> ?commonBand .
  ?artist <http://dbpedia.org/ontology/memberOf> ?commonBand .
  ?bandMember <http://dbpedia.org/ontology/memberOf> ?commonBand .
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
391,30,test,"Give me the native of Compton, California and actor of the movie, that is a movie and a work and a television show, with Roz Ryan and actor of The Departed.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Roz_Ryan> . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Compton,_California> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/The_Departed> <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://dbpedia.org/property/starring> ?result . }","```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Compton,_California>.
  ?person <http://dbpedia.org/ontology/actor> ?movie.
  ?movie <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>;
         <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>;
         <http://dbpedia.org/ontology/televisionShow> ?tvshow.
  ?movie <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Roz_Ryan>.
  ?person <http://dbpedia.org/ontology/actor> <http://dbpedia.org/resource/The_Departed>.
}
```",4,7,5,2,3,3,3,71,0,0,1,0,0.0,0
92,59,test,"Give me the associated musical artist of the person born, that is an artist, as the actor of Return to Nuke 'Em High Volume 1 and band member of the reference, that is an artist, to the name of Nevermore (2006 film).",SELECT ?result WHERE { <http://dbpedia.org/resource/Nevermore_(2006_film)> <http://xmlns.com/foaf/0.1/name> ?v3 . <http://dbpedia.org/resource/Return_to_Nuke_'Em_High_Volume_1> <http://dbpedia.org/property/starring> ?v0 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v5 <http://dbpedia.org/property/birthName> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://xmlns.com/foaf/0.1/name> ?v3 . },"```sparql
SELECT ?associatedArtist WHERE {
    ?actor <http://dbpedia.org/ontology/actor> <http://dbpedia.org/resource/Return_to_Nuke_'Em_High_Volume_1> .
    ?actor <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist> .
    ?reference <http://dbpedia.org/ontology/reference> <http://dbpedia.org/resource/Nevermore_(2006_film)> .
    ?reference <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist> .
    ?actor <http://dbpedia.org/property/memberOf> ?band .
    ?band <http://dbpedia.org/ontology/reference> ?reference .
    ?actor <http://dbpedia.org/ontology/associatedMusicalArtist> ?associatedArtist .
}
```",6,8,7,3,2,3,3,71,0,0,1,0,0.0,0
801,63,test,"Give me the associated musical artist of the writer, that is a musical artist and an artist, of 40 Dayz & 40 Nightz and professional in the alter ego of the true self of The Shadow and producer of the work, that is a musical work and a song and a work, of 50 Cent.","SELECT ?result WHERE { ?v4 <http://xmlns.com/foaf/0.1/givenName> ""The Shadow""@en . ?v6 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/50_Cent> . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/property/occupation> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/40_Dayz_&_40_Nightz> <http://dbpedia.org/property/writer> ?v2 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v6 <http://dbpedia.org/ontology/producer> ?result . ?v4 <http://dbpedia.org/property/alterEgo> ?v3 . }","```sparql
SELECT ?associatedArtist WHERE {
    # Step 1: Identify 50 Cent as the writer and artist
    <http://dbpedia.org/resource/50_Cent> <http://purl.org/dc/terms/creator> <http://dbpedia.org/resource/40_Dayz_%26_40_Nightz> .
    
    # Step 2: Find associated musical artists with 50 Cent
    ?associatedArtist <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/50_Cent> .

    # Step 3: Identify the producer of a work by 50 Cent
    OPTIONAL {
        ?work <http://purl.org/dc/terms/creator> <http://dbpedia.org/resource/50_Cent> .
        ?work <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork> .
        ?work <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song> .
        ?work <http://dbpedia.org/property/producer> <http://dbpedia.org/resource/Dr._Dre> .
    }
}
```",7,12,8,3,3,3,3,71,0,0,1,0,0.0,0
783,17,test,"Give me the associated musical artist of Appietus and band member of the person born, that is an artist and a musical artist, as the persona of Ebony Reigns.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . <http://dbpedia.org/resource/Appietus> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Ebony_Reigns> <http://xmlns.com/foaf/0.1/givenName> ?v0 . ?v3 <http://dbpedia.org/property/birthName> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Appietus> .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
  ?person <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  ?birthPlace <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Ghana> . # Assuming Ebony Reigns is linked to Ghana
  ?bandMember <http://dbpedia.org/property/memberOfBand> ?person .
  ?bandMember <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
}
```",4,6,5,3,2,3,2,20,0,0,1,0,0.0,0
9,46,test,"Give me the alma mater of the mayor, that is a politician, of the entity, that is an organisation, in Belfast and alma mater of the awardee of Royal Medal.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/leader> ?v1 . ?v2 <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Belfast> . ?v4 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Medal> . ?v1 <http://dbpedia.org/ontology/almaMater> ?result . ?v4 <http://dbpedia.org/ontology/almaMater> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
SELECT DISTINCT ?almaMater
WHERE {
  # Step 1: Find an organization in Belfast
  ?organization <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>;
                <http://dbpedia.org/ontology/location> ?location.
  
  # Ensure the location is Belfast
  ?location <http://www.w3.org/2000/01/rdf-schema#label> ""Belfast""@en.

  # Step 2: Find a politician who is the mayor of this organization
  ?politician <http://dbpedia.org/ontology/politician> ?mayorship;
              <http://dbpedia.org/ontology/almaMater> ?almaMater.
  
  ?mayorship <http://dbpedia.org/ontology/officeHolder> ?politician;
             <http://dbpedia.org/ontology/office> ?organization.

  # Step 3: Find awardees of the Royal Medal
  ?awardee <http://dbpedia.org/property/award> ?royalMedalAward.
  
  ?royalMedalAward <http://www.w3.org/2000/01/rdf-schema#label> ""Royal Medal""@en.

  # Step 4: Find the common alma mater
  ?awardee <http://dbpedia.org/ontology/almaMater> ?commonAlmaMater.
  
  FILTER(?almaMater = ?commonAlmaMater)
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
9,50,test,"Give me the figure known as the nickname of Queen's University Belfast and alma mater of the awardee of the reference, that is an award, to Royal Medals.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?result <http://dbpedia.org/property/nickname> ?v3 . ?v4 <http://dbpedia.org/property/awards> ?v0 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Royal Medals""@en . <http://dbpedia.org/resource/Queen's_University_Belfast> <http://dbpedia.org/property/nickname> ?v3 . ?v4 <http://dbpedia.org/ontology/almaMater> ?result . }","```sparql
SELECT ?figure WHERE {
  ?award <http://dbpedia.org/ontology/reference> ""Royal Medals"" .
  ?person <http://dbpedia.org/ontology/awardee> ?award .
  ?person <http://dbpedia.org/ontology/almaMater> ?university .
  ?university <http://www.w3.org/2000/01/rdf-schema#label> ""Queen's University Belfast"" .
  ?university <http://dbpedia.org/property/nickname> ?figure .
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
547,18,test,Give me the resting place of Alan Cunningham and resting place of James Burton (Egyptologist) and resting place of Simon Cadell.,SELECT ?result WHERE { <http://dbpedia.org/resource/James_Burton_(Egyptologist)> <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Alan_Cunningham> <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Simon_Cadell> <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
SELECT ?person ?restingPlace WHERE {
  VALUES ?person { 
    <http://dbpedia.org/resource/Alan_Cunningham_(British_officer)> 
    <http://dbpedia.org/resource/James_Burton_(Egyptologist)>
    <http://dbpedia.org/resource/Simon_Cadell>
  }
  ?person <http://dbpedia.org/ontology/burialPlace> ?restingPlace .
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
617,49,test,"Give me the child of the child, that is a royalty, of Seleucus II Callinicus and parent of the child of the commander in Battle of Panium.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v1 . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seleucus_II_Callinicus> . <http://dbpedia.org/resource/Battle_of_Panium> <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://dbpedia.org/ontology/child> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v2 . },"```sparql
SELECT ?grandChild ?battleChild WHERE {
    # Step 1: Find the child of Seleucus II Callinicus who is royalty
    ?child dbo:parent <http://dbpedia.org/resource/Seleucus_II_Callinicus> .
    ?child rdf:type dbo:Royalty .

    # Step 2: From that child, find their own child (grandchild of Seleucus II Callinicus)
    ?grandChild dbo:parent ?child .

    # Step 3: Find the commander in the Battle of Panium and identify their child
    <http://dbpedia.org/resource/Battle_of_Panium> dbo:commander ?battleCommander .
    ?battleChild dbo:parent ?battleCommander .

    # Step 4: Ensure the grandchild is also a parent to the battle child
    ?grandChild dbo:child ?battleChild .
}
```",5,6,6,3,2,3,3,71,2,1,0,0.6666666666666666,1.0,0.8
801,58,test,"Give me the professional in  and producer of the work, that is a musical work and a song and a work, of 50 Cent and associated musical artist of the writer, that is a musical artist and an artist, of the album, that is a musical work and a work, of What U See Is What U Get.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/What_U_See_Is_What_U_Get> <http://dbpedia.org/ontology/album> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/property/writer> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v5 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/50_Cent> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v5 <http://dbpedia.org/ontology/producer> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. }","```sparql
SELECT ?producer WHERE {
  # Step 1: Find the writer(s) of ""What U See Is What U Get""
  ?album rdf:type dbo:MusicalWork ;
         rdfs:label ""What U See Is What U Get""@en .
  
  ?writer dbo:artistOf ?album ;
          rdf:type dbo:MusicalArtist .

  # Step 2: Determine the associated musical artist
  ?associatedArtist dbo:associatedWith ?writer ;
                    rdfs:label ?associatedLabel .

  # Step 3: Identify a work by 50 Cent and the associated artist
  ?song rdf:type dbo:Songs ;
        dbo:artist [ 
          rdf:type dbo:MusicalArtist ;
          rdfs:label ""50 Cent""@en 
        ] ;
        dbo:artist [ 
          rdf:type dbo:MusicalArtist ;
          rdfs:label ?associatedLabel .
        ] .

  # Step 4: Find the producer(s) of this work
  ?song dbo:producer ?producer .
}
```",6,13,7,3,3,3,3,71,0,0,1,0,0.0,0
92,63,test,"Give me the band member of the reference, that is an artist, to the name of Nevermore (2006 film) and band of the person born as Joseph Michael Furney and associated musical artist of the person born, that is an artist, as Jim Sheppard.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v3 <http://xmlns.com/foaf/0.1/name> ?v4 . ?v6 <http://dbpedia.org/property/birthName> ""Jim Sheppard""@en . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Nevermore_(2006_film)> <http://xmlns.com/foaf/0.1/name> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/bandMember> ?v2 . ?v6 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/property/birthName> ""Joseph Michael Furney""@en . }","```sparql
# Step 1: Identify the reference to ""Nevermore"" (2006 film)
SELECT ?artist WHERE {
    ?film rdfs:label ""Nevermore (2006 film)""@en .
    ?film dbo:reference ?artist .
}

# Step 2: Determine the band of Joseph Michael Furney
SELECT ?band WHERE {
    ?person foaf:name ""Joseph Michael Furney""@en .
    ?person dbo:birthDate ?date .
    ?person dbo:musicArtist ?band .
}

# Step 3: Find the associated musical artist for Jim Sheppard
SELECT ?artist WHERE {
    ?person foaf:name ""Jim Sheppard""@en .
    ?person dbo:birthDate ?date .
    ?person dbo:associatedMusicalArtist ?artist .
}

# Final step: Find a common band member among these artists
SELECT DISTINCT ?bandMember WHERE {
    ?bandMember dbo:memberOf ?band1 .
    ?bandMember dbo:memberOf ?band2 .
    ?bandMember dbo:memberOf ?band3 .
    
    # Assuming ?band1, ?band2, and ?band3 are the results from steps 1-3
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
492,52,test,"Give me the commander in the war, that is a military conflict and an event, of Frédéric-Georges Herr and person decedent at Algiers and person decedent at the work of the author of French Algeria.",SELECT ?result WHERE { <http://dbpedia.org/resource/Frédéric-Georges_Herr> <http://dbpedia.org/ontology/battle> ?v5 . ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . <http://dbpedia.org/resource/French_Algeria> <http://dbpedia.org/property/author> ?v3 . ?v5 <http://dbpedia.org/ontology/commander> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Algiers> . ?v2 <http://dbpedia.org/property/author> ?v3 . },"```sparql
SELECT ?war ?commander WHERE {
  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>.
  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>.
  <http://dbpedia.org/resource/Frédéric-Georges_Herr> <http://dbpedia.org/ontology/commander> ?war.
  
  ?person <http://dbpedia.org/property/deathPlace> <http://dbpedia.org/resource/Algiers>.
  ?author <http://purl.org/dc/terms/creator> ?work.
  ?work <http://dbpedia.org/ontology/topic> <http://dbpedia.org/resource/French_Algeria>.
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>.
  ?person <http://dbpedia.org/property/deathPlace> ?deathPlace.
  FILTER(?deathPlace = <http://dbpedia.org/resource/Algiers>)
  
  ?war <http://dbpedia.org/ontology/commander> ?commander.
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
626,17,test,Give me the awardee of the award of the military force of Battle of Borodino and commander in Battle of Leipzig.,SELECT ?result WHERE { <http://dbpedia.org/resource/Battle_of_Leipzig> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/property/awards> ?v3 . ?v0 <http://dbpedia.org/property/awards> ?v3 . ?v0 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Borodino> . },"```sparql
SELECT ?awardee WHERE {
  ?battle1 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Borodino>.
  ?force1 <http://dbpedia.org/ontology/militaryForce> ?battle1.
  ?award <http://dbpedia.org/property/givenBy> ?force1.
  ?awardee <http://dbpedia.org/ontology/recipient> ?award.

  ?battle2 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Leipzig>.
  ?commander <http://dbpedia.org/ontology/commander> ?battle2.
  
  FILTER (?awardee = ?commander)
}
```",4,4,5,3,2,3,2,20,0,0,9,0,0.0,0
701,49,test,"Give me the spouse of the father of the commander, that is a royalty, in Battle of Perire and parent of the child of Nefertari.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v1 . <http://dbpedia.org/resource/Nefertari> <http://dbpedia.org/ontology/child> ?v2 . <http://dbpedia.org/resource/Battle_of_Perire> <http://dbpedia.org/ontology/commander> ?v0 . ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> ?v1 . },"```sparql
SELECT ?spouse WHERE {
    ?battle <http://dbpedia.org/ontology/commander> ?commander .
    FILTER(?battle = <http://dbpedia.org/resource/Battle_of_Perire>)
    ?commander <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .

    ?nefertariChild <http://dbpedia.org/property/parent> ?parent .
    FILTER(?nefertariChild = <http://dbpedia.org/resource/Nefertari#child>)
    
    ?commanderFather <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Father> .
    ?commanderFather <http://dbpedia.org/property/hasChild> ?commander .

    ?parent = ?commanderFather .

    ?spouse <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Spouse> .
    ?spouse <http://dbpedia.org/property/spouse> ?commanderFather .
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
994,60,test,"Give me the band member of the person born, that is a musical artist, as the persona of Don Dokken and associated musical artist of the associated musical artist of the reference to Watchtower.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ?v5 . ?v4 <http://xmlns.com/foaf/0.1/name> ""Watchtower""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Don_Dokken> <http://xmlns.com/foaf/0.1/givenName> ?v5 . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . }","```sparql
SELECT ?bandMember WHERE {
  # Step 1: Identify the persona of Don Dokken
  <http://dbpedia.org/resource/Don_Dokken> <http://dbpedia.org/ontology/persona> ?persona .

  # Step 2: Find the person born as this musical artist
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
  ?person <http://dbpedia.org/property/birthName> ?persona .

  # Step 3: Determine the associated musical artists of this person
  ?associatedArtist <http://dbpedia.org/ontology/associatedMusicalArtist> ?person .

  # Step 4: Find those who reference Watchtower
  ?reference <http://dbpedia.org/ontology/reference> <http://dbpedia.org/resource/Watchtower> .
  ?associatedArtist <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?reference .

  # Step 5: Identify any band members related to these artists
  ?bandMember <http://dbpedia.org/ontology/memberOfBand> ?associatedArtist .
}
```",6,7,7,3,2,3,3,71,0,0,1,0,0.0,0
16,28,test,Give me the spouse of the person born as Ted Martin McGinley and person born as Georgeanne Marie Rice and professional in Actress.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ""Ted Martin McGinley""@en . ?v1 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/occupation> ""Actress""@en . ?result <http://dbpedia.org/property/birthName> ""Georgeanne Marie Rice""@en . }","```sparql
SELECT ?spouse WHERE {
  ?person foaf:name ""Ted Martin McGinley""@en .
  ?person foaf:givenName ""Georgeanne"" .
  ?person foaf:familyName ""Rice"" .
  ?person dbo:occupation dbp:Actress .
  ?person foaf:mbox <http://dbpedia.org/resource/Ted_McGinley> . # Assuming the DBpedia resource for Ted McGinley
  ?person dbo:spouse ?spouse .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
801,52,test,"Give me the professional in the alter ego of the true self of The Shadow and associated musical artist of Chris Taylor (music producer) and producer of the work, that is a musical work and a song and a work, of 50 Cent.","SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Chris_Taylor_(music_producer)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v5 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/50_Cent> . ?v3 <http://dbpedia.org/property/alterEgo> ?v2 . ?v5 <http://dbpedia.org/ontology/producer> ?result . ?result <http://dbpedia.org/property/occupation> ?v2 . ?v3 <http://xmlns.com/foaf/0.1/givenName> ""The Shadow""@en . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. }","```sparql
SELECT ?professional WHERE {
    ?shadow <http://dbpedia.org/ontology/alterEgo> ?trueSelf .
    ?trueSelf <http://dbpedia.org/property/profession> ?professional .

    ?professional <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Chris_Taylor_(music_producer)> .

    ?work <http://dbpedia.org/ontology/work> ?professional .
    ?work <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork> .
    ?work <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song> .

    ?work <http://dbpedia.org/property/artist> <http://dbpedia.org/resource/50_Cent> .
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
492,54,test,"Give me the person decedent at the work of US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite and commander in the war, that is a military conflict and an event, of the commander in Battle of Verdun and person decedent at Algiers.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> ?v3 . ?v3 <http://dbpedia.org/property/author> ""US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite""@en . <http://dbpedia.org/resource/Battle_of_Verdun> <http://dbpedia.org/ontology/commander> ?v0 . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Algiers> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://dbpedia.org/ontology/battle> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v5 <http://dbpedia.org/ontology/commander> ?result . }","```sparql
SELECT ?person WHERE {
  # Find the work of Joseph C. Satterthwaite and his associated decedents
  <http://dbpedia.org/resource/Joseph_C._Satterthwaite> <http://dbpedia.org/ontology/work> ?work .
  ?work <http://dbpedia.org/property/decedent> ?person .

  # Find the war related to Battle of Verdun that is both a military conflict and an event
  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event> .
  <http://dbpedia.org/resource/Battle_of_Verdun> <http://dbpedia.org/ontology/commander> ?v1 .
  ?v1 <http://dbpedia.org/ontology/battle> ?war .

  # Ensure the person is a commander in this war
  ?person <http://dbpedia.org/ontology/commander> ?war .

  # Find if the person is also a decedent at Algiers
  ?algiersEvent <http://dbpedia.org/property/decedent> ?person .
  FILTER(STRSTARTS(STR(?algiersEvent), ""http://dbpedia.org/resource/Algiers""))
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
767,61,test,"Give me the alma mater of the administration of the reference to George Kilbon Nash and reference to the alter ego of the persona, that is a fictional character, of Matthew Burland.","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v3 . ?v1 <http://dbpedia.org/property/alterEgo> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v5 <http://dbpedia.org/ontology/almaMater> ?result . ?v1 <http://dbpedia.org/property/alterEgo> ""Matthew Burland""@en . ?v5 <http://dbpedia.org/property/governor> ?v0 . ?v0 <http://xmlns.com/foaf/0.1/name> ""George Kilbon Nash""@en . }","```sparql
SELECT ?almaMater WHERE {
  ?fictionalCharacter <http://dbpedia.org/ontology/person> Matthew_Burland .
  ?fictionalCharacter <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter> .
  
  ?alterEgo <http://dbpedia.org/ontology/alsoKnownAs> ?fictionalCharacter .
  
  ?reference <http://dbpedia.org/property/referenceTo> George_Kilbon_Nash .
  ?reference <http://dbpedia.org/property/alterEgoOf> ?alterEgo .
  
  ?administration <http://dbpedia.org/ontology/administration> ?reference .
  ?administration <http://dbpedia.org/ontology/almaMater> ?almaMater .
}
```",6,7,7,3,2,3,3,71,0,0,2,0,0.0,0
365,8,test,Give me the band of Phil Alvin and reference to the real name of The Blasters.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Phil_Alvin> . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . <http://dbpedia.org/resource/The_Blasters> <http://xmlns.com/foaf/0.1/name> ?v1 . },"```sparql
# Query to find the band associated with Phil Alvin
SELECT ?band WHERE {
  <http://dbpedia.org/resource/Phil_Alvin> <http://dbpedia.org/ontology/memberOf> ?band .
}

# Query to ensure The Blasters is correctly identified by its real name or alias
SELECT DISTINCT ?realName WHERE {
  ?entity <http://www.w3.org/2000/01/rdf-schema#label> ""The Blasters""@en .
  OPTIONAL { ?entity <http://dbpedia.org/ontology/alias> ?realName . }
}
```",3,3,4,2,2,2,2,9,0,0,1,0,0.0,0
10,24,test,"Give me the professional in the birth name of Sharon Kao and band member of the person born, that is an artist, as Luke Francis Vibert.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://dbpedia.org/property/birthName> ""Luke Francis Vibert""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Sharon_Kao> <http://dbpedia.org/property/birthName> ?v1 . }","```sparql
# Step 1: Get Sharon Kao's birth name
SELECT ?birthName WHERE {
    <http://dbpedia.org/resource/Sharon_Kao> <http://dbpedia.org/ontology/birthName> ?birthName .
}

# Step 2: Find the professional associated with her birth name
SELECT ?professional WHERE {
    ?person <http://dbpedia.org/ontology/profession> ?professional .
    ?person <http://www.w3.org/2000/01/rdf-schema#label> ?birthName .
    FILTER(?birthName = ""Sharon Kao's Birth Name"") # Replace with actual birth name
}

# Step 3: Identify Luke Francis Vibert and his band members
SELECT ?bandMember WHERE {
    <http://dbpedia.org/resource/Luke_Francis_Vibert> <http://dbpedia.org/ontology/memberOfBand> ?band .
    ?band <http://dbpedia.org/ontology/member> ?bandMember .
}

# Step 4: Ensure the person is an artist
SELECT DISTINCT ?person WHERE {
    ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist> .
    FILTER(?person IN (?professional, ?bandMember))
}
```",4,5,5,2,2,2,3,28,0,0,1,0,0.0,0
617,63,test,"Give me the child of the child, that is a royalty, of the successor, that is a royalty, of Antiochus II Theos and spouse of the child of Antiochus III the Great and parent of the child of Antiochus (son of Antiochus III the Great).",SELECT ?result WHERE { <http://dbpedia.org/resource/Antiochus_III_the_Great> <http://dbpedia.org/ontology/child> ?v6 . <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/child> ?v2 . <http://dbpedia.org/resource/Antiochus_II_Theos> <http://dbpedia.org/ontology/successor> ?v4 . ?result <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/property/father> ?v3 . ?v3 <http://dbpedia.org/property/father> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v6 <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
SELECT ?childOfChild WHERE {
  # Step 1: Find successor of Antiochus II Theos who is a royalty
  ?successor dbo:predecessor dbr:Antiochus_II_Theos ;
             rdf:type dbo:Royalty .

  # Step 2: Find child of the successor who is a royalty
  ?childOfSuccessor dbo:parent ?successor ;
                   rdf:type dbo:Royalty .

  # Step 3: Identify spouse of any child of Antiochus III the Great
  ?antiochusIIIChild dbo:parent dbr:Antiochus_III_the_Great .
  ?spouse dbo:spouse ?antiochusIIIChild ;
          rdf:type dbo:Royalty .

  # Step 4: Find parent of any child of Antiochus (son of Antiochus III the Great)
  ?antiochus dbr:Antiochus_III_the_Great/dbo:child .
  ?parentOfAntiochusChild dbo:child ?antiochus .

  # Final intersection
  FILTER (?spouse = ?childOfSuccessor)
  BIND(?spouse AS ?childOfChild)
}
```",7,9,8,3,3,3,3,71,0,0,2,0,0.0,0
963,18,test,"Give me the entity in the region, that is a country, of the time zone of Herzegovina-Neretva Canton and administration of the ruling party, that is a political party, in Sremski Karlovci.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/leaderParty> ?v3 . <http://dbpedia.org/resource/Sremski_Karlovci> <http://dbpedia.org/property/leaderParty> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?result <http://dbpedia.org/ontology/country> ?v2 . ?v2 <http://dbpedia.org/property/timeZone> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Herzegovina-Neretva_Canton> <http://dbpedia.org/property/timeZone> ?v1 . },"```sparql
SELECT ?entity WHERE {
    # Step 1: Find the time zone of Herzegovina-Neretva Canton
    <http://dbpedia.org/resource/Herzegovina-Neretva_Canton> <http://www.w3.org/2006/vcard/ns#adr;timezone> ?timeZone .

    # Step 2: Identify the country associated with this time zone
    ?country <http://www.w3.org/2006/vcard/ns#adr;timezone> ?timeZone .
    
    # Step 3: Find the ruling party in Sremski Karlovci and its administration
    <http://dbpedia.org/resource/Sremski_Karlovci> <http://dbpedia.org/ontology/rulingParty> ?rulingParty .
    ?rulingParty <http://dbpedia.org/ontology/administration> ?administration .

    # Step 4: Find entities in the country that are related to both the time zone and the political party
    ?entity <http://www.w3.org/2006/vcard/ns#adr;country-name> ?country .
    ?entity <http://dbpedia.org/ontology/rulingParty> ?rulingParty .
}
```",5,7,6,3,2,3,2,20,0,0,84,0,0.0,0
528,61,test,Give me the force of the person born as the birth name of Narciso Campero and war of the commander in the work of --01-09.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> ?v3 . ?v5 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/ontology/commander> ?v5 . <http://dbpedia.org/resource/Narciso_Campero> <http://dbpedia.org/property/birthName> ?v1 . ?v3 <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/property/author> ""--01-09""^^<http://www.w3.org/2001/XMLSchema#gMonthDay> . }","```sparql
# Query 1: Force of Narciso Campero
SELECT ?force WHERE {
  <http://dbpedia.org/resource/Narciso_Campero> <http://xmlns.com/foaf/0.1/birthName> ""Narciso Campero"" .
  <http://dbpedia.org/resource/Narciso_Campero> <http://dbpedia.org/property/force> ?force .
}

# Query 2: War of the commander in the work of --01-09
SELECT ?war WHERE {
  ?work <http://www.w3.org/2000/01/rdf-schema#label> ""Work related to --01-09"" .
  ?work <http://dbpedia.org/ontology/commander> ?commander .
  ?commander <http://dbpedia.org/property/war> ?war .
}
```",6,6,7,3,2,3,3,71,0,0,2,0,0.0,0
404,59,test,"Give me the parent of the child, that is a royalty, of the parent, that is a royalty, of Prince George William of Hanover and spouse of the person born, that is a royalty, as the birth name of Princess Victoria Louise of Prussia.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Prince_George_William_of_Hanover> <http://dbpedia.org/ontology/parent> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/property/birthName> ?v3 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/child> ?v5 . ?v2 <http://dbpedia.org/property/birthName> ?v3 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/child> ?v5 . },"```sparql
SELECT ?result WHERE {
  ?princess a dbo:Royalty ;
            foaf:name ""Princess Victoria Louise of Prussia""@en .

  ?princess dbo:spouse ?spouse .

  ?spouse dbo:parent ?royalParent .
  ?royalParent a dbo:Royalty .

  ?royalParent dbo:child ?royalChild .
  ?royalChild a dbo:Royalty .

  ?royalChild dbo:parent ?result .
}
```",6,9,7,3,2,3,3,71,0,0,1,0,0.0,0
427,38,test,"Give me the party of the father of Lamberto Andreotti and party of the person born, that is an office holder and a politician, as Romano Antonio Prodi.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/party> ?result . ?v2 <http://dbpedia.org/property/birthName> ""Romano Antonio Prodi""@en . ?v2 <http://dbpedia.org/ontology/party> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Lamberto_Andreotti> <http://dbpedia.org/property/father> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","```sparql
SELECT ?party1 ?party2 WHERE {
  # Find the party of Lamberto Andreotti's father
  <http://dbpedia.org/resource/Lamberto_Andreotti> <http://dbpedia.org/ontology/father> ?father .
  ?father <http://dbpedia.org/ontology/party> ?party1 .

  # Find the party of Romano Antonio Prodi
  <http://dbpedia.org/resource/Romano_Antonio_Prodi> <http://dbpedia.org/ontology/party> ?party2 .
}
```",4,6,5,2,2,3,3,71,0,0,3,0,0.0,0
645,16,test,"Give me the entity in the residence, that is a country, of James Wilkes Maurice and alma mater of the child of Richard Pankhurst.",SELECT ?result WHERE { <http://dbpedia.org/resource/Richard_Pankhurst> <http://dbpedia.org/ontology/child> ?v3 . ?result <http://dbpedia.org/ontology/country> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/James_Wilkes_Maurice> <http://dbpedia.org/property/residence> ?v2 . ?v3 <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
SELECT ?entity WHERE {
  # Step 1: Get the residence country of James Wilkes Maurice
  <http://dbpedia.org/resource/James_Wilkes_Maurice> <http://dbpedia.org/property/residence> ?residence .
  
  # Ensure the residence is a country
  ?residence <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country> .

  # Step 2: Get the alma mater of Richard Pankhurst's child
  OPTIONAL {
    ?child <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Richard_Pankhurst> .
    ?child <http://dbpedia.org/ontology/almaMater> ?almaMater .
    
    # Ensure the alma mater is a country
    ?almaMater <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country> .
  }

  # Step 3: Find common entity that satisfies both conditions
  FILTER (?residence = ?almaMater)
  
  BIND(?residence AS ?entity)
}
```",4,5,5,2,2,3,2,20,0,0,1,0,0.0,0
435,22,test,"Give me the territory administered from the figure known, that is a settlement and a town and Icelandic, as Land of fire and ice and region of the time zone in Bombali Shebora Chiefdom.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/capital> ?v2 . ?v2 <http://dbpedia.org/property/nickname> ""Land of fire and ice""@en . <http://dbpedia.org/resource/Bombali_Shebora_Chiefdom> <http://dbpedia.org/ontology/timeZone> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Town>. ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Iceland>. ?result <http://dbpedia.org/ontology/timeZone> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. }","```sparql
SELECT ?result WHERE {
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Town>.
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>.
  ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Iceland>.
  ?result rdfs:label ""Land of fire and ice""@en.
  OPTIONAL { ?result <http://dbpedia.org/property/timeZoneRegion> ?tzr. }
}
```",4,7,5,2,2,2,3,28,0,0,1,0,0.0,0
314,24,test,"Give me the commander in the profession, that is an event and a societal event, of Lisa Gavrić and awardee of the award of Sergei Makovetsky.",SELECT ?result WHERE { <http://dbpedia.org/resource/Lisa_Gavrić> <http://dbpedia.org/property/occupation> ?v0 . ?v0 <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/property/awards> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Sergei_Makovetsky> <http://dbpedia.org/property/awards> ?v2 . },"```sparql
SELECT ?commander WHERE {
  ?profession <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>.
  ?profession <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>.
  
  ?commander <http://dbpedia.org/property/profession> ?profession.
  
  ?connection <http://dbpedia.org/ontology/relatedTo> <http://dbpedia.org/resource/Lisa_Gavrić>.
  ?connection <http://www.w3.org/1999/02/22-rdf-syntax-ns#subject> ?commander.

  ?award <http://dbpedia.org/property/awardee> ?commander.
  ?award <http://dbpedia.org/ontology/givenBy> <http://dbpedia.org/resource/Sergei_Makovetsky>.
}
```",4,6,5,2,2,2,3,28,0,0,2,0,0.0,0
488,71,test,"Give me the administration of the father of the spouse, that is a royalty, of Tokugawa Masako and death place of the father, that is a politician, of the father, that is an office holder, of Matsudaira Tadamasa and birth place of the commander in the war, that is a military conflict and an event and a societal event, of Saitō Hajime.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> ?v2 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v4 <http://dbpedia.org/property/father> ?v5 . <http://dbpedia.org/resource/Saitō_Hajime> <http://dbpedia.org/ontology/battle> ?v1 . <http://dbpedia.org/resource/Matsudaira_Tadamasa> <http://dbpedia.org/property/father> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v7 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Tokugawa_Masako> . ?v5 <http://dbpedia.org/ontology/deathPlace> ?result . ?result <http://dbpedia.org/property/leader> ?v8 . ?v7 <http://dbpedia.org/property/father> ?v8 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT DISTINCT ?administration ?deathPlace ?birthPlace WHERE {
  # Tokugawa Masako's spouse's father's administration
  dbp:Tokugawa_Masako dbo:spouse ?spouse .
  ?spouse dbo:father ?father .
  ?father rdf:type dbo:Royalty .
  ?father dbo:administration ?administration .

  # Matsudaira Tadamasa's father's death place
  dbp:Matsudaira_Tadamasa dbo:father ?matFather .
  ?matFather rdf:type dbo:OfficeHolder .
  ?matFather dbo:deathPlace ?deathPlace .
  ?matFather rdf:type dbo:Politician .

  # Saitō Hajime's war commander's birth place
  dbp:Saitō_Hajime dbo:battle ?war .
  ?war rdf:type dbo:MilitaryConflict .
  ?war rdf:type dbo:Event .
  ?war rdf:type dbo:SocietalEvent .
  ?war dbo:commander ?commander .
  ?commander dbo:birthPlace ?birthPlace .
}
```",9,15,10,3,3,3,3,71,0,0,1,0,0.0,0
485,22,test,"Give me the birth place of the awardee, that is a writer and a poet, of Eric Gregory Award and entity in the region, that is a country, of Western European Time.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/country> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Eric_Gregory_Award> . ?v2 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Western_European_Time> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Poet>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>. },"```sparql
SELECT ?birthPlace WHERE {
  ?person <http://dbpedia.org/ontology/writer> [] .
  ?person <http://dbpedia.org/ontology/poet> [] .
  ?person <http://dbpedia.org/property/award> <http://dbpedia.org/resource/Eric_Gregory_Award> .
  ?person <http://dbpedia.org/ontology/birthPlace> ?birthPlace .

  OPTIONAL {
    ?country <http://www.w3.org/2006/time#hasTimezone> <http://dbpedia.org/resource/Western_European_Time> .
    ?person <http://dbpedia.org/ontology/nationality> ?nationality .
    ?nationality <http://dbpedia.org/ontology/country> ?country .
  }
}
```",4,7,5,2,2,2,3,28,0,0,5,0,0.0,0
617,56,test,"Give me the parent of the child of the commander in Battle of Panium and child of the child, that is a royalty, of Seleucus II Callinicus and spouse of Laodice IV.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Laodice_IV> <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Battle_of_Panium> <http://dbpedia.org/ontology/commander> ?v0 . ?result <http://dbpedia.org/property/father> ?v2 . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seleucus_II_Callinicus> . ?v0 <http://dbpedia.org/ontology/child> ?v1 . ?result <http://dbpedia.org/ontology/child> ?v1 . },"```sparql
SELECT ?parent WHERE {
  # Step 1: Find the commander in the Battle of Panium
  ?battle dbpedia-owl:commander ?commander .
  FILTER(STR(?battle) = ""Battle_of_Panium"") .

  # Step 2: Find the child of that commander
  ?child dbpedia-owl:parent ?commander .

  # Step 3: Determine the parent of this child (which is the commander himself)
  BIND(?commander AS ?parent)

  # Step 4: Identify Seleucus II Callinicus and his spouse Laodice IV
  ?seleucus dbpedia-owl:spouse ?laodice .
  FILTER(STR(?seleucus) = ""Seleucus_II_Callinicus"" && STR(?laodice) = ""Laodice_IV"") .

  # Step 5: Find their child who is royalty
  ?royalChild dbpedia-owl:parent ?seleucus ;
              dbpedia-owl:parent ?laodice ;
              a dbo:Royalty .

  # Step 6: Determine the grandchild of Seleucus II Callinicus and Laodice IV
  ?grandchild dbpedia-owl:parent ?royalChild .

  # Step 7: Find the parent of this grandchild (which is the royal child)
  BIND(?royalChild AS ?parent)

  # Ensure both conditions are met for the same individual
  FILTER(?commander = ?royalChild)
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
696,20,test,"Give me the birth place of the member of the associated musical artist, that is an organisation and a group and a band, of The Boils and landmark at elevation of the award of the commander in Battle of Chishui River.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/elevation> ?v5 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://dbpedia.org/ontology/bandMember> ?v2 . <http://dbpedia.org/resource/Battle_of_Chishui_River> <http://dbpedia.org/ontology/commander> ?v4 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v4 <http://dbpedia.org/property/awards> ?v5 . <http://dbpedia.org/resource/The_Boils> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . },"```sparql
SELECT ?birthPlace WHERE {
  # Step 1: Identify the associated musical artist
  ?artist a dbo:MusicalArtist ;
          dbo:associatedBand <http://dbpedia.org/resource/The_Boils> ;
          a dbo:Organization, dbo:Group, dbo:Band .

  # Step 2: Find a member of this musical artist
  ?member dbo:memberOf ?artist .

  # Step 3: Determine the birthplace of this member
  ?member dbo:birthPlace ?birthPlace .

  # Step 4: Identify the commander in the Battle of Chishui River and their award
  <http://dbpedia.org/resource/Battle_of_Chishui_River> dbo:commander ?commander .
  ?commander dbo:award ?award .

  # Step 5: Determine the landmark at elevation related to this award
  ?landmark a dbo:Lighthouse ;
            dbo:elevation ?elevation ;
            dbo:relatedTo ?award .
}
```",6,9,7,3,2,3,2,20,0,0,1,0,0.0,0
959,69,test,"Give me the native of the residence, that is a country, of Yōichi Masuzoe and member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of the person born in 1958 and manager of the team of the manager, that is a sports manager, of 1998 Kashima Antlers season.","SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Yōichi_Masuzoe> <http://dbpedia.org/property/residence> ?v6 . ?result <http://dbpedia.org/ontology/team> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. <http://dbpedia.org/resource/1998_Kashima_Antlers_season> <http://dbpedia.org/ontology/manager> ?v5 . ?v0 <http://dbpedia.org/ontology/manager> ?result . ?v4 <http://dbpedia.org/ontology/almaMater> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v4 <http://dbpedia.org/ontology/birthYear> ""1958""^^<http://www.w3.org/2001/XMLSchema#gYear> . ?v0 <http://dbpedia.org/ontology/manager> ?v5 . ?result <http://dbpedia.org/ontology/birthPlace> ?v6 . }","```sparql
SELECT ?native WHERE {
  # Manager of the 1998 Kashima Antlers season
  ?manager a dbo:SportsManager ;
           dbo:managedTeam ?team .

  FILTER(?team = dbpedia:Kashima_Antlers)

  # Team managed by this person and their manager
  ?team dbo:manager ?subManager .

  # Person born in 1958 who is a sports manager
  ?person dbo:birthdayYear ""1958""^^xsd:gYear ;
          a dbo:SportsManager .

  # Alma mater criteria
  ?person dbo:almaMater ?almaMater .
  ?almaMater a dbo:University ;
             dbo:country dbc:Japan ;
             a dbo:Organization ;
             a dbo:EducationalInstitution .

  # Yōichi Masuzoe's residence
  dbpedia:Yōichi_Masuzoe dbo:residenceCountry ?country .
  
  # Native of this country
  ?native dbo:nativePlace ?country .
}
```",8,14,9,3,3,3,3,71,0,0,3,0,0.0,0
251,28,test,"Give me the death place of the author of The Twelve Abbots of Challant and administration of the ruling party, that is a political party and an organisation, in Sicily and location of the war, that is a military conflict, of Louis François Félix Musnier.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/place> ?result . <http://dbpedia.org/resource/Sicily> <http://dbpedia.org/property/leaderParty> ?v3 . ?v5 <http://dbpedia.org/ontology/deathPlace> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/property/leaderParty> ?v3 . <http://dbpedia.org/resource/Louis_François_Félix_Musnier> <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/The_Twelve_Abbots_of_Challant> <http://dbpedia.org/property/author> ?v5 . },"```sparql
# Part 1: Death Place of Author
SELECT ?deathPlace WHERE {
    ?author dbo:title ""The Twelve Abbots of Challant"" .
    ?author dbo:deathPlace ?deathPlace .
}

UNION

# Part 2: Administration of Ruling Party in Sicily
SELECT ?administration WHERE {
    ?party a dbo:PoliticalParty ;
           dbo:country dbr:Sicily ;
           dbo:organizationType dbo:PoliticalOrganization .
    ?party dbo:administration ?administration .
}

UNION

# Part 3: Location of War for Louis François Félix Musnier
SELECT ?location WHERE {
    ?war a dbo:MilitaryConflict ;
         dbo:commander dbr:Louis_François_Félix_Musnier .
    ?war dbo:location ?location .
}
```",6,9,7,2,3,2,3,28,0,0,1,0,0.0,0
747,65,test,"Give me the band of the person born as Tracey Elizabeth McSween and person born on the birth date of Pavlo Khudzik and band of the writer of the work, that is a song, of Amba Shepherd.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/birthName> ""Tracey Elizabeth McSween""@en . <http://dbpedia.org/resource/Pavlo_Khudzik> <http://dbpedia.org/ontology/birthDate> ?v4 . ?v6 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Amba_Shepherd> . ?v0 <http://dbpedia.org/property/writer> ?v6 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/birthDate> ?v4 . }","```sparql
SELECT ?band WHERE {
  # Part 1: Band of Tracey Elizabeth McSween
  {
    ?person foaf:name ""Tracey Elizabeth McSween"" .
    ?person dbo:band ?band .
  }
  
  UNION
  
  # Part 2: Band of Pavlo Khudzik
  {
    ?pavlo dbo:birthDate ?date .
    ?otherPerson dbo:birthDate ?date ;
                 dbo:band ?band .
  }
  
  UNION
  
  # Part 3: Band of the writer of Amba Shepherd's song
  {
    ?song dbo:lyricsBy ?writer .
    ?song dbo:workExample ?example .
    ?example rdf:type <http://dbpedia.org/ontology/Song> .
    ?ambashepherd dbo:writtenWork ?song .
    ?writer dbo:band ?band .
  }
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
294,20,test,"Give me the entity in Nashville, Tennessee and resting place of the architect of P. D. Houston Jr. House and resting place of Luke Lea (American politician, born 1879).","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/restingPlace> ?result . ?result <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Nashville,_Tennessee> . <http://dbpedia.org/resource/P._D._Houston_Jr._House> <http://dbpedia.org/ontology/architect> ?v3 . <http://dbpedia.org/resource/Luke_Lea_(American_politician,_born_1879)> <http://dbpedia.org/ontology/restingPlace> ?result . }","```sparql
SELECT ?entity WHERE {
  ?entity <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Nashville,_Tennessee> .
  ?entity <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Cemetery> .

  OPTIONAL { 
    ?architect <http://dbpedia.org/property/architectOf> <http://dbpedia.org/resource/P._D._Houston_Jr._House> .
    ?architect <http://dbpedia.org/property/burialPlace> ?entity .
  }

  OPTIONAL {
    <http://dbpedia.org/resource/Luke_Lea_(American_politician,_born_1879)> <http://dbpedia.org/ontology/burialPlace> ?entity .
  }
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
339,20,test,Give me the father of the child of the parent of Princess Olga of Greece and Denmark and child of the child of the predecessor of Frederick VIII of Denmark.,SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/child> ?v5 . ?v1 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Frederick_VIII_of_Denmark> . ?v4 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Princess_Olga_of_Greece_and_Denmark> . ?v2 <http://dbpedia.org/property/father> ?v1 . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v5 <http://dbpedia.org/property/father> ?result . },"```sparql
# Step 1: Identify Princess Olga of Greece and Denmark
SELECT ?olga WHERE {
    ?olga rdfs:label ""Princess Olga of Greece and Denmark""@en .
}

# Step 2: Find her parent (father or mother)
SELECT ?parent WHERE {
    ?olga dbo:childOf ?parent .
}

# Step 3: Determine the child of that parent
SELECT ?sibling WHERE {
    ?parent dbo:child ?sibling .
    FILTER(?sibling != ?olga) # Exclude Olga herself
}

# Step 4: Identify the predecessor of Frederick VIII of Denmark
SELECT ?predecessor WHERE {
    ?frederickVIII dbo:successorOf ?predecessor .
    ?frederickVIII rdfs:label ""Frederick VIII of Denmark""@en .
}

# Step 5: Find the child of this predecessor
SELECT ?child WHERE {
    ?predecessor dbo:child ?child .
}

# Step 6: Determine the child of the child found in step 5
SELECT ?grandchild WHERE {
    ?child dbo:child ?grandchild .
}

# Step 7: Finally, find the father of the individual identified in step 6
SELECT ?father WHERE {
    ?grandchild dbo:father ?father .
}
```",6,6,7,3,2,3,2,20,0,0,1,0,0.0,0
142,8,test,Give me the entity in Japan and birthplace of the actor of Papa wa Newscaster.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan> . <http://dbpedia.org/resource/Papa_wa_Newscaster> <http://dbpedia.org/ontology/starring> ?v2 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT DISTINCT ?actor ?birthPlace WHERE {
  # Find the actor of Papa wa Newscaster
  <http://dbpedia.org/resource/Papa_wa_Newscaster> dbo:starring ?actor .
  
  # Get the birthplace of this actor
  ?actor dbo:birthPlace ?birthPlace .

  # Check if the birthplace is in Japan
  ?birthPlace dbo:country <http://dbpedia.org/resource/Japan> .
}
```",3,3,4,2,2,2,2,9,2,2,0,0.5,1.0,0.6666666666666666
820,18,test,Give me the child of the parent of Jason Schwartzman and professional in the award of the author of Understanding Comics.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Jason_Schwartzman> . <http://dbpedia.org/resource/Understanding_Comics> <http://dbpedia.org/ontology/author> ?v1 . ?result <http://dbpedia.org/property/father> ?v3 . ?v1 <http://dbpedia.org/property/awards> ?v2 . ?result <http://dbpedia.org/property/occupation> ?v2 . },"```sparql
# Step 1: Find the parent of Jason Schwartzman
SELECT ?parent WHERE {
    <http://dbpedia.org/resource/Jason_Schwartzman> <http://dbpedia.org/ontology/father> ?parent .
}

# Step 2: Find the child of that parent (another sibling)
SELECT ?child WHERE {
    ?parent <http://dbpedia.org/ontology/child> ?child .
    FILTER(?child != <http://dbpedia.org/resource/Jason_Schwartzman>)
}

# Step 3: Get the author of ""Understanding Comics""
SELECT ?author WHERE {
    <http://dbpedia.org/resource/Understanding_Comics> <http://dbpedia.org/ontology/author> ?author .
}

# Step 4: Identify the award associated with ""Understanding Comics""
SELECT ?award WHERE {
    ?author <http://dbpedia.org/property/awards> ?award .
}

# Step 5: Find a professional recognized in that award
SELECT DISTINCT ?professional WHERE {
    ?award <http://dbpedia.org/ontology/recipients> ?recipient .
    ?recipient <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?professionalType .
}
```",5,5,6,3,2,3,2,20,0,0,1,0,0.0,0
10,23,test,"Give me the associated musical artist of the person born, that is an artist, as Matt Colton and professional in the birth name of Sharon Kao.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v3 <http://dbpedia.org/property/birthName> ""Matt Colton""@en . <http://dbpedia.org/resource/Sharon_Kao> <http://dbpedia.org/property/birthName> ?v0 . }","```sparql
SELECT ?person ?associatedArtist WHERE {
  ?person <http://dbpedia.org/ontology/birthName> ""Matt Colton"" .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist> .
  ?person <http://dbpedia.org/property/profession> ?profession .
  ?profession <http://dbpedia.org/ontology/birthName> ""Sharon Kao"" .
  ?person <http://dbpedia.org/ontology/associatedMusicalArtist> ?associatedArtist .
}
```",4,5,5,2,2,2,3,28,0,0,2,0,0.0,0
391,48,test,"Give me the native of the figure known as the nick name of Jackson, Tennessee and actor of the movie, that is a movie and a work and a television show, with Roz Ryan.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/nickname> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Roz_Ryan> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://dbpedia.org/property/starring> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . <http://dbpedia.org/resource/Jackson,_Tennessee> <http://xmlns.com/foaf/0.1/nick> ?v3 . }","```sparql
SELECT ?nativePlace WHERE {
  # Find the nickname of Jackson, Tennessee
  <http://dbpedia.org/resource/Jackson,_Tennessee> <http://dbpedia.org/ontology/nickName> ?nickname .

  # Find a movie that is also classified as a work and a television show involving Roz Ryan
  ?movie <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Movie> .
  ?movie <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work> .
  ?movie <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow> .
  ?movie <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Roz_Ryan> .

  # Find the actor associated with Roz Ryan in this movie
  ?actor <http://dbpedia.org/ontology/starring> ?movie .

  # Get the native place of this actor
  ?actor <http://dbpedia.org/property/nativePlace> ?nativePlace .
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
9,69,test,"Give me the figure known as the nickname of the entity, that is an organisation and an educational institution, in Northern Ireland and alma mater of the mayor, that is a politician, of the entity, that is an organisation, in Belfast and alma mater of the awardee of Royal Medal.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Belfast> . ?v1 <http://dbpedia.org/property/nickname> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v7 <http://dbpedia.org/ontology/almaMater> ?result . ?v4 <http://dbpedia.org/property/leader> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?result <http://dbpedia.org/property/nickname> ?v2 . ?v7 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Medal> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Northern_Ireland> . ?v3 <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
SELECT ?figure WHERE {
  ?entity a dbo:EducationalInstitution ;
          a dbo:Organization ;
          dbo:country dbc:Northern_Ireland .
  
  ?politician a dbo:Politician ;
              dbo:mayorOf ?belfastEntity ;
              dbo:almaMater ?entity .

  ?awardee dbo:awardReceived dbo:RoyalMedal ;
           dbo:almaMater ?entity .

  ?entity dbo:nickname ?figure .
}
```",8,12,9,3,3,3,3,71,0,0,1,0,0.0,0
232,51,test,"Give me the native of the residence, that is a settlement and British, of the native, that is a politician and an office holder, of France and actor of the claim to fame, that is a film and a military conflict, of Sean Pertwee.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v4 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Sean_Pertwee> <http://dbpedia.org/ontology/knownFor> ?v4 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/property/residence> ?v2 . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/France> . },"```sparql
# Step 1: Find Sean Pertwee's claim to fame that is both a film and a military conflict
SELECT ?filmConflict WHERE {
    <http://dbpedia.org/resource/Sean_Pertwee> <http://dbpedia.org/ontology/knownFor> ?filmConflict .
    ?filmConflict <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
    ?filmConflict <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film> .
}

# Step 2: Find an actor associated with this film/military conflict
SELECT ?actor WHERE {
    ?filmConflict <http://dbpedia.org/property/starring> ?actor .
}

# Step 3: Determine the native of this actor who is also a politician and office holder in France
SELECT ?politician WHERE {
    ?actor <http://dbpedia.org/ontology/nativeOf> ?nativePlace .
    ?nativePlace <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person> .
    ?nativePlace <http://dbpedia.org/ontology/politicalAffiliation> <http://dbpedia.org/resource/France> .
    ?nativePlace <http://dbpedia.org/ontology/officeHolder> ?office .
}

# Step 4: Locate the residence of this French politician/office holder, ensuring it is a settlement and British
SELECT ?residence WHERE {
    ?politician <http://dbpedia.org/property/residence> ?residence .
    ?residence <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement> .
    ?residence <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> .
}

# Step 5: Find the native of this British settlement
SELECT ?finalNative WHERE {
    ?residence <http://dbpedia.org/ontology/nativeOf> ?finalNative .
}
```",5,11,6,3,2,3,3,71,0,0,1,0,0.0,0
378,67,test,"Give me the claim to fame of the commander in the war, that is a military conflict and a societal event and an event, of Thomas Trigge and war of Carl Pontus Gahn and war of the commander in the reference, that is a military conflict, to Peninsular War.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/ontology/knownFor> ?result . ?v0 <http://dbpedia.org/ontology/commander> ?v6 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Peninsular War""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Thomas_Trigge> <http://dbpedia.org/ontology/battle> ?v1 . <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v6 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/commander> ?v3 . }","```sparql
# Step 1: Find wars involving Thomas Trigge that are military conflicts, societal events, and events
SELECT ?war1 WHERE {
    ?war1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>.
    ?war1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>.
    ?war1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>.
    <http://dbpedia.org/resource/Thomas_Trigge> <http://dbpedia.org/property/battle> ?war1.
}

# Step 2: Find wars involving Carl Pontus Gahn that are military conflicts and events
SELECT ?war2 WHERE {
    ?war2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>.
    ?war2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>.
    <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/property/battle> ?war2.
}

# Step 3: Find the reference war for Peninsular War and its commander
SELECT ?war3 ?commander WHERE {
    ?reference <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>.
    ?reference <http://dbpedia.org/ontology/reference> <http://dbpedia.org/resource/Peninsular_War>.
    ?reference <http://dbpedia.org/ontology/commander> ?commander.
}

# Step 4: Find the common war from steps 1, 2, and 3
SELECT DISTINCT ?commonWar WHERE {
    VALUES ?war1 { ?war1 }
    VALUES ?war2 { ?war2 }
    VALUES ?war3 { ?war3 }
    FILTER (?war1 = ?war2 && ?war1 = ?war3)
    BIND(?war1 AS ?commonWar)
}

# Step 5: Retrieve the claim to fame of the commander in the common war
SELECT ?claimToFame WHERE {
    ?commonWar <http://dbpedia.org/ontology/commander> ?commander.
    ?commander <http://dbpedia.org/property/knownFor> ?claimToFame.
}
```",7,11,8,3,3,3,3,71,0,0,2,0,0.0,0
659,51,test,"Give me the commander in the war, that is an event and a military conflict, of 1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish) and military force of the force, that is a societal event and an event and a military conflict, of the reference to Rutger Jan Schimmelpenninck.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v4 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/1st_Light_Cavalry_Lancers_Regiment_of_the_Imperial_Guard_(Polish)> <http://dbpedia.org/ontology/battle> ?v4 . ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://dbpedia.org/ontology/commander> ?v1 . ?v1 <http://xmlns.com/foaf/0.1/name> ""Rutger Jan Schimmelpenninck""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","```sparql
SELECT ?commander WHERE {
    ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>.
    ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>.
    
    <http://dbpedia.org/resource/1st_Light_Cavalry_Lancers_Regiment_of_the_Imperial_Guard_(Polish)> <http://dbpedia.org/property/militaryForce> ?war.
    
    ?reference <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>.
    ?reference <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>.
    ?reference <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>.
    
    ?reference <http://dbpedia.org/property/referenceTo> <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck>.
    ?reference <http://dbpedia.org/property/militaryForce> ?force.
    
    ?war <http://dbpedia.org/ontology/commander> ?commander.
}
```",5,10,6,3,2,3,3,71,0,0,31,0,0.0,0
959,30,test,Give me the native of Japan and manager of the team of Takashi Sekizuka and member of University of Tsukuba.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Japan> . ?v0 <http://dbpedia.org/ontology/manager> ?result . ?v0 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Takashi_Sekizuka> . ?result <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/University_of_Tsukuba> . },"```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Japan>.
  ?person <http://dbpedia.org/ontology/team> ?team.
  ?team <http://dbpedia.org/property/manager> <http://dbpedia.org/resource/Takashi_Sekizuka>.
  ?person <http://www.w3.org/ns/prov#wasDerivedFrom> <http://dbpedia.org/resource/University_of_Tsukuba>.
}
```",4,4,5,2,3,3,3,71,0,0,2,0,0.0,0
421,28,test,Give me the band member of the awardee of [[#Awards and nominations and native of the birthplace of Samir Bekrić and person born as the birth name of Dino Merlin.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v5 . <http://dbpedia.org/resource/Samir_Bekrić> <http://dbpedia.org/ontology/birthPlace> ?v3 . <http://dbpedia.org/resource/Dino_Merlin> <http://dbpedia.org/property/birthName> ?v5 . ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://dbpedia.org/property/awards> ""[[#Awards and nominations""@en . }","```sparql
SELECT ?bandMember WHERE {
  # Step 1: Find the birthplace of Samir Bekrić
  dbp:Sami_Bekrić dbo:birthPlace ?birthPlace .

  # Step 2: Find a person born in that place with the birth name Dino Merlin
  ?person dbo:birthPlace ?birthPlace ;
          foaf:name ""Dino Merlin""@en .
  
  # Step 3: Get awards and nominations for Dino Merlin
  ?person dbo:award ?award .

  # Step 4: Find band members associated with those awards or nominations
  ?bandMember dbo:award ?award .
}
```",6,6,7,2,3,2,3,28,0,0,1,0,0.0,0
378,18,test,"Give me the war of Carl Pontus Gahn and claim to fame of Louis des Balbes de Berton de Crillon, 1st Duke of Mahón and war of Joaquín Blake.","SELECT ?result WHERE { <http://dbpedia.org/resource/Joaquín_Blake> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Louis_des_Balbes_de_Berton_de_Crillon,_1st_Duke_of_Mahón> <http://dbpedia.org/ontology/knownFor> ?result . <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/ontology/battle> ?result . }","```sparql
SELECT ?war1 ?claimToFame ?war2 WHERE {
  # War associated with Carl Pontus Gahn
  <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/ontology/battle> ?war1 .
  
  # Claim to fame of Louis des Balbes de Berton de Crillon, 1st Duke of Mahón
  <http://dbpedia.org/resource/Louis_des_Balbes_de_Berton_de_Crillon,_1st_Duke_of_Mahón> <http://dbpedia.org/ontology/knownFor> ?claimToFame .
  
  # War associated with Joaquín Blake
  <http://dbpedia.org/resource/Joaquín_Blake> <http://dbpedia.org/ontology/battle> ?war2 .
}
```",3,3,4,1,3,3,3,71,2,19,0,0.09523809523809523,1.0,0.17391304347826084
767,50,test,Give me the alma mater of the administration of the reference to George Kilbon Nash and reference to the alter ego of Black Hood.,"SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/almaMater> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""George Kilbon Nash""@en . ?v4 <http://dbpedia.org/property/governor> ?v0 . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . <http://dbpedia.org/resource/Black_Hood> <http://dbpedia.org/property/alterEgo> ?v3 . }","```sparql
# Step 1: Find George Kilbon Nash and his reference
SELECT ?georgeKilbonNash WHERE {
    ?georgeKilbonNash rdfs:label ""George Kilbon Nash""@en .
}

# Step 2: Find the alter ego of Black Hood
SELECT ?blackHoodAlterEgo WHERE {
    ?blackHoodAlterEgo dbo:alterEgo <http://dbpedia.org/resource/Black_Hood> .
}

# Step 3: Find references to these entities (assuming a property 'reference' exists)
SELECT ?administration WHERE {
    ?adminReference dbo:reference ?georgeKilbonNash ;
                    dbo:reference ?blackHoodAlterEgo .
    
    ?adminReference rdfs:label ""Administration""@en .
}

# Step 4: Retrieve the alma mater of this administration
SELECT ?almaMater WHERE {
    ?administration dbo:almaMater ?almaMater .
}
```",5,5,6,3,2,3,3,71,0,0,2,0,0.0,0
328,68,test,"Give me the commander in the force of the person decedent at Budapest and leader of the office, that is a government agency, of Joseph Stalin and awardee of the award of the commander in Volcano and Ryukyu Islands campaign.",SELECT ?result WHERE { <http://dbpedia.org/resource/Volcano_and_Ryukyu_Islands_campaign> <http://dbpedia.org/ontology/commander> ?v5 . ?result <http://dbpedia.org/property/awards> ?v4 . ?v5 <http://dbpedia.org/property/awards> ?v4 . <http://dbpedia.org/resource/Joseph_Stalin> <http://dbpedia.org/property/office> ?v3 . ?v0 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Budapest> . ?v7 <http://dbpedia.org/ontology/commander> ?v0 . ?v7 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://dbpedia.org/ontology/leader> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. },"```sparql
SELECT ?commander WHERE {
  ?person decedentAtLocation <http://dbpedia.org/resource/Budapest> .
  ?office a <http://dbpedia.org/ontology/GovernmentAgency> ;
          leader ?leader .
  ?stalinOffice a <http://dbpedia.org/ontology/GovernmentAgency> ;
                leader ?leader .
  ?stalinOffice relatedTo <http://dbpedia.org/resource/Joseph_Stalin> .
  ?volcanoCommander receivedAward ?award .
  ?ryukyuCommander receivedAward ?award .
  ?commander commanderOfForce ?force .
  ?person decedentAtLocation ?location .
  FILTER(?location = <http://dbpedia.org/resource/Budapest>)
  ?leader relatedTo ?stalinOffice .
}
```",8,9,9,3,3,3,3,71,0,0,1,0,0.0,0
92,51,test,"Give me the band of the person born as the birth name of Joseph Michael and associated musical artist of the person born, that is an artist, as Jim Sheppard.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/birthName> ""Jim Sheppard""@en . ?v2 <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/ontology/bandMember> ?v2 . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Joseph_Michael> <http://dbpedia.org/property/birthName> ?v1 . }","```sparql
# Find the band of the person born as Joseph Michael
SELECT ?band1 WHERE {
  ?person1 <http://dbpedia.org/ontology/birthName> ""Joseph Michael"" .
  ?person1 <http://purl.org/dc/terms/associatedMedia> ?band1 .
}

UNION

# Find the band of the person born as Jim Sheppard
SELECT ?band2 WHERE {
  ?person2 <http://dbpedia.org/ontology/birthName> ""Jim Sheppard"" .
  ?person2 <http://purl.org/dc/terms/associatedMedia> ?band2 .
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
427,52,test,Give me the reference to the name of the party of Michele Pinto and party of the father of Lamberto Andreotti and party of Romano Prodi.,SELECT ?result WHERE { <http://dbpedia.org/resource/Lamberto_Andreotti> <http://dbpedia.org/property/father> ?v5 . ?v5 <http://dbpedia.org/ontology/party> ?result . ?v3 <http://xmlns.com/foaf/0.1/name> ?v2 . <http://dbpedia.org/resource/Michele_Pinto> <http://dbpedia.org/ontology/party> ?v3 . <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/ontology/party> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . },"```sparql
SELECT ?partyName WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/Michele_Pinto> <http://dbpedia.org/ontology/party> ?party .
    ?party rdfs:label ?partyName .
  }
  UNION
  OPTIONAL {
    ?father a dbo:Father ;
            foaf:name ""Giovanni Andreotti"" ;
            dbo:child <http://dbpedia.org/resource/Lamberto_Andreotti> .
    ?father dbo:politicalParty ?party .
    ?party rdfs:label ?partyName .
  }
  UNION
  OPTIONAL {
    <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/ontology/party> ?party .
    ?party rdfs:label ?partyName .
  }
}
```",6,6,7,3,3,3,3,71,0,0,2,0,0.0,0
184,65,test,"Give me the parent of the child of Archduke Joseph Francis of Austria and parent of the native of Budapest and child of the child of the parent, that is a royalty, of Archduke Ladislaus Philipp of Austria.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Francis_of_Austria> . <http://dbpedia.org/resource/Archduke_Ladislaus_Philipp_of_Austria> <http://dbpedia.org/ontology/parent> ?v0 . ?result <http://dbpedia.org/property/father> ?v6 . ?result <http://dbpedia.org/ontology/child> ?v3 . ?result <http://dbpedia.org/ontology/child> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v6 <http://dbpedia.org/property/father> ?v0 . ?v4 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Budapest> . },"```sparql
SELECT ?result WHERE {
  # Step 1: Find Archduke Joseph Francis's child
  ?child1 dbp:father <http://dbpedia.org/resource/Archduke_Joseph_Francis_of_Austria> .
  
  # Step 2: Find the parent of that child
  ?parent1 dbp:child ?child1 .

  # Step 3: Identify native of Budapest
  ?native dbp:nativePlace <http://dbpedia.org/resource/Budapest> .

  # Step 4: Find the parent of the native of Budapest
  ?parent2 dbp:child ?native .

  # Step 5: Find the child of that parent
  ?child2 dbp:parent ?parent2 .

  # Step 6: Identify Archduke Ladislaus Philipp's parent who is royalty
  ?royaltyParent dbp:child <http://dbpedia.org/resource/Archduke_Ladislaus_Philipp_of_Austria> .
  ?royaltyParent a dbo:Royalty .

  # Step 7: Find the child of that parent
  ?child3 dbp:parent ?royaltyParent .

  # Step 8: Find the parent of that child
  ?result dbp:child ?child3 .

  # Ensure result is royalty
  ?result a dbo:Royalty .
  
  FILTER (?parent1 = ?parent2)
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
9,64,test,"Give me the alma mater of the mayor, that is a politician, of the entity, that is an organisation, in Belfast and figure known as the nickname of the entity, that is an organisation and an educational institution, in Northern Ireland and alma mater of Allen Hill (scientist).",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/property/nickname> ?v1 . ?v3 <http://dbpedia.org/property/leader> ?v2 . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Northern_Ireland> . ?v3 <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Belfast> . <http://dbpedia.org/resource/Allen_Hill_(scientist)> <http://dbpedia.org/ontology/almaMater> ?result . ?v0 <http://dbpedia.org/property/nickname> ?v1 . ?v2 <http://dbpedia.org/ontology/almaMater> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. },"```sparql
# Step 1: Find the organization in Belfast
SELECT ?organization WHERE {
    ?organization <http://dbpedia.org/ontology/location> ?location .
    ?location <http://www.w3.org/2000/01/rdf-schema#label> ""Belfast""@en .
}

# Step 2: Find the mayor of this organization who is a politician
SELECT ?mayor WHERE {
    ?organization <http://dbpedia.org/ontology/politicalLeader> ?mayor .
    ?mayor <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .
}

# Step 3: Determine the alma mater of this mayor
SELECT ?almaMater WHERE {
    ?mayor <http://dbpedia.org/property/almaMater> ?almaMater .
}

# Step 4: Find the organization and educational institution in Northern Ireland with a nickname
SELECT ?entity WHERE {
    ?entity <http://www.w3.org/2000/01/rdf-schema#label> ?nickname .
    ?entity <http://dbpedia.org/ontology/location> ?location .
    ?location <http://www.w3.org/2000/01/rdf-schema#label> ""Northern Ireland""@en .
    ?entity <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation> .
    ?entity <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalOrganization> .
}

# Step 5: Confirm the alma mater of Allen Hill (scientist) matches this entity's alma mater
SELECT ?almaMater WHERE {
    <http://dbpedia.org/resource/Allen_Hill_(scientist)> <http://dbpedia.org/property/almaMater> ?almaMater .
    ?entity <http://dbpedia.org/property/almaMater> ?almaMater .
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
487,20,test,"Give me the country of the administration of the person born on 1955-01-26 and administration of the person born, that is a soccer player, as the birth name of Phil Scott.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/birthName> ?v4 . ?v1 <http://dbpedia.org/ontology/birthDate> ""1955-01-26""^^<http://www.w3.org/2001/XMLSchema#date> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?result <http://dbpedia.org/property/governor> ?v5 . <http://dbpedia.org/resource/Phil_Scott> <http://dbpedia.org/property/birthName> ?v4 . ?v2 <http://dbpedia.org/property/leader> ?v1 . ?v2 <http://dbpedia.org/ontology/country> ?result . }","```sparql
SELECT DISTINCT ?country1 ?country2 WHERE {
  # Find the administration country of the person born on 1955-01-26
  ?person1 dbp:birthDate ""1955-01-26""^^xsd:date .
  ?person1 dbo:nationality ?admin1 .
  ?admin1 rdfs:label ?country1 .

  # Find the soccer player with birth name Phil Scott and their administration country
  ?player foaf:name ""Phil Scott""@en ;
          dbp:sport ""Soccer"" ;
          dbp:birthName ""Phil Scott""@en .
  ?player dbo:nationality ?admin2 .
  ?admin2 rdfs:label ?country2 .

  FILTER(LANG(?country1) = 'en')
  FILTER(LANG(?country2) = 'en')
}
```",6,7,7,3,2,3,2,20,0,0,1,0,0.0,0
54,61,test,"Give me the predecessor of the child, that is an office holder and a royalty, of the reference to Thihapate of Mohnyin and parent of the child of the parent of Thado Minsaw of Prome.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v5 <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/ontology/successor> ?v3 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> . ?v1 <http://xmlns.com/foaf/0.1/name> ""Thihapate of Mohnyin""@en . ?v5 <http://dbpedia.org/property/father> ?v0 . }","```sparql
SELECT ?predecessor WHERE {
  # Step 1: Find the parent of Thado Minsaw of Prome
  ?thadoMinsaw dbo:parent ?parentOfThadoMinsaw .
  
  # Step 2: From that parent, find their child
  ?parentOfThadoMinsaw dbo:child ?childOfParent .

  # Step 3: Find the reference for Thihapate of Mohnyin
  ?thihapateReference rdfs:label ""Thihapate of Mohnyin""@en .
  
  # Step 4: Determine the child of this reference who is an office holder and royalty
  ?childOfThihapate dbo:parent ?thihapateReference ;
                   a dbo:OfficeHolder, dbo:Royalty .

  # Step 5: Find the predecessor of this identified child
  ?childOfThihapate dbo:predecessor ?predecessor .
}
```",6,8,7,3,2,3,3,71,1,0,0,1.0,1.0,1.0
92,38,test,"Give me the band of the person born as Joseph Michael Furney and associated musical artist of the person born, that is an artist, as Jim Sheppard.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/bandMember> ?v2 . ?v3 <http://dbpedia.org/property/birthName> ""Jim Sheppard""@en . ?v2 <http://dbpedia.org/property/birthName> ""Joseph Michael Furney""@en . }","```sparql
# Query to find the band of Joseph Michael Furney (Joe Satriani)
SELECT ?band WHERE {
  <http://dbpedia.org/resource/Joe_Satriani> <http://dbpedia.org/ontology/band> ?band .
}

UNION

# Query to find the associated musical artist of Jim Sheppard
SELECT ?associatedArtist WHERE {
  <http://dbpedia.org/resource/Jim_Sheppard_(musician)> <http://dbpedia.org/property/associatedMusicalArtist> ?associatedArtist .
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
827,18,test,"Give me the father of the child, that is a royalty, of Charles Augustus, Hereditary Grand Duke of Saxe-Weimar-Eisenach (1844–1894) and child of the child, that is a royalty, of the parent of Charles Alexander, Grand Duke of Saxe-Weimar-Eisenach.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Charles_Alexander,_Grand_Duke_of_Saxe-Weimar-Eisenach> . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Charles_Augustus,_Hereditary_Grand_Duke_of_Saxe-Weimar-Eisenach_(1844–1894)> . ?v2 <http://dbpedia.org/ontology/parent> ?v1 . }","```sparql
SELECT ?father WHERE {
    # Step 1: Find Charles Augustus's child who is royalty
    ?charlesAugustus dbpedia-owl:birthYear ""1844""^^xsd:gYear ;
                     dbpedia-owl:deathYear ""1894""^^xsd:gYear ;
                     dbpedia-owl:child ?royaltyChild .
    
    FILTER EXISTS { ?royaltyChild a dbo:Royalty }
    
    # Step 2: Find the parent of Charles Alexander and their child who is royalty
    ?charlesAlexander dbpedia-owl:parent ?parentOfCharlesAlexander .
    ?parentOfCharlesAlexander dbpedia-owl:child ?anotherRoyaltyChild .
    
    FILTER EXISTS { ?anotherRoyaltyChild a dbo:Royalty }
    
    # Step 3: Find the father of Charles Augustus's child
    ?royaltyChild dbpedia-owl:father ?father .
}
```",5,7,6,3,2,3,2,20,0,0,1,0,0.0,0
435,21,test,Give me the work of the author of Iceland and region of Greenwich Mean Time and territory administered from Reykjavík.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Reykjavík> . ?result <http://dbpedia.org/property/author> ?v1 . <http://dbpedia.org/resource/Iceland> <http://dbpedia.org/property/author> ?v1 . ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Greenwich_Mean_Time> . },"```sparql
# Step 1: Identify the entity that is a region of GMT and administered from Reykjavík
SELECT ?entity WHERE {
    ?entity <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Greenwich_Mean_Time>.
    ?entity <http://dbpedia.org/property/administrativeCentre> <http://dbpedia.org/resource/Reykjavík>.
}

# Step 2: Find the author of the work titled ""Iceland""
SELECT ?author WHERE {
    ?work <http://purl.org/dc/terms/title> ""Iceland""@en.
    ?work <http://dbpedia.org/ontology/author> ?author.
    FILTER(?entity = ?work) # Ensure the entity from Step 1 is the same as this work
}

# Step 3: Retrieve all works by the identified author
SELECT ?work WHERE {
    ?author <http://purl.org/dc/terms/creator> ?work.
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
547,64,test,Give me the resting place of the child of the child of William Haliburton and resting place of the awardee of the award of Gerald Graham and resting place of Simon Cadell.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Simon_Cadell> <http://dbpedia.org/ontology/restingPlace> ?result . ?v3 <http://dbpedia.org/property/father> ""William Haliburton""@en . <http://dbpedia.org/resource/Gerald_Graham> <http://dbpedia.org/property/awards> ?v0 . ?v3 <http://dbpedia.org/ontology/child> ?v2 . ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . ?v1 <http://dbpedia.org/property/awards> ?v0 . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . }","```sparql
SELECT ?restingPlace WHERE {
  # Resting place of the child of the child of William Haliburton
  {
    ?grandchild a dbo:Person ;
               dbo:parent ?child .
    ?child a dbo:Person ;
           dbo:parent <http://dbpedia.org/resource/William_Haliburton> .
    ?grandchild dbo:finalRestingPlace ?restingPlace .
  }
  
  UNION
  
  # Resting place of the awardee of the award of Gerald Graham
  {
    ?award a dbo:Award ;
           dbo:recipient <http://dbpedia.org/resource/Gerald_Graham> .
    ?awardee dbo:award ?award ;
             dbo:finalRestingPlace ?restingPlace .
  }
  
  UNION
  
  # Resting place of Simon Cadell
  {
    <http://dbpedia.org/resource/Simon_Cadell> dbo:finalRestingPlace ?restingPlace .
  }
}
```",7,7,8,3,3,3,3,71,0,0,1,0,0.0,0
701,47,test,Give me the parent of the child of the child of Seti I and parent of the child of Nefertari.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seti_I> . ?result <http://dbpedia.org/ontology/child> ?v4 . ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v4 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Nefertari> <http://dbpedia.org/ontology/child> ?v2 . },"```sparql
SELECT ?parent WHERE {
  # Identify a child of Seti I and Nefertari
  ?child1 dbp:father <http://dbpedia.org/resource/Seti_I> .
  ?child1 dbp:mother <http://dbpedia.org/resource/Nefertari> .

  # Find the grandchild (child of the child)
  ?grandchild dbp:parent ?child1 .

  # The parent of this grandchild should be Seti I and Nefertari
  ?grandchild dbp:father ?parent .
  ?grandchild dbp:mother ?parent .

  FILTER(?parent = <http://dbpedia.org/resource/Seti_I> || ?parent = <http://dbpedia.org/resource/Nefertari>)
}
```",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
161,54,test,"Give me the commander in Biscay Campaign and military force of the force, that is a societal event and an event and a military conflict, of Francisco Franco and military force of the force, that is a societal event and a military conflict, of the predecessor of Indalecio Prieto.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Indalecio_Prieto> . ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Franco> . <http://dbpedia.org/resource/Biscay_Campaign> <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v5 <http://dbpedia.org/ontology/commander> ?v0 . ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
# Step 1: Find the societal event that is also an event and a military conflict involving Francisco Franco
SELECT ?francoEvent WHERE {
    ?francoEvent <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>.
    ?francoEvent <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>.
    ?francoEvent <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>.
    <http://dbpedia.org/resource/Francisco_Franco> <http://dbpedia.org/property/involvedIn> ?francoEvent.
}

# Step 2: Find the predecessor of Indalecio Prieto and their associated societal event and military conflict
SELECT ?prietoPredecessor, ?prietoEvent WHERE {
    ?prietoPredecessor <http://www.w3.org/2000/01/rdf-schema#seeAlso> <http://dbpedia.org/resource/Indalecio_Prieto>.
    ?prietoEvent <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>.
    ?prietoEvent <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>.
    ?prietoPredecessor <http://dbpedia.org/property/involvedIn> ?prietoEvent.
}

# Step 3: Find the commander in the Biscay Campaign and the military force involved
SELECT ?commander, ?militaryForce WHERE {
    ?biscayCampaign <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>.
    ?biscayCampaign <http://dbpedia.org/property/name> ""Biscay Campaign"".
    ?biscayCampaign <http://dbpedia.org/ontology/commander> ?commander.
    ?francoEvent <http://dbpedia.org/ontology/militaryForce> ?militaryForce1.
    ?prietoEvent <http://dbpedia.org/ontology/militaryForce> ?militaryForce2.
    FILTER(?militaryForce1 = ?militaryForce2)
}
```",6,11,7,3,3,3,3,71,0,0,3,0,0.0,0
701,46,test,Give me the parent of the child of Ramesses II and parent of the child of the spouse of Amun-her-khepeshef.,SELECT ?result WHERE { <http://dbpedia.org/resource/Amun-her-khepeshef> <http://dbpedia.org/ontology/spouse> ?v2 . ?result <http://dbpedia.org/ontology/child> ?v4 . ?v2 <http://dbpedia.org/ontology/child> ?v1 . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ramesses_II> . ?v1 <http://dbpedia.org/ontology/parent> ?result . },"```sparql
SELECT ?parent WHERE {
  # Step 1: Identify the children of Ramesses II
  ?child rdf:type dbo:Child ;
         dbo:parent <http://dbpedia.org/resource/Ramesses_II> .

  # Step 2: Determine the parents of these children (Ramesses II)
  BIND(<http://dbpedia.org/resource/Ramesses_II> AS ?ramessesParent)

  # Step 3: Identify the spouse of Amun-her-khepeshef
  <http://dbpedia.org/resource/Amun-her-khepeshef> dbo:spouse ?spouse .

  # Step 4: Find the children of this spouse
  ?child2 rdf:type dbo:Child ;
          dbo:parent ?spouse .

  # Step 5: Determine the parents of these children (the spouse)
  BIND(?spouse AS ?spouseParent)

  # Final step: Find common parent(s) from steps 2 and 5
  VALUES (?parent) { (<http://dbpedia.org/resource/Ramesses_II> <URI_of_the_spouse>) }
}
```",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
232,52,test,"Give me the native of London and child of the person born as the birth name of Jon Pertwee and actor of the claim to fame, that is a film and a military conflict, of Sean Pertwee.",SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Sean_Pertwee> <http://dbpedia.org/ontology/knownFor> ?v5 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/London> . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v5 <http://dbpedia.org/ontology/starring> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v2 <http://dbpedia.org/property/birthName> ?v3 . },"```sparql
# Step 1: Get Jon Pertwee's birth name
SELECT ?birthName WHERE {
    <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/ontology/birthName> ?birthName .
}

# Step 2: Find the child of Jon Pertwee who is a native of London
SELECT ?child WHERE {
    ?person <http://dbpedia.org/ontology/birthName> ?birthName .
    ?person <http://dbpedia.org/ontology/nativeOf> <http://dbpedia.org/resource/London> .
    ?person <http://dbpedia.org/ontology/familyMember> ?child .
    FILTER(?birthName = ""Jon Pertwee"") # Replace with actual birth name from Step 1
}

# Step 3: Find Sean Pertwee's claim to fame that is both a film and military conflict
SELECT ?claimToFame WHERE {
    <http://dbpedia.org/resource/Sean_Pertwee> <http://dbpedia.org/ontology/knownFor> ?claimToFame .
    ?claimToFame <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film> .
    ?claimToFame <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
}

# Step 4: Find the actor associated with this claim to fame
SELECT ?actor WHERE {
    ?claimToFame <http://dbpedia.org/ontology/actor> ?actor .
    FILTER(?claimToFame = ?claimToFameFromStep3) # Replace with actual result from Step 3
}
```

Note: The query assumes that the DBpedia data model supports these relationships and properties. Adjustments may be needed based on actual schema details in DBpedia.",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
801,37,test,"Give me the associated musical artist of Chris Taylor (music producer) and producer of the work, that is a musical work and a song and a work, of the professional, that is a musical artist, in Rapper.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. <http://dbpedia.org/resource/Chris_Taylor_(music_producer)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://dbpedia.org/property/writer> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://dbpedia.org/ontology/producer> ?result . ?v0 <http://dbpedia.org/property/occupation> ""Rapper""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. }","```sparql
SELECT ?rapper WHERE {
  # Step 1: Find associated musical artist of Chris Taylor
  <http://dbpedia.org/resource/Chris_Taylor_(music_producer)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?artist .

  # Step 2: Identify works produced by Chris Taylor that are both a musical work and a song
  ?work <http://dbpedia.org/property/producer> <http://dbpedia.org/resource/Chris_Taylor_(music_producer)> ;
        <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>, <http://dbpedia.org/ontology/Song> .

  # Step 3: Find which rapper is professionally associated with these works
  ?rapper <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> ;
          <http://dbpedia.org/property/profession> <http://dbpedia.org/resource/Rapper> .
  
  # Link the rapper to the work
  ?rapper <http://dbpedia.org/ontology/work> ?work .
}
```",4,8,5,3,2,3,3,71,0,0,2,0,0.0,0
778,17,test,"Give me the entity in United States and author of the work, that is a software, of the author of Pushd and popd.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/author> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Software>. <http://dbpedia.org/resource/Pushd_and_popd> <http://dbpedia.org/property/author> ?v0 . ?v3 <http://dbpedia.org/property/author> ?v0 . ?result <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/United_States> . },"```sparql
SELECT ?entity WHERE {
  ?software <http://dbpedia.org/ontology/author> <http://dbpedia.org/resource/Bill_Joy>.
  ?software <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Software>.
  ?entity <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>.
  ?entity <http://dbpedia.org/ontology/associatedWith> ?software.
}
```",4,5,5,3,2,3,2,20,0,0,1,0,0.0,0
303,24,test,"Give me the party of the person born, that is a politician, as Arnulfo Arias Madrid and entity in the country, that is a country, of El Valle de Antón.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ""Arnulfo Arias Madrid""@en . ?result <http://dbpedia.org/ontology/country> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://dbpedia.org/ontology/party> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/El_Valle_de_Antón> <http://dbpedia.org/ontology/country> ?v2 . }","```sparql
SELECT ?party WHERE {
  ?person <http://dbpedia.org/ontology/birthName> ""Arnulfo Arias Madrid"" .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .
  ?person <http://dbpedia.org/property/placeOfBirth> ?placeOfBirth .
  ?placeOfBirth <http://dbpedia.org/ontology/location> ?location .
  ?location <http://www.w3.org/2000/01/rdf-schema#label> ""El Valle de Antón""@en .
  ?location <http://dbpedia.org/ontology/country> ?country .
  ?country <http://www.w3.org/2000/01/rdf-schema#label> ""Panama""@en .
  ?person <http://dbpedia.org/ontology/party> ?party .
}
```",4,6,5,2,2,2,3,28,0,0,1,0,0.0,0
378,59,test,"Give me the war of the commander in the reference, that is a military conflict, to Peninsular War and war of the person born as the birth name of Carl Pontus Gahn.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Peninsular War""@en . ?v0 <http://dbpedia.org/ontology/commander> ?v5 . <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/property/birthName> ?v3 . ?v5 <http://dbpedia.org/ontology/battle> ?result . }","```sparql
SELECT ?war WHERE {
  ?peninsularWar <http://dbpedia.org/ontology/reference> ?reference .
  ?peninsularWar <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
  
  ?reference <http://dbpedia.org/ontology/commander> ?commander .
  ?commander <http://dbpedia.org/ontology/battle> ?war .

  ?carlPontusGahn <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person> ;
                  <http://dbpedia.org/property/birthName> ""Carl Pontus Gahn"" .
  
  ?carlPontusGahn <http://dbpedia.org/ontology/battle> ?war .

  FILTER(?peninsularWar = <http://dbpedia.org/resource/Peninsular_War>)
}
```",6,7,7,3,2,3,3,71,0,0,2,0,0.0,0
232,71,test,"Give me the child of the person born as the birth name of Jon Pertwee and actor of the claim to fame, that is a film and a military conflict, of the professional in Actor, narrator and producer and native of the residence, that is a settlement and British, of the native, that is a politician and an office holder, of France.","SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v7 <http://dbpedia.org/property/residence> ?v8 . ?result <http://dbpedia.org/ontology/birthPlace> ?v8 . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v8 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v5 <http://dbpedia.org/ontology/starring> ?result . ?v2 <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v4 <http://dbpedia.org/ontology/knownFor> ?v5 . ?v7 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/France> . ?v4 <http://dbpedia.org/property/occupation> ""Actor, narrator and producer""@en . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/property/birthName> ?v1 . }","```sparql
# Step 1: Identify the person born as Jon Pertwee
SELECT ?jonPertwee WHERE {
    ?jonPertwee <http://dbpedia.org/ontology/birthName> ""Jon Pertwee"" .
}

# Step 2: Find the claim to fame of Sean Pertwee that is both a film and a military conflict
SELECT ?claimToFame WHERE {
    ?claimToFame <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
    ?claimToFame <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film> .
    <http://dbpedia.org/resource/Sean_Pertwee> <http://dbpedia.org/ontology/knownFor> ?claimToFame .
}

# Step 3: Determine the professional in Actor, narrator, and producer who has a residence that is a British settlement
SELECT ?professional WHERE {
    ?professional <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Actor> .
    ?professional <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Narrator> .
    ?professional <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Producer> .
    ?residence <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> .
    ?residence <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement> .
    ?professional <http://dbpedia.org/property/residence> ?residence .
}

# Step 4: Locate the native politician and office holder from France
SELECT ?native WHERE {
    ?native <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .
    ?native <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder> .
    ?native <http://dbpedia.org/property/nationality> <http://dbpedia.org/resource/France> .
}

# Step 5: Find the child of Jon Pertwee who acted in the claim to fame identified in step 2
SELECT ?child WHERE {
    ?jonPertwee <http://dbpedia.org/ontology/birthName> ""Jon Pertwee"" .
    ?child <http://dbpedia.org/ontology/father> ?jonPertwee .
    ?child <http://dbpedia.org/ontology/performance> ?claimToFame .
}
```",9,15,10,3,3,3,3,71,0,0,1,0,0.0,0
356,19,test,"Give me the team of the native, that is a soccer player and a soccer manager, of the birth place, that is English and a settlement, of Gary Williams (footballer, born 1960) and player in the successor of 2014 Sacramento Republic FC season.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v4 <http://dbpedia.org/ontology/birthPlace> ?v0 . <http://dbpedia.org/resource/Gary_Williams_(footballer,_born_1960)> <http://dbpedia.org/ontology/birthPlace> ?v0 . ?result <http://dbpedia.org/ontology/manager> ?v4 . ?v2 <http://dbpedia.org/ontology/team> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/2014_Sacramento_Republic_FC_season> <http://dbpedia.org/ontology/successor> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. }","```sparql
# Step 1: Find the birthplace of Gary Williams that is an English settlement.
SELECT ?birthPlace WHERE {
    <http://dbpedia.org/resource/Gary_Williams_(footballer,_born_1960)> <http://www.w3.org/2002/07/owl#sameAs> ?person .
    ?person <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
    ?birthPlace <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/England> ;
                a <http://dbpedia.org/ontology/Settlement> .
}

# Step 2: Find a native soccer player and manager from this birthplace.
SELECT DISTINCT ?native WHERE {
    ?native <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
    ?native <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> (<http://dbpedia.org/ontology/SoccerPlayer> <http://dbpedia.org/ontology/SoccerManager>) .
}

# Step 3: Determine the team associated with this individual.
SELECT DISTINCT ?team WHERE {
    ?native <http://dbpedia.org/ontology/team> ?team .
}

# Step 4: Identify the successor of the 2014 Sacramento Republic FC season.
SELECT ?successorSeason WHERE {
    <http://dbpedia.org/resource/Sacramento_Republic_FC_season,_2014> <http://dbpedia.org/property/successor> ?successorSeason .
}

# Final query combining all steps
SELECT DISTINCT ?team WHERE {
    # Step 1: Birthplace of Gary Williams
    ?birthPlace a <http://dbpedia.org/ontology/Settlement> ;
                <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/England> .
    <http://dbpedia.org/resource/Gary_Williams_(footballer,_born_1960)> <http://www.w3.org/2002/07/owl#sameAs> ?person ;
                                                                    <http://dbpedia.org/ontology/birthPlace> ?birthPlace .

    # Step 2: Native soccer player and manager
    ?native <http://dbpedia.org/ontology/birthPlace> ?birthPlace ;
            <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> (<http://dbpedia.org/ontology/SoccerPlayer> <http://dbpedia.org/ontology/SoccerManager>) .

    # Step 3: Team associated with the native
    ?native <http://dbpedia.org/ontology/team> ?team .

    # Step 4: Successor of the 2014 Sacramento Republic FC season
    OPTIONAL {
        <http://dbpedia.org/resource/Sacramento_Republic_FC_season,_2014> <http://dbpedia.org/property/successor> ?successorSeason .
    }
}
```",5,9,6,3,2,3,2,20,0,0,1,0,0.0,0
528,53,test,"Give me the force of the person born as Narciso Campero Leyes and war of Orozimbo Barbosa and war of the military force of the entity, that is a societal event, in Chile.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ""Narciso Campero Leyes""@en . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/commander> ?v1 . ?v2 <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Chile> . <http://dbpedia.org/resource/Orozimbo_Barbosa> <http://dbpedia.org/ontology/battle> ?result . }","```sparql
# Step 1: Get the military force of Narciso Campero Leyes
SELECT ?forceNarciso WHERE {
    ?person rdfs:label ""Narciso Campero Leyes""@en .
    ?person dbo:birthName ""Narciso Campero Leyes"" .
    ?person dbo:militaryForce ?forceNarciso .
}

# Step 2: Get the war involving Orozimbo Barbosa and its military force
SELECT ?warOrozimbo ?forceOrozimbo WHERE {
    ?barbosa rdfs:label ""Orozimbo Barbosa""@en .
    ?barbosa dbo:militaryConflict ?warOrozimbo .
    ?warOrozimbo dbo:militaryForce ?forceOrozimbo .
}

# Step 3: Get a societal event in Chile and its military force
SELECT ?eventChile ?forceEvent WHERE {
    ?event rdfs:label ?label ;
           dbo:placeOfBirth ?chile ;
           rdf:type <http://dbpedia.org/ontology/SocietalEvent> .
    ?chile rdfs:label ""Chile""@en .
    ?event dbo:militaryForce ?forceEvent .
}
```",6,7,7,3,3,3,3,71,0,0,2,0,0.0,0
9,38,test,Give me the alma mater of the awardee of Royal Medal and figure known as the nickname of Queen's University Belfast.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ?v2 . <http://dbpedia.org/resource/Queen's_University_Belfast> <http://dbpedia.org/property/nickname> ?v2 . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Medal> . ?v3 <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
SELECT ?almaMater WHERE {
  ?entity <http://dbpedia.org/ontology/nickname> ?nickname .
  ?entity <http://dbpedia.org/property/almaMater> ?almaMater .
  ?entity <http://dbpedia.org/ontology/award> ?award .
  ?award <http://www.w3.org/2000/01/rdf-schema#label> ""Royal Medal"" .
  FILTER(CONTAINS(LCASE(?nickname), ""queens university belfast""))
}
```",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
487,19,test,"Give me the administration of the person born, that is a soccer player, as the birth name of Phil Scott and country of the administration of Patricia McCoy.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/country> ?result . <http://dbpedia.org/resource/Phil_Scott> <http://dbpedia.org/property/birthName> ?v0 . ?v4 <http://dbpedia.org/property/birthName> ?v0 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v2 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Patricia_McCoy> . ?result <http://dbpedia.org/property/governor> ?v4 . },"```sparql
# Step 1: Identify the person born as Phil Scott who is a soccer player and find their administration.
SELECT ?person WHERE {
    ?person <http://dbpedia.org/ontology/birthName> ""Phil Scott"" .
    ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer> .
}

# Step 2: Find the administration of this person.
SELECT ?administration WHERE {
    ?person <http://dbpedia.org/property/administration> ?administration .
    FILTER(?person IN {<result_of_step_1>})
}

# Step 3: Identify Patricia McCoy's administration and her country.
SELECT ?country WHERE {
    ?patricia <http://dbpedia.org/ontology/administration> ?administration .
    ?patricia <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person> .
    FILTER(?patricia = <http://dbpedia.org/resource/Patricia_McCoy>)
    
    ?country <http://dbpedia.org/property/administration> ?administration .
}

# Step 4: Retrieve the administration of the person identified in step 1 based on the country from step 3.
SELECT ?finalAdministration WHERE {
    ?person <http://dbpedia.org/property/administration> ?finalAdministration .
    FILTER(?person IN {<result_of_step_1>})
    
    ?country <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country> .
    FILTER(?country = <result_of_step_3>)
}
```",5,6,6,3,2,3,2,20,0,0,1,0,0.0,0
404,56,test,"Give me the parent of Prince Ernest Augustus of Hanover (born 1914) and spouse of the person born, that is a royalty, as Princess Victoria Louise of Prussia and child of the father of the spouse of Princess Victoria Louise of Prussia.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Prince_Ernest_Augustus_of_Hanover_(born_1914)> . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?v0 . ?v0 <http://dbpedia.org/property/father> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/parent> ?v1 . ?v2 <http://dbpedia.org/property/birthName> ""Princess Victoria Louise of Prussia""@en . }","```sparql
SELECT ?parent ?spouse ?child WHERE {
  # Step 1: Find the parent of Prince Ernest Augustus of Hanover (born 1914)
  <http://dbpedia.org/resource/Prince_Ernest_Augustus_of_Hanover_(1914)> <http://dbpedia.org/ontology/father> ?parent .

  # Step 2: Find the spouse of Princess Victoria Louise of Prussia
  <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?spouse .

  # Step 3: Determine the child of the father of the spouse from step 2
  ?spouse <http://dbpedia.org/ontology/father> ?father .
  ?father <http://dbpedia.org/ontology/child> ?child .
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
251,20,test,"Give me the location of Battle of Marengo and administration of the ruling party, that is a political party and an organisation, in Sicily and death place of Laura Mancinelli.",SELECT ?result WHERE { <http://dbpedia.org/resource/Sicily> <http://dbpedia.org/property/leaderParty> ?v3 . <http://dbpedia.org/resource/Laura_Mancinelli> <http://dbpedia.org/ontology/deathPlace> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?result <http://dbpedia.org/property/leaderParty> ?v3 . <http://dbpedia.org/resource/Battle_of_Marengo> <http://dbpedia.org/ontology/place> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
SELECT DISTINCT ?location ?administration ?deathPlace WHERE {
  # Retrieve the location of the Battle of Marengo
  <http://dbpedia.org/resource/Battle_of_Marengo> <http://dbpedia.org/ontology/location> ?location .

  # Retrieve the administration of the ruling party in Sicily, where the ruling party is both a political party and an organization
  {
    SELECT DISTINCT ?party ?administration WHERE {
      ?party <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty> .
      ?party <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organization> .
      ?party <http://dbpedia.org/property/rulingParty> ?administration .
      ?administration <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Sicily> .
    }
  } BIND(?party AS ?rulingParty) # Bind the ruling party to a variable for clarity

  # Retrieve the death place of Laura Mancinelli
  <http://dbpedia.org/resource/Laura_Mancinelli> <http://dbpedia.org/ontology/deathPlace> ?deathPlace .
}
```",4,6,5,2,3,2,3,28,0,0,1,0,0.0,0
528,27,test,Give me the force of the person born as the birth name of Narciso Campero.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> ?v2 . ?v2 <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Narciso_Campero> <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
SELECT ?force WHERE {
  <http://dbpedia.org/resource/Narciso_Campero> <http://www.w3.org/2000/01/rdf-schema#label> ""Narciso Campero"" .
  OPTIONAL { <http://dbpedia.org/resource/Narciso_Campero> <http://dbpedia.org/ontology/birthName> ?birthName . }
  OPTIONAL { ?person <http://www.w3.org/2000/01/rdf-schema#label> ?birthName . }
  OPTIONAL { ?person <http://dbpedia.org/ontology/militaryService> ?service . }
  OPTIONAL { ?service <http://dbpedia.org/ontology/force> ?force . }
}
```",3,3,4,3,1,3,3,71,0,0,4,0,0.0,0
328,58,test,"Give me the awardee of Order of Suvorov and commander in the force of Ferenc Szálasi and leader of the office, that is a government agency, of the leader, that is an office holder and a politician, of Gustav Jonson.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Order_of_Suvorov> . ?v2 <http://dbpedia.org/ontology/leader> ?result . <http://dbpedia.org/resource/Gustav_Jonson> <http://dbpedia.org/property/leader> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/property/office> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v5 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Ferenc_Szálasi> . ?v5 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT ?awardee ?commander ?leader WHERE {
  ?awardee <http://dbpedia.org/ontology/award> <http://dbpedia.org/resource/Order_of_Suvorov> .
  
  ?force <http://dbpedia.org/property/commander> ?commander .
  ?force <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Ferenc_Szálasi> .

  ?office <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency> .
  ?office <http://dbpedia.org/property/leader> ?leader .
  
  ?gustav <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder> ;
         <http://dbpedia.org/ontology/politician> true ;
         <http://dbpedia.org/property/leader> ?officeLeader .
  
  FILTER(?awardee = ?commander && ?commander = ?leader)
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
404,30,test,"Give me the spouse of Princess Victoria Louise of Prussia and child of the father of Ernest Augustus, Duke of Brunswick and parent of Prince Ernest Augustus of Hanover (born 1914).","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Prince_Ernest_Augustus_of_Hanover_(born_1914)> . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/property/father> ?v1 . }","```sparql
# Find the spouse of Princess Victoria Louise of Prussia
SELECT ?spouse WHERE {
    <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?spouse .
}

# Find the father of Ernest Augustus, Duke of Brunswick (who is also the father of Princess Victoria Louise)
SELECT ?father WHERE {
    <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/ontology/father> ?father .
}

# Check if this person is a parent of Prince Ernest Augustus of Hanover (born 1914)
SELECT ?person WHERE {
    ?person <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> .
    ?person <http://dbpedia.org/ontology/father> ?father .
    ?father <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> .
    ?person <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Prince_Ernest_Augustus_of_Hanover_(1914-1987)> .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
54,48,test,"Give me the child of the father of the child of Thinkhaya of Pagan and predecessor of the child, that is an office holder and a royalty, of Thihapate of Mohnyin.",SELECT ?result WHERE { <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/successor> ?v1 . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Thihapate_of_Mohnyin> . ?v3 <http://dbpedia.org/property/father> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
SELECT ?result WHERE {
    # Step 1: Find Thinkhaya of Pagan's child
    ?thinkhayaChild dbpedia-owl:childOf <http://dbpedia.org/resource/Thinkhaya_of_Pagan> .
    
    # Step 2: Thinkhaya is the father, so we use his child directly
    
    # Step 3: Find predecessor of Thinkhaya's child
    ?predecessor dbpedia-owl:predecessorOf ?thinkhayaChild .
    
    # Step 4: Identify Thihapate of Mohnyin and find his child who is an office holder and royalty
    ?thihapateChild dbpedia-owl:childOf <http://dbpedia.org/resource/Thihapate_of_Mohnyin> ;
                    a dbo:OfficeHolder, dbo:Royalty .
    
    # Step 5: Find the child of the predecessor identified in step 3
    ?result dbpedia-owl:childOf ?predecessor .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
392,24,test,"Give me the province of the residence, that is a settlement and Italian, of Sebastiano Bianchetti and region of the time zone, that is a sports event, of Aguilar de Segarra.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/timeZone> ?v2 . ?v1 <http://dbpedia.org/ontology/province> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Sebastiano_Bianchetti> <http://dbpedia.org/property/residence> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsEvent>. <http://dbpedia.org/resource/Aguilar_de_Segarra> <http://dbpedia.org/ontology/timeZone> ?v2 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. },"```sparql
# Query 1: Find the residence of Sebastiano Bianchetti that is a settlement in Italy
SELECT ?residence WHERE {
    <http://dbpedia.org/resource/Sebastiano_Bianchetti> <http://dbpedia.org/property/residence> ?residence .
    ?residence <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement> .
    ?residence <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy> .
}

# Query 2: Find the province of this residence
SELECT ?province WHERE {
    ?residence <http://dbpedia.org/ontology/province> ?province .
    FILTER(?residence IN (<result_from_query_1>))
}

# Query 3: Find the time zone related to a sports event in Aguilar de Segarra
SELECT ?timeZone WHERE {
    ?event <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsEvent> .
    ?event <http://dbpedia.org/property/location> <http://dbpedia.org/resource/Aguilar_de_Segarra> .
    ?event <http://dbpedia.org/property/timeZone> ?timeZone .
}

# Query 4: Find the region of this time zone
SELECT ?region WHERE {
    ?timeZone <http://dbpedia.org/ontology/region> ?region .
    FILTER(?timeZone IN (<result_from_query_3>))
}
```",4,7,5,2,2,2,3,28,0,0,1,0,0.0,0
314,23,test,"Give me the person deceased at the headquarter of House of Sombrerete and commander in the profession, that is an event and a societal event, of Lisa Gavrić.",SELECT ?result WHERE { <http://dbpedia.org/resource/Lisa_Gavrić> <http://dbpedia.org/property/occupation> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/House_of_Sombrerete> <http://dbpedia.org/ontology/location> ?v2 . ?v1 <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/restingPlace> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/House_of_Sombrerete#Headquarters>.
  ?person <http://dbpedia.org/ontology/commander> ?profession.
  
  <http://dbpedia.org/resource/Lisa_Gavrić> <http://dbpedia.org/ontology/profession> ?profession.
  
  ?profession <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>.
  ?profession <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>.
}
```",4,6,5,2,2,2,3,28,0,0,1,0,0.0,0
9,51,test,"Give me the alma mater of the awardee of Royal Medal and figure known as the nickname of the entity, that is an organisation and an educational institution, in Northern Ireland.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?result <http://dbpedia.org/property/nickname> ?v2 . ?v4 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Medal> . ?v1 <http://dbpedia.org/property/nickname> ?v2 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Northern_Ireland> . ?v4 <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
SELECT ?almaMater WHERE {
  ?entity <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation> .
  ?entity <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalOrganization> .
  ?entity <http://dbpedia.org/property/location> <http://dbpedia.org/resource/Northern_Ireland> .
  
  ?entity <http://dbpedia.org/ontology/nickName> ?nickname .

  ?figure <http://www.w3.org/2000/01/rdf-schema#label> ?nickname .
  
  ?awardee <http://dbpedia.org/property/knows> ?figure ;
           <http://dbpedia.org/ontology/award> ?award .
  ?award <http://purl.org/dc/terms/title> ""Royal Medal"" .

  ?awardee <http://dbpedia.org/ontology/almaMater> ?almaMater .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
617,58,test,Give me the child of Antiochus III the Great and spouse of the child of Antiochus III the Great and parent of the child of the commander in Battle of Panium.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Antiochus_III_the_Great> . ?v5 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/child> ?v2 . ?v1 <http://dbpedia.org/ontology/child> ?v2 . <http://dbpedia.org/resource/Antiochus_III_the_Great> <http://dbpedia.org/ontology/child> ?v5 . <http://dbpedia.org/resource/Battle_of_Panium> <http://dbpedia.org/ontology/commander> ?v1 . },"```sparql
SELECT ?child ?spouse ?parentOfChildInPanium WHERE {
  # Step 1: Identify Antiochus III the Great's children
  <http://dbpedia.org/resource/Antiochus_III_the_Great> <http://dbpedia.org/ontology/child> ?child .

  # Step 2: Find a child who is also listed as a spouse
  ?child <http://dbpedia.org/property/spouse> ?spouse .

  # Step 3: Identify this child's own children
  OPTIONAL { ?child <http://dbpedia.org/ontology/child> ?grandChild . }

  # Step 4: Retrieve the commander in the Battle of Panium and their child
  <http://dbpedia.org/resource/Battle_of_Panium> <http://dbpedia.org/ontology/commander> ?commander .
  ?commander <http://dbpedia.org/ontology/child> ?parentOfChildInPanium .

  # Step 5: Check if there is any overlap
  FILTER(?spouse = ?parentOfChildInPanium)
}
```",6,6,7,3,3,3,3,71,2,1,0,0.6666666666666666,1.0,0.8
767,65,test,"Give me the entity in the administration, that is a settlement, of Green and reference to the alter ego of Black Hood and alma mater of the administration of the reference to George Kilbon Nash.","SELECT ?result WHERE { ?v6 <http://dbpedia.org/ontology/almaMater> ?result . ?v4 <http://dbpedia.org/property/leaderParty> ""Green""@en . <http://dbpedia.org/resource/Black_Hood> <http://dbpedia.org/property/alterEgo> ?v3 . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . ?v0 <http://xmlns.com/foaf/0.1/name> ""George Kilbon Nash""@en . ?result <http://dbpedia.org/ontology/state> ?v4 . ?v6 <http://dbpedia.org/property/governor> ?v0 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. }","```sparql
SELECT ?entity WHERE {
  ?administration <http://dbpedia.org/ontology/administration> ?entity .
  ?entity <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement> .
  
  OPTIONAL { 
    ?entity <http://dbpedia.org/property/referenceTo> ?greenEntity .
    ?greenEntity rdfs:label ""Green"" .
  }
  
  OPTIONAL {
    ?blackHoodAlterEgo <http://dbpedia.org/ontology/alterEgo> ?entity .
    ?blackHoodAlterEgo rdfs:label ""Black Hood"" .
  }

  OPTIONAL {
    ?nashAlmaMater <http://dbpedia.org/ontology/almaMater> ?administration .
    ?nashAlmaMater <http://dbpedia.org/property/name> ?name .
    FILTER regex(?name, ""George Kilbon Nash"", ""i"")
  }
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
182,22,test,Give me the war of the author of 2019 Sri Lanka Easter bombings and war of the work of Gotabhaya Rajapaksa.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v3 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Gotabhaya_Rajapaksa> . <http://dbpedia.org/resource/2019_Sri_Lanka_Easter_bombings> <http://dbpedia.org/property/author> ?v2 . ?v3 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
# Find the war associated with the author of ""2019 Sri Lanka Easter bombings""
SELECT ?author (GROUP_CONCAT(?war; separator="", "") AS ?wars) WHERE {
  ?event rdfs:label ""2019 Sri Lanka Easter bombings""@en.
  ?event dbo:author ?author.
  ?author dbo:knownFor ?work.
  ?work dbo:subject ?war.
  FILTER (?war rdf:type dbo:MilitaryConflict)
} GROUP BY ?author

UNION

# Find the war associated with a work of Gotabhaya Rajapaksa
SELECT ?work (GROUP_CONCAT(?war; separator="", "") AS ?wars) WHERE {
  ?person rdfs:label ""Gotabhaya Rajapaksa""@en.
  ?person dbo:worksFor|dbo:author ?work.
  ?work dbo:subject ?war.
  FILTER (?war rdf:type dbo:MilitaryConflict)
} GROUP BY ?work
```",4,4,5,2,2,2,3,28,0,0,1,0,0.0,0
659,46,test,"Give me the commander in the war, that is an event and a military conflict, of 1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish) and commander in the force of the native, that is an office holder, of Kingdom of Ireland.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/1st_Light_Cavalry_Lancers_Regiment_of_the_Imperial_Guard_(Polish)> <http://dbpedia.org/ontology/battle> ?v4 . ?v4 <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Kingdom_of_Ireland> . ?v1 <http://dbpedia.org/ontology/commander> ?v2 . },"```sparql
SELECT ?commander WHERE {
    ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>.
    ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>.

    <http://dbpedia.org/resource/1st_Light_Cavalry_Lancers_Regiment_of_the_Imperial_Guard_(Polish)> <http://dbpedia.org/property/commander> ?commander.
    ?war <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/1st_Light_Cavalry_Lancers_Regiment_of_the_Imperial_Guard_(Polish)>.

    ?officeHolder <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>.
    ?officeHolder <http://dbpedia.org/property/nationality> <http://dbpedia.org/resource/Kingdom_of_Ireland>.

    ?force <http://dbpedia.org/property/commander> ?commander.
    ?officeHolder <http://dbpedia.org/property/commandedForce> ?force.

}
```",5,8,6,3,2,3,3,71,0,0,71,0,0.0,0
485,20,test,"Give me the entity in Nottinghamshire and birth place of the awardee, that is a writer and a poet, of Eric Gregory Award and entity in United Kingdom.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Poet>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Eric_Gregory_Award> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>. ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Nottinghamshire> . },"```sparql
SELECT ?entity WHERE {
  ?entity <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Nottinghamshire>.
  ?entity <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>.
  ?entity <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>.

  ?person <http://dbpedia.org/property/birthPlace> ?entity.
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>.
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Poet>.

  ?person <http://dbpedia.org/property/award> <http://dbpedia.org/resource/Eric_Gregory_Award>.
}
```",4,6,5,2,3,2,3,28,0,0,1,0,0.0,0
528,68,test,"Give me the war of the commander in the work of --01-09 and force of the person born as Narciso Campero Leyes and war of the military force of the entity, that is a societal event, in Chile.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/commander> ?v7 . ?result <http://dbpedia.org/ontology/commander> ?v3 . ?v5 <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Chile> . ?v0 <http://dbpedia.org/property/author> ""--01-09""^^<http://www.w3.org/2001/XMLSchema#gMonthDay> . ?v3 <http://dbpedia.org/property/birthName> ""Narciso Campero Leyes""@en . ?v7 <http://dbpedia.org/ontology/battle> ?result . ?v4 <http://dbpedia.org/ontology/battle> ?result . ?v4 <http://dbpedia.org/ontology/battle> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. }","```sparql
# Part 1: Find the work on --01-09 and its commander's war
SELECT ?work ?commanderWar WHERE {
  ?work <http://dbpedia.org/ontology/date> ""1900-01-09""^^xsd:date .
  ?work <http://dbpedia.org/ontology/commander> ?commander .
  ?commander <http://dbpedia.org/ontology/battle> ?battle .
  ?battle <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
  BIND(?battle AS ?commanderWar)
}

UNION

# Part 2: Find the military force of Narciso Campero Leyes and its war
SELECT ?narcisoForceWar WHERE {
  ?person <http://www.w3.org/2000/01/rdf-schema#label> ""Narciso Campero Leyes"" .
  ?person <http://dbpedia.org/ontology/birthName> ""Narciso Campero Leyes"" .
  ?person <http://dbpedia.org/ontology/militaryForce> ?force .
  ?force <http://dbpedia.org/ontology/battle> ?battle .
  ?battle <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
  BIND(?battle AS ?narcisoForceWar)
}

UNION

# Part 3: Find the societal event in Chile and its military force's war
SELECT ?chileEventWar WHERE {
  ?event <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocialEvent> .
  ?event <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Chile> .
  ?event <http://dbpedia.org/ontology/militaryForce> ?force .
  ?force <http://dbpedia.org/ontology/battle> ?battle .
  ?battle <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
  BIND(?battle AS ?chileEventWar)
}
```",8,9,9,3,3,3,3,71,0,0,2,0,0.0,0
547,34,test,Give me the resting place of Alan Cunningham and resting place of the child of the child of William Haliburton.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> ""William Haliburton""@en . ?v2 <http://dbpedia.org/ontology/child> ?v1 . <http://dbpedia.org/resource/Alan_Cunningham> <http://dbpedia.org/ontology/restingPlace> ?result . ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . }","```sparql
# Query to get the resting place of Alan Cunningham
SELECT ?restingPlaceAlanCunningham WHERE {
  <http://dbpedia.org/resource/Alan_Cunningham_(British_Army_officer)> dbo:burialPlace ?restingPlaceAlanCunningham .
}

UNION

# Query to find the child of William Haliburton, then the child's child, and their resting place
SELECT ?restingPlaceChildOfChild WHERE {
  # Find William Haliburton's child
  <http://dbpedia.org/resource/William_Haliburton> dbo:child ?child1 .
  
  # Find that child's child
  ?child1 dbo:child ?child2 .

  # Get the resting place of the grandchild
  ?child2 dbo:burialPlace ?restingPlaceChildOfChild .
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
767,58,test,"Give me the reference to the alter ego of the persona, that is a fictional character, of Matthew Burland and alma mater of the administration of George K. Nash and entity in Baden-Württemberg.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/alterEgo> ""Matthew Burland""@en . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v5 <http://dbpedia.org/ontology/almaMater> ?result . ?v5 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/George_K._Nash> . ?result <http://dbpedia.org/ontology/state> <http://dbpedia.org/resource/Baden-Württemberg> . ?v1 <http://dbpedia.org/property/alterEgo> ?v2 . }","```sparql
SELECT ?character WHERE {
  ?character <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter> .
  
  # Condition 1: Alter ego of Matthew Burland's persona
  <http://dbpedia.org/resource/Matthew_Burland> <http://dbpedia.org/property/persona> ?alterEgo .
  ?alterEgo <http://www.w3.org/2000/01/rdf-schema#label> ?characterLabel .
  
  # Condition 2: Alma mater of George K. Nash's administration
  <http://dbpedia.org/resource/George_K._Nash> <http://dbpedia.org/ontology/administration> ?administration .
  ?administration <http://dbpedia.org/property/almaMater> ?almaMater .
  ?almaMater <http://www.w3.org/2000/01/rdf-schema#label> ?characterLabel .

  # Condition 3: Entity in Baden-Württemberg
  ?entity <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Baden-W%C3%BCrttemberg> .
  ?entity <http://www.w3.org/2000/01/rdf-schema#label> ?characterLabel .

  FILTER(?characterLabel = ?characterLabel)
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
392,20,test,"Give me the region of the time zone, that is a sports event, of Aguilar de Segarra and entity in Italy and province of Schio.",SELECT ?result WHERE { <http://dbpedia.org/resource/Schio> <http://dbpedia.org/ontology/province> ?result . <http://dbpedia.org/resource/Aguilar_de_Segarra> <http://dbpedia.org/ontology/timeZone> ?v3 . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy> . ?result <http://dbpedia.org/ontology/timeZone> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsEvent>. },"```sparql
SELECT ?event ?region WHERE {
  ?event <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsEvent>.
  
  # Link to Aguilar de Segarra
  ?event <http://dbpedia.org/property/location> ?locationAguilar.
  ?locationAguilar rdfs:label ""Aguilar de Segarra""@en.

  # Link to Schio, Italy
  ?event <http://dbpedia.org/ontology/location> ?locationSchio.
  ?locationSchio rdfs:label ""Schio""@en.
  
  # Get the time zone of the event
  ?event <http://dbpedia.org/property/timeZone> ?timeZone.

  # Extract region from the time zone
  ?timeZone <http://www.w3.org/2006/time#inCalendarSystem> ?calendarSystem.
  ?calendarSystem <http://dbpedia.org/ontology/location> ?region.
}
```",4,5,5,2,3,2,3,28,0,0,1,0,0.0,0
547,55,test,Give me the resting place of the awardee of Knight Grand Cross of the Order of St Michael and St George and resting place of the child of James Burton (property developer) and resting place of the actor of Enemy at the Door.,SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Enemy_at_the_Door> <http://dbpedia.org/property/starring> ?v5 . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_St_Michael_and_St_George> . ?v3 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/James_Burton_(property_developer)> <http://dbpedia.org/ontology/child> ?v3 . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
SELECT DISTINCT ?restingPlace WHERE {
  # Awardee of Knight Grand Cross of the Order of St Michael and St George
  {
    ?person a dbo:AwardRecipient ;
            dbo:awardReceived dbr:Knight_Grand_Cross_of_the_Order_of_St_Michael_and_St_George .
    ?person dbo:placeOfRestingPlace ?restingPlace .
  }
  
  UNION
  
  # Child of James Burton (property developer)
  {
    ?child dbo:parent dbr:James_Burton_(property_developer) ;
           dbo:placeOfRestingPlace ?restingPlace .
  }
  
  UNION
  
  # Actor of ""Enemy at the Door""
  {
    ?actor dbo:actedIn dbr:Enemy_at_the_Door ;
           dbo:placeOfRestingPlace ?restingPlace .
  }
}
```",6,6,7,2,3,3,3,71,0,0,1,0,0.0,0
232,48,test,"Give me the child of the person born as the birth name of Jon Pertwee and native of the residence, that is a settlement and British, of Sylvie Bermann.",SELECT ?result WHERE { <http://dbpedia.org/resource/Sylvie_Bermann> <http://dbpedia.org/property/residence> ?v1 . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v2 <http://dbpedia.org/property/birthName> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/property/birthName> ?v3 . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . },"```sparql
# Step 1: Find Jon Pertwee's birth name
SELECT ?birthName WHERE {
    <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/ontology/birthName> ?birthName .
}

# Step 2: Identify the person born with that birth name
SELECT ?person WHERE {
    ?person <http://dbpedia.org/ontology/birthName> ?birthName .
    FILTER(?birthName = ""Jon Pertwee's birth name"") # Replace with actual birth name from step 1
}

# Step 3: Find Sylvie Bermann's residence that is a settlement and British
SELECT ?residence WHERE {
    <http://dbpedia.org/resource/Sylvie_Bermann> <http://dbpedia.org/property/residence> ?residence .
    ?residence <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement> .
    ?residence <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> .
}

# Step 4: Identify the native of that residence
SELECT ?native WHERE {
    ?native <http://dbpedia.org/ontology/placeOfBirth> ?residence .
    FILTER(?residence = ""Sylvie Bermann's residence"") # Replace with actual residence from step 3
}

# Step 5: Find the child of the person identified in step 2
SELECT ?child WHERE {
    ?person <http://dbpedia.org/ontology/child> ?child .
    FILTER(?person = ""Person born as Jon Pertwee's birth name"") # Replace with actual person from step 2
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
488,39,test,"Give me the administration of the father of the spouse, that is a royalty, of Tokugawa Masako and death place of Tokugawa Ieyasu.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Tokugawa_Masako> . ?v0 <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Tokugawa_Ieyasu> <http://dbpedia.org/ontology/deathPlace> ?result . ?result <http://dbpedia.org/property/leader> ?v1 . },"```sparql
SELECT ?administration WHERE {
  # Find the spouse of Tokugawa Masako who is royalty
  ?spouse rdf:type dbo:Royalty ;
          dbo:spouse <http://dbpedia.org/resource/Tokugawa_Masako> .
  
  # Get the father of this spouse and his administration
  ?father dbo:child ?spouse ;
          dbo:administration ?administration .

  UNION

  # Find the death place of Tokugawa Ieyasu
  OPTIONAL {
    <http://dbpedia.org/resource/Tokugawa_Ieyasu> dbo:deathPlace ?deathPlace .
    ?deathPlace dbo:administrativeAuthority ?administration .
  }
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
9,71,test,"Give me the figure known as the nickname of the entity, that is an organisation and an educational institution, in Northern Ireland and alma mater of the mayor, that is a politician, of the entity, that is an organisation, in Belfast and alma mater of the awardee of the reference, that is an award, to Royal Medals.","SELECT ?result WHERE { ?v4 <http://xmlns.com/foaf/0.1/name> ""Royal Medals""@en . ?v7 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Northern_Ireland> . ?v7 <http://dbpedia.org/property/nickname> ?v8 . ?v1 <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Belfast> . ?v2 <http://dbpedia.org/ontology/almaMater> ?result . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v5 <http://dbpedia.org/property/awards> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v1 <http://dbpedia.org/property/leader> ?v2 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v5 <http://dbpedia.org/ontology/almaMater> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/property/nickname> ?v8 . }","```sparql
SELECT ?nickname WHERE {
  # Step 1: Identify an educational institution in Northern Ireland that is also an organization
  ?org a dbo:EducationalInstitution ;
      dbo:country dbr:Northern_Ireland .

  # Step 2: Find the mayor of Belfast who is a politician and get their alma mater
  ?mayor a dbo:Politician ;
         dbo:officeHolderOf dbr:Belfast ;
         dbo:almaMater ?org .
  
  # Step 3: Locate the award reference for Royal Medals and determine its awardee's alma mater
  ?awardReference a dbo:Award ;
                  rdfs:label ""Royal Medals""@en .
  ?awardee dbo:recipientOf ?awardReference ;
           dbo:almaMater ?org .

  # Step 4: Ensure the alma maters match with the organization from step 1
  FILTER (?mayor = ?awardee)

  # Step 5: Retrieve the nickname of this institution
  ?org rdfs:label ?nickname .
}
```",9,14,10,3,3,3,3,71,0,0,1,0,0.0,0
427,49,test,"Give me the reference to the name of Italian People's Party (1994) and party of the person born, that is an office holder and a politician, as the birth name of Romano Prodi.",SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/property/birthName> ?v0 . <http://dbpedia.org/resource/Italian_People's_Party_(1994)> <http://xmlns.com/foaf/0.1/name> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/property/birthName> ?v0 . },"```sparql
SELECT ?party WHERE {
  # Find the reference to the Italian People's Party (1994)
  <http://dbpedia.org/resource/Italian_People%27s_Party_(1994)> <http://www.w3.org/2000/01/rdf-schema#label> ""Italian People's Party (1994)""@en .
  
  # Find Romano Prodi's birth name
  ?prodi <http://dbpedia.org/ontology/birthName> ?birthName .
  FILTER(?birthName = ""Romano Prodi""@en)
  
  # Ensure the person is an office holder and a politician
  ?prodi <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder> .
  ?prodi <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .

  # Find the party associated with Romano Prodi
  ?prodi <http://dbpedia.org/ontology/party> ?party .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
747,63,test,"Give me the band of the person born as Tracey Elizabeth McSween and band of the writer of Apollo (Hardwell song) and person born on the birth date of the person decedent, that is an athlete and a soccer player, at Zolotonosha.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthDate> ?v3 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v6 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Apollo_(Hardwell_song)> <http://dbpedia.org/property/writer> ?v6 . ?v2 <http://dbpedia.org/property/birthName> ""Tracey Elizabeth McSween""@en . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v4 <http://dbpedia.org/ontology/birthDate> ?v3 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v4 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Zolotonosha> . }","```sparql
# Part 1: Band of Tracey Elizabeth McSween
SELECT ?band WHERE {
    ?person rdfs:label ""Tracey Elizabeth McSween""@en .
    ?person dbo:band ?band .
}

UNION

# Part 2: Band of the writer of Apollo (Hardwell song)
SELECT ?band WHERE {
    ?song dbo:title ""Apollo""@en ;
          dbo:lyricsBy ?writer .
    ?writer dbo:band ?band .
}

UNION

# Part 3: Person born on the birth date of a decedent who is an athlete and soccer player from Zolotonosha
SELECT ?person WHERE {
    ?decedent dbo:deathPlace <http://dbpedia.org/resource/Zolotonosha> ;
              dbo:dateOfBirth ?birthDate .
    ?athlete dbo:sport dbr:Soccer ;
             dbo:birthDate ?birthDate ;
             dbo:birthPlace <http://dbpedia.org/resource/Zolotonosha> .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
328,62,test,Give me the commander in the force of the person decedent at Budapest and awardee of the award of the commander in Volcano and Ryukyu Islands campaign and leader of People's Commissariat of Defense of the Soviet Union.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ?v3 . ?v6 <http://dbpedia.org/ontology/commander> ?v0 . <http://dbpedia.org/resource/Volcano_and_Ryukyu_Islands_campaign> <http://dbpedia.org/ontology/commander> ?v4 . ?v4 <http://dbpedia.org/property/awards> ?v3 . ?v0 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Budapest> . <http://dbpedia.org/resource/People's_Commissariat_of_Defense_of_the_Soviet_Union> <http://dbpedia.org/ontology/leader> ?result . ?v6 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT ?commander WHERE {
  ?person dbpedia-owl:deathPlace <http://dbpedia.org/resource/Budapest> .
  ?person dbpedia-owl:award [
    a dbo:Award ;
    dbo:awardedFor [
      a dbo:MilitaryConflict ;
      rdfs:label ""Volcano campaign""@en ;
      dbo:location <http://dbpedia.org/resource/Volcano_Islands> .
    ] ,
    dbo:awardedFor [
      a dbo:MilitaryConflict ;
      rdfs:label ""Ryukyu Islands campaign""@en ;
      dbo:location <http://dbpedia.org/resource/Ryukyu_Islands> .
    ]
  ] .
  ?person dbpedia-owl:officeHolder [
    a dbo:Office ;
    dbo:positionTitle ""People's Commissar for Defence""@en ;
    dbo:department <http://dbpedia.org/resource/Ministry_of_Defence_(Soviet_Union)> .
  ] .
  ?force dbo:commander ?person .
  ?force dbo:commander ?commander .
}
```",7,7,8,3,3,3,3,71,0,0,1,0,0.0,0
528,37,test,Give me the war of the commander in the work of --01-09 and force of Narciso Campero.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/commander> ?v3 . ?v3 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Narciso_Campero> . ?v0 <http://dbpedia.org/property/author> ""--01-09""^^<http://www.w3.org/2001/XMLSchema#gMonthDay> . }","SELECT ?result WHERE { 
  ?v1 <http://dbpedia.org/ontology/date> ""----01-09""^^<http://www.w3.org/2001/XMLSchema#gYearMonth>. 
  <http://dbpedia.org/resource/Narciso_Campero> <http://dbpedia.org/ontology/commander> ?v1. 
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. 
  ?v1 <http://dbpedia.org/ontology/battle> ?result. 
  ?v2 <http://dbpedia.org/ontology/memberOfMilitaryForce> <http://dbpedia.org/resource/Narciso_Campero>. 
  ?v2 <http://dbpedia.org/ontology/foughtInBattle> ?result. 
}",4,4,5,3,2,3,3,71,0,0,2,0,0.0,0
378,71,test,"Give me the war of the person born as the birth name of Carl Pontus Gahn and claim to fame of the commander in the war, that is a military conflict and a societal event and an event, of Thomas Trigge and war of the commander in the reference, that is a military conflict, to Peninsular War.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ?v1 . ?v7 <http://dbpedia.org/ontology/commander> ?v8 . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v4 <http://xmlns.com/foaf/0.1/name> ""Peninsular War""@en . ?v5 <http://dbpedia.org/ontology/battle> ?result . ?v4 <http://dbpedia.org/ontology/commander> ?v5 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Thomas_Trigge> <http://dbpedia.org/ontology/battle> ?v7 . ?v8 <http://dbpedia.org/ontology/knownFor> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. }","```sparql
SELECT ?war WHERE {
    # Step 1: Find Carl Pontus Gahn's birth name
    ?gahn dbp:birthName ?birthName .
    FILTER (?gahn = dbpedia:Carl_Pontus_Gahn) .

    # Step 2: Identify the war that is both a military conflict and societal event, involving Thomas Trigge
    ?war1 rdf:type dbo:MilitaryConflict ;
          rdf:type dbo:SocietalEvent ;
          dbo:commander ?trigge .
    FILTER (?trigge = dbpedia:Thomas_Trigge) .

    # Find the claim to fame of Thomas Trigge in this war
    ?trigge dbo:knownFor ?claimToFame .

    # Step 3: Identify the reference to Peninsular War and its commander
    ?peninsularWar rdf:type dbo:MilitaryConflict ;
                   dbo:reference ?war2 .
    FILTER (?peninsularWar = dbpedia:Peninsular_War) .
    
    ?war2 dbo:commander ?commander .

    # Step 4: Find the war associated with Carl Pontus Gahn's birth name and the claim to fame
    ?birthName dbo:knownFor ?claimToFame .
    ?war1 dbo:relatedWar ?finalWar .

    # Ensure the final war is also linked to the commander from Peninsular War reference
    ?finalWar dbo:commander ?commander .
}
```",9,13,10,3,3,3,3,71,0,0,2,0,0.0,0
528,38,test,Give me the war of the commander in Battle of La Rinconada de Ate and force of the person born as Narciso Campero Leyes.,"SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Battle_of_La_Rinconada_de_Ate> <http://dbpedia.org/ontology/commander> ?v3 . ?result <http://dbpedia.org/ontology/commander> ?v2 . ?v2 <http://dbpedia.org/property/birthName> ""Narciso Campero Leyes""@en . }","```sparql
# Query 1: War of the Commander in Battle of La Rinconada de Ate
SELECT ?war WHERE {
    ?battle <http://dbpedia.org/ontology/commander> ?commander .
    ?commander <http://dbpedia.org/ontology/battle> ?war .
    FILTER(?battle = <http://dbpedia.org/resource/Battle_of_La_Rinconada_de_Ate>)
}

# Query 2: Force of Narciso Campero Leyes
SELECT ?force WHERE {
    <http://dbpedia.org/resource/Narciso_Campero_Leyes> <http://dbpedia.org/ontology/militaryForce> ?force .
}
```",4,4,5,2,2,3,3,71,0,0,2,0,0.0,0
404,45,test,Give me the parent of Prince Ernest Augustus of Hanover (born 1914) and child of the father of the spouse of Princess Victoria Louise of Prussia and spouse of Princess Victoria Louise of Prussia.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/ontology/parent> ?v1 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Prince_Ernest_Augustus_of_Hanover_(born_1914)> . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?v0 . },"```sparql
SELECT ?parent WHERE {
    # Step 1: Identify Princess Victoria Louise of Prussia
    ?princess a dbo:Princess ;
              foaf:name ""Victoria Louise of Prussia"" .

    # Step 2: Find her spouse
    ?princess dbo:spouse ?spouse .

    # Step 3: Determine the father of that spouse
    ?spouse dbo:father ?fatherOfSpouse .

    # Step 4: Identify the child of this father (Prince Ernest Augustus)
    ?child a dbo:Person ;
           foaf:name ""Ernest Augustus of Hanover"" ;
           dbo:birthYear ""1914""^^xsd:gYear ;
           dbo:father ?fatherOfSpouse .

    # Step 5: Find the parent of Prince Ernest Augustus
    ?child dbo:parent ?parent .
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
659,36,test,"Give me the military force of the force, that is a societal event and an event and a military conflict, of the reference to Rutger Jan Schimmelpenninck and commander in German campaign of 1813.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/commander> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/German_campaign_of_1813> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Rutger Jan Schimmelpenninck""@en . }","```sparql
SELECT ?result WHERE {
    ?conflict <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>.
    ?conflict <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>.
    ?conflict <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>.
    <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> <http://dbpedia.org/property/referenceTo> ?conflict.
    ?conflict <http://dbpedia.org/ontology/commander> ?v1.
    ?v1 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/German_campaign_of_1813>.
    ?conflict <http://dbpedia.org/property/militaryForce> ?result.
}
```",4,7,5,3,2,3,3,71,0,0,7,0,0.0,0
488,22,test,Give me the administration of the father of Emperor Go-Mizunoo and birth place of Enomoto Takeaki.,SELECT ?result WHERE { <http://dbpedia.org/resource/Emperor_Go-Mizunoo> <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/property/leader> ?v1 . <http://dbpedia.org/resource/Enomoto_Takeaki> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
# Query to find the administration of the father of Emperor Go-Mizunoo
SELECT ?administration WHERE {
  <http://dbpedia.org/resource/Emperor_Go-Mizunoo> <http://www.w3.org/2000/01/rdf-schema#father> ?father .
  ?father <http://dbpedia.org/ontology/administration> ?administration .
}

UNION

# Query to find the birthplace of Enomoto Takeaki
SELECT ?birthPlace WHERE {
  <http://dbpedia.org/resource/Enomoto_Takeaki> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
9,36,test,"Give me the figure known as the nickname of the entity, that is an organisation and an educational institution, in Northern Ireland and alma mater of John Alderdice, Baron Alderdice.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/property/nickname> ?v1 . ?result <http://dbpedia.org/property/nickname> ?v1 . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Northern_Ireland> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. <http://dbpedia.org/resource/John_Alderdice,_Baron_Alderdice> <http://dbpedia.org/ontology/almaMater> ?result . }","```sparql
SELECT ?entity ?nickname WHERE {
  ?entity <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>.
  ?entity <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalOrganization>.
  ?entity <http://dbpedia.org/property/location> <http://dbpedia.org/resource/Northern_Ireland>.
  <http://dbpedia.org/resource/John_Alderdice,_Baron_Alderdice> <http://dbpedia.org/ontology/almaMater> ?entity.
  OPTIONAL { ?entity <http://dbpedia.org/property/nickname> ?nickname. }
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
492,61,test,"Give me the person decedent at the capital, that is a settlement, of the country of Khemis Miliana District and commander in the war, that is a military conflict and an event, of the commander in Battle of Verdun.",SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/deathPlace> ?v3 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://dbpedia.org/ontology/battle> ?v5 . <http://dbpedia.org/resource/Khemis_Miliana_District> <http://dbpedia.org/ontology/country> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v5 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/ontology/capital> ?v3 . <http://dbpedia.org/resource/Battle_of_Verdun> <http://dbpedia.org/ontology/commander> ?v0 . },"```sparql
# Step 1: Find the capital of Khemis Miliana District
SELECT ?capital WHERE {
    ?district <http://dbpedia.org/ontology/country> ?country .
    ?country <http://dbpedia.org/ontology/administrativeCapital> ?capital .
    FILTER(?district = <http://dbpedia.org/resource/Khemis_Miliana_District>)
}

# Step 2: Find the person decedent at that capital
SELECT DISTINCT ?decedent WHERE {
    ?deathEvent <http://dbpedia.org/ontology/deathPlace> ?place .
    ?place <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement> .
    ?deathEvent <http://dbpedia.org/ontology/deceased> ?decedent .
    FILTER(?place = ?capital) # Use the result from Step 1
}

# Step 3: Identify the war related to the Battle of Verdun
SELECT DISTINCT ?war WHERE {
    ?battle <http://dbpedia.org/ontology/commander> ?commander .
    ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
    ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event> .
    ?battle <http://dbpedia.org/resource/Battle_of_Verdun> .
}

# Step 4: Find the commander in that war
SELECT DISTINCT ?commander WHERE {
    ?war <http://dbpedia.org/ontology/commander> ?commander .
    FILTER(?war = ?war) # Use the result from Step 3
}
```",6,9,7,3,2,3,3,71,0,0,1,0,0.0,0
54,26,test,Give me the parent of the child of the parent of Thado Minsaw of Prome.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> . ?v2 <http://dbpedia.org/property/father> ?v1 . },"```sparql
SELECT ?grandparent WHERE {
  # Step 1: Find Thado Minsaw's parent
  <http://dbpedia.org/resource/Thado_Minsaw> <http://dbpedia.org/ontology/father> ?father .
  
  # Step 2: The child of the father is Thado Minsaw himself, so we skip to step 3
  
  # Step 3: Find the parent of Thado Minsaw
  OPTIONAL { ?father <http://dbpedia.org/ontology/mother> ?mother . }
  OPTIONAL { ?father <http://dbpedia.org/ontology/father> ?grandfather . }
  
  # Step 4: Identify the grandparent (either mother or father)
  OPTIONAL { ?mother <http://dbpedia.org/ontology/father> ?grandparent . }
  OPTIONAL { ?mother <http://dbpedia.org/ontology/mother> ?grandparent . }
  OPTIONAL { ?grandfather <http://dbpedia.org/ontology/father> ?grandparent . }
  OPTIONAL { ?grandfather <http://dbpedia.org/ontology/mother> ?grandparent . }

  FILTER(?grandparent != <http://dbpedia.org/resource/Thado_Minsaw>)
}
```",3,3,4,3,1,3,3,71,0,0,2,0,0.0,0
959,71,test,"Give me the member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of the person born in 1958 and native of the residence, that is a country, of the leader, that is a politician, of 2010 Japanese House of Councillors election and manager of the team of the manager, that is a sports manager, of 1998 Kashima Antlers season.","SELECT ?result WHERE { ?v8 <http://dbpedia.org/ontology/manager> ?v7 . <http://dbpedia.org/resource/2010_Japanese_House_of_Councillors_election> <http://dbpedia.org/property/leader> ?v4 . ?v1 <http://dbpedia.org/ontology/almaMater> ?v2 . ?result <http://dbpedia.org/ontology/birthPlace> ?v5 . ?v8 <http://dbpedia.org/ontology/manager> ?result . <http://dbpedia.org/resource/1998_Kashima_Antlers_season> <http://dbpedia.org/ontology/manager> ?v7 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/team> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v4 <http://dbpedia.org/property/residence> ?v5 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v1 <http://dbpedia.org/ontology/birthYear> ""1958""^^<http://www.w3.org/2001/XMLSchema#gYear> . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
# Step 1: Identify the leader of the 2010 Japanese House of Councillors election who is a politician.
SELECT ?leader WHERE {
    ?election dbpedia-owl:electionDate ""2010""^^xsd:date .
    ?election dbpedia-owl:country <http://dbpedia.org/resource/Japan> .
    ?election dbpedia-owl:winner ?leader .
    ?leader rdf:type <http://dbpedia.org/ontology/Politician> .
}

# Step 2: Determine the country where this leader's residence is located.
SELECT ?residenceCountry WHERE {
    ?leader dbo:residenceLocation ?residence .
    ?residence dbpedia-owl:country ?residenceCountry .
}

# Step 3: Find the person born in 1958 and native of that country.
SELECT ?person WHERE {
    ?person dbo:birthYear ""1958""^^xsd:gYear .
    ?person dbo:nationality <http://dbpedia.org/resource/ResidenceCountry> .
}

# Step 4: Identify the manager of the team managed by the sports manager from the 1998 Kashima Antlers season.
SELECT ?teamManager WHERE {
    ?season dbpedia-owl:manager ?sportsManager .
    ?season dbpedia-owl:team <http://dbpedia.org/resource/Kashima_Antlers> .
    ?season dbpedia-owl:year ""1998""^^xsd:gYear .
    ?sportsManager dbo:manages ?team .
    ?team dbo:manager ?teamManager .
}

# Step 5: Locate the alma mater of the person identified in step 3, ensuring it is a Japanese organization, university, and educational institution.
SELECT ?almaMater WHERE {
    ?person dbo:almaMater ?almaMater .
    ?almaMater rdf:type <http://dbpedia.org/ontology/Organization> ;
               rdf:type <http://dbpedia.org/ontology/University> ;
               rdf:type <http://dbpedia.org/ontology/EducationalOrganization> .
    ?almaMater dbo:country <http://dbpedia.org/resource/Japan> .
}

# Step 6: Finally, find a member associated with this alma mater.
SELECT ?member WHERE {
    ?member dbo:almaMater ?almaMater .
}
```",9,16,10,3,3,3,3,71,0,0,3,0,0.0,0
959,68,test,"Give me the manager of the team of Takashi Sekizuka and member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of the person born in 1958 and native of the residence, that is a country, of the leader, that is a politician, of 2010 Japanese House of Councillors election.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?v4 <http://dbpedia.org/ontology/almaMater> ?v2 . ?v4 <http://dbpedia.org/ontology/birthYear> ""1958""^^<http://www.w3.org/2001/XMLSchema#gYear> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?result <http://dbpedia.org/ontology/team> ?v2 . ?v0 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Takashi_Sekizuka> . ?v0 <http://dbpedia.org/ontology/manager> ?result . ?result <http://dbpedia.org/ontology/birthPlace> ?v6 . <http://dbpedia.org/resource/2010_Japanese_House_of_Councillors_election> <http://dbpedia.org/property/leader> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?v1 <http://dbpedia.org/property/residence> ?v6 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
SELECT ?manager WHERE {
  ?leader <http://dbpedia.org/ontology/politician> _:a .
  ?election <http://dbpedia.org/property/electionYear> ""2010""^^xsd:gYear .
  ?election <http://dbpedia.org/property/country> <http://dbpedia.org/resource/Japan> .
  ?leader <http://dbpedia.org/ontology/wonElection> ?election .

  ?leader <http://dbpedia.org/ontology/residence> ?residence .
  ?residence <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/C",8,14,9,3,3,3,3,71,0,0,3,0,0.0,0
232,38,test,"Give me the actor of the claim to fame, that is a film and a military conflict, of Sean Pertwee and native of the residence, that is a settlement and British, of Sylvie Bermann.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Sylvie_Bermann> <http://dbpedia.org/property/residence> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Sean_Pertwee> <http://dbpedia.org/ontology/knownFor> ?v3 . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v3 <http://dbpedia.org/ontology/starring> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . },"```sparql
SELECT ?actor WHERE {
  # Step 1: Find Sean Pertwee's claim to fame that is both a film and military conflict
  ?fame <http://dbpedia.org/ontology/knownFor> <http://dbpedia.org/resource/Sean_Pertwee> .
  ?fame <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
  ?fame <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film> .

  # Step 2: Find the actor associated with this film/military conflict
  ?filmActor <http://dbpedia.org/ontology/starring> ?fame .
  ?filmActor <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Actor> .
  ?filmActor rdfs:label ?actor .

  # Step 3: Find Sylvie Bermann's British settlement residence
  ?residence <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement> .
  ?residence <http://dbpedia.org/property/country> <http://dbpedia.org/resource/United_Kingdom> .
  <http://dbpedia.org/resource/Sylvie_Bermann> <http://dbpedia.org/property/residence> ?residence .

  # Step 4: Ensure the actor is native to this residence
  ?actor <http://dbpedia.org/ontology/birthPlace> ?residence .
}
```",4,8,5,2,2,3,3,71,0,0,1,0,0.0,0
378,21,test,"Give me the war of the person born as Carl Pontus Gahn and claim to fame of Louis des Balbes de Berton de Crillon, 1st Duke of Mahón.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Louis_des_Balbes_de_Berton_de_Crillon,_1st_Duke_of_Mahón> <http://dbpedia.org/ontology/knownFor> ?result . ?v1 <http://dbpedia.org/property/birthName> ""Carl Pontus Gahn""@en . }","```sparql
SELECT ?war ?claimToFame WHERE {
  # Find the war associated with Carl Pontus Gahn
  OPTIONAL {
    <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/ontology/battle> ?battle .
    ?battle <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
    BIND(?battle AS ?war)
  }
  
  # Find the claim to fame of Louis des Balbes de Berton de Crillon, 1st Duke of Mahón
  OPTIONAL {
    <http://dbpedia.org/resource/Louis_des_Balbes_de_Berton_de_Crillon,_1st_Duke_of_Mahón> <http://dbpedia.org/ontology/knownFor> ?claimToFame .
  }
}
```",3,3,4,2,2,3,3,71,2,10,0,0.16666666666666666,1.0,0.2857142857142857
54,65,test,"Give me the child of the father of Soe Min Wimala Dewi and parent of the child of the parent of Thado Minsaw of Prome and predecessor of the child, that is an office holder and a royalty, of Thihapate of Mohnyin.",SELECT ?result WHERE { ?v6 <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v4 <http://dbpedia.org/ontology/child> ?result . ?v6 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/successor> ?v3 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Thihapate_of_Mohnyin> . <http://dbpedia.org/resource/Soe_Min_Wimala_Dewi> <http://dbpedia.org/property/father> ?v4 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
# Step 1: Father of Soe Min Wimala Dewi
SELECT ?father WHERE {
    ?soeMinWimalaDewi dbpedia-owl:parent ?father .
    ?soeMinWimalaDewi rdfs:label ""Soe Min Wimala Dewi""@en .
}

# Step 2: Child of the Father
SELECT ?child WHERE {
    ?father dbpedia-owl:child ?child .
}

# Step 3: Parent of the Child of the Parent of Thado Minsaw of Prome
SELECT ?parentOfChild WHERE {
    ?thadoMinsawParent dbpedia-owl:parent ?thadoMinsaw .
    ?thadoMinsaw rdfs:label ""Thado Minsaw of Prome""@en .
    
    ?thadoMinsawParent dbpedia-owl:child ?childOfParent .
    ?childOfParent dbpedia-owl:parent ?parentOfChild .
}

# Step 4: Predecessor of the Child
SELECT ?predecessor WHERE {
    ?parentOfChild dbpedia-owl:successor ?currentPerson .
    ?currentPerson rdfs:label ?label .
    
    # Find predecessor
    ?predecessor dbpedia-owl:successor ?currentPerson .
}

# Step 5: Office Holder and Royalty of Thihapate of Mohnyin
SELECT ?officeHolderRoyalty WHERE {
    ?thihapateChild dbpedia-owl:child ?officeHolderRoyalty .
    ?thihapateChild rdfs:label ""Thihapate of Mohnyin""@en .
    
    ?officeHolderRoyalty a <http://dbpedia.org/ontology/OfficeHolder> ;
                        a <http://dbpedia.org/ontology/Royalty> .
}

# Final Query: Combine Steps 4 and 5
SELECT DISTINCT ?result WHERE {
    VALUES ?result { ?predecessor ?officeHolderRoyalty }
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
645,18,test,"Give me the entity in the residence, that is a country, of the commander in Battle of Diamond Rock and alma mater of the child of Richard Pankhurst.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://dbpedia.org/ontology/country> ?v2 . <http://dbpedia.org/resource/Richard_Pankhurst> <http://dbpedia.org/ontology/child> ?v3 . <http://dbpedia.org/resource/Battle_of_Diamond_Rock> <http://dbpedia.org/ontology/commander> ?v1 . ?v1 <http://dbpedia.org/property/residence> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
SELECT ?entity 
WHERE {
    # Step 1: Find the commander of the Battle of Diamond Rock
    <http://dbpedia.org/resource/Battle_of_Diamond_Rock> <http://dbpedia.org/ontology/commander> ?commander .

    # Step 2: Determine the residence (country) of that commander
    ?commander <http://dbpedia.org/property/residence> ?residence .
    ?residence <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country> .

    # Step 3: Identify a child of Richard Pankhurst
    <http://dbpedia.org/resource/Richard_Pankhurst> <http://dbpedia.org/property/child> ?child .

    # Step 4: Find the alma mater of that child
    ?child <http://dbpedia.org/ontology/almaMater> ?almaMater .

    # Step 5: Find an entity located in both the country and the alma mater
    ?entity <http://www.w3.org/2000/01/rdf-schema#location> ?residence ;
            <http://www.w3.org/2000/01/rdf-schema#location> ?almaMater .
}
```",5,6,6,3,2,3,2,20,0,0,1,0,0.0,0
767,64,test,"Give me the entity in the administration, that is a settlement, of the writer of Where It's At (Dustin Lynch album) and alma mater of Carl L. Nippert and reference to the alter ego of the persona, that is a fictional character, of Matthew Burland.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://dbpedia.org/ontology/state> ?v2 . ?v0 <http://dbpedia.org/property/alterEgo> ""Matthew Burland""@en . ?v2 <http://dbpedia.org/property/leaderParty> ?v3 . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. <http://dbpedia.org/resource/Where_It's_At_(Dustin_Lynch_album)> <http://dbpedia.org/property/writer> ?v3 . <http://dbpedia.org/resource/Carl_L._Nippert> <http://dbpedia.org/ontology/almaMater> ?result . }","```sparql
SELECT ?entity WHERE {
  # Writer of ""Where It's At"" album
  ?album wdt:P31 wd:Q13442863;  # Album
         wdt:P170 ?writer.       # Writer

  # Alma mater of Carl L. Nippert
  ?nippert wdt:P69 ?almaMater.   # Alma Mater

  # Alter ego of the persona, that is a fictional character, of Matthew Burland
  ?burland wdt:P136 ?fictionalCharacter; # Fictional Character
           wdt:P1362 ?alterEgo.          # Alter Ego

  # Entity in the administration (settlement) related to these individuals
  ?entity wdt:P31 wd:Q515;            # Settlement
          wdt:P137 ?writer;            # Administration of writer
          wdt:P137 ?almaMater;         # Administration of alma mater
          wdt:P137 ?alterEgo.          # Administration of alter ego

}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
528,55,test,Give me the force of the person born as Narciso Campero Leyes and war of the military force of Battle of Pisagua and war of the commander in Battle of La Rinconada de Ate.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ""Narciso Campero Leyes""@en . ?result <http://dbpedia.org/ontology/commander> ?v2 . ?v3 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Pisagua> . ?v5 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Battle_of_La_Rinconada_de_Ate> <http://dbpedia.org/ontology/commander> ?v5 . ?v3 <http://dbpedia.org/ontology/battle> ?result . }","```sparql
# Query 1: Find the force associated with Narciso Campero Leyes
SELECT ?force WHERE {
    <http://dbpedia.org/resource/Narciso_Campero_Leyes> <http://dbpedia.org/ontology/militaryForce> ?force .
}

# Query 2: Identify the war involving the military force from the Battle of Pisagua
SELECT ?war WHERE {
    <http://dbpedia.org/resource/Battle_of_Pisagua> <http://dbpedia.org/ontology/militaryForce> ?militaryForce .
    ?militaryForce <http://dbpedia.org/ontology/war> ?war .
}

# Query 3: Determine the war involving the commander in the Battle of La Rinconada de Ate
SELECT ?war WHERE {
    <http://dbpedia.org/resource/Battle_of_La_Rinconada_de_Ate> <http://dbpedia.org/ontology/commander> ?commander .
    ?commander <http://dbpedia.org/ontology/battle> ?battle .
    ?battle <http://dbpedia.org/ontology/war> ?war .
}
```",6,6,7,2,3,3,3,71,0,0,2,0,0.0,0
427,67,test,"Give me the party of the person born, that is an office holder and a politician, as the birth name of Romano Prodi and party of the father of the alumnus of Massachusetts Institute of Technology and reference to Partito Popolare Italiano.","SELECT ?result WHERE { ?v6 <http://dbpedia.org/ontology/party> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Massachusetts_Institute_of_Technology> . ?v3 <http://dbpedia.org/property/birthName> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> ""Partito Popolare Italiano""@en . ?v3 <http://dbpedia.org/ontology/party> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/property/father> ?v6 . <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/property/birthName> ?v1 . }","```sparql
# Find Romano Prodi's details
SELECT ?prodiParty WHERE {
  ?prodi a dbo:OfficeHolder ;
         dbo:birthName ""Romano Prodi"" ;
         dbo:politicalParty ?prodiParty .
}

# Find MIT alumni and their fathers' parties
SELECT ?alumnusFatherParty WHERE {
  ?alumnus dbo:almaMater <http://dbpedia.org/resource/Massachusetts_Institute_of_Technology> ;
           dbo:father ?father .
  ?father dbo:politicalParty ?alumnusFatherParty .
}

# Ensure Partito Popolare Italiano is referenced
SELECT DISTINCT ?party WHERE {
  ?entity dbo:politicalParty ?party .
  FILTER(CONTAINS(LCASE(STR(?party)), ""partito popolare italiano""))
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
177,8,test,"Give me the headquarter of the office, that is an organisation, of Joo Don-sik and entity in South Korea.",SELECT ?result WHERE { <http://dbpedia.org/resource/Joo_Don-sik> <http://dbpedia.org/property/office> ?v2 . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/South_Korea> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://dbpedia.org/ontology/location> ?result . },"```sparql
SELECT ?headquarter WHERE {
  ?organization <http://dbpedia.org/ontology/office> <http://dbpedia.org/resource/Joo_Don-sik>.
  ?organization <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>.
  ?organization <http://dbpedia.org/property/headquarter> ?headquarter.
  ?organization <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/South_Korea>.
}
```",3,4,4,2,2,2,2,9,0,0,1,0,0.0,0
328,54,test,"Give me the commander in the force of the person decedent at Budapest and leader of People's Commissariat of Defense of the Soviet Union and awardee of the award of Bruce Fraser, 1st Baron Fraser of North Cape.","SELECT ?result WHERE { <http://dbpedia.org/resource/Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape> <http://dbpedia.org/property/awards> ?v3 . ?v5 <http://dbpedia.org/ontology/commander> ?v0 . <http://dbpedia.org/resource/People's_Commissariat_of_Defense_of_the_Soviet_Union> <http://dbpedia.org/ontology/leader> ?result . ?result <http://dbpedia.org/property/awards> ?v3 . ?v5 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Budapest> . }","```sparql
SELECT ?commander WHERE {
  ?person <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Budapest> .
  ?person <http://dbpedia.org/ontology/officeHolder> <http://dbpedia.org/resource/People's_Commissariat_of_Defense_of_the_Soviet_Union> .
  ?person <http://dbpedia.org/property/awardee> <http://dbpedia.org/resource/Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape> .
  ?force <http://dbpedia.org/ontology/commander> ?person .
  ?force <http://dbpedia.org/ontology/commander> ?commander .
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
547,56,test,Give me the resting place of the awardee of the award of Gerald Graham and resting place of Simon Cadell and resting place of the child of James Burton (property developer).,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Simon_Cadell> <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/James_Burton_(property_developer)> <http://dbpedia.org/ontology/child> ?v2 . ?v1 <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Gerald_Graham> <http://dbpedia.org/property/awards> ?v0 . },"```sparql
SELECT ?restingPlace WHERE {
  # Resting place for Gerald Graham based on his award
  {
    ?person <http://dbpedia.org/ontology/award> ?award .
    ?person <http://dbpedia.org/property/restingPlace> ?restingPlace .
    FILTER(?person = <http://dbpedia.org/resource/Gerald_Graham>)
  }
  
  UNION
  
  # Resting place for Simon Cadell
  {
    <http://dbpedia.org/resource/Simon_Cadell> <http://dbpedia.org/property/restingPlace> ?restingPlace .
  }

  UNION

  # Resting place of the child of James Burton (property developer)
  {
    ?child <http://www.w3.org/2000/01/rdf-schema#parent> <http://dbpedia.org/resource/James_Burton_(property_developer)> .
    ?child <http://dbpedia.org/ontology/deathPlace> ?restingPlace .
  }
}
```",6,6,7,3,3,3,3,71,1,1,0,0.5,1.0,0.6666666666666666
783,16,test,"Give me the band member of the person born, that is an artist and a musical artist, as Priscilla Opoku-Kwarteng and associated musical artist of the band member of Ofori Amponsah.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Ofori_Amponsah> . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v3 <http://dbpedia.org/property/birthName> ""Priscilla Opoku-Kwarteng""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
# Step 1: Identify Priscilla Opoku-Kwarteng's birth information
SELECT ?priscilla WHERE {
    ?priscilla a dbo:Artist .
    ?priscilla a dbo:MusicalArtist .
    ?priscilla foaf:name ""Priscilla Opoku-Kwarteng"" .
}

# Step 2: Find band members associated with Priscilla Opoku-Kwarteng
SELECT DISTINCT ?bandMember WHERE {
    ?priscilla dbo:birthPlace ?birthPlace .
    ?priscilla dbo:associatedBandMember ?bandMember .
    FILTER EXISTS { ?priscilla a dbo:Artist . }
    FILTER EXISTS { ?priscilla a dbo:MusicalArtist . }
}

# Step 3: Identify Ofori Amponsah's band members
SELECT DISTINCT ?oforiBandMember WHERE {
    ?ofori foaf:name ""Ofori Amponsah"" .
    ?ofori dbo:associatedBandMember ?oforiBandMember .
}

# Step 4: Find the intersection of these two sets of band members
SELECT DISTINCT ?commonBandMember WHERE {
    { SELECT DISTINCT ?bandMember WHERE {
        ?priscilla dbo:birthPlace ?birthPlace .
        ?priscilla dbo:associatedBandMember ?bandMember .
        FILTER EXISTS { ?priscilla a dbo:Artist . }
        FILTER EXISTS { ?priscilla a dbo:MusicalArtist . }
    }}
    
    UNION
    
    { SELECT DISTINCT ?oforiBandMember WHERE {
        ?ofori foaf:name ""Ofori Amponsah"" .
        ?ofori dbo:associatedBandMember ?oforiBandMember .
    }}

    FILTER (?bandMember = ?oforiBandMember)
}
```",4,6,5,2,2,3,2,20,0,0,1,0,0.0,0
827,19,test,"Give me the child of the child, that is a royalty, of Grand Duchess Maria Pavlovna of Russia (1786–1859) and father of the child, that is a royalty, of the spouse, that is a royalty, of Princess Pauline of Saxe-Weimar-Eisenach.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/property/father> ?v0 . ?v4 <http://dbpedia.org/property/father> ?result . ?v2 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Grand_Duchess_Maria_Pavlovna_of_Russia_(1786–1859)> . ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Princess_Pauline_of_Saxe-Weimar-Eisenach> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/child> ?result . },"```sparql
# Step 1: Get children of Grand Duchess Maria Pavlovna of Russia (1786–1859)
SELECT ?child WHERE {
    <http://dbpedia.org/resource/Grand_Duchess_Maria_Pavlovna_of_Russia_(1786-1859)> dbo:child ?child .
}

# Step 2: From those children, find a child who is royalty
WITH ?child AS ?parent
SELECT ?grandChild WHERE {
    ?parent dbo:child ?grandChild .
    ?grandChild rdf:type <http://dbpedia.org/ontology/RoyalFamilyMember> .
}

# Step 3: Get spouse of Princess Pauline of Saxe-Weimar-Eisenach
SELECT ?spouse WHERE {
    <http://dbpedia.org/resource/Princess_Pauline_of_Saxe-Weimar-Eisenach> dbo:spouse ?spouse .
}

# Step 4: From that spouse, find a child who is royalty
WITH ?spouse AS ?parentSpouse
SELECT ?childSpouse WHERE {
    ?parentSpouse dbo:child ?childSpouse .
    ?childSpouse rdf:type <http://dbpedia.org/ontology/RoyalFamilyMember> .
}

# Step 5: Find the father of the grandChild identified in step 2
WITH ?grandChild AS ?royalGrandChild
SELECT ?father WHERE {
    ?royalGrandChild dbo:parent ?father .
}
```",5,8,6,3,2,3,2,20,0,0,1,0,0.0,0
747,46,test,"Give me the band of the writer of Apollo (Hardwell song) and person born on the birth date of the person decedent, that is an athlete and a soccer player, at Zolotonosha.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Zolotonosha> . ?v2 <http://dbpedia.org/ontology/birthDate> ?v1 . ?result <http://dbpedia.org/ontology/birthDate> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Apollo_(Hardwell_song)> <http://dbpedia.org/property/writer> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. },"```sparql
# Step 1: Identify the writer of ""Apollo"" by Hardwell
SELECT ?writer WHERE {
    ?song <http://dbpedia.org/ontology/writer> ?writer .
    ?song <http://purl.org/dc/terms/title> ""Apollo (Hardwell song)"" .
}

# Step 2: Find a decedent from Zolotonosha who is both an athlete and a soccer player, and extract their birth date
SELECT ?decedent ?birthDate WHERE {
    ?decedent <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Zolotonosha> .
    ?decedent <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete> .
    ?decedent <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer> .
    ?decedent <http://dbpedia.org/property/birthDate> ?birthDate .
}

# Step 3: Find another person born on the same date as the decedent
SELECT DISTINCT ?person WHERE {
    ?person <http://dbpedia.org/property/birthDate> ?birthDate .
    FILTER NOT EXISTS { ?person = ?decedent }
}

# Step 4: Determine the band associated with the writer of ""Apollo""
SELECT ?band WHERE {
    ?writer <http://dbpedia.org/ontology/memberOf> ?band .
}
```

Note: This query assumes that the necessary properties and relationships are correctly defined in DBpedia. Adjustments may be needed based on actual data availability.",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
701,61,test,"Give me the spouse of the father of the commander, that is a royalty, in Battle of Perire and parent of the child of the child of Seti I.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seti_I> . ?result <http://dbpedia.org/ontology/spouse> ?v3 . ?result <http://dbpedia.org/ontology/child> ?v5 . ?v1 <http://dbpedia.org/property/father> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Battle_of_Perire> <http://dbpedia.org/ontology/commander> ?v1 . ?v5 <http://dbpedia.org/property/father> ?v0 . },"```sparql
SELECT ?spouse WHERE {
  # Step 1: Find the commander in Battle of Perire who is royalty.
  ?battle <http://dbpedia.org/ontology/commander> ?commander .
  FILTER(?battle = <http://dbpedia.org/resource/Battle_of_Perire>) .
  ?commander <http://www.w3.org/2000/01/rdf-schema#label> ""Royalty"" .

  # Step 2: Find the father of this commander.
  ?commander <http://dbpedia.org/ontology/father> ?father .

  # Step 3: Determine the spouse of this father.
  ?father <http://dbpedia.org/property/spouse> ?spouse .

  # Additional requirement: Find the child of Seti I and then the grandchild.
  ?setiI <http://dbpedia.org/ontology/child> ?child .
  FILTER(?setiI = <http://dbpedia.org/resource/Seti_I>) .
  
  ?child <http://dbpedia.org/ontology/child> ?grandchild .

  # Ensure that the father of the commander is also a parent of this grandchild.
  ?father <http://www.w3.org/2000/01/rdf-schema#label> ?parentLabel .
  FILTER(?parentLabel = ?grandchild) .
}
```",6,7,7,3,2,3,3,71,0,0,2,0,0.0,0
44,9,test,"Give me the band member of the associated musical artist, that is a group and an organisation, of Queensrÿche and band member of the band of John Pettibone.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/John_Pettibone> . <http://dbpedia.org/resource/Queensrÿche> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. },"```sparql
# Step 1: Identify Queensrÿche as an organization/group
SELECT ?queensryche WHERE {
    ?queensryche <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>.
    ?queensryche <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>.
}

# Step 2: Find band members of Queensrÿche
SELECT DISTINCT ?member WHERE {
    ?queensryche <http://dbpedia.org/property/member> ?member.
}

# Step 3: Identify John Pettibone's band
SELECT ?band WHERE {
    ?pettibone <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>.
    ?pettibone <http://dbpedia.org/resource/John_Pettibone>.
    ?band <http://dbpedia.org/property/member> ?pettibone.
}

# Step 4: Find common band members
SELECT DISTINCT ?commonMember WHERE {
    ?queensryche <http://dbpedia.org/property/member> ?commonMember.
    ?band <http://dbpedia.org/property/member> ?commonMember.
}
```",4,6,5,2,2,2,2,9,0,0,1,0,0.0,0
378,48,test,Give me the claim to fame of the commander in Great Siege of Gibraltar and war of the person born as the birth name of Carl Pontus Gahn.,SELECT ?result WHERE { <http://dbpedia.org/resource/Great_Siege_of_Gibraltar> <http://dbpedia.org/ontology/commander> ?v1 . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/ontology/knownFor> ?result . <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/property/birthName> ?v3 . ?v2 <http://dbpedia.org/property/birthName> ?v3 . },"```sparql
# Step 1: Get the birth name of Carl Pontus Gahn
SELECT ?birthName WHERE {
    <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/ontology/birthName> ?birthName .
}

# Step 2: Find the person with that birth name
SELECT ?person WHERE {
    ?person <http://dbpedia.org/ontology/birthName> ?birthName .
    FILTER(?birthName = ""Carl Pontus Gahn"") # Replace with actual birth name from step 1
}

# Step 3: Determine the war associated with that person
SELECT ?war WHERE {
    ?person <http://dbpedia.org/ontology/war> ?war .
}

# Step 4: Identify the commander in the Great Siege of Gibraltar
SELECT ?commander WHERE {
    <http://dbpedia.org/resource/Great_Siege_of_Gibraltar> <http://dbpedia.org/ontology/commander> ?commander .
}

# Step 5: Find the claim to fame of this commander
SELECT ?claimToFame WHERE {
    ?commander <http://dbpedia.org/ontology/knownFor> ?claimToFame .
}
```",5,5,6,3,2,3,3,71,0,0,2,0,0.0,0
996,17,test,Give me the force of Dagobert Sigmund von Wurmser and entity in the award of the native of Palestine (region).,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Palestine_(region)> . ?result <http://dbpedia.org/ontology/place> ?v3 . ?v0 <http://dbpedia.org/property/awards> ?v3 . ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Dagobert_Sigmund_von_Wurmser> . },"```sparql
SELECT ?force, ?entity WHERE {
  # Force of Dagobert Sigmund von Wurmser
  <http://dbpedia.org/resource/Dagobert_Sigmund_von_Wurmser> <http://dbpedia.org/ontology/force> ?force .

  # Entity in the award of a native of Palestine (region)
  ?person <http://www.w3.org/2000/01/rdf-schema#label> ""Palestine""@en .
  ?person <http://dbpedia.org/ontology/nationality> ?nationality .
  ?award <http://purl.org/dc/terms/creator> ?person .
  ?entity <http://dbpedia.org/property/awards> ?award .
}
```",4,4,5,3,2,3,2,20,0,0,4,0,0.0,0
9,67,test,"Give me the alma mater of John Alderdice, Baron Alderdice and figure known as the nickname of the entity, that is an organisation and an educational institution, in Northern Ireland and alma mater of the awardee of the reference, that is an award, to Royal Medals.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v6 <http://dbpedia.org/ontology/almaMater> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Royal Medals""@en . ?result <http://dbpedia.org/property/nickname> ?v3 . ?v1 <http://dbpedia.org/property/nickname> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v6 <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/John_Alderdice,_Baron_Alderdice> <http://dbpedia.org/ontology/almaMater> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Northern_Ireland> . }","```sparql
SELECT ?almaMaterJohnAlderdice ?organisationNickname ?awardeeAlmaMater WHERE {
  # Alma mater of John Alderdice
  <http://dbpedia.org/resource/John_Alderdice> <http://dbpedia.org/ontology/almaMater> ?almaMaterJohnAlderdice .

  # Organisation and educational institution in Northern Ireland with a nickname
  ?organisation <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation> .
  ?organisation <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalOrganization> .
  ?organisation <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Northern_Ireland> .
  ?organisation <http://dbpedia.org/ontology/nickName> ?organisationNickname .

  # Awardee of Royal Medals
  ?awardee <http://dbpedia.org/property/reference> ?royalMedalsReference .
  ?royalMedalsReference <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award> .
  FILTER(CONTAINS(LCASE(?royalMedalsReference), ""royal medals""))

  # Alma mater of the awardee
  ?awardee <http://dbpedia.org/ontology/almaMater> ?awardeeAlmaMater .

  # Linking the organisation nickname to the alma mater of John Alderdice
  FILTER(?organisationNickname = ?almaMaterJohnAlderdice)
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
838,18,test,"Give me the band member of the band, that is a group, of YU Grupa and band of the band member, that is an artist and a musical artist, of the band, that is a band and a group, of Žika Jelić.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v1 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Žika_Jelić> . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . <http://dbpedia.org/resource/YU_Grupa> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. },"```sparql
# Step 1: Find members of YU Grupa
SELECT ?member WHERE {
    ?band <http://dbpedia.org/ontology/member> ?member .
    FILTER(?band = <http://dbpedia.org/resource/YU_Grupa>)
}

# Step 2: For each member, find other bands they are part of
SELECT DISTINCT ?otherBand WHERE {
    ?member <http://dbpedia.org/ontology/member> ?otherBand .
    ?band <http://dbpedia.org/ontology/member> ?member .
    FILTER(?band = <http://dbpedia.org/resource/YU_Grupa>)
}

# Step 3: Find members of the band associated with Žika Jelić
SELECT ?member WHERE {
    ?band <http://dbpedia.org/ontology/member> ?member .
    ?artist <http://dbpedia.org/ontology/band> ?band .
    FILTER(?artist = <http://dbpedia.org/resource/Žika_Jelić>)
}

# Step 4: For each member, find other bands they are part of
SELECT DISTINCT ?otherBand WHERE {
    ?member <http://dbpedia.org/ontology/member> ?otherBand .
    ?band <http://dbpedia.org/ontology/member> ?member .
    ?artist <http://dbpedia.org/ontology/band> ?band .
    FILTER(?artist = <http://dbpedia.org/resource/Žika_Jelić>)
}

# Final step: Find common band members
SELECT DISTINCT ?commonMember WHERE {
    # Members of bands associated with YU Grupa
    ?member1 <http://dbpedia.org/ontology/member> ?band1 .
    ?band1 <http://dbpedia.org/ontology/member> ?member1 .
    FILTER(?band1 IN {<#otherBand>})

    # Members of bands associated with Žika Jelić's band
    ?member2 <http://dbpedia.org/ontology/member> ?band2 .
    ?band2 <http://dbpedia.org/ontology/member> ?member2 .
    FILTER(?band2 IN {<#otherBand>})

    # Find common members
    FILTER(?member1 = ?member2)
}
```",5,10,6,3,2,3,2,20,0,0,5,0,0.0,0
427,18,test,Give me the party of Giulio Andreotti and party of Romano Prodi and reference to Partito Popolare Italiano.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Partito Popolare Italiano""@en . <http://dbpedia.org/resource/Giulio_Andreotti> <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/ontology/party> ?result . }","```sparql
SELECT ?andreottiParty ?prodiParty ?partitoPopolareItaliano WHERE {
  OPTIONAL { <http://dbpedia.org/resource/Giulio_Andreotti> <http://dbpedia.org/ontology/party> ?andreottiParty . }
  OPTIONAL { <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/ontology/party> ?prodiParty . }
  <http://dbpedia.org/resource/Partito_Popolare_Italiano> ?partitoPopolareItaliano .
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
767,49,test,"Give me the reference to the alter ego of the persona, that is a fictional character, of Matthew Burland and entity in the administration, that is a settlement, of Green.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/alterEgo> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://xmlns.com/foaf/0.1/name> ?v1 . ?result <http://dbpedia.org/ontology/state> ?v2 . ?v0 <http://dbpedia.org/property/alterEgo> ""Matthew Burland""@en . ?v2 <http://dbpedia.org/property/leaderParty> ""Green""@en . }","```sparql
SELECT ?alterEgo ?adminEntity WHERE {
  # Part 1: Find the fictional character and its alter ego created by Matthew Burland
  ?character <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/Matthew_Burland> .
  ?character <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter> .
  ?character <http://dbpedia.org/property/alterEgo> ?alterEgo .

  # Part 2: Find an entity in the administration of a settlement named ""Green""
  ?adminEntity <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion> .
  ?adminEntity <http://dbpedia.org/property/residence> ?settlement .
  ?settlement <http://www.w3.org/2000/01/rdf-schema#label> ""Green""@en .

  # Ensure the results are distinct
  FILTER(?alterEgo != ?adminEntity)
}
```",5,7,6,3,2,3,3,71,0,0,7,0,0.0,0
488,47,test,"Give me the birth place of the commander in Boshin War and death place of the father, that is a politician, of the father, that is an office holder, of Matsudaira Tadamasa.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v4 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Matsudaira_Tadamasa> <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Boshin_War> <http://dbpedia.org/ontology/commander> ?v2 . ?v0 <http://dbpedia.org/property/father> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
SELECT ?birthPlace ?deathPlace WHERE {
  # Step 1: Identify the commander in the Boshin War
  ?boshinWar dbpedia-owl:commander ?commander .
  
  # Filter for the specific war
  FILTER(STR(?boshinWar) = ""Boshin_War"")

  # Step 2: Determine the birthplace of this commander
  ?commander dbo:birthPlace ?birthPlace .

  # Step 3: Find Matsudaira Tadamasa's father and identify his role as a politician
  dbpedia:Matsudaira_Tadamasa dbo:father ?father .
  
  # Ensure the father is a politician
  ?father rdf:type dbo:Politician .

  # Step 4: Locate the death place of Matsudaira Tadamasa's grandfather, who is an office holder
  ?father dbo:father ?grandfather .
  
  # Ensure the grandfather is an office holder
  ?grandfather rdf:type dbo:OfficeHolder .
  
  # Get the death place of the grandfather
  ?grandfather dbo:deathPlace ?deathPlace .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
492,71,test,"Give me the person decedent at the capital, that is a settlement, of the country of Khemis Miliana District and person decedent at the work of the author of French Algeria and commander in the war, that is a military conflict and an event, of the commander in Battle of Verdun.",SELECT ?result WHERE { ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/property/author> ?v1 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/French_Algeria> <http://dbpedia.org/property/author> ?v1 . ?v5 <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://dbpedia.org/ontology/battle> ?v5 . <http://dbpedia.org/resource/Battle_of_Verdun> <http://dbpedia.org/ontology/commander> ?v4 . ?v7 <http://dbpedia.org/ontology/capital> ?v8 . ?result <http://dbpedia.org/ontology/deathPlace> ?v8 . ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . <http://dbpedia.org/resource/Khemis_Miliana_District> <http://dbpedia.org/ontology/country> ?v7 . },"```sparql
# Step 1: Find the capital of Khemis Miliana District
SELECT ?capital WHERE {
    ?district <http://dbpedia.org/ontology/country> ?country .
    ?country <http://dbpedia.org/property/administrativeCapital> ?capital .
    FILTER(?district = <http://dbpedia.org/resource/Khemis_Miliana_District>)
}

# Step 2: Identify a person who died in this capital
SELECT DISTINCT ?person WHERE {
    ?person <http://dbpedia.org/ontology/deathPlace> ?deathPlace .
    ?deathPlace <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement> .
    FILTER(?deathPlace = ?capital)
}

# Step 3: Find the work of the author of French Algeria
SELECT DISTINCT ?work WHERE {
    ?author <http://purl.org/dc/terms/creator> ?work .
    ?work <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book> .
    FILTER(?work = <http://dbpedia.org/resource/French_Algeria_(book)>) 
}

# Step 4: Identify a person who died in relation to this work
SELECT DISTINCT ?person WHERE {
    ?person <http://dbpedia.org/property/deathRelatedTo> ?relatedWork .
    FILTER(?relatedWork = ?work)
}

# Step 5: Find the war commanded by the commander of the Battle of Verdun
SELECT DISTINCT ?war WHERE {
    ?battle <http://dbpedia.org/ontology/commander> ?commander .
    ?commander <http://dbpedia.org/ontology/battle> ?war .
    FILTER(?battle = <http://dbpedia.org/resource/Battle_of_Verdun>)
}

# Step 6: Identify a person who died in this war
SELECT DISTINCT ?person WHERE {
    ?person <http://dbpedia.org/ontology/deathPlace> ?deathPlace .
    ?deathPlace <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
    FILTER(?deathPlace = ?war)
}

# Step 7: Find common individuals across these criteria
SELECT DISTINCT ?commonPerson WHERE {
    VALUES ?person1 { ?person2 ?person3 }
    ?person1 <http://dbpedia.org/ontology/deathPlace> ?place1 .
    ?person2 <http://dbpedia.org/ontology/deathPlace> ?place2 .
    ?person3 <http://dbpedia.org/ontology/deathPlace> ?place3 .
    FILTER(?place1 = ?capital && ?place2 = ?relatedWork && ?place3 = ?war)
}
```",9,12,10,3,3,3,3,71,0,0,1,0,0.0,0
328,43,test,Give me the commander in the force of the person decedent at Budapest and awardee of Order of Suvorov and leader of People's Commissariat of Defense of the Soviet Union.,SELECT ?result WHERE { <http://dbpedia.org/resource/People's_Commissariat_of_Defense_of_the_Soviet_Union> <http://dbpedia.org/ontology/leader> ?result . ?v4 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Budapest> . ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Order_of_Suvorov> . ?v4 <http://dbpedia.org/ontology/commander> ?v0 . },"```sparql
SELECT ?commander WHERE {
  ?person dbpedia-owl:deathPlace <http://dbpedia.org/resource/Budapest> .
  ?person dbpedia-owl:award <http://dbpedia.org/resource/Order_of_Suvorov> .
  ?person foaf:title ""Leader of the People's Commissariat of Defense of the Soviet Union""@en .
  ?force dbpedia-owl:commander ?commander .
  ?person dbpedia-owl:militaryService ?force .
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
378,43,test,"Give me the claim to fame of Louis des Balbes de Berton de Crillon, 1st Duke of Mahón and war of the commander in the reference, that is a military conflict, to Peninsular War and war of Carl Pontus Gahn.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/commander> ?v4 . <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/ontology/battle> ?result . ?v4 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Peninsular War""@en . <http://dbpedia.org/resource/Louis_des_Balbes_de_Berton_de_Crillon,_1st_Duke_of_Mahón> <http://dbpedia.org/ontology/knownFor> ?result . }","```sparql
# Query for claim to fame of Louis des Balbes de Berton de Crillon, 1st Duke of Mahón
SELECT ?claimToFame WHERE {
    <http://dbpedia.org/resource/Louis_des_Balbes_de_Berton_de_Crillon,_1st_Duke_of_Mah%C3%B3n> <http://dbpedia.org/ontology/knownFor> ?claimToFame .
}

UNION

# Query for military conflict referenced in relation to Peninsular War and involving Carl Pontus Gahn
SELECT DISTINCT ?conflict WHERE {
    ?conflict <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
    OPTIONAL { 
        ?peninsularWar <http://dbpedia.org/ontology/reference> ?conflict .
        FILTER EXISTS { ?peninsularWar <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> . 
                        ?peninsularWar <http://dbpedia.org/ontology/name> ""Peninsular War""^^<http://www.w3.org/2001/XMLSchema#string> }
    }
    OPTIONAL {
        ?gahnCommander <http://dbpedia.org/ontology/commander> ?conflict .
        FILTER EXISTS { ?gahnCommander <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person> . 
                        ?gahnCommander <http://dbpedia.org/ontology/name> ""Carl Pontus Gahn""^^<http://www.w3.org/2001/XMLSchema#string> }
    }
}
```",5,6,6,3,3,3,3,71,0,0,2,0,0.0,0
365,9,test,"Give me the reference to the real name of The Blasters and band of the professional, that is an artist and a musical artist, in Vocalist, musician, songwriter.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/occupation> ""Vocalist, musician, songwriter""@en . <http://dbpedia.org/resource/The_Blasters> <http://xmlns.com/foaf/0.1/name> ?v3 . ?result <http://dbpedia.org/ontology/bandMember> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
# Task 1: Find the real name of ""The Blasters""
SELECT ?realName WHERE {
    <http://dbpedia.org/resource/The_Blasters> <http://dbpedia.org/ontology/referredToAs> ?alias .
    FILTER(?alias = ""The Blasters"")
    OPTIONAL { ?alias <http://www.w3.org/2000/01/rdf-schema#label> ?realName }
}

UNION

# Task 2: Find the band of a professional who is both an artist and a musical artist in the context of being a vocalist, musician, and songwriter
SELECT ?band WHERE {
    ?person <http://dbpedia.org/ontology/profession> ?profession .
    FILTER(?profession IN (<http://dbpedia.org/ontology/Artist>, <http://dbpedia.org/ontology/MusicalArtist>)).
    ?person <http://dbpedia.org/property/vocals> ""Vocalist"" .
    ?person <http://dbpedia.org/property/musicalInstruments> ""Musician"" .
    ?person <http://dbpedia.org/ontology/writtenWork> ""Songwriter"" .
    ?person <http://dbpedia.org/ontology/memberOfBand> ?band .
}
```",4,6,5,2,2,2,2,9,0,0,1,0,0.0,0
617,20,test,"Give me the parent of the father, that is a royalty, of the reference, that is a royalty, to Richeza of Poland and child of the child, that is a royalty, of the parent of Mlada (abbess).","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/child> ?v5 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Mlada_(abbess)> . ?v2 <http://dbpedia.org/ontology/parent> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://xmlns.com/foaf/0.1/name> ""Richeza of Poland""@en . ?v4 <http://dbpedia.org/property/father> ?v5 . }","```sparql
SELECT ?result WHERE {
  # Step 1: Find Mlada (abbess) and her parent
  ?mlada a <http://dbpedia.org/ontology/Monastic>; 
         <http://dbpedia.org/property/parent> ?parentMlada.
  
  # Step 2: Find the child of that parent who is royalty
  ?childParent a <http://dbpedia.org/ontology/Royalty>;
               <http://dbpedia.org/property/parent> ?parentMlada;
               <http://dbpedia.org/property/child> ?royalChild.
  
  # Step 3: Identify the reference to Richeza of Poland as a royalty
  ?richeza a <http://dbpedia.org/ontology/Royalty>;
           <http://dbpedia.org/ontology/reference> ?royalChild.
  
  # Step 4: Find the father of that reference
  ?fatherRicheza a <http://dbpedia.org/ontology/Father>;
                 <http://dbpedia.org/property/father> ?richeza.
  
  # Step 5: Finally, find the parent of this father
  ?parentFather a <http://dbpedia.org/ontology/Parent>;
                <http://dbpedia.org/property/child> ?fatherRicheza.
  
  BIND(?parentFather AS ?result)
}
```",6,9,7,3,2,3,2,20,0,0,1,0,0.0,0
392,23,test,"Give me the province of the residence, that is a settlement and Italian, of Sebastiano Bianchetti and entity in the region, that is a country, of Central European Time.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v1 . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. ?v2 <http://dbpedia.org/ontology/province> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Sebastiano_Bianchetti> <http://dbpedia.org/property/residence> ?v2 . },"```sparql
# Step 1: Identify Sebastiano Bianchetti's Italian residence which is a settlement.
SELECT ?residence WHERE {
    <http://dbpedia.org/resource/Sebastiano_Bianchetti> <http://dbpedia.org/property/residence> ?residence .
    ?residence <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement> .
    ?residence <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy> .
}

# Step 2: Determine the province of this residence.
SELECT ?province WHERE {
    ?residence <http://dbpedia.org/property/province> ?province .
    # Use the result from step 1 for ?residence
}

# Step 3: Find entities (countries) in the region associated with Central European Time.
SELECT ?country WHERE {
    ?timeZone <http://www.w3.org/2000/01/rdf-schema#label> ""Central European Time"" .
    ?timeZone <http://dbpedia.org/ontology/country> ?country .
}

# Step 4: Ensure the province is an entity in one of these countries.
SELECT DISTINCT ?province WHERE {
    # Use results from step 2 for ?province
    ?province <http://www.w3.org/2000/01/rdf-schema#label> ?provinceLabel .
    
    # Join with results from step 3 to ensure the province is within a country in CET region
    ?country <http://dbpedia.org/ontology/province> ?province .
}
```",4,7,5,2,2,2,3,28,0,0,1,0,0.0,0
767,33,test,Give me the entity in Baden-Württemberg and alma mater of the administration of the reference to George Kilbon Nash.,"SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/governor> ?v0 . ?v0 <http://xmlns.com/foaf/0.1/name> ""George Kilbon Nash""@en . ?result <http://dbpedia.org/ontology/state> <http://dbpedia.org/resource/Baden-Württemberg> . ?v3 <http://dbpedia.org/ontology/almaMater> ?result . }","```sparql
SELECT ?entity WHERE {
  ?entity <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Baden-W%C3%BCrttemberg>.
  ?entity <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>.
  <http://dbpedia.org/resource/George_Kilbon_Nash> <http://dbpedia.org/ontology/almaMater> ?entity.
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
838,19,test,"Give me the band of the band member, that is an artist and a musical artist, of YU Grupa and band member of the band, that is a group, of the reference, that is a group and an organisation, to YU Grupa.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/YU_Grupa> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v0 <http://xmlns.com/foaf/0.1/name> ""YU Grupa""@en . }","```sparql
SELECT ?band WHERE {
  # Step 1: Find the reference (group and organization) related to YU Grupa
  <http://dbpedia.org/resource/YU_Grupa> <http://www.w3.org/2000/01/rdf-schema#seeAlso> ?reference .
  
  FILTER (?reference <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> (<http://dbpedia.org/ontology/Group> <http://dbpedia.org/ontology/Organisation>) )
  
  # Step 2: Find the band (a group) associated with this reference
  ?reference <http://www.w3.org/2000/01/rdf-schema#seeAlso> ?band .
  
  FILTER (?band <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>)
  
  # Step 3: Determine the band members of this band who are both artists and musical artists
  ?bandMember <http://dbpedia.org/property/member> ?band .
  FILTER (?bandMember <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> (<http://dbpedia.org/ontology/Artist> <http://dbpedia.org/ontology/MusicalArtist>) )
  
  # Step 4: Find the bands these identified band members belong to
  ?bandMember <http://dbpedia.org/property/member> ?resultBand .
}
```",5,10,6,3,2,3,2,20,0,0,5,0,0.0,0
492,27,test,"Give me the person decedent at the capital, that is a settlement, of the country of Khemis Miliana District.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/capital> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Khemis_Miliana_District> <http://dbpedia.org/ontology/country> ?v1 . ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . },"```sparql
SELECT ?person WHERE {
  # Find the capital of the country where Khemis Miliana District is located
  <http://dbpedia.org/resource/Khemis_Miliana_District> dbo:country ?country .
  ?country dbo:capital ?capital .

  # Ensure that the capital is a settlement
  ?capital rdf:type dbo:Settlement .

  # Find persons who died in this capital city
  ?person dbo:deathPlace ?capital .
}
```",3,4,4,3,1,3,3,71,122,0,0,1.0,1.0,1.0
328,34,test,Give me the leader of People's Commissariat of Defense of the Soviet Union and awardee of the award of the commander in Volcano and Ryukyu Islands campaign.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> ?v1 . <http://dbpedia.org/resource/Volcano_and_Ryukyu_Islands_campaign> <http://dbpedia.org/ontology/commander> ?v2 . <http://dbpedia.org/resource/People's_Commissariat_of_Defense_of_the_Soviet_Union> <http://dbpedia.org/ontology/leader> ?result . ?result <http://dbpedia.org/property/awards> ?v1 . },"```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/leader> <http://dbpedia.org/resource/People%27s_Commissariat_of_Defense_of_the_Soviet_Union> .
  ?person <http://dbpedia.org/property/awardee> ?award1 .
  ?award1 <http://dbpedia.org/ontology/campaign> <http://dbpedia.org/resource/Volcano_and_Ryukyu_Islands_campaign> .
  ?person <http://dbpedia.org/property/awardee> ?award2 .
  ?award2 <http://dbpedia.org/ontology/campaign> <http://dbpedia.org/resource/Volcano_and_Ryukyu_Islands_campaign> .
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
391,58,test,"Give me the native of Compton, California and actor of the claim to fame, that is a work, of Michael Ballhaus and actor of the movie, that is a movie and a work and a television show, with the professional in .","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/starring> ?v1 . <http://dbpedia.org/resource/Michael_Ballhaus> <http://dbpedia.org/ontology/knownFor> ?v5 . ?v5 <http://dbpedia.org/ontology/starring> ?result . ?v2 <http://dbpedia.org/property/starring> ?result . ?v1 <http://dbpedia.org/property/occupation> """"@en . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Compton,_California> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. }","```sparql
# Step 1: Identify Michael Ballhaus's claim to fame that is a work.
SELECT ?work WHERE {
    <http://dbpedia.org/resource/Michael_Ballhaus> <http://dbpedia.org/ontology/knownFor> ?work .
    ?work <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work> .
}

# Step 2: Find actors who are natives of Compton, California and have acted in the identified work.
SELECT DISTINCT ?actor WHERE {
    # Assuming ?work is obtained from step 1
    ?actor <http://dbpedia.org/property/nationality> <http://dbpedia.org/resource/United_States> .
    ?actor <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Compton,_California> .
    ?actor <http://dbpedia.org/ontology/performance> ?performance .
    ?performance <http://dbpedia.org/property/work> ?work .
}

# Step 3: Identify movies that are classified as both a movie and a work and also a television show.
SELECT DISTINCT ?movie WHERE {
    ?movie <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Movie> .
    ?movie <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work> .
    ?movie <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TVSeries> .
}

# Step 4: Find actors from these movies.
SELECT DISTINCT ?actor WHERE {
    # Assuming ?movie is obtained from step 3
    ?actor <http://dbpedia.org/ontology/performance> ?performance .
    ?performance <http://dbpedia.org/property/work> ?movie .
}
```

Note: This query assumes that the necessary data exists and is structured in a way that allows these relationships to be queried directly. In practice, additional steps or preprocessing might be required to handle complex logical conditions and ensure accurate results.",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
617,22,test,Give me the parent of the child of Antiochus (son of Antiochus III the Great) and child of Antiochus III the Great.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v1 . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Antiochus_III_the_Great> . <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/child> ?v1 . },"```sparql
SELECT ?parent WHERE {
  ?antiochus1 <http://dbpedia.org/ontology/birthPlace> ?place .
  ?antiochus1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person> .
  ?antiochus1 rdfs:label ""Antiochus (son of Antiochus III the Great)""@en .

  ?childOfAntiochus1 <http://dbpedia.org/ontology/birthPlace> ?placeChild .
  ?childOfAntiochus1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person> .
  ?childOfAntiochus1 <http://dbpedia.org/ontology/father> ?antiochus1 .

  ?childOfAntiochusIII <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person> .
  ?childOfAntiochusIII <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Antiochus_III_the_Great> .

  FILTER (?childOfAntiochus1 = ?childOfAntiochusIII)

  ?parent <http://dbpedia.org/ontology/birthPlace> ?placeParent .
  ?parent <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person> .
  ?parent <http://dbpedia.org/ontology/father> ?childOfAntiochus1 .

  SERVICE wikibase:label { bd:serviceParam wikibase:language ""en"". }
}
```",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
142,9,test,Give me the birthplace of the actor of Papa wa Newscaster and entity in the region of Japan Standard Time.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Japan_Standard_Time> . <http://dbpedia.org/resource/Papa_wa_Newscaster> <http://dbpedia.org/ontology/starring> ?v3 . ?result <http://dbpedia.org/ontology/country> ?v1 . },"```sparql
SELECT ?birthPlace WHERE {
  ?actor <http://dbpedia.org/ontology/film> <http://dbpedia.org/resource/Papa_wa_Newscaster> .
  ?actor <http://dbpedia.org/property/birthPlace> ?birthPlace .
  ?birthPlace <http://www.w3.org/2006/time#during> ?timePeriod .
  ?timePeriod <http://www.w3.org/2006/time#inCalendar> ?calendar .
  ?calendar <http://dbpedia.org/resource/Japan_Standard_Time> <http://www.w3.org/2000/01/rdf-schema#seeAlso> ?birthPlace .
}
```",4,4,5,2,2,2,2,9,0,0,2,0,0.0,0
915,20,test,"Give me the resident of the birthplace, that is a settlement, of the director of Pipe Dreams (1976 film) and father of the child, that is a fictional character and a soap character, of the parent, that is a fictional character and a soap character, of Lizzie Spaulding.",SELECT ?result WHERE { <http://dbpedia.org/resource/Lizzie_Spaulding> <http://dbpedia.org/ontology/parent> ?v4 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v5 <http://dbpedia.org/property/father> ?result . ?result <http://dbpedia.org/ontology/residence> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v5 <http://dbpedia.org/property/father> ?v4 . <http://dbpedia.org/resource/Pipe_Dreams_(1976_film)> <http://dbpedia.org/ontology/director> ?v1 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoapCharacter>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoapCharacter>. },"```sparql
SELECT ?resident WHERE {
  # Director of ""Pipe Dreams"" (1976 film)
  ?film rdf:type dbo:Film ;
        rdfs:label ""Pipe Dreams""@en .

  ?director dbo:directed ?film .

  # Birthplace as a settlement
  ?birthPlace dbo:birthPlace ?director ;
              rdf:type dbo:Settlement .

  # Resident of the birthplace
  ?resident dbo:residence ?birthPlace .

  # Lizzie Spaulding's parent and child
  ?parent dbo:child ?lizzieSpaulding ;
          rdf:type dbo:FictionalCharacter, dbo:SoapCharacter .
  
  ?lizzieSpaulding rdfs:label ""Lizzie Spaulding""@en ;
                   dbo:parent ?parent .

  ?child dbo:parent ?parent ;
         rdf:type dbo:FictionalCharacter, dbo:SoapCharacter .

  # Father of the child
  ?father dbo:child ?child .
}
```",6,11,7,3,2,3,2,20,0,0,1,0,0.0,0
328,67,test,"Give me the awardee of Order of Suvorov and leader of the office, that is a government agency, of the leader, that is an office holder and a politician, of Gustav Jonson and commander in the force of the person decedent at Budapest.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v6 <http://dbpedia.org/ontology/commander> ?v0 . ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Order_of_Suvorov> . ?v3 <http://dbpedia.org/ontology/leader> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Gustav_Jonson> <http://dbpedia.org/property/leader> ?v1 . ?v0 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Budapest> . ?v6 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v1 <http://dbpedia.org/property/office> ?v3 . },"```sparql
SELECT ?awardee WHERE {
  ?office <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>.
  ?leader1 <http://dbpedia.org/ontology/leader> ?office.
  ?gustavJonson <http://dbpedia.org/ontology/politician> ?politicianRole.
  ?politicianLeader <http://dbpedia.org/ontology/leader> ?gustavJonson.
  ?personDecedent <http://dbpedia.org/ontology/deceased> ?deathEvent.
  ?budaforce <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryForce>.
  ?commander <http://dbpedia.org/ontology/commander> ?budaforce.
  ?awardee <http://dbpedia.org/property/orderOfSuvorovAwardee> true.
  FILTER (?leader1 = ?politicianLeader)
  FILTER (?commander = ?personDecedent)
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
30,8,test,Give me the native of Paris and professional in the profession of Édouard Alphonse James de Rothschild.,SELECT ?result WHERE { <http://dbpedia.org/resource/Édouard_Alphonse_James_de_Rothschild> <http://dbpedia.org/property/occupation> ?v2 . ?result <http://dbpedia.org/property/occupation> ?v2 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Paris> . },"```sparql
SELECT ?nativePlace ?profession WHERE {
  <http://dbpedia.org/resource/Édouard_Alphonse_James_de_Rothschild> <http://www.w3.org/2000/01/rdf-schema#label> ""Édouard Alphonse James de Rothschild""@en .
  OPTIONAL { 
    <http://dbpedia.org/resource/Édouard_Alphonse_James_de_Rothschild> <http://dbpedia.org/ontology/birthPlace> ?nativePlace .
    FILTER (str(?nativePlace) = ""Paris"")
  }
  OPTIONAL {
    <http://dbpedia.org/resource/Édouard_Alphonse_James_de_Rothschild> <http://purl.org/dc/terms/profession> ?profession .
  }
}
```",3,3,4,2,2,2,2,9,0,0,1,0,0.0,0
547,57,test,Give me the resting place of James Burton (Egyptologist) and resting place of the actor of the show with Emily Richard and resting place of the awardee of Knight Grand Cross of the Order of St Michael and St George.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/starring> ?v5 . ?v5 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/James_Burton_(Egyptologist)> <http://dbpedia.org/ontology/restingPlace> ?result . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_St_Michael_and_St_George> . ?v0 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emily_Richard> . ?v3 <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
SELECT DISTINCT ?restingPlaceJamesBurton ?restingPlaceActor ?restingPlaceAwardee WHERE {
  # Resting place of James Burton (Egyptologist)
  ?person a dbo:Egyptologist ;
          foaf:name ""James Burton"" ;
          dbpedia:restingPlace ?restingPlaceJamesBurton .
  
  # Resting place of the actor from a show with Emily Richard
  ?show dbo:actor ?actor ;
        dbo:starring ?emilyRichard .
  ?emilyRichard foaf:name ""Emily Richard"" .
  ?actor dbpedia:restingPlace ?restingPlaceActor .

  # Resting place of the awardee of Knight Grand Cross of the Order of St Michael and St George
  ?awardee dbo:honoursReceived ?award ;
           dbpedia:restingPlace ?restingPlaceAwardee .
  ?award foaf:name ""Knight Grand Cross of the Order of St Michael and St George"" .
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
617,71,test,"Give me the spouse of the child of the successor, that is a royalty, of Antiochus (son of Antiochus III the Great) and parent of the child of the commander in Battle of Panium and child of the child, that is a royalty, of the successor, that is a royalty, of Antiochus II Theos.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v2 . <http://dbpedia.org/resource/Antiochus_II_Theos> <http://dbpedia.org/ontology/successor> ?v1 . <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/successor> ?v4 . ?v2 <http://dbpedia.org/property/father> ?v1 . ?v7 <http://dbpedia.org/ontology/child> ?v8 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://dbpedia.org/ontology/spouse> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Battle_of_Panium> <http://dbpedia.org/ontology/commander> ?v7 . ?v4 <http://dbpedia.org/ontology/child> ?v5 . ?result <http://dbpedia.org/ontology/child> ?v8 . },"```sparql
# Step 1: Find Antiochus II Theos's successor who is royalty.
SELECT ?successor WHERE {
    ?antiochus2 dbo:succeededBy ?successor .
    ?antiochus2 rdf:type <http://dbpedia.org/ontology/Royalty> ;
                foaf:name ""Antiochus II Theos"" .
    ?successor rdf:type <http://dbpedia.org/ontology/Royalty> .
}

# Step 2: Find the child of this successor who is royalty.
SELECT ?child WHERE {
    ?successor dbo:child ?child .
    ?child rdf:type <http://dbpedia.org/ontology/Royalty> .
}

# Step 3: Determine the spouse of this child.
SELECT ?spouse WHERE {
    ?child dbo:spouse ?spouse .
}

# Step 4: Identify the commander in the Battle of Panium and find their child.
SELECT ?commanderChild WHERE {
    <http://dbpedia.org/resource/Battle_of_Panium> dbo:commander ?commander .
    ?commander dbo:child ?commanderChild .
}

# Step 5: Ensure that the child from step 3 is also a parent to the commander's child.
SELECT ?spouse WHERE {
    ?child dbo:parent ?commanderChild .
}
```",9,12,10,3,3,3,3,71,0,0,2,0,0.0,0
747,49,test,Give me the band of the person born as the persona of Shèna and person born on the birth date of Pavlo Khudzik.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/property/birthName> ?v0 . <http://dbpedia.org/resource/Pavlo_Khudzik> <http://dbpedia.org/ontology/birthDate> ?v2 . ?result <http://dbpedia.org/ontology/birthDate> ?v2 . <http://dbpedia.org/resource/Shèna> <http://xmlns.com/foaf/0.1/givenName> ?v0 . },"```sparql
# Step 1: Get the birth date of Pavlo Khudzik
SELECT ?birthDate WHERE {
    <http://dbpedia.org/resource/Pavlo_Khudzik> <http://www.w3.org/2002/07/owl#sameAs> ?person .
    ?person <http://dbpedia.org/ontology/birthDate> ?birthDate .
}

# Step 2: Find persons with the persona ""Shèna""
SELECT ?person WHERE {
    ?person <http://dbpedia.org/property/persona> ""Shèna"" .
}

# Step 3: Match these persons to those who share the birthdate with Pavlo Khudzik
SELECT DISTINCT ?matchedPerson WHERE {
    # Assuming we have obtained the birthDate from step 1 as a variable $birthDate
    ?person <http://dbpedia.org/ontology/birthDate> $birthDate .
    ?person2 <http://dbpedia.org/property/persona> ""Shèna"" .
    FILTER (?person = ?person2)
}

# Step 4: Retrieve the band associated with this matched person
SELECT ?band WHERE {
    ?matchedPerson <http://dbpedia.org/ontology/band> ?band .
}
```",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
115,9,test,Give me the alma mater of the awardee of National Order of Scientific Merit and alma mater of the alumnus of National University of San Marcos.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/almaMater> ?result . ?v1 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/National_University_of_San_Marcos> . ?v3 <http://dbpedia.org/ontology/almaMater> ?result . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/National_Order_of_Scientific_Merit> . },"```sparql
SELECT ?entity ?almaMater WHERE {
  ?entity <http://dbpedia.org/ontology/award> <http://dbpedia.org/resource/National_Order_of_Scientific_Merit> .
  ?entity <http://dbpedia.org/property/almaMater> <http://dbpedia.org/resource/National_University_of_San_Marcos> .
  ?entity <http://dbpedia.org/ontology/almaMater> ?almaMater .
}
```",4,4,5,2,2,2,2,9,0,0,2,0,0.0,0
996,20,test,Give me the entity in the award of the native of Palestine (region) and force of the awardee of the elevation of Lac d'Avoriaz.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/ontology/commander> ?v2 . ?result <http://dbpedia.org/ontology/place> ?v5 . ?v4 <http://dbpedia.org/property/awards> ?v5 . <http://dbpedia.org/resource/Lac_d'Avoriaz> <http://dbpedia.org/ontology/elevation> ?v1 . ?v4 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Palestine_(region)> . },"```sparql
SELECT ?entity WHERE {
  # Step 1: Find the elevation of Lac d'Avoriaz
  <http://dbpedia.org/resource/Lac_d%27Avoriaz> <http://www.w3.org/2000/01/rdf-schema#label> ""Lac d'Avoriaz"" .
  ?lac dcterms:elevation ?elevation .

  # Step 2: Find the awardee associated with that elevation
  ?award <http://dbpedia.org/ontology/awardee> ?person .
  ?person <http://www.w3.org/2000/01/rdf-schema#label> ?name .
  
  # Step 3: Determine the force of that awardee
  ?person <http://dbpedia.org/property/force> ?force .

  # Step 4: Identify the native region of Palestine for this person
  ?person <http://www.w3.org/2000/01/rdf-schema#birthPlace> ?nativePlace .
  ?nativePlace <http://www.w3.org/2000/01/rdf-schema#label> ""Palestine"" .

  # Step 5: Find an entity related to the award they received
  ?award <http://dbpedia.org/ontology/entity> ?entity .
}
```",6,6,7,3,2,3,2,20,0,0,4,0,0.0,0
820,16,test,Give me the professional in the award of Scott McCloud and child of the parent of Jason Schwartzman.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v3 . <http://dbpedia.org/resource/Scott_McCloud> <http://dbpedia.org/property/awards> ?v2 . ?result <http://dbpedia.org/property/occupation> ?v2 . ?v3 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Jason_Schwartzman> . },"```sparql
SELECT ?professional WHERE {
  ?award <http://dbpedia.org/ontology/winner> <http://dbpedia.org/resource/Scott_McCloud> .
  ?parent <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Jason_Schwartzman> .
  ?professional <http://dbpedia.org/ontology/award> ?award .
  ?professional <http://www.w3.org/2000/01/rdf-schema#seeAlso> ?parent .
}
```",4,4,5,2,2,3,2,20,0,0,1,0,0.0,0
701,35,test,Give me the parent of the child of Nefertari and spouse of the father of Merneptah.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v1 . ?v2 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Nefertari> <http://dbpedia.org/ontology/child> ?v2 . <http://dbpedia.org/resource/Merneptah> <http://dbpedia.org/property/father> ?v1 . },"```sparql
SELECT ?parent WHERE {
  ?child <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/Nefertari>.
  ?child <http://dbpedia.org/ontology/father> ?father.
  ?father <http://dbpedia.org/property/spouse> ?spouse.
  ?merneptah <http://dbpedia.org/ontology/birthParent> ?father.
  FILTER(?merneptah = <http://dbpedia.org/resource/Merneptah>)
}
```",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
767,46,test,"Give me the entity in the administration, that is a settlement, of the writer of Where It's At (Dustin Lynch album) and alma mater of the administration of George K. Nash.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://dbpedia.org/property/leaderParty> ?v2 . ?result <http://dbpedia.org/ontology/state> ?v1 . ?v4 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/George_K._Nash> . ?v4 <http://dbpedia.org/ontology/almaMater> ?result . <http://dbpedia.org/resource/Where_It's_At_(Dustin_Lynch_album)> <http://dbpedia.org/property/writer> ?v2 . },"```sparql
SELECT ?settlement WHERE {
    ?album dbo:writer ?writer .
    ?writer foaf:name ""Dustin Lynch"" .

    ?nash dbo:almaMater ?university .
    ?nash foaf:name ""George K. Nash"" .

    ?university dbo:administration ?administration .
    ?administration dbo:settlement ?settlement .
    
    ?settlement a <http://dbpedia.org/ontology/Settlement> .
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
547,61,test,Give me the resting place of the actor of the show with Emily Richard and resting place of the awardee of the award of Gerald Graham.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emily_Richard> . ?v3 <http://dbpedia.org/ontology/restingPlace> ?result . ?v3 <http://dbpedia.org/property/awards> ?v1 . <http://dbpedia.org/resource/Gerald_Graham> <http://dbpedia.org/property/awards> ?v1 . ?v5 <http://dbpedia.org/ontology/restingPlace> ?result . ?v0 <http://dbpedia.org/property/starring> ?v5 . },"```sparql
# Part 1: Find the actor of a show featuring Emily Richard and their resting place.
SELECT ?actorRestingPlace WHERE {
    ?show dbp:starring ?actor .
    ?show dbp:castMember ?emilyRichard .
    ?emilyRichard foaf:name ""Emily Richard"" .
    ?actor dbo:deathPlace ?actorDeathPlace .
    OPTIONAL { ?actorDeathPlace rdfs:label ?actorRestingPlace . FILTER (lang(?actorRestingPlace) = 'en') }
}

UNION

# Part 2: Find the awardee of an award associated with Gerald Graham and their resting place.
SELECT ?awardeeRestingPlace WHERE {
    ?award dbo:recipient ?awardee .
    ?award dbo:givenTo ?geraldGrahamAward .
    ?geraldGrahamAward foaf:name ""Gerald Graham"" .
    ?awardee dbo:deathPlace ?awardeeDeathPlace .
    OPTIONAL { ?awardeeDeathPlace rdfs:label ?awardeeRestingPlace . FILTER (lang(?awardeeRestingPlace) = 'en') }
}
```",6,6,7,3,2,3,3,71,0,0,2,0,0.0,0
54,67,test,"Give me the predecessor of the child, that is an office holder and a royalty, of the reference to Thihapate of Mohnyin and parent of the child of the parent of Thado Minsaw of Prome and child of Thinkhaya of Pagan.","SELECT ?result WHERE { ?v1 <http://xmlns.com/foaf/0.1/name> ""Thihapate of Mohnyin""@en . ?v6 <http://dbpedia.org/property/father> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v6 <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://dbpedia.org/property/father> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> . ?result <http://dbpedia.org/ontology/successor> ?v3 . <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?result . }","```sparql
SELECT ?predecessor WHERE {
  # Step 1: Find Thihapate of Mohnyin's reference
  ?thihapate a dbo:Person ;
             foaf:name ""Thihapate of Mohnyin"" .

  # Step 2: Find the child who is an office holder and royalty
  ?child dbo:parent ?thihapate ;
         a dbo:OfficeHolder, dbo:Royalty .

  # Step 3: Determine the parent of Thado Minsaw of Prome
  ?thadoMinsaw a dbo:Person ;
                foaf:name ""Thado Minsaw of Prome"" .
  ?parentOfThadoMinsaw dbo:child ?thadoMinsaw .

  # Step 4: Identify the child of this parent
  ?childOfParent dbo:parent ?parentOfThadoMinsaw ;
                 a dbo:Person .

  # Step 5: Find Thinkhaya of Pagan's child
  ?thinkhaya a dbo:Person ;
             foaf:name ""Thinkhaya of Pagan"" .
  ?childOfThinkhaya dbo:parent ?thinkhaya ;
                    a dbo:Person .

  # Ensure the child from step 2 is related to both children found in steps 4 and 5
  FILTER(?child = ?childOfParent && ?child = ?childOfThinkhaya)

  # Step 6: Locate the predecessor of this child
  ?predecessor dbo:successor ?child .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
994,24,test,"Give me the band member of Don Dokken and associated musical artist of the band member, that is a band and a group and an organisation, of Meshuggah.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Meshuggah> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Don_Dokken> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. },"```sparql
SELECT DISTINCT ?member ?associatedArtist WHERE {
  # Step 1: Find band members of Don Dokken
  <http://dbpedia.org/resource/Don_Dokken> <http://dbpedia.org/ontology/member> ?member .

  # Step 2: For each member, find their associated musical artists
  ?member <http://dbpedia.org/property/associatedMusicalArtist> ?associatedArtist .

  # Step 3: Filter these artists to those that are a band, group, and organization
  ?associatedArtist <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band> .
  ?associatedArtist <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalGroup> .
  ?associatedArtist <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation> .

  # Step 4: Ensure the filtered entities have an association with Meshuggah
  ?associatedArtist <http://dbpedia.org/property/member> ?meshuggahMember .
  ?meshuggahMember <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/resource/Meshuggah> .
}
```",3,6,4,2,2,3,3,71,0,0,1,0,0.0,0
232,56,test,"Give me the actor of Dog Soldiers (film) and child of the person born as John Devon Roland Pertwee and native of the residence, that is a settlement and British, of the native, that is a politician and an office holder, of France.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v0 <http://dbpedia.org/property/residence> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/France> . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v2 <http://dbpedia.org/property/birthName> ""John Devon Roland Pertwee""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Dog_Soldiers_(film)> <http://dbpedia.org/ontology/starring> ?result . }","```sparql
# Step 1: Find the native of France who is both a politician and an office holder
SELECT ?politician WHERE {
    ?politician <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/France>.
    ?politician <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>.
    ?politician <http://dbpedia.org/ontology/officeHolder> ?office.
}

# Step 2: Determine their residence, which is a settlement in Britain
SELECT ?residence WHERE {
    ?politician <http://dbpedia.org/property/residence> ?residence.
    ?residence <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>.
    ?residence <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>.
}

# Step 3: Find the person born as John Devon Roland Pertwee whose native place matches the British settlement
SELECT ?person WHERE {
    ?person <http://dbpedia.org/property/birthName> ""John Devon Roland Pertwee""^^<http://www.w3.org/2001/XMLSchema#string>.
    ?person <http://dbpedia.org/ontology/nativePlace> ?residence.
}

# Step 4: Identify the actor from ""Dog Soldiers"" who is also the child of the person found in step 3
SELECT ?actor WHERE {
    ?film <http://dbpedia.org/property/starring> ?actor.
    ?film <http://www.w3.org/2000/01/rdf-schema#label> ""Dog Soldiers (film)""@en.
    ?person <http://dbpedia.org/ontology/child> ?actor.
}
```",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
547,47,test,Give me the resting place of the actor of the show with Emily Richard and resting place of the child of James Burton (property developer).,SELECT ?result WHERE { <http://dbpedia.org/resource/James_Burton_(property_developer)> <http://dbpedia.org/ontology/child> ?v2 . ?v4 <http://dbpedia.org/ontology/restingPlace> ?result . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . ?v0 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emily_Richard> . ?v0 <http://dbpedia.org/property/starring> ?v4 . },"SELECT ?restingPlaceActor ?restingPlaceChild WHERE {
  # Part 1: Resting place of the actor from the show with Emily Richard
  ?show dbp:starring <http://dbpedia.org/resource/Emily_Richard> .
  ?actor dbo:actedIn ?show .
  ?actor foaf:deathPlace ?restingPlaceActor .

  UNION

  # Part 2: Resting place of the child of James Burton (property developer)
  <http://dbpedia.org/resource/James_Burton_(property_developer)> dbo:child ?child .
  ?child foaf:deathPlace ?restingPlaceChild
}",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
427,66,test,"Give me the reference to the name of Italian People's Party (1994) and party of the father of Lamberto Andreotti and party of the person born, that is an office holder and a politician, as the birth name of Romano Prodi.",SELECT ?result WHERE { ?v6 <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Lamberto_Andreotti> <http://dbpedia.org/property/father> ?v6 . ?v2 <http://dbpedia.org/ontology/party> ?result . ?v2 <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Italian_People's_Party_(1994)> <http://xmlns.com/foaf/0.1/name> ?v3 . <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/property/birthName> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
SELECT ?italianPeopleParty ?fatherParty ?prodiParty WHERE {
  # Reference to the name of Italian People's Party (1994)
  <http://dbpedia.org/resource/Italian_People%27s_Party_(1994)> rdfs:label ?italianPeopleParty .

  # Party of the father of Lamberto Andreotti
  <http://dbpedia.org/resource/Lamberto_Andreotti> foaf:father ?father .
  ?father dbo:partyAffiliation ?fatherParty .

  # Party of Romano Prodi
  <http://dbpedia.org/resource/Romano_Prodi> a dbo:OfficeHolder ;
                                  a dbo:Politician ;
                                  foaf:name ""Romano Prodi""@en .
  ?prodiParty dbo:member <http://dbpedia.org/resource/Romano_Prodi> .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
184,51,test,Give me the parent of the child of the parent of Archduchess Margaret of Austria (born 1925) and child of the child of Archduke Joseph Karl of Austria.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v4 . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Margaret_of_Austria_(born_1925)> . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Karl_of_Austria> . ?result <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://dbpedia.org/property/father> ?v1 . },"```sparql
# Step 1: Identify Archduchess Margaret of Austria (born 1925) and find her parent.
SELECT ?margaretParent WHERE {
    ?margaret a dbo:Person ;
              foaf:name ""Archduchess Margaret of Austria""@en ;
              dbp:birthYear ""1925""^^xsd:gYear .
    ?margaret dbo:parent ?margaretParent .
}

# Step 2: Find the child of that parent.
SELECT ?childOfMargaretParent WHERE {
    ?margaretParent dbo:child ?childOfMargaretParent .
}

# Step 3: Identify Archduke Joseph Karl of Austria and find his child.
SELECT ?josephChild WHERE {
    ?joseph a dbo:Person ;
            foaf:name ""Archduke Joseph Karl of Austria""@en .
    ?joseph dbo:child ?josephChild .
}

# Step 4: Find the child of that child.
SELECT ?grandchildOfJoseph WHERE {
    ?josephChild dbo:child ?grandchildOfJoseph .
}

# Step 5: Determine the parent of both individuals identified in steps 2 and 4.
SELECT DISTINCT ?parent WHERE {
    OPTIONAL { ?childOfMargaretParent dbo:parent ?parent . }
    OPTIONAL { ?grandchildOfJoseph dbo:parent ?parent . }
}
```",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
547,50,test,Give me the resting place of the awardee of Knight Grand Cross of the Order of St Michael and St George and resting place of the actor of the show with Emily Richard.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emily_Richard> . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_St_Michael_and_St_George> . ?v4 <http://dbpedia.org/ontology/restingPlace> ?result . ?v3 <http://dbpedia.org/ontology/restingPlace> ?result . ?v0 <http://dbpedia.org/property/starring> ?v4 . },"```sparql
# Find awardees of the Knight Grand Cross of the Order of St Michael and St George
SELECT ?person (SAMPLE(?restingPlace) AS ?awardeeRestingPlace)
WHERE {
  ?person <http://dbpedia.org/ontology/honoraryTitle> ""Knight Grand Cross of the Order of St Michael and St George"" .
  OPTIONAL { ?person <http://dbpedia.org/property/burialPlace> ?restingPlace . }
}
GROUP BY ?person

UNION

# Find shows with Emily Richard as an actor
SELECT DISTINCT ?actor (SAMPLE(?restingPlace) AS ?actorRestingPlace)
WHERE {
  ?show <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/E._Richard> .
  ?show <http://dbpedia.org/ontology/starring> ?actor .
  OPTIONAL { ?actor <http://dbpedia.org/property/burialPlace> ?restingPlace . }
}
```",5,5,6,3,2,3,3,71,0,0,2,0,0.0,0
528,71,test,"Give me the war of the commander in the work of --01-09 and war of the military force of the entity, that is a societal event, in Chile and force of the person born as the birth name of Narciso Campero.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Chile> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/commander> ?v8 . <http://dbpedia.org/resource/Narciso_Campero> <http://dbpedia.org/property/birthName> ?v7 . ?v4 <http://dbpedia.org/ontology/commander> ?v5 . ?v4 <http://dbpedia.org/property/author> ""--01-09""^^<http://www.w3.org/2001/XMLSchema#gMonthDay> . ?v2 <http://dbpedia.org/ontology/battle> ?v1 . ?v8 <http://dbpedia.org/property/birthName> ?v7 . ?v5 <http://dbpedia.org/ontology/battle> ?result . }","```sparql
SELECT DISTINCT ?war1 ?force2 ?force3 WHERE {
  # Part 1: Work of --01-09 and its commander's war
  ?work dbp:date ""--01-09"" ;
        dbo:commander ?commander .
  ?commander dbo:militaryConflict ?war1 .

  # Part 2: Societal event in Chile and its military force
  ?event a dbo:SocietalEvent ;
         dbo:country <http://dbpedia.org/resource/Chile> .
  ?event dbo:militaryForce ?force2 .

  # Part 3: Person born as Narciso Campero and their military force
  ?person foaf:name ""Narciso Campero"" ;
          dbp:birthName ""Narciso Campero"" .
  ?person dbo:militaryForce ?force3 .
}
```",9,10,10,3,3,3,3,71,0,0,2,0,0.0,0
528,67,test,Give me the force of the person born as the birth name of Narciso Campero and war of the commander in the work of --01-09 and war of Irene Morales.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> ?v3 . ?v3 <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/ontology/commander> ?v6 . ?v0 <http://dbpedia.org/property/author> ""--01-09""^^<http://www.w3.org/2001/XMLSchema#gMonthDay> . <http://dbpedia.org/resource/Irene_Morales> <http://dbpedia.org/ontology/battle> ?result . ?v6 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Narciso_Campero> <http://dbpedia.org/property/birthName> ?v1 . }","```sparql
# Query 1: Force of Narciso Campero
SELECT ?force WHERE {
    ?person <http://dbpedia.org/property/birthName> ""Narciso Campero"" .
    ?person <http://dbpedia.org/ontology/militaryService> ?service .
    ?service <http://dbpedia.org/ontology/force> ?force .
}

UNION

# Query 2: War of the Commander in the Work of --01-09
SELECT ?war WHERE {
    ?work <http://www.w3.org/2000/01/rdf-schema#label> ""--01-09"" .
    ?work <http://dbpedia.org/ontology/commander> ?commander .
    ?commander <http://dbpedia.org/ontology/battle> ?battle .
    ?battle <http://dbpedia.org/ontology/war> ?war .
}

UNION

# Query 3: War of Irene Morales
SELECT ?war WHERE {
    ?person <http://xmlns.com/foaf/0.1/name> ""Irene Morales"" .
    ?person <http://dbpedia.org/ontology/battle> ?battle .
    ?battle <http://dbpedia.org/ontology/war> ?war .
}
```",7,7,8,3,3,3,3,71,0,0,2,0,0.0,0
994,20,test,"Give me the associated musical artist of S.A. Slayer and associated musical artist of the band member, that is a band and a group and an organisation, of Meshuggah.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Meshuggah> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/S.A._Slayer> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
# Part 1: Associated musical artist of S.A. Slayer
SELECT ?artist WHERE {
    ?s <http://dbpedia.org/ontology/associatedMusicalArtist> ?artist .
    ?s rdfs:label ""S.A. Slayer""@en .
}

UNION

# Part 2: Associated musical artist of the band member of Meshuggah who is part of a group that is both a band and an organization
SELECT ?artist WHERE {
    ?member <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/Meshuggah> .
    ?group <http://dbpedia.org/ontology/member> ?member .
    ?group <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band> .
    ?group <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation> .
    ?member <http://dbpedia.org/ontology/associatedMusicalArtist> ?artist .
}
```",3,6,4,2,2,3,3,71,0,0,2,0,0.0,0
626,19,test,"Give me the commander in the force, that is a military conflict, of Alexander I of Russia and awardee of the award of the military force of Battle of Borodino.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ?v4 . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/property/awards> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Borodino> . ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Alexander_I_of_Russia> . },"```sparql
SELECT ?commander WHERE {
  ?militaryConflict <http://dbpedia.org/ontology/commander> ?commander .
  ?militaryConflict <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
  
  ?force <http://dbpedia.org/property/commandedBy> <http://dbpedia.org/resource/Alexander_I_of_Russia> .
  ?militaryConflict <http://dbpedia.org/ontology/militaryForce> ?force .

  ?battle <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Battle> ;
          <http://dbpedia.org/property/name> <http://dbpedia.org/resource/Battle_of_Borodino> .
  
  ?award <http://dbpedia.org/ontology/awardee> ?commander .
  ?award <http://dbpedia.org/ontology/relatedToMilitaryForce> ?battle .
}
```",5,6,6,3,2,3,2,20,0,0,44,0,0.0,0
485,28,test,"Give me the entity in the birth place, that is a region, of Joseph Whitaker (naturalist) and birth place of the awardee, that is a writer and a poet, of Eric Gregory Award and entity in the region, that is a country, of Western European Time.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Joseph_Whitaker_(naturalist)> <http://dbpedia.org/ontology/birthPlace> ?v5 . ?v1 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Western_European_Time> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>. ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Eric_Gregory_Award> . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Poet>. ?result <http://dbpedia.org/ontology/country> ?v1 . },"```sparql
# Step 1: Find Joseph Whitaker's birth place region
SELECT ?birthPlaceRegion WHERE {
    <http://dbpedia.org/resource/Joseph_Whitaker_(naturalist)> <http://www.w3.org/2000/01/rdf-schema#seeAlso> ?birthPlace .
    ?birthPlace <http://dbpedia.org/ontology/location> ?birthPlaceRegion .
}

# Step 2: Find entities in Joseph Whitaker's birth place region
SELECT DISTINCT ?entity WHERE {
    ?entity <http://www.w3.org/2000/01/rdf-schema#seeAlso> ?birthPlaceRegion .
}

# Step 3: Find the awardee of Eric Gregory Award who is a writer and poet
SELECT ?awardeeBirthPlace WHERE {
    ?awardee <http://dbpedia.org/ontology/award> <http://dbpedia.org/resource/Eric_Gregory_Award> ;
             <http://purl.org/dc/terms/subject> <http://dbpedia.org/resource/Category:English_poets> .
    ?awardee <http://www.w3.org/2000/01/rdf-schema#seeAlso> ?awardeeBirthPlace .
}

# Step 4: Find entities in the awardee's birth place
SELECT DISTINCT ?entity WHERE {
    ?entity <http://www.w3.org/2000/01/rdf-schema#seeAlso> ?awardeeBirthPlace .
}

# Step 5: Identify the country for Western European Time (WET)
SELECT ?country WHERE {
    <http://dbpedia.org/resource/Western_European_Time> <http://dbpedia.org/ontology/country> ?country .
}

# Step 6: Find entities in that country
SELECT DISTINCT ?entity WHERE {
    ?entity <http://www.w3.org/2000/01/rdf-schema#seeAlso> ?country .
}
```",6,10,7,2,3,2,3,28,0,0,1,0,0.0,0
92,53,test,"Give me the band member of the reference, that is an artist, to the name of Nevermore (2006 film) and associated musical artist of Jim Sheppard and band of the person born as Joseph Michael Furney.","SELECT ?result WHERE { <http://dbpedia.org/resource/Nevermore_(2006_film)> <http://xmlns.com/foaf/0.1/name> ?v3 . <http://dbpedia.org/resource/Jim_Sheppard> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://xmlns.com/foaf/0.1/name> ?v3 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?result <http://dbpedia.org/ontology/bandMember> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://dbpedia.org/property/birthName> ""Joseph Michael Furney""@en . }","```sparql
# Step 1: Identify the reference (artist) associated with ""Nevermore"" (2006 film)
SELECT ?artist WHERE {
    ?film <http://dbpedia.org/ontology/reference> ?artist .
    ?film <http://www.w3.org/2000/01/rdf-schema#label> ""Nevermore""@en .
    FILTER(STRSTARTS(STR(?film), STR(<http://dbpedia.org/resource/Nevermore_(2006_film)>)))
}

# Step 2: Find the associated musical artist of Jim Sheppard
SELECT ?artist WHERE {
    <http://dbpedia.org/resource/Jim_Sheppard_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?artist .
}

# Step 3: Determine the band of Joseph Michael Furney
SELECT ?band WHERE {
    <http://dbpedia.org/resource/Joe_Lynch_(singer)> <http://dbpedia.org/ontology/band> ?band .
    FILTER(STRSTARTS(STR(?band), STR(<http://dbpedia.org/resource/>)))
}

# Step 4: Find a common band member among these entities
SELECT DISTINCT ?member WHERE {
    # Assuming we have found the artists and bands from previous steps, replace ?artist1, ?artist2, ?band with actual URIs
    OPTIONAL { ?artist1 <http://dbpedia.org/ontology/member> ?member . }
    OPTIONAL { ?artist2 <http://dbpedia.org/ontology/member> ?member . }
    OPTIONAL { ?band <http://dbpedia.org/ontology/member> ?member . }
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
626,20,test,"Give me the commander in the force, that is a military conflict, of the commander in Battle of Paris (1814) and awardee of the award of the military force of Battle of Borodino.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/awards> ?v5 . ?v2 <http://dbpedia.org/ontology/commander> ?v1 . <http://dbpedia.org/resource/Battle_of_Paris_(1814)> <http://dbpedia.org/ontology/commander> ?v1 . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/property/awards> ?v5 . ?v4 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Borodino> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
SELECT ?commander WHERE {
  # Step 1: Find the commander in the Battle of Paris (1814)
  ?battleParis a dbo:MilitaryConflict ;
               rdfs:label ""Battle of Paris (1814)""@en .
  
  ?commanderParis dbo:commanderOf ?battleParis .

  # Step 2: Identify the military force commanded by this individual
  ?force1 dbo:commandedBy ?commanderParis .

  # Step 3: Find a commander involved in another military conflict associated with this force
  ?conflict1 a dbo:MilitaryConflict ;
             dbo:participatingMilitaryForce ?force1 .
  
  ?commanderInConflict1 dbo:commanderOf ?conflict1 .

  # Step 4: Identify the awardee related to the military force from the Battle of Borodino
  ?battleBorodino a dbo:MilitaryConflict ;
                  rdfs:label ""Battle of Borodino""@en .
  
  ?force2 dbo:participatingMilitaryForce ?battleBorodino .

  ?awardee dbo:awardReceivedBy ?force2 .

  # Step 5: Find the commander linked through these connections
  FILTER(?commanderInConflict1 = ?awardee)
}
```",6,7,7,3,2,3,2,20,0,0,62,0,0.0,0
767,48,test,"Give me the reference to the alter ego of Black Hood and entity in the administration, that is a settlement, of the writer of Where It's At (Dustin Lynch album).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/state> ?v2 . <http://dbpedia.org/resource/Where_It's_At_(Dustin_Lynch_album)> <http://dbpedia.org/property/writer> ?v3 . ?v2 <http://dbpedia.org/property/leaderParty> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Black_Hood> <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . },"```sparql
SELECT ?alterEgoReference ?settlementEntity WHERE {
  # Find the writer of ""Where It's At"" by Dustin Lynch
  ?album dct:creator ?writer .
  ?album foaf:name ""Where It's At"" .
  ?album dbo:artist <http://dbpedia.org/resource/Dustin_Lynch> .

  # Find the settlement where this writer is in administration
  ?settlement dbo:administrator ?writer .
  ?settlement a dbo:Settlement .

  # Determine the alter ego of Black Hood
  ?blackHood foaf:name ""Black Hood"" .
  ?blackHood dbo:alterEgo ?alterEgo .
  
  # Get references for both entities
  BIND(<http://dbpedia.org/resource/Black_Hood> AS ?alterEgoReference)
  BIND(?settlement AS ?settlementEntity)
}
```",5,6,6,3,2,3,3,71,0,0,8,0,0.0,0
54,56,test,"Give me the predecessor of the child, that is an office holder and a royalty, of the reference to Thihapate of Mohnyin and parent of Thado Minsaw of Prome and child of the father of Soe Min Wimala Dewi.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Soe_Min_Wimala_Dewi> <http://dbpedia.org/property/father> ?v2 . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Thihapate of Mohnyin""@en . ?v1 <http://dbpedia.org/property/father> ?v0 . }","```sparql
SELECT ?predecessor WHERE {
  ?person a dbo:OfficeHolder ;
          a dbo:Royalty ;
          dbo:childOf <http://dbpedia.org/resource/Thihapate_of_Mohnyin> ;
          dbo:parentOf <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> ;
          dbo:childOf ?father .
  ?father rdfs:label ""Soe Min Wimala Dewi""@en .

  ?person dbo:predecessor ?predecessor .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
747,70,test,"Give me the band of the person born as the persona of Shèna and person born on the birth date of Pavlo Khudzik and band of the writer of the work, that is a song, of Amba Shepherd.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Amba_Shepherd> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. <http://dbpedia.org/resource/Pavlo_Khudzik> <http://dbpedia.org/ontology/birthDate> ?v4 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Shèna> <http://xmlns.com/foaf/0.1/givenName> ?v1 . ?v7 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/writer> ?v7 . ?result <http://dbpedia.org/ontology/birthDate> ?v4 . },"```sparql
# Part 1: Band of the persona Shèna
SELECT ?band WHERE {
    ?person rdfs:label ""Shèna""@en .
    ?person dbo:band ?band .
}

UNION

# Part 2: Band of person born on Pavlo Khudzik's birthdate
SELECT ?band WHERE {
    ?khudzik dbo:birthDate ?birthdate .
    ?khudzik rdfs:label ""Pavlo Khudzik""@en .

    ?person dbo:birthDate ?birthdate .
    ?person dbo:band ?band .
}

UNION

# Part 3: Band of the writer of the song Amba Shepherd
SELECT ?band WHERE {
    ?song dbo:title ""Amba Shepherd""@en ;
          a dbo:Songs .
    
    ?song dbo:lyricist ?writer .

    ?writer dbo:band ?band .
}
```",8,9,9,3,3,3,3,71,0,0,1,0,0.0,0
801,57,test,"Give me the producer of the work, that is a musical work and a song and a work, of the professional, that is a musical artist, in Rapper and associated musical artist of the writer, that is a musical artist and an artist, of 40 Dayz & 40 Nightz and professional in .","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/property/occupation> """"@en . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/40_Dayz_&_40_Nightz> <http://dbpedia.org/property/writer> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v5 <http://dbpedia.org/ontology/producer> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v0 <http://dbpedia.org/property/occupation> ""Rapper""@en . ?v5 <http://dbpedia.org/property/writer> ?v0 . }","```sparql
SELECT ?producer WHERE {
  # Step 1: Identify the writer of ""40 Dayz & 40 Nightz""
  ?writer rdf:type dbo:Musician ;
          dbo:work ?album .
  
  ?album rdfs:label ""40 Dayz & 40 Nightz""@en .

  # Step 2: Find associated musical artists in Rapper
  ?writer dbo:associatedMusicalArtist ?rapper ;
          dbo:genre dbc:Rappers .

  # Step 3: Determine the professional (musical artist) among these associated artists
  ?rapper rdf:type dbo:Musician .

  # Step 4: Locate the work that is a musical work, song, and work by this professional
  ?work dbo:creator ?rapper ;
        rdf:type dbo:Songs ;
        dbo:MusicalWork .

  # Step 5: Find the producer of this identified work
  ?work dbo:producer ?producer .
}
```",6,12,7,3,3,3,3,71,0,0,8,0,0.0,0
528,47,test,Give me the war of the commander in the work of --01-09 and war of the military force of Battle of Pisagua.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/commander> ?v4 . ?v2 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Pisagua> . ?v0 <http://dbpedia.org/property/author> ""--01-09""^^<http://www.w3.org/2001/XMLSchema#gMonthDay> . ?v4 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/ontology/battle> ?result . }","```sparql
SELECT ?result WHERE {
  ?battle <http://dbpedia.org/ontology/militaryForce> ?militaryForce .
  ?militaryForce <http://dbpedia.org/ontology/battle> ?result .
  FILTER(?battle = <http://dbpedia.org/resource/Battle_of_Pisagua>)
}
```",5,5,6,3,2,3,3,71,0,0,8,0,0.0,0
617,59,test,"Give me the spouse of the child of the successor, that is a royalty, of Antiochus (son of Antiochus III the Great) and child of the child, that is a royalty, of the successor, that is a royalty, of Antiochus II Theos.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> ?v3 . ?v0 <http://dbpedia.org/ontology/child> ?v5 . ?result <http://dbpedia.org/property/father> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Antiochus_II_Theos> <http://dbpedia.org/ontology/successor> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/successor> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
SELECT ?spouse WHERE {
    # Step 1: Find successor of Antiochus II Theos who is royalty
    ?antiochus2 dbo:successor ?successor1 .
    FILTER (strstarts(str(?antiochus2), ""Antiochus_II_Theos"") && 
            a ?successor1 <http://dbpedia.org/ontology/Royalty>)

    # Step 2: Find child of this successor who is royalty
    ?successor1 dbo:child ?royalChild .
    FILTER (a ?royalChild <http://dbpedia.org/ontology/Royalty>)
    
    # Step 3: Find successor of Antiochus (son of Antiochus III the Great) who is royalty
    ?antiochus3 dbo:successor ?successor2 .
    FILTER (strstarts(str(?antiochus3), ""Antiochus_(son_of_Antiochus_III_the_Great)"") && 
            a ?successor2 <http://dbpedia.org/ontology/Royalty>)
    
    # Step 4: Find child of this successor
    ?successor2 dbo:child ?child1 .
    
    # Step 5: Ensure this child is also a child of the royalChild from step 2
    ?royalChild dbo:child ?child1 .

    # Step 6: Get spouse of this child
    ?child1 dbo:spouse ?spouse .
}
```",6,9,7,3,2,3,3,71,0,0,4,0,0.0,0
659,54,test,"Give me the military force of Napoleonic Wars and commander in the force of Arthur Wellesley, 1st Duke of Wellington and commander in the war, that is an event and a military conflict, of the figure known, that is a military unit and an organisation, as 'Polish Horse'.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v5 <http://dbpedia.org/ontology/commander> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://dbpedia.org/ontology/battle> ?v5 . ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Arthur_Wellesley,_1st_Duke_of_Wellington> . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/property/nickname> ""'Polish Horse'""@en . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Napoleonic_Wars> . }","```sparql
SELECT ?militaryForce WHERE {
  # Step 1: Identify the military force involved in the Napoleonic Wars
  ?napoleonicWar <http://dbpedia.org/ontology/conflict> ?militaryConflict .
  ?militaryConflict <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
  ?militaryConflict <http://dbpedia.org/ontology/event> ?event .
  ?event <http://www.w3.org/2000/01/rdf-schema#label> ""Napoleonic Wars""@en .

  # Step 2: Find the commander of Arthur Wellesley, 1st Duke of Wellington's forces
  ?welshCommander <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Arthur_Wellesley,_1st_Duke_of_Wellington> .
  
  # Step 3: Determine the war that is both an event and a military conflict involving the commander found in step 2
  ?welshCommander <http://dbpedia.org/ontology/battle> ?warEvent .
  ?warEvent <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
  ?warEvent <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event> .

  # Step 4: Identify the figure known as 'Polish Horse', which is both a military unit and an organization
  ?polishHorse <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit> .
  ?polishHorse <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation> .
  ?polishHorse <http://dbpedia.org/property/knownAs> ""Polish Horse""@en .

  # Step 5: Find the military force associated with all these connections
  ?militaryForce <http://dbpedia.org/ontology/commander> ?welshCommander .
  ?militaryForce <http://dbpedia.org/ontology/battle> ?warEvent .
  ?militaryForce <http://dbpedia.org/ontology/unit> ?polishHorse .
}
```",6,10,7,3,3,3,3,71,0,0,13,0,0.0,0
767,53,test,"Give me the entity in the administration, that is a settlement, of the writer of Where It's At (Dustin Lynch album) and alma mater of Carl L. Nippert and reference to the alter ego of Black Hood.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://dbpedia.org/property/leaderParty> ?v3 . <http://dbpedia.org/resource/Black_Hood> <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . <http://dbpedia.org/resource/Carl_L._Nippert> <http://dbpedia.org/ontology/almaMater> ?result . <http://dbpedia.org/resource/Where_It's_At_(Dustin_Lynch_album)> <http://dbpedia.org/property/writer> ?v3 . ?result <http://dbpedia.org/ontology/state> ?v2 . },"```sparql
# Find the writer of ""Where It's At"" (Dustin Lynch album)
SELECT ?writer WHERE {
  ?album dct:subject <http://dbpedia.org/resource/Where_It%27s_At_(Dustin_Lynch_album)> .
  ?album dbo:lyricsWriter ?writer .
}

# Find the alma mater of Carl L. Nippert
SELECT ?almaMater WHERE {
  <http://dbpedia.org/resource/Carl_L._Nippert> dbo:almaMater ?almaMater .
}

# Find the alter ego of Black Hood
SELECT ?alterEgo WHERE {
  ?character rdfs:label ""Black Hood""@en ;
             foaf:alternateName ?alterEgo .
}

# Assuming we have identified the entities, find their common administration and a settlement within it
SELECT DISTINCT ?settlement WHERE {
  # Replace with actual URIs once identified
  VALUES (?entity1 ?entity2 ?entity3) { (<writerURI> <almaMaterURI> <alterEgoURI>) }

  ?admin dbo:administrativeUnit ?entity1 .
  ?admin dbo:administrativeUnit ?entity2 .
  ?admin dbo:administrativeUnit ?entity3 .

  ?settlement dbo:partOf ?admin ;
              a <http://dbpedia.org/ontology/Settlement> .
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
435,24,test,Give me the work of the author of Iceland and region of the time zone in Bombali Shebora Chiefdom.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/author> ?v1 . <http://dbpedia.org/resource/Iceland> <http://dbpedia.org/property/author> ?v1 . <http://dbpedia.org/resource/Bombali_Shebora_Chiefdom> <http://dbpedia.org/ontology/timeZone> ?v2 . ?result <http://dbpedia.org/ontology/timeZone> ?v2 . },"```sparql
# Step 1: Find the author of Iceland and their works
SELECT ?author ?work WHERE {
    <http://dbpedia.org/resource/Iceland> <http://purl.org/dc/terms/creator> ?author .
    OPTIONAL { ?author <http://www.w3.org/2002/07/owl#sameAs> ?authorSameAs . }
    OPTIONAL { ?author <http://dbpedia.org/ontology/publication> ?work . }
}

# Step 2: Find the time zone of Bombali Shebora Chiefdom and its region
SELECT ?timeZone ?region WHERE {
    <http://dbpedia.org/resource/Bombali_Shebora_Chow.html> <http://www.w3.org/2006/timezone#timezone> ?timeZone .
    OPTIONAL { ?timeZone <http://dbpedia.org/ontology/region> ?region . }
}
```",4,4,5,2,2,2,3,28,0,0,1,0,0.0,0
659,64,test,"Give me the commander in the force of the native, that is an office holder, of Kingdom of Ireland and military force of the force, that is a societal event and an event and a military conflict, of the reference to Rutger Jan Schimmelpenninck and commander in Battle of Leipzig.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/commander> ?v3 . <http://dbpedia.org/resource/Battle_of_Leipzig> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Kingdom_of_Ireland> . ?v0 <http://xmlns.com/foaf/0.1/name> ""Rutger Jan Schimmelpenninck""@en . ?v1 <http://dbpedia.org/ontology/commander> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. }","```sparql
SELECT ?commander WHERE {
  ?officeHolder a dbo:OfficeHolder ;
                dbo:nationality dbr:Kingdom_of_Ireland .
  
  ?militaryForce dbo:commandedBy ?officeHolder .

  ?event a dbo:MilitaryConflict, dbo:SocietalEvent ;
         dbo:partOf ?militaryForce .

  ?schimmelpenninck dbo:referenceTo ?battleCommander .
  ?battleCommander dbo:commanderIn dbr:Battle_of_Leipzig .

  ?militaryForce dbo:commandedBy ?commander .
}
```",7,11,8,3,3,3,3,71,0,0,6,0,0.0,0
959,64,test,"Give me the native of Japan and member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of the person born in 1958 and manager of the team of the manager, that is a sports manager, of 1998 Kashima Antlers season.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/manager> ?v5 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v4 <http://dbpedia.org/ontology/almaMater> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/ontology/manager> ?result . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?result <http://dbpedia.org/ontology/team> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Japan> . <http://dbpedia.org/resource/1998_Kashima_Antlers_season> <http://dbpedia.org/ontology/manager> ?v5 . ?v4 <http://dbpedia.org/ontology/birthYear> ""1958""^^<http://www.w3.org/2001/XMLSchema#gYear> . }","```sparql
SELECT ?nativePerson WHERE {
  # Step 1: Manager of 1998 Kashima Antlers Season
  ?managerSeason dbpedia-owl:team <http://dbpedia.org/resource/1998_Kashima_Antlers_season> ;
                 dbpedia-owl:position ""Manager""@en .
  
  # Step 2: Team Managed by This Manager
  ?team dbpedia-owl:manager ?managerSeason .

  # Step 3: Manager of That Team (Sports Manager)
  ?currentManager dbpedia-owl:team ?team ;
                  dbpedia-owl:occupation ""Sports manager""@en .

  # Step 4: Person Born in 1958
  ?person dbpedia-owl:birthYear ""1958""^^xsd:gYear ;
          dbpedia-owl:manager ?currentManager .

  # Step 5: Alma Mater (Japanese, Organization, University, Educational Institution)
  ?almaMater dbpedia-owl:nationality <http://dbpedia.org/resource/Japan> ;
             a <http://dbpedia.org/ontology/Organization>, <http://dbpedia.org/ontology/University>, <http://dbpedia.org/ontology/EducationalOrganization> .

  # Linking the person to their alma mater
  ?person dbpedia-owl:almaMater ?almaMater .

  # Step 6: Native of Japan and Member of Alma Mater
  ?nativePerson dbpedia-owl:nationality <http://dbpedia.org/resource/Japan> ;
                dbpedia-owl:memberOf ?almaMater .
}
```",7,12,8,3,3,3,3,71,0,0,3,0,0.0,0
184,66,test,Give me the parent of the child of the parent of Archduchess Margaret of Austria (born 1925) and parent of the native of Budapest and child of the child of Archduke Joseph Karl of Austria.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v3 . ?result <http://dbpedia.org/ontology/child> ?v2 . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Margaret_of_Austria_(born_1925)> . ?v2 <http://dbpedia.org/property/father> ?v1 . ?v6 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Karl_of_Austria> . ?result <http://dbpedia.org/property/father> ?v6 . ?v3 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Budapest> . },"```sparql
# Step 1: Find Archduchess Margaret of Austria (born 1925) and her parent
SELECT ?margaret ?parent1 WHERE {
    ?margaret a dbo:Archduchess ;
             foaf:birthday ""1925-01-01""^^xsd:date ;
             dbo:parent ?parent1 .
}

# Step 2: Find the child of that parent
SELECT ?child WHERE {
    VALUES (?parent1) { <URI_of_parent_from_step_1> }
    ?child dbo:parent ?parent1 .
}

# Step 3: Identify the native of Budapest who is a child of the child from step 2
SELECT ?native WHERE {
    VALUES (?child) { <URI_of_child_from_step_2> }
    ?native dbo:nativePlace dbr:Budapest ;
            dbo:parent ?child .
}

# Step 4: Determine the parent of this native of Budapest
SELECT ?parent2 WHERE {
    VALUES (?native) { <URI_of_native_from_step_3> }
    ?native dbo:parent ?parent2 .
}

# Step 5: Identify the parent of the person found in step 4
SELECT ?finalParent WHERE {
    VALUES (?parent2) { <URI_of_parent_from_step_4> }
    ?parent2 dbo:parent ?finalParent .
}
```

Note: Replace `<URI_of_parent_from_step_1>`, `<URI_of_child_from_step_2>`, `<URI_of_native_from_step_3>`, and `<URI_of_parent_from_step_4>` with the actual URIs obtained from each query step.",7,7,8,3,3,3,3,71,0,0,1,0,0.0,0
92,40,test,"Give me the band member of the reference, that is an artist, to the name of Nevermore (2006 film) and associated musical artist of Jim Sheppard and band of Joseph Michael.",SELECT ?result WHERE { ?v1 <http://xmlns.com/foaf/0.1/name> ?v2 . ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Joseph_Michael> . <http://dbpedia.org/resource/Nevermore_(2006_film)> <http://xmlns.com/foaf/0.1/name> ?v2 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . <http://dbpedia.org/resource/Jim_Sheppard> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"```sparql
# Step 1: Find the reference (artist) associated with ""Nevermore"" (2006 film)
SELECT ?artist WHERE {
    <http://dbpedia.org/resource/Nevermore_(2006_film)> <http://dbpedia.org/ontology/reference> ?artist .
}

# Step 2: Identify the musical artist associated with Jim Sheppard
SELECT ?musicalArtist WHERE {
    <http://dbpedia.org/resource/Jim_Sheppard_(musician)> <http://dbpedia.org/property/associatedMusicalArtist> ?musicalArtist .
}

# Step 3: Determine the band of Joseph Michael
SELECT ?band WHERE {
    <http://dbpedia.org/resource/Joseph_Michael_(musician)> <http://dbpedia.org/ontology/band> ?band .
}

# Step 4: Find a common band member among these entities
SELECT DISTINCT ?member WHERE {
    # Assuming the results from steps 1, 2, and 3 are stored in variables or directly queried
    VALUES (?artist ?musicalArtist ?band) { 
        ( :Artist1 :MusicalArtist1 :Band1 ) # Replace with actual URIs obtained from previous queries
    }
    
    OPTIONAL {
        ?member <http://dbpedia.org/ontology/member> ?artist .
    }
    OPTIONAL {
        ?member <http://dbpedia.org/ontology/member> ?musicalArtist .
    }
    OPTIONAL {
        ?member <http://dbpedia.org/ontology/member> ?band .
    }
    
    FILTER (?member != 0) # Ensure that the member is not null
}
```

Note: The actual URIs for `?artist`, `?musicalArtist`, and `?band` need to be determined from the results of steps 1, 2, and 3. This query assumes those URIs are known or can be substituted after running initial queries.",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
959,66,test,"Give me the manager of the team of the manager, that is a sports manager, of 1998 Kashima Antlers season and member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of Eiji Ōtsuka and native of the residence, that is a country, of Yōichi Masuzoe.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v6 . ?result <http://dbpedia.org/ontology/team> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. <http://dbpedia.org/resource/Yōichi_Masuzoe> <http://dbpedia.org/property/residence> ?v6 . <http://dbpedia.org/resource/1998_Kashima_Antlers_season> <http://dbpedia.org/ontology/manager> ?v5 . ?v0 <http://dbpedia.org/ontology/manager> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Eiji_Ōtsuka> <http://dbpedia.org/ontology/almaMater> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/ontology/manager> ?result . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. },"```sparql
SELECT ?manager
WHERE {
    # Step 1: Find the manager of the 1998 Kashima Antlers season who is a sports manager.
    ?season dbpedia-owl:team <http://dbpedia.org/resource/Kashima_Antlers>;
            dbpedia-owl:manager ?manager1 .
    FILTER EXISTS { ?manager1 rdf:type <http://dbpedia.org/ontology/SportsManager> }
    
    # Step 2: Find the team managed by this person.
    ?team dbpedia-owl:manager ?manager1 .

    # Step 3: Determine the alma mater of Eiji Ōtsuka that is Japanese and classified as an organization, university, and educational institution.
    <http://dbpedia.org/resource/Eiji_Ōtsuka> dbpedia-owl:almaMater ?almaMater .
    FILTER EXISTS { ?almaMater rdf:type <http://dbpedia.org/ontology/Organization> }
    FILTER EXISTS { ?almaMater rdf:type <http://dbpedia.org/ontology/University> }
    FILTER EXISTS { ?almaMater rdf:type <http://dbpedia.org/ontology/EducationalOrganization> }
    FILTER EXISTS { ?almaMater dbpedia-owl:country <http://dbpedia.org/resource/Japan> }

    # Step 4: Identify members of this alma mater.
    ?member dbpedia-owl:almaMater ?almaMater .

    # Step 5: Find the residence country of Yōichi Masuzoe.
    <http://dbpedia.org/resource/Yōichi_Masuzoe> dbpedia-owl:nativePlace ?residence .
    ?residence rdf:type <http://dbpedia.org/ontology/Country> .

    # Step 6: Find the manager of the team from step 2 who resides in the country identified in step 5.
    ?manager dbpedia-owl:team ?team;
             dbpedia-owl:nativePlace ?residence .
}
```",7,13,8,3,3,3,3,71,0,0,2,0,0.0,0
427,27,test,"Give me the party of the person born, that is an office holder and a politician, as the birth name of Romano Prodi.",SELECT ?result WHERE { <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/ontology/party> ?result . ?v2 <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
SELECT ?person ?party WHERE {
  ?person <http://dbpedia.org/ontology/birthName> ""Romano Prodi"" .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder> .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .
  ?person <http://dbpedia.org/property/party> ?party .
}
```",3,5,4,3,1,3,3,71,0,0,7,0,0.0,0
492,57,test,"Give me the person decedent at the capital, that is a settlement, of Algeria and person decedent at French Algeria and commander in the war, that is a military conflict and an event, of the commander in Battle of Verdun.",SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://dbpedia.org/ontology/battle> ?v5 . ?v5 <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/French_Algeria> . ?result <http://dbpedia.org/ontology/deathPlace> ?v3 . <http://dbpedia.org/resource/Algeria> <http://dbpedia.org/ontology/capital> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Battle_of_Verdun> <http://dbpedia.org/ontology/commander> ?v0 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
# Step 1: Find the capital of Algeria that is a settlement
SELECT ?algeriaCapital WHERE {
    <http://dbpedia.org/resource/Algeria> <http://www.w3.org/2000/01/rdf-schema#seeAlso> ?capitalResource .
    ?capitalResource <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement> .
    BIND(IRI(CONCAT(""http://dbpedia.org/resource/"", STR(?capitalResource))) AS ?algeriaCapital)
}

# Step 2: Find the person decedent at this capital
SELECT DISTINCT ?person WHERE {
    ?person <http://dbpedia.org/property/deceased> ?death .
    ?death <http://www.w3.org/2000/01/rdf-schema#location> ?algeriaCapital .
}

# Step 3: Find the person decedent at French Algeria
SELECT DISTINCT ?person WHERE {
    ?person <http://dbpedia.org/property/deceased> ?death .
    ?death <http://www.w3.org/2000/01/rdf-schema#location> <http://dbpedia.org/resource/French_Algeria> .
}

# Step 4: Find the war that is a military conflict and an event involving the commander in Battle of Verdun
SELECT DISTINCT ?war WHERE {
    ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
    ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event> .
    <http://dbpedia.org/resource/Battle_of_Verdun> <http://dbpedia.org/ontology/commander> ?commander .
    ?war <http://dbpedia.org/ontology/commander> ?commander .
}

# Step 5: Ensure the person is also a commander in the identified war
SELECT DISTINCT ?person WHERE {
    VALUES ?algeriaCapital { ?algeriaCapital }
    ?person <http://dbpedia.org/property/deceased> ?death1 .
    ?death1 <http://www.w3.org/2000/01/rdf-schema#location> ?algeriaCapital .
    ?person <http://dbpedia.org/property/deceased> ?death2 .
    ?death2 <http://www.w3.org/2000/01/rdf-schema#location> <http://dbpedia.org/resource/French_Algeria> .
    ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
    ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event> .
    <http://dbpedia.org/resource/Battle_of_Verdun> <http://dbpedia.org/ontology/commander> ?commander .
    ?war <http://dbpedia.org/ontology/commander> ?commander .
    FILTER(?person = ?commander)
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
617,17,test,"Give me the parent of the father, that is a royalty, of the reference, that is a royalty, to Richeza of Poland and child of Doubravka of Bohemia.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> ?v3 . ?result <http://dbpedia.org/ontology/child> ?v3 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Richeza of Poland""@en . <http://dbpedia.org/resource/Doubravka_of_Bohemia> <http://dbpedia.org/ontology/child> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
SELECT ?parent WHERE {
  # Step 1: Identify Richeza of Poland
  ?richeza a dbo:Person ;
           foaf:name ""Richeza of Poland""@en .

  # Step 2: Find her father (a royalty)
  ?father dbo:child ?richeza ;
          a dbo:Royalty .

  # Step 3: Determine the reference (another royalty) related to Richeza's father
  ?reference dbo:parent ?father ;
             a dbo:Royalty .

  # Step 4: Identify the child of Doubravka of Bohemia who is also a royalty and matches the reference found in step 3
  ?doubravkaChild dbo:mother <http://dbpedia.org/resource/Doubravka_of_Bohemia> ;
                  a dbo:Royalty ;
                  = ?reference .

  # Step 5: Find the parent of this individual
  ?parent dbo:child ?doubravkaChild .
}
```",4,6,5,3,2,3,2,20,0,0,1,0,0.0,0
54,63,test,"Give me the parent of the child of Narapati I of Ava and child of the father of the child of Thinkhaya of Pagan and predecessor of the child, that is an office holder and a royalty, of Thihapate of Mohnyin.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/child> ?result . ?v4 <http://dbpedia.org/property/father> ?v3 . ?result <http://dbpedia.org/ontology/successor> ?v2 . ?v6 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Narapati_I_of_Ava> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?v4 . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Thihapate_of_Mohnyin> . ?v6 <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
# Step 1: Find the child of Narapati I of Ava
SELECT ?narapatichild WHERE {
    <http://dbpedia.org/resource/Narapati_I_of_Ava> <http://dbpedia.org/ontology/child> ?narapatichild .
}

# Step 2: Find the child of Thinkhaya of Pagan and its predecessor
SELECT ?thinkhayachild, ?predecessor WHERE {
    <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?thinkhayachild .
    ?thinkhayaparent <http://dbpedia.org/ontology/child> ?thinkhayachild .
    ?thinkhayaparent <http://dbpedia.org/ontology/predecessor> ?predecessor .
}

# Step 3: Find the child of Thihapate of Mohnyin who is an office holder and royalty
SELECT ?thihapatichild WHERE {
    <http://dbpedia.org/resource/Thihapate_of_Mohnyin> <http://dbpedia.org/ontology/child> ?thihapatichild .
    ?thihapatichild <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder> .
    ?thihapatichild <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
}

# Step 4: Combine the relationships to find the desired parent
SELECT ?parent WHERE {
    ?narapatichild <http://dbpedia.org/property/child> ?target .
    ?thinkhayaparent <http://dbpedia.org/ontology/child> ?target .
    ?predecessor <http://dbpedia.org/ontology/child> ?target .
    ?thihapatichild <http://dbpedia.org/ontology/parent> ?target .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
747,53,test,"Give me the band of Amba Shepherd and band of the person born as Tracey Elizabeth McSween and person born on the birth date of the person decedent, that is an athlete and a soccer player, at Zolotonosha.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v3 <http://dbpedia.org/ontology/birthDate> ?v2 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/birthDate> ?v2 . ?v3 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Zolotonosha> . ?v1 <http://dbpedia.org/property/birthName> ""Tracey Elizabeth McSween""@en . <http://dbpedia.org/resource/Amba_Shepherd> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
SELECT ?bandOfAmbaShepherd ?bandOfTraceyElizabethMcSween ?bandOfAthlete
WHERE {
  # Find the band of Amba Shepherd
  <http://dbpedia.org/resource/Amba_Shepherd> <http://dbpedia.org/ontology/member> ?bandOfAmbaShepherd .

  # Find the person born as Tracey Elizabeth McSween and their birth date
  ?tracey a dbo:Person ;
          foaf:name ""Tracey Elizabeth McSween"" ;
          dbo:birthDate ?birthDate .

  # Find the band of this person (assuming they might have changed names)
  ?tracey <http://dbpedia.org/ontology/member> ?bandOfTraceyElizabethMcSween .

  # Find the decedent who died on this birth date
  ?decedent dbo:deathDate ?birthDate ;
            a dbo:Person .

  # Identify the athlete and soccer player from Zolotonosha
  ?athlete a dbo:Athlete, dbo:SoccerPlayer ;
           dbo:placeOfBirth <http://dbpedia.org/resource/Zolotonosha> .

  # Find the band of this athlete and soccer player
  ?athlete <http://dbpedia.org/ontology/member> ?bandOfAthlete .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
16,41,test,Give me the professional in the profession of Satomi Ishihara and spouse of the person born as Ted Martin McGinley and person born as Georgeanne Marie Rice.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v4 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v2 <http://dbpedia.org/property/birthName> ""Ted Martin McGinley""@en . ?result <http://dbpedia.org/property/birthName> ""Georgeanne Marie Rice""@en . <http://dbpedia.org/resource/Satomi_Ishihara> <http://dbpedia.org/property/occupation> ?v4 . }","```sparql
SELECT ?professional WHERE {
  # Get the profession of Satomi Ishihara
  <http://dbpedia.org/resource/Satomi_Ishihara> <http://purl.org/dc/terms/subject> ?profession .

  # Find individuals with the same profession as Satomi Ishihara
  ?individual <http://purl.org/dc/terms/subject> ?profession .
  
  # Check if this individual is married to Ted Martin McGinley
  ?individual <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Ted_McGinley> .

  # Check if the same individual is also married to Georgeanne Marie Rice
  ?individual <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Georgeanne_Rice> .
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
404,40,test,"Give me the spouse of the person born, that is a royalty, as the birth name of Princess Victoria Louise of Prussia and parent of Prince Ernest Augustus of Hanover (born 1914) and child of Ernest Augustus, Crown Prince of Hanover.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Prince_Ernest_Augustus_of_Hanover_(born_1914)> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/property/birthName> ?v2 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ernest_Augustus,_Crown_Prince_of_Hanover> . }","```sparql
SELECT ?spouse WHERE {
    ?person <http://dbpedia.org/ontology/birthName> ""Princess Victoria Louise of Prussia"" .
    ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
    ?person <http://dbpedia.org/property/parent> <http://dbpedia.org/resource/Ernest_Augustus,_Crown_Prince_of_Hanover> .
    ?person <http://dbpedia.org/property/child> <http://dbpedia.org/resource/Prince_Ernest_Augustus_of_Hanover_(born_1914)> .
    ?person <http://xmlns.com/foaf/0.1/spouse> ?spouse .
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
92,55,test,"Give me the associated musical artist of the person born, that is an artist, as Jim Sheppard and band member of the reference, that is an artist, to Nevermore and band of the person born as Joseph Michael Furney.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ""Joseph Michael Furney""@en . ?result <http://dbpedia.org/ontology/bandMember> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v3 <http://xmlns.com/foaf/0.1/name> ""Nevermore""@en . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v5 <http://dbpedia.org/property/birthName> ""Jim Sheppard""@en . ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . }","```sparql
SELECT ?associatedArtist WHERE {
  # Step 1: Find Jim Sheppard who is an artist
  ?jimSheppard a dbo:Artist ;
              foaf:name ""Jim Sheppard"" ;
              dbo:birthName ""Jim Sheppard"" .

  # Step 2: Find the band associated with Jim Sheppard
  ?band1 dbo:member ?jimSheppard .

  # Step 3: Identify Joseph Michael Furney and his association with Nevermore
  ?joeFurney a dbo:Artist ;
             foaf:name ""Joseph Michael Furney"" ;
             dbo:birthName ""Joseph Michael Furney"" .
  
  ?nevermoreBand a dbo:Band ;
                 foaf:name ""Nevermore"" .

  ?joeFurney dbo:band ?nevermoreBand .

  # Step 4: Find the associated musical artist for both bands
  ?associatedArtist dbo:associatedBand ?band1, ?nevermoreBand .
}
```",6,8,7,2,3,3,3,71,0,0,1,0,0.0,0
488,52,test,"Give me the birth place of the commander in the war, that is a military conflict and an event and a societal event, of Saitō Hajime and death place of the father, that is a politician, of Yūki Hideyasu and administration of Emperor Go-Yōzei.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/commander> ?v2 . ?v5 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Yūki_Hideyasu> <http://dbpedia.org/property/father> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Saitō_Hajime> <http://dbpedia.org/ontology/battle> ?v3 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Emperor_Go-Yōzei> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
SELECT ?birthPlace ?deathPlace ?administration WHERE {
  # Part 1: Find the war and its commander's birth place
  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>.
  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>.
  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>.

  # Saitō Hajime's battle
  ?battle <http://dbpedia.org/ontology/battleOf> ?war.
  ?battle <http://dbpedia.org/ontology/commander> ?commander.

  # Birth place of the commander
  ?commander <http://dbpedia.org/property/birthPlace> ?birthPlace.

  # Part 2: Find Yūki Hideyasu's father and his death place
  <http://dbpedia.org/resource/Yūki_Hideyasu> <http://dbpedia.org/ontology/father> ?father.
  ?father <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>.
  ?father <http://dbpedia.org/property/deathPlace> ?deathPlace.

  # Part 3: Find the administration of Emperor Go-Yōzei
  <http://dbpedia.org/resource/Emperor_Go-Yōzei> <http://dbpedia.org/ontology/administration> ?administration.
}
```",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
404,63,test,"Give me the spouse of the person born, that is a royalty, as the birth name of Princess Victoria Louise of Prussia and child of the father of Ernest Augustus, Duke of Brunswick and parent of the child, that is a royalty, of Ernest Augustus, Duke of Brunswick.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v6 . <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/ontology/child> ?v6 . ?v3 <http://dbpedia.org/property/birthName> ?v4 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/property/father> ?v2 . ?v3 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/property/birthName> ?v4 . }","```sparql
SELECT ?spouse WHERE {
  ?person dbp:birthName ""Princess Victoria Louise of Prussia""@en .
  ?person a dbo:Royalty .

  ?father dbp:child ?person ;
          foaf:name ""Ernest Augustus, Duke of Brunswick""@en .

  ?child dbp:parent ?father ;
         a dbo:Royalty .

  ?person dbp:spouse ?spouse .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
404,34,test,"Give me the spouse of the person born, that is a royalty, as the birth name of Princess Victoria Louise of Prussia and child of Ernest Augustus, Crown Prince of Hanover.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/property/birthName> ?v2 . ?v1 <http://dbpedia.org/property/birthName> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ernest_Augustus,_Crown_Prince_of_Hanover> . }","```sparql
SELECT ?spouse WHERE {
  ?person <http://dbpedia.org/ontology/birthName> ""Princess Victoria Louise of Prussia"" .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
  ?person <http://dbpedia.org/property/child> <http://dbpedia.org/resource/Ernest_Augustus,_Crown_Prince_of_Hanover> .
  ?person <http://dbpedia.org/property/spouse> ?spouse .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
959,51,test,"Give me the native of the residence, that is a country, of Yōichi Masuzoe and manager of the team of the manager, that is a sports manager, of 1998 Kashima Antlers season.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/manager> ?v3 . ?v0 <http://dbpedia.org/ontology/manager> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/1998_Kashima_Antlers_season> <http://dbpedia.org/ontology/manager> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. <http://dbpedia.org/resource/Yōichi_Masuzoe> <http://dbpedia.org/property/residence> ?v4 . ?result <http://dbpedia.org/ontology/birthPlace> ?v4 . },"```sparql
SELECT ?native WHERE {
    # Step 1: Find Yōichi Masuzoe's residence country
    <http://dbpedia.org/resource/Y%C5%8Dichi_Masuzoe> <http://dbpedia.org/property/residence> ?residence .
    ?residence <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country> .

    # Step 2: Find the manager of the 1998 Kashima Antlers season
    <http://dbpedia.org/resource/1998_Kashima_Antlers_season> <http://dbpedia.org/property/manager> ?manager .
    
    # Ensure the manager is a sports manager
    ?manager <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager> .

    # Step 3: Find which team this manager currently manages
    ?manager <http://dbpedia.org/property/teamManaged> ?team .
    
    # Step 4: Identify the native of Yōichi Masuzoe's residence country
    ?native <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Native> ;
            <http://dbpedia.org/property/nationality> ?residence .
}
```",5,7,6,3,2,3,3,71,0,0,6,0,0.0,0
617,65,test,"Give me the parent of the child of Antiochus (son of Antiochus III the Great) and child of the child, that is a royalty, of Seleucus II Callinicus and spouse of the child of the successor, that is a royalty, of Antiochus (son of Antiochus III the Great).",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/successor> ?v0 . <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/child> ?v3 . ?result <http://dbpedia.org/property/father> ?v4 . ?v6 <http://dbpedia.org/ontology/spouse> ?result . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seleucus_II_Callinicus> . ?v0 <http://dbpedia.org/ontology/child> ?v6 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> ?v3 . },"```sparql
SELECT ?parent
WHERE {
    # Step 1: Identify Antiochus (son of Antiochus III the Great) and his child
    ?antiochus dbo:childOf <http://dbpedia.org/resource/Antiochus_III_the_Great> .
    ?child dbo:child ?antiochus .

    # Step 2: Find the parent of that child
    ?parent dbo:child ?child .

    # Step 3: Identify Seleucus II Callinicus and his royal child
    ?seleucus dbp:spouse <http://dbpedia.org/resource/Laodice_III> .
    ?royalChild dbo:child ?seleucus .
    ?royalChild a dbo:Royalty .

    # Step 4: Determine the spouse of the child of the successor to Antiochus
    ?successor dbo:childOf ?antiochus .
    ?spouse dbo:spouse ?successorChild .
    ?successorChild dbo:child ?successor .
    ?spouse a dbo:Royalty .

    # Step 5: Ensure the spouse is also the child of the royal child from step 3
    FILTER(?spouse = ?royalChild)
}
```",7,9,8,3,3,3,3,71,0,0,2,0,0.0,0
767,51,test,"Give me the alma mater of the administration of George K. Nash and reference to the alter ego of the persona, that is a fictional character, of Matthew Burland.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/almaMater> ?result . ?v4 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/George_K._Nash> . ?v1 <http://dbpedia.org/property/alterEgo> ""Matthew Burland""@en . ?v1 <http://dbpedia.org/property/alterEgo> ?v2 . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. }","```sparql
SELECT ?almaMater ?alterEgo WHERE {
  # Part 1: Alma Mater of George K. Nash's administration
  <http://dbpedia.org/resource/George_K._Nash> <http://dbpedia.org/ontology/administration> ?administration .
  ?administration <http://dbpedia.org/ontology/almaMater> ?almaMater .

  # Part 2: Alter ego of Matthew Burland's fictional character
  <http://dbpedia.org/resource/Matthew_Burland> <http://dbpedia.org/property/fictionalCharacter> ?fictionalCharacter .
  ?fictionalCharacter <http://www.w3.org/2000/01/rdf-schema#seeAlso> ?alterEgo .
}
```",5,6,6,3,2,3,3,71,0,0,2,0,0.0,0
617,16,test,"Give me the child of the child, that is a royalty, of Boleslaus I, Duke of Bohemia and parent of the father, that is a royalty, of Richeza of Poland, Queen of Hungary.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Boleslaus_I,_Duke_of_Bohemia> . <http://dbpedia.org/resource/Richeza_of_Poland,_Queen_of_Hungary> <http://dbpedia.org/property/father> ?v3 . ?v2 <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/child> ?v3 . }","```sparql
SELECT ?grandchild WHERE {
  # Step 1: Identify Boleslaus I, Duke of Bohemia's child who is royalty.
  ?child a dbo:Royalty ;
         dbo:parent <http://dbpedia.org/resource/Boleslaus_I,_Duke_of_Bohemia> .

  # Step 2: From that child, identify their own child (grandchild of Boleslaus I) who is also royalty.
  ?grandchild a dbo:Royalty ;
             dbo:parent ?child .

  # Step 3: Identify Richeza of Poland, Queen of Hungary's father who is royalty.
  ?richezasFather a dbo:Royalty ;
                  dbo:parent <http://dbpedia.org/resource/Richeza_of_Poland,_Queen_of_Hungary> .

  # Step 4: Find the parent of this father (Richeza's grandfather) who is royalty.
  ?grandfather a dbo:Royalty ;
               dbo:parent ?richezasFather .
}
```",4,6,5,2,2,3,2,20,0,3,1,0.0,0.0,0
16,35,test,Give me the spouse of the person born as Ted Martin McGinley and person born as the birth name of Gigi Rice.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ""Ted Martin McGinley""@en . ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Gigi_Rice> <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
SELECT ?spouse WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/ontology/spouse> ?spouse .
  }
  OPTIONAL { 
    <http://dbpedia.org/resource/Gigi_Rice> <http://dbpedia.org/ontology/birthName> ""Gigi Rice"" ;
      <http://dbpedia.org/ontology/spouse> ?spouse .
  }
}
```",4,4,5,2,2,3,3,71,1,0,0,1.0,1.0,1.0
959,65,test,"Give me the manager of the team of Takashi Sekizuka and member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of Eiji Ōtsuka and native of the residence, that is a country, of the leader, that is a politician, of 2010 Japanese House of Councillors election.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/residence> ?v5 . ?v0 <http://dbpedia.org/ontology/manager> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. <http://dbpedia.org/resource/Eiji_Ōtsuka> <http://dbpedia.org/ontology/almaMater> ?v2 . <http://dbpedia.org/resource/2010_Japanese_House_of_Councillors_election> <http://dbpedia.org/property/leader> ?v1 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/birthPlace> ?v5 . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?v0 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Takashi_Sekizuka> . ?result <http://dbpedia.org/ontology/team> ?v2 . },"```sparql
# Step 1: Find Takashi Sekizuka's team
SELECT ?team WHERE {
    ?person <http://dbpedia.org/property/team> ?team .
    ?person rdfs:label ""Takashi Sekizuka""@en .
}

# Step 2: Find Eiji Ōtsuka's alma mater that is Japanese, an organization, a university, and an educational institution
SELECT ?almaMater WHERE {
    ?person <http://dbpedia.org/ontology/alumniOf> ?almaMater .
    ?person rdfs:label ""Eiji Ōtsuka""@en .
    ?almaMater <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organization> ;
               <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University> ;
               <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalOrganization> .
    ?almaMater <http://dbpedia.org/property/country> <http://dbpedia.org/resource/Japan> .
}

# Step 3: Find the leader of the 2010 Japanese House of Councillors election and their country of residence
SELECT ?leaderCountry WHERE {
    ?election <http://dbpedia.org/ontology/politician> ?leader .
    ?election rdfs:label ""2010 Japanese House of Councillors election""@en .
    ?leader <http://dbpedia.org/property/nationality> ?country .
}

# Step 4: Find the manager who satisfies all conditions
SELECT DISTINCT ?manager WHERE {
    # Manager of Takashi Sekizuka's team
    ?teamManager <http://dbpedia.org/ontology/team> ?team .
    ?person rdfs:label ""Takashi Sekizuka""@en .
    ?person <http://dbpedia.org/property/team> ?team .

    # Alma mater condition
    ?manager <http://dbpedia.org/ontology/alumniOf> ?almaMater .
    ?person2 rdfs:label ""Eiji Ōtsuka""@en .
    ?person2 <http://dbpedia.org/ontology/alumniOf> ?almaMater .

    # Native country condition
    ?manager <http://dbpedia.org/property/nationality> ?leaderCountry .
    
    FILTER(?almaMater = ?almaMater)
}
```",7,13,8,3,3,3,3,71,0,0,2,0,0.0,0
378,50,test,"Give me the claim to fame of the commander in Great Siege of Gibraltar and war of the commander in the reference, that is a military conflict, to Peninsular War.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/knownFor> ?result . ?v4 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/ontology/commander> ?v4 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Peninsular War""@en . <http://dbpedia.org/resource/Great_Siege_of_Gibraltar> <http://dbpedia.org/ontology/commander> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","```sparql
# Step 1: Get the commander of the Great Siege of Gibraltar
SELECT ?commanderGibraltar WHERE {
    <http://dbpedia.org/resource/Great_Siege_of_Gibraltar> <http://dbpedia.org/ontology/commander> ?commanderGibraltar .
}

# Step 2: Find the claim to fame for this commander
SELECT ?claimToFameGibraltar WHERE {
    ?commanderGibraltar <http://dbpedia.org/ontology/knownFor> ?claimToFameGibraltar .
}

# Step 3: Get the reference (war) linked to the Peninsular War
SELECT ?peninsularWarReference WHERE {
    ?peninsularWarReference <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
    ?peninsularWarReference <http://dbpedia.org/ontology/reference> <http://dbpedia.org/resource/Peninsular_War> .
}

# Step 4: Get the commander of this referenced war
SELECT ?commanderPeninsular WHERE {
    ?peninsularWarReference <http://dbpedia.org/ontology/commander> ?commanderPeninsular .
}

# Step 5: Find the claim to fame for this second commander
SELECT ?claimToFamePeninsular WHERE {
    ?commanderPeninsular <http://dbpedia.org/ontology/knownFor> ?claimToFamePeninsular .
}
```",5,6,6,3,2,3,3,71,0,0,2,0,0.0,0
659,57,test,"Give me the commander in German campaign of 1813 and commander in the war, that is an event and a military conflict, of the figure known, that is a military unit and an organisation, as 'Polish Horse' and military force of the force, that is a societal event and an event and a military conflict, of Rutger Jan Schimmelpenninck.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> . <http://dbpedia.org/resource/German_campaign_of_1813> <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://dbpedia.org/ontology/battle> ?v5 . ?v0 <http://dbpedia.org/property/nickname> ""'Polish Horse'""@en . ?v5 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. }","```sparql
SELECT ?commander WHERE {
  # Step 1: Identify the military force associated with Rutger Jan Schimmelpenninck
  ?force <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>.
  ?force <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>.
  ?force <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>.
  <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> <http://dbpedia.org/property/militaryForce> ?force.

  # Step 2: Identify the figure known as 'Polish Horse'
  ?polishHorse <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>.
  ?polishHorse <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>.
  ?polishHorse rdfs:label ""Polish Horse""@en.

  # Step 3: Find the war that is both an event and a military conflict involving 'Polish Horse'
  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>.
  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>.
  ?polishHorse <http://dbpedia.org/property/knownFor> ?war.

  # Step 4: Identify the commander in the German campaign of 1813
  ?germanCampaign <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>.
  ?germanCampaign rdfs:label ""German campaign of 1813""@en.
  ?germanCampaign <http://dbpedia.org/property/commander> ?commander.

  # Step 5: Ensure this commander also served in the identified war
  ?war <http://dbpedia.org/property/commander> ?commander.
}
```",6,13,7,3,3,3,3,71,0,0,7,0,0.0,0
767,23,test,"Give me the entity in the administration, that is a settlement, of the writer of Where It's At (Dustin Lynch album).",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/leaderParty> ?v2 . <http://dbpedia.org/resource/Where_It's_At_(Dustin_Lynch_album)> <http://dbpedia.org/property/writer> ?v2 . ?result <http://dbpedia.org/ontology/state> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
SELECT ?entity WHERE {
  ?album dbpedia-owl:writer ?writer .
  ?writer foaf:based_near ?administration .
  ?administration a dbo:Settlement .
  
  ?adminEntity a dbo:Settlement ;
              dbo:partOf ?administration .

  FILTER(?album = <http://dbpedia.org/resource/Where_It%27s_At_(Dustin_Lynch_album)>)
}
```",3,4,4,3,1,3,3,71,0,0,66,0,0.0,0
492,25,test,"Give me the person decedent at the capital, that is a settlement, of Algeria and commander in Franco-Hova Wars.",SELECT ?result WHERE { <http://dbpedia.org/resource/Franco-Hova_Wars> <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Algeria> <http://dbpedia.org/ontology/capital> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . },"```sparql
SELECT ?person WHERE {
  # Find the capital of Algeria that is a settlement
  ?capital <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>;
           <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Algeria>.

  # Find commanders in the Franco-Hova Wars
  ?commander <http://dbpedia.org/ontology/battleCommanded> ?francoHovaWar;
              <http://dbpedia.org/property/decedentAt> ?capital.

  # Ensure the commander is a person
  ?commander <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>.

  BIND(?commander AS ?person)
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
294,23,test,"Give me the resting place of the awardee, that is a politician, of Distinguished Service Medal (U.S. Army) and entity in the birth place, that is a settlement, of Marion James.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/location> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Marion_James> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Distinguished_Service_Medal_(U.S._Army)> . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
SELECT ?restingPlace WHERE {
  ?person a dbo:Politician ;
          dbo:awardReceived dbr:Distinguished_Service_Medal_(U.S._Army) .
  
  ?person foaf:deathPlace ?restingPlace .

  ?marion a dbo:Person ;
          foaf:birthPlace ?birthSettlement .

  FILTER(?marion = dbp:Marion_James)

  ?birthSettlement a dbo:Settlement .

  ?restingPlace dbo:location ?birthSettlement .
}
```",4,6,5,2,2,2,3,28,0,0,1,0,0.0,0
77,19,test,"Give me the force of the mayor of the territory administered, that is an organisation, from Warsaw and war of the awardee of Golden Weapon for Bravery.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> ?v4 . ?v0 <http://dbpedia.org/property/leader> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Warsaw> . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Golden_Weapon_for_Bravery> . },"```sparql
# First part: Organization administering Warsaw and its force
SELECT ?organization ?force WHERE {
  ?mayor <http://dbpedia.org/ontology/territory> ?territory .
  ?territory <http://dbpedia.org/property/administeredBy> ?organization .
  FILTER(CONTAINS(LCASE(STR(?organization)), ""waraw""))
  OPTIONAL { ?organization <http://dbpedia.org/ontology/belongsTo> ?force }
}

# Second part: Awardee of Golden Weapon for Bravery and associated war
SELECT ?awardee ?war WHERE {
  ?awardee <http://dbpedia.org/property/award> ?award .
  FILTER(CONTAINS(LCASE(STR(?award)), ""golden weapon for bravery""))
  OPTIONAL { ?awardee <http://dbpedia.org/ontology/battle> ?war }
}
```",5,6,6,3,2,3,2,20,0,0,14,0,0.0,0
184,22,test,Give me the parent of the child of Archduke Joseph Francis of Austria and parent of Géza von Habsburg.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Géza_von_Habsburg> . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Francis_of_Austria> . ?result <http://dbpedia.org/ontology/child> ?v1 . },"```sparql
SELECT DISTINCT ?commonParent WHERE {
  # Find the children of Archduke Joseph Francis of Austria
  ?child a dbo:Child ;
         dbo:parent <http://dbpedia.org/resource/Archduke_Joseph_Francis_of_Austria> .
  
  # Get the parent of each child (grandchildren of Archduke Joseph Francis)
  ?child dbo:parent ?grandParent .

  # Find the parent of Géza von Habsburg
  <http://dbpedia.org/resource/G%C3%A9za_von_Habsburg> dbo:parent ?gezaParent .

  # Check if there is a common ancestor (parent) between the grandchildren and Géza's parent
  VALUES ?commonParent { ?grandParent ?gezaParent }
}
```",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
303,23,test,"Give me the party of the commander, that is a politician, in United States invasion of Panama and party of the person born, that is a politician, as Arnulfo Arias Madrid.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ""Arnulfo Arias Madrid""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/United_States_invasion_of_Panama> <http://dbpedia.org/ontology/commander> ?v2 . ?v1 <http://dbpedia.org/ontology/party> ?result . ?v2 <http://dbpedia.org/ontology/party> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
SELECT DISTINCT ?party WHERE {
  # Query for the commander in United States invasion of Panama
  {
    ?commander <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/United_States_invasion_of_Panama> .
    ?commander <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .
    ?commander <http://dbpedia.org/ontology/party> ?party .
  }
  
  UNION
  
  # Query for the person born as Arnulfo Arias Madrid
  {
    ?person <http://dbpedia.org/property/birthName> ""Arnulfo Arias Madrid"" .
    ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .
    ?person <http://dbpedia.org/ontology/party> ?party .
  }
}
```",4,6,5,2,2,2,3,28,0,0,1,0,0.0,0
9,58,test,"Give me the alma mater of the awardee of Royal Medal and figure known as the nickname of the entity, that is an organisation and an educational institution, in Northern Ireland and alma mater of John Alderdice, Baron Alderdice.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/nickname> ?v2 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Northern_Ireland> . ?result <http://dbpedia.org/property/nickname> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v5 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Medal> . <http://dbpedia.org/resource/John_Alderdice,_Baron_Alderdice> <http://dbpedia.org/ontology/almaMater> ?result . ?v5 <http://dbpedia.org/ontology/almaMater> ?result . }","```sparql
SELECT ?almaMater WHERE {
  ?entity a dbo:EducationalInstitution ;
          dbo:location dbr:Northern_Ireland ;
          dbo:alumni dbr:John_Alderdice_Baron_Alderdice .
  
  ?entity rdfs:label ?nickname .

  ?awardee dbo:award dbr:Royal_Medal ;
           foaf:nick ?nickname .

  ?awardee dbo:almaMater ?almaMater .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
281,48,test,"Give me the war of the profession, that is a military unit, of Heather Roy and war of the awardee of the award of Jonathon Band.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. <http://dbpedia.org/resource/Heather_Roy> <http://dbpedia.org/property/occupation> ?v1 . ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/property/awards> ?v3 . <http://dbpedia.org/resource/Jonathon_Band> <http://dbpedia.org/property/awards> ?v3 . },"```sparql
SELECT DISTINCT ?war WHERE {
  # Part 1: War associated with Heather Roy's profession (military unit)
  <http://dbpedia.org/resource/Heather_Roy> <http://dbpedia.org/ontology/profession> ?profession .
  ?profession <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit> .
  ?profession <http://dbpedia.org/ontology/battle> ?war .

  UNION

  # Part 2: War associated with Jonathon Band's award
  <http://dbpedia.org/resource/Jonathon_Band> <http://dbpedia.org/property/award> ?award .
  ?award <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?awardType .
  ?award <http://dbpedia.org/ontology/battle> ?war .
}
```",5,6,6,3,2,3,3,71,0,0,9,0,0.0,0
54,71,test,"Give me the predecessor of the child, that is an office holder and a royalty, of the reference to Thihapate of Mohnyin and parent of the child of the parent of Thado Minsaw of Prome and child of the father of the child of Thinkhaya of Pagan.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/father> ?v4 . ?v7 <http://xmlns.com/foaf/0.1/name> ""Thihapate of Mohnyin""@en . <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?v1 . ?result <http://dbpedia.org/ontology/successor> ?v8 . ?v1 <http://dbpedia.org/property/father> ?v2 . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/ontology/child> ?result . ?v4 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> . ?v5 <http://dbpedia.org/ontology/parent> ?result . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v8 <http://dbpedia.org/property/father> ?v7 . }","```sparql
SELECT ?predecessor WHERE {
  # Step 1: Find Thihapate of Mohnyin's child
  ?thihapateChild dbpedia-owl:childOf <http://dbpedia.org/resource/Thihapate_of_Mohnyin> .

  # Step 2: Find the parent of Thado Minsaw of Prome's child
  ?thadoParent dbpedia-owl:parentOf ?thadoMinsawChild .
  ?thadoMinsawChild dbpedia-owl:childOf <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> .

  # Step 3: Identify Thinkhaya of Pagan's father and his child
  ?thinkhayasFather dbpedia-owl:fatherOf ?thinkhaya .
  ?thinkhayasChild dbpedia-owl:childOf ?thinkhayasFather .
  ?thinkhaya <http://dbpedia.org/resource/Thinkhaya_of_Pagan> .

  # Step 4: Find the common individual who is an office holder and royalty
  ?commonIndividual rdf:type <http://dbpedia.org/ontology/OfficeHolder> ;
                   rdf:type <http://dbpedia.org/ontology/Royalty> ;
                   dbpedia-owl:childOf ?thihapateChild ;
                   dbpedia-owl:parentOf ?thadoMinsawChild ;
                   dbpedia-owl:childOf ?thinkhayasChild .

  # Step 5: Find the predecessor of this individual
  ?predecessor dbpedia-owl:predecessorOf ?commonIndividual .
}
```",9,11,10,3,3,3,3,71,0,0,1,0,0.0,0
959,53,test,"Give me the manager of the team of Takashi Sekizuka and native of Japan and member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of the person born in 1958.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v3 <http://dbpedia.org/ontology/birthYear> ""1958""^^<http://www.w3.org/2001/XMLSchema#gYear> . ?v0 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Takashi_Sekizuka> . ?v3 <http://dbpedia.org/ontology/almaMater> ?v1 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Japan> . ?result <http://dbpedia.org/ontology/team> ?v1 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?v0 <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. }","```sparql
SELECT ?manager WHERE {
  # Step 1: Identify the person born in 1958
  ?person dbpedia-owl:birthYear ""1958""^^xsd:gYear .
  
  # Step 2: Determine their alma mater, ensuring it is Japanese and fits all specified categories
  ?person foaf:almaMater ?university .
  ?university a <http://dbpedia.org/ontology/Organisation> ;
              a <http://dbpedia.org/ontology/University> ;
              a <http://dbpedia.org/ontology/EducationalOrganization> ;
              dbpedia-owl:country <http://dbpedia.org/resource/Japan> .
  
  # Step 3: Find members of this alma mater who are native to Japan
  ?member foaf:almaMater ?university ;
          dbpedia-owl:nativeCountry <http://dbpedia.org/resource/Japan> .

  # Step 4: Identify managers who manage a team associated with Takashi Sekizuka
  ?team dbpedia-owl:manager ?manager .
  ?person dbpedia-owl:member ?team .
  ?tSekizuka dbpedia-owl:manager ?team ;
             foaf:name ""Takashi Sekizuka"" .

  # Ensure the manager is a member of the alma mater
  ?manager foaf:almaMater ?university .
}
```",6,10,7,3,3,3,3,71,0,0,3,0,0.0,0
778,18,test,"Give me the author of the work, that is a software, of Bill Joy and entity in the award of the awardee, that is American, of Wolf Prize in Medicine.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/location> ?v2 . ?v3 <http://dbpedia.org/ontology/author> ?result . ?v1 <http://dbpedia.org/property/awards> ?v2 . ?v1 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/United_States>. ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Wolf_Prize_in_Medicine> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Software>. ?v3 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Bill_Joy> . },"```sparql
SELECT ?author WHERE {
  # Find software authored by Bill Joy
  ?software <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/Bill_Joy> .
  ?software <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Software> .

  # Find entities associated with the award of Wolf Prize in Medicine
  ?entity <http://dbpedia.org/property/award> <http://dbpedia.org/resource/Wolf_Prize_in_Medicine> .
  
  # Determine which awardee is American and identify their associated entity
  ?awardee <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AwardRecipient> ;
           <http://dbpedia.org/property/nationality> <http://dbpedia.org/resource/Category:American_people> .
  ?awardee <http://dbpedia.org/property/award> ?entity .

  # Match these entities with the software's author
  ?software <http://dbpedia.org/ontology/creator> ?author .
}
```",5,7,6,3,2,3,2,20,0,0,1,0,0.0,0
161,51,test,"Give me the military force of the force, that is a societal event and a military conflict, of Francisco Largo Caballero and commander in the force, that is an event, of the figure known as El Director.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v4 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://xmlns.com/foaf/0.1/nick> ""El Director""@en . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/commander> ?v1 . ?result <http://dbpedia.org/ontology/battle> ?v4 . }","```sparql
SELECT ?militaryForce WHERE {
  ?militaryForce a <http://dbpedia.org/ontology/MilitaryConflict> .
  ?militaryForce a <http://dbpedia.org/ontology/SocietalEvent> .

  # Francisco Largo Caballero's association with the military force
  <http://dbpedia.org/resource/Francisco_Largo_Caballero> <http://dbpedia.org/property/memberOf> ?militaryForce .
  
  # El Director as commander of the military force
  ?commander rdfs:label ""El Director""@en .
  ?commander <http://dbpedia.org/ontology/commander> ?militaryForce .

  # The commander's association with another event
  ?event a <http://dbpedia.org/ontology/Event> .
  ?commander <http://dbpedia.org/property/memberOf> ?event .
}
```",5,8,6,3,2,3,3,71,0,0,32,0,0.0,0
92,65,test,"Give me the associated musical artist of the person born, that is an artist, as the actor of Return to Nuke 'Em High Volume 1 and band member of the reference, that is an artist, to Nevermore and band of the person born as Joseph Michael Furney.","SELECT ?result WHERE { ?v6 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/bandMember> ?v3 . ?v4 <http://xmlns.com/foaf/0.1/name> ""Nevermore""@en . ?v6 <http://dbpedia.org/property/birthName> ?v0 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v3 <http://dbpedia.org/property/birthName> ""Joseph Michael Furney""@en . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Return_to_Nuke_'Em_High_Volume_1> <http://dbpedia.org/property/starring> ?v0 . }","```sparql
# Step 1: Get information about Joseph Michael Furney and his band (Nevermore)
SELECT ?person WHERE {
    ?person <http://dbpedia.org/property/birthName> ""Joseph Michael Furney"" .
    ?person <http://dbpedia.org/ontology/memberOfBand> <http://dbpedia.org/resource/Nevermore_(band)> .
}

# Step 2: Find references or artists linked to Nevermore
SELECT ?reference WHERE {
    <http://dbpedia.org/resource/Nevermore_(band)> <http://dbpedia.org/ontology/reference> ?reference .
}

# Step 3: Identify the actor from ""Return to Nuke 'Em High Volume 1""
SELECT ?actor WHERE {
    ?movie <http://dbpedia.org/property/title> ""Return to Nuke 'Em High Volume 1"" .
    ?movie <http://dbpedia.org/ontology/starring> ?actor .
}

# Step 4: Find the associated musical artist of that actor
SELECT ?musicalArtist WHERE {
    ?actor <http://dbpedia.org/property/associatedMusicalArtist> ?musicalArtist .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
747,59,test,"Give me the person born on the birth date of the person decedent, that is an athlete and a soccer player, at Zolotonosha and band of the writer of the work, that is a song, of Amba Shepherd.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/birthDate> ?v2 . ?v0 <http://dbpedia.org/property/writer> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?result <http://dbpedia.org/ontology/birthDate> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Zolotonosha> . ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Amba_Shepherd> . },"```sparql
SELECT ?person ?band
WHERE {
  # Step 1: Identify the athlete and soccer player born in Zolotonosha
  ?athlete a dbo:Athlete ;
           dbo:sport dbr:Soccer ;
           dbo:birthPlace dbr:Zolotonosha ;
           dbo:birthDate ?birthDate .

  # Step 2: Find another person (decedent) with the same birth date
  ?decedent dbo:deathDate ?deathDate ;
            dbo:birthDate ?birthDate .

  # Step 3: Identify the writer of a song by Amba Shepherd
  dbr:Amba_Shepherd dbo:work ?song .
  ?song dbo:type dbr:Song .
  ?song dbo:writer ?writer .

  # Step 4: Find the band associated with that writer
  ?writer dbo:band ?band .
}
```",6,9,7,3,2,3,3,71,0,0,1,0,0.0,0
838,12,val,"Give me the band member of the band, that is a group, of YU Grupa and band of Raša Đelmaš.",SELECT ?result WHERE { <http://dbpedia.org/resource/Raša_Đelmaš> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . <http://dbpedia.org/resource/YU_Grupa> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . },"```sparql
SELECT ?member WHERE {
  ?member <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/YU_Grupa> .
  ?member <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/Raša_Đelmaš> .
}
```",3,4,4,2,2,3,2,20,0,0,4,0,0.0,0
10,14,val,"Give me the band member of the person born, that is an artist, as Luke Francis Vibert and associated musical artist of Matt Colton.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://dbpedia.org/property/birthName> ""Luke Francis Vibert""@en . <http://dbpedia.org/resource/Matt_Colton> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . }","```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/birthName> ""Luke Francis Vibert"" .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist> .
  ?association <http://dbpedia.org/ontology/associatedMusicalArtist> ?person ;
               <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Matt_Colton> .
  ?bandMember <http://dbpedia.org/property/memberOfBand> ?person .
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
963,11,val,"Give me the administration of Serbian Progressive Party and entity in the region, that is a country, of Central European Time.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Serbian_Progressive_Party> . ?result <http://dbpedia.org/ontology/country> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . },"```sparql
# Query 1: Administration of Serbian Progressive Party
SELECT ?administration WHERE {
    <http://dbpedia.org/resource/Serbian_Progressive_Party> <http://dbpedia.org/ontology/administration> ?administration .
}

# Query 2: Entity in the Region (Country) of Central European Time
SELECT ?country WHERE {
    ?region <http://www.w3.org/2000/01/rdf-schema#label> ""Central European Time"" .
    ?region <http://dbpedia.org/ontology/country> ?country .
    ?country a <http://dbpedia.org/ontology/Country> .
}
```",3,4,4,2,2,3,2,20,0,0,84,0,0.0,0
528,22,val,Give me the force of the person born as Narciso Campero Leyes and war of Irene Morales.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ""Narciso Campero Leyes""@en . ?result <http://dbpedia.org/ontology/commander> ?v1 . <http://dbpedia.org/resource/Irene_Morales> <http://dbpedia.org/ontology/battle> ?result . }","```sparql
SELECT ?narcisoForce ?ireneWar WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/Narciso_Campero_Leyes> <http://dbpedia.org/ontology/militaryService> ?service .
    ?service <http://dbpedia.org/property/force> ?narcisoForce .
  }
  
  OPTIONAL {
    <http://dbpedia.org/resource/Irene_Morales> <http://dbpedia.org/ontology/battle> ?battle .
    ?battle <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
    ?battle <http://www.w3.org/2000/01/rdf-schema#label> ?ireneWar .
  }
}
```",3,3,4,2,2,3,3,71,0,6,2,0.0,0.0,0
294,18,val,"Give me the resting place of Edwin A. Keeble and entity in the birth place, that is a settlement, of Marion James.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/location> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Edwin_A._Keeble> <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Marion_James> <http://dbpedia.org/ontology/birthPlace> ?v2 . },"```sparql
SELECT ?restingPlace WHERE {
  <http://dbpedia.org/resource/Edwin_A._Keeble> <http://dbpedia.org/ontology/finalBurial> ?restingPlace .
}

SELECT DISTINCT ?entity WHERE {
  <http://dbpedia.org/resource/Marion_James> <http://dbpedia.org/property/birthPlace> ?birthPlace .
  ?birthPlace <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement> .
  ?entity <http://dbpedia.org/ontology/location> ?birthPlace .
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
48,11,val,Give me the band of the writer of Emotion (Carly Rae Jepsen album) and band of Murda Mook.,SELECT ?result WHERE { <http://dbpedia.org/resource/Murda_Mook> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Emotion_(Carly_Rae_Jepsen_album)> <http://dbpedia.org/property/writer> ?v2 . },"```sparql
# Query to get the band of the writer(s) of Emotion (Carly Rae Jepsen album)
SELECT ?writerBand WHERE {
  ?album wdt:P577 ?releaseDate; 
         wdt:P175 wd:Q2108671; # Carly Rae Jepsen
         wdt:P136 ?genre.
  ?album wdt:P527 ?song. # Songs in the album
  ?song wdt:P86 ?writer. # Writers of the song
  OPTIONAL { ?writer wdt:P106 wd:Q33999 . } # Check if writer is a musician
  OPTIONAL { ?writer wdt:P46 ?band . FILTER EXISTS { ?band wdt:P31 wd:Q215380 . } }
  BIND(IF(BOUND(?band), ?band, ""No band found"") AS ?writerBand)
}
GROUP BY ?writerBand

UNION

# Query to get the band of Murda Mook
SELECT ?band WHERE {
  wd:Q1105010 wdt:P46 ?band. # Murda Mook's band membership
  FILTER EXISTS { ?band wdt:P31 wd:Q215380 . } # Ensure it is a band
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
404,32,val,"Give me the spouse of the person born, that is a royalty, as Princess Victoria Louise of Prussia and parent of the child, that is a royalty, of Ernest Augustus, Duke of Brunswick.","SELECT ?result WHERE { <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/ontology/child> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/birthName> ""Princess Victoria Louise of Prussia""@en . ?v1 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/child> ?v3 . }","```sparql
SELECT ?spouse WHERE {
  ?person <http://dbpedia.org/ontology/birthName> ""Princess Victoria Louise of Prussia"" .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
  ?person <http://dbpedia.org/property/child> <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> .
  ?person <http://dbpedia.org/ontology/spouse> ?spouse .
}
```",4,6,5,2,2,3,3,71,0,0,1,0,0.0,0
54,35,val,"Give me the predecessor of the child, that is an office holder and a royalty, of Thihapate of Mohnyin and child of the father of Soe Min Wimala Dewi.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Soe_Min_Wimala_Dewi> <http://dbpedia.org/property/father> ?v2 . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Thihapate_of_Mohnyin> . },"```sparql
SELECT ?predecessor WHERE {
  # Step 1: Find the child of Thihapate of Mohnyin who is an office holder and royalty.
  ?child a dbo:OfficeHolder ;
         dbo:royalty true ;
         dbo:parent <http://dbpedia.org/resource/Thihapate_of_Mohnyin> .

  # Step 2: Identify the father of Soe Min Wimala Dewi.
  ?soeMinWimalaDewi a dbo:Person ;
                    dbo:childOf ?father .

  FILTER(?soeMinWimalaDewi = <http://dbpedia.org/resource/Soe_Min_Wimala_Dewi>)

  # Step 3: Determine the child of that father.
  ?fatherChild a dbo:Person ;
               dbo:parent ?father .

  # Step 4: Find the predecessor of this identified child.
  ?officeHolder a dbo:OfficeHolder ;
                dbo:predecessor ?predecessor ;
                dbo:child ?fatherChild .
}
```",4,6,5,2,2,3,3,71,0,0,1,0,0.0,0
626,12,val,Give me the awardee of the award of Aleksey Petrovich Yermolov and commander in Battle of Leipzig.,SELECT ?result WHERE { <http://dbpedia.org/resource/Aleksey_Petrovich_Yermolov> <http://dbpedia.org/property/awards> ?v0 . ?result <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Battle_of_Leipzig> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT ?awardee WHERE {
  ?award <http://dbpedia.org/ontology/receiver> <http://dbpedia.org/resource/Aleksey_Petrovich_Yermolov> .
  ?awardee <http://dbpedia.org/ontology/receiver> ?award .
  <http://dbpedia.org/resource/Battle_of_Leipzig> <http://dbpedia.org/ontology/commander> ?awardee .
}
```",3,3,4,2,2,3,2,20,0,0,3,0,0.0,0
392,14,val,"Give me the region of the time zone, that is a sports event, of Aguilar de Segarra and entity in Italy.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsEvent>. ?result <http://dbpedia.org/ontology/timeZone> ?v1 . <http://dbpedia.org/resource/Aguilar_de_Segarra> <http://dbpedia.org/ontology/timeZone> ?v1 . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy> . },"```sparql
SELECT ?event ?region WHERE {
  ?event <http://dbpedia.org/ontology/location> ?location .
  ?location <http://www.w3.org/2000/01/rdf-schema#label> ""Aguilar de Segarra""@en .
  ?event <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsEvent> .
  ?event <http://dbpedia.org/property/timeZone> ?timeZone .
  ?timeZone <http://dbpedia.org/ontology/region> ?region .
  
  OPTIONAL {
    ?event <http://dbpedia.org/ontology/location> ?italianLocation .
    ?italianLocation <http://www.w3.org/2000/01/rdf-schema#label> ?italyEntity .
    FILTER (lang(?italyEntity) = ""en"" && regex(?italyEntity, ""^.*Italy.*$""))
  }
  
  FILTER EXISTS { ?event <http://dbpedia.org/ontology/location> ?location }
}
```",3,4,4,2,2,2,3,28,0,0,513,0,0.0,0
392,19,val,"Give me the entity in the region, that is a country, of Central European Time and region of Central European Time and province of Schio.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v1 . <http://dbpedia.org/resource/Schio> <http://dbpedia.org/ontology/province> ?result . ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Central_European_Time> . ?v1 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
SELECT ?entity WHERE {
  ?region <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Central_European_Time>.
  ?region a <http://dbpedia.org/ontology/Country>.
  ?region <http://dbpedia.org/ontology/province> <http://dbpedia.org/resource/Schio>.
  ?entity <http://dbpedia.org/ontology/country> ?region.
}
```",4,5,5,2,3,2,3,28,0,0,1,0,0.0,0
9,39,val,"Give me the alma mater of Allen Hill (scientist) and figure known as the nickname of the entity, that is an organisation and an educational institution, in Northern Ireland.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?result <http://dbpedia.org/property/nickname> ?v1 . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Northern_Ireland> . ?v0 <http://dbpedia.org/property/nickname> ?v1 . <http://dbpedia.org/resource/Allen_Hill_(scientist)> <http://dbpedia.org/ontology/almaMater> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
# Query to find the alma mater of Allen Hill (scientist)
SELECT ?almaMater WHERE {
  <http://dbpedia.org/resource/Allen_Hill_(scientist)> <http://dbpedia.org/ontology/almaMater> ?almaMater .
}

# Query to find the nickname of an organization and educational institution in Northern Ireland
SELECT ?nickname WHERE {
  ?entity <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>.
  ?entity <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>.
  ?entity <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Northern_Ireland>.
  ?entity <http://dbpedia.org/property/nickname> ?nickname .
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
492,30,val,"Give me the person decedent at the capital, that is a settlement, of Algeria and person decedent at French Algeria and commander in Franco-Hova Wars.",SELECT ?result WHERE { <http://dbpedia.org/resource/Franco-Hova_Wars> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/French_Algeria> . ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . <http://dbpedia.org/resource/Algeria> <http://dbpedia.org/ontology/capital> ?v1 . },"```sparql
SELECT ?person WHERE {
  ?capital <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Capital>;
           <http://dbpedia.org/property/country> <http://dbpedia.org/resource/Algeria>.
  
  ?person <http://dbpedia.org/ontology/deathPlace> ?capital;
          <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/French_Algeria>;
          <http://dbpedia.org/ontology/commander> ?francoHovaWar.

  ?francoHovaWar <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>.
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
328,33,val,Give me the awardee of Order of Suvorov and commander in the force of the person decedent at Budapest.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/commander> ?v0 . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Budapest> . ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Order_of_Suvorov> . },"```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/awardee> <http://dbpedia.org/resource/Order_of_Suvorov> .
  ?person <http://dbpedia.org/ontology/commander> ?force .
  ?event <http://dbpedia.org/property/location> <http://dbpedia.org/resource/Budapest> .
  ?force <http://dbpedia.org/ontology/battle> ?event .
}
```",4,4,5,3,2,3,3,71,0,0,3,0,0.0,0
64,7,val,"Give me the alma mater of the person decedent, that is a writer, at Sremska Kamenica and entity in Serbia.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Sremska_Kamenica> . ?v0 <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Serbia> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>. },"```sparql
SELECT ?person ?almaMater WHERE {
  ?person <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Sremska_Kamenica> .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer> .
  ?person <http://dbpedia.org/ontology/deathDate> ?deathDate .
  FILTER EXISTS { ?person <http://dbpedia.org/property/residence> ?residence . }
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/resource/Serbia/> .
  ?person <http://dbpedia.org/ontology/almaMater> ?almaMater .
}
```",3,4,4,2,2,2,2,9,0,0,1,0,0.0,0
427,28,val,Give me the party of Romano Prodi and reference to the name of Italian People's Party (1994) and party of Giulio Andreotti.,SELECT ?result WHERE { <http://dbpedia.org/resource/Giulio_Andreotti> <http://dbpedia.org/ontology/party> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . <http://dbpedia.org/resource/Italian_People's_Party_(1994)> <http://xmlns.com/foaf/0.1/name> ?v1 . <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/ontology/party> ?result . },"```sparql
SELECT ?prodiParty ?ipepName ?andreottiParty WHERE {
  # Get the party of Romano Prodi
  <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/ontology/party> ?prodiParty .
  
  # Get a reference to the name of Italian People's Party (1994)
  ?ipep <http://www.w3.org/2000/01/rdf-schema#label> ""Italian People's Party (1994)""@en .
  ?ipep <http://dbpedia.org/ontology/name> ?ipepName .

  # Get the party of Giulio Andreotti
  <http://dbpedia.org/resource/Giulio_Andreotti> <http://dbpedia.org/ontology/party> ?andreottiParty .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
801,27,val,"Give me the associated musical artist of the writer, that is a musical artist and an artist, of the album, that is a musical work and a work, of What U See Is What U Get.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v1 <http://dbpedia.org/property/writer> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/What_U_See_Is_What_U_Get> <http://dbpedia.org/ontology/album> ?v1 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT ?associatedArtist WHERE {
  # Step 1: Identify the album ""What U See Is What U Get""
  ?album <http://dbpedia.org/ontology/work> ?work .
  ?album rdfs:label ""What U See Is What U Get""@en .

  # Step 2: Find writers of this album who are both a musical artist and an artist
  ?writer <http://dbpedia.org/ontology/writer> ?album ;
          <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>, <http://dbpedia.org/ontology/Artist> .

  # Step 3: Determine the associated musical artists linked to these writers
  ?writer <http://dbpedia.org/property/associatedMusicalArtist> ?associatedArtist .
}
```",3,7,4,3,1,3,3,71,0,0,50,0,0.0,0
328,28,val,"Give me the commander in Eastern Front (World War II) and leader of People's Commissariat of Defense of the Soviet Union and awardee of the award of Bruce Fraser, 1st Baron Fraser of North Cape.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ?v1 . <http://dbpedia.org/resource/Eastern_Front_(World_War_II)> <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape> <http://dbpedia.org/property/awards> ?v1 . <http://dbpedia.org/resource/People's_Commissariat_of_Defense_of_the_Soviet_Union> <http://dbpedia.org/ontology/leader> ?result . }","```sparql
SELECT ?person WHERE {
    ?person <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Eastern_Front_(World_War_II)> .
    ?person <http://dbpedia.org/ontology/leader> <http://dbpedia.org/resource/People's_Commissariat_of_Defense_of_the_Soviet_Union> .
    ?award <http://dbpedia.org/property/givenBy> <http://dbpedia.org/resource/Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape> .
    ?person <http://dbpedia.org/ontology/awardee> ?award .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
488,35,val,Give me the administration of the father of Emperor Go-Mizunoo and birth place of the commander in Boshin War.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> ?v1 . <http://dbpedia.org/resource/Boshin_War> <http://dbpedia.org/ontology/commander> ?v2 . <http://dbpedia.org/resource/Emperor_Go-Mizunoo> <http://dbpedia.org/property/father> ?v1 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
# Query to get the administration of the father of Emperor Go-Mizunoo
SELECT ?administration WHERE {
  ?father dbo:spouse ?goMizunooMother .
  ?goMizunooMother dbo:child <http://dbpedia.org/resource/Emperor_Go-Mizunoo> .
  ?father dbo:office ?administration .
}

UNION

# Query to get the birthplace of the commander in Boshin War
SELECT ?birthPlace WHERE {
  ?boshinWar dbo:commander ?commander .
  <http://dbpedia.org/resource/Boshin_War> ?p ?o .
  ?commander dbo:birthPlace ?birthPlace .
}
```",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
345,12,val,"Give me the figure known as Stolz von Liechtenstein and team of the person born, that is a soccer player and a soccer manager, on 1978-09-15.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthDate> ""1978-09-15""^^<http://www.w3.org/2001/XMLSchema#date> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?result <http://dbpedia.org/ontology/manager> ?v0 . ?result <http://dbpedia.org/property/nickname> ""Stolz von Liechtenstein""@en . }","```sparql
SELECT ?person ?team ?figure WHERE {
  ?person <http://dbpedia.org/ontology/birthDate> ""1978-09-15""^^xsd:date .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer> .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager> .
  ?person <http://dbpedia.org/property/team> ?team .
  OPTIONAL { ?person <http://xmlns.com/foaf/0.1/knowsAs> ?figure . }
}
```",3,5,4,2,2,3,2,20,0,0,1,0,0.0,0
488,40,val,"Give me the birth place of the commander in the war, that is a military conflict and an event and a societal event, of Saitō Hajime and death place of Tokugawa Ieyasu and administration of Emperor Go-Yōzei.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/commander> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Emperor_Go-Yōzei> . <http://dbpedia.org/resource/Saitō_Hajime> <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Tokugawa_Ieyasu> <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
SELECT ?birthPlace ?deathPlace ?administration WHERE {
  # Part 1: Find the war involving Saitō Hajime
  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>.
  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>.
  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>.
  <http://dbpedia.org/resource/Saitō_Hajime> <http://dbpedia.org/ontology/battle> ?war.
  
  # Part 2: Find the commander of this war and their birthplace
  ?war <http://dbpedia.org/ontology/commander> ?commander.
  ?commander <http://dbpedia.org/property/placeOfBirth> ?birthPlace.

  # Part 3: Find the death place of Tokugawa Ieyasu
  <http://dbpedia.org/resource/Tokugawa_Ieyasu> <http://dbpedia.org/ontology/deathPlace> ?deathPlace.
  
  # Part 4: Find the administration location of Emperor Go-Yōzei
  <http://dbpedia.org/resource/Emperor_Go-Yōzei> <http://dbpedia.org/property/administration> ?administration.
}
```",5,8,6,3,3,3,3,71,0,0,1,0,0.0,0
360,15,val,"Give me the writer of the work, that is an album, of Dave Flett and reference to Manfred Mann.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/author> ""Dave Flett""@en . ?result <http://xmlns.com/foaf/0.1/name> ""Manfred Mann""@en . ?v1 <http://dbpedia.org/property/writer> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Album>. }","```sparql
SELECT ?album ?writer WHERE {
  ?album <http://dbpedia.org/ontology/contributor> <http://dbpedia.org/resource/Dave_Flett> .
  ?album <http://www.w3.org/2000/01/rdf-schema#seeAlso> <http://dbpedia.org/resource/Manfred_Mann> .
  ?album <http://purl.org/dc/terms/creator> ?writer .
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
314,12,val,Give me the commander in Spanish Civil War and awardee of 30 and person deceased at Madrid.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/restingPlace> <http://dbpedia.org/resource/Madrid> . <http://dbpedia.org/resource/Spanish_Civil_War> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/property/awards> ""30""^^<http://www.w3.org/2001/XMLSchema#integer> . }","```sparql
SELECT ?person WHERE {
    ?person <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Spanish_Civil_War>.
    ?person <http://dbpedia.org/property/deathPlace> <http://dbpedia.org/resource/Madrid>.
    ?person <http://dbpedia.org/ontology/award> ?award.
    FILTER (COUNT(?award) = 30)
}
```",3,3,4,1,3,2,3,28,0,0,1,0,0.0,0
232,22,val,"Give me the native of the residence, that is a settlement and British, of Sylvie Bermann and child of Jon Pertwee.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/ontology/child> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Sylvie_Bermann> <http://dbpedia.org/property/residence> ?v1 . },"```sparql
SELECT ?native WHERE {
  ?residence <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>.
  ?residence <http://dbpedia.org/property/country> <http://dbpedia.org/resource/United_Kingdom>.
  <http://dbpedia.org/resource/Sylvie_Bermann> <http://dbpedia.org/property/residence> ?residence.
  
  OPTIONAL { ?residence <http://dbpedia.org/ontology/nativePlace> ?native. }
  
  ?child <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Jon_Pertwee>.
  ?child <http://dbpedia.org/property/residence> ?residence.
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
838,13,val,"Give me the band of the band member, that is an artist and a musical artist, of the band, that is a band and a group, of Žika Jelić.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v0 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Žika_Jelić> . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT ?band WHERE {
  ?band <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/%C5%BDika_Jeli%C4%87>.
  ?band <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>.
  ?band <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>.

  ?member <http://dbpedia.org/ontology/member> ?band.
  ?member <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>.
  ?member <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>.

  ?member <http://dbpedia.org/ontology/member> ?band2.
}
```",3,7,4,3,1,3,2,20,0,0,21,0,0.0,0
16,23,val,Give me the spouse of the person born as the birth name of Ted McGinley.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/property/birthName> ?v2 . ?v0 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/property/birthName> ?v2 . },"```sparql
SELECT ?spouse WHERE {
  <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/ontology/birthName> ?birthName .
  ?person <http://www.w3.org/2000/01/rdf-schema#label> ?birthName .
  ?person <http://dbpedia.org/ontology/spouse> ?spouse .
}
```",3,3,4,3,1,3,3,71,0,0,1,0,0.0,0
427,25,val,"Give me the party of the person born, that is an office holder and a politician, as Romano Antonio Prodi and party of Giulio Andreotti.","SELECT ?result WHERE { <http://dbpedia.org/resource/Giulio_Andreotti> <http://dbpedia.org/ontology/party> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/property/birthName> ""Romano Antonio Prodi""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/ontology/party> ?result . }","```sparql
# Query for the party of Romano Antonio Prodi
SELECT ?partyProdi WHERE {
  <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/ontology/party> ?partyProdi .
}

UNION

# Query for the party of Giulio Andreotti
SELECT ?partyAndreotti WHERE {
  <http://dbpedia.org/resource/Giulio_Andreotti> <http://dbpedia.org/ontology/party> ?partyAndreotti .
}
```",3,5,4,2,2,3,3,71,0,0,3,0,0.0,0
427,43,val,Give me the reference to Partito Popolare Italiano and party of Romano Prodi and party of the father of the alumnus of Massachusetts Institute of Technology.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Partito Popolare Italiano""@en . ?v0 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Massachusetts_Institute_of_Technology> . ?v4 <http://dbpedia.org/ontology/party> ?result . ?v0 <http://dbpedia.org/property/father> ?v4 . <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/ontology/party> ?result . }","```sparql
# Find reference to Partito Popolare Italiano
SELECT ?partitoPopolareItaliano WHERE {
  ?partitoPopolareItaliano a dbo:PoliticalParty ;
                         rdfs:label ""Partito Popolare Italiano""@en .
}

# Find party of Romano Prodi
SELECT ?prodiParty WHERE {
  ?romanoProdi a dbo:Person ;
               foaf:name ""Romano Prodi"" ;
               dbo:partyAffiliation ?prodiParty .
}

# Find father's party of an MIT alumnus
SELECT ?fatherParty WHERE {
  ?alumnus a dbo:Alumnus ;
           dbo:almaMater <http://dbpedia.org/resource/Massachusetts_Institute_of_Technology> ;
           foaf:parent ?father .
  
  ?father dbo:partyAffiliation ?fatherParty .
}

# Combine results
SELECT DISTINCT ?partitoPopolareItaliano ?prodiParty ?fatherParty WHERE {
  # Partito Popolare Italiano reference
  ?partitoPopolareItaliano a dbo:PoliticalParty ;
                          rdfs:label ""Partito Popolare Italiano""@en .

  # Romano Prodi's party affiliation
  ?romanoProdi a dbo:Person ;
               foaf:name ""Romano Prodi"" ;
               dbo:partyAffiliation ?prodiParty .
  
  # Father's party of an MIT alumnus
  ?alumnus a dbo:Alumnus ;
           dbo:almaMater <http://dbpedia.org/resource/Massachusetts_Institute_of_Technology> ;
           foaf:parent ?father .
  
  ?father dbo:partyAffiliation ?fatherParty .
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
30,7,val,"Give me the professional in Financier, businessman, vineyard owner, art collector, racehorse owner/breeder and native of the birthplace of Silvia Cohen.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Financier, businessman, vineyard owner, art collector, racehorse owner/breeder""@en . <http://dbpedia.org/resource/Silvia_Cohen> <http://dbpedia.org/ontology/birthPlace> ?v0 . ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . }","```sparql
# Find the birthplace of Silvia Cohen
SELECT ?birthPlace WHERE {
  <http://dbpedia.org/resource/Silvia_Cohen> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
}

# Use the result from above to find other professionals with the same birthplace
SELECT DISTINCT ?person WHERE {
  # Find individuals who are financiers, businessmen, vineyard owners, art collectors, and racehorse owner/breeders
  ?person <http://dbpedia.org/ontology/profession> ?profession .
  FILTER (
    ?profession IN (<http://dbpedia.org/resource/Category:Financiers>, 
                    <http://dbpedia.org/resource/Category:Businesspeople>, 
                    <http://dbpedia.org/resource/Category:Vineyard_owners>, 
                    <http://dbpedia.org/resource/Category:Art_collectors>, 
                    <http://dbpedia.org/resource/Category:Racehorse_owner-breeders>)
  )
  
  # Ensure they are native to the same birthplace as Silvia Cohen
  ?person <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  
  # Join with the result from the first query
  VALUES ?birthPlace { 
    # Placeholder for actual birthplace URI obtained from the first query
    # Example: <http://dbpedia.org/resource/City_of_Birth>
  }
}
```",3,3,4,2,2,2,2,9,0,0,1,0,0.0,0
314,16,val,"Give me the person deceased at Madrid and commander in the profession, that is an event and a societal event, of Lisa Gavrić.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/restingPlace> <http://dbpedia.org/resource/Madrid> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Lisa_Gavrić> <http://dbpedia.org/property/occupation> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Madrid> .
  ?person <http://dbpedia.org/ontology/profession> ?profession .
  FILTER(CONTAINS(LCASE(STR(?profession)), ""commander"")) .
  ?event <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event> ;
         <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent> .
  ?person <http://dbpedia.org/property/associatedWith> ?event .
  ?event <http://dbpedia.org/property/person> <http://dbpedia.org/resource/Lisa_Gavrić> .
}
```",3,5,4,2,2,2,3,28,0,0,1,0,0.0,0
994,25,val,"Give me the associated musical artist of Red Tide (band) and band member of the person born, that is a musical artist, as Donald Maynard Dokken.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ""Donald Maynard Dokken""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . <http://dbpedia.org/resource/Red_Tide_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
SELECT ?associatedArtist ?bandMember WHERE {
  # Find the associated musical artists of Red Tide (band)
  <http://dbpedia.org/resource/Red_Tide_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?associatedArtist .
  
  # Find a person born as Donald Maynard Dokken who is also a band member
  ?person <http://dbpedia.org/property/birthName> ""Donald Maynard Dokken""^^<http://www.w3.org/2001/XMLSchema#string> .
  ?person <http://dbpedia.org/ontology/memberOfBand> ?bandMember .
  
  # Ensure the band member is also an associated artist of Red Tide (band)
  FILTER (?associatedArtist = ?bandMember)
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
801,24,val,"Give me the associated musical artist of Chris Taylor (music producer) and producer of the work, that is a musical work and a song and a work, of 50 Cent.",SELECT ?result WHERE { <http://dbpedia.org/resource/Chris_Taylor_(music_producer)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v2 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/50_Cent> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v2 <http://dbpedia.org/ontology/producer> ?result . },"```sparql
# Query to find the associated musical artist of Chris Taylor (music producer)
SELECT ?artist WHERE {
    <http://dbpedia.org/resource/Chris_Taylor_(music_producer)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?artist .
}

# Query to find a work that is both a musical work and a song produced by 50 Cent
SELECT DISTINCT ?work ?producer WHERE {
    ?work <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork> .
    ?work <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song> .
    ?work <http://dbpedia.org/property/artist> <http://dbpedia.org/resource/50_Cent> .
    ?work <http://dbpedia.org/ontology/producer> ?producer .
}
```",3,6,4,2,2,3,3,71,0,0,1,0,0.0,0
696,11,val,Give me the landmark at elevation of 50 and birth place of the member of Dropkick Murphys.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Dropkick_Murphys> <http://dbpedia.org/ontology/bandMember> ?v2 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/elevation> ""50""^^<http://www.w3.org/2001/XMLSchema#integer> . }","```sparql
SELECT ?landmark WHERE {
  ?landmark <http://dbpedia.org/ontology/elevation> ""50""^^<http://www.w3.org/2001/XMLSchema#integer> .
  ?member <http://dbpedia.org/property/birthPlace> ?landmark .
  ?member <http://dbpedia.org/ontology/memberOf> <http://dbpedia.org/resource/Dropkick_Murphys> .
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
617,31,val,"Give me the spouse of Laodice IV and child of the child, that is a royalty, of the successor, that is a royalty, of Antiochus II Theos.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Antiochus_II_Theos> <http://dbpedia.org/ontology/successor> ?v1 . <http://dbpedia.org/resource/Laodice_IV> <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> ?v1 . },"```sparql
# Step 1: Identify Antiochus II Theos's successor who is a royalty
SELECT ?successor WHERE {
    ?antiochus2 dbo:spouse ?successor .
    ?antiochus2 rdf:type <http://dbpedia.org/ontology/Royalty> .
    FILTER(CONTAINS(LCASE(STR(?antiochus2)), ""antiochus ii theos""))
}

# Step 2: Determine the child of that successor who is also a royalty
SELECT ?child WHERE {
    ?successor dbo:child ?child .
    ?child rdf:type <http://dbpedia.org/ontology/Royalty> .
}

# Step 3: Find Laodice IV's spouse and then identify their child who fits the criteria from step 2
SELECT DISTINCT ?spouseChild WHERE {
    <http://dbpedia.org/resource/Laodice_IV> dbo:spouse ?spouse .
    ?spouse dbo:child ?spouseChild .
    ?spouseChild rdf:type <http://dbpedia.org/ontology/Royalty> .
    ?successorChild dbo:parent ?spouseChild .
}
```",4,6,5,3,2,3,3,71,0,0,3,0,0.0,0
328,30,val,"Give me the commander in Eastern Front (World War II) and leader of the office, that is a government agency, of Joseph Stalin and awardee of Order of Suvorov.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Order_of_Suvorov> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. <http://dbpedia.org/resource/Joseph_Stalin> <http://dbpedia.org/property/office> ?v1 . <http://dbpedia.org/resource/Eastern_Front_(World_War_II)> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/ontology/leader> ?result . },"```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Eastern_Front_(World_War_II)> .
  ?office <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency> ;
          <http://dbpedia.org/property/leader> ?person .
  ?person <http://dbpedia.org/ontology/awardee> <http://dbpedia.org/resource/Order_of_Suvorov> .
  OPTIONAL { ?stalinOffice <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency> ;
             <http://dbpedia.org/property/leader> ?person ;
             <http://dbpedia.org/ontology/associatedWith> <http://dbpedia.org/resource/Joseph_Stalin> . }
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
427,23,val,Give me the reference to the name of the party of Michele Pinto.,SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v0 . <http://dbpedia.org/resource/Michele_Pinto> <http://dbpedia.org/ontology/party> ?v2 . ?v2 <http://xmlns.com/foaf/0.1/name> ?v0 . },"```sparql
SELECT ?partyName ?reference WHERE {
  <http://dbpedia.org/resource/Michele_Pinto> <http://dbpedia.org/ontology/party> ?party .
  ?party rdfs:label ?partyName .
  OPTIONAL { ?party foaf:name ?reference }
}
```",3,3,4,3,1,3,3,71,0,6,8,0.0,0.0,0
328,39,val,"Give me the leader of the office, that is a government agency, of the leader, that is an office holder and a politician, of Gustav Jonson and commander in Eastern Front (World War II).",SELECT ?result WHERE { <http://dbpedia.org/resource/Gustav_Jonson> <http://dbpedia.org/property/leader> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/ontology/leader> ?result . ?v0 <http://dbpedia.org/property/office> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Eastern_Front_(World_War_II)> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
# Step 1: Identify the leader who is both an office holder and a politician of Gustav Jonson
SELECT ?leader WHERE {
    <http://dbpedia.org/resource/Gustav_Jonson> <http://dbpedia.org/ontology/politicalLeader> ?leader .
    ?leader <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder> .
    ?leader <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .
}

# Step 2: Determine the commander in Eastern Front (World War II)
SELECT ?commander WHERE {
    <http://dbpedia.org/resource/Eastern_Front_(World_War_II)> <http://dbpedia.org/ontology/commander> ?commander .
}

# Step 3: Find the common individual between the two roles identified above
SELECT DISTINCT ?commonIndividual WHERE {
    { 
        SELECT ?leader WHERE {
            <http://dbpedia.org/resource/Gustav_Jonson> <http://dbpedia.org/ontology/politicalLeader> ?leader .
            ?leader <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder> .
            ?leader <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .
        }
    } 
    UNION
    {
        SELECT ?commander WHERE {
            <http://dbpedia.org/resource/Eastern_Front_(World_War_II)> <http://dbpedia.org/ontology/commander> ?commander .
        }
    }
}

# Step 4: Locate the government agency led by this individual
SELECT ?agency WHERE {
    ?commonIndividual <http://dbpedia.org/property/leaderOf> ?office .
    ?office <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency> .
}

# Step 5: Identify the leader of that government agency
SELECT ?finalLeader WHERE {
    ?agency <http://dbpedia.org/property/leaderOf> ?finalLeader .
}
```",4,7,5,3,2,3,3,71,0,0,1,0,0.0,0
232,34,val,Give me the child of the person born as the birth name of Jon Pertwee and native of London.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/London> . ?v1 <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/property/birthName> ?v2 . },"```sparql
SELECT ?child WHERE {
  ?person <http://dbpedia.org/property/birthName> ""Jon Pertwee"" .
  ?person <http://dbpedia.org/ontology/nativePlace> <http://dbpedia.org/resource/London> .
  ?person <http://dbpedia.org/ontology/child> ?child .
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
281,31,val,Give me the war of the awardee of the award of Jonathon Band and entity in Colony of New Zealand.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Colony_of_New_Zealand> . <http://dbpedia.org/resource/Jonathon_Band> <http://dbpedia.org/property/awards> ?v1 . },"```sparql
SELECT ?war WHERE {
  ?award <http://dbpedia.org/ontology/awardee> <http://dbpedia.org/resource/Jonathon_Band> .
  ?award <http://dbpedia.org/ontology/relatedTo> ?war .
  
  OPTIONAL {
    ?nzEntity <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement> .
    ?nzEntity <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Colony_of_New_Zealand> .
    ?war <http://dbpedia.org/property/relatedTo> ?nzEntity .
  }
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
9,24,val,Give me the figure known as QUB and alma mater of the awardee of Royal Medal.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/almaMater> ?result . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Medal> . ?result <http://dbpedia.org/property/nickname> ""QUB""@en . }","```sparql
SELECT ?figure WHERE {
  ?entity rdfs:label ""Queen's University Belfast""@en .
  ?entity skos:altLabel ""QUB"" .
  
  ?recipient dbp:award ""Royal Medal"" .
  ?recipient dbo:almaMater ?entity .

  ?figure owl:sameAs ?entity .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
404,38,val,"Give me the child of the father of Ernest Augustus, Duke of Brunswick and parent of the child, that is a royalty, of Ernest Augustus, Duke of Brunswick.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v3 . <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/ontology/parent> ?v2 . <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
SELECT ?child WHERE {
  ?father dbo:child <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> .
  ?father dbo:parent ?royalParent .
  ?royalParent a dbo:Royalty .
  ?royalParent dbo:child ?child .
}
```",4,5,5,2,2,3,3,71,0,9,1,0.0,0.0,0
232,33,val,"Give me the actor of the claim to fame, that is a film and a military conflict, of the professional in Actor, narrator and producer and child of Jon Pertwee.","SELECT ?result WHERE { <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/ontology/child> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v3 <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://dbpedia.org/property/occupation> ""Actor, narrator and producer""@en . ?v0 <http://dbpedia.org/ontology/knownFor> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","```sparql
SELECT ?actor WHERE {
    ?child rdf:type dbo:Child ;
           rdfs:label ""Jon Pertwee""@en .
    ?person dbo:parent ?child ;
            dbo:occupationActor dbo:OccupationActor ;
            dbo:occupationNarrator dbo:OccupationNarrator ;
            dbo:occupationProducer dbo:OccupationProducer .
    ?fame dbo:knownFor ?person ;
          rdf:type dbo:Film, dbo:MilitaryConflict .
    ?film dbo:castMember ?actor .
    FILTER (lang(?child) = ""en"" && lang(?person) = ""en"")
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
281,40,val,Give me the war of the awardee of the award of Jonathon Band and entity in Colony of New Zealand and war of New Zealand Army.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Colony_of_New_Zealand> . ?v1 <http://dbpedia.org/property/awards> ?v2 . <http://dbpedia.org/resource/New_Zealand_Army> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Jonathon_Band> <http://dbpedia.org/property/awards> ?v2 . },"```sparql
SELECT ?war WHERE {
  ?awardee <http://dbpedia.org/ontology/award> <http://dbpedia.org/resource/Jonathon_Band>.
  ?awardee <http://dbpedia.org/property/war> ?war.
  
  ?entity <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>.
  ?entity <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Colony_of_New_Zealand>.
  ?war <http://dbpedia.org/property/entity> ?entity.
  
  ?nzArmy <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryOrganization>.
  ?nzArmy <http://dbpedia.org/ontology/name> ""New Zealand Army"".
  ?war <http://dbpedia.org/property/army> ?nzArmy.
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
421,17,val,Give me the person born as Edin Dervišhalidović and native of the birthplace of Samir Bekrić.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . <http://dbpedia.org/resource/Samir_Bekrić> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?result <http://dbpedia.org/property/birthName> ""Edin Dervišhalidović""@en . }","```sparql
SELECT ?person WHERE {
  ?samir a dbo:Person;
         foaf:name ""Samir Bekrić""@en;
         dbp:birthPlace ?birthPlace.
  
  ?person a dbo:Person;
          foaf:name ""Edin Dervišhalidović""@en;
          dbp:nativeName ""Edin Dervišhalidović""@en;
          dbp:birthPlace ?birthPlace.
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
827,14,val,"Give me the father of the child, that is a royalty, of the spouse, that is a royalty, of Princess Pauline of Saxe-Weimar-Eisenach.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> ?result . ?v0 <http://dbpedia.org/property/father> ?v2 . ?v2 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Princess_Pauline_of_Saxe-Weimar-Eisenach> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
SELECT ?father WHERE {
    # Step 1: Find the spouse of Princess Pauline of Saxe-Weimar-Eisenach
    <http://dbpedia.org/resource/Princess_Pauline_of_Saxe-Weimar-Eisenach> <http://dbpedia.org/ontology/spouse> ?spouse .
    
    # Step 2: Ensure the spouse is a royalty and find their children who are also royalties
    ?spouse <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
    ?child <http://dbpedia.org/ontology/parent> ?spouse ;
           <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .

    # Step 3: Find the father of these royal children
    ?child <http://dbpedia.org/property/father> ?father .
}
```",3,5,4,3,1,3,2,20,1,0,0,1.0,1.0,1.0
485,14,val,"Give me the birth place of the awardee, that is a writer and a poet, of Eric Gregory Award and entity in United Kingdom.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Poet>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Eric_Gregory_Award> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>. ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?person ?birthPlace WHERE {
  ?person <http://dbpedia.org/ontology/award> <http://dbpedia.org/resource/Eric_Gregory_Award>.
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>.
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Poet>.
  ?person <http://dbpedia.org/property/country> <http://dbpedia.org/resource/United_Kingdom>.
  ?person <http://dbpedia.org/property/birthPlace> ?birthPlace.
}
```",3,5,4,2,2,2,3,28,0,0,5,0,0.0,0
404,18,val,"Give me the child of Ernest Augustus, Crown Prince of Hanover and parent of Prince Ernest Augustus of Hanover (born 1914) and spouse of Princess Victoria Louise of Prussia.","SELECT ?result WHERE { <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Prince_Ernest_Augustus_of_Hanover_(born_1914)> . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ernest_Augustus,_Crown_Prince_of_Hanover> . }","```sparql
SELECT ?child WHERE {
  ?parent <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia>.
  ?parent <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Prince_Ernest_Augustus_of_Hanover_(1914-1987)>.
  ?parent <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Human>.
  ?parent <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/Ernest_Augustus,_Crown_Prince_of_Hanover>.
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
767,26,val,Give me the alma mater of the administration of the reference to George Kilbon Nash.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/almaMater> ?result . ?v1 <http://xmlns.com/foaf/0.1/name> ""George Kilbon Nash""@en . ?v2 <http://dbpedia.org/property/governor> ?v1 . }","```sparql
SELECT ?almaMater WHERE {
  ?admin <http://dbpedia.org/ontology/administration> ?entity .
  ?entity <http://dbpedia.org/property/reference> <http://dbpedia.org/resource/George_Kilbon_Nash> .
  ?entity <http://dbpedia.org/ontology/almaMater> ?almaMater .
}
```",3,3,4,3,1,3,3,71,0,0,6,0,0.0,0
915,11,val,"Give me the father of Lizzie Spaulding and resident of the birthplace, that is a settlement, of Stephen Verona.",SELECT ?result WHERE { <http://dbpedia.org/resource/Lizzie_Spaulding> <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Stephen_Verona> <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/residence> ?v2 . },"```sparql
SELECT ?father ?residence WHERE {
  # Step 1: Get the father of Lizzie Spaulding
  <http://dbpedia.org/resource/Lizzie_Spaulding> <http://dbpedia.org/ontology/father> ?father .

  # Step 2: Get the birthplace of Stephen Verona that is a settlement
  <http://dbpedia.org/resource/Stephen_Verona> <http://dbpedia.org/property/birthPlace> ?birthPlace .
  ?birthPlace <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement> .

  # Step 3: Check if the father resides in this birthplace
  ?father <http://dbpedia.org/property/residence> ?residence .
  FILTER (?residence = ?birthPlace)
}
```",3,4,4,2,2,3,2,20,0,0,1,0,0.0,0
617,40,val,"Give me the spouse of Laodice IV and child of the child, that is a royalty, of the successor, that is a royalty, of Antiochus II Theos and parent of Nysa (wife of Pharnaces I of Pontus).",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Antiochus_II_Theos> <http://dbpedia.org/ontology/successor> ?v2 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Nysa_(wife_of_Pharnaces_I_of_Pontus)> . <http://dbpedia.org/resource/Laodice_IV> <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://dbpedia.org/property/father> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v1 . },"```sparql
# Step 1: Find Laodice IV's spouse
SELECT ?spouse WHERE {
    <http://dbpedia.org/resource/Laodice_IV> <http://dbpedia.org/ontology/spouse> ?spouse .
}

# Step 2: Find the child of Laodice IV's spouse
SELECT DISTINCT ?child WHERE {
    ?spouse <http://dbpedia.org/ontology/child> ?child .
    FILTER(?spouse IN {<result_of_step_1>})
}

# Step 3: Ensure both Laodice IV and her spouse are royalty
SELECT DISTINCT ?child WHERE {
    ?spouse <http://dbpedia.org/ontology/child> ?child .
    <http://dbpedia.org/resource/Laodice_IV> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
    ?spouse <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
}

# Step 4: Find the successor of Antiochus II Theos who is royalty
SELECT DISTINCT ?successor WHERE {
    ?antiochus2 <http://dbpedia.org/ontology/successor> ?successor .
    ?antiochus2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
    FILTER(?antiochus2 = <http://dbpedia.org/resource/Antiochus_II_Theos>)
}

# Step 5: Identify the parent of Nysa, wife of Pharnaces I of Pontus
SELECT DISTINCT ?parent WHERE {
    ?nysa <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Pharnaces_I_of_Pontus> .
    ?nysa <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
    ?parent <http://dbpedia.org/ontology/child> ?nysa .
}

# Final query combining all conditions
SELECT DISTINCT ?finalResult WHERE {
    ?spouse <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Laodice_IV> .
    ?spouse <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
    ?child <http://dbpedia.org/ontology/child> ?grandChild .
    ?antiochus2 <http://dbpedia.org/ontology/successor> ?successor .
    ?successor <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
    ?parent <http://dbpedia.org/ontology/child> ?nysa .
    ?nysa <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Pharnaces_I_of_Pontus> .
    FILTER(?spouse = ?successor)
    FILTER(?grandChild = ?parent)
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
492,32,val,"Give me the person decedent at the work of US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite and commander in the war, that is a military conflict and an event, of Frédéric-Georges Herr.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Frédéric-Georges_Herr> <http://dbpedia.org/ontology/battle> ?v3 . ?v1 <http://dbpedia.org/property/author> ""US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite""@en . ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. }","```sparql
# Step 1: Find Joseph C. Satterthwaite's work as US Assistant Secretary of State for African Affairs
SELECT ?work WHERE {
    ?satterthwaite dbo:position ""US Assistant Secretary of State for African Affairs"" .
    ?satterthwaite dbo:office ?work .
}

# Step 2: Find the decedent at this position or related to it
SELECT ?decedent WHERE {
    ?person dbo:deathPlace ?work . # Assuming death place is linked to work, adjust if necessary
    ?person rdfs:label ""Joseph C. Satterthwaite""@en .
}

# Step 3: Identify wars that are both military conflicts and events associated with Frédéric-Georges Herr
SELECT ?war WHERE {
    ?herr dbo:commander ?war .
    ?war rdf:type <http://dbpedia.org/ontology/MilitaryConflict> .
    ?war rdf:type <http://dbpedia.org/ontology/Event> .
}

# Step 4: Determine the commander in those identified wars
SELECT ?person WHERE {
    ?war dbo:commander ?person .
    VALUES ?war { ?identifiedWars } # Replace with actual war URIs from step 3
}
```",4,6,5,2,2,3,3,71,0,0,1,0,0.0,0
838,11,val,"Give me the band of the band member, that is an artist and a musical artist, of YU Grupa and band member of Kerber.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Kerber> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/YU_Grupa> . },"```sparql
SELECT ?person ?band WHERE {
  ?person <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/YU_Grupa>.
  ?person <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/Kerber_(band)>.
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>.
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>.
  ?person <http://dbpedia.org/ontology/member> ?band.
}
```",3,5,4,2,2,3,2,20,0,0,1,0,0.0,0
659,27,val,"Give me the military force of the force, that is a societal event and an event and a military conflict, of the reference to Rutger Jan Schimmelpenninck.","SELECT ?result WHERE { ?v1 <http://xmlns.com/foaf/0.1/name> ""Rutger Jan Schimmelpenninck""@en . ?v2 <http://dbpedia.org/ontology/commander> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","```sparql
SELECT ?result WHERE {
  ?event <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>.
  ?event <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>.
  ?event <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>.
  ?event <http://dbpedia.org/property/reference> <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck>.
  ?event <http://dbpedia.org/ontology/militaryForce> ?result.
}
```",3,6,4,3,1,3,3,71,0,0,1127,0,0.0,0
767,37,val,Give me the alma mater of the administration of the reference to George Kilbon Nash and reference to .,"SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://xmlns.com/foaf/0.1/name> """"@en . ?v3 <http://dbpedia.org/property/governor> ?v0 . ?v0 <http://xmlns.com/foaf/0.1/name> ""George Kilbon Nash""@en . }","```sparql
SELECT ?almaMater WHERE {
  <http://dbpedia.org/resource/George_Kilbon_Nash> <http://dbpedia.org/ontology/administration> ?administration .
  ?administration <http://dbpedia.org/ontology/almaMater> ?almaMater .
}
```",4,4,5,3,2,3,3,71,0,0,2,0,0.0,0
994,36,val,"Give me the associated musical artist of S.A. Slayer and band member of the person born, that is a musical artist, as the persona of Don Dokken.",SELECT ?result WHERE { <http://dbpedia.org/resource/S.A._Slayer> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Don_Dokken> <http://xmlns.com/foaf/0.1/givenName> ?v3 . ?v0 <http://dbpedia.org/property/birthName> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . },"```sparql
SELECT ?person WHERE {
  ?sA_Slayer <http://dbpedia.org/ontology/associatedMusicalArtist> ?person .
  ?dokkenPerson <http://dbpedia.org/property/bornAs> ""Don Dokken"" .
  ?dokkenPerson <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
  ?person <http://dbpedia.org/ontology/memberOfBand> ?dokkenPerson .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
981,15,val,"Give me the birth place of Novia Indriani Mamuaja and entity in the region of the time zone in Salak, North Sumatra.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/timeZone> ?v0 . <http://dbpedia.org/resource/Salak,_North_Sumatra> <http://dbpedia.org/ontology/timeZone> ?v0 . <http://dbpedia.org/resource/Novia_Indriani_Mamuaja> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/country> ?v1 . }","```sparql
# Query to get the birth place of Novia Indriani Mamuaja
SELECT ?birthPlace WHERE {
  <http://dbpedia.org/resource/Novia_Indriani_Mamuaja> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
}

# Query to find entities in the region of the time zone in Salak, North Sumatra
SELECT ?entity WHERE {
  # Find the time zone for Salak, North Sumatra
  <http://dbpedia.org/resource/Salak,_North_Sumatra> <http://www.w3.org/2006/time#during> ?timeZone .
  
  # Find entities in this region
  ?entity <http://dbpedia.org/ontology/location> ?location .
  ?location <http://www.w3.org/2006/time#inTimezone> ?timeZone .
}
```",4,4,5,3,2,3,2,20,0,0,1,0,0.0,0
659,34,val,"Give me the commander in the force of the native, that is an office holder, of Kingdom of Ireland and military force of Napoleonic Wars.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Napoleonic_Wars> . ?v2 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Kingdom_of_Ireland> . ?v1 <http://dbpedia.org/ontology/commander> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
SELECT ?commander WHERE {
  ?person <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Kingdom_of_Ireland>.
  ?person a <http://dbpedia.org/ontology/OfficeHolder>.
  ?person <http://dbpedia.org/property/militaryForce> ?force.
  ?force <http://dbpedia.org/ontology/event> <http://dbpedia.org/resource/Napoleonic_Wars>.
  ?force <http://dbpedia.org/ontology/commander> ?commander.
}
```",4,5,5,3,2,3,3,71,0,0,34,0,0.0,0
184,37,val,"Give me the child of the child of the parent, that is a royalty, of Archduke Ladislaus Philipp of Austria and parent of Archduchess Ilona of Austria.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Ilona_of_Austria> . <http://dbpedia.org/resource/Archduke_Ladislaus_Philipp_of_Austria> <http://dbpedia.org/ontology/parent> ?v0 . ?v3 <http://dbpedia.org/property/father> ?v0 . },"```sparql
SELECT ?childOfChild WHERE {
  # Step 1: Identify the parent of Archduchess Ilona of Austria
  <http://dbpedia.org/resource/Archduchess_Ilona_of_Austria> <http://www.w3.org/2000/01/rdf-schema#parent> ?parent .

  # Step 2: Find the child of that parent who is a royalty
  ?parent <http://www.w3.org/2000/01/rdf-schema#child> ?royalty .
  ?royalty <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Royalty> .

  # Step 3: Determine the children of this royal individual
  ?royalty <http://www.w3.org/2000/01/rdf-schema#child> ?childOfChild .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
182,17,val,Give me the entity in Sri Lanka and war of the work of Gotabhaya Rajapaksa.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Gotabhaya_Rajapaksa> . ?v1 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Sri_Lanka> . },"```sparql
SELECT ?entity WHERE {
  ?work <http://dbpedia.org/property/work> <http://dbpedia.org/resource/Gotabhaya_Rajapaksa> .
  ?work <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/War> .
  ?entity <http://dbpedia.org/property/location> <http://dbpedia.org/resource/Sri_Lanka> .
}
```",3,3,4,2,2,2,3,28,0,0,5,0,0.0,0
161,36,val,"Give me the commander in the force, that is an event, of the figure known as El Director and military force of Rif War.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/ontology/commander> ?v0 . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Rif_War> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://xmlns.com/foaf/0.1/nick> ""El Director""@en . }","```sparql
SELECT ?commander WHERE {
  ?event <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>.
  ?event <http://dbpedia.org/ontology/militaryForce> ?militaryForce.
  ?militaryForce <http://dbpedia.org/property/militaryConflict> <http://dbpedia.org/resource/Rif_War>.
  ?militaryForce <http://dbpedia.org/ontology/commander> ?commander.
  ?figure <http://www.w3.org/2000/01/rdf-schema#label> ""El Director""@en.
  ?figure <http://dbpedia.org/property/militaryForce> ?militaryForce.
}
```",4,5,5,3,2,3,3,71,0,0,12,0,0.0,0
547,33,val,Give me the resting place of the actor of the show with Emily Richard and resting place of James Burton (Egyptologist).,SELECT ?result WHERE { <http://dbpedia.org/resource/James_Burton_(Egyptologist)> <http://dbpedia.org/ontology/restingPlace> ?result . ?v3 <http://dbpedia.org/ontology/restingPlace> ?result . ?v0 <http://dbpedia.org/property/starring> ?v3 . ?v0 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emily_Richard> . },"```sparql
# Query to find the resting place of actors from a show with Emily Richard
SELECT ?actor ?restingPlace WHERE {
  ?show dbo:starring ?actor .
  ?show dbo:castMember <http://dbpedia.org/resource/Emily_Richard> .
  ?actor dbo:deathPlace ?restingPlace .
}

# Query to find the resting place of James Burton (Egyptologist)
SELECT ?restingPlace WHERE {
  <http://dbpedia.org/resource/James_Burton_(Egyptologist)> dbo:deathPlace ?restingPlace .
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
701,40,val,Give me the parent of Henuttawy (19th dynasty) and spouse of Ramesses II and parent of the child of the spouse of Amun-her-khepeshef.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Ramesses_II> . <http://dbpedia.org/resource/Amun-her-khepeshef> <http://dbpedia.org/ontology/spouse> ?v2 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Henuttawy_(19th_dynasty)> . ?v2 <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/ontology/parent> ?result . },"```sparql
SELECT ?person WHERE {
  # Find the parent of Henuttawy (19th dynasty)
  ?henuttawy dbpedia:parent ?person .
  FILTER(STRSTARTS(LCASE(?henuttawy), ""http://dbpedia.org/resource/henuttawy_(19th_dynasty)"")) .

  # Ensure this person is the spouse of Ramesses II
  ?person dbpedia:spouse <http://dbpedia.org/resource/Ramesses_II> .

  # Check if this person is also the parent of a child whose other parent is Amun-her-khepeshef's spouse
  ?child dbpedia:parent ?person .
  ?amunHerKhepeshefSpouse dbpedia:spouse <http://dbpedia.org/resource/Amun-her-khepeshef> .
  ?child dbpedia:parent ?amunHerKhepeshefSpouse .
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
994,37,val,"Give me the band member of Don Dokken and associated musical artist of the band member, that is a band and a group and an organisation, of the band, that is an organisation, of Fredrik Thordendal.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Fredrik_Thordendal> . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Don_Dokken> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. },"```sparql
SELECT ?associatedArtist WHERE {
  # Step 1: Identify Fredrik Thordendal's band that is an organization
  ?band <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/Fredrik_Thordendal> .
  ?band <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation> .

  # Step 2: Find members of this band who are also in Don Dokken
  ?member <http://dbpedia.org/ontology/member> ?band .
  ?member <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/Don_Dokken> .

  # Step 3: Retrieve their associated musical artists, ensuring they meet the criteria
  ?member <http://dbpedia.org/property/associatedMusicalArtist> ?associatedArtist .
  ?associatedArtist <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band> .
  ?associatedArtist <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalGroup> .
  ?associatedArtist <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation> .
}
```",4,8,5,3,2,3,3,71,0,0,1,0,0.0,0
421,13,val,Give me the band member of the awardee of [[#Awards and nominations and native of Socialist Federal Republic of Yugoslavia.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://dbpedia.org/property/awards> ""[[#Awards and nominations""@en . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Socialist_Federal_Republic_of_Yugoslavia> . }","```sparql
SELECT ?bandMember WHERE {
  ?person <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Socialist_Federal_Republic_of_Yugoslavia> .
  ?person <http://dbpedia.org/ontology/award> ?award .
  ?person <http://dbpedia.org/ontology/memberOfBand> ?bandMember .
}
```",3,3,4,2,2,2,3,28,0,0,2,0,0.0,0
378,38,val,Give me the claim to fame of the commander in Great Siege of Gibraltar and war of the commander in Peninsular War.,SELECT ?result WHERE { <http://dbpedia.org/resource/Great_Siege_of_Gibraltar> <http://dbpedia.org/ontology/commander> ?v2 . <http://dbpedia.org/resource/Peninsular_War> <http://dbpedia.org/ontology/commander> ?v3 . ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/ontology/knownFor> ?result . },"```sparql
# Step 1: Get the commander of the Great Siege of Gibraltar
SELECT ?commanderGibraltar WHERE {
    <http://dbpedia.org/resource/Great_Siege_of_Gibraltar> <http://dbpedia.org/ontology/commander> ?commanderGibraltar .
}

# Step 2: Get the claim to fame for the commander from the Great Siege of Gibraltar
SELECT ?claimToFameGibraltar WHERE {
    ?commanderGibraltar <http://dbpedia.org/ontology/knownFor> ?claimToFameGibraltar .
}

# Step 3: Get the commander of the Peninsular War
SELECT ?commanderPeninsularWar WHERE {
    <http://dbpedia.org/resource/Peninsular_War> <http://dbpedia.org/ontology/commander> ?commanderPeninsularWar .
}

# Step 4: Get the war associated with this second commander
SELECT ?war WHERE {
    ?commanderPeninsularWar <http://dbpedia.org/ontology/battle> ?war .
}

# Step 5: Get the claim to fame for both commanders
SELECT ?claimToFameGibraltar, ?claimToFamePeninsularWar WHERE {
    ?commanderGibraltar <http://dbpedia.org/ontology/knownFor> ?claimToFameGibraltar .
    ?commanderPeninsularWar <http://dbpedia.org/ontology/knownFor> ?claimToFamePeninsularWar .
}
```",4,4,5,2,2,3,3,71,0,0,2,0,0.0,0
626,13,val,"Give me the commander in the force, that is a military conflict, of the commander in Battle of Paris (1814).",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/commander> ?v0 . <http://dbpedia.org/resource/Battle_of_Paris_(1814)> <http://dbpedia.org/ontology/commander> ?v0 . },"```sparql
SELECT ?commander WHERE {
  ?battle <http://dbpedia.org/ontology/commander> ?v1 .
  ?v1 <http://dbpedia.org/property/battle> ?force .
  ?force <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
  ?force <http://dbpedia.org/ontology/commander> ?commander .
  FILTER(?battle = <http://dbpedia.org/resource/Battle_of_Paris_(1814)>)
}
```",3,4,4,3,1,3,2,20,0,0,364,0,0.0,0
356,11,val,Give me the player in the successor of 2014 Sacramento Republic FC season and team of Mark Briggs.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Mark_Briggs> . <http://dbpedia.org/resource/2014_Sacramento_Republic_FC_season> <http://dbpedia.org/ontology/successor> ?v2 . ?v2 <http://dbpedia.org/ontology/team> ?result . },"```sparql
# Find the successor season of the 2014 Sacramento Republic FC season
SELECT ?successorSeason WHERE {
    <http://dbpedia.org/resource/2014_Sacramento_Republic_FC_season> <http://dbpedia.org/ontology/successor> ?successorSeason .
}

# Find the team associated with Mark Briggs
SELECT ?team WHERE {
    <http://dbpedia.org/resource/Mark_Briggs_(footballer)> <http://dbpedia.org/property/team> ?team .
}

# Find players in both the successor season and Mark Briggs' team
SELECT DISTINCT ?player WHERE {
    # Players in the successor season
    ?successorSeason <http://dbpedia.org/ontology/player> ?player .

    # Players in Mark Briggs' team
    ?team <http://dbpedia.org/ontology/player> ?player .
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
9,41,val,"Give me the figure known as QUB and alma mater of the mayor, that is a politician, of Northern Ireland Forum and alma mater of the awardee of Royal Medal.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Medal> . <http://dbpedia.org/resource/Northern_Ireland_Forum> <http://dbpedia.org/property/leader> ?v2 . ?v4 <http://dbpedia.org/ontology/almaMater> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://dbpedia.org/property/nickname> ""QUB""@en . }","```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Queen's_University_Belfast> .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .
  ?person <http://dbpedia.org/property/mayorOf> <http://dbpedia.org/resource/Northern_Ireland_Forum> .
  ?person <http://dbpedia.org/ontology/receivedAward> <http://dbpedia.org/resource/Royal_Medal> .
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
54,33,val,Give me the parent of the child of the parent of Thado Minsaw of Prome and child of Thinkhaya of Pagan.,SELECT ?result WHERE { <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?result . ?v3 <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> . },"```sparql
# Step 1: Find Thado Minsaw of Prome's parent
SELECT ?thadoParent WHERE {
    <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> <http://dbpedia.org/ontology/father> ?thadoParent .
}

# Step 2: Find the child of Thado Minsaw's parent (another person)
SELECT ?childOfThadoParent WHERE {
    ?thadoParent <http://dbpedia.org/ontology/child> ?childOfThadoParent .
}

# Step 3: Find Thinkhaya of Pagan and his child
SELECT ?thinkhayaChild WHERE {
    <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?thinkhayaChild .
}

# Step 4: Find the parent of Thinkhaya's child
SELECT ?parentOfThinkhayaChild WHERE {
    ?thinkhayaChild <http://dbpedia.org/ontology/father> ?parentOfThinkhayaChild .
}
```

Note: The actual properties (`father`, `child`) might differ based on the dataset, and additional filtering or joins may be necessary if multiple results are returned at any step.",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
16,34,val,Give me the person born as Georgeanne Marie Rice and spouse of the person born as the birth name of Ted McGinley.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/birthName> ""Georgeanne Marie Rice""@en . ?v1 <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/property/birthName> ?v2 . }","```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/birthName> ""Georgeanne Marie Rice"" .
  ?ted <http://dbpedia.org/ontology/birthName> ?birthName .
  FILTER(?birthName = ""Ted McGinley"") .
  ?ted <http://dbpedia.org/property/spouse> ?person .
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
356,14,val,"Give me the team of the native, that is a soccer player and a soccer manager, of the birth place, that is English and a settlement, of Gary Williams (footballer, born 1960).","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v0 <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/manager> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Gary_Williams_(footballer,_born_1960)> <http://dbpedia.org/ontology/birthPlace> ?v2 . }","```sparql
SELECT ?team WHERE {
    # Step 1: Identify the birthplace of Gary Williams that is an English settlement
    <http://dbpedia.org/resource/Gary_Williams_(footballer,_born_1960)> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
    ?birthPlace <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement> ;
                <http://dbpedia.org/property/country> <http://dbpedia.org/resource/England> .

    # Step 2: Find a person native to this birthplace who is both a soccer player and a soccer manager
    ?person <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/English_people> ;
            <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
    ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer> , <http://dbpedia.org/ontology/SoccerManager> .

    # Step 3: Find the team associated with this person
    ?person <http://dbpedia.org/property/team> ?team .
}
```",3,7,4,3,1,3,2,20,0,0,46,0,0.0,0
617,35,val,"Give me the parent of the child of Antiochus (son of Antiochus III the Great) and child of the child, that is a royalty, of Seleucus II Callinicus.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v2 . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seleucus_II_Callinicus> . <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/child> ?v1 . },"```sparql
SELECT ?parentOfChild ?grandParent
WHERE {
  # Step 1: Find Antiochus (son of Antiochus III the Great) and his child
  ?antiochus dbp:father <http://dbpedia.org/resource/Antiochus_III_the_Great> .
  ?child dbp:parent ?antiochus .

  # Step 2: Find the parent of that child
  ?parentOfChild dbp:child ?child .

  # Step 3: Identify Seleucus II Callinicus and his royal child
  ?seleucusII <http://dbpedia.org/ontology/offspring> ?royalChild .
  FILTER(?seleucusII = <http://dbpedia.org/resource/Seleucus_II_Callinicus>)
  FILTER(CONTAINS(LCASE(STR(?royalChild)), ""royalty""))

  # Step 4: Find the grandchild of Seleucus II Callinicus who is royalty
  ?grandChild dbp:parent ?royalChild .

  # Step 5: Identify the parent of this grandchild
  ?grandParent dbp:child ?grandChild .
}
```",4,5,5,2,2,3,3,71,0,0,2,0,0.0,0
232,39,val,"Give me the native of the residence, that is a settlement and British, of the native, that is a politician and an office holder, of France and actor of Dog Soldiers (film).",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/France> . ?v0 <http://dbpedia.org/property/residence> ?v1 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . <http://dbpedia.org/resource/Dog_Soldiers_(film)> <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
# Step 1: Identify the actor of ""Dog Soldiers (film)"" who is also a politician and office holder from France.
SELECT ?actor WHERE {
    ?film rdf:type dbo:Film .
    ?film dbo:title ""Dog Soldiers"" .
    ?film dbo:starring ?actor .
    ?actor rdf:type dbo:Actor .
    ?actor dbo:nationality dbr:France .
    ?actor rdf:type dbo:Politician .
    ?actor rdf:type dbo:OfficeHolder .
}

# Step 2: Determine their native place.
SELECT ?nativePlace WHERE {
    ?actor dbo:nativePlace ?nativePlace .
}

# Step 3: Find out where they reside, ensuring that the residence is a settlement in Britain.
SELECT ?residence WHERE {
    ?actor dbo:residence ?residence .
    ?residence rdf:type dbo:Settlement .
    ?residence dbo:country dbr:United_Kingdom .
}

# Step 4: Identify the native of this British settlement.
SELECT ?nativeOfResidence WHERE {
    ?residence dbo:native ?nativeOfResidence .
}
```",4,8,5,3,2,3,3,71,0,0,1,0,0.0,0
626,11,val,"Give me the awardee of Order of St. Andrew and commander in the force, that is a military conflict, of Alexander I of Russia.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Alexander_I_of_Russia> . ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Order_of_St._Andrew> . },"```sparql
SELECT ?awardee WHERE {
  ?awardee <http://dbpedia.org/ontology/receivedAward> <http://dbpedia.org/resource/Order_of_St._Andrew>.
  ?conflict <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>.
  <http://dbpedia.org/resource/Alexander_I_of_Russia> <http://dbpedia.org/ontology/commander> ?conflict.
  ?awardee <http://dbpedia.org/ontology/battleCommanded> ?conflict.
}
```",3,4,4,2,2,3,2,20,0,0,9,0,0.0,0
547,22,val,Give me the resting place of James Burton (Egyptologist) and resting place of the awardee of Knight Grand Cross of the Order of St Michael and St George.,SELECT ?result WHERE { <http://dbpedia.org/resource/James_Burton_(Egyptologist)> <http://dbpedia.org/ontology/restingPlace> ?result . ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_St_Michael_and_St_George> . },"```sparql
# Query to find the resting place of James Burton (Egyptologist)
SELECT ?restingPlace WHERE {
  <http://dbpedia.org/resource/James_Burton_(Egyptologist)> dbo:finalRestingPlace ?restingPlace .
}

UNION

# Query to find the resting places of awardees of Knight Grand Cross of the Order of St Michael and St George
SELECT ?person ?restingPlace WHERE {
  ?person dbo:honoraryTitle <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_St_Michael_and_St_George> .
  ?person dbo:finalRestingPlace ?restingPlace .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
701,42,val,Give me the parent of Henuttawy (19th dynasty) and spouse of the father of Merneptah and parent of the child of Nefertari.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Merneptah> <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Henuttawy_(19th_dynasty)> . <http://dbpedia.org/resource/Nefertari> <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/ontology/spouse> ?v1 . },"SELECT ?person WHERE {
  ?henuttawy <http://dbpedia.org/ontology/birthParent> ?person .
  FILTER (?henuttawy = <http://dbpedia.org/resource/Henuttawy_(19th_dynasty)>)
  
  ?merneptah <http://dbpedia.org/ontology/father> ?ramessesII .
  ?ramessesII <http://dbpedia.org/ontology/spouse> ?person .
  
  ?nephertariChild <http://dbpedia.org/ontology/birthParent> ?person .
  ?nephertariChild <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/Nefertari> .
}",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
959,18,val,Give me the member of University of Tsukuba and native of Japan and manager of 2013 Júbilo Iwata season.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Japan> . ?result <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/University_of_Tsukuba> . <http://dbpedia.org/resource/2013_Júbilo_Iwata_season> <http://dbpedia.org/ontology/manager> ?result . },"```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/University_of_Tsukuba> .
  ?person <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Japan> .
  ?person <http://dbpedia.org/ontology/teamManaged> <http://dbpedia.org/resource/2013_Júbilo_Iwata_season> .
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
404,20,val,"Give me the spouse of Princess Victoria Louise of Prussia and parent of the child, that is a royalty, of Ernest Augustus, Duke of Brunswick.","SELECT ?result WHERE { <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
SELECT ?spouse ?child WHERE {
  # Step 1: Identify the spouse of Princess Victoria Louise of Prussia
  <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?spouse .

  # Step 2: Find their children who are royalty
  ?child <http://dbpedia.org/ontology/birthParent> ?spouse .
  ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .

  # Step 3: Determine which of these royal children is a parent to Ernest Augustus, Duke of Brunswick
  ?child <http://dbpedia.org/ontology/birthChild> <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> .
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
232,26,val,"Give me the actor of the claim to fame, that is a film and a military conflict, of the professional in Actor, narrator and producer.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/occupation> ""Actor, narrator and producer""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/starring> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://dbpedia.org/ontology/knownFor> ?v2 . }","```sparql
SELECT ?actor WHERE {
  ?person <http://dbpedia.org/ontology/profession> <http://dbpedia.org/resource/Actor> .
  ?person <http://dbpedia.org/ontology/profession> <http://dbpedia.org/resource/Narrator> .
  ?person <http://dbpedia.org/ontology/profession> <http://dbpedia.org/resource/Producer> .
  
  ?claimToFame <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film> .
  ?claimToFame <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
  
  ?person <http://dbpedia.org/property/knownFor> ?claimToFame .
  
  ?claimToFame <http://dbpedia.org/ontology/starring> ?actor .
}
```",3,5,4,3,1,3,3,71,0,0,3,0,0.0,0
281,21,val,Give me the war of the awardee of Knight Grand Cross of the Order of the Bath and war of New Zealand Army.,SELECT ?result WHERE { <http://dbpedia.org/resource/New_Zealand_Army> <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_the_Bath> . ?v1 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
SELECT ?war WHERE {
  ?person <http://dbpedia.org/ontology/honour> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_the_Bath> .
  ?person <http://dbpedia.org/ontology/battle> ?war .
  ?nzArmy <http://dbpedia.org/ontology/battle> ?war .
  FILTER EXISTS { ?nzArmy <http://www.w3.org/2000/01/rdf-schema#label> ""New Zealand Army"" }
}
```",3,3,4,2,2,3,3,71,0,0,9,0,0.0,0
488,41,val,"Give me the administration of Emperor Go-Yōzei and birth place of the commander in Boshin War and death place of the father, that is a politician, of Yūki Hideyasu.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Emperor_Go-Yōzei> . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Boshin_War> <http://dbpedia.org/ontology/commander> ?v2 . ?v4 <http://dbpedia.org/ontology/deathPlace> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Yūki_Hideyasu> <http://dbpedia.org/property/father> ?v4 . },"```sparql
SELECT ?administration ?birthPlace ?deathPlace WHERE {
  # Part 1: Administration of Emperor Go-Yōzei
  <http://dbpedia.org/resource/Emperor_Go-Yōzei> <http://dbpedia.org/ontology/administration> ?administration .

  # Part 2: Birth Place of Commander in Boshin War
  ?commander <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Boshin_War> .
  ?commander <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryPerson> .
  ?commander <http://dbpedia.org/property/birthPlace> ?birthPlace .

  # Part 3: Death Place of Father of Yūki Hideyasu
  <http://dbpedia.org/resource/Yūki_Hideyasu> <http://dbpedia.org/ontology/father> ?father .
  ?father <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .
  ?father <http://dbpedia.org/property/deathPlace> ?deathPlace .
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
767,31,val,"Give me the entity in the administration, that is a settlement, of the writer of Where It's At (Dustin Lynch album) and alma mater of Carl L. Nippert.",SELECT ?result WHERE { <http://dbpedia.org/resource/Where_It's_At_(Dustin_Lynch_album)> <http://dbpedia.org/property/writer> ?v1 . <http://dbpedia.org/resource/Carl_L._Nippert> <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://dbpedia.org/ontology/state> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://dbpedia.org/property/leaderParty> ?v1 . },"```sparql
# Find the writer of ""Where It's At"" (Dustin Lynch album)
SELECT ?writer WHERE {
  <http://dbpedia.org/resource/Where_It%27s_At_(Dustin_Lynch_album)> dbo:lyricist ?writer .
}

# Find the alma mater of Carl L. Nippert
SELECT ?almaMater WHERE {
  <http://dbpedia.org/resource/Carl_L._Nippert> dbo:almaMater ?almaMater .
}

# Assuming we have identified the writer and almaMater, find their administration that is a settlement
SELECT DISTINCT ?entity WHERE {
  VALUES (?person) { (<writer_uri>) (<almaMater_uri>) } # Replace with actual URIs found above

  ?person dbo:administration ?admin .
  ?admin rdf:type <http://dbpedia.org/ontology/Settlement> .

  ?entity dbo:administration ?admin .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
994,34,val,Give me the band member of Don Dokken and associated musical artist of the associated musical artist of the reference to Watchtower.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Don_Dokken> . ?v3 <http://xmlns.com/foaf/0.1/name> ""Watchtower""@en . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
SELECT DISTINCT ?bandMember ?associatedArtist WHERE {
  # Step 1: Find all band members of Don Dokken
  <http://dbpedia.org/resource/Don_Dokken> <http://dbpedia.org/ontology/member> ?bandMember .

  # Step 2: For each band member, find their associated musical artists
  ?bandMember <http://dbpedia.org/property/associatedMusicalArtist> ?associatedArtist .

  # Step 3: Check if any of these associated artists have a reference to Watchtower
  OPTIONAL {
    ?associatedArtist <http://dbpedia.org/ontology/reference> <http://dbpedia.org/resource/Watchtower_(band)> .
  }
  
  FILTER EXISTS { ?associatedArtist <http://dbpedia.org/ontology/reference> <http://dbpedia.org/resource/Watchtower_(band)> }
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
251,12,val,Give me the death place of Laura Mancinelli and location of Battle of Marengo and administration of Forza Italia (2013).,SELECT ?result WHERE { <http://dbpedia.org/resource/Laura_Mancinelli> <http://dbpedia.org/ontology/deathPlace> ?result . ?result <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Forza_Italia_(2013)> . <http://dbpedia.org/resource/Battle_of_Marengo> <http://dbpedia.org/ontology/place> ?result . },"```sparql
SELECT ?deathPlace ?battleLocation ?administration WHERE {
  <http://dbpedia.org/resource/Laura_Mancinelli> <http://dbpedia.org/ontology/deathPlace> ?deathPlace .
  <http://dbpedia.org/resource/Battle_of_Marengo> <http://dbpedia.org/ontology/location> ?battleLocation .
  <http://dbpedia.org/resource/Forza_Italia_(2013)> <http://dbpedia.org/property/administration> ?administration .
}
```",3,3,4,1,3,2,3,28,0,0,1,0,0.0,0
659,33,val,"Give me the commander in the war, that is an event and a military conflict, of the figure known, that is a military unit and an organisation, as 'Polish Horse' and commander in German campaign of 1813.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/German_campaign_of_1813> <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://dbpedia.org/property/nickname> ""'Polish Horse'""@en . ?v0 <http://dbpedia.org/ontology/battle> ?v3 . }","```sparql
SELECT ?commander WHERE {
    ?figure rdfs:label ""Polish Horse""@en .
    ?figure dbo:knownFor ?unit .
    ?unit rdf:type dbo:MilitaryUnit ;
          dbo:commander ?commander .
    
    ?campaign dbo:commander ?figure .
    ?campaign rdfs:label ""German campaign of 1813""@en .

    ?war rdf:type dbo:MilitaryConflict, dbo:Event ;
         dbo:commander ?commander .
}
```",4,8,5,3,2,3,3,71,0,0,30,0,0.0,0
547,42,val,Give me the resting place of the child of James Burton (property developer) and resting place of the awardee of Knight Grand Cross of the Order of St Michael and St George and resting place of Simon Cadell.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_St_Michael_and_St_George> . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/James_Burton_(property_developer)> <http://dbpedia.org/ontology/child> ?v2 . <http://dbpedia.org/resource/Simon_Cadell> <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
# Query for the resting place of the child of James Burton (property developer)
SELECT ?childRestingPlace WHERE {
  ?person <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/James_Burton_(property_developer)> .
  ?person <http://dbpedia.org/ontology/deathPlace> ?childRestingPlace .
}

UNION

# Query for the resting place of an awardee of Knight Grand Cross of the Order of St Michael and St George
SELECT ?awardeeRestingPlace WHERE {
  ?person <http://dbpedia.org/property/honours> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_St_Michael_and_St_George> .
  ?person <http://dbpedia.org/ontology/deathPlace> ?awardeeRestingPlace .
}

UNION

# Query for the resting place of Simon Cadell
SELECT ?cadellRestingPlace WHERE {
  <http://dbpedia.org/resource/Simon_Cadell> <http://dbpedia.org/ontology/deathPlace> ?cadellRestingPlace .
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
9,29,val,"Give me the alma mater of John Alderdice, Baron Alderdice and alma mater of the awardee of Royal Medal and figure known as QUB.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/almaMater> ?result . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Medal> . ?result <http://dbpedia.org/property/nickname> ""QUB""@en . <http://dbpedia.org/resource/John_Alderdice,_Baron_Alderdice> <http://dbpedia.org/ontology/almaMater> ?result . }","```sparql
SELECT DISTINCT ?almaMater WHERE {
  # Alma mater of John Alderdice, Baron Alderdice
  <http://dbpedia.org/resource/John_Alderdice,_Baron_Alderdice> <http://dbpedia.org/ontology/almaMater> ?almaMater .

  # Alma mater of an awardee of the Royal Medal
  ?awardee <http://dbpedia.org/ontology/almaMater> ?almaMater .
  ?awardee <http://dbpedia.org/property/award> <http://dbpedia.org/resource/Royal_Medal> .

  # Alma mater associated with QUB (Queen's University Belfast)
  ?almaMater <http://www.w3.org/2000/01/rdf-schema#label> ""Queen's University Belfast""@en .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
9,30,val,"Give me the alma mater of Allen Hill (scientist) and alma mater of John Alderdice, Baron Alderdice and figure known as the nickname of Queen's University Belfast.","SELECT ?result WHERE { <http://dbpedia.org/resource/Queen's_University_Belfast> <http://dbpedia.org/property/nickname> ?v1 . <http://dbpedia.org/resource/John_Alderdice,_Baron_Alderdice> <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://dbpedia.org/property/nickname> ?v1 . <http://dbpedia.org/resource/Allen_Hill_(scientist)> <http://dbpedia.org/ontology/almaMater> ?result . }","```sparql
SELECT DISTINCT ?almaMater WHERE {
  # Alma mater for Allen Hill (scientist)
  <http://dbpedia.org/resource/Allen_Hill_(scientist)> <http://dbpedia.org/ontology/almaMater> ?almaMater1 .
  
  # Alma mater for John Alderdice, Baron Alderdice
  <http://dbpedia.org/resource/John_Alderdice,_Baron_Alderdice> <http://dbpedia.org/ontology/almaMater> ?almaMater2 .

  # Nickname of Queen's University Belfast
  <http://dbpedia.org/resource/Queen%27s_University_Belfast> <http://dbpedia.org/property/nickname> ?nickname .
  
  # Ensure the alma mater is the same for both individuals and matches the nickname
  FILTER (?almaMater1 = ?almaMater2)
  BIND(?almaMater1 AS ?almaMater)

  OPTIONAL {
    ?almaMater <http://dbpedia.org/property/nickname> ?nickname .
    FILTER(?nickname = ?nickname) # Ensure the nickname matches
  }
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
492,20,val,"Give me the person decedent at French Algeria and commander in the war, that is a military conflict and an event, of Frédéric-Georges Herr.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Frédéric-Georges_Herr> <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/French_Algeria> . },"```sparql
SELECT ?person WHERE {
  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>.
  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>.
  <http://dbpedia.org/resource/Frédéric-Georges_Herr> <http://dbpedia.org/ontology/commander> ?war.
  ?person <http://dbpedia.org/property/decedentAt> <http://dbpedia.org/resource/French_Algeria>.
  ?person <http://dbpedia.org/ontology/commander> ?war.
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
9,18,val,"Give me the figure known as QUB and alma mater of John Alderdice, Baron Alderdice and alma mater of Allen Hill (scientist).","SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ""QUB""@en . <http://dbpedia.org/resource/John_Alderdice,_Baron_Alderdice> <http://dbpedia.org/ontology/almaMater> ?result . <http://dbpedia.org/resource/Allen_Hill_(scientist)> <http://dbpedia.org/ontology/almaMater> ?result . }","```sparql
SELECT ?university WHERE {
  ?university rdfs:label ""Queen's University Belfast""@en .
  OPTIONAL { <http://dbpedia.org/resource/John_Alderdice,_Baron_Alderdice> dbo:almaMater ?university . }
  OPTIONAL { <http://dbpedia.org/resource/Allen_Hill_(scientist)> dbo:almaMater ?university . }
}
```",3,3,4,1,3,3,3,71,1,1,0,0.5,1.0,0.6666666666666666
378,29,val,"Give me the claim to fame of Louis des Balbes de Berton de Crillon, 1st Duke of Mahón and war of the commander in Peninsular War and war of Carl Pontus Gahn.","SELECT ?result WHERE { <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Louis_des_Balbes_de_Berton_de_Crillon,_1st_Duke_of_Mahón> <http://dbpedia.org/ontology/knownFor> ?result . ?v3 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Peninsular_War> <http://dbpedia.org/ontology/commander> ?v3 . }","```sparql
# Query 1: Claim to fame for Louis des Balbes de Berton de Crillon, 1st Duke of Mahón
SELECT ?claimToFame WHERE {
    <http://dbpedia.org/resource/Louis_des_Balbes_de_Berton_de_Crillon,_1st_Duke_of_Mah%C3%B3n> <http://dbpedia.org/ontology/knownFor> ?claimToFame .
}

# Query 2: Common war of the commander in Peninsular War and Carl Pontus Gahn
SELECT DISTINCT ?commonWar WHERE {
    # Find the commander of the Peninsular War
    ?peninsularCommander <http://dbpedia.org/ontology/commander> ?peninsularWar .
    FILTER(STRSTARTS(LCASE(?peninsularWar), ""peninsular war""))

    # Wars associated with Carl Pontus Gahn
    ?carlGahn <http://dbpedia.org/ontology/battle> ?gahnWar .

    # Find common wars
    VALUES (?commonWar) { ?peninsularWar ?gahnWar }
}
```",4,4,5,2,3,3,3,71,0,0,2,0,0.0,0
10,15,val,"Give me the associated musical artist of the person born, that is an artist, as Matt Colton and professional in .","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> """"@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://dbpedia.org/property/birthName> ""Matt Colton""@en . }","```sparql
SELECT ?associatedArtist WHERE {
  ?person <http://dbpedia.org/ontology/birthName> ""Matt Colton"" .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist> .
  OPTIONAL { ?person <http://dbpedia.org/ontology/profession> ?profession . FILTER regex(?profession, ""music"", ""i"") }
  ?association <http://dbpedia.org/ontology/associatedMusicalArtist> ?associatedArtist .
  ?association <http://www.w3.org/1999/02/22-rdf-syntax-ns#subject> ?person .
}
```",3,4,4,2,2,2,3,28,0,0,2,0,0.0,0
378,39,val,"Give me the war of Joaquín Blake and claim to fame of the commander in the war, that is a military conflict and a societal event and an event, of Thomas Trigge.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Joaquín_Blake> <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/ontology/commander> ?v1 . <http://dbpedia.org/resource/Thomas_Trigge> <http://dbpedia.org/ontology/battle> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/knownFor> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
SELECT ?war ?claimToFame WHERE {
  # Step 1: Find the war related to Joaquín Blake
  <http://dbpedia.org/resource/Joaqu%C3%ADn_Blake> <http://dbpedia.org/ontology/battle> ?war .
  
  # Step 2: Identify the commander of that war
  ?war <http://dbpedia.org/ontology/commander> ?commander .

  # Step 3: Retrieve the claim to fame of this commander
  ?commander <http://dbpedia.org/ontology/knownFor> ?claimToFame .
  
  # Step 4: Find a military conflict and societal event associated with Thomas Trigge
  ?event <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> ;
         <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent> ;
         <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event> .
  ?event <http://dbpedia.org/property/personInvolved> <http://dbpedia.org/resource/Thomas_Trigge> .
}
```",4,7,5,3,2,3,3,71,0,0,2,0,0.0,0
994,18,val,Give me the associated musical artist of Red Tide (band) and band member of Don Dokken and associated musical artist of S.A. Slayer.,SELECT ?result WHERE { <http://dbpedia.org/resource/S.A._Slayer> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Red_Tide_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Don_Dokken> . },"```sparql
# Step 1: Find band members or associated artists of Red Tide (band)
SELECT ?person WHERE {
    <http://dbpedia.org/resource/Red_Tide_(band)> <http://dbpedia.org/ontology/member> ?person .
}

UNION

SELECT ?person WHERE {
    <http://dbpedia.org/resource/Red_Tide_(band)> <http://dbpedia.org/property/associatedMusicalArtist> ?person .
}

# Step 2: Find band members of Don Dokken
SELECT ?person WHERE {
    <http://dbpedia.org/resource/Don_Dokken> <http://dbpedia.org/ontology/member> ?person .
}

UNION

SELECT ?person WHERE {
    <http://dbpedia.org/resource/Don_Dokken> <http://dbpedia.org/property/bandMember> ?person .
}

# Step 3: Find common individuals between Red Tide (band) and Don Dokken
SELECT DISTINCT ?commonPerson WHERE {
    {
        <http://dbpedia.org/resource/Red_Tide_(band)> <http://dbpedia.org/ontology/member> ?commonPerson .
    }
    UNION
    {
        <http://dbpedia.org/resource/Red_Tide_(band)> <http://dbpedia.org/property/associatedMusicalArtist> ?commonPerson .
    }

    {
        <http://dbpedia.org/resource/Don_Dokken> <http://dbpedia.org/ontology/member> ?commonPerson .
    }
    UNION
    {
        <http://dbpedia.org/resource/Don_Dokken> <http://dbpedia.org/property/bandMember> ?commonPerson .
    }
}

# Step 4: Find associated musical artist(s) of S.A. Slayer
SELECT ?artist WHERE {
    <http://dbpedia.org/resource/S._A._Slayer> <http://dbpedia.org/ontology/associatedMusicalArtist> ?artist .
}

# Step 5: Check if there is a match between the common individual and associated musical artist(s) of S.A. Slayer
SELECT DISTINCT ?commonPerson WHERE {
    {
        {
            <http://dbpedia.org/resource/Red_Tide_(band)> <http://dbpedia.org/ontology/member> ?commonPerson .
        }
        UNION
        {
            <http://dbpedia.org/resource/Red_Tide_(band)> <http://dbpedia.org/property/associatedMusicalArtist> ?commonPerson .
        }

        {
            <http://dbpedia.org/resource/Don_Dokken> <http://dbpedia.org/ontology/member> ?commonPerson .
        }
        UNION
        {
            <http://dbpedia.org/resource/Don_Dokken> <http://dbpedia.org/property/bandMember> ?commonPerson .
        }
    }

    {
        <http://dbpedia.org/resource/S._A._Slayer> <http://dbpedia.org/ontology/associatedMusicalArtist> ?commonPerson .
    }
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
783,12,val,"Give me the associated musical artist of Appietus and band member of the person born, that is an artist and a musical artist, as Priscilla Opoku-Kwarteng.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://dbpedia.org/property/birthName> ""Priscilla Opoku-Kwarteng""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . <http://dbpedia.org/resource/Appietus> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Appietus> .
  ?bandMember <http://dbpedia.org/property/memberOfBand> ?person .
  ?priscilla <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> ;
             <http://dbpedia.org/ontology/birthName> ""Priscilla Opoku-Kwarteng"" .
  ?bandMember <http://dbpedia.org/property/memberOfBand> ?priscilla .
}
```",3,5,4,2,2,3,2,20,0,0,1,0,0.0,0
485,19,val,"Give me the birth place of Thomas Warner (poet) and entity in the region, that is a country, of Western European Time and entity in Nottinghamshire.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Nottinghamshire> . <http://dbpedia.org/resource/Thomas_Warner_(poet)> <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Western_European_Time> . ?result <http://dbpedia.org/ontology/country> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
# Query for birth place of Thomas Warner (poet)
SELECT ?birthPlace WHERE {
  <http://dbpedia.org/resource/Thomas_Warner_(poet)> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
}

# Query for entity in region, country of Western European Time
SELECT DISTINCT ?country WHERE {
  ?region <http://www.w3.org/2006/time#during> ?timeZone .
  ?timeZone <http://dbpedia.org/property/name> ""Western European Time"" .
  ?region <http://dbpedia.org/ontology/country> ?country .
}

# Query for entity in Nottinghamshire
SELECT DISTINCT ?entity WHERE {
  ?entity <http://www.w3.org/2006/time#during> ?timeZone .
  ?timeZone <http://dbpedia.org/property/name> ""Western European Time"" .
  ?entity <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Nottinghamshire> .
}
```",4,5,5,2,3,2,3,28,0,0,1,0,0.0,0
427,37,val,Give me the party of the father of the alumnus of Massachusetts Institute of Technology and party of Romano Prodi.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/ontology/party> ?result . ?v0 <http://dbpedia.org/property/father> ?v3 . ?v0 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Massachusetts_Institute_of_Technology> . },"```sparql
SELECT ?fatherParty ?prodiParty WHERE {
  # Part 1: Find the father's party of an MIT alumnus
  ?alumnus dbo:almaMater dbr:Massachusetts_Institute_of_Technology .
  ?alumnus foaf:parent ?father .
  ?father dbo:party ?fatherParty .

  UNION

  # Part 2: Find Romano Prodi's party
  dbr:Romano_Prodi dbo:party ?prodiParty .
}
```",4,4,5,3,2,3,3,71,0,0,3,0,0.0,0
378,24,val,"Give me the war of the commander in Peninsular War and claim to fame of Louis des Balbes de Berton de Crillon, 1st Duke of Mahón.","SELECT ?result WHERE { <http://dbpedia.org/resource/Louis_des_Balbes_de_Berton_de_Crillon,_1st_Duke_of_Mahón> <http://dbpedia.org/ontology/knownFor> ?result . ?v2 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Peninsular_War> <http://dbpedia.org/ontology/commander> ?v2 . }","```sparql
SELECT ?result WHERE {
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>.
  <http://dbpedia.org/resource/Peninsular_War> <http://dbpedia.org/property/commander> ?v1.
  ?v1 <http://dbpedia.org/property/battle> ?result.
  <http://dbpedia.org/resource/Louis_des_Balbes_de_Berton_de_Crillon,_1st_Duke_of_Mahón> <http://dbpedia.org/ontology/knownFor> ?result.
}
```",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
617,11,val,"Give me the child of the child, that is a royalty, of Boleslaus I, Duke of Bohemia and parent of Mieszko II Lambert.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/child> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Boleslaus_I,_Duke_of_Bohemia> . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Mieszko_II_Lambert> . }","```sparql
SELECT ?grandchild WHERE {
  ?parent <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Mieszko_II_Lambert> .
  ?boleslausChild <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Human> ;
                  <http://dbpedia.org/property/parent> <http://dbpedia.org/resource/Boleslaus_I,_Duke_of_Bohemia> ;
                  <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?parent .
  ?boleslausChild <http://dbpedia.org/ontology/spouse> ?parent .
  ?grandchild <http://dbpedia.org/property/parent> ?boleslausChild ;
               <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
}
```",3,4,4,2,2,3,2,20,0,0,1,0,0.0,0
659,22,val,"Give me the military force of the force, that is a societal event and an event and a military conflict, of Rutger Jan Schimmelpenninck and commander in German campaign of 1813.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/German_campaign_of_1813> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
SELECT ?result WHERE {
    ?conflict <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>.
    ?conflict <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>.
    ?conflict <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>.
    <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> <http://dbpedia.org/property/force> ?conflict.
    ?campaign <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck>.
    ?campaign <http://www.w3.org/2000/01/rdf-schema#label> ""German campaign of 1813""@en.
    ?conflict <http://dbpedia.org/ontology/militaryForce> ?result.
}
```",3,6,4,2,2,3,3,71,0,0,7,0,0.0,0
281,37,val,"Give me the war of New Zealand Army and entity in the birth place, that is a country, of the leader, that is a politician, of 1962 New South Wales state election.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://dbpedia.org/ontology/birthPlace> ?v3 . ?result <http://dbpedia.org/ontology/place> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/New_Zealand_Army> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/1962_New_South_Wales_state_election> <http://dbpedia.org/property/leader> ?v0 . },"```sparql
SELECT ?war WHERE {
    # Step 1: Identify the leader of the 1962 NSW state election who is a politician
    ?election dbpedia-owl:electionDate ?date .
    FILTER (YEAR(?date) = 1962 && CONTAINS(STR(?election), ""New South Wales"")).
    ?leader dbpedia-owl:officeHolder ?position .
    ?position dbpedia-owl:office ?office .
    FILTER(CONTAINS(LCASE(STR(?office)), ""new south wales state election leader"")).

    # Step 2: Determine the birthplace country of that leader
    ?leader foaf:birthPlace ?birthPlace .
    ?birthPlace dbpedia-owl:country ?country .

    # Step 3: Find an entity in that birthplace country
    ?entity dbpedia-owl:country ?country .

    # Step 4: Identify wars involving both the New Zealand Army and the identified entity
    ?war dbpedia-owl:participatingMilitaryUnit <http://dbpedia.org/resource/New_Zealand_Army> .
    ?war dbpedia-owl:participatingMilitaryUnit ?entity .
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
378,37,val,"Give me the war of the commander in the reference, that is a military conflict, to Peninsular War and claim to fame of Louis des Balbes de Berton de Crillon, 1st Duke of Mahón.","SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""Peninsular War""@en . <http://dbpedia.org/resource/Louis_des_Balbes_de_Berton_de_Crillon,_1st_Duke_of_Mahón> <http://dbpedia.org/ontology/knownFor> ?result . ?v0 <http://dbpedia.org/ontology/commander> ?v3 . ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","```sparql
SELECT ?result WHERE {
    ?peninsularWar <http://dbpedia.org/ontology/reference> ?result .
    ?crillon <http://dbpedia.org/ontology/knownFor> ?result .
    FILTER (?peninsularWar = <http://dbpedia.org/resource/Peninsular_War>)
    FILTER (?crillon = <http://dbpedia.org/resource/Louis_des_Balbes_de_Berton_de_Crillon,_1st_Duke_of_Mahón>)
    ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>
}
```",4,5,5,3,2,3,3,71,0,0,2,0,0.0,0
92,20,val,"Give me the associated musical artist of the person born, that is an artist, as Jim Sheppard and band member of Nevermore.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ""Jim Sheppard""@en . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Nevermore> . }","```sparql
SELECT ?person ?associatedArtist WHERE {
  ?person <http://dbpedia.org/ontology/birthName> ""Jim Sheppard"" .
  ?person <http://dbpedia.org/ontology/memberOfBand> <http://dbpedia.org/resource/Nevermore_(band)> .
  ?person <http://dbpedia.org/ontology/associatedMusicalArtist> ?associatedArtist .
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
54,41,val,Give me the parent of the child of Narapati I of Ava and child of the father of Soe Min Wimala Dewi and predecessor of Ameitta Thiri Maha Dhamma Dewi of Ava.,SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Narapati_I_of_Ava> . <http://dbpedia.org/resource/Soe_Min_Wimala_Dewi> <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Ameitta_Thiri_Maha_Dhamma_Dewi_of_Ava> . ?v4 <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://dbpedia.org/ontology/child> ?result . },"```sparql
SELECT ?parent WHERE {
  # Narapati I of Ava's child
  ?child1 <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Narapati_I_of_Ava> .
  
  # Soe Min Wimala Dewi's father
  ?father <http://dbpedia.org/ontology/offspring> <http://dbpedia.org/resource/Soe_Min_Wimala_Dewi> .

  # Ameitta Thiri Maha Dhamma Dewi of Ava's predecessor
  ?predecessor <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Ameitta_Thiri_Maha_Dhamma_Dewi_of_Ava> .
  
  # The child who is a child of both Narapati I and Soe Min Wimala Dewi's father
  ?child1 <http://dbpedia.org/ontology/father> ?father .

  # This child must also be the successor (or predecessor) of Ameitta Thiri Maha Dhamma Dewi of Ava
  ?child1 <http://dbpedia.org/ontology/successor> ?predecessor .
  
  # Find the parent of this common child
  ?parent <http://dbpedia.org/ontology/offspring> ?child1 .
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
251,14,val,"Give me the location of Battle of Marengo and administration of the ruling party, that is a political party and an organisation, in Sicily.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/leaderParty> ?v2 . <http://dbpedia.org/resource/Sicily> <http://dbpedia.org/property/leaderParty> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. <http://dbpedia.org/resource/Battle_of_Marengo> <http://dbpedia.org/ontology/place> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
SELECT ?location ?administration WHERE {
  # Retrieve the location of the Battle of Marengo
  <http://dbpedia.org/resource/Battle_of_Marengo> <http://dbpedia.org/ontology/location> ?location .

  # Retrieve the ruling party in Sicily that is both a political party and an organization
  ?party <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty> .
  ?party <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organization> .
  ?party <http://dbpedia.org/property/rulingIn> <http://dbpedia.org/resource/Sicily> .

  # Retrieve the administration of this party
  ?party <http://dbpedia.org/ontology/administration> ?administration .
}
```",3,5,4,2,2,2,3,28,0,0,1,0,0.0,0
712,13,val,"Give me the capital of the country of the military force, that is an organisation and a military unit, of Vyoshenskaya Uprising.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/ontology/country> ?v1 . ?v0 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Vyoshenskaya_Uprising> . ?v1 <http://dbpedia.org/ontology/capital> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. },"```sparql
SELECT ?capital WHERE {
  ?militaryForce <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>.
  ?militaryForce <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>.
  <http://dbpedia.org/resource/Vyoshenskaya_Uprising> <http://dbpedia.org/property/militaryForce> ?militaryForce.
  ?militaryForce <http://dbpedia.org/ontology/country> ?country.
  ?country <http://dbpedia.org/ontology/administrativeCapital> ?capital.
}
```",3,5,4,3,1,3,2,20,0,0,3,0,0.0,0
9,31,val,"Give me the alma mater of Allen Hill (scientist) and alma mater of the mayor, that is a politician, of the entity, that is an organisation, in Belfast.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/leader> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Belfast> . ?v0 <http://dbpedia.org/ontology/almaMater> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Allen_Hill_(scientist)> <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
SELECT DISTINCT ?almaMaterAllenHill ?almaMaterMayor
WHERE {
  # Alma mater of Allen Hill (scientist)
  <http://dbpedia.org/resource/Allen_Hill_(scientist)> <http://dbpedia.org/ontology/almaMater> ?almaMaterAllenHill .

  # Entity that is an organization in Belfast
  ?organization <http://www.w3.org/2000/01/rdf-schema#label> ?label .
  FILTER(CONTAINS(LCASE(?label), ""belfast"")).
  ?organization <http://dbpedia.org/ontology/type> ?type .
  FILTER(EXISTS { ?type <http://www.w3.org/2002/07/owl#sameAs> <http://dbpedia.org/resource/Organisation> }).

  # Mayor who is a politician in the organization
  ?mayor <http://dbpedia.org/ontology/politicalParty> ?party .
  FILTER(EXISTS { ?party <http://www.w3.org/2000/01/rdf-schema#label> ?label . FILTER(CONTAINS(LCASE(?label), ""politician"")) }).
  ?mayor <http://dbpedia.org/ontology/officeHolder> ?office .
  ?office <http://dbpedia.org/ontology/holder> ?mayor ;
          <http://dbpedia.org/ontology/organization> ?organization .

  # Alma mater of the mayor
  ?mayor <http://dbpedia.org/ontology/almaMater> ?almaMaterMayor .
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
492,33,val,"Give me the person decedent at French Algeria and commander in the war, that is a military conflict and an event, of the commander in Battle of Verdun.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/ontology/battle> ?v3 . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/French_Algeria> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Battle_of_Verdun> <http://dbpedia.org/ontology/commander> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"```sparql
SELECT ?person WHERE {
  # Step 1: Find the commander in Battle of Verdun
  ?commanderInVerdun <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Battle_of_Verdun> .

  # Step 2: Identify the war that is both a military conflict and an event involving this commander
  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event> .
  ?commanderInVerdun <http://dbpedia.org/ontology/battle> ?war .

  # Step 3: Find the person decedent at French Algeria and commander in this war
  ?person <http://dbpedia.org/property/decedentAt> <http://dbpedia.org/resource/French_Algeria> .
  ?person <http://dbpedia.org/ontology/commander> ?war .
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
427,36,val,"Give me the party of the person born, that is an office holder and a politician, as the birth name of Romano Prodi and reference to Partito Popolare Italiano.","SELECT ?result WHERE { <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/property/birthName> ?v0 . ?result <http://xmlns.com/foaf/0.1/name> ""Partito Popolare Italiano""@en . ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?v1 <http://dbpedia.org/ontology/party> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","```sparql
SELECT ?party WHERE {
  <http://dbpedia.org/resource/Romano_Prodi> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>.
  <http://dbpedia.org/resource/Romano_Prodi> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>.
  <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/property/birthName> ""Romano Prodi"" .
  OPTIONAL { <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/ontology/reference> <http://dbpedia.org/resource/Partito_Popolare_Italiano> . }
  ?party <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>.
  <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/property/party> ?party .
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
778,14,val,"Give me the author of the work, that is a software, of the author of Pushd and popd.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/author> ?v2 . <http://dbpedia.org/resource/Pushd_and_popd> <http://dbpedia.org/property/author> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Software>. ?v0 <http://dbpedia.org/ontology/author> ?result . },"```sparql
# Step 1: Find the author of Pushd and popd
SELECT ?author WHERE {
    ?work <http://dbpedia.org/ontology/creator> ?author .
    FILTER(CONTAINS(LCASE(STR(?work)), ""pushd"") || CONTAINS(LCASE(STR(?work)), ""popd""))
}

# Step 2: Find a software work authored by the identified author
SELECT ?software WHERE {
    ?software <http://dbpedia.org/ontology/creator> ?author .
    FILTER(CONTAINS(LCASE(STR(?author)), ""ken thompson"")) # Assuming we found Ken Thompson as the author
    ?software <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Software>
}

# Step 3: Find the author of that software work
SELECT ?author WHERE {
    ?software <http://dbpedia.org/ontology/creator> ?author .
    FILTER(?software IN (<URI_of_the_software_found_in_step_2>)) # Replace with actual URI found in step 2
}
```",3,4,4,3,1,3,2,20,0,0,2,0,0.0,0
959,29,val,"Give me the native of the residence, that is a country, of Yōichi Masuzoe and member of University of Tsukuba and manager of 2013 Júbilo Iwata season.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Yōichi_Masuzoe> <http://dbpedia.org/property/residence> ?v3 . <http://dbpedia.org/resource/2013_Júbilo_Iwata_season> <http://dbpedia.org/ontology/manager> ?result . ?result <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/University_of_Tsukuba> . ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . },"```sparql
SELECT ?nativePerson WHERE {
    # Step 1: Identify Yōichi Masuzoe's residence (country)
    <http://dbpedia.org/resource/Y%C5%8Dichi_Masuzoe> <http://dbpedia.org/ontology/residence> ?residence .
    ?residence <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country> .

    # Step 2: Find individuals native to that country
    ?nativePerson <http://dbpedia.org/property/nativePlace> ?residence .
    
    # Step 3: Check if these individuals are connected with University of Tsukuba and were managers in the 2013 Júbilo Iwata season
    OPTIONAL { ?nativePerson <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/University_of_Tsukuba> . }
    OPTIONAL { ?nativePerson <http://dbpedia.org/ontology/teamManager> <http://dbpedia.org/resource/2013_J%C5%ABbilo_Iwata_season> . }

    # Ensure both conditions are met
    FILTER EXISTS { ?nativePerson <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/University_of_Tsukuba> }
    FILTER EXISTS { ?nativePerson <http://dbpedia.org/ontology/teamManager> <http://dbpedia.org/resource/2013_J%C5%ABbilo_Iwata_season> }
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
820,12,val,Give me the professional in  and child of the parent of Jason Schwartzman.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Jason_Schwartzman> . ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
SELECT ?child WHERE {
  <http://dbpedia.org/resource/Jason_Schwartzman> <http://dbpedia.org/ontology/familyName> ?parent.
  ?parent <http://dbpedia.org/property/professionalIn> ?profession.
  ?parent <http://dbpedia.org/ontology/child> ?child.
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
801,18,val,Give me the professional in  and producer of Westside Story (song) and associated musical artist of Chris Taylor (music producer).,"SELECT ?result WHERE { <http://dbpedia.org/resource/Chris_Taylor_(music_producer)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Westside_Story_(song)> <http://dbpedia.org/ontology/producer> ?result . ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
SELECT ?producer WHERE {
  ?producer <http://dbpedia.org/ontology/profession> ?profession .
  ?producer <http://dbpedia.org/ontology/produced> <http://dbpedia.org/resource/Westside_Story_(song)> .
  OPTIONAL { 
    ?association <http://dbpedia.org/property/associatedMusicalArtist> <http://dbpedia.org/resource/Chris_Taylor_(music_producer)> .
    ?producer ?p ?association .
  }
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
184,20,val,Give me the child of the child of Archduke Joseph Karl of Austria and parent of Géza von Habsburg.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Géza_von_Habsburg> . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Karl_of_Austria> . },"```sparql
SELECT ?grandchild WHERE {
  # Find the child of Archduke Joseph Karl of Austria
  ?child <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/Archduke_Joseph_Karl_of_Austria>.
  
  # From those children, find their children (i.e., grandchildren)
  ?grandchild <http://dbpedia.org/ontology/birthParent> ?child.
  
  # Check if any of these grandchildren are parents to Géza von Habsburg
  ?grandchild <http://dbpedia.org/ontology/birthChild> <http://dbpedia.org/resource/G%C3%A9za_von_Habsburg>.
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
54,28,val,Give me the child of the father of Soe Min Wimala Dewi and predecessor of Ameitta Thiri Maha Dhamma Dewi of Ava and parent of Thado Minsaw of Prome.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Ameitta_Thiri_Maha_Dhamma_Dewi_of_Ava> . <http://dbpedia.org/resource/Soe_Min_Wimala_Dewi> <http://dbpedia.org/property/father> ?v1 . },"```sparql
SELECT ?child WHERE {
  ?person <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Soe_Min_Wimala_Dewi> .
  ?person <http://dbpedia.org/ontology/predecessor> <http://dbpedia.org/resource/Ameitta_Thiri_Maha_Dhamma_Dewi_of_Ava> .
  ?person <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Human> .
  ?child <http://dbpedia.org/ontology/parent> ?person .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
161,21,val,"Give me the military force of the force, that is a societal event and an event and a military conflict, of Francisco Franco and commander in Biscay Campaign.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Franco> . <http://dbpedia.org/resource/Biscay_Campaign> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v1 . },"```sparql
SELECT ?result WHERE {
  ?event <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>.
  ?event <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>.
  ?event <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>.
  <http://dbpedia.org/resource/Francisco_Franco> <http://dbpedia.org/property/commander> ?event.
  ?campaign <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Franco>.
  ?campaign <http://www.w3.org/2000/01/rdf-schema#label> ""Biscay Campaign""@en.
  ?event <http://dbpedia.org/property/militaryForce> ?result.
}
```",3,6,4,2,2,3,3,71,0,0,3,0,0.0,0
435,13,val,"Give me the region of Greenwich Mean Time and territory administered from the figure known, that is a settlement and a town and Icelandic, as Land of fire and ice.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/capital> ?v1 . ?v1 <http://dbpedia.org/property/nickname> ""Land of fire and ice""@en . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Iceland>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Greenwich_Mean_Time> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Town>. }","```sparql
SELECT ?region ?administeredTerritory WHERE {
  ?settlement <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Town>.
  ?settlement <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>.
  ?settlement <http://dbpedia.org/property/country> <http://dbpedia.org/resource/Iceland>.
  ?settlement rdfs:label ""Reykjavik""@en.
  
  OPTIONAL {
    ?gmtRegion <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Timezone>.
    ?gmtRegion <http://dbpedia.org/property/timeZoneName> ""GMT""^^xsd:string.
    ?gmtRegion <http://dbpedia.org/ontology/country> ?region.
  }
  
  OPTIONAL {
    ?administeredTerritory <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Territory>.
    ?administeredTerritory <http://dbpedia.org/property/administrativeCentre> ?settlement.
  }
}
```",3,6,4,2,2,2,3,28,0,0,1,0,0.0,0
54,40,val,Give me the child of the father of the child of Thinkhaya of Pagan and parent of Thado Minsaw of Prome and predecessor of Ameitta Thiri Maha Dhamma Dewi of Ava.,SELECT ?result WHERE { <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Ameitta_Thiri_Maha_Dhamma_Dewi_of_Ava> . <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://dbpedia.org/ontology/child> ?result . ?v2 <http://dbpedia.org/property/father> ?v1 . },"```sparql
SELECT ?person WHERE {
  ?thinkhaya rdf:type dbo:Person ;
             rdfs:label ""Thinkhaya of Pagan""@en .
  
  ?thinkhayaChild dbo:childOf ?thinkhaya ;
                  dbo:parent ?father .

  ?thadoMinsaw dbo:parent ?person .
  ?ameittaThiriMahaDhammaDewi dbo:predecessor ?person .

  FILTER(?father = ?thinkhaya)
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
161,37,val,"Give me the military force of the force, that is a societal event and a military conflict, of the predecessor of Indalecio Prieto and commander in Biscay Campaign.",SELECT ?result WHERE { <http://dbpedia.org/resource/Biscay_Campaign> <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Indalecio_Prieto> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://dbpedia.org/ontology/commander> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
SELECT ?result WHERE {
  ?conflict <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>.
  ?conflict <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>.

  ?prieto <http://dbpedia.org/property/predecessor> ?predecessor.
  ?prieto <http://dbpedia.org/ontology/commander> ?biscayCampaign.

  ?biscayCampaign <http://dbpedia.org/ontology/battle> ?conflict.

  ?conflict <http://dbpedia.org/ontology/militaryForce> ?result.
}
```",4,6,5,3,2,3,3,71,0,0,3,0,0.0,0
421,14,val,Give me the native of the birthplace of Samir Bekrić and band member of Senidah.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . <http://dbpedia.org/resource/Samir_Bekrić> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Senidah> . },"```sparql
SELECT ?person WHERE {
  # Find the birthplace of Samir Bekrić
  <http://dbpedia.org/resource/Samir_Bekrić> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  
  # Find who is native to this birthplace
  ?native <http://www.w3.org/2000/01/rdf-schema#label> ?nativeLabel .
  ?native <http://dbpedia.org/ontology/nationality> ?nationality .
  ?nationality <http://dbpedia.org/ontology/country> ?birthPlace .

  # Find who is a band member of Senidah
  ?person <http://dbpedia.org/property/memberOfBand> <http://dbpedia.org/resource/Senidah> .

  # Ensure the person is both native to Samir Bekrić's birthplace and a band member of Senidah
  FILTER (?native = ?person)
}
```",3,3,4,2,2,2,3,28,0,0,2,0,0.0,0
9,25,val,Give me the figure known as the nickname of Queen's University Belfast and alma mater of Allen Hill (scientist).,SELECT ?result WHERE { <http://dbpedia.org/resource/Allen_Hill_(scientist)> <http://dbpedia.org/ontology/almaMater> ?result . <http://dbpedia.org/resource/Queen's_University_Belfast> <http://dbpedia.org/property/nickname> ?v1 . ?result <http://dbpedia.org/property/nickname> ?v1 . },"```sparql
# Query to find the nickname of Queen's University Belfast
SELECT ?nickname WHERE {
  <http://dbpedia.org/resource/Queen%27s_University_Belfast> <http://dbpedia.org/ontology/nickname> ?nickname .
}

# Query to find the alma mater of Allen Hill (scientist)
SELECT ?almaMater WHERE {
  <http://dbpedia.org/resource/Allen_Hill_(scientist)> <http://dbpedia.org/ontology/almaMater> ?almaMater .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
404,43,val,"Give me the spouse of Princess Victoria Louise of Prussia and parent of the child, that is a royalty, of the parent, that is a royalty, of Prince George William of Hanover and child of Ernest Augustus, Crown Prince of Hanover.","SELECT ?result WHERE { <http://dbpedia.org/resource/Prince_George_William_of_Hanover> <http://dbpedia.org/ontology/parent> ?v0 . ?result <http://dbpedia.org/ontology/child> ?v4 . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/child> ?v4 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ernest_Augustus,_Crown_Prince_of_Hanover> . }","```sparql
SELECT ?spouse WHERE {
  ?princess rdf:type dbo:Person ;
            foaf:name ""Princess Victoria Louise of Prussia"" ;
            dbo:spouse ?spouse .
  
  ?child dbo:parent ?princess ;
         rdf:type dbo:Royalty .

  ?grandparent dbo:parent ?child ;
               rdf:type dbo:Royalty .

  ?georgeWilliam dbo:parent ?ernestAugustus ;
                 foaf:name ""Prince George William of Hanover"" ;
                 rdf:type dbo:Person .
  
  ?ernestAugustus foaf:name ""Ernest Augustus, Crown Prince of Hanover"" ;
                  rdf:type dbo:Royalty .

  FILTER(?grandparent = ?ernestAugustus)
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
959,26,val,"Give me the native of the residence, that is a country, of the leader, that is a politician, of 2010 Japanese House of Councillors election.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/property/residence> ?v0 . ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . <http://dbpedia.org/resource/2010_Japanese_House_of_Councillors_election> <http://dbpedia.org/property/leader> ?v2 . },"```sparql
SELECT ?native WHERE {
    ?politician <http://dbpedia.org/ontology/politicalParty> ?party .
    ?election <http://dbpedia.org/property/electionYear> ""2010""^^xsd:integer ;
               <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan> ;
               <http://dbpedia.org/ontology/winner> ?politician .
    ?politician <http://dbpedia.org/ontology/residence> ?residence .
    ?residence <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country> .
    ?native <http://dbpedia.org/ontology/nativeCountry> ?residence .
}
```",3,5,4,3,1,3,3,71,0,0,8419,0,0.0,0
391,42,val,"Give me the actor of The Departed and native of the figure known as Hub City and actor of the movie, that is a movie and a work and a television show, with Roz Ryan.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Roz_Ryan> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://dbpedia.org/property/starring> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v2 <http://dbpedia.org/property/nickname> ""Hub City""@en . ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . <http://dbpedia.org/resource/The_Departed> <http://dbpedia.org/ontology/starring> ?result . }","```sparql
# Step 1: Find the actor of ""The Departed""
SELECT ?actor WHERE {
    ?movie <http://dbpedia.org/ontology/starring> ?actor .
    ?movie <http://dbpedia.org/property/title> ""The Departed""@en .
}

# Step 2: Identify who is native to ""Hub City"" (assuming Hub City refers to a known place like Spokane, Washington)
SELECT ?person WHERE {
    ?person <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/United_States> .
    ?person <http://dbpedia.org/property/placeOfBirth> <http://dbpedia.org/resource/Spokane,_Washington> .
}

# Step 3: Find the movie involving Roz Ryan and an actor from ""The Departed"" that is also a work and television show
SELECT DISTINCT ?actor WHERE {
    # Actor of The Departed
    ?movie1 <http://dbpedia.org/ontology/starring> ?actor .
    ?movie1 <http://dbpedia.org/property/title> ""The Departed""@en .

    # Native to Hub City (Spokane, Washington)
    ?person <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/United_States> .
    ?person <http://dbpedia.org/property/placeOfBirth> <http://dbpedia.org/resource/Spokane,_Washington> .
    FILTER (?actor = ?person)

    # Movie involving Roz Ryan that is also a work and television show
    ?movie2 <http://dbpedia.org/ontology/starring> ?actor .
    ?movie2 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Roz_Ryan> .
    ?movie2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film> .
    ?movie2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work> .
    ?movie2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TVSeries> .
}
```",5,8,6,2,3,3,3,71,0,0,1,0,0.0,0
378,22,val,Give me the war of Carl Pontus Gahn and claim to fame of the commander in Great Siege of Gibraltar.,SELECT ?result WHERE { <http://dbpedia.org/resource/Great_Siege_of_Gibraltar> <http://dbpedia.org/ontology/commander> ?v1 . ?v1 <http://dbpedia.org/ontology/knownFor> ?result . <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
# Query 1: War associated with Carl Pontus Gahn
SELECT ?war WHERE {
    <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/ontology/battle> ?war .
}

# Query 2: Claim to fame of the commander in Great Siege of Gibraltar
SELECT ?claimToFame WHERE {
    <http://dbpedia.org/resource/Great_Siege_of_Gibraltar> <http://dbpedia.org/ontology/commander> ?commander .
    ?commander <http://dbpedia.org/ontology/knownFor> ?claimToFame .
}
```",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
232,37,val,"Give me the actor of the claim to fame, that is a film and a military conflict, of the professional in Actor, narrator and producer and native of London.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/London> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/ontology/starring> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v0 <http://dbpedia.org/ontology/knownFor> ?v3 . ?v0 <http://dbpedia.org/property/occupation> ""Actor, narrator and producer""@en . }","```sparql
SELECT ?actor WHERE {
  ?person a dbo:Actor ;
          dbo:narrator true ;
          dbo:producer true ;
          dbo:nativePlace dbr:London .
  
  ?fame dbo:knownFor ?person ;
        a dbo:Film, dbo:MilitaryConflict .

  ?film dbo:castMember ?actor .
  FILTER(?fame = ?film)
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
959,28,val,"Give me the native of Japan and manager of 2013 Júbilo Iwata season and member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of Eiji Ōtsuka.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/team> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/2013_Júbilo_Iwata_season> <http://dbpedia.org/ontology/manager> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Japan> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. <http://dbpedia.org/resource/Eiji_Ōtsuka> <http://dbpedia.org/ontology/almaMater> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. },"```sparql
SELECT ?manager WHERE {
  ?manager <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Japan>.
  ?manager <http://dbpedia.org/ontology/teamManager> <http://dbpedia.org/resource/2013_Júbilo_Iwata_season>.
  
  ?almaMater <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organization>;
             <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>;
             <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalOrganization>.
  ?almaMater <http://dbpedia.org/property/country> <http://dbpedia.org/resource/Japan>.

  ?manager <http://dbpedia.org/ontology/almaMater> ?almaMater.
  
  <http://dbpedia.org/resource/Eiji_Ōtsuka> <http://dbpedia.org/ontology/almaMater> ?almaMater.
}
```",4,8,5,2,3,3,3,71,0,0,1,0,0.0,0
232,40,val,Give me the actor of Dog Soldiers (film) and child of the person born as the birth name of Jon Pertwee and native of London.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ?v2 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/London> . <http://dbpedia.org/resource/Dog_Soldiers_(film)> <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/property/birthName> ?v2 . ?v1 <http://dbpedia.org/ontology/child> ?result . },"```sparql
SELECT ?actor WHERE {
  # Step 1: Identify Jon Pertwee by his birth name
  ?jonPertwee a dbo:Person ;
              foaf:name ""Jon Pertwee"" ;
              dbp:birthName ""Jon Pertwee"" .

  # Step 2: Find the child of Jon Pertwee who is native of London
  ?child dbo:parent ?jonPertwee ;
         dbo:nativePlace dbr:London .

  # Step 3: Check if this child has acted in Dog Soldiers (film)
  ?actor a dbo:Actor ;
         foaf:name ?childName .
  ?film a dbo:Film ;
        foaf:name ""Dog Soldiers"" .
  ?film dbo:starring ?actor .
  
  FILTER(?child = ?actor) # Ensure the actor is the child of Jon Pertwee
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
77,11,val,Give me the force of Alexander I of Russia and war of the awardee of Golden Weapon for Bravery.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Golden_Weapon_for_Bravery> . ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Alexander_I_of_Russia> . },"```sparql
SELECT DISTINCT ?force ?war WHERE {
  # Part 1: Find the military force associated with Alexander I of Russia
  <http://dbpedia.org/resource/Alexander_I_of_Russia> <http://dbpedia.org/ontology/militaryService> ?service .
  ?service <http://dbpedia.org/property/force> ?force .

  # Part 2: Find the war related to an awardee of the Golden Weapon for Bravery
  ?person <http://dbpedia.org/ontology/receivedAward> ?award .
  ?award <http://www.w3.org/2000/01/rdf-schema#label> ""Golden Weapon for Bravery""@en .
  ?person <http://dbpedia.org/property/war> ?war .
}
```",3,3,4,2,2,3,2,20,0,0,11,0,0.0,0
959,33,val,"Give me the native of the residence, that is a country, of the leader, that is a politician, of 2010 Japanese House of Councillors election and member of University of Tsukuba.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?result <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/University_of_Tsukuba> . ?v0 <http://dbpedia.org/property/residence> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/2010_Japanese_House_of_Councillors_election> <http://dbpedia.org/property/leader> ?v0 . },"```sparql
SELECT ?native WHERE {
    ?leader <http://dbpedia.org/ontology/politician> true .
    ?leader <http://dbpedia.org/property/memberOf> <http://dbpedia.org/resource/2010_Japanese_House_of_Councillors_election> .
    ?leader <http://dbpedia.org/ontology/leader> true .
    ?leader <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/University_of_Tsukuba> .
    ?leader <http://dbpedia.org/property/residence> ?residence .
    ?residence <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country> .
    ?native <http://dbpedia.org/ontology/nativeOf> ?residence .
}
```",4,6,5,3,2,3,3,71,0,0,84,0,0.0,0
16,29,val,Give me the professional in the profession of Satomi Ishihara and person born as Georgeanne Marie Rice and spouse of Ted McGinley.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Satomi_Ishihara> <http://dbpedia.org/property/occupation> ?v3 . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/occupation> ?v3 . ?result <http://dbpedia.org/property/birthName> ""Georgeanne Marie Rice""@en . }","```sparql
# Step 1: Find the profession of Satomi Ishihara
SELECT ?profession WHERE {
    <http://dbpedia.org/resource/Satomi_Ishihara> <http://purl.org/dc/terms/subject> ?profession .
}

# Step 2: Find a person born as Georgeanne Marie Rice and check their spouse
SELECT DISTINCT ?person WHERE {
    ?person <http://dbpedia.org/ontology/birthName> ""Georgeanne Marie Rice"" .
    ?person <http://xmlns.com/foaf/0.1/spouse> <http://dbpedia.org/resource/Ted_McGinley> .
    
    # Step 3: Ensure the person has the same profession as Satomi Ishihara
    ?person <http://purl.org/dc/terms/subject> ?sharedProfession .
    FILTER EXISTS {
        SELECT ?profession WHERE {
            <http://dbpedia.org/resource/Satomi_Ishihara> <http://purl.org/dc/terms/subject> ?profession .
            ?sharedProfession = ?profession
        }
    }
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
427,44,val,"Give me the party of the father of Lamberto Andreotti and party of the person born, that is an office holder and a politician, as Romano Antonio Prodi and reference to Partito Popolare Italiano.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Lamberto_Andreotti> <http://dbpedia.org/property/father> ?v4 . ?result <http://xmlns.com/foaf/0.1/name> ""Partito Popolare Italiano""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v4 <http://dbpedia.org/ontology/party> ?result . ?v2 <http://dbpedia.org/ontology/party> ?result . ?v2 <http://dbpedia.org/property/birthName> ""Romano Antonio Prodi""@en . }","```sparql
# Query 1: Party of Lamberto Andreotti's Father
SELECT ?party WHERE {
    ?lamberto a dbo:Person ;
              foaf:name ""Lamberto Andreotti"" .
    ?father dbo:child ?lamberto ;
            dbo:politicalParty ?party .
}

# Query 2: Party of Romano Antonio Prodi
SELECT ?party WHERE {
    ?prodi a dbo:OfficeHolder, dbo:Politician ;
           foaf:name ""Romano Antonio Prodi"" ;
           dbo:birthPlace ?place .
    OPTIONAL { ?prodi dbo:politicalParty ?party . }
    FILTER EXISTS { ?party rdfs:label ""Partito Popolare Italiano""@it }
}
```",5,7,6,2,3,3,3,71,0,0,1,0,0.0,0
666,13,val,"Give me the player in the manager, that is a sports manager, of the team, that is a soccer club and a sports team season, of Leonid Slutsky (football coach).",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v0 <http://dbpedia.org/ontology/manager> ?v1 . ?v1 <http://dbpedia.org/ontology/team> ?result . ?v0 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Leonid_Slutsky_(football_coach)> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. },"```sparql
SELECT ?player WHERE {
  ?team <http://dbpedia.org/ontology/team> ?slutsky .
  ?slutsky <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager> ;
           <http://dbpedia.org/property/name> ""Leonid Slutsky"" .
  ?team <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub> ;
        <http://dbpedia.org/ontology/teamSeason> ?season .
  ?player <http://dbpedia.org/ontology/team> ?team .
}
```",3,6,4,3,1,3,2,20,0,0,28,0,0.0,0
801,43,val,"Give me the professional in  and producer of the work, that is a musical work and a song and a work, of the professional, that is a musical artist, in Rapper and associated musical artist of Chris Taylor (music producer).","SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/writer> ?v0 . ?v4 <http://dbpedia.org/ontology/producer> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?result <http://dbpedia.org/property/occupation> """"@en . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. <http://dbpedia.org/resource/Chris_Taylor_(music_producer)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/property/occupation> ""Rapper""@en . }","```sparql
SELECT ?rapper ?work WHERE {
  # Step 1: Identify Chris Taylor as a music producer
  <http://dbpedia.org/resource/Chris_Taylor_(music_producer)> <http://purl.org/dc/terms/profession> <http://dbpedia.org/class/yago/MusicProducer108930069>.

  # Step 2: Find associated musical artists who are rappers
  ?rapper <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Chris_Taylor_(music_producer)> .
  ?rapper <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Rapper108930069>.

  # Step 3: Identify their professional roles as musical artists
  ?rapper <http://purl.org/dc/terms/profession> ?profession .
  FILTER(?profession = <http://dbpedia.org/class/yago/MusicalArtist108930069>).

  # Step 4: Find works they have produced or are professionally involved in, classified as both musical works and songs
  ?work <http://purl.org/dc/terms/creator> ?rapper .
  ?work <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/MusicalWork108930069>.
  ?work <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Song108930069>.
}
```",5,9,6,3,3,3,3,71,0,0,2,0,0.0,0
767,19,val,"Give me the entity in the administration, that is a settlement, of Green and alma mater of Carl L. Nippert.","SELECT ?result WHERE { <http://dbpedia.org/resource/Carl_L._Nippert> <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://dbpedia.org/ontology/state> ?v0 . ?v0 <http://dbpedia.org/property/leaderParty> ""Green""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. }","```sparql
SELECT ?result WHERE {
  ?admin <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>.
  <http://dbpedia.org/resource/Carl_L._Nippert> <http://dbpedia.org/property/almaMater> ?almaMater.
  ?admin <http://dbpedia.org/ontology/administration> ?almaMater.
  BIND(?admin AS ?result)
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
427,35,val,"Give me the party of the person born, that is an office holder and a politician, as Romano Antonio Prodi and reference to the name of Italian People's Party (1994).","SELECT ?result WHERE { <http://dbpedia.org/resource/Italian_People's_Party_(1994)> <http://xmlns.com/foaf/0.1/name> ?v2 . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v1 <http://dbpedia.org/property/birthName> ""Romano Antonio Prodi""@en . ?v1 <http://dbpedia.org/ontology/party> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","```sparql
SELECT ?party WHERE {
  ?person <http://dbpedia.org/ontology/birthName> ""Romano Antonio Prodi"" .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder> .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .
  ?person <http://dbpedia.org/property/party> ?party .
  FILTER EXISTS { ?party <http://dbpedia.org/ontology/wikiPageRedirects> <http://dbpedia.org/resource/Italian_People%27s_Party_(1994)> }
}
```",4,6,5,2,2,3,3,71,0,0,1,0,0.0,0
617,26,val,"Give me the spouse of the child of the successor, that is a royalty, of Antiochus (son of Antiochus III the Great).",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/successor> ?v1 . ?v1 <http://dbpedia.org/ontology/child> ?v2 . },"```sparql
SELECT ?spouse WHERE {
  ?antiochus dbpedia-owl:successor ?successor .
  FILTER(?antiochus = <http://dbpedia.org/resource/Antiochus_IV_Epiphanes> && 
         (EXISTS { ?successor a dbo:Royalty }))

  ?successor dbpedia-owl:child ?child .

  ?child dbpedia-owl:spouse ?spouse .
}
```",3,4,4,3,1,3,3,71,0,0,5,0,0.0,0
9,19,val,"Give me the alma mater of Allen Hill (scientist) and alma mater of the mayor, that is a politician, of Northern Ireland Forum.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/ontology/almaMater> ?result . <http://dbpedia.org/resource/Northern_Ireland_Forum> <http://dbpedia.org/property/leader> ?v0 . <http://dbpedia.org/resource/Allen_Hill_(scientist)> <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
SELECT ?almaMater WHERE {
  { 
    <http://dbpedia.org/resource/Allen_Hill_(scientist)> <http://dbpedia.org/ontology/almaMater> ?almaMater .
  }
  UNION
  {
    ?mayor <http://dbpedia.org/ontology/politicianForOrganization> <http://dbpedia.org/resource/Northern_Ireland_Forum> ;
           <http://dbpedia.org/property/mayor> true ;
           <http://dbpedia.org/ontology/almaMater> ?almaMater .
  }
}
```",3,4,4,2,2,3,3,71,1,0,0,1.0,1.0,1.0
281,24,val,"Give me the entity in the birth place, that is a country, of Bob Heffron and war of New Zealand Army.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> ?v2 . <http://dbpedia.org/resource/Bob_Heffron> <http://dbpedia.org/ontology/birthPlace> ?v2 . <http://dbpedia.org/resource/New_Zealand_Army> <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
SELECT ?entity WHERE {
  # Find the birthplace country of Bob Heffron
  <http://dbpedia.org/resource/Bob_Heffron> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  ?birthPlace <http://www.w3.org/2000/01/rdf-schema#seeAlso> ?country .

  # Find a war associated with the New Zealand Army
  <http://dbpedia.org/resource/New_Zealand_Army> <http://dbpedia.org/ontology/battle> ?war .

  # Find entities in the birthplace country of Bob Heffron that are also involved in the identified war
  ?entity <http://www.w3.org/2000/01/rdf-schema#seeAlso> ?country .
  ?entity <http://dbpedia.org/ontology/battle> ?war .
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
994,43,val,"Give me the associated musical artist of the band member, that is a band and a group and an organisation, of the band, that is an organisation, of Fredrik Thordendal and associated musical artist of S.A. Slayer and band member of Don Dokken.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Fredrik_Thordendal> . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. <http://dbpedia.org/resource/S.A._Slayer> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Don_Dokken> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. },"```sparql
# Step 1: Find the band associated with Fredrik Thordendal
SELECT ?band WHERE {
    <http://dbpedia.org/resource/Fredrik_Thordendal> <http://dbpedia.org/ontology/memberOf> ?band .
}

# Step 2: Identify a band member of this band who is also a band and an organization
SELECT ?member WHERE {
    ?band <http://dbpedia.org/ontology/member> ?member .
    ?member <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band> .
    ?member <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation> .
}

# Step 3: Find the associated musical artist of this band member
SELECT ?artist WHERE {
    ?member <http://dbpedia.org/property/associatedMusicalArtist> ?artist .
}

# Step 4: Identify the associated musical artist of S.A. Slayer
SELECT ?slayerArtist WHERE {
    <http://dbpedia.org/resource/S._A._Slayer> <http://dbpedia.org/property/associatedMusicalArtist> ?slayerArtist .
}

# Step 5: Find a band member of Don Dokken
SELECT ?donDokkenMember WHERE {
    <http://dbpedia.org/resource/Don_Dokken> <http://dbpedia.org/ontology/memberOf> ?band .
    ?band <http://dbpedia.org/ontology/member> ?donDokkenMember .
}
```",5,9,6,3,3,3,3,71,0,0,1,0,0.0,0
701,32,val,Give me the parent of the child of Nefertari and parent of the child of Ramesses II.,SELECT ?result WHERE { <http://dbpedia.org/resource/Nefertari> <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ramesses_II> . ?result <http://dbpedia.org/ontology/child> ?v3 . },"```sparql
SELECT ?parent WHERE {
  ?child1 <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/Nefertari>.
  ?child2 <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/Ramesses_II>.
  ?child1 <http://dbpedia.org/ontology/birthParent> ?parent.
  ?child2 <http://dbpedia.org/ontology/birthParent> ?parent.
}
```",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
55,18,val,"Give me the band of the reference, that is a band, to Newsted and band member of Metallica.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://xmlns.com/foaf/0.1/name> ""Newsted""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Metallica> . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
SELECT ?band WHERE {
  ?reference <http://dbpedia.org/ontology/band> ?band .
  ?reference <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band> .
  OPTIONAL { 
    ?newsted <http://dbpedia.org/property/reference> ?reference . 
    FILTER(CONTAINS(LCASE(?newsted), ""newsted""))
  }
  OPTIONAL {
    ?metallicaMember <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Metallica> .
    FILTER(CONTAINS(LCASE(?metallicaMember), ""jason newsted""))
  }
}
```",3,4,4,2,2,2,3,28,0,22,3,0.0,0.0,0
92,25,val,Give me the band of the person born as Joseph Michael Furney and associated musical artist of Jim Sheppard.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Jim_Sheppard> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/bandMember> ?v1 . ?v1 <http://dbpedia.org/property/birthName> ""Joseph Michael Furney""@en . }","SELECT ?band ?artist WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/Joseph_Michael_Furney> <http://dbpedia.org/ontology/band> ?band .
  }
  OPTIONAL {
    <http://dbpedia.org/resource/Jim_Sheppard_(musician)> <http://dbpedia.org/property/associatedMusicalArtist> ?artist .
  }
}",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
281,36,val,"Give me the war of the profession, that is a military unit, of the professional, that is an office holder and a politician, in New Zealand Army and war of Beauchamp Seymour, 1st Baron Alcester.","SELECT ?result WHERE { <http://dbpedia.org/resource/Beauchamp_Seymour,_1st_Baron_Alcester> <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/New_Zealand_Army> . ?v0 <http://dbpedia.org/property/occupation> ?v1 . }","```sparql
SELECT ?war WHERE {
    ?professional <http://dbpedia.org/ontology/profession> ?militaryUnit .
    ?militaryUnit <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit> .
    ?professional <http://dbpedia.org/ontology/officeHolder> [] .
    ?professional <http://dbpedia.org/ontology/politician> [] .
    ?professional <http://dbpedia.org/property/memberOf> <http://dbpedia.org/resource/New_Zealand_Army> .
    
    ?militaryUnit <http://dbpedia.org/ontology/war> ?war .
    
    ?beauchampSeymour <http://dbpedia.org/ontology/war> ?war .
    ?beauchampSeymour <http://dbpedia.org/resource/Beauchamp_Seymour,_1st_Baron_Alcester> .
}
```",4,7,5,3,2,3,3,71,0,0,1,0,0.0,0
391,39,val,"Give me the actor of The Departed and actor of the movie, that is a movie and a work and a television show, with the professional in .","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/occupation> """"@en . ?v1 <http://dbpedia.org/property/starring> ?v0 . ?v1 <http://dbpedia.org/property/starring> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. <http://dbpedia.org/resource/The_Departed> <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. }","```sparql
SELECT ?actor WHERE {
  # Part 1: Actors in The Departed
  ?theDeparted <http://dbpedia.org/ontology/starring> ?actor .
  FILTER (str(?theDeparted) = ""The_Departed"")

  # Part 2: Works that are a movie, work, and television show
  ?work <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Movie> .
  ?work <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work> .
  ?work <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow> .

  # Part 3: Actors in the identified work
  ?work <http://dbpedia.org/ontology/starring> ?actor .
}
```",4,7,5,3,2,3,3,71,0,0,7,0,0.0,0
767,41,val,"Give me the alma mater of the administration of George K. Nash and entity in the administration, that is a settlement, of Green and reference to .","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> """"@en . ?v4 <http://dbpedia.org/ontology/almaMater> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://dbpedia.org/property/leaderParty> ""Green""@en . ?v4 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/George_K._Nash> . ?result <http://dbpedia.org/ontology/state> ?v2 . }","```sparql
SELECT ?almaMater ?settlement ?greenReference WHERE {
  # Alma Mater of individuals in George K. Nash's administration
  ?person <http://dbpedia.org/ontology/administration> <http://dbpedia.org/resource/G._K._Nash> .
  ?person <http://dbpedia.org/ontology/almaMater> ?almaMater .

  # Entity that is a settlement in the same administration
  OPTIONAL {
    ?entity <http://dbpedia.org/ontology/administration> <http://dbpedia.org/resource/G._K._Nash> .
    ?entity <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement> .
    BIND(?entity AS ?settlement)
  }

  # Reference to Green
  OPTIONAL {
    ?reference <http://dbpedia.org/property/referenceTo> ""Green"" .
    ?person <http://dbpedia.org/property/referencedBy> ?reference .
    BIND(?reference AS ?greenReference)
  }
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
659,44,val,"Give me the military force of the force, that is a societal event and an event and a military conflict, of Rutger Jan Schimmelpenninck and commander in the war, that is an event and a military conflict, of 1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish) and commander in German campaign of 1813.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/1st_Light_Cavalry_Lancers_Regiment_of_the_Imperial_Guard_(Polish)> <http://dbpedia.org/ontology/battle> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v4 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v2 . <http://dbpedia.org/resource/German_campaign_of_1813> <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
# Step 1: Identify the war involving the 1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish) in the German campaign of 1813.
SELECT ?war WHERE {
    ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>.
    ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>.
    ?regiment <http://dbpedia.org/property/commander> <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck>.
    ?regiment <http://dbpedia.org/ontology/battle> ?war.
    ?regiment <http://dbpedia.org/ontology/unitName> ""1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish)""@en.
    ?campaign <http://dbpedia.org/property/campaign> ?war.
    ?campaign <http://dbpedia.org/property/name> ""German campaign of 1813""@en.
}

# Step 2: Find the societal event and military conflict associated with Rutger Jan Schimmelpenninck as a commander.
SELECT ?event WHERE {
    ?event <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>.
    ?event <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocialEvent>.
    ?schimmelpenninck <http://dbpedia.org/property/commander> ?event.
    ?schimmelpenninck <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck>.
}

# Step 3: Determine the military force related to both events.
SELECT ?militaryForce WHERE {
    ?force1 <http://dbpedia.org/ontology/militaryForce> ?militaryForce.
    ?event1 <http://dbpedia.org/property/commander> <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck>.
    ?event2 <http://dbpedia.org/property/commander> <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck>.
    FILTER(?event1 != ?event2)
}
```",5,10,6,2,3,3,3,71,0,0,7,0,0.0,0
528,32,val,Give me the war of the military force of Battle of Pisagua and war of the commander in Battle of La Rinconada de Ate.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Battle_of_La_Rinconada_de_Ate> <http://dbpedia.org/ontology/commander> ?v3 . ?v1 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Pisagua> . ?v1 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
# Query to find the war related to the military force in the Battle of Pisagua
SELECT ?war1 WHERE {
  ?battle <http://dbpedia.org/ontology/militaryForce> ?force .
  ?force <http://dbpedia.org/ontology/battle> ?war1 .
  FILTER(?battle = <http://dbpedia.org/resource/Battle_of_Pisagua>)
}

UNION

# Query to find the war related to the commander in the Battle of La Rinconada de Ate
SELECT ?war2 WHERE {
  ?battle <http://dbpedia.org/ontology/commander> ?commander .
  ?commander <http://dbpedia.org/ontology/battle> ?war2 .
  FILTER(?battle = <http://dbpedia.org/resource/Battle_of_La_Rinconada_de_Ate>)
}
```",4,4,5,2,2,3,3,71,0,0,8,0,0.0,0
294,12,val,"Give me the entity in Nashville, Tennessee and resting place of Luke Lea (American politician, born 1879) and resting place of Edwin A. Keeble.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Nashville,_Tennessee> . <http://dbpedia.org/resource/Luke_Lea_(American_politician,_born_1879)> <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Edwin_A._Keeble> <http://dbpedia.org/ontology/restingPlace> ?result . }","```sparql
SELECT ?entity WHERE {
  ?entity <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Nashville,_Tennessee> .
  ?entity <http://dbpedia.org/ontology/restingPlace> <http://dbpedia.org/resource/Luke_Lea_(American_politician,_born_1879)> .
  ?entity <http://dbpedia.org/ontology/restingPlace> <http://dbpedia.org/resource/Edwin_A._Keeble> .
}
```",3,3,4,1,3,2,3,28,0,0,1,0,0.0,0
48,15,val,"Give me the band of Murda Mook and band of the writer of the work, that is a work, of Shellback (record producer).",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Murda_Mook> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Shellback_(record_producer)> . ?v0 <http://dbpedia.org/property/writer> ?v1 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT DISTINCT ?murdaMookBand ?writerBand WHERE {
  # Query for Murda Mook's band
  <http://dbpedia.org/resource/Murda_Mook> <http://dbpedia.org/ontology/memberOf> ?murdaMookBand .

  # Query for the writer of works by Shellback and their band
  OPTIONAL {
    ?work <http://purl.org/dc/terms/creator> ?shellback ;
          a <http://dbpedia.org/ontology/MusicalWork> .
    <http://dbpedia.org/resource/Shellback_(record_producer)> <http://dbpedia.org/property/produced> ?work .
    ?work <http://purl.org/dc/terms/contributor> ?writer .
    ?writer <http://dbpedia.org/ontology/memberOf> ?writerBand .
  }
}
```",4,5,5,3,2,3,2,20,0,0,1,0,0.0,0
547,40,val,Give me the resting place of Simon Cadell and resting place of Alan Cunningham and resting place of the child of the child of William Haliburton.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> ""William Haliburton""@en . ?v2 <http://dbpedia.org/ontology/child> ?v1 . <http://dbpedia.org/resource/Simon_Cadell> <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Alan_Cunningham> <http://dbpedia.org/ontology/restingPlace> ?result . ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . }","```sparql
SELECT ?person ?restingPlace WHERE {
  { 
    OPTIONAL { <http://dbpedia.org/resource/Simon_Cadell> <http://dbpedia.org/ontology/restingPlace> ?restingPlace . BIND(<http://dbpedia.org/resource/Simon_Cadell> AS ?person) }
  } UNION {
    { 
      OPTIONAL { <http://dbpedia.org/resource/Alan_Cunningham> <http://dbpedia.org/ontology/restingPlace> ?restingPlace . BIND(<http://dbpedia.org/resource/Alan_Cunningham> AS ?person) }
    } UNION {
      {
        ?grandchild <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person> .
        ?parent <http://dbpedia.org/ontology/offspring> ?grandchild .
        ?greatGrandparent <http://dbpedia.org/ontology/offspring> ?parent .
        FILTER(?greatGrandparent = <http://dbpedia.org/resource/William_Haliburton>)
        OPTIONAL { ?grandchild <http://dbpedia.org/ontology/restingPlace> ?restingPlace . }
        BIND(?grandchild AS ?person)
      }
    }
  }
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
994,40,val,Give me the band member of Don Dokken and associated musical artist of Red Tide (band) and associated musical artist of the associated musical artist of the reference to Watchtower.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Red_Tide_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v3 <http://xmlns.com/foaf/0.1/name> ""Watchtower""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Don_Dokken> . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
SELECT ?finalResult WHERE {
  # Step 1: Find a band member of Don Dokken
  ?dokkenMember <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/Don_Dokken> .
  
  # Step 2: Use the result to find an associated musical artist of Red Tide (band)
  ?redTideArtist <http://dbpedia.org/property/associatedMusicalArtist> ?dokkenMember .
  ?redTideArtist <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
  
  # Step 3: Find another associated musical artist from the result of step 2
  ?nextArtist <http://dbpedia.org/property/associatedMusicalArtist> ?redTideArtist .
  ?nextArtist <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .

  # Step 4: Identify any reference to Watchtower related to the last result
  ?finalResult <http://dbpedia.org/property/referenceTo> <http://dbpedia.org/resource/Watchtower> .
  ?finalResult <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
  ?nextArtist <http://dbpedia.org/property/referenceTo> ?finalResult .
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
345,15,val,"Give me the figure known as the nickname of the player, that is a sports club and an organisation and a soccer club, in Armando Heeb and team of Alessandro Mangiarratti.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v0 <http://dbpedia.org/property/nickname> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?result <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Alessandro_Mangiarratti> . <http://dbpedia.org/resource/Armando_Heeb> <http://dbpedia.org/ontology/team> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
SELECT ?club ?figure ?nickname WHERE {
  ?club <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>.
  ?club <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>.
  ?club <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>.

  OPTIONAL { 
    ?player <http://dbpedia.org/property/team> ?club.
    FILTER(?player = <http://dbpedia.org/resource/Armando_Heeb> || ?player = <http://dbpedia.org/resource/Alessandro_Mangiarratti>)
    ?figure <http://www.w3.org/2000/01/rdf-schema#label> ?nickname.
    ?figure <http://dbpedia.org/ontology/knows> ?player.
  }
}
```",4,7,5,3,2,3,2,20,1,28210,0,3.5447165999078376e-05,1.0,7.08918190840777e-05
492,21,val,"Give me the person decedent at the work of US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite and person decedent at Algiers.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Algiers> . ?v1 <http://dbpedia.org/property/author> ""US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite""@en . }","```sparql
# Find the person decedent at the work of US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite
SELECT ?decedent1 WHERE {
  <http://dbpedia.org/resource/Joseph_C._Satterthwaite> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PublicOfficial>.
  <http://dbpedia.org/resource/Joseph_C._Satterthwaite> <http://dbpedia.org/property/work> ?work.
  ?work <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PublicOffice>.
  ?work <http://dbpedia.org/ontology/officeHolder> <http://dbpedia.org/resource/Joseph_C._Satterthwaite>.
  ?work <http://dbpedia.org/property/title> ""US Assistant Secretary of State for African Affairs"" .
  ?decedent1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>.
  ?decedent1 <http://dbpedia.org/property/decedent> <http://dbpedia.org/resource/Joseph_C._Satterthwaite>.
}

UNION

# Find the person decedent at Algiers
SELECT ?decedent2 WHERE {
  ?event <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>.
  ?event <http://dbpedia.org/property/location> <http://dbpedia.org/resource/Algiers>.
  ?decedent2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>.
  ?decedent2 <http://dbpedia.org/property/decedent> ?event.
}
```",3,3,4,2,2,3,3,71,0,0,16,0,0.0,0
994,21,val,Give me the band member of Don Dokken and associated musical artist of the associated musical artist of Watchtower (band).,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Watchtower_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Don_Dokken> . },"```sparql
SELECT ?member ?associatedArtist WHERE {
  # Step 1: Find band members of Don Dokken
  <http://dbpedia.org/resource/Don_Dokken> <http://dbpedia.org/ontology/member> ?member .
  
  # Step 2: For each member, find their associated musical artists
  ?member <http://dbpedia.org/property/associatedMusicalArtist> ?artist .

  # Step 3: Check if any of these artists are associated with Watchtower (band)
  OPTIONAL {
    ?artist <http://dbpedia.org/ontology/associatedBand> <http://dbpedia.org/resource/Watchtower_(band)> .
  }
  
  FILTER EXISTS { ?artist <http://dbpedia.org/ontology/associatedBand> <http://dbpedia.org/resource/Watchtower_(band)> }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
44,7,val,Give me the band member of the band of John Pettibone and band member of Sledgeback.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Sledgeback> . ?v0 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/John_Pettibone> . },"```sparql
# Step 1: Get the band associated with John Pettibone
SELECT ?band WHERE {
    <http://dbpedia.org/resource/John_Pettibone> <http://dbpedia.org/ontology/memberOf> ?band .
}

# Step 2: Get all members of John Pettibone's band
SELECT DISTINCT ?member WHERE {
    ?band <http://dbpedia.org/ontology/member> ?member .
    # Assuming ?band is the result from step 1
}

# Step 3: Get all members of Sledgeback
SELECT DISTINCT ?sledgebackMember WHERE {
    <http://dbpedia.org/resource/Sledgeback> <http://dbpedia.org/ontology/member> ?sledgebackMember .
}

# Step 4: Find common band members between John Pettibone's band and Sledgeback
SELECT DISTINCT ?commonMember WHERE {
    # Assuming ?member is the result from step 2
    ?band <http://dbpedia.org/ontology/member> ?commonMember .
    
    # Assuming ?sledgebackMember is the result from step 3
    <http://dbpedia.org/resource/Sledgeback> <http://dbpedia.org/ontology/member> ?commonMember .
}
```",3,3,4,2,2,2,2,9,0,0,1,0,0.0,0
645,11,val,"Give me the alma mater of Sylvia Pankhurst and entity in the residence, that is a country, of James Wilkes Maurice.",SELECT ?result WHERE { <http://dbpedia.org/resource/James_Wilkes_Maurice> <http://dbpedia.org/property/residence> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Sylvia_Pankhurst> <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://dbpedia.org/ontology/country> ?v2 . },"```sparql
# Query to get the alma mater of Sylvia Pankhurst
SELECT ?almaMater WHERE {
  <http://dbpedia.org/resource/Sylvia_Pankhurst> <http://dbpedia.org/ontology/almaMater> ?almaMater .
}

UNION

# Query to get entities in the residence country of James Wilkes Maurice
SELECT ?entity WHERE {
  <http://dbpedia.org/resource/James_Wilkes_Maurice> <http://dbpedia.org/property/residence> ?residence .
  ?residence <http://www.w3.org/2000/01/rdf-schema#seeAlso> ?country .
  ?entity <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?type .
  ?entity <http://dbpedia.org/ontology/country> ?country .
}
```",3,4,4,2,2,3,2,20,0,0,1,0,0.0,0
712,12,val,Give me the capital of South Russia (1919–1920) and resting place of the awardee of Hero of the Soviet Union.,SELECT ?result WHERE { <http://dbpedia.org/resource/South_Russia_(1919–1920)> <http://dbpedia.org/ontology/capital> ?result . ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Hero_of_the_Soviet_Union> . ?v0 <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
# Find the capital of South Russia (1919–1920)
SELECT ?capital WHERE {
  ?southRussia <http://dbpedia.org/ontology/capital> ?capital .
  ?southRussia <http://www.w3.org/2002/07/owl#sameAs> <http://dbpedia.org/resource/South_Russia_(1919%E2%80%931920)> .
}

# Find the resting place of an awardee of Hero of the Soviet Union
SELECT DISTINCT ?restingPlace WHERE {
  ?hero <http://dbpedia.org/ontology/honoraryTitle> <http://dbpedia.org/resource/Hero_of_the_Soviet_Union> .
  ?hero <http://dbpedia.org/property/burialPlace> ?restingPlace .
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
485,17,val,"Give me the birth place of the awardee, that is a writer and a poet, of Eric Gregory Award and entity in Nottinghamshire.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Poet>. ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Eric_Gregory_Award> . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Nottinghamshire> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>. },"```sparql
SELECT ?person ?birthPlace WHERE {
  ?person <http://dbpedia.org/ontology/writer> [] .
  ?person <http://dbpedia.org/ontology/poet> [] .
  ?person <http://dbpedia.org/property/award> <http://dbpedia.org/resource/Eric_Gregory_Award> .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person> .
  ?person <http://dbpedia.org/property/birthPlace> ?birthPlace .
  
  OPTIONAL {
    ?entity <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Nottinghamshire> .
    ?person <http://dbpedia.org/ontology/associatedWith> ?entity .
  }
}
```",3,5,4,2,2,2,3,28,0,0,1,0,0.0,0
488,44,val,"Give me the death place of the father, that is a politician, of Yūki Hideyasu and birth place of Enomoto Takeaki and administration of the father of Emperor Go-Mizunoo.",SELECT ?result WHERE { <http://dbpedia.org/resource/Emperor_Go-Mizunoo> <http://dbpedia.org/property/father> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Yūki_Hideyasu> <http://dbpedia.org/property/father> ?v4 . ?v4 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Enomoto_Takeaki> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/property/leader> ?v2 . },"```sparql
SELECT ?result WHERE {
  # Find the father of Yūki Hideyasu who is a politician
  ?father rdf:type dbo:Politician ;
          foaf:parentOf <http://dbpedia.org/resource/Y%C5%ABki_Hideyasu> .
  
  # Find Enomoto Takeaki's birth place
  <http://dbpedia.org/resource/Enomoto_Takeaki> dbo:birthPlace ?birthPlace .

  # Find the administration of the father of Emperor Go-Mizunoo
  ?fatherGoMizunoo foaf:parentOf <http://dbpedia.org/resource/Emperor_Go-Mizunoo> .
  ?administration dbo:administrator ?fatherGoMizunoo .

  # The result should be the death place of the father of Yūki Hideyasu
  ?father dbo:deathPlace ?result .

  # Ensure all conditions are met for a single entity
  FILTER (?birthPlace = ?result && ?administration = ?result)
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
303,18,val,"Give me the party of the person born, that is a politician, as Arnulfo Arias Madrid and entity in Panama.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Panama> . ?v2 <http://dbpedia.org/ontology/party> ?result . ?v2 <http://dbpedia.org/property/birthName> ""Arnulfo Arias Madrid""@en . }","```sparql
SELECT ?party WHERE {
  ?person <http://dbpedia.org/ontology/birthName> ""Arnulfo Arias Madrid"" .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .
  ?person <http://dbpedia.org/ontology/entity> <http://dbpedia.org/resource/Panama> .
  ?person <http://dbpedia.org/ontology/party> ?party .
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
10,17,val,"Give me the professional in  and band member of the person born, that is an artist, as Luke Francis Vibert.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ""Luke Francis Vibert""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?result <http://dbpedia.org/property/occupation> """"@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
SELECT ?professional ?bandMember WHERE {
  ?person <http://dbpedia.org/ontology/birthName> ""Luke Francis Vibert"" .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist> .
  OPTIONAL { ?person <http://dbpedia.org/property/profession> ?professional . }
  OPTIONAL { ?person <http://dbpedia.org/ontology/memberOfBand> ?bandMember . }
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
92,22,val,Give me the band member of Nevermore and band of the person born as Joseph Michael Furney.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Nevermore> . ?v1 <http://dbpedia.org/property/birthName> ""Joseph Michael Furney""@en . ?result <http://dbpedia.org/ontology/bandMember> ?v1 . }","```sparql
# Query to find band members of Nevermore
SELECT ?member WHERE {
  ?band rdf:type dbo:Band ;
        dbo:name ""Nevermore"" .
  ?member dbo:bandMember ?band .
}

UNION

# Query to find bands associated with the person born as Joseph Michael Furney
SELECT ?band WHERE {
  ?person foaf:name ?name ;
          foaf:birthday ?birthday .
  ?person dbp:birthName ""Joseph Michael Furney"" .
  ?person dbo:bandMember ?band .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
251,18,val,Give me the administration of Forza Italia (2013) and death place of the author of The Twelve Abbots of Challant.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Twelve_Abbots_of_Challant> <http://dbpedia.org/property/author> ?v2 . ?v2 <http://dbpedia.org/ontology/deathPlace> ?result . ?result <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Forza_Italia_(2013)> . },"```sparql
# Query for Forza Italia (2013) administration
SELECT ?administration WHERE {
  <http://dbpedia.org/resource/Forza_Italia_(2013)> dbp:administration ?administration .
}

UNION

# Query for the death place of the author of ""The Twelve Abbots of Challant""
SELECT ?deathPlace WHERE {
  ?author dbo:work <http://dbpedia.org/resource/The_Twelve_Abbots_of_Challant> ;
          dbo:deathPlace ?deathPlace .
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
827,11,val,"Give me the father of William Ernest, Grand Duke of Saxe-Weimar-Eisenach and child of the child, that is a royalty, of Grand Duchess Maria Pavlovna of Russia (1786–1859).","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/William_Ernest,_Grand_Duke_of_Saxe-Weimar-Eisenach> <http://dbpedia.org/property/father> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Grand_Duchess_Maria_Pavlovna_of_Russia_(1786–1859)> . }","```sparql
SELECT ?father ?child WHERE {
  # Find the father of William Ernest, Grand Duke of Saxe-Weimar-Eisenach
  <http://dbpedia.org/resource/William_Ernest,_Grand_Duke_of_Saxe-Weimar-Eisenach> <http://xmlns.com/foaf/0.1/father> ?father .
  
  # Find a child (or descendant) of this father who is royalty and also a child of Maria Pavlovna
  ?child <http://dbpedia.org/ontology/birthParent> ?father ;
         <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
  
  # Ensure this child is also a child of Maria Pavlovna
  ?child <http://xmlns.com/foaf/0.1/birthParent> <http://dbpedia.org/resource/Maria_Pavlovna_of_Russia_(1786–1859)> .
}
```",3,4,4,2,2,3,2,20,0,0,1,0,0.0,0
184,43,val,"Give me the parent of Géza von Habsburg and parent of Archduchess Ilona of Austria and child of the child of the parent, that is a royalty, of Archduke Ladislaus Philipp of Austria.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Ilona_of_Austria> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v4 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Géza_von_Habsburg> . <http://dbpedia.org/resource/Archduke_Ladislaus_Philipp_of_Austria> <http://dbpedia.org/ontology/parent> ?v0 . },"```sparql
# Step 1: Find the parent of Géza von Habsburg
SELECT ?parentGéza WHERE {
    <http://dbpedia.org/resource/G%C3%A9za_von_Habsburg> <http://dbpedia.org/ontology/father> ?parentGéza .
    UNION
    <http://dbpedia.org/resource/G%C3%A9za_von_Habsburg> <http://dbpedia.org/ontology/mother> ?parentGéza .
}

# Step 2: Find the parent of Archduchess Ilona of Austria
SELECT ?parentIlona WHERE {
    <http://dbpedia.org/resource/Archduchess_Ilona_of_Austria> <http://dbpedia.org/ontology/father> ?parentIlona .
    UNION
    <http://dbpedia.org/resource/Archduchess_Ilona_of_Austria> <http://dbpedia.org/ontology/mother> ?parentIlona .
}

# Step 3: Find a common child of these parents
SELECT DISTINCT ?commonChild WHERE {
    ?child <http://dbpedia.org/ontology/father> ?parentGéza .
    UNION
    ?child <http://dbpedia.org/ontology/mother> ?parentGéza .
    
    ?child <http://dbpedia.org/ontology/father> ?parentIlona .
    UNION
    ?child <http://dbpedia.org/ontology/mother> ?parentIlona .
}

# Step 4: Find the parent of Archduke Ladislaus Philipp of Austria who is royalty
SELECT ?royalParent WHERE {
    <http://dbpedia.org/resource/Archduke_Ladislaus_Philipp_of_Austria> <http://dbpedia.org/ontology/father> ?royalParent .
    UNION
    <http://dbpedia.org/resource/Archduke_Ladislaus_Philipp_of_Austria> <http://dbpedia.org/ontology/mother> ?royalParent .
    
    ?royalParent <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
}

# Step 5: Find the child of this royal parent, and then their child
SELECT DISTINCT ?finalChild WHERE {
    ?child1 <http://dbpedia.org/ontology/father> ?royalParent .
    UNION
    ?child1 <http://dbpedia.org/ontology/mother> ?royalParent .

    ?child2 <http://dbpedia.org/ontology/father> ?child1 .
    UNION
    ?child2 <http://dbpedia.org/ontology/mother> ?child1 .

    FILTER(?commonChild = ?child1)
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
488,23,val,"Give me the birth place of the commander in the war, that is a military conflict and an event and a societal event, of Saitō Hajime.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Saitō_Hajime> <http://dbpedia.org/ontology/battle> ?v2 . },"```sparql
SELECT ?birthPlace WHERE {
  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>.
  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>.
  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>.
  <http://dbpedia.org/resource/Saitō_Hajime> <http://dbpedia.org/property/battle> ?war.
  
  ?war <http://dbpedia.org/ontology/commander> ?commander.
  
  ?commander <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>.
  ?commander <http://dbpedia.org/property/birthPlace> ?birthPlace.
}
```",3,6,4,3,1,3,3,71,0,0,17,0,0.0,0
492,39,val,"Give me the commander in Franco-Hova Wars and person decedent at the capital, that is a settlement, of the country of Khemis Miliana District.",SELECT ?result WHERE { <http://dbpedia.org/resource/Franco-Hova_Wars> <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/ontology/capital> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Khemis_Miliana_District> <http://dbpedia.org/ontology/country> ?v0 . ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . },"```sparql
SELECT ?commander WHERE {
  # Find the capital of Khemis Miliana District
  <http://dbpedia.org/resource/Khemis_Miliana_District> <http://www.w3.org/2006/vcard/ns#hasAddress> ?address .
  ?address <http://www.w3.org/2006/vcard/ns#locality> ?capital .

  # Ensure the capital is a settlement
  ?capital <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement> .

  # Find a person who died in that capital
  ?person <http://dbpedia.org/property/deathPlace> ?capital .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person> .

  # Check if the person was a commander in the Franco-Hova Wars
  ?francoHovaWar <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Franco-Hova_Wars> .
  ?francoHovaWar <http://dbpedia.org/ontology/commander> ?commander .
  FILTER (?person = ?commander)
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
528,24,val,Give me the war of the commander in Battle of La Rinconada de Ate and force of Narciso Campero.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Battle_of_La_Rinconada_de_Ate> <http://dbpedia.org/ontology/commander> ?v2 . ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Narciso_Campero> . },"```sparql
SELECT ?result WHERE {
  ?battle1 <http://dbpedia.org/ontology/commander> ?commander.
  ?battle2 <http://dbpedia.org/ontology/force> <http://dbpedia.org/resource/Narciso_Campero>.
  ?commander <http://dbpedia.org/ontology/battle> ?result.
  ?battle2 <http://dbpedia.org/ontology/battle> ?result.
  FILTER(?battle1 = <http://dbpedia.org/resource/Battle_of_La_Rinconada_de_Ate>)
}
```",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
712,11,val,Give me the capital of the country of Armed Forces of South Russia and resting place of Nina Onilova.,SELECT ?result WHERE { <http://dbpedia.org/resource/Armed_Forces_of_South_Russia> <http://dbpedia.org/ontology/country> ?v2 . ?v2 <http://dbpedia.org/ontology/capital> ?result . <http://dbpedia.org/resource/Nina_Onilova> <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
# Query for the capital of the country associated with Armed Forces of South Russia
SELECT ?capital WHERE {
  ?army <http://dbpedia.org/ontology/country> ?country .
  ?country <http://dbpedia.org/ontology/administrativeCapital> ?capital .
  FILTER(STR(?army) = ""Armed_Forces_of_South_Russia"")
}

# Query for the resting place of Nina Onilova
SELECT ?restingPlace WHERE {
  <http://dbpedia.org/resource/Nina_Onilova> <http://dbpedia.org/ontology/burialPlace> ?restingPlace .
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
281,43,val,"Give me the entity in the birth place, that is a country, of the leader, that is a politician, of 1962 New South Wales state election and war of Beauchamp Seymour, 1st Baron Alcester and war of New Zealand Army.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/ontology/birthPlace> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/New_Zealand_Army> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/1962_New_South_Wales_state_election> <http://dbpedia.org/property/leader> ?v0 . <http://dbpedia.org/resource/Beauchamp_Seymour,_1st_Baron_Alcester> <http://dbpedia.org/ontology/battle> ?result . }","```sparql
# Step 1: Find the leader (politician) of the 1962 NSW state election
SELECT ?leader WHERE {
    ?election dbpedia-owl:stateElection ""1962 New South Wales state election"" .
    ?election dbpedia-owl:winner ?leader .
    ?leader a dbo:Politician .
}

# Step 2: Determine the birthplace country of this politician
SELECT ?country WHERE {
    ?leader foaf:birthPlace ?location .
    ?location geo:feature/geonames ?geonameId .
    ?geonameId dbpedia-owl:country ?country .
}

# Step 3: Find entities in that country
SELECT DISTINCT ?entity WHERE {
    ?entity dbpedia-owl:country ?country .
}

# Step 4: Filter these entities to include only those related to wars involving Beauchamp Seymour and the New Zealand Army
SELECT DISTINCT ?entity WHERE {
    ?entity a dbo:MilitaryConflict .
    OPTIONAL { ?beauchampSeymourEvent dbo:war ?entity . }
    OPTIONAL { ?nzArmyEvent dbo:war ?entity . }
    FILTER EXISTS { ?leader foaf:birthPlace ?location . ?location geo:feature/geonames ?geonameId . ?geonameId dbpedia-owl:country ?country . ?entity dbpedia-owl:country ?country }
}

# Beauchamp Seymour and New Zealand Army war events
SELECT DISTINCT ?beauchampSeymourEvent WHERE {
    ?beauchampSeymourEvent dbo:war ?entity .
    ?beauchampSeymourEvent dbo:commander <http://dbpedia.org/resource/Beauchamp_Seymour,_1st_Baron_Alcester> .
}

SELECT DISTINCT ?nzArmyEvent WHERE {
    ?nzArmyEvent dbo:war ?entity .
    ?nzArmyEvent dbo:participatingMilitaryUnit <http://dbpedia.org/resource/New_Zealand_Army> .
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
318,7,val,Give me the person born in the founding year of Eel Pie Publishing and professional in Composer.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/Composer> . ?result <http://dbpedia.org/ontology/birthYear> ?v2 . <http://dbpedia.org/resource/Eel_Pie_Publishing> <http://dbpedia.org/ontology/foundingYear> ?v2 . },"```sparql
SELECT ?person WHERE {
  ?eelpiePublishing dbpedia-owl:foundingYear ?foundingYear .
  ?person dbo:birthDate ?birthDate ;
          dbo:occupation ?occupation .
  FILTER (YEAR(?birthDate) = ?foundingYear)
  FILTER CONTAINS(LCASE(str(?occupation)), ""composer"")
}
```",3,3,4,2,2,2,2,9,0,0,7,0,0.0,0
404,39,val,Give me the parent of Prince Ernest Augustus of Hanover (born 1914) and child of the father of the spouse of Princess Victoria Louise of Prussia.,SELECT ?result WHERE { <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?v0 . ?result <http://dbpedia.org/ontology/parent> ?v1 . ?v0 <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Prince_Ernest_Augustus_of_Hanover_(born_1914)> . },"```sparql
# Step 1: Find the parent of Prince Ernest Augustus of Hanover (born 1914)
SELECT ?parent WHERE {
    ?person rdf:type dbo:Person ;
            foaf:name ""Prince Ernest Augustus of Hanover"" ;
            dbo:birthYear ""1914""^^xsd:gYear .
    ?person dbo:parent ?parent .
}

# Step 2: Find the spouse of Princess Victoria Louise of Prussia and her father
SELECT ?spouseFather WHERE {
    ?princess rdf:type dbo:Person ;
              foaf:name ""Princess Victoria Louise of Prussia"" .
    ?princess dbo:spouse ?spouse .
    ?spouse dbo:father ?spouseFather .
}

# Step 3: Find the child of the spouse's father
SELECT ?child WHERE {
    ?spouseFather dbo:child ?child .
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
339,12,val,Give me the father of the child of Grand Duchess Elena Vladimirovna of Russia and child of George I of Greece.,SELECT ?result WHERE { <http://dbpedia.org/resource/George_I_of_Greece> <http://dbpedia.org/ontology/child> ?result . ?v0 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Grand_Duchess_Elena_Vladimirovna_of_Russia> <http://dbpedia.org/ontology/child> ?v0 . },"```sparql
# Step 1: Get children of Grand Duchess Elena Vladimirovna of Russia
SELECT ?child WHERE {
    <http://dbpedia.org/resource/Grand_Duchess_Elena_Vladimirovna_of_Russia> <http://dbpedia.org/ontology/child> ?child .
}

# Step 2: Get children of George I of Greece
SELECT ?child WHERE {
    <http://dbpedia.org/resource/George_I_of_Greece> <http://dbpedia.org/ontology/child> ?child .
}

# Step 3: Find common child
SELECT DISTINCT ?commonChild WHERE {
    { <http://dbpedia.org/resource/Grand_Duchess_Elena_Vladimirovna_of_Russia> <http://dbpedia.org/ontology/child> ?commonChild . }
    UNION
    { <http://dbpedia.org/resource/George_I_of_Greece> <http://dbpedia.org/ontology/child> ?commonChild . }
}

# Step 4: Determine the father of this common child
SELECT ?father WHERE {
    ?commonChild <http://dbpedia.org/property/father> ?father .
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
328,32,val,"Give me the commander in the force of Ferenc Szálasi and awardee of the award of Bruce Fraser, 1st Baron Fraser of North Cape.","SELECT ?result WHERE { <http://dbpedia.org/resource/Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape> <http://dbpedia.org/property/awards> ?v1 . ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Ferenc_Szálasi> . ?result <http://dbpedia.org/property/awards> ?v1 . ?v3 <http://dbpedia.org/ontology/commander> ?result . }","```sparql
SELECT ?commonEntity WHERE {
    # Find the force commanded by Ferenc Szálasi
    <http://dbpedia.org/resource/Ferenc_Szálasi> <http://dbpedia.org/ontology/commandedForce> ?force .
    
    # Find entities that are commanders of this force
    ?entity <http://dbpedia.org/ontology/commander> ?force .

    # Find the award received by Bruce Fraser, 1st Baron Fraser of North Cape
    <http://dbpedia.org/resource/Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape> <http://dbpedia.org/property/receivedAward> ?award .
    
    # Find entities that are awardees of this award
    ?entity <http://dbpedia.org/ontology/awardee> ?award .

    # Return the common entity
}
```",4,4,5,2,2,3,3,71,0,0,2,0,0.0,0
981,13,val,"Give me the entity in the region of the time zone in Salak, North Sumatra.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/timeZone> ?v0 . <http://dbpedia.org/resource/Salak,_North_Sumatra> <http://dbpedia.org/ontology/timeZone> ?v0 . ?result <http://dbpedia.org/ontology/country> ?v1 . }","```sparql
SELECT ?entity WHERE {
  ?salak wdt:P31 wd:Q515; # Instance of a populated place
         wdt:P131* wd:Q1341. # Located in North Sumatra
  ?salak wdt:P421 ?timezone. # Time zone of Salak

  ?region wdt:P421 ?timezone; # Region with the same time zone as Salak
          wdt:P31 wd:Q2220688. # Instance of a region

  ?entity wdt:P131* ?region. # Entity located in that region
}
```",3,3,4,3,1,3,2,20,0,0,2949,0,0.0,0
754,14,val,Give me the parent of the child of the reference to Ram Khamhaeng the Great.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/child> ?v0 . ?result <http://dbpedia.org/ontology/child> ?v0 . ?v2 <http://xmlns.com/foaf/0.1/name> ""Ram Khamhaeng the Great""@en . }","```sparql
SELECT ?parent WHERE {
  ?child <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Ram_Khamhaeng_the_Great> .
  ?child <http://dbpedia.org/ontology/mother> ?mother .
  ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Human> .
  ?parent <http://dbpedia.org/ontology/father|<http://dbpedia.org/ontology/mother>> ?child .
}
```",3,3,4,3,1,3,2,20,0,0,1,0,0.0,0
16,27,val,Give me the person born as the birth name of the alumnus of Ohio State University.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Ohio_State_University> . ?result <http://dbpedia.org/property/birthName> ?v2 . ?v1 <http://dbpedia.org/property/birthName> ?v2 . },"```sparql
SELECT ?alumnus ?birthName WHERE {
  ?alumnus <http://dbpedia.org/ontology/alumni> <http://dbpedia.org/resource/OHIO_State_University>.
  ?alumnus <http://dbpedia.org/property/birthName> ?birthName.
}
```",3,3,4,3,1,3,3,71,0,0,90,0,0.0,0
303,19,val,"Give me the entity in Panama and party of Arnulfo Arias and party of the commander, that is a politician, in United States invasion of Panama.",SELECT ?result WHERE { <http://dbpedia.org/resource/Arnulfo_Arias> <http://dbpedia.org/ontology/party> ?result . ?v2 <http://dbpedia.org/ontology/party> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/United_States_invasion_of_Panama> <http://dbpedia.org/ontology/commander> ?v2 . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Panama> . },"```sparql
SELECT ?entity WHERE {
  ?entity <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Panama> .
  ?entity <http://dbpedia.org/ontology/party> ?partyArias .
  ?partyArias <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/Arnulfo_Arias> .
  
  ?entity <http://dbpedia.org/ontology/party> ?partyCommander .
  ?partyCommander <http://dbpedia.org/ontology/member> ?commander .
  ?commander <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/United_States_invasion_of_Panama> .

  ?entity a <http://dbpedia.org/ontology/Politician> .
}
```",4,5,5,2,3,2,3,28,0,0,1,0,0.0,0
617,21,val,"Give me the child of the child, that is a royalty, of Seleucus II Callinicus and parent of Nysa (wife of Pharnaces I of Pontus).",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seleucus_II_Callinicus> . ?result <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Nysa_(wife_of_Pharnaces_I_of_Pontus)> . },"```sparql
SELECT ?grandchild WHERE {
  ?child1 <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/Seleucus_II_Callinicus> .
  ?grandchild <http://dbpedia.org/ontology/birthParent> ?child1 .
  ?grandchild <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
  ?parent <http://dbpedia.org/property/spouse> <http://dbpedia.org/resource/Nysa_(wife_of_Pharaces_I_of_Pontus)> .
  FILTER (?grandchild = ?parent)
}
```",3,4,4,2,2,3,3,71,0,0,2,0,0.0,0
996,15,val,Give me the force of the awardee of the elevation of Lac d'Avoriaz and entity in France.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/awards> ?v0 . ?result <http://dbpedia.org/ontology/commander> ?v1 . <http://dbpedia.org/resource/Lac_d'Avoriaz> <http://dbpedia.org/ontology/elevation> ?v0 . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/France> . },"```sparql
SELECT ?entity ?force WHERE {
  ?award <http://dbpedia.org/ontology/awardee> ?entity .
  ?award <http://dbpedia.org/property/subject> <http://dbpedia.org/resource/Lac_d%27Avoriaz> .
  ?entity <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation> .
  ?entity <http://dbpedia.org/property/country> <http://dbpedia.org/resource/France> .
  OPTIONAL { ?entity <http://dbpedia.org/ontology/force> ?force . }
}
```",4,4,5,3,2,3,2,20,0,0,4,0,0.0,0
92,36,val,Give me the band of the person born as the birth name of Joseph Michael and band member of Nevermore.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> ?v1 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Nevermore> . ?v1 <http://dbpedia.org/property/birthName> ?v0 . <http://dbpedia.org/resource/Joseph_Michael> <http://dbpedia.org/property/birthName> ?v0 . },"```sparql
SELECT ?person ?band WHERE {
  ?person <http://dbpedia.org/ontology/birthName> ""Joseph Michael"" .
  ?person <http://dbpedia.org/ontology/memberOfBand> <http://dbpedia.org/resource/Nevermore_(band)> .
  ?person <http://dbpedia.org/ontology/memberOfBand> ?band .
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
492,28,val,"Give me the commander in Franco-Hova Wars and person decedent at the work of US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite and person decedent at Algiers.","SELECT ?result WHERE { <http://dbpedia.org/resource/Franco-Hova_Wars> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . ?v1 <http://dbpedia.org/property/author> ""US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite""@en . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Algiers> . }","```sparql
SELECT ?person WHERE {
  ?francoHovaWars <http://dbpedia.org/ontology/commander> ?person .
  FILTER(STRSTARTS(LCASE(?francoHovaWars), ""franco-hova wars""))

  ?satterthwaite <http://dbpedia.org/property/decedent> ?person .
  FILTER(STRSTARTS(LCASE(?satterthwaite), ""joseph c. satterthwaite""))

  ?algiersPerson <http://dbpedia.org/property/decedent> ?person .
  FILTER(STRSTARTS(LCASE(?algiersPerson), ""algiers""))
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
232,21,val,Give me the native of London and child of the person born as John Devon Roland Pertwee.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/London> . ?v1 <http://dbpedia.org/property/birthName> ""John Devon Roland Pertwee""@en . }","```sparql
SELECT ?child WHERE {
  ?person <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/London>.
  ?person <http://dbpedia.org/ontology/familyName> ""Pertwee"".
  ?person <http://dbpedia.org/ontology/birthName> ""John Devon Roland Pertwee"".
  ?child <http://dbpedia.org/ontology/paternalChild> ?person.
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
645,15,val,"Give me the entity in the residence, that is a country, of the commander in Battle of Diamond Rock and alma mater of Sylvia Pankhurst.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v1 . <http://dbpedia.org/resource/Sylvia_Pankhurst> <http://dbpedia.org/ontology/almaMater> ?result . ?v0 <http://dbpedia.org/property/residence> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Battle_of_Diamond_Rock> <http://dbpedia.org/ontology/commander> ?v0 . },"```sparql
SELECT ?entity WHERE {
  # Find the residence country of the commander in Battle of Diamond Rock
  <http://dbpedia.org/resource/Battle_of_Diamond_Rock> <http://dbpedia.org/ontology/commander> ?commander .
  ?commander <http://dbpedia.org/property/residence> ?residence .
  ?residence <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country> .

  # Find the alma mater country of Sylvia Pankhurst
  <http://dbpedia.org/resource/Sylvia_Pankhurst> <http://dbpedia.org/ontology/almaMater> ?almaMater .
  ?almaMater <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution> .
  ?almaMater <http://dbpedia.org/property/country> ?country .

  # Find entities in either of these countries
  {
    ?entity <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?type .
    ?entity <http://dbpedia.org/ontology/country> ?residence .
  }
  UNION
  {
    ?entity <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?type .
    ?entity <http://dbpedia.org/ontology/country> ?country .
  }
}
```",4,5,5,3,2,3,2,20,1,42998,0,2.3256354798948812e-05,1.0,4.6511627906976735e-05
488,24,val,"Give me the death place of the father, that is a politician, of Yūki Hideyasu and administration of Emperor Go-Yōzei.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Yūki_Hideyasu> <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Emperor_Go-Yōzei> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
SELECT ?deathPlace WHERE {
  ?politician a dbo:Politician ;
              foaf:parentOf <http://dbpedia.org/resource/Yūki_Hideyasu> ;
              dbo:administratorOf <http://dbpedia.org/resource/Emperor_Go-Yōzei> .
  ?politician dbo:deathPlace ?deathPlace .
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
435,15,val,"Give me the work of Article 62, Section IV of Constitution of Iceland and territory administered from the figure known, that is a settlement and a town and Icelandic, as Land of fire and ice.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/nickname> ""Land of fire and ice""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Town>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/capital> ?v1 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Iceland>. ?result <http://dbpedia.org/property/author> ""Article 62, Section IV of Constitution of Iceland""@en . }","```sparql
# Query for the work of Article 62, Section IV of Constitution of Iceland
SELECT ?work WHERE {
    <http://dbpedia.org/resource/Article_62,_Section_IV_of_Constitution_of_Iceland> <http://dbpedia.org/ontology/work> ?work .
}

# Query for a territory administered from an Icelandic town known as ""Land of fire and ice""
SELECT ?territory WHERE {
    ?town <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Town>.
    ?town <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>.
    ?town <http://dbpedia.org/property/country> <http://dbpedia.org/resource/Iceland>.
    ?town <http://dbpedia.org/ontology/commonName> ""Land of fire and ice"" .
    ?territory <http://dbpedia.org/ontology/administeredFrom> ?town .
}
```",3,6,4,2,2,2,3,28,0,0,1,0,0.0,0
838,15,val,"Give me the band of the band member, that is an artist and a musical artist, of the band, that is a band and a group, of Žika Jelić and band member of Kerber.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Kerber> . ?v0 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Žika_Jelić> . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT ?band WHERE {
  ?artist <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Žika_Jelić> .
  ?artist <http://dbpedia.org/ontology/bandMember> ?kerberMember .
  ?kerberMember <http://dbpedia.org/ontology/memberOfBand> <http://dbpedia.org/resource/Kerber> .
  ?band <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band> .
  ?band <http://dbpedia.org/ontology/bandMember> ?artist .
}
```",4,8,5,3,2,3,2,20,0,0,1,0,0.0,0
161,35,val,"Give me the commander in the force, that is an event, of Emilio Mola and military force of the force, that is a societal event and an event and a military conflict, of Francisco Franco.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Emilio_Mola> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Franco> . ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
SELECT ?force WHERE {
  ?force <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>.
  ?force <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Emilio_Mola>.
  ?force <http://dbpedia.org/ontology/militaryForce> ?v1.
  ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>.
  ?v1 <http://dbpedia.org/ontology/person> <http://dbpedia.org/resource/Francisco_Franco>.
  ?force <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>.
}
```",4,8,5,2,2,3,3,71,0,0,34,0,0.0,0
421,12,val,Give me the native of Socialist Federal Republic of Yugoslavia and person born as Edin Dervišhalidović and band member of Senidah.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Socialist_Federal_Republic_of_Yugoslavia> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Senidah> . ?result <http://dbpedia.org/property/birthName> ""Edin Dervišhalidović""@en . }","```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Socialist_Federal_Republic_of_Yugoslavia> .
  ?person <http://dbpedia.org/ontology/birthName> ""Edin Dervišhalidović"" .
  ?person <http://dbpedia.org/ontology/memberOfBand> <http://dbpedia.org/resource/Senidah> .
}
```",3,3,4,1,3,2,3,28,0,0,1,0,0.0,0
391,41,val,"Give me the actor of All About the Andersons and native of the figure known as Hub City and actor of the claim to fame, that is a work, of Michael Ballhaus.","SELECT ?result WHERE { <http://dbpedia.org/resource/Michael_Ballhaus> <http://dbpedia.org/ontology/knownFor> ?v4 . ?v4 <http://dbpedia.org/ontology/starring> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/All_About_the_Andersons> <http://dbpedia.org/property/starring> ?result . ?v2 <http://dbpedia.org/property/nickname> ""Hub City""@en . ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . }","```sparql
# Step 1: Get the actor of ""All About the Andersons""
SELECT ?actor WHERE {
    ?film rdf:type dbo:Film .
    ?film rdfs:label ""All About the Andersons""@en .
    ?film dbo:starring ?actor .
}

# Step 2: Find the native city (Hub City) of that actor
SELECT ?hubCity WHERE {
    ?actor dbo:nativePlace ?place .
    ?place rdfs:label ?hubCityLabel .
    FILTER(CONTAINS(LCASE(?hubCityLabel), ""hub city""))
    BIND(STR(?hubCityLabel) AS ?hubCity)
}

# Step 3: Get the claim to fame (work) of Michael Ballhaus
SELECT ?work WHERE {
    ?ballhaus rdf:type dbo:Person .
    ?ballhaus rdfs:label ""Michael Ballhaus""@en .
    ?ballhaus dbo:knownFor ?work .
    ?work rdf:type dbo:Work .
}

# Step 4: Find the actor who is from Hub City and acted in one of those works
SELECT DISTINCT ?finalActor WHERE {
    # Actor from Hub City
    ?actor dbo:nativePlace ?place .
    ?place rdfs:label ?hubCityLabel .
    FILTER(CONTAINS(LCASE(?hubCityLabel), ""hub city""))
    
    # Actor in the work associated with Michael Ballhaus
    ?work rdf:type dbo:Work .
    ?film dbo:starring ?actor .
    ?film dbo:productionCompany|dbo:director|dbo:writer ?work .  # Assuming works are linked through these properties

    # Ensure this actor is from Hub City and acted in the work
    FILTER(?hubCityLabel = ?hubCity)
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
115,7,val,Give me the alma mater of the alumnus of National University of San Marcos and alma mater of Jorge Sotomayor Tello.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/almaMater> ?result . <http://dbpedia.org/resource/Jorge_Sotomayor_Tello> <http://dbpedia.org/ontology/almaMater> ?result . ?v0 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/National_University_of_San_Marcos> . },"```sparql
SELECT ?almaMater WHERE {
  ?person <http://dbpedia.org/ontology/alumni> <http://dbpedia.org/resource/National_University_of_San_Marcos>.
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>.
  ?person <http://dbpedia.org/property/almaMater> ?almaMater.
  
  OPTIONAL {
    ?jorge <http://dbpedia.org/ontology/alumni> ?person.
    ?jorge <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/resource/Jorge_Sotomayor_Tello>.
  }
}
```",3,3,4,2,2,2,2,9,0,0,2,0,0.0,0
303,12,val,Give me the party of Guillermo Endara and party of Arnulfo Arias and entity in Panama.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Panama> . <http://dbpedia.org/resource/Arnulfo_Arias> <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Guillermo_Endara> <http://dbpedia.org/ontology/party> ?result . },"```sparql
SELECT ?endaraParty ?ariasParty ?panamanianEntity
WHERE {
  OPTIONAL { <http://dbpedia.org/resource/Guillermo_Endara> <http://dbpedia.org/ontology/party> ?endaraParty . }
  OPTIONAL { <http://dbpedia.org/resource/Arnulfo_Arias> <http://dbpedia.org/ontology/party> ?ariasParty . }
  OPTIONAL { ?panamanianEntity <http://www.w3.org/2000/01/rdf-schema#label> ?label .
             FILTER (lang(?label) = ""en"")
             ?panamanianEntity <http://dbpedia.org/property/country> <http://dbpedia.org/resource/Panama> . }
}
```",3,3,4,1,3,2,3,28,1,53,0,0.018518518518518517,1.0,0.03636363636363636
294,14,val,"Give me the resting place of Luke Lea (American politician, born 1879) and resting place of the architect of P. D. Houston Jr. House.","SELECT ?result WHERE { <http://dbpedia.org/resource/P._D._Houston_Jr._House> <http://dbpedia.org/ontology/architect> ?v2 . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Luke_Lea_(American_politician,_born_1879)> <http://dbpedia.org/ontology/restingPlace> ?result . }","```sparql
# Query for the resting place of Luke Lea (American politician, born 1879)
SELECT ?restingPlace WHERE {
    <http://dbpedia.org/resource/Luke_Lea_(politician,_born_1879)> <http://dbpedia.org/ontology/burial> ?restingPlace .
}

# Query for the resting place of the architect of P. D. Houston Jr. House
SELECT ?architectRestingPlace WHERE {
    ?house <http://dbpedia.org/property/architect> ?architect .
    ?architect <http://dbpedia.org/ontology/burial> ?architectRestingPlace .
    FILTER(STRSTARTS(STR(?house), ""http://dbpedia.org/resource/P._D._Houston_Jr._House""))
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
328,27,val,"Give me the leader of the office, that is a government agency, of the leader, that is an office holder and a politician, of Gustav Jonson.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/office> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/ontology/leader> ?result . <http://dbpedia.org/resource/Gustav_Jonson> <http://dbpedia.org/property/leader> ?v1 . },"```sparql
SELECT ?agencyLeader WHERE {
  # Step 1: Find the leader associated with Gustav Jonson
  <http://dbpedia.org/resource/Gustav_Jonson> <http://dbpedia.org/ontology/leader> ?politician .
  
  # Ensure this politician is an office holder and a politician
  ?politician <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder> ;
              <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .
  
  # Step 2: Identify the office this politician holds
  ?politician <http://dbpedia.org/property/office> ?office .

  # Step 3: Determine the government agency related to this office
  ?office <http://dbpedia.org/ontology/governmentAgency> ?agency .
  
  # Ensure this is a government agency
  ?agency <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency> .

  # Step 4: Find the leader of this government agency
  ?agency <http://dbpedia.org/property/leader> ?agencyLeader .
}
```",3,6,4,3,1,3,3,71,0,0,1,0,0.0,0
778,12,val,"Give me the entity in United States and author of the work, that is a software, of Bill Joy.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/United_States> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Software>. ?v0 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Bill_Joy> . ?v0 <http://dbpedia.org/ontology/author> ?result . },"```sparql
SELECT ?entity WHERE {
  ?software <http://dbpedia.org/ontology/author> <http://dbpedia.org/resource/Bill_Joy> .
  ?software <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Software> .
  OPTIONAL { ?entity <http://dbpedia.org/property/country> <http://dbpedia.org/resource/United_States> . }
  FILTER EXISTS { ?software ?p ?entity . }
}
```",3,4,4,2,2,3,2,20,0,0,1,0,0.0,0
161,30,val,"Give me the military force of Rif War and military force of Spanish Civil War and commander in the force, that is an event, of Emilio Mola.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Emilio_Mola> . ?v1 <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Rif_War> . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . },"```sparql
SELECT ?rifWarForce ?civilWarForce ?event WHERE {
  ?rifWarForce <http://dbpedia.org/ontology/event> <http://dbpedia.org/resource/Rif_War> .
  ?rifWarForce a <http://dbpedia.org/ontology/MilitaryForce> .

  ?civilWarForce <http://dbpedia.org/ontology/event> <http://dbpedia.org/resource/Spanish_Civil_War> .
  ?civilWarForce a <http://dbpedia.org/ontology/MilitaryForce> .

  ?event a <http://dbpedia.org/ontology/Event> ;
         <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Emilio_Mola> ;
         <http://dbpedia.org/ontology/militaryForce> ?rifWarForce .
  
  OPTIONAL {
    ?event <http://dbpedia.org/ontology/militaryForce> ?civilWarForce .
  }
}
```",4,5,5,2,3,3,3,71,0,0,11,0,0.0,0
994,30,val,"Give me the associated musical artist of Red Tide (band) and band member of the person born, that is a musical artist, as Donald Maynard Dokken and associated musical artist of S.A. Slayer.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://dbpedia.org/property/birthName> ""Donald Maynard Dokken""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Red_Tide_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/S.A._Slayer> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
SELECT ?associatedArtist WHERE {
  # Part 1: Associated musical artist of Red Tide (band)
  <http://dbpedia.org/resource/Red_Tide_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?artist1 .
  
  # Part 2: Band member who is a person born as a musical artist and associated with Donald Maynard Dokken
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
  ?person <http://dbpedia.org/property/birthName> ""Donald Maynard Dokken"" .
  ?bandMember <http://dbpedia.org/ontology/member> ?person .
  
  # Part 3: Associated musical artist of S.A. Slayer
  <http://dbpedia.org/resource/S._A._Slayer> <http://dbpedia.org/ontology/associatedMusicalArtist> ?artist2 .

  # Combine conditions to find the common associated artist
  FILTER (?artist1 = ?associatedArtist && ?artist2 = ?associatedArtist)
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
161,22,val,"Give me the military force of Rif War and commander in the force, that is an event, of Emilio Mola.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Emilio_Mola> . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Rif_War> . ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"```sparql
SELECT ?militaryForce ?commander WHERE {
  ?rifWar <http://dbpedia.org/ontology/militaryForce> ?militaryForce .
  ?rifWar <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event> .

  ?commander <http://dbpedia.org/ontology/commanderOf> ?militaryForce .
  ?emilioMolaEvent <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Emilio_Mola> .
  ?emilioMolaEvent <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event> .

  FILTER(?rifWar = ?emilioMolaEvent)
}
```",3,4,4,2,2,3,3,71,0,0,12,0,0.0,0
9,20,val,"Give me the alma mater of the awardee of Royal Medal and alma mater of John Alderdice, Baron Alderdice.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Medal> . ?v2 <http://dbpedia.org/ontology/almaMater> ?result . <http://dbpedia.org/resource/John_Alderdice,_Baron_Alderdice> <http://dbpedia.org/ontology/almaMater> ?result . }","```sparql
SELECT DISTINCT ?almaMater WHERE {
  # Find alma mater of awardees of the Royal Medal
  ?person <http://dbpedia.org/ontology/awarded> <http://dbpedia.org/resource/Royal_Medal> .
  ?person <http://dbpedia.org/ontology/almaMater> ?almaMater .

  # Find alma mater of John Alderdice, Baron Alderdice
  <http://dbpedia.org/resource/John_Alderdice,_Baron_Alderdice> <http://dbpedia.org/ontology/almaMater> ?almaMater .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
360,17,val,"Give me the native of the death place, that is a settlement, of Winnie Madikizela-Mandela and reference to Manfred Mann.","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Manfred Mann""@en . <http://dbpedia.org/resource/Winnie_Madikizela-Mandela> <http://dbpedia.org/ontology/deathPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . }","```sparql
SELECT ?native ?referenceToManfredMann WHERE {
  # Step 1: Identify the death place of Winnie Madikizela-Mandela that is a settlement.
  <http://dbpedia.org/resource/Winnie_Madikizela-Mandela> <http://dbpedia.org/ontology/deathPlace> ?deathPlace .
  ?deathPlace <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement> .

  # Step 2: Find who is native to this settlement.
  ?native <http://dbpedia.org/property/nativeOf> ?deathPlace .
  
  # Step 3: Check for any references or connections to Manfred Mann related to this individual.
  OPTIONAL {
    ?native <http://dbpedia.org/ontology/referenceTo> <http://dbpedia.org/resource/Manfred_Mann> .
    BIND(""Yes"" AS ?referenceToManfredMann)
  }
  
  # If no direct reference, check for any other possible connection
  FILTER NOT EXISTS { ?native <http://dbpedia.org/ontology/referenceTo> <http://dbpedia.org/resource/Manfred_Mann> }
  OPTIONAL {
    ?relatedEntity <http://dbpedia.org/ontology/associatedWith> ?native .
    ?relatedEntity <http://dbpedia.org/ontology/referenceTo> <http://dbpedia.org/resource/Manfred_Mann> .
    BIND(""Indirect"" AS ?referenceToManfredMann)
  }
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
378,33,val,"Give me the war of Carl Pontus Gahn and war of the commander in the reference, that is a military conflict, to Peninsular War.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Peninsular War""@en . ?v0 <http://dbpedia.org/ontology/commander> ?v3 . <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/ontology/battle> ?result . }","```sparql
SELECT DISTINCT ?war1 ?war2 WHERE {
  # Find the military conflict related to Carl Pontus Gahn
  <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/ontology/battle> ?war1 .
  ?war1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .

  # Find the commander of the Peninsular War
  <http://dbpedia.org/resource/Peninsular_War> <http://dbpedia.org/ontology/commander> ?commander .
  
  # Find the military conflict commanded by this commander
  ?commander <http://dbpedia.org/ontology/battle> ?war2 .
  ?war2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
}
```",4,5,5,3,2,3,3,71,2,124,0,0.015873015873015872,1.0,0.03125
996,13,val,Give me the force of the awardee of the elevation of Lac d'Avoriaz.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Lac_d'Avoriaz> <http://dbpedia.org/ontology/elevation> ?v0 . ?result <http://dbpedia.org/ontology/commander> ?v1 . },"```sparql
SELECT ?force WHERE {
  ?awardee <http://dbpedia.org/ontology/award> ?elevation .
  ?elevation <http://dbpedia.org/property/location> <http://dbpedia.org/resource/Lac_d%27Avoriaz> .
  ?awardee <http://dbpedia.org/ontology/force> ?force .
}
```",3,3,4,3,1,3,2,20,0,0,11,0,0.0,0
281,34,val,Give me the war of the awardee of the award of Jonathon Band and war of New Zealand Army.,SELECT ?result WHERE { <http://dbpedia.org/resource/Jonathon_Band> <http://dbpedia.org/property/awards> ?v2 . ?v1 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/New_Zealand_Army> <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/property/awards> ?v2 . },"```sparql
# Step 1: Get awards associated with Jonathon Band
SELECT ?award WHERE {
    <http://dbpedia.org/resource/Jonathan_Band> dbo:awardedBy ?award .
}

# Step 2: Find wars related to those awards
SELECT DISTINCT ?war WHERE {
    ?award dbo:relatedTo ?war .
    FILTER(?award IN (VALUES ?award) {<insert_award_uris_here>})
}

# Step 3: Get wars involving the New Zealand Army
SELECT DISTINCT ?war WHERE {
    <http://dbpedia.org/resource/New_Zealand_Army> dbo:participatedIn ?war .
}

# Step 4: Find common war from steps 2 and 3
SELECT DISTINCT ?commonWar WHERE {
    { ?award dbo:relatedTo ?commonWar . FILTER(?award IN (VALUES ?award) {<insert_award_uris_here>}) }
    UNION
    { <http://dbpedia.org/resource/New_Zealand_Army> dbo:participatedIn ?commonWar . }
}
```",4,4,5,3,2,3,3,71,0,0,9,0,0.0,0
55,15,val,"Give me the band member of the producer, that is a band, of Used to Love Her and band of Newsted.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. <http://dbpedia.org/resource/Newsted> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Used_to_Love_Her> <http://dbpedia.org/ontology/producer> ?v1 . },"```sparql
# Step 1: Get the producer of ""Used to Love Her"" and their band
SELECT ?producerBand WHERE {
    ?song dbpedia-owl:composer ?producer .
    ?song rdfs:label ""Used to Love Her""@en .
    ?producer dbpedia-owl:bandMember ?member .
    ?producer dbpedia-owl:associatedBand ?producerBand .
}

# Step 2: Get the band associated with Newsted
SELECT ?newstedBand WHERE {
    <http://dbpedia.org/resource/Newsted> dbpedia-owl:bandMember ?member .
    <http://dbpedia.org/resource/Newsted> dbpedia-owl:associatedBand ?newstedBand .
}

# Step 3: Find common band members between the two bands
SELECT DISTINCT ?commonMember WHERE {
    # Producer's band member
    ?producerBand dbpedia-owl:bandMember ?member1 .
    
    # Newsted's band member
    ?newstedBand dbpedia-owl:bandMember ?member2 .

    FILTER (?member1 = ?member2)
    BIND(?member1 AS ?commonMember)
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
981,12,val,"Give me the birth place of the person born, that is a beauty queen, as  and entity in Indonesia.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BeautyQueen>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Indonesia> . ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/birthName> """"@en . }","```sparql
SELECT ?person ?birthPlace WHERE {
  ?person <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Indonesia>.
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BeautyQueen>.
  ?person <http://dbpedia.org/property/birthPlace> ?birthPlace.
}
```",3,4,4,2,2,3,2,20,0,0,19,0,0.0,0
534,11,val,"Give me the headquarter of Royal Dublin Society and birth place of the child, that is a politician and an office holder, of Desmond FitzGerald (politician).",SELECT ?result WHERE { <http://dbpedia.org/resource/Royal_Dublin_Society> <http://dbpedia.org/ontology/headquarter> ?result . <http://dbpedia.org/resource/Desmond_FitzGerald_(politician)> <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
# Query to find the headquarter of Royal Dublin Society
SELECT ?headquarters WHERE {
  <http://dbpedia.org/resource/Royal_Dublin_Society> <http://dbpedia.org/ontology/headquarters> ?headquarters .
}

# Query to find the birthplace of the child of Desmond FitzGerald who is a politician and an office holder
SELECT ?birthPlace WHERE {
  ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .
  ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder> .
  ?child <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Desmond_FitzGerald_(politician)> .
  ?child <http://dbpedia.org/property/birthPlace> ?birthPlace .
}
```",3,5,4,2,2,3,2,20,0,0,1,0,0.0,0
161,42,val,"Give me the commander in the force, that is an event, of Emilio Mola and military force of Spanish Civil War and military force of the force, that is a societal event and an event and a military conflict, of Francisco Franco.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Franco> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Emilio_Mola> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v2 . },"```sparql
SELECT ?commander WHERE {
  ?force <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>.
  ?force <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Emilio_Mola>.
  
  ?spanishCivilWar <http://dbpedia.org/ontology/militaryForce> ?force.
  ?spanishCivilWar <http://www.w3.org/2000/01/rdf-schema#label> ""Spanish Civil War"" .
  
  ?franquistaForce <http://dbpedia.org/ontology/militaryForce> ?force.
  ?franquistaForce <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>.
  ?franquistaForce <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>.
  ?franquistaForce <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>.
  
  ?franquistaForce <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Franco>.
}
```",5,9,6,2,3,3,3,71,0,0,32,0,0.0,0
801,35,val,"Give me the associated musical artist of the writer, that is a musical artist and an artist, of 40 Dayz & 40 Nightz and professional in the alter ego of The Shadow.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/40_Dayz_&_40_Nightz> <http://dbpedia.org/property/writer> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v2 . ?result <http://dbpedia.org/property/occupation> ?v2 . },"```sparql
SELECT ?writer ?associatedArtist WHERE {
  ?writer <http://dbpedia.org/ontology/writtenWork> <http://dbpedia.org/resource/40_Dayz_%26_40_Nightz> .
  ?writer <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
  ?writer <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist> .
  ?writer <http://dbpedia.org/property/professionalAlterEgo> ""The Shadow"" .
  
  ?writer <http://dbpedia.org/ontology/associatedMusicalArtist> ?associatedArtist .
}
```",4,6,5,2,2,3,3,71,0,0,22,0,0.0,0
801,32,val,"Give me the professional in the alter ego of The Shadow and producer of the work, that is a musical work and a song and a work, of 50 Cent.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/50_Cent> . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://dbpedia.org/ontology/producer> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. },"```sparql
SELECT ?professional WHERE {
    ?shadow <http://dbpedia.org/ontology/alterEgo> ""The Shadow"" .
    ?shadow <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person> .
    ?shadow <http://dbpedia.org/ontology/profession> ?professional .

    ?work <http://purl.org/dc/terms/creator> <http://dbpedia.org/resource/50_Cent> ;
          <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork> ;
          <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song> .

    ?work <http://purl.org/dc/terms/producer> ?professional .
}
```",4,7,5,2,2,3,3,71,0,0,27,0,0.0,0
534,12,val,Give me the birth place of Garret FitzGerald and headquarter of the owner of RDS Arena.,SELECT ?result WHERE { <http://dbpedia.org/resource/Garret_FitzGerald> <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/ontology/headquarter> ?result . <http://dbpedia.org/resource/RDS_Arena> <http://dbpedia.org/ontology/owner> ?v0 . },"```sparql
# Query to get the birthplace of Garret FitzGerald
SELECT ?birthPlace WHERE {
  <http://dbpedia.org/resource/Garret_FitzGerald> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
}

UNION

# Query to get the headquarters of the owner of RDS Arena
SELECT ?headquarters WHERE {
  ?arena <http://dbpedia.org/property/owner> ?owner .
  ?owner <http://dbpedia.org/ontology/headquarter> ?headquarters .
  
  FILTER(?arena = <http://dbpedia.org/resource/RDS_Arena>)
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
392,16,val,"Give me the province of the residence, that is a settlement and Italian, of Sebastiano Bianchetti and entity in Italy.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://dbpedia.org/ontology/province> ?result . <http://dbpedia.org/resource/Sebastiano_Bianchetti> <http://dbpedia.org/property/residence> ?v2 . },"```sparql
SELECT ?residence ?province WHERE {
  ?residence <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>.
  ?residence <http://dbpedia.org/property/country> <http://dbpedia.org/resource/Italy>.
  <http://dbpedia.org/resource/Sebastiano_Bianchetti> <http://dbpedia.org/property/residence> ?residence.
  
  OPTIONAL {
    ?residence <http://dbpedia.org/ontology/province> ?province.
  }
}
```",3,5,4,2,2,2,3,28,0,0,1,0,0.0,0
421,18,val,Give me the person born as the birth name of Dino Merlin and native of Socialist Federal Republic of Yugoslavia.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v0 . <http://dbpedia.org/resource/Dino_Merlin> <http://dbpedia.org/property/birthName> ?v0 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Socialist_Federal_Republic_of_Yugoslavia> . },"```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/birthName> ""Dino Merlin"" .
  ?person <http://dbpedia.org/property/nativePlace> <http://dbpedia.org/resource/Socialist_Federal_Republic_of_Yugoslavia> .
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
488,25,val,Give me the death place of Tokugawa Ieyasu and administration of the father of Emperor Go-Mizunoo.,SELECT ?result WHERE { <http://dbpedia.org/resource/Emperor_Go-Mizunoo> <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/property/leader> ?v1 . <http://dbpedia.org/resource/Tokugawa_Ieyasu> <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
SELECT ?deathPlace (GROUP_CONCAT(?administration; separator="", "") AS ?administrations)
WHERE {
  # Find the death place of Tokugawa Ieyasu
  <http://dbpedia.org/resource/Tokugawa_Ieyasu> <http://dbpedia.org/ontology/deathPlace> ?deathPlace .

  # Find the father of Emperor Go-Mizunoo and his administration roles
  OPTIONAL {
    <http://dbpedia.org/resource/Emperor_Go-Mizunoo> <http://dbpedia.org/ontology/father> ?father .
    ?father <http://dbpedia.org/ontology/administration> ?administration .
  }
}
```",3,3,4,2,2,3,3,71,1,2,0,0.3333333333333333,1.0,0.5
232,23,val,Give me the child of the person born as the birth name of Jon Pertwee.,SELECT ?result WHERE { <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/property/birthName> ?v2 . ?v0 <http://dbpedia.org/ontology/child> ?result . ?v0 <http://dbpedia.org/property/birthName> ?v2 . },"```sparql
SELECT ?child WHERE {
  ?person <http://dbpedia.org/ontology/birthName> ""Jon Pertwee""@en .
  ?person <http://dbpedia.org/ontology/child> ?child .
}
```",3,3,4,3,1,3,3,71,0,0,1,0,0.0,0
488,18,val,Give me the birth place of Enomoto Takeaki and death place of Tokugawa Ieyasu and administration of Emperor Go-Yōzei.,SELECT ?result WHERE { <http://dbpedia.org/resource/Tokugawa_Ieyasu> <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Enomoto_Takeaki> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Emperor_Go-Yōzei> . },"```sparql
SELECT ?entity ?place WHERE {
  { 
    <http://dbpedia.org/resource/Enomoto_Takeaki> <http://dbpedia.org/ontology/birthPlace> ?place .
    BIND(""Birth Place of Enomoto Takeaki"" AS ?entity)
  }
  UNION
  {
    <http://dbpedia.org/resource/Tokugawa_Ieyasu> <http://dbpedia.org/ontology/deathPlace> ?place .
    BIND(""Death Place of Tokugawa Ieyasu"" AS ?entity)
  }
  UNION
  {
    <http://dbpedia.org/resource/Emperor_Go-Yōzei> <http://dbpedia.org/property/reign> ?reign .
    ?reign <http://dbpedia.org/ontology/location> ?place .
    BIND(""Administration of Emperor Go-Yōzei"" AS ?entity)
  }
}
```",3,3,4,1,3,3,3,71,1,4,0,0.2,1.0,0.33333333333333337
820,13,val,Give me the professional in the award of the author of Understanding Comics.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v1 . ?v0 <http://dbpedia.org/property/awards> ?v1 . <http://dbpedia.org/resource/Understanding_Comics> <http://dbpedia.org/ontology/author> ?v0 . },"```sparql
SELECT ?professional WHERE {
  ?comic <http://dbpedia.org/ontology/author> ?author .
  ?award <http://dbpedia.org/property/winner> ?author .
  ?award <http://dbpedia.org/ontology/professional> ?professional .
  FILTER(STR(?comic) = ""Understanding Comics"")
}
```",3,3,4,3,1,3,2,20,0,0,39650,0,0.0,0
378,25,val,Give me the war of Joaquín Blake and claim to fame of the commander in Great Siege of Gibraltar.,SELECT ?result WHERE { <http://dbpedia.org/resource/Great_Siege_of_Gibraltar> <http://dbpedia.org/ontology/commander> ?v1 . <http://dbpedia.org/resource/Joaquín_Blake> <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/ontology/knownFor> ?result . },"```sparql
# Query 1: Find the war associated with Joaquín Blake
SELECT ?war WHERE {
    <http://dbpedia.org/resource/Joaqu%C3%ADn_Blake> <http://dbpedia.org/ontology/battle> ?war .
}

# Query 2: Find the claim to fame of the commander in Great Siege of Gibraltar
SELECT ?claimToFame WHERE {
    <http://dbpedia.org/resource/Great_Siege_of_Gibraltar> <http://dbpedia.org/ontology/commander> ?commander .
    ?commander <http://dbpedia.org/ontology/knownFor> ?claimToFame .
}
```",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
281,32,val,"Give me the entity in the birth place, that is a country, of Bob Heffron and war of the awardee of Knight Grand Cross of the Order of the Bath.",SELECT ?result WHERE { <http://dbpedia.org/resource/Bob_Heffron> <http://dbpedia.org/ontology/birthPlace> ?v3 . ?result <http://dbpedia.org/ontology/place> ?v3 . ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_the_Bath> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
# Step 1: Find Bob Heffron's birthplace (country)
SELECT ?birthCountry WHERE {
    <http://dbpedia.org/resource/Bob_Heffron> <http://www.w3.org/2000/01/rdf-schema#seeAlso> ?birthPlace .
    ?birthPlace <http://dbpedia.org/ontology/country> ?birthCountry .
}

# Step 2: Find entities in Bob Heffron's birthplace
SELECT DISTINCT ?entity WHERE {
    ?entity <http://www.w3.org/2000/01/rdf-schema#seeAlso> ?birthPlace .
    ?birthPlace <http://dbpedia.org/ontology/country> ?birthCountry .
}

# Step 3: Find wars linked to Knight Grand Cross of the Order of the Bath awardees
SELECT DISTINCT ?war WHERE {
    ?person <http://dbpedia.org/property/orderOfTheBath> ""Knight Grand Cross"" .
    ?person <http://dbpedia.org/ontology/war> ?war .
}

# Step 4: Combine results to find common entities
SELECT DISTINCT ?entity WHERE {
    # Entities in Bob Heffron's birthplace
    ?entity <http://www.w3.org/2000/01/rdf-schema#seeAlso> ?birthPlace .
    ?birthPlace <http://dbpedia.org/ontology/country> ?birthCountry .

    # Wars linked to Knight Grand Cross awardees
    ?person <http://dbpedia.org/property/orderOfTheBath> ""Knight Grand Cross"" .
    ?person <http://dbpedia.org/ontology/war> ?war .

    # Find common entities (assuming a property linking them, e.g., relatedTo)
    ?entity <http://www.w3.org/2004/02/skos/core#related> ?war .
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
492,41,val,"Give me the commander in the war, that is a military conflict and an event, of Frédéric-Georges Herr and person decedent at Algiers and person decedent at the work of US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Algiers> . ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Frédéric-Georges_Herr> <http://dbpedia.org/ontology/battle> ?v4 . ?v2 <http://dbpedia.org/property/author> ""US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite""@en . }","```sparql
SELECT ?commander WHERE {
  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>.
  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>.

  <http://dbpedia.org/resource/Frédéric-Georges_Herr> <http://dbpedia.org/ontology/commander> ?war.
  
  OPTIONAL { 
    ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>.
    ?person <http://dbpedia.org/property/deathPlace> <http://dbpedia.org/resource/Algiers>.
    ?person <http://dbpedia.org/ontology/battle> ?war.
  }
  
  OPTIONAL {
    ?satterthwaite <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>.
    ?satterthwaite <http://dbpedia.org/property/deathPlace> <http://dbpedia.org/resource/Algiers>.
    ?satterthwaite <http://dbpedia.org/ontology/work> <http://dbpedia.org/resource/US_Assistant_Secretary_of_State_for_African_Affairs>.
    ?satterthwaite <http://dbpedia.org/ontology/battle> ?war.
  }

  ?commander <http://dbpedia.org/ontology/commander> ?war.
}
```",5,7,6,2,3,3,3,71,0,0,1,0,0.0,0
232,43,val,"Give me the native of London and child of Jon Pertwee and actor of the claim to fame, that is a film and a military conflict, of the professional in Actor, narrator and producer.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/ontology/child> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v0 <http://dbpedia.org/ontology/knownFor> ?v4 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/London> . ?v4 <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://dbpedia.org/property/occupation> ""Actor, narrator and producer""@en . }","```sparql
SELECT ?person WHERE {
  ?professional rdf:type dbo:Actor ;
                dbo:narrator true ;
                dbo:producer true .
  
  ?film rdf:type dbo:Film ;
        dbo:militaryConflict true ;
        dbo:knownFor ?professional .

  ?actor rdf:type dbo:Person ;
         dbo:nativePlace dbr:London ;
         dbo:childOf dbr:Jon_Pertwee ;
         dbo:actedIn ?film .
  
  FILTER EXISTS { ?actor rdfs:label ?person }
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
747,19,val,Give me the person born on the birth date of Pavlo Khudzik and band of Amba Shepherd.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthDate> ?v0 . <http://dbpedia.org/resource/Pavlo_Khudzik> <http://dbpedia.org/ontology/birthDate> ?v0 . <http://dbpedia.org/resource/Amba_Shepherd> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
# Step 1: Get the birth date of Pavlo Khudzik
SELECT ?birthDate WHERE {
    <http://dbpedia.org/resource/Pavlo_Khudzik> <http://www.w3.org/2002/07/owl#sameAs> ?person .
    ?person <http://dbpedia.org/ontology/birthDate> ?birthDate .
}

# Step 2: Find people born on the same date as Pavlo Khudzik
SELECT DISTINCT ?person WHERE {
    ?person <http://www.w3.org/2002/07/owl#sameAs> ?pavloEquivalent .
    ?pavloEquivalent <http://dbpedia.org/ontology/birthDate> ?birthDate .
    FILTER(?birthDate = ""Pavlo_Khudzik_birth_date"") # Replace with actual birth date from Step 1
}

# Step 3: Get the band associated with Amba Shepherd
SELECT ?band WHERE {
    <http://dbpedia.org/resource/Amba_Shepherd> <http://dbpedia.org/ontology/memberOf> ?band .
}
```

Note: In the SPARQL query, replace `""Pavlo_Khudzik_birth_date""` with the actual birth date obtained from Step 1. This query assumes that DBpedia has equivalent resources for Pavlo Khudzik and Amba Shepherd, which may need to be adjusted based on available data.",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
285,11,val,Give me the spouse of Aristotle Onassis and parent of the child of Tina Onassis Niarchos.,SELECT ?result WHERE { <http://dbpedia.org/resource/Tina_Onassis_Niarchos> <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Aristotle_Onassis> . ?v2 <http://dbpedia.org/ontology/parent> ?result . },"```sparql
SELECT ?spouse WHERE {
  <http://dbpedia.org/resource/Aristotle_Onassis> <http://dbpedia.org/ontology/spouse> ?spouse .
  ?spouse <http://dbpedia.org/property/child> <http://dbpedia.org/resource/Tina_Onassis_Niarchos> .
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
547,43,val,Give me the resting place of James Burton (Egyptologist) and resting place of Alan Cunningham and resting place of the actor of the show with Emily Richard.,SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/restingPlace> ?result . ?v0 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emily_Richard> . <http://dbpedia.org/resource/Alan_Cunningham> <http://dbpedia.org/ontology/restingPlace> ?result . ?v0 <http://dbpedia.org/property/starring> ?v4 . <http://dbpedia.org/resource/James_Burton_(Egyptologist)> <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
SELECT ?person ?restingPlace WHERE {
  { 
    <http://dbpedia.org/resource/James_Burton_(Egyptologist)> <http://dbpedia.org/ontology/burial> ?restingPlace .
    BIND(<http://dbpedia.org/resource/James_Burton_(Egyptologist)> AS ?person)
  }
  UNION
  {
    <http://dbpedia.org/resource/Alan_Cunningham> <http://dbpedia.org/ontology/burial> ?restingPlace .
    BIND(<http://dbpedia.org/resource/Alan_Cunningham> AS ?person)
  }
  UNION
  {
    ?show <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Emily_Richard> .
    ?actor <http://dbpedia.org/ontology/starring> ?show .
    ?actor <http://dbpedia.org/ontology/burial> ?restingPlace .
    BIND(?actor AS ?person)
  }
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
801,21,val,Give me the associated musical artist of Chris Taylor (music producer) and professional in the alter ego of The Shadow.,SELECT ?result WHERE { <http://dbpedia.org/resource/Chris_Taylor_(music_producer)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v1 . },"```sparql
SELECT ?artist WHERE {
  # Find associated musical artists of Chris Taylor (music producer)
  <http://dbpedia.org/resource/Chris_Taylor_(music_producer)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?artist .
  
  # Find entities with a professional alter ego known as The Shadow
  ?entity <http://dbpedia.org/property/professionalAlterEgo> ""The Shadow""@en .

  # Look for an intersection between the two sets of results
  FILTER(?artist = ?entity)
}
```",3,3,4,2,2,3,3,71,0,0,4,0,0.0,0
435,18,val,Give me the region of Greenwich Mean Time and work of the author of Iceland.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Greenwich_Mean_Time> . ?result <http://dbpedia.org/property/author> ?v0 . <http://dbpedia.org/resource/Iceland> <http://dbpedia.org/property/author> ?v0 . },"```sparql
# Query 1: Region of Greenwich Mean Time
SELECT ?region WHERE {
    <http://dbpedia.org/resource/Greenwich_Mean_Time> <http://www.w3.org/2006/time#inTimeZone> ?timeZone .
    ?timeZone <http://dbpedia.org/ontology/country> ?country .
    ?country <http://dbpedia.org/ontology/administrativeTerritory> ?region .
}

# Query 2: Work of the Author of Iceland
SELECT DISTINCT ?work WHERE {
    # Find a work related to Iceland
    ?work <http://purl.org/dc/terms/subject> <http://dbpedia.org/resource/Iceland> .

    # Get the author of that work
    ?work <http://purl.org/dc/terms/creator> ?author .

    # Retrieve other works by this author
    ?otherWork <http://purl.org/dc/terms/creator> ?author .
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
328,20,val,Give me the awardee of Order of Suvorov and commander in the force of Ferenc Szálasi.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Order_of_Suvorov> . ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Ferenc_Szálasi> . ?v2 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/receivedAward> <http://dbpedia.org/resource/Order_of_Suvorov>.
  ?person <http://dbpedia.org/ontology/commander> ?force.
  ?force <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Ferenc_Szálasi>.
}
```",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
754,12,val,Give me the parent of the child of Ram Khamhaeng and parent of Loe Thai.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ram_Khamhaeng> <http://dbpedia.org/ontology/child> ?v0 . ?result <http://dbpedia.org/ontology/child> ?v0 . <http://dbpedia.org/resource/Loe_Thai> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
SELECT ?commonParent WHERE {
  # Find the child of Ram Khamhaeng
  ?child rdf:type dbo:Person ;
         dbo:parent <http://dbpedia.org/resource/Ram_Khamhaeng> .

  # Find the parent(s) of this child
  ?child dbo:parent ?parent1 .

  # Find the parent(s) of Loe Thai
  ?loeThai rdf:type dbo:Person ;
           dbo:parent ?parent2 .
  FILTER(?loeThai = <http://dbpedia.org/resource/Loe_Thai>) 

  # Find common parents between the child's parent and Loe Thai's parent
  VALUES ?commonParent { ?parent1 ?parent2 }
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
994,32,val,"Give me the associated musical artist of the associated musical artist of Watchtower (band) and associated musical artist of the band member, that is a band and a group and an organisation, of Meshuggah.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Meshuggah> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Watchtower_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
# Step 1: Find the associated musical artist of Watchtower (band)
SELECT ?artist WHERE {
    <http://dbpedia.org/resource/Watchtower_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?artist .
}

# Step 2: Find the associated musical artist of the artist found in step 1
SELECT ?secondLevelArtist WHERE {
    ?artist <http://dbpedia.org/ontology/associatedMusicalArtist> ?secondLevelArtist .
    FILTER(?artist IN {<result_from_step_1>})
}

# Step 3: Identify a band member of Meshuggah who is part of a band, group, and organization
SELECT ?member WHERE {
    <http://dbpedia.org/resource/Meshuggah> <http://dbpedia.org/ontology/member> ?member .
    ?member <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band> .
    ?member <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group> .
    ?member <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organization> .
}

# Step 4: Find the associated musical artist of the member found in step 3
SELECT ?thirdLevelArtist WHERE {
    ?member <http://dbpedia.org/ontology/associatedMusicalArtist> ?thirdLevelArtist .
    FILTER(?member IN {<result_from_step_3>})
}

# Final Step: Find the common associated musical artist from steps 2 and 4
SELECT DISTINCT ?commonArtist WHERE {
    ?secondLevelArtist <http://dbpedia.org/ontology/associatedMusicalArtist> ?commonArtist .
    ?thirdLevelArtist <http://dbpedia.org/ontology/associatedMusicalArtist> ?commonArtist .
    FILTER(?secondLevelArtist IN {<result_from_step_2>})
    FILTER(?thirdLevelArtist IN {<result_from_step_4>})
}
```",4,7,5,2,2,3,3,71,0,0,5,0,0.0,0
391,19,val,Give me the native of the figure known as Hub City and actor of The Departed.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . <http://dbpedia.org/resource/The_Departed> <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://dbpedia.org/property/nickname> ""Hub City""@en . }","```sparql
SELECT ?actor ?nativeCity WHERE {
  ?movie <http://dbpedia.org/ontology/starring> ?actor .
  ?movie <http://dbpedia.org/property/title> ""The Departed"" .
  
  ?actor <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  ?birthPlace <http://www.w3.org/2000/01/rdf-schema#label> ?nativeCity .

  FILTER(CONTAINS(LCASE(?nativeCity), ""hub city""))
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
161,18,val,Give me the commander in Biscay Campaign and military force of Spanish Civil War and military force of Rif War.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Rif_War> . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . <http://dbpedia.org/resource/Biscay_Campaign> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT DISTINCT ?commander WHERE {
  # Find commanders of the Biscay Campaign
  <http://dbpedia.org/resource/Biscay_Campaign> <http://dbpedia.org/ontology/commander> ?commander .
  
  # Ensure this commander is associated with a military force in the Spanish Civil War
  ?commander <http://dbpedia.org/property/militaryForce> ?force1 .
  ?force1 <http://dbpedia.org/ontology/event> <http://dbpedia.org/resource/Spanish_Civil_War> .

  # Ensure this commander is also associated with a military force in the Rif War
  ?commander <http://dbpedia.org/property/militaryForce> ?force2 .
  ?force2 <http://dbpedia.org/ontology/event> <http://dbpedia.org/resource/Rif_War> .
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
48,13,val,"Give me the band of the writer of the work, that is a work, of Shellback (record producer).",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Shellback_(record_producer)> . ?v0 <http://dbpedia.org/property/writer> ?v1 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. },"```sparql
SELECT ?band WHERE {
  ?work <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Shellback_(record_producer)> .
  ?work <http://purl.org/dc/terms/creator> ?writer .
  ?writer <http://dbpedia.org/property/band> ?band .
}
```",3,4,4,3,1,3,2,20,0,0,922,0,0.0,0
54,23,val,Give me the child of the father of the child of Thinkhaya of Pagan.,SELECT ?result WHERE { <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/ontology/child> ?result . },"```sparql
SELECT ?grandchild WHERE {
  ?child dbo:father <http://dbpedia.org/resource/Thinkhaya_of_Pagan> .
  ?child dbo:child ?grandchild .
}
```",3,3,4,3,1,3,3,71,0,0,3,0,0.0,0
435,19,val,"Give me the territory administered from the figure known, that is a settlement and a town and Icelandic, as Land of fire and ice and region of Greenwich Mean Time and work of Article 62, Section IV of Constitution of Iceland.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Iceland>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Town>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Greenwich_Mean_Time> . ?v1 <http://dbpedia.org/property/nickname> ""Land of fire and ice""@en . ?result <http://dbpedia.org/ontology/capital> ?v1 . ?result <http://dbpedia.org/property/author> ""Article 62, Section IV of Constitution of Iceland""@en . }","```sparql
SELECT ?result WHERE {
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>.
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Town>.
  ?result <http://dbpedia.org/property/country> <http://dbpedia.org/resource/Iceland>.
  ?result <http://dbpedia.org/ontology/nickname> ""Land of fire and ice"".
  ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Greenwich_Mean_Time>.
  OPTIONAL { ?figure <http://dbpedia.org/property/administers> ?result. }
  FILTER EXISTS {
    ?constitution <http://dbpedia.org/ontology/article> ""Article 62, Section IV"".
    ?constitution <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Iceland>.
    ?figure <http://dbpedia.org/property/relatedTo> ?constitution.
  }
}
```",4,7,5,2,3,2,3,28,0,0,1,0,0.0,0
314,14,val,Give me the awardee of the award of Sergei Makovetsky and person deceased at Madrid.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ?v2 . <http://dbpedia.org/resource/Sergei_Makovetsky> <http://dbpedia.org/property/awards> ?v2 . ?result <http://dbpedia.org/ontology/restingPlace> <http://dbpedia.org/resource/Madrid> . },"```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/receivedAward> ?award .
  ?award <http://dbpedia.org/property/giver> <http://dbpedia.org/resource/Sergei_Makovetsky> .
  ?person <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Madrid> .
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
617,15,val,"Give me the parent of Mieszko II Lambert and child of the child, that is a royalty, of the parent of Mlada (abbess).",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Mlada_(abbess)> . ?v1 <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Mieszko_II_Lambert> . ?v1 <http://dbpedia.org/ontology/parent> ?v0 . },"```sparql
# Step 1: Find Mieszko II Lambert's parent
SELECT ?mieszkoParent WHERE {
    <http://dbpedia.org/resource/Mieszko_II_Lambert> dbo:parent ?mieszkoParent .
}

# Step 2: Find the child of Mieszko II Lambert (already known as Mieszko II Lambert himself)
# This step is implicit in the question, so we directly use Mieszko II Lambert

# Step 3: Find the parent of Mlada (abbess) and their royal child
SELECT ?mladaParent ?royalChild WHERE {
    <http://dbpedia.org/resource/Mlada_(abbess)> dbo:parent ?mladaParent .
    ?mladaParent dbo:child ?royalChild .
    ?royalChild a dbo:Royalty .
}

# Step 4: Find the child of this royal individual
SELECT ?finalChild WHERE {
    # Assuming ?royalChild is obtained from step 3
    ?royalChild dbo:child ?finalChild .
}
```

Note: This query assumes that the necessary data exists in DBpedia and may need adjustments based on actual data availability. The query should be executed in parts, using intermediate results to proceed to the next step.",4,5,5,3,2,3,2,20,0,0,1,0,0.0,0
303,17,val,"Give me the party of Arnulfo Arias and entity in the country, that is a country, of El Valle de Antón.",SELECT ?result WHERE { <http://dbpedia.org/resource/Arnulfo_Arias> <http://dbpedia.org/ontology/party> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/El_Valle_de_Antón> <http://dbpedia.org/ontology/country> ?v1 . ?result <http://dbpedia.org/ontology/country> ?v1 . },"```sparql
SELECT ?party WHERE {
  <http://dbpedia.org/resource/Arnulfo_Arias> <http://dbpedia.org/ontology/party> ?party .
}

SELECT DISTINCT ?entity WHERE {
  <http://dbpedia.org/resource/El_Valle_de_Ant%C3%B3n> <http://www.w3.org/2000/01/rdf-schema#seeAlso> ?country .
  ?entity <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place> .
  ?entity <http://dbpedia.org/property/country> ?country .
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
392,12,val,Give me the region of Central European Time and entity in Italy and province of Schio.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy> . <http://dbpedia.org/resource/Schio> <http://dbpedia.org/ontology/province> ?result . ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Central_European_Time> . },"```sparql
SELECT ?entity WHERE {
  ?region <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Central_European_Time>.
  ?entity <http://www.w3.org/2000/01/rdf-schema#seeAlso> ?region.
  ?entity <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>.
  ?entity <http://dbpedia.org/property/province> <http://dbpedia.org/resource/Schio>.
}
```",3,3,4,1,3,2,3,28,0,0,1,0,0.0,0
285,12,val,Give me the spouse of the professional in  and parent of Alexander Onassis.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v0 . <http://dbpedia.org/resource/Alexander_Onassis> <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/property/occupation> """"@en . }","```sparql
SELECT ?spouse WHERE {
  ?parent <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/Alexander_Onassis>.
  ?parent <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Professional>.
  ?parent <http://dbpedia.org/property/spouse> ?spouse.
}
```",3,3,4,2,2,3,2,20,0,0,2,0,0.0,0
492,22,val,"Give me the person decedent at French Algeria and person decedent at the capital, that is a settlement, of Algeria.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/French_Algeria> . <http://dbpedia.org/resource/Algeria> <http://dbpedia.org/ontology/capital> ?v1 . ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . },"```sparql
SELECT ?person WHERE {
  ?capital <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Algeria>;
           <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>.
  
  ?person <http://dbpedia.org/property/deathPlace> ?death1.
  ?person <http://dbpedia.org/property/deathPlace> ?death2.

  FILTER (?death1 = <http://dbpedia.org/resource/French_Algeria> && ?death2 = ?capital)
}
```",3,4,4,2,2,3,3,71,0,0,16,0,0.0,0
16,32,val,Give me the spouse of the person born as Ted Martin McGinley and professional in the profession of Satomi Ishihara.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ""Ted Martin McGinley""@en . ?result <http://dbpedia.org/property/occupation> ?v3 . ?v1 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Satomi_Ishihara> <http://dbpedia.org/property/occupation> ?v3 . }","```sparql
SELECT ?spouse WHERE {
  ?person <http://dbpedia.org/ontology/birthName> ""Ted Martin McGinley"" .
  ?person <http://dbpedia.org/ontology/profession> ?profession .
  ?profession rdfs:label ""Satomi Ishihara""@en .
  ?person <http://dbpedia.org/property/spouse> ?spouse .
}
```",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
378,35,val,Give me the war of the person born as Carl Pontus Gahn and claim to fame of the commander in Great Siege of Gibraltar.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/ontology/knownFor> ?result . <http://dbpedia.org/resource/Great_Siege_of_Gibraltar> <http://dbpedia.org/ontology/commander> ?v1 . ?v2 <http://dbpedia.org/property/birthName> ""Carl Pontus Gahn""@en . }","```sparql
# Query 1: Find the war associated with Carl Pontus Gahn
SELECT ?war WHERE {
    <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/ontology/battle> ?war .
}

# Query 2: Find the claim to fame of the commander in Great Siege of Gibraltar
SELECT ?claimToFame WHERE {
    <http://dbpedia.org/resource/Great_Siege_of_Gibraltar> <http://dbpedia.org/ontology/commander> ?commander .
    ?commander <http://dbpedia.org/ontology/knownFor> ?claimToFame .
}
```",4,4,5,2,2,3,3,71,0,0,2,0,0.0,0
747,40,val,"Give me the band of Amba Shepherd and band of Shèna and person born on the birth date of the person decedent, that is an athlete and a soccer player, at Zolotonosha.",SELECT ?result WHERE { <http://dbpedia.org/resource/Shèna> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v2 <http://dbpedia.org/ontology/birthDate> ?v1 . ?v2 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Zolotonosha> . ?result <http://dbpedia.org/ontology/birthDate> ?v1 . <http://dbpedia.org/resource/Amba_Shepherd> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
# Find bands of Amba Shepherd
SELECT ?band1 WHERE {
  <http://dbpedia.org/resource/Amba_Shepherd> <http://dbpedia.org/ontology/memberOf> ?band1 .
}

UNION

# Find bands of Shèna
SELECT ?band2 WHERE {
  <http://dbpedia.org/resource/Shèna> <http://dbpedia.org/ontology/memberOf> ?band2 .
}

UNION

# Find person born on the birth date of a decedent who is an athlete and soccer player at Zolotonosha
SELECT DISTINCT ?person WHERE {
  # Identify athletes and soccer players in Zolotonosha
  ?athlete <http://dbpedia.org/ontology/sport> <http://dbpedia.org/resource/Soccer> .
  ?athlete <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Ukraine> .
  ?athlete <http://dbpedia.org/ontology/placeOfBirth> <http://dbpedia.org/resource/Zolotonosha> .

  # Ensure they are decedents
  ?athlete <http://dbpedia.org/ontology/deathDate> ?deathDate .

  # Find living persons born on the same date as these athletes' birth dates
  ?person <http://www.w3.org/2002/07/owl#sameAs> ?birthDate .
  ?athlete <http://dbpedia.org/ontology/birthDate> ?birthDate .
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
783,14,val,"Give me the band member of the person born, that is an artist and a musical artist, as the persona of Ebony Reigns.",SELECT ?result WHERE { <http://dbpedia.org/resource/Ebony_Reigns> <http://xmlns.com/foaf/0.1/givenName> ?v2 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://dbpedia.org/property/birthName> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
SELECT ?bandMember WHERE {
  ?person <http://dbpedia.org/ontology/birthName> ""Ebony Reigns"" .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist> .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
  ?person <http://dbpedia.org/property/memberOfBand> ?bandMember .
}
```",3,5,4,3,1,3,2,20,0,0,7,0,0.0,0
161,27,val,"Give me the commander in the force, that is an event, of the figure known as El Director.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/commander> ?v1 . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://xmlns.com/foaf/0.1/nick> ""El Director""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. }","```sparql
SELECT ?commander WHERE {
  ?elDirector foaf:name ""El Director"" .
  ?event dbo:agent ?elDirector .
  ?event dbo:type <http://dbpedia.org/ontology/Event> .
  ?force dbo:event ?event .
  ?force dbo:commander ?commander .
}
```",3,4,4,3,1,3,3,71,0,0,85,0,0.0,0
427,31,val,Give me the party of Giulio Andreotti and reference to the name of the party of Michele Pinto.,SELECT ?result WHERE { <http://dbpedia.org/resource/Giulio_Andreotti> <http://dbpedia.org/ontology/party> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v0 . <http://dbpedia.org/resource/Michele_Pinto> <http://dbpedia.org/ontology/party> ?v1 . ?v1 <http://xmlns.com/foaf/0.1/name> ?v0 . },"```sparql
SELECT ?andreottiParty ?pintoPartyName WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/Giulio_Andreotti> <http://dbpedia.org/ontology/party> ?andreottiParty .
  }
  OPTIONAL { 
    <http://dbpedia.org/resource/Michele_Pinto> <http://dbpedia.org/ontology/party> ?pintoParty .
    ?pintoParty <http://www.w3.org/2000/01/rdf-schema#label> ?pintoPartyName .
  }
}
```",4,4,5,3,2,3,3,71,2,5,0,0.2857142857142857,1.0,0.4444444444444445
54,25,val,"Give me the parent of Thado Minsaw of Prome and predecessor of the child, that is an office holder and a royalty, of Thihapate of Mohnyin.",SELECT ?result WHERE { <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Thihapate_of_Mohnyin> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/successor> ?v1 . },"```sparql
SELECT ?parent ?predecessor WHERE {
  # Find the parent of Thado Minsaw of Prome
  <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> <http://dbpedia.org/ontology/father> ?parent .

  # Find the child of Thihapate of Mohnyin who is an office holder and royalty
  <http://dbpedia.org/resource/Thihapate_of_Mohnyin> <http://dbpedia.org/ontology/child> ?child .
  ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder> .
  ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .

  # Find the predecessor of this child
  ?predecessor <http://dbpedia.org/property/predecessor> ?child .
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
820,11,val,Give me the child of Jack Schwartzman and professional in the award of Scott McCloud.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/Scott_McCloud> <http://dbpedia.org/property/awards> ?v2 . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Jack_Schwartzman> . },"```sparql
# Step 1: Find the child of Jack Schwartzman
SELECT ?child WHERE {
    <http://dbpedia.org/resource/Jack_Schwartzman> <http://dbpedia.org/ontology/spouse> ?spouse .
    ?spouse <http://dbpedia.org/ontology/child> ?child .
}

# Step 2: Find the awards associated with Scott McCloud
SELECT ?award WHERE {
    <http://dbpedia.org/resource/Scott_McCloud> <http://dbpedia.org/property/awards> ?award .
}

# Step 3: Find a professional in any of these awards (assuming 'professional' means someone who has won or been associated with the award)
SELECT DISTINCT ?child WHERE {
    # From step 1
    <http://dbpedia.org/resource/Jack_Schwartzman> <http://dbpedia.org/ontology/spouse> ?spouse .
    ?spouse <http://dbpedia.org/ontology/child> ?child .

    # From step 2, find professionals associated with the awards
    ?award <http://dbpedia.org/property/winner> ?winner .
    FILTER(?winner = ?child)
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
617,25,val,Give me the parent of the child of Antiochus (son of Antiochus III the Great) and spouse of Laodice IV.,SELECT ?result WHERE { <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/child> ?v1 . ?result <http://dbpedia.org/ontology/child> ?v1 . <http://dbpedia.org/resource/Laodice_IV> <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
SELECT ?parent WHERE {
    ?antiochus dbpedia-owl:child ?child .
    FILTER(?antiochus = <http://dbpedia.org/resource/Antiochus_IV_Epiphanes>) # Assuming Antiochus IV Epiphanes is the son of Antiochus III
    ?child dbpedia-owl:parent ?parent .

    OPTIONAL {
        <http://dbpedia.org/resource/Laodice_IV> dbpedia-owl:spouse ?laodiceSpouse .
        FILTER(?parent = ?laodiceSpouse)
    }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
427,39,val,"Give me the party of Giulio Andreotti and party of the person born, that is an office holder and a politician, as the birth name of Romano Prodi.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Giulio_Andreotti> <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/property/birthName> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/property/birthName> ?v0 . },"```sparql
# Query to get the party of Giulio Andreotti
SELECT ?partyAndreotti WHERE {
  <http://dbpedia.org/resource/Giulio_Andreotti> <http://dbpedia.org/ontology/party> ?partyAndreotti .
}

UNION

# Query to find the birth name of Romano Prodi and get the party of any office holder or politician with that birth name
SELECT ?partyProdi WHERE {
  # Get Romano Prodi's birth name
  <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/ontology/birthName> ?birthName .
  
  # Find any office holder or politician with that birth name
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?type .
  FILTER (?type IN (<http://dbpedia.org/ontology/OfficeHolder>, <http://dbpedia.org/ontology/Politician>)).
  ?person <http://dbpedia.org/ontology/birthName> ?birthName .

  # Get the party of that person
  ?person <http://dbpedia.org/ontology/party> ?partyProdi .
}
```",4,6,5,3,2,3,3,71,0,0,3,0,0.0,0
54,43,val,Give me the parent of the child of the parent of Thado Minsaw of Prome and predecessor of Ameitta Thiri Maha Dhamma Dewi of Ava and child of Thinkhaya of Pagan.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Ameitta_Thiri_Maha_Dhamma_Dewi_of_Ava> . <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?result . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> . ?v4 <http://dbpedia.org/property/father> ?v0 . ?v4 <http://dbpedia.org/ontology/parent> ?result . },"```sparql
SELECT ?result WHERE {
    # Step 1: Find Thado Minsaw's parent
    <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> <http://dbpedia.org/ontology/father> ?parentOfMinsaw .
    
    # Step 2: The child of the parent is Thado Minsaw himself, so we move to step 3
    
    # Step 3: Find Ameitta Thiri Maha Dhamma Dewi's predecessor
    <http://dbpedia.org/resource/Ameitta_Thiri_Maha_Dhamma_Dewi_of_Ava> <http://dbpedia.org/ontology/predecessor> ?predecessor .
    
    # Step 4: Ensure this predecessor is a child of Thinkhaya of Pagan
    ?predecessor <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Thinkhaya_of_Pagan> .
    
    # Step 5: Find the parent of the identified predecessor
    ?predecessor <http://dbpedia.org/ontology/mother> ?result .
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
184,38,val,Give me the parent of the child of Archduke Joseph Francis of Austria and child of the child of Archduke Joseph Karl of Austria.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v2 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Karl_of_Austria> . ?result <http://dbpedia.org/property/father> ?v3 . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Francis_of_Austria> . },"```sparql
# Find the child of Archduke Joseph Francis of Austria
SELECT ?child1 WHERE {
  <http://dbpedia.org/resource/Archduke_Joseph_Francis_of_Austria> <http://dbpedia.org/ontology/child> ?child1 .
}

# Find the child of Archduke Joseph Karl of Austria
SELECT ?child2 WHERE {
  <http://dbpedia.org/resource/Archduke_Joseph_Karl_of_Austria> <http://dbpedia.org/ontology/child> ?child2 .
}

# Find the parent of the first child
SELECT ?parent1 WHERE {
  ?child1 <http://dbpedia.org/ontology/parent> ?parent1 .
}

# Find the child of the second child
SELECT ?grandChild WHERE {
  ?child2 <http://dbpedia.org/ontology/child> ?grandChild .
}

# Find the parent of this grandChild
SELECT ?finalParent WHERE {
  ?grandChild <http://dbpedia.org/ontology/parent> ?finalParent .
}
```",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
528,19,val,Give me the war of the military force of Battle of Pisagua and war of Orozimbo Barbosa.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Pisagua> . <http://dbpedia.org/resource/Orozimbo_Barbosa> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
SELECT ?war WHERE {
  ?battle <http://dbpedia.org/ontology/militaryForce> ?force1 .
  ?barbosa <http://dbpedia.org/ontology/battle> ?battle .
  ?barbosa <http://dbpedia.org/ontology/war> ?war .

  ?otherBattle <http://dbpedia.org/ontology/militaryForce> ?force2 .
  ?orozimboBarbosa <http://dbpedia.org/ontology/battle> ?otherBattle .
  ?orozimboBarbosa <http://dbpedia.org/ontology/war> ?war .

  FILTER (?battle = <http://dbpedia.org/resource/Battle_of_Pisagua>)
  FILTER (?orozimboBarbosa = <http://dbpedia.org/resource/Orozimbo_Barbosa>)
}
```",3,3,4,2,2,3,3,71,0,0,4,0,0.0,0
659,30,val,"Give me the military force of the force, that is a societal event and an event and a military conflict, of Rutger Jan Schimmelpenninck and commander in German campaign of 1813 and commander in Battle of Leipzig.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Battle_of_Leipzig> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> . <http://dbpedia.org/resource/German_campaign_of_1813> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT ?result WHERE {
  ?conflict <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>.
  ?conflict <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>.
  ?conflict <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>.

  <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> <http://dbpedia.org/ontology/commander> ?conflict.
  
  OPTIONAL { 
    ?campaign <http://dbpedia.org/ontology/battle> ?conflict .
    FILTER(?campaign IN (<http://dbpedia.org/resource/German_campaign_of_1813>, <http://dbpedia.org/resource/Battle_of_Leipzig>)).
  }

  ?conflict <http://dbpedia.org/property/militaryForce> ?result.
}
```",4,7,5,2,3,3,3,71,0,0,6,0,0.0,0
801,31,val,Give me the producer of Westside Story (song) and professional in the alter ego of the true self of The Shadow.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Westside_Story_(song)> <http://dbpedia.org/ontology/producer> ?result . ?v1 <http://dbpedia.org/property/alterEgo> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v0 . ?v1 <http://xmlns.com/foaf/0.1/givenName> ""The Shadow""@en . }","```sparql
# Step 1: Get the producer of ""Westside Story (song)""
SELECT ?producer WHERE {
    <http://dbpedia.org/resource/Westside_Story_(song)> <http://dbpedia.org/ontology/producer> ?producer .
}

# Step 2: Get the alter ego of The Shadow's true self
SELECT ?alterEgo WHERE {
    <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/trueSelfAlterEgo> ?alterEgo .
}

# Step 3: Find a professional associated with this alter ego
SELECT ?professional WHERE {
    ?alterEgo <http://dbpedia.org/ontology/profession> ?professional .
}

# Step 4: Check for overlap between the producer and the professional
SELECT DISTINCT ?entity WHERE {
    VALUES ?entity { ?producer ?professional }
}
```",4,4,5,3,2,3,3,71,0,0,2,0,0.0,0
251,15,val,"Give me the death place of Laura Mancinelli and location of the war, that is a military conflict, of Louis François Félix Musnier.",SELECT ?result WHERE { <http://dbpedia.org/resource/Laura_Mancinelli> <http://dbpedia.org/ontology/deathPlace> ?result . ?v1 <http://dbpedia.org/ontology/place> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Louis_François_Félix_Musnier> <http://dbpedia.org/ontology/battle> ?v1 . },"```sparql
SELECT ?deathPlace ?location WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/Laura_Mancinelli> <http://dbpedia.org/ontology/deathPlace> ?deathPlace .
  }
  OPTIONAL {
    ?militaryConflict <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
    ?militaryConflict <http://dbpedia.org/ontology/location> ?location .
    ?militaryConflict <http://dbpedia.org/property/commander> <http://dbpedia.org/resource/Louis_François_Félix_Musnier> .
  }
}
```",3,4,4,2,2,2,3,28,2,1,0,0.6666666666666666,1.0,0.8
996,12,val,Give me the entity in the award of Ekrem Akurgal and force of Dagobert Sigmund von Wurmser.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> ?v0 . ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Dagobert_Sigmund_von_Wurmser> . <http://dbpedia.org/resource/Ekrem_Akurgal> <http://dbpedia.org/property/awards> ?v0 . },"```sparql
SELECT ?commonEntity WHERE {
  ?ekremAward rdf:type dbo:Award ;
              dbo:recipient <http://dbpedia.org/resource/Ekrem_Akurgal> .
  
  ?wurmserForce rdf:type dbo:MilitaryUnit ;
                dbo:commander <http://dbpedia.org/resource/Dagobert_Sigmund_von_Wurmser> .

  ?ekremAward dbo:relatedTo ?commonEntity .
  ?wurmserForce dbo:relatedTo ?commonEntity .
}
```",3,3,4,2,2,3,2,20,0,0,4,0,0.0,0
404,35,val,"Give me the child of the father of Ernest Augustus, Duke of Brunswick and spouse of the person born, that is a royalty, as Princess Victoria Louise of Prussia.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/birthName> ""Princess Victoria Louise of Prussia""@en . ?result <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/property/father> ?v1 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
SELECT ?child WHERE {
    ?father <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick>.
    ?princess a <http://dbpedia.org/ontology/Royalty>;
              <http://dbpedia.org/property/birthName> ""Princess Victoria Louise of Prussia"".
    ?spouse <http://dbpedia.org/ontology/spouse> ?princess.
    ?child <http://dbpedia.org/ontology/father> ?father;
           <http://dbpedia.org/ontology/mother> ?spouse.
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
92,33,val,"Give me the associated musical artist of the person born, that is an artist, as the actor of Return to Nuke 'Em High Volume 1 and band member of Nevermore.",SELECT ?result WHERE { <http://dbpedia.org/resource/Return_to_Nuke_'Em_High_Volume_1> <http://dbpedia.org/property/starring> ?v0 . ?v3 <http://dbpedia.org/property/birthName> ?v0 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Nevermore> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT ?person ?associatedArtist WHERE {
    ?actor <http://dbpedia.org/ontology/actor> <http://dbpedia.org/resource/Return_to_Nuke_%27Em_High_Volume_1> .
    ?bandMember <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/Nevermore_(band)> .
    FILTER(?actor = ?bandMember)
    
    ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist> .
    ?person <http://dbpedia.org/property/birthDate> ?birthDate .
    FILTER(?person = ?actor)
    
    ?person <http://dbpedia.org/ontology/associatedMusicalArtist> ?associatedArtist .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
232,29,val,"Give me the actor of the claim to fame, that is a film and a military conflict, of Sean Pertwee and native of London and child of Jon Pertwee.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/London> . <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/ontology/child> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Sean_Pertwee> <http://dbpedia.org/ontology/knownFor> ?v3 . ?v3 <http://dbpedia.org/ontology/starring> ?result . },"```sparql
SELECT ?actor WHERE {
  ?film <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>.
  ?film <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>.
  <http://dbpedia.org/resource/Sean_Pertwee> <http://dbpedia.org/ontology/knownFor> ?film.
  
  ?actor <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FilmActor>.
  ?actor <http://dbpedia.org/ontology/film> ?film.
  
  ?actor <http://dbpedia.org/ontology/nativePlace> <http://dbpedia.org/resource/London>.
  ?actor <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/Jon_Pertwee>.
}
```",4,6,5,2,3,3,3,71,0,0,1,0,0.0,0
161,34,val,"Give me the military force of the force, that is a societal event and an event and a military conflict, of the person decedent at Francoist Spain and commander in Biscay Campaign.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v1 . <http://dbpedia.org/resource/Biscay_Campaign> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/commander> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Francoist_Spain> . },"```sparql
SELECT ?militaryForce WHERE {
  ?person <http://dbpedia.org/ontology/decedent> <http://dbpedia.org/resource/Francoist_Spain> .
  ?person <http://dbpedia.org/ontology/commander> ?biscayCampaign .
  ?biscayCampaign <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
  ?event <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent> .
  ?event <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event> .
  ?event <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
  ?person <http://dbpedia.org/ontology/knownFor> ?event .
  ?event <http://dbpedia.org/property/militaryForce> ?militaryForce .
}
```",4,7,5,3,2,3,3,71,0,0,3,0,0.0,0
281,39,val,"Give me the entity in Colony of New Zealand and war of the profession, that is a military unit, of the professional, that is an office holder and a politician, in New Zealand Army.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/property/occupation> ?v1 . ?v0 <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/New_Zealand_Army> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Colony_of_New_Zealand> . },"```sparql
SELECT ?entity ?war ?professional WHERE {
  ?entity <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Cape_Colony>.
  
  ?unit <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>.
  ?unit <http://dbpedia.org/property/profession> ?professional.
  ?war <http://dbpedia.org/ontology/war> ?unit.

  ?individual <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>.
  ?individual <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>.
  ?individual <http://dbpedia.org/property/profession> ?professional.
  ?individual <http://dbpedia.org/ontology/memberOf> <http://dbpedia.org/resource/New_Zealand_Army>.

  FILTER(?entity = ?war)
}
```",4,7,5,3,2,3,3,71,0,0,1,0,0.0,0
77,15,val,Give me the force of Alexander I of Russia and war of the awardee of the award of Maxim Grigorievich Vlasov.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Maxim_Grigorievich_Vlasov> <http://dbpedia.org/property/awards> ?v0 . ?v1 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Alexander_I_of_Russia> . },"```sparql
# Query to get the force of Alexander I of Russia
SELECT ?force WHERE {
  <http://dbpedia.org/resource/Alexander_I_of_Russia> <http://dbpedia.org/ontology/militaryForce> ?force .
}

UNION

# Query to get the war associated with Maxim Grigorievich Vlasov's award
SELECT ?war WHERE {
  <http://dbpedia.org/resource/Maxim_Grigorievich_Vlasov> <http://dbpedia.org/property/award> ?award .
  ?award <http://dbpedia.org/ontology/relatedToWar> ?war .
}
```",4,4,5,3,2,3,2,20,0,0,20,0,0.0,0
184,23,val,"Give me the parent of the native of the landmark at elevation, that is a settlement, of 96.0.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> ?v2 . ?result <http://dbpedia.org/ontology/child> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://dbpedia.org/ontology/elevation> ""96.0""^^<http://www.w3.org/2001/XMLSchema#double> . }","```sparql
SELECT ?parent WHERE {
    ?settlement <http://dbpedia.org/ontology/elevation> ""96.0""^^<http://www.w3.org/2001/XMLSchema#float>.
    ?settlement <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>.
    ?landmark <http://dbpedia.org/property/location> ?settlement.
    ?person <http://dbpedia.org/ontology/nativeOf> ?landmark.
    ?person <http://dbpedia.org/ontology/birthParent> ?parent.
}
```",3,4,4,3,1,3,3,71,0,0,31,0,0.0,0
404,28,val,"Give me the child of Ernest Augustus, Crown Prince of Hanover and parent of Prince Ernest Augustus of Hanover (born 1914) and spouse of the person born, that is a royalty, as Princess Victoria Louise of Prussia.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Prince_Ernest_Augustus_of_Hanover_(born_1914)> . ?v1 <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://dbpedia.org/property/birthName> ""Princess Victoria Louise of Prussia""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ernest_Augustus,_Crown_Prince_of_Hanover> . }","```sparql
SELECT ?person WHERE {
  # Find the child of Ernest Augustus, Crown Prince of Hanover
  ?person <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/Ernest_Augustus,_Crown_Prince_of_Hanover>.

  # Ensure this person is a parent of Prince Ernest Augustus of Hanover (born 1914)
  ?person <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Prince_Ernest_Augustus_of_Hanover_(1914-1987)>.

  # Find the spouse who was born as Princess Victoria Louise of Prussia
  ?spouse <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>.
  ?spouse <http://dbpedia.org/property/birthName> ""Princess Victoria Louise of Prussia""^^<http://www.w3.org/2001/XMLSchema#string>.

  # Ensure the person is married to this spouse
  ?person <http://dbpedia.org/ontology/spouse> ?spouse.
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
487,12,val,"Give me the administration of the person born, that is a soccer player, as Philip Brian Scott and country of 2022 Vermont House of Representatives election.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v0 <http://dbpedia.org/property/birthName> ""Philip Brian Scott""@en . ?result <http://dbpedia.org/property/governor> ?v0 . <http://dbpedia.org/resource/2022_Vermont_House_of_Representatives_election> <http://dbpedia.org/ontology/country> ?result . }","```sparql
SELECT ?person ?administration WHERE {
    ?person <http://dbpedia.org/ontology/birthName> ""Philip Brian Scott"" .
    ?person <http://dbpedia.org/ontology/profession> <http://dbpedia.org/resource/Soccer_player> .
    OPTIONAL { ?person <http://dbpedia.org/property/administration> ?administration . }
    
    ?election <http://dbpedia.org/ontology/electionYear> ""2022"" ;
              <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Vermont> .
    OPTIONAL { ?person <http://dbpedia.org/property/electedIn> ?election . }
}
```",3,4,4,2,2,3,2,20,0,0,1,0,0.0,0
666,12,val,Give me the player in Steve Bruce and figure known as the nickname of England national beach soccer team.,SELECT ?result WHERE { <http://dbpedia.org/resource/England_national_beach_soccer_team> <http://dbpedia.org/property/nickname> ?v0 . ?result <http://dbpedia.org/property/nickname> ?v0 . <http://dbpedia.org/resource/Steve_Bruce> <http://dbpedia.org/ontology/team> ?result . },"```sparql
SELECT ?player WHERE {
  ?player <http://dbpedia.org/ontology/team> ?team .
  ?team <http://dbpedia.org/property/coach> <http://dbpedia.org/resource/Steve_Bruce> .
  
  OPTIONAL {
    ?player <http://dbpedia.org/ontology/nickname> ?nickname .
    ?nickname <http://www.w3.org/2000/01/rdf-schema#label> ?label .
    FILTER(CONTAINS(LCASE(?label), ""england national beach soccer team""))
  }
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
994,23,val,Give me the associated musical artist of the associated musical artist of the reference to Watchtower.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v1 <http://xmlns.com/foaf/0.1/name> ""Watchtower""@en . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
SELECT ?artist WHERE {
    ?watchtower <http://dbpedia.org/ontology/associatedMusicalArtist> ?intermediateArtist .
    ?intermediateArtist <http://dbpedia.org/ontology/associatedMusicalArtist> ?artist .
    FILTER(?watchtower = <http://dbpedia.org/resource/Watchtower_(band)>)
}
```",3,3,4,3,1,3,3,71,16,0,0,1.0,1.0,1.0
701,33,val,Give me the parent of Meritamen and parent of the child of the child of Seti I.,SELECT ?result WHERE { <http://dbpedia.org/resource/Meritamen> <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seti_I> . ?v3 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/child> ?v3 . },"```sparql
# Query for the parent of Meritamen
SELECT ?parent WHERE {
  <http://dbpedia.org/resource/Meritamen> <http://www.w3.org/2000/01/rdf-schema#parent> ?parent .
}

UNION

# Query for the parent of the child of the child of Seti I
SELECT ?grandchildParent WHERE {
  ?childOfSetiI <http://www.w3.org/2000/01/rdf-schema#parent> <http://dbpedia.org/resource/Seti_I> .
  ?grandchild <http://www.w3.org/2000/01/rdf-schema#parent> ?childOfSetiI .
  ?grandchildParent <http://www.w3.org/2000/01/rdf-schema#parent> ?grandchild .
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
285,13,val,Give me the parent of the child of the spouse of Aristotle Onassis.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Aristotle_Onassis> . },"```sparql
SELECT ?parent WHERE {
  # Step 1: Identify Aristotle Onassis's spouse
  <http://dbpedia.org/resource/Aristotle_Onassis> <http://dbpedia.org/ontology/spouse> ?spouse .

  # Step 2: Determine the children of that spouse
  ?child <http://www.w3.org/ns/prov#wasDerivedFrom> ?spouse .
  
  # Step 3: Find the parent(s) of those children
  ?child <http://dbpedia.org/ontology/birthParent> ?parent .
}
```",3,3,4,3,1,3,2,20,0,0,5,0,0.0,0
994,35,val,"Give me the band member of the person born, that is a musical artist, as Donald Maynard Dokken and associated musical artist of the associated musical artist of Watchtower (band).","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/birthName> ""Donald Maynard Dokken""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . <http://dbpedia.org/resource/Watchtower_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . }","```sparql
# Step 1: Identify Donald Maynard Dokken as a musical artist
SELECT ?dokken WHERE {
    ?dokken <http://dbpedia.org/ontology/birthName> ""Donald Maynard Dokken"" .
    ?dokken <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
}

# Step 2: Find band members associated with Donald Maynard Dokken
SELECT DISTINCT ?bandMember WHERE {
    VALUES ?dokken { <http://dbpedia.org/resource/Don_Dokken> } # Assuming we found Don Dokken in step 1
    ?bandMember <http://dbpedia.org/ontology/memberOf> ?band .
    ?band <http://dbpedia.org/property/musicalArtist> ?dokken .
}

# Step 3: Find associated musical artists of Watchtower (band)
SELECT DISTINCT ?associatedArtist WHERE {
    <http://dbpedia.org/resource/Watchtower_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?associatedArtist .
}

# Step 4: Find the associated musical artists of those identified in step 3
SELECT DISTINCT ?finalAssociatedArtist WHERE {
    VALUES ?watchtowerArtist { ?associatedArtist } # Assuming we found associated artists in step 3
    ?watchtowerArtist <http://dbpedia.org/ontology/associatedMusicalArtist> ?finalAssociatedArtist .
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
328,36,val,"Give me the leader of the office, that is a government agency, of the leader, that is an office holder and a politician, of Gustav Jonson and awardee of Order of Suvorov.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Order_of_Suvorov> . ?v1 <http://dbpedia.org/ontology/leader> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v0 <http://dbpedia.org/property/office> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Gustav_Jonson> <http://dbpedia.org/property/leader> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
SELECT ?finalLeader WHERE {
  # Step 1: Find leaders who are office holders and politicians for Gustav Jonson
  ?leader <http://dbpedia.org/ontology/officeHolder> ?office .
  ?office <http://dbpedia.org/property/holder> <http://dbpedia.org/resource/Gustav_Jonson> .
  ?leader <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .

  # Step 2: Filter these leaders to find the one who is an awardee of Order of Suvorov
  ?leader <http://dbpedia.org/property/awards> ?award .
  ?award <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/resource/Order_of_Suvorov> .

  # Step 3: Identify the office that is a government agency
  ?office <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency> .

  # Step 4: Find the leader of this government agency
  ?finalLeader <http://dbpedia.org/property/leader> ?office .
}
```",4,7,5,3,2,3,3,71,0,0,1,0,0.0,0
312,7,val,"Give me the entity in Italy and entity in the administration, that is a settlement and a region and Italian and a state, of Democratic Party (Italy).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/province> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Democratic_Party_(Italy)> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. },"```sparql
SELECT ?result WHERE {
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>.
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>.
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/State>.
  ?result <http://dbpedia.org/property/country> <http://dbpedia.org/resource/Italy>.
  ?result <http://dbpedia.org/ontology/administrativeUnit> ?admin.
  ?admin <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organization>.
  ?admin <http://dbpedia.org/property/name> <http://dbpedia.org/resource/Democratic_Party_(Italy)>.
}
```",3,7,4,2,2,2,2,9,0,0,587,0,0.0,0
747,27,val,Give me the band of the person born as the persona of Shèna.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Shèna> <http://xmlns.com/foaf/0.1/givenName> ?v1 . },"```sparql
SELECT ?band WHERE {
  ?person rdfs:label ""Shèna""@en .
  ?person foaf:name ?realName .
  ?person dbo:musicGroup ?band .
}
```",3,3,4,3,1,3,3,71,0,0,8,0,0.0,0
391,44,val,"Give me the actor of the movie, that is a movie and a work and a television show, with Roz Ryan and actor of the claim to fame, that is a work, of Michael Ballhaus and native of Compton, California.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Roz_Ryan> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v4 <http://dbpedia.org/ontology/starring> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Compton,_California> . <http://dbpedia.org/resource/Michael_Ballhaus> <http://dbpedia.org/ontology/knownFor> ?v4 . ?v2 <http://dbpedia.org/property/starring> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. }","```sparql
SELECT DISTINCT ?actor WHERE {
  # Step 1: Find movies that are a movie, work, and television show
  ?movie <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Movie> .
  ?movie <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work> .
  ?movie <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow> .

  # Step 2: Find movies with Roz Ryan as an actor
  ?movie dbp:starring <http://dbpedia.org/resource/Roz_Ryan> .

  # Step 3: Find the claim to fame (work) of Michael Ballhaus
  <http://dbpedia.org/resource/Michael_Ballhaus> dbp:knownFor ?fameWork .
  
  # Ensure it's a work
  ?fameWork <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work> .

  # Step 4: Find actors who acted in both the movie and the fame work
  ?movie dbp:starring ?actor .
  ?fameWork dbp:starring ?actor .

  # Step 5: Ensure one of these actors is native to Compton, California
  OPTIONAL { ?actor dbo:nativePlace <http://dbpedia.org/resource/Compton,_California> }
  
  FILTER EXISTS { ?actor dbo:nativePlace <http://dbpedia.org/resource/Compton,_California> }
}
```",5,9,6,2,3,3,3,71,0,0,1,0,0.0,0
232,18,val,Give me the native of London and child of Jon Pertwee and actor of Dog Soldiers (film).,SELECT ?result WHERE { <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Dog_Soldiers_(film)> <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/London> . },"```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/London>.
  ?person <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Jon_Pertwee>.
  ?person <http://dbpedia.org/ontology/performance> <http://dbpedia.org/resource/Dog_Soldiers_(film)>.
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
547,27,val,Give me the resting place of the awardee of the award of Gerald Graham.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> ?v1 . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Gerald_Graham> <http://dbpedia.org/property/awards> ?v1 . },"```sparql
SELECT ?awardee ?restingPlace WHERE {
  <http://dbpedia.org/resource/Gerald_Graham> <http://dbpedia.org/ontology/award> ?award .
  ?recipient <http://dbpedia.org/ontology/award> ?award .
  ?recipient <http://dbpedia.org/property/restingPlace> ?restingPlace .
}
```",3,3,4,3,1,3,3,71,6,25,698,0.1935483870967742,0.008522727272727272,0.016326530612244896
16,19,val,Give me the spouse of the person born as Ted Martin McGinley and professional in Actress.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/property/birthName> ""Ted Martin McGinley""@en . ?result <http://dbpedia.org/property/occupation> ""Actress""@en . }","```sparql
SELECT ?spouse WHERE {
  ?person <http://dbpedia.org/ontology/birthName> ""Ted Martin McGinley"" .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Actor> .
  ?person <http://dbpedia.org/ontology/spouse> ?spouse .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
285,15,val,Give me the spouse of Aristotle Onassis and parent of the child of the spouse of Aristotle Onassis.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Aristotle_Onassis> . ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/ontology/child> ?v1 . ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Aristotle_Onassis> . },"```sparql
SELECT ?spouse ?child ?parent WHERE {
  <http://dbpedia.org/resource/Aristotle_Onassis> <http://dbpedia.org/ontology/spouse> ?spouse .
  OPTIONAL { 
    ?spouse <http://dbpedia.org/property/children> ?child .
    ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person> .
    ?child <http://dbpedia.org/ontology/parent> ?parent .
  }
}
```",4,4,5,3,2,3,2,20,2,8,0,0.2,1.0,0.33333333333333337
696,12,val,Give me the birth place of Tim Brennan and landmark at elevation of the award of Nie Rongzhen.,SELECT ?result WHERE { <http://dbpedia.org/resource/Tim_Brennan> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Nie_Rongzhen> <http://dbpedia.org/property/awards> ?v0 . ?result <http://dbpedia.org/ontology/elevation> ?v0 . },"```sparql
SELECT ?birthPlace ?landmark WHERE {
  # Part 1: Birth place of Tim Brennan
  <http://dbpedia.org/resource/Tim_Brennan> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .

  # Part 2: Landmark at elevation associated with an award of Nie Rongzhen
  OPTIONAL {
    ?award <http://dbpedia.org/property/receiver> <http://dbpedia.org/resource/Nie_Rongzhen> .
    ?landmark <http://dbpedia.org/ontology/elevation> ?elevation .
    ?award <http://dbpedia.org/ontology/location> ?landmark .
  }
}
```",3,3,4,2,2,3,2,20,1,0,0,1.0,1.0,1.0
328,37,val,Give me the leader of People's Commissariat of Defense of the Soviet Union and commander in the force of the person decedent at Budapest.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/commander> ?v0 . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Budapest> . <http://dbpedia.org/resource/People's_Commissariat_of_Defense_of_the_Soviet_Union> <http://dbpedia.org/ontology/leader> ?result . },"```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/officeHolder> <http://dbpedia.org/resource/People's_Commissariat_of_Defense_of_the_Soviet_Union>.
  ?person <http://dbpedia.org/ontology/commander> ?force.
  ?force <http://dbpedia.org/property/location> <http://dbpedia.org/resource/Budapest>.
  ?person <http://www.w3.org/2002/07/owl#sameAs> <http://dbpedia.org/resource/Category:Deceased_people>.
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
356,12,val,"Give me the player in 2015 Sacramento Republic FC season and team of the native, that is a soccer player and a soccer manager, of Wolverhampton.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/2015_Sacramento_Republic_FC_season> <http://dbpedia.org/ontology/team> ?result . ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Wolverhampton> . ?result <http://dbpedia.org/ontology/manager> ?v0 . },"```sparql
SELECT ?player ?team ?playersInTeam WHERE {
  ?person a dbo:SoccerPlayer ;
          a dbo:SoccerManager ;
          foaf:nativePlace dbr:Wolverhampton .
  
  ?person dbo:managedTeam ?team .
  
  ?team dbo:season ""2015""^^xsd:string ;
        dbo:player ?playersInTeam .

  FILTER EXISTS { 
    ?team rdfs:label ""Sacramento Republic FC""@en .
  }
}
```",3,5,4,2,2,3,2,20,0,0,1,0,0.0,0
492,18,val,Give me the commander in Franco-Hova Wars and person decedent at French Algeria and person decedent at Algiers.,SELECT ?result WHERE { <http://dbpedia.org/resource/Franco-Hova_Wars> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Algiers> . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/French_Algeria> . },"```sparql
SELECT ?person WHERE {
  ?person dbpedia-owl:commander <http://dbpedia.org/resource/Franco-Hova_Wars> .
  ?person dbpedia-owl:deathPlace <http://dbpedia.org/resource/French_Algeria> .
  ?person dbpedia-owl:deathPlace <http://dbpedia.org/resource/Algiers> .
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
55,14,val,"Give me the band member of Guns N' Roses and band member of the band member, that is a band and a group, of San Francisco Symphony.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Guns_N'_Roses> . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/San_Francisco_Symphony> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . },"```sparql
SELECT DISTINCT ?member WHERE {
    # Step 1: Find all members of Guns N' Roses
    ?member <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/Guns_N%27_Roses>.

    # Step 2: Check if these members are also part of another band or group
    ?member <http://dbpedia.org/ontology/member> ?otherBand.

    # Step 3: Ensure the other band is associated with San Francisco Symphony and is both a ""band"" and a ""group""
    ?otherBand <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>.
    ?otherBand <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>.
    ?otherBand <http://dbpedia.org/property/associatedWith> <http://dbpedia.org/resource/San_Francisco_Symphony>.
}
```",3,5,4,2,2,2,3,28,0,0,1,0,0.0,0
16,30,val,Give me the person born as the birth name of Gigi Rice and professional in Actress and spouse of Ted McGinley.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Actress""@en . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Gigi_Rice> <http://dbpedia.org/property/birthName> ?v1 . }","```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/birthName> ""Gigi Rice"" .
  ?person <http://purl.org/dc/terms/profession> <http://dbpedia.org/resource/Category:American_actresses> .
  ?person <http://xmlns.com/foaf/0.1/spouse> <http://dbpedia.org/resource/Ted_McGinley> .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
92,44,val,"Give me the associated musical artist of the person born, that is an artist, as Jim Sheppard and band of the person born as Joseph Michael Furney and band member of Nevermore.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/bandMember> ?v2 . ?v4 <http://dbpedia.org/property/birthName> ""Jim Sheppard""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Nevermore> . ?v2 <http://dbpedia.org/property/birthName> ""Joseph Michael Furney""@en . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
SELECT ?artist1 ?band2 WHERE {
  ?person1 <http://dbpedia.org/property/birthName> ""Jim Sheppard"" .
  ?person1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?artist1 .

  ?person2 <http://dbpedia.org/property/birthName> ""Joseph Michael Furney"" .
  ?person2 <http://dbpedia.org/ontology/memberOfBand> ?band2 .
  FILTER(?band2 = <http://dbpedia.org/resource/Nevermore_(band)>)
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
404,23,val,"Give me the spouse of the person born, that is a royalty, as the birth name of Princess Victoria Louise of Prussia.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/property/birthName> ?v2 . ?v0 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
SELECT ?spouse WHERE {
  ?person <http://dbpedia.org/ontology/birthName> ""Princess Victoria Louise of Prussia"" .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
  ?person <http://dbpedia.org/property/spouse> ?spouse .
}
```",3,4,4,3,1,3,3,71,0,0,1,0,0.0,0
161,40,val,"Give me the commander in Biscay Campaign and military force of Spanish Civil War and military force of the force, that is a societal event and an event and a military conflict, of the person decedent at Francoist Spain.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Biscay_Campaign> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . ?v2 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Francoist_Spain> . ?v1 <http://dbpedia.org/ontology/commander> ?v2 . },"```sparql
SELECT ?commander ?militaryForce1 ?militaryForce2 WHERE {
  # Step 1: Identify the person who died in Francoist Spain
  ?person dbo:placeOfDeath <http://dbpedia.org/resource/Francoist_Spain> .
  
  # Step 2: Find the societal event, which is also an event and a military conflict, associated with that person's death
  ?event dbo:type dbr:Societal_event ;
         rdf:type dbo:Event , dbo:MilitaryConflict ;
         dbo:decedent ?person .

  # Step 3: Determine the military force involved in that event
  ?event dbo:militaryForce ?militaryForce1 .

  # Step 4: Identify the commander of the Biscay Campaign
  <http://dbpedia.org/resource/Biscay_Campaign> dbo:commander ?commander .

  # Step 5: Find the military forces involved in both the Spanish Civil War and the previously identified event
  ?spanishCivilWar dbo:type dbr:Military_conflict ;
                  dbo:militaryForce ?militaryForce2 .
  
  FILTER(?militaryForce1 = ?militaryForce2)
}
```",5,8,6,3,3,3,3,71,0,0,3,0,0.0,0
184,19,val,Give me the parent of the native of Budapest and child of Archduke Joseph August of Austria.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Budapest> . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_August_of_Austria> . },"```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/property/nativePlace> <http://dbpedia.org/resource/Budapest>.
  ?person <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Archduke_Joseph_August_of_Austria>.
}

SELECT ?parent WHERE {
  ?person <http://dbpedia.org/property/nativePlace> <http://dbpedia.org/resource/Budapest>.
  ?person <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Archduke_Joseph_August_of_Austria>.
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>.
  ?person <http://dbpedia.org/property/father> ?parent.
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
303,14,val,"Give me the entity in the country, that is a country, of El Valle de Antón and party of Guillermo Endara.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/country> ?v2 . <http://dbpedia.org/resource/Guillermo_Endara> <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/El_Valle_de_Antón> <http://dbpedia.org/ontology/country> ?v2 . },"```sparql
# Step 1: Find the country of El Valle de Antón
SELECT ?country WHERE {
    <http://dbpedia.org/resource/El_Valle_de_Antón> <http://www.w3.org/2000/01/rdf-schema#seeAlso> ?resource .
    ?resource <http://dbpedia.org/ontology/country> ?country .
}

# Step 2: Find the party of Guillermo Endara
SELECT ?party WHERE {
    <http://dbpedia.org/resource/Guillermo_Endara> <http://dbpedia.org/ontology/party> ?party .
}

# Step 3: Retrieve entities in the same country as El Valle de Antón
SELECT DISTINCT ?entity WHERE {
    ?entity <http://www.w3.org/2000/01/rdf-schema#seeAlso> ?resource .
    ?resource <http://dbpedia.org/ontology/country> ?country .
    FILTER(?country = <URI_OF_COUNTRY_FROM_STEP_1>)
}
```

Note: Replace `<URI_OF_COUNTRY_FROM_STEP_1>` with the actual URI obtained from Step 1.",3,4,4,2,2,2,3,28,0,0,2,0,0.0,0
645,12,val,Give me the alma mater of the child of Richard Pankhurst and entity in United Kingdom.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . <http://dbpedia.org/resource/Richard_Pankhurst> <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
SELECT ?child ?almaMater WHERE {
  ?child <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Richard_Pankhurst> .
  ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person> .
  ?child <http://dbpedia.org/property/residence> ?residence .
  ?residence <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> .
  ?child <http://dbpedia.org/ontology/almaMater> ?almaMater .
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
701,22,val,Give me the spouse of the father of Merneptah and parent of Meritamen.,SELECT ?result WHERE { <http://dbpedia.org/resource/Merneptah> <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Meritamen> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/spouse> ?v1 . },"```sparql
SELECT ?spouse WHERE {
  ?person <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Merenptah>.
  ?person <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Meritamen>.
  ?person <http://xmlns.com/foaf/0.1/spouse> ?spouse.
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
492,43,val,"Give me the commander in the war, that is a military conflict and an event, of the commander in Battle of Verdun and person decedent at French Algeria and person decedent at Algiers.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v4 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Battle_of_Verdun> <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://dbpedia.org/ontology/battle> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/French_Algeria> . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Algiers> . },"```sparql
SELECT ?commander WHERE {
  # Step 1: Identify the commander of the Battle of Verdun
  <http://dbpedia.org/resource/Battle_of_Verdun> <http://dbpedia.org/ontology/commander> ?v1 .

  # Step 2: Find wars that are both military conflicts and events commanded by this person
  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event> .
  ?v1 <http://dbpedia.org/ontology/battle> ?war .

  # Step 3: Ensure this commander is listed as a decedent in both French Algeria and Algiers
  ?v1 <http://dbpedia.org/property/deathPlace> <http://dbpedia.org/resource/French_Algeria> .
  ?v1 <http://dbpedia.org/property/deathPlace> <http://dbpedia.org/resource/Algiers> .

  # Bind the commander to the variable
  BIND(?v1 AS ?commander)
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
77,13,val,Give me the war of the awardee of the award of Maxim Grigorievich Vlasov.,SELECT ?result WHERE { <http://dbpedia.org/resource/Maxim_Grigorievich_Vlasov> <http://dbpedia.org/property/awards> ?v0 . ?v1 <http://dbpedia.org/property/awards> ?v0 . ?v1 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
SELECT ?war WHERE {
  ?award <http://dbpedia.org/ontology/receiver> <http://dbpedia.org/resource/Maxim_Grigorievich_Vlasov> .
  ?award <http://www.w3.org/2000/01/rdf-schema#seeAlso> ?war .
  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
}
```",3,3,4,3,1,3,2,20,0,0,436,0,0.0,0
701,44,val,Give me the parent of the child of Ramesses II and spouse of the father of Merneptah and parent of Meritamen.,SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ramesses_II> . ?result <http://dbpedia.org/ontology/spouse> ?v2 . <http://dbpedia.org/resource/Meritamen> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/child> ?v4 . <http://dbpedia.org/resource/Merneptah> <http://dbpedia.org/property/father> ?v2 . },"```sparql
SELECT ?parent WHERE {
  # Ramesses II's child
  ?child <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Ramesses_II> .
  
  # Parent of the child (should be Ramesses II)
  ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Human> .
  ?parent <http://dbpedia.org/ontology/father> ?child .

  # Merneptah's father and his spouse
  <http://dbpedia.org/resource/Merneptah> <http://dbpedia.org/ontology/father> ?merneptahFather .
  ?spouse <http://dbpedia.org/ontology/spouse> ?merneptahFather .

  # Parent of Meritamen
  <http://dbpedia.org/resource/Meritamen> <http://dbpedia.org/ontology/father> ?parent .

  FILTER (?parent = ?spouse)
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
801,42,val,"Give me the associated musical artist of the writer, that is a musical artist and an artist, of 40 Dayz & 40 Nightz and professional in the alter ego of The Shadow and producer of Westside Story (song).",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/Westside_Story_(song)> <http://dbpedia.org/ontology/producer> ?result . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v2 . <http://dbpedia.org/resource/40_Dayz_&_40_Nightz> <http://dbpedia.org/property/writer> ?v1 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
SELECT ?writer ?associatedArtist WHERE {
  ?writer <http://dbpedia.org/ontology/writer> <http://dbpedia.org/resource/40_Dayz_%26_40_Nightz> .
  ?writer <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
  ?writer <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist> .
  ?writer <http://dbpedia.org/property/professionalAlterEgo> ""The Shadow"" .
  ?writer <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Westside_Story_(song)> .
  ?writer <http://dbpedia.org/ontology/associatedMusicalArtist> ?associatedArtist .
}
```",5,7,6,2,3,3,3,71,0,0,1,0,0.0,0
328,21,val,"Give me the leader of People's Commissariat of Defense of the Soviet Union and awardee of the award of Bruce Fraser, 1st Baron Fraser of North Cape.","SELECT ?result WHERE { <http://dbpedia.org/resource/Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape> <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/property/awards> ?v1 . <http://dbpedia.org/resource/People's_Commissariat_of_Defense_of_the_Soviet_Union> <http://dbpedia.org/ontology/leader> ?result . }","```sparql
SELECT ?person WHERE {
    ?person <http://dbpedia.org/ontology/leader> <http://dbpedia.org/resource/People%27s_Commissariat_of_Defense_of_the_Soviet_Union> .
    ?person <http://dbpedia.org/property/awardee> <http://dbpedia.org/resource/Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape#Award>.
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
391,37,val,"Give me the actor of the claim to fame, that is a work, of the spouse of Sherry Hormann and actor of All About the Andersons.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/knownFor> ?v3 . <http://dbpedia.org/resource/All_About_the_Andersons> <http://dbpedia.org/property/starring> ?result . ?v3 <http://dbpedia.org/ontology/starring> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Sherry_Hormann> <http://dbpedia.org/ontology/spouse> ?v0 . },"```sparql
SELECT ?actor WHERE {
    # Step 1: Find the spouse of Sherry Hormann
    <http://dbpedia.org/resource/Sherry_Hormann> <http://dbpedia.org/ontology/spouse> ?spouse .
    
    # Step 2: Get the claim to fame (work) of that spouse
    ?spouse <http://dbpedia.org/ontology/knownFor> ?work .
    FILTER(?work <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>) .

    # Step 3: Find the actor of ""All About the Andersons""
    <http://dbpedia.org/resource/All_About_the_Andersons> <http://dbpedia.org/ontology/starring> ?actor .
    
    # Step 4: Ensure this actor is also involved in the work from step 2
    ?work <http://dbpedia.org/ontology/starring> ?actor .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
365,7,val,"Give me the band of the professional, that is an artist and a musical artist, in Vocalist, musician, songwriter and reference to The Blasters.","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""The Blasters""@en . ?result <http://dbpedia.org/ontology/bandMember> ?v2 . ?v2 <http://dbpedia.org/property/occupation> ""Vocalist, musician, songwriter""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
SELECT ?band WHERE {
  ?person <http://dbpedia.org/ontology/profession> ?role .
  FILTER(?role IN (<http://dbpedia.org/resource/Vocalist>, <http://dbpedia.org/resource/Musician>, <http://dbpedia.org/resource/Songwriter>)).
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?type .
  FILTER(?type IN (<http://dbpedia.org/ontology/Artist>, <http://dbpedia.org/ontology/MusicalArtist>)).
  ?person <http://dbpedia.org/ontology/reference> <http://dbpedia.org/resource/The_Blasters> .
  ?person <http://dbpedia.org/property/band> ?band .
}
```",3,5,4,2,2,2,2,9,0,0,1,0,0.0,0
339,14,val,Give me the father of the child of the parent of Princess Olga of Greece and Denmark.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?result . ?v2 <http://dbpedia.org/ontology/child> ?v0 . ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Princess_Olga_of_Greece_and_Denmark> . },"```sparql
SELECT ?father WHERE {
  ?princess wdt:P31 wd:Q215627; # Princess Olga of Greece and Denmark
            wdt:P22 ?parent1, ?parent2. # Her parents

  OPTIONAL { ?parent1 wdt:P31 wd:Q5 } # Check if parent is a human (optional for clarity)
  OPTIONAL { ?parent2 wdt:P31 wd:Q5 }

  ?child wdt:P25 ?princess; # Child of Princess Olga
         wdt:P22 ?father. # Father of that child

  FILTER(?child != wd:Q215627) # Ensure the child is not Princess Olga herself
}
```",3,3,4,3,1,3,2,20,0,0,1,0,0.0,0
360,18,val,Give me the reference to the author of Blinded by the Light and native of Johannesburg.,SELECT ?result WHERE { <http://dbpedia.org/resource/Blinded_by_the_Light> <http://dbpedia.org/property/author> ?v2 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Johannesburg> . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . },"```sparql
SELECT ?reference WHERE {
  ?work dbo:author ?author .
  ?author dbo:nativePlace <http://dbpedia.org/resource/Johannesburg> .
  ?work rdfs:label ""Blinded by the Light""@en .
  ?reference foaf:primaryTopic ?work .
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
345,11,val,Give me the figure known as the nickname of FC Vaduz and team of Alessandro Mangiarratti.,SELECT ?result WHERE { <http://dbpedia.org/resource/FC_Vaduz> <http://dbpedia.org/property/nickname> ?v2 . ?result <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Alessandro_Mangiarratti> . ?result <http://dbpedia.org/property/nickname> ?v2 . },"```sparql
# Query to find the nickname of FC Vaduz
SELECT ?nickname WHERE {
  <http://dbpedia.org/resource/FC_Vaduz> <http://dbpedia.org/ontology/nickname> ?nickname .
}

# Query to find the team associated with Alessandro Mangiarratti
SELECT ?team WHERE {
  <http://dbpedia.org/resource/Alessandro_Mangiarratti> <http://dbpedia.org/ontology/team> ?team .
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
303,15,val,"Give me the party of the commander, that is a politician, in United States invasion of Panama and party of Arnulfo Arias.",SELECT ?result WHERE { <http://dbpedia.org/resource/Arnulfo_Arias> <http://dbpedia.org/ontology/party> ?result . ?v1 <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/United_States_invasion_of_Panama> <http://dbpedia.org/ontology/commander> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
SELECT DISTINCT ?commanderParty ?arnulfoAriasParty WHERE {
  # Find the commander in the United States invasion of Panama who is also a politician
  ?invasion dbpedia-owl:commander ?commander .
  FILTER(?invasion = dbpedia:United_States_invasion_of_Panama) .
  
  ?commander rdf:type dbo:Politician .

  # Get the political party for this commander
  ?commander dbo:party ?commanderParty .

  # Find Arnulfo Arias and his political party
  dbpedia:Arnulfo_Arias dbo:party ?arnulfoAriasParty .
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
391,18,val,"Give me the actor of The Departed and native of Compton, California and actor of All About the Andersons.","SELECT ?result WHERE { <http://dbpedia.org/resource/The_Departed> <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/All_About_the_Andersons> <http://dbpedia.org/property/starring> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Compton,_California> . }","```sparql
SELECT ?actor WHERE {
  ?actor <http://dbpedia.org/ontology/actor> <http://dbpedia.org/resource/The_Departed> .
  ?actor <http://dbpedia.org/ontology/actor> <http://dbpedia.org/resource/All_About_the_Andersons> .
  ?actor <http://dbpedia.org/property/nationality> <http://dbpedia.org/resource/United_States> ;
         <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Compton,_California> .
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
465,7,val,Give me the administration of Czech Pirate Party and death place of the native of Prague.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/deathPlace> ?result . ?result <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Czech_Pirate_Party> . ?v2 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Prague> . },"```sparql
# Query for Administration of Czech Pirate Party
SELECT ?administration WHERE {
  <http://dbpedia.org/resource/Czech_Pirate_Party> <http://dbpedia.org/ontology/administration> ?administration .
}

# Query for Death Place of Native of Prague
SELECT DISTINCT ?deathPlace WHERE {
  ?person <http://dbpedia.org/property/birthPlace> <http://dbpedia.org/resource/Prague> .
  ?person <http://dbpedia.org/ontology/deathPlace> ?deathPlace .
}
```",3,3,4,2,2,2,2,9,0,0,1,0,0.0,0
92,27,val,Give me the band of the person born as the birth name of Joseph Michael.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> ?v2 . <http://dbpedia.org/resource/Joseph_Michael> <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://dbpedia.org/property/birthName> ?v1 . },"SELECT ?band WHERE {
  ?person <http://dbpedia.org/ontology/birthName> ""Joseph Michael"" .
  ?person <http://dbpedia.org/property/memberOf> ?band .
}",3,3,4,3,1,3,3,71,0,0,1,0,0.0,0
392,18,val,"Give me the province of the residence, that is a settlement and Italian, of Sebastiano Bianchetti and region of Central European Time.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://dbpedia.org/ontology/province> ?result . ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Central_European_Time> . <http://dbpedia.org/resource/Sebastiano_Bianchetti> <http://dbpedia.org/property/residence> ?v0 . },"```sparql
# Step 1: Find Sebastiano Bianchetti's Italian residence that is a settlement
SELECT ?residence WHERE {
    ?residence <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>.
    ?residence <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>.
    <http://dbpedia.org/resource/Sebastiano_Bianchetti> <http://dbpedia.org/property/residence> ?residence.
}

# Step 2: Find the province of this residence
SELECT DISTINCT ?province WHERE {
    ?residence <http://dbpedia.org/ontology/province> ?province.
    # Bind the result from step 1 to ?residence
    FILTER(?residence = ?residenceFromStep1)
}

# Step 3: Identify regions under Central European Time (CET)
SELECT DISTINCT ?region WHERE {
    ?region <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Central_European_Time>.
}

# Step 4: Find provinces within these CET regions
SELECT DISTINCT ?province WHERE {
    ?province <http://dbpedia.org/ontology/locatedInRegion> ?region.
    # Bind the result from step 3 to ?region
    FILTER(?region = ?regionFromStep3)
}
```",3,5,4,2,2,2,3,28,0,0,1,0,0.0,0
626,14,val,Give me the awardee of the award of the military force of Battle of Borodino.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Borodino> . ?v2 <http://dbpedia.org/property/awards> ?v0 . ?result <http://dbpedia.org/property/awards> ?v0 . },"```sparql
SELECT ?awardee WHERE {
  ?battle <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Borodino>.
  ?force <http://dbpedia.org/ontology/battle> ?battle.
  ?award <http://dbpedia.org/property/givenBy> ?force.
  ?award <http://purl.org/dc/terms/creator> ?awardee.
}
```",3,3,4,3,1,3,2,20,0,0,7855,0,0.0,0
392,17,val,"Give me the region of the time zone, that is a sports event, of Aguilar de Segarra and province of Schio.",SELECT ?result WHERE { <http://dbpedia.org/resource/Aguilar_de_Segarra> <http://dbpedia.org/ontology/timeZone> ?v1 . <http://dbpedia.org/resource/Schio> <http://dbpedia.org/ontology/province> ?result . ?result <http://dbpedia.org/ontology/timeZone> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsEvent>. },"```sparql
# Step 1: Get sports events for Aguilar de Segarra
SELECT ?event WHERE {
    ?place rdfs:label ""Aguilar de Segarra""@en .
    ?place dbo:sportEvent ?event .
}

# Step 2: Get sports events for Schio
SELECT ?event WHERE {
    ?place rdfs:label ""Schio""@en .
    ?place dbo:sportEvent ?event .
}

# Step 3: Find common sports events between Aguilar de Segarra and Schio
SELECT DISTINCT ?commonEvent WHERE {
    ?place1 rdfs:label ""Aguilar de Segarra""@en .
    ?place1 dbo:sportEvent ?commonEvent .
    ?place2 rdfs:label ""Schio""@en .
    ?place2 dbo:sportEvent ?commonEvent .
}

# Step 4: Determine the time zone of the common sports event
SELECT DISTINCT ?timeZone WHERE {
    ?event dbo:location ?location .
    ?location dbo:timezone ?timeZone .
    FILTER(?event IN (?commonEvent))
}

# Step 5: Extract the region from the identified time zone
SELECT DISTINCT ?region WHERE {
    ?timeZone dbo:country ?country .
    ?country dbo:administrativeTerritory ?region .
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
328,31,val,Give me the commander in Eastern Front (World War II) and awardee of the award of the commander in Volcano and Ryukyu Islands campaign.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Eastern_Front_(World_War_II)> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Volcano_and_Ryukyu_Islands_campaign> <http://dbpedia.org/ontology/commander> ?v1 . },"```sparql
SELECT ?commander WHERE {
  # Find commanders of the Eastern Front (World War II)
  <http://dbpedia.org/resource/Eastern_Front_(World_War_II)> <http://dbpedia.org/ontology/commander> ?commander .
  
  # Ensure these commanders were also awarded for their role in the Volcano and Ryukyu Islands campaign
  ?commander <http://dbpedia.org/property/awardee> ?award .
  ?award <http://dbpedia.org/ontology/reason> <http://dbpedia.org/resource/Volcano_and_Ryukyu_Islands_campaign> .
}
```",4,4,5,3,2,3,3,71,0,0,5,0,0.0,0
55,19,val,"Give me the band member of Metallica and band of Newsted and band member of the producer, that is a band, of Used to Love Her.",SELECT ?result WHERE { <http://dbpedia.org/resource/Used_to_Love_Her> <http://dbpedia.org/ontology/producer> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. <http://dbpedia.org/resource/Newsted> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Metallica> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . },"```sparql
SELECT ?person WHERE {
  # Step 1: Identify Metallica band members
  ?metallicaMember <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/Metallica> .
  
  # Step 2: Check if the member had a band named Newsted
  ?metallicaMember <http://dbpedia.org/property/band> <http://dbpedia.org/resource/Newsted> .

  # Step 3: Verify involvement in producing ""Used to Love Her""
  ?person <http://dbpedia.org/ontology/member> ?producer .
  ?producer <http://dbpedia.org/ontology/produced> <http://dbpedia.org/resource/Used_to_Love_Her> .
  
  FILTER (?metallicaMember = ?person)
}
```",4,5,5,2,3,2,3,28,0,0,1,0,0.0,0
528,43,val,Give me the war of Irene Morales and war of the commander in the work of --01-09 and force of Narciso Campero.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Irene_Morales> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Narciso_Campero> . ?v0 <http://dbpedia.org/property/author> ""--01-09""^^<http://www.w3.org/2001/XMLSchema#gMonthDay> . ?v0 <http://dbpedia.org/ontology/commander> ?v4 . ?v4 <http://dbpedia.org/ontology/battle> ?result . }","```sparql
SELECT ?war WHERE {
  ?war a <http://dbpedia.org/ontology/MilitaryConflict> .
  
  # Association with Irene Morales
  ?irene a <http://dbpedia.org/resource/Irene_Morales> ;
         <http://dbpedia.org/property/associatedWithWar> ?war .

  # Commander from an event on --01-09
  ?event a <http://dbpedia.org/ontology/Event> ;
         <http://www.w3.org/2000/01/rdf-schema#date> ?date .
  FILTER (STRSTARTS(STR(?date), ""20--01-09"")) .
  
  ?commander a <http://dbpedia.org/ontology/Person> ;
             <http://dbpedia.org/property/commandedEvent> ?event ;
             <http://dbpedia.org/property/associatedWithWar> ?war .

  # Force of Narciso Campero
  ?narciso a <http://dbpedia.org/resource/Narciso_Campero> ;
           <http://dbpedia.org/ontology/commandedForce> ?force .
  
  ?force <http://dbpedia.org/property/involvedInWar> ?war .
}
```",5,5,6,3,3,3,3,71,0,0,2,0,0.0,0
184,27,val,Give me the parent of the child of the parent of Archduchess Margaret of Austria (born 1925).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v2 . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Margaret_of_Austria_(born_1925)> . ?v2 <http://dbpedia.org/property/father> ?v1 . },"```sparql
SELECT ?grandparent WHERE {
    # Step 1: Identify the parent of Archduchess Margaret of Austria (born 1925)
    <http://dbpedia.org/resource/Archduchess_Margaret_of_Austria_(born_1925)> <http://dbpedia.org/ontology/father> ?parent .
    
    # Step 2: Determine the child of that parent
    ?parent <http://dbpedia.org/ontology/child> ?child .

    # Step 3: Find the parent of that child
    ?child <http://dbpedia.org/ontology/father|<http://dbpedia.org/ontology/mother>> ?grandparent .
}
```",3,3,4,3,1,3,3,71,0,0,2,0,0.0,0
281,28,val,Give me the entity in Colony of New Zealand and war of New Zealand Army and war of the awardee of Knight Grand Cross of the Order of the Bath.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_the_Bath> . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Colony_of_New_Zealand> . <http://dbpedia.org/resource/New_Zealand_Army> <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
SELECT ?entity WHERE {
  ?entity <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/New_Zealand>.
  ?entity <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>.
  
  OPTIONAL { 
    ?entity <http://dbpedia.org/ontology/army> <http://dbpedia.org/resource/New_Zealand_Army> .
  }
  
  OPTIONAL {
    ?recipient <http://dbpedia.org/property/awardee> ?entity .
    ?recipient <http://dbpedia.org/ontology/honour> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_the_Bath> .
  }
}
```",4,4,5,2,3,3,3,71,0,2,1,0.0,0.0,0
767,43,val,Give me the alma mater of the administration of the reference to George Kilbon Nash and reference to  and entity in Baden-Württemberg.,"SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""George Kilbon Nash""@en . ?result <http://dbpedia.org/ontology/state> <http://dbpedia.org/resource/Baden-Württemberg> . ?v4 <http://dbpedia.org/ontology/almaMater> ?result . ?v4 <http://dbpedia.org/property/governor> ?v0 . ?result <http://xmlns.com/foaf/0.1/name> """"@en . }","```sparql
SELECT ?almaMater WHERE {
  ?entity <http://dbpedia.org/ontology/administration> ?administration .
  ?administration <http://dbpedia.org/property/referenceTo> <http://dbpedia.org/resource/George_Kilbon_Nash> .
  
  OPTIONAL { 
    ?entity <http://www.w3.org/2000/01/rdf-schema#seeAlso> ?reference .
    ?reference <http://dbpedia.org/ontology/entityInLocation> <http://dbpedia.org/resource/Baden-W%C3%BCrttemberg> .
  }
  
  ?entity <http://dbpedia.org/ontology/almaMater> ?almaMater .
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
783,15,val,Give me the band member of Ebony Reigns and associated musical artist of the band member of the person born as Samuel Ofori Amponsah.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://dbpedia.org/property/birthName> ""Samuel Ofori Amponsah""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Ebony_Reigns> . }","```sparql
# Step 1: Find band members of Ebony Reigns
SELECT ?bandMember WHERE {
    <http://dbpedia.org/resource/Ebony_Reigns> <http://dbpedia.org/ontology/memberOf> ?band .
    ?band <http://dbpedia.org/ontology/member> ?bandMember .
}

# Step 2: Find associated musical artists of the band members
SELECT DISTINCT ?associatedArtist WHERE {
    # Reuse results from step 1
    ?bandMember <http://dbpedia.org/ontology/memberOf> ?band .
    
    # Find associated musical artists for each band member
    OPTIONAL { 
        ?bandMember <http://dbpedia.org/property/associatedMusicalArtist> ?associatedArtist .
    }
}
```",4,4,5,3,2,3,2,20,0,0,1,0,0.0,0
485,15,val,"Give me the entity in the region, that is a country, of Western European Time and entity in Nottinghamshire.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Nottinghamshire> . ?v1 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Western_European_Time> . },"```sparql
SELECT ?entity WHERE {
  ?region <http://dbpedia.org/ontology/country> ?country .
  ?timeZone <http://dbpedia.org/property/timeZone> ""Western European Time"" .
  ?region <http://www.w3.org/2000/01/rdf-schema#seeAlso> ?timeZone .
  
  OPTIONAL {
    ?nottinghamshire <http://dbpedia.org/ontology/administrativeRegion> ?country .
    FILTER(?nottinghamshire = <http://dbpedia.org/resource/Nottinghamshire>)
  }
  
  ?entity <http://www.w3.org/2000/01/rdf-schema#seeAlso> ?region .
}
```",3,4,4,2,2,2,3,28,0,0,357,0,0.0,0
659,32,val,"Give me the commander in the war, that is an event and a military conflict, of 1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish) and commander in the force of Arthur Wellesley, 1st Duke of Wellington.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Arthur_Wellesley,_1st_Duke_of_Wellington> . <http://dbpedia.org/resource/1st_Light_Cavalry_Lancers_Regiment_of_the_Imperial_Guard_(Polish)> <http://dbpedia.org/ontology/battle> ?v3 . }","```sparql
SELECT ?war ?commander WHERE {
  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>.
  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>.

  OPTIONAL { 
    <http://dbpedia.org/resource/1st_Light_Cavalry_Lancers_Regiment_of_the_Imperial_Guard_(Polish)> <http://dbpedia.org/property/commander> ?commander.
    ?war <http://dbpedia.org/ontology/battle> ?battle.
    ?battle <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/1st_Light_Cavalry_Lancers_Regiment_of_the_Imperial_Guard_(Polish)> .
  }

  OPTIONAL { 
    <http://dbpedia.org/resource/Arthur_Wellesley,_1st_Duke_of_Wellington> <http://dbpedia.org/ontology/commander> ?commander.
    ?war <http://dbpedia.org/ontology/battle> ?battle.
    ?battle <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Arthur_Wellesley,_1st_Duke_of_Wellington> .
  }
}
```",4,6,5,2,2,3,3,71,0,18713,71,0.0,0.0,0
701,21,val,Give me the spouse of Ramesses II and parent of the child of Nefertari.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Nefertari> <http://dbpedia.org/ontology/child> ?v1 . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Ramesses_II> . },"```sparql
SELECT ?spouse WHERE {
  <http://dbpedia.org/resource/Ramesses_II> <http://dbpedia.org/ontology/spouse> ?spouse .
  ?child <http://dbpedia.org/property/birthParent> <http://dbpedia.org/resource/Nefertari> .
  ?child <http://dbpedia.org/property/birthParent> ?spouse .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
391,28,val,Give me the native of the figure known as Hub City and actor of All About the Andersons and actor of The Departed.,"SELECT ?result WHERE { <http://dbpedia.org/resource/The_Departed> <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://dbpedia.org/property/nickname> ""Hub City""@en . <http://dbpedia.org/resource/All_About_the_Andersons> <http://dbpedia.org/property/starring> ?result . }","```sparql
SELECT ?nativePlace WHERE {
  ?actor <http://dbpedia.org/ontology/film> <http://dbpedia.org/resource/All_About_the_Andersons> .
  ?actor <http://dbpedia.org/ontology/film> <http://dbpedia.org/resource/The_Departed> .
  OPTIONAL { ?actor <http://dbpedia.org/property/nickname> ""Hub City"" . }
  ?actor <http://dbpedia.org/ontology/birthPlace> ?nativePlace .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
492,38,val,"Give me the commander in the war, that is a military conflict and an event, of Frédéric-Georges Herr and person decedent at the capital, that is a settlement, of Algeria.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Algeria> <http://dbpedia.org/ontology/capital> ?v2 . ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . ?v3 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Frédéric-Georges_Herr> <http://dbpedia.org/ontology/battle> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
# Step 1: Find the capital of Algeria that is a settlement
SELECT ?capital WHERE {
    ?capital <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Algeria>.
    ?capital <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>.
}

# Step 2: Find the person who died in this capital
SELECT ?decedent WHERE {
    ?deathEvent <http://dbpedia.org/property/placeOfDeath> ?capital.
    ?deathEvent <http://dbpedia.org/ontology/death> ?date.
    ?person <http://dbpedia.org/ontology/death> ?deathEvent.
}

# Step 3: Find the war involving Frédéric-Georges Herr
SELECT ?war WHERE {
    ?herr <http://dbpedia.org/property/battle> ?battle.
    ?battle <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>.
    ?battle <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>.
    ?herr <http://dbpedia.org/resource/Frédéric-Georges_Herr>.
}

# Step 4: Find the commander of this war
SELECT ?commander WHERE {
    ?war <http://dbpedia.org/property/commander> ?commander.
}
```",4,7,5,2,2,3,3,71,0,0,1,0,0.0,0
427,21,val,Give me the party of Romano Prodi and reference to the name of Italian People's Party (1994).,SELECT ?result WHERE { <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Italian_People's_Party_(1994)> <http://xmlns.com/foaf/0.1/name> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . },"```sparql
SELECT ?party ?partyName WHERE {
  # Find the party associated with Romano Prodi
  <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/ontology/party> ?party .
  
  # Get the name of the party
  ?party <http://www.w3.org/2000/01/rdf-schema#label> ?partyName .

  OPTIONAL {
    # Find a reference to Italian People's Party (1994)
    ?italianPeopleParty <http://dbpedia.org/ontology/name> ?partyName .
    FILTER(CONTAINS(LCASE(?partyName), ""italian people's party 1994""))
  }
}
```",3,3,4,2,2,3,3,71,1,13,0,0.07142857142857142,1.0,0.13333333333333333
659,20,val,"Give me the commander in the war, that is an event and a military conflict, of 1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish) and commander in German campaign of 1813.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/German_campaign_of_1813> <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/1st_Light_Cavalry_Lancers_Regiment_of_the_Imperial_Guard_(Polish)> <http://dbpedia.org/ontology/battle> ?v2 . },"```sparql
SELECT ?commander WHERE {
    ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>.
    ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>.

    OPTIONAL { 
        <http://dbpedia.org/resource/1st_Light_Cavalry_Lancers_Regiment_of_the_Imperial_Guard_(Polish)> <http://dbpedia.org/property/commander> ?commander.
    }
    
    OPTIONAL {
        ?campaign <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>.
        ?campaign <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>.
        ?campaign <http://dbpedia.org/resource/German_campaign_of_1813>.
        ?campaign <http://dbpedia.org/property/commander> ?commander.
    }
    
    FILTER(?war = ?campaign)
}
```",3,5,4,2,2,3,3,71,0,0,30,0,0.0,0
294,16,val,"Give me the resting place of Luke Lea (American politician, born 1879) and entity in the birth place, that is a settlement, of Marion James.","SELECT ?result WHERE { <http://dbpedia.org/resource/Luke_Lea_(American_politician,_born_1879)> <http://dbpedia.org/ontology/restingPlace> ?result . ?result <http://dbpedia.org/ontology/location> ?v2 . <http://dbpedia.org/resource/Marion_James> <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. }","```sparql
# Query to get the resting place of Luke Lea (American politician, born 1879)
SELECT ?restingPlace WHERE {
    <http://dbpedia.org/resource/Luke_Lea_(politician)> dbpedia-owl:finalBurial ?restingPlace .
}

# Query to find an entity in the birthplace of Marion James
SELECT ?entity WHERE {
    ?birthPlace a dbo:Settlement ;
                dbo:birthPlace <http://dbpedia.org/resource/Marion_James> .
    ?entity dbo:location ?birthPlace .
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
54,29,val,Give me the parent of the child of Narapati I of Ava and predecessor of Ameitta Thiri Maha Dhamma Dewi of Ava and child of Thinkhaya of Pagan.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Narapati_I_of_Ava> . ?v3 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Ameitta_Thiri_Maha_Dhamma_Dewi_of_Ava> . <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?result . },"```sparql
# Step 1: Find the child of Narapati I of Ava and their parent
SELECT ?child ?parent WHERE {
    ?narapatiI <http://dbpedia.org/ontology/spouse> ?child .
    FILTER(?narapatiI = <http://dbpedia.org/resource/Narapati_I_of_Ava>)
    ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Human> .
    ?child <http://dbpedia.org/property/haveChild> ?parent .
}

# Step 2: Find the predecessor of Ameitta Thiri Maha Dhamma Dewi of Ava
SELECT ?predecessor WHERE {
    ?ameittaThiriMahaDhammaDewi <http://dbpedia.org/ontology/predecessor> ?predecessor .
    FILTER(?ameittaThiriMahaDhammaDewi = <http://dbpedia.org/resource/Ameitta_Thiri_Maha_Dhamma_Dewi_of_Ava>)
}

# Step 3: Find the children of Thinkhaya of Pagan
SELECT ?child WHERE {
    ?thinkhaya <http://dbpedia.org/ontology/spouse> ?child .
    FILTER(?thinkhaya = <http://dbpedia.org/resource/Thinkhaya_of_Pagan>)
    ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Human> .
}

# Final query to find the person who satisfies all conditions
SELECT DISTINCT ?person WHERE {
    # From Step 1
    ?narapatiI <http://dbpedia.org/ontology/spouse> ?child .
    FILTER(?narapatiI = <http://dbpedia.org/resource/Narapati_I_of_Ava>)
    ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Human> .
    ?child <http://dbpedia.org/property/haveChild> ?person .

    # From Step 2
    ?ameittaThiriMahaDhammaDewi <http://dbpedia.org/ontology/predecessor> ?person .
    FILTER(?ameittaThiriMahaDhammaDewi = <http://dbpedia.org/resource/Ameitta_Thiri_Maha_Dhamma_Dewi_of_Ava>)

    # From Step 3
    ?thinkhaya <http://dbpedia.org/ontology/spouse> ?person .
    FILTER(?thinkhaya = <http://dbpedia.org/resource/Thinkhaya_of_Pagan>)
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
528,25,val,Give me the force of the person born as Narciso Campero Leyes and war of Orozimbo Barbosa.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> ?v1 . <http://dbpedia.org/resource/Orozimbo_Barbosa> <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/property/birthName> ""Narciso Campero Leyes""@en . }","```sparql
# Query for the force of Narciso Campero Leyes
SELECT ?force WHERE {
  <http://dbpedia.org/resource/Narciso_Campero_Leyes> <http://dbpedia.org/ontology/militaryForce> ?force .
}

# Query for the war involving Orozimbo Barbosa
SELECT DISTINCT ?war WHERE {
  ?battle <http://dbpedia.org/ontology/battleOf> ?war .
  ?person <http://dbpedia.org/ontology/foughtInBattle> ?battle .
  FILTER(?person = <http://dbpedia.org/resource/Orozimbo_Barbosa>)
}
```",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
959,42,val,"Give me the member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of Eiji Ōtsuka and manager of the team of Takashi Sekizuka and native of Japan.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?v0 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Takashi_Sekizuka> . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Japan> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. <http://dbpedia.org/resource/Eiji_Ōtsuka> <http://dbpedia.org/ontology/almaMater> ?v1 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/team> ?v1 . ?v0 <http://dbpedia.org/ontology/manager> ?result . },"```sparql
SELECT ?member WHERE {
  # Find Eiji Ōtsuka's alma mater that matches all conditions
  ?almaMater <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalOrganization>;
              <http://www.w3.org/2000/01/rdf-schema#label> ?label;
              <http://dbpedia.org/property/country> <http://dbpedia.org/resource/Japan>.
  FILTER(CONTAINS(LCASE(?label), ""university"") && CONTAINS(LCASE(?label), ""organization""))
  
  # Eiji Ōtsuka's alma mater membership
  <http://dbpedia.org/resource/Eiji_Ōtsuka> <http://dbpedia.org/ontology/almaMater> ?almaMater.
  
  # Find Takashi Sekizuka's team manager who is also a member of the alma mater
  ?manager <http://dbpedia.org/ontology/team> ?team;
           <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>;
           <http://dbpedia.org/property/nationality> <http://dbpedia.org/resource/Japan>.
  <http://dbpedia.org/resource/Takashi_Sekizuka> <http://dbpedia.org/ontology/team> ?team.
  
  # Ensure the manager is a member of the alma mater
  ?manager <http://dbpedia.org/ontology/memberOf> ?almaMater.
  
  # The entity we are looking for must be both the manager and a member of the alma mater
  BIND(?manager AS ?member)
}
```",5,9,6,2,3,3,3,71,0,0,2,0,0.0,0
328,23,val,Give me the awardee of the award of the commander in Volcano and Ryukyu Islands campaign.,SELECT ?result WHERE { <http://dbpedia.org/resource/Volcano_and_Ryukyu_Islands_campaign> <http://dbpedia.org/ontology/commander> ?v2 . ?result <http://dbpedia.org/property/awards> ?v0 . ?v2 <http://dbpedia.org/property/awards> ?v0 . },"```sparql
SELECT ?awardee WHERE {
  ?campaign <http://dbpedia.org/ontology/commander> ?commander .
  ?award <http://dbpedia.org/property/recipient> ?awardee .
  ?commander <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryPerson> .
  ?campaign <http://dbpedia.org/ontology/name> ""Volcano and Ryukyu Islands campaign"" .
  ?award <http://dbpedia.org/property/givenTo> ?commander .
}
```",3,3,4,3,1,3,3,71,0,0,13262,0,0.0,0
701,41,val,Give me the parent of the child of Ramesses II and spouse of Ramesses II and parent of the child of Nefertari.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Ramesses_II> . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ramesses_II> . <http://dbpedia.org/resource/Nefertari> <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/ontology/child> ?v4 . ?v2 <http://dbpedia.org/ontology/parent> ?result . },"```sparql
SELECT ?person WHERE {
  # Ramesses II is the parent of a child
  ?child <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/Ramesses_II>.
  
  # The person is the spouse of Ramesses II
  ?person <http://dbpedia.org/property/spouse> <http://dbpedia.org/resource/Ramesses_II>.

  # The person is also the parent of a child of Nefertari
  ?child2 <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/Nefertari>.
  ?child2 <http://dbpedia.org/ontology/birthParent> ?person.
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
488,26,val,"Give me the death place of the father, that is a politician, of the father, that is an office holder, of Matsudaira Tadamasa.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Matsudaira_Tadamasa> <http://dbpedia.org/property/father> ?v1 . ?v1 <http://dbpedia.org/property/father> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
SELECT ?deathPlace WHERE {
  ?matsudairaTadamasa dbo:father ?officeHolderFather .
  ?officeHolderFather rdf:type dbo:OfficeHolder .
  
  ?officeHolderFather dbo:father ?politicianGrandfather .
  ?politicianGrandfather rdf:type dbo:Politician .

  ?politicianGrandfather dbo:deathPlace ?deathPlace .
}
```",3,5,4,3,1,3,3,71,0,32,2,0.0,0.0,0
161,26,val,"Give me the military force of the force, that is a societal event and a military conflict, of the predecessor of Indalecio Prieto.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/commander> ?v1 . ?v1 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Indalecio_Prieto> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"SELECT ?result WHERE {
  ?predecessor <http://dbpedia.org/ontology/predecessor> <http://dbpedia.org/resource/Indalecio_Prieto>.
  ?event <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>.
  ?conflict <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>.
  ?predecessor <http://dbpedia.org/ontology/knownFor> ?event.
  ?predecessor <http://dbpedia.org/ontology/knownFor> ?conflict.
  ?conflict <http://dbpedia.org/property/militaryForce> ?result.
}",3,5,4,3,1,3,3,71,0,0,514,0,0.0,0
666,15,val,"Give me the player in the manager, that is a sports manager, of the team, that is a soccer club and a sports team season, of Leonid Slutsky (football coach) and figure known as The Three Lions.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?result <http://dbpedia.org/property/nickname> ""The Three Lions""@en . ?v1 <http://dbpedia.org/ontology/team> ?result . ?v0 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Leonid_Slutsky_(football_coach)> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v0 <http://dbpedia.org/ontology/manager> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. }","```sparql
SELECT ?player WHERE {
  ?team <http://dbpedia.org/ontology/team> ?manager .
  ?manager <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager> .
  ?team <http://dbpedia.org/ontology/player> ?player .
  ?team <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub> .
  ?team <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason> .
  ?manager foaf:name ""Leonid Slutsky""@en .
  ?team foaf:name ""The Three Lions""@en .
}
```",4,7,5,3,2,3,2,20,0,0,2,0,0.0,0
547,28,val,Give me the resting place of Alan Cunningham and resting place of Simon Cadell and resting place of the child of James Burton (property developer).,SELECT ?result WHERE { <http://dbpedia.org/resource/James_Burton_(property_developer)> <http://dbpedia.org/ontology/child> ?v1 . <http://dbpedia.org/resource/Simon_Cadell> <http://dbpedia.org/ontology/restingPlace> ?result . ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Alan_Cunningham> <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
SELECT ?person ?restingPlace WHERE {
  { 
    <http://dbpedia.org/resource/Alan_Cunningham> <http://dbpedia.org/ontology/burialPlace> ?restingPlace .
    BIND(<http://dbpedia.org/resource/Alan_Cunningham> AS ?person)
  }
  UNION
  { 
    <http://dbpedia.org/resource/Simon_Cadell> <http://dbpedia.org/ontology/burialPlace> ?restingPlace .
    BIND(<http://dbpedia.org/resource/Simon_Cadell> AS ?person)
  }
  UNION
  {
    ?child <http://www.w3.org/2002/07/owl#sameAs> <http://dbpedia.org/resource/James_Burton_(property_developer)>:Child .
    ?child <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
    ?child <http://dbpedia.org/ontology/deathPlace> ?deathPlace .
    ?child <http://dbpedia.org/ontology/burialPlace> ?restingPlace .
    BIND(?child AS ?person)
  }
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
16,24,val,Give me the professional in the profession of Satomi Ishihara and person born as Georgeanne Marie Rice.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Georgeanne Marie Rice""@en . <http://dbpedia.org/resource/Satomi_Ishihara> <http://dbpedia.org/property/occupation> ?v2 . ?result <http://dbpedia.org/property/occupation> ?v2 . }","```sparql
SELECT ?professional WHERE {
  # Get the profession of Satomi Ishihara
  <http://dbpedia.org/resource/Satomi_Ishihara> <http://purl.org/dc/terms/subject> ?profession .

  # Find individuals with the same birth name as Georgeanne Marie Rice
  ?person <http://xmlns.com/foaf/0.1/name> ""Georgeanne Marie Rice"" .
  
  # Match the profession of Satomi Ishihara with these individuals
  ?person <http://purl.org/dc/terms/subject> ?profession .

  BIND(?person AS ?professional)
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
485,16,val,"Give me the entity in United Kingdom and entity in the birth place, that is a region, of Joseph Whitaker (naturalist).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?result <http://dbpedia.org/ontology/country> ?v2 . <http://dbpedia.org/resource/Joseph_Whitaker_(naturalist)> <http://dbpedia.org/ontology/birthPlace> ?v2 . },"```sparql
SELECT ?ukEntity ?birthPlaceRegion WHERE {
  ?ukEntity dbo:country dbr:United_Kingdom .
  
  <http://dbpedia.org/resource/Joseph_Whitaker_(naturalist)> dbo:birthPlace ?birthPlace .
  ?birthPlace rdf:type dbo:Region .

  BIND(?birthPlace AS ?birthPlaceRegion)
}
```",3,4,4,2,2,2,3,28,357,42642,0,0.008302518663224727,1.0,0.016468308884583453
712,15,val,"Give me the resting place of Nina Onilova and capital of the country of the military force, that is an organisation and a military unit, of Vyoshenskaya Uprising.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/capital> ?result . ?v0 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Vyoshenskaya_Uprising> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. <http://dbpedia.org/resource/Nina_Onilova> <http://dbpedia.org/ontology/restingPlace> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/ontology/country> ?v1 . },"```sparql
# Step 1: Get the resting place of Nina Onilova
SELECT ?restingPlace WHERE {
    <http://dbpedia.org/resource/Nina_Onilova> <http://dbpedia.org/ontology/burialPlace> ?restingPlace .
}

# Step 2: Identify the military force involved in Vyoshenskaya Uprising
SELECT ?militaryForce WHERE {
    <http://dbpedia.org/resource/Vyoshenskaya_Uprising> <http://dbpedia.org/ontology/militaryUnit> ?militaryForce .
    FILTER(?militaryForce <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> (<http://dbpedia.org/ontology/Organisation> <http://dbpedia.org/ontology/MilitaryUnit>) )
}

# Step 3: Find the country associated with that military force
SELECT ?country WHERE {
    ?militaryForce <http://dbpedia.org/property/country> ?country .
}

# Step 4: Retrieve the capital city of that country
SELECT ?capital WHERE {
    ?country <http://dbpedia.org/ontology/administrativeCapital> ?capital .
}
```",4,6,5,3,2,3,2,20,0,0,1,0,0.0,0
378,19,val,Give me the war of the person born as Carl Pontus Gahn and war of Joaquín Blake.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Joaquín_Blake> <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/property/birthName> ""Carl Pontus Gahn""@en . }","```sparql
SELECT DISTINCT ?war WHERE {
  {
    # Wars involving Carl Pontus Gahn
    <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/ontology/battle> ?war .
    FILTER (?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>)
  }
  UNION
  {
    # Wars involving Joaquín Blake
    <http://dbpedia.org/resource/Joaqu%C3%ADn_Blake_y_Jord%C3%A1n> <http://dbpedia.org/ontology/battle> ?war .
    FILTER (?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>)
  }
}
```",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
617,39,val,Give me the spouse of Laodice IV and parent of the child of the commander in Battle of Panium.,SELECT ?result WHERE { <http://dbpedia.org/resource/Laodice_IV> <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/ontology/child> ?v1 . ?result <http://dbpedia.org/ontology/child> ?v1 . <http://dbpedia.org/resource/Battle_of_Panium> <http://dbpedia.org/ontology/commander> ?v0 . },"```sparql
SELECT ?spouse WHERE {
  # Step 1: Identify the commander in the Battle of Panium
  <http://dbpedia.org/resource/Battle_of_Panium> <http://dbpedia.org/ontology/commander> ?commander .

  # Step 2: Determine the child of that commander
  ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Child> .
  ?child <http://dbpedia.org/property/father> ?commander .

  # Step 3: Find the spouse of Laodice IV who is also a parent of this child
  <http://dbpedia.org/resource/Laodice_IV> <http://dbpedia.org/ontology/spouse> ?spouse .
  ?spouse <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Parent> .
  ?spouse <http://dbpedia.org/property/child> ?child .
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
328,25,val,"Give me the commander in Eastern Front (World War II) and leader of the office, that is a government agency, of Joseph Stalin.",SELECT ?result WHERE { <http://dbpedia.org/resource/Joseph_Stalin> <http://dbpedia.org/property/office> ?v1 . ?v1 <http://dbpedia.org/ontology/leader> ?result . <http://dbpedia.org/resource/Eastern_Front_(World_War_II)> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. },"```sparql
SELECT ?person WHERE {
  ?front <http://dbpedia.org/ontology/commander> ?person .
  ?office <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency> .
  ?office <http://dbpedia.org/property/leader> ?person .
  ?office <http://dbpedia.org/ontology/minister> <http://dbpedia.org/resource/Joseph_Stalin> .
  ?front <http://www.w3.org/2000/01/rdf-schema#label> ""Eastern Front (World War II)""@en .
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
827,12,val,"Give me the father of the child, that is a royalty, of Charles Augustus, Hereditary Grand Duke of Saxe-Weimar-Eisenach (1844–1894) and child of Charles Alexander, Grand Duke of Saxe-Weimar-Eisenach.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Charles_Alexander,_Grand_Duke_of_Saxe-Weimar-Eisenach> <http://dbpedia.org/ontology/child> ?result . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Charles_Augustus,_Hereditary_Grand_Duke_of_Saxe-Weimar-Eisenach_(1844–1894)> . }","```sparql
SELECT ?father WHERE {
  ?child <http://dbpedia.org/ontology/father> ?father .
  ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
  ?child <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/Charles_Augustus,_Hereditary_Grand_Duke_of_Saxe-Weimar-Eisenach_(1844–1894)> .
}
```",3,4,4,2,2,3,2,20,0,0,1,0,0.0,0
492,24,val,"Give me the commander in the war, that is a military conflict and an event, of Frédéric-Georges Herr and person decedent at Algiers.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Algiers> . <http://dbpedia.org/resource/Frédéric-Georges_Herr> <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"```sparql
SELECT ?war ?commander WHERE {
  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>.
  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>.
  
  ?person <http://dbpedia.org/property/deathPlace> <http://dbpedia.org/resource/Algiers>.
  ?person <http://dbpedia.org/ontology/died> ?deathDate.
  
  ?war <http://dbpedia.org/ontology/personDecedent> ?person.
  ?war <http://dbpedia.org/ontology/commander> ?commander.

  OPTIONAL { 
    ?herr <http://dbpedia.org/property/battle> ?war .
    FILTER(?herr = <http://dbpedia.org/resource/Frédéric-Georges_Herr>)
  }
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
179,11,val,Give me the parent of Ubol Ratana and person born as the birth name of Sirikit.,SELECT ?result WHERE { <http://dbpedia.org/resource/Sirikit> <http://dbpedia.org/property/birthName> ?v2 . ?result <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Ubol_Ratana> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
# Query to get the parent of Ubol Ratana
SELECT ?parent WHERE {
  <http://dbpedia.org/resource/Ubol_Ratana> <http://dbpedia.org/ontology/father> ?parent .
}

UNION

# Query to find a person born with Sirikit's birth name
SELECT ?person WHERE {
  # Get Sirikit's birth name
  <http://dbpedia.org/resource/Sirikit> <http://dbpedia.org/property/birthName> ?birthName .

  # Find any other person with the same birth name
  ?person <http://dbpedia.org/property/birthName> ?birthName .
  FILTER(?person != <http://dbpedia.org/resource/Sirikit>)
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
427,40,val,Give me the party of Giulio Andreotti and reference to the name of the party of Michele Pinto and party of Romano Prodi.,SELECT ?result WHERE { <http://dbpedia.org/resource/Michele_Pinto> <http://dbpedia.org/ontology/party> ?v2 . ?v2 <http://xmlns.com/foaf/0.1/name> ?v1 . <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Giulio_Andreotti> <http://dbpedia.org/ontology/party> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . },"```sparql
SELECT ?andreottiParty (GROUP_CONCAT(DISTINCT ?pintoPartyLabel; separator="", "") AS ?pintoParties) 
       (GROUP_CONCAT(DISTINCT ?prodiPartyLabel; separator="", "") AS ?prodiParties)
WHERE {
  # Get the party for Giulio Andreotti
  <http://dbpedia.org/resource/Giulio_Andreotti> <http://dbpedia.org/ontology/party> ?andreottiParty .
  
  # Reference the parties for Michele Pinto
  OPTIONAL { 
    <http://dbpedia.org/resource/Michele_Pinto> <http://dbpedia.org/ontology/party> ?pintoParty .
    SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
  }

  # Reference the parties for Romano Prodi
  OPTIONAL {
    <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/ontology/party> ?prodiParty .
    SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
  }

  # Get labels for Michele Pinto's parties
  OPTIONAL {
    ?pintoParty rdfs:label ?pintoPartyLabel .
    FILTER (lang(?pintoPartyLabel) = ""en"")
  }

  # Get labels for Romano Prodi's parties
  OPTIONAL {
    ?prodiParty rdfs:label ?prodiPartyLabel .
    FILTER (lang(?prodiPartyLabel) = ""en"")
  }
}
```",5,5,6,3,3,3,3,71,0,0,2,0,0.0,0
747,35,val,Give me the person born on the birth date of Pavlo Khudzik and band of the person born as Tracey Elizabeth McSween.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ""Tracey Elizabeth McSween""@en . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/birthDate> ?v2 . <http://dbpedia.org/resource/Pavlo_Khudzik> <http://dbpedia.org/ontology/birthDate> ?v2 . }","```sparql
# Query 1: Find a person born on the same date as Pavlo Khudzik
SELECT ?person WHERE {
    <http://dbpedia.org/resource/Pavlo_Khudzik> dbo:birthday ?birthDate .
    ?person dbo:birthday ?sameBirthDate .
    FILTER (?birthDate = ?sameBirthDate)
}

# Query 2: Find the band associated with Tracey Elizabeth McSween
SELECT ?band WHERE {
    <http://dbpedia.org/resource/Tracey_Elizabeth_McSween> dbo:member ?person .
    ?person dbo:band ?band .
}
```",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
92,43,val,"Give me the associated musical artist of the person born, that is an artist, as the actor of Return to Nuke 'Em High Volume 1 and band member of Nevermore and band of Joseph Michael.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Joseph_Michael> . <http://dbpedia.org/resource/Return_to_Nuke_'Em_High_Volume_1> <http://dbpedia.org/property/starring> ?v0 . ?v4 <http://dbpedia.org/property/birthName> ?v0 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Nevermore> . },"```sparql
SELECT ?person ?associatedArtist WHERE {
  ?actor <http://dbpedia.org/ontology/actor> <http://dbpedia.org/resource/Return_to_Nuke_'Em_High_Volume_1> .
  ?actor <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist> .
  ?bandMember <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/Nevermore> .
  FILTER(?actor = ?bandMember)
  
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
  ?person <http://dbpedia.org/property/band> <http://dbpedia.org/resource/Joseph_Michael> .
  
  ?associatedArtist <http://www.w3.org/2000/01/rdf-schema#seeAlso> ?person .
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
701,24,val,Give me the parent of the child of Ramesses II and spouse of Ramesses II.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ramesses_II> . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Ramesses_II> . ?result <http://dbpedia.org/ontology/child> ?v2 . },"```sparql
SELECT ?spouse WHERE {
  ?child <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/Ramesses_II> .
  ?child <http://dbpedia.org/ontology/birthParent> ?parent .
  <http://dbpedia.org/resource/Ramesses_II> <http://dbpedia.org/property/spouse> ?spouse .
  FILTER(?parent = ?spouse)
}
```",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
959,23,val,"Give me the member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of the person born in 1958.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?result <http://dbpedia.org/ontology/team> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://dbpedia.org/ontology/birthYear> ""1958""^^<http://www.w3.org/2001/XMLSchema#gYear> . ?v1 <http://dbpedia.org/ontology/almaMater> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. }","```sparql
SELECT ?result WHERE {
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organization>.
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>.
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalOrganization>.
  ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>.

  ?person <http://dbpedia.org/property/birthYear> ""1958""^^<http://www.w3.org/2001/XMLSchema#gYear>.
  ?person <http://dbpedia.org/ontology/almaMater> ?result.
}
```",3,7,4,3,1,3,3,71,0,0,524,0,0.0,0
251,19,val,"Give me the administration of Forza Italia (2013) and death place of Laura Mancinelli and location of the war, that is a military conflict, of Louis François Félix Musnier.",SELECT ?result WHERE { <http://dbpedia.org/resource/Laura_Mancinelli> <http://dbpedia.org/ontology/deathPlace> ?result . ?result <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Forza_Italia_(2013)> . ?v2 <http://dbpedia.org/ontology/place> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Louis_François_Félix_Musnier> <http://dbpedia.org/ontology/battle> ?v2 . },"```sparql
SELECT ?result WHERE {
  { 
    <http://dbpedia.org/resource/Forza_Italia_(2013)> <http://dbpedia.org/ontology/administration> ?result .
  }
  UNION
  {
    <http://dbpedia.org/resource/Laura_Mancinelli> <http://dbpedia.org/property/deathPlace> ?result .
  }
  UNION
  {
    ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
    ?war <http://dbpedia.org/ontology/location> ?result .
    ?person <http://dbpedia.org/ontology/battle> ?war .
    FILTER(?person = <http://dbpedia.org/resource/Louis_François_Félix_Musnier>)
  }
}
```",4,5,5,2,3,2,3,28,1,3,0,0.25,1.0,0.4
547,26,val,Give me the resting place of the actor of the show with Emily Richard.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emily_Richard> . ?v1 <http://dbpedia.org/property/starring> ?v2 . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
SELECT ?actor ?restingPlace WHERE {
  ?show dbo:starring <http://dbpedia.org/resource/Emily_Richard> .
  ?show dbo:starring ?actor .
  OPTIONAL { ?actor dbo:placeOfBurial ?restingPlace . }
}
```",3,3,4,3,1,3,3,71,0,20,2,0.0,0.0,0
314,13,val,Give me the person deceased at the headquarter of House of Sombrerete and awardee of 30.,"SELECT ?result WHERE { <http://dbpedia.org/resource/House_of_Sombrerete> <http://dbpedia.org/ontology/location> ?v1 . ?result <http://dbpedia.org/property/awards> ""30""^^<http://www.w3.org/2001/XMLSchema#integer> . ?result <http://dbpedia.org/ontology/restingPlace> ?v1 . }","```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/House_of_Sombrerete#Headquarters>.
  ?person <http://dbpedia.org/property/awardeeOf> ""30""^^<http://www.w3.org/2001/XMLSchema#integer>.
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
617,19,val,"Give me the spouse of Laodice IV and child of the child, that is a royalty, of Seleucus II Callinicus.",SELECT ?result WHERE { <http://dbpedia.org/resource/Laodice_IV> <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seleucus_II_Callinicus> . ?result <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
SELECT ?grandchild WHERE {
  ?laodiceIV <http://dbpedia.org/ontology/spouse> ?spouse .
  FILTER(?laodiceIV = db:Laodice_IV) .

  ?royalChild <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
  ?royalChild <http://dbpedia.org/ontology/birthParent> ?spouse .
  ?royalChild <http://dbpedia.org/ontology/birthParent> ?laodiceIV .

  ?grandchild <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
  ?grandchild <http://dbpedia.org/ontology/birthParent> ?royalChild .
}
```",3,4,4,2,2,3,3,71,0,0,3,0,0.0,0
16,39,val,Give me the person born as the birth name of the alumnus of Ohio State University and professional in Actress.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Ohio_State_University> . ?result <http://dbpedia.org/property/occupation> ""Actress""@en . ?result <http://dbpedia.org/property/birthName> ?v1 . }","```sparql
SELECT ?person ?birthName WHERE {
  ?person <http://dbpedia.org/ontology/profession> <http://dbpedia.org/resource/Category:Actresses>.
  ?person <http://dbpedia.org/ontology/alumniOf> <http://dbpedia.org/resource/Ohio_State_University>.
  OPTIONAL { ?person <http://dbpedia.org/property/birthName> ?birthName. }
}
```",4,4,5,3,2,3,3,71,0,0,3,0,0.0,0
528,31,val,"Give me the war of the military force of the entity, that is a societal event, in Chile and war of Orozimbo Barbosa.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://dbpedia.org/ontology/battle> ?v1 . <http://dbpedia.org/resource/Orozimbo_Barbosa> <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Chile> . ?v0 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
# Step 1: Identify societal events in Chile
SELECT ?event WHERE {
    ?event <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>.
    ?event <http://dbpedia.org/property/country> <http://dbpedia.org/resource/Chile>.
}

# Step 2: Find military forces associated with these events
SELECT ?militaryForce WHERE {
    ?event <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>.
    ?event <http://dbpedia.org/property/country> <http://dbpedia.org/resource/Chile>.
    ?event <http://dbpedia.org/ontology/militaryForce> ?militaryForce.
}

# Step 3: Determine wars these military forces were involved in
SELECT DISTINCT ?war WHERE {
    ?militaryForce <http://dbpedia.org/property/war> ?war.
}

# Step 4: Find wars involving Orozimbo Barbosa
SELECT DISTINCT ?war WHERE {
    <http://dbpedia.org/resource/Orozimbo_Barbosa> <http://dbpedia.org/ontology/war> ?war.
}

# Step 5: Identify common wars from steps 3 and 4
SELECT DISTINCT ?commonWar WHERE {
    { ?militaryForce <http://dbpedia.org/property/war> ?commonWar. }
    UNION
    { <http://dbpedia.org/resource/Orozimbo_Barbosa> <http://dbpedia.org/ontology/war> ?commonWar. }
}
```",4,5,5,3,2,3,3,71,0,0,9,0,0.0,0
659,28,val,"Give me the commander in the force of Arthur Wellesley, 1st Duke of Wellington and commander in Battle of Leipzig and military force of Napoleonic Wars.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Battle_of_Leipzig> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Napoleonic_Wars> . ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Arthur_Wellesley,_1st_Duke_of_Wellington> . }","```sparql
SELECT ?commander WHERE {
  # Find forces commanded by Arthur Wellesley, 1st Duke of Wellington
  ?force <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Arthur_Wellesley,_1st_Duke_of_Wellington> .
  
  # Ensure the commander was also a commander in the Battle of Leipzig
  ?battle <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Leipzig> .
  ?battle <http://dbpedia.org/ontology/commander> ?commander .

  # Confirm involvement with military forces during the Napoleonic Wars
  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
  ?war <http://dbpedia.org/property/name> ""Napoleonic_Wars"" .
  ?force <http://dbpedia.org/ontology/militaryForce> ?war .

  # Ensure the commander is the same entity across these conditions
  FILTER (?commander = ?v1)
}
```",4,4,5,2,3,3,3,71,0,0,5,0,0.0,0
9,22,val,"Give me the alma mater of John Alderdice, Baron Alderdice and figure known as the nickname of Queen's University Belfast.","SELECT ?result WHERE { <http://dbpedia.org/resource/John_Alderdice,_Baron_Alderdice> <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://dbpedia.org/property/nickname> ?v1 . <http://dbpedia.org/resource/Queen's_University_Belfast> <http://dbpedia.org/property/nickname> ?v1 . }","```sparql
SELECT ?university WHERE {
  ?person <http://dbpedia.org/ontology/almaMater> ?university .
  ?university <http://www.w3.org/2000/01/rdf-schema#label> ""Queen's University Belfast"" .
  ?university <http://dbpedia.org/ontology/nickname> ?nickname .
  FILTER EXISTS { ?person <http://xmlns.com/foaf/0.1/name> ""John Alderdice, Baron Alderdice"" . }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
281,27,val,"Give me the war of the profession, that is a military unit, of the professional, that is an office holder and a politician, in New Zealand Army.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/property/occupation> ?v2 . ?v1 <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/New_Zealand_Army> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. },"```sparql
SELECT ?war WHERE {
  ?person <http://dbpedia.org/ontology/profession> ?profession .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder> .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .
  ?person <http://dbpedia.org/property/memberOf> <http://dbpedia.org/resource/New_Zealand_Army> .
  ?profession <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit> .
  ?person <http://dbpedia.org/property/war> ?war .
}
```",3,6,4,3,1,3,3,71,0,0,14,0,0.0,0
392,13,val,"Give me the entity in the region, that is a country, of Central European Time and region of Central European Time.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v1 . ?v1 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Central_European_Time> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
SELECT ?entity WHERE {
  ?region <http://dbpedia.org/ontology/country> ?country .
  ?region <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Central_European_Time> .
  ?entity <http://dbpedia.org/ontology/location> ?region .
}
```",3,4,4,2,2,2,3,28,0,18682,28787,0.0,0.0,0
360,12,val,Give me the writer of The Roaring Silence and native of Johannesburg and reference to Manfred Mann.,"SELECT ?result WHERE { <http://dbpedia.org/resource/The_Roaring_Silence> <http://dbpedia.org/property/writer> ?result . ?result <http://xmlns.com/foaf/0.1/name> ""Manfred Mann""@en . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Johannesburg> . }","```sparql
SELECT ?writer WHERE {
  ?book <http://dbpedia.org/ontology/author> ?writer .
  ?book <http://purl.org/dc/terms/title> ""The Roaring Silence"" .
  ?writer <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer> .
  ?writer <http://dbpedia.org/property/birthPlace> <http://dbpedia.org/resource/Johannesburg> .
  OPTIONAL { 
    ?writer <http://www.w3.org/2000/01/rdf-schema#seeAlso> <http://dbpedia.org/resource/Manfred_Mann> .
  }
}
```",3,3,4,1,3,2,3,28,0,0,1,0,0.0,0
161,24,val,"Give me the commander in Biscay Campaign and military force of the force, that is a societal event and a military conflict, of Francisco Largo Caballero.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Biscay_Campaign> <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . },"```sparql
SELECT ?commander WHERE {
  ?event <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>.
  ?event <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>.
  <http://dbpedia.org/resource/Francisco_Largo_Caballero> <http://dbpedia.org/property/associatedWith> ?event.
  
  ?force <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryForce>.
  ?event <http://dbpedia.org/ontology/militaryForce> ?force.

  ?campaign <http://dbpedia.org/property/commander> ?commander.
  ?campaign <http://www.w3.org/2000/01/rdf-schema#label> ""Biscay Campaign""@en.
  
  ?campaign <http://dbpedia.org/ontology/militaryForce> ?force.
}
```",3,5,4,2,2,3,3,71,0,0,3,0,0.0,0
915,15,val,"Give me the resident of the birthplace, that is a settlement, of the director of Pipe Dreams (1976 film) and father of Lizzie Spaulding.",SELECT ?result WHERE { <http://dbpedia.org/resource/Lizzie_Spaulding> <http://dbpedia.org/property/father> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Pipe_Dreams_(1976_film)> <http://dbpedia.org/ontology/director> ?v0 . ?result <http://dbpedia.org/ontology/residence> ?v1 . ?v0 <http://dbpedia.org/ontology/birthPlace> ?v1 . },"```sparql
SELECT ?resident WHERE {
    ?director dbpedia-owl:directed <http://dbpedia.org/resource/Pipe_Dreams_(1976_film)> .
    ?person dbpedia-owl:fatherOf <http://dbpedia.org/resource/Lizzie_Spaulding> .
    FILTER (?director = ?person)
    
    ?birthPlace dbo:type <http://dbpedia.org/ontology/Settlement> .
    ?birthPlace dbo:placeOfBirth ?person .

    ?resident dbo:residence ?birthPlace .
}
```",4,5,5,3,2,3,2,20,0,0,1,0,0.0,0
528,18,val,Give me the war of Orozimbo Barbosa and force of Narciso Campero and war of Irene Morales.,SELECT ?result WHERE { <http://dbpedia.org/resource/Irene_Morales> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Narciso_Campero> . <http://dbpedia.org/resource/Orozimbo_Barbosa> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
SELECT DISTINCT ?warOrozimbo ?forceNarciso ?warIrene WHERE {
  # Find the war(s) associated with Orozimbo Barbosa
  OPTIONAL { 
    <http://dbpedia.org/resource/Orozimbo_Barbosa> <http://dbpedia.org/ontology/knownFor> ?warOrozimbo .
    FILTER (?warOrozimbo <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>)
  }

  # Find the force commanded by Narciso Campero and its associated war(s)
  OPTIONAL {
    <http://dbpedia.org/resource/Narciso_Campero> <http://dbpedia.org/ontology/commander> ?forceNarciso .
    ?forceNarciso <http://dbpedia.org/property/battle> ?warNarciso .
    FILTER (?warNarciso <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>)
  }

  # Find the war(s) associated with Irene Morales
  OPTIONAL {
    <http://dbpedia.org/resource/Irene_Morales> <http://dbpedia.org/ontology/knownFor> ?warIrene .
    FILTER (?warIrene <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>)
  }
}
```",3,3,4,1,3,3,3,71,0,0,2,0,0.0,0
547,38,val,Give me the resting place of the actor of Enemy at the Door and resting place of the awardee of Knight Grand Cross of the Order of St Michael and St George.,SELECT ?result WHERE { <http://dbpedia.org/resource/Enemy_at_the_Door> <http://dbpedia.org/property/starring> ?v3 . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . ?v3 <http://dbpedia.org/ontology/restingPlace> ?result . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_St_Michael_and_St_George> . },"```sparql
# Query to find the resting place of an actor from ""Enemy at the Door""
SELECT ?actor ?restingPlace1 WHERE {
  ?film rdf:type dbo:Film .
  ?film dbo:title ""Enemy at the Door"" .
  ?film dbo:starring ?actor .
  ?actor dbo:deathPlace ?burialPlace .
  BIND(?burialPlace AS ?restingPlace1)
}

UNION

# Query to find the resting place of an awardee of Knight Grand Cross of the Order of St Michael and St George
SELECT ?awardee ?restingPlace2 WHERE {
  ?person dbo:award ""Knight Grand Cross of the Order of St Michael and St George"" .
  ?person dbo:deathPlace ?burialPlace .
  BIND(?burialPlace AS ?restingPlace2)
}
```",4,4,5,2,2,3,3,71,0,0,2,0,0.0,0
77,12,val,Give me the force of the mayor of Congress Poland and war of Alexander Chechenskiy.,SELECT ?result WHERE { <http://dbpedia.org/resource/Congress_Poland> <http://dbpedia.org/property/leader> ?v0 . ?result <http://dbpedia.org/ontology/commander> ?v0 . <http://dbpedia.org/resource/Alexander_Chechenskiy> <http://dbpedia.org/ontology/battle> ?result . },"SELECT ?force ?war WHERE {
  ?mayor <http://dbpedia.org/ontology/mayor> <http://dbpedia.org/resource/Congress_Poland>.
  ?mayor <http://dbpedia.org/property/force> ?force.
  
  <http://dbpedia.org/resource/Alexander_Chechenskiy> <http://dbpedia.org/ontology/battle> ?war.
}",3,3,4,2,2,3,2,20,0,0,6,0,0.0,0
404,37,val,"Give me the parent of the child, that is a royalty, of the parent, that is a royalty, of Prince George William of Hanover and child of Ernest Augustus, Crown Prince of Hanover.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Prince_George_William_of_Hanover> <http://dbpedia.org/ontology/parent> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/child> ?v3 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ernest_Augustus,_Crown_Prince_of_Hanover> . }","```sparql
SELECT ?grandparent WHERE {
  ?child1 <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/Ernest_Augustus,_Crown_Prince_of_Hanover> .
  ?child1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
  FILTER(?child1 = <http://dbpedia.org/resource/Prince_George_William_of_Hanover>) .

  ?parent1 <http://dbpedia.org/ontology/birthChild> ?child1 .
  ?parent1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .

  ?child2 <http://dbpedia.org/ontology/birthParent> ?parent1 .
  ?child2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .

  ?grandparent <http://dbpedia.org/ontology/birthChild> ?child2 .
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
285,14,val,Give me the spouse of the professional in the award of Stan Lee.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v0 . <http://dbpedia.org/resource/Stan_Lee> <http://dbpedia.org/property/awards> ?v2 . ?v0 <http://dbpedia.org/property/occupation> ?v2 . },"```sparql
SELECT ?spouse WHERE {
  ?award <http://dbpedia.org/ontology/receiver> <http://dbpedia.org/resource/Stan_Lee> .
  ?professional <http://dbpedia.org/property/profession> ?profession .
  ?professional <http://dbpedia.org/ontology/awardsReceived> ?award .
  ?professional <http://xmlns.com/foaf/0.1/married> ?spouse .
}
```",3,3,4,3,1,3,2,20,0,0,4149,0,0.0,0
659,21,val,"Give me the military force of Napoleonic Wars and commander in the force of Arthur Wellesley, 1st Duke of Wellington.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Napoleonic_Wars> . ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Arthur_Wellesley,_1st_Duke_of_Wellington> . }","```sparql
SELECT ?militaryForce WHERE {
    ?militaryForce <http://dbpedia.org/ontology/conflict> <http://dbpedia.org/resource/Napoleonic_Wars>.
    ?militaryForce <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>.
    ?militaryForce <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Arthur_Wellesley,_1st_Duke_of_Wellington>.
}
```",3,3,4,2,2,3,3,71,0,0,32,0,0.0,0
92,29,val,"Give me the band of Joseph Michael and band member of Nevermore and associated musical artist of the person born, that is an artist, as Jim Sheppard.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v3 <http://dbpedia.org/property/birthName> ""Jim Sheppard""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Nevermore> . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Joseph_Michael> . }","```sparql
SELECT ?band ?associatedArtist WHERE {
  # Find the band of Joseph Michael
  <http://dbpedia.org/resource/Joseph_Michael> <http://dbpedia.org/ontology/memberOf> ?band .
  
  # Ensure the person is a member of Nevermore
  ?person <http://dbpedia.org/ontology/memberOf> <http://dbpedia.org/resource/Nevermore_(band)> .
  
  # Find associated musical artists with Jim Sheppard
  ?associatedArtist <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> ;
                    <http://dbpedia.org/property/birthName> ""Jim Sheppard"" .
  
  # Ensure the person is associated with Jim Sheppard
  ?person <http://dbpedia.org/ontology/associatedMusicalArtist> ?associatedArtist .
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
328,19,val,"Give me the commander in Eastern Front (World War II) and awardee of the award of Bruce Fraser, 1st Baron Fraser of North Cape.","SELECT ?result WHERE { <http://dbpedia.org/resource/Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape> <http://dbpedia.org/property/awards> ?v0 . ?result <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Eastern_Front_(World_War_II)> <http://dbpedia.org/ontology/commander> ?result . }","```sparql
SELECT ?commander WHERE {
  ?battle <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>.
  ?battle <http://dbpedia.org/ontology/name> ""Eastern Front (World War II)"".
  ?commander <http://dbpedia.org/ontology/commander> ?battle.
  
  OPTIONAL {
    ?award <http://dbpedia.org/property/awardee> ?commander.
    ?award <http://dbpedia.org/property/awardedBy> <http://dbpedia.org/resource/Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape>.
  }
}
```",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
184,31,val,"Give me the parent of the native of the landmark at elevation, that is a settlement, of 96.0 and child of Archduke Joseph August of Austria.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> ?v1 . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_August_of_Austria> . ?v1 <http://dbpedia.org/ontology/elevation> ""96.0""^^<http://www.w3.org/2001/XMLSchema#double> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/child> ?v0 . }","```sparql
SELECT ?parent WHERE {
    ?landmark <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement> .
    ?landmark <http://dbpedia.org/property/elevation> ""96.0""^^<http://www.w3.org/2001/XMLSchema#float> .
    ?landmark <http://dbpedia.org/ontology/nativeOf> ?native .
    ?archduke <http://dbpedia.org/ontology/child> ?landmark .
    FILTER(?archduke = <http://dbpedia.org/resource/Archduke_Joseph_August_of_Austria>) .
    ?native <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Human> .
    ?native <http://dbpedia.org/property/parent> ?parent .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
487,14,val,"Give me the administration of the person born, that is a soccer player, as the birth name of Phil Scott.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/governor> ?v0 . ?v0 <http://dbpedia.org/property/birthName> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Phil_Scott> <http://dbpedia.org/property/birthName> ?v2 . },"```sparql
SELECT ?administration WHERE {
  ?person <http://dbpedia.org/property/birthName> ?birthName .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer> .
  ?person rdfs:label ""Phil Scott""@en .
  OPTIONAL { ?person <http://dbpedia.org/property/administration> ?administration . }
}
```",3,4,4,3,1,3,2,20,0,0,14,0,0.0,0
294,17,val,"Give me the resting place of the architect of P. D. Houston Jr. House and entity in Nashville, Tennessee.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Nashville,_Tennessee> . <http://dbpedia.org/resource/P._D._Houston_Jr._House> <http://dbpedia.org/ontology/architect> ?v1 . ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . }","```sparql
# Find the architect of P. D. Houston Jr. House
SELECT ?architect WHERE {
  ?house <http://dbpedia.org/ontology/architect> ?architect .
  ?house <http://www.w3.org/2000/01/rdf-schema#label> ""P. D. Houston Jr. House""@en .
}

# Find an entity in Nashville, Tennessee
SELECT ?entity WHERE {
  ?entity <http://dbpedia.org/ontology/location> ?location .
  ?location <http://www.w3.org/2000/01/rdf-schema#label> ""Nashville, Tennessee""@en .
}

# Get the resting place of the architect found in the first query
SELECT ?restingPlace WHERE {
  ?architect <http://dbpedia.org/ontology/burialPlace> ?restingPlace .
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
547,41,val,Give me the resting place of the child of James Burton (property developer) and resting place of Alan Cunningham and resting place of the actor of Enemy at the Door.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Alan_Cunningham> <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Enemy_at_the_Door> <http://dbpedia.org/property/starring> ?v4 . ?v4 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/James_Burton_(property_developer)> <http://dbpedia.org/ontology/child> ?v2 . },"```sparql
SELECT DISTINCT ?restingPlace WHERE {
  # Resting place of the child of James Burton (property developer)
  OPTIONAL {
    ?child dbpedia-owl:parent <http://dbpedia.org/resource/James_Burton_(property_developer)> .
    ?child dbpedia-owl:deathPlace ?restingPlace .
  }
  
  # Resting place of Alan Cunningham
  OPTIONAL {
    <http://dbpedia.org/resource/Alan_Cunningham> dbpedia-owl:deathPlace ?restingPlace .
  }

  # Resting place of the actor from ""Enemy at the Door""
  OPTIONAL {
    ?film dbpedia-owl:title ""Enemy at the Door""@en .
    ?actor dbpedia-owl:actedIn ?film ;
           dbpedia-owl:deathPlace ?restingPlace .
  }
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
645,14,val,Give me the alma mater of the child of the parent of Adela Pankhurst.,SELECT ?result WHERE { <http://dbpedia.org/resource/Adela_Pankhurst> <http://dbpedia.org/ontology/parent> ?v2 . ?v0 <http://dbpedia.org/ontology/almaMater> ?result . ?v2 <http://dbpedia.org/ontology/child> ?v0 . },"```sparql
SELECT ?almaMater WHERE {
  ?parent <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Adela_Pankhurst> .
  ?child <http://www.w3.org/ns/prov#wasDerivedFrom> ?parent .
  ?child <http://dbpedia.org/property/almaMater> ?almaMater .
}
```",3,3,4,3,1,3,2,20,0,0,2,0,0.0,0
281,33,val,"Give me the entity in the birth place, that is a country, of the leader, that is a politician, of 1962 New South Wales state election and war of Beauchamp Seymour, 1st Baron Alcester.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Beauchamp_Seymour,_1st_Baron_Alcester> <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/1962_New_South_Wales_state_election> <http://dbpedia.org/property/leader> ?v0 . }","```sparql
SELECT ?entity WHERE {
    # Step 1: Identify the leader of the 1962 New South Wales state election
    ?leader a dbo:Politician ;
            dbo:officeHolderOf <http://dbpedia.org/resource/1962_New_South_Wales_state_election> .

    # Step 2: Determine the birthplace country of this politician
    ?leader dbo:birthPlace ?birthPlace .
    ?birthPlace dbo:country ?country .

    # Step 3: Find entities in that country
    ?entity dbo:location <http://dbpedia.org/resource/ISO_3166-1_alpha-2> ;
            dbp:countryName ?countryName .

    FILTER(?countryName = ?country)

    # Step 4: Identify the war associated with Beauchamp Seymour, 1st Baron Alcester
    <http://dbpedia.org/resource/Beauchamp_Seymour,_1st_Baron_Alcester> dbo:militaryConflict ?war .

    # Step 5: Ensure the entity is related to both the birthplace and the war
    ?entity dbo:relatedTo ?war .
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
981,14,val,"Give me the birth place of the person born, that is a beauty queen, as the author of Kamikaze Girls.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BeautyQueen>. <http://dbpedia.org/resource/Kamikaze_Girls> <http://dbpedia.org/property/author> ?v2 . ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?birthPlace WHERE {
  ?author rdf:type dbo:Book .
  ?author dbo:title ""Kamikaze Girls"" .
  ?author dbo:author ?person .
  ?person rdf:type dbo:BeautyQueen .
  ?person dbo:birthPlace ?birthPlace .
}
```",3,4,4,3,1,3,2,20,0,0,170,0,0.0,0
801,25,val,"Give me the associated musical artist of the writer, that is a musical artist and an artist, of 40 Dayz & 40 Nightz and producer of Westside Story (song).",SELECT ?result WHERE { <http://dbpedia.org/resource/40_Dayz_&_40_Nightz> <http://dbpedia.org/property/writer> ?v1 . <http://dbpedia.org/resource/Westside_Story_(song)> <http://dbpedia.org/ontology/producer> ?result . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"```sparql
SELECT ?writer ?associatedArtist WHERE {
  ?writer <http://dbpedia.org/ontology/writtenWork> <http://dbpedia.org/resource/40_Dayz_%26_40_Nightz>;
          <http://dbpedia.org/property/produced> <http://dbpedia.org/resource/Westside_Story_(song)>;
          <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?types.
  
  FILTER (?types = <http://dbpedia.org/ontology/MusicalArtist> && 
          EXISTS { ?writer <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist> }).
  
  ?association <http://dbpedia.org/property/associatedMusicalArtist> ?writer.
  ?association <http://dbpedia.org/property/associatedMusicalArtist> ?associatedArtist.
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
747,18,val,Give me the band of Shèna and person born on 1985-04-29 and band of Amba Shepherd.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Shèna> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/birthDate> ""1985-04-29""^^<http://www.w3.org/2001/XMLSchema#date> . <http://dbpedia.org/resource/Amba_Shepherd> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
SELECT ?bandShena ?personBornOn19850429 ?bandAmbaShepherd WHERE {
  # Find the band associated with Shèna
  <http://dbpedia.org/resource/Shèna> <http://dbpedia.org/ontology/band> ?bandShena .

  # Find the person born on April 29, 1985
  ?personBornOn19850429 <http://www.w3.org/2002/07/owl#sameAs> ?resource ;
                        <http://dbpedia.org/property/dateOfBirth> ""1985-04-29""^^xsd:date .

  # Find the band associated with Amba Shepherd
  <http://dbpedia.org/resource/Amba_Shepherd> <http://dbpedia.org/ontology/band> ?bandAmbaShepherd .
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
645,13,val,"Give me the entity in the residence, that is a country, of the commander in Battle of Diamond Rock.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v1 . <http://dbpedia.org/resource/Battle_of_Diamond_Rock> <http://dbpedia.org/ontology/commander> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://dbpedia.org/property/residence> ?v1 . },"```sparql
SELECT ?entity WHERE {
  ?battle <http://dbpedia.org/ontology/commander> ?commander .
  ?commander <http://dbpedia.org/property/residence> ?residence .
  ?residence <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country> .
  ?entity <http://www.w3.org/2000/01/rdf-schema#location> ?residence .
  
  FILTER(?battle = <http://dbpedia.org/resource/Battle_of_Diamond_Rock>)
}
```",3,4,4,3,1,3,2,20,0,0,42999,0,0.0,0
488,19,val,Give me the birth place of the commander in Boshin War and death place of Tokugawa Ieyasu.,SELECT ?result WHERE { <http://dbpedia.org/resource/Boshin_War> <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Tokugawa_Ieyasu> <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
SELECT ?birthPlace ?deathPlace WHERE {
  # Find the birth place of the commander in the Boshin War
  <http://dbpedia.org/resource/Boshin_War> <http://dbpedia.org/ontology/commander> ?commander .
  ?commander <http://dbpedia.org/property/birthPlace> ?birthPlace .

  # Find the death place of Tokugawa Ieyasu
  <http://dbpedia.org/resource/Tokugawa_Ieyasu> <http://dbpedia.org/ontology/deathPlace> ?deathPlace .
}
```",3,3,4,2,2,3,3,71,1,19,0,0.05,1.0,0.09523809523809523
54,37,val,Give me the predecessor of Ameitta Thiri Maha Dhamma Dewi of Ava and parent of the child of the parent of Thado Minsaw of Prome.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Ameitta_Thiri_Maha_Dhamma_Dewi_of_Ava> . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> . ?v3 <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://dbpedia.org/property/father> ?v0 . },"```sparql
SELECT ?predecessor WHERE {
  ?ameitta a dbo:Monarch ;
           rdfs:label ""Ameitta Thiri Maha Dhamma Dewi of Ava""@en .
  
  ?ameitta <http://dbpedia.org/ontology/predecessor> ?predecessor .

  ?thadoMinsaw a dbo:Monarch ;
               rdfs:label ""Thado Minsaw of Prome""@en .
  
  OPTIONAL { ?thadoMinsaw <http://dbpedia.org/ontology/father> ?parent . }
  OPTIONAL { ?thadoMinsaw <http://dbpedia.org/ontology/mother> ?parent . }

  FILTER(?predecessor != ?ameitta)
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
801,38,val,"Give me the associated musical artist of the writer, that is a musical artist and an artist, of 40 Dayz & 40 Nightz and producer of the work, that is a musical work and a song and a work, of 50 Cent.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/producer> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. <http://dbpedia.org/resource/40_Dayz_&_40_Nightz> <http://dbpedia.org/property/writer> ?v2 . ?v3 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/50_Cent> . },"```sparql
SELECT ?associatedMusicalArtist WHERE {
  ?work1 <http://dbpedia.org/property/writer> ?writer .
  ?writer <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
  ?writer <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist> .
  ?work1 <http://dbpedia.org/property/title> ""40 Dayz & 40 Nightz"" .

  ?writer <http://dbpedia.org/ontology/associatedMusicalArtist> ?associatedMusicalArtist .

  ?work2 <http://dbpedia.org/property/producer> ?writer .
  ?work2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork> .
  ?work2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song> .
  ?work2 <http://dbpedia.org/property/artist> <http://dbpedia.org/resource/50_Cent> .
}
```",4,9,5,2,2,3,3,71,0,0,1,0,0.0,0
421,16,val,Give me the band member of Senidah and person born as the birth name of Dino Merlin.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Senidah> . <http://dbpedia.org/resource/Dino_Merlin> <http://dbpedia.org/property/birthName> ?v2 . ?result <http://dbpedia.org/property/birthName> ?v2 . },"```sparql
# Step 1: Get the birth name of Dino Merlin
SELECT ?birthName WHERE {
    <http://dbpedia.org/resource/Dino_Merlin> <http://www.w3.org/2000/01/rdf-schema#label> ?birthName .
}

# Step 2: Find all band members of Senidah
SELECT ?bandMember WHERE {
    <http://dbpedia.org/resource/Senidah> <http://dbpedia.org/ontology/member> ?bandMember .
}

# Step 3: Identify any overlap between the two sets
SELECT DISTINCT ?person WHERE {
    # Get birth name of Dino Merlin
    { SELECT ?birthName WHERE {
        <http://dbpedia.org/resource/Dino_Merlin> <http://www.w3.org/2000/01/rdf-schema#label> ?birthName .
    } }
    
    # Find band members of Senidah
    { SELECT ?bandMember WHERE {
        <http://dbpedia.org/resource/Senidah> <http://dbpedia.org/ontology/member> ?bandMember .
    } }

    # Check if any person matches both criteria
    ?person <http://www.w3.org/2000/01/rdf-schema#label> ?birthName .
    ?person <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/Senidah> .
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
767,30,val,Give me the alma mater of Carl L. Nippert and entity in Baden-Württemberg and reference to the alter ego of Black Hood.,SELECT ?result WHERE { <http://dbpedia.org/resource/Carl_L._Nippert> <http://dbpedia.org/ontology/almaMater> ?result . <http://dbpedia.org/resource/Black_Hood> <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://dbpedia.org/ontology/state> <http://dbpedia.org/resource/Baden-Württemberg> . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . },"```sparql
SELECT ?almaMater WHERE {
  <http://dbpedia.org/resource/Carl_L._Nippert> <http://dbpedia.org/ontology/almaMater> ?almaMater .
}
UNION
SELECT ?entity WHERE {
  ?entity <http://www.w3.org/2000/01/rdf-schema#label> ?label .
  FILTER(CONTAINS(LCASE(?label), ""baden-württemberg""))
}
UNION
SELECT ?alterEgo WHERE {
  ?character <http://dbpedia.org/ontology/alternateName> ?alterEgo .
  ?character <http://www.w3.org/2000/01/rdf-schema#label> ""Black Hood""@en .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
754,13,val,Give me the parent of the parent of the parent of Min Linka.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Min_Linka> <http://dbpedia.org/ontology/parent> ?v0 . ?v0 <http://dbpedia.org/ontology/parent> ?v1 . },"```sparql
SELECT ?grandGrandParent WHERE {
  OPTIONAL { <http://dbpedia.org/resource/Min_Linka> <http://dbpedia.org/ontology/father> ?parent1 . }
  UNION
  { <http://dbpedia.org/resource/Min_Linka> <http://dbpedia.org/ontology/mother> ?parent1 . }

  OPTIONAL { ?parent1 <http://dbpedia.org/ontology/father> ?grandParent1 . }
  UNION
  { ?parent1 <http://dbpedia.org/ontology/mother> ?grandParent1 . }

  OPTIONAL { ?grandParent1 <http://dbpedia.org/ontology/father> ?grandGrandParent . }
  UNION
  { ?grandParent1 <http://dbpedia.org/ontology/mother> ?grandGrandParent . }
}
```",3,3,4,3,1,3,2,20,0,0,1,0,0.0,0
528,21,val,Give me the war of the military force of Battle of Pisagua and force of Narciso Campero.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Pisagua> . ?v1 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Narciso_Campero> . },"```sparql
SELECT ?result WHERE {
  ?battle1 <http://dbpedia.org/ontology/militaryForce> ?force1 .
  ?battle2 <http://dbpedia.org/ontology/militaryForce> ?force2 .
  ?force1 <http://dbpedia.org/ontology/battle> ?result .
  ?force2 <http://dbpedia.org/ontology/battle> ?result .
  
  FILTER(?battle1 = <http://dbpedia.org/resource/Battle_of_Pisagua>)
  FILTER(?battle2 = <http://dbpedia.org/resource/Narciso_Campero>)
}
```",3,3,4,2,2,3,3,71,0,0,3,0,0.0,0
182,18,val,Give me the war of Jagath Dias and entity in the nationality of Tamara Kunanayakam.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> ?v2 . <http://dbpedia.org/resource/Tamara_Kunanayakam> <http://dbpedia.org/ontology/nationality> ?v2 . <http://dbpedia.org/resource/Jagath_Dias> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
# Query 1: Find the war associated with Jagath Dias
SELECT ?war WHERE {
    <http://dbpedia.org/resource/Jagath_Dias> <http://dbpedia.org/ontology/battle> ?war .
}

# Query 2: Find an entity in the nationality of Tamara Kunanayakam
SELECT ?entity WHERE {
    <http://dbpedia.org/resource/Tamara_Kunanayakam> <http://dbpedia.org/property/nationality> ?country .
    ?entity <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?type .
    ?entity <http://dbpedia.org/ontology/country> ?country .
}
```",3,3,4,2,2,2,3,28,0,0,5,0,0.0,0
184,41,val,Give me the child of the child of Archduke Joseph Karl of Austria and parent of the native of Budapest and parent of Archduchess Ilona of Austria.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Budapest> . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Ilona_of_Austria> . ?result <http://dbpedia.org/property/father> ?v4 . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Karl_of_Austria> . ?result <http://dbpedia.org/ontology/child> ?v2 . },"```sparql
SELECT ?person WHERE {
  # Find a child of Archduke Joseph Karl's child
  ?grandchild dbo:child <http://dbpedia.org/resource/Archduke_Joseph_Karl_of_Austria> .
  ?person dbo:child ?grandchild .

  # Ensure this person is a parent of someone native to Budapest
  ?budaPerson dbo:nativePlace <http://dbpedia.org/resource/Budapest> .
  ?person dbo:parent ?budaPerson .

  # Ensure this person is also a parent of Archduchess Ilona of Austria
  ?ilona dbo:child <http://dbpedia.org/resource/Archduchess_Ilona_of_Austria> .
  ?person dbo:parent ?ilona .
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
161,43,val,"Give me the military force of the force, that is a societal event and a military conflict, of the predecessor of Indalecio Prieto and military force of Rif War and commander in Biscay Campaign.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v4 <http://dbpedia.org/ontology/commander> ?v0 . <http://dbpedia.org/resource/Biscay_Campaign> <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Indalecio_Prieto> . ?result <http://dbpedia.org/ontology/battle> ?v4 . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Rif_War> . },"```sparql
# Step 1: Find the predecessor of Indalecio Prieto
SELECT ?predecessor WHERE {
    <http://dbpedia.org/resource/Indalecio_Prieto> <http://dbpedia.org/ontology/predecessor> ?predecessor .
}

# Step 2: Get the military force associated with this predecessor
SELECT ?militaryForce WHERE {
    ?predecessor <http://dbpedia.org/property/militaryForce> ?militaryForce .
}

# Step 3: Identify conflicts that are both societal events and military conflicts
SELECT DISTINCT ?conflict WHERE {
    ?conflict <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> ;
              <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent> .
}

# Step 4: Find conflicts involving Rif War's military force and a commander in Biscay Campaign
SELECT DISTINCT ?conflict WHERE {
    ?rifWar <http://dbpedia.org/property/militaryForce> ?militaryForceRif ;
            <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
    
    ?biscayCampaign <http://dbpedia.org/ontology/commander> ?commanderBiscay ;
                     <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .

    ?conflict <http://dbpedia.org/property/militaryForce> ?militaryForceRif ;
              <http://dbpedia.org/ontology/commander> ?commanderBiscay .
}

# Step 5: Get the military force of this conflict
SELECT ?result WHERE {
    ?conflict <http://dbpedia.org/property/militaryForce> ?result .
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
360,16,val,Give me the writer of The Roaring Silence and reference to the author of Blinded by the Light.,SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v2 . <http://dbpedia.org/resource/The_Roaring_Silence> <http://dbpedia.org/property/writer> ?result . <http://dbpedia.org/resource/Blinded_by_the_Light> <http://dbpedia.org/property/author> ?v2 . },"```sparql
# Query to find the writer of ""The Roaring Silence""
SELECT ?writer WHERE {
  <http://dbpedia.org/resource/The_Roaring_Silence> <http://purl.org/dc/terms/creator> ?writer .
}

# Query to find a reference to the author of ""Blinded by the Light""
SELECT ?reference WHERE {
  ?book <http://purl.org/dc/terms/subject> <http://dbpedia.org/resource/Blinded_by_the_Light_(song)> .
  ?book <http://purl.org/dc/terms/creator> ?author .
  ?reference <http://www.w3.org/2002/07/owl#sameAs> ?author .
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
9,40,val,"Give me the alma mater of Allen Hill (scientist) and alma mater of the mayor, that is a politician, of the entity, that is an organisation, in Belfast and figure known as QUB.","SELECT ?result WHERE { <http://dbpedia.org/resource/Allen_Hill_(scientist)> <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://dbpedia.org/property/nickname> ""QUB""@en . ?v1 <http://dbpedia.org/ontology/almaMater> ?result . ?v2 <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Belfast> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/property/leader> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. }","```sparql
# Part 1: Find the alma mater of Allen Hill (scientist)
SELECT ?almaMaterAllenHill WHERE {
    <http://dbpedia.org/resource/Allen_Hill_(scientist)> <http://dbpedia.org/ontology/almaMater> ?almaMaterAllenHill .
}

# Part 2: Identify the organization associated with ""QUB"" in Belfast
SELECT ?organization WHERE {
    ?organization <http://www.w3.org/2000/01/rdf-schema#label> ""Queen's University Belfast""@en ;
                   <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Belfast> .
}

# Part 3: Find the mayor who is a politician in Belfast
SELECT ?mayor WHERE {
    ?mayor <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> ;
           <http://dbpedia.org/property/mayorOf> <http://dbpedia.org/resource/Belfast> .
}

# Part 4: Find the alma mater of the identified mayor
SELECT ?almaMaterMayor WHERE {
    ?mayor <http://dbpedia.org/ontology/almaMater> ?almaMaterMayor .
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
184,30,val,Give me the parent of the child of Archduke Joseph Francis of Austria and child of Archduke Joseph August of Austria and parent of Géza von Habsburg.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Géza_von_Habsburg> . ?result <http://dbpedia.org/ontology/child> ?v1 . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_August_of_Austria> . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Francis_of_Austria> . },"```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/G%C3%A9za_von_Habsburg> .
  ?person <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/Archduke_Joseph_Francis_of_Austria> .
  ?person <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/Archduke_Joseph_August_of_Austria> .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
281,18,val,"Give me the war of Beauchamp Seymour, 1st Baron Alcester and entity in Colony of New Zealand and war of New Zealand Army.","SELECT ?result WHERE { <http://dbpedia.org/resource/New_Zealand_Army> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Beauchamp_Seymour,_1st_Baron_Alcester> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Colony_of_New_Zealand> . }","```sparql
SELECT DISTINCT ?war WHERE {
    # Wars involving Beauchamp Seymour, 1st Baron Alcester
    <http://dbpedia.org/resource/Beauchamp_Seymour,_1st_Baron_Alcester> <http://dbpedia.org/ontology/battle> ?war .
    
    # Entities in the Colony of New Zealand involved in wars
    ?entity <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement> ;
            <http://dbpedia.org/property/country> <http://dbpedia.org/resource/Colony_of_New_Zealand> ;
            <http://dbpedia.org/ontology/battle> ?war .
    
    # Ensure the war is also associated with the New Zealand Army
    <http://dbpedia.org/resource/New_Zealand_Army> <http://dbpedia.org/ontology/battle> ?war .
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
747,30,val,Give me the person born on 1985-04-29 and band of the person born as Tracey Elizabeth McSween and band of Amba Shepherd.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Amba_Shepherd> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/birthDate> ""1985-04-29""^^<http://www.w3.org/2001/XMLSchema#date> . ?v1 <http://dbpedia.org/property/birthName> ""Tracey Elizabeth McSween""@en . }","```sparql
# Query for person born on 1985-04-29 and their band
SELECT ?person ?band1 WHERE {
  ?person <http://dbpedia.org/ontology/birthDate> ""1985-04-29""^^<http://www.w3.org/2001/XMLSchema#date> .
  OPTIONAL { ?person <http://dbpedia.org/property/memberOf> ?band1 . }
}

UNION

# Query for band of Amba Shepherd
SELECT ?ambashepherd ?band2 WHERE {
  ?ambashepherd rdfs:label ""Amba Shepherd""@en .
  OPTIONAL { ?ambashepherd <http://dbpedia.org/property/memberOf> ?band2 . }
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
184,26,val,"Give me the child of the child of the parent, that is a royalty, of Archduke Ladislaus Philipp of Austria.",SELECT ?result WHERE { <http://dbpedia.org/resource/Archduke_Ladislaus_Philipp_of_Austria> <http://dbpedia.org/ontology/parent> ?v1 . ?result <http://dbpedia.org/property/father> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/father> ?v1 . },"```sparql
SELECT ?grandchild WHERE {
  # Step 1: Find the parent of Archduke Ladislaus Philipp of Austria
  <http://dbpedia.org/resource/Archduke_Ladislaus_Philipp_of_Austria> <http://xmlns.com/foaf/0.1/knows> ?parent .
  
  # Ensure the parent is royalty
  ?parent a <http://dbpedia.org/ontology/Royalty> .

  # Step 2: Find the child of this parent (second generation)
  ?parent <http://dbpedia.org/property/child> ?child .

  # Ensure the child is royalty
  ?child a <http://dbpedia.org/ontology/Royalty> .

  # Step 3: Find the child of this second-generation descendant (third generation)
  ?child <http://dbpedia.org/property/child> ?grandchild .

  # Ensure the grandchild is royalty
  ?grandchild a <http://dbpedia.org/ontology/Royalty> .
}
```",3,4,4,3,1,3,3,71,0,0,1,0,0.0,0
838,14,val,"Give me the band member of the band, that is a group, of the reference, that is a group and an organisation, to YU Grupa.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v2 <http://xmlns.com/foaf/0.1/name> ""YU Grupa""@en . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. }","```sparql
SELECT ?bandMember WHERE {
  ?reference <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>.
  ?reference <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>.
  ?reference <http://dbpedia.org/property/reference> <http://dbpedia.org/resource/YU_Grupa>.
  
  ?band <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>.
  ?band <http://dbpedia.org/ontology/member> ?reference.
  
  ?band <http://dbpedia.org/ontology/member> ?bandMember.
}
```",3,6,4,3,1,3,2,20,0,0,40,0,0.0,0
356,13,val,"Give me the player in the successor of the predecessor, that is a sports team season and a soccer club season, of 2015 Sacramento Republic FC season.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v0 <http://dbpedia.org/ontology/successor> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?v1 <http://dbpedia.org/ontology/team> ?result . ?v0 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/2015_Sacramento_Republic_FC_season> . },"```sparql
SELECT ?player WHERE {
    # Step 1: Identify the predecessor of the 2015 Sacramento Republic FC season
    <http://dbpedia.org/resource/2015_Sacramento_Republic_FC_season> <http://dbpedia.org/ontology/predecessor> ?predecessor .

    # Step 2: Determine the successor of that predecessor season
    ?predecessor <http://dbpedia.org/ontology/successor> ?successor .
    
    # Ensure the successor is a sports team season and a soccer club season
    ?successor <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason> ;
               <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason> .

    # Step 3: Find players associated with this final season
    ?successor <http://dbpedia.org/property/player> ?player .
}
```",3,5,4,3,1,3,2,20,0,0,1,0,0.0,0
754,15,val,Give me the parent of the parent of the parent of Min Linka and parent of May Hnin Thwe-Da.,SELECT ?result WHERE { <http://dbpedia.org/resource/Min_Linka> <http://dbpedia.org/ontology/parent> ?v0 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/May_Hnin_Thwe-Da> . ?v0 <http://dbpedia.org/ontology/parent> ?v1 . ?v1 <http://dbpedia.org/ontology/parent> ?result . },"```sparql
# Step 1: Get parents of Min Linka and May Hnin Thwe-Da
SELECT ?parentMinLinka ?parentMayHninThweDa WHERE {
    OPTIONAL { <http://dbpedia.org/resource/Min_Linka> <http://dbpedia.org/ontology/father> ?parentMinLinka . }
    OPTIONAL { <http://dbpedia.org/resource/Min_Linka> <http://dbpedia.org/ontology/mother> ?parentMinLinka . }
    OPTIONAL { <http://dbpedia.org/resource/May_Hnin_Thwe-Da> <http://dbpedia.org/ontology/father> ?parentMayHninThweDa . }
    OPTIONAL { <http://dbpedia.org/resource/May_Hnin_Thwe-Da> <http://dbpedia.org/ontology/mother> ?parentMayHninThweDa . }
}

# Step 2: Get grandparents of Min Linka
SELECT ?grandparentMinLinka WHERE {
    ?parentMinLinka <http://dbpedia.org/ontology/father> ?grandparentMinLinka .
    UNION
    ?parentMinLinka <http://dbpedia.org/ontology/mother> ?grandparentMinLinka .
}

# Step 3: Get great-grandparents of Min Linka
SELECT ?greatGrandparentMinLinka WHERE {
    ?grandparentMinLinka <http://dbpedia.org/ontology/father> ?greatGrandparentMinLinka .
    UNION
    ?grandparentMinLinka <http://dbpedia.org/ontology/mother> ?greatGrandparentMinLinka .
}

# Repeat steps 2-3 for May Hnin Thwe-Da

# Step 4: Find common great-grandparents
SELECT DISTINCT ?commonGreatGrandparent WHERE {
    { ?greatGrandparentMinLinka <http://www.w3.org/2000/01/rdf-schema#label> ?name . }
    UNION
    { ?greatGrandparentMayHninThweDa <http://www.w3.org/2000/01/rdf-schema#label> ?name . }
    FILTER EXISTS {
        ?greatGrandparentMinLinka = ?commonGreatGrandparent .
        ?greatGrandparentMayHninThweDa = ?commonGreatGrandparent .
    }
}
```",4,4,5,3,2,3,2,20,0,0,1,0,0.0,0
232,27,val,"Give me the native of the residence, that is a settlement and British, of the native, that is a politician and an office holder, of France.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://dbpedia.org/property/residence> ?v2 . ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/France> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
SELECT ?nativeOfResidence WHERE {
  ?person a dbo:Politician ;
          dbo:nationality dbr:France ;
          dbo:officeHolder true .
  
  ?person dbo:residence ?settlement .
  
  ?settlement a dbo:Settlement ;
              dbo:country dbr:United_Kingdom .

  ?resident dbo:nativePlace ?settlement .
  
  BIND(?resident AS ?nativeOfResidence)
}
```",3,7,4,3,1,3,3,71,0,0,9121,0,0.0,0
92,19,val,"Give me the associated musical artist of Jim Sheppard and band member of the reference, that is an artist, to Nevermore.","SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""Nevermore""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Jim_Sheppard> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . }","```sparql
SELECT ?result WHERE {
  ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Nevermore> .
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
  <http://dbpedia.org/resource/Jim_Sheppard_(musician)> <http://dbpedia.org/property/associatedMusicalArtist> ?result .
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
659,38,val,"Give me the military force of the force, that is a societal event and an event and a military conflict, of Rutger Jan Schimmelpenninck and commander in the war, that is an event and a military conflict, of 1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish).",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/1st_Light_Cavalry_Lancers_Regiment_of_the_Imperial_Guard_(Polish)> <http://dbpedia.org/ontology/battle> ?v3 . },"```sparql
SELECT ?militaryForce WHERE {
  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>.
  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>.
  <http://dbpedia.org/resource/1st_Light_Cavalry_Lancers_Regiment_of_the_Imperial_Guard_(Polish)> <http://dbpedia.org/property/battle> ?war.
  
  ?commander <http://dbpedia.org/ontology/commander> ?war.

  ?event <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>.
  ?event <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>.
  <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> <http://dbpedia.org/property/relatedTo> ?event.
  
  ?commander2 <http://dbpedia.org/ontology/commander> ?event.

  FILTER(?commander = ?commander2)

  ?event <http://dbpedia.org/ontology/militaryForce> ?militaryForce.
}
```",4,9,5,2,2,3,3,71,0,0,31,0,0.0,0
617,27,val,Give me the parent of the child of the commander in Battle of Panium.,SELECT ?result WHERE { <http://dbpedia.org/resource/Battle_of_Panium> <http://dbpedia.org/ontology/commander> ?v1 . ?result <http://dbpedia.org/ontology/child> ?v2 . ?v1 <http://dbpedia.org/ontology/child> ?v2 . },"```sparql
SELECT ?parent WHERE {
  ?battle <http://dbpedia.org/ontology/commander> ?commander .
  FILTER(STR(?battle) = ""Battle_of_Panium"") .
  
  OPTIONAL { ?commander <http://dbpedia.org/ontology/spouse> ?spouse . }
  OPTIONAL { ?child <http://dbpedia.org/ontology/birthParent> ?commander . }
  OPTIONAL { ?child <http://dbpedia.org/ontology/birthParent> ?parent . }

  FILTER(BOUND(?child))
  RETURN DISTINCT ?parent
}
```",3,3,4,3,1,3,3,71,0,0,4,0,0.0,0
754,11,val,Give me the parent of May Hnin Thwe-Da and parent of the parent of May Hnin Htapi.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/May_Hnin_Thwe-Da> . <http://dbpedia.org/resource/May_Hnin_Htapi> <http://dbpedia.org/ontology/parent> ?v2 . ?v2 <http://dbpedia.org/ontology/parent> ?result . },"```sparql
# Query to find the parent of May Hnin Thwe-Da
SELECT ?parentOfMayHninThweDa WHERE {
  <http://dbpedia.org/resource/May_Hnin_Thwe-Da> <http://dbpedia.org/ontology/birthParent> ?parentOfMayHninThweDa .
}

# Query to find the grandparent of May Hnin Htapi
SELECT ?grandparentOfMayHninHtapi WHERE {
  ?parentOfMayHninHtapi <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/May_Hnin_Htapi> .
  ?parentOfMayHninHtapi <http://dbpedia.org/ontology/birthParent> ?grandparentOfMayHninHtapi .
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
182,14,val,Give me the war of the work of Gotabhaya Rajapaksa and war of Mahesh Senanayake.,SELECT ?result WHERE { <http://dbpedia.org/resource/Mahesh_Senanayake> <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Gotabhaya_Rajapaksa> . ?v2 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
SELECT ?war WHERE {
  OPTIONAL { <http://dbpedia.org/resource/Gotabhaya_Rajapaksa> <http://dbpedia.org/ontology/battle> ?war . }
  OPTIONAL { <http://dbpedia.org/resource/Mahesh_Senanayake> <http://dbpedia.org/ontology/battle> ?war . }
  FILTER EXISTS { ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> }
}
```",3,3,4,2,2,2,3,28,1,1,0,0.5,1.0,0.6666666666666666
485,18,val,"Give me the entity in the birth place, that is a region, of Joseph Whitaker (naturalist) and birth place of Thomas Warner (poet).",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. <http://dbpedia.org/resource/Joseph_Whitaker_(naturalist)> <http://dbpedia.org/ontology/birthPlace> ?v0 . ?result <http://dbpedia.org/ontology/country> ?v0 . <http://dbpedia.org/resource/Thomas_Warner_(poet)> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT DISTINCT ?entity WHERE {
  # Get the birthplace of Joseph Whitaker, which is a region
  <http://dbpedia.org/resource/Joseph_Whitaker_(naturalist)> <http://dbpedia.org/ontology/birthPlace> ?birthPlace1 .
  ?birthPlace1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region> .

  # Get the birthplace of Thomas Warner, which is a region
  <http://dbpedia.org/resource/Thomas_Warner_(poet)> <http://dbpedia.org/ontology/birthPlace> ?birthPlace2 .
  ?birthPlace2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region> .

  # Find entities in both birthplaces
  ?entity <http://dbpedia.org/property/location> ?birthPlace1 .
  ?entity <http://dbpedia.org/property/location> ?birthPlace2 .
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
767,28,val,"Give me the reference to  and entity in the administration, that is a settlement, of Green and alma mater of Carl L. Nippert.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/leaderParty> ""Green""@en . <http://dbpedia.org/resource/Carl_L._Nippert> <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://dbpedia.org/ontology/state> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://xmlns.com/foaf/0.1/name> """"@en . }","```sparql
SELECT ?administrationEntity ?reference
WHERE {
  # Find Carl L. Nippert's alma mater
  <http://dbpedia.org/resource/Carl_L._Nippert> <http://dbpedia.org/ontology/almaMater> ?almaMater .
  
  # Ensure the alma mater is MIT
  FILTER(?almaMater = <http://dbpedia.org/resource/Massachusetts_Institute_of_Technology>)
  
  # Find Green as a settlement
  ?green <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement> .
  
  # Find the administration entity related to Green
  ?administrationEntity <http://dbpedia.org/property/administration> ?green .
  
  # Get a reference to the alma mater in the context of the administration
  ?administrationEntity <http://dbpedia.org/ontology/reference> ?reference .
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
767,21,val,"Give me the entity in the administration, that is a settlement, of Green and reference to .","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/state> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://dbpedia.org/property/leaderParty> ""Green""@en . ?result <http://xmlns.com/foaf/0.1/name> """"@en . }","```sparql
SELECT ?result WHERE {
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>.
  ?result <http://dbpedia.org/property/administration> ?v1.
  ?v1 <http://dbpedia.org/ontology/reference> <http://dbpedia.org/resource/Green>.
}
```",3,4,4,2,2,3,3,71,0,0,7,0,0.0,0
427,30,val,"Give me the party of the person born, that is an office holder and a politician, as Romano Antonio Prodi and reference to Partito Popolare Italiano and party of Giulio Andreotti.","SELECT ?result WHERE { <http://dbpedia.org/resource/Giulio_Andreotti> <http://dbpedia.org/ontology/party> ?result . ?result <http://xmlns.com/foaf/0.1/name> ""Partito Popolare Italiano""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/property/birthName> ""Romano Antonio Prodi""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/ontology/party> ?result . }","```sparql
SELECT ?person ?party WHERE {
  ?person <http://dbpedia.org/ontology/birthName> ""Romano Antonio Prodi"" .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder> .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .
  OPTIONAL { ?person <http://dbpedia.org/property/reference> <http://dbpedia.org/resource/Partito_Popolare_Italiano> . }
  
  ?andreotti <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .
  ?andreotti <http://dbpedia.org/ontology/party> ?party .

  FILTER EXISTS { ?person <http://dbpedia.org/ontology/party> ?party . }
}
```",4,6,5,2,3,3,3,71,0,0,1,0,0.0,0
712,14,val,Give me the resting place of the awardee of the show of Soviet Union.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/Soviet_Union> . ?v0 <http://dbpedia.org/property/awards> ?v2 . ?v0 <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
SELECT ?restingPlace WHERE {
  ?awardee <http://dbpedia.org/ontology/show> ?show .
  ?show <http://dbpedia.org/property/country> <http://dbpedia.org/resource/Soviet_Union> .
  ?awardee <http://dbpedia.org/ontology/burialPlace> ?restingPlace .
}
```",3,3,4,3,1,3,2,20,0,0,63,0,0.0,0
528,44,val,Give me the war of the commander in Battle of La Rinconada de Ate and war of Irene Morales and force of the person born as Narciso Campero Leyes.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Battle_of_La_Rinconada_de_Ate> <http://dbpedia.org/ontology/commander> ?v4 . ?v2 <http://dbpedia.org/property/birthName> ""Narciso Campero Leyes""@en . ?v4 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/commander> ?v2 . <http://dbpedia.org/resource/Irene_Morales> <http://dbpedia.org/ontology/battle> ?result . }","```sparql
SELECT DISTINCT ?war1 ?war2 ?force WHERE {
  # Find the commander in Battle of La Rinconada de Ate and their associated war
  <http://dbpedia.org/resource/Battle_of_La_Rinconada_de_Ate> <http://dbpedia.org/ontology/commander> ?commander .
  ?commander <http://dbpedia.org/ontology/battle> ?battle .
  ?battle <http://dbpedia.org/ontology/war> ?war1 .

  # Find the war associated with Irene Morales
  <http://dbpedia.org/resource/Irene_Morales> <http://dbpedia.org/ontology/battle> ?battle2 .
  ?battle2 <http://dbpedia.org/ontology/war> ?war2 .

  # Find the force associated with Narciso Campero Leyes
  OPTIONAL {
    <http://dbpedia.org/resource/Narciso_Campero_Leyes> <http://dbpedia.org/property/birthName> ""Narciso Campero Leyes"" .
    <http://dbpedia.org/resource/Narciso_Campero_Leyes> <http://dbpedia.org/ontology/memberOf> ?force .
  }
}
```",5,5,6,2,3,3,3,71,0,0,2,0,0.0,0
963,15,val,"Give me the entity in the region, that is a country, of the time zone of Herzegovina-Neretva Canton and administration of Serbian Progressive Party.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Serbian_Progressive_Party> . ?result <http://dbpedia.org/ontology/country> ?v1 . <http://dbpedia.org/resource/Herzegovina-Neretva_Canton> <http://dbpedia.org/property/timeZone> ?v0 . ?v1 <http://dbpedia.org/property/timeZone> ?v0 . },"```sparql
# Find the time zone of Herzegovina-Neretva Canton
SELECT ?timeZone WHERE {
  <http://dbpedia.org/resource/Herzegovina-Neretva_Canton> <http://www.w3.org/2006/time#during> ?timeZone .
}

# Find the country where Serbian Progressive Party is administratively located
SELECT ?country WHERE {
  <http://dbpedia.org/resource/Serbian_Progressive_Party> <http://dbpedia.org/ontology/administrativeOfficeLocation> ?office .
  ?office <http://dbpedia.org/ontology/country> ?country .
}

# Find entities in the region (country) that matches both criteria
SELECT DISTINCT ?entity WHERE {
  # Assuming we have identified the time zone and country from above queries
  VALUES (?timeZone ?country) { (""Central European Time"" ""Serbia"") } # Placeholder values

  ?entity <http://www.w3.org/2006/time#during> ?timeZone .
  ?entity <http://dbpedia.org/ontology/country> ?country .
}
```",4,5,5,3,2,3,2,20,0,0,84,0,0.0,0
339,11,val,Give me the child of the child of Christian IX of Denmark and father of Princess Elizabeth of Greece and Denmark.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Christian_IX_of_Denmark> . <http://dbpedia.org/resource/Princess_Elizabeth_of_Greece_and_Denmark> <http://dbpedia.org/property/father> ?result . ?v2 <http://dbpedia.org/ontology/child> ?result . },"```sparql
SELECT ?grandchild WHERE {
  # Step 1: Find the children of Christian IX of Denmark
  ?child a dbo:Person ;
         dbo:spouseOf ?parent .
  FILTER (?parent = dbpedia:Christian_IX_of_Denmark || ?parent = dbpedia:Louise_of_Hesse-Kassel)

  # Step 2: From those children, find their own children (grandchildren of Christian IX)
  ?child dbo:child ?grandchild .

  # Step 3: Check if any grandchild is a parent to Princess Elizabeth of Greece and Denmark
  ?grandchild dbo:parent dbpedia:Princess_Elizabeth_of_Greece_and_Denmark .
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
391,31,val,"Give me the actor of The Departed and native of the figure known as the nick name of Jackson, Tennessee.","SELECT ?result WHERE { <http://dbpedia.org/resource/The_Departed> <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://dbpedia.org/property/nickname> ?v1 . ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . <http://dbpedia.org/resource/Jackson,_Tennessee> <http://xmlns.com/foaf/0.1/nick> ?v1 . }","```sparql
# Step 1: Find all actors who acted in ""The Departed""
SELECT ?actor WHERE {
    ?film rdf:type dbo:Film .
    ?film foaf:name ""The Departed"" .
    ?film dbo:starring ?actor .
}

# Step 2: Identify the nickname of Jackson, Tennessee
SELECT ?nickname WHERE {
    ?place dbp:officialName ""Jackson, Tennessee"" .
    ?place dbp:nickname ?nickname .
}

# Step 3: Find actors who are native to a place with this nickname
SELECT DISTINCT ?actor WHERE {
    # Actors from The Departed
    ?film rdf:type dbo:Film .
    ?film foaf:name ""The Departed"" .
    ?film dbo:starring ?actor .

    # Native place of the actor
    ?actor dbo:nativePlace ?nativePlace .

    # Nickname of Jackson, Tennessee
    ?place dbp:officialName ""Jackson, Tennessee"" .
    ?place dbp:nickname ?nickname .

    # Check if native place matches nickname
    ?nativePlace foaf:name ?nickname .
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
92,39,val,Give me the associated musical artist of Jim Sheppard and band of the person born as the birth name of Joseph Michael.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> ?v1 . <http://dbpedia.org/resource/Joseph_Michael> <http://dbpedia.org/property/birthName> ?v0 . <http://dbpedia.org/resource/Jim_Sheppard> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/property/birthName> ?v0 . },"```sparql
# Query for Jim Sheppard's associated musical artist
SELECT ?artist WHERE {
  <http://dbpedia.org/resource/Jim_Sheppard_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?artist .
}

UNION

# Query for the band of the person born as Joseph Michael
SELECT ?band WHERE {
  ?person <http://www.w3.org/2000/01/rdf-schema#label> ""Joseph Michael""@en .
  ?person <http://dbpedia.org/ontology/band> ?band .
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
767,25,val,Give me the alma mater of Carl L. Nippert and reference to the alter ego of Black Hood.,SELECT ?result WHERE { <http://dbpedia.org/resource/Black_Hood> <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . <http://dbpedia.org/resource/Carl_L._Nippert> <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
SELECT ?almaMater ?alterEgo WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/Carl_L._Nippert> <http://dbpedia.org/ontology/almaMater> ?almaMater .
  }
  OPTIONAL {
    <http://dbpedia.org/resource/Black_Hood> <http://dbpedia.org/property/alterEgo> ?alterEgo .
  }
}
```",3,3,4,2,2,3,3,71,2,6,0,0.25,1.0,0.4
801,44,val,"Give me the producer of the work, that is a musical work and a song and a work, of 50 Cent and professional in  and associated musical artist of the writer, that is a musical artist and an artist, of 40 Dayz & 40 Nightz.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/producer> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v4 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/50_Cent> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/40_Dayz_&_40_Nightz> <http://dbpedia.org/property/writer> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
SELECT ?producer WHERE {
    # Step 1: Identify the work related to 50 Cent that is both a song and a musical work
    ?work <http://dbpedia.org/ontology/work> ?relatedWork .
    ?relatedWork <http://dbpedia.org/ontology/artist> <http://dbpedia.org/resource/50_Cent> ;
                 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song> ,
                             <http://dbpedia.org/ontology/MusicalWork> .

    # Step 2: Find the producer of this work
    ?work <http://dbpedia.org/ontology/producer> ?producer .

    # Step 3: Identify the writer of ""40 Dayz & 40 Nightz"" who is a professional in music and an artist
    ?song <http://dbpedia.org/ontology/writtenBy> ?writer .
    ?song <http://www.w3.org/2000/01/rdf-schema#label> ""40 Dayz & 40 Nightz""@en .

    # Step 4: Ensure the writer is a professional in music and an artist
    ?writer <http://dbpedia.org/ontology/profession> ?profession .
    ?writer <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> ,
                        <http://dbpedia.org/ontology/Artist> .

    # Step 5: Get the associated musical artist of this writer
    ?writer <http://dbpedia.org/property/associatedMusicalArtist> ?associatedArtist .
}
```",5,10,6,2,3,3,3,71,0,0,1,0,0.0,0
701,43,val,Give me the parent of Meritamen and spouse of Ramesses II and parent of the child of the child of Seti I.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v4 . ?v4 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Meritamen> <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seti_I> . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Ramesses_II> . },"```sparql
SELECT ?person WHERE {
  # Condition 1: Parent of Meritamen
  <http://dbpedia.org/resource/Meritamen> <http://dbpedia.org/ontology/birthParent> ?person .

  # Condition 2: Spouse of Ramesses II
  ?person <http://dbpedia.org/property/spouse> <http://dbpedia.org/resource/Ramses_II> .

  # Condition 3: Parent of the child of the child of Seti I
  ?child1 <http://dbpedia.org/ontology/birthParent> ?person .
  ?child2 <http://dbpedia.org/ontology/birthParent> ?child1 .
  ?child2 <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/Seti_I> .
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
701,25,val,Give me the parent of Henuttawy (19th dynasty) and spouse of the father of Merneptah.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v1 . <http://dbpedia.org/resource/Merneptah> <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Henuttawy_(19th_dynasty)> . },"```sparql
SELECT ?entity WHERE {
  # Find Henuttawy's parent
  ?henuttawy dbpedia-owl:parent ?entity .
  FILTER (str(?henuttawy) = ""Henuttawy_(19th_dynasty)"")

  # Find Merneptah's father and his spouse
  ?merneptah dbpedia-owl:father ?father .
  FILTER (str(?merneptah) = ""Merneptah"")
  
  ?father dbpedia-owl:spouse ?entity .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
547,19,val,Give me the resting place of the child of James Burton (property developer) and resting place of Simon Cadell.,SELECT ?result WHERE { <http://dbpedia.org/resource/Simon_Cadell> <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/James_Burton_(property_developer)> <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
# Query to get the resting place of a child of James Burton (property developer)
SELECT ?child ?restingPlace WHERE {
  ?person <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/James_Burton_(property_developer)> .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person> .
  ?person <http://dbpedia.org/ontology/burialPlace> ?restingPlace .
  BIND(?person AS ?child)
}

UNION

# Query to get the resting place of Simon Cadell
SELECT ?person ?restingPlace WHERE {
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person> .
  ?person rdfs:label ""Simon Cadell""@en .
  ?person <http://dbpedia.org/ontology/burialPlace> ?restingPlace .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
16,21,val,Give me the spouse of the person born as Ted Martin McGinley and person born as Georgeanne Marie Rice.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ""Ted Martin McGinley""@en . ?result <http://dbpedia.org/property/birthName> ""Georgeanne Marie Rice""@en . ?v1 <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
SELECT ?spouse WHERE {
  ?person <http://www.w3.org/2000/01/rdf-schema#label> ""Ted Martin McGinley""@en .
  OPTIONAL { ?person <http://dbpedia.org/property/birthName> ""Georgeanne Marie Rice""@en . }
  ?person <http://dbpedia.org/ontology/spouse> ?spouse .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
659,41,val,"Give me the military force of Napoleonic Wars and commander in the force of Arthur Wellesley, 1st Duke of Wellington and commander in the war, that is an event and a military conflict, of 1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish).","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Napoleonic_Wars> . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Arthur_Wellesley,_1st_Duke_of_Wellington> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/1st_Light_Cavalry_Lancers_Regiment_of_the_Imperial_Guard_(Polish)> <http://dbpedia.org/ontology/battle> ?v4 . }","```sparql
SELECT ?force WHERE {
  ?force <http://dbpedia.org/ontology/event> ?event .
  ?event <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
  FILTER(CONTAINS(LCASE(STR(?event)), ""napoleonic wars"")) .

  OPTIONAL {
    ?force <http://dbpedia.org/property/commander> <http://dbpedia.org/resource/Arthur_Wellesley,_1st_Duke_of_Wellington> .
  }

  OPTIONAL {
    ?otherCommander <http://dbpedia.org/ontology/battle> ?battleEvent .
    ?battleEvent <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
    ?battleEvent <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event> .

    ?otherCommander <http://dbpedia.org/property/commander> ?force .
    
    ?battleEvent <http://dbpedia.org/ontology/foughtBy> <http://dbpedia.org/resource/1st_Light_Cavalry_Lancers_Regiment_of_the_Imperial_Guard_(Polish)> .
  }
}
```",5,7,6,2,3,3,3,71,0,0,13,0,0.0,0
54,19,val,Give me the child of the father of Soe Min Wimala Dewi and parent of Thado Minsaw of Prome.,SELECT ?result WHERE { <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Soe_Min_Wimala_Dewi> <http://dbpedia.org/property/father> ?v0 . },"```sparql
SELECT ?child WHERE {
  ?father <http://dbpedia.org/ontology/spouse> ?soeMinWimalaDewi .
  ?soeMinWimalaDewi <http://www.w3.org/2000/01/rdf-schema#label> ""Soe Min Wimala Dewi"" .
  ?father <http://dbpedia.org/ontology/child> ?child .

  ?parent <http://dbpedia.org/ontology/spouse> ?thadoMinsawOfProme .
  ?thadoMinsawOfProme <http://www.w3.org/2000/01/rdf-schema#label> ""Thado Minsaw of Prome"" .
  ?parent <http://dbpedia.org/ontology/child> ?child .

}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
16,36,val,Give me the spouse of Ted McGinley and person born as the birth name of the alumnus of Ohio State University.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Ohio_State_University> . ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
# Query 1: Get the spouse of Ted McGinley
SELECT ?spouse WHERE {
    <http://dbpedia.org/resource/Ted_McGinley> <http://xmlns.com/foaf/0.1/spouse> ?spouse .
}

# Query 2: Find a person born as the birth name of an alumnus of Ohio State University
SELECT DISTINCT ?person WHERE {
    ?alumnus <http://dbpedia.org/ontology/alumniOf> <http://dbpedia.org/resource/Ohio_State_University> ;
             <http://xmlns.com/foaf/0.1/birthName> ?birthName .
    ?person <http://xmlns.com/foaf/0.1/birthName> ?birthName .
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
820,14,val,Give me the child of the parent of the professional in Actor.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://dbpedia.org/property/occupation> ""Actor""@en . ?result <http://dbpedia.org/property/father> ?v0 . }","```sparql
SELECT ?child WHERE {
  ?actor <http://dbpedia.org/ontology/profession> <http://dbpedia.org/resource/Actor> .
  ?parent <http://dbpedia.org/property/parent> ?actor .
  ?parent <http://dbpedia.org/property/child> ?child .
}
```",3,3,4,3,1,3,2,20,0,0,354,0,0.0,0
547,20,val,Give me the resting place of the actor of Enemy at the Door and resting place of James Burton (Egyptologist).,SELECT ?result WHERE { <http://dbpedia.org/resource/James_Burton_(Egyptologist)> <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Enemy_at_the_Door> <http://dbpedia.org/property/starring> ?v2 . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
# Query to find the resting place of the actor from ""Enemy at the Door""
SELECT ?actor ?restingPlace WHERE {
  ?film <http://dbpedia.org/ontology/starring> ?actor .
  ?film <http://dbpedia.org/property/title> ""Enemy at the Door"" .
  ?actor <http://dbpedia.org/ontology/burialPlace> ?restingPlace .
}

# Query to find the resting place of James Burton (Egyptologist)
SELECT ?restingPlace WHERE {
  ?person <http://www.w3.org/2000/01/rdf-schema#label> ""James Burton (Egyptologist)"" .
  ?person <http://dbpedia.org/ontology/burialPlace> ?restingPlace .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
528,26,val,Give me the war of the commander in the work of --01-09.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/author> ""--01-09""^^<http://www.w3.org/2001/XMLSchema#gMonthDay> . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/ontology/commander> ?v2 . }","```sparql
SELECT ?war WHERE {
  ?work <http://dbpedia.org/ontology/date> ""01-09""^^xsd:date .
  ?work <http://dbpedia.org/ontology/commander> ?commander .
  ?commander <http://dbpedia.org/ontology/battle> ?battle .
  ?battle <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
  BIND(?battle AS ?war)
}
```",3,3,4,3,1,3,3,71,0,0,14,0,0.0,0
767,24,val,Give me the reference to  and alma mater of the administration of George K. Nash.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/George_K._Nash> . ?v2 <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://xmlns.com/foaf/0.1/name> """"@en . }","```sparql
SELECT ?reference ?almaMater WHERE {
  ?administration <http://dbpedia.org/ontology/administration> <http://dbpedia.org/resource/George_K._Nash> .
  OPTIONAL { ?administration <http://purl.org/dc/terms/references> ?reference . }
  OPTIONAL { ?administration <http://dbpedia.org/property/almaMater> ?almaMater . }
}
```",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
801,34,val,Give me the professional in the alter ego of the true self of The Shadow and associated musical artist of Chris Taylor (music producer).,"SELECT ?result WHERE { <http://dbpedia.org/resource/Chris_Taylor_(music_producer)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v1 . ?v2 <http://xmlns.com/foaf/0.1/givenName> ""The Shadow""@en . }","```sparql
SELECT ?professional WHERE {
  ?shadow <http://dbpedia.org/ontology/alterEgo> ?trueSelf .
  ?trueSelf <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person> .
  ?trueSelf <http://dbpedia.org/ontology/profession> ?professional .

  OPTIONAL {
    ?trueSelf <http://dbpedia.org/property/associatedMusicalArtist> <http://dbpedia.org/resource/Chris_Taylor_(music_producer)> .
  }

  FILTER EXISTS { ?shadow <http://www.w3.org/2000/01/rdf-schema#label> ""The Shadow""@en }
}
```",4,4,5,3,2,3,3,71,0,0,4,0,0.0,0
666,14,val,"Give me the figure known as the nickname of the reference, that is an organisation and a soccer club and a sports club, to England.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v2 <http://xmlns.com/foaf/0.1/name> ""England""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/property/nickname> ?v0 . ?v2 <http://dbpedia.org/property/nickname> ?v0 . }","```sparql
SELECT ?result WHERE {
  ?reference <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>.
  ?reference <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>.
  ?reference <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>.
  ?reference <http://dbpedia.org/property/country> <http://dbpedia.org/resource/England>.
  ?reference <http://dbpedia.org/ontology/nickName> ?result.
}
```",3,6,4,3,1,3,2,20,0,0,12,0,0.0,0
492,23,val,Give me the person decedent at the work of the author of French Algeria.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/author> ?v2 . <http://dbpedia.org/resource/French_Algeria> <http://dbpedia.org/property/author> ?v2 . ?result <http://dbpedia.org/ontology/deathPlace> ?v0 . },"```sparql
SELECT ?decedent WHERE {
  ?work <http://dbpedia.org/ontology/author> ?author .
  ?author rdfs:label ""French Algeria""@en .
  
  ?work <http://dbpedia.org/property/about> ?subject .
  
  OPTIONAL { 
    ?subject <http://dbpedia.org/ontology/decedent> ?decedent .
  }
}
```",3,3,4,3,1,3,3,71,0,0,30,0,0.0,0
747,25,val,Give me the band of the person born as Tracey Elizabeth McSween and band of Amba Shepherd.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Amba_Shepherd> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/property/birthName> ""Tracey Elizabeth McSween""@en . }","```sparql
SELECT ?person ?band WHERE {
  { 
    <http://dbpedia.org/resource/Tracey_McSween> <http://dbpedia.org/ontology/band> ?band .
    BIND(<http://dbpedia.org/resource/Tracey_McSween> AS ?person)
  }
  UNION
  {
    <http://dbpedia.org/resource/Amba_Shepherd> <http://dbpedia.org/ontology/band> ?band .
    BIND(<http://dbpedia.org/resource/Amba_Shepherd> AS ?person)
  }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
9,27,val,"Give me the figure known as the nickname of the entity, that is an organisation and an educational institution, in Northern Ireland.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Northern_Ireland> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?result <http://dbpedia.org/property/nickname> ?v2 . ?v1 <http://dbpedia.org/property/nickname> ?v2 . },"```sparql
SELECT ?entity ?nickname WHERE {
  ?entity <http://www.w3.org/2000/01/rdf-schema#label> ?label .
  ?entity <http://dbpedia.org/ontology/location> ?location .
  ?location <http://www.w3.org/2000/01/rdf-schema#label> ""Northern Ireland"" .
  ?entity a <http://dbpedia.org/ontology/Organization> ;
          a <http://dbpedia.org/ontology/EducationalInstitution> .
  OPTIONAL { ?entity <http://dbpedia.org/ontology/nickname> ?nickname . }
}
```",3,5,4,3,1,3,3,71,0,0,13,0,0.0,0
378,44,val,Give me the war of the commander in Peninsular War and claim to fame of the commander in Great Siege of Gibraltar and war of Carl Pontus Gahn.,SELECT ?result WHERE { <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/ontology/knownFor> ?result . <http://dbpedia.org/resource/Great_Siege_of_Gibraltar> <http://dbpedia.org/ontology/commander> ?v2 . <http://dbpedia.org/resource/Peninsular_War> <http://dbpedia.org/ontology/commander> ?v4 . ?v4 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
SELECT DISTINCT ?war WHERE {
  # War of the commander in Peninsular War
  {
    ?peninsularWar dbpedia-owl:commander ?commander .
    FILTER (STRSTARTS(STR(?peninsularWar), ""http://dbpedia.org/resource/Peninsular_War""))
    ?commander dbpedia-owl:battle ?war .
  }
  
  UNION
  
  # Claim to fame of the commander in Great Siege of Gibraltar
  {
    ?gibraltarSiege dbpedia-owl:commander ?commander .
    FILTER (STRSTARTS(STR(?gibraltarSiege), ""http://dbpedia.org/resource/Great_Siege_of_Gibraltar""))
    ?commander dbpedia-owl:knownFor ?claimToFame .
    FILTER (
      { ?claimToFame a <http://dbpedia.org/ontology/MilitaryConflict> }
      UNION
      { ?claimToFame a <http://dbpedia.org/ontology/Film> }
    )
    ?commander dbpedia-owl:battle ?war .
  }

  UNION

  # War of Carl Pontus Gahn
  {
    ?carlGahn foaf:name ""Carl Pontus Gahn"" .
    ?carlGahn dbpedia-owl:battle ?war .
  }
}
```",5,5,6,2,3,3,3,71,0,0,2,0,0.0,0
801,30,val,"Give me the associated musical artist of the writer, that is a musical artist and an artist, of 40 Dayz & 40 Nightz and producer of Westside Story (song) and professional in .","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/40_Dayz_&_40_Nightz> <http://dbpedia.org/property/writer> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Westside_Story_(song)> <http://dbpedia.org/ontology/producer> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
SELECT ?writer ?associatedArtist WHERE {
  ?writer <http://dbpedia.org/ontology/wrote> <http://dbpedia.org/resource/40_Dayz_%26_40_Nightz> .
  ?writer <http://dbpedia.org/property/produced> <http://dbpedia.org/resource/Westside_Story_(song)> .
  ?writer <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
  ?writer <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist> .
  ?writer <http://dbpedia.org/property/associatedMusicalArtist> ?associatedArtist .
}
```",4,6,5,2,3,3,3,71,0,0,1,0,0.0,0
378,20,val,Give me the war of the commander in Peninsular War and war of Carl Pontus Gahn.,SELECT ?result WHERE { <http://dbpedia.org/resource/Peninsular_War> <http://dbpedia.org/ontology/commander> ?v2 . <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
SELECT ?war WHERE {
  # Find wars commanded by commanders of the Peninsular War
  ?peninsularWar <http://dbpedia.org/ontology/commander> ?commander .
  ?commander <http://dbpedia.org/ontology/battle> ?war .

  # Find wars associated with Carl Pontus Gahn
  <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/ontology/battle> ?gahnWar .

  # Ensure the war is common to both sets
  FILTER (?war = ?gahnWar)

  # Restrict to Peninsular War
  VALUES ?peninsularWar { <http://dbpedia.org/resource/Peninsular_War> }
}
```",3,3,4,2,2,3,3,71,2,0,0,1.0,1.0,1.0
9,44,val,"Give me the figure known as the nickname of Queen's University Belfast and alma mater of John Alderdice, Baron Alderdice and alma mater of the awardee of Royal Medal.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Medal> . ?result <http://dbpedia.org/property/nickname> ?v2 . <http://dbpedia.org/resource/Queen's_University_Belfast> <http://dbpedia.org/property/nickname> ?v2 . ?v4 <http://dbpedia.org/ontology/almaMater> ?result . <http://dbpedia.org/resource/John_Alderdice,_Baron_Alderdice> <http://dbpedia.org/ontology/almaMater> ?result . }","```sparql
SELECT ?university WHERE {
  ?university rdfs:label ""Queen's University Belfast""@en .
  
  OPTIONAL { 
    ?almaMater1 <http://dbpedia.org/ontology/alumni> <http://dbpedia.org/resource/John_Alderdice,_Baron_Alderdice> .
    FILTER(?almaMater1 = ?university)
  }
  
  OPTIONAL {
    ?awardee <http://dbpedia.org/property/receivedAward> <http://dbpedia.org/resource/Royal_Medal> .
    ?almaMater2 <http://dbpedia.org/ontology/alumni> ?awardee .
    FILTER(?almaMater2 = ?university)
  }
  
  FILTER(BOUND(?almaMater1) && BOUND(?almaMater2))
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
339,15,val,Give me the father of Princess Elizabeth of Greece and Denmark and child of the child of the predecessor of Frederick VIII of Denmark.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Princess_Elizabeth_of_Greece_and_Denmark> <http://dbpedia.org/property/father> ?result . ?v0 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Frederick_VIII_of_Denmark> . ?v1 <http://dbpedia.org/property/father> ?v0 . },"```sparql
SELECT ?individual WHERE {
  # Find the father of Princess Elizabeth of Greece and Denmark
  <http://dbpedia.org/resource/Princess_Elizabeth_of_Greece_and_Denmark> <http://dbpedia.org/ontology/father> ?father.

  # Find the predecessor of Frederick VIII of Denmark
  OPTIONAL { 
    <http://dbpedia.org/resource/Frederick_VIII_of_Denmark> <http://dbpedia.org/ontology/predecessor> ?predecessor.
    
    # Find a child of the predecessor
    ?child1 <http://dbpedia.org/ontology/child> ?predecessor.

    # Find a grandchild (child of the child) of the predecessor
    ?grandchild <http://dbpedia.org/ontology/child> ?child1.
    
    FILTER (?father = ?grandchild)
  }
}
```",4,4,5,3,2,3,2,20,0,0,1,0,0.0,0
547,39,val,Give me the resting place of Simon Cadell and resting place of the awardee of the award of Gerald Graham.,SELECT ?result WHERE { <http://dbpedia.org/resource/Gerald_Graham> <http://dbpedia.org/property/awards> ?v0 . ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . ?v1 <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Simon_Cadell> <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
SELECT ?simonRestingPlace ?awardeeRestingPlace WHERE {
  # Resting place of Simon Cadell
  <http://dbpedia.org/resource/Simon_Cadell> <http://dbpedia.org/ontology/burialPlace> ?simonRestingPlace .

  # Award associated with Gerald Graham
  OPTIONAL { 
    <http://dbpedia.org/resource/Gerald_Graham> <http://dbpedia.org/property/award> ?award .
    
    # Resting place of an awardee who received the same award as Gerald Graham
    ?awardee <http://dbpedia.org/ontology/burialPlace> ?awardeeRestingPlace .
    ?awardee <http://dbpedia.org/property/award> ?award .
  }
}
```",4,4,5,3,2,3,3,71,0,0,2,0,0.0,0
528,36,val,Give me the war of Irene Morales and force of the person born as the birth name of Narciso Campero.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ?v0 . <http://dbpedia.org/resource/Narciso_Campero> <http://dbpedia.org/property/birthName> ?v0 . ?result <http://dbpedia.org/ontology/commander> ?v1 . <http://dbpedia.org/resource/Irene_Morales> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
# Query 1: Get the war associated with Irene Morales
SELECT ?war WHERE {
    <http://dbpedia.org/resource/Irene_Morales> <http://dbpedia.org/ontology/battle> ?war .
}

# Query 2: Get the force of the person born as the birth name of Narciso Campero
SELECT ?force WHERE {
    OPTIONAL { 
        <http://dbpedia.org/resource/Narciso_Campero> <http://dbpedia.org/property/birthName> ?birthName .
    }
    ?person <http://www.w3.org/2000/01/rdf-schema#label> ?birthName .
    ?person <http://dbpedia.org/ontology/militaryForce> ?force .
}
```",4,4,5,3,2,3,3,71,0,0,2,0,0.0,0
617,24,val,Give me the spouse of the child of Antiochus III the Great and parent of Nysa (wife of Pharnaces I of Pontus).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Nysa_(wife_of_Pharnaces_I_of_Pontus)> . <http://dbpedia.org/resource/Antiochus_III_the_Great> <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
SELECT ?spouse WHERE {
  ?child rdf:type dbo:Child .
  ?child dbo:parent <http://dbpedia.org/resource/Antiochus_III_the_Great> .
  ?child dbo:parentOf <http://dbpedia.org/resource/Nysa_(wife_of_Pharnaces_I_of_Pontus)> .
  ?child dbo:spouse ?spouse .
}
```",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
339,13,val,Give me the child of the child of the predecessor of Frederick VIII of Denmark.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Frederick_VIII_of_Denmark> . ?v1 <http://dbpedia.org/property/father> ?v0 . ?v1 <http://dbpedia.org/ontology/child> ?result . },"```sparql
SELECT ?childOfChild WHERE {
    ?predecessor dbo:succession <http://dbpedia.org/resource/Frederick_VIII_of_Denmark> .
    ?predecessor dbo:child ?child1 .
    ?child1 dbo:child ?childOfChild .
}
```",3,3,4,3,1,3,2,20,0,0,32,0,0.0,0
16,20,val,Give me the professional in the profession of Satomi Ishihara and spouse of Ted McGinley.,SELECT ?result WHERE { <http://dbpedia.org/resource/Satomi_Ishihara> <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/occupation> ?v2 . },"```sparql
SELECT ?person WHERE {
  ?satomi a <http://dbpedia.org/resource/Satomi_Ishihara> ;
          <http://dbpedia.org/ontology/profession> ?profession .
  
  ?person a ?type ;
          <http://dbpedia.org/ontology/profession> ?profession ;
          <http://dbpedia.org/property/spouse> <http://dbpedia.org/resource/Ted_McGinley> .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
617,18,val,Give me the spouse of Laodice IV and child of Antiochus III the Great and parent of Nysa (wife of Pharnaces I of Pontus).,SELECT ?result WHERE { <http://dbpedia.org/resource/Laodice_IV> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Antiochus_III_the_Great> . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Nysa_(wife_of_Pharnaces_I_of_Pontus)> . },"```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/property/spouse> <http://dbpedia.org/resource/Laodice_IV>.
  ?person <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/Antiochus_III_the_Great>.
  ?person <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Nysa_(wife_of_Pharaces_I_of_Pontus)>.
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
996,14,val,Give me the entity in the award of the native of Palestine (region).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> ?v0 . ?v2 <http://dbpedia.org/property/awards> ?v0 . ?v2 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Palestine_(region)> . },"```sparql
SELECT ?entity WHERE {
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person> .
  ?person <http://dbpedia.org/property/nativeOf> <http://dbpedia.org/resource/Palestine_(region)> .
  ?person <http://dbpedia.org/ontology/award> ?award .
  ?award <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?entity .
}
```",3,3,4,3,1,3,2,20,0,0,292,0,0.0,0
391,21,val,Give me the native of the figure known as Hub City and actor of All About the Andersons.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://dbpedia.org/property/nickname> ""Hub City""@en . <http://dbpedia.org/resource/All_About_the_Andersons> <http://dbpedia.org/property/starring> ?result . }","```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Hub_City> .
  ?person <http://dbpedia.org/ontology/actor> <http://dbpedia.org/resource/All_About_the_Andersons> .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
345,14,val,"Give me the team of the person born, that is a soccer player and a soccer manager, on the birth date of Eiður Guðjohnsen.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?result <http://dbpedia.org/ontology/manager> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. <http://dbpedia.org/resource/Eiður_Guðjohnsen> <http://dbpedia.org/ontology/birthDate> ?v2 . ?v0 <http://dbpedia.org/ontology/birthDate> ?v2 . },"```sparql
# Step 1: Get Eiður Guðjohnsen's birthdate
SELECT ?birthDate WHERE {
    <http://dbpedia.org/resource/Eiður_Guðjohnsen> <http://www.w3.org/2002/07/owl#sameAs> ?eiður .
    ?eiður <http://dbpedia.org/ontology/birthDate> ?birthDate .
}

# Step 2: Find people who are both soccer players and managers born on the same date
SELECT DISTINCT ?person WHERE {
    ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer> .
    ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager> .
    ?person <http://dbpedia.org/ontology/birthDate> ?birthDate .
    FILTER(?birthDate = ""1978-11-15""^^xsd:date) # Assuming Eiður Guðjohnsen's birthdate is 1978-11-15
}

# Step 3: Retrieve the team(s) associated with these individuals
SELECT DISTINCT ?person ?team WHERE {
    ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer> .
    ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager> .
    ?person <http://dbpedia.org/ontology/birthDate> ?birthDate .
    FILTER(?birthDate = ""1978-11-15""^^xsd:date) # Assuming Eiður Guðjohnsen's birthdate is 1978-11-15
    OPTIONAL { ?person <http://dbpedia.org/property/team> ?team . }
}
```",3,5,4,3,1,3,2,20,0,0,2,0,0.0,0
9,37,val,"Give me the alma mater of the awardee of the reference, that is an award, to Royal Medals and figure known as QUB.","SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""Royal Medals""@en . ?result <http://dbpedia.org/property/nickname> ""QUB""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v3 <http://dbpedia.org/ontology/almaMater> ?result . ?v3 <http://dbpedia.org/property/awards> ?v0 . }","```sparql
SELECT ?almaMater WHERE {
  ?reference <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>.
  ?reference <http://purl.org/dc/terms/references> <http://dbpedia.org/resource/Royal_Medals>.
  ?reference <http://purl.org/dc/terms/references> <http://dbpedia.org/resource/QUB>.
  ?awardee <http://dbpedia.org/ontology/award> ?reference.
  ?awardee <http://dbpedia.org/ontology/almaMater> ?almaMater.
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
492,42,val,"Give me the commander in Franco-Hova Wars and person decedent at the capital, that is a settlement, of Algeria and person decedent at the work of US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . ?v2 <http://dbpedia.org/property/author> ""US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite""@en . ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . <http://dbpedia.org/resource/Algeria> <http://dbpedia.org/ontology/capital> ?v1 . <http://dbpedia.org/resource/Franco-Hova_Wars> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. }","```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Franco-Hova_Wars>.
  
  ?deathPlace1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>;
               <http://dbpedia.org/property/capital> ""true""^^<http://www.w3.org/2001/XMLSchema#boolean>.
  ?deathPlace2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Occupation>;
               <http://dbpedia.org/property/name> ""US Assistant Secretary of State for African Affairs""@en.
  
  ?person <http://dbpedia.org/ontology/deathPlace> ?deathPlace1;
          <http://dbpedia.org/ontology/deathPlace> ?deathPlace2.

  FILTER(?deathPlace1 = <http://dbpedia.org/resource/Algiers>)
  FILTER(?deathPlace2 = <http://dbpedia.org/resource/Joseph_C._Satterthwaite>)
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
617,28,val,"Give me the spouse of Laodice IV and child of the child, that is a royalty, of Seleucus II Callinicus and parent of Nysa (wife of Pharnaces I of Pontus).",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Laodice_IV> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Nysa_(wife_of_Pharnaces_I_of_Pontus)> . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seleucus_II_Callinicus> . },"```sparql
SELECT ?spouse ?child WHERE {
  # Step 1: Find Laodice IV's spouse
  <http://dbpedia.org/resource/Laodice_IV> <http://dbpedia.org/ontology/spouse> ?spouse .

  # Step 2: Identify the child of Laodice IV and her spouse
  ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
  ?child <http://dbpedia.org/property/parent> ?spouse .
  
  # Step 3: Ensure the child is royalty
  ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .

  # Step 4: Verify that this child is a parent of Nysa, who married Pharnaces I of Pontus
  ?child <http://dbpedia.org/property/parent> <http://dbpedia.org/resource/Nysa_(wife_of_Pharaces_I_of_Pontus)> .
  <http://dbpedia.org/resource/Nysa_(wife_of_Pharaces_I_of_Pontus)> <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Pharnaces_I_of_Pontus> .
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
534,13,val,"Give me the birth place of the child, that is a politician and an office holder, of the native, that is a politician, of Essex.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Essex> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/ontology/child> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
SELECT ?childBirthPlace WHERE {
  ?native <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/United_Kingdom> .
  ?native <http://dbpedia.org/ontology/placeOfBirth> <http://dbpedia.org/resource/Essex> .
  ?native <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .

  ?child <http://dbpedia.org/property/parent> ?native .
  ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .
  ?child <http://dbpedia.org/ontology/officeHolder> ?office .

  ?child <http://dbpedia.org/ontology/placeOfBirth> ?childBirthPlace .
}
```",3,6,4,3,1,3,2,20,0,0,6,0,0.0,0
701,23,val,Give me the parent of the child of the spouse of Amun-her-khepeshef.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/child> ?v0 . <http://dbpedia.org/resource/Amun-her-khepeshef> <http://dbpedia.org/ontology/spouse> ?v2 . ?v0 <http://dbpedia.org/ontology/parent> ?result . },"```sparql
SELECT ?parent WHERE {
  ?spouse <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Amun-her-khepeshef> .
  ?child <http://dbpedia.org/ontology/birthParent> ?spouse .
  ?child <http://dbpedia.org/ontology/birthParent> ?parent .
}
```",3,3,4,3,1,3,3,71,0,0,2,0,0.0,0
48,12,val,"Give me the band of Carl Falk and band of the actor, that is a musical artist, of Honor Up.",SELECT ?result WHERE { <http://dbpedia.org/resource/Honor_Up> <http://dbpedia.org/property/starring> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Carl_Falk> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT ?band1 ?actor ?band2 WHERE {
  # Find the band of Carl Falk
  <http://dbpedia.org/resource/Carl_Falk> <http://dbpedia.org/ontology/memberOf> ?band1 .
  
  # Find the actor who is a musical artist in ""Honor Up""
  ?film <http://dbpedia.org/property/starring> ?actor .
  ?film <http://www.w3.org/2000/01/rdf-schema#label> ""Honor Up""@en .
  ?actor <http://dbpedia.org/ontology/occupation> <http://dbpedia.org/resource/Musical_artist> .

  # Find the band of that actor
  ?actor <http://dbpedia.org/ontology/memberOf> ?band2 .
}
```",3,4,4,2,2,3,2,20,0,0,1,0,0.0,0
182,15,val,Give me the entity in Sri Lanka and war of the author of 2019 Sri Lanka Easter bombings.,SELECT ?result WHERE { <http://dbpedia.org/resource/2019_Sri_Lanka_Easter_bombings> <http://dbpedia.org/property/author> ?v1 . ?v1 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Sri_Lanka> . },"```sparql
SELECT ?entityInSriLanka ?war WHERE {
    # Find the entity in Sri Lanka related to the 2019 Sri Lanka Easter bombings
    <http://dbpedia.org/resource/2019_Sri_Lanka_Easter_bombings> <http://dbpedia.org/ontology/location> ?location .
    ?location <http://www.w3.org/2000/01/rdf-schema#label> ""Sri Lanka""@en .

    # Find the author of the 2019 Sri Lanka Easter bombings
    <http://dbpedia.org/resource/2019_Sri_Lanka_Easter_bombings> <http://dbpedia.org/ontology/author> ?author .

    # Find a war related to this author
    ?author <http://dbpedia.org/property/biography> ?biography .
    ?biography ?p ?war .
    FILTER(?p = <http://dbpedia.org/ontology/war>) .

    BIND(?location AS ?entityInSriLanka)
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
528,23,val,"Give me the war of the military force of the entity, that is a societal event, in Chile.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Chile> . ?v0 <http://dbpedia.org/ontology/battle> ?v2 . },"```sparql
SELECT ?war WHERE {
  ?entity <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>.
  ?entity <http://dbpedia.org/property/country> <http://dbpedia.org/resource/Chile>.
  ?militaryForce <http://dbpedia.org/ontology/militaryForce> ?entity.
  ?militaryForce <http://dbpedia.org/ontology/battle> ?war.
}
```",3,4,4,3,1,3,3,71,0,0,235,0,0.0,0
429,7,val,Give me the administration of the father of Martha Johnson Patterson and country of 77th Ohio Infantry Regiment.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> ?v2 . <http://dbpedia.org/resource/Martha_Johnson_Patterson> <http://dbpedia.org/property/father> ?v2 . <http://dbpedia.org/resource/77th_Ohio_Infantry_Regiment> <http://dbpedia.org/ontology/country> ?result . },"SELECT ?administration ?country WHERE {
  ?father <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Martha_Johnson_Patterson> .
  ?father <http://dbpedia.org/property/administration> ?administration .
  
  <http://dbpedia.org/resource/77th_Ohio_Infantry_Regiment> <http://dbpedia.org/ontology/country> ?country .
}",3,3,4,2,2,2,2,9,0,0,1,0,0.0,0
54,34,val,Give me the child of the father of the child of Thinkhaya of Pagan and predecessor of Ameitta Thiri Maha Dhamma Dewi of Ava.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> ?v1 . ?v1 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Ameitta_Thiri_Maha_Dhamma_Dewi_of_Ava> . },"```sparql
SELECT ?result WHERE {
  # Step 1: Find Thinkhaya of Pagan
  ?thinkhaya dbo:wikiPageRedirects db:Thinkhaya_of_Pagan .
  
  # Step 2: Find the child of Thinkhaya of Pagan
  ?child dbo:father ?thinkhaya .

  # Step 3: The father of that child is Thinkhaya himself (already identified)

  # Step 4: Identify the predecessor of Ameitta Thiri Maha Dhamma Dewi of Ava
  db:Ameitta_Thiri_Maha_Dhamma_Dewi_of_Ava dbo:predecessor ?predecessor .

  # Step 5: Find the child of this predecessor
  ?result dbo:father ?predecessor .
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
959,20,val,"Give me the member of University of Tsukuba and native of the residence, that is a country, of Yōichi Masuzoe.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?result <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/University_of_Tsukuba> . <http://dbpedia.org/resource/Yōichi_Masuzoe> <http://dbpedia.org/property/residence> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
SELECT ?person WHERE {
  # Step 1: Get the residence (country) of Yōichi Masuzoe
  <http://dbpedia.org/resource/Y%C5%8Dichi_Masuzoe> <http://dbpedia.org/ontology/residence> ?residence .
  
  # Ensure that the residence is a country
  ?residence <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country> .

  # Step 2: Find members (alumni) of University of Tsukuba who are natives of the identified country
  ?person <http://dbpedia.org/ontology/alumnusOf> <http://dbpedia.org/resource/University_of_Tsukuba> .
  ?person <http://dbpedia.org/property/nationality> ?residence .
}
```",3,4,4,2,2,3,3,71,0,0,84,0,0.0,0
435,14,val,Give me the territory administered from Reykjavík and region of the time zone in Bombali Shebora Chiefdom.,SELECT ?result WHERE { <http://dbpedia.org/resource/Bombali_Shebora_Chiefdom> <http://dbpedia.org/ontology/timeZone> ?v1 . ?result <http://dbpedia.org/ontology/timeZone> ?v1 . ?result <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Reykjavík> . },"```sparql
SELECT ?territory ?region WHERE {
  ?territory <http://dbpedia.org/ontology/administrativeCenter> <http://dbpedia.org/resource/Reykjavík>.
  ?territory <http://www.w3.org/2006/time#during> ?timeZone.
  ?timeZone <http://dbpedia.org/property/timeZoneRegion> ?region.
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
747,21,val,Give me the person born on the birth date of Pavlo Khudzik and band of Shèna.,SELECT ?result WHERE { <http://dbpedia.org/resource/Shèna> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Pavlo_Khudzik> <http://dbpedia.org/ontology/birthDate> ?v1 . ?result <http://dbpedia.org/ontology/birthDate> ?v1 . },"```sparql
# Step 1: Get the birth date of Pavlo Khudzik
SELECT ?birthDate WHERE {
    <http://dbpedia.org/resource/Pavlo_Khudzik> <http://www.w3.org/2002/07/owl#sameAs> ?person .
    ?person <http://dbpedia.org/ontology/birthDate> ?birthDate .
}

# Step 2: Find persons born on the same date
SELECT DISTINCT ?person WHERE {
    ?person <http://dbpedia.org/ontology/birthDate> ?birthDate .
    FILTER(?birthDate = ""REPLACE_WITH_BIRTH_DATE"")
}

# Step 3: Get the band associated with Shèna
SELECT ?band WHERE {
    <http://dbpedia.org/resource/Shèna> <http://dbpedia.org/property/memberOf> ?band .
}
```

Note: Replace `REPLACE_WITH_BIRTH_DATE` with the actual birth date obtained from Step 1.",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
994,29,val,"Give me the associated musical artist of the band member, that is a band and a group and an organisation, of Meshuggah and associated musical artist of S.A. Slayer and band member of Don Dokken.",SELECT ?result WHERE { <http://dbpedia.org/resource/S.A._Slayer> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Don_Dokken> . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Meshuggah> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
SELECT DISTINCT ?person WHERE {
  # Find a person who is a band member of Meshuggah
  ?meshMember <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/Meshuggah>;
              <http://xmlns.com/foaf/0.1/name> ?name.

  # Ensure the same person is also a band member of Don Dokken
  ?donDokkenMember <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/Don_Dokken>;
                   <http://xmlns.com/foaf/0.1/name> ?name.

  FILTER (?meshMember = ?donDokkenMember)

  # Check if this person is an associated musical artist of S.A. Slayer
  OPTIONAL {
    ?sASlaveArtist <http://dbpedia.org/ontology/associatedMusicalArtist> ?person.
    ?sASlaveArtist <http://dbpedia.org/resource/S._A._Slayer>.
  }

  # Ensure the person is associated with S.A. Slayer
  FILTER EXISTS { ?sASlaveArtist <http://dbpedia.org/ontology/associatedMusicalArtist> ?person }
}
```",4,7,5,2,3,3,3,71,0,0,1,0,0.0,0
528,29,val,Give me the war of Irene Morales and war of the commander in Battle of La Rinconada de Ate and force of Narciso Campero.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Battle_of_La_Rinconada_de_Ate> <http://dbpedia.org/ontology/commander> ?v3 . <http://dbpedia.org/resource/Irene_Morales> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Narciso_Campero> . },"```sparql
# Step 1: Find wars associated with Irene Morales
SELECT ?war WHERE {
    <http://dbpedia.org/resource/Irene_Morales> <http://dbpedia.org/ontology/battle> ?war .
}

# Step 2: Find the commander in Battle of La Rinconada de Ate and their wars
SELECT ?commanderWar WHERE {
    <http://dbpedia.org/resource/Battle_of_La_Rinconada_de_Ate> <http://dbpedia.org/ontology/commander> ?commander .
    ?commander <http://dbpedia.org/ontology/battle> ?commanderWar .
}

# Step 3: Find the force associated with Narciso Campero and their wars
SELECT ?forceWar WHERE {
    <http://dbpedia.org/resource/Narciso_Campero> <http://dbpedia.org/property/force> ?force .
    ?force <http://dbpedia.org/ontology/battle> ?forceWar .
}

# Step 4: Find the common war(s) from these associations
SELECT DISTINCT ?commonWar WHERE {
    { SELECT ?war WHERE {
        <http://dbpedia.org/resource/Irene_Morales> <http://dbpedia.org/ontology/battle> ?war .
    } }
    UNION
    { SELECT ?commanderWar WHERE {
        <http://dbpedia.org/resource/Battle_of_La_Rinconada_de_Ate> <http://dbpedia.org/ontology/commander> ?commander .
        ?commander <http://dbpedia.org/ontology/battle> ?commanderWar .
    } }
    UNION
    { SELECT ?forceWar WHERE {
        <http://dbpedia.org/resource/Narciso_Campero> <http://dbpedia.org/property/force> ?force .
        ?force <http://dbpedia.org/ontology/battle> ?forceWar .
    } }
    
    FILTER (?war = ?commanderWar && ?war = ?forceWar)
}
```",4,4,5,2,3,3,3,71,0,0,2,0,0.0,0
617,23,val,"Give me the child of the child, that is a royalty, of the successor, that is a royalty, of Antiochus II Theos.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> ?v2 . <http://dbpedia.org/resource/Antiochus_II_Theos> <http://dbpedia.org/ontology/successor> ?v2 . ?result <http://dbpedia.org/property/father> ?v0 . },"```sparql
SELECT ?grandchild WHERE {
  ?successor <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Antiochus_II_Theos> .
  ?successor <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
  
  ?child <http://dbpedia.org/ontology/fatherOrMother> ?successor .
  ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .

  ?grandchild <http://dbpedia.org/ontology/fatherOrMother> ?child .
  ?grandchild <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
}
```",3,5,4,3,1,3,3,71,0,0,5,0,0.0,0
54,20,val,Give me the child of Thinkhaya of Pagan and parent of the child of Narapati I of Ava.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Narapati_I_of_Ava> . ?v2 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?result . },"```sparql
SELECT ?individual WHERE {
  # Find the child of Thinkhaya of Pagan
  ?child dbpedia-owl:parent <http://dbpedia.org/resource/Thinkhaya_of_Pagan> .
  
  # Find a child of Narapati I of Ava and their parent
  ?narapatiChild dbpedia-owl:parent <http://dbpedia.org/resource/Narapati_I_of_Ava> .
  ?narapatiChild dbpedia-owl:parent ?individual .

  # Match the individual who is both a child of Thinkhaya and a parent of Narapati's child
  FILTER (?child = ?individual)
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
281,22,val,"Give me the war of the profession, that is a military unit, of Heather Roy and war of Beauchamp Seymour, 1st Baron Alcester.","SELECT ?result WHERE { <http://dbpedia.org/resource/Beauchamp_Seymour,_1st_Baron_Alcester> <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v1 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Heather_Roy> <http://dbpedia.org/property/occupation> ?v1 . }","```sparql
SELECT ?war WHERE {
    ?heatherUnit <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>.
    <http://dbpedia.org/resource/Heather_Roy> <http://dbpedia.org/property/profession> ?heatherUnit.
    
    ?beauchampUnit <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>.
    <http://dbpedia.org/resource/Beauchamp_Seymour,_1st_Baron_Alcester> <http://dbpedia.org/property/militaryService> ?beauchampUnit.
    
    ?heatherUnit <http://dbpedia.org/ontology/war> ?war.
    ?beauchampUnit <http://dbpedia.org/ontology/war> ?war.
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
659,40,val,"Give me the commander in the force of the native, that is an office holder, of Kingdom of Ireland and commander in Battle of Leipzig and military force of Napoleonic Wars.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Kingdom_of_Ireland> . ?v1 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Battle_of_Leipzig> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Napoleonic_Wars> . ?v1 <http://dbpedia.org/ontology/commander> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
SELECT ?commander WHERE {
  ?officeHolder <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Kingdom_of_Ireland>.
  ?officeHolder a <http://dbpedia.org/ontology/OfficeHolder>.
  ?officeHolder <http://dbpedia.org/ontology/battleCommanded> <http://dbpedia.org/resource/Battle_of_Leipzig>.
  ?officeHolder <http://dbpedia.org/ontology/militaryForce> <http://dbpedia.org/resource/Napoleonic_Wars>.
}
```",5,6,6,3,3,3,3,71,0,0,5,0,0.0,0
184,40,val,"Give me the parent of Archduchess Ilona of Austria and child of Archduke Joseph August of Austria and parent of the native of the landmark at elevation, that is a settlement, of 96.0.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/elevation> ""96.0""^^<http://www.w3.org/2001/XMLSchema#double> . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_August_of_Austria> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://dbpedia.org/ontology/birthPlace> ?v2 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Ilona_of_Austria> . ?result <http://dbpedia.org/ontology/child> ?v1 . }","```sparql
SELECT ?person WHERE {
    # Step 1: Identify the parent of Archduchess Ilona of Austria
    ?parent <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Archduchess_Ilona_of_Austria> .
    
    # Step 2: Identify the child of Archduke Joseph August of Austria
    ?child <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/Archduke_Joseph_August_of_Austria> .
    
    # Ensure these two roles refer to the same individual
    FILTER (?parent = ?child)
    
    # Step 3: Find this person's child whose native landmark has an elevation of 96.0 meters and is a settlement
    ?person <http://dbpedia.org/ontology/birthParent> ?child .
    ?landmark <http://dbpedia.org/property/nativePlace> ?person ;
              <http://www.w3.org/2003/01/geo/wgs84_pos#lat> ?lat ;
              <http://www.w3.org/2003/01/geo/wgs84_pos#long> ?long .
    ?elevation <http://dbpedia.org/ontology/elevation> ""96.0""^^xsd:float .
    ?settlement <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement> ;
                <http://dbpedia.org/property/nativePlace> ?person ;
                <http://dbpedia.org/ontology/elevation> ?elevation .
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
378,26,val,"Give me the war of the commander in the reference, that is a military conflict, to Peninsular War.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://xmlns.com/foaf/0.1/name> ""Peninsular War""@en . ?v1 <http://dbpedia.org/ontology/commander> ?v2 . ?v2 <http://dbpedia.org/ontology/battle> ?result . }","```sparql
SELECT ?result WHERE {
  ?peninsularWar <http://dbpedia.org/ontology/commander> ?commander .
  ?commander <http://dbpedia.org/ontology/battle> ?result .
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
  FILTER(?peninsularWar = <http://dbpedia.org/resource/Peninsular_War>)
}
```",3,4,4,3,1,3,3,71,116,0,2,1.0,0.9830508474576272,0.9914529914529915
767,35,val,"Give me the entity in the administration, that is a settlement, of Green and reference to the alter ego of Black Hood.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://xmlns.com/foaf/0.1/name> ?v1 . <http://dbpedia.org/resource/Black_Hood> <http://dbpedia.org/property/alterEgo> ?v1 . ?v2 <http://dbpedia.org/property/leaderParty> ""Green""@en . ?result <http://dbpedia.org/ontology/state> ?v2 . }","```sparql
SELECT ?entity WHERE {
  ?admin <http://dbpedia.org/ontology/type> <http://dbpedia.org/resource/Settlement>.
  ?entity <http://dbpedia.org/ontology/administrativeUnit> ?admin.
  ?entity <http://www.w3.org/2000/01/rdf-schema#seeAlso> ?alterEgo.
  ?alterEgo rdfs:label ""Black Hood's alter ego""@en.
}
```",4,5,5,2,2,3,3,71,0,0,7,0,0.0,0
747,38,val,Give me the band of the writer of Apollo (Hardwell song) and band of the person born as Tracey Elizabeth McSween.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/property/birthName> ""Tracey Elizabeth McSween""@en . <http://dbpedia.org/resource/Apollo_(Hardwell_song)> <http://dbpedia.org/property/writer> ?v3 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
# Query to get the band of the writer of Apollo (Hardwell song)
SELECT ?writerBand WHERE {
  ?song dbpedia-owl:lyricsWrittenBy ?writer .
  ?writer foaf:name ""Apollo"" .
  ?writer dbo:musicGroup ?band .
  BIND(?band AS ?writerBand)
} UNION

# Query to get the band of Tracey Elizabeth McSween
SELECT ?personBand WHERE {
  ?person foaf:name ""Tracey Elizabeth McSween"" .
  ?person dbo:birthName ""Tracey Elizabeth McSween"" .
  ?person dbo:musicGroup ?band .
  BIND(?band AS ?personBand)
}
```",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
360,19,val,"Give me the writer of the work, that is an album, of Dave Flett and reference to Manfred Mann and native of Johannesburg.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Album>. ?v2 <http://dbpedia.org/property/author> ""Dave Flett""@en . ?v2 <http://dbpedia.org/property/writer> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Johannesburg> . ?result <http://xmlns.com/foaf/0.1/name> ""Manfred Mann""@en . }","```sparql
SELECT ?album ?writer WHERE {
  ?album <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalAlbum> .
  OPTIONAL { ?album <http://dbpedia.org/property/contributor> <http://dbpedia.org/resource/Dave_Flett> . }
  OPTIONAL { ?album <http://dbpedia.org/ontology/reference> <http://dbpedia.org/resource/Manfred_Mann> . }
  OPTIONAL {
    ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
    ?person <http://dbpedia.org/property/nationality> <http://dbpedia.org/resource/South_Africa> .
    ?person <http://dbpedia.org/ontology/placeOfBirth> <http://dbpedia.org/resource/Johannesburg> .
    ?album <http://dbpedia.org/property/contributor> ?person .
  }
  ?album <http://purl.org/dc/terms/creator> ?writer .
}
```",4,5,5,2,3,2,3,28,0,0,1,0,0.0,0
994,42,val,"Give me the associated musical artist of Red Tide (band) and band member of the person born, that is a musical artist, as Donald Maynard Dokken and associated musical artist of the associated musical artist of Watchtower (band).","SELECT ?result WHERE { <http://dbpedia.org/resource/Red_Tide_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/property/birthName> ""Donald Maynard Dokken""@en . <http://dbpedia.org/resource/Watchtower_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . }","```sparql
# Step 1: Find associated musical artist of Red Tide (band)
SELECT ?artist1 WHERE {
    <http://dbpedia.org/resource/Red_Tide_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?artist1 .
}

# Step 2: Find band member who is also a musical artist, specifically Donald Maynard Dokken
SELECT ?dokken WHERE {
    ?dokken <http://dbpedia.org/property/birth> ?birth .
    ?dokken <http://dbpedia.org/ontology/bandMember> ?band .
    FILTER (STRSTARTS(STR(?dokken), ""http://dbpedia.org/resource/Donald_Maynard_Dokken""))
}

# Step 3: Find associated musical artist of Watchtower (band)
SELECT ?artist2 WHERE {
    <http://dbpedia.org/resource/Watchtower_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?artist2 .
}

# Step 4: Find associated musical artist of the result from Step 3
SELECT ?finalArtist WHERE {
    ?artist2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?finalArtist .
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
251,13,val,"Give me the administration of Forza Italia (2013) and location of the war, that is a military conflict, of Louis François Félix Musnier.",SELECT ?result WHERE { <http://dbpedia.org/resource/Louis_François_Félix_Musnier> <http://dbpedia.org/ontology/battle> ?v1 . ?result <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Forza_Italia_(2013)> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/place> ?result . },"```sparql
# Query to get the administration of Forza Italia (2013)
SELECT ?administration WHERE {
  <http://dbpedia.org/resource/Forza_Italia_(2013)> <http://dbpedia.org/ontology/administration> ?administration .
}

# Query to find a war that is a military conflict involving Louis François Félix Musnier and its location
SELECT DISTINCT ?war ?location WHERE {
  <http://dbpedia.org/resource/Louis_François_Félix_Musnier> <http://dbpedia.org/ontology/battle> ?battle .
  ?battle <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
  ?battle <http://dbpedia.org/ontology/location> ?location .
  BIND(?battle AS ?war)
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
492,35,val,"Give me the person decedent at the capital, that is a settlement, of Algeria and person decedent at the work of US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . ?v2 <http://dbpedia.org/property/author> ""US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite""@en . <http://dbpedia.org/resource/Algeria> <http://dbpedia.org/ontology/capital> ?v1 . }","```sparql
SELECT ?person WHERE {
  # Find the capital of Algeria which is a settlement
  <http://dbpedia.org/resource/Algiers> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Capital>.
  <http://dbpedia.org/resource/Algiers> <http://www.w3.org/2000/01/rdf-schema#label> ""Algiers""@en.
  
  # Find person decedent at Algiers
  ?person <http://dbpedia.org/property/deathPlace> <http://dbpedia.org/resource/Algiers>.
  
  # Identify Joseph C. Satterthwaite's work location
  <http://dbpedia.org/resource/Joseph_C._Satterthwaite> <http://dbpedia.org/ontology/workLocation> ?workLocation.
  
  # Find person decedent at the same work location
  ?person <http://dbpedia.org/property/deathPlace> ?workLocation.
}
```",4,5,5,2,2,3,3,71,0,0,16,0,0.0,0
161,25,val,"Give me the military force of Spanish Civil War and commander in the force, that is an event, of Emilio Mola.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Emilio_Mola> . ?v1 <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"```sparql
SELECT ?force WHERE {
  ?force <http://dbpedia.org/ontology/event> <http://dbpedia.org/resource/Spanish_Civil_War>.
  ?force <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>.
  OPTIONAL { 
    ?force <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Emilio_Mola>. 
  }
}
```",3,4,4,2,2,3,3,71,0,0,32,0,0.0,0
801,28,val,Give me the producer of Westside Story (song) and associated musical artist of Chris Taylor (music producer) and professional in the alter ego of The Shadow.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Westside_Story_(song)> <http://dbpedia.org/ontology/producer> ?result . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 . <http://dbpedia.org/resource/Chris_Taylor_(music_producer)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
# Query for the producer of ""Westside Story"" (song)
SELECT ?producer WHERE {
  <http://dbpedia.org/resource/Westside_Story_(song)> dbo:producer ?producer .
}

UNION

# Query for the associated musical artist of Chris Taylor (music producer)
SELECT ?artist WHERE {
  <http://dbpedia.org/resource/Chris_Taylor_(music_producer)> foaf:worksFor|foaf:knows ?entity .
  ?entity dbo:musicalArtist ?artist .
}

UNION

# Query for the professional in the alter ego of The Shadow
SELECT ?professional WHERE {
  ?professional foaf:name ""The Shadow""@en ;
                rdf:type dbo:Person .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
981,11,val,Give me the entity in the region of Time in Indonesia and birth place of Novia Indriani Mamuaja.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v2 . ?v2 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Time_in_Indonesia> . <http://dbpedia.org/resource/Novia_Indriani_Mamuaja> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?entity WHERE {
  ?entity <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Time_(regency)> .
  OPTIONAL { 
    ?entity <http://dbpedia.org/property/birthPlace> <http://dbpedia.org/resource/Novia_Indriani_Mamuaja> .
  }
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
232,19,val,Give me the child of the person born as John Devon Roland Pertwee and actor of Dog Soldiers (film).,"SELECT ?result WHERE { <http://dbpedia.org/resource/Dog_Soldiers_(film)> <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://dbpedia.org/ontology/child> ?result . ?v0 <http://dbpedia.org/property/birthName> ""John Devon Roland Pertwee""@en . }","```sparql
SELECT ?person WHERE {
    # Step 1: Identify John Devon Roland Pertwee (Sean Pertwee)
    <http://dbpedia.org/resource/Sean_Pertwee> dbo:birthName ""John Devon Roland Pertwee"" .
    
    # Step 2: Retrieve his children
    ?child dbo:parent <http://dbpedia.org/resource/Sean_Pertwee> .

    # Step 3: Find actors of the film ""Dog Soldiers""
    ?actor dbo:film <http://dbpedia.org/resource/Dog_Soldiers_(2001_film)> .
    
    # Step 4: Look for intersection
    FILTER (?child = ?actor)
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
617,13,val,"Give me the child of the child, that is a royalty, of the parent of Mlada (abbess).",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> ?result . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Mlada_(abbess)> . ?v1 <http://dbpedia.org/ontology/parent> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
SELECT ?grandchild WHERE {
  ?parent <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Mlada_(abbess)> .
  ?child <http://dbpedia.org/ontology/birthParent> ?parent .
  ?grandchild <http://dbpedia.org/ontology/birthParent> ?child .
  ?grandchild <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
}
```",3,4,4,3,1,3,2,20,0,0,4,0,0.0,0
801,33,val,"Give me the professional in  and producer of the work, that is a musical work and a song and a work, of the professional, that is a musical artist, in Rapper.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/producer> ?result . ?v3 <http://dbpedia.org/property/writer> ?v0 . ?v0 <http://dbpedia.org/property/occupation> ""Rapper""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
SELECT ?producer WHERE {
  ?rapper rdf:type dbo:MusicalArtist ;
          dbo:musicalGenre dbr:Rapper .
  
  ?work dbo:artist ?rapper ;
        rdf:type dbo:Song ;
               dbo:MusicalWork ;
               dbo:Work .

  ?work dbo:producer ?producer .
}
```",4,8,5,3,2,3,3,71,0,0,473,0,0.0,0
959,38,val,"Give me the native of the residence, that is a country, of Yōichi Masuzoe and manager of the team of Takashi Sekizuka.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v0 <http://dbpedia.org/ontology/manager> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Yōichi_Masuzoe> <http://dbpedia.org/property/residence> ?v3 . ?v0 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Takashi_Sekizuka> . },"```sparql
SELECT ?nativeCountry
WHERE {
    # Step 1: Find the residence (country) of Yōichi Masuzoe
    <http://dbpedia.org/resource/Y%C5%8Dichi_Masuzoe> <http://dbpedia.org/ontology/residence> ?residence .
    
    # Ensure the residence is a country
    ?residence <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country> .

    # Step 2: Find the manager of the team associated with Takashi Sekizuka
    <http://dbpedia.org/resource/Takashi_Sekizuka> <http://dbpedia.org/ontology/team> ?team .
    ?manager <http://dbpedia.org/ontology/team> ?team .
    
    # Step 3: Determine the native country of the manager
    ?manager <http://dbpedia.org/property/nativePlace> ?nativeCountry .
}
```",4,5,5,2,2,3,3,71,0,0,6,0,0.0,0
959,34,val,"Give me the manager of 2013 Júbilo Iwata season and member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of the person born in 1958.","SELECT ?result WHERE { <http://dbpedia.org/resource/2013_Júbilo_Iwata_season> <http://dbpedia.org/ontology/manager> ?result . ?v3 <http://dbpedia.org/ontology/almaMater> ?v1 . ?result <http://dbpedia.org/ontology/team> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?v3 <http://dbpedia.org/ontology/birthYear> ""1958""^^<http://www.w3.org/2001/XMLSchema#gYear> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. }","```sparql
SELECT ?manager ?university WHERE {
    # Find the manager of the 2013 Júbilo Iwata season
    <http://dbpedia.org/resource/2013_Júbilo_Iwata_season> <http://dbpedia.org/ontology/coach> ?manager .
    
    # Ensure the person was born in 1958
    ?manager <http://dbpedia.org/property/birthYear> ""1958""^^<http://www.w3.org/2001/XMLSchema#gYear> .

    # Find the alma mater of this manager
    ?manager <http://dbpedia.org/ontology/almaMater> ?university .
    
    # Ensure the university is Japanese and qualifies as an organization, a university, and an educational institution
    ?university <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organization> ;
                <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University> ;
                <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalOrganization> .
    ?university <http://dbpedia.org/property/country> <http://dbpedia.org/resource/Japan> .
}
```",4,8,5,3,2,3,3,71,0,0,1,0,0.0,0
378,31,val,Give me the war of Joaquín Blake and war of the person born as the birth name of Carl Pontus Gahn.,SELECT ?result WHERE { <http://dbpedia.org/resource/Joaquín_Blake> <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
SELECT DISTINCT ?war WHERE {
  # War associated with Joaquín Blake
  { 
    <http://dbpedia.org/resource/Joaqu%C3%ADn_Blake> <http://dbpedia.org/ontology/battle> ?war .
  }
  
  UNION
  
  # Wars associated with the person born as Carl Pontus Gahn
  {
    <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/ontology/birthName> ?birthName .
    OPTIONAL { ?person <http://www.w3.org/2000/01/rdf-schema#label> ?birthName . }
    OPTIONAL { ?person <http://dbpedia.org/ontology/battle> ?war . }
  }
}
```",4,4,5,3,2,3,3,71,0,0,2,0,0.0,0
959,44,val,"Give me the manager of the team of Takashi Sekizuka and native of the residence, that is a country, of Yōichi Masuzoe and member of University of Tsukuba.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/University_of_Tsukuba> . ?result <http://dbpedia.org/ontology/birthPlace> ?v4 . <http://dbpedia.org/resource/Yōichi_Masuzoe> <http://dbpedia.org/property/residence> ?v4 . ?v0 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Takashi_Sekizuka> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://dbpedia.org/ontology/manager> ?result . },"```sparql
# Step 1: Find the team managed by Takashi Sekizuo
SELECT ?team WHERE {
    <http://dbpedia.org/resource/Takashi_Sekizuo> <http://dbpedia.org/ontology/team> ?team .
}

# Step 2: Identify the manager of that team
SELECT ?manager WHERE {
    ?team <http://dbpedia.org/ontology/manager> ?manager .
}

# Step 3: Determine the residence (country) of Yōichi Masuzoe
SELECT ?country WHERE {
    <http://dbpedia.org/resource/Y%C5%8Dichi_Masuzoe> <http://dbpedia.org/property/residence> ?residence .
    ?residence <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country> ;
               <http://dbpedia.org/ontology/name> ?country .
}

# Step 4: Find a member of University of Tsukuba from that country
SELECT ?member WHERE {
    ?member <http://dbpedia.org/ontology/memberOf> <http://dbpedia.org/resource/University_of_Tsukuba> ;
            <http://dbpedia.org/ontology/nationality> ?country .
}

# Combine the results to find the manager who is also a member of University of Tsukuba from Yōichi Masuzoe's country
SELECT DISTINCT ?manager WHERE {
    # Manager of Takashi Sekizuo's team
    ?team <http://dbpedia.org/ontology/team> ?takashiTeam .
    ?takashiTeam <http://dbpedia.org/ontology/manager> ?manager .

    # Country of Yōichi Masuzoe's residence
    <http://dbpedia.org/resource/Y%C5%8Dichi_Masuzoe> <http://dbpedia.org/property/residence> ?residence .
    ?residence <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country> ;
               <http://dbpedia.org/ontology/name> ?country .

    # Member of University of Tsukuba from that country
    ?member <http://dbpedia.org/ontology/memberOf> <http://dbpedia.org/resource/University_of_Tsukuba> ;
            <http://dbpedia.org/ontology/nationality> ?country .
    
    FILTER (?manager = ?member)
}
```",5,6,6,2,3,3,3,71,0,0,2,0,0.0,0
182,12,val,Give me the war of Mahesh Senanayake and entity in Sri Lanka and war of Jagath Dias.,SELECT ?result WHERE { <http://dbpedia.org/resource/Mahesh_Senanayake> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Jagath_Dias> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Sri_Lanka> . },"```sparql
# Step 1: Get wars associated with Mahesh Senanayake
SELECT ?war WHERE {
    <http://dbpedia.org/resource/Mahesh_Senanayake> <http://dbpedia.org/ontology/battle> ?war .
}

# Step 2: Get wars associated with Jagath Dias
SELECT ?war WHERE {
    <http://dbpedia.org/resource/Jagath_Dias> <http://dbpedia.org/ontology/battle> ?war .
}

# Step 3: Find common war between Mahesh Senanayake and Jagath Dias
SELECT DISTINCT ?commonWar WHERE {
    { <http://dbpedia.org/resource/Mahesh_Senanayake> <http://dbpedia.org/ontology/battle> ?commonWar . }
    UNION
    { <http://dbpedia.org/resource/Jagath_Dias> <http://dbpedia.org/ontology/battle> ?commonWar . }
}

# Step 4: Get entities in Sri Lanka related to Mahesh Senanayake
SELECT ?entity WHERE {
    <http://dbpedia.org/resource/Mahesh_Senanayake> <http://dbpedia.org/property/residence> ?entity .
    FILTER (STRSTARTS(STR(?entity), ""http://dbpedia.org/resource/Sri_Lanka""))
}
```",3,3,4,1,3,2,3,28,0,0,1,0,0.0,0
488,27,val,"Give me the administration of the father of the spouse, that is a royalty, of Tokugawa Masako.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Tokugawa_Masako> . ?v1 <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/property/leader> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
SELECT ?administration WHERE {
  # Step 1: Identify Tokugawa Masako's spouse
  <http://dbpedia.org/resource/Tokugawa_Masako> <http://dbpedia.org/ontology/spouse> ?spouse .

  # Step 2: Check if the spouse is royalty
  ?spouse <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .

  # Step 3: Find the father of that spouse
  ?spouse <http://dbpedia.org/property/father> ?father .

  # Step 4: Retrieve the administration associated with that father
  ?father <http://dbpedia.org/ontology/administration> ?administration .
}
```",3,4,4,3,1,3,3,71,0,0,2,0,0.0,0
232,20,val,"Give me the actor of the claim to fame, that is a film and a military conflict, of Sean Pertwee and child of Jon Pertwee.",SELECT ?result WHERE { <http://dbpedia.org/resource/Sean_Pertwee> <http://dbpedia.org/ontology/knownFor> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/ontology/child> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v2 <http://dbpedia.org/ontology/starring> ?result . },"```sparql
SELECT ?filmConflict ?actor WHERE {
  ?filmConflict rdf:type dbo:MilitaryConflict .
  ?filmConflict rdf:type dbo:Film .
  dbp:PertweeSean knownFor ?filmConflict .
  
  OPTIONAL { ?filmConflict dbo:starring ?actor . }
  
  dbp:PertweeSean dbo:childOf dbp:PertweeJon .
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
328,26,val,Give me the commander in the force of the person decedent at Budapest.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Budapest> . ?v2 <http://dbpedia.org/ontology/commander> ?v1 . },"```sparql
SELECT ?commander WHERE {
  ?person <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Budapest> .
  ?person <http://dbpedia.org/ontology/militaryForce> ?force .
  ?force <http://dbpedia.org/ontology/commander> ?commander .
}
```",3,3,4,3,1,3,3,71,0,0,306,0,0.0,0
16,25,val,Give me the professional in Actress and person born as the birth name of Gigi Rice.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Gigi_Rice> <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/property/occupation> ""Actress""@en . ?result <http://dbpedia.org/property/birthName> ?v1 . }","```sparql
SELECT ?result WHERE {
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Actress>.
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>.
  ?result <http://dbpedia.org/property/birthName> ""Gigi Rice"" .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
232,32,val,"Give me the actor of the claim to fame, that is a film and a military conflict, of Sean Pertwee and child of the person born as John Devon Roland Pertwee.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Sean_Pertwee> <http://dbpedia.org/ontology/knownFor> ?v3 . ?v1 <http://dbpedia.org/property/birthName> ""John Devon Roland Pertwee""@en . ?v1 <http://dbpedia.org/ontology/child> ?result . }","```sparql
SELECT ?film ?actor WHERE {
  ?film <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>.
  ?film <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>.
  <http://dbpedia.org/resource/Sean_Pertwee> <http://dbpedia.org/ontology/knownFor> ?film.
  
  OPTIONAL {
    ?film <http://dbpedia.org/ontology/starring> ?actor.
    ?actor <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>.
    ?actor <http://dbpedia.org/property/birthName> ""John Devon Roland Pertwee""^^<http://www.w3.org/2001/XMLSchema#string>.
  }
}
```",4,6,5,2,2,3,3,71,0,1,1,0.0,0.0,0
767,42,val,"Give me the entity in the administration, that is a settlement, of Green and reference to the alter ego of Black Hood and alma mater of Carl L. Nippert.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/state> ?v2 . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . <http://dbpedia.org/resource/Carl_L._Nippert> <http://dbpedia.org/ontology/almaMater> ?result . ?v2 <http://dbpedia.org/property/leaderParty> ""Green""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Black_Hood> <http://dbpedia.org/property/alterEgo> ?v1 . }","```sparql
SELECT ?entity WHERE {
  ?entity <http://dbpedia.org/ontology/administrativeUnit> ?green.
  ?green <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>.
  
  ?entity <http://dbpedia.org/property/referenceToAlterEgo> <http://dbpedia.org/resource/Black_Hood>.
  
  ?entity <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/C._L._Nippert>.
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
747,22,val,Give me the band of the person born as Tracey Elizabeth McSween and person born on 1985-04-29.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ""Tracey Elizabeth McSween""@en . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/birthDate> ""1985-04-29""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/birthName> ""Tracey Elizabeth McSween"" .
  ?person <http://dbpedia.org/ontology/birthDate> ""1985-04-29""^^<http://www.w3.org/2001/XMLSchema#date> .
}

SELECT ?band WHERE {
  ?person <http://dbpedia.org/property/memberOfBand> ?band .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
404,29,val,"Give me the child of Ernest Augustus, Crown Prince of Hanover and parent of the child, that is a royalty, of Ernest Augustus, Duke of Brunswick and spouse of Princess Victoria Louise of Prussia.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ernest_Augustus,_Crown_Prince_of_Hanover> . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/ontology/child> ?v3 . ?result <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
SELECT ?child ?parent WHERE {
  ?child <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/Ernest_Augustus,_Crown_Prince_of_Hanover>.
  ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>.
  OPTIONAL { ?child <http://dbpedia.org/ontology/birthParent> ?parent. }
  FILTER EXISTS {
    ?child <http://dbpedia.org/property/spouse> <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia>.
  }
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
659,26,val,"Give me the commander in the war, that is an event and a military conflict, of the figure known, that is a military unit and an organisation, as 'Polish Horse'.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v1 <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/property/nickname> ""'Polish Horse'""@en . ?v2 <http://dbpedia.org/ontology/commander> ?result . }","```sparql
SELECT ?commander WHERE {
  ?figure <http://dbpedia.org/ontology/knows> ""Polish Horse"" .
  ?figure <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit> .
  ?figure <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation> .

  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event> .

  ?figure <http://dbpedia.org/property/battle> ?war .
  
  ?war <http://dbpedia.org/ontology/commander> ?commander .
}
```",3,7,4,3,1,3,3,71,0,0,130,0,0.0,0
747,31,val,"Give me the person born on the birth date of the person decedent, that is an athlete and a soccer player, at Zolotonosha and band of Amba Shepherd.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?result <http://dbpedia.org/ontology/birthDate> ?v0 . ?v1 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Zolotonosha> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Amba_Shepherd> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/ontology/birthDate> ?v0 . },"```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/sport> <http://dbpedia.org/resource/Soccer>.
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>.

  ?decedent <http://dbpedia.org/ontology/deathPlace> ?place.
  ?decedent <http://dbpedia.org/property/birthDate> ?birthDate.
  ?decedent <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>.

  FILTER(?place = <http://dbpedia.org/resource/Zolotonosha>).

  ?person <http://dbpedia.org/property/birthDate> ?birthDate.

  ?band <http://dbpedia.org/ontology/member> ?person.
  ?band <http://www.w3.org/2000/01/rdf-schema#label> ""Amba Shepherd""@en.
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
701,39,val,"Give me the parent of Henuttawy (19th dynasty) and spouse of the father of the commander, that is a royalty, in Battle of Perire.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Battle_of_Perire> <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Henuttawy_(19th_dynasty)> . ?result <http://dbpedia.org/ontology/spouse> ?v1 . },"```sparql
SELECT ?parent ?spouse WHERE {
  # Step 1: Get Henuttawy (19th dynasty) and her parent
  <http://dbpedia.org/resource/Henuttawy_(19th_dynasty)> <http://www.w3.org/2000/01/rdf-schema#parent> ?parent .

  # Step 2: Get the commander in the Battle of Perire
  <http://dbpedia.org/resource/Battle_of_Perire> <http://dbpedia.org/ontology/commander> ?commander .

  # Step 3: Find the father of that commander
  ?father <http://www.w3.org/2000/01/rdf-schema#child> ?commander .

  # Step 4: Identify the spouse of the father
  ?father <http://dbpedia.org/ontology/spouse> ?spouse .

  # Step 5: Ensure the spouse is a royalty
  ?spouse <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
696,15,val,"Give me the landmark at elevation of 50 and birth place of the member of the associated musical artist, that is an organisation and a group and a band, of The Boils.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/The_Boils> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?result <http://dbpedia.org/ontology/elevation> ""50""^^<http://www.w3.org/2001/XMLSchema#integer> . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/ontology/bandMember> ?v1 . }","```sparql
SELECT ?landmark ?birthPlace WHERE {
  ?landmark <http://dbpedia.org/ontology/elevation> ""50""^^<http://www.w3.org/2001/XMLSchema#float> .

  ?member <http://dbpedia.org/ontology/memberOf> <http://dbpedia.org/resource/The_Boils> .
  ?member <http://dbpedia.org/property/associatedMusicalArtist> ?artist .

  ?artist <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation> .
  ?artist <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalGroup> .
  ?artist <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band> .

  ?member <http://dbpedia.org/property/birthPlace> ?birthPlace .
}
```",4,7,5,3,2,3,2,20,0,0,1,0,0.0,0
404,42,val,"Give me the spouse of the person born, that is a royalty, as Princess Victoria Louise of Prussia and child of the father of Ernest Augustus, Duke of Brunswick and parent of Prince Ernest Augustus of Hanover (born 1914).","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/parent> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/birthName> ""Princess Victoria Louise of Prussia""@en . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Prince_Ernest_Augustus_of_Hanover_(born_1914)> . <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/property/father> ?v1 . }","```sparql
SELECT ?spouse WHERE {
  ?person <http://dbpedia.org/ontology/birthName> ""Princess Victoria Louise of Prussia"" .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
  ?person <http://dbpedia.org/property/spouse> ?spouse .
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
345,13,val,"Give me the figure known as the nickname of the player, that is a sports club and an organisation and a soccer club, in Armando Heeb.",SELECT ?result WHERE { <http://dbpedia.org/resource/Armando_Heeb> <http://dbpedia.org/ontology/team> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?result <http://dbpedia.org/property/nickname> ?v1 . ?v0 <http://dbpedia.org/property/nickname> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. },"```sparql
SELECT ?result WHERE {
  ?club <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>.
  ?club <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>.
  ?club <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>.
  <http://dbpedia.org/resource/Armando_Heeb> <http://dbpedia.org/property/team> ?club.
  ?club <http://dbpedia.org/ontology/nickname> ?result.
}
```",3,6,4,3,1,3,2,20,0,0,1,0,0.0,0
492,29,val,"Give me the commander in the war, that is a military conflict and an event, of Frédéric-Georges Herr and person decedent at Algiers and person decedent at French Algeria.",SELECT ?result WHERE { <http://dbpedia.org/resource/Frédéric-Georges_Herr> <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/French_Algeria> . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Algiers> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
SELECT ?commander WHERE {
  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>.
  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>.
  ?war <http://dbpedia.org/ontology/commander> ?commander.
  
  OPTIONAL { 
    ?commander <http://dbpedia.org/property/deathPlace> <http://dbpedia.org/resource/Algiers> .
  }
  OPTIONAL {
    ?commander <http://dbpedia.org/property/deathPlace> <http://dbpedia.org/resource/French_Algeria> .
  }

  FILTER EXISTS { 
    ?war <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Frédéric-Georges_Herr> .
  }
}
```",4,6,5,2,3,3,3,71,0,17,1,0.0,0.0,0
184,29,val,Give me the child of the child of Archduke Joseph Karl of Austria and parent of Géza von Habsburg and parent of Archduchess Ilona of Austria.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v3 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Ilona_of_Austria> . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Karl_of_Austria> . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Géza_von_Habsburg> . },"```sparql
SELECT ?grandchild WHERE {
  ?parent <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Archduke_Joseph_Karl_of_Austria> .
  ?parent <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Human> .
  ?child <http://dbpedia.org/ontology/birthParent> ?parent .
  ?grandchild <http://dbpedia.org/ontology/birthParent> ?child .
  
  ?grandchild <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Human> .
  ?grandchild <http://dbpedia.org/ontology/spouse> ?spouse .
  
  ?géza <http://dbpedia.org/ontology/birthParent> ?grandchild .
  ?ilona <http://dbpedia.org/ontology/birthParent> ?grandchild .

  FILTER(?géza = <http://dbpedia.org/resource/G%C3%A9za_von_Habsburg>)
  FILTER(?ilona = <http://dbpedia.org/resource/Archduchess_Ilona_of_Austria>)
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
9,21,val,"Give me the figure known as QUB and alma mater of the mayor, that is a politician, of Northern Ireland Forum.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/property/nickname> ""QUB""@en . ?v1 <http://dbpedia.org/ontology/almaMater> ?result . <http://dbpedia.org/resource/Northern_Ireland_Forum> <http://dbpedia.org/property/leader> ?v1 . }","```sparql
SELECT ?mayor ?almaMater ?figureKnownAsQUB WHERE {
  ?mayor <http://dbpedia.org/ontology/politician> true .
  ?mayor <http://dbpedia.org/property/mayorOf> <http://dbpedia.org/resource/Northern_Ireland_Forum> .
  ?mayor <http://dbpedia.org/ontology/almaMater> ?almaMater .
  OPTIONAL { ?figureKnownAsQUB <http://www.w3.org/2000/01/rdf-schema#label> ""Queen's University Belfast""@en . }
  FILTER(?almaMater = ?figureKnownAsQUB)
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
778,11,val,Give me the author of Chroot and entity in the award of Ralph L. Brinster.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ralph_L._Brinster> <http://dbpedia.org/property/awards> ?v2 . <http://dbpedia.org/resource/Chroot> <http://dbpedia.org/ontology/author> ?result . ?result <http://dbpedia.org/ontology/location> ?v2 . },"```sparql
# Query 1: Author of Chroot
SELECT ?author WHERE {
    <http://dbpedia.org/resource/Chroot> <http://purl.org/dc/terms/creator> ?author .
}

# Query 2: Entity in Award of Ralph L. Brinster
SELECT ?entity WHERE {
    <http://dbpedia.org/resource/Ralph_L._Brinster> <http://dbpedia.org/ontology/award> ?award .
    ?award ?p ?entity .
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
16,40,val,Give me the professional in Actress and spouse of the person born as the birth name of Ted McGinley and person born as Georgeanne Marie Rice.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Actress""@en . ?v1 <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/property/birthName> ?v2 . ?v1 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/birthName> ""Georgeanne Marie Rice""@en . }","```sparql
SELECT ?spouse WHERE {
  # Ted McGinley's spouse who is an actress
  OPTIONAL {
    <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/ontology/spouse> ?spouse1 .
    ?spouse1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Actress> .
  }

  # Georgeanne Marie Rice's spouse who is an actress
  OPTIONAL {
    <http://dbpedia.org/resource/Georgeanne_Marie_Rice> <http://dbpedia.org/ontology/spouse> ?spouse2 .
    ?spouse2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Actress> .
  }

  # Return the spouse if they match both conditions
  FILTER (?spouse1 = ?spouse2)
  BIND(?spouse1 AS ?spouse)
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
994,22,val,"Give me the band member of the person born, that is a musical artist, as Donald Maynard Dokken and associated musical artist of S.A. Slayer.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ""Donald Maynard Dokken""@en . <http://dbpedia.org/resource/S.A._Slayer> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
SELECT ?bandMember WHERE {
  ?person <http://dbpedia.org/ontology/birthName> ""Donald Maynard Dokken"" .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
  ?association <http://dbpedia.org/property/associatedMusicalArtist> <http://dbpedia.org/resource/S.A._Slayer> .
  ?association <http://dbpedia.org/property/memberOf> ?band .
  ?person <http://dbpedia.org/ontology/memberOf> ?band .
  ?band <http://dbpedia.org/ontology/member> ?bandMember .
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
659,39,val,"Give me the commander in Battle of Leipzig and military force of the force, that is a societal event and an event and a military conflict, of the reference to Rutger Jan Schimmelpenninck.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Battle_of_Leipzig> <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Rutger Jan Schimmelpenninck""@en . ?v1 <http://dbpedia.org/ontology/commander> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. }","```sparql
SELECT ?commander WHERE {
  ?event <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>.
  ?event <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>.
  ?event <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>.
  <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> <http://dbpedia.org/property/referenceTo> ?event.
  
  ?force <http://dbpedia.org/ontology/event> ?event.
  <http://dbpedia.org/resource/Battle_of_Leipzig> <http://dbpedia.org/ontology/commander> ?commander.
}
```",4,7,5,3,2,3,3,71,0,0,6,0,0.0,0
959,36,val,"Give me the member of University of Tsukuba and manager of the team of the manager, that is a sports manager, of 1998 Kashima Antlers season.",SELECT ?result WHERE { <http://dbpedia.org/resource/1998_Kashima_Antlers_season> <http://dbpedia.org/ontology/manager> ?v3 . ?result <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/University_of_Tsukuba> . ?v0 <http://dbpedia.org/ontology/manager> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v0 <http://dbpedia.org/ontology/manager> ?v3 . },"```sparql
SELECT ?member WHERE {
    # Step 1: Identify the manager of the 1998 Kashima Antlers season
    ?season dbpedia-owl:manager ?manager .
    FILTER(?season = <http://dbpedia.org/resource/1998_Kashima_Antlers_season>) .

    # Step 2: Ensure this person is a sports manager
    ?manager rdf:type <http://dbpedia.org/ontology/SportsManager> .

    # Step 3: Find out which team they manage
    ?manager dbpedia-owl:teamManaged ?team .

    # Step 4: Identify the manager of that team
    ?team dbpedia-owl:manager ?subManager .

    # Step 5: Find members associated with both University of Tsukuba and this sub-manager
    ?member dbpedia-owl:almaMater <http://dbpedia.org/resource/University_of_Tsukuba> .
    ?member dbpedia-owl:team ?subTeam .
    ?subTeam dbpedia-owl:manager ?subManager .
}
```",4,5,5,3,2,3,3,71,0,0,2,0,0.0,0
92,34,val,"Give me the band member of the reference, that is an artist, to the name of Nevermore (2006 film) and band of Joseph Michael.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://xmlns.com/foaf/0.1/name> ?v2 . ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Joseph_Michael> . <http://dbpedia.org/resource/Nevermore_(2006_film)> <http://xmlns.com/foaf/0.1/name> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"```sparql
SELECT ?bandMember WHERE {
    ?film rdfs:label ""Nevermore (2006 film)""@en .
    ?film dbo:reference ?artist .
    ?artist a dbo:Artist .

    ?person rdfs:label ""Joseph Michael""@en .
    ?person dbo:band ?band .

    ?artist dbo:member ?bandMember .
    ?band dbo:member ?bandMember .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
701,30,val,Give me the parent of Meritamen and spouse of the father of Merneptah and parent of Henuttawy (19th dynasty).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v1 . <http://dbpedia.org/resource/Merneptah> <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Henuttawy_(19th_dynasty)> . <http://dbpedia.org/resource/Meritamen> <http://dbpedia.org/ontology/parent> ?result . },"SELECT ?person WHERE {
  ?meritamen <http://dbpedia.org/ontology/birthParent> ?person .
  ?merneptah <http://dbpedia.org/ontology/father> ?ramessesII .
  ?ramessesII <http://dbpedia.org/property/spouse> ?person .
  ?henuttawy <http://dbpedia.org/ontology/birthParent> ?person .
  FILTER (STRSTARTS(STR(?meritamen), ""http://dbpedia.org/resource/Meritamen""))
  FILTER (STRSTARTS(STR(?merneptah), ""http://dbpedia.org/resource/Merenptah""))
  FILTER (STRSTARTS(STR(?henuttawy), ""http://dbpedia.org/resource/Henuttawy_(19th_dynasty)""))
}",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
488,37,val,"Give me the administration of Emperor Go-Yōzei and death place of the father, that is a politician, of the father, that is an office holder, of Matsudaira Tadamasa.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Matsudaira_Tadamasa> <http://dbpedia.org/property/father> ?v0 . ?v3 <http://dbpedia.org/ontology/deathPlace> ?result . ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Emperor_Go-Yōzei> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
SELECT ?administration ?deathPlace WHERE {
  # Find Matsudaira Tadamasa's father
  ?father dbo:child <http://dbpedia.org/resource/Matsudaira_Tadamasa> .
  
  # Check if the father is a politician and an office holder
  ?father dbo:occupation dbp:Politician ;
          dbo:officeHolder true .

  # Find the death place of Matsudaira Tadamasa's grandfather (father's father)
  ?grandfather dbo:child ?father .
  ?deathEvent dbo:place ?deathPlace ;
              dbo:agent ?grandfather ;
              rdf:type dbo:Death .
  
  # Identify Emperor Go-Yōzei's administration
  <http://dbpedia.org/resource/Emperor_Go-Yōzei> dbo:reignStart ?start ;
                                                dbo:reignEnd ?end .
  ?administration dbo:startDate ?start ;
                  dbo:endDate ?end ;
                  dbo:monarch <http://dbpedia.org/resource/Emperor_Go-Yōzei> .
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
92,32,val,"Give me the band member of the reference, that is an artist, to Nevermore and associated musical artist of the person born, that is an artist, as Jim Sheppard.","SELECT ?result WHERE { ?v1 <http://xmlns.com/foaf/0.1/name> ""Nevermore""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v3 <http://dbpedia.org/property/birthName> ""Jim Sheppard""@en . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
SELECT ?person WHERE {
  ?nevermore <http://dbpedia.org/ontology/member> ?person .
  ?nevermore <http://dbpedia.org/property/reference> ?reference .
  ?reference <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist> .

  ?person <http://dbpedia.org/ontology/associatedMusicalArtist> ?artist .
  ?artist <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist> .

  ?person <http://dbpedia.org/property/birthName> ""Jim Sheppard""^^<http://www.w3.org/2001/XMLSchema#string> .
}
```",4,6,5,2,2,3,3,71,0,0,1,0,0.0,0
528,39,val,Give me the war of Orozimbo Barbosa and force of the person born as the birth name of Narciso Campero.,SELECT ?result WHERE { <http://dbpedia.org/resource/Narciso_Campero> <http://dbpedia.org/property/birthName> ?v0 . ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?result <http://dbpedia.org/ontology/commander> ?v1 . <http://dbpedia.org/resource/Orozimbo_Barbosa> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
# Query to get the war associated with Orozimbo Barbosa
SELECT ?war WHERE {
  <http://dbpedia.org/resource/Orozimbo_Barbosa> <http://dbpedia.org/ontology/battle> ?war .
}

# Query to get the force of Narciso Campero by his birth name
SELECT ?force WHERE {
  # Find the birth name of Narciso Campero
  OPTIONAL { 
    <http://dbpedia.org/resource/Narciso_Campero> <http://dbpedia.org/ontology/birthName> ?birthName .
  }
  
  # Use the birth name to find the force he was part of
  ?person <http://www.w3.org/2000/01/rdf-schema#label> ?birthName .
  ?person <http://dbpedia.org/property/militaryForce> ?force .
}
```",4,4,5,3,2,3,3,71,0,0,2,0,0.0,0
534,15,val,"Give me the headquarter of Royal Dublin Society and birth place of the child, that is a politician and an office holder, of the native, that is a politician, of Essex.",SELECT ?result WHERE { <http://dbpedia.org/resource/Royal_Dublin_Society> <http://dbpedia.org/ontology/headquarter> ?result . ?v0 <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Essex> . },"```sparql
SELECT ?birthPlace ?headquarters WHERE {
  # Step 1: Find politicians native to Essex
  ?politician a dbo:Politician ;
              dbo:nativePlace dbr:Essex .

  # Step 2: Find their children who are both politicians and office holders
  ?child dbo:parent ?politician ;
         a dbo:Politician, dbo:OfficeHolder .
  
  # Step 3: Get the birthplace of these children
  ?child dbo:birthPlace ?birthPlace .

  # Step 4: Find the headquarters of Royal Dublin Society
  dbr:Royal_Dublin_Society dbo:headquarters ?headquarters .
}
```",4,7,5,3,2,3,2,20,0,0,1,0,0.0,0
701,34,val,Give me the parent of the child of the spouse of Amun-her-khepeshef and spouse of Ramesses II.,SELECT ?result WHERE { <http://dbpedia.org/resource/Amun-her-khepeshef> <http://dbpedia.org/ontology/spouse> ?v2 . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Ramesses_II> . ?v2 <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/ontology/parent> ?result . },"```sparql
SELECT ?parent WHERE {
    ?spouse1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Amun-her-khepeshef> .
    ?child <http://dbpedia.org/ontology/birthParent> ?spouse1 .
    ?spouse2 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Ramesses_II> .
    ?parent <http://dbpedia.org/ontology/birthParent> ?child .
    FILTER (?parent = ?spouse2)
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
747,29,val,Give me the band of the writer of Apollo (Hardwell song) and person born on 1985-04-29 and band of Shèna.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthDate> ""1985-04-29""^^<http://www.w3.org/2001/XMLSchema#date> . <http://dbpedia.org/resource/Shèna> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Apollo_(Hardwell_song)> <http://dbpedia.org/property/writer> ?v3 . }","```sparql
# Find the band of the writer of Apollo (Hardwell song)
SELECT ?band1 WHERE {
  ?song dbp:lyricsBy ?writer .
  ?song rdfs:label ""Apollo (Hardwell song)""@en .
  ?writer dbo:band ?band1 .
}

UNION

# Find the band of a person born on 1985-04-29
SELECT ?band2 WHERE {
  ?person dbo:birthday ""1985-04-29""^^xsd:date .
  ?person dbo:band ?band2 .
}

UNION

# Find the band of Shèna
SELECT ?band3 WHERE {
  ?shena rdfs:label ""Shèna""@en .
  ?shena dbo:band ?band3 .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
179,14,val,Give me the parent of the child of the parent of Vajiralongkorn.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Vajiralongkorn> . ?v0 <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://dbpedia.org/ontology/child> ?v0 . },"```sparql
SELECT ?grandparent WHERE {
  # Step 1: Find Vajiralongkorn's parent
  <http://dbpedia.org/resource/Vajiralongkorn> <http://xmlns.com/foaf/0.1/family_name> ?vajiralongkorn.
  ?vajiralongkorn <http://dbpedia.org/ontology/birthParent> ?parent.

  # Step 2: Find the child of Vajiralongkorn's parent (Vajiralongkorn himself)
  ?parent <http://dbpedia.org/ontology/birthChild> ?child.
  
  # Step 3: Find the parent of this child (again, Vajiralongkorn's parent)
  ?child <http://dbpedia.org/ontology/birthParent> ?same_parent.

  # Step 4: Find the parent of this last identified person
  ?same_parent <http://dbpedia.org/ontology/birthParent> ?grandparent.
}
```",3,3,4,3,1,3,2,20,0,0,3,0,0.0,0
9,32,val,"Give me the alma mater of the awardee of Royal Medal and alma mater of the mayor, that is a politician, of Northern Ireland Forum.",SELECT ?result WHERE { <http://dbpedia.org/resource/Northern_Ireland_Forum> <http://dbpedia.org/property/leader> ?v1 . ?v1 <http://dbpedia.org/ontology/almaMater> ?result . ?v3 <http://dbpedia.org/ontology/almaMater> ?result . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Medal> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
SELECT DISTINCT ?almaMater
WHERE {
  # Find the alma mater of an awardee of the Royal Medal
  ?awardee dbpedia-owl:award <http://dbpedia.org/resource/Royal_Medal> .
  ?awardee dbpedia-owl:almaMater ?almaMater .

  # Find the alma mater of a politician who was mayor of Northern Ireland Forum
  ?politician rdf:type dbo:Politician ;
              dbo:mayorOf <http://dbpedia.org/resource/Northern_Ireland_Forum> .
  ?politician dbpedia-owl:almaMater ?sameAlmaMater .

  # Ensure the alma maters are the same
  FILTER (?almaMater = ?sameAlmaMater)
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
747,44,val,Give me the band of the person born as Tracey Elizabeth McSween and band of the writer of Apollo (Hardwell song) and person born on 1985-04-29.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/property/birthName> ""Tracey Elizabeth McSween""@en . <http://dbpedia.org/resource/Apollo_(Hardwell_song)> <http://dbpedia.org/property/writer> ?v4 . ?result <http://dbpedia.org/ontology/birthDate> ""1985-04-29""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
# Query for the band of Tracey Elizabeth McSween
SELECT ?band WHERE {
    ?person foaf:name ""Tracey Elizabeth McSween""@en .
    ?person dbo:birthName ""Tracey Elizabeth McSween""@en .
    ?person dbo:memberOfBand ?band .
}

UNION

# Query for the band of the writer of Apollo (Hardwell song)
SELECT ?band WHERE {
    ?song dbo:title ""Apollo""@en ;
          dbo:lyricsBy ?writer .
    ?writer dbo:memberOfBand ?band .
    FILTER(STRSTARTS(?song, ""http://dbpedia.org/resource/Apollo_(Hardwell_song)""))
}

UNION

# Query for the band of a person born on 1985-04-29
SELECT ?band WHERE {
    ?person dbo:birthday ""1985-04-29""^^xsd:date .
    ?person dbo:memberOfBand ?band .
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
528,33,val,Give me the war of Irene Morales and war of the commander in the work of --01-09.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/author> ""--01-09""^^<http://www.w3.org/2001/XMLSchema#gMonthDay> . ?v3 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Irene_Morales> <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/ontology/commander> ?v3 . }","```sparql
# Query for the war associated with Irene Morales
SELECT ?war WHERE {
  <http://dbpedia.org/resource/Irene_Morales> <http://dbpedia.org/ontology/knownFor> ?war .
  ?war a <http://dbpedia.org/ontology/MilitaryConflict> .
}

UNION

# Query for the war associated with the commander of a work dated --01-09
SELECT ?war WHERE {
  ?work <http://purl.org/dc/terms/date> ""----01-09""^^xsd:date .
  ?work <http://dbpedia.org/ontology/commander> ?commander .
  ?commander <http://dbpedia.org/ontology/battle> ?war .
  ?war a <http://dbpedia.org/ontology/MilitaryConflict> .
}
```",4,4,5,3,2,3,3,71,0,0,2,0,0.0,0
915,13,val,"Give me the resident of the birthplace, that is a settlement, of the director of Pipe Dreams (1976 film).",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> ?v1 . ?result <http://dbpedia.org/ontology/residence> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Pipe_Dreams_(1976_film)> <http://dbpedia.org/ontology/director> ?v0 . },"```sparql
SELECT ?resident WHERE {
  ?film <http://dbpedia.org/ontology/director> ?director .
  ?director <http://dbpedia.org/property/birthPlace> ?birthPlace .
  ?birthPlace <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement> .
  ?film <http://dbpedia.org/ontology/title> ""Pipe Dreams""@en .
  FILTER(year(?film) = 1976)
  ?birthPlace <http://dbpedia.org/property/resident> ?resident .
}
```",3,4,4,3,1,3,2,20,0,0,15,0,0.0,0
498,7,val,"Give me the band of Will Rahmer and band of the band, that is an organisation and a band, of Solace of Requiem.",SELECT ?result WHERE { <http://dbpedia.org/resource/Will_Rahmer> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. <http://dbpedia.org/resource/Solace_of_Requiem> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . },"```sparql
# Query to find the band of Will Rahmer
SELECT ?band WHERE {
  <http://dbpedia.org/resource/Will_Rahmer> <http://dbpedia.org/ontology/memberOf> ?band .
}

# Query to find the band of Solace of Requiem and then the band associated with it
SELECT ?finalBand WHERE {
  # Find the band of Solace of Requiem
  ?solaceBand <http://dbpedia.org/ontology/memberOf> <http://dbpedia.org/resource/Solace_of_Requiem> .
  
  # Ensure the band is an organization and a band
  ?solaceBand <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation> .
  ?solaceBand <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band> .

  # Find the band associated with Solace of Requiem's band
  ?solaceBand <http://dbpedia.org/ontology/memberOf> ?finalBand .
  
  # Ensure the final band is an organization and a band
  ?finalBand <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation> .
  ?finalBand <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band> .
}
```",3,5,4,2,2,2,2,9,0,0,1,0,0.0,0
392,15,val,"Give me the entity in the region, that is a country, of Central European Time and province of Schio.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v1 . <http://dbpedia.org/resource/Schio> <http://dbpedia.org/ontology/province> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . },"```sparql
SELECT ?entity WHERE {
  ?region <http://dbpedia.org/ontology/country> ?country .
  ?country <http://www.w3.org/2006/time#during> ?timeZone .
  ?timeZone <http://www.w3.org/2006/time#inCalendar> ?calendar .
  ?calendar <http://dbpedia.org/property/name> ""Central European Time"" .
  
  ?region <http://dbpedia.org/ontology/province> <http://dbpedia.org/resource/Schio> .

  ?entity <http://dbpedia.org/ontology/location> ?region .
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
534,14,val,"Give me the headquarter of the owner of the location, that is a venue and an architectural structure, of 2012 Pro12 Grand Final.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Venue>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ArchitecturalStructure>. <http://dbpedia.org/resource/2012_Pro12_Grand_Final> <http://dbpedia.org/ontology/location> ?v2 . ?v2 <http://dbpedia.org/ontology/owner> ?v0 . ?v0 <http://dbpedia.org/ontology/headquarter> ?result . },"```sparql
SELECT ?headquarter WHERE {
    ?location <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/2012_Pro12_Grand_Final> .
    ?location <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Venue> .
    ?location <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ArchitecturalStructure> .
    ?owner <http://dbpedia.org/property/owns> ?location .
    ?owner <http://dbpedia.org/ontology/headquarters> ?headquarter .
}
```",3,5,4,3,1,3,2,20,0,0,3,0,0.0,0
488,38,val,"Give me the death place of the father, that is a politician, of Yūki Hideyasu and administration of the father of Emperor Go-Mizunoo.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Yūki_Hideyasu> <http://dbpedia.org/property/father> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Emperor_Go-Mizunoo> <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/property/leader> ?v2 . },"```sparql
SELECT ?deathPlace WHERE {
  # Find the father of Yūki Hideyasu who is a politician
  ?father rdf:type dbo:Politician ;
          foaf:name ""Father of Yūki Hideyasu"" ;
          dbo:child <http://dbpedia.org/resource/Yūki_Hideyasu> .

  # Get the death place of this father
  ?father dbo:deathPlace ?deathPlace .

  # Find the administration under which Emperor Go-Mizunoo's father served
  ?administration rdf:type dbo:Government ;
                  dbo:head <http://dbpedia.org/resource/Father_of_Emperor_Go-Mizunoo> .
  
  # Ensure the death place matches with the administration
  FILTER(?deathPlace = ?administration)
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
55,12,val,Give me the band member of Guns N' Roses and band member of Metallica and band of Newsted.,SELECT ?result WHERE { <http://dbpedia.org/resource/Newsted> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Guns_N'_Roses> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Metallica> . },"```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Guns_N%27_Roses> .
  ?person <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Metallica> .
  ?band <http://dbpedia.org/property/name> ""Newsted""@en .
  ?band <http://dbpedia.org/ontology/bandMember> ?person .
}
```",3,3,4,1,3,2,3,28,0,0,1,0,0.0,0
10,13,val,"Give me the associated musical artist of the person born, that is an artist, as Matt Colton and band member of Luke Vibert.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Luke_Vibert> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/birthName> ""Matt Colton""@en . }","```sparql
SELECT ?person ?associatedArtist WHERE {
  ?person <http://dbpedia.org/ontology/birthName> ""Matt Colton"" .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist> .
  ?person <http://dbpedia.org/ontology/memberOfBand> <http://dbpedia.org/resource/Luke_Vibert> .
  ?person <http://dbpedia.org/property/associatedMusicalArtists> ?associatedArtist .
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
77,14,val,"Give me the force of the mayor of the territory administered, that is an organisation, from Warsaw.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> ?v0 . ?v2 <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Warsaw> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://dbpedia.org/property/leader> ?v0 . },"```sparql
SELECT ?force WHERE {
  ?organization <http://dbpedia.org/ontology/administrativeUnit> <http://dbpedia.org/resource/Warsaw>.
  ?organization a <http://dbpedia.org/ontology/Organisation>.
  ?mayor <http://dbpedia.org/ontology/officesHeld> ?office.
  ?office <http://dbpedia.org/ontology/positionHeld> ?position.
  ?position <http://dbpedia.org/property/force> ?force.
}
```",3,4,4,3,1,3,2,20,0,0,40,0,0.0,0
963,12,val,"Give me the administration of the ruling party, that is a political party, in Sremski Karlovci and entity in Serbia.",SELECT ?result WHERE { <http://dbpedia.org/resource/Sremski_Karlovci> <http://dbpedia.org/property/leaderParty> ?v0 . ?result <http://dbpedia.org/property/leaderParty> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Serbia> . },"```sparql
SELECT ?party ?administration WHERE {
  ?party <http://dbpedia.org/ontology/rulingParty> <http://dbpedia.org/resource/Sremski_Karlovci>.
  ?party <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>.
  ?party <http://dbpedia.org/ontology/entity> <http://dbpedia.org/resource/Serbia>.
  ?party <http://dbpedia.org/property/administration> ?administration.
}
```",3,4,4,2,2,3,2,20,0,0,84,0,0.0,0
528,34,val,"Give me the war of the military force of the entity, that is a societal event, in Chile and force of Narciso Campero.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Narciso_Campero> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Chile> . },"```sparql
SELECT ?event ?war WHERE {
  ?event <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>.
  ?event <http://dbpedia.org/property/country> <http://dbpedia.org/resource/Chile>.
  
  ?militaryForce <http://dbpedia.org/ontology/militaryForce> ?event.
  ?war <http://dbpedia.org/ontology/war> ?militaryForce.

  OPTIONAL {
    <http://dbpedia.org/resource/Narciso_Campero> <http://dbpedia.org/property/militaryForce> ?militaryForce.
  }
}
```",4,5,5,3,2,3,3,71,0,0,4,0,0.0,0
404,33,val,"Give me the spouse of Princess Victoria Louise of Prussia and parent of the child, that is a royalty, of the parent, that is a royalty, of Prince George William of Hanover.",SELECT ?result WHERE { <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Prince_George_William_of_Hanover> <http://dbpedia.org/ontology/parent> ?v0 . ?v0 <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> ?v3 . },"```sparql
SELECT ?spouse WHERE {
  # Step 1: Find Princess Victoria Louise of Prussia's spouse
  <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?spouse .

  # Step 2: Identify their child who is royalty
  ?child <http://dbpedia.org/ontology/birthParent> ?spouse .
  ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .

  # Step 3: Find that child's parent who is also royalty
  ?parent <http://dbpedia.org/ontology/birthChild> ?child .
  ?parent <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .

  # Step 4: Identify the parent of Prince George William of Hanover
  OPTIONAL {
    <http://dbpedia.org/resource/Prince_George_William_of_Hanover> <http://dbpedia.org/ontology/birthParent> ?parent .
  }
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
391,40,val,"Give me the native of the figure known as the nick name of Jackson, Tennessee and actor of The Departed and actor of All About the Andersons.","SELECT ?result WHERE { <http://dbpedia.org/resource/Jackson,_Tennessee> <http://xmlns.com/foaf/0.1/nick> ?v2 . ?v1 <http://dbpedia.org/property/nickname> ?v2 . <http://dbpedia.org/resource/The_Departed> <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . <http://dbpedia.org/resource/All_About_the_Andersons> <http://dbpedia.org/property/starring> ?result . }","```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/nickName> ""Jackson, Tennessee"" .
  ?person <http://dbpedia.org/ontology/film> <http://dbpedia.org/resource/The_Departed> .
  ?person <http://dbpedia.org/ontology/film> <http://dbpedia.org/resource/All_About_the_Andersons> .
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
328,41,val,"Give me the awardee of the award of Bruce Fraser, 1st Baron Fraser of North Cape and commander in the force of Ferenc Szálasi and leader of People's Commissariat of Defense of the Soviet Union.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape> <http://dbpedia.org/property/awards> ?v2 . <http://dbpedia.org/resource/People's_Commissariat_of_Defense_of_the_Soviet_Union> <http://dbpedia.org/ontology/leader> ?result . ?v4 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Ferenc_Szálasi> . ?result <http://dbpedia.org/property/awards> ?v2 . }","SELECT ?award WHERE {
  <http://dbpedia.org/resource/Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape> <http://dbpedia.org/ontology/awards> ?award .
}",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
281,23,val,Give me the war of the awardee of the award of Jonathon Band.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/awards> ?v2 . ?v0 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Jonathon_Band> <http://dbpedia.org/property/awards> ?v2 . },"```sparql
SELECT ?war WHERE {
  <http://dbpedia.org/resource/Jonathon_Band> <http://dbpedia.org/ontology/award> ?award .
  ?award <http://dbpedia.org/property/war> ?war .
}
```",3,3,4,3,1,3,3,71,0,0,450,0,0.0,0
963,13,val,"Give me the entity in the region, that is a country, of the time zone of Herzegovina-Neretva Canton.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://dbpedia.org/property/timeZone> ?v0 . ?result <http://dbpedia.org/ontology/country> ?v1 . <http://dbpedia.org/resource/Herzegovina-Neretva_Canton> <http://dbpedia.org/property/timeZone> ?v0 . },"```sparql
SELECT ?entity WHERE {
  <http://dbpedia.org/resource/Herzegovina-Neretva_Canton> <http://www.w3.org/2006/time#during> ?timeZone .
  ?timeZone <http://dbpedia.org/ontology/country> ?country .
  ?entity <http://dbpedia.org/ontology/country> ?country .
}
```",3,4,4,3,1,3,2,20,0,0,173261,0,0.0,0
701,18,val,Give me the spouse of Ramesses II and parent of Henuttawy (19th dynasty) and parent of Meritamen.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Ramesses_II> . <http://dbpedia.org/resource/Meritamen> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Henuttawy_(19th_dynasty)> . },"```sparql
SELECT ?spouse WHERE {
  ?spouse <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Ramesses_II>.
  ?spouse <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Henuttawy_(19th_dynasty)>.
  ?spouse <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Meritamen>.
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
9,42,val,"Give me the alma mater of the mayor, that is a politician, of Northern Ireland Forum and figure known as the nickname of Queen's University Belfast and alma mater of Allen Hill (scientist).",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/almaMater> ?result . <http://dbpedia.org/resource/Allen_Hill_(scientist)> <http://dbpedia.org/ontology/almaMater> ?result . <http://dbpedia.org/resource/Queen's_University_Belfast> <http://dbpedia.org/property/nickname> ?v1 . <http://dbpedia.org/resource/Northern_Ireland_Forum> <http://dbpedia.org/property/leader> ?v2 . ?result <http://dbpedia.org/property/nickname> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
SELECT ?almaMater WHERE {
  ?mayor <http://dbpedia.org/ontology/politician> _:a .
  ?mayor <http://dbpedia.org/ontology/mayor> _:b .
  ?mayor <http://dbpedia.org/ontology/almaMater> ?almaMater .

  ?figure <http://www.w3.org/2000/01/rdf-schema#label> ""Queen's University Belfast""@en .
  ?figure <http://dbpedia.org/ontology/nickname> _:c .
  ?figure <http://dbpedia.org/ontology/almaMater> ?almaMater .

  <http://dbpedia.org/resource/Allen_Hill_(scientist)> <http://dbpedia.org/ontology/almaMater> ?almaMater .
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
547,32,val,Give me the resting place of the actor of Enemy at the Door and resting place of the child of James Burton (property developer).,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . ?v3 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Enemy_at_the_Door> <http://dbpedia.org/property/starring> ?v3 . <http://dbpedia.org/resource/James_Burton_(property_developer)> <http://dbpedia.org/ontology/child> ?v1 . },"```sparql
# Query for the resting place of an actor in ""Enemy at the Door""
SELECT ?actor ?restingPlace WHERE {
  ?movie <http://dbpedia.org/ontology/starring> ?actor .
  ?movie <http://dbpedia.org/property/title> ""Enemy at the Door"" .
  OPTIONAL { ?actor <http://dbpedia.org/ontology/burialPlace> ?restingPlace . }
} LIMIT 1

UNION

# Query for the resting place of a child of James Burton (property developer)
SELECT ?child ?restingPlace WHERE {
  ?jamesBurton <http://dbpedia.org/ontology/spouse> ?spouse .
  ?jamesBurton <http://www.w3.org/2000/01/rdf-schema#label> ""James Burton (property developer)""@en .
  ?spouse <http://dbpedia.org/ontology/child> ?child .
  OPTIONAL { ?child <http://dbpedia.org/ontology/burialPlace> ?restingPlace . }
} LIMIT 1
```",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
179,15,val,"Give me the person born as the birth name of the child, that is a royalty, of Nakkhatra Mangala and parent of Ubol Ratana.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Nakkhatra_Mangala> . <http://dbpedia.org/resource/Ubol_Ratana> <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
SELECT ?person ?birthName WHERE {
  ?person <http://dbpedia.org/ontology/birthName> ?birthName .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
  ?person <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Nakkhatra_Mangala> .
  ?person <http://dbpedia.org/ontology/spouse> ?parentOfUbolRatana .
  ?parentOfUbolRatana <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Ubol_Ratana> .
}
```",4,5,5,3,2,3,2,20,0,0,1,0,0.0,0
184,32,val,Give me the child of the child of Archduke Joseph Karl of Austria and parent of the native of Budapest.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v1 . ?result <http://dbpedia.org/property/father> ?v3 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Karl_of_Austria> . ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Budapest> . },"```sparql
SELECT ?grandchild ?parentOfBudapestNative WHERE {
  # Step 1: Find the child of Archduke Joseph Karl
  ?child rdf:type dbo:Child ;
         dbo:parent <http://dbpedia.org/resource/Archduke_Joseph_Karl_of_Austria> .

  # Step 2: From that child, find their children (grandchildren of Archduke Joseph Karl)
  ?grandchild rdf:type dbo:Child ;
              dbo:parent ?child .

  # Step 3: Check if any grandchild is a parent of someone native to Budapest
  ?parentOfBudapestNative dbo:nativePlace <http://dbpedia.org/resource/Budapest> ;
                          dbo:parent ?grandchild .
}
```",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
996,11,val,Give me the force of the awardee of 1778.0 and entity in France.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/France> . ?v2 <http://dbpedia.org/property/awards> ""1778.0""^^<http://www.w3.org/2001/XMLSchema#double> . ?result <http://dbpedia.org/ontology/commander> ?v2 . }","```sparql
SELECT ?entity ?force WHERE {
    ?entity <http://dbpedia.org/ontology/awarded> ?award .
    ?award <http://www.w3.org/2000/01/rdf-schema#seeAlso> ""1778"" .
    ?entity <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/France> .
    OPTIONAL { ?entity <http://dbpedia.org/property/force> ?force . }
}
```",3,3,4,2,2,3,2,20,0,0,4,0,0.0,0
915,12,val,"Give me the resident of Springfield, Illinois and father of the child, that is a fictional character and a soap character, of Phillip Spaulding.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?result . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Phillip_Spaulding> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?result <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Springfield,_Illinois> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoapCharacter>. }","```sparql
SELECT ?character WHERE {
  ?character <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Springfield,_Illinois>.
  ?character <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>.
  ?character <http://dbpedia.org/ontology/father> ?child.
  ?child <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Phillip_Spaulding>.
}
```",3,5,4,2,2,3,2,20,0,0,1,0,0.0,0
404,44,val,"Give me the parent of the child, that is a royalty, of Ernest Augustus, Duke of Brunswick and child of the father of Ernest Augustus, Duke of Brunswick and spouse of Princess Victoria Louise of Prussia.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v2 . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/property/father> ?v2 . <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/ontology/child> ?v4 . }","```sparql
SELECT ?parent WHERE {
    ?child <http://dbpedia.org/ontology/birthPlace> ?place .
    ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
    ?child <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> .
    
    OPTIONAL { 
        ?spouse <http://dbpedia.org/property/spouse> <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> .
    }
    
    ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Human> .
    ?parent <http://dbpedia.org/ontology/birthPlace> ?place .
    ?parent <http://dbpedia.org/ontology/father> ?child .
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
391,27,val,"Give me the actor of the movie, that is a movie and a work and a television show, with the professional in .","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/starring> ?result . ?v1 <http://dbpedia.org/property/occupation> """"@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v2 <http://dbpedia.org/property/starring> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. }","```sparql
SELECT ?actor WHERE {
  ?movie <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Movie>.
  ?movie <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>.
  ?movie <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>.
  ?movie <http://dbpedia.org/property/starring> ?actor.
}
```",3,6,4,3,1,3,3,71,0,0,7061,0,0.0,0
963,14,val,"Give me the administration of the ruling party, that is a political party, in the location for 21205.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/leaderParty> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v2 <http://dbpedia.org/ontology/postalCode> ""21205"" . ?result <http://dbpedia.org/property/leaderParty> ?v0 . }","```sparql
SELECT ?party WHERE {
    ?location <http://dbpedia.org/ontology/postalCode> ""21205"" .
    ?administration <http://dbpedia.org/ontology/location> ?location .
    ?administration <http://dbpedia.org/ontology/rulingParty> ?party .
    ?party a <http://dbpedia.org/ontology/PoliticalParty> .
}
```",3,4,4,3,1,3,2,20,0,0,86,0,0.0,0
55,16,val,"Give me the band member of Guns N' Roses and band of the reference, that is a band, to Newsted.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Newsted""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Guns_N'_Roses> . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/Guns_N%27_Roses> .
  OPTIONAL { 
    ?reference <http://dbpedia.org/property/reference> ?person .
    ?reference <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band> .
    FILTER(STRSTARTS(LCASE(?reference), ""newsted""))
  }
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
10,16,val,Give me the professional in the birth name of Sharon Kao and associated musical artist of Matt Colton.,SELECT ?result WHERE { <http://dbpedia.org/resource/Sharon_Kao> <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Matt_Colton> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
# Query for Sharon Kao's professional field associated with her birth name
SELECT ?professional WHERE {
  <http://dbpedia.org/resource/Sharon_Kao> <http://dbpedia.org/ontology/birthName> ?birthName .
  ?birthName <http://dbpedia.org/property/professional> ?professional .
}

# Query for Matt Colton's associated musical artist
SELECT ?associatedMusicalArtist WHERE {
  <http://dbpedia.org/resource/Matt_Colton> <http://dbpedia.org/ontology/associatedMusicalArtist> ?associatedMusicalArtist .
}
```",3,3,4,2,2,2,3,28,0,0,2,0,0.0,0
547,37,val,Give me the resting place of Alan Cunningham and resting place of the actor of the show with Emily Richard.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/starring> ?v3 . ?v3 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Alan_Cunningham> <http://dbpedia.org/ontology/restingPlace> ?result . ?v0 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emily_Richard> . },"```sparql
# Query to get the resting place of Alan Cunningham
SELECT ?restingPlace WHERE {
  <http://dbpedia.org/resource/Alan_Cunningham> dbpedia-owl:finalBurial ?restingPlace .
}

UNION

# Query to get the resting place of an actor from a show with Emily Richard
SELECT ?actorRestingPlace WHERE {
  # Find shows featuring Emily Richard
  ?show dbo:starring <http://dbpedia.org/resource/Emily_Richard> .

  # Find actors in those shows
  ?show dbo:starring ?actor .

  # Get the resting place of that actor
  ?actor dbpedia-owl:finalBurial ?actorRestingPlace .
}
```",4,4,5,3,2,3,3,71,0,0,2,0,0.0,0
92,31,val,"Give me the associated musical artist of Jim Sheppard and band member of the reference, that is an artist, to the name of Nevermore (2006 film).",SELECT ?result WHERE { <http://dbpedia.org/resource/Jim_Sheppard> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Nevermore_(2006_film)> <http://xmlns.com/foaf/0.1/name> ?v1 . ?v0 <http://xmlns.com/foaf/0.1/name> ?v1 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"```sparql
SELECT ?artist WHERE {
  ?artist <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Jim_Sheppard> .
  ?bandMember <http://dbpedia.org/ontology/memberOfBand> ?artist .
  ?film <http://dbpedia.org/ontology/reference> ?bandMember .
  FILTER(STRSTARTS(STR(?film), ""http://dbpedia.org/resource/Nevermore_(2006_film)""))
  ?artist <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist> .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
356,15,val,"Give me the player in the successor of the predecessor, that is a sports team season and a soccer club season, of 2015 Sacramento Republic FC season and team of Mark Briggs.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v0 <http://dbpedia.org/ontology/successor> ?v1 . ?result <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Mark_Briggs> . ?v0 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/2015_Sacramento_Republic_FC_season> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?v1 <http://dbpedia.org/ontology/team> ?result . },"```sparql
# Step 1: Find the predecessor of the 2015 Sacramento Republic FC season
SELECT ?predecessor WHERE {
    <http://dbpedia.org/resource/2015_Sacramento_Republic_FC_season> <http://dbpedia.org/ontology/predecessor> ?predecessor .
}

# Step 2: Find the successor of that predecessor
SELECT ?successor WHERE {
    ?predecessor <http://dbpedia.org/ontology/successor> ?successor .
    FILTER (?predecessor = <PREDECESSOR_URI>) # Replace with actual URI from step 1
}

# Step 3: Ensure both are sports team seasons and soccer club seasons
SELECT ?successor WHERE {
    ?successor <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason> .
    ?successor <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason> .
    FILTER (?successor = <SUCCESSOR_URI>) # Replace with actual URI from step 2
}

# Step 4: Find the team of Mark Briggs during this successor season
SELECT ?team WHERE {
    <http://dbpedia.org/resource/Mark_Briggs> <http://dbpedia.org/ontology/team> ?team .
    ?team <http://dbpedia.org/property/season> ?successor .
}

# Step 5: Retrieve players from that team
SELECT DISTINCT ?player WHERE {
    ?player <http://dbpedia.org/ontology/team> ?team .
}
```

Note: Replace `<PREDECESSOR_URI>` and `<SUCCESSOR_URI>` with the actual URIs obtained from steps 1 and 2. This query assumes that DBpedia has structured data for these specific relationships, which may require manual verification or adjustment based on available data.",4,6,5,3,2,3,2,20,0,0,1,0,0.0,0
92,23,val,"Give me the band member of the reference, that is an artist, to the name of Nevermore (2006 film).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Nevermore_(2006_film)> <http://xmlns.com/foaf/0.1/name> ?v2 . ?v0 <http://xmlns.com/foaf/0.1/name> ?v2 . },"```sparql
SELECT ?bandMember WHERE {
    ?film <http://dbpedia.org/ontology/reference> ?artist .
    ?artist <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist> .
    FILTER(STR(?film) = ""Nevermore (2006 film)"")
    ?bandMember <http://dbpedia.org/ontology/memberOfBand> ?artist .
}
```",3,4,4,3,1,3,3,71,0,0,12,0,0.0,0
251,17,val,"Give me the administration of the ruling party, that is a political party and an organisation, in Sicily and death place of Laura Mancinelli.",SELECT ?result WHERE { <http://dbpedia.org/resource/Laura_Mancinelli> <http://dbpedia.org/ontology/deathPlace> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?result <http://dbpedia.org/property/leaderParty> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Sicily> <http://dbpedia.org/property/leaderParty> ?v1 . },"```sparql
SELECT ?party ?administration WHERE {
  ?party <http://dbpedia.org/ontology/politicalParty> ?organization .
  ?party <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organization> .
  ?party <http://dbpedia.org/property/rulingIn> <http://dbpedia.org/resource/Sicily> .
  ?party <http://dbpedia.org/ontology/administration> ?administration .
  
  OPTIONAL {
    ?administration <http://dbpedia.org/ontology/location> ?location .
    ?mancinelliDeathPlace <http://dbpedia.org/property/deathPlace> ?location .
    ?mancinelliDeathPlace <http://dbpedia.org/resource/Laura_Mancinelli> .
  }
}
```",3,5,4,2,2,2,3,28,0,0,1,0,0.0,0
427,33,val,Give me the reference to Partito Popolare Italiano and party of the father of the alumnus of Massachusetts Institute of Technology.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Massachusetts_Institute_of_Technology> . ?v3 <http://dbpedia.org/ontology/party> ?result . ?v0 <http://dbpedia.org/property/father> ?v3 . ?result <http://xmlns.com/foaf/0.1/name> ""Partito Popolare Italiano""@en . }","```sparql
SELECT ?alumnus ?father ?party WHERE {
  # Step 1: Find all alumni of MIT
  ?alumnus <http://dbpedia.org/ontology/alumni> <http://dbpedia.org/resource/Massachusetts_Institute_of_Technology> .
  
  # Step 2: For each alumnus, find their father
  OPTIONAL { 
    ?alumnus <http://dbpedia.org/property/father> ?father .
    
    # Step 3: Determine the political party of each father
    OPTIONAL {
      ?father <http://dbpedia.org/ontology/party> ?party .
      
      # Step 4: Filter parties that reference Partito Popolare Italiano
      FILTER EXISTS { 
        ?party <http://www.w3.org/2000/01/rdf-schema#seeAlso> <http://dbpedia.org/resource/Partito_Popolare_Italiano> .
      }
    }
  }
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
404,36,val,Give me the spouse of Princess Victoria Louise of Prussia and child of the father of the spouse of Princess Victoria Louise of Prussia.,SELECT ?result WHERE { <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?v0 . },"```sparql
SELECT ?child WHERE {
  # Step 1: Identify the spouse of Princess Victoria Louise of Prussia
  <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?spouse .

  # Step 2: Determine the father of that spouse
  ?spouse <http://dbpedia.org/property/father> ?father .

  # Step 3: Find the children of that father
  ?father <http://dbpedia.org/ontology/child> ?child .
}
```",4,4,5,3,2,3,3,71,1,2,0,0.3333333333333333,1.0,0.5
161,23,val,"Give me the military force of the force, that is a societal event and an event and a military conflict, of the person decedent at Francoist Spain.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://dbpedia.org/ontology/commander> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Francoist_Spain> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
SELECT ?militaryForce WHERE {
  ?event <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>.
  ?event <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocialEvent>.
  ?event <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>.
  ?event <http://dbpedia.org/property/location> <http://dbpedia.org/resource/Francoist_Spain>.
  
  ?person <http://dbpedia.org/ontology/deathPlace> ?event.
  ?person <http://dbpedia.org/ontology/militaryForce> ?militaryForce.
}
```",3,6,4,3,1,3,3,71,0,0,1073,0,0.0,0
617,36,val,Give me the parent of the child of the commander in Battle of Panium and child of Antiochus III the Great.,SELECT ?result WHERE { <http://dbpedia.org/resource/Battle_of_Panium> <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://dbpedia.org/ontology/child> ?v1 . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Antiochus_III_the_Great> . ?result <http://dbpedia.org/ontology/child> ?v1 . },"```sparql
SELECT ?parent WHERE {
  ?battle <http://dbpedia.org/ontology/commander> ?commander .
  FILTER(STR(?battle) = ""Battle of Panium"") .

  ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Child> ;
         <http://dbpedia.org/property/parent> ?commander ;
         <http://dbpedia.org/property/parent> ?antiochus .

  FILTER(STR(?antiochus) = ""Antiochus III the Great"") .

  ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Child> ;
         <http://dbpedia.org/property/parent> ?parent .
}
```",4,4,5,3,2,3,3,71,0,0,2,0,0.0,0
54,44,val,"Give me the predecessor of the child, that is an office holder and a royalty, of Thihapate of Mohnyin and parent of the child of Narapati I of Ava and child of Thinkhaya of Pagan.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Thihapate_of_Mohnyin> . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Narapati_I_of_Ava> . <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?result . ?v4 <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> ?v2 . },"```sparql
SELECT ?predecessor WHERE {
  ?person rdf:type dbo:Royalty ;
          dbo:officeHolder true ;
          dbo:childOf db:Thihapate_of_Mohnyin ;
          dbo:parentOf ?narapatiChild .
  ?narapatiChild dbo:childOf db:Narapati_I_of_Ava .
  ?person dbo:childOf db:Thinkhaya_of_Pagan .

  ?officeHolderPosition dbo:incumbent ?person ;
                        dbo:predecessor ?predecessor .
}
```",5,7,6,2,3,3,3,71,0,0,1,0,0.0,0
10,18,val,Give me the professional in the birth name of Sharon Kao and band member of Luke Vibert.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v1 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Luke_Vibert> . <http://dbpedia.org/resource/Sharon_Kao> <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
SELECT ?professional WHERE {
  # Find the birth name of Sharon Kao
  <http://dbpedia.org/resource/Sharon_Kao> <http://dbpedia.org/ontology/birthName> ?birthName .
  
  # Find professionals associated with this birth name
  ?professional <http://www.w3.org/2000/01/rdf-schema#label> ?birthName .

  # Find band members of Luke Vibert
  ?member <http://dbpedia.org/ontology/memberOfBand> <http://dbpedia.org/resource/Luke_Vibert> .
  
  # Check if the professional is also a band member of Luke Vibert
  FILTER (?professional = ?member)
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
16,37,val,Give me the person born as Georgeanne Marie Rice and professional in the profession of the actor of Unnatural (TV series).,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v3 . ?v0 <http://dbpedia.org/property/occupation> ?v3 . <http://dbpedia.org/resource/Unnatural_(TV_series)> <http://dbpedia.org/property/starring> ?v0 . ?result <http://dbpedia.org/property/birthName> ""Georgeanne Marie Rice""@en . }","```sparql
# Step 1: Get the actor from the TV series ""Unnatural""
SELECT ?actor WHERE {
    ?series <http://dbpedia.org/ontology/starring> ?actor .
    ?series <http://dbpedia.org/property/title> ""Unnatural (TV series)""@en .
}

# Step 2: Determine the profession of that actor
SELECT ?profession WHERE {
    ?actor <http://dbpedia.org/ontology/profession> ?profession .
}

# Step 3: Find a person born as ""Georgeanne Marie Rice"" with the same profession
SELECT ?person WHERE {
    ?person <http://dbpedia.org/property/birthName> ""Georgeanne Marie Rice""@en .
    ?person <http://dbpedia.org/ontology/profession> ?profession .
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
92,18,val,Give me the band of Joseph Michael and associated musical artist of Jim Sheppard and band member of Nevermore.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Joseph_Michael> . <http://dbpedia.org/resource/Jim_Sheppard> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Nevermore> . },"```sparql
SELECT ?band WHERE {
  ?band <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/Joseph_Michael> .
  ?band <http://dbpedia.org/ontology/musicalArtist> <http://dbpedia.org/resource/Jim_Sheppard> .
  ?band <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/Nevermore> .
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
915,14,val,"Give me the father of the child, that is a fictional character and a soap character, of the parent, that is a fictional character and a soap character, of Lizzie Spaulding.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoapCharacter>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. <http://dbpedia.org/resource/Lizzie_Spaulding> <http://dbpedia.org/ontology/parent> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoapCharacter>. ?v0 <http://dbpedia.org/property/father> ?result . },"```sparql
SELECT ?father WHERE {
  # Step 1: Identify Lizzie Spaulding's parent who is both a fictional character and a soap character
  ?parent <http://dbpedia.org/ontology/family> <http://dbpedia.org/resource/Lizzie_Spaulding> .
  ?parent <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter> .
  ?parent <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoapCharacter> .

  # Step 2: Find the child of this parent who is also a fictional character and a soap character
  ?child <http://dbpedia.org/ontology/family> ?parent .
  ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter> .
  ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoapCharacter> .

  # Step 3: Determine the father of this child
  ?father <http://dbpedia.org/property/father> ?child .
}
```",3,7,4,3,1,3,2,20,0,0,1,0,0.0,0
303,13,val,"Give me the entity in Panama and party of the commander, that is a politician, in United States invasion of Panama.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/party> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Panama> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/United_States_invasion_of_Panama> <http://dbpedia.org/ontology/commander> ?v1 . },"```sparql
SELECT ?party ?entity WHERE {
  ?commander <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/United_States_invasion_of_Panama> .
  ?commander a <http://dbpedia.org/ontology/Politician> .
  ?commander <http://dbpedia.org/property/party> ?party .
  
  ?entity <http://www.w3.org/2000/01/rdf-schema#label> ?label .
  FILTER(CONTAINS(LCASE(?label), ""panama"")) .
}
```",3,4,4,2,2,2,3,28,0,0,2,0,0.0,0
488,33,val,"Give me the death place of the father, that is a politician, of the father, that is an office holder, of Matsudaira Tadamasa and birth place of Enomoto Takeaki.",SELECT ?result WHERE { <http://dbpedia.org/resource/Enomoto_Takeaki> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Matsudaira_Tadamasa> <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/property/father> ?v3 . ?v3 <http://dbpedia.org/ontology/deathPlace> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
SELECT ?deathPlace ?birthPlace WHERE {
  # Find Matsudaira Tadamasa's father who is a politician
  ?father rdf:type dbo:Politician ;
          dbo:child <http://dbpedia.org/resource/Matsudaira_Tadamasa> .

  # Find Matsudaira Tadamasa's grandfather (the father of the above father) who is an office holder
  ?grandfather rdf:type dbo:OfficeHolder ;
               dbo:child ?father .

  # Get the death place of Matsudaira Tadamasa's paternal grandfather
  ?grandfather dbo:deathPlace ?deathPlace .

  # Find Enomoto Takeaki and his birthplace
  <http://dbpedia.org/resource/Enomoto_Takeaki> dbo:birthPlace ?birthPlace .
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
281,26,val,"Give me the entity in the birth place, that is a country, of the leader, that is a politician, of 1962 New South Wales state election.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/birthPlace> ?v2 . <http://dbpedia.org/resource/1962_New_South_Wales_state_election> <http://dbpedia.org/property/leader> ?v1 . ?result <http://dbpedia.org/ontology/place> ?v2 . },"```sparql
SELECT ?entity WHERE {
    ?election <http://dbpedia.org/ontology/politician> ?leader .
    FILTER(STRSTARTS(LCASE(?election), ""1962 new south wales state election""))
    
    ?leader <http://dbpedia.org/property/birthPlace> ?birthPlace .
    ?birthPlace <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country> .

    ?entity <http://dbpedia.org/ontology/country> ?birthPlace .
}
```",3,5,4,3,1,3,3,71,0,0,1,0,0.0,0
391,25,val,"Give me the actor of the movie, that is a movie and a work and a television show, with Roz Ryan and actor of The Departed.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/property/starring> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Roz_Ryan> . <http://dbpedia.org/resource/The_Departed> <http://dbpedia.org/ontology/starring> ?result . },"```sparql
SELECT ?actor WHERE {
  ?movie <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Movie> .
  ?movie <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work> .
  ?movie <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow> .
  ?movie <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Roz_Ryan> .
  
  ?actor <http://dbpedia.org/ontology/starring> ?movie .
  ?actor <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/The_Departed> .
}
```",3,6,4,2,2,3,3,71,0,0,1,0,0.0,0
994,28,val,Give me the associated musical artist of Red Tide (band) and associated musical artist of the associated musical artist of Watchtower (band) and band member of Don Dokken.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Don_Dokken> . <http://dbpedia.org/resource/Red_Tide_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Watchtower_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
# Step 1: Find the associated musical artist of Red Tide (band)
SELECT ?artist1 WHERE {
    <http://dbpedia.org/resource/Red_Tide_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?artist1 .
}

# Step 2: Using the result from step 1, find its associated musical artist
WITH ?artist1
SELECT ?artist2 WHERE {
    ?artist1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?artist2 .
}

# Step 3: Identify a band member of Don Dokken
SELECT ?donDokkenMember WHERE {
    <http://dbpedia.org/resource/Don_Dokken> <http://dbpedia.org/ontology/memberOf> ?band .
    ?band <http://dbpedia.org/ontology/member> ?donDokkenMember .
}

# Step 4: Find the associated musical artists for both results from steps 2 and 3
WITH ?artist2, ?donDokkenMember
SELECT DISTINCT ?finalArtist WHERE {
    OPTIONAL { ?artist2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?finalArtist . }
    OPTIONAL { ?donDokkenMember <http://dbpedia.org/ontology/associatedMusicalArtist> ?finalArtist . }
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
378,27,val,"Give me the claim to fame of the commander in the war, that is a military conflict and a societal event and an event, of Thomas Trigge.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/commander> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Thomas_Trigge> <http://dbpedia.org/ontology/battle> ?v1 . ?v2 <http://dbpedia.org/ontology/knownFor> ?result . },"SELECT ?result WHERE {
  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>.
  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocialEvent>.
  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>.
  <http://dbpedia.org/resource/Thomas_Trigge> <http://dbpedia.org/property/war> ?war.
  ?war <http://dbpedia.org/ontology/commander> ?commander.
  ?commander <http://dbpedia.org/ontology/knownFor> ?result.
}",3,6,4,3,1,3,3,71,0,0,6,0,0.0,0
182,16,val,Give me the entity in the nationality of Tamara Kunanayakam and war of Mahesh Senanayake.,SELECT ?result WHERE { <http://dbpedia.org/resource/Mahesh_Senanayake> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Tamara_Kunanayakam> <http://dbpedia.org/ontology/nationality> ?v2 . ?result <http://dbpedia.org/ontology/place> ?v2 . },"```sparql
# Step 1: Get the nationality of Tamara Kunanayakam
SELECT ?nationality WHERE {
    <http://dbpedia.org/resource/Tamara_Kunanayakam> <http://www.w3.org/2000/01/rdf-schema#label> ""Tamara Kunanayakam""@en .
    <http://dbpedia.org/resource/Tamara_Kunanayakam> <http://dbpedia.org/ontology/nationality> ?nationality .
}

# Step 2: Get the war associated with Mahesh Senanayake
SELECT ?war WHERE {
    <http://dbpedia.org/resource/Mahesh_Senanayake> <http://www.w3.org/2000/01/rdf-schema#label> ""Mahesh Senanayake""@en .
    <http://dbpedia.org/resource/Mahesh_Senanayake> <http://dbpedia.org/ontology/battle> ?war .
}

# Step 3: Find entities related to both the nationality and war
SELECT DISTINCT ?entity WHERE {
    # Replace ?nationality with the actual URI obtained from step 1
    ?entity <http://www.w3.org/2000/01/rdf-schema#label> ?label .
    FILTER (CONTAINS(LCASE(?label), ""tamara kunanayakam"") || CONTAINS(LCASE(?label), ""mahesh senanayake""))
    
    # Replace ?war with the actual URI obtained from step 2
    OPTIONAL { ?entity <http://dbpedia.org/ontology/nationality> ?nationality . }
    OPTIONAL { ?entity <http://dbpedia.org/ontology/battle> ?war . }
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
827,13,val,"Give me the child of the child, that is a royalty, of the parent of Charles Alexander, Grand Duke of Saxe-Weimar-Eisenach.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Charles_Alexander,_Grand_Duke_of_Saxe-Weimar-Eisenach> . ?v1 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://dbpedia.org/ontology/parent> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
SELECT ?grandchild WHERE {
    # Step 1: Identify the parent of Charles Alexander
    <http://dbpedia.org/resource/Charles_Alexander,_Grand_Duke_of_Saxe-Weimar-Eisenach> <http://www.w3.org/2000/01/rdf-schema#parent> ?parent .

    # Step 2: Find children (children of the parent)
    ?child <http://www.w3.org/2000/01/rdf-schema#parent> ?parent .
    
    # Step 3: For each child, find their children (grandchildren of the original parent)
    ?grandchild <http://www.w3.org/2000/01/rdf-schema#parent> ?child .

    # Step 4: Filter grandchildren who are royalty
    ?grandchild <http://dbpedia.org/ontology/nationality> ?nationality .
    FILTER EXISTS { ?nationality <http://dbpedia.org/ontology/type> <http://dbpedia.org/resource/Royalty> }
}
```",3,4,4,3,1,3,2,20,0,0,8,0,0.0,0
492,19,val,"Give me the person decedent at the work of US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite and commander in Franco-Hova Wars.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> ?v0 . ?v0 <http://dbpedia.org/property/author> ""US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite""@en . <http://dbpedia.org/resource/Franco-Hova_Wars> <http://dbpedia.org/ontology/commander> ?result . }","```sparql
# Step 1: Find the work associated with Joseph C. Satterthwaite as US Assistant Secretary of State for African Affairs
SELECT ?work WHERE {
    <http://dbpedia.org/resource/Joseph_C._Satterthwaite> <http://dbpedia.org/ontology/jobTitle> ""US Assistant Secretary of State for African Affairs"" .
    <http://dbpedia.org/resource/Joseph_C._Satterthwaite> <http://dbpedia.org/ontology/workLocation> ?work .
}

# Step 2: Find the decedent at this work
SELECT ?decedent WHERE {
    ?work <http://dbpedia.org/property/decedent> ?decedent .
}

# Step 3: Identify commanders in the Franco-Hova Wars
SELECT ?commander WHERE {
    <http://dbpedia.org/resource/Franco-Hova_Wars> <http://dbpedia.org/ontology/commander> ?commander .
}

# Step 4: Find a common individual who is both the decedent and a commander
SELECT DISTINCT ?person WHERE {
    # Decedent at Joseph C. Satterthwaite's work
    ?work <http://dbpedia.org/property/decedent> ?person .
    
    # Commander in Franco-Hova Wars
    <http://dbpedia.org/resource/Franco-Hova_Wars> <http://dbpedia.org/ontology/commander> ?person .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
696,13,val,"Give me the birth place of the member of the associated musical artist, that is an organisation and a group and a band, of The Boils.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. <http://dbpedia.org/resource/The_Boils> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/ontology/bandMember> ?v1 . },"```sparql
SELECT ?member ?birthPlace WHERE {
  # Find a member of ""The Boils""
  ?member <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/The_Boils>.
  
  # Check if the member is associated with another musical artist that is an organization, group, and band
  ?member <http://dbpedia.org/property/associatedMusicalArtist> ?artist.
  ?artist <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>.
  ?artist <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>.
  ?artist <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalGroup>.

  # Retrieve the birthplace of the member
  ?member <http://dbpedia.org/property/birthPlace> ?birthPlace.
}
```",3,6,4,3,1,3,2,20,0,0,6,0,0.0,0
701,36,val,"Give me the spouse of the father of the commander, that is a royalty, in Battle of Perire and parent of Meritamen.",SELECT ?result WHERE { <http://dbpedia.org/resource/Meritamen> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/spouse> ?v1 . ?v0 <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Battle_of_Perire> <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
SELECT ?spouse WHERE {
  ?battle <http://dbpedia.org/ontology/commander> ?commander .
  FILTER(?battle = <http://dbpedia.org/resource/Battle_of_Perire>)
  
  ?commander <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
  
  ?commander <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Meritamen> .

  ?father <http://dbpedia.org/ontology/child> ?commander .
  
  ?father <http://dbpedia.org/property/spouse> ?spouse .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
328,29,val,Give me the commander in the force of Ferenc Szálasi and awardee of Order of Suvorov and leader of People's Commissariat of Defense of the Soviet Union.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Order_of_Suvorov> . ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Ferenc_Szálasi> . ?v3 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/People's_Commissariat_of_Defense_of_the_Soviet_Union> <http://dbpedia.org/ontology/leader> ?result . },"```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Ferenc_Szálasi>.
  ?person <http://dbpedia.org/property/orderOfSuvorovAwardee> ""true""^^<http://www.w3.org/2001/XMLSchema#boolean>.
  ?person <http://dbpedia.org/ontology/leader> <http://dbpedia.org/resource/People%27s_Commissariat_of_Defense_of_the_Soviet_Union>.
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
404,21,val,"Give me the spouse of the person born, that is a royalty, as Princess Victoria Louise of Prussia and child of Ernest Augustus, Crown Prince of Hanover.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ernest_Augustus,_Crown_Prince_of_Hanover> . ?v1 <http://dbpedia.org/property/birthName> ""Princess Victoria Louise of Prussia""@en . ?v1 <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
SELECT ?spouse WHERE {
  ?person a dbo:Royalty ;
          foaf:name ""Princess Victoria Louise of Prussia"" ;
          dbo:childOf <http://dbpedia.org/resource/Ernest_Augustus,_Crown_Prince_of_Hanover> .
  ?person dbo:spouse ?spouse .
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
666,11,val,"Give me the player in the manager, that is a sports manager, of 2016–17 Hull City A.F.C. season and figure known as The Three Lions.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ""The Three Lions""@en . ?v2 <http://dbpedia.org/ontology/team> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. <http://dbpedia.org/resource/2016–17_Hull_City_A.F.C._season> <http://dbpedia.org/ontology/manager> ?v2 . }","```sparql
SELECT ?player WHERE {
    ?manager <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/2016%E2%80%9317_Hull_City_A.FC_season> .
    ?manager <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager> .
    ?manager <http://dbpedia.org/property/knowAs> ""The Three Lions"" .
    ?player <http://dbpedia.org/ontology/team> ?manager .
}
```",3,4,4,2,2,3,2,20,0,0,2,0,0.0,0
778,13,val,"Give me the entity in the award of the awardee, that is American, of Wolf Prize in Medicine.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Wolf_Prize_in_Medicine> . ?result <http://dbpedia.org/ontology/location> ?v1 . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/United_States>. ?v0 <http://dbpedia.org/property/awards> ?v1 . },"```sparql
SELECT ?entity WHERE {
  ?award <http://dbpedia.org/ontology/awardee> ?person .
  ?person <http://www.w3.org/2000/01/rdf-schema#label> ""Wolf Prize in Medicine""@en .
  ?person <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/United_States> .
  ?award <http://dbpedia.org/property/awardee> ?entity .
}
```",3,4,4,3,1,3,2,20,0,0,18629,0,0.0,0
161,44,val,"Give me the commander in the force, that is an event, of Emilio Mola and military force of the force, that is a societal event and a military conflict, of Francisco Largo Caballero and military force of Rif War.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v4 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Rif_War> . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Emilio_Mola> . },"```sparql
# Step 1: Find the event (force) associated with Emilio Mola and its commander
SELECT ?eventEmilioMola ?commanderEmilioMola WHERE {
    ?eventEmilioMola <http://dbpedia.org/ontology/person> <http://dbpedia.org/resource/Emilio_Mola>.
    ?eventEmilioMola <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>.
    ?eventEmilioMola <http://dbpedia.org/ontology/commander> ?commanderEmilioMola.
}

# Step 2: Find the event (force) associated with Francisco Largo Caballero that is both a societal event and a military conflict
SELECT ?eventFranciscoLargoCaballero WHERE {
    ?eventFranciscoLargoCaballero <http://dbpedia.org/ontology/person> <http://dbpedia.org/resource/Francisco_Largo_Caballero>.
    ?eventFranciscoLargoCaballero <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocialEvent>.
    ?eventFranciscoLargoCaballero <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>.
}

# Step 3: Find the military force involved in the Rif War
SELECT ?rifWarForce WHERE {
    <http://dbpedia.org/resource/Rif_War> <http://dbpedia.org/ontology/militaryForce> ?rifWarForce.
}

# Step 4: Combine results to find common commanders or forces
SELECT DISTINCT ?commanderEmilioMola WHERE {
    # Reuse the result from step 1
    ?eventEmilioMola <http://dbpedia.org/ontology/person> <http://dbpedia.org/resource/Emilio_Mola>.
    ?eventEmilioMola <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>.
    ?eventEmilioMola <http://dbpedia.org/ontology/commander> ?commanderEmilioMola.

    # Reuse the result from step 2
    ?eventFranciscoLargoCaballero <http://dbpedia.org/ontology/person> <http://dbpedia.org/resource/Francisco_Largo_Caballero>.
    ?eventFranciscoLargoCaballero <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocialEvent>.
    ?eventFranciscoLargoCaballero <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>.

    # Reuse the result from step 3
    <http://dbpedia.org/resource/Rif_War> <http://dbpedia.org/ontology/militaryForce> ?rifWarForce.

    # Find any overlap or connection between these entities
    OPTIONAL { ?eventEmilioMola = ?eventFranciscoLargoCaballero }
    OPTIONAL { ?rifWarForce = ?eventEmilioMola }
}
```",5,8,6,2,3,3,3,71,0,0,11,0,0.0,0
48,14,val,"Give me the band of the actor, that is a musical artist, of the show with Stacey Dash.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Stacey_Dash> . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/property/starring> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
SELECT ?actor ?band WHERE {
  ?show dbp:starring <http://dbpedia.org/resource/Stacey_Dash> .
  ?actor dbo:role ?show ;
         dbo:musicalArtist true ;
         dbo:band ?band .
}
```",3,4,4,3,1,3,2,20,0,0,36,0,0.0,0
659,25,val,"Give me the military force of the force, that is a societal event and an event and a military conflict, of Rutger Jan Schimmelpenninck and commander in Battle of Leipzig.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> . <http://dbpedia.org/resource/Battle_of_Leipzig> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v1 . },"```sparql
SELECT ?result WHERE {
  ?conflict <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>.
  ?conflict <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>.
  ?conflict <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>.
  
  <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> <http://dbpedia.org/property/involvedIn> ?conflict.
  
  ?battle <http://dbpedia.org/ontology/commander> ?commander.
  ?commander <http://dbpedia.org/ontology/battle> ?conflict.
  ?battle <http://www.w3.org/1999/02/22-rdf-syntax-ns#label> ""Battle of Leipzig""@en.

  ?conflict <http://dbpedia.org/property/militaryForce> ?result.
}
```",3,6,4,2,2,3,3,71,0,0,6,0,0.0,0
92,42,val,"Give me the band member of the reference, that is an artist, to Nevermore and band of the person born as Joseph Michael Furney and associated musical artist of Jim Sheppard.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://xmlns.com/foaf/0.1/name> ""Nevermore""@en . ?v1 <http://dbpedia.org/property/birthName> ""Joseph Michael Furney""@en . <http://dbpedia.org/resource/Jim_Sheppard> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/bandMember> ?v1 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . }","```sparql
SELECT ?bandMember WHERE {
  # Find band members of Nevermore
  ?artist <http://dbpedia.org/ontology/member> ?nevermoreBand .
  ?nevermoreBand <http://dbpedia.org/ontology/name> ""Nevermore"" .

  # Ensure the artist is associated with Jim Sheppard
  ?artist <http://dbpedia.org/property/associatedMusicalArtist> <http://dbpedia.org/resource/Jim_Sheppard> .

  # Find bands that include members born as Joseph Michael Furney
  ?bandMember <http://dbpedia.org/ontology/member> ?furneyBand .
  ?furneyBand <http://dbpedia.org/property/bandMember> ?person .
  ?person <http://dbpedia.org/ontology/birthName> ""Joseph Michael Furney"" .

  # Ensure the band member is the same artist
  FILTER (?artist = ?bandMember)
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
747,32,val,Give me the person born on the birth date of Pavlo Khudzik and band of the writer of Apollo (Hardwell song).,SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Pavlo_Khudzik> <http://dbpedia.org/ontology/birthDate> ?v1 . ?result <http://dbpedia.org/ontology/birthDate> ?v1 . <http://dbpedia.org/resource/Apollo_(Hardwell_song)> <http://dbpedia.org/property/writer> ?v3 . },"```sparql
# Query 1: Find a person born on the same date as Pavlo Khudzik
SELECT ?person WHERE {
    <http://dbpedia.org/resource/Pavlo_Khudzik> dbo:birthday ?birthDate .
    ?person dbo:birthday ?sameBirthDate .
    FILTER (?birthDate = ?sameBirthDate && ?person != <http://dbpedia.org/resource/Pavlo_Khudzik>)
}

# Query 2: Find the band of the writer of Apollo (Hardwell song)
SELECT ?band WHERE {
    ?song dbo:lyricsBy ?writer .
    ?song rdfs:label ""Apollo""@en .
    ?writer dbo:member ?band .
    FILTER CONTAINS(LCASE(?song), LCASE(""apollo""))
}
```",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
232,35,val,"Give me the child of the person born as John Devon Roland Pertwee and native of the residence, that is a settlement and British, of Sylvie Bermann.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . <http://dbpedia.org/resource/Sylvie_Bermann> <http://dbpedia.org/property/residence> ?v1 . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v2 <http://dbpedia.org/property/birthName> ""John Devon Roland Pertwee""@en . }","```sparql
# Step 1: Identify the person born as John Devon Roland Pertwee
SELECT ?person WHERE {
    ?person <http://dbpedia.org/ontology/birthName> ""John Devon Roland Pertwee"" .
}

# Step 2: Determine Sylvie Bermann's residence that is both a settlement and British
SELECT ?residence WHERE {
    ?sylvie <http://dbpedia.org/property/residence> ?residence .
    ?residence <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement> .
    ?residence <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> .
}

# Step 3: Find any children associated with John Devon Roland Pertwee who are native to Sylvie Bermann's identified residence
SELECT ?child WHERE {
    ?person <http://dbpedia.org/ontology/birthName> ""John Devon Roland Pertwee"" .
    ?person <http://dbpedia.org/ontology/child> ?child .
    ?child <http://dbpedia.org/property/nativePlace> ?residence .
}
```",4,6,5,2,2,3,3,71,0,0,1,0,0.0,0
617,29,val,Give me the spouse of the child of Antiochus III the Great and parent of Nysa (wife of Pharnaces I of Pontus) and child of Antiochus III the Great.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Antiochus_III_the_Great> . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Nysa_(wife_of_Pharnaces_I_of_Pontus)> . <http://dbpedia.org/resource/Antiochus_III_the_Great> <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
SELECT ?spouse WHERE {
  ?child rdf:type dbo:Child .
  ?child dbo:parent <http://dbpedia.org/resource/Antiochus_III_the_Great> .
  ?child dbo:child <http://dbpedia.org/resource/Nysa_(wife_of_Pharaces_I_of_Pontus)> .
  ?child dbo:spouse ?spouse .
}
```",4,4,5,2,3,3,3,71,0,0,2,0,0.0,0
427,26,val,Give me the party of the father of the alumnus of Massachusetts Institute of Technology.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Massachusetts_Institute_of_Technology> . ?v2 <http://dbpedia.org/ontology/party> ?result . ?v1 <http://dbpedia.org/property/father> ?v2 . },"```sparql
SELECT DISTINCT ?party WHERE {
  ?alumnus <http://dbpedia.org/ontology/alumniOf> <http://dbpedia.org/resource/Massachusetts_Institute_of_Technology> .
  ?alumnus <http://dbpedia.org/property/father> ?father .
  ?father <http://dbpedia.org/ontology/party> ?party .
}
```",3,3,4,3,1,3,3,71,0,0,7,0,0.0,0
179,13,val,"Give me the person born as the birth name of the child, that is a royalty, of Nakkhatra Mangala.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Nakkhatra_Mangala> . },"```sparql
SELECT ?person ?birthName WHERE {
  ?child <http://dbpedia.org/ontology/birthName> ?birthName .
  ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
  ?child <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Nakkhatra_Mangala> .
  BIND(?child AS ?person)
}
```",3,4,4,3,1,3,2,20,0,0,1,0,0.0,0
378,28,val,"Give me the claim to fame of Louis des Balbes de Berton de Crillon, 1st Duke of Mahón and war of the person born as Carl Pontus Gahn and war of Joaquín Blake.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ""Carl Pontus Gahn""@en . ?v1 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Joaquín_Blake> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Louis_des_Balbes_de_Berton_de_Crillon,_1st_Duke_of_Mahón> <http://dbpedia.org/ontology/knownFor> ?result . }","```sparql
SELECT ?claimToFame ?warGahn ?warBlake WHERE {
  # Claim to fame of Louis des Balbes de Berton de Crillon, 1st Duke of Mahón
  <http://dbpedia.org/resource/Louis_des_Balbes_de_Berton_de_Crillon,_1st_Duke_of_Mahón> <http://dbpedia.org/ontology/knownFor> ?claimToFame .

  # War associated with Carl Pontus Gahn
  OPTIONAL {
    <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/ontology/battle> ?warGahn .
  }

  # War associated with Joaquín Blake
  OPTIONAL {
    <http://dbpedia.org/resource/Joaquín_Blake> <http://dbpedia.org/ontology/battle> ?warBlake .
  }
}
```",4,4,5,2,3,3,3,71,2,19,0,0.09523809523809523,1.0,0.17391304347826084
783,11,val,Give me the associated musical artist of the band member of Ofori Amponsah and band member of Ebony Reigns.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Ofori_Amponsah> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Ebony_Reigns> . },"```sparql
# Step 1: Get band members of Ofori Amponsah
SELECT ?member WHERE {
    ?band <http://dbpedia.org/ontology/member> ?member .
    ?band <http://dbpedia.org/property/associatedMusicalArtist> <http://dbpedia.org/resource/Ofori_Amponsah> .
}

# Step 2: Get band members of Ebony Reigns
SELECT ?member WHERE {
    ?band <http://dbpedia.org/ontology/member> ?member .
    ?band <http://dbpedia.org/property/associatedMusicalArtist> <http://dbpedia.org/resource/Ebony_Reigns> .
}

# Step 3: Find common members between the two bands
SELECT DISTINCT ?commonMember WHERE {
    { ?band1 <http://dbpedia.org/ontology/member> ?commonMember . 
      ?band1 <http://dbpedia.org/property/associatedMusicalArtist> <http://dbpedia.org/resource/Ofori_Amponsah> .
    }
    { ?band2 <http://dbpedia.org/ontology/member> ?commonMember . 
      ?band2 <http://dbpedia.org/property/associatedMusicalArtist> <http://dbpedia.org/resource/Ebony_Reigns> .
    }
}

# Step 4: Get associated musical artist(s) of the common members
SELECT DISTINCT ?artist WHERE {
    ?member <http://dbpedia.org/ontology/member> ?band .
    ?band <http://dbpedia.org/property/associatedMusicalArtist> ?artist .
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
659,37,val,"Give me the military force of Napoleonic Wars and commander in the war, that is an event and a military conflict, of the figure known, that is a military unit and an organisation, as 'Polish Horse'.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/property/nickname> ""'Polish Horse'""@en . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Napoleonic_Wars> . ?v0 <http://dbpedia.org/ontology/battle> ?v3 . }","```sparql
SELECT ?militaryForce WHERE {
  ?figure rdfs:label ""Polish Horse""@en .
  ?figure a <http://dbpedia.org/ontology/MilitaryUnit> ;
          a <http://dbpedia.org/ontology/Organisation> .

  ?figure dbo:knownFor ?event .
  ?event a <http://dbpedia.org/ontology/Event> ;
         a <http://dbpedia.org/ontology/MilitaryConflict> .

  ?event dbo:commander ?commander .

  ?napoleonicWar a <http://dbpedia.org/ontology/MilitaryConflict> ;
                 rdfs:label ""Napoleonic Wars""@en .
  
  ?commander dbo:militaryForce ?militaryForce .
  FILTER EXISTS { ?militaryForce dbo:partOf ?napoleonicWar }
}
```",4,8,5,3,2,3,3,71,0,0,29,0,0.0,0
421,15,val,Give me the band member of the awardee of [[#Awards and nominations and person born as Edin Dervišhalidović.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/awards> ""[[#Awards and nominations""@en . ?result <http://dbpedia.org/property/birthName> ""Edin Dervišhalidović""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . }","```sparql
# Step 1: Identify the person born as Edin Dervišhalidović (Edo Maajka)
SELECT ?person WHERE {
    ?person rdfs:label ""Edo Maajka""@en .
    ?person foaf:name ""Edin Dervišhalidović"" .
}

# Step 2: Find the awards won by Edo Maajka
SELECT ?award WHERE {
    ?person wdt:P136 ?award . # P136 is the property for award received
    ?person rdfs:label ""Edo Maajka""@en .
}

# Step 3: Determine the band members of Edo Maajka
SELECT ?bandMember WHERE {
    ?band wdt:P175 ?bandMember . # P175 is the property for band member
    ?band wdt:P31 wd:Q1344287 . # Q1344287 is the entity type for musical groups
    ?person wdt:P106 ?band . # P106 is the property for occupation, linking person to their band
    ?person rdfs:label ""Edo Maajka""@en .
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
487,15,val,Give me the country of the administration of the person born on 1955-01-26 and administration of Phil Scott.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/leader> ?v0 . ?result <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/Phil_Scott> . ?v0 <http://dbpedia.org/ontology/birthDate> ""1955-01-26""^^<http://www.w3.org/2001/XMLSchema#date> . ?v1 <http://dbpedia.org/ontology/country> ?result . }","```sparql
# Query for the person born on 1955-01-26
SELECT ?person ?country WHERE {
  ?person dbp:birthDate ""1955-01-26""^^xsd:date .
  OPTIONAL { ?person dbo:administrativePost ?post . }
  OPTIONAL { ?post dbo:country ?country . }
}

UNION

# Query for Phil Scott
SELECT ?philScott ?country WHERE {
  ?philScott rdfs:label ""Phil Scott""@en .
  OPTIONAL { ?philScott dbo:administrativePost ?post . }
  OPTIONAL { ?post dbo:country ?country . }
}
```",4,4,5,3,2,3,2,20,0,0,1,0,0.0,0
404,19,val,"Give me the parent of Prince Ernest Augustus of Hanover (born 1914) and spouse of the person born, that is a royalty, as Princess Victoria Louise of Prussia.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ""Princess Victoria Louise of Prussia""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Prince_Ernest_Augustus_of_Hanover_(born_1914)> . }","```sparql
SELECT ?person WHERE {
  # Find the parent of Prince Ernest Augustus of Hanover (born 1914)
  <http://dbpedia.org/resource/Prince_Ernest_Augustus_of_Hanover_(1914)> <http://dbpedia.org/ontology/father> ?parent .
  
  # Find the spouse of Princess Victoria Louise of Prussia
  <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/property/spouse> ?spouse .

  # Check if the parent and spouse are the same person
  FILTER (?parent = ?spouse)
  
  # Bind the common individual to the variable ?person
  BIND(?parent AS ?person)
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
747,24,val,Give me the band of the writer of Apollo (Hardwell song) and band of Shèna.,SELECT ?result WHERE { <http://dbpedia.org/resource/Shèna> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Apollo_(Hardwell_song)> <http://dbpedia.org/property/writer> ?v2 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
# Find the band of the writer of Apollo (Hardwell song)
SELECT ?band1 WHERE {
  ?song dbpedia-owl:lyricsBy ?writer .
  ?song rdfs:label ""Apollo (Hardwell song)""@en .
  ?writer dbo:musicGroup ?band1 .
}

UNION

# Find the band of Shèna
SELECT ?band2 WHERE {
  ?person dbo:musicGroup ?band2 .
  ?person rdfs:label ""Shèna""@en .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
54,18,val,Give me the parent of Thado Minsaw of Prome and child of Thinkhaya of Pagan and predecessor of Ameitta Thiri Maha Dhamma Dewi of Ava.,SELECT ?result WHERE { <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Ameitta_Thiri_Maha_Dhamma_Dewi_of_Ava> . },"```sparql
SELECT ?individual WHERE {
  ?individual <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> .
  ?individual <http://dbpedia.org/ontology/mother> <http://dbpedia.org/resource/Thinkhaya_of_Pagan> .
  ?individual <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Ameitta_Thiri_Maha_Dhamma_Dewi_of_Ava> .
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
427,19,val,Give me the party of Giulio Andreotti and reference to the name of Italian People's Party (1994).,SELECT ?result WHERE { <http://dbpedia.org/resource/Italian_People's_Party_(1994)> <http://xmlns.com/foaf/0.1/name> ?v0 . <http://dbpedia.org/resource/Giulio_Andreotti> <http://dbpedia.org/ontology/party> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v0 . },"```sparql
SELECT ?party WHERE {
  <http://dbpedia.org/resource/Giulio_Andreotti> <http://dbpedia.org/ontology/party> ?party .
  FILTER EXISTS { 
    ?party <http://www.w3.org/2000/01/rdf-schema#label> ""Italian People's Party (1994)""@en .
  }
}
```",3,3,4,2,2,3,3,71,1,0,0,1.0,1.0,1.0
747,37,val,"Give me the band of the writer of the work, that is a song, of Amba Shepherd and band of Shèna.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Amba_Shepherd> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Shèna> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/writer> ?v3 . },"```sparql
# Step 1: Find the song related to Amba Shepherd
SELECT ?song WHERE {
    ?song <http://dbpedia.org/ontology/lyricist> ?writer .
    ?song <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song> .
    ?song <http://dbpedia.org/property/performedBy> <http://dbpedia.org/resource/Amba_Shepherd> .
}

# Step 2: Find the writer of that song
SELECT ?writer WHERE {
    ?song <http://dbpedia.org/ontology/lyricist> ?writer .
    ?song <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song> .
    ?song <http://dbpedia.org/property/performedBy> <http://dbpedia.org/resource/Amba_Shepherd> .
}

# Step 3: Determine the band associated with this writer
SELECT ?band WHERE {
    ?writer <http://dbpedia.org/ontology/memberOfBand> ?band .
}

# Step 4: Identify the band associated with Shèna
SELECT ?shenaBand WHERE {
    ?shenaBand <http://dbpedia.org/property/performedBy> <http://dbpedia.org/resource/Shèna> .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
747,36,val,Give me the band of the person born as the persona of Shèna and person born on 1985-04-29.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Shèna> <http://xmlns.com/foaf/0.1/givenName> ?v0 . ?result <http://dbpedia.org/ontology/birthDate> ""1985-04-29""^^<http://www.w3.org/2001/XMLSchema#date> . ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
SELECT ?person ?band WHERE {
  ?person <http://dbpedia.org/ontology/birthDate> ""1985-04-29""^^<http://www.w3.org/2001/XMLSchema#date> .
  ?person <http://xmlns.com/foaf/0.1/knowsAs> ""Shèna"" .
  OPTIONAL { ?person <http://dbpedia.org/ontology/memberOfBand> ?band . }
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
10,12,val,Give me the professional in  and associated musical artist of Matt Colton and band member of Luke Vibert.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Luke_Vibert> . <http://dbpedia.org/resource/Matt_Colton> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
# Step 1: Find professionals associated with Matt Colton
SELECT ?person WHERE {
    ?person <http://dbpedia.org/ontology/profession> ?profession .
    ?association <http://dbpedia.org/property/associatedWith> <http://dbpedia.org/resource/Matt_Colton> .
    ?association <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ProfessionalAssociation> .
    ?association <http://purl.org/dc/terms/creator> ?person .
}

UNION

# Step 2: Find band members of Luke Vibert
SELECT ?bandMember WHERE {
    ?band <http://dbpedia.org/property/member> ?bandMember .
    ?band <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalBand> .
    ?band <http://purl.org/dc/terms/creator> <http://dbpedia.org/resource/Luke_Vibert> .
}

# Step 3: Find the intersection of both sets
SELECT DISTINCT ?person WHERE {
    VALUES ?person { ?associatedPerson ?bandMember }
}
```",3,3,4,1,3,2,3,28,0,0,1,0,0.0,0
528,28,val,Give me the war of the military force of Battle of Pisagua and war of Orozimbo Barbosa and force of Narciso Campero.,SELECT ?result WHERE { <http://dbpedia.org/resource/Orozimbo_Barbosa> <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Pisagua> . ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Narciso_Campero> . },"```sparql
SELECT ?war WHERE {
  # Military force in the Battle of Pisagua
  <http://dbpedia.org/resource/Battle_of_Pisagua> <http://dbpedia.org/ontology/militaryForce> ?force1 .
  
  # War involving Orozimbo Barbosa
  ?barbosaWar <http://dbpedia.org/ontology/person> <http://dbpedia.org/resource/Orozimbo_Barbosa> .
  
  # Military force commanded by Narciso Campero
  <http://dbpedia.org/resource/Narciso_Campero> <http://dbpedia.org/ontology/commander> ?force2 .

  # Find the war that involves all three entities
  ?war <http://dbpedia.org/ontology/militaryForce> ?force1 .
  ?war <http://dbpedia.org/ontology/person> <http://dbpedia.org/resource/Orozimbo_Barbosa> .
  ?war <http://dbpedia.org/ontology/militaryForce> ?force2 .
}
```",4,4,5,2,3,3,3,71,0,0,2,0,0.0,0
435,12,val,"Give me the work of Article 62, Section IV of Constitution of Iceland and region of Greenwich Mean Time and territory administered from Reykjavík.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Greenwich_Mean_Time> . ?result <http://dbpedia.org/property/author> ""Article 62, Section IV of Constitution of Iceland""@en . ?result <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Reykjavík> . }","```sparql
SELECT ?work WHERE {
  # Condition 1: Work of ""Article 62, Section IV of Constitution of Iceland""
  <http://dbpedia.org/resource/Article_62,_Section_IV_of_Constitution_of_Iceland> <http://www.w3.org/2000/01/rdf-schema#isPartOf> ?work .

  # Condition 2: Region associated with Greenwich Mean Time
  ?region <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Greenwich_Mean_Time> .
  
  # Condition 3: Territory administered from Reykjavík
  ?territory <http://dbpedia.org/ontology/administrativeCapital> <http://dbpedia.org/resource/Reykjavík> .

  # Joining the conditions
  FILTER(?work = ?region && ?work = ?territory)
}
```",3,3,4,1,3,2,3,28,0,0,1,0,0.0,0
485,13,val,"Give me the birth place of Thomas Warner (poet) and entity in the region, that is a country, of Western European Time.",SELECT ?result WHERE { <http://dbpedia.org/resource/Thomas_Warner_(poet)> <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Western_European_Time> . ?result <http://dbpedia.org/ontology/country> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
# Query to get the birth place of Thomas Warner (poet)
SELECT ?birthPlace WHERE {
  <http://dbpedia.org/resource/Thomas_Warner_(poet)> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
}

# Query to find an entity in a region that is a country within Western European Time
SELECT DISTINCT ?country WHERE {
  ?region <http://www.w3.org/2006/timezone#timezone> <http://dbpedia.org/resource/Western_European_Time> .
  ?country <http://dbpedia.org/ontology/country> ?region .
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
487,11,val,Give me the country of the administration of Patricia McCoy and administration of Phil Scott.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/Phil_Scott> . ?v2 <http://dbpedia.org/ontology/country> ?result . ?v2 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Patricia_McCoy> . },"```sparql
SELECT DISTINCT ?country WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/Patricia_McCoy> <http://dbpedia.org/ontology/administration> ?administration1 .
    ?administration1 <http://dbpedia.org/property/country> ?country .
  }
  OPTIONAL { 
    <http://dbpedia.org/resource/Phil_Scott> <http://dbpedia.org/ontology/administration> ?administration2 .
    ?administration2 <http://dbpedia.org/property/country> ?country .
  }
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
959,37,val,"Give me the native of the residence, that is a country, of the leader, that is a politician, of 2010 Japanese House of Councillors election and manager of 2013 Júbilo Iwata season.",SELECT ?result WHERE { <http://dbpedia.org/resource/2013_Júbilo_Iwata_season> <http://dbpedia.org/ontology/manager> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v1 <http://dbpedia.org/property/residence> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/2010_Japanese_House_of_Councillors_election> <http://dbpedia.org/property/leader> ?v1 . },"```sparql
# Step 1: Identify the leader who fits both roles
SELECT ?leader WHERE {
    ?election dbpedia-owl:winner ?leader .
    FILTER(CONTAINS(LCASE(STR(?election)), ""2010 japanese house of councillors election""))
    
    ?team dbpedia-owl:manager ?leader ;
          dbpedia-owl:sportTeam <http://dbpedia.org/resource/Júbilo_Iwata> .
    FILTER(YEAR(?team) = 2013)
}

# Step 2: Determine the residence (a country) of this leader
SELECT ?residence WHERE {
    ?leader foaf:based_near ?location .
    ?location dbpedia-owl:country ?residence .
    ?residence a <http://dbpedia.org/ontology/Country> .
}

# Step 3: Find out who is native to that country
SELECT ?native WHERE {
    ?native dbo:nationality ?residence .
}
```",4,6,5,3,2,3,3,71,0,0,3,0,0.0,0
314,15,val,Give me the commander in Spanish Civil War and person deceased at the headquarter of House of Sombrerete.,SELECT ?result WHERE { <http://dbpedia.org/resource/House_of_Sombrerete> <http://dbpedia.org/ontology/location> ?v1 . ?result <http://dbpedia.org/ontology/restingPlace> ?v1 . <http://dbpedia.org/resource/Spanish_Civil_War> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Spanish_Civil_War> .
  ?person <http://dbpedia.org/property/deathPlace> <http://dbpedia.org/resource/House_of_Sombrerete_headquarters> .
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
701,19,val,Give me the parent of the child of Nefertari and parent of Henuttawy (19th dynasty).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Henuttawy_(19th_dynasty)> . ?v0 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Nefertari> <http://dbpedia.org/ontology/child> ?v0 . },"```sparql
SELECT ?parent WHERE {
  ?child <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/Nefertari>.
  ?child <http://dbpedia.org/ontology/spouse> ?henuttawy.
  ?henuttawy rdfs:label ""Henuttawy (19th dynasty)""@en.
  ?parent <http://dbpedia.org/ontology/birthParent> ?child.
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
391,38,val,"Give me the actor of the movie, that is a movie and a work and a television show, with Roz Ryan and actor of the claim to fame, that is a work, of Michael Ballhaus.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. <http://dbpedia.org/resource/Michael_Ballhaus> <http://dbpedia.org/ontology/knownFor> ?v3 . ?v2 <http://dbpedia.org/property/starring> ?result . ?v3 <http://dbpedia.org/ontology/starring> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Roz_Ryan> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. },"```sparql
# Step 1: Find movies that are both films and television shows featuring Roz Ryan
SELECT ?movie WHERE {
    ?movie <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Movie>.
    ?movie <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>.
    ?movie <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>.
    ?movie dbp:starring <http://dbpedia.org/resource/Roz_Ryan>.
}

# Step 2: Find works that are Michael Ballhaus's claim to fame
SELECT ?work WHERE {
    <http://dbpedia.org/resource/Michael_Ballhaus> <http://dbpedia.org/ontology/knownFor> ?work.
    ?work <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>.
}

# Step 3: Find the common actor between these movies and works
SELECT DISTINCT ?actor WHERE {
    # Actors in the movie from step 1
    ?movie dbp:starring ?actor.
    
    # Works associated with Michael Ballhaus
    ?work <http://dbpedia.org/ontology/knownFor> <http://dbpedia.org/resource/Michael_Ballhaus>.
    ?work dbp:starring ?actor.

    # Ensure the movie is from step 1 and work is from step 2
    VALUES ?movie { 
        # Replace with actual URIs of movies found in Step 1
    }
    VALUES ?work {
        # Replace with actual URIs of works found in Step 2
    }
}
```

Note: The `VALUES` clause should be replaced with the actual URIs obtained from executing Steps 1 and 2 separately. This query assumes that you can execute these steps sequentially to gather necessary data before running the final step.",4,8,5,2,2,3,3,71,0,0,1,0,0.0,0
142,7,val,Give me the birthplace of George Tokoro and entity in the region of Japan Standard Time.,SELECT ?result WHERE { <http://dbpedia.org/resource/George_Tokoro> <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Japan_Standard_Time> . ?result <http://dbpedia.org/ontology/country> ?v0 . },"```sparql
# Query to get the birthplace of George Tokoro
SELECT ?birthPlace WHERE {
  <http://dbpedia.org/resource/George_Tokoro> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
}

# Query to find entities in the region of Japan Standard Time (JST)
SELECT ?entity WHERE {
  ?entity <http://www.w3.org/2000/01/rdf-schema#seeAlso> <http://dbpedia.org/resource/Japan_Standard_Time> .
}
```",3,3,4,2,2,2,2,9,0,0,1,0,0.0,0
696,14,val,Give me the landmark at elevation of the award of the commander in Battle of Chishui River.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Battle_of_Chishui_River> <http://dbpedia.org/ontology/commander> ?v2 . ?result <http://dbpedia.org/ontology/elevation> ?v0 . },"```sparql
SELECT ?landmark WHERE {
  ?battle <http://dbpedia.org/ontology/commander> ?commander .
  ?award <http://dbpedia.org/property/receiver> ?commander .
  ?award <http://dbpedia.org/ontology/elevation> ?elevation .
  ?landmark <http://www.w3.org/2003/01/geo/wgs84_pos#lat> ?lat ;
            <http://www.w3.org/2003/01/geo/wgs84_pos#long> ?long ;
            <http://dbpedia.org/ontology/elevation> ?elevation .
  FILTER(?battle = <http://dbpedia.org/resource/Battle_of_Chishui_River>)
}
```",3,3,4,3,1,3,2,20,0,0,1731,0,0.0,0
55,17,val,"Give me the band of Newsted and band member of the band member, that is a band and a group, of San Francisco Symphony.",SELECT ?result WHERE { <http://dbpedia.org/resource/Newsted> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/San_Francisco_Symphony> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . },"```sparql
SELECT ?bandMember WHERE {
  ?band <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/Newsted>.
  ?band <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>.
  ?band <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>.
  
  ?bandMember <http://dbpedia.org/ontology/member> ?band.
  ?group <http://dbpedia.org/ontology/member> ?bandMember.
  ?group <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>.
  ?group <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>.
  
  ?symphony <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/San_Francisco_Symphony>.
  ?group <http://www.w3.org/2000/01/rdf-schema#seeAlso> ?symphony.
}
```",3,5,4,2,2,2,3,28,0,0,3,0,0.0,0
54,42,val,"Give me the parent of Thado Minsaw of Prome and child of the father of Soe Min Wimala Dewi and predecessor of the child, that is an office holder and a royalty, of Thihapate of Mohnyin.",SELECT ?result WHERE { <http://dbpedia.org/resource/Soe_Min_Wimala_Dewi> <http://dbpedia.org/property/father> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Thihapate_of_Mohnyin> . <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/successor> ?v1 . },"```sparql
SELECT ?parent WHERE {
    # Step 1: Identify Thado Minsaw of Prome's parent
    ?thadoMinsaw dbpedia-owl:parent ?parent.
    
    FILTER(?thadoMinsaw = <http://dbpedia.org/resource/Thado_Minsaw_of_Prome>).

    # Step 2: Find Soe Min Wimala Dewi's father
    ?soeMinWimalaDewi dbpedia-owl:father ?father.
    
    FILTER(?soeMinWimalaDewi = <http://dbpedia.org/resource/Soe_Min_Wimala_Dewi>).

    # Step 3: Determine the child of Soe Min Wimala Dewi's father
    ?child dbpedia-owl:parent ?father.

    # Step 4: Identify Thihapate of Mohnyin's child who is an office holder and royalty
    ?thihapateChild dbpedia-owl:parent <http://dbpedia.org/resource/Thihapate_of_Mohnyin>.
    
    FILTER(?thihapateChild rdf:type <http://dbpedia.org/ontology/OfficeHolder> &&
           ?thihapateChild rdf:type <http://dbpedia.org/ontology/Royalty>).

    # Step 5: Find the predecessor of Thihapate of Mohnyin's child
    ?predecessor dbpedia-owl:successor ?thihapateChild.

    # Step 6: Match the parent from step 1 with the predecessor from step 5
    FILTER(?parent = ?predecessor)
}
```",5,7,6,2,3,3,3,71,0,0,1,0,0.0,0
378,23,val,Give me the war of the person born as the birth name of Carl Pontus Gahn.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ?v2 . ?v0 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/property/birthName> ?v2 . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/ontology/birthName> ?birthName .
  OPTIONAL { ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person> . }
  OPTIONAL { ?person <http://dbpedia.org/property/birthName> ?birthName . }
  OPTIONAL { ?person <http://dbpedia.org/ontology/war> ?result . }
  FILTER(?birthName = ""Carl Pontus Gahn"")
}
```",3,3,4,3,1,3,3,71,0,0,12,0,0.0,0
360,14,val,"Give me the writer of The Roaring Silence and native of the death place, that is a settlement, of Winnie Madikizela-Mandela.",SELECT ?result WHERE { <http://dbpedia.org/resource/Winnie_Madikizela-Mandela> <http://dbpedia.org/ontology/deathPlace> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . <http://dbpedia.org/resource/The_Roaring_Silence> <http://dbpedia.org/property/writer> ?result . },"```sparql
SELECT ?writer WHERE {
  ?book <http://purl.org/dc/elements/1.1/title> ""The Roaring Silence"" .
  ?book <http://dbpedia.org/ontology/author> ?writer .

  OPTIONAL { 
    ?winnie <http://dbpedia.org/property/deathPlace> ?deathPlace .
    ?deathPlace <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement> .
    ?writer <http://dbpedia.org/ontology/nativeCountry> ?nativeCountry .
    ?nativeCountry <http://www.w3.org/2000/01/rdf-schema#label> ?deathPlaceLabel .
  }
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
391,34,val,"Give me the actor of All About the Andersons and native of the figure known as the nick name of Jackson, Tennessee.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/nickname> ?v2 . <http://dbpedia.org/resource/Jackson,_Tennessee> <http://xmlns.com/foaf/0.1/nick> ?v2 . <http://dbpedia.org/resource/All_About_the_Andersons> <http://dbpedia.org/property/starring> ?result . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . }","```sparql
# Step 1: Get the actor of ""All About the Andersons""
SELECT ?actor WHERE {
    ?film <http://dbpedia.org/ontology/starring> ?actor .
    ?film <http://dbpedia.org/property/title> ""All About the Andersons"" .
}

# Step 2: Find the nickname for Jackson, Tennessee
SELECT ?nickname WHERE {
    <http://dbpedia.org/resource/Jackson,_Tennessee> <http://dbpedia.org/ontology/nickName> ?nickname .
}

# Step 3: Check if the actor is a native of Jackson, Tennessee (using the nickname)
SELECT DISTINCT ?actor WHERE {
    ?film <http://dbpedia.org/ontology/starring> ?actor .
    ?film <http://dbpedia.org/property/title> ""All About the Andersons"" .
    ?actor <http://dbpedia.org/ontology/nativePlace> ?place .
    ?place <http://www.w3.org/2000/01/rdf-schema#label> ?nickname .
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
16,42,val,Give me the spouse of the person born as Ted Martin McGinley and professional in Actress and person born as the birth name of Gigi Rice.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/occupation> ""Actress""@en . ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Gigi_Rice> <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://dbpedia.org/property/birthName> ""Ted Martin McGinley""@en . }","```sparql
# Find the spouse of Ted Martin McGinley (actor)
SELECT ?spouse WHERE {
  ?person rdfs:label ""Ted Martin McGinley""@en .
  ?person foaf:name ""Ted Martin McGinley"" .
  ?person dbo:profession dbo:Actor ;
          foaf:birthName ""Ted Martin McGinley"" .
  ?person dbo:spouse ?spouse .
}

UNION

# Find the spouse of Gigi Rice (actor)
SELECT ?spouse WHERE {
  ?person rdfs:label ""Gigi Rice""@en .
  ?person foaf:name ""Gigi Rice"" ;
          foaf:birthName ""Gigi Rice"" .
  ?person dbo:profession dbo:Actor ;
          dbo:birthName ""Gigi Rice"" .
  ?person dbo:spouse ?spouse .
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
314,17,val,Give me the awardee of the award of Sergei Makovetsky and commander in Spanish Civil War.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ?v1 . <http://dbpedia.org/resource/Spanish_Civil_War> <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Sergei_Makovetsky> <http://dbpedia.org/property/awards> ?v1 . },"```sparql
# Step 1: Retrieve awards associated with Sergei Makovetsky
SELECT ?award WHERE {
    <http://dbpedia.org/resource/Sergei_Makovetsky> dbo:awarded <http://dbpedia.org/resource/Category:Awards_for_Sergei_Makovetsky> .
    ?award rdf:type dbo:Award .
}

# Step 2: Find awardees of those awards
SELECT DISTINCT ?person WHERE {
    ?award dbo:recipient ?person .
    FILTER(?award IN (<list_of_awards_from_step_1>))
}

# Step 3: Identify commanders in the Spanish Civil War
SELECT DISTINCT ?commander WHERE {
    <http://dbpedia.org/resource/Spanish_Civil_War> dbo:commander ?commander .
}

# Step 4: Find common entities between awardees and commanders
SELECT DISTINCT ?commonEntity WHERE {
    VALUES ?entity { (<list_of_awardees_from_step_2>) (<list_of_commanders_from_step_3>) }
    ?entity rdf:type dbo:Person .
}
```",3,3,4,2,2,2,3,28,0,0,2,0,0.0,0
360,13,val,"Give me the writer of the work, that is an album, of Dave Flett and native of Johannesburg.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Album>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Johannesburg> . ?v1 <http://dbpedia.org/property/author> ""Dave Flett""@en . ?v1 <http://dbpedia.org/property/writer> ?result . }","```sparql
SELECT ?writer WHERE {
  ?album <http://dbpedia.org/ontology/creator> ?writer .
  ?album <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalAlbum> .
  ?album <http://dbpedia.org/property/performance> <http://dbpedia.org/resource/Dave_Flett> .
  ?writer <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Johannesburg> .
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
184,33,val,"Give me the child of the child of the parent, that is a royalty, of Archduke Ladislaus Philipp of Austria and parent of Géza von Habsburg.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v3 . ?v3 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Géza_von_Habsburg> . <http://dbpedia.org/resource/Archduke_Ladislaus_Philipp_of_Austria> <http://dbpedia.org/ontology/parent> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
SELECT ?grandchild WHERE {
  ?parent <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Géza_von_Habsburg> .
  ?parent <http://www.w3.org/2000/01/rdf-schema#label> ""Archduke Ladislaus Philipp of Austria""@en .
  ?parent <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Austrian_nationality> .
  ?parent <http://dbpedia.org/ontology/child> ?child1 .
  ?child1 <http://www.w3.org/2000/01/rdf-schema#label> ""Géza von Habsburg""@en .
  ?child1 <http://dbpedia.org/ontology/child> ?grandchild .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
427,32,val,Give me the party of the father of Lamberto Andreotti and reference to the name of Italian People's Party (1994).,SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v1 . <http://dbpedia.org/resource/Italian_People's_Party_(1994)> <http://xmlns.com/foaf/0.1/name> ?v1 . <http://dbpedia.org/resource/Lamberto_Andreotti> <http://dbpedia.org/property/father> ?v3 . ?v3 <http://dbpedia.org/ontology/party> ?result . },"```sparql
SELECT ?party ?reference WHERE {
  # Find the father of Lamberto Andreotti and his party
  <http://dbpedia.org/resource/Lamberto_Andreotti> <http://xmlns.com/foaf/0.1/familyName> ?father .
  ?father <http://dbpedia.org/ontology/father> ?giorgioAndreotti .
  ?giorgioAndreotti <http://dbpedia.org/ontology/party> ?party .

  # Find reference to Italian People's Party (1994)
  OPTIONAL {
    ?reference <http://www.w3.org/2000/01/rdf-schema#label> ""Italian People's Party (1994)""@en .
  }
}
```",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
16,31,val,Give me the spouse of the person born as the birth name of Ted McGinley and professional in Actress.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/occupation> ""Actress""@en . }","```sparql
SELECT ?spouse WHERE {
  ?person <http://dbpedia.org/ontology/birthName> ""Ted McGinley"".
  ?person <http://purl.org/dc/terms/profession> <http://dbpedia.org/resource/Category:Actresses>.
  ?person <http://dbpedia.org/property/spouse> ?spouse.
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
232,28,val,Give me the native of London and child of the person born as John Devon Roland Pertwee and actor of Dog Soldiers (film).,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ""John Devon Roland Pertwee""@en . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/London> . ?v1 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Dog_Soldiers_(film)> <http://dbpedia.org/ontology/starring> ?result . }","```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/London>.
  ?person <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Sean_Pertwee>.
  ?film <http://dbpedia.org/ontology/starring> ?person.
  ?film <http://dbpedia.org/property/title> ""Dog Soldiers""@en.
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
747,33,val,"Give me the band of the writer of the work, that is a song, of Amba Shepherd and person born on 1985-04-29.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/birthDate> ""1985-04-29""^^<http://www.w3.org/2001/XMLSchema#date> . ?v0 <http://dbpedia.org/property/writer> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Amba_Shepherd> . }","```sparql
SELECT ?band WHERE {
    ?person dbpedia-owl:birthDate ""1985-04-29""^^xsd:date .
    ?song dbpedia-owl:writer ?person ;
          a dbo:Song .
    ?person dbo:member ?band .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
959,40,val,"Give me the manager of 2013 Júbilo Iwata season and member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of the person born in 1958 and native of Japan.","SELECT ?result WHERE { <http://dbpedia.org/resource/2013_Júbilo_Iwata_season> <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v3 <http://dbpedia.org/ontology/birthYear> ""1958""^^<http://www.w3.org/2001/XMLSchema#gYear> . ?v3 <http://dbpedia.org/ontology/almaMater> ?v1 . ?result <http://dbpedia.org/ontology/team> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Japan> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. }","```sparql
# Step 1: Find the person born in 1958 who is native of Japan.
SELECT ?person WHERE {
    ?person <http://dbpedia.org/property/birthYear> ""1958""^^<http://www.w3.org/2001/XMLSchema#gYear>.
    ?person <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Japan>.
}

# Step 2: Find the alma mater of this person that is Japanese, an organization, a university, and an educational institution.
SELECT ?almaMater WHERE {
    ?person <http://dbpedia.org/property/almaMater> ?almaMater.
    ?almaMater <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organization>.
    ?almaMater <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>.
    ?almaMater <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalOrganization>.
    ?almaMater <http://dbpedia.org/property/country> <http://dbpedia.org/resource/Japan>.
}

# Step 3: Find members of this alma mater.
SELECT ?member WHERE {
    ?almaMater <http://dbpedia.org/ontology/member> ?member.
}

# Step 4: Identify the manager of the 2013 Júbilo Iwata season.
SELECT ?manager WHERE {
    <http://dbpedia.org/resource/2013_Júbilo_Iwata_season> <http://dbpedia.org/property/manager> ?manager.
}
```

Note: This query is broken down into separate parts due to the complexity and limitations of SPARQL in handling nested queries with multiple conditions. Each part needs to be executed separately, and results combined manually or through additional processing.",5,9,6,3,3,3,3,71,0,0,1,0,0.0,0
378,34,val,"Give me the war of the person born as the birth name of Carl Pontus Gahn and claim to fame of Louis des Balbes de Berton de Crillon, 1st Duke of Mahón.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/property/birthName> ?v2 . ?v1 <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Louis_des_Balbes_de_Berton_de_Crillon,_1st_Duke_of_Mahón> <http://dbpedia.org/ontology/knownFor> ?result . }","```sparql
# Find the person born as Carl Pontus Gahn and their associated war
SELECT ?person ?war WHERE {
  ?person <http://dbpedia.org/ontology/birthName> ""Carl Pontus Gahn"" .
  ?person <http://dbpedia.org/ontology/war> ?war .
}

UNION

# Find the claim to fame of Louis des Balbes de Berton de Crillon, 1st Duke of Mahón
SELECT ?crillon ?war WHERE {
  <http://dbpedia.org/resource/Louis_des_Balbes_de_Berton_de_Crillon,_1st_Duke_of_Mahón> <http://dbpedia.org/ontology/knownFor> ?war .
  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
}

# Find the common war
SELECT DISTINCT ?commonWar WHERE {
  { SELECT ?person ?commonWar WHERE {
      ?person <http://dbpedia.org/ontology/birthName> ""Carl Pontus Gahn"" .
      ?person <http://dbpedia.org/ontology/war> ?commonWar .
    }
  }

  UNION

  { SELECT ?crillon ?commonWar WHERE {
      <http://dbpedia.org/resource/Louis_des_Balbes_de_Berton_de_Crillon,_1st_Duke_of_Mahón> <http://dbpedia.org/ontology/knownFor> ?commonWar .
      ?commonWar <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
    }
  }
}
```",4,4,5,3,2,3,3,71,0,0,2,0,0.0,0
485,12,val,Give me the birth place of Thomas Warner (poet) and entity in Nottinghamshire and entity in United Kingdom.,SELECT ?result WHERE { <http://dbpedia.org/resource/Thomas_Warner_(poet)> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Nottinghamshire> . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . },"```sparql
SELECT ?birthPlace ?nottinghamshireEntity ?ukEntity WHERE {
  # Query for birth place of Thomas Warner (poet)
  <http://dbpedia.org/resource/Thomas_Warner_(poet)> <http://www.w3.org/2000/01/rdf-schema#label> ""Thomas Warner (poet)""@en .
  <http://dbpedia.org/resource/Thomas_Warner_(poet)> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .

  # Query for an entity in Nottinghamshire
  ?nottinghamshireEntity <http://www.w3.org/2000/01/rdf-schema#label> ?labelNottinghamshire .
  ?nottinghamshireEntity <http://dbpedia.org/ontology/locatedIn> <http://dbpedia.org/resource/Nottinghamshire> .

  # Query for an entity in the United Kingdom
  ?ukEntity <http://www.w3.org/2000/01/rdf-schema#label> ?labelUk .
  ?ukEntity <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> .
}
```",3,3,4,1,3,2,3,28,0,0,1,0,0.0,0
767,36,val,"Give me the entity in Baden-Württemberg and reference to the alter ego of the persona, that is a fictional character, of Matthew Burland.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/state> <http://dbpedia.org/resource/Baden-Württemberg> . ?v0 <http://dbpedia.org/property/alterEgo> ""Matthew Burland""@en . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v0 <http://dbpedia.org/property/alterEgo> ?v1 . }","```sparql
SELECT ?entity ?alterEgo WHERE {
  ?entity <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Baden-W%C3%BCrttemberg>.
  
  OPTIONAL {
    ?fictionalCharacter <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>.
    ?fictionalCharacter <http://dbpedia.org/property/alterEgo> ?alterEgo.
    <http://dbpedia.org/resource/Matthew_Burland> <http://dbpedia.org/ontology/persona> ?fictionalCharacter.
  }
}
```",4,5,5,3,2,3,3,71,0,0,7,0,0.0,0
959,19,val,"Give me the native of Japan and member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of Eiji Ōtsuka.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Eiji_Ōtsuka> <http://dbpedia.org/ontology/almaMater> ?v2 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Japan> . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?result <http://dbpedia.org/ontology/team> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. },"```sparql
SELECT ?result WHERE {
  ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>.
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organization>.
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalOrganization>.
  ?result <http://www.w3.org/2000/01/rdf-schema#label> ?label.
  FILTER (CONTAINS(LCASE(?label), ""japanese"")).
  
  OPTIONAL { 
    ?almaMater <http://dbpedia.org/property/almaMater> <http://dbpedia.org/resource/Eiji_Ōtsuka>.
    ?member <http://dbpedia.org/ontology/member> ?almaMater.
    FILTER (?result = ?member)
  }
}
```",3,7,4,2,2,3,3,71,0,0,84,0,0.0,0
487,13,val,Give me the country of the administration of the person born on 1955-01-26.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthDate> ""1955-01-26""^^<http://www.w3.org/2001/XMLSchema#date> . ?v1 <http://dbpedia.org/ontology/country> ?result . ?v1 <http://dbpedia.org/property/leader> ?v0 . }","```sparql
SELECT ?country WHERE {
    ?person dbp:birthDate ""1955-01-26""^^xsd:date .
    ?person dbo:administrativeOffice ?office .
    ?office dbo:country ?country .
}
```",3,3,4,3,1,3,2,20,0,0,1,0,0.0,0
820,15,val,Give me the professional in the award of the author of Understanding Comics and child of Jack Schwartzman.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Jack_Schwartzman> . <http://dbpedia.org/resource/Understanding_Comics> <http://dbpedia.org/ontology/author> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v1 . },"```sparql
# Step 1: Find the author of ""Understanding Comics""
SELECT ?author WHERE {
    ?comic <http://dbpedia.org/ontology/author> ?author .
    ?comic <http://dbpedia.org/property/title> ""Understanding Comics"" .
}

# Step 2: Check if this author is a child of Jack Schwartzman
SELECT ?child WHERE {
    ?person <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Jack_Schwartzman> .
    ?person ?p ?o .
    FILTER(?author = ?person)
}

# Step 3: Find the professional role related to an award
SELECT DISTINCT ?professional WHERE {
    ?award <http://dbpedia.org/ontology/winner> ?person .
    ?person ?p ?o .
    FILTER(?child = ?person)
}
```",4,4,5,3,2,3,2,20,0,0,1,0,0.0,0
827,15,val,"Give me the father of William Ernest, Grand Duke of Saxe-Weimar-Eisenach and child of the child, that is a royalty, of the parent of Charles Alexander, Grand Duke of Saxe-Weimar-Eisenach.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/parent> ?v0 . ?v1 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/William_Ernest,_Grand_Duke_of_Saxe-Weimar-Eisenach> <http://dbpedia.org/property/father> ?result . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Charles_Alexander,_Grand_Duke_of_Saxe-Weimar-Eisenach> . }","```sparql
SELECT ?father WHERE {
  # Step 1: Find Charles Alexander and his parent (father)
  dbp:Charles_Alexander_Grand_Duke_of_Saxe-Weimar-Eisenach dbo:parent ?charlesFather .

  # Step 2: Identify all children of that parent who are royalty
  ?child dbo:parent ?charlesFather .
  ?child a dbo:Royalty .

  # Step 3: Find the child of this person who is William Ernest, Grand Duke of Saxe-Weimar-Eisenach
  ?child dbp:child dbp:William_Ernest_Grand_Duke_of_Saxe-Weimar-Eisenach .

  # Step 4: Identify the father of William Ernest
  dbp:William_Ernest_Grand_Duke_of_Saxe-Weimar-Eisenach dbo:father ?father .
}
```",4,5,5,3,2,3,2,20,0,0,1,0,0.0,0
391,26,val,"Give me the actor of the claim to fame, that is a work, of the spouse of Sherry Hormann.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/knownFor> ?v2 . <http://dbpedia.org/resource/Sherry_Hormann> <http://dbpedia.org/ontology/spouse> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/ontology/starring> ?result . },"```sparql
SELECT ?actor WHERE {
  ?spouse <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Sherry_Hormann> .
  ?spouse <http://dbpedia.org/ontology/knownFor> ?work .
  ?work <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work> .
  ?work <http://dbpedia.org/ontology/actor> ?actor .
}
```",3,4,4,3,1,3,3,71,0,0,20,0,0.0,0
659,19,val,"Give me the commander in Battle of Leipzig and commander in the force of Arthur Wellesley, 1st Duke of Wellington.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Arthur_Wellesley,_1st_Duke_of_Wellington> . <http://dbpedia.org/resource/Battle_of_Leipzig> <http://dbpedia.org/ontology/commander> ?result . }","```sparql
SELECT ?commander WHERE {
  ?battle1 <http://dbpedia.org/ontology/commander> ?commander .
  ?battle2 <http://dbpedia.org/ontology/commander> ?commander .
  ?force <http://dbpedia.org/property/force> ?commander .
  
  FILTER (?battle1 = <http://dbpedia.org/resource/Battle_of_Leipzig>)
  FILTER (?force = <http://dbpedia.org/resource/Arthur_Wellesley,_1st_Duke_of_Wellington>)
}
```",3,3,4,2,2,3,3,71,0,0,19,0,0.0,0
617,33,val,"Give me the child of Antiochus III the Great and spouse of the child of the successor, that is a royalty, of Antiochus (son of Antiochus III the Great).",SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Antiochus_III_the_Great> . ?v0 <http://dbpedia.org/ontology/child> ?v3 . <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/successor> ?v0 . ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
SELECT ?spouse WHERE {
  # Step 1: Find children of Antiochus III the Great
  ?child a dbo:Child ;
         dbo:parent <http://dbpedia.org/resource/Antiochus_III_the_Great> .

  # Step 2: Identify successor of Antiochus (son of Antiochus III the Great)
  ?antiochus dbp:father <http://dbpedia.org/resource/Antiochus_III_the_Great> ;
             a dbo:Person .
  
  ?successor dbo:succeededBy ?antiochus .

  # Step 3: Find children of that successor
  ?childOfSuccessor a dbo:Child ;
                    dbo:parent ?successor .

  # Step 4: Select the spouse who is royalty
  ?spouse dbo:spouse ?childOfSuccessor ;
          a dbo:Royalty .
}
```",4,5,5,3,2,3,3,71,0,0,4,0,0.0,0
617,12,val,"Give me the parent of the father, that is a royalty, of Richeza of Poland, Queen of Hungary and child of Doubravka of Bohemia.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v0 . <http://dbpedia.org/resource/Richeza_of_Poland,_Queen_of_Hungary> <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Doubravka_of_Bohemia> <http://dbpedia.org/ontology/child> ?result . }","```sparql
SELECT ?parent WHERE {
  ?richeza <http://dbpedia.org/ontology/birthName> ""Richeza of Poland, Queen of Hungary"" .
  ?richeza <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person> .
  ?richeza <http://dbpedia.org/ontology/father> ?father .
  ?father <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
  ?richeza <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/Doubravka_of_Bohemia> .
  ?father <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Human> .
  ?father <http://dbpedia.org/ontology/birthParent> ?parent .
}
```",3,4,4,2,2,3,2,20,0,0,1,0,0.0,0
281,29,val,"Give me the war of Beauchamp Seymour, 1st Baron Alcester and entity in the birth place, that is a country, of Bob Heffron and war of New Zealand Army.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> ?v3 . <http://dbpedia.org/resource/Beauchamp_Seymour,_1st_Baron_Alcester> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Bob_Heffron> <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/New_Zealand_Army> <http://dbpedia.org/ontology/battle> ?result . }","```sparql
# Step 1: Find the war of Beauchamp Seymour, 1st Baron Alcester
SELECT ?war1 WHERE {
    <http://dbpedia.org/resource/Beauchamp_Seymour,_1st_Baron_Alcester> <http://dbpedia.org/ontology/battle> ?war1 .
}

# Step 2: Find the country of birth for Bob Heffron and an entity in that country
SELECT DISTINCT ?entity WHERE {
    <http://dbpedia.org/resource/Bob_Heffron> <http://dbpedia.org/property/placeOfBirth> ?birthPlace .
    ?birthPlace <http://www.w3.org/2000/01/rdf-schema#seeAlso> ?country .
    ?entity <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Agent> .
    ?entity <http://www.w3.org/2000/01/rdf-schema#seeAlso> ?country .
}

# Step 3: Find the war of the New Zealand Army
SELECT ?war2 WHERE {
    <http://dbpedia.org/resource/New_Zealand_Army> <http://dbpedia.org/ontology/battle> ?war2 .
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
959,35,val,"Give me the manager of the team of Takashi Sekizuka and member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of Eiji Ōtsuka.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?result <http://dbpedia.org/ontology/team> ?v1 . ?v0 <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Eiji_Ōtsuka> <http://dbpedia.org/ontology/almaMater> ?v1 . ?v0 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Takashi_Sekizuka> . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. },"```sparql
SELECT ?manager WHERE {
  # Step 1: Find Takashi Sekizuka's team and its manager
  ?team <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/Takashi_Sekizuka>.
  ?team <http://dbpedia.org/ontology/manager> ?manager.

  # Step 2: Identify the alma mater of this manager that fits all criteria
  ?almaMater <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organization>.
  ?almaMater <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>.
  ?almaMater <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalOrganization>.
  ?almaMater <http://dbpedia.org/property/country> <http://dbpedia.org/resource/Japan>.

  # Step 3: Ensure Eiji Ōtsuka is an alumnus of this institution
  ?almaMater <http://dbpedia.org/ontology/alumni> <http://dbpedia.org/resource/Eiji_Ōtsuka>.
  
  # Link the manager to the alma mater
  ?manager <http://dbpedia.org/ontology/almaMater> ?almaMater.
}
```",4,8,5,2,2,3,3,71,0,0,2,0,0.0,0
55,13,val,"Give me the band member of the producer, that is a band, of Used to Love Her and band member of Metallica.",SELECT ?result WHERE { <http://dbpedia.org/resource/Used_to_Love_Her> <http://dbpedia.org/ontology/producer> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Metallica> . },"```sparql
# Step 1: Find the producer of ""Used to Love Her""
SELECT ?producer WHERE {
    ?song dbpedia-owl:composer ?producer .
    ?song rdfs:label ""Used to Love Her""@en .
}

# Step 2: Check if this producer is a band member of Metallica
SELECT ?bandMember WHERE {
    ?producer dbpedia-owl:member ?metallicaBand .
    ?metallicaBand rdfs:label ""Metallica""@en .
    
    # Ensure the same producer from step 1
    FILTER(?producer = <URI_OF_PRODUCER_FROM_STEP_1>)
}

# Step 3: Find which band this producer is a member of
SELECT DISTINCT ?band WHERE {
    ?producer dbpedia-owl:member ?band .
}
```

Note: Replace `<URI_OF_PRODUCER_FROM_STEP_1>` with the actual URI obtained from step 1.",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
182,13,val,Give me the war of Jagath Dias and war of the author of 2019 Sri Lanka Easter bombings.,SELECT ?result WHERE { <http://dbpedia.org/resource/2019_Sri_Lanka_Easter_bombings> <http://dbpedia.org/property/author> ?v1 . ?v1 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Jagath_Dias> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
SELECT DISTINCT ?warJagathDias ?warEasterBombings WHERE {
  # Find the war associated with Jagath Dias
  <http://dbpedia.org/resource/Jagath_Dias> <http://dbpedia.org/ontology/battle> ?battle .
  ?battle <http://dbpedia.org/ontology/conflict> ?warJagathDias .

  # Find the person responsible for the 2019 Sri Lanka Easter bombings
  <http://dbpedia.org/resource/2019_Sri_Lanka_Easter_bombings> <http://dbpedia.org/property/responsible> ?responsiblePerson .
  
  # Find the war associated with that person
  ?responsiblePerson <http://dbpedia.org/ontology/battle> ?battle2 .
  ?battle2 <http://dbpedia.org/ontology/conflict> ?warEasterBombings .
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
435,17,val,"Give me the work of Article 62, Section IV of Constitution of Iceland and region of the time zone in Bombali Shebora Chiefdom.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/author> ""Article 62, Section IV of Constitution of Iceland""@en . <http://dbpedia.org/resource/Bombali_Shebora_Chiefdom> <http://dbpedia.org/ontology/timeZone> ?v1 . ?result <http://dbpedia.org/ontology/timeZone> ?v1 . }","```sparql
# Query 1: Work of Article 62, Section IV of Constitution of Iceland
SELECT ?work WHERE {
    <http://dbpedia.org/resource/Article_62,_Section_IV_of_the_Constitution_of_Iceland> <http://www.w3.org/2000/01/rdf-schema#comment> ?work .
}

# Query 2: Region of the time zone in Bombali Shebora Chiefdom
SELECT ?region WHERE {
    <http://dbpedia.org/resource/Bombali_Shebora_Cheifdom> <http://dbpedia.org/ontology/timeZone> ?timeZone .
    ?timeZone <http://www.w3.org/2006/time#during> ?region .
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
617,34,val,"Give me the parent of Nysa (wife of Pharnaces I of Pontus) and child of the child, that is a royalty, of the successor, that is a royalty, of Antiochus II Theos.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Nysa_(wife_of_Pharnaces_I_of_Pontus)> . ?result <http://dbpedia.org/property/father> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> ?v2 . <http://dbpedia.org/resource/Antiochus_II_Theos> <http://dbpedia.org/ontology/successor> ?v2 . },"```sparql
SELECT ?parent
WHERE {
    # Step 1: Find the successor of Antiochus II Theos who is royalty
    ?successor a dbo:Royalty ;
               dbo:succeededBy <http://dbpedia.org/resource/Antiochus_II_Theos> .

    # Step 2: Find the child of this successor who is also royalty
    ?child a dbo:Royalty ;
           dbo:parent ?successor .

    # Step 3: Determine the parent of Nysa (wife of Pharnaces I of Pontus)
    <http://dbpedia.org/resource/Nysa_(wife_of_Pharnaces_I_of_Pontus)> dbo:spouse <http://dbpedia.org/resource/Pharnaces_I_of_Pontus> ;
                                                                   dbo:parent ?parent .

    # Step 4: Find the child of the individual identified in step 3
    ?finalChild a dbo:Royalty ;
                dbo:parent ?parent .
}
```",4,6,5,3,2,3,3,71,0,0,2,0,0.0,0
54,39,val,"Give me the parent of Thado Minsaw of Prome and predecessor of the child, that is an office holder and a royalty, of the reference to Thihapate of Mohnyin.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Thihapate of Mohnyin""@en . <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/successor> ?v1 . }","```sparql
SELECT ?parent ?predecessor WHERE {
  # Find the parent of Thado Minsaw of Prome
  <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> <http://dbpedia.org/ontology/father> ?parent .

  # Identify the child (office holder and royalty) who succeeded Thihapate of Mohnyin
  ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder> .
  ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
  <http://dbpedia.org/resource/Thihapate_of_Mohnyin> <http://dbpedia.org/ontology/succeededBy> ?child .

  # Determine the predecessor of this identified successor
  ?predecessor <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder> .
  ?predecessor <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
  ?predecessor <http://dbpedia.org/ontology/succeededBy> ?child .

}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
294,19,val,"Give me the entity in Nashville, Tennessee and resting place of the awardee, that is a politician, of Distinguished Service Medal (U.S. Army) and resting place of Edwin A. Keeble.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Nashville,_Tennessee> . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Distinguished_Service_Medal_(U.S._Army)> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Edwin_A._Keeble> <http://dbpedia.org/ontology/restingPlace> ?result . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . }","```sparql
SELECT ?entity WHERE {
  ?entity <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Nashville,_Tennessee> .
  ?entity <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Cemetery> .
  
  ?politician <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Distinguished_Service_Medal_(U.S._Army)> ;
              <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .
  ?politician <http://dbpedia.org/property/restingPlace> ?entity .

  <http://dbpedia.org/resource/Edwin_A._Keeble> <http://dbpedia.org/property/restingPlace> ?entity .
}
```",4,5,5,2,3,2,3,28,0,0,1,0,0.0,0
767,22,val,Give me the reference to the alter ego of Black Hood and entity in Baden-Württemberg.,SELECT ?result WHERE { <http://dbpedia.org/resource/Black_Hood> <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://dbpedia.org/ontology/state> <http://dbpedia.org/resource/Baden-Württemberg> . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . },"```sparql
SELECT ?entity ?alterEgoRef ?locationRef WHERE {
  ?entity <http://dbpedia.org/ontology/alternateName> ""Black Hood"" .
  ?entity <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?type .
  ?entity <http://dbpedia.org/property/location> ?location .
  ?location <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Baden-Württemberg> .
  
  OPTIONAL { ?entity <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?alterEgoType . BIND(STR(?entity) AS ?alterEgoRef) }
  OPTIONAL { ?location <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?locationType . BIND(STR(?location) AS ?locationRef) }
}
```",3,3,4,2,2,3,3,71,0,0,7,0,0.0,0
547,24,val,Give me the resting place of Alan Cunningham and resting place of the actor of Enemy at the Door.,SELECT ?result WHERE { <http://dbpedia.org/resource/Enemy_at_the_Door> <http://dbpedia.org/property/starring> ?v2 . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Alan_Cunningham> <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
# Query to get the resting place of Alan Cunningham
SELECT ?restingPlace WHERE {
  <http://dbpedia.org/resource/Alan_Cunningham_(British_Army_officer)> dbo:placeOfBurial ?restingPlace .
}

UNION

# Query to find the actor from ""Enemy at the Door"" and their resting place
SELECT ?actorRestingPlace WHERE {
  ?film dbo:starring ?actor .
  ?actor dbo:deathPlace ?actorRestingPlace .
  
  FILTER(?film = <http://dbpedia.org/resource/Enemy_at_the_Door>)
}
```",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
391,24,val,"Give me the actor of the claim to fame, that is a work, of Michael Ballhaus and actor of All About the Andersons.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/All_About_the_Andersons> <http://dbpedia.org/property/starring> ?result . ?v2 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Michael_Ballhaus> <http://dbpedia.org/ontology/knownFor> ?v2 . },"```sparql
SELECT DISTINCT ?actor WHERE {
  # Find works by Michael Ballhaus
  ?work <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Michael_Ballhaus> .
  ?work <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film> .

  # Find actors in these works
  ?work <http://dbpedia.org/ontology/starring> ?actor .

  # Check if the actor also acted in ""All About the Andersons""
  OPTIONAL { 
    <http://dbpedia.org/resource/All_About_the_Andersons> <http://dbpedia.org/ontology/starring> ?actor .
  }
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
547,35,val,Give me the resting place of the awardee of Knight Grand Cross of the Order of St Michael and St George and resting place of the child of James Burton (property developer).,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_St_Michael_and_St_George> . <http://dbpedia.org/resource/James_Burton_(property_developer)> <http://dbpedia.org/ontology/child> ?v2 . ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
# Step 1: Find awardees of Knight Grand Cross of the Order of St Michael and St George
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/honoraryTitle> ""Knight Grand Cross of the Order of St Michael and St George"" .
}

# Step 2: Get resting places for these individuals
SELECT DISTINCT ?restingPlace WHERE {
  ?person <http://dbpedia.org/ontology/honoraryTitle> ""Knight Grand Cross of the Order of St Michael and St George"" .
  OPTIONAL { ?person <http://dbpedia.org/property/burialPlace> ?restingPlace . }
}

# Step 3: Identify James Burton (property developer)
SELECT ?jamesBurton WHERE {
  ?jamesBurton <http://www.w3.org/2000/01/rdf-schema#label> ""James Burton (property developer)"" .
}

# Step 4: Determine his children
SELECT DISTINCT ?child WHERE {
  ?jamesBurton <http://dbpedia.org/ontology/spouse> ?spouse .
  ?spouse <http://dbpedia.org/ontology/child> ?child .
}

# Step 5: Get resting places for these children
SELECT DISTINCT ?restingPlace WHERE {
  ?jamesBurton <http://www.w3.org/2000/01/rdf-schema#label> ""James Burton (property developer)"" .
  ?jamesBurton <http://dbpedia.org/ontology/spouse> ?spouse .
  ?spouse <http://dbpedia.org/ontology/child> ?child .
  OPTIONAL { ?child <http://dbpedia.org/property/burialPlace> ?restingPlace . }
}
```",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
801,40,val,Give me the associated musical artist of Chris Taylor (music producer) and producer of Westside Story (song) and professional in the alter ego of the true self of The Shadow.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Westside_Story_(song)> <http://dbpedia.org/ontology/producer> ?result . ?v2 <http://xmlns.com/foaf/0.1/givenName> ""The Shadow""@en . <http://dbpedia.org/resource/Chris_Taylor_(music_producer)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v1 . ?v2 <http://dbpedia.org/property/alterEgo> ?v1 . }","```sparql
SELECT ?artist WHERE {
  ?artist <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Chris_Taylor_(music_producer)> .
  ?artist <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Westside_Story_(song)> .
  ?artist <http://dbpedia.org/property/profession> ?profession .
  ?alterEgo <http://dbpedia.org/ontology/trueSelf> <http://dbpedia.org/resource/The_Shadow> .
  ?alterEgo <http://dbpedia.org/property/profession> ?profession .
  FILTER(?artist = ?alterEgo)
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
778,15,val,"Give me the author of Chroot and entity in the award of the awardee, that is American, of Wolf Prize in Medicine.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/location> ?v1 . ?v0 <http://dbpedia.org/property/awards> ?v1 . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/United_States>. ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Wolf_Prize_in_Medicine> . <http://dbpedia.org/resource/Chroot> <http://dbpedia.org/ontology/author> ?result . },"```sparql
# Part 1: Get the author of Chroot
SELECT ?author WHERE {
    ?work rdfs:label ""Chroot""@en .
    ?work dbo:author ?author .
}

UNION

# Part 2: Get entities in the award of American awardees of Wolf Prize in Medicine
SELECT DISTINCT ?entity WHERE {
    ?awardee dbo:nationality dbr:United_States ;
             dbo:award dbr:Wolf_Prize_in_Medicine .
    ?award dbo:recipient ?awardee .
    ?award dbo:field ""Medicine"" .
    ?award dbo:entity ?entity .
}
```",4,5,5,3,2,3,2,20,0,0,1,0,0.0,0
92,41,val,"Give me the band member of the reference, that is an artist, to Nevermore and associated musical artist of the person born, that is an artist, as Jim Sheppard and band of Joseph Michael.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Joseph_Michael> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://xmlns.com/foaf/0.1/name> ""Nevermore""@en . ?v4 <http://dbpedia.org/property/birthName> ""Jim Sheppard""@en . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
SELECT ?bandMember WHERE {
  # Find Jim Sheppard's associated musical artist
  ?sheppard a dbo:Artist ;
            foaf:birthday ?birthDate ;
            dbo:associatedMusicalArtist ?artist1 .
  
  # Find Joseph Michael's band
  ?michael a dbo:Person ;
           foaf:name ""Joseph Michael"" ;
           dbo:band ?band .

  # Find the reference to Nevermore and its associated artist who is also a band member
  ?nevermoreReference a dbo:Artist ;
                     dbo:referenceTo <http://dbpedia.org/resource/Nevermore> .
  
  ?artist1 a dbo:Artist ;
           dbo:member ?bandMember .
  
  # Ensure the band member is Italian (if needed, based on context)
  OPTIONAL { ?bandMember dbo:nationality <http://dbpedia.org/resource/Italian> }
}
```",5,7,6,2,3,3,3,71,0,0,1,0,0.0,0
959,43,val,"Give me the member of University of Tsukuba and native of the residence, that is a country, of the leader, that is a politician, of 2010 Japanese House of Councillors election and manager of 2013 Júbilo Iwata season.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/University_of_Tsukuba> . <http://dbpedia.org/resource/2013_Júbilo_Iwata_season> <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/property/residence> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . <http://dbpedia.org/resource/2010_Japanese_House_of_Councillors_election> <http://dbpedia.org/property/leader> ?v1 . },"```sparql
SELECT ?member WHERE {
    # Step 1: Find the leader who is a politician of the 2010 Japanese House of Councillors election
    ?leader <http://dbpedia.org/ontology/politician> _:a .
    _:a <http://dbpedia.org/property/election> <http://dbpedia.org/resource/2010_Japanese_House_of_Councillors_election> .

    # Step 2: Determine the residence (country) of this leader
    ?leader <http://dbpedia.org/ontology/residence> ?residence .
    ?residence <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country> .

    # Step 3: Find the manager of the 2013 Júbilo Iwata season
    ?manager <http://dbpedia.org/ontology/teamManager> _:b .
    _:b <http://dbpedia.org/property/season> <http://dbpedia.org/resource/2013_Júbilo_Iwata_season> .

    # Step 4: Ensure that this manager is also the leader identified in step 1
    FILTER (?leader = ?manager)

    # Step 5: Identify members of the University of Tsukuba who are natives of the country found in step 2
    ?member <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/University_of_Tsukuba> .
    ?member <http://dbpedia.org/ontology/nativePlace> ?residence .
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
994,31,val,Give me the associated musical artist of the associated musical artist of the reference to Watchtower and associated musical artist of Red Tide (band).,"SELECT ?result WHERE { <http://dbpedia.org/resource/Red_Tide_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://xmlns.com/foaf/0.1/name> ""Watchtower""@en . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . }","```sparql
# Step 1: Find the associated musical artist of ""Watchtower""
WITH <http://dbpedia.org/resource/Watchtower_(band)> AS ?watchtowerBand

# Step 2: Use the result from step 1 to find its associated musical artist
SELECT ?artist1 WHERE {
    ?watchtowerBand <http://dbpedia.org/ontology/associatedMusicalArtist> ?artist1 .
}

# Step 3: Independently, find the associated musical artist of ""Red Tide (band)""
WITH <http://dbpedia.org/resource/Red_Tide_(band)> AS ?redTideBand

SELECT ?artist2 WHERE {
    ?redTideBand <http://dbpedia.org/ontology/associatedMusicalArtist> ?artist2 .
}

# Step 4: Find the associated musical artist of the results obtained in steps 2 and 3
SELECT DISTINCT ?finalArtist WHERE {
    VALUES (?intermediateArtist) { (<result_of_artist1_query>) (<result_of_artist2_query>) }
    ?intermediateArtist <http://dbpedia.org/ontology/associatedMusicalArtist> ?finalArtist .
}
```

Note: `<result_of_artist1_query>` and `<result_of_artist2_query>` should be replaced with the actual URIs obtained from steps 2 and 3.",4,4,5,3,2,3,3,71,0,0,3,0,0.0,0
314,19,val,Give me the commander in Spanish Civil War and person deceased at the headquarter of House of Sombrerete and awardee of 30.,"SELECT ?result WHERE { <http://dbpedia.org/resource/House_of_Sombrerete> <http://dbpedia.org/ontology/location> ?v2 . <http://dbpedia.org/resource/Spanish_Civil_War> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/property/awards> ""30""^^<http://www.w3.org/2001/XMLSchema#integer> . ?result <http://dbpedia.org/ontology/restingPlace> ?v2 . }","```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Spanish_Civil_War> .
  ?person <http://dbpedia.org/property/deceasedAt> <http://dbpedia.org/resource/House_of_Sombrerete_headquarters> .
  ?person <http://dbpedia.org/ontology/award> ?award .
  FILTER (str(?award) = ""30"")
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
294,15,val,"Give me the entity in Nashville, Tennessee and resting place of the awardee, that is a politician, of Distinguished Service Medal (U.S. Army).","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Nashville,_Tennessee> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Distinguished_Service_Medal_(U.S._Army)> . ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . }","```sparql
SELECT ?entity WHERE {
  ?entity <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Nashville,_Tennessee> .
  ?entity <http://dbpedia.org/ontology/restingPlace> ?person .
  ?person <http://dbpedia.org/ontology/awardee> <http://dbpedia.org/resource/Distinguished_Service_Medal_(U.S._Army)> .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
294,13,val,"Give me the resting place of Edwin A. Keeble and resting place of the awardee, that is a politician, of Distinguished Service Medal (U.S. Army).",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Distinguished_Service_Medal_(U.S._Army)> . <http://dbpedia.org/resource/Edwin_A._Keeble> <http://dbpedia.org/ontology/restingPlace> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
SELECT DISTINCT ?keeblesRestingPlace ?awardeeRestingPlace WHERE {
  # Resting place of Edwin A. Keeble
  <http://dbpedia.org/resource/Edwin_A._Keeble> <http://dbpedia.org/ontology/burialPlace> ?keeblesRestingPlace .

  # Resting places of awardees who are politicians and have received the Distinguished Service Medal (U.S. Army)
  ?awardee <http://dbpedia.org/property/award> ?medal .
  ?medal <http://www.w3.org/2000/01/rdf-schema#label> ""Distinguished Service Medal (U.S. Army)""@en .
  ?awardee <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/United_States> .
  ?awardee <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .
  ?awardee <http://dbpedia.org/ontology/burialPlace> ?awardeeRestingPlace .
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
184,28,val,Give me the child of Archduke Joseph August of Austria and parent of Archduchess Ilona of Austria and parent of the native of Budapest.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Ilona_of_Austria> . ?result <http://dbpedia.org/ontology/child> ?v1 . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_August_of_Austria> . ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Budapest> . },"```sparql
SELECT ?child WHERE {
  # Condition 1: Child of Archduke Joseph August of Austria
  <http://dbpedia.org/resource/Archduke_Joseph_August_of_Austria> <http://dbpedia.org/ontology/child> ?child .

  # Condition 2: Parent of Archduchess Ilona of Austria
  ?child <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Archduchess_Ilona_of_Austria> .

  # Condition 3: Parent of someone native to Budapest
  ?child <http://dbpedia.org/ontology/parent> ?person .
  ?person <http://dbpedia.org/property/nationality> ""Hungarian"" .
  ?person <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Budapest> .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
767,40,val,"Give me the entity in the administration, that is a settlement, of the writer of Where It's At (Dustin Lynch album) and alma mater of Carl L. Nippert and reference to .","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://xmlns.com/foaf/0.1/name> """"@en . <http://dbpedia.org/resource/Carl_L._Nippert> <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://dbpedia.org/ontology/state> ?v1 . <http://dbpedia.org/resource/Where_It's_At_(Dustin_Lynch_album)> <http://dbpedia.org/property/writer> ?v2 . ?v1 <http://dbpedia.org/property/leaderParty> ?v2 . }","```sparql
SELECT DISTINCT ?entity WHERE {
  # Find the writer of ""Where It's At"" (Dustin Lynch album)
  ?album dct:subject <http://dbpedia.org/resource/Where_It%27s_At_(Dustin_Lynch_album)> .
  ?album dbo:writer ?writer .

  # Find Carl L. Nippert's alma mater
  ?nippert foaf:name ""Carl L. Nippert"" .
  ?nippert dbo:almaMater ?almaMater .

  # Ensure the entity is a settlement in an administration
  ?entity rdf:type <http://dbpedia.org/ontology/Settlement> .
  ?entity dbo:administrativeUnit ?admin1 .
  
  # Match the writer's and alma mater's administrations
  OPTIONAL { ?writer dbo:residence ?admin2 . }
  OPTIONAL { ?almaMater dbo:location ?admin3 . }

  FILTER (?admin1 = ?admin2 || ?admin1 = ?admin3)
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
179,12,val,Give me the parent of the child of Bhumibol Adulyadej and person born as Mom Rajawongse Sirikit Kitiyakara.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Mom Rajawongse Sirikit Kitiyakara""@en . <http://dbpedia.org/resource/Bhumibol_Adulyadej> <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://dbpedia.org/ontology/parent> ?result . }","```sparql
SELECT ?parent WHERE {
  ?child <http://dbpedia.org/property/birthName> ""Mom Rajawongse Sirikit Kitiyakara"" .
  ?child <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Bhumibol_Adulyadej> .
  OPTIONAL { ?child <http://dbpedia.org/ontology/father> ?parent . }
  OPTIONAL { ?child <http://dbpedia.org/ontology/mother> ?parent . }
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
488,34,val,"Give me the administration of Emperor Go-Yōzei and birth place of the commander in the war, that is a military conflict and an event and a societal event, of Saitō Hajime.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/commander> ?v1 . ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Emperor_Go-Yōzei> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Saitō_Hajime> <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"```sparql
# Step 1: Identify the war related to Saitō Hajime
SELECT ?war WHERE {
    ?war a <http://dbpedia.org/ontology/MilitaryConflict> .
    ?war a <http://dbpedia.org/ontology/Event> .
    ?war a <http://dbpedia.org/ontology/SocietalEvent> .
    <http://dbpedia.org/resource/Sait%C5%8D_Hajime> <http://dbpedia.org/property/battle> ?war .
}

# Step 2: Determine the commander of that war
SELECT ?commander WHERE {
    ?war a <http://dbpedia.org/ontology/MilitaryConflict> .
    ?war a <http://dbpedia.org/ontology/Event> .
    ?war a <http://dbpedia.org/ontology/SocietalEvent> .
    <http://dbpedia.org/resource/Sait%C5%8D_Hajime> <http://dbpedia.org/property/battle> ?war .
    ?war <http://dbpedia.org/ontology/commander> ?commander .
}

# Step 3: Find the birthplace of that commander
SELECT ?birthPlace WHERE {
    ?commander a <http://dbpedia.org/ontology/Person> .
    ?commander <http://dbpedia.org/property/birthPlace> ?birthPlace .
}

# Step 4: Retrieve the administration under which Emperor Go-Yōzei ruled
SELECT ?administration WHERE {
    <http://dbpedia.org/resource/Emperor_Go-Y%C5%8Dzei> <http://dbpedia.org/ontology/administration> ?administration .
}
```",4,7,5,3,2,3,3,71,0,0,1,0,0.0,0
488,30,val,Give me the death place of Tokugawa Ieyasu and administration of the father of Emperor Go-Mizunoo and birth place of Enomoto Takeaki.,SELECT ?result WHERE { <http://dbpedia.org/resource/Tokugawa_Ieyasu> <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Emperor_Go-Mizunoo> <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Enomoto_Takeaki> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/property/leader> ?v1 . },"```sparql
SELECT ?deathPlaceTokugawaIeyasu ?administrationFatherGoMizunoo ?birthPlaceEnomotoTakeaki WHERE {
  # Death place of Tokugawa Ieyasu
  dbpedia:Tokugawa_Ieyasu dbo:deathPlace ?deathPlaceTokugawaIeyasu .

  # Administration (domain) of the father of Emperor Go-Mizunoo
  dbpedia:Emperor_Go-Mizunoo dbo:father ?fatherGoMizunoo .
  ?fatherGoMizunoo dbo:domain ?administrationFatherGoMizunoo .

  # Birth place of Enomoto Takeaki
  dbpedia:Enomoto_Takeaki dbo:birthPlace ?birthPlaceEnomotoTakeaki .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
184,39,val,Give me the parent of the child of the parent of Archduchess Margaret of Austria (born 1925) and child of Archduke Joseph August of Austria.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v1 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Margaret_of_Austria_(born_1925)> . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_August_of_Austria> . ?v1 <http://dbpedia.org/property/father> ?v0 . },"```sparql
# Step 1: Find Archduchess Margaret of Austria (born 1925)
SELECT ?margaret WHERE {
    ?margaret rdfs:label ""Archduchess Margaret of Austria (born 1925)""@en .
}

# Step 2: Find her parent(s)
SELECT ?parent WHERE {
    VALUES ?margaret { <http://dbpedia.org/resource/Archduchess_Margaret_of_Austria_(born_1925)> }
    ?margaret dbo:childOf+ ?parent .
}

# Step 3: For each parent, find their child(ren)
SELECT DISTINCT ?grandchild WHERE {
    VALUES ?parent { <http://dbpedia.org/resource/Archduke_Joseph_August_of_Austria> } # Assuming we know the parent from context
    ?parent dbo:child ?intermediateChild .
    ?intermediateChild dbo:childOf+ ?grandchild .
}

# Step 4: Identify those who are also a child of Archduke Joseph August of Austria
SELECT DISTINCT ?targetChild WHERE {
    VALUES ?josephAugust { <http://dbpedia.org/resource/Archduke_Joseph_August_of_Austria> }
    ?targetChild dbo:childOf+ ?josephAugust .
    ?parent dbo:child ?intermediateChild .
    ?intermediateChild dbo:childOf+ ?targetChild .
}

# Step 5: Determine the parent of the identified child
SELECT DISTINCT ?finalParent WHERE {
    VALUES ?targetChild { <http://dbpedia.org/resource/Archduke_Joseph_August_of_Austria> } # Replace with actual target child URI from step 4
    ?targetChild dbo:childOf+ ?finalParent .
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
16,43,val,Give me the person born as Georgeanne Marie Rice and spouse of Ted McGinley and professional in the profession of the actor of Unnatural (TV series).,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v4 . <http://dbpedia.org/resource/Unnatural_(TV_series)> <http://dbpedia.org/property/starring> ?v0 . ?v0 <http://dbpedia.org/property/occupation> ?v4 . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/birthName> ""Georgeanne Marie Rice""@en . }","```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/birthName> ""Georgeanne Marie Rice"" .
  ?person <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Ted_McGinley> .
  ?person <http://dbpedia.org/ontology/profession> <http://dbpedia.org/ontology/Actor> .
  ?actor <http://dbpedia.org/ontology/actor> <http://dbpedia.org/resource/Unnatural_(TV_series)> .
  FILTER(?person = ?actor)
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
488,32,val,"Give me the birth place of the commander in Boshin War and death place of the father, that is a politician, of Yūki Hideyasu.",SELECT ?result WHERE { <http://dbpedia.org/resource/Yūki_Hideyasu> <http://dbpedia.org/property/father> ?v3 . <http://dbpedia.org/resource/Boshin_War> <http://dbpedia.org/ontology/commander> ?v1 . ?v3 <http://dbpedia.org/ontology/deathPlace> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?birthPlace ?deathPlace WHERE {
  # Find the commander in the Boshin War and their birthplace
  <http://dbpedia.org/resource/Boshin_War> <http://dbpedia.org/ontology/commander> ?commander .
  ?commander <http://dbpedia.org/ontology/birthPlace> ?birthPlace .

  # Find Yūki Hideyasu's father who is a politician and his death place
  <http://dbpedia.org/resource/Y%C5%ABki_Hideyasu> <http://dbpedia.org/property/father> ?father .
  ?father <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .
  ?father <http://dbpedia.org/ontology/deathPlace> ?deathPlace
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
617,14,val,"Give me the parent of the father, that is a royalty, of the reference, that is a royalty, to Richeza of Poland.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/father> ?v0 . ?v2 <http://xmlns.com/foaf/0.1/name> ""Richeza of Poland""@en . ?result <http://dbpedia.org/ontology/child> ?v0 . }","```sparql
SELECT ?parent
WHERE {
    # Step 1: Identify Richeza of Poland as a royalty
    <http://dbpedia.org/resource/Richeza_of_Poland> dbo:royalty _:a .
    
    # Step 2: Find references that are also royalty and have a connection to Richeza
    ?reference dbo:royalty _:b .
    ?reference dbo:reference <http://dbpedia.org/resource/Richeza_of_Poland> .

    # Step 3: Identify the father of each reference found in step 2
    ?reference dbo:father ?father .

    # Step 4: Determine the parent of each father identified in step 3
    ?father dbo:parent ?parent .
}
```",3,5,4,3,1,3,2,20,0,0,4,0,0.0,0
435,16,val,Give me the work of the author of Iceland and territory administered from Reykjavík.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Reykjavík> . <http://dbpedia.org/resource/Iceland> <http://dbpedia.org/property/author> ?v2 . ?result <http://dbpedia.org/property/author> ?v2 . },"```sparql
SELECT ?work WHERE {
  ?iceland <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Reykjavík> .
  ?iceland <http://www.w3.org/2000/01/rdf-schema#label> ""Iceland""@en .
  ?author <http://purl.org/dc/terms/creator> ?iceland .
  ?work <http://purl.org/dc/terms/creator> ?author .
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
182,19,val,Give me the war of Jagath Dias and entity in Sri Lanka and war of the author of 2019 Sri Lanka Easter bombings.,SELECT ?result WHERE { <http://dbpedia.org/resource/Jagath_Dias> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/2019_Sri_Lanka_Easter_bombings> <http://dbpedia.org/property/author> ?v2 . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Sri_Lanka> . },"```sparql
# Step 1: Find the war associated with Jagath Dias
SELECT ?warJagath WHERE {
    <http://dbpedia.org/resource/Jagath_Dias> <http://dbpedia.org/ontology/battle> ?warJagath .
}

# Step 2: Identify an entity in Sri Lanka
SELECT ?entitySriLanka WHERE {
    ?entitySriLanka <http://www.w3.org/2000/01/rdf-schema#label> ?label .
    FILTER(CONTAINS(LCASE(?label), ""sri lanka""))
}

# Step 3: Determine the war related to the author of the 2019 Sri Lanka Easter bombings
SELECT ?warAuthor WHERE {
    <http://dbpedia.org/resource/2019_Sri_Lanka_Easter_bombings> <http://dbpedia.org/ontology/author> ?author .
    ?author <http://dbpedia.org/ontology/battle> ?warAuthor .
}

# Final query: Find common wars between Jagath Dias and the author of the 2019 Sri Lanka Easter bombings
SELECT DISTINCT ?commonWar WHERE {
    { SELECT ?warJagath WHERE {
        <http://dbpedia.org/resource/Jagath_Dias> <http://dbpedia.org/ontology/battle> ?warJagath .
    }}
    UNION
    { SELECT ?warAuthor WHERE {
        <http://dbpedia.org/resource/2019_Sri_Lanka_Easter_bombings> <http://dbpedia.org/ontology/author> ?author .
        ?author <http://dbpedia.org/ontology/battle> ?warAuthor .
    }}
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
404,25,val,"Give me the parent of Prince Ernest Augustus of Hanover (born 1914) and child of the father of Ernest Augustus, Duke of Brunswick.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Prince_Ernest_Augustus_of_Hanover_(born_1914)> . <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/ontology/parent> ?v1 . }","```sparql
# Find the father of Prince Ernest Augustus of Hanover (born 1914)
SELECT ?father WHERE {
    <http://dbpedia.org/resource/Prince_Ernest_Augustus_of_Hanover_(born_1914)> <http://www.w3.org/2000/01/rdf-schema#parent> ?father .
}

# Find the father of Ernest Augustus, Duke of Brunswick
SELECT ?grandfather WHERE {
    <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://www.w3.org/2000/01/rdf-schema#parent> ?father .
    ?father <http://www.w3.org/2000/01/rdf-schema#parent> ?grandfather .
}

# Find the person who is both the parent of Prince Ernest Augustus and a child of the grandfather
SELECT ?person WHERE {
    ?person <http://www.w3.org/2000/01/rdf-schema#parent> <http://dbpedia.org/resource/Prince_Ernest_Augustus_of_Hanover_(born_1914)> .
    ?person <http://www.w3.org/2000/01/rdf-schema#parent> ?child .
    ?grandfather <http://www.w3.org/2000/01/rdf-schema#parent> ?child .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
161,19,val,"Give me the military force of the force, that is a societal event and an event and a military conflict, of Francisco Franco and military force of Spanish Civil War.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Franco> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v0 . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . },"```sparql
SELECT ?militaryForce WHERE {
  ?conflict <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>.
  ?conflict <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>.
  ?conflict <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>.
  
  OPTIONAL { <http://dbpedia.org/resource/Francisco_Franco> <http://dbpedia.org/property/militaryForce> ?militaryForce1. }
  OPTIONAL { <http://dbpedia.org/resource/Spanish_Civil_War> <http://dbpedia.org/property/militaryForce> ?militaryForce2. }

  FILTER(?militaryForce1 = ?militaryForce2)
  
  ?conflict <http://dbpedia.org/ontology/militaryForce> ?militaryForce.
}
```",3,6,4,2,2,3,3,71,0,0,514,0,0.0,0
10,19,val,"Give me the associated musical artist of the person born, that is an artist, as Matt Colton and band member of Luke Vibert and professional in .","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Luke_Vibert> . ?v3 <http://dbpedia.org/property/birthName> ""Matt Colton""@en . }","```sparql
SELECT ?person ?associatedArtist WHERE {
  ?person <http://dbpedia.org/ontology/birthName> ""Matt Colton"" .
  ?person <http://dbpedia.org/ontology/memberOfBand> <http://dbpedia.org/resource/Luke_Vibert> .
  ?person <http://dbpedia.org/ontology/associatedMusicalArtist> ?associatedArtist .
}
```",4,5,5,2,3,2,3,28,0,0,1,0,0.0,0
767,20,val,Give me the alma mater of the administration of George K. Nash and entity in Baden-Württemberg.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://dbpedia.org/ontology/state> <http://dbpedia.org/resource/Baden-Württemberg> . ?v2 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/George_K._Nash> . },"```sparql
SELECT ?almaMater ?entity WHERE {
  # Find the alma mater of George K. Nash
  <http://dbpedia.org/resource/George_K._Nash> dbpedia-owl:almaMater ?almaMater .
  
  # Find an entity in Baden-Württemberg, Germany
  ?entity a dbo:Place ;
          dbo:country <http://dbpedia.org/resource/Germany> ;
          dbo:stateOrProvince <http://dbpedia.org/resource/Baden-W%C3%BCrttemberg> .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
783,13,val,Give me the associated musical artist of the band member of the person born as Samuel Ofori Amponsah.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ""Samuel Ofori Amponsah""@en . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . }","```sparql
SELECT ?associatedArtist WHERE {
  ?person rdfs:label ""Samuel Ofori Amponsah""@en .
  ?person foaf:name ""Samuel Ofori Amponsah"" .
  ?bandMember foaf:member ?person ;
              dbp:associatedMusicalArtist ?associatedArtist .
}
```",3,3,4,3,1,3,2,20,0,0,35,0,0.0,0
54,21,val,Give me the predecessor of Ameitta Thiri Maha Dhamma Dewi of Ava and child of the father of Soe Min Wimala Dewi.,SELECT ?result WHERE { <http://dbpedia.org/resource/Soe_Min_Wimala_Dewi> <http://dbpedia.org/property/father> ?v1 . ?v1 <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Ameitta_Thiri_Maha_Dhamma_Dewi_of_Ava> . },"```sparql
SELECT ?predecessor WHERE {
  ?ameitta <http://dbpedia.org/ontology/predecessor> ?predecessor .
  FILTER(?ameitta = <http://dbpedia.org/resource/Ameitta_Thiri_Maha_Dhamma_Dewi_of_Ava>) .

  ?soeMinWimalaDewi <http://dbpedia.org/property/father> ?father .
  FILTER(?soeMinWimalaDewi = <http://dbpedia.org/resource/Soe_Min_Wimala_Dewi>) .

  ?child <http://dbpedia.org/ontology/father> ?father .
  FILTER(?child = ?predecessor)
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
184,36,val,Give me the parent of Géza von Habsburg and parent of the child of the parent of Archduchess Margaret of Austria (born 1925).,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Géza_von_Habsburg> . ?result <http://dbpedia.org/ontology/child> ?v1 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Margaret_of_Austria_(born_1925)> . },"```sparql
SELECT ?parentGéza ?parentChild
WHERE {
  # Part 1: Find the parent of Géza von Habsburg
  <http://dbpedia.org/resource/G%C3%A9za_von_Habsburg> <http://dbpedia.org/ontology/father> ?parentGéza .
  UNION
  <http://dbpedia.org/resource/G%C3%A9za_von_Habsburg> <http://dbpedia.org/ontology/mother> ?parentGéza .

  # Part 2: Find the parent of the child of the parent of Archduchess Margaret of Austria (born 1925)
  OPTIONAL {
    <http://dbpedia.org/resource/Margaret_of_Austria_(1925)> <http://dbpedia.org/ontology/father> ?parentMargaret .
    UNION
    <http://dbpedia.org/resource/Margaret_of_Austria_(1925)> <http://dbpedia.org/ontology/mother> ?parentMargaret .

    OPTIONAL {
      ?child <http://dbpedia.org/ontology/father> ?parentMargaret .
      UNION
      ?child <http://dbpedia.org/ontology/mother> ?parentMargaret .

      ?child <http://dbpedia.org/ontology/father> ?parentChild .
      UNION
      ?child <http://dbpedia.org/ontology/mother> ?parentChild .
    }
  }

  # Ensure both conditions are met
  FILTER(?parentGéza = ?parentChild)
}
```",4,4,5,3,2,3,3,71,0,0,2,0,0.0,0
547,31,val,Give me the resting place of Simon Cadell and resting place of the child of the child of William Haliburton.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> ""William Haliburton""@en . <http://dbpedia.org/resource/Simon_Cadell> <http://dbpedia.org/ontology/restingPlace> ?result . ?v0 <http://dbpedia.org/ontology/restingPlace> ?result . ?v1 <http://dbpedia.org/ontology/child> ?v0 . }","```sparql
SELECT ?simonRestingPlace ?greatGrandchildRestingPlace WHERE {
  # Resting place of Simon Cadell
  <http://dbpedia.org/resource/Simon_Cadell> dbpedia-owl:placeOfBurial ?simonRestingPlace .

  # Resting place of the great-grandchild of William Haliburton
  OPTIONAL {
    <http://dbpedia.org/resource/William_Haliburton> dbo:child ?child1 .
    ?child1 dbo:child ?grandChild .
    ?grandChild dbo:child ?greatGrandchild .
    ?greatGrandchild dbpedia-owl:placeOfBurial ?greatGrandchildRestingPlace
  }
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
767,34,val,"Give me the entity in the administration, that is a settlement, of the writer of Where It's At (Dustin Lynch album) and reference to .","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/leaderParty> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://xmlns.com/foaf/0.1/name> """"@en . ?result <http://dbpedia.org/ontology/state> ?v1 . <http://dbpedia.org/resource/Where_It's_At_(Dustin_Lynch_album)> <http://dbpedia.org/property/writer> ?v2 . }","```sparql
SELECT ?entity WHERE {
  ?album <http://dbpedia.org/ontology/writtenBy> ?writer .
  ?reference <http://www.w3.org/2000/01/rdf-schema#seeAlso> ?writer .
  ?settlement <http://dbpedia.org/ontology/administrativeUnit> ?administration .
  ?writer <http://dbpedia.org/property/residence> ?settlement .
  ?reference <http://dbpedia.org/property/location> ?settlement .
  VALUES ?album { <http://dbpedia.org/resource/Where_It%27s_At_(Dustin_Lynch_album)> }
}
```",4,5,5,3,2,3,3,71,0,0,8,0,0.0,0
391,29,val,"Give me the actor of the claim to fame, that is a work, of Michael Ballhaus and native of Compton, California and actor of All About the Andersons.","SELECT ?result WHERE { <http://dbpedia.org/resource/All_About_the_Andersons> <http://dbpedia.org/property/starring> ?result . ?v3 <http://dbpedia.org/ontology/starring> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Michael_Ballhaus> <http://dbpedia.org/ontology/knownFor> ?v3 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Compton,_California> . }","```sparql
SELECT ?actor WHERE {
  ?person a dbo:Person ;
          foaf:nationality dbr:United_States ;
          dbp:nativePlace dbr:Compton,_California .
  
  ?person dbo:actedIn dbr:All_About_the_Andersons .

  ?work dbo:director ?ballhaus ;
        dbo:actor ?actor .

  ?ballhaus foaf:name ""Michael Ballhaus""@en .

  FILTER(?person = ?actor)
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
801,41,val,"Give me the producer of the work, that is a musical work and a song and a work, of 50 Cent and associated musical artist of Chris Taylor (music producer) and professional in the alter ego of The Shadow.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. <http://dbpedia.org/resource/Chris_Taylor_(music_producer)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/50_Cent> . ?v4 <http://dbpedia.org/ontology/producer> ?result . ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v2 . },"```sparql
SELECT ?song ?producer WHERE {
  ?song <http://dbpedia.org/ontology/work> ?work .
  ?song <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song> .
  
  # 50 Cent is associated with the song
  ?association1 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/50_Cent> .
  ?association1 <http://dbpedia.org/property/work> ?song .

  # Chris Taylor (music producer) is associated with the song
  ?association2 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Chris_Taylor_(music_producer)> .
  ?association2 <http://dbpedia.org/property/work> ?song .

  # The Shadow is involved in some capacity (e.g., as an alias or pseudonym)
  OPTIONAL { 
    ?alias <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Pseudonym> .
    ?alias <http://dbpedia.org/property/name> ""The Shadow"" .
    ?association3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?alias .
    ?association3 <http://dbpedia.org/property/work> ?song .
  }

  # Find the producer of the song
  ?producer <http://dbpedia.org/ontology/produced> ?song .
}
```",5,8,6,2,3,3,3,71,0,0,1,0,0.0,0
251,16,val,Give me the location of Battle of Marengo and death place of the author of The Twelve Abbots of Challant.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Twelve_Abbots_of_Challant> <http://dbpedia.org/property/author> ?v2 . <http://dbpedia.org/resource/Battle_of_Marengo> <http://dbpedia.org/ontology/place> ?result . ?v2 <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
# Query to get the location of the Battle of Marengo
SELECT ?location WHERE {
  <http://dbpedia.org/resource/Battle_of_Marengo> <http://dbpedia.org/ontology/location> ?location .
}

UNION

# Query to get the death place of the author of ""The Twelve Abbots of Challant""
SELECT ?deathPlace WHERE {
  ?author dbo:work <http://dbpedia.org/resource/The_Twelve_Abbots_of_Challant> ;
          dbp:deathPlace ?deathPlace .
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
994,26,val,"Give me the associated musical artist of the band member, that is a band and a group and an organisation, of the band, that is an organisation, of Fredrik Thordendal.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Fredrik_Thordendal> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. },"```sparql
SELECT ?associatedArtist WHERE {
  ?band <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/Fredrik_Thordendal> .
  ?band <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band> .
  ?band <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation> .
  ?band <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocialGroup> .
  
  ?member <http://dbpedia.org/ontology/member> ?band .
  ?member <http://dbpedia.org/property/associatedMusicalArtist> ?associatedArtist .
}
```",3,7,4,3,1,3,3,71,0,0,33,0,0.0,0
427,42,val,"Give me the party of Giulio Andreotti and party of the person born, that is an office holder and a politician, as Romano Antonio Prodi and reference to the name of Italian People's Party (1994).","SELECT ?result WHERE { <http://dbpedia.org/resource/Giulio_Andreotti> <http://dbpedia.org/ontology/party> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Italian_People's_Party_(1994)> <http://xmlns.com/foaf/0.1/name> ?v2 . ?v1 <http://dbpedia.org/property/birthName> ""Romano Antonio Prodi""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/party> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . }","```sparql
# Query for Giulio Andreotti's party
SELECT ?party WHERE {
  <http://dbpedia.org/resource/Giulio_Andreotti> <http://dbpedia.org/ontology/party> ?party .
}

UNION

# Query for Romano Antonio Prodi's party and reference to Italian People's Party (1994)
SELECT ?prodiParty, ?ippReference WHERE {
  ?prodi a <http://dbpedia.org/ontology/OfficeHolder> ;
         <http://dbpedia.org/ontology/politician> true ;
         <http://dbpedia.org/property/birthPlace> ?birthPlace .
  
  FILTER (str(?birthPlace) = ""Romano Antonio Prodi"")

  ?prodi <http://dbpedia.org/ontology/party> ?prodiParty .

  OPTIONAL {
    ?ipp a <http://dbpedia.org/resource/Italian_People%27s_Party_(1994)> ;
         <http://www.w3.org/2000/01/rdf-schema#label> ?ippReference .
  }
}
```",5,7,6,2,3,3,3,71,0,0,1,0,0.0,0
303,16,val,"Give me the party of the person born, that is a politician, as Arnulfo Arias Madrid and party of Guillermo Endara.","SELECT ?result WHERE { <http://dbpedia.org/resource/Guillermo_Endara> <http://dbpedia.org/ontology/party> ?result . ?v2 <http://dbpedia.org/property/birthName> ""Arnulfo Arias Madrid""@en . ?v2 <http://dbpedia.org/ontology/party> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
SELECT ?partyArias ?partyEndara WHERE {
  # Find the party of Arnulfo Arias Madrid
  <http://dbpedia.org/resource/Arnulfo_Arias_Madrid> <http://dbpedia.org/ontology/party> ?partyArias .
  
  # Find the party of Guillermo Endara
  <http://dbpedia.org/resource/Guillermo_Endara> <http://dbpedia.org/ontology/party> ?partyEndara .
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
328,18,val,Give me the leader of People's Commissariat of Defense of the Soviet Union and awardee of Order of Suvorov and commander in Eastern Front (World War II).,SELECT ?result WHERE { <http://dbpedia.org/resource/People's_Commissariat_of_Defense_of_the_Soviet_Union> <http://dbpedia.org/ontology/leader> ?result . ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Order_of_Suvorov> . <http://dbpedia.org/resource/Eastern_Front_(World_War_II)> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/officeHolder> <http://dbpedia.org/resource/People's_Commissariat_of_Defense_of_the_Soviet_Union>.
  ?person <http://dbpedia.org/property/awardee> <http://dbpedia.org/resource/Order_of_Suvorov>.
  ?person <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Eastern_Front_(World_War_II)>.
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
421,19,val,Give me the band member of the awardee of [[#Awards and nominations and native of Socialist Federal Republic of Yugoslavia and person born as Edin Dervišhalidović.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Socialist_Federal_Republic_of_Yugoslavia> . ?result <http://dbpedia.org/property/birthName> ""Edin Dervišhalidović""@en . ?v1 <http://dbpedia.org/property/awards> ""[[#Awards and nominations""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . }","```sparql
SELECT ?bandMember WHERE {
  ?person <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Socialist_Federal_Republic_of_Yugoslavia> .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person> .
  ?person <http://dbpedia.org/property/birthName> ""Edin Dervišhalidović""@en .
  ?person <http://dbpedia.org/ontology/award> ?award .
  ?bandMember <http://dbpedia.org/ontology/member> ?band .
  ?band <http://dbpedia.org/ontology/musicalArtist> ?person .
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
626,15,val,"Give me the awardee of Order of St. Andrew and commander in the force, that is a military conflict, of the commander in Battle of Paris (1814).",SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Order_of_St._Andrew> . <http://dbpedia.org/resource/Battle_of_Paris_(1814)> <http://dbpedia.org/ontology/commander> ?v0 . ?v1 <http://dbpedia.org/ontology/commander> ?v0 . ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
SELECT ?awardee WHERE {
  ?battle <http://dbpedia.org/ontology/commander> ?commander.
  FILTER(STR(?battle) = ""Battle of Paris (1814)"")
  
  ?conflict <http://dbpedia.org/ontology/commander> ?commander.
  ?conflict <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>.
  
  ?awardee <http://dbpedia.org/property/award> ?order.
  FILTER(STR(?order) = ""Order of St. Andrew"")
  
  ?awardee <http://dbpedia.org/ontology/commander> ?conflict.
}
```",4,5,5,3,2,3,2,20,0,0,9,0,0.0,0
617,44,val,Give me the spouse of the child of Antiochus III the Great and child of Antiochus III the Great and parent of the child of Antiochus (son of Antiochus III the Great).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Antiochus_III_the_Great> . ?v4 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Antiochus_III_the_Great> <http://dbpedia.org/ontology/child> ?v4 . <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/child> ?v2 . },"```sparql
SELECT ?spouse WHERE {
  ?child rdf:type dbo:Child .
  ?child dbo:parent <http://dbpedia.org/resource/Antiochus_III_the_Great> .
  
  OPTIONAL { ?child dbo:spouse ?spouse . }
  
  ?antiochusChild rdf:type dbo:Child .
  ?antiochusChild dbo:parent ?child .
  ?antiochusChild dbo:parent <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> .

  FILTER(?spouse != """")
}
```",5,5,6,2,3,3,3,71,0,0,2,0,0.0,0
959,31,val,"Give me the native of Japan and member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of the person born in 1958.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v2 <http://dbpedia.org/ontology/birthYear> ""1958""^^<http://www.w3.org/2001/XMLSchema#gYear> . ?v2 <http://dbpedia.org/ontology/almaMater> ?v0 . ?result <http://dbpedia.org/ontology/team> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Japan> . }","```sparql
SELECT ?person ?university WHERE {
  ?person dbo:nationality dbr:Japan .
  ?person dbo:dateOfBirth ?dob .
  FILTER(YEAR(?dob) = 1958)
  
  ?university rdf:type dbo:University ;
              rdf:type dbo:EducationalOrganization ;
              rdf:type dbo:Organisation ;
              dbo:country dbr:Japan .

  ?person dbo:almaMater ?university .
}
```",4,8,5,3,2,3,3,71,0,0,167,0,0.0,0
314,18,val,"Give me the awardee of 30 and commander in the profession, that is an event and a societal event, of Lisa Gavrić.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ""30""^^<http://www.w3.org/2001/XMLSchema#integer> . ?v2 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Lisa_Gavrić> <http://dbpedia.org/property/occupation> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. }","```sparql
SELECT ?result WHERE {
    ?event <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>.
    ?event <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>.
    <http://dbpedia.org/resource/Lisa_Gavrić> <http://dbpedia.org/property/profession> ?profession.
    ?event <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Lisa_Gavrić>.
    ?event <http://dbpedia.org/ontology/awardee> ?result.
    FILTER(?result = ""30"")
}
```",3,5,4,2,2,2,3,28,0,0,2,0,0.0,0
488,43,val,"Give me the death place of the father, that is a politician, of the father, that is an office holder, of Matsudaira Tadamasa and birth place of Enomoto Takeaki and administration of Emperor Go-Yōzei.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Enomoto_Takeaki> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Matsudaira_Tadamasa> <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Emperor_Go-Yōzei> . ?v0 <http://dbpedia.org/property/father> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
SELECT DISTINCT ?deathPlace ?birthPlace ?administration WHERE {
  # Part 1: Find Matsudaira Tadamasa's father who is a politician
  ?father rdf:type dbo:Politician ;
          dbo:child <http://dbpedia.org/resource/Matsudaira_Tadamasa> .

  # Part 2: Get the death place of this father
  OPTIONAL { ?father dbo:deathPlace ?deathPlace . }

  # Part 3: Get the birth place of Enomoto Takeaki
  <http://dbpedia.org/resource/Enomoto_Takeaki> dbo:birthPlace ?birthPlace .

  # Part 4: Get the administration period of Emperor Go-Yōzei
  <http://dbpedia.org/resource/Emperor_Go-Yōzei> dbo:administration ?administration .
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
197,7,val,Give me the birthplace of the member of FC Politehnica Timișoara and birthplace of George Lusztig.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/FC_Politehnica_Timișoara> . ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/George_Lusztig> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
# Query to find the birthplace of any member of FC Politehnica Timișoara
SELECT ?member ?birthPlace WHERE {
  ?member <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/FC_Politehnica_Timișoara> .
  ?member <http://dbpedia.org/property/birthPlace> ?birthPlace .
}

# Query to find the birthplace of George Lusztig
SELECT ?birthPlace WHERE {
  <http://dbpedia.org/resource/George_Lusztig> <http://dbpedia.org/property/birthPlace> ?birthPlace .
}
```",3,3,4,2,2,2,2,9,0,0,2,0,0.0,0
177,7,val,"Give me the headquarter of Ministry of Culture, Sports and Tourism and entity in the residence of Alexander Gamelin.","SELECT ?result WHERE { <http://dbpedia.org/resource/Alexander_Gamelin> <http://dbpedia.org/property/residence> ?v0 . ?result <http://dbpedia.org/ontology/country> ?v0 . <http://dbpedia.org/resource/Ministry_of_Culture,_Sports_and_Tourism> <http://dbpedia.org/ontology/location> ?result . }","```sparql
SELECT ?headquarter ?entity WHERE {
  # Find the headquarters of the Ministry of Culture, Sports and Tourism
  <http://dbpedia.org/resource/Ministry_of_Culture,_Sports_and_Tourism> <http://dbpedia.org/ontology/headquarters> ?headquarter .

  # Find entities in the residence of Alexander Gamelin
  <http://dbpedia.org/resource/Alexander_Gamelin> <http://dbpedia.org/property/residence> ?residence .
  
  # Ensure the entity is located in the same place as the headquarter
  ?entity <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement> .
  ?entity <http://dbpedia.org/property/location> ?residence .

  # Ensure the residence is in the same location as the headquarter
  FILTER(?headquarter = ?residence)
}
```",3,3,4,2,2,2,2,9,0,0,1,0,0.0,0
701,4,train,Give me the child of Nefertari.,SELECT ?result WHERE { <http://dbpedia.org/resource/Nefertari> <http://dbpedia.org/ontology/child> ?result . },"```sparql
SELECT ?child WHERE {
  <http://dbpedia.org/resource/Nefertari> <http://dbpedia.org/ontology/child> ?child .
}
```",1,1,2,1,1,3,3,71,6,0,0,1.0,1.0,1.0
959,2,train,Give me the manager of 2013 Júbilo Iwata season.,SELECT ?result WHERE { <http://dbpedia.org/resource/2013_Júbilo_Iwata_season> <http://dbpedia.org/ontology/manager> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/2013_Júbilo_Iwata_season> <http://dbpedia.org/ontology/coach> ?result .
}
```",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
485,5,train,"Give me the birth place, that is a region, of Joseph Whitaker (naturalist).",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. <http://dbpedia.org/resource/Joseph_Whitaker_(naturalist)> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Joseph_Whitaker_(naturalist)> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BirthPlace>.
  <http://dbpedia.org/resource/Joseph_Whitaker_(naturalist)> <http://dbpedia.org/property/birthPlace> ?result.
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>.
}
```",1,2,2,1,1,2,3,28,0,0,1,0,0.0,0
339,6,train,Give me the father of Princess Elizabeth of Greece and Denmark and child of George I of Greece.,SELECT ?result WHERE { <http://dbpedia.org/resource/George_I_of_Greece> <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Princess_Elizabeth_of_Greece_and_Denmark> <http://dbpedia.org/property/father> ?result . },"```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Princess_Elizabeth_of_Greece_and_Denmark> .
  ?person <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/Greek_monarchy#George_I>.
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
528,13,train,Give me the war of the commander in Battle of La Rinconada de Ate.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Battle_of_La_Rinconada_de_Ate> <http://dbpedia.org/ontology/commander> ?v1 . },"```sparql
SELECT ?result WHERE {
  ?battle <http://dbpedia.org/ontology/commander> ?commander .
  ?commander <http://dbpedia.org/ontology/battle> ?result .
  FILTER(?battle = <http://dbpedia.org/resource/Battle_of_La_Rinconada_de_Ate>)
  FILTER(?result <http://www.w3.org/2002/07/owl#sameAs*> <http://dbpedia.org/resource/Category:Military_conflicts>)
}
```",2,2,3,2,1,3,3,71,0,0,14,0,0.0,0
994,0,train,Give me the associated musical artist of S.A. Slayer.,SELECT ?result WHERE { <http://dbpedia.org/resource/S.A._Slayer> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/S._A._Slayer> ?property ?result .
  FILTER (
    strstarts(str(?property), ""http://dbpedia.org/ontology/"") ||
    strstarts(str(?property), ""http://xmlns.com/foaf/0.1/"")
  )
}
```",1,1,2,1,1,3,3,71,0,0,5,0,0.0,0
48,10,train,"Give me the actor, that is a musical artist, of the show with Stacey Dash.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Stacey_Dash> . ?v0 <http://dbpedia.org/property/starring> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
SELECT ?actor WHERE {
  ?show dbp:castMember <http://dbpedia.org/resource/Stacey_Dash> .
  ?show dbp:castMember ?actor .
  ?actor a dbo:Actor ;
         a dbo:MusicalArtist .
}
```",2,3,3,2,1,3,2,20,0,0,8,0,0.0,0
44,3,train,"Give me the associated musical artist, that is a group and an organisation, of Queensrÿche.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Queensrÿche> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. },"```sparql
SELECT ?result WHERE {
  ?result <http://dbpedia.org/ontology/type> <http://dbpedia.org/class/yago/MusicalArtist100000001> .
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organization> .
  ?association <http://dbpedia.org/property/associatedBand> <http://dbpedia.org/resource/Queensrÿche> .
  ?association <http://dbpedia.org/property/associatedMusicalArtist> ?result .
}
```",1,3,2,1,1,2,2,9,0,0,3,0,0.0,0
492,0,train,Give me the person decedent at French Algeria.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/French_Algeria> . },"```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/French_Algeria>.
}
```",1,1,2,1,1,3,3,71,30,0,0,1.0,1.0,1.0
747,1,train,Give me the band of Amba Shepherd.,SELECT ?result WHERE { <http://dbpedia.org/resource/Amba_Shepherd> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Amba_Shepherd> <http://dbpedia.org/ontology/memberOf> ?result .
}
```",1,1,2,1,1,3,3,71,0,0,13,0,0.0,0
645,10,train,Give me the child of the parent of Adela Pankhurst.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Adela_Pankhurst> <http://dbpedia.org/ontology/parent> ?v0 . },"```sparql
SELECT ?child WHERE {
  ?parent <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Adela_Pankhurst> .
  ?parent <http://dbpedia.org/ontology/child> ?child .
}
```",2,2,3,2,1,3,2,20,0,0,3,0,0.0,0
617,14,train,Give me the parent of the child of Antiochus (son of Antiochus III the Great).,SELECT ?result WHERE { <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/child> ?v1 . ?result <http://dbpedia.org/ontology/child> ?v1 . },"```sparql
SELECT ?child ?parent WHERE {
  <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://www.w3.org/2002/07/owl#sameAs> ?antiochusResource .
  ?antiochusResource <http://dbpedia.org/ontology/child> ?child .
  ?child <http://dbpedia.org/ontology/father> ?parent .
}
```",2,2,3,2,1,3,3,71,0,0,2,0,0.0,0
184,13,train,Give me the child of the child of Archduke Joseph Karl of Austria.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v1 . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Karl_of_Austria> . },"```sparql
SELECT ?grandchild WHERE {
  ?child <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduke_Joseph_Karl_of_Austria> .
  ?grandchild <http://dbpedia.org/ontology/child> ?child .
}
```",2,2,3,2,1,3,3,71,0,1,1,0.0,0.0,0
177,3,train,"Give me the office, that is an organisation, of Joo Don-sik.",SELECT ?result WHERE { <http://dbpedia.org/resource/Joo_Don-sik> <http://dbpedia.org/property/office> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Joo_Don-sik> <http://dbpedia.org/ontology/office> ?result .
  ?result a <http://dbpedia.org/ontology/Organisation> .
}
```",1,2,2,1,1,2,2,9,0,0,1,0,0.0,0
838,0,train,Give me the band of Raša Đelmaš.,SELECT ?result WHERE { <http://dbpedia.org/resource/Raša_Đelmaš> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Raša_Đelmaš> <http://dbpedia.org/ontology/band> ?result .
}
```",1,1,2,1,1,3,2,20,0,0,4,0,0.0,0
161,16,train,"Give me the force, that is a societal event and a military conflict, of the predecessor of Indalecio Prieto.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Indalecio_Prieto> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/commander> ?v1 . },SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Indalecio_Prieto> <http://dbpedia.org/ontology/predecessor> ?v1 . ?v1 <http://dbpedia.org/property/force> ?result . },2,4,3,2,1,3,3,71,0,0,1,0,0.0,0
487,9,train,Give me the administration of the person born on 1955-01-26.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> ?v0 . ?v0 <http://dbpedia.org/ontology/birthDate> ""1955-01-26""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
SELECT ?person ?administration WHERE {
  ?person <http://dbpedia.org/ontology/birthDate> ""1955-01-26""^^<http://www.w3.org/2001/XMLSchema#date> .
  OPTIONAL { ?person <http://dbpedia.org/property/administration> ?administration . }
}
```",2,2,3,2,1,3,2,20,0,23,3,0.0,0.0,0
488,2,train,Give me the administration of Emperor Go-Yōzei.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Emperor_Go-Yōzei> . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Emperor_Go-Yōzei> <http://dbpedia.org/ontology/administration> ?result .
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
487,2,train,Give me the person born on 1955-01-26.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthDate> ""1955-01-26""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
SELECT ?person WHERE {
  ?person a dbo:Person .
  ?person dbo:birthDate ""1955-01-26""^^xsd:date .
}
```",1,1,2,1,1,3,2,20,23,0,0,1.0,1.0,1.0
820,4,train,Who is the professional in Actor?,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Actor""@en . }","```sparql
SELECT ?actor WHERE {
  ?actor <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Actor>.
}
```",1,1,2,1,1,3,2,20,850,4079,20730,0.17244877257050112,0.03938832252085264,0.06412916368025953
392,9,train,Give me the province of Schio and region of Central European Time.,SELECT ?result WHERE { <http://dbpedia.org/resource/Schio> <http://dbpedia.org/ontology/province> ?result . ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Central_European_Time> . },"```sparql
SELECT ?province ?region WHERE {
  # Find the province of Schio
  { 
    ?schio dbo:locatedIn ?province .
    ?schio rdfs:label ""Schio""@en .
  }
  
  # Find the region associated with Central European Time
  { 
    ?cet dbo:timeZone ?region .
    ?cet rdfs:label ""Central European Time""@en .
  }
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
981,6,train,Give me the entity in Indonesia and birth place of Novia Indriani Mamuaja.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Indonesia> . <http://dbpedia.org/resource/Novia_Indriani_Mamuaja> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?birthPlace WHERE {
  <http://dbpedia.org/resource/Novia_Indriani_Mamuaja> <http://www.w3.org/2000/01/rdf-schema#seeAlso> ?birthPlace .
}

SELECT DISTINCT ?entity WHERE {
  ?entity <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Indonesia> .
  FILTER EXISTS { 
    <http://dbpedia.org/resource/Novia_Indriani_Mamuaja> <http://www.w3.org/2000/01/rdf-schema#seeAlso> ?birthPlace .
    ?birthPlace <http://dbpedia.org/ontology/location> ?entity .
  }
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
701,3,train,Give me the spouse of Amun-her-khepeshef.,SELECT ?result WHERE { <http://dbpedia.org/resource/Amun-her-khepeshef> <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Amun-her-khepeshef> <http://dbpedia.org/ontology/spouse> ?result .
}
```",1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
747,6,train,Who is the writer of Apollo (Hardwell song)?,SELECT ?result WHERE { <http://dbpedia.org/resource/Apollo_(Hardwell_song)> <http://dbpedia.org/property/writer> ?result . },"```sparql
SELECT ?writer WHERE {
  <http://dbpedia.org/resource/Apollo_(Hardwell_song)> <http://purl.org/dc/terms/creator> ?writer .
}
```",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
378,17,train,"Who is the commander in the war, that is a military conflict and a societal event and an event, of Thomas Trigge?",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Thomas_Trigge> <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"```sparql
SELECT ?commander WHERE {
  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>.
  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>.
  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>.
  ?war <http://dbpedia.org/property/commander> ?commander.
  ?commander <http://dbpedia.org/ontology/knows> <http://dbpedia.org/resource/Thomas_Trigge>.
}
```",2,5,3,2,1,3,3,71,0,0,169,0,0.0,0
696,7,train,Give me the birth place of the member of Dropkick Murphys.,SELECT ?result WHERE { <http://dbpedia.org/resource/Dropkick_Murphys> <http://dbpedia.org/ontology/bandMember> ?v1 . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . },"SELECT ?member ?birthPlace WHERE {
  ?member <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/Dropkick_Murphys>.
  ?member <http://dbpedia.org/property/birthPlace> ?birthPlace.
}",2,2,3,2,1,3,2,20,0,0,6,0,0.0,0
55,8,train,"Give me the band member of the producer, that is a band, of Used to Love Her.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. <http://dbpedia.org/resource/Used_to_Love_Her> <http://dbpedia.org/ontology/producer> ?v1 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . },"```sparql
SELECT ?bandMember WHERE {
  ?song dbpedia-owl:producer ?producer .
  ?producer rdf:type dbo:Band .
  ?producer dbo:member ?bandMember .
  FILTER (str(?song) = ""Used to Love Her"")
}
```",2,3,3,2,1,2,3,28,0,0,55,0,0.0,0
318,2,train,Give me the founding year of Eel Pie Publishing.,SELECT ?result WHERE { <http://dbpedia.org/resource/Eel_Pie_Publishing> <http://dbpedia.org/ontology/foundingYear> ?result . },"```sparql
SELECT ?foundingYear WHERE {
  <http://dbpedia.org/resource/Eel_Pie_Publishing> dbo:foundingDate ?date .
  BIND(YEAR(?date) AS ?foundingYear)
}
```",1,1,2,1,1,2,2,9,0,0,1,0,0.0,0
197,4,train,Give me the birthplace of Dumitru Nadu and birthplace of George Lusztig.,SELECT ?result WHERE { <http://dbpedia.org/resource/George_Lusztig> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Dumitru_Nadu> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?person ?birthplace WHERE {
  VALUES ?person { <http://dbpedia.org/resource/Dumitru_Nadu> <http://dbpedia.org/resource/George_Lusztig> }
  ?person <http://dbpedia.org/ontology/birthPlace> ?birthplace .
}
```",2,2,3,1,2,2,2,9,1,4,0,0.2,1.0,0.33333333333333337
429,6,train,"Give me the country of the military force, that is an organisation, of Camden Expedition.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/country> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Camden_Expedition> . },"```sparql
SELECT ?country WHERE {
  ?militaryForce <http://dbpedia.org/ontology/event> <http://dbpedia.org/resource/Camden_Expedition> .
  ?militaryForce a <http://dbpedia.org/ontology/Organisation> .
  ?militaryForce <http://dbpedia.org/property/country> ?country .
}
```",2,3,3,2,1,2,2,9,0,0,7,0,0.0,0
994,15,train,Give me the associated musical artist of the reference to Watchtower.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://xmlns.com/foaf/0.1/name> ""Watchtower""@en . }","```sparql
SELECT ?artist WHERE {
  ?artist <http://dbpedia.org/ontology/type> <http://dbpedia.org/resource/Musical_artist>.
  ?artist ?p <http://dbpedia.org/resource/Watchtower_(band)>.
}
```",2,2,3,2,1,3,3,71,0,0,6,0,0.0,0
404,14,train,"Give me the child of the father of Ernest Augustus, Duke of Brunswick.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/property/father> ?v1 . }","```sparql
SELECT ?child WHERE {
  ?father <http://dbpedia.org/ontology/spouse> ?mother .
  ?father <http://dbpedia.org/property/offspring> <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> .
  ?father <http://dbpedia.org/property/offspring> ?child .
}
```",2,2,3,2,1,3,3,71,0,0,3,0,0.0,0
328,2,train,Give me the leader of People's Commissariat of Defense of the Soviet Union.,SELECT ?result WHERE { <http://dbpedia.org/resource/People's_Commissariat_of_Defense_of_the_Soviet_Union> <http://dbpedia.org/ontology/leader> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/People%27s_Commissariat_of_Defense_of_the_Soviet_Union> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>.
  ?result <http://dbpedia.org/ontology/head> <http://dbpedia.org/resource/People%27s_Commissariat_of_Defense_of_the_Soviet_Union>.
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
659,1,train,Give me the commander in Battle of Leipzig.,SELECT ?result WHERE { <http://dbpedia.org/resource/Battle_of_Leipzig> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT ?commander WHERE {
  <http://dbpedia.org/resource/Battle_of_Leipzig> <http://dbpedia.org/ontology/commander> ?commander .
}
```",1,1,2,1,1,3,3,71,21,0,0,1.0,1.0,1.0
778,9,train,"Give me the award of the awardee, that is American, of Wolf Prize in Medicine.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Wolf_Prize_in_Medicine> . ?v0 <http://dbpedia.org/property/awards> ?result . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/United_States>. },"```sparql
SELECT ?result WHERE {
  ?person <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/United_States>.
  ?person <http://dbpedia.org/ontology/award> <http://dbpedia.org/resource/Wolf_Prize_in_Medicine>.
  ?person <http://dbpedia.org/ontology/awardee> ?result.
}
```",2,3,3,2,1,3,2,20,0,0,9,0,0.0,0
767,12,train,Give me the alma mater of Carl L. Nippert and reference to .,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> """"@en . <http://dbpedia.org/resource/Carl_L._Nippert> <http://dbpedia.org/ontology/almaMater> ?result . }","```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Carl_L._Nippert> <http://dbpedia.org/ontology/almaMater> ?result .
}
```",2,2,3,1,2,3,3,71,2,1,0,0.6666666666666666,1.0,0.8
626,8,train,Give me the awardee of the award of Aleksey Petrovich Yermolov.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Aleksey_Petrovich_Yermolov> <http://dbpedia.org/property/awards> ?v0 . },"```sparql
SELECT ?award WHERE {
  <http://dbpedia.org/resource/Aleksey_Petrovich_Yermolov> <http://www.w3.org/2002/07/owl#sameAs> ?person .
  ?person <http://dbpedia.org/ontology/awards> ?award .
}
```",2,2,3,2,1,3,2,20,0,0,230,0,0.0,0
378,13,train,Give me the war of the commander in Peninsular War.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Peninsular_War> <http://dbpedia.org/ontology/commander> ?v1 . },"SELECT ?result WHERE { 
  <http://dbpedia.org/resource/Peninsular_War> <http://dbpedia.org/ontology/commander> ?commander .
  ?commander <http://dbpedia.org/ontology/battle> ?result .
}",2,2,3,2,1,3,3,71,118,0,0,1.0,1.0,1.0
547,5,train,Give me the show with Emily Richard.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emily_Richard> . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Emily_Richard> <http://dbpedia.org/ontology/knownFor> ?result .
}
```",1,1,2,1,1,3,3,71,0,0,4,0,0.0,0
712,9,train,"Give me the country of the military force, that is an organisation and a military unit, of Vyoshenskaya Uprising.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v0 <http://dbpedia.org/ontology/country> ?result . ?v0 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Vyoshenskaya_Uprising> . },"```sparql
SELECT ?result WHERE {
  ?militaryForce <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>.
  ?militaryForce <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>.
  <http://dbpedia.org/resource/Vyoshenskaya_Uprising> <http://dbpedia.org/property/militaryForce> ?militaryForce.
  ?militaryForce <http://dbpedia.org/ontology/country> ?result.
}
```",2,4,3,2,1,3,2,20,0,0,2,0,0.0,0
534,1,train,Give me the headquarter of Royal Dublin Society.,SELECT ?result WHERE { <http://dbpedia.org/resource/Royal_Dublin_Society> <http://dbpedia.org/ontology/headquarter> ?result . },SELECT ?result WHERE { <http://dbpedia.org/resource/Royal_Dublin_Society> <http://dbpedia.org/ontology/headquarters> ?result . },1,1,2,1,1,3,2,20,0,0,3,0,0.0,0
488,14,train,Give me the administration of the father of Emperor Go-Mizunoo.,SELECT ?result WHERE { <http://dbpedia.org/resource/Emperor_Go-Mizunoo> <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/property/leader> ?v1 . },"SELECT ?result WHERE {
  <http://dbpedia.org/resource/Emperor_Go-Mizunoo> <http://dbpedia.org/ontology/father> ?father .
  ?father <http://dbpedia.org/ontology/administration> ?result .
}",2,2,3,2,1,3,3,71,0,0,2,0,0.0,0
356,7,train,Give me the player in the successor of 2014 Sacramento Republic FC season.,SELECT ?result WHERE { <http://dbpedia.org/resource/2014_Sacramento_Republic_FC_season> <http://dbpedia.org/ontology/successor> ?v1 . ?v1 <http://dbpedia.org/ontology/team> ?result . },"```sparql
SELECT ?player WHERE {
    ?season <http://dbpedia.org/ontology/successor> ?successorSeason .
    ?successorSeason <http://dbpedia.org/property/team> <http://dbpedia.org/resource/Sacramento_Republic_FC> .
    FILTER(?season = <http://dbpedia.org/resource/2014_Sacramento_Republic_FC_season>)
    ?player <http://dbpedia.org/ontology/team> ?successorSeason .
}
```",2,2,3,2,1,3,2,20,0,0,1,0,0.0,0
356,9,train,"Give me the successor of the predecessor, that is a sports team season and a soccer club season, of 2015 Sacramento Republic FC season.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v0 <http://dbpedia.org/ontology/successor> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?v0 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/2015_Sacramento_Republic_FC_season> . },"```sparql
SELECT ?successor WHERE {
    ?predecessor <http://dbpedia.org/ontology/successor> ?season .
    ?season <http://dbpedia.org/ontology/predecessor> <http://dbpedia.org/resource/2015_Sacramento_Republic_FC_season> .
    ?predecessor <http://dbpedia.org/ontology/successor> ?successor .
}
```",2,4,3,2,1,3,2,20,0,1,1,0.0,0.0,0
712,5,train,Who is the awardee of Hero of the Soviet Union?,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Hero_of_the_Soviet_Union> . },"```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/awardedBy> <http://dbpedia.org/resource/Hero_of_the_Soviet_Union>.
}
```",1,1,2,1,1,3,2,20,0,0,837,0,0.0,0
30,5,train,Give me the native of the birthplace of Silvia Cohen.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . <http://dbpedia.org/resource/Silvia_Cohen> <http://dbpedia.org/ontology/birthPlace> ?v0 . },"```sparql
SELECT ?native WHERE {
  <http://dbpedia.org/resource/Silvia_Cohen> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  ?person <http://dbpedia.org/ontology/nativeOf> ?birthPlace .
  BIND(?person AS ?native)
}
```",2,2,3,2,1,2,2,9,0,0,11488,0,0.0,0
251,1,train,Give me the administration of Forza Italia (2013).,SELECT ?result WHERE { ?result <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Forza_Italia_(2013)> . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Forza_Italia_(2013)> <http://dbpedia.org/ontology/administration> ?result .
}
```",1,1,2,1,1,2,3,28,0,0,5,0,0.0,0
179,3,train,Give me the birth name of Sirikit.,SELECT ?result WHERE { <http://dbpedia.org/resource/Sirikit> <http://dbpedia.org/property/birthName> ?result . },"```sparql
SELECT ?birthName WHERE {
  <http://dbpedia.org/resource/Sirikit> <http://dbpedia.org/ontology/birthName> ?birthName .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
232,4,train,Give me the person born as John Devon Roland Pertwee.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""John Devon Roland Pertwee""@en . }","```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/birthName> ""John Devon Roland Pertwee"" .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
285,2,train,Who is the spouse of Aristotle Onassis?,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Aristotle_Onassis> . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Aristotle_Onassis> <http://dbpedia.org/ontology/spouse> ?result .
}
```",1,1,2,1,1,3,2,20,2,0,0,1.0,1.0,1.0
184,5,train,"Give me the parent, that is a royalty, of Archduke Ladislaus Philipp of Austria.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Archduke_Ladislaus_Philipp_of_Austria> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Archduke_Ladislaus_Philipp_of_Austria> <http://www.w3.org/2000/01/rdf-schema#parent> ?result .
  ?result a <http://dbpedia.org/ontology/Royalty> .
}
```",1,2,2,1,1,3,3,71,0,0,2,0,0.0,0
778,10,train,"Give me the work, that is a software, of the author of Pushd and popd.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/author> ?v0 . <http://dbpedia.org/resource/Pushd_and_popd> <http://dbpedia.org/property/author> ?v0 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Software>. },"```sparql
SELECT ?software WHERE {
  ?author <http://dbpedia.org/ontology/authored> ?work .
  ?work <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Software> .
  ?author foaf:name ""Bill Joy"" . # Assuming Bill Joy is the author
}
```",2,3,3,2,1,3,2,20,0,0,5,0,0.0,0
16,0,train,Give me the spouse of Ted McGinley.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
SELECT ?spouse WHERE {
  <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/ontology/spouse> ?spouse .
}
```",1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
378,2,train,"Give me the claim to fame of Louis des Balbes de Berton de Crillon, 1st Duke of Mahón.","SELECT ?result WHERE { <http://dbpedia.org/resource/Louis_des_Balbes_de_Berton_de_Crillon,_1st_Duke_of_Mahón> <http://dbpedia.org/ontology/knownFor> ?result . }","```sparql
SELECT ?result WHERE {
    <http://dbpedia.org/resource/Louis_des_Balbes_de_Berton_de_Crillon,_1st_Duke_of_Mahón> <http://dbpedia.org/ontology/knownFor> ?result .
}
```",1,1,2,1,1,3,3,71,2,0,0,1.0,1.0,1.0
498,2,train,"Give me the band, that is an organisation and a band, of Solace of Requiem.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Solace_of_Requiem> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT ?result WHERE {
  ?result a <http://dbpedia.org/ontology/Band> .
  ?result a <http://dbpedia.org/ontology/Organization> .
  OPTIONAL { <http://dbpedia.org/resource/Solace_of_Requiem> <http://dbpedia.org/property/memberOf> ?result . }
}
```",1,3,2,1,1,2,2,9,0,0,4,0,0.0,0
391,9,train,"Give me the actor of The Departed and native of Compton, California.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Compton,_California> . <http://dbpedia.org/resource/The_Departed> <http://dbpedia.org/ontology/starring> ?result . }","```sparql
SELECT ?person WHERE {
  ?film dbpedia-owl:starring ?person .
  ?film rdfs:label ""The Departed""@en .
  
  OPTIONAL { ?person dbo:nativePlace ?place . }
  FILTER (CONTAINS(LCASE(?place), ""compton, california""))
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
994,3,train,Give me the reference to Watchtower.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Watchtower""@en . }","```sparql
SELECT ?entity WHERE {
  ?entity <http://dbpedia.org/ontology/reference> <http://dbpedia.org/resource/Watchtower>.
}
```",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
712,3,train,Give me the country of Armed Forces of South Russia.,SELECT ?result WHERE { <http://dbpedia.org/resource/Armed_Forces_of_South_Russia> <http://dbpedia.org/ontology/country> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Armed_Forces_of_South_Russia> <http://dbpedia.org/ontology/country> ?result .
}
```",1,1,2,1,1,3,2,20,2,0,0,1.0,1.0,1.0
666,1,train,Give me the figure known as The Three Lions.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ""The Three Lions""@en . }","```sparql
SELECT ?entity WHERE {
  ?entity <http://dbpedia.org/ontology/alias> ""The Three Lions"" .
}
```",1,1,2,1,1,3,2,20,0,0,5,0,0.0,0
64,3,train,"Give me the region, that is a country, of Central European Time.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . },"```sparql
SELECT ?result WHERE {
  ?timeZone <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Central_European_Time>.
  ?timeZone <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>.
  BIND(?timeZone AS ?result)
}
```",1,2,2,1,1,2,2,9,52,42,4,0.5531914893617021,0.9285714285714286,0.6933333333333335
10,5,train,Give me the birth name of Sharon Kao.,SELECT ?result WHERE { <http://dbpedia.org/resource/Sharon_Kao> <http://dbpedia.org/property/birthName> ?result . },"```sparql
SELECT ?birthName WHERE {
  <http://dbpedia.org/resource/Sharon_Kao> <http://dbpedia.org/ontology/birthName> ?birthName .
}
```",1,1,2,1,1,2,3,28,2,0,0,1.0,1.0,1.0
404,0,train,Give me the spouse of Princess Victoria Louise of Prussia.,SELECT ?result WHERE { <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
SELECT ?spouse WHERE {
  <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?spouse .
}
```",1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
801,11,train,Give me the professional in the alter ego of The Shadow.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v0 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v0 . },"```sparql
SELECT ?professional WHERE {
  ?entity <http://dbpedia.org/ontology/alterEgo> <http://dbpedia.org/resource/The_Shadow> .
  ?entity <http://dbpedia.org/ontology/profession> ?professional .
}
```",2,2,3,2,1,3,3,71,0,0,39640,0,0.0,0
485,10,train,"Give me the birth place of the awardee, that is a writer and a poet, of Eric Gregory Award.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Poet>. ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Eric_Gregory_Award> . },"```sparql
SELECT ?birthPlace WHERE {
  ?person <http://dbpedia.org/ontology/award> <http://dbpedia.org/resource/Eric_Gregory_Award> .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer> .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Poet> .
  ?person <http://dbpedia.org/property/birthPlace> ?birthPlace .
}
```",2,4,3,2,1,2,3,28,5,3,2,0.625,0.7142857142857143,0.6666666666666666
54,12,train,Give me the parent of Thado Minsaw of Prome and predecessor of Ameitta Thiri Maha Dhamma Dewi of Ava.,SELECT ?result WHERE { <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Ameitta_Thiri_Maha_Dhamma_Dewi_of_Ava> . },"```sparql
# Find the parent of Thado Minsaw of Prome
SELECT ?parent WHERE {
  <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> <http://dbpedia.org/ontology/father> ?parent .
}

UNION

# Find the predecessor of Ameitta Thiri Maha Dhamma Dewi of Ava
SELECT ?predecessor WHERE {
  <http://dbpedia.org/resource/Ameitta_Thiri_Maha_Dhamma_Dewi_of_Ava> <http://dbpedia.org/ontology/predecessor> ?predecessor .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
666,9,train,"Give me the manager, that is a sports manager, of the team, that is a soccer club and a sports team season, of Leonid Slutsky (football coach).",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/manager> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v0 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Leonid_Slutsky_(football_coach)> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. },"```sparql
SELECT ?manager WHERE {
  ?team <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/Lionid_Slutsky_(football_coach)> .
  ?team <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub> .
  ?team <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason> .
  ?team <http://dbpedia.org/ontology/manager> ?manager .
  ?manager <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager> .
}
```",2,5,3,2,1,3,2,20,0,0,5,0,0.0,0
435,5,train,Give me the author of Iceland.,SELECT ?result WHERE { <http://dbpedia.org/resource/Iceland> <http://dbpedia.org/property/author> ?result . },"```sparql
SELECT ?author WHERE {
  ?work <http://dbpedia.org/ontology/subject> <http://dbpedia.org/resource/Iceland>.
  ?work <http://purl.org/dc/terms/creator> ?author.
}
```",1,1,2,1,1,2,3,28,0,0,1,0,0.0,0
827,4,train,"Who is the spouse, that is a royalty, of Princess Pauline of Saxe-Weimar-Eisenach?",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Princess_Pauline_of_Saxe-Weimar-Eisenach> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
SELECT ?spouse WHERE {
  <http://dbpedia.org/resource/Princess_Pauline_of_Saxe-Weimar-Eisenach> <http://xmlns.com/foaf/0.1/spouse> ?spouse .
  ?spouse <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
}
```",1,2,2,1,1,3,2,20,0,0,1,0,0.0,0
54,16,train,Give me the child of the parent of Thado Minsaw of Prome.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v1 . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> . },"```sparql
SELECT ?child WHERE {
  ?person dbo:parent ?parent .
  FILTER(STR(?person) = ""Thado_Minsaw_of_Prome"") .
  ?parent dbo:child ?child .
}
```",2,2,3,2,1,3,3,71,0,0,3,0,0.0,0
659,0,train,Give me the commander in German campaign of 1813.,SELECT ?result WHERE { <http://dbpedia.org/resource/German_campaign_of_1813> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT ?result WHERE {
    <http://dbpedia.org/resource/German_campaign_of_1813> <http://dbpedia.org/ontology/commander> ?result .
}
```",1,1,2,1,1,3,3,71,31,0,0,1.0,1.0,1.0
617,7,train,Who is the commander in Battle of Panium?,SELECT ?result WHERE { <http://dbpedia.org/resource/Battle_of_Panium> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Battle_of_Panium> <http://dbpedia.org/ontology/commander> ?result .
}
```",1,1,2,1,1,3,3,71,3,0,0,1.0,1.0,1.0
801,15,train,Give me the alter ego of the true self of The Shadow.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/alterEgo> ?result . ?v1 <http://xmlns.com/foaf/0.1/givenName> ""The Shadow""@en . }","```sparql
SELECT ?alterEgo WHERE {
  <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/ontology/trueSelf> ?trueSelf .
  ?trueSelf <http://dbpedia.org/ontology/alterEgo> ?alterEgo .
}
```",2,2,3,2,1,3,3,71,0,0,3,0,0.0,0
915,1,train,Give me the father of Lizzie Spaulding.,SELECT ?result WHERE { <http://dbpedia.org/resource/Lizzie_Spaulding> <http://dbpedia.org/property/father> ?result . },SELECT ?result WHERE { <http://dbpedia.org/resource/Lizzie_Spaulding> <http://dbpedia.org/ontology/father> ?result . },1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
783,9,train,Give me the band member of the person born as Samuel Ofori Amponsah.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ""Samuel Ofori Amponsah""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . }","```sparql
SELECT ?bandMember WHERE {
  <http://dbpedia.org/resource/Samuel_Ofori_Amponsah> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
  <http://dbpedia.org/resource/Samuel_Ofori_Amponsah> <http://dbpedia.org/property/memberOf> ?bandMember .
}
```",2,2,3,2,1,3,2,20,0,0,5,0,0.0,0
701,1,train,Give me the parent of Henuttawy (19th dynasty).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Henuttawy_(19th_dynasty)> . },"```sparql
SELECT ?parent WHERE {
  { 
    <http://dbpedia.org/resource/Henuttawy_(19th_dynasty)> <http://dbpedia.org/ontology/father> ?parent .
  } UNION {
    <http://dbpedia.org/resource/Henuttawy_(19th_dynasty)> <http://dbpedia.org/ontology/mother> ?parent .
  }
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
54,10,train,Give me the child of Thinkhaya of Pagan and predecessor of Ameitta Thiri Maha Dhamma Dewi of Ava.,SELECT ?result WHERE { <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Ameitta_Thiri_Maha_Dhamma_Dewi_of_Ava> . },"```sparql
# Step 1: Find the child of Thinkhaya of Pagan
SELECT ?child WHERE {
    <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?child .
}

# Step 2: From the results of step 1, find which one is a predecessor to Ameitta Thiri Maha Dhamma Dewi of Ava
SELECT ?result WHERE {
    ?child <http://dbpedia.org/ontology/predecessor> <http://dbpedia.org/resource/Ameitta_Thiri_Maha_Dhamma_Dewi_of_Ava> .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
778,5,train,"Give me the work, that is a software, of Bill Joy.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Bill_Joy> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Software>. },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Bill_Joy> <http://dbpedia.org/ontology/work> ?result .
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Software> .
}
```",1,2,2,1,1,3,2,20,0,0,5,0,0.0,0
251,11,train,Give me the death place of the author of The Twelve Abbots of Challant.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/The_Twelve_Abbots_of_Challant> <http://dbpedia.org/property/author> ?v1 . },"```sparql
SELECT ?deathPlace WHERE {
  ?book dbp:title ""The Twelve Abbots of Challant"" .
  ?book dbo:author ?author .
  ?author dbo:deathPlace ?deathPlace .
}
```",2,2,3,2,1,2,3,28,0,0,3,0,0.0,0
314,3,train,Give me the headquarter of House of Sombrerete.,SELECT ?result WHERE { <http://dbpedia.org/resource/House_of_Sombrerete> <http://dbpedia.org/ontology/location> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/House_of_Sombrerete> <http://dbpedia.org/ontology/headquarter> ?result .
}
```",1,1,2,1,1,2,3,28,0,0,2,0,0.0,0
391,17,train,"Give me the movie, that is a movie and a work and a television show, with the professional in .","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/property/occupation> """"@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?result <http://dbpedia.org/property/starring> ?v1 . }","SELECT ?result WHERE { 
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Movie>. 
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. 
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TVSeries>.
  # Missing specific professional or entity to complete the query
}",2,5,3,2,1,3,3,71,0,0,1674,0,0.0,0
9,2,train,Give me the figure known as QUB.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ""QUB""@en . }","```sparql
SELECT ?entity WHERE {
  ?entity <http://dbpedia.org/ontology/alias> ""QUB"" .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
392,3,train,"Give me the region, that is a country, of Central European Time.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
SELECT ?result WHERE {
  ?cet <http://dbpedia.org/ontology/country> ?result .
  ?result a <http://dbpedia.org/ontology/Country> .
  FILTER EXISTS { ?cet rdfs:label ""Central European Time""@en }
}
```",1,2,2,1,1,2,3,28,0,0,56,0,0.0,0
645,6,train,Give me the alma mater of Sylvia Pankhurst and entity in United Kingdom.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . <http://dbpedia.org/resource/Sylvia_Pankhurst> <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
SELECT ?almaMater ?entity WHERE {
  # Find alma mater of Sylvia Pankhurst
  <http://dbpedia.org/resource/Sylvia_Pankhurst> <http://dbpedia.org/ontology/almaMater> ?almaMater .
  
  # Find any entity in the United Kingdom
  ?entity <http://www.w3.org/2000/01/rdf-schema#label> ?label .
  FILTER (lang(?label) = 'en')
  OPTIONAL { ?entity <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . }
}
```",2,2,3,1,2,3,2,20,1,524289,0,1.9073413568826414e-06,1.0,3.814675437877057e-06
645,4,train,Give me the parent of Adela Pankhurst.,SELECT ?result WHERE { <http://dbpedia.org/resource/Adela_Pankhurst> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Adela_Pankhurst> <http://dbpedia.org/ontology/parent> ?result .
}
```",1,1,2,1,1,3,2,20,2,0,0,1.0,1.0,1.0
959,15,train,"Give me the alma mater, that is Japanese and an organisation and a university and an educational institution, of the person born in 1958.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthYear> ""1958""^^<http://www.w3.org/2001/XMLSchema#gYear> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?v1 <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. }","```sparql
SELECT ?result WHERE {
    ?person <http://dbpedia.org/property/birthYear> ""1958""^^<http://www.w3.org/2001/XMLSchema#gYear>.
    ?person <http://dbpedia.org/ontology/almaMater> ?result.
    ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organization>.
    ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>.
    ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalOrganization>.
    ?result <http://dbpedia.org/property/country> <http://dbpedia.org/resource/Japan>.
}
```",2,6,3,2,1,3,3,71,0,0,3,0,0.0,0
303,7,train,Give me the party of Arnulfo Arias and party of Guillermo Endara.,SELECT ?result WHERE { <http://dbpedia.org/resource/Guillermo_Endara> <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Arnulfo_Arias> <http://dbpedia.org/ontology/party> ?result . },"```sparql
SELECT ?person ?party WHERE {
  VALUES ?person { <http://dbpedia.org/resource/Arnulfo_Arias> <http://dbpedia.org/resource/Guillermo_Endara> }
  ?person <http://dbpedia.org/ontology/party> ?party .
}
```",2,2,3,1,2,2,3,28,1,3,0,0.25,1.0,0.4
16,10,train,Give me the person born as Georgeanne Marie Rice and spouse of Ted McGinley.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Georgeanne Marie Rice""@en . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/birthName> ""Georgeanne Marie Rice"" .
  ?person <http://dbpedia.org/property/spouse> <http://dbpedia.org/resource/Ted_McGinley> .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
251,6,train,Give me the administration of Forza Italia (2013) and location of Battle of Marengo.,SELECT ?result WHERE { <http://dbpedia.org/resource/Battle_of_Marengo> <http://dbpedia.org/ontology/place> ?result . ?result <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Forza_Italia_(2013)> . },"```sparql
SELECT ?administration ?location WHERE {
  # Query for administration related to Forza Italia (2013)
  OPTIONAL { 
    <http://dbpedia.org/resource/Forza_Italia_(2013)> <http://dbpedia.org/ontology/administration> ?administration .
  }
  
  # Query for location of Battle of Marengo
  OPTIONAL {
    <http://dbpedia.org/resource/Battle_of_Marengo> <http://dbpedia.org/ontology/location> ?location .
  }
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
838,1,train,Give me the band member of Kerber.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Kerber> . },"```sparql
SELECT ?member WHERE {
  ?band <http://www.w3.org/2000/01/rdf-schema#label> ""Kerber""@en .
  ?band <http://dbpedia.org/ontology/member> ?member .
}
```",1,1,2,1,1,3,2,20,0,0,8,0,0.0,0
747,5,train,"Give me the work, that is a song, of Amba Shepherd.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Amba_Shepherd> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Amba_Shepherd> <http://purl.org/dc/terms/subject> ?result .
  ?result a <http://dbpedia.org/ontology/Song> .
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
339,3,train,Who is the child of Christian IX of Denmark?,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Christian_IX_of_Denmark> . },"```sparql
SELECT ?child WHERE {
  <http://dbpedia.org/resource/Christian_IX_of_Denmark> <http://dbpedia.org/ontology/child> ?child .
}
```",1,1,2,1,1,3,2,20,4,2,2,0.6666666666666666,0.6666666666666666,0.6666666666666666
303,8,train,"Give me the party of the commander, that is a politician, in United States invasion of Panama.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/party> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/United_States_invasion_of_Panama> <http://dbpedia.org/ontology/commander> ?v1 . },"```sparql
SELECT ?party WHERE {
  ?event <http://dbpedia.org/ontology/commander> ?commander .
  ?commander <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .
  ?commander <http://dbpedia.org/ontology/party> ?party .
  FILTER (STR(?event) = ""United States invasion of Panama"")
}
```",2,3,3,2,1,2,3,28,0,0,4,0,0.0,0
312,0,train,Give me the entity in Province of Bergamo.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/province> <http://dbpedia.org/resource/Province_of_Bergamo> . },"```sparql
SELECT ?result WHERE {
  ?result <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Province_of_Bergamo>.
}
```",1,1,2,1,1,2,2,9,0,16,228,0.0,0.0,0
48,0,train,Give me the band of Carl Falk.,SELECT ?result WHERE { <http://dbpedia.org/resource/Carl_Falk> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT ?band WHERE {
  <http://dbpedia.org/resource/Carl_Falk> <http://dbpedia.org/ontology/memberOf> ?band .
}
```",1,1,2,1,1,3,2,20,0,0,11,0,0.0,0
487,6,train,Give me the country of 2022 Vermont House of Representatives election and administration of Phil Scott.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/Phil_Scott> . <http://dbpedia.org/resource/2022_Vermont_House_of_Representatives_election> <http://dbpedia.org/ontology/country> ?result . },"```sparql
SELECT ?country WHERE {
  OPTIONAL { <http://dbpedia.org/resource/2022_Vermont_House_of_Representatives_election> <http://www.w3.org/2000/01/rdf-schema#seeAlso> ?vermont. }
  OPTIONAL { <http://dbpedia.org/resource/Administration_of_Phil_Scott> <http://www.w3.org/2000/01/rdf-schema#seeAlso> ?vermont. }
  ?vermont <http://dbpedia.org/ontology/country> ?country.
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
547,13,train,Give me the resting place of the actor of Enemy at the Door.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Enemy_at_the_Door> <http://dbpedia.org/property/starring> ?v1 . },"```sparql
SELECT ?actor ?restingPlace WHERE {
  ?film <http://dbpedia.org/ontology/starring> ?actor .
  ?film <http://dbpedia.org/property/title> ""Enemy at the Door"" .
  OPTIONAL { ?actor <http://dbpedia.org/ontology/burialPlace> ?restingPlace . }
}
```",2,2,3,2,1,3,3,71,0,0,2,0,0.0,0
184,2,train,Give me the parent of Archduchess Ilona of Austria.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Ilona_of_Austria> . },"```sparql
SELECT ?parent WHERE {
  OPTIONAL { <http://dbpedia.org/resource/Archduchess_Ilona_of_Austria> <http://dbpedia.org/ontology/father> ?parent . }
  OPTIONAL { <http://dbpedia.org/resource/Archduchess_Ilona_of_Austria> <http://dbpedia.org/ontology/mother> ?parent . }
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
356,5,train,"Give me the native, that is a soccer player and a soccer manager, of Wolverhampton.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Wolverhampton> . },"```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Wolverhampton>.
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>.
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>.
}
```",1,3,2,1,1,3,2,20,0,0,17,0,0.0,0
959,4,train,"Give me the alma mater, that is Japanese and an organisation and a university and an educational institution, of Eiji Ōtsuka.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. <http://dbpedia.org/resource/Eiji_Ōtsuka> <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Eiji_Ōtsuka> <http://dbpedia.org/ontology/almaMater> ?result .
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organization> .
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University> .
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalOrganization> .
  ?result <http://dbpedia.org/property/country> <http://dbpedia.org/resource/Japan> .
}
```",1,5,2,1,1,3,3,71,0,0,1,0,0.0,0
179,1,train,Give me the parent of Ubol Ratana.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ubol_Ratana> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Ubol_Ratana> dbo:child ?result .
}
```",1,1,2,1,1,3,2,20,0,3,2,0.0,0.0,0
528,16,train,Give me the commander in the work of --01-09.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/author> ""--01-09""^^<http://www.w3.org/2001/XMLSchema#gMonthDay> . ?v1 <http://dbpedia.org/ontology/commander> ?result . }","```sparql
SELECT ?result WHERE {
  ?work <http://dbpedia.org/ontology/date> ""01-09""^^xsd:date .
  ?work <http://dbpedia.org/ontology/commander> ?result .
}
```",2,2,3,2,1,3,3,71,0,0,2,0,0.0,0
177,6,train,"Give me the headquarter of the office, that is an organisation, of Joo Don-sik.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/location> ?result . <http://dbpedia.org/resource/Joo_Don-sik> <http://dbpedia.org/property/office> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Joo_Don-sik> <http://dbpedia.org/property/office> ?v1 . ?v1 <http://dbpedia.org/ontology/headquarters> ?result . },2,3,3,2,1,2,2,9,0,0,2,0,0.0,0
528,7,train,Give me the birth name of Narciso Campero.,SELECT ?result WHERE { <http://dbpedia.org/resource/Narciso_Campero> <http://dbpedia.org/property/birthName> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Narciso_Campero> <http://dbpedia.org/ontology/birthName> ?result .
}
```",1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
16,6,train,Give me the profession of Satomi Ishihara.,SELECT ?result WHERE { <http://dbpedia.org/resource/Satomi_Ishihara> <http://dbpedia.org/property/occupation> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Satomi_Ishihara> <http://dbpedia.org/ontology/profession> ?result .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
617,5,train,"Who is the successor, that is a royalty, of Antiochus (son of Antiochus III the Great)?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/successor> ?result . },"```sparql
SELECT ?result WHERE {
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>.
  <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/successor> ?result.
}
```",1,2,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
161,1,train,Give me the military force of Spanish Civil War.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . },"```sparql
SELECT ?result WHERE {
  ?event <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War>.
  ?event <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryForce>.
  BIND(?event AS ?result)
}
```",1,1,2,1,1,3,3,71,0,0,514,0,0.0,0
404,10,train,"Give me the spouse of Princess Victoria Louise of Prussia and child of Ernest Augustus, Crown Prince of Hanover.","SELECT ?result WHERE { <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ernest_Augustus,_Crown_Prince_of_Hanover> . }","```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia>.
  ?person <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/Ernest_Augustus,_Crown_Prince_of_Hanover>.
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
747,12,train,Give me the band of Shèna and band of Amba Shepherd.,SELECT ?result WHERE { <http://dbpedia.org/resource/Amba_Shepherd> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Shèna> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT ?band WHERE {
  { <http://dbpedia.org/resource/Shèna> <http://dbpedia.org/ontology/band> ?band . }
  UNION
  { <http://dbpedia.org/resource/Amba_Shepherd> <http://dbpedia.org/ontology/band> ?band . }
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
421,2,train,Give me the person born as Edin Dervišhalidović.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Edin Dervišhalidović""@en . }","```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/birthName> ""Edin Dervišhalidović"" .
}
```",1,1,2,1,1,2,3,28,0,0,1,0,0.0,0
767,4,train,"Give me the administration, that is a settlement, of Green.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/leaderParty> ""Green""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. }","```sparql
SELECT ?result WHERE {
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>.
  ?result <http://dbpedia.org/property/administration> <http://dbpedia.org/resource/Green>.
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
485,8,train,"Give me the entity in the region, that is a country, of Western European Time.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Western_European_Time> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/country> ?v1 . },"```sparql
SELECT ?entity WHERE {
  ?region <http://www.w3.org/2000/01/rdf-schema#seeAlso> <http://dbpedia.org/resource/Western_European_Time>.
  ?region a <http://dbpedia.org/ontology/Country>.
  ?entity <http://dbpedia.org/ontology/country> ?region.
}
```",2,3,3,2,1,2,3,28,0,0,46363,0,0.0,0
488,10,train,Give me the administration of Emperor Go-Yōzei and birth place of Enomoto Takeaki.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Emperor_Go-Yōzei> . <http://dbpedia.org/resource/Enomoto_Takeaki> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?administration ?birthPlace WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/Emperor_Go-Yōzei> <http://dbpedia.org/ontology/administration> ?administration .
  }
  OPTIONAL { 
    <http://dbpedia.org/resource/Enomoto_Takeaki> <http://dbpedia.org/property/birthPlace> ?birthPlace .
  }
}
```",2,2,3,1,2,3,3,71,1,1,0,0.5,1.0,0.6666666666666666
16,15,train,Who is the person born as the birth name of Ted McGinley?,SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/birthName> ""Ted McGinley"" .
}
```",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
197,3,train,Who is the awardee of Leroy P. Steele Prize?,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ""Leroy P. Steele Prize""@en . }","```sparql
SELECT ?person WHERE {
  ?person dbo:award <http://dbpedia.org/resource/Leroy_P._Steele_Prize> .
}
```",1,1,2,1,1,2,2,9,16,63,5,0.20253164556962025,0.7619047619047619,0.32
488,13,train,"Give me the death place of the father, that is a politician, of Yūki Hideyasu.",SELECT ?result WHERE { <http://dbpedia.org/resource/Yūki_Hideyasu> <http://dbpedia.org/property/father> ?v1 . ?v1 <http://dbpedia.org/ontology/deathPlace> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
SELECT ?deathPlace WHERE {
  ?father <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Y%C5%ABki_Hideyasu> .
  ?father a <http://dbpedia.org/ontology/Politician> .
  ?father <http://dbpedia.org/property/deathPlace> ?deathPlace .
}
```",2,3,3,2,1,3,3,71,0,0,2,0,0.0,0
701,9,train,Give me the parent of Meritamen and parent of Henuttawy (19th dynasty).,SELECT ?result WHERE { <http://dbpedia.org/resource/Meritamen> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Henuttawy_(19th_dynasty)> . },"```sparql
SELECT ?meritamenParent ?henuttawyParent WHERE {
  OPTIONAL { <http://dbpedia.org/resource/Meritamen> dbo:parent ?meritamenParent . }
  OPTIONAL { <http://dbpedia.org/resource/Henuttawy_(19th_dynasty)> dbo:parent ?henuttawyParent . }
}
```",2,2,3,1,2,3,3,71,1,1,0,0.5,1.0,0.6666666666666666
10,8,train,"Give me the associated musical artist of the person born, that is an artist, as Matt Colton.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ""Matt Colton""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
SELECT ?associatedArtist WHERE {
  ?person <http://dbpedia.org/ontology/birthName> ""Matt Colton"" .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist> .
  ?person <http://dbpedia.org/ontology/associatedMusicalArtist> ?associatedArtist .
}
```",2,3,3,2,1,2,3,28,0,0,4,0,0.0,0
528,8,train,Give me the person born as Narciso Campero Leyes.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Narciso Campero Leyes""@en . }","```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/property/birthName> ""Narciso Campero Leyes"" .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
54,15,train,Give me the father of the child of Thinkhaya of Pagan.,SELECT ?result WHERE { <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/property/father> ?result . },"```sparql
SELECT ?father WHERE {
  ?child dbo:child <http://dbpedia.org/resource/Thinkhaya_of_Pagan> .
  ?child dbo:father ?father .
}
```",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
360,0,train,Give me the writer of The Roaring Silence.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Roaring_Silence> <http://dbpedia.org/property/writer> ?result . },"```sparql
SELECT ?writer WHERE {
  ?book <http://dbpedia.org/ontology/book> ?work .
  ?work <http://purl.org/dc/terms/title> ""The Roaring Silence"" .
  ?book <http://dbpedia.org/property/writer> ?writer .
}
```",1,1,2,1,1,2,3,28,0,0,8,0,0.0,0
404,13,train,"Give me the parent of the child, that is a royalty, of Ernest Augustus, Duke of Brunswick.","SELECT ?result WHERE { <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> ?v1 . }","```sparql
SELECT ?parent WHERE {
  ?child <http://dbpedia.org/ontology/birthPlace> ?place .
  ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
  <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/ontology/spouse> ?child .
  ?child <http://www.w3.org/2000/01/rdf-schema#parent> ?parent .
}
```",2,3,3,2,1,3,3,71,0,0,2,0,0.0,0
547,6,train,Give me the actor of Enemy at the Door.,SELECT ?result WHERE { <http://dbpedia.org/resource/Enemy_at_the_Door> <http://dbpedia.org/property/starring> ?result . },"```sparql
SELECT ?actor WHERE {
  <http://dbpedia.org/resource/Enemy_at_the_Door> dbpedia-owl:actor ?actor .
}
```",1,1,2,1,1,3,3,71,0,0,8,0,0.0,0
318,4,train,Give me the person born in 1970 and professional in Composer.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/Composer> . ?result <http://dbpedia.org/ontology/birthYear> ""1970""^^<http://www.w3.org/2001/XMLSchema#gYear> . }","```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/birthYear> ""1970"" .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Musician> .
  OPTIONAL { ?person <http://purl.org/dc/terms/subject> <http://dbpedia.org/resource/Category:Composers> . }
}
```",2,2,3,1,2,2,2,9,0,0,7,0,0.0,0
626,6,train,Give me the commander in Battle of Leipzig and awardee of Order of St. Andrew.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Order_of_St._Andrew> . <http://dbpedia.org/resource/Battle_of_Leipzig> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT ?person WHERE {
  ?battle <http://dbpedia.org/ontology/commander> ?person .
  ?order <http://dbpedia.org/property/receiver> ?person .
  
  FILTER(?battle = <http://dbpedia.org/resource/Battle_of_Leipzig>)
  FILTER(?order = <http://dbpedia.org/resource/Order_of_St._Andrew>)
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
767,13,train,Give me the alma mater of the administration of George K. Nash.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/almaMater> ?result . ?v1 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/George_K._Nash> . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Administration_of_George_W._Bush> <http://dbpedia.org/property/advisor> <http://dbpedia.org/resource/George_K._Nash> .
  <http://dbpedia.org/resource/Administration_of_George_W._Bush> <http://dbpedia.org/ontology/almaMater> ?result .
}
```",2,2,3,2,1,3,3,71,0,0,6,0,0.0,0
9,13,train,Give me the alma mater of the awardee of Royal Medal.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Medal> . ?v1 <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
SELECT ?recipient ?almaMater WHERE {
  ?recipient <http://dbpedia.org/ontology/award> <http://dbpedia.org/resource/Royal_Medal>.
  ?recipient <http://dbpedia.org/ontology/almaMater> ?almaMater.
}
```",2,2,3,2,1,3,3,71,31,286,0,0.09779179810725552,1.0,0.1781609195402299
182,1,train,Give me the war of Jagath Dias.,SELECT ?result WHERE { <http://dbpedia.org/resource/Jagath_Dias> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Jagath_Dias> <http://dbpedia.org/ontology/knownFor> ?result .
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
}
```",1,1,2,1,1,2,3,28,0,0,5,0,0.0,0
801,13,train,"Give me the producer of the work, that is a musical work and a song and a work, of 50 Cent.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v1 <http://dbpedia.org/ontology/producer> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/50_Cent> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. },"```sparql
SELECT ?producer WHERE {
    ?work dbo:creator <http://dbpedia.org/resource/50_Cent> ;
          rdf:type dbo:MusicalWork, dbo:Song .
    ?work dbo:producer ?producer .
}
```",2,5,3,2,1,3,3,71,0,0,38,0,0.0,0
534,4,train,"Give me the location, that is a venue and an architectural structure, of 2012 Pro12 Grand Final.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ArchitecturalStructure>. <http://dbpedia.org/resource/2012_Pro12_Grand_Final> <http://dbpedia.org/ontology/location> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Venue>. },"```sparql
SELECT ?result WHERE {
    ?event <http://dbpedia.org/ontology/location> ?result .
    ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Venue> .
    ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ArchitecturalStructure> .
    FILTER (str(?event) = ""2012 Pro12 Grand Final"")
}
```",1,3,2,1,1,3,2,20,0,0,1,0,0.0,0
645,3,train,"Give me the residence, that is a country, of James Wilkes Maurice.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/James_Wilkes_Maurice> <http://dbpedia.org/property/residence> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/James_Wilkes_Maurice> <http://dbpedia.org/property/residence> ?result .
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country> .
}
```",1,2,2,1,1,3,2,20,1,0,0,1.0,1.0,1.0
747,3,train,"Who is the person decedent, that is an athlete and a soccer player, at Zolotonosha?",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Zolotonosha> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. },"```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/decedent> <http://dbpedia.org/resource/Zolotonosha>.
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>.
  ?person <http://dbpedia.org/ontology/sport> <http://dbpedia.org/resource/Soccer>.
}
```",1,3,2,1,1,3,3,71,0,0,1,0,0.0,0
404,9,train,Give me the spouse of Princess Victoria Louise of Prussia and parent of Prince Ernest Augustus of Hanover (born 1914).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Prince_Ernest_Augustus_of_Hanover_(born_1914)> . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
SELECT ?spouse WHERE {
    ?princess <http://dbpedia.org/ontology/spouse> ?spouse .
    ?spouse <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Prince_Ernest_Augustus_of_Hanover_(1914-1987)> .
    FILTER(?princess = <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia>)
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
617,12,train,Give me the spouse of Laodice IV and parent of Nysa (wife of Pharnaces I of Pontus).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Nysa_(wife_of_Pharnaces_I_of_Pontus)> . <http://dbpedia.org/resource/Laodice_IV> <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
SELECT ?spouse WHERE {
  ?laodiceIV <http://dbpedia.org/ontology/spouse> ?spouse .
  FILTER(?laodiceIV = <http://dbpedia.org/resource/Laodice_IV>)
  
  OPTIONAL { 
    ?nysa <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person> .
    ?nysa <http://dbpedia.org/property/father> ?spouse .
    FILTER(?nysa = <http://dbpedia.org/resource/Nysa_(wife_of_Pharnaces_I_of_Pontus)>)
  }
}
```",2,2,3,1,2,3,3,71,1,2,0,0.3333333333333333,1.0,0.5
712,10,train,Who is the awardee of the show of Soviet Union?,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ?v0 . ?v0 <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/Soviet_Union> . },"```sparql
SELECT ?result WHERE {
  ?show <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Soviet_Union>.
  ?show <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Show>.
  ?result <http://dbpedia.org/ontology/awardee> ?show.
}
```",2,2,3,2,1,3,2,20,0,0,1209,0,0.0,0
528,12,train,Give me the war of Orozimbo Barbosa and force of Narciso Campero.,SELECT ?result WHERE { <http://dbpedia.org/resource/Orozimbo_Barbosa> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Narciso_Campero> . },"```sparql
SELECT DISTINCT ?war WHERE {
  # Find the war associated with Orozimbo Barbosa
  OPTIONAL { 
    <http://dbpedia.org/resource/Orozimbo_Barbosa> <http://dbpedia.org/ontology/commander> ?v1 .
    ?v1 <http://dbpedia.org/ontology/battle> ?war .
  }
  
  # Find the force commanded by Narciso Campero and its associated war
  OPTIONAL {
    <http://dbpedia.org/resource/Narciso_Campero> <http://dbpedia.org/property/commandedForce> ?force .
    ?force <http://dbpedia.org/ontology/battle> ?war .
  }
}
```",2,2,3,1,2,3,3,71,0,0,2,0,0.0,0
30,4,train,"Give me the native of Paris and professional in Financier, businessman, vineyard owner, art collector, racehorse owner/breeder.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Financier, businessman, vineyard owner, art collector, racehorse owner/breeder""@en . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Paris> . }","```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Paris> .
  FILTER (
    EXISTS { ?person <http://purl.org/dc/terms/subject> <http://dbpedia.org/resource/Category:Financiers> } ||
    EXISTS { ?person <http://purl.org/dc/terms/subject> <http://dbpedia.org/resource/Category:Businesspeople_from_France> } ||
    EXISTS { ?person <http://purl.org/dc/terms/subject> <http://dbpedia.org/resource/Category:Vineyard_owners> } ||
    EXISTS { ?person <http://purl.org/dc/terms/subject> <http://dbpedia.org/resource/Category:Art_collectors> } ||
    EXISTS { ?person <http://purl.org/dc/terms/subject> <http://dbpedia.org/resource/Category:Horse_breeders_and_owners> }
  )
}
```",2,2,3,1,2,2,2,9,0,0,1,0,0.0,0
303,0,train,Give me the party of Guillermo Endara.,SELECT ?result WHERE { <http://dbpedia.org/resource/Guillermo_Endara> <http://dbpedia.org/ontology/party> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Guillermo_Endara> <http://dbpedia.org/ontology/party> ?result .
}
```",1,1,2,1,1,2,3,28,2,0,0,1.0,1.0,1.0
754,5,train,Give me the child of Ram Khamhaeng.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ram_Khamhaeng> <http://dbpedia.org/ontology/child> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Ram_Khamhaeng> <http://dbpedia.org/ontology/child> ?result .
}
```",1,1,2,1,1,3,2,20,3,0,0,1.0,1.0,1.0
820,1,train,Give me the child of Jack Schwartzman.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Jack_Schwartzman> . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Jack_Schwartzman> <http://dbpedia.org/ontology/child> ?result .
}
```",1,1,2,1,1,3,2,20,2,1,0,0.6666666666666666,1.0,0.8
10,1,train,Give me the band member of Luke Vibert.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Luke_Vibert> . },"```sparql
SELECT ?result WHERE {
  ?entity <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Luke_Vibert> .
  ?entity <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
  BIND(?entity AS ?result)
}
```",1,1,2,1,1,2,3,28,0,0,3,0,0.0,0
959,11,train,"Give me the member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of Eiji Ōtsuka.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/team> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. <http://dbpedia.org/resource/Eiji_Ōtsuka> <http://dbpedia.org/ontology/almaMater> ?v1 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. },SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalOrganization>. <http://dbpedia.org/resource/Eiji_Ōtsuka> <http://dbpedia.org/property/almaMater> ?result . },2,6,3,2,1,3,3,71,0,0,267,0,0.0,0
365,4,train,Give me the reference to The Blasters and band of Phil Alvin.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Phil_Alvin> . ?result <http://xmlns.com/foaf/0.1/name> ""The Blasters""@en . }","```sparql
SELECT ?reference WHERE {
  <http://dbpedia.org/resource/Phil_Alvin> <http://dbpedia.org/ontology/memberOf> <http://dbpedia.org/resource/The_Blasters> .
  OPTIONAL { <http://dbpedia.org/resource/The_Blasters> <http://www.w3.org/2000/01/rdf-schema#seeAlso> ?reference . }
}
```",2,2,3,1,2,2,2,9,0,0,1,0,0.0,0
963,0,train,Give me the entity in Serbia.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Serbia> . },"```sparql
SELECT ?result WHERE {
  ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Serbia> .
}
```",1,1,2,1,1,3,2,20,5428,0,0,1.0,1.0,1.0
994,4,train,Give me the associated musical artist of Watchtower (band).,SELECT ?result WHERE { <http://dbpedia.org/resource/Watchtower_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Watchtower_(band)> <http://dbpedia.org/ontology/associatedBand> ?result .
}
```",1,1,2,1,1,3,3,71,6,0,0,1.0,1.0,1.0
392,11,train,"Give me the province of the residence, that is a settlement and Italian, of Sebastiano Bianchetti.",SELECT ?result WHERE { <http://dbpedia.org/resource/Sebastiano_Bianchetti> <http://dbpedia.org/property/residence> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://dbpedia.org/ontology/province> ?result . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. },"```sparql
SELECT ?province WHERE {
  ?residence <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>.
  ?residence <http://dbpedia.org/property/country> <http://dbpedia.org/resource/Italy>.
  <http://dbpedia.org/resource/Sebastiano_Bianchetti> <http://dbpedia.org/property/residence> ?residence.
  ?residence <http://dbpedia.org/ontology/province> ?province.
}
```",2,4,3,2,1,2,3,28,0,0,1,0,0.0,0
427,2,train,Give me the party of Romano Prodi.,SELECT ?result WHERE { <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/ontology/party> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/ontology/party> ?result .
}
```",1,1,2,1,1,3,3,71,7,0,0,1.0,1.0,1.0
92,2,train,Give me the band of Joseph Michael.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Joseph_Michael> . },"```sparql
SELECT ?band WHERE {
  <http://dbpedia.org/resource/Joseph_Michael> <http://dbpedia.org/ontology/memberOf> ?band .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
303,4,train,"Give me the country, that is a country, of El Valle de Antón.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/El_Valle_de_Antón> <http://dbpedia.org/ontology/country> ?result . },"```sparql
SELECT ?result WHERE {
  ?entity <http://dbpedia.org/ontology/country> ?result .
  ?entity <http://www.w3.org/2004/02/skos/core#broader> <http://dbpedia.org/resource/El_Valle_de_Antón> .
}
```",1,2,2,1,1,2,3,28,0,0,1,0,0.0,0
64,4,train,Give me the alma mater of Jovan Hristić and entity in Serbia.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Serbia> . <http://dbpedia.org/resource/Jovan_Hristić> <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
SELECT ?almaMater ?entityInSerbia WHERE {
  # Find the alma mater of Jovan Hristić
  <http://dbpedia.org/resource/Jovan_Hristić> <http://dbpedia.org/ontology/almaMater> ?almaMater .
  
  # Find any entity in Serbia
  ?entityInSerbia <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?type .
  ?entityInSerbia <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Serbia> .
}
```",2,2,3,1,2,2,2,9,1,5427,0,0.00018422991893883567,1.0,0.00036839196905507466
534,8,train,Give me the headquarter of the owner of RDS Arena.,SELECT ?result WHERE { <http://dbpedia.org/resource/RDS_Arena> <http://dbpedia.org/ontology/owner> ?v0 . ?v0 <http://dbpedia.org/ontology/headquarter> ?result . },"```sparql
SELECT ?headquarters WHERE {
  ?arena <http://dbpedia.org/ontology/owner> ?owner .
  ?owner <http://dbpedia.org/property/headquarter> ?headquarters .
  FILTER(STR(?arena) = ""RDS Arena"")
}
```",2,2,3,2,1,3,2,20,0,0,3,0,0.0,0
48,9,train,"Give me the writer of the work, that is a work, of Shellback (record producer).",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Shellback_(record_producer)> . ?v0 <http://dbpedia.org/property/writer> ?result . },"```sparql
SELECT ?writer WHERE {
  ?work <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Shellback_(record_producer)> .
  ?work <http://purl.org/dc/terms/creator> ?writer .
}
```",2,3,3,2,1,3,2,20,0,0,1065,0,0.0,0
820,9,train,Give me the award of the author of Understanding Comics.,SELECT ?result WHERE { <http://dbpedia.org/resource/Understanding_Comics> <http://dbpedia.org/ontology/author> ?v0 . ?v0 <http://dbpedia.org/property/awards> ?result . },"```sparql
SELECT ?award WHERE {
  ?comic <http://dbpedia.org/ontology/author> ?author .
  ?author <http://dbpedia.org/property/awards> ?award .
  FILTER (str(?comic) = ""Understanding Comics"")
}
```",2,2,3,2,1,3,2,20,0,0,4,0,0.0,0
281,3,train,Give me the award of Jonathon Band.,SELECT ?result WHERE { <http://dbpedia.org/resource/Jonathon_Band> <http://dbpedia.org/property/awards> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Jonathon_Band> <http://dbpedia.org/ontology/award> ?result .
}
```",1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
77,6,train,Give me the war of Alexander Chechenskiy and force of Alexander I of Russia.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Alexander_I_of_Russia> . <http://dbpedia.org/resource/Alexander_Chechenskiy> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
SELECT ?war WHERE {
  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>.
  OPTIONAL { <http://dbpedia.org/resource/Alexander_Chechenskiy> <http://dbpedia.org/ontology/battle> ?war. }
  OPTIONAL { <http://dbpedia.org/resource/Alexander_I_of_Russia> <http://dbpedia.org/ontology/battle> ?war. }
}
```",2,2,3,1,2,3,2,20,6,32212,0,0.00018623129927369795,1.0,0.0003723932472691162
285,7,train,Give me the parent of the child of Tina Onassis Niarchos.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Tina_Onassis_Niarchos> <http://dbpedia.org/ontology/child> ?v1 . },"```sparql
SELECT ?child ?parent WHERE {
  <http://dbpedia.org/resource/Tina_Onassis_Niarchos> <http://dbpedia.org/ontology/child> ?child .
  ?child <http://dbpedia.org/ontology/parent> ?parent .
}
```",2,2,3,2,1,3,2,20,2,2,0,0.5,1.0,0.6666666666666666
64,1,train,Give me the entity in Serbia.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Serbia> . },"```sparql
SELECT ?entity WHERE {
  ?entity <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Serbia>.
}
```",1,1,2,1,1,2,2,9,5428,0,0,1.0,1.0,1.0
404,8,train,"Who is the father of Ernest Augustus, Duke of Brunswick?","SELECT ?result WHERE { <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/property/father> ?result . }","```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/ontology/father> ?result .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
767,16,train,Give me the administration of the reference to George Kilbon Nash.,"SELECT ?result WHERE { ?v1 <http://xmlns.com/foaf/0.1/name> ""George Kilbon Nash""@en . ?result <http://dbpedia.org/property/governor> ?v1 . }","```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/George_Kilbon_Nash> <http://dbpedia.org/ontology/administration> ?result .
}
```",2,2,3,2,1,3,3,71,0,0,7,0,0.0,0
994,2,train,Give me the band member of Don Dokken.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Don_Dokken> . },"```sparql
SELECT ?result WHERE {
  ?entity <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Don_Dokken> .
  ?entity <http://dbpedia.org/ontology/bandMember> ?result .
}
```",1,1,2,1,1,3,3,71,0,5,2,0.0,0.0,0
182,8,train,Give me the war of the author of 2019 Sri Lanka Easter bombings.,SELECT ?result WHERE { <http://dbpedia.org/resource/2019_Sri_Lanka_Easter_bombings> <http://dbpedia.org/property/author> ?v1 . ?v1 <http://dbpedia.org/ontology/battle> ?result . },"SELECT ?result WHERE {
  ?article <http://dbpedia.org/ontology/author> ?author .
  ?article <http://www.w3.org/2000/01/rdf-schema#label> ""2019 Sri Lanka Easter bombings""@en .
  ?author <http://dbpedia.org/ontology/battle> ?result .
}",2,2,3,2,1,2,3,28,0,0,2,0,0.0,0
294,5,train,"Give me the birth place, that is a settlement, of Marion James.",SELECT ?result WHERE { <http://dbpedia.org/resource/Marion_James> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Marion_James> <http://dbpedia.org/ontology/birthPlace> ?result .
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement> .
}
```",1,2,2,1,1,2,3,28,1,0,0,1.0,1.0,1.0
64,2,train,"Give me the person decedent, that is a writer, at Sremska Kamenica.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>. ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Sremska_Kamenica> . },"SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Sremska_Kamenica>.
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>.
}",1,2,2,1,1,2,2,9,0,1,2,0.0,0.0,0
778,4,train,Give me the author of Pushd and popd.,SELECT ?result WHERE { <http://dbpedia.org/resource/Pushd_and_popd> <http://dbpedia.org/property/author> ?result . },"```sparql
SELECT ?author WHERE {
  ?entity <http://dbpedia.org/ontology/software> ?software .
  ?software <http://dbpedia.org/property/name> ""Bash"" .
  ?entity <http://dbpedia.org/ontology/creator> ?author .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
16,8,train,Give me the birth name of Gigi Rice.,SELECT ?result WHERE { <http://dbpedia.org/resource/Gigi_Rice> <http://dbpedia.org/property/birthName> ?result . },"```sparql
SELECT ?birthName WHERE {
  <http://dbpedia.org/resource/Gigi_Rice> <http://dbpedia.org/ontology/birthName> ?birthName .
}
```",1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
996,0,train,Give me the force of Dagobert Sigmund von Wurmser.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Dagobert_Sigmund_von_Wurmser> . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Dagobert_Sigmund_von_Wurmser> <http://dbpedia.org/ontology/memberOf> ?result .
}
```",1,1,2,1,1,3,2,20,0,0,11,0,0.0,0
659,8,train,"Give me the force, that is a societal event and an event and a military conflict, of Rutger Jan Schimmelpenninck.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> . },"```sparql
SELECT ?result WHERE {
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>.
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>.
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>.
  <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> <http://dbpedia.org/property/knownFor> ?result.
}
```",1,4,2,1,1,3,3,71,0,0,2,0,0.0,0
488,1,train,Give me the death place of Tokugawa Ieyasu.,SELECT ?result WHERE { <http://dbpedia.org/resource/Tokugawa_Ieyasu> <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
SELECT ?deathPlace WHERE {
  <http://dbpedia.org/resource/Tokugawa_Ieyasu> <http://dbpedia.org/ontology/deathPlace> ?deathPlace .
}
```",1,1,2,1,1,3,3,71,2,0,0,1.0,1.0,1.0
197,6,train,Give me the birthplace of the awardee of Leroy P. Steele Prize.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/awards> ""Leroy P. Steele Prize""@en . }","```sparql
SELECT ?birthPlace WHERE {
  ?person <http://dbpedia.org/ontology/award> <http://dbpedia.org/resource/Leroy_P._Steele_Prize>.
  ?person <http://dbpedia.org/property/birthPlace> ?birthPlace.
}
```",2,2,3,2,1,2,2,9,18,74,3,0.1956521739130435,0.8571428571428571,0.3185840707964602
378,14,train,Give me the claim to fame of the commander in Great Siege of Gibraltar.,SELECT ?result WHERE { <http://dbpedia.org/resource/Great_Siege_of_Gibraltar> <http://dbpedia.org/ontology/commander> ?v1 . ?v1 <http://dbpedia.org/ontology/knownFor> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Great_Siege_of_Gibraltar> <http://dbpedia.org/ontology/commander> ?commander .
  ?commander <http://dbpedia.org/ontology/knownFor> ?result .
}
```",2,2,3,2,1,3,3,71,2,0,0,1.0,1.0,1.0
959,17,train,"Give me the team of the manager, that is a sports manager, of 1998 Kashima Antlers season.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/manager> ?v0 . <http://dbpedia.org/resource/1998_Kashima_Antlers_season> <http://dbpedia.org/ontology/manager> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. },SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/team> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. <http://dbpedia.org/resource/1998_Kashima_Antlers_season> <http://dbpedia.org/property/manager> ?v1 . },2,3,3,2,1,3,3,71,0,0,10,0,0.0,0
48,3,train,Give me the writer of Emotion (Carly Rae Jepsen album).,SELECT ?result WHERE { <http://dbpedia.org/resource/Emotion_(Carly_Rae_Jepsen_album)> <http://dbpedia.org/property/writer> ?result . },"```sparql
SELECT ?writer WHERE {
  <http://dbpedia.org/resource/Emotion_(Carly_Rae_Jepsen_album)> <http://purl.org/dc/terms/creator> ?writer .
}
```",1,1,2,1,1,3,2,20,0,0,48,0,0.0,0
547,3,train,Give me the child of William Haliburton.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ""William Haliburton""@en . }","```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/William_Haliburton> <http://dbpedia.org/ontology/child> ?result .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
959,3,train,Who is the person born in 1958?,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthYear> ""1958""^^<http://www.w3.org/2001/XMLSchema#gYear> . }","```sparql
SELECT ?person WHERE {
  ?person a dbo:Person .
  ?person dbo:birthDate ?birthDate .
  FILTER (
    year(?birthDate) = 1958 &&
    month(?birthDate) >= 1 &&
    month(?birthDate) <= 12 &&
    day(?birthDate) >= 1 &&
    day(?birthDate) <= 31
  )
}
```",1,1,2,1,1,3,3,71,2044,7014,471,0.22565687789799072,0.8127236580516899,0.3532359802989717
778,3,train,Give me the award of Ralph L. Brinster.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ralph_L._Brinster> <http://dbpedia.org/property/awards> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Ralph_L._Brinster> <http://dbpedia.org/ontology/award> ?result .
}
```",1,1,2,1,1,3,2,20,9,0,0,1.0,1.0,1.0
547,4,train,Give me the child of James Burton (property developer).,SELECT ?result WHERE { <http://dbpedia.org/resource/James_Burton_(property_developer)> <http://dbpedia.org/ontology/child> ?result . },"```sparql
SELECT ?child WHERE {
  <http://dbpedia.org/resource/James_Burton_(property_developer)> dbpedia-owl:child ?child .
}
```",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
10,11,train,Give me the professional in the birth name of Sharon Kao.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v0 . <http://dbpedia.org/resource/Sharon_Kao> <http://dbpedia.org/property/birthName> ?v0 . },"```sparql
SELECT ?professional WHERE {
  <http://dbpedia.org/resource/Sharon_Kao> <http://dbpedia.org/ontology/birthName> ?birthName .
  ?birthName <http://dbpedia.org/property/profession> ?professional .
}
```",2,2,3,2,1,2,3,28,0,0,39640,0,0.0,0
767,7,train,"Give me the persona, that is a fictional character, of Matthew Burland.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?result <http://dbpedia.org/property/alterEgo> ""Matthew Burland""@en . }",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. <http://dbpedia.org/resource/Matthew_Burland> <http://dbpedia.org/property/persona> ?result . },1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
285,10,train,Who is the professional in the award of Stan Lee?,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v0 . <http://dbpedia.org/resource/Stan_Lee> <http://dbpedia.org/property/awards> ?v0 . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Stan_Lee> <http://dbpedia.org/ontology/award> ?award .
  ?award <http://dbpedia.org/property/professional> ?result .
}
```",2,2,3,2,1,3,2,20,0,0,39640,0,0.0,0
701,8,train,Give me the father of Merneptah.,SELECT ?result WHERE { <http://dbpedia.org/resource/Merneptah> <http://dbpedia.org/property/father> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Merneptah> <http://dbpedia.org/ontology/father> ?result .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
626,7,train,"Give me the commander in the force, that is a military conflict, of Alexander I of Russia.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Alexander_I_of_Russia> . ?v1 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT ?result WHERE {
  ?conflict <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>.
  ?conflict <http://dbpedia.org/ontology/commander> ?result.
  ?result <http://dbpedia.org/property/relatedTo> <http://dbpedia.org/resource/Alexander_I_of_Russia>.
}
```",2,3,3,2,1,3,2,20,0,0,230,0,0.0,0
915,5,train,"Give me the child, that is a fictional character and a soap character, of Phillip Spaulding.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Phillip_Spaulding> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoapCharacter>. },"```sparql
SELECT ?result WHERE {
  ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Phillip_Spaulding> .
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter> .
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoapCharacter> .
}
```",1,3,2,1,1,3,2,20,0,0,1,0,0.0,0
838,6,train,Give me the band member of Kerber and band of Raša Đelmaš.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Kerber> . <http://dbpedia.org/resource/Raša_Đelmaš> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT ?member WHERE {
  ?member <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/Kerber> .
  ?band <http://dbpedia.org/property/band> <http://dbpedia.org/resource/Raša_Đelmaš> .
  ?member <http://dbpedia.org/ontology/member> ?band .
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
356,8,train,"Give me the team of the native, that is a soccer player and a soccer manager, of Wolverhampton.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Wolverhampton> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?result <http://dbpedia.org/ontology/manager> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. },"```sparql
SELECT ?team WHERE {
  ?person <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Wolverhampton>.
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>.
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>.
  ?person <http://dbpedia.org/property/team> ?team.
}
```",2,4,3,2,1,3,2,20,0,0,46,0,0.0,0
838,7,train,"Give me the band of the band member, that is an artist and a musical artist, of YU Grupa.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/YU_Grupa> . },"```sparql
SELECT ?band WHERE {
  ?person <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/YU_Grupa> .
  ?person a <http://dbpedia.org/ontology/Artist> ;
          a <http://dbpedia.org/ontology/MusicalArtist> .
  ?person <http://dbpedia.org/ontology/memberOfBand> ?band .
}
```",2,4,3,2,1,3,2,20,0,0,21,0,0.0,0
827,9,train,"Who is the child, that is a royalty, of the parent of Charles Alexander, Grand Duke of Saxe-Weimar-Eisenach?","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v0 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Charles_Alexander,_Grand_Duke_of_Saxe-Weimar-Eisenach> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
SELECT ?child WHERE {
  ?parent <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Charles_Alexander,_Grand_Duke_of_Saxe-Weimar-Eisenach> .
  ?parent <http://dbpedia.org/ontology/child> ?child .
  ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
}
```",2,3,3,2,1,3,2,20,0,3,3,0.0,0.0,0
778,1,train,Give me the author of Chroot.,SELECT ?result WHERE { <http://dbpedia.org/resource/Chroot> <http://dbpedia.org/ontology/author> ?result . },"```sparql
SELECT ?author WHERE {
  <http://dbpedia.org/resource/Chroot> <http://dbpedia.org/ontology/author> ?author .
}
```",1,1,2,1,1,3,2,20,2,0,0,1.0,1.0,1.0
285,5,train,Who is the professional in ?,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . }",No valid SPARQL query can be constructed due to the incomplete nature of the question.,1,1,2,1,1,3,2,20,0,0,39640,0,0.0,0
617,10,train,Give me the child of Antiochus III the Great and parent of Nysa (wife of Pharnaces I of Pontus).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Nysa_(wife_of_Pharnaces_I_of_Pontus)> . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Antiochus_III_the_Great> . },"```sparql
SELECT ?child WHERE {
  ?child <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Antiochus_III_the_Great> .
  ?child <http://dbpedia.org/ontology/spouse> ?spouse .
  ?spouse <http://dbpedia.org/property/husband> <http://dbpedia.org/resource/Pharnaces_I_of_Pontus> .
  ?child <http://dbpedia.org/ontology/mother> <http://dbpedia.org/resource/Nysa_(wife_of_Pharnaces_I_of_Pontus)> .
}
```",2,2,3,1,2,3,3,71,0,0,2,0,0.0,0
16,11,train,Give me the spouse of the person born as Ted Martin McGinley.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ""Ted Martin McGinley""@en . ?v0 <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
SELECT ?spouse WHERE {
  <http://dbpedia.org/resource/Ted_McGinley> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person> .
  <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/property/birthName> ""Ted Martin McGinley"" .
  <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/ontology/spouse> ?spouse .
}
```",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
747,9,train,Give me the person born on 1985-04-29 and band of Amba Shepherd.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Amba_Shepherd> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/birthDate> ""1985-04-29""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
SELECT ?person ?band WHERE {
  ?person <http://dbpedia.org/ontology/birthDate> ""1985-04-29""^^<http://www.w3.org/2001/XMLSchema#date> .
  OPTIONAL { ?person <http://dbpedia.org/ontology/memberOfBand> ?band . }
  FILTER (str(?person) = str(<http://dbpedia.org/resource/Amba_Shepherd>) )
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
465,2,train,Give me the native of Prague.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Prague> . },"SELECT ?person WHERE {
  ?person <http://dbpedia.org/property/birthPlace> <http://dbpedia.org/resource/Prague>.
}",1,1,2,1,1,2,2,9,1136,82,518,0.9326765188834154,0.686819830713422,0.7910863509749303
365,0,train,Give me the band of Phil Alvin.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Phil_Alvin> . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Phil_Alvin> <http://dbpedia.org/ontology/member> ?result .
}
```",1,1,2,1,1,2,2,9,0,0,1,0,0.0,0
328,7,train,"Who is the leader, that is an office holder and a politician, of Gustav Jonson?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Gustav_Jonson> <http://dbpedia.org/property/leader> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Gustav_Jonson> <http://dbpedia.org/ontology/leader> ?result .
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder> .
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .
}
```",1,3,2,1,1,3,3,71,0,0,1,0,0.0,0
404,12,train,"Give me the child of Ernest Augustus, Crown Prince of Hanover and parent of Prince Ernest Augustus of Hanover (born 1914).","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Prince_Ernest_Augustus_of_Hanover_(born_1914)> . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ernest_Augustus,_Crown_Prince_of_Hanover> . }","```sparql
SELECT ?child WHERE {
    ?parent <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Ernest_Augustus,_Crown_Prince_of_Hanover> .
    ?parent <http://dbpedia.org/ontology/child> ?child .
    ?child <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Prince_Ernest_Augustus_of_Hanover_(born_1914)> .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
177,4,train,"Give me the headquarter of Ministry of Culture, Sports and Tourism and entity in South Korea.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/South_Korea> . <http://dbpedia.org/resource/Ministry_of_Culture,_Sports_and_Tourism> <http://dbpedia.org/ontology/location> ?result . }","```sparql
SELECT ?entity WHERE {
  ?entity <http://dbpedia.org/ontology/headquarters> <http://dbpedia.org/resource/Ministry_of_Culture,_Sports_and_Tourism_(South_Korea)> .
  ?entity <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>.
  ?entity <http://dbpedia.org/property/location> <http://dbpedia.org/resource/South_Korea>.
}
```",2,2,3,1,2,2,2,9,0,0,1,0,0.0,0
161,5,train,Who is the predecessor of Indalecio Prieto?,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Indalecio_Prieto> . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Indalecio_Prieto> <http://dbpedia.org/ontology/succeededBy> ?result .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
915,7,train,"Give me the resident of the birthplace, that is a settlement, of Stephen Verona.",SELECT ?result WHERE { <http://dbpedia.org/resource/Stephen_Verona> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/residence> ?v1 . },"```sparql
SELECT ?resident WHERE {
  ?birthPlace <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement> .
  <http://dbpedia.org/resource/Stephen_Verona> <http://dbpedia.org/property/birthPlace> ?birthPlace .
  ?resident <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person> .
  ?resident <http://dbpedia.org/ontology/residence> ?birthPlace .
}
```",2,3,3,2,1,3,2,20,0,0,15,0,0.0,0
339,9,train,Who is the child of the predecessor of Frederick VIII of Denmark?,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Frederick_VIII_of_Denmark> . ?result <http://dbpedia.org/property/father> ?v0 . },"```sparql
SELECT ?child WHERE {
  ?predecessor <http://dbpedia.org/ontology/predecessor> <http://dbpedia.org/resource/Frederick_VIII_of_Denmark> .
  ?predecessor <http://dbpedia.org/ontology/child> ?child .
}
```",2,2,3,2,1,3,2,20,0,2,6,0.0,0.0,0
345,5,train,"Who is the person born, that is a soccer player and a soccer manager, on 1978-09-15?","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?result <http://dbpedia.org/ontology/birthDate> ""1978-09-15""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
SELECT ?person WHERE {
    ?person <http://dbpedia.org/ontology/birthDate> ""1978-09-15""^^<http://www.w3.org/2001/XMLSchema#date> .
    ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer> .
    ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager> .
}
```",1,3,2,1,1,3,2,20,3,0,0,1.0,1.0,1.0
701,13,train,Give me the parent of the child of Ramesses II.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ramesses_II> . ?result <http://dbpedia.org/ontology/child> ?v1 . },"```sparql
SELECT ?child ?parent WHERE {
  <http://dbpedia.org/resource/Ramesses_II> <http://dbpedia.org/ontology/spouse> ?mother .
  ?mother <http://dbpedia.org/ontology/child> ?child .
  OPTIONAL { ?child <http://dbpedia.org/ontology/father> ?parent . }
  UNION
  <http://dbpedia.org/resource/Ramesses_II> <http://dbpedia.org/ontology/child> ?child .
  OPTIONAL { ?child <http://dbpedia.org/ontology/mother> ?mother . }
}
```",2,2,3,2,1,3,3,71,0,0,2,0,0.0,0
485,1,train,Give me the birth place of Thomas Warner (poet).,SELECT ?result WHERE { <http://dbpedia.org/resource/Thomas_Warner_(poet)> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?birthPlace WHERE {
  <http://dbpedia.org/resource/Thomas_Warner_(poet)> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Poet> .
  <http://dbpedia.org/resource/Thomas_Warner_(poet)> <http://dbpedia.org/property/birthPlace> ?birthPlace .
}
```",1,1,2,1,1,2,3,28,2,0,0,1.0,1.0,1.0
184,17,train,Give me the child of the parent of Archduchess Margaret of Austria (born 1925).,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v1 . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Margaret_of_Austria_(born_1925)> . },"```sparql
SELECT ?child WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/Archduchess_Margaret_of_Austria_(born_1925)> <http://dbpedia.org/ontology/father> ?father .
    ?father <http://dbpedia.org/ontology/child> ?child .
  }
  UNION
  OPTIONAL { 
    <http://dbpedia.org/resource/Archduchess_Margaret_of_Austria_(born_1925)> <http://dbpedia.org/ontology/mother> ?mother .
    ?mother <http://dbpedia.org/ontology/child> ?child .
  }
}
```",2,2,3,2,1,3,3,71,0,0,3,0,0.0,0
115,2,train,Who is the alumnus of National University of San Marcos?,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/National_University_of_San_Marcos> . },"```sparql
SELECT ?result WHERE {
  ?result <http://dbpedia.org/ontology/alumniOf> <http://dbpedia.org/resource/National_University_of_San_Marcos>.
}
```",1,1,2,1,1,2,2,9,0,0,74,0,0.0,0
161,17,train,"Give me the force, that is an event, of the figure known as El Director.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> ?v1 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://xmlns.com/foaf/0.1/nick> ""El Director""@en . }","```sparql
SELECT ?result WHERE {
  ?result a <http://dbpedia.org/ontology/Force> .
  ?result a <http://dbpedia.org/ontology/Event> .
  <http://dbpedia.org/resource/El_Director> <http://dbpedia.org/property/knownFor> ?result .
}
```",2,3,3,2,1,3,3,71,0,0,10,0,0.0,0
303,2,train,Give me the party of Arnulfo Arias.,SELECT ?result WHERE { <http://dbpedia.org/resource/Arnulfo_Arias> <http://dbpedia.org/ontology/party> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Arnulfo_Arias> <http://dbpedia.org/ontology/party> ?result .
}
```",1,1,2,1,1,2,3,28,1,0,0,1.0,1.0,1.0
314,10,train,Give me the awardee of the award of Sergei Makovetsky.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ?v1 . <http://dbpedia.org/resource/Sergei_Makovetsky> <http://dbpedia.org/property/awards> ?v1 . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Sergei_Makovetsky> <http://dbpedia.org/ontology/award> ?result .
}
```",2,2,3,2,1,2,3,28,0,0,951,0,0.0,0
9,6,train,Who is the awardee of Royal Medal?,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Medal> . },"```sparql
SELECT ?awardee WHERE {
  ?awardee <http://dbpedia.org/ontology/award> <http://dbpedia.org/resource/Royal_Medal>.
}
```",1,1,2,1,1,3,3,71,41,233,4,0.14963503649635038,0.9111111111111111,0.25705329153605017
161,13,train,"Give me the military force of the force, that is a societal event and a military conflict, of Francisco Largo Caballero.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . },"```sparql
SELECT ?result WHERE {
  ?event <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>.
  ?event <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>.
  <http://dbpedia.org/resource/Francisco_Largo_Caballero> <http://dbpedia.org/property/associatedWith> ?event.
  ?event <http://dbpedia.org/ontology/militaryForce> ?result.
}
```",2,4,3,2,1,3,3,71,0,0,514,0,0.0,0
281,12,train,Give me the war of New Zealand Army and entity in Colony of New Zealand.,SELECT ?result WHERE { <http://dbpedia.org/resource/New_Zealand_Army> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Colony_of_New_Zealand> . },"```sparql
SELECT ?war WHERE {
  ?war <http://dbpedia.org/ontology/participant> <http://dbpedia.org/resource/New_Zealand_Army> .
  ?entity <http://dbpedia.org/property/country> <http://dbpedia.org/resource/Colony_of_New_Zealand> .
  ?war <http://dbpedia.org/ontology/participant> ?entity .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
701,11,train,Give me the parent of the child of Nefertari.,SELECT ?result WHERE { <http://dbpedia.org/resource/Nefertari> <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://dbpedia.org/ontology/parent> ?result . },"```sparql
SELECT ?parent WHERE {
  ?child dbpedia-owl:child <http://dbpedia.org/resource/Nefertari> .
  ?child dbpedia-owl:parent ?parent .
}
```",2,2,3,2,1,3,3,71,0,0,2,0,0.0,0
161,4,train,"Give me the force, that is a societal event and an event and a military conflict, of Francisco Franco.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Franco> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
SELECT ?result WHERE {
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>.
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocialEvent>.
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>.
  <http://dbpedia.org/resource/Francisco_Franco> <http://dbpedia.org/property/associatedWith> ?result.
}
```",1,4,2,1,1,3,3,71,0,0,12,0,0.0,0
488,5,train,"Who is the father, that is an office holder, of Matsudaira Tadamasa?",SELECT ?result WHERE { <http://dbpedia.org/resource/Matsudaira_Tadamasa> <http://dbpedia.org/property/father> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
SELECT ?result WHERE {
  ?person <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Matsudaira_Tadamasa> .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder> .
  BIND(?person AS ?result)
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
16,2,train,Give me the person born as Georgeanne Marie Rice.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Georgeanne Marie Rice""@en . }","```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/birthName> ""Georgeanne Marie Rice"" .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
328,10,train,Give me the leader of People's Commissariat of Defense of the Soviet Union and awardee of Order of Suvorov.,SELECT ?result WHERE { <http://dbpedia.org/resource/People's_Commissariat_of_Defense_of_the_Soviet_Union> <http://dbpedia.org/ontology/leader> ?result . ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Order_of_Suvorov> . },"```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/officeHolder> <http://dbpedia.org/resource/People%27s_Commissariat_of_Defense_of_the_Soviet_Union>.
  ?person <http://dbpedia.org/property/awardee> <http://dbpedia.org/resource/Order_of_Suvorov>.
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
492,14,train,"Give me the person decedent at the capital, that is a settlement, of Algeria.",SELECT ?result WHERE { <http://dbpedia.org/resource/Algeria> <http://dbpedia.org/ontology/capital> ?v1 . ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
SELECT ?person WHERE {
  ?capital <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>.
  ?capital <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Algeria>.
  ?person <http://dbpedia.org/property/deathPlace> ?capital.
}
```",2,3,3,2,1,3,3,71,57,71,65,0.4453125,0.4672131147540984,0.45600000000000007
404,3,train,Give me the birth name of Princess Victoria Louise of Prussia.,SELECT ?result WHERE { <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/property/birthName> ?result . },"```sparql
SELECT ?birthName WHERE {
  <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/birthName> ?birthName .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
701,12,train,Give me the parent of Henuttawy (19th dynasty) and spouse of Ramesses II.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Henuttawy_(19th_dynasty)> . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Ramesses_II> . },"```sparql
SELECT ?entity WHERE {
  ?henuttawy <http://dbpedia.org/ontology/birthParent> ?entity .
  FILTER(CONTAINS(LCASE(STR(?henuttawy)), ""henuttawy 19th dynasty""))
  
  ?ramessesII <http://dbpedia.org/property/spouse> ?entity .
  FILTER(CONTAINS(LCASE(STR(?ramessesII)), ""ramesses ii""))
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
421,11,train,Give me the person born as the birth name of Dino Merlin.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Dino_Merlin> <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Dino_Merlin> <http://dbpedia.org/ontology/birthName> ?result .
}
```",2,2,3,2,1,2,3,28,0,0,1,0,0.0,0
492,12,train,Give me the person decedent at Algiers and commander in Franco-Hova Wars.,SELECT ?result WHERE { <http://dbpedia.org/resource/Franco-Hova_Wars> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Algiers> . },"```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Algiers> .
  ?person <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Franco-Hova_Wars> .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
783,5,train,"Give me the person born, that is an artist and a musical artist, as Priscilla Opoku-Kwarteng.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/birthName> ""Priscilla Opoku-Kwarteng""@en . }","SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/birthName> ""Priscilla Opoku-Kwarteng"" .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist> .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
}",1,3,2,1,1,3,2,20,0,0,1,0,0.0,0
963,5,train,"Give me the ruling party, that is a political party, in Sremski Karlovci.",SELECT ?result WHERE { <http://dbpedia.org/resource/Sremski_Karlovci> <http://dbpedia.org/property/leaderParty> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. },"```sparql
SELECT ?result WHERE {
  ?entity <http://dbpedia.org/ontology/rulingParty> ?result .
  ?entity <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty> .
  ?entity <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Sremski_Karlovci> .
}
```",1,2,2,1,1,3,2,20,0,0,1,0,0.0,0
285,1,train,Give me the spouse of Aristotle Onassis.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Aristotle_Onassis> . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Aristotle_Onassis> <http://dbpedia.org/ontology/spouse> ?result .
}
```",1,1,2,1,1,3,2,20,2,0,0,1.0,1.0,1.0
487,0,train,Give me the country of 2022 Vermont House of Representatives election.,SELECT ?result WHERE { <http://dbpedia.org/resource/2022_Vermont_House_of_Representatives_election> <http://dbpedia.org/ontology/country> ?result . },"```sparql
SELECT ?result WHERE {
    <http://dbpedia.org/resource/2022_Vermont_House_of_Representatives_election> <http://dbpedia.org/ontology/country> ?result .
}
```",1,1,2,1,1,3,2,20,1,0,0,1.0,1.0,1.0
177,5,train,Give me the entity in the residence of Alexander Gamelin.,SELECT ?result WHERE { <http://dbpedia.org/resource/Alexander_Gamelin> <http://dbpedia.org/property/residence> ?v0 . ?result <http://dbpedia.org/ontology/country> ?v0 . },"SELECT ?result WHERE {
  <http://dbpedia.org/resource/Alexander_Gamelin> <http://dbpedia.org/property/residence> ?residence .
  ?residence <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?entityType .
  FILTER(?entityType != <http://www.w3.org/2002/07/owl#Thing>)
}",2,2,3,2,1,2,2,9,0,0,3065,0,0.0,0
465,0,train,Give me the death place of Jiřina Štěpničková.,SELECT ?result WHERE { <http://dbpedia.org/resource/Jiřina_Štěpničková> <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Jiřina_Štěpničková> <http://www.w3.org/2002/07/owl#deathPlace> ?result .
}
```",1,1,2,1,1,2,2,9,0,0,2,0,0.0,0
404,11,train,"Give me the spouse of the person born, that is a royalty, as Princess Victoria Louise of Prussia.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/property/birthName> ""Princess Victoria Louise of Prussia""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
SELECT ?spouse WHERE {
  ?person <http://dbpedia.org/ontology/birthName> ""Princess Victoria Louise of Prussia"" .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
  ?person <http://dbpedia.org/property/spouse> ?spouse .
}
```",2,3,3,2,1,3,3,71,0,0,1,0,0.0,0
328,12,train,Give me the commander in Eastern Front (World War II) and leader of People's Commissariat of Defense of the Soviet Union.,SELECT ?result WHERE { <http://dbpedia.org/resource/People's_Commissariat_of_Defense_of_the_Soviet_Union> <http://dbpedia.org/ontology/leader> ?result . <http://dbpedia.org/resource/Eastern_Front_(World_War_II)> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Eastern_Front_(World_War_II)> .
  ?person <http://dbpedia.org/property/leaderOf> <http://dbpedia.org/resource/People%27s_Commissariat_of_Defense_of_the_Soviet_Union> .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
492,5,train,Who is the commander in Battle of Verdun?,SELECT ?result WHERE { <http://dbpedia.org/resource/Battle_of_Verdun> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT ?commander WHERE {
  <http://dbpedia.org/resource/Battle_of_Verdun> <http://dbpedia.org/ontology/commander> ?commander .
}
```",1,1,2,1,1,3,3,71,17,0,0,1.0,1.0,1.0
421,5,train,Give me the birth name of Dino Merlin.,SELECT ?result WHERE { <http://dbpedia.org/resource/Dino_Merlin> <http://dbpedia.org/property/birthName> ?result . },"```sparql
SELECT ?birthName WHERE {
  <http://dbpedia.org/resource/Dino_Merlin> <http://dbpedia.org/ontology/birthName> ?birthName .
}
```",1,1,2,1,1,2,3,28,0,0,1,0,0.0,0
996,3,train,Who is the awardee of 1778.0?,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ""1778.0""^^<http://www.w3.org/2001/XMLSchema#double> . }","```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/award> <http://dbpedia.org/resource/Award_1778.0>.
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
801,5,train,"Give me the professional, that is a musical artist, in Rapper.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Rapper""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
SELECT ?rapper WHERE {
  ?rapper <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Rapper>.
  ?rapper <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>.
}
```",1,2,2,1,1,3,3,71,0,0,1363,0,0.0,0
16,16,train,Give me the profession of the actor of Unnatural (TV series).,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/occupation> ?result . <http://dbpedia.org/resource/Unnatural_(TV_series)> <http://dbpedia.org/property/starring> ?v1 . },"```sparql
SELECT ?actor ?profession WHERE {
  ?series <http://dbpedia.org/ontology/starring> ?actor .
  ?actor <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Actor> .
  ?actor <http://purl.org/dc/terms/profession> ?profession .
  FILTER (str(?series) = ""Unnatural_(TV_series)"")
}
```",2,2,3,2,1,3,3,71,0,0,3,0,0.0,0
391,12,train,Give me the actor of All About the Andersons and actor of The Departed.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Departed> <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/All_About_the_Andersons> <http://dbpedia.org/property/starring> ?result . },"```sparql
SELECT DISTINCT ?actor WHERE {
  { 
    <http://dbpedia.org/resource/All_About_the_Andersons> <http://dbpedia.org/ontology/starring> ?actor .
  }
  UNION
  {
    <http://dbpedia.org/resource/The_Departed> <http://dbpedia.org/ontology/starring> ?actor .
  }
}
```",2,2,3,1,2,3,3,71,1,11,0,0.08333333333333333,1.0,0.15384615384615385
492,9,train,Give me the person decedent at French Algeria and commander in Franco-Hova Wars.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/French_Algeria> . <http://dbpedia.org/resource/Franco-Hova_Wars> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/French_Algeria>.
  ?person <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Franco-Hova_Wars>.
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
421,7,train,Give me the band member of Senidah and person born as Edin Dervišhalidović.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Edin Dervišhalidović""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Senidah> . }","```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/birthName> ""Edin Dervišhalidović"" .
  ?person <http://dbpedia.org/ontology/memberOfBand> <http://dbpedia.org/resource/Senidah> .
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
184,7,train,Give me the parent of Archduchess Margaret of Austria (born 1925).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Margaret_of_Austria_(born_1925)> . },"```sparql
SELECT ?result WHERE {
    <http://dbpedia.org/resource/Archduchess_Margaret_of_Austria_(born_1925)> <http://www.w3.org/2000/01/rdf-schema#label> ""Margaret of Austria"" .
    OPTIONAL { 
        <http://dbpedia.org/resource/Archduchess_Margaret_of_Austria_(born_1925)> <http://dbpedia.org/ontology/birthParent> ?result .
    }
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
285,9,train,Who is the child of the spouse of Aristotle Onassis?,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?result . ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Aristotle_Onassis> . },"```sparql
SELECT ?child WHERE {
  <http://dbpedia.org/resource/Aristotle_Onassis> <http://dbpedia.org/ontology/spouse> ?spouse .
  ?spouse <http://dbpedia.org/ontology/child> ?child .
}
```",2,2,3,2,1,3,2,20,5,0,0,1.0,1.0,1.0
547,0,train,Give me the resting place of James Burton (Egyptologist).,SELECT ?result WHERE { <http://dbpedia.org/resource/James_Burton_(Egyptologist)> <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
SELECT ?restingPlace WHERE {
  <http://dbpedia.org/resource/James_Burton_(Egyptologist)> <http://dbpedia.org/ontology/burialPlace> ?restingPlace .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
9,14,train,Give me the figure known as the nickname of Queen's University Belfast.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ?v1 . <http://dbpedia.org/resource/Queen's_University_Belfast> <http://dbpedia.org/property/nickname> ?v1 . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Queen%27s_University_Belfast> <http://www.w3.org/2000/01/rdf-schema#label> ?result .
}
```",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
659,15,train,"Give me the force of the native, that is an office holder, of Kingdom of Ireland.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Kingdom_of_Ireland> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/commander> ?v1 . },"SELECT ?result WHERE { 
  ?officeHolder <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Kingdom_of_Ireland>.
  ?officeHolder a <http://dbpedia.org/ontology/OfficeHolder>.
  ?officeHolder <http://dbpedia.org/property/force> ?result.
}",2,3,3,2,1,3,3,71,0,0,60,0,0.0,0
801,16,train,"Give me the work, that is a musical work and a song and a work, of the professional, that is a musical artist, in Rapper.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/property/occupation> ""Rapper""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?result <http://dbpedia.org/property/writer> ?v1 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. }","```sparql
SELECT ?work WHERE {
  ?work rdf:type dbo:MusicalWork .
  ?work rdf:type dbo:Song .
  ?artist rdf:type dbo:MusicalArtist .
  ?artist dbo:occupation dbr:Rapper .
  ?artist dbo:works ?work .
}
```",2,6,3,2,1,3,3,71,0,0,2395,0,0.0,0
55,9,train,Give me the band member of Metallica and band of Newsted.,SELECT ?result WHERE { <http://dbpedia.org/resource/Newsted> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Metallica> . },"```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/Metallica> .
  OPTIONAL { ?person <http://dbpedia.org/property/band> <http://dbpedia.org/resource/Newsted> . }
}
```",2,2,3,1,2,2,3,28,0,0,3,0,0.0,0
429,0,train,Give me the administration of Andrew Johnson.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Andrew_Johnson> . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Andrew_Johnson> <http://dbpedia.org/ontology/administration> ?result .
}
```",1,1,2,1,1,2,2,9,0,0,1,0,0.0,0
696,4,train,Who is the commander in Battle of Chishui River?,SELECT ?result WHERE { <http://dbpedia.org/resource/Battle_of_Chishui_River> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Battle_of_Chishui_River> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Battle> .
  <http://dbpedia.org/resource/Battle_of_Chishui_River> <http://dbpedia.org/property/commander> ?result .
}
```",1,1,2,1,1,3,2,20,0,0,24,0,0.0,0
182,7,train,Give me the entity in Sri Lanka and war of Mahesh Senanayake.,SELECT ?result WHERE { <http://dbpedia.org/resource/Mahesh_Senanayake> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Sri_Lanka> . },"```sparql
SELECT ?result WHERE {
  { 
    ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Sri_Lanka>.
    <http://dbpedia.org/resource/Mahesh_Senanayake> <http://www.w3.org/2000/01/rdf-schema#seeAlso> ?result.
  }
  UNION
  {
    ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>.
    <http://dbpedia.org/resource/Mahesh_Senanayake> <http://dbpedia.org/property/battle> ?result.
  }
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
197,0,train,Give me the birthplace of Dumitru Nadu.,SELECT ?result WHERE { <http://dbpedia.org/resource/Dumitru_Nadu> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?birthPlace WHERE {
  <http://dbpedia.org/resource/Dumitru_Nadu> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
}
```",1,1,2,1,1,2,2,9,2,0,0,1.0,1.0,1.0
92,11,train,"Give me the band member of the reference, that is an artist, to Nevermore.","SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""Nevermore""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
SELECT ?member WHERE {
  ?member <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/Nevermore_(band)> .
  ?member <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist> .
}
```",2,3,3,2,1,3,3,71,0,0,12,0,0.0,0
391,2,train,Give me the actor of All About the Andersons.,SELECT ?result WHERE { <http://dbpedia.org/resource/All_About_the_Andersons> <http://dbpedia.org/property/starring> ?result . },"```sparql
SELECT ?actor WHERE {
  ?film <http://dbpedia.org/ontology/starring> ?actor .
  FILTER(STRSTARTS(LCASE(?film), LCASE(""all about the andersons"")))
}
```",1,1,2,1,1,3,3,71,0,0,5,0,0.0,0
626,10,train,Give me the award of the military force of Battle of Borodino.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Borodino> . ?v0 <http://dbpedia.org/property/awards> ?result . },"```sparql
SELECT ?award WHERE {
  <http://dbpedia.org/resource/Battle_of_Borodino> <http://dbpedia.org/ontology/militaryForce> ?militaryForce .
  ?militaryForce <http://dbpedia.org/property/awards> ?award .
}
```",2,2,3,2,1,3,2,20,0,0,53,0,0.0,0
701,5,train,Give me the child of Seti I.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seti_I> . },"```sparql
SELECT ?child WHERE {
  <http://dbpedia.org/resource/Seti_I> <http://dbpedia.org/ontology/offspring> ?child .
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
303,9,train,Give me the entity in Panama and party of Arnulfo Arias.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Panama> . <http://dbpedia.org/resource/Arnulfo_Arias> <http://dbpedia.org/ontology/party> ?result . },"```sparql
SELECT ?party WHERE {
  <http://dbpedia.org/resource/Arnulfo_Arias> <http://dbpedia.org/ontology/party> ?party .
  OPTIONAL { ?party <http://dbpedia.org/property/country> <http://dbpedia.org/resource/Panama> . }
}
```",2,2,3,1,2,2,3,28,1,0,0,1.0,1.0,1.0
435,1,train,Give me the region of Greenwich Mean Time.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Greenwich_Mean_Time> . },"```sparql
SELECT ?region WHERE {
  <http://dbpedia.org/resource/Greenwich_Mean_Time> <http://dbpedia.org/property/timeZone> ?timeZone .
  ?timeZone <http://dbpedia.org/ontology/country> ?country .
  ?country <http://dbpedia.org/ontology/administrativeRegion> ?region .
}
```",1,1,2,1,1,2,3,28,0,0,2484,0,0.0,0
54,11,train,Give me the child of the father of Soe Min Wimala Dewi.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Soe_Min_Wimala_Dewi> <http://dbpedia.org/property/father> ?v0 . },"```sparql
SELECT ?child WHERE {
  ?father <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Soe_Min_Wimala_Dewi> .
  ?father <http://dbpedia.org/ontology/child> ?child .
}
```",2,2,3,2,1,3,3,71,0,0,3,0,0.0,0
9,3,train,"Give me the entity, that is an organisation, in Belfast.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Belfast> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
SELECT ?entity WHERE {
  ?entity <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organization> .
  ?entity <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Belfast> .
}
```",1,2,2,1,1,3,3,71,0,0,57,0,0.0,0
492,1,train,Give me the commander in Franco-Hova Wars.,SELECT ?result WHERE { <http://dbpedia.org/resource/Franco-Hova_Wars> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Franco-Hova_Wars> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>.
  <http://dbpedia.org/resource/Franco-Hova_Wars> <http://dbpedia.org/property/commander> ?result.
}
```",1,1,2,1,1,3,3,71,0,2,2,0.0,0.0,0
232,12,train,Give me the native of London and actor of Dog Soldiers (film).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/London> . <http://dbpedia.org/resource/Dog_Soldiers_(film)> <http://dbpedia.org/ontology/starring> ?result . },"```sparql
SELECT ?person WHERE {
  ?person dbo:nativePlace dbr:London .
  ?film dbo:title ""Dog Soldiers""@en .
  ?film dbo:actor ?person .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
645,0,train,Give me the entity in United Kingdom.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . },"```sparql
SELECT ?entity WHERE {
  ?entity <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>.
}
```",1,1,2,1,1,3,2,20,42999,0,0,1.0,1.0,1.0
488,11,train,Give me the birth place of the commander in Boshin War.,SELECT ?result WHERE { <http://dbpedia.org/resource/Boshin_War> <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?birthPlace WHERE {
  ?commander <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Boshin_War> .
  ?commander <http://dbpedia.org/property/placeOfBirth> ?birthPlace .
}
```",2,2,3,2,1,3,3,71,0,0,15,0,0.0,0
404,7,train,Who is the spouse of Princess Victoria Louise of Prussia?,SELECT ?result WHERE { <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?result .
}
```",1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
534,10,train,"Give me the owner of the location, that is a venue and an architectural structure, of 2012 Pro12 Grand Final.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/owner> ?result . <http://dbpedia.org/resource/2012_Pro12_Grand_Final> <http://dbpedia.org/ontology/location> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Venue>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ArchitecturalStructure>. },"```sparql
SELECT ?owner WHERE {
    ?location <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/2012_Pro12_Grand_Final> .
    ?location <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Venue> .
    ?location <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ArchitecturalStructure> .
    ?location <http://dbpedia.org/property/owner> ?owner .
}
```",2,4,3,2,1,3,2,20,0,0,1,0,0.0,0
232,10,train,Give me the child of Jon Pertwee and native of London.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/London> . <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/ontology/child> ?result . },"```sparql
SELECT ?child WHERE {
  ?child <http://dbpedia.org/property/parent> <http://dbpedia.org/resource/Jon_Pertwee> .
  OPTIONAL { ?child dbo:nativePlace <http://dbpedia.org/resource/London> . }
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
184,15,train,"Give me the native of the landmark at elevation, that is a settlement, of 96.0.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://dbpedia.org/ontology/elevation> ""96.0""^^<http://www.w3.org/2001/XMLSchema#double> . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . }","```sparql
SELECT ?landmark ?native WHERE {
    ?landmark <http://dbpedia.org/ontology/elevation> ""96.0""^^<http://www.w3.org/2001/XMLSchema#float>.
    ?landmark <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>.
    ?landmark <http://dbpedia.org/property/native> ?native.
}
```",2,3,3,2,1,3,3,71,0,0,3320,0,0.0,0
747,2,train,Give me the band of Shèna.,SELECT ?result WHERE { <http://dbpedia.org/resource/Shèna> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Shèna> <http://dbpedia.org/ontology/memberOf> ?result .
}
```",1,1,2,1,1,3,3,71,0,0,8,0,0.0,0
485,11,train,"Give me the entity in the birth place, that is a region, of Joseph Whitaker (naturalist).",SELECT ?result WHERE { <http://dbpedia.org/resource/Joseph_Whitaker_(naturalist)> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?result <http://dbpedia.org/ontology/country> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. },"```sparql
SELECT ?entity WHERE {
  <http://dbpedia.org/resource/Joseph_Whitaker_(naturalist)> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/NaturalPerson>.
  <http://dbpedia.org/resource/Joseph_Whitaker_(naturalist)> <http://dbpedia.org/property/birthPlace> ?birthPlace.
  ?birthPlace <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>.
  ?entity <http://dbpedia.org/ontology/location> ?birthPlace.
}
```",2,3,3,2,1,2,3,28,0,0,369,0,0.0,0
754,9,train,Give me the parent of the parent of Min Linka.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Min_Linka> <http://dbpedia.org/ontology/parent> ?v0 . },"```sparql
SELECT ?grandparent WHERE {
  ?minLinka <http://dbpedia.org/ontology/father> ?parent .
  UNION
  ?minLinka <http://dbpedia.org/ontology/mother> ?parent .
  
  OPTIONAL { ?parent <http://dbpedia.org/ontology/father> ?grandparent . }
  OPTIONAL { ?parent <http://dbpedia.org/ontology/mother> ?grandparent . }
}
```",2,2,3,2,1,3,2,20,0,0,3,0,0.0,0
177,0,train,Give me the entity in South Korea.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/South_Korea> . },"```sparql
SELECT ?result WHERE {
  ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/South_Korea> .
}
```",1,1,2,1,1,2,2,9,3065,0,0,1.0,1.0,1.0
701,0,train,Give me the parent of Meritamen.,SELECT ?result WHERE { <http://dbpedia.org/resource/Meritamen> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
SELECT ?parent WHERE {
  { <http://dbpedia.org/resource/Meritamen> <http://dbpedia.org/ontology/father> ?parent . }
  UNION
  { <http://dbpedia.org/resource/Meritamen> <http://dbpedia.org/ontology/mother> ?parent . }
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
365,3,train,Give me the real name of The Blasters.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Blasters> <http://xmlns.com/foaf/0.1/name> ?result . },"```sparql
SELECT ?realName WHERE {
  <http://dbpedia.org/resource/The_Blasters> <http://www.w3.org/2000/01/rdf-schema#label> ""The Blasters""@en .
  OPTIONAL { 
    <http://dbpedia.org/resource/The_Blasters> <http://dbpedia.org/ontology/birthName> ?realName .
  }
}
```",1,1,2,1,1,2,2,9,0,0,1,0,0.0,0
996,2,train,Give me the elevation of Lac d'Avoriaz.,SELECT ?result WHERE { <http://dbpedia.org/resource/Lac_d'Avoriaz> <http://dbpedia.org/ontology/elevation> ?result . },"```sparql
SELECT ?elevation WHERE {
  <http://dbpedia.org/resource/Lac_d%27Avoriaz> <http://dbpedia.org/ontology/elevation> ?elevation .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
9,8,train,Give me the nickname of Queen's University Belfast.,SELECT ?result WHERE { <http://dbpedia.org/resource/Queen's_University_Belfast> <http://dbpedia.org/property/nickname> ?result . },"```sparql
SELECT ?nickname WHERE {
  <http://dbpedia.org/resource/Queen%27s_University_Belfast> <http://dbpedia.org/ontology/nickName> ?nickname .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
161,10,train,Give me the military force of Rif War and commander in Biscay Campaign.,SELECT ?result WHERE { <http://dbpedia.org/resource/Biscay_Campaign> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Rif_War> . },"```sparql
SELECT ?militaryForce WHERE {
  ?rifWar <http://dbpedia.org/ontology/militaryForce> ?militaryForce .
  FILTER(?rifWar = <http://dbpedia.org/resource/Rif_War>) .

  ?biscayCampaign <http://dbpedia.org/ontology/commander> ?commander .
  FILTER(?biscayCampaign = <http://dbpedia.org/resource/Biscay_Campaign>) .

  ?militaryForce <http://dbpedia.org/ontology/commander> ?commander .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
994,1,train,Give me the associated musical artist of Red Tide (band).,SELECT ?result WHERE { <http://dbpedia.org/resource/Red_Tide_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Red_Tide_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result .
}
```",1,1,2,1,1,3,3,71,6,0,0,1.0,1.0,1.0
251,0,train,Give me the location of Battle of Marengo.,SELECT ?result WHERE { <http://dbpedia.org/resource/Battle_of_Marengo> <http://dbpedia.org/ontology/place> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Battle_of_Marengo> <http://www.w3.org/2000/01/rdf-schema#seeAlso> ?location .
  ?location <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place> .
  BIND(?location AS ?result)
}
```",1,1,2,1,1,2,3,28,0,0,3,0,0.0,0
915,4,train,"Give me the parent, that is a fictional character and a soap character, of Lizzie Spaulding.",SELECT ?result WHERE { <http://dbpedia.org/resource/Lizzie_Spaulding> <http://dbpedia.org/ontology/parent> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoapCharacter>. },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Lizzie_Spaulding> <http://dbpedia.org/ontology/father> ?result .
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter> .
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoapCharacter> .
}
UNION
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Lizzie_Spaulding> <http://dbpedia.org/ontology/mother> ?result .
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter> .
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoapCharacter> .
}
```",1,3,2,1,1,3,2,20,0,0,2,0,0.0,0
16,13,train,Give me the professional in the profession of Satomi Ishihara.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Satomi_Ishihara> <http://dbpedia.org/property/occupation> ?v1 . },"SELECT ?result WHERE { 
  <http://dbpedia.org/resource/Satomi_Ishihara> <http://purl.org/dc/terms/subject> ?profession .
  ?result <http://purl.org/dc/terms/subject> ?profession .
}",2,2,3,2,1,3,3,71,13357,1035179,5884,0.012738713787604813,0.6941946884257575,0.025018332479534586
617,2,train,Give me the parent of Nysa (wife of Pharnaces I of Pontus).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Nysa_(wife_of_Pharnaces_I_of_Pontus)> . },"```sparql
SELECT ?parent WHERE {
  <http://dbpedia.org/resource/Nysa_(wife_of_Pharnaces_I_of_Pontus)> <http://www.w3.org/2000/01/rdf-schema#parent> ?parent .
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
659,5,train,"Give me the figure known, that is a military unit and an organisation, as 'Polish Horse'.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?result <http://dbpedia.org/property/nickname> ""'Polish Horse'""@en . }","```sparql
SELECT ?figure WHERE {
  ?figure <http://www.w3.org/2000/01/rdf-schema#label> ""Polish Horse""@en .
  ?figure <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit> .
  ?figure <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organization> .
}
```",1,3,2,1,1,3,3,71,0,0,1,0,0.0,0
391,7,train,Who is the professional in ?,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . }",No valid SPARQL query can be constructed due to the incomplete nature of the question.,1,1,2,1,1,3,3,71,0,0,39640,0,0.0,0
659,10,train,Give me the military force of Napoleonic Wars and commander in German campaign of 1813.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Napoleonic_Wars> . <http://dbpedia.org/resource/German_campaign_of_1813> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT ?militaryForce WHERE {
    ?militaryForce <http://dbpedia.org/ontology/militaryConflict> <http://dbpedia.org/resource/Napoleonic_Wars>.
    ?militaryForce <http://dbpedia.org/ontology/commander> ?commander.
    ?campaign <http://dbpedia.org/property/commander> ?commander.
    ?campaign <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>.
    ?campaign <http://dbpedia.org/resource/German_campaign_of_1813>.
}
```",2,2,3,1,2,3,3,71,0,0,6,0,0.0,0
179,6,train,Give me the person born as Mom Rajawongse Sirikit Kitiyakara and parent of Ubol Ratana.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Mom Rajawongse Sirikit Kitiyakara""@en . <http://dbpedia.org/resource/Ubol_Ratana> <http://dbpedia.org/ontology/parent> ?result . }","```sparql
SELECT ?person WHERE {
  ?person foaf:givenName ""Sirikit""@en .
  ?person foaf:surname ""Kitiyakara""@en .
  ?person dbo:birthName ""Mom Rajawongse Sirikit Kitiyakara"" .
  ?person dbo:child <http://dbpedia.org/resource/Ubol_Ratana> .
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
696,9,train,"Who is the member of the associated musical artist, that is an organisation and a group and a band, of The Boils?",SELECT ?result WHERE { <http://dbpedia.org/resource/The_Boils> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://dbpedia.org/ontology/bandMember> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. },"```sparql
SELECT ?member WHERE {
  ?associatedArtist <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/The_Boils> .
  ?associatedArtist <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organization> .
  ?associatedArtist <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band> .
  ?associatedArtist <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalGroup> .
  ?associatedArtist <http://dbpedia.org/property/member> ?member .
}
```",2,5,3,2,1,3,2,20,0,0,6,0,0.0,0
696,10,train,Give me the award of the commander in Battle of Chishui River.,SELECT ?result WHERE { <http://dbpedia.org/resource/Battle_of_Chishui_River> <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://dbpedia.org/property/awards> ?result . },"SELECT ?award WHERE {
  <http://dbpedia.org/resource/Battle_of_Chishui_River> <http://dbpedia.org/ontology/commander> ?commander .
  ?commander <http://dbpedia.org/property/awards> ?award .
}",2,2,3,2,1,3,2,20,9,0,0,1.0,1.0,1.0
492,4,train,"Give me the work of US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/author> ""US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite""@en . }","```sparql
SELECT ?work WHERE {
  <http://dbpedia.org/resource/Joseph_C._Satterthwaite> dbo:position ?work .
  FILTER(CONTAINS(LCASE(STR(?work)), ""us assistant secretary of state for african affairs""))
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
767,6,train,Give me the administration of George K. Nash.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/George_K._Nash> . },"SELECT ?result WHERE { 
  <http://dbpedia.org/resource/George_K._Nash> <http://dbpedia.org/ontology/administration> ?result . 
}",1,1,2,1,1,3,3,71,0,0,7,0,0.0,0
747,10,train,Give me the band of Shèna and person born on 1985-04-29.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Shèna> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/birthDate> ""1985-04-29""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
SELECT ?band WHERE {
    ?person <http://dbpedia.org/ontology/birthDate> ""1985-04-29""^^<http://www.w3.org/2001/XMLSchema#date> .
    ?person rdfs:label ""Shèna""@en .
    FILTER (LANG(?person) = 'en')
    ?person <http://dbpedia.org/property/memberOf> ?band .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
356,2,train,"Give me the predecessor, that is a sports team season and a soccer club season, of 2015 Sacramento Republic FC season.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/2015_Sacramento_Republic_FC_season> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. },"```sparql
SELECT ?result WHERE {
    ?season <http://dbpedia.org/ontology/sportsTeam> ?team .
    ?season <http://dbpedia.org/ontology/predecessor> ?result .
    ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason> .
    ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason> .
    ?season <http://dbpedia.org/resource/2015_Sacramento_Republic_FC_season> .
}
```",1,3,2,1,1,3,2,20,0,0,1,0,0.0,0
177,1,train,"Give me the headquarter of Ministry of Culture, Sports and Tourism.","SELECT ?result WHERE { <http://dbpedia.org/resource/Ministry_of_Culture,_Sports_and_Tourism> <http://dbpedia.org/ontology/location> ?result . }","SELECT ?result WHERE { 
  <http://dbpedia.org/resource/Ministry_of_Culture,_Sports_and_Tourism> <http://www.w3.org/2000/01/rdf-schema#seeAlso> ?ministry .
  ?ministry <http://dbpedia.org/ontology/headquarters> ?result .
}",1,1,2,1,1,2,2,9,0,0,2,0,0.0,0
666,5,train,Give me the nickname of England national beach soccer team.,SELECT ?result WHERE { <http://dbpedia.org/resource/England_national_beach_soccer_team> <http://dbpedia.org/property/nickname> ?result . },"```sparql
SELECT ?nickname WHERE {
  <http://dbpedia.org/resource/England_national_beach_soccer_team> <http://dbpedia.org/ontology/nickName> ?nickname .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
378,5,train,"Give me the reference, that is a military conflict, to Peninsular War.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://xmlns.com/foaf/0.1/name> ""Peninsular War""@en . }","```sparql
SELECT ?result WHERE {
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>.
  ?peninsularWar dbpedia-owl:wikiPageWikiLink ?result.
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
435,7,train,"Give me the territory administered from Reykjavík and work of Article 62, Section IV of Constitution of Iceland.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Reykjavík> . ?result <http://dbpedia.org/property/author> ""Article 62, Section IV of Constitution of Iceland""@en . }","```sparql
SELECT ?territory ?work WHERE {
  ?territory <http://dbpedia.org/ontology/administrativeCenter> <http://dbpedia.org/resource/Reykjavík>.
  ?constitution <http://dbpedia.org/property/article> ""62"".
  ?constitution <http://dbpedia.org/property/section> ""IV"".
  ?constitution <http://dbpedia.org/ontology/work> ?work.
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
626,2,train,Who is the commander in Battle of Paris (1814)?,SELECT ?result WHERE { <http://dbpedia.org/resource/Battle_of_Paris_(1814)> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Battle_of_Paris_(1814)> <http://dbpedia.org/ontology/commander> ?result .
}
```",1,1,2,1,1,3,2,20,11,0,0,1.0,1.0,1.0
528,11,train,Give me the war of the military force of Battle of Pisagua.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Pisagua> . ?v0 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
SELECT ?result WHERE {
  ?battle <http://dbpedia.org/ontology/militaryForce> ?militaryForce .
  ?militaryForce <http://dbpedia.org/ontology/battle> ?result .
  FILTER(?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>)
  FILTER(STRSTARTS(STR(?battle), ""http://dbpedia.org/resource/Battle_of_Pisagua""))
}
```",2,2,3,2,1,3,3,71,0,0,30,0,0.0,0
281,13,train,"Give me the entity in the birth place, that is a country, of Bob Heffron.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/place> ?v1 . <http://dbpedia.org/resource/Bob_Heffron> <http://dbpedia.org/ontology/birthPlace> ?v1 . },"```sparql
SELECT ?entity WHERE {
  <http://dbpedia.org/resource/Bob_Heffron> <http://www.w3.org/2000/01/rdf-schema#birthPlace> ?birthPlace .
  ?birthPlace <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country> .
  ?entity <http://www.w3.org/2004/02/skos/core#inScheme> ?birthPlace .
}
```",2,3,3,2,1,3,3,71,0,0,1,0,0.0,0
783,4,train,Give me the persona of Ebony Reigns.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ebony_Reigns> <http://xmlns.com/foaf/0.1/givenName> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Ebony_Reigns> <http://dbpedia.org/ontology/stageName> ?result .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
492,15,train,Give me the work of the author of French Algeria.,SELECT ?result WHERE { <http://dbpedia.org/resource/French_Algeria> <http://dbpedia.org/property/author> ?v1 . ?result <http://dbpedia.org/property/author> ?v1 . },"```sparql
SELECT ?work WHERE {
  ?book <http://dbpedia.org/ontology/author> ?author .
  ?book <http://www.w3.org/2000/01/rdf-schema#label> ""French Algeria""@en .
  ?author <http://purl.org/dc/terms/creator> ?work .
}
```",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
378,3,train,Give me the birth name of Carl Pontus Gahn.,SELECT ?result WHERE { <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/property/birthName> ?result . },"```sparql
SELECT ?birthName WHERE {
  <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/ontology/birthName> ?birthName .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
435,2,train,"Give me the work of Article 62, Section IV of Constitution of Iceland.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/author> ""Article 62, Section IV of Constitution of Iceland""@en . }","```sparql
SELECT ?result WHERE {
    <http://dbpedia.org/resource/Constitution_of_Iceland#Article_62> <http://www.w3.org/2000/01/rdf-schema#comment> ?section .
    FILTER(CONTAINS(LCASE(?section), ""section iv""))
    OPTIONAL { <http://dbpedia.org/resource/Constitution_of_Iceland#Article_62> <http://dbpedia.org/ontology/work> ?result . }
}
```",1,1,2,1,1,2,3,28,0,0,1,0,0.0,0
281,14,train,"Give me the war of the profession, that is a military unit, of Heather Roy.",SELECT ?result WHERE { <http://dbpedia.org/resource/Heather_Roy> <http://dbpedia.org/property/occupation> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v1 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
SELECT ?result WHERE {
  ?unit <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit> .
  ?unit <http://dbpedia.org/property/profession> ?profession .
  ?profession <http://dbpedia.org/ontology/person> <http://dbpedia.org/resource/Heather_Roy> .
  ?unit <http://dbpedia.org/ontology/war> ?result .
}
```",2,3,3,2,1,3,3,71,0,0,14,0,0.0,0
712,4,train,Give me the show of Soviet Union.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/Soviet_Union> . },"```sparql
SELECT ?show WHERE {
  ?show <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Soviet_Union>.
  ?show <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?type.
  FILTER(?type IN (<http://dbpedia.org/ontology/RadioShow>, <http://dbpedia.org/ontology/TelevisionShow>))
}
```",1,1,2,1,1,3,2,20,0,15,8,0.0,0.0,0
48,7,train,Give me the band of the writer of Emotion (Carly Rae Jepsen album).,SELECT ?result WHERE { <http://dbpedia.org/resource/Emotion_(Carly_Rae_Jepsen_album)> <http://dbpedia.org/property/writer> ?v1 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT ?writer ?band WHERE {
  ?album dct:creator ?artist .
  ?album foaf:name ""Emotion"" .
  ?artist foaf:name ""Carly Rae Jepsen"" .
  OPTIONAL { ?writer dbo:worksForBand ?band . }
  FILTER EXISTS { ?album dbo:contributor ?writer }
}
```",2,2,3,2,1,3,2,20,0,0,95,0,0.0,0
404,5,train,"Who is the parent, that is a royalty, of Prince George William of Hanover?",SELECT ?result WHERE { <http://dbpedia.org/resource/Prince_George_William_of_Hanover> <http://dbpedia.org/ontology/parent> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
SELECT ?parent WHERE {
  <http://dbpedia.org/resource/Prince_George_William_of_Hanover> <http://xmlns.com/foaf/0.1/knows> ?parent .
  ?parent <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
}
```",1,2,2,1,1,3,3,71,0,0,2,0,0.0,0
285,0,train,Give me the parent of Alexander Onassis.,SELECT ?result WHERE { <http://dbpedia.org/resource/Alexander_Onassis> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
SELECT ?parent WHERE {
  { <http://dbpedia.org/resource/Alexander_Onassis> <http://dbpedia.org/ontology/father> ?parent . }
  UNION
  { <http://dbpedia.org/resource/Alexander_Onassis> <http://dbpedia.org/ontology/mother> ?parent . }
}
```",1,1,2,1,1,3,2,20,0,0,2,0,0.0,0
281,0,train,"Give me the war of Beauchamp Seymour, 1st Baron Alcester.","SELECT ?result WHERE { <http://dbpedia.org/resource/Beauchamp_Seymour,_1st_Baron_Alcester> <http://dbpedia.org/ontology/battle> ?result . }","```sparql
SELECT ?result WHERE {
    <http://dbpedia.org/resource/Beauchamp_Seymour,_1st_Baron_Alcester> <http://dbpedia.org/ontology/battle> ?result .
    OPTIONAL { 
        <http://dbpedia.org/resource/Beauchamp_Seymour,_1st_Baron_Alcester> <http://dbpedia.org/ontology/militaryConflict> ?result .
    }
}
```",1,1,2,1,1,3,3,71,3,0,0,1.0,1.0,1.0
281,6,train,"Give me the birth place, that is a country, of Bob Heffron.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Bob_Heffron> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Bob_Heffron> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person> .
  <http://dbpedia.org/resource/Bob_Heffron> <http://dbpedia.org/property/birthPlace> ?birthPlace .
  ?birthPlace <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country> .
  BIND(?birthPlace AS ?result)
}
```",1,2,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
754,3,train,Give me the parent of May Hnin Htapi.,SELECT ?result WHERE { <http://dbpedia.org/resource/May_Hnin_Htapi> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
SELECT ?parent WHERE {
  { <http://dbpedia.org/resource/May_Hnin_Htapi> <http://dbpedia.org/ontology/father> ?parent . }
  UNION
  { <http://dbpedia.org/resource/May_Hnin_Htapi> <http://dbpedia.org/ontology/mother> ?parent . }
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
429,5,train,Give me the administration of the father of Martha Johnson Patterson.,SELECT ?result WHERE { <http://dbpedia.org/resource/Martha_Johnson_Patterson> <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/property/leader> ?v1 . },"SELECT ?result WHERE { 
  <http://dbpedia.org/resource/Martha_Johnson_Patterson> <http://dbpedia.org/ontology/father> ?father .
  ?father <http://dbpedia.org/ontology/administration> ?result .
}",2,2,3,2,1,2,2,9,0,0,1,0,0.0,0
48,6,train,Give me the band of Carl Falk and band of Murda Mook.,SELECT ?result WHERE { <http://dbpedia.org/resource/Murda_Mook> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Carl_Falk> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT ?person ?band WHERE {
  VALUES ?person { <http://dbpedia.org/resource/Carl_Falk> <http://dbpedia.org/resource/Murda_Mook> }
  ?person <http://dbpedia.org/ontology/band> ?band .
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
182,5,train,Give me the nationality of Tamara Kunanayakam.,SELECT ?result WHERE { <http://dbpedia.org/resource/Tamara_Kunanayakam> <http://dbpedia.org/ontology/nationality> ?result . },"```sparql
SELECT ?nationality WHERE {
  <http://dbpedia.org/resource/Tamara_Kunanayakam> <http://dbpedia.org/ontology/nationality> ?nationality .
}
```",1,1,2,1,1,2,3,28,1,0,0,1.0,1.0,1.0
44,5,train,Give me the band member of the band of John Pettibone.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/John_Pettibone> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . },"SELECT ?bandMember WHERE {
  ?band <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/John_Pettibone>.
  ?band <http://dbpedia.org/ontology/member> ?bandMember.
}",2,2,3,2,1,2,2,9,0,0,2,0,0.0,0
666,10,train,"Give me the nickname of the reference, that is an organisation and a soccer club and a sports club, to England.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/nickname> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""England""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. }","```sparql
SELECT ?nickname WHERE {
  ?organization <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/England> .
  ?organization <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub> .
  ?organization <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub> .
  ?organization <http://dbpedia.org/property/nickname> ?nickname .
}
```",2,5,3,2,1,3,2,20,0,0,3,0,0.0,0
232,6,train,"Give me the claim to fame, that is a film and a military conflict, of Sean Pertwee.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. <http://dbpedia.org/resource/Sean_Pertwee> <http://dbpedia.org/ontology/knownFor> ?result . },"```sparql
SELECT ?result WHERE {
  ?result rdf:type dbpedia-owl:MilitaryConflict .
  ?result rdf:type dbpedia-owl:Film .
  <http://dbpedia.org/resource/Sean_Pertwee> dbo:knownFor ?result .
}
```",1,3,2,1,1,3,3,71,0,0,1,0,0.0,0
820,6,train,Give me the child of Jack Schwartzman and professional in .,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Jack_Schwartzman> . }","```sparql
SELECT ?child ?profession WHERE {
  <http://dbpedia.org/resource/Jack_Schwartzman> dbo:child ?child .
  OPTIONAL { ?child dbo:occupation ?profession . }
  FILTER(?profession != """")
}
```",2,2,3,1,2,3,2,20,1,3,0,0.25,1.0,0.4
54,0,train,Give me the child of Thinkhaya of Pagan.,SELECT ?result WHERE { <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Thinkhaya_of_Pagan> dbo:child ?result .
}
```",1,1,2,1,1,3,3,71,3,0,0,1.0,1.0,1.0
488,16,train,"Who is the father, that is a politician, of the father, that is an office holder, of Matsudaira Tadamasa?",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/property/father> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Matsudaira_Tadamasa> <http://dbpedia.org/property/father> ?v1 . },"```sparql
SELECT ?politician WHERE {
  ?officeHolder <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Matsudaira_Tadamasa> .
  ?officeHolder <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder> .
  ?politician <http://dbpedia.org/ontology/father> ?officeHolder .
  ?politician <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .
}
```",2,4,3,2,1,3,3,71,0,0,1,0,0.0,0
391,16,train,"Give me the claim to fame, that is a work, of the spouse of Sherry Hormann.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/knownFor> ?result . <http://dbpedia.org/resource/Sherry_Hormann> <http://dbpedia.org/ontology/spouse> ?v1 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. },"```sparql
SELECT ?spouse ?work WHERE {
  <http://dbpedia.org/resource/Sherry_Hormann> <http://xmlns.com/foaf/0.1/spouse> ?spouse .
  ?spouse <http://purl.org/dc/terms/subject> ?work .
  ?work <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work> .
}
```",2,3,3,2,1,3,3,71,0,0,4,0,0.0,0
666,8,train,Give me the figure known as the nickname of England national beach soccer team.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ?v0 . <http://dbpedia.org/resource/England_national_beach_soccer_team> <http://dbpedia.org/property/nickname> ?v0 . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/England_national_beach_soccer_team> <http://www.w3.org/2000/01/rdf-schema#label> ""England national beach soccer team""@en .
  <http://dbpedia.org/resource/England_national_beach_soccer_team> <http://dbpedia.org/ontology/nickname> ?result .
}
```",2,2,3,2,1,3,2,20,0,0,5,0,0.0,0
617,7,train,"Give me the child of the child, that is a royalty, of Boleslaus I, Duke of Bohemia.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Boleslaus_I,_Duke_of_Bohemia> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
SELECT ?grandchild WHERE {
  ?child dbo:child <http://dbpedia.org/resource/Boleslaus_I,_Duke_of_Bohemia> .
  ?grandchild dbo:child ?child .
  ?grandchild a dbo:Royalty .
}
```",2,3,3,2,1,3,2,20,0,1,4,0.0,0.0,0
328,14,train,"Give me the leader of the office, that is a government agency, of Joseph Stalin.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/leader> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. <http://dbpedia.org/resource/Joseph_Stalin> <http://dbpedia.org/property/office> ?v1 . },"```sparql
SELECT ?result WHERE {
  ?agency <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>.
  <http://dbpedia.org/resource/Joseph_Stalin> <http://dbpedia.org/property/leader> ?agency.
}
```",2,3,3,2,1,3,3,71,0,0,1,0,0.0,0
9,15,train,"Who is the mayor, that is a politician, of the entity, that is an organisation, in Belfast?",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Belfast> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/property/leader> ?result . },"```sparql
SELECT ?mayor WHERE {
  ?organization <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Belfast>;
                 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>.
  ?mayor <http://dbpedia.org/ontology/politician> true;
         <http://dbpedia.org/ontology/mayor> ?organization.
}
```",2,4,3,2,1,3,3,71,0,0,13,0,0.0,0
915,10,train,"Give me the child, that is a fictional character and a soap character, of the parent, that is a fictional character and a soap character, of Lizzie Spaulding.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoapCharacter>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoapCharacter>. <http://dbpedia.org/resource/Lizzie_Spaulding> <http://dbpedia.org/ontology/parent> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?result <http://dbpedia.org/property/father> ?v0 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. },"```sparql
SELECT ?child WHERE {
  ?parent <http://dbpedia.org/ontology/familyName> ""Spaulding"" .
  ?parent <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter> .
  ?parent <http://dbpedia.org/ontology/soapCharacter> [] .
  <http://dbpedia.org/resource/Lizzie_Spaulding> <http://dbpedia.org/ontology/familyName> ?parent .

  ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter> .
  ?child <http://dbpedia.org/ontology/soapCharacter> [] .
  ?parent <http://dbpedia.org/ontology/child> ?child .
}
```",2,6,3,2,1,3,2,20,0,0,1,0,0.0,0
820,2,train,Who is the author of Understanding Comics?,SELECT ?result WHERE { <http://dbpedia.org/resource/Understanding_Comics> <http://dbpedia.org/ontology/author> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Understanding_Comics> <http://dbpedia.org/ontology/author> ?result .
}
```",1,1,2,1,1,3,2,20,1,0,0,1.0,1.0,1.0
981,2,train,"Give me the time zone in Salak, North Sumatra.","SELECT ?result WHERE { <http://dbpedia.org/resource/Salak,_North_Sumatra> <http://dbpedia.org/ontology/timeZone> ?result . }","```sparql
SELECT ?timeZone WHERE {
  ?place rdfs:label ""Salak, North Sumatra""@en .
  ?place wdt:P131* wd:Q1340 . # North Sumatra as a region
  ?place wdt:P421 ?timeZone .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
182,9,train,Give me the war of Jagath Dias and entity in Sri Lanka.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Sri_Lanka> . <http://dbpedia.org/resource/Jagath_Dias> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
SELECT ?war ?entity WHERE {
  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>.
  <http://dbpedia.org/resource/Jagath_Dias> <http://dbpedia.org/property/commander> ?war.
  
  OPTIONAL {
    ?entity <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?type.
    ?entity <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Sri_Lanka>.
  }
}
```",2,2,3,1,2,2,3,28,0,0,5,0,0.0,0
184,3,train,"Give me the landmark at elevation, that is a settlement, of 96.0.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/elevation> ""96.0""^^<http://www.w3.org/2001/XMLSchema#double> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. }","```sparql
SELECT ?landmark WHERE {
    ?landmark <http://dbpedia.org/ontology/elevation> ""96.0""^^<http://www.w3.org/2001/XMLSchema#float>.
    ?landmark a <http://dbpedia.org/ontology/Settlement>.
}
```",1,2,2,1,1,3,3,71,162,0,0,1.0,1.0,1.0
232,13,train,"Give me the actor of the claim to fame, that is a film and a military conflict, of Sean Pertwee.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. <http://dbpedia.org/resource/Sean_Pertwee> <http://dbpedia.org/ontology/knownFor> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
SELECT ?actor WHERE {
  ?film <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>.
  ?film <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>.
  <http://dbpedia.org/resource/Sean_Pertwee> <http://dbpedia.org/ontology/knownFor> ?film.
  ?film <http://dbpedia.org/ontology/starring> ?actor.
}
```",2,4,3,2,1,3,3,71,3,0,0,1.0,1.0,1.0
498,3,train,"Who is the member, that is an artist, of Mortician (band)?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Mortician_(band)> <http://dbpedia.org/ontology/bandMember> ?result . },"```sparql
SELECT ?result WHERE {
  ?result <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/Mortician_(band)> .
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist> .
}
```",1,2,2,1,1,2,2,9,0,0,1,0,0.0,0
626,5,train,Give me the award of Aleksey Petrovich Yermolov.,SELECT ?result WHERE { <http://dbpedia.org/resource/Aleksey_Petrovich_Yermolov> <http://dbpedia.org/property/awards> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Aleksey_Petrovich_Yermolov> <http://www.w3.org/2000/01/rdf-schema#award> ?result .
}
```",1,1,2,1,1,3,2,20,0,0,6,0,0.0,0
392,0,train,Give me the entity in Italy.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy> . },"```sparql
SELECT ?entity WHERE {
  ?entity <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>.
}
```",1,1,2,1,1,2,3,28,13092,0,0,1.0,1.0,1.0
328,0,train,Give me the awardee of Order of Suvorov.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Order_of_Suvorov> . },"```sparql
SELECT ?awardee WHERE {
  ?awardee <http://dbpedia.org/ontology/awarded> <http://dbpedia.org/resource/Order_of_Suvorov> .
}
```",1,1,2,1,1,3,3,71,0,0,22,0,0.0,0
487,3,train,Give me the administration of Patricia McCoy.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Patricia_McCoy> . },SELECT ?result WHERE { <http://dbpedia.org/resource/Patricia_McCoy> <http://dbpedia.org/ontology/administration> ?result . },1,1,2,1,1,3,2,20,0,0,3,0,0.0,0
9,7,train,"Give me the entity, that is an organisation and an educational institution, in Northern Ireland.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Northern_Ireland> . },"```sparql
SELECT ?result WHERE {
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>.
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>.
  OPTIONAL { ?result <http://dbpedia.org/property/location> ?location. }
  FILTER (
    EXISTS {
      ?location <http://www.w3.org/2000/01/rdf-schema#label> ""Northern Ireland""@en.
    } ||
    EXISTS {
      ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Northern_Ireland>.
    }
  )
}
```",1,3,2,1,1,3,3,71,134,7,0,0.950354609929078,1.0,0.9745454545454546
92,16,train,"Give me the person born, that is an artist, as the actor of Return to Nuke 'Em High Volume 1.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Return_to_Nuke_'Em_High_Volume_1> <http://dbpedia.org/property/starring> ?v1 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"```sparql
SELECT ?person WHERE {
    ?person <http://dbpedia.org/ontology/birth> ?birthEvent .
    ?birthEvent <http://dbpedia.org/ontology/actor> ?actorRole .
    ?actorRole <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Actor> .
    ?person <http://dbpedia.org/ontology/birth> ?filmEvent .
    ?filmEvent <http://dbpedia.org/property/film> <http://dbpedia.org/resource/Return_to_Nuke_%27Em_High_Volume_1> .
    ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist> .
}
```",2,3,3,2,1,3,3,71,0,0,205,0,0.0,0
30,0,train,Give me the native of Paris.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Paris> . },"SELECT ?person WHERE {
  ?person <http://dbpedia.org/property/birthPlace> <http://dbpedia.org/resource/Paris>.
}",1,1,2,1,1,2,2,9,2142,275,2343,0.886222589987588,0.47759197324414715,0.6206896551724138
754,4,train,Give me the reference to Ram Khamhaeng the Great.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Ram Khamhaeng the Great""@en . }","```sparql
SELECT ?reference WHERE {
  <http://dbpedia.org/resource/Ram_Khamhaeng_the_Great> <http://dbpedia.org/ontology/reference> ?reference .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
981,9,train,"Give me the region of the time zone in Salak, North Sumatra.","SELECT ?result WHERE { <http://dbpedia.org/resource/Salak,_North_Sumatra> <http://dbpedia.org/ontology/timeZone> ?v0 . ?result <http://dbpedia.org/property/timeZone> ?v0 . }","SELECT ?region WHERE {
  <http://dbpedia.org/resource/Salak,_North_Sumatra> <http://www.w3.org/2006/time#during> ?timeZone .
  ?timeZone <http://dbpedia.org/ontology/timeZoneRegion> ?region .
}",2,2,3,2,1,3,2,20,0,0,1,0,0.0,0
820,3,train,Give me the award of Scott McCloud.,SELECT ?result WHERE { <http://dbpedia.org/resource/Scott_McCloud> <http://dbpedia.org/property/awards> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Scott_McCloud> <http://dbpedia.org/ontology/award> ?result .
}
```",1,1,2,1,1,3,2,20,0,4,4,0.0,0.0,0
488,6,train,"Who is the father, that is a politician, of Yūki Hideyasu?",SELECT ?result WHERE { <http://dbpedia.org/resource/Yūki_Hideyasu> <http://dbpedia.org/property/father> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Y%C5%ABki_Hideyasu> <http://xmlns.com/foaf/0.1/father> ?result .
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
360,11,train,Give me the reference to the author of Blinded by the Light.,SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v1 . <http://dbpedia.org/resource/Blinded_by_the_Light> <http://dbpedia.org/property/author> ?v1 . },"```sparql
SELECT ?reference WHERE {
  <http://dbpedia.org/resource/Blinded_by_the_Light_(song)> <http://dbpedia.org/ontology/reference> ?reference .
}
```",2,2,3,2,1,2,3,28,0,0,2,0,0.0,0
994,14,train,"Give me the band member of the person born, that is a musical artist, as Donald Maynard Dokken.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ""Donald Maynard Dokken""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . }","```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Don_Dokken> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
  <http://dbpedia.org/resource/Don_Dokken> <http://dbpedia.org/property/bandMember> ?result .
}
```",2,3,3,2,1,3,3,71,0,0,2,0,0.0,0
421,3,train,Who is the awardee of [[#Awards and nominations?,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ""[[#Awards and nominations""@en . }","```sparql
SELECT ?awardee WHERE {
  ?award <http://dbpedia.org/ontology/recipient> ?awardee .
}
```

Note: This query is generic and will return all awardees for any awards in the DBpedia dataset. To narrow it down to a specific award, replace `?award` with the URI of the specific award or add additional conditions to filter by the award's name or other properties.",1,1,2,1,1,2,3,28,0,0,113,0,0.0,0
378,1,train,Give me the war of Joaquín Blake.,SELECT ?result WHERE { <http://dbpedia.org/resource/Joaquín_Blake> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Joaquín_Blake> <http://dbpedia.org/ontology/participatedIn> ?result .
  ?result a <http://dbpedia.org/ontology/MilitaryConflict> .
}
```",1,1,2,1,1,3,3,71,0,0,11,0,0.0,0
617,6,train,Who is the child of Antiochus III the Great?,SELECT ?result WHERE { <http://dbpedia.org/resource/Antiochus_III_the_Great> <http://dbpedia.org/ontology/child> ?result . },"```sparql
SELECT ?child WHERE {
  <http://dbpedia.org/resource/Antiochus_III_the_Great> <http://dbpedia.org/ontology/parent> ?child .
}
```",1,1,2,1,1,3,3,71,0,2,6,0.0,0.0,0
696,6,train,Give me the landmark at elevation of 50 and birth place of Tim Brennan.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/elevation> ""50""^^<http://www.w3.org/2001/XMLSchema#integer> . <http://dbpedia.org/resource/Tim_Brennan> <http://dbpedia.org/ontology/birthPlace> ?result . }","```sparql
# Part 1: Find landmarks at an elevation of 50
SELECT ?landmark WHERE {
    ?landmark <http://dbpedia.org/ontology/elevation> ""50""^^<http://www.w3.org/2001/XMLSchema#float> .
}

UNION

# Part 2: Find the birthplace of Tim Brennan
SELECT ?birthPlace WHERE {
    <http://dbpedia.org/resource/Tim_Brennan> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
92,17,train,Give me the person born as the birth name of Joseph Michael.,SELECT ?result WHERE { <http://dbpedia.org/resource/Joseph_Michael> <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/birthName> ""Joseph Michael"" .
}
```",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
16,5,train,Who is the actor of Unnatural (TV series)?,SELECT ?result WHERE { <http://dbpedia.org/resource/Unnatural_(TV_series)> <http://dbpedia.org/property/starring> ?result . },"```sparql
SELECT ?actor WHERE {
  <http://dbpedia.org/resource/Unnatural_(TV_series)> dbo:castMember ?actor .
  ?actor a dbo:Actor .
}
```",1,1,2,1,1,3,3,71,0,0,5,0,0.0,0
312,6,train,Give me the entity in the birthplace of Giorgio Grigolli.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v1 . <http://dbpedia.org/resource/Giorgio_Grigolli> <http://dbpedia.org/ontology/birthPlace> ?v1 . },"```sparql
SELECT ?entity WHERE {
  <http://dbpedia.org/resource/Giorgio_Grigolli> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person> .
  <http://dbpedia.org/resource/Giorgio_Grigolli> <http://dbpedia.org/property/birthPlace> ?birthPlace .
  ?entity <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?type .
  ?entity <http://dbpedia.org/ontology/location> ?birthPlace .
}
```",2,2,3,2,1,2,2,9,170,1702,12922,0.09081196581196581,0.012985029025358998,0.0227211975407645
617,1,train,Give me the parent of Mieszko II Lambert.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Mieszko_II_Lambert> . },"```sparql
SELECT ?parent WHERE {
  OPTIONAL { <http://dbpedia.org/resource/Mieszko_II_Lambert> <http://dbpedia.org/ontology/father> ?parent . }
  OPTIONAL { <http://dbpedia.org/resource/Mieszko_II_Lambert> <http://dbpedia.org/ontology/mother> ?parent . }
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
427,11,train,Give me the reference to the name of Italian People's Party (1994).,SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v0 . <http://dbpedia.org/resource/Italian_People's_Party_(1994)> <http://xmlns.com/foaf/0.1/name> ?v0 . },"```sparql
SELECT ?reference WHERE {
  <http://dbpedia.org/resource/Italian_People%27s_Party_(1994)> <http://www.w3.org/2000/01/rdf-schema#label> ?name .
  OPTIONAL { ?name <http://xmlns.com/foaf/0.1/page> ?reference . }
}
```",2,2,3,2,1,3,3,71,0,0,2,0,0.0,0
92,7,train,Give me the birth name of Joseph Michael.,SELECT ?result WHERE { <http://dbpedia.org/resource/Joseph_Michael> <http://dbpedia.org/property/birthName> ?result . },"```sparql
SELECT ?birthName WHERE {
  <http://dbpedia.org/resource/Joseph_Michael> <http://dbpedia.org/ontology/birthName> ?birthName .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
659,2,train,Give me the military force of Napoleonic Wars.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Napoleonic_Wars> . },"```sparql
SELECT ?result WHERE {
  ?result <http://dbpedia.org/ontology/militaryForce> ?v1 .
  ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
  ?v1 <http://dbpedia.org/property/name> <http://dbpedia.org/resource/Napoleonic_Wars> .
}
```",1,1,2,1,1,3,3,71,0,0,1051,0,0.0,0
392,10,train,"Give me the region of the time zone, that is a sports event, of Aguilar de Segarra.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsEvent>. ?result <http://dbpedia.org/ontology/timeZone> ?v0 . <http://dbpedia.org/resource/Aguilar_de_Segarra> <http://dbpedia.org/ontology/timeZone> ?v0 . },"```sparql
SELECT ?event ?timeZone ?region WHERE {
  ?place rdfs:label ""Aguilar de Segarra""@en .
  ?place dbo:sportEvent ?event .
  ?event dbo:timeZone ?timeZone .
  ?timeZone dbo:region ?region .
}
```",2,3,3,2,1,2,3,28,0,0,49990,0,0.0,0
92,12,train,Give me the associated musical artist of Jim Sheppard and band of Joseph Michael.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Joseph_Michael> . <http://dbpedia.org/resource/Jim_Sheppard> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT ?artist WHERE {
  <http://dbpedia.org/resource/Jim_Sheppard_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?artist .
}

UNION

SELECT ?band WHERE {
  <http://dbpedia.org/resource/Joseph_Michael> <http://dbpedia.org/property/band> ?band .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
378,11,train,Give me the war of the person born as Carl Pontus Gahn.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ""Carl Pontus Gahn""@en . ?v0 <http://dbpedia.org/ontology/battle> ?result . }","```sparql
SELECT ?result WHERE {
  ?person <http://dbpedia.org/ontology/birthName> ""Carl Pontus Gahn"".
  OPTIONAL { ?person <http://dbpedia.org/ontology/commander> ?battle. }
  OPTIONAL { ?person <http://dbpedia.org/property/servedIn> ?army. }
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>.
  FILTER EXISTS {
    ?battle <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Battle> .
    OPTIONAL { ?army <http://dbpedia.org/property/war> ?result . }
  }
}
```",2,2,3,2,1,3,3,71,0,0,12,0,0.0,0
54,9,train,Give me the child of Thinkhaya of Pagan and parent of Thado Minsaw of Prome.,SELECT ?result WHERE { <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?result . },"```sparql
SELECT ?child WHERE {
  ?thinkhaya <http://dbpedia.org/ontology/father> ?child .
  FILTER(?thinkhaya = <http://dbpedia.org/resource/Thinkhaya_of_Pagan>) .

  OPTIONAL { ?thadoMinsaw <http://dbpedia.org/ontology/mother> ?child . }
  OPTIONAL { ?thadoMinsaw <http://dbpedia.org/ontology/father> ?child . }

  FILTER(?thadoMinsaw = <http://dbpedia.org/resource/Thado_Minsaw_of_Prome>)
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
617,11,train,"Give me the child of the child, that is a royalty, of Seleucus II Callinicus.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seleucus_II_Callinicus> . ?result <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
SELECT ?grandchild WHERE {
    ?child <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/Seleucus_II_Callinicus> .
    ?grandchild <http://dbpedia.org/ontology/birthParent> ?child .
    ?grandchild <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
}
```",2,3,3,2,1,3,3,71,0,0,5,0,0.0,0
747,0,train,Give me the person born on 1985-04-29.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthDate> ""1985-04-29""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/birthDate> ""1985-04-29""^^<http://www.w3.org/2001/XMLSchema#date> .
}
```",1,1,2,1,1,3,3,71,30,0,0,1.0,1.0,1.0
318,5,train,Give me the person born in the founding year of Eel Pie Publishing.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthYear> ?v1 . <http://dbpedia.org/resource/Eel_Pie_Publishing> <http://dbpedia.org/ontology/foundingYear> ?v1 . },"```sparql
SELECT ?person WHERE {
  ?eelpie <http://dbpedia.org/ontology/foundingYear> ?foundingYear .
  ?person <http://dbpedia.org/property/birthDate> ?birthDate .
  BIND(YEAR(?birthDate) AS ?birthYear)
  FILTER(?birthYear = ?foundingYear)
}
```",2,2,3,2,1,2,2,9,0,0,2810,0,0.0,0
232,11,train,Give me the child of the person born as John Devon Roland Pertwee.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?result . ?v0 <http://dbpedia.org/property/birthName> ""John Devon Roland Pertwee""@en . }","```sparql
SELECT ?child WHERE {
  <http://dbpedia.org/resource/John_Pertwee> <http://dbpedia.org/ontology/child> ?child .
}
```",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
547,1,train,Give me the resting place of Simon Cadell.,SELECT ?result WHERE { <http://dbpedia.org/resource/Simon_Cadell> <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
SELECT ?restingPlace WHERE {
  <http://dbpedia.org/resource/Simon_Cadell> <http://dbpedia.org/ontology/burialPlace> ?restingPlace .
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
378,7,train,"Give me the war, that is a military conflict and a societal event and an event, of Thomas Trigge.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Thomas_Trigge> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
SELECT ?result WHERE {
  ?result a <http://dbpedia.org/ontology/MilitaryConflict> .
  ?result a <http://dbpedia.org/ontology/SocietalEvent> .
  ?result a <http://www.w3.org/2002/07/owl#Thing> . # Assuming Event is represented as owl:Thing
  <http://dbpedia.org/resource/Thomas_Trigge> <http://dbpedia.org/property/participatedIn> ?result .
}
```",1,4,2,1,1,3,3,71,0,0,7,0,0.0,0
754,6,train,Give me the parent of Loe Thai and parent of May Hnin Thwe-Da.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/May_Hnin_Thwe-Da> . <http://dbpedia.org/resource/Loe_Thai> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
SELECT ?parent WHERE {
  { <http://dbpedia.org/resource/Loe_Thai> <http://dbpedia.org/ontology/father> ?parent . }
  UNION
  { <http://dbpedia.org/resource/May_Hnin_Thwe-Da> <http://dbpedia.org/ontology/father> ?parent . }
}
UNION
SELECT ?parent WHERE {
  { <http://dbpedia.org/resource/Loe_Thai> <http://dbpedia.org/ontology/mother> ?parent . }
  UNION
  { <http://dbpedia.org/resource/May_Hnin_Thwe-Da> <http://dbpedia.org/ontology/mother> ?parent . }
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
767,14,train,Give me the reference to the alter ego of Black Hood.,SELECT ?result WHERE { <http://dbpedia.org/resource/Black_Hood> <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . },"```sparql
SELECT ?alterEgo WHERE {
  <http://dbpedia.org/resource/Black_Hood> <http://dbpedia.org/ontology/alterEgo> ?alterEgo .
}
```",2,2,3,2,1,3,3,71,0,0,98447,0,0.0,0
626,3,train,"Give me the force, that is a military conflict, of Alexander I of Russia.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Alexander_I_of_Russia> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
SELECT ?result WHERE {
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>.
  OPTIONAL { 
    ?result <http://dbpedia.org/property/commander> <http://dbpedia.org/resource/Alexander_I_of_Russia> .
  }
}
```",1,2,2,1,1,3,2,20,25,32193,0,0.0007759637469737414,1.0,0.0015507241881958875
996,9,train,Who is the awardee of the elevation of Lac d'Avoriaz?,SELECT ?result WHERE { <http://dbpedia.org/resource/Lac_d'Avoriaz> <http://dbpedia.org/ontology/elevation> ?v0 . ?result <http://dbpedia.org/property/awards> ?v0 . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Lac_d%27Avoriaz> <http://dbpedia.org/ontology/awardee> ?result .
}
```",2,2,3,2,1,3,2,20,0,0,1,0,0.0,0
827,5,train,"Who is the child, that is a royalty, of Charles Augustus, Hereditary Grand Duke of Saxe-Weimar-Eisenach (1844–1894)?","SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Charles_Augustus,_Hereditary_Grand_Duke_of_Saxe-Weimar-Eisenach_(1844–1894)> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
SELECT ?result WHERE {
  ?child <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/Charles_Augustus,_Hereditary_Grand_Duke_of_Saxe-Weimar-Eisenach_(1844–1894)> .
  ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
  BIND(?child AS ?result)
}
```",1,2,2,1,1,3,2,20,0,0,2,0,0.0,0
528,3,train,"Give me the entity, that is a societal event, in Chile.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Chile> . },"```sparql
SELECT ?event WHERE {
  ?event <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>.
  ?event <http://dbpedia.org/property/location> ?location.
  ?location <http://www.w3.org/2000/01/rdf-schema#label> ""Chile""@en.
}
```",1,2,2,1,1,3,3,71,0,35,34,0.0,0.0,0
392,5,train,"Give me the residence, that is a settlement and Italian, of Sebastiano Bianchetti.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Sebastiano_Bianchetti> <http://dbpedia.org/property/residence> ?result . },"```sparql
SELECT ?result WHERE {
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>.
  ?result <http://dbpedia.org/property/country> <http://dbpedia.org/resource/Italy>.
  <http://dbpedia.org/resource/Sebastiano_Bianchetti> <http://dbpedia.org/property/residence> ?result.
}
```",1,3,2,1,1,2,3,28,0,0,1,0,0.0,0
801,10,train,Give me the associated musical artist of Chris Taylor (music producer) and professional in .,"SELECT ?result WHERE { <http://dbpedia.org/resource/Chris_Taylor_(music_producer)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
SELECT ?artist WHERE {
  <http://dbpedia.org/resource/Chris_Taylor_(music_producer)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?artist .
}
```",2,2,3,1,2,3,3,71,4,3,0,0.5714285714285714,1.0,0.7272727272727273
303,10,train,"Give me the entity in the country, that is a country, of El Valle de Antón.",SELECT ?result WHERE { <http://dbpedia.org/resource/El_Valle_de_Antón> <http://dbpedia.org/ontology/country> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/country> ?v1 . },"```sparql
SELECT ?entity WHERE {
  <http://dbpedia.org/resource/El_Valle_de_Ant%C3%B3n> <http://www.w3.org/2000/01/rdf-schema#seeAlso> ?country .
  ?entity <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country> .
  ?entity <http://www.w3.org/2004/02/skos/core#broader> ?country .
}
```",2,3,3,2,1,2,3,28,0,0,991,0,0.0,0
54,2,train,Give me the predecessor of Ameitta Thiri Maha Dhamma Dewi of Ava.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Ameitta_Thiri_Maha_Dhamma_Dewi_of_Ava> . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Ameitta_Thiri_Maha_Dhamma_Dewi_of_Ava> <http://www.w3.org/2002/07/owl#sameAs>* <http://dbpedia.org/ontology/successor> ?result .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
747,11,train,Give me the person born on the birth date of Pavlo Khudzik.,SELECT ?result WHERE { <http://dbpedia.org/resource/Pavlo_Khudzik> <http://dbpedia.org/ontology/birthDate> ?v0 . ?result <http://dbpedia.org/ontology/birthDate> ?v0 . },"```sparql
SELECT ?person WHERE {
  <http://dbpedia.org/resource/Pavlo_Khudzik> dbo:birthDate ?birthdate .
  ?person dbo:birthDate ?birthdate .
  FILTER(?person != <http://dbpedia.org/resource/Pavlo_Khudzik>)
}
```",2,2,3,2,1,3,3,71,29,0,1,1.0,0.9666666666666667,0.983050847457627
404,16,train,"Who is the child, that is a royalty, of the parent, that is a royalty, of Prince George William of Hanover?",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Prince_George_William_of_Hanover> <http://dbpedia.org/ontology/parent> ?v1 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/child> ?result . },"```sparql
SELECT ?child WHERE {
  # Find the parents of Prince George William of Hanover
  <http://dbpedia.org/resource/Prince_George_William_of_Hanover> <http://dbpedia.org/ontology/parent> ?parent .
  
  # Ensure that the parent is royalty
  ?parent <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .

  # Find children of these parents who are also royalty
  ?parent <http://dbpedia.org/ontology/child> ?child .
  ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
}
```",2,4,3,2,1,3,3,71,3,0,0,1.0,1.0,1.0
421,1,train,Give me the native of Socialist Federal Republic of Yugoslavia.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Socialist_Federal_Republic_of_Yugoslavia> . },"```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Socialist_Federal_Republic_of_Yugoslavia> .
}
```",1,1,2,1,1,2,3,28,5399,0,0,1.0,1.0,1.0
498,5,train,"Give me the band of the band, that is an organisation and a band, of Solace of Requiem.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Solace_of_Requiem> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
SELECT ?result WHERE {
  ?entity <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>.
  ?entity <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>.
  <http://dbpedia.org/resource/Solace_of_Requiem> <http://dbpedia.org/property/band> ?entity.
  OPTIONAL { ?entity <http://dbpedia.org/ontology/memberOf> ?result. }
}
```",2,4,3,2,1,2,2,9,0,0,11,0,0.0,0
427,17,train,"Who is the person born, that is an office holder and a politician, as the birth name of Romano Prodi?",SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/property/birthName> ?v1 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/birthName> ""Romano Prodi"" .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder> .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .
}
```",2,4,3,2,1,3,3,71,0,0,1,0,0.0,0
360,4,train,"Give me the death place, that is a settlement, of Winnie Madikizela-Mandela.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Winnie_Madikizela-Mandela> <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
SELECT ?result WHERE {
  ?deathPlace <http://dbpedia.org/ontology/settlement> ?settlement .
  ?deathPlace <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement> .
  <http://dbpedia.org/resource/Winnie_Madikizela-Mandela> <http://dbpedia.org/property/deathPlace> ?deathPlace .
}
```",1,2,2,1,1,2,3,28,0,0,2,0,0.0,0
547,11,train,Give me the resting place of the child of James Burton (property developer).,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/James_Burton_(property_developer)> <http://dbpedia.org/ontology/child> ?v0 . },"```sparql
SELECT ?child ?restingPlace WHERE {
  <http://dbpedia.org/resource/James_Burton_(property_developer)> :child ?child .
  ?child foaf:deathPlace ?restingPlace .
}
```",2,2,3,2,1,3,3,71,0,0,2,0,0.0,0
617,8,train,"Give me the parent of the father, that is a royalty, of Richeza of Poland, Queen of Hungary.","SELECT ?result WHERE { <http://dbpedia.org/resource/Richeza_of_Poland,_Queen_of_Hungary> <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
SELECT ?parent WHERE {
  ?father <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Richeza_of_Poland,_Queen_of_Hungary> .
  ?father <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
  ?father <http://dbpedia.org/ontology/father> ?parent .
}
```",2,3,3,2,1,3,2,20,0,0,1,0,0.0,0
391,10,train,"Give me the actor of All About the Andersons and native of Compton, California.","SELECT ?result WHERE { <http://dbpedia.org/resource/All_About_the_Andersons> <http://dbpedia.org/property/starring> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Compton,_California> . }","```sparql
SELECT ?person WHERE {
  ?film <http://dbpedia.org/ontology/starring> ?person .
  ?film <http://www.w3.org/2000/01/rdf-schema#label> ""All About the Andersons""@en .
  
  OPTIONAL { 
    ?person <http://dbpedia.org/property/nativePlace> ?place .
    ?place <http://www.w3.org/2000/01/rdf-schema#label> ""Compton, California""@en .
  }
}
```",2,2,3,1,2,3,3,71,1,3,0,0.25,1.0,0.4
994,9,train,Give me the associated musical artist of Red Tide (band) and associated musical artist of S.A. Slayer.,SELECT ?result WHERE { <http://dbpedia.org/resource/S.A._Slayer> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Red_Tide_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT ?artist WHERE {
  { 
    <http://dbpedia.org/resource/Red_Tide_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?artist .
  }
  UNION
  {
    <http://dbpedia.org/resource/S.A._Slayer> <http://dbpedia.org/ontology/associatedMusicalArtist> ?artist .
  }
}
```",2,2,3,1,2,3,3,71,1,9,0,0.1,1.0,0.18181818181818182
547,10,train,Give me the resting place of James Burton (Egyptologist) and resting place of Alan Cunningham.,SELECT ?result WHERE { <http://dbpedia.org/resource/James_Burton_(Egyptologist)> <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Alan_Cunningham> <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
SELECT ?person ?restingPlace WHERE {
  { 
    <http://dbpedia.org/resource/James_Burton_(Egyptologist)> <http://dbpedia.org/ontology/burialPlace> ?restingPlace .
    BIND(<http://dbpedia.org/resource/James_Burton_(Egyptologist)> AS ?person)
  }
  UNION
  {
    <http://dbpedia.org/resource/Alan_Cunningham_(explorer)> <http://dbpedia.org/ontology/burialPlace> ?restingPlace .
    BIND(<http://dbpedia.org/resource/Alan_Cunningham_(explorer)> AS ?person)
  }
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
251,4,train,"Give me the ruling party, that is a political party and an organisation, in Sicily.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Sicily> <http://dbpedia.org/property/leaderParty> ?result . },"```sparql
SELECT ?party WHERE {
  ?party <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty> .
  ?party <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organization> .
  ?party <http://dbpedia.org/property/rulingParty> <http://dbpedia.org/resource/Sicily> .
}
```",1,3,2,1,1,2,3,28,0,0,1,0,0.0,0
915,0,train,"Give me the resident of Springfield, Illinois.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Springfield,_Illinois> . }","```sparql
SELECT ?resident WHERE {
  ?resident <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Springfield,_Illinois>.
}
```",1,1,2,1,1,3,2,20,15,0,0,1.0,1.0,1.0
294,9,train,"Give me the resting place of Edwin A. Keeble and entity in Nashville, Tennessee.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Nashville,_Tennessee> . <http://dbpedia.org/resource/Edwin_A._Keeble> <http://dbpedia.org/ontology/restingPlace> ?result . }","```sparql
# Query to find the resting place of Edwin A. Keeble
SELECT ?restingPlace WHERE {
  <http://dbpedia.org/resource/Edwin_A._Keeble> <http://dbpedia.org/ontology/burialPlace> ?restingPlace .
}

# Query to find entities in Nashville, Tennessee
SELECT ?entity WHERE {
  ?entity <http://www.w3.org/2000/01/rdf-schema#seeAlso> <http://dbpedia.org/resource/Nashville,_Tennessee> .
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
9,5,train,"Give me the reference, that is an award, to Royal Medals.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?result <http://xmlns.com/foaf/0.1/name> ""Royal Medals""@en . }","```sparql
SELECT ?result WHERE {
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award> .
  ?result <http://dbpedia.org/property/reference> <http://dbpedia.org/resource/Royal_Medals> .
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
754,1,train,Give me the parent of May Hnin Thwe-Da.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/May_Hnin_Thwe-Da> . },"```sparql
SELECT ?parent WHERE {
  OPTIONAL { <http://dbpedia.org/resource/May_Hnin_Thwe-Da> <http://dbpedia.org/ontology/father> ?parent . }
  UNION
  OPTIONAL { <http://dbpedia.org/resource/May_Hnin_Thwe-Da> <http://dbpedia.org/ontology/mother> ?parent . }
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
77,7,train,Give me the war of the awardee of Golden Weapon for Bravery.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Golden_Weapon_for_Bravery> . },"```sparql
SELECT ?war WHERE {
  ?person <http://dbpedia.org/ontology/award> <http://dbpedia.org/resource/Golden_Weapon_for_Bravery>.
  ?person <http://dbpedia.org/ontology/battle> ?war.
}
```",2,2,3,2,1,3,2,20,22,17,0,0.5641025641025641,1.0,0.7213114754098361
142,3,train,Give me the actor of Papa wa Newscaster.,SELECT ?result WHERE { <http://dbpedia.org/resource/Papa_wa_Newscaster> <http://dbpedia.org/ontology/starring> ?result . },"```sparql
SELECT ?actor WHERE {
  <http://dbpedia.org/resource/Papa_wa_Newscaster> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>.
  <http://dbpedia.org/resource/Papa_wa_Newscaster> <http://dbpedia.org/ontology/starring> ?actor.
}
```",1,1,2,1,1,2,2,9,0,0,4,0,0.0,0
115,3,train,Who is the awardee of National Order of Scientific Merit?,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/National_Order_of_Scientific_Merit> . },"```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/award> ?award .
  FILTER(CONTAINS(LCASE(str(?award)), ""national order of scientific merit""))
}
```",1,1,2,1,1,2,2,9,0,0,9,0,0.0,0
312,4,train,Give me the entity in Italy and entity in Province of Bergamo.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/province> <http://dbpedia.org/resource/Province_of_Bergamo> . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy> . },"```sparql
SELECT ?entity WHERE {
  ?entity <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy> .
  ?entity <http://dbpedia.org/ontology/province> <http://dbpedia.org/resource/Province_of_Bergamo> .
}
```",2,2,3,1,2,2,2,9,228,0,0,1.0,1.0,1.0
754,2,train,Give me the parent of Min Linka.,SELECT ?result WHERE { <http://dbpedia.org/resource/Min_Linka> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
SELECT ?parent WHERE {
  <http://dbpedia.org/resource/Min_Linka> <http://www.w3.org/ns/prov#wasDerivedFrom> ?parent .
}
```",1,1,2,1,1,3,2,20,0,1,2,0.0,0.0,0
365,5,train,"Give me the band of the professional, that is an artist and a musical artist, in Vocalist, musician, songwriter.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/bandMember> ?v1 . ?v1 <http://dbpedia.org/property/occupation> ""Vocalist, musician, songwriter""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
SELECT ?person ?band WHERE {
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist> .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
  {
    ?person <http://dbpedia.org/property/profession> <http://dbpedia.org/resource/Vocalist> .
    UNION
    ?person <http://dbpedia.org/property/profession> <http://dbpedia.org/resource/Musician> .
    UNION
    ?person <http://dbpedia.org/property/profession> <http://dbpedia.org/resource/Songwriter> .
  }
  ?person <http://dbpedia.org/ontology/band> ?band .
}
```",2,4,3,2,1,2,2,9,0,0,2,0,0.0,0
44,4,train,Give me the band member of Undertow (band) and band member of Sledgeback.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Undertow_(band)> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Sledgeback> . },"```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/Undertow_(band)> .
  ?person <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/Sledgeback> .
}
```",2,2,3,1,2,2,2,9,0,0,1,0,0.0,0
528,14,train,Give me the force of the person born as Narciso Campero Leyes.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ""Narciso Campero Leyes""@en . ?result <http://dbpedia.org/ontology/commander> ?v1 . }","```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Narciso_Campero_Leyes> <http://dbpedia.org/ontology/militaryForce> ?result .
}
```",2,2,3,2,1,3,3,71,0,0,4,0,0.0,0
994,8,train,"Who is the person born, that is a musical artist, as Donald Maynard Dokken?","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/birthName> ""Donald Maynard Dokken""@en . }","```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/birthName> ""Donald Maynard Dokken"" .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
435,10,train,Give me the region of the time zone in Bombali Shebora Chiefdom.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/timeZone> ?v0 . <http://dbpedia.org/resource/Bombali_Shebora_Chiefdom> <http://dbpedia.org/ontology/timeZone> ?v0 . },"```sparql
SELECT ?region WHERE {
  ?chiefdom <http://dbpedia.org/ontology/timeZone> ?timeZone .
  ?timeZone <http://www.w3.org/2000/01/rdf-schema#seeAlso> ?region .
  FILTER(CONTAINS(LCASE(STR(?chiefdom)), ""bombali shebora chiefdom""))
}
```",2,2,3,2,1,2,3,28,0,0,2484,0,0.0,0
996,4,train,Who is the native of Palestine (region)?,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Palestine_(region)> . },"```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/nativePlace> <http://dbpedia.org/resource/Palestine_(region)> .
}
```",1,1,2,1,1,3,2,20,0,0,47,0,0.0,0
365,2,train,"Give me the professional, that is an artist and a musical artist, in Vocalist, musician, songwriter.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Vocalist, musician, songwriter""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
SELECT ?result WHERE {
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>.
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>.
  ?result <http://purl.org/dc/terms/profession> ""Vocalist, musician, songwriter"" .
}
```",1,3,2,1,1,2,2,9,0,0,4,0,0.0,0
314,7,train,Give me the person deceased at Madrid and commander in Spanish Civil War.,SELECT ?result WHERE { <http://dbpedia.org/resource/Spanish_Civil_War> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/restingPlace> <http://dbpedia.org/resource/Madrid> . },"```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/property/deathPlace> <http://dbpedia.org/resource/Madrid> .
  ?person <http://dbpedia.org/ontology/commander> ?event .
  ?event <http://www.w3.org/2000/01/rdf-schema#label> ""Spanish Civil War""@en .
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
232,7,train,"Give me the native, that is a politician and an office holder, of France.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/France> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
SELECT ?person WHERE {
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder> .
  ?person <http://dbpedia.org/property/nationality> <http://dbpedia.org/resource/France> .
}
```",1,3,2,1,1,3,3,71,140,45,130,0.7567567567567568,0.5185185185185185,0.6153846153846154
547,9,train,Give me the resting place of James Burton (Egyptologist) and resting place of Simon Cadell.,SELECT ?result WHERE { <http://dbpedia.org/resource/Simon_Cadell> <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/James_Burton_(Egyptologist)> <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
SELECT ?person ?name ?restingPlace WHERE {
  VALUES (?person ?name) { 
    (dbpedia:James_Burton_(Egyptologist) ""James Burton (Egyptologist)"") 
    (dbpedia:Simon_Cadell ""Simon Cadell"")
  }
  
  ?person rdfs:label ?name .
  OPTIONAL { ?person dbo:finalRestingPlace ?restingPlace . }
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
429,2,train,Who is the father of Martha Johnson Patterson?,SELECT ?result WHERE { <http://dbpedia.org/resource/Martha_Johnson_Patterson> <http://dbpedia.org/property/father> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Martha_Johnson_Patterson> <http://dbpedia.org/ontology/father> ?result .
}
```",1,1,2,1,1,2,2,9,0,0,1,0,0.0,0
328,9,train,Give me the awardee of Order of Suvorov and commander in Eastern Front (World War II).,SELECT ?result WHERE { <http://dbpedia.org/resource/Eastern_Front_(World_War_II)> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Order_of_Suvorov> . },"```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/awardee> <http://dbpedia.org/resource/Order_of_Suvorov> .
  ?person <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Eastern_Front_(World_War_II)> .
}
```",2,2,3,1,2,3,3,71,0,0,2,0,0.0,0
747,15,train,"Give me the birth date of the person decedent, that is an athlete and a soccer player, at Zolotonosha.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthDate> ?result . ?v1 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Zolotonosha> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. },"```sparql
SELECT ?birthDate WHERE {
  ?person <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Zolotonosha>;
          <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>;
          <http://dbpedia.org/ontology/sport> <http://dbpedia.org/resource/Soccer>;
          <http://dbpedia.org/ontology/birthDate> ?birthDate.
}
```",2,4,3,2,1,3,3,71,0,0,1,0,0.0,0
435,6,train,Give me the territory administered from Reykjavík and region of Greenwich Mean Time.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Reykjavík> . ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Greenwich_Mean_Time> . },"```sparql
SELECT ?territory WHERE {
  ?territory <http://dbpedia.org/ontology/administrativeCapital> <http://dbpedia.org/resource/Reykjavík>.
  ?territory <http://dbpedia.org/ontology/timeZone> ""GMT"" .
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
339,2,train,Who is the predecessor of Frederick VIII of Denmark?,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Frederick_VIII_of_Denmark> . },SELECT ?result WHERE { <http://dbpedia.org/resource/Frederick_VIII_of_Denmark> <http://dbpedia.org/ontology/predecessor> ?result . },1,1,2,1,1,3,2,20,1,0,0,1.0,1.0,1.0
142,2,train,Give me the region of Japan Standard Time.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Japan_Standard_Time> . },"```sparql
SELECT ?region WHERE {
  <http://dbpedia.org/resource/Japan_Standard_Time> <http://dbpedia.org/ontology/timeZone> ?tz .
  ?tz <http://www.w3.org/2006/vcard/ns#hasAddress> ?address .
  ?address <http://www.w3.org/2006/vcard/ns#locality> ?region .
}
```",1,1,2,1,1,2,2,9,0,0,2255,0,0.0,0
747,16,train,"Who is the writer of the work, that is a song, of Amba Shepherd?",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v1 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Amba_Shepherd> . ?v1 <http://dbpedia.org/property/writer> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Amba_Shepherd> <http://dbpedia.org/ontology/writer> ?result .
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song> .
}
```",2,3,3,2,1,3,3,71,0,0,3,0,0.0,0
30,6,train,Give me the professional in the profession of Édouard Alphonse James de Rothschild.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v0 . <http://dbpedia.org/resource/Édouard_Alphonse_James_de_Rothschild> <http://dbpedia.org/property/occupation> ?v0 . },"```sparql
SELECT ?professional WHERE {
  <http://dbpedia.org/resource/Édouard_Alphonse_James_de_Rothschild> <http://dbpedia.org/ontology/profession> ?profession .
  ?professional <http://dbpedia.org/ontology/profession> ?profession .
  FILTER(?professional != <http://dbpedia.org/resource/Édouard_Alphonse_James_de_Rothschild>)
}
```",2,2,3,2,1,2,2,9,0,0,1,0,0.0,0
55,0,train,Give me the band member of Guns N' Roses.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Guns_N'_Roses> . },"```sparql
SELECT ?member WHERE {
  <http://dbpedia.org/resource/Guns_N%27_Roses> <http://dbpedia.org/ontology/member> ?member .
}
```",1,1,2,1,1,2,3,28,0,0,55,0,0.0,0
701,6,train,Give me the child of Ramesses II.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ramesses_II> . },"```sparql
SELECT ?child WHERE {
  <http://dbpedia.org/resource/Ramesses_II> <http://dbpedia.org/ontology/child> ?child .
}
```",1,1,2,1,1,3,3,71,0,0,8,0,0.0,0
827,7,train,"Give me the child of the child, that is a royalty, of Grand Duchess Maria Pavlovna of Russia (1786–1859).",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Grand_Duchess_Maria_Pavlovna_of_Russia_(1786–1859)> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
SELECT ?grandchild WHERE {
  ?parent <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Maria_Pavlovna_of_Russia_(1786-1859)> .
  ?parent <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Human> .
  
  ?child <http://dbpedia.org/property/birthParent> ?parent .
  ?grandchild <http://dbpedia.org/property/birthParent> ?child .
  ?grandchild <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
}
```",2,3,3,2,1,3,2,20,0,0,6,0,0.0,0
528,1,train,Give me the war of Orozimbo Barbosa.,SELECT ?result WHERE { <http://dbpedia.org/resource/Orozimbo_Barbosa> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Orozimbo_Barbosa> <http://dbpedia.org/ontology/participatedIn> ?result .
  ?result a <http://dbpedia.org/ontology/MilitaryConflict> .
}
```",1,1,2,1,1,3,3,71,0,0,9,0,0.0,0
487,10,train,"Give me the person born, that is a soccer player, as the birth name of Phil Scott.",SELECT ?result WHERE { <http://dbpedia.org/resource/Phil_Scott> <http://dbpedia.org/property/birthName> ?v0 . ?result <http://dbpedia.org/property/birthName> ?v0 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. },"```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/birthName> ""Phil Scott"" .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer> .
}
```",2,3,3,2,1,3,2,20,0,0,1,0,0.0,0
303,1,train,Give me the entity in Panama.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Panama> . },"```sparql
SELECT ?entity WHERE {
  ?entity <http://www.w3.org/2002/07/owl#sameAs> <http://dbpedia.org/resource/Panama> .
}
```",1,1,2,1,1,2,3,28,0,0,991,0,0.0,0
492,8,train,"Give me the capital, that is a settlement, of Algeria.",SELECT ?result WHERE { <http://dbpedia.org/resource/Algeria> <http://dbpedia.org/ontology/capital> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
SELECT ?capital WHERE {
  <http://dbpedia.org/resource/Algeria> <http://www.w3.org/2000/01/rdf-schema#seeAlso> ?country.
  ?country <http://dbpedia.org/ontology/capital> ?capital.
  ?capital a <http://dbpedia.org/ontology/Settlement>.
}
```",1,2,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
179,7,train,Give me the person born as the birth name of Sirikit.,SELECT ?result WHERE { <http://dbpedia.org/resource/Sirikit> <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/property/birthName> ""Sirikit"" .
}
```",2,2,3,2,1,3,2,20,0,0,1,0,0.0,0
391,5,train,Who is the spouse of Sherry Hormann?,SELECT ?result WHERE { <http://dbpedia.org/resource/Sherry_Hormann> <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
SELECT ?spouse WHERE {
  <http://dbpedia.org/resource/Sherry_Hormann> <http://dbpedia.org/ontology/spouse> ?spouse .
}
```",1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
963,2,train,Give me the time zone of Herzegovina-Neretva Canton.,SELECT ?result WHERE { <http://dbpedia.org/resource/Herzegovina-Neretva_Canton> <http://dbpedia.org/property/timeZone> ?result . },"SELECT ?timeZone WHERE {
  <http://dbpedia.org/resource/Herzegovina-Neretva_Canton> <http://www.w3.org/2006/time#during> ?timeZone .
}",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
232,14,train,"Give me the native of the residence, that is a settlement and British, of Sylvie Bermann.",SELECT ?result WHERE { <http://dbpedia.org/resource/Sylvie_Bermann> <http://dbpedia.org/property/residence> ?v1 . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
SELECT ?native WHERE {
  ?residence <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> .
  ?residence <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement> .
  <http://dbpedia.org/resource/Sylvie_Bermann> <http://dbpedia.org/property/residence> ?residence .
  ?native <http://dbpedia.org/ontology/nativePlace> ?residence .
}
```",2,4,3,2,1,3,3,71,0,0,9121,0,0.0,0
77,0,train,Give me the war of Alexander Chechenskiy.,SELECT ?result WHERE { <http://dbpedia.org/resource/Alexander_Chechenskiy> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Alexander_Chechenskiy> <http://dbpedia.org/ontology/participatedIn> ?result .
  FILTER (?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>)
}
```",1,1,2,1,1,3,2,20,0,0,9,0,0.0,0
827,8,train,"Give me the father of the child, that is a royalty, of Charles Augustus, Hereditary Grand Duke of Saxe-Weimar-Eisenach (1844–1894).","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Charles_Augustus,_Hereditary_Grand_Duke_of_Saxe-Weimar-Eisenach_(1844–1894)> . }","```sparql
SELECT ?father WHERE {
  ?child <http://dbpedia.org/ontology/father> ?father .
  ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
  ?child <http://dbpedia.org/property/birthDate> ?birthDate .
  FILTER (YEAR(?birthDate) >= 1844 && YEAR(?birthDate) <= 1894)
  <http://dbpedia.org/resource/Charles_Augustus,_Hereditary_Grand_Duke_of_Saxe-Weimar-Eisenach_(1844–1894)> <http://dbpedia.org/ontology/child> ?child .
}
```",2,3,3,2,1,3,2,20,0,0,1,0,0.0,0
115,0,train,Give me the alma mater of Vladimir Cerrón.,SELECT ?result WHERE { <http://dbpedia.org/resource/Vladimir_Cerrón> <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Vladimir_Cerr%C3%B3n> <http://dbpedia.org/ontology/almaMater> ?result .
}
```",1,1,2,1,1,2,2,9,0,0,2,0,0.0,0
16,4,train,Who is the person born as Ted Martin McGinley?,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Ted Martin McGinley""@en . }","```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/birthName> ""Ted Martin McGinley"" .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
44,2,train,Give me the band of John Pettibone.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/John_Pettibone> . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/John_Pettibone> <http://dbpedia.org/ontology/memberOf> ?result .
}
```",1,1,2,1,1,2,2,9,0,0,1,0,0.0,0
427,7,train,Give me the birth name of Romano Prodi.,SELECT ?result WHERE { <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/property/birthName> ?result . },"```sparql
SELECT ?birthName WHERE {
  <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/ontology/birthName> ?birthName .
}
```",1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
488,7,train,"Who is the spouse, that is a royalty, of Tokugawa Masako?",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Tokugawa_Masako> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
SELECT ?spouse WHERE {
  <http://dbpedia.org/resource/Tokugawa_Masako> <http://xmlns.com/foaf/0.1/spouse> ?spouse .
  ?spouse <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
701,17,train,"Give me the father of the commander, that is a royalty, in Battle of Perire.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Battle_of_Perire> <http://dbpedia.org/ontology/commander> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
SELECT ?father WHERE {
  ?battle <http://dbpedia.org/ontology/commander> ?commander .
  ?commander <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
  ?commander <http://dbpedia.org/property/father> ?father .
  FILTER (STR(?battle) = ""Battle of Perire"")
}
```",2,3,3,2,1,3,3,71,0,0,1,0,0.0,0
959,12,train,Give me the manager of 2013 Júbilo Iwata season and native of Japan.,SELECT ?result WHERE { <http://dbpedia.org/resource/2013_Júbilo_Iwata_season> <http://dbpedia.org/ontology/manager> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Japan> . },"```sparql
SELECT ?manager WHERE {
  ?season db:type ""FootballSeason"" ;
          db:name ""2013 Júbilo Iwata season"" .
  ?season db:team ""Júbilo Iwata"" ;
          db:manager ?manager .
  OPTIONAL { ?manager db:nationality <http://dbpedia.org/resource/Japan> . }
  FILTER NOT EXISTS {
    ?manager db:nationality ?otherCountry .
    FILTER (?otherCountry != <http://dbpedia.org/resource/Japan>)
  }
}
```",2,2,3,1,2,3,3,71,0,0,3,0,0.0,0
232,9,train,Give me the actor of Dog Soldiers (film) and child of Jon Pertwee.,SELECT ?result WHERE { <http://dbpedia.org/resource/Dog_Soldiers_(film)> <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/ontology/child> ?result . },"```sparql
SELECT ?actor WHERE {
  <http://dbpedia.org/resource/Dog_Soldiers_(film)> <http://dbpedia.org/ontology/starring> ?actor .
  ?actor <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Jon_Pertwee> .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
617,4,train,"Who is the child, that is a royalty, of Seleucus II Callinicus?",SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seleucus_II_Callinicus> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
SELECT ?result WHERE {
  ?child <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Seleucus_II_Callinicus> .
  ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
  BIND(?child AS ?result)
}
```",1,2,2,1,1,3,3,71,0,0,2,0,0.0,0
294,3,train,"Who is the awardee, that is a politician, of Distinguished Service Medal (U.S. Army)?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Distinguished_Service_Medal_(U.S._Army)> . },"```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/politicalParty> ?party .
  ?person <http://dbpedia.org/property/awards> ?award .
  ?award <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award> ;
         <http://dbpedia.org/ontology/name> ""Distinguished Service Medal (U.S. Army)"" .
}
```",1,2,2,1,1,2,3,28,0,0,11,0,0.0,0
547,16,train,Give me the actor of the show with Emily Richard.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emily_Richard> . ?v1 <http://dbpedia.org/property/starring> ?result . },"```sparql
SELECT ?actor WHERE {
  ?show <http://dbpedia.org/ontology/actor> ?actor .
  ?show <http://dbpedia.org/ontology/knownFor> <http://dbpedia.org/resource/E._Richard>.
}
```",2,2,3,2,1,3,3,71,0,0,22,0,0.0,0
659,6,train,"Give me the war, that is an event and a military conflict, of 1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish).",SELECT ?result WHERE { <http://dbpedia.org/resource/1st_Light_Cavalry_Lancers_Regiment_of_the_Imperial_Guard_(Polish)> <http://dbpedia.org/ontology/battle> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
SELECT ?result WHERE {
    ?result a <http://dbpedia.org/ontology/MilitaryConflict> .
    ?result a <http://dbpedia.org/ontology/Event> .
    <http://dbpedia.org/resource/1st_Light_Cavalry_Lancers_Regiment_of_the_Imperial_Guard_(Polish)> <http://dbpedia.org/property/participatedIn> ?result .
}
```",1,3,2,1,1,3,3,71,0,0,19,0,0.0,0
182,0,train,Give me the war of Mahesh Senanayake.,SELECT ?result WHERE { <http://dbpedia.org/resource/Mahesh_Senanayake> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Mahesh_Senanayake> <http://dbpedia.org/ontology/participatedIn> ?result .
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
}
```",1,1,2,1,1,2,3,28,0,0,2,0,0.0,0
54,14,train,"Give me the predecessor of the child, that is an office holder and a royalty, of Thihapate of Mohnyin.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Thihapate_of_Mohnyin> . ?result <http://dbpedia.org/ontology/successor> ?v1 . },"```sparql
SELECT ?child ?predecessor WHERE {
  ?thihapate dbo:child ?child .
  FILTER(?thihapate = dbpedia:Thihapate_of_Mohnyin) .

  ?child a dbo:OfficeHolder ;
         a dbo:Royalty .

  ?officeHolderPosition dbo:holder ?child ;
                        dbo:predecessor ?predecessor .
}
```",2,4,3,2,1,3,3,71,0,0,1,0,0.0,0
339,8,train,Give me the father of the child of Grand Duchess Elena Vladimirovna of Russia.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Grand_Duchess_Elena_Vladimirovna_of_Russia> <http://dbpedia.org/ontology/child> ?v0 . },"```sparql
SELECT ?child ?father WHERE {
  <http://dbpedia.org/resource/Grand_Duchess_Elena_Vladimirovna_of_Russia> <http://dbpedia.org/ontology/child> ?child .
  ?child <http://dbpedia.org/property/father> ?father .
}
```",2,2,3,2,1,3,2,20,1,3,0,0.25,1.0,0.4
77,10,train,"Who is the mayor of the territory administered, that is an organisation, from Warsaw?",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/property/leader> ?result . ?v0 <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Warsaw> . },"```sparql
SELECT ?mayor WHERE {
  ?organization <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Warsaw> .
  ?organization <http://dbpedia.org/ontology/administers> ?territory .
  ?territory <http://dbpedia.org/ontology/mayor> ?mayor .
}
```",2,3,3,2,1,3,2,20,0,0,8,0,0.0,0
318,3,train,Give me the profession of Robert Xavier Rodriguez.,SELECT ?result WHERE { <http://dbpedia.org/resource/Robert_Xavier_Rodriguez> <http://dbpedia.org/property/occupation> ?result . },"```sparql
SELECT ?profession WHERE {
  <http://dbpedia.org/resource/Robert_Xavier_Rodriguez> <http://dbpedia.org/ontology/profession> ?profession.
}
```",1,1,2,1,1,2,2,9,0,0,2,0,0.0,0
963,7,train,"Give me the entity in the region, that is a country, of Central European Time.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . },"```sparql
SELECT ?entity WHERE {
  ?country <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Central_European_Time>.
  ?region <http://www.w3.org/2000/01/rdf-schema#subClassOf> <http://dbpedia.org/class/yago/Country108069068>.
  ?country <http://www.w3.org/2000/01/rdf-schema#subClassOf> ?region.
  ?entity <http://dbpedia.org/ontology/country> ?country.
}
```",2,3,3,2,1,3,2,20,0,0,173261,0,0.0,0
435,4,train,Give me the time zone in Bombali Shebora Chiefdom.,SELECT ?result WHERE { <http://dbpedia.org/resource/Bombali_Shebora_Chiefdom> <http://dbpedia.org/ontology/timeZone> ?result . },"```sparql
SELECT ?timeZone WHERE {
  ?chiefdom <http://dbpedia.org/ontology/timezone> ?timeZone .
  ?chiefdom <http://www.w3.org/2000/01/rdf-schema#label> ""Bombali Shebora Chiefdom""@en .
}
```",1,1,2,1,1,2,3,28,0,0,1,0,0.0,0
488,9,train,Give me the death place of Tokugawa Ieyasu and birth place of Enomoto Takeaki.,SELECT ?result WHERE { <http://dbpedia.org/resource/Enomoto_Takeaki> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Tokugawa_Ieyasu> <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
SELECT ?entity ?place WHERE {
  { 
    <http://dbpedia.org/resource/Tokugawa_Ieyasu> <http://dbpedia.org/ontology/deathPlace> ?place .
    BIND(""Death Place of Tokugawa Ieyasu"" AS ?entity)
  }
  UNION
  {
    <http://dbpedia.org/resource/Enomoto_Takeaki> <http://dbpedia.org/ontology/birthPlace> ?place .
    BIND(""Birth Place of Enomoto Takeaki"" AS ?entity)
  }
}
```",2,2,3,1,2,3,3,71,1,4,0,0.2,1.0,0.33333333333333337
534,7,train,"Give me the birth place of the child, that is a politician and an office holder, of Desmond FitzGerald (politician).",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Desmond_FitzGerald_(politician)> <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
SELECT ?child ?birthPlace WHERE {
  <http://dbpedia.org/resource/Desmond_FitzGerald_(politician)> dbo:child ?child .
  ?child rdf:type dbo:Politician ;
         dbo:officeHolder true .
  OPTIONAL { ?child dbp:birthPlace ?birthPlace . }
}
```",2,4,3,2,1,3,2,20,0,0,1,0,0.0,0
285,4,train,Give me the award of Stan Lee.,SELECT ?result WHERE { <http://dbpedia.org/resource/Stan_Lee> <http://dbpedia.org/property/awards> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Stan_Lee> <http://dbpedia.org/ontology/award> ?result .
}
```",1,1,2,1,1,3,2,20,0,4,5,0.0,0.0,0
534,2,train,"Who is the native, that is a politician, of Essex?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Essex> . },"```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/East_of_England>.
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>.
}
```",1,2,2,1,1,3,2,20,0,0,89,0,0.0,0
161,14,train,"Give me the commander in the force, that is an event, of Emilio Mola.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Emilio_Mola> . },"```sparql
SELECT ?result WHERE {
  ?event <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Emilio_Mola>.
  ?event <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>.
  BIND(?event AS ?result)
}
```",2,3,3,2,1,3,3,71,0,10,85,0.0,0.0,0
820,0,train,Give me the professional in .,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . }","SELECT ?result WHERE { 
  # The query cannot be completed without specifying an entity or context.
}",1,1,2,1,1,3,2,20,0,0,39640,0,0.0,0
314,4,train,Give me the award of Sergei Makovetsky.,SELECT ?result WHERE { <http://dbpedia.org/resource/Sergei_Makovetsky> <http://dbpedia.org/property/awards> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Sergei_Makovetsky> <http://dbpedia.org/ontology/award> ?result .
}
```",1,1,2,1,1,2,3,28,0,0,1,0,0.0,0
404,17,train,Who is the father of the spouse of Princess Victoria Louise of Prussia?,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?v1 . },"```sparql
SELECT ?father WHERE {
  ?spouse <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia>.
  ?spouse <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Human>.
  ?spouse <http://dbpedia.org/property/father> ?father.
}
```",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
485,6,train,Give me the entity in United Kingdom and birth place of Thomas Warner (poet).,SELECT ?result WHERE { <http://dbpedia.org/resource/Thomas_Warner_(poet)> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . },"```sparql
SELECT ?result WHERE {
  ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>.
  OPTIONAL { 
    <http://dbpedia.org/resource/Thomas_Warner_(poet)> <http://dbpedia.org/property/birthPlace> ?result.
  }
  FILTER EXISTS {
    <http://dbpedia.org/resource/Thomas_Warner_(poet)> <http://dbpedia.org/property/birthPlace> ?result
  }
}
```",2,2,3,1,2,2,3,28,1,0,0,1.0,1.0,1.0
312,3,train,Give me the birthplace of Giorgio Grigolli.,SELECT ?result WHERE { <http://dbpedia.org/resource/Giorgio_Grigolli> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Giorgio_Grigolli> <http://dbpedia.org/ontology/birthPlace> ?result .
}
```",1,1,2,1,1,2,2,9,2,0,0,1.0,1.0,1.0
232,8,train,"Give me the residence, that is a settlement and British, of Sylvie Bermann.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. <http://dbpedia.org/resource/Sylvie_Bermann> <http://dbpedia.org/property/residence> ?result . },"```sparql
SELECT ?result WHERE {
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>.
  ?result <http://dbpedia.org/property/country> <http://dbpedia.org/resource/United_Kingdom>.
  <http://dbpedia.org/resource/Sylvie_Bermann> <http://dbpedia.org/property/residence> ?result.
}
```",1,3,2,1,1,3,3,71,0,0,2,0,0.0,0
747,4,train,Give me the birth date of Pavlo Khudzik.,SELECT ?result WHERE { <http://dbpedia.org/resource/Pavlo_Khudzik> <http://dbpedia.org/ontology/birthDate> ?result . },"```sparql
SELECT ?birthDate WHERE {
  <http://dbpedia.org/resource/Pavlo_Khudzik> <http://dbpedia.org/ontology/birthDate> ?birthDate .
}
```",1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
197,1,train,Give me the birthplace of George Lusztig.,SELECT ?result WHERE { <http://dbpedia.org/resource/George_Lusztig> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?birthPlace WHERE {
  <http://dbpedia.org/resource/George_Lusztig> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
}
```",1,1,2,1,1,2,2,9,2,0,0,1.0,1.0,1.0
312,1,train,Give me the entity in Italy.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy> . },"```sparql
SELECT ?entity WHERE {
  ?entity <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>.
}
```",1,1,2,1,1,2,2,9,13092,0,0,1.0,1.0,1.0
9,17,train,"Give me the nickname of the entity, that is an organisation and an educational institution, in Northern Ireland.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Northern_Ireland> . ?v1 <http://dbpedia.org/property/nickname> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. },"```sparql
SELECT ?entity ?nickname WHERE {
  ?entity <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation> .
  ?entity <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution> .
  ?entity <http://dbpedia.org/property/country> <http://dbpedia.org/resource/Northern_Ireland> .
  OPTIONAL { ?entity <http://dbpedia.org/ontology/nickName> ?nickname . }
}
```",2,4,3,2,1,3,3,71,0,116,5,0.0,0.0,0
16,17,train,Give me the birth name of the alumnus of Ohio State University.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Ohio_State_University> . ?v1 <http://dbpedia.org/property/birthName> ?result . },"SELECT ?alumnus ?birthName WHERE {
  ?alumnus <http://dbpedia.org/ontology/alumniOf> <http://dbpedia.org/resource/Ohio_State_University>.
  OPTIONAL { ?alumnus <http://dbpedia.org/property/birthName> ?birthName. }
}",2,2,3,2,1,3,3,71,0,0,90,0,0.0,0
429,4,train,Give me the country of 77th Ohio Infantry Regiment and administration of Andrew Johnson.,SELECT ?result WHERE { <http://dbpedia.org/resource/77th_Ohio_Infantry_Regiment> <http://dbpedia.org/ontology/country> ?result . ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Andrew_Johnson> . },"```sparql
SELECT ?country WHERE {
  OPTIONAL { <http://dbpedia.org/resource/77th_Ohio_Infantry_Regiment> <http://dbpedia.org/ontology/country> ?country . }
  OPTIONAL { <http://dbpedia.org/resource/Andrew_Johnson> <http://dbpedia.org/ontology/administration> ?administration .
             ?administration <http://dbpedia.org/ontology/country> ?country . }
}
```",2,2,3,1,2,2,2,9,1,1,0,0.5,1.0,0.6666666666666666
360,2,train,Give me the reference to Manfred Mann.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Manfred Mann""@en . }","```sparql
SELECT ?result WHERE {
  ?result <http://dbpedia.org/ontology/reference> <http://dbpedia.org/resource/Manfred_Mann>.
}
```",1,1,2,1,1,2,3,28,0,0,2,0,0.0,0
487,5,train,"Give me the person born, that is a soccer player, as Philip Brian Scott.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Philip Brian Scott""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. }","```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/birthName> ""Philip Brian Scott"" .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer> .
}
```",1,2,2,1,1,3,2,20,0,0,1,0,0.0,0
994,6,train,"Give me the band member, that is a band and a group and an organisation, of Meshuggah.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Meshuggah> . },"```sparql
SELECT ?result WHERE {
  ?result <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/Meshuggah>.
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> (<http://dbpedia.org/ontology/Band> | <http://dbpedia.org/ontology/Organisation>).
}
```",1,4,2,1,1,3,3,71,0,0,6,0,0.0,0
427,8,train,"Who is the person born, that is an office holder and a politician, as Romano Antonio Prodi?","SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Romano Antonio Prodi""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/birthName> ""Romano Antonio Prodi"" .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder> .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .
}
```",1,3,2,1,1,3,3,71,0,0,1,0,0.0,0
747,13,train,Give me the band of the writer of Apollo (Hardwell song).,SELECT ?result WHERE { <http://dbpedia.org/resource/Apollo_(Hardwell_song)> <http://dbpedia.org/property/writer> ?v1 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"SELECT ?band WHERE {
  ?song <http://dbpedia.org/ontology/writtenBy> ?writer .
  ?writer <http://dbpedia.org/property/memberOf> ?band .
  FILTER(STR(?song) = ""Apollo_(Hardwell_song)"")
}",2,2,3,2,1,3,3,71,0,0,13,0,0.0,0
626,9,train,"Give me the force, that is a military conflict, of the commander in Battle of Paris (1814).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> ?v0 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Battle_of_Paris_(1814)> <http://dbpedia.org/ontology/commander> ?v0 . },"```sparql
SELECT ?result WHERE {
  ?battle <http://dbpedia.org/ontology/commander> ?commander .
  ?commander <http://dbpedia.org/ontology/battle> ?result .
  FILTER (?battle = <http://dbpedia.org/resource/Battle_of_Paris_(1814)>)
  FILTER (?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>)
}
```",2,3,3,2,1,3,2,20,0,0,77,0,0.0,0
754,7,train,Give me the parent of the parent of May Hnin Htapi.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/May_Hnin_Htapi> <http://dbpedia.org/ontology/parent> ?v1 . },"```sparql
SELECT ?grandparent WHERE {
  OPTIONAL { <http://dbpedia.org/resource/May_Hnin_Htapi> <http://dbpedia.org/ontology/father> ?parent . }
  UNION
  { <http://dbpedia.org/resource/May_Hnin_Htapi> <http://dbpedia.org/ontology/mother> ?parent . }
  
  OPTIONAL { ?parent <http://dbpedia.org/ontology/father> ?grandparent . }
  UNION
  { ?parent <http://dbpedia.org/ontology/mother> ?grandparent . }
}
```",2,2,3,2,1,3,2,20,0,0,1,0,0.0,0
92,8,train,Give me the person born as Joseph Michael Furney.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Joseph Michael Furney""@en . }","```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/birthName> ""Joseph Michael Furney"" .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
838,5,train,"Give me the band, that is a group, of YU Grupa.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. <http://dbpedia.org/resource/YU_Grupa> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT ?result WHERE {
  ?result <http://dbpedia.org/ontology/group> <http://dbpedia.org/resource/YU_Grupa>.
  ?result a <http://dbpedia.org/ontology/MusicalGroup>.
}
```",1,2,2,1,1,3,2,20,0,0,8,0,0.0,0
659,11,train,"Give me the commander in the force of Arthur Wellesley, 1st Duke of Wellington.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Arthur_Wellesley,_1st_Duke_of_Wellington> . ?v0 <http://dbpedia.org/ontology/commander> ?result . }","```sparql
SELECT ?commander WHERE {
    <http://dbpedia.org/resource/Arthur_Wellesley,_1st_Duke_of_Wellington> <http://dbpedia.org/ontology/commanded> ?force .
    ?force <http://dbpedia.org/ontology/commander> ?commander .
}
```",2,2,3,2,1,3,3,71,0,0,175,0,0.0,0
963,8,train,"Give me the administration of the ruling party, that is a political party, in Sremski Karlovci.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. <http://dbpedia.org/resource/Sremski_Karlovci> <http://dbpedia.org/property/leaderParty> ?v0 . ?result <http://dbpedia.org/property/leaderParty> ?v0 . },"```sparql
SELECT ?result WHERE {
  ?party <http://dbpedia.org/ontology/rulingParty> ?v1 .
  ?v1 <http://dbpedia.org/ontology/administration> ?result .
  ?party a <http://dbpedia.org/ontology/PoliticalParty> .
  ?v1 <http://dbpedia.org/property/location> <http://dbpedia.org/resource/Sremski_Karlovci> .
}
```",2,3,3,2,1,3,2,20,0,0,86,0,0.0,0
77,5,train,Who is the mayor of Congress Poland?,SELECT ?result WHERE { <http://dbpedia.org/resource/Congress_Poland> <http://dbpedia.org/property/leader> ?result . },"```sparql
SELECT ?mayor WHERE {
  ?entity <http://dbpedia.org/ontology/mayor> ?mayor .
  ?entity <http://www.w3.org/2000/01/rdf-schema#label> ""Congress Poland""@en .
}
```",1,1,2,1,1,3,2,20,0,0,2,0,0.0,0
54,17,train,"Give me the child, that is an office holder and a royalty, of the reference to Thihapate of Mohnyin.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/property/father> ?v1 . ?v1 <http://xmlns.com/foaf/0.1/name> ""Thihapate of Mohnyin""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
SELECT ?child WHERE {
  <http://dbpedia.org/resource/Thihapate_of_Mohnyin> <http://www.w3.org/2002/07/owl#sameAs>* <http://dbpedia.org/ontology/parent> ?child .
  ?child a <http://dbpedia.org/ontology/OfficeHolder> ;
         a <http://dbpedia.org/ontology/Royalty> .
}
```",2,4,3,2,1,3,3,71,0,0,1,0,0.0,0
345,8,train,"Give me the team of the person born, that is a soccer player and a soccer manager, on 1978-09-15.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v0 <http://dbpedia.org/ontology/birthDate> ""1978-09-15""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://dbpedia.org/ontology/manager> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. }","```sparql
SELECT ?person ?team WHERE {
  ?person <http://dbpedia.org/ontology/birthDate> ""1978-09-15""^^<http://www.w3.org/2001/XMLSchema#date> .
  ?person <http://dbpedia.org/ontology/profession> <http://dbpedia.org/resource/Soccer_player> .
  ?person <http://dbpedia.org/ontology/profession> <http://dbpedia.org/resource/Soccer_manager> .
  ?person <http://dbpedia.org/ontology/team> ?team .
}
```",2,4,3,2,1,3,2,20,0,0,2,0,0.0,0
251,9,train,Give me the administration of Forza Italia (2013) and death place of Laura Mancinelli.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Forza_Italia_(2013)> . <http://dbpedia.org/resource/Laura_Mancinelli> <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
SELECT ?administration ?deathPlace WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/Forza_Italia_(2013)> <http://dbpedia.org/ontology/administration> ?administration .
  }
  OPTIONAL {
    <http://dbpedia.org/resource/Laura_Mancinelli> <http://dbpedia.org/property/deathPlace> ?deathPlace .
  }
}
```",2,2,3,1,2,2,3,28,1,3,0,0.25,1.0,0.4
404,4,train,"Who is the person born, that is a royalty, as Princess Victoria Louise of Prussia?","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/birthName> ""Princess Victoria Louise of Prussia""@en . }","```sparql
SELECT ?person WHERE {
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>.
  ?person <http://dbpedia.org/property/birthName> ""Princess Victoria Louise of Prussia"" .
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
617,3,train,"Give me the child, that is a royalty, of Boleslaus I, Duke of Bohemia.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Boleslaus_I,_Duke_of_Bohemia> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
SELECT ?child WHERE {
  <http://dbpedia.org/resource/Boleslaus_I,_Duke_of_Bohemia> <http://www.w3.org/2002/07/owl#sameAs>* <http://dbpedia.org/ontology/parent> ?child .
  ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
}
```",1,2,2,1,1,3,2,20,0,0,2,0,0.0,0
92,5,train,Give me the actor of Return to Nuke 'Em High Volume 1.,SELECT ?result WHERE { <http://dbpedia.org/resource/Return_to_Nuke_'Em_High_Volume_1> <http://dbpedia.org/property/starring> ?result . },"```sparql
SELECT ?actor WHERE {
    <http://dbpedia.org/resource/Return_to_Nuke_%27Em_High_Volume_1> dbo:starring ?actor .
}
```",1,1,2,1,1,3,3,71,0,0,19,0,0.0,0
345,7,train,Give me the figure known as the nickname of FC Vaduz.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ?v1 . <http://dbpedia.org/resource/FC_Vaduz> <http://dbpedia.org/property/nickname> ?v1 . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/FC_Vaduz> <http://dbpedia.org/ontology/nickName> ?result .
}
```",2,2,3,2,1,3,2,20,0,0,1,0,0.0,0
959,7,train,"Who is the manager, that is a sports manager, of 1998 Kashima Antlers season?",SELECT ?result WHERE { <http://dbpedia.org/resource/1998_Kashima_Antlers_season> <http://dbpedia.org/ontology/manager> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. },"```sparql
SELECT ?manager WHERE {
  ?season <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/Kashima_Antlers> .
  ?season <http://dbpedia.org/property/year> ""1998""^^<http://www.w3.org/2001/XMLSchema#gYear> .
  ?season <http://dbpedia.org/ontology/manager> ?manager .
  ?manager <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager> .
}
```",1,2,2,1,1,3,3,71,0,0,2,0,0.0,0
485,0,train,Give me the entity in United Kingdom.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . },"```sparql
SELECT ?entity WHERE {
  ?entity <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>.
}
```",1,1,2,1,1,2,3,28,42999,0,0,1.0,1.0,1.0
959,14,train,Give me the manager of the team of Takashi Sekizuka.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Takashi_Sekizuka> . ?v0 <http://dbpedia.org/ontology/manager> ?result . },"```sparql
SELECT ?teamManager WHERE {
  <http://dbpedia.org/resource/Takashi_Sekizuka> <http://dbpedia.org/ontology/team> ?team .
  ?team <http://dbpedia.org/ontology/manager> ?teamManager .
}
```",2,2,3,2,1,3,3,71,0,1,10,0.0,0.0,0
701,15,train,Give me the child of the spouse of Amun-her-khepeshef.,SELECT ?result WHERE { <http://dbpedia.org/resource/Amun-her-khepeshef> <http://dbpedia.org/ontology/spouse> ?v1 . ?v1 <http://dbpedia.org/ontology/child> ?result . },"```sparql
SELECT ?child WHERE {
  <http://dbpedia.org/resource/Amun-her-khepeshef> <http://dbpedia.org/ontology/spouse> ?spouse .
  ?spouse <http://dbpedia.org/ontology/child> ?child .
}
```",2,2,3,2,1,3,3,71,6,0,0,1.0,1.0,1.0
963,6,train,Give me the entity in Serbia and administration of Serbian Progressive Party.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Serbia> . ?result <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Serbian_Progressive_Party> . },"```sparql
SELECT ?entity WHERE {
  ?entity <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Serbia>.
  OPTIONAL { 
    ?entity <http://dbpedia.org/property/administration> <http://dbpedia.org/resource/Serbian_Progressive_Party>.
  }
}
```",2,2,3,1,2,3,2,20,84,5344,0,0.015475313190862197,1.0,0.030478955007256895
528,17,train,Give me the person born as the birth name of Narciso Campero.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Narciso_Campero> <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/property/birthName> ""Narciso Campero"" .
}
```",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
659,7,train,Give me the reference to Rutger Jan Schimmelpenninck.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Rutger Jan Schimmelpenninck""@en . }","```sparql
SELECT ?reference WHERE {
  <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> <http://dbpedia.org/ontology/reference> ?reference .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
421,0,train,Give me the band member of Senidah.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Senidah> . },"```sparql
SELECT ?result WHERE {
  ?entity <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Senidah> .
  ?entity <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
  BIND(?entity AS ?result)
}
```",1,1,2,1,1,2,3,28,0,0,2,0,0.0,0
281,10,train,"Give me the war of New Zealand Army and war of Beauchamp Seymour, 1st Baron Alcester.","SELECT ?result WHERE { <http://dbpedia.org/resource/New_Zealand_Army> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Beauchamp_Seymour,_1st_Baron_Alcester> <http://dbpedia.org/ontology/battle> ?result . }","```sparql
SELECT ?war WHERE {
    ?war <http://dbpedia.org/ontology/battle> ?battle1 .
    ?battle1 <http://dbpedia.org/property/army> <http://dbpedia.org/resource/New_Zealand_Army> .

    ?war <http://dbpedia.org/ontology/battle> ?battle2 .
    ?battle2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Beauchamp_Seymour,_1st_Baron_Alcester> .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
251,7,train,Give me the death place of Laura Mancinelli and location of Battle of Marengo.,SELECT ?result WHERE { <http://dbpedia.org/resource/Battle_of_Marengo> <http://dbpedia.org/ontology/place> ?result . <http://dbpedia.org/resource/Laura_Mancinelli> <http://dbpedia.org/ontology/deathPlace> ?result . },"SELECT ?deathPlace ?battleLocation WHERE {
  OPTIONAL { <http://dbpedia.org/resource/Laura_Mancinelli> <http://dbpedia.org/ontology/deathPlace> ?deathPlace . }
  OPTIONAL { <http://dbpedia.org/resource/Battle_of_Marengo> <http://dbpedia.org/property/location> ?battleLocation . }
}",2,2,3,1,2,2,3,28,1,2,0,0.3333333333333333,1.0,0.5
498,4,train,Give me the band of Malevolent Creation and band of Will Rahmer.,SELECT ?result WHERE { <http://dbpedia.org/resource/Will_Rahmer> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Malevolent_Creation> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT ?band WHERE {
  { <http://dbpedia.org/resource/Malevolent_Creation> <http://dbpedia.org/ontology/memberOf> ?band . }
  UNION
  { <http://dbpedia.org/resource/Will_Rahmer> <http://dbpedia.org/ontology/memberOf> ?band . }
}
```",2,2,3,1,2,2,2,9,0,0,1,0,0.0,0
492,16,train,"Give me the war, that is a military conflict and an event, of the commander in Battle of Verdun.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Battle_of_Verdun> <http://dbpedia.org/ontology/commander> ?v1 . ?v1 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
SELECT ?result WHERE {
  ?battle <http://dbpedia.org/ontology/commander> ?commander .
  ?commander <http://dbpedia.org/ontology/battle> ?result .
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event> .
  FILTER(?battle = <http://dbpedia.org/resource/Battle_of_Verdun>)
}
```",2,4,3,2,1,3,3,71,11,0,0,1.0,1.0,1.0
465,1,train,Give me the administration of Czech Pirate Party.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Czech_Pirate_Party> . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Czech_Pirate_Party> <http://dbpedia.org/ontology/administration> ?result .
}
```",1,1,2,1,1,2,2,9,0,0,2,0,0.0,0
528,0,train,Give me the war of Irene Morales.,SELECT ?result WHERE { <http://dbpedia.org/resource/Irene_Morales> <http://dbpedia.org/ontology/battle> ?result . },SELECT ?result WHERE { <http://dbpedia.org/resource/Irene_Morales> <http://dbpedia.org/ontology/battle> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> . },1,1,2,1,1,3,3,71,6,0,0,1.0,1.0,1.0
487,7,train,Give me the country of the administration of Patricia McCoy.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Patricia_McCoy> . ?v1 <http://dbpedia.org/ontology/country> ?result . },"```sparql
SELECT ?country WHERE {
  <http://dbpedia.org/resource/Patricia_McCoy> <http://dbpedia.org/ontology/administration> ?administration .
  ?administration <http://dbpedia.org/property/country> ?country .
}
```",2,2,3,2,1,3,2,20,0,0,1,0,0.0,0
994,12,train,Give me the band member of Don Dokken and associated musical artist of Red Tide (band).,SELECT ?result WHERE { <http://dbpedia.org/resource/Red_Tide_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Don_Dokken> . },"```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/Don_Dokken> .
  ?person <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/Red_Tide_(band)> .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
465,3,train,"Give me the leader, that is a political party and an organisation, of Chamber of Deputies of the Czech Republic.",SELECT ?result WHERE { <http://dbpedia.org/resource/Chamber_of_Deputies_of_the_Czech_Republic> <http://dbpedia.org/property/leader> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. },"```sparql
SELECT ?result WHERE {
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>.
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organization>.
  <http://dbpedia.org/resource/Chamber_of_Deputies_of_the_Czech_Republic> <http://dbpedia.org/property/leader> ?result.
}
```",1,3,2,1,1,2,2,9,0,0,5,0,0.0,0
659,4,train,"Give me the force of Arthur Wellesley, 1st Duke of Wellington.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Arthur_Wellesley,_1st_Duke_of_Wellington> . }","```sparql
SELECT ?result WHERE {
    <http://dbpedia.org/resource/Arthur_Wellesley,_1st_Duke_of_Wellington> <http://dbpedia.org/ontology/commander> ?result .
}
```",1,1,2,1,1,3,3,71,0,0,52,0,0.0,0
827,1,train,"Give me the father of William Ernest, Grand Duke of Saxe-Weimar-Eisenach.","SELECT ?result WHERE { <http://dbpedia.org/resource/William_Ernest,_Grand_Duke_of_Saxe-Weimar-Eisenach> <http://dbpedia.org/property/father> ?result . }","```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/William_Ernest,_Grand_Duke_of_Saxe-Weimar-Eisenach> dbo:father ?result .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
465,4,train,Give me the death place of Jiřina Štěpničková and administration of Czech Pirate Party.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Czech_Pirate_Party> . <http://dbpedia.org/resource/Jiřina_Štěpničková> <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
SELECT ?deathPlace ?administration WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/Jiřina_Štěpničková> dbo:deathPlace ?deathPlace .
  }
  OPTIONAL {
    <http://dbpedia.org/resource/Czech_Pirate_Party> dbo:headquarters ?administration .
  }
}
```",2,2,3,1,2,2,2,9,1,1,0,0.5,1.0,0.6666666666666666
492,17,train,"Give me the capital, that is a settlement, of the country of Khemis Miliana District.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Khemis_Miliana_District> <http://dbpedia.org/ontology/country> ?v1 . ?v1 <http://dbpedia.org/ontology/capital> ?result . },"```sparql
SELECT ?capital WHERE {
  ?district <http://dbpedia.org/ontology/country> ?country .
  ?country <http://dbpedia.org/ontology/administrativeCapital> ?capital .
  ?district <http://www.w3.org/2000/01/rdf-schema#label> ""Khemis Miliana District""@en .
  ?capital <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement> .
}
```",2,3,3,2,1,3,3,71,0,0,1,0,0.0,0
427,1,train,Give me the party of Giulio Andreotti.,SELECT ?result WHERE { <http://dbpedia.org/resource/Giulio_Andreotti> <http://dbpedia.org/ontology/party> ?result . },"SELECT ?result WHERE { 
  <http://dbpedia.org/resource/Giulio_Andreotti> <http://dbpedia.org/ontology/party> ?result . 
}",1,1,2,1,1,3,3,71,5,0,0,1.0,1.0,1.0
161,12,train,Give me the commander in Biscay Campaign and military force of Spanish Civil War.,SELECT ?result WHERE { <http://dbpedia.org/resource/Biscay_Campaign> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . },"```sparql
SELECT ?commander WHERE {
  # Find commanders in the Biscay Campaign
  <http://dbpedia.org/resource/Biscay_Campaign> <http://dbpedia.org/ontology/commander> ?commander .
  
  # Ensure the commander is also associated with a military force during the Spanish Civil War
  ?commander <http://dbpedia.org/ontology/militaryForce> ?militaryForce .
  ?militaryForce <http://dbpedia.org/ontology/event> <http://dbpedia.org/resource/Spanish_Civil_War> .
}
```",2,2,3,1,2,3,3,71,0,0,3,0,0.0,0
994,13,train,"Give me the associated musical artist of the band member, that is a band and a group and an organisation, of Meshuggah.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Meshuggah> . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. },"```sparql
SELECT ?member ?associatedArtist WHERE {
  ?member <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/Meshuggah> .
  ?member <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?type .
  FILTER (?type IN (<http://dbpedia.org/ontology/Band>, <http://dbpedia.org/ontology/Group>, <http://dbpedia.org/ontology/Organisation>)).
  ?member <http://dbpedia.org/property/associatedMusicalArtist> ?associatedArtist .
}
```",2,5,3,2,1,3,3,71,0,0,33,0,0.0,0
30,1,train,"Give me the professional in Financier, businessman, vineyard owner, art collector, racehorse owner/breeder.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Financier, businessman, vineyard owner, art collector, racehorse owner/breeder""@en . }","```sparql
SELECT ?person WHERE {
  VALUES ?occupation { 
    <http://dbpedia.org/ontology/Financier> 
    <http://dbpedia.org/ontology/Businessman> 
    <http://dbpedia.org/ontology/VineyardOwner> 
    <http://dbpedia.org/ontology/ArtCollector> 
    <http://dbpedia.org/ontology/RacehorseOwner>
  }
  ?person <http://dbpedia.org/property/knownFor> ?occupation .
}
```",1,1,2,1,1,2,2,9,0,0,1,0,0.0,0
427,0,train,Give me the reference to Partito Popolare Italiano.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Partito Popolare Italiano""@en . }","```sparql
SELECT ?subject WHERE {
  ?subject <http://dbpedia.org/ontology/reference> <http://dbpedia.org/resource/Partito_Popolare_Italiano>.
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
404,1,train,Give me the parent of Prince Ernest Augustus of Hanover (born 1914).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Prince_Ernest_Augustus_of_Hanover_(born_1914)> . },"```sparql
SELECT ?parent WHERE {
    <http://dbpedia.org/resource/Prince_Ernest_Augustus_of_Hanover_(born_1914)> <http://dbpedia.org/ontology/birthParent> ?parent .
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
659,13,train,"Give me the commander in the war, that is an event and a military conflict, of 1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish).",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/1st_Light_Cavalry_Lancers_Regiment_of_the_Imperial_Guard_(Polish)> <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT ?commander WHERE {
    ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>.
    ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>.
    <http://dbpedia.org/resource/1st_Light_Cavalry_Lancers_Regiment_of_the_Imperial_Guard_(Polish)> <http://dbpedia.org/property/battle> ?war.
    ?war <http://dbpedia.org/ontology/commander> ?commander.
}
```",2,4,3,2,1,3,3,71,0,0,130,0,0.0,0
498,0,train,Give me the band of Malevolent Creation.,SELECT ?result WHERE { <http://dbpedia.org/resource/Malevolent_Creation> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Malevolent_Creation> <http://dbpedia.org/ontology/member> ?result .
}
```",1,1,2,1,1,2,2,9,0,0,8,0,0.0,0
996,10,train,Give me the award of the native of Palestine (region).,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Palestine_(region)> . ?v0 <http://dbpedia.org/property/awards> ?result . },"```sparql
SELECT ?person ?award WHERE {
  ?person <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Palestine_(region)> .
  OPTIONAL { ?person <http://dbpedia.org/ontology/award> ?award . }
}
```",2,2,3,2,1,3,2,20,0,4,14,0.0,0.0,0
959,10,train,Give me the manager of 2013 Júbilo Iwata season and member of University of Tsukuba.,SELECT ?result WHERE { <http://dbpedia.org/resource/2013_Júbilo_Iwata_season> <http://dbpedia.org/ontology/manager> ?result . ?result <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/University_of_Tsukuba> . },"```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/Júbilo_Iwata> .
  ?person <http://dbpedia.org/property/seasonManaged> ""2013""^^xsd:integer .
  ?person <http://dbpedia.org/ontology/alumniOf> <http://dbpedia.org/resource/University_of_Tsukuba> .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
92,13,train,"Give me the associated musical artist of the person born, that is an artist, as Jim Sheppard.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/property/birthName> ""Jim Sheppard""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
SELECT ?associatedArtist WHERE {
  ?person <http://dbpedia.org/ontology/birthName> ""Jim Sheppard"" .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist> .
  OPTIONAL { ?person <http://dbpedia.org/property/associatedMusicalArtist> ?associatedArtist . }
}
```",2,3,3,2,1,3,3,71,0,0,2,0,0.0,0
197,5,train,Give me the birthplace of the member of FC Politehnica Timișoara.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/FC_Politehnica_Timișoara> . ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?member ?birthPlace WHERE {
  ?member <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/FC_Politehnica_Timișoara> .
  ?member <http://dbpedia.org/property/birthPlace> ?birthPlace .
}
```",2,2,3,2,1,2,2,9,109,279,62,0.2809278350515464,0.6374269005847953,0.38998211091234347
981,1,train,Give me the birth place of Novia Indriani Mamuaja.,SELECT ?result WHERE { <http://dbpedia.org/resource/Novia_Indriani_Mamuaja> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Novia_Indriani_Mamuaja> <http://dbpedia.org/ontology/birthPlace> ?result .
}
```",1,1,2,1,1,3,2,20,2,0,0,1.0,1.0,1.0
534,6,train,Give me the headquarter of Royal Dublin Society and birth place of Garret FitzGerald.,SELECT ?result WHERE { <http://dbpedia.org/resource/Garret_FitzGerald> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Royal_Dublin_Society> <http://dbpedia.org/ontology/headquarter> ?result . },"SELECT ?headquarters ?birthPlace WHERE {
  <http://dbpedia.org/resource/Royal_Dublin_Society> <http://dbpedia.org/ontology/headquarter> ?headquarters .
  <http://dbpedia.org/resource/Garret_FitzGerald> <http://dbpedia.org/property/birthPlace> ?birthPlace .
}",2,2,3,1,2,3,2,20,1,3,0,0.25,1.0,0.4
783,0,train,Give me the associated musical artist of Appietus.,SELECT ?result WHERE { <http://dbpedia.org/resource/Appietus> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Appietus> <http://dbpedia.org/ontology/associatedBand> ?result .
}
```",1,1,2,1,1,3,2,20,15,0,0,1.0,1.0,1.0
963,10,train,"Give me the ruling party, that is a political party, in the location for 21205.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/leaderParty> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v0 <http://dbpedia.org/ontology/postalCode> ""21205"" . }","```sparql
SELECT ?rulingParty WHERE {
  ?location <http://dbpedia.org/ontology/postalCode> ""21205"" .
  ?location <http://dbpedia.org/ontology/rulingParty> ?rulingParty .
  FILTER (?rulingParty <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>)
}
```",2,3,3,2,1,3,2,20,0,0,1,0,0.0,0
427,15,train,Give me the name of the party of Michele Pinto.,SELECT ?result WHERE { <http://dbpedia.org/resource/Michele_Pinto> <http://dbpedia.org/ontology/party> ?v1 . ?v1 <http://xmlns.com/foaf/0.1/name> ?result . },"```sparql
SELECT ?partyName WHERE {
  <http://dbpedia.org/resource/Michele_Pinto> <http://dbpedia.org/ontology/party> ?party .
  ?party rdfs:label ?partyName .
  FILTER (lang(?partyName) = 'en')
}
```",2,2,3,2,1,3,3,71,0,2,4,0.0,0.0,0
981,0,train,Give me the entity in Indonesia.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Indonesia> . },"```sparql
SELECT ?entity WHERE {
  ?entity <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Indonesia> .
}
```",1,1,2,1,1,3,2,20,2949,0,0,1.0,1.0,1.0
360,6,train,Give me the writer of The Roaring Silence and native of Johannesburg.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Johannesburg> . <http://dbpedia.org/resource/The_Roaring_Silence> <http://dbpedia.org/property/writer> ?result . },"```sparql
SELECT ?writer WHERE {
  ?book <http://dbpedia.org/ontology/author> ?writer .
  ?book <http://dbpedia.org/property/title> ""The Roaring Silence"" .
  ?writer <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Johannesburg> .
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
492,6,train,"Give me the war, that is a military conflict and an event, of Frédéric-Georges Herr.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Frédéric-Georges_Herr> <http://dbpedia.org/ontology/battle> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
SELECT ?result WHERE {
  ?result a <http://dbpedia.org/ontology/MilitaryConflict> .
  ?result a <http://dbpedia.org/ontology/Event> .
  OPTIONAL { <http://dbpedia.org/resource/Frédéric-Georges_Herr> <http://dbpedia.org/property/participatedIn> ?result . }
  OPTIONAL { <http://dbpedia.org/resource/Frédéric-Georges_Herr> <http://dbpedia.org/ontology/battle> ?result . }
}
```",1,3,2,1,1,3,3,71,1,18712,0,5.343878587078502e-05,1.0,0.00010687186063909372
712,0,train,Give me the capital of South Russia (1919–1920).,SELECT ?result WHERE { <http://dbpedia.org/resource/South_Russia_(1919–1920)> <http://dbpedia.org/ontology/capital> ?result . },"SELECT ?capital WHERE {
  ?southRussia <http://dbpedia.org/ontology/name> ""South Russia (1919–1920)"" .
  ?southRussia <http://www.w3.org/2004/02/skos/core#prefLabel> ?label .
  FILTER(CONTAINS(LCASE(?label), ""south russia""))
  ?southRussia <http://dbpedia.org/ontology/capital> ?capital .
}",1,1,2,1,1,3,2,20,0,0,3,0,0.0,0
392,4,train,"Give me the time zone, that is a sports event, of Aguilar de Segarra.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsEvent>. <http://dbpedia.org/resource/Aguilar_de_Segarra> <http://dbpedia.org/ontology/timeZone> ?result . },SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsEvent>. <http://dbpedia.org/resource/Aguilar_de_Segarra> <http://dbpedia.org/property/timeZone> ?result . },1,2,2,1,1,2,3,28,0,0,1,0,0.0,0
617,9,train,Give me the spouse of Laodice IV and child of Antiochus III the Great.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Antiochus_III_the_Great> . <http://dbpedia.org/resource/Laodice_IV> <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Laodice_IV>.
  ?person <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/Antiochus_III_the_Great>.
}
```",2,2,3,1,2,3,3,71,0,0,3,0,0.0,0
378,6,train,Who is the commander in Peninsular War?,SELECT ?result WHERE { <http://dbpedia.org/resource/Peninsular_War> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Peninsular_War> <http://dbpedia.org/ontology/commander> ?result .
}
```",1,1,2,1,1,3,3,71,37,0,0,1.0,1.0,1.0
281,4,train,Who is the awardee of Knight Grand Cross of the Order of the Bath?,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_the_Bath> . },"```sparql
SELECT ?person WHERE {
  ?person db:award <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_the_Bath> .
}
```",1,1,2,1,1,3,3,71,0,0,558,0,0.0,0
959,8,train,Give me the team of Takashi Sekizuka.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Takashi_Sekizuka> . },"```sparql
SELECT ?team WHERE {
  <http://dbpedia.org/resource/Takashi_Sekizuka> <http://dbpedia.org/ontology/team> ?team .
}
```",1,1,2,1,1,3,3,71,0,3,10,0.0,0.0,0
547,7,train,Give me the award of Gerald Graham.,SELECT ?result WHERE { <http://dbpedia.org/resource/Gerald_Graham> <http://dbpedia.org/property/awards> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Gerald_Graham> <http://dbpedia.org/ontology/receivedAward> ?result .
}
```",1,1,2,1,1,3,3,71,0,0,5,0,0.0,0
838,2,train,"Give me the band, that is a band and a group, of Žika Jelić.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Žika_Jelić> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Žika_Jelić> <http://dbpedia.org/ontology/memberOf> ?result .
  ?result a <http://dbpedia.org/ontology/Band> .
  ?result a <http://dbpedia.org/ontology/Group> .
}
```",1,3,2,1,1,3,2,20,0,0,1,0,0.0,0
378,0,train,Give me the war of Carl Pontus Gahn.,SELECT ?result WHERE { <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/ontology/battle> ?result .
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
}
```",1,1,2,1,1,3,3,71,12,0,0,1.0,1.0,1.0
547,8,train,Give me the awardee of Knight Grand Cross of the Order of St Michael and St George.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_St_Michael_and_St_George> . },"```sparql
SELECT ?awardee WHERE {
  ?awardee dbpedia-owl:award <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_St_Michael_and_St_George> .
}
```",1,1,2,1,1,3,3,71,0,0,61,0,0.0,0
485,3,train,"Give me the region, that is a country, of Western European Time.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Western_European_Time> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
SELECT ?result WHERE {
  ?timeZone <http://dbpedia.org/ontology/country> ?result .
  ?timeZone <http://www.w3.org/2000/01/rdf-schema#label> ""Western European Time""@en .
  ?result a <http://dbpedia.org/class/yago/CountriesByTimeZone100000001> .
}
```",1,2,2,1,1,2,3,28,0,0,6,0,0.0,0
778,6,train,Give me the entity in United States and author of Chroot.,SELECT ?result WHERE { <http://dbpedia.org/resource/Chroot> <http://dbpedia.org/ontology/author> ?result . ?result <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/United_States> . },"```sparql
SELECT ?entity WHERE {
  ?entity <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>.
  ?entity <http://purl.org/dc/terms/creator> <http://dbpedia.org/resource/Chroot_(software)>.
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
617,5,train,"Give me the father, that is a royalty, of Richeza of Poland, Queen of Hungary.","SELECT ?result WHERE { <http://dbpedia.org/resource/Richeza_of_Poland,_Queen_of_Hungary> <http://dbpedia.org/property/father> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","SELECT ?result WHERE { 
  <http://dbpedia.org/resource/Richeza_of_Poland,_Queen_of_Hungary> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Female>. 
  ?v1 <http://dbpedia.org/property/father> ?result. 
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>.
  ?v1 <http://dbpedia.org/resource/Richeza_of_Poland,_Queen_of_Hungary> .
}",1,2,2,1,1,3,2,20,0,0,1,0,0.0,0
959,5,train,"Who is the leader, that is a politician, of 2010 Japanese House of Councillors election?",SELECT ?result WHERE { <http://dbpedia.org/resource/2010_Japanese_House_of_Councillors_election> <http://dbpedia.org/property/leader> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
SELECT ?result WHERE {
    ?event <http://dbpedia.org/ontology/politicalParty> ?party .
    ?party <http://dbpedia.org/property/leader> ?result .
    ?event <http://www.w3.org/2000/01/rdf-schema#label> ""2010 Japanese House of Councillors election"" .
    ?result a <http://dbpedia.org/ontology/Politician> .
}
```",1,2,2,1,1,3,3,71,0,0,9,0,0.0,0
30,2,train,Give me the birthplace of Silvia Cohen.,SELECT ?result WHERE { <http://dbpedia.org/resource/Silvia_Cohen> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Silvia_Cohen> <http://dbpedia.org/ontology/birthPlace> ?result .
}
```",1,1,2,1,1,2,2,9,2,0,0,1.0,1.0,1.0
77,3,train,Who is the awardee of Golden Weapon for Bravery?,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Golden_Weapon_for_Bravery> . },"```sparql
SELECT ?awardee WHERE {
  ?awardee <http://dbpedia.org/ontology/award> <http://dbpedia.org/resource/Golden_Weapon_for_Bravery> .
}
```",1,1,2,1,1,3,2,20,10,3,0,0.7692307692307693,1.0,0.8695652173913044
232,16,train,"Give me the claim to fame, that is a film and a military conflict, of the professional in Actor, narrator and producer.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/occupation> ""Actor, narrator and producer""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/knownFor> ?result . }","```sparql
SELECT ?person ?result WHERE {
  ?person <http://dbpedia.org/ontology/profession> ?profession .
  FILTER (
    EXISTS { ?person <http://dbpedia.org/ontology/profession> <http://dbpedia.org/resource/Actor> . }
    && EXISTS { ?person <http://dbpedia.org/ontology/profession> <http://dbpedia.org/resource/Narrator> . }
    && EXISTS { ?person <http://dbpedia.org/ontology/profession> <http://dbpedia.org/resource/Producer> . }
  )
  ?person <http://dbpedia.org/ontology/knownFor> ?result .
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film> .
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
}
```",2,4,3,2,1,3,3,71,0,0,1,0,0.0,0
281,7,train,"Who is the professional, that is an office holder and a politician, in New Zealand Army?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/New_Zealand_Army> . },"```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/profession> <http://dbpedia.org/resource/New_Zealand_Army>.
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>.
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>.
}
```",1,3,2,1,1,3,3,71,0,0,1,0,0.0,0
747,17,train,Who is the person born as the persona of Shèna?,SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Shèna> <http://xmlns.com/foaf/0.1/givenName> ?v1 . },"```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/birthName> ""Shèna"" .
}
```",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
783,8,train,"Give me the band member of the person born, that is an artist and a musical artist, as Priscilla Opoku-Kwarteng.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://dbpedia.org/property/birthName> ""Priscilla Opoku-Kwarteng""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
SELECT ?bandMember WHERE {
  ?person <http://dbpedia.org/ontology/birthName> ""Priscilla Opoku-Kwarteng"" .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist> .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
  ?person <http://dbpedia.org/property/bandMember> ?bandMember .
}
```",2,4,3,2,1,3,2,20,0,0,7,0,0.0,0
378,9,train,Give me the war of Joaquín Blake and war of Carl Pontus Gahn.,SELECT ?result WHERE { <http://dbpedia.org/resource/Joaquín_Blake> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
SELECT DISTINCT ?war WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/Joaquín_Blake> <http://dbpedia.org/ontology/battle> ?war .
  }
  OPTIONAL { 
    <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/ontology/battle> ?war .
  }
  FILTER (?war != <http://dbpedia.org/resource/Joaquín_Blake>)
  FILTER (?war != <http://dbpedia.org/resource/Carl_Pontus_Gahn>)
}
```",2,2,3,1,2,3,3,71,2,9,0,0.18181818181818182,1.0,0.3076923076923077
391,13,train,"Give me the actor of the claim to fame, that is a work, of Michael Ballhaus.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Michael_Ballhaus> <http://dbpedia.org/ontology/knownFor> ?v1 . },"```sparql
SELECT ?actor WHERE {
  ?work <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/Michael_Ballhaus> .
  ?work <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work> .
  ?work <http://dbpedia.org/ontology/starring> ?actor .
}
```",2,3,3,2,1,3,3,71,0,0,20,0,0.0,0
534,9,train,"Who is the child, that is a politician and an office holder, of the native, that is a politician, of Essex?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Essex> . ?v0 <http://dbpedia.org/ontology/child> ?result . },"```sparql
SELECT ?child WHERE {
  ?politician <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/United_Kingdom> .
  ?politician <http://dbpedia.org/property/placeOfBirth> ?place .
  ?place <http://www.w3.org/2000/01/rdf-schema#label> ""Essex""@en .
  
  ?child <http://dbpedia.org/ontology/familyName> ?familyName .
  ?politician <http://dbpedia.org/ontology/familyName> ?familyName .
  
  ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .
  ?child <http://dbpedia.org/ontology/officeHolder> ?office .
}
```",2,5,3,2,1,3,2,20,0,0,7,0,0.0,0
392,8,train,"Give me the entity in the region, that is a country, of Central European Time.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . },"```sparql
SELECT ?entity WHERE {
  ?region <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>.
  ?cet <http://dbpedia.org/property/timeZone> ""Central European Time"".
  ?cet <http://dbpedia.org/ontology/coversCountry> ?region.
  ?entity <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?region.
}
```",2,3,3,2,1,2,3,28,0,0,173261,0,0.0,0
378,16,train,"Who is the commander in the reference, that is a military conflict, to Peninsular War?","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://xmlns.com/foaf/0.1/name> ""Peninsular War""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","```sparql
SELECT ?commander WHERE {
  ?reference <http://dbpedia.org/ontology/reference> <http://dbpedia.org/resource/Peninsular_War>.
  ?reference <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>.
  ?reference <http://dbpedia.org/ontology/commander> ?commander.
}
```",2,3,3,2,1,3,3,71,0,0,37,0,0.0,0
435,0,train,Give me the territory administered from Reykjavík.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Reykjavík> . },"```sparql
SELECT ?territory WHERE {
  ?territory <http://dbpedia.org/ontology/administrativeUnit> <http://dbpedia.org/resource/Reykjavík>.
}
```",1,1,2,1,1,2,3,28,0,0,2,0,0.0,0
251,10,train,"Give me the administration of the ruling party, that is a political party and an organisation, in Sicily.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/leaderParty> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Sicily> <http://dbpedia.org/property/leaderParty> ?v1 . },"```sparql
SELECT ?party ?admin WHERE {
  ?party <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>.
  ?party <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organization>.
  ?party <http://dbpedia.org/property/location> <http://dbpedia.org/resource/Sicily>.
  OPTIONAL { ?party <http://dbpedia.org/property/administration> ?admin. }
}
```",2,4,3,2,1,2,3,28,0,0,5,0,0.0,0
294,1,train,Give me the resting place of Edwin A. Keeble.,SELECT ?result WHERE { <http://dbpedia.org/resource/Edwin_A._Keeble> <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
SELECT ?restingPlace WHERE {
  <http://dbpedia.org/resource/Edwin_A._Keeble> <http://dbpedia.org/ontology/burialPlace> ?restingPlace .
}
```",1,1,2,1,1,2,3,28,0,0,1,0,0.0,0
392,2,train,Give me the province of Schio.,SELECT ?result WHERE { <http://dbpedia.org/resource/Schio> <http://dbpedia.org/ontology/province> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Schio> <http://dbpedia.org/ontology/province> ?result .
}
```",1,1,2,1,1,2,3,28,1,0,0,1.0,1.0,1.0
994,10,train,Give me the band member of Don Dokken and associated musical artist of S.A. Slayer.,SELECT ?result WHERE { <http://dbpedia.org/resource/S.A._Slayer> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Don_Dokken> . },"```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/Don_Dokken> .
  ?person <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/S.A._Slayer> .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
528,9,train,Give me the war of Orozimbo Barbosa and war of Irene Morales.,SELECT ?result WHERE { <http://dbpedia.org/resource/Orozimbo_Barbosa> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Irene_Morales> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
SELECT ?war WHERE {
  { 
    ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>.
    OPTIONAL { <http://dbpedia.org/resource/Orozimbo_Barbosa> <http://dbpedia.org/property/battle> ?war. }
  } UNION {
    ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>.
    OPTIONAL { <http://dbpedia.org/resource/Irene_Morales> <http://dbpedia.org/property/battle> ?war. }
  }
}
```",2,2,3,1,2,3,3,71,2,32216,0,6.207709975789931e-05,1.0,0.00012414649286157667
994,17,train,"Who is the person born, that is a musical artist, as the persona of Don Dokken?",SELECT ?result WHERE { <http://dbpedia.org/resource/Don_Dokken> <http://xmlns.com/foaf/0.1/givenName> ?v0 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/birthName> ?v0 . },"SELECT ?person WHERE {
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>.
  ?person <http://dbpedia.org/property/birthName> ""Don Dokken"".
}",2,3,3,2,1,3,3,71,0,0,1,0,0.0,0
488,0,train,Give me the birth place of Enomoto Takeaki.,SELECT ?result WHERE { <http://dbpedia.org/resource/Enomoto_Takeaki> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?birthPlace WHERE {
  <http://dbpedia.org/resource/Enomoto_Takeaki> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
}
```",1,1,2,1,1,3,3,71,2,0,0,1.0,1.0,1.0
391,8,train,"Give me the movie, that is a movie and a work and a television show, with Roz Ryan.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Roz_Ryan> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. },"```sparql
SELECT ?result WHERE {
  ?result <http://dbpedia.org/ontology/actor> <http://dbpedia.org/resource/Roz_Ryan> .
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film> .
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work> .
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow> .
}
```",1,4,2,1,1,3,3,71,0,0,1,0,0.0,0
294,11,train,"Give me the entity in the birth place, that is a settlement, of Marion James.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/location> ?v1 . <http://dbpedia.org/resource/Marion_James> <http://dbpedia.org/ontology/birthPlace> ?v1 . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Marion_James> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  ?birthPlace <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement> .
  ?birthPlace ?p ?result .
}
```",2,3,3,2,1,2,3,28,32,959,308,0.03229061553985873,0.09411764705882353,0.04808414725770098
92,1,train,Give me the associated musical artist of Jim Sheppard.,SELECT ?result WHERE { <http://dbpedia.org/resource/Jim_Sheppard> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Jim_Sheppard_(musician)> <http://dbpedia.org/ontology/associatedBand> ?result .
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
92,10,train,Give me the band of Joseph Michael and band member of Nevermore.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Joseph_Michael> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Nevermore> . },"```sparql
# Query to find bands associated with Joseph Michael
SELECT ?band WHERE {
  ?band <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/Joseph_Michael> .
  ?band a <http://dbpedia.org/ontology/Band> .
}

# Filter the results to include only those where he is also a member of Nevermore
SELECT ?band WHERE {
  ?band <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/Joseph_Michael> .
  ?band a <http://dbpedia.org/ontology/Band> .
  <http://dbpedia.org/resource/Nevermore_(band)> <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/Joseph_Michael> .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
392,1,train,Give me the region of Central European Time.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Central_European_Time> . },"```sparql
SELECT ?region WHERE {
  <http://dbpedia.org/resource/Central_European_Time> <http://dbpedia.org/ontology/timeZone> ?region .
}
```",1,1,2,1,1,2,3,28,0,0,49990,0,0.0,0
281,11,train,Give me the war of the awardee of Knight Grand Cross of the Order of the Bath.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_the_Bath> . ?v0 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
SELECT ?war WHERE {
  ?person <http://dbpedia.org/ontology/award> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_the_Bath> .
  ?person <http://dbpedia.org/property/war> ?war .
  ?war a <http://dbpedia.org/ontology/MilitaryConflict> .
}
```",2,2,3,2,1,3,3,71,0,0,450,0,0.0,0
427,16,train,Who is the father of the alumnus of Massachusetts Institute of Technology?,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Massachusetts_Institute_of_Technology> . },"```sparql
SELECT ?person ?father WHERE {
  ?person dbpedia-owl:alumni <http://dbpedia.org/resource/Massachusetts_Institute_of_Technology> .
  OPTIONAL { ?person dbpedia-owl:father ?father . }
}
```",2,2,3,2,1,3,3,71,0,0,12,0,0.0,0
617,0,train,Give me the child of Antiochus III the Great.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Antiochus_III_the_Great> . },"```sparql
SELECT ?child WHERE {
  <http://dbpedia.org/resource/Antiochus_III_the_Great> <http://dbpedia.org/ontology/child> ?child .
}
```",1,1,2,1,1,3,3,71,4,2,1,0.6666666666666666,0.8,0.7272727272727272
161,8,train,"Give me the force, that is an event, of Emilio Mola.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Emilio_Mola> . },"```sparql
SELECT ?result WHERE {
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>.
  <http://dbpedia.org/resource/Emilio_Mola> <http://dbpedia.org/property/relatedTo> ?result.
}
```",1,2,2,1,1,3,3,71,0,0,10,0,0.0,0
838,4,train,"Give me the reference, that is a group and an organisation, to YU Grupa.","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""YU Grupa""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. }","```sparql
SELECT ?result WHERE {
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>.
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organization>.
  ?result <http://dbpedia.org/property/reference> <http://dbpedia.org/resource/YU_Grupa>.
}
```",1,3,2,1,1,3,2,20,0,0,1,0,0.0,0
617,3,train,"Who is the successor, that is a royalty, of Antiochus II Theos?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Antiochus_II_Theos> <http://dbpedia.org/ontology/successor> ?result . },"```sparql
SELECT ?result WHERE {
  ?entity <http://dbpedia.org/ontology/successor> ?result .
  ?entity rdfs:label ""Antiochus II Theos""@en .
  ?result a <http://dbpedia.org/ontology/Royalty> .
}
```",1,2,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
356,4,train,"Give me the birth place, that is English and a settlement, of Gary Williams (footballer, born 1960).","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. <http://dbpedia.org/resource/Gary_Williams_(footballer,_born_1960)> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. }","SELECT ?result WHERE {
  <http://dbpedia.org/resource/Gary_Williams_(footballer,_born_1960)> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person> .
  <http://dbpedia.org/resource/Gary_Williams_(footballer,_born_1960)> <http://dbpedia.org/property/birthPlace> ?result .
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement> .
  ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/England> .
}",1,3,2,1,1,3,2,20,0,0,1,0,0.0,0
55,5,train,"Give me the reference, that is a band, to Newsted.","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Newsted""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. }","SELECT ?result WHERE { 
  ?result <http://dbpedia.org/ontology/reference> <http://dbpedia.org/resource/Newsted>. 
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>.
}",1,2,2,1,1,2,3,28,0,0,1,0,0.0,0
915,2,train,Give me the director of Pipe Dreams (1976 film).,SELECT ?result WHERE { <http://dbpedia.org/resource/Pipe_Dreams_(1976_film)> <http://dbpedia.org/ontology/director> ?result . },"```sparql
SELECT ?director WHERE {
  <http://dbpedia.org/resource/Pipe_Dreams_(1976_film)> <http://dbpedia.org/ontology/director> ?director .
}
```",1,1,2,1,1,3,2,20,1,0,0,1.0,1.0,1.0
488,3,train,"Give me the war, that is a military conflict and an event and a societal event, of Saitō Hajime.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Saitō_Hajime> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
SELECT ?result WHERE {
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>.
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>.
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>.
  <http://dbpedia.org/resource/Sait%C5%8D_Hajime> <http://dbpedia.org/property/knownFor> ?result.
}
```",1,4,2,1,1,3,3,71,0,0,4,0,0.0,0
9,0,train,"Give me the alma mater of John Alderdice, Baron Alderdice.","SELECT ?result WHERE { <http://dbpedia.org/resource/John_Alderdice,_Baron_Alderdice> <http://dbpedia.org/ontology/almaMater> ?result . }","```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/John_Alderdice,_Baron_Alderdice> <http://dbpedia.org/ontology/almaMater> ?result .
}
```",1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
435,11,train,Give me the work of the author of Iceland.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/author> ?v1 . <http://dbpedia.org/resource/Iceland> <http://dbpedia.org/property/author> ?v1 . },"```sparql
SELECT ?work WHERE {
  ?book <http://www.w3.org/2000/01/rdf-schema#label> ""Iceland""@en .
  ?book <http://dbpedia.org/ontology/author> ?author .
  ?author <http://dbpedia.org/property/work> ?work .
}
```",2,2,3,2,1,2,3,28,0,0,1,0,0.0,0
294,8,train,"Give me the resting place of the awardee, that is a politician, of Distinguished Service Medal (U.S. Army).",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Distinguished_Service_Medal_(U.S._Army)> . ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
SELECT ?person ?restingPlace WHERE {
  ?person <http://dbpedia.org/ontology/receivedAward> <http://dbpedia.org/resource/Distinguished_Service_Medal_(U.S._Army)> .
  ?person a <http://dbpedia.org/ontology/Politician> .
  OPTIONAL { ?person <http://dbpedia.org/property/restingPlace> ?restingPlace . }
}
```",2,3,3,2,1,2,3,28,0,0,10,0,0.0,0
528,15,train,"Give me the military force of the entity, that is a societal event, in Chile.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Chile> . ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"SELECT ?result WHERE { 
  ?event <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. 
  ?event <http://dbpedia.org/property/country> <http://dbpedia.org/resource/Chile>.
  ?event <http://dbpedia.org/ontology/militaryForce> ?result.
}",2,3,3,2,1,3,3,71,0,0,91,0,0.0,0
696,0,train,Give me the birth place of Tim Brennan.,SELECT ?result WHERE { <http://dbpedia.org/resource/Tim_Brennan> <http://dbpedia.org/ontology/birthPlace> ?result . },"SELECT ?result WHERE { 
  <http://dbpedia.org/resource/Tim_Brennan> <http://dbpedia.org/ontology/birthPlace> ?result .
}",1,1,2,1,1,3,2,20,1,0,0,1.0,1.0,1.0
996,1,train,Give me the entity in France.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/France> . },"```sparql
SELECT ?entity WHERE {
  ?entity <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/France> .
}
```",1,1,2,1,1,3,2,20,0,44301,292,0.0,0.0,0
115,5,train,Give me the alma mater of the alumnus of National University of San Marcos.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/National_University_of_San_Marcos> . ?v0 <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
SELECT ?almaMater WHERE {
  ?person <http://dbpedia.org/ontology/alumni> <http://dbpedia.org/resource/National_University_of_San_Marcos>.
  ?person <http://dbpedia.org/ontology/almaMater> ?almaMater.
}
```",2,2,3,2,1,2,2,9,0,0,49,0,0.0,0
487,8,train,"Give me the administration of the person born, that is a soccer player, as Philip Brian Scott.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/governor> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v0 <http://dbpedia.org/property/birthName> ""Philip Brian Scott""@en . }","```sparql
SELECT ?result WHERE {
  ?person <http://dbpedia.org/ontology/birthName> ""Philip Brian Scott"" .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer> .
  ?person <http://dbpedia.org/property/administration> ?result .
}
```",2,3,3,2,1,3,2,20,0,0,14,0,0.0,0
179,9,train,"Give me the birth name of the child, that is a royalty, of Nakkhatra Mangala.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Nakkhatra_Mangala> . ?v0 <http://dbpedia.org/property/birthName> ?result . },"```sparql
SELECT ?child ?birthName WHERE {
  ?child <http://dbpedia.org/ontology/birthName> ?birthName .
  ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
  ?child <http://dbpedia.org/ontology/fatherOrMother> <http://dbpedia.org/resource/Nakkhatra_Mangala> .
}
```",2,3,3,2,1,3,2,20,0,0,1,0,0.0,0
767,3,train,Give me the writer of Where It's At (Dustin Lynch album).,SELECT ?result WHERE { <http://dbpedia.org/resource/Where_It's_At_(Dustin_Lynch_album)> <http://dbpedia.org/property/writer> ?result . },"```sparql
SELECT ?writer WHERE {
  <http://dbpedia.org/resource/Where_It%27s_At_(Dustin_Lynch_album)> dbo:lyrics ?song .
  ?song dbo:composer ?writer .
}
```",1,1,2,1,1,3,3,71,0,0,35,0,0.0,0
427,12,train,Give me the party of Giulio Andreotti and party of Romano Prodi.,SELECT ?result WHERE { <http://dbpedia.org/resource/Giulio_Andreotti> <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/ontology/party> ?result . },"```sparql
SELECT ?person ?party WHERE {
  VALUES ?person { <http://dbpedia.org/resource/Giulio_Andreotti> <http://dbpedia.org/resource/Romano_Prodi> }
  ?person <http://dbpedia.org/ontology/party> ?party .
}
```",2,2,3,1,2,3,3,71,3,8,0,0.2727272727272727,1.0,0.42857142857142855
617,2,train,Give me the parent of Mlada (abbess).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Mlada_(abbess)> . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Mlada_(abbess)> <http://www.w3.org/2000/01/rdf-schema#seeAlso> ?result .
  OPTIONAL { ?result <http://dbpedia.org/ontology/birthPlace> ?place . }
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
360,5,train,Give me the author of Blinded by the Light.,SELECT ?result WHERE { <http://dbpedia.org/resource/Blinded_by_the_Light> <http://dbpedia.org/property/author> ?result . },"```sparql
SELECT ?author WHERE {
  <http://dbpedia.org/resource/Blinded_by_the_Light> dbo:author ?author .
}
```",1,1,2,1,1,2,3,28,0,0,1,0,0.0,0
161,9,train,Give me the military force of Rif War and military force of Spanish Civil War.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Rif_War> . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . },"```sparql
SELECT ?rifWarForce ?civilWarForce WHERE {
  ?rifWarEvent <http://dbpedia.org/ontology/conflict> ?rifWar .
  ?rifWar <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
  ?rifWarEvent <http://dbpedia.org/property/militaryForce> ?rifWarForce .

  ?civilWarEvent <http://dbpedia.org/ontology/conflict> ?civilWar .
  ?civilWar <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
  ?civilWarEvent <http://dbpedia.org/property/militaryForce> ?civilWarForce .

  FILTER(?rifWar = <http://dbpedia.org/resource/Rif_War>)
  FILTER(?civilWar = <http://dbpedia.org/resource/Spanish_Civil_War>)
}
```",2,2,3,1,2,3,3,71,0,0,34,0,0.0,0
767,2,train,Give me the reference to .,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> """"@en . }",SELECT ?result WHERE { <missing_entity> <http://dbpedia.org/ontology/reference> ?result . },1,1,2,1,1,3,3,71,0,0,98447,0,0.0,0
421,9,train,Give me the person born as Edin Dervišhalidović and native of Socialist Federal Republic of Yugoslavia.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Socialist_Federal_Republic_of_Yugoslavia> . ?result <http://dbpedia.org/property/birthName> ""Edin Dervišhalidović""@en . }","```sparql
SELECT ?person WHERE {
  ?person foaf:givenName ""Edin"" .
  ?person foaf:surname ""Dervišhalidović"" .
  ?person dbpedia-owl:nativePlace <http://dbpedia.org/resource/Socialist_Federal_Republic_of_Yugoslavia> .
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
142,4,train,Give me the birthplace of George Tokoro and entity in Japan.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan> . <http://dbpedia.org/resource/George_Tokoro> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
# Query to find the birthplace of George Tokoro
SELECT ?birthPlace WHERE {
  <http://dbpedia.org/resource/George_Tokoro> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
}

# Query to find entities in Japan
SELECT ?entity WHERE {
  ?entity <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement> .
  ?entity <http://dbpedia.org/property/country> <http://dbpedia.org/resource/Japan> .
}
```",2,2,3,1,2,2,2,9,0,0,1,0,0.0,0
617,1,train,Give me the spouse of Laodice IV.,SELECT ?result WHERE { <http://dbpedia.org/resource/Laodice_IV> <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
SELECT ?spouse WHERE {
  <http://dbpedia.org/resource/Laodice_IV> <http://dbpedia.org/ontology/spouse> ?spouse .
}
```",1,1,2,1,1,3,3,71,3,0,0,1.0,1.0,1.0
281,8,train,"Give me the profession, that is a military unit, of Heather Roy.",SELECT ?result WHERE { <http://dbpedia.org/resource/Heather_Roy> <http://dbpedia.org/property/occupation> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. },SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. <http://dbpedia.org/resource/Heather_Roy> <http://dbpedia.org/property/profession> ?result . },1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
360,7,train,Give me the reference to Manfred Mann and writer of The Roaring Silence.,"SELECT ?result WHERE { <http://dbpedia.org/resource/The_Roaring_Silence> <http://dbpedia.org/property/writer> ?result . ?result <http://xmlns.com/foaf/0.1/name> ""Manfred Mann""@en . }","```sparql
SELECT ?writer WHERE {
  ?album <http://dbpedia.org/ontology/writer> ?writer .
  ?album <http://purl.org/dc/terms/title> ""The Roaring Silence"" .
  OPTIONAL { ?album <http://dbpedia.org/property/band> <http://dbpedia.org/resource/Manfred_Mann> . }
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
487,1,train,Give me the administration of Phil Scott.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/Phil_Scott> . },SELECT ?result WHERE { <http://dbpedia.org/resource/Phil_Scott> <http://dbpedia.org/ontology/administration> ?result . },1,1,2,1,1,3,2,20,0,0,14,0,0.0,0
184,10,train,Give me the parent of Géza von Habsburg and parent of Archduchess Ilona of Austria.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Ilona_of_Austria> . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Géza_von_Habsburg> . },"```sparql
SELECT ?parent WHERE {
  { 
    <http://dbpedia.org/resource/G%C3%A9za_von_Habsburg> <http://dbpedia.org/ontology/father> ?parent .
    UNION
    <http://dbpedia.org/resource/G%C3%A9za_von_Habsburg> <http://dbpedia.org/ontology/mother> ?parent .
  }
  UNION
  {
    <http://dbpedia.org/resource/Archduchess_Ilona_of_Austria> <http://dbpedia.org/ontology/father> ?parent .
    UNION
    <http://dbpedia.org/resource/Archduchess_Ilona_of_Austria> <http://dbpedia.org/ontology/mother> ?parent .
  }
}
```",2,2,3,1,2,3,3,71,0,0,2,0,0.0,0
294,0,train,"Give me the resting place of Luke Lea (American politician, born 1879).","SELECT ?result WHERE { <http://dbpedia.org/resource/Luke_Lea_(American_politician,_born_1879)> <http://dbpedia.org/ontology/restingPlace> ?result . }","```sparql
SELECT ?restingPlace WHERE {
    <http://dbpedia.org/resource/Luke_Lea_(American_politician,_born_1879)> <http://dbpedia.org/ontology/burialPlace> ?restingPlace .
}
```",1,1,2,1,1,2,3,28,0,0,3,0,0.0,0
994,11,train,Give me the associated musical artist of the associated musical artist of Watchtower (band).,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Watchtower_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . },"```sparql
SELECT ?artist2 WHERE {
  ?artist1 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Watchtower_(band)> .
  ?artist1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?artist2 .
}
```",2,2,3,2,1,3,3,71,15,7,1,0.6818181818181818,0.9375,0.7894736842105263
232,15,train,Give me the person born as the birth name of Jon Pertwee.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/ontology/birthName> ?result .
}
```",2,2,3,2,1,3,3,71,0,1,1,0.0,0.0,0
314,6,train,Give me the person deceased at Madrid and awardee of 30.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ""30""^^<http://www.w3.org/2001/XMLSchema#integer> . ?result <http://dbpedia.org/ontology/restingPlace> <http://dbpedia.org/resource/Madrid> . }","```sparql
SELECT ?person WHERE {
  ?person dbpedia-owl:placeOfBirth <http://dbpedia.org/resource/Madrid> .
  ?person dbpedia-owl:numberOfAwards ""30""^^xsd:int .
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
365,1,train,Give me the reference to The Blasters.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""The Blasters""@en . }","```sparql
SELECT ?result WHERE {
  ?result <http://dbpedia.org/ontology/reference> <http://dbpedia.org/resource/The_Blasters>.
}
```",1,1,2,1,1,2,2,9,0,0,1,0,0.0,0
617,4,train,"Give me the reference, that is a royalty, to Richeza of Poland.","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Richeza of Poland""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
SELECT ?result WHERE {
  ?result <http://dbpedia.org/ontology/Royalty> ?v1 .
  ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
  ?v1 <http://dbpedia.org/property/reference> <http://dbpedia.org/resource/Richeza_of_Poland> .
}
```",1,2,2,1,1,3,2,20,0,0,3,0,0.0,0
10,4,train,"Give me the person born, that is an artist, as Luke Francis Vibert.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Luke Francis Vibert""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/birthName> ""Luke Francis Vibert"" .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist> .
}
```",1,2,2,1,1,2,3,28,0,0,1,0,0.0,0
767,11,train,"Give me the entity in the administration, that is a settlement, of Green.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/state> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://dbpedia.org/property/leaderParty> ""Green""@en . }","```sparql
SELECT ?result WHERE {
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>.
  ?result <http://dbpedia.org/property/administration> <http://dbpedia.org/resource/Green>.
}
```",2,3,3,2,1,3,3,71,0,0,60,0,0.0,0
378,4,train,Who is the person born as Carl Pontus Gahn?,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Carl Pontus Gahn""@en . }","```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/birthName> ""Carl Pontus Gahn"" .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
996,7,train,Give me the force of the awardee of 1778.0.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> ?v1 . ?v1 <http://dbpedia.org/property/awards> ""1778.0""^^<http://www.w3.org/2001/XMLSchema#double> . }","```sparql
SELECT ?awardee ?force WHERE {
    ?award <http://dbpedia.org/ontology/year> ""1778"" .
    ?award <http://dbpedia.org/property/recipient> ?awardee .
    ?awardee <http://dbpedia.org/ontology/force> ?force .
}
```",2,2,3,2,1,3,2,20,0,0,11,0,0.0,0
360,1,train,Give me the native of Johannesburg.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Johannesburg> . },"SELECT ?person WHERE {
  ?person <http://dbpedia.org/property/birthPlace> <http://dbpedia.org/resource/Johannesburg>.
}",1,1,2,1,1,2,3,28,373,113,627,0.7674897119341564,0.373,0.5020188425302826
617,9,train,"Give me the child, that is a royalty, of the parent of Mlada (abbess).",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Mlada_(abbess)> . ?result <http://dbpedia.org/ontology/parent> ?v0 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
SELECT ?child WHERE {
  ?parent <http://dbpedia.org/ontology/fatherOrMother> <http://dbpedia.org/resource/Mlada_(abbess)> .
  ?parent <http://dbpedia.org/ontology/child> ?child .
  ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
}
```",2,3,3,2,1,3,2,20,0,0,2,0,0.0,0
92,14,train,Give me the band of the person born as Joseph Michael Furney.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ""Joseph Michael Furney""@en . ?result <http://dbpedia.org/ontology/bandMember> ?v1 . }","```sparql
SELECT ?band WHERE {
  ?person <http://dbpedia.org/ontology/birthName> ""Joseph Michael Furney"" .
  ?person <http://dbpedia.org/property/memberOfBand> ?band .
}
```",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
659,17,train,"Give me the force, that is a societal event and an event and a military conflict, of the reference to Rutger Jan Schimmelpenninck.","SELECT ?result WHERE { ?v1 <http://xmlns.com/foaf/0.1/name> ""Rutger Jan Schimmelpenninck""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/commander> ?v1 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. }","```sparql
SELECT ?result WHERE {
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>.
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>.
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>.
  <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> <http://dbpedia.org/property/reference> ?result.
}
```",2,5,3,2,1,3,3,71,0,0,2,0,0.0,0
184,6,train,Give me the child of Archduke Joseph Karl of Austria.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Karl_of_Austria> . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Archduke_Joseph_Karl_of_Austria> <http://dbpedia.org/ontology/child> ?result .
}
```",1,1,2,1,1,3,3,71,3,1,0,0.75,1.0,0.8571428571428571
345,0,train,Give me the figure known as Stolz von Liechtenstein.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ""Stolz von Liechtenstein""@en . }","```sparql
SELECT ?entity WHERE {
  ?entity <http://dbpedia.org/ontology/alternativeName> ""Stolz von Liechtenstein"" .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
55,11,train,"Give me the band of the reference, that is a band, to Newsted.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://xmlns.com/foaf/0.1/name> ""Newsted""@en . }","```sparql
SELECT ?result WHERE {
  ?reference <http://dbpedia.org/ontology/band> ?result .
  ?reference <http://www.w3.org/2000/01/rdf-schema#seeAlso> <http://dbpedia.org/resource/Newsted> .
  ?reference a <http://dbpedia.org/ontology/Band> .
}
```",2,3,3,2,1,2,3,28,0,0,9,0,0.0,0
701,10,train,Give me the spouse of Ramesses II and parent of Meritamen.,SELECT ?result WHERE { <http://dbpedia.org/resource/Meritamen> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Ramesses_II> . },"```sparql
SELECT ?spouse WHERE {
  <http://dbpedia.org/resource/Ramesses_II> <http://dbpedia.org/ontology/spouse> ?spouse .
  ?spouse <http://dbpedia.org/property/parent> <http://dbpedia.org/resource/Meritamen> .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
767,10,train,Give me the entity in Baden-Württemberg and reference to .,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/state> <http://dbpedia.org/resource/Baden-Württemberg> . ?result <http://xmlns.com/foaf/0.1/name> """"@en . }","```sparql
SELECT ?entity WHERE {
  ?entity <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Baden-W%C3%BCrttemberg>.
}
```",2,2,3,1,2,3,3,71,0,0,7,0,0.0,0
44,0,train,Give me the band member of Undertow (band).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Undertow_(band)> . },"```sparql
SELECT ?member WHERE {
  <http://dbpedia.org/resource/Undertow_(band)> <http://dbpedia.org/ontology/member> ?member .
}
```",1,1,2,1,1,2,2,9,0,0,2,0,0.0,0
915,8,train,"Give me the father of the child, that is a fictional character and a soap character, of Phillip Spaulding.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoapCharacter>. ?v0 <http://dbpedia.org/property/father> ?result . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Phillip_Spaulding> . },"```sparql
SELECT ?child ?father WHERE {
  ?child <http://dbpedia.org/ontology/father> ?father .
  ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter> .
  ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SeriesRegular> . # Assuming soap characters are series regulars
  <http://dbpedia.org/resource/Phillip_Spaulding> <http://dbpedia.org/ontology/child> ?child .
}
```",2,4,3,2,1,3,2,20,0,0,1,0,0.0,0
783,10,train,"Give me the person born, that is an artist and a musical artist, as the persona of Ebony Reigns.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v0 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Ebony_Reigns> <http://xmlns.com/foaf/0.1/givenName> ?v0 . },"```sparql
SELECT ?person WHERE {
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist> .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
  ?person <http://dbpedia.org/property/birthName> ""Ebony Reigns"" .
}
```",2,4,3,2,1,3,2,20,0,0,1,0,0.0,0
77,1,train,Give me the force of Alexander I of Russia.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Alexander_I_of_Russia> . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Alexander_I_of_Russia> <http://dbpedia.org/ontology/commander> ?result .
}
```",1,1,2,1,1,3,2,20,0,0,25,0,0.0,0
115,1,train,Give me the alma mater of Jorge Sotomayor Tello.,SELECT ?result WHERE { <http://dbpedia.org/resource/Jorge_Sotomayor_Tello> <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Jorge_Sotomayor_Tello> <http://dbpedia.org/ontology/almaMater> ?result .
}
```",1,1,2,1,1,2,2,9,2,0,0,1.0,1.0,1.0
429,3,train,"Give me the military force, that is an organisation, of Camden Expedition.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Camden_Expedition> . },"```sparql
SELECT ?result WHERE {
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organization>.
  <http://dbpedia.org/resource/Camden_Expedition> <http://dbpedia.org/property/militaryForce> ?result.
}
```",1,2,2,1,1,2,2,9,0,0,22,0,0.0,0
285,6,train,Give me the parent of Alexander Onassis and spouse of Aristotle Onassis.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Aristotle_Onassis> . <http://dbpedia.org/resource/Alexander_Onassis> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Aristotle_Onassis> .
  ?person <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alexander_Onassis> .
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
645,8,train,Give me the alma mater of the child of Richard Pankhurst.,SELECT ?result WHERE { <http://dbpedia.org/resource/Richard_Pankhurst> <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
SELECT ?child ?almaMater WHERE {
  <http://dbpedia.org/resource/Richard_Pankhurst> foaf:child ?child .
  ?child dbo:almaMater ?almaMater .
}
```",2,2,3,2,1,3,2,20,0,0,2,0,0.0,0
328,4,train,"Give me the award of Bruce Fraser, 1st Baron Fraser of North Cape.","SELECT ?result WHERE { <http://dbpedia.org/resource/Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape> <http://dbpedia.org/property/awards> ?result . }","```sparql
SELECT ?result WHERE {
    <http://dbpedia.org/resource/Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape> <http://dbpedia.org/ontology/award> ?result .
}
```",1,1,2,1,1,3,3,71,9,0,0,1.0,1.0,1.0
617,15,train,"Who is the child, that is a royalty, of the successor, that is a royalty, of Antiochus II Theos?",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Antiochus_II_Theos> <http://dbpedia.org/ontology/successor> ?v1 . ?result <http://dbpedia.org/property/father> ?v1 . },"```sparql
SELECT ?child WHERE {
  ?successor <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Antiochus_II_Theos> .
  ?successor <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
  ?successor <http://dbpedia.org/ontology/child> ?child .
  ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
}
```",2,4,3,2,1,3,3,71,0,2,2,0.0,0.0,0
754,10,train,Give me the child of the reference to Ram Khamhaeng the Great.,"SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""Ram Khamhaeng the Great""@en . ?v0 <http://dbpedia.org/ontology/child> ?result . }",SELECT ?result WHERE { <http://dbpedia.org/resource/Ram_Khamhaeng_the_Great> <http://dbpedia.org/ontology/child> ?result . },2,2,3,2,1,3,2,20,0,0,3,0,0.0,0
356,3,train,Give me the successor of 2014 Sacramento Republic FC season.,SELECT ?result WHERE { <http://dbpedia.org/resource/2014_Sacramento_Republic_FC_season> <http://dbpedia.org/ontology/successor> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/2014_Sacramento_Republic_FC_season> <http://dbpedia.org/ontology/successor> ?result .
}
```",1,1,2,1,1,3,2,20,1,0,0,1.0,1.0,1.0
996,8,train,Give me the entity in the award of Ekrem Akurgal.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> ?v0 . <http://dbpedia.org/resource/Ekrem_Akurgal> <http://dbpedia.org/property/awards> ?v0 . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Ekrem_Akurgal> <http://dbpedia.org/ontology/receivedAward> ?result .
}
```",2,2,3,2,1,3,2,20,0,0,292,0,0.0,0
778,2,train,"Give me the awardee, that is American, of Wolf Prize in Medicine.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Wolf_Prize_in_Medicine> . ?result <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/United_States>. },"```sparql
SELECT ?awardee WHERE {
  ?awardee <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Category:American_people>.
  ?awardee <http://dbpedia.org/ontology/prize> <http://dbpedia.org/resource/Wolf_Prize_in_Medicine>.
}
```",1,2,2,1,1,3,2,20,0,0,1,0,0.0,0
801,6,train,"Give me the work, that is a musical work and a song and a work, of 50 Cent.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/50_Cent> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. },"```sparql
SELECT ?result WHERE {
    ?result <http://dbpedia.org/ontology/artist> <http://dbpedia.org/resource/50_Cent> .
    ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork> .
    ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song> .
}
```",1,4,2,1,1,3,3,71,30,20,28,0.6,0.5172413793103449,0.5555555555555556
488,15,train,"Who is the commander in the war, that is a military conflict and an event and a societal event, of Saitō Hajime?",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Saitō_Hajime> <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
SELECT ?war ?commander WHERE {
  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>.
  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>.
  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>.
  <http://dbpedia.org/resource/Saitō_Hajime> <http://dbpedia.org/property/battle> ?war.
  ?war <http://dbpedia.org/ontology/commander> ?commander.
}
```",2,5,3,2,1,3,3,71,0,0,29,0,0.0,0
981,8,train,"Give me the birth place of the person born, that is a beauty queen, as .","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> """"@en . ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BeautyQueen>. }","```sparql
SELECT ?person ?birthPlace WHERE {
  ?person <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BeautyQueen> .
}
```",2,3,3,2,1,3,2,20,170,4347,0,0.037635598848793445,1.0,0.0725410710475784
547,14,train,Give me the resting place of the awardee of Knight Grand Cross of the Order of St Michael and St George.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_St_Michael_and_St_George> . ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
SELECT ?person ?restingPlace WHERE {
  ?person <http://dbpedia.org/ontology/honoraryTitle> ""Knight Grand Cross of the Order of St Michael and St George"" .
  OPTIONAL { ?person <http://dbpedia.org/property/restingPlace> ?restingPlace . }
}
```",2,2,3,2,1,3,3,71,0,0,28,0,0.0,0
64,6,train,"Give me the entity in the region, that is a country, of Central European Time.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v0 . ?v0 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
SELECT ?entity WHERE {
  ?region <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>.
  ?cet <http://dbpedia.org/property/timeZone> ""Central European Time"".
  ?cet <http://dbpedia.org/ontology/coversCountry> ?region.
  ?entity <http://www.w3.org/2000/01/rdf-schema#seeAlso> ?region.
}
```",2,3,3,2,1,2,2,9,0,0,173261,0,0.0,0
666,6,train,Give me the figure known as The Three Lions and player in Steve Bruce.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Steve_Bruce> <http://dbpedia.org/ontology/team> ?result . ?result <http://dbpedia.org/property/nickname> ""The Three Lions""@en . }","```sparql
SELECT ?player WHERE {
  ?player <http://dbpedia.org/ontology/nickname> ""The Three Lions"" .
  ?player <http://dbpedia.org/ontology/team> ?team .
  ?team <http://dbpedia.org/property/coach> <http://dbpedia.org/resource/Steve_Bruce> .
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
55,7,train,Give me the band member of Guns N' Roses and band of Newsted.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Guns_N'_Roses> . <http://dbpedia.org/resource/Newsted> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/Guns_N%27_Roses>.
  ?person <http://dbpedia.org/property/band> <http://dbpedia.org/resource/Newsted>.
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
488,4,train,Who is the commander in Boshin War?,SELECT ?result WHERE { <http://dbpedia.org/resource/Boshin_War> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT ?commander WHERE {
  <http://dbpedia.org/resource/Boshin_War> <http://dbpedia.org/ontology/commander> ?commander .
}
```",1,1,2,1,1,3,3,71,26,0,0,1.0,1.0,1.0
142,1,train,Give me the birthplace of George Tokoro.,SELECT ?result WHERE { <http://dbpedia.org/resource/George_Tokoro> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?birthPlace WHERE {
  <http://dbpedia.org/resource/George_Tokoro> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
}
```",1,1,2,1,1,2,2,9,1,0,0,1.0,1.0,1.0
339,10,train,Who is the child of the parent of Princess Olga of Greece and Denmark?,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?result . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Princess_Olga_of_Greece_and_Denmark> . },"```sparql
SELECT ?child WHERE {
  ?parent <http://dbpedia.org/ontology/spouse> ?spouse .
  OPTIONAL { ?parent <http://dbpedia.org/property/husband> ?husband . }
  OPTIONAL { ?parent <http://dbpedia.org/property/wife> ?wife . }
  ?parent <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Princess_Olga_of_Greece_and_Denmark> .
  ?parent <http://dbpedia.org/ontology/child> ?child .
}
```",2,2,3,2,1,3,2,20,3,0,0,1.0,1.0,1.0
659,3,train,"Give me the native, that is an office holder, of Kingdom of Ireland.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Kingdom_of_Ireland> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
SELECT ?result WHERE {
  ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Kingdom_of_Ireland>.
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>.
}
```",1,2,2,1,1,3,3,71,23,0,0,1.0,1.0,1.0
161,2,train,Give me the commander in Biscay Campaign.,SELECT ?result WHERE { <http://dbpedia.org/resource/Biscay_Campaign> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Biscay_Campaign> <http://dbpedia.org/ontology/commander> ?result .
}
```",1,1,2,1,1,3,3,71,5,0,0,1.0,1.0,1.0
435,8,train,"Give me the territory administered from the figure known, that is a settlement and a town and Icelandic, as Land of fire and ice.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Iceland>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Town>. ?v1 <http://dbpedia.org/property/nickname> ""Land of fire and ice""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/capital> ?v1 . }","```sparql
SELECT ?result WHERE {
  ?settlement <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Town>.
  ?settlement <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>.
  ?settlement <http://dbpedia.org/property/country> <http://dbpedia.org/resource/Iceland>.
  ?settlement <http://dbpedia.org/ontology/kind> ""Land of fire and ice"" .
  ?settlement <http://dbpedia.org/ontology/administers> ?result.
}
```",2,5,3,2,1,2,3,28,0,0,2,0,0.0,0
54,6,train,Give me the child of Narapati I of Ava.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Narapati_I_of_Ava> . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Narapati_I_of_Ava> <http://dbpedia.org/ontology/child> ?result .
}
```",1,1,2,1,1,3,3,71,3,0,0,1.0,1.0,1.0
345,2,train,"Give me the player, that is a sports club and an organisation and a soccer club, in Armando Heeb.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Armando_Heeb> <http://dbpedia.org/ontology/team> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. },SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. <http://dbpedia.org/resource/Armando_Heeb> <http://dbpedia.org/property/player> ?result . },1,4,2,1,1,3,2,20,0,0,8,0,0.0,0
314,5,train,"Give me the profession, that is an event and a societal event, of Lisa Gavrić.",SELECT ?result WHERE { <http://dbpedia.org/resource/Lisa_Gavrić> <http://dbpedia.org/property/occupation> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocialEvent>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Lisa_Gavrić> <http://dbpedia.org/property/profession> ?result . },1,3,2,1,1,2,3,28,0,0,2,0,0.0,0
801,2,train,Give me the associated musical artist of Chris Taylor (music producer).,SELECT ?result WHERE { <http://dbpedia.org/resource/Chris_Taylor_(music_producer)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Chris_Taylor_(music_producer)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result .
}
```",1,1,2,1,1,3,3,71,7,0,0,1.0,1.0,1.0
64,0,train,Give me the alma mater of Jovan Hristić.,SELECT ?result WHERE { <http://dbpedia.org/resource/Jovan_Hristić> <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Jovan_Hristić> <http://dbpedia.org/ontology/almaMater> ?result .
}
```",1,1,2,1,1,2,2,9,1,0,0,1.0,1.0,1.0
339,0,train,Give me the child of George I of Greece.,SELECT ?result WHERE { <http://dbpedia.org/resource/George_I_of_Greece> <http://dbpedia.org/ontology/child> ?result . },"```sparql
SELECT ?child WHERE {
  <http://dbpedia.org/resource/George_I_of_Greece> <http://dbpedia.org/ontology/child> ?child .
}
```",1,1,2,1,1,3,2,20,7,0,0,1.0,1.0,1.0
48,5,train,"Give me the actor, that is a musical artist, of Honor Up.",SELECT ?result WHERE { <http://dbpedia.org/resource/Honor_Up> <http://dbpedia.org/property/starring> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
SELECT ?actor WHERE {
  ?work <http://dbpedia.org/ontology/starring> ?actor .
  ?actor <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
  ?work <http://dbpedia.org/ontology/title> ""Honor Up"" .
}
```",1,2,2,1,1,3,2,20,0,0,2,0,0.0,0
54,8,train,"Give me the child, that is an office holder and a royalty, of Thihapate of Mohnyin.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Thihapate_of_Mohnyin> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Thihapate_of_Mohnyin> <http://dbpedia.org/property/child> ?result . },1,3,2,1,1,3,3,71,0,0,1,0,0.0,0
184,8,train,Give me the child of Archduke Joseph Francis of Austria.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Francis_of_Austria> . },"```sparql
SELECT ?child WHERE {
  <http://dbpedia.org/resource/Archduke_Joseph_Francis_of_Austria> <http://dbpedia.org/ontology/child> ?child .
}
```",1,1,2,1,1,3,3,71,3,1,0,0.75,1.0,0.8571428571428571
294,4,train,Who is the architect of P. D. Houston Jr. House?,SELECT ?result WHERE { <http://dbpedia.org/resource/P._D._Houston_Jr._House> <http://dbpedia.org/ontology/architect> ?result . },SELECT ?result WHERE { <http://dbpedia.org/resource/P._D._Houston_Jr._House> <http://dbpedia.org/ontology/architect> ?result . },1,1,2,1,1,2,3,28,1,0,0,1.0,1.0,1.0
161,15,train,"Give me the force, that is a societal event and an event and a military conflict, of the person decedent at Francoist Spain.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Francoist_Spain> . ?result <http://dbpedia.org/ontology/commander> ?v1 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Francoist_Spain> <http://dbpedia.org/property/decedent> ?v1 . ?v1 <http://dbpedia.org/ontology/battle> ?result . },2,5,3,2,1,3,3,71,0,0,29,0,0.0,0
356,1,train,Give me the team of Mark Briggs.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Mark_Briggs> . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Mark_Briggs> <http://dbpedia.org/ontology/team> ?result .
}
```",1,1,2,1,1,3,2,20,1,14,4,0.06666666666666667,0.2,0.1
378,15,train,Who is the person born as the birth name of Carl Pontus Gahn?,SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/property/birthName> ""Carl Pontus Gahn"" .
}
```",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
963,4,train,Give me the location for 21205.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/postalCode> ""21205"" . }","```sparql
SELECT ?location WHERE {
  ?entity <http://dbpedia.org/ontology/postalCode> ""21205"" .
  ?entity <http://www.w3.org/2000/01/rdf-schema#label> ?location .
}
```",1,1,2,1,1,3,2,20,0,6,6,0.0,0.0,0
666,0,train,Give me the player in Steve Bruce.,SELECT ?result WHERE { <http://dbpedia.org/resource/Steve_Bruce> <http://dbpedia.org/ontology/team> ?result . },"```sparql
SELECT ?player WHERE {
  ?team <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Steve_Bruce> .
  ?player <http://dbpedia.org/ontology/team> ?team .
}
```",1,1,2,1,1,3,2,20,0,0,7,0,0.0,0
30,3,train,Give me the profession of Édouard Alphonse James de Rothschild.,SELECT ?result WHERE { <http://dbpedia.org/resource/Édouard_Alphonse_James_de_Rothschild> <http://dbpedia.org/property/occupation> ?result . },"```sparql
SELECT ?profession WHERE {
  <http://dbpedia.org/resource/Édouard_Alphonse_James_de_Rothschild> dbo:occupation ?profession .
}
```",1,1,2,1,1,2,2,9,0,2,1,0.0,0.0,0
767,5,train,Give me the reference to George Kilbon Nash.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""George Kilbon Nash""@en . }","```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/George_Kilbon_Nash> <http://dbpedia.org/ontology/reference> ?result .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
232,3,train,Give me the birth name of Jon Pertwee.,SELECT ?result WHERE { <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/property/birthName> ?result . },"```sparql
SELECT ?birthName WHERE {
  <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/ontology/birthName> ?birthName .
}
```",1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
55,10,train,"Give me the band member of the band member, that is a band and a group, of San Francisco Symphony.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/San_Francisco_Symphony> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. },"```sparql
SELECT ?member WHERE {
  ?entity <http://dbpedia.org/ontology/member> ?member .
  ?entity <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band> .
  ?entity <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group> .
  ?entity <http://dbpedia.org/property/associatedWith> <http://dbpedia.org/resource/San_Francisco_Symphony> .
}
```",2,4,3,2,1,2,3,28,0,0,15,0,0.0,0
696,5,train,Give me the award of Nie Rongzhen.,SELECT ?result WHERE { <http://dbpedia.org/resource/Nie_Rongzhen> <http://dbpedia.org/property/awards> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Nie_Rongzhen> <http://www.w3.org/2000/01/rdf-schema#award> ?result .
}
```",1,1,2,1,1,3,2,20,0,0,2,0,0.0,0
701,7,train,"Give me the commander, that is a royalty, in Battle of Perire.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Battle_of_Perire> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Battle_of_Perire> <http://dbpedia.org/ontology/commander> ?result .
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
}
```",1,2,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
314,11,train,"Give me the commander in the profession, that is an event and a societal event, of Lisa Gavrić.",SELECT ?result WHERE { <http://dbpedia.org/resource/Lisa_Gavrić> <http://dbpedia.org/property/occupation> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocialEvent>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Lisa_Gavrić> <http://dbpedia.org/property/profession> ?v1 . ?v1 <http://dbpedia.org/ontology/commander> ?result . },2,4,3,2,1,2,3,28,0,0,28,0,0.0,0
281,17,train,"Give me the profession, that is a military unit, of the professional, that is an office holder and a politician, in New Zealand Army.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/occupation> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v1 <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/New_Zealand_Army> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
SELECT ?profession WHERE {
  ?person <http://dbpedia.org/ontology/profession> ?profession .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit> .
  ?person <http://dbpedia.org/ontology/officeHolder> [] .
  ?person <http://dbpedia.org/ontology/politician> [] .
  ?person <http://dbpedia.org/property/memberOf> <http://dbpedia.org/resource/New_Zealand_Army> .
}
```",2,5,3,2,1,3,3,71,0,0,1,0,0.0,0
10,2,train,Give me the professional in .,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . }","SELECT ?result WHERE { 
  # The query is incomplete due to lack of context.
}",1,1,2,1,1,2,3,28,0,0,39640,0,0.0,0
645,7,train,"Give me the entity in the residence, that is a country, of James Wilkes Maurice.",SELECT ?result WHERE { <http://dbpedia.org/resource/James_Wilkes_Maurice> <http://dbpedia.org/property/residence> ?v1 . ?result <http://dbpedia.org/ontology/country> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"SELECT ?result WHERE {
  <http://dbpedia.org/resource/James_Wilkes_Maurice> <http://dbpedia.org/property/residence> ?residence .
  ?residence <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country> .
  ?entity <http://www.w3.org/2000/01/rdf-schema#subjectOf> ?residence .
  ?entity ?p ?result .
}",2,3,3,2,1,3,2,20,0,0,42999,0,0.0,0
421,4,train,Give me the birthplace of Samir Bekrić.,SELECT ?result WHERE { <http://dbpedia.org/resource/Samir_Bekrić> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Samir_Bekrić> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person> .
  <http://dbpedia.org/resource/Samir_Bekrić> <http://dbpedia.org/property/birthPlace> ?result .
}
```",1,1,2,1,1,2,3,28,2,0,0,1.0,1.0,1.0
421,8,train,Give me the band member of the awardee of [[#Awards and nominations.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://dbpedia.org/property/awards> ""[[#Awards and nominations""@en . }","```sparql
SELECT ?result WHERE {
  ?entity <http://dbpedia.org/ontology/award> ?award .
  ?entity <http://dbpedia.org/ontology/bandMember> ?result .
}
```",2,2,3,2,1,2,3,28,0,0,582,0,0.0,0
232,2,train,Give me the native of London.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/London> . },"SELECT ?person WHERE {
  ?person <http://dbpedia.org/property/birthPlace> <http://dbpedia.org/resource/London>.
}",1,1,2,1,1,3,3,71,2710,493,6229,0.8460817983140806,0.3031659022261998,0.44638445066710597
92,3,train,Give me the name of Nevermore (2006 film).,SELECT ?result WHERE { <http://dbpedia.org/resource/Nevermore_(2006_film)> <http://xmlns.com/foaf/0.1/name> ?result . },"```sparql
SELECT ?name WHERE {
    ?film <http://dbpedia.org/ontology/film> ?filmType .
    ?film <http://purl.org/dc/terms/title> ""Nevermore"" .
    ?film <http://dbpedia.org/ontology/releaseDate> ?releaseDate .
    FILTER (YEAR(?releaseDate) = 2006)
    BIND(str(?film) AS ?name)
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
528,5,train,Give me the work of --01-09.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/author> ""--01-09""^^<http://www.w3.org/2001/XMLSchema#gMonthDay> . }","```sparql
SELECT ?work WHERE {
  ?work <http://dbpedia.org/ontology/date> ""2009-01-09""^^xsd:date .
}
```",1,1,2,1,1,3,3,71,0,1,1,0.0,0.0,0
659,16,train,"Give me the war, that is an event and a military conflict, of the figure known, that is a military unit and an organisation, as 'Polish Horse'.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/property/nickname> ""'Polish Horse'""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","```sparql
SELECT ?war WHERE {
  ?figure <http://dbpedia.org/ontology/knownAs> ""Polish Horse"" .
  ?figure <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit> ;
          <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation> .
  ?figure <http://dbpedia.org/property/battle> ?war .
  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> ;
       <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event> .
}
```",2,6,3,2,1,3,3,71,0,0,19,0,0.0,0
328,8,train,"Give me the office, that is a government agency, of Joseph Stalin.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. <http://dbpedia.org/resource/Joseph_Stalin> <http://dbpedia.org/property/office> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Joseph_Stalin> <http://dbpedia.org/ontology/officeHeld> ?result .
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency> .
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
427,10,train,Give me the reference to Partito Popolare Italiano and party of Romano Prodi.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/ontology/party> ?result . ?result <http://xmlns.com/foaf/0.1/name> ""Partito Popolare Italiano""@en . }","```sparql
SELECT ?partitoPopolareItaliano ?romanoProdiParty WHERE {
  ?partitoPopolareItaliano rdfs:label ""Partito Popolare Italiano""@en .
  FILTER (lang(?partitoPopolareItaliano) = 'en')
  
  <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/ontology/party> ?romanoProdiParty .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
981,10,train,"Who is the person born, that is a beauty queen, as the author of Kamikaze Girls?",SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v0 . <http://dbpedia.org/resource/Kamikaze_Girls> <http://dbpedia.org/property/author> ?v0 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BeautyQueen>. },"```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/birthPlace> ?place .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BeautyQueen> .
  ?work <http://purl.org/dc/terms/creator> ?person ;
        <http://purl.org/dc/elements/1.1/title> ""Kamikaze Girls"" .
}
```",2,3,3,2,1,3,2,20,0,0,120,0,0.0,0
328,1,train,Give me the commander in Eastern Front (World War II).,SELECT ?result WHERE { <http://dbpedia.org/resource/Eastern_Front_(World_War_II)> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT ?commander WHERE {
  <http://dbpedia.org/resource/Eastern_Front_(World_War_II)> <http://dbpedia.org/ontology/commander> ?commander .
}
```",1,1,2,1,1,3,3,71,63,0,0,1.0,1.0,1.0
318,0,train,Give me the person born in 1970.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthYear> ""1970""^^<http://www.w3.org/2001/XMLSchema#gYear> . }","```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/birthDate> ?birthDate .
  FILTER (
    year(?birthDate) = 1970
  )
}
```",1,1,2,1,1,2,2,9,2287,8277,523,0.21648996592199923,0.8138790035587189,0.34200687901899207
404,6,train,"Who is the child, that is a royalty, of Ernest Augustus, Duke of Brunswick?","SELECT ?result WHERE { <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/ontology/child> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
SELECT ?child WHERE {
  <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/ontology/child> ?child .
  ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
}
```",1,2,2,1,1,3,3,71,3,0,0,1.0,1.0,1.0
339,7,train,Give me the child of the child of Christian IX of Denmark.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Christian_IX_of_Denmark> . },"```sparql
SELECT ?grandchild WHERE {
  ?child <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Christian_IX_of_Denmark> .
  ?child <http://www.w3.org/ns/prov#wasDerivedFrom> ?parent.
  ?parent <http://dbpedia.org/property/birthName> ""Christian IX of Denmark""^^<http://www.w3.org/2001/XMLSchema#string>.
  ?grandchild <http://www.w3.org/ns/prov#wasDerivedFrom> ?child.
}
```",2,2,3,2,1,3,2,20,0,0,32,0,0.0,0
492,2,train,Give me the person decedent at Algiers.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Algiers> . },"```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Algiers>.
}
```",1,1,2,1,1,3,3,71,122,0,0,1.0,1.0,1.0
959,9,train,Give me the native of Japan and member of University of Tsukuba.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/University_of_Tsukuba> . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Japan> . },"```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Japan>.
  ?person <http://dbpedia.org/ontology/memberOf> <http://dbpedia.org/resource/University_of_Tsukuba>.
}
```",2,2,3,1,2,3,3,71,0,0,84,0,0.0,0
48,1,train,Give me the band of Murda Mook.,SELECT ?result WHERE { <http://dbpedia.org/resource/Murda_Mook> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Murda_Mook> <http://dbpedia.org/ontology/band> ?result .
}
```",1,1,2,1,1,3,2,20,0,0,10,0,0.0,0
392,6,train,Give me the region of Central European Time and entity in Italy.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy> . ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Central_European_Time> . },"```sparql
SELECT ?entity WHERE {
  ?entity <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Central_European_Time>.
  ?entity <http://www.w3.org/2000/01/rdf-schema#seeAlso> <http://dbpedia.org/resource/Italy>.
}
```",2,2,3,1,2,2,3,28,6,1,507,0.8571428571428571,0.011695906432748537,0.023076923076923078
427,6,train,Who is the father of Lamberto Andreotti?,SELECT ?result WHERE { <http://dbpedia.org/resource/Lamberto_Andreotti> <http://dbpedia.org/property/father> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Lamberto_Andreotti> <http://dbpedia.org/ontology/father> ?result .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
701,14,train,Give me the spouse of the father of Merneptah.,SELECT ?result WHERE { <http://dbpedia.org/resource/Merneptah> <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/ontology/spouse> ?v1 . },"```sparql
SELECT ?spouse WHERE {
  ?merneptah dbo:father ?father .
  ?father foaf:surname ""Ramesses II"" . # Assuming Ramesses II is Merneptah's father based on historical knowledge.
  ?father dbo:spouse ?spouse .
}
```",2,2,3,2,1,3,3,71,0,0,5,0,0.0,0
404,2,train,"Give me the child of Ernest Augustus, Crown Prince of Hanover.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ernest_Augustus,_Crown_Prince_of_Hanover> . }","```sparql
SELECT ?child WHERE {
  <http://dbpedia.org/resource/Ernest_Augustus,_Crown_Prince_of_Hanover> dbo:child ?child .
}
```",1,1,2,1,1,3,3,71,3,0,0,1.0,1.0,1.0
48,8,train,"Give me the band of the actor, that is a musical artist, of Honor Up.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Honor_Up> <http://dbpedia.org/property/starring> ?v0 . },"```sparql
SELECT ?band WHERE {
  ?actor <http://dbpedia.org/ontology/knownFor> <http://dbpedia.org/resource/Honor_Up> .
  ?actor <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
  ?actor <http://dbpedia.org/property/band> ?band .
}
```",2,3,3,2,1,3,2,20,0,0,10,0,0.0,0
184,14,train,Give me the parent of the child of Archduke Joseph Francis of Austria.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Francis_of_Austria> . },"```sparql
SELECT ?parent WHERE {
  ?child <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduke_Joseph_Francis_of_Austria> .
  ?child <http://dbpedia.org/ontology/child> ?parent .
}
```",2,2,3,2,1,3,3,71,1,0,1,1.0,0.5,0.6666666666666666
318,6,train,Give me the professional in the profession of Robert Xavier Rodriguez.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Robert_Xavier_Rodriguez> <http://dbpedia.org/property/occupation> ?v1 . },"```sparql
SELECT ?professional WHERE {
  <http://dbpedia.org/resource/Robert_Xavier_Rodriguez> <http://purl.org/dc/terms/profession> ?profession .
  ?professional <http://purl.org/dc/terms/profession> ?profession .
  FILTER(?professional != <http://dbpedia.org/resource/Robert_Xavier_Rodriguez>)
}
```",2,2,3,2,1,2,2,9,0,0,1942,0,0.0,0
996,5,train,Give me the award of Ekrem Akurgal.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ekrem_Akurgal> <http://dbpedia.org/property/awards> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Ekrem_Akurgal> <http://dbpedia.org/ontology/award> ?result .
}
```",1,1,2,1,1,3,2,20,4,0,1,1.0,0.8,0.888888888888889
617,10,train,"Give me the father, that is a royalty, of the reference, that is a royalty, to Richeza of Poland.","SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""Richeza of Poland""@en . ?v0 <http://dbpedia.org/property/father> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
SELECT ?father WHERE {
  ?reference <http://dbpedia.org/ontology/reference> <http://dbpedia.org/resource/Richeza_of_Poland>.
  ?reference a <http://dbpedia.org/ontology/Royalty>.
  ?reference <http://dbpedia.org/ontology/father> ?father.
  ?father a <http://dbpedia.org/ontology/Royalty>.
}
```",2,4,3,2,1,3,2,20,0,0,3,0,0.0,0
281,9,train,"Give me the entity in Colony of New Zealand and war of Beauchamp Seymour, 1st Baron Alcester.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Colony_of_New_Zealand> . <http://dbpedia.org/resource/Beauchamp_Seymour,_1st_Baron_Alcester> <http://dbpedia.org/ontology/battle> ?result . }","```sparql
SELECT DISTINCT ?entity WHERE {
  # Find entities related to the Colony of New Zealand
  { 
    ?entity <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Colony_of_New_Zealand> .
  }
  
  UNION
  
  # Find wars associated with Beauchamp Seymour, 1st Baron Alcester
  {
    <http://dbpedia.org/resource/Beauchamp_Seymour,_1st_Baron_Alcester> <http://dbpedia.org/ontology/battle> ?entity .
    FILTER (?entity <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>)
  }
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
339,5,train,Who is the child of Grand Duchess Elena Vladimirovna of Russia?,SELECT ?result WHERE { <http://dbpedia.org/resource/Grand_Duchess_Elena_Vladimirovna_of_Russia> <http://dbpedia.org/ontology/child> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Grand_Duchess_Elena_Vladimirovna_of_Russia> <http://dbpedia.org/ontology/child> ?result .
}
```",1,1,2,1,1,3,2,20,3,0,0,1.0,1.0,1.0
801,3,train,Give me the true self of The Shadow.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/givenName> ""The Shadow""@en . }","```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/The_Shadow> <http://www.w3.org/2000/01/rdf-schema#label> ""The Shadow""@en .
  OPTIONAL { 
    <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/ontology/alsoKnownAs> ?result .
  }
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
783,6,train,Give me the band member of Ebony Reigns and associated musical artist of Appietus.,SELECT ?result WHERE { <http://dbpedia.org/resource/Appietus> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Ebony_Reigns> . },"```sparql
# Query for the band member of Ebony Reigns
SELECT ?band WHERE {
  ?band <http://dbpedia.org/ontology/member> ?member .
  ?member rdfs:label ""Ebony Reigns""@en .
}

UNION

# Query for the associated musical artist of Appietus
SELECT ?artist WHERE {
  ?artist <http://dbpedia.org/ontology/associatedMusicalArtist> ?appietus .
  ?appietus rdfs:label ""Appietus""@en .
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
696,1,train,Give me the landmark at elevation of 50.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/elevation> ""50""^^<http://www.w3.org/2001/XMLSchema#integer> . }","```sparql
SELECT ?landmark WHERE {
    ?landmark <http://dbpedia.org/ontology/elevation> ""50""^^<http://www.w3.org/2001/XMLSchema#float>.
    ?landmark a <http://dbpedia.org/ontology/Landmark>.
}
```",1,1,2,1,1,3,2,20,0,0,599,0,0.0,0
391,15,train,"Give me the figure known as the nick name of Jackson, Tennessee.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ?v1 . <http://dbpedia.org/resource/Jackson,_Tennessee> <http://xmlns.com/foaf/0.1/nick> ?v1 . }","```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Jackson,_Tennessee> <http://dbpedia.org/ontology/nickName> ?result .
}
```",2,2,3,2,1,3,3,71,0,0,4,0,0.0,0
184,9,train,Give me the child of Archduke Joseph August of Austria and parent of Géza von Habsburg.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_August_of_Austria> . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Géza_von_Habsburg> . },"```sparql
SELECT ?child WHERE {
  <http://dbpedia.org/resource/Archduke_Joseph_August_of_Austria> <http://dbpedia.org/ontology/child> ?child .
}
```

Assuming we find a candidate from the above query, let's denote it as `?candidate`. We then check if this candidate is also a parent of Géza von Habsburg:

```sparql
SELECT ?candidate WHERE {
  ?candidate <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/G%C3%A9za_von_Habsburg> .
  FILTER(?candidate IN {<list_of_candidates_from_previous_query>})
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
44,6,train,"Give me the band member of the associated musical artist, that is a group and an organisation, of Queensrÿche.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . <http://dbpedia.org/resource/Queensrÿche> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
SELECT ?bandMember WHERE {
  ?entity <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Queensrÿche> .
  ?entity <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalGroup> .
  ?entity <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation> .
  ?entity <http://dbpedia.org/property/member> ?bandMember .
}
```",2,4,3,2,1,2,2,9,0,0,13,0,0.0,0
485,7,train,Give me the entity in United Kingdom and entity in Nottinghamshire.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Nottinghamshire> . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . },"```sparql
SELECT ?entity WHERE {
  ?entity <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>.
  ?entity <http://dbpedia.org/ontology/administrativeTerritory> <http://dbpedia.org/resource/Nottinghamshire>.
}
```",2,2,3,1,2,2,3,28,0,0,357,0,0.0,0
747,14,train,Give me the band of the person born as Tracey Elizabeth McSween.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/property/birthName> ""Tracey Elizabeth McSween""@en . }","```sparql
SELECT ?band WHERE {
  <http://dbpedia.org/resource/Tracey_McSween> <http://dbpedia.org/ontology/band> ?band .
}
```",2,2,3,2,1,3,3,71,0,0,8,0,0.0,0
314,8,train,Give me the person deceased at the headquarter of House of Sombrerete.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/restingPlace> ?v1 . <http://dbpedia.org/resource/House_of_Sombrerete> <http://dbpedia.org/ontology/location> ?v1 . },"```sparql
SELECT ?person WHERE {
  ?headquarters <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/House_of_Sombrerete>.
  ?deathEvent <http://dbpedia.org/ontology/deathPlace> ?headquarters.
  ?deathEvent <http://dbpedia.org/ontology/person> ?person.
}
```",2,2,3,2,1,2,3,28,0,0,34,0,0.0,0
328,15,train,Give me the award of the commander in Volcano and Ryukyu Islands campaign.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/awards> ?result . <http://dbpedia.org/resource/Volcano_and_Ryukyu_Islands_campaign> <http://dbpedia.org/ontology/commander> ?v1 . },"```sparql
SELECT ?award WHERE {
  ?campaign <http://dbpedia.org/ontology/commander> ?commander .
  ?commander <http://dbpedia.org/property/awards> ?award .
  
  FILTER(?campaign = <http://dbpedia.org/resource/Volcano_and_Ryukyu_Islands_campaign>)
}
```",2,2,3,2,1,3,3,71,30,0,0,1.0,1.0,1.0
314,9,train,Give me the commander in Spanish Civil War and awardee of 30.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Spanish_Civil_War> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/property/awards> ""30""^^<http://www.w3.org/2001/XMLSchema#integer> . }","```sparql
SELECT ?commander WHERE {
  ?commander <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Spanish_Civil_War> .
  ?commander <http://dbpedia.org/property/awardeeNumber> ""30""^^<http://www.w3.org/2001/XMLSchema#integer> .
}
```",2,2,3,1,2,2,3,28,0,0,2,0,0.0,0
328,6,train,Give me the force of Ferenc Szálasi.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Ferenc_Szálasi> . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Ferenc_Szálasi> <http://dbpedia.org/ontology/force> ?result .
}
```",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
827,6,train,"Give me the father of William Ernest, Grand Duke of Saxe-Weimar-Eisenach and child of Charles Alexander, Grand Duke of Saxe-Weimar-Eisenach.","SELECT ?result WHERE { <http://dbpedia.org/resource/Charles_Alexander,_Grand_Duke_of_Saxe-Weimar-Eisenach> <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/William_Ernest,_Grand_Duke_of_Saxe-Weimar-Eisenach> <http://dbpedia.org/property/father> ?result . }","```sparql
SELECT ?father WHERE {
  <http://dbpedia.org/resource/William_Ernst,_Grand_Duke_of_Saxe-Weimar-Eisenach> <http://www.w3.org/2002/07/owl#sameAs> <http://dbpedia.org/resource/William_Ernst,_Duke_of_Saxe-Weimar-Eisenach> .
  ?father <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/William_Ernst,_Grand_Duke_of_Saxe-Weimar-Eisenach> .
  ?father <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Human> .
  ?father <http://dbpedia.org/property/child> <http://dbpedia.org/resource/Charles_Alexander,_Grand_Duke_of_Saxe-Weimar-Eisenach> .
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
767,0,train,Give me the entity in Baden-Württemberg.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/state> <http://dbpedia.org/resource/Baden-Württemberg> . },"```sparql
SELECT ?entity WHERE {
  ?entity <http://dbpedia.org/ontology/state> <http://dbpedia.org/resource/Baden-W%C3%BCrttemberg>.
}
```",1,1,2,1,1,3,3,71,0,0,60,0,0.0,0
161,7,train,Who is the figure known as El Director?,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/nick> ""El Director""@en . }","```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/nickName> ""El Director"" .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
10,3,train,"Give me the person born, that is an artist, as Matt Colton.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Matt Colton""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/birthName> ""Matt Colton"".
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>.
}
```",1,2,2,1,1,2,3,28,0,0,1,0,0.0,0
345,10,train,"Who is the person born, that is a soccer player and a soccer manager, on the birth date of Eiður Guðjohnsen?",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthDate> ?v0 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Eiður_Guðjohnsen> <http://dbpedia.org/ontology/birthDate> ?v0 . },"```sparql
SELECT ?person WHERE {
  # Get the birth date of Eiður Guðjohnsen
  <http://dbpedia.org/resource/Eiður_Guðjohnsen> <http://www.w3.org/2002/07/owl#sameAs> ?eiður .
  ?eiður <http://dbpedia.org/ontology/birthDate> ?birthDate .

  # Find people with the same birth date
  ?person <http://dbpedia.org/ontology/birthDate> ?birthDate .

  # Ensure they are both soccer players and managers
  ?person <http://dbpedia.org/ontology/soccerPlayer> ?player .
  ?person <http://dbpedia.org/ontology/soccerManager> ?manager .
}
```",2,4,3,2,1,3,2,20,0,0,3,0,0.0,0
184,1,train,Give me the child of Archduke Joseph August of Austria.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_August_of_Austria> . },"```sparql
SELECT ?child WHERE {
  <http://dbpedia.org/resource/Archduke_Joseph_August_of_Austria> <http://dbpedia.org/ontology/child> ?child .
}
```",1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
666,4,train,"Give me the reference, that is an organisation and a soccer club and a sports club, to England.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?result <http://xmlns.com/foaf/0.1/name> ""England""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. }","```sparql
SELECT ?result WHERE {
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>.
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>.
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>.
  ?result <http://dbpedia.org/property/country> <http://dbpedia.org/resource/England>.
}
```",1,4,2,1,1,3,2,20,0,0,4,0,0.0,0
712,6,train,Give me the resting place of Nina Onilova and capital of South Russia (1919–1920).,SELECT ?result WHERE { <http://dbpedia.org/resource/South_Russia_(1919–1920)> <http://dbpedia.org/ontology/capital> ?result . <http://dbpedia.org/resource/Nina_Onilova> <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
# Query to get the resting place of Nina Onilova
SELECT ?restingPlace WHERE {
  <http://dbpedia.org/resource/Nina_Onilova> <http://dbpedia.org/ontology/burialPlace> ?restingPlace .
}

# Query to get the capital of South Russia (1919–1920)
SELECT ?capital WHERE {
  ?southRussia <http://www.w3.org/2002/07/owl#sameAs> <http://dbpedia.org/resource/South_Russia_(state)> ;
                <http://dbpedia.org/ontology/administrativeCapital> ?capital .
  FILTER (YEAR(?southRussia) >= 1919 && YEAR(?southRussia) <= 1920)
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
16,3,train,Give me the birth name of Ted McGinley.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/property/birthName> ?result . },"```sparql
SELECT ?birthName WHERE {
  <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/ontology/birthName> ?birthName .
}
```",1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
528,4,train,Give me the military force of Battle of Pisagua.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Pisagua> . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Battle_of_Pisagua> <http://dbpedia.org/ontology/militaryForce> ?result .
}
```",1,1,2,1,1,3,3,71,0,0,7,0,0.0,0
838,9,train,"Give me the band member, that is an artist and a musical artist, of the band, that is a band and a group, of Žika Jelić.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v0 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Žika_Jelić> . },"```sparql
SELECT ?member WHERE {
  ?band <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/Zika_Jelic>.
  ?band <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>.
  ?member <http://dbpedia.org/ontology/member> ?band.
  ?member <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>.
  ?member <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>.
}
```",2,6,3,2,1,3,2,20,0,0,4,0,0.0,0
801,14,train,"Give me the associated musical artist of the writer, that is a musical artist and an artist, of 40 Dayz & 40 Nightz.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/40_Dayz_&_40_Nightz> <http://dbpedia.org/property/writer> ?v1 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"```sparql
SELECT ?writer ?associatedArtist WHERE {
  ?album <http://dbpedia.org/ontology/writer> ?writer .
  ?writer <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
  ?writer <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist> .
  ?album <http://dbpedia.org/property/title> ""40 Dayz & 40 Nightz"" .
  ?writer <http://dbpedia.org/ontology/associatedMusicalArtist> ?associatedArtist .
}
```",2,4,3,2,1,3,3,71,0,0,50,0,0.0,0
232,1,train,Give me the actor of Dog Soldiers (film).,SELECT ?result WHERE { <http://dbpedia.org/resource/Dog_Soldiers_(film)> <http://dbpedia.org/ontology/starring> ?result . },"```sparql
SELECT ?actor WHERE {
  <http://dbpedia.org/resource/Dog_Soldiers_(film)> dbpedia-owl:actor ?actor .
}
```",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
92,15,train,"Give me the reference, that is an artist, to the name of Nevermore (2006 film).",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Nevermore_(2006_film)> <http://xmlns.com/foaf/0.1/name> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . },"```sparql
SELECT ?result WHERE {
    ?film <http://dbpedia.org/ontology/references> ?result .
    ?film <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film> .
    ?film rdfs:label ""Nevermore (2006 film)""@en .
    ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist> .
}
```",2,3,3,2,1,3,3,71,0,0,1,0,0.0,0
312,5,train,"Give me the entity in the administration, that is a settlement and a region and Italian and a state, of Democratic Party (Italy).",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v1 <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Democratic_Party_(Italy)> . ?result <http://dbpedia.org/ontology/province> ?v1 . },SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/State>. <http://dbpedia.org/resource/Democratic_Party_(Italy)> <http://dbpedia.org/property/administration> ?result . },2,6,3,2,1,2,2,9,0,0,587,0,0.0,0
177,2,train,Give me the residence of Alexander Gamelin.,SELECT ?result WHERE { <http://dbpedia.org/resource/Alexander_Gamelin> <http://dbpedia.org/property/residence> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Alexander_Gamelin> <http://dbpedia.org/property/residence> ?result .
}
```",1,1,2,1,1,2,2,9,2,0,0,1.0,1.0,1.0
959,16,train,"Give me the residence, that is a country, of the leader, that is a politician, of 2010 Japanese House of Councillors election.",SELECT ?result WHERE { <http://dbpedia.org/resource/2010_Japanese_House_of_Councillors_election> <http://dbpedia.org/property/leader> ?v0 . ?v0 <http://dbpedia.org/property/residence> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
SELECT ?residence WHERE {
    ?election <http://dbpedia.org/ontology/politician> ?leader .
    FILTER(CONTAINS(LCASE(STR(?election)), ""2010 japanese house of councillors election""))
    ?leader <http://dbpedia.org/property/residence> ?residence .
    ?residence <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country> .
}
```",2,4,3,2,1,3,3,71,0,0,1,0,0.0,0
182,3,train,Give me the author of 2019 Sri Lanka Easter bombings.,SELECT ?result WHERE { <http://dbpedia.org/resource/2019_Sri_Lanka_Easter_bombings> <http://dbpedia.org/property/author> ?result . },"```sparql
SELECT ?result WHERE {
    <http://dbpedia.org/resource/2019_Sri_Lanka_Easter_bombings> <http://dbpedia.org/ontology/author> ?result .
}
```",1,1,2,1,1,2,3,28,0,0,3,0,0.0,0
10,7,train,Give me the professional in  and associated musical artist of Matt Colton.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Matt_Colton> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
SELECT ?professionalRole ?associatedArtist WHERE {
  <http://dbpedia.org/resource/Matt_Colton> <http://dbpedia.org/ontology/occupation> ?professionalRole .
  OPTIONAL { 
    <http://dbpedia.org/resource/Matt_Colton> <http://dbpedia.org/property/associatedMusicalArtist> ?associatedArtist .
  }
}
```",2,2,3,1,2,2,3,28,0,0,2,0,0.0,0
696,3,train,Who is the member of Dropkick Murphys?,SELECT ?result WHERE { <http://dbpedia.org/resource/Dropkick_Murphys> <http://dbpedia.org/ontology/bandMember> ?result . },"```sparql
SELECT ?member WHERE {
  ?band <http://dbpedia.org/ontology/member> ?member .
  FILTER (str(?band) = ""Dropkick_Murphys"")
}
```",1,1,2,1,1,3,2,20,0,0,6,0,0.0,0
285,3,train,Who is the child of Tina Onassis Niarchos?,SELECT ?result WHERE { <http://dbpedia.org/resource/Tina_Onassis_Niarchos> <http://dbpedia.org/ontology/child> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Tina_Onassis_Niarchos> <http://dbpedia.org/ontology/child> ?result .
}
```",1,1,2,1,1,3,2,20,2,0,0,1.0,1.0,1.0
617,13,train,Give me the spouse of the child of Antiochus III the Great.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Antiochus_III_the_Great> <http://dbpedia.org/ontology/child> ?v1 . },"```sparql
SELECT ?child ?spouse WHERE {
  <http://dbpedia.org/resource/Antiochus_III_the_Great> dbo:child ?child .
  ?child foaf:mbox ?spouse .
}
```",2,2,3,2,1,3,3,71,0,0,5,0,0.0,0
994,7,train,Give me the persona of Don Dokken.,SELECT ?result WHERE { <http://dbpedia.org/resource/Don_Dokken> <http://xmlns.com/foaf/0.1/givenName> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Don_Dokken> <http://dbpedia.org/ontology/bandMember> ?result .
}
UNION
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Don_Dokken> <http://dbpedia.org/ontology/musician> ?result .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
754,0,train,Give me the parent of Loe Thai.,SELECT ?result WHERE { <http://dbpedia.org/resource/Loe_Thai> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Loe_Thai> <http://www.w3.org/2000/01/rdf-schema#subClassOf> ?result .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
77,2,train,Give me the award of Maxim Grigorievich Vlasov.,SELECT ?result WHERE { <http://dbpedia.org/resource/Maxim_Grigorievich_Vlasov> <http://dbpedia.org/property/awards> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Maxim_Grigorievich_Vlasov> <http://www.w3.org/2000/01/rdf-schema#award> ?result .
}
```",1,1,2,1,1,3,2,20,0,0,8,0,0.0,0
314,2,train,Give me the commander in Spanish Civil War.,SELECT ?result WHERE { <http://dbpedia.org/resource/Spanish_Civil_War> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT ?commander WHERE {
  <http://dbpedia.org/resource/Spanish_Civil_War> <http://dbpedia.org/ontology/commander> ?commander .
}
```",1,1,2,1,1,2,3,28,28,0,0,1.0,1.0,1.0
959,1,train,Give me the native of Japan.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Japan> . },"```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/nativeCountry> <http://dbpedia.org/resource/Japan> .
}
```",1,1,2,1,1,3,3,71,0,0,8419,0,0.0,0
534,3,train,"Who is the child, that is a politician and an office holder, of Desmond FitzGerald (politician)?",SELECT ?result WHERE { <http://dbpedia.org/resource/Desmond_FitzGerald_(politician)> <http://dbpedia.org/ontology/child> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Desmond_FitzGerald_(politician)> <http://xmlns.com/foaf/0.1/kids> ?child .
  ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?type .
  FILTER (
    (?type = <http://dbpedia.org/ontology/Politician>) ||
    (?type = <http://dbpedia.org/ontology/OfficeHolder>)
  )
  BIND(?child AS ?result)
}
```",1,3,2,1,1,3,2,20,0,0,1,0,0.0,0
365,6,train,Give me the reference to the real name of The Blasters.,SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v1 . <http://dbpedia.org/resource/The_Blasters> <http://xmlns.com/foaf/0.1/name> ?v1 . },"```sparql
SELECT ?realName WHERE {
  <http://dbpedia.org/resource/The_Blasters> <http://www.w3.org/2000/01/rdf-schema#label> ""The Blasters""@en .
  OPTIONAL { 
    <http://dbpedia.org/resource/The_Blasters> <http://dbpedia.org/ontology/officialName> ?realName .
  }
}
```",2,2,3,2,1,2,2,9,0,0,1,0,0.0,0
360,3,train,"Give me the work, that is an album, of Dave Flett.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Album>. ?result <http://dbpedia.org/property/author> ""Dave Flett""@en . }","```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Dave_Flett> <http://dbpedia.org/ontology/work> ?result .
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Album> .
}
```",1,2,2,1,1,2,3,28,0,0,1,0,0.0,0
54,7,train,Give me the reference to Thihapate of Mohnyin.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Thihapate of Mohnyin""@en . }","```sparql
SELECT ?reference WHERE {
  <http://dbpedia.org/resource/Thihapate_of_Mohnyin> ?property ?reference .
}
```",1,1,2,1,1,3,3,71,0,110,1,0.0,0.0,0
356,10,train,"Give me the native, that is a soccer player and a soccer manager, of the birth place, that is English and a settlement, of Gary Williams (footballer, born 1960).","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Gary_Williams_(footballer,_born_1960)> <http://dbpedia.org/ontology/birthPlace> ?v0 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . }","```sparql
# Step 1: Find the birth place of Gary Williams that is English and a settlement
SELECT ?birthPlace WHERE {
    <http://dbpedia.org/resource/Gary_Williams_(footballer,_born_1960)> <http://www.w3.org/2002/07/owl#sameAs> ?person .
    ?person <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
    ?birthPlace <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/England> ;
                a <http://dbpedia.org/ontology/Settlement> .
}

# Step 2: Find individuals who are native to this birth place and are both soccer players and managers
SELECT DISTINCT ?native WHERE {
    # Replace ?birthPlace with the actual URI obtained from step 1
    ?person <http://dbpedia.org/ontology/birthPlace> ?birthPlace ;
            a <http://dbpedia.org/ontology/SoccerPlayer>, <http://dbpedia.org/ontology/SoccerManager> .
}
```",2,6,3,2,1,3,2,20,0,0,17,0,0.0,0
429,1,train,Give me the country of 77th Ohio Infantry Regiment.,SELECT ?result WHERE { <http://dbpedia.org/resource/77th_Ohio_Infantry_Regiment> <http://dbpedia.org/ontology/country> ?result . },SELECT ?result WHERE { <http://dbpedia.org/resource/77th_Ohio_Infantry_Regiment> <http://dbpedia.org/ontology/country> ?result . },1,1,2,1,1,2,2,9,2,0,0,1.0,1.0,1.0
48,2,train,"Give me the work, that is a work, of Shellback (record producer).",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Shellback_(record_producer)> . },SELECT ?result WHERE { <http://dbpedia.org/resource/Shellback_(record_producer)> <http://dbpedia.org/ontology/work> ?result . },1,2,2,1,1,3,2,20,0,0,57,0,0.0,0
281,5,train,"Who is the leader, that is a politician, of 1962 New South Wales state election?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/1962_New_South_Wales_state_election> <http://dbpedia.org/property/leader> ?result . },"```sparql
SELECT ?result WHERE {
  ?event <http://dbpedia.org/ontology/politicalElection> <http://dbpedia.org/resource/1962_New_South_Wales_state_election>.
  ?event <http://dbpedia.org/ontology/leader> ?result.
  ?result a <http://dbpedia.org/ontology/Politician>.
}
```",1,2,2,1,1,3,3,71,0,0,2,0,0.0,0
281,2,train,Give me the war of New Zealand Army.,SELECT ?result WHERE { <http://dbpedia.org/resource/New_Zealand_Army> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/New_Zealand_Army> <http://dbpedia.org/ontology/participatedIn> ?result .
  FILTER (?result <http://www.w3.org/2002/07/owl#Thing>)
}
```",1,1,2,1,1,3,3,71,0,0,14,0,0.0,0
179,4,train,Who is the parent of Vajiralongkorn?,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Vajiralongkorn> . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Vajiralongkorn> <http://www.w3.org/2000/01/rdf-schema#label> ""Vajiralongkorn""@en .
  OPTIONAL { 
    <http://dbpedia.org/resource/Vajiralongkorn> <http://dbpedia.org/ontology/father> ?result .
  }
  UNION
  {
    <http://dbpedia.org/resource/Vajiralongkorn> <http://dbpedia.org/ontology/mother> ?result .
  }
}
```",1,1,2,1,1,3,2,20,0,0,2,0,0.0,0
328,16,train,Give me the force of the person decedent at Budapest.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> ?v1 . ?v1 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Budapest> . },"```sparql
SELECT ?force WHERE {
  ?person <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Budapest> .
  ?person <http://dbpedia.org/property/force> ?force .
}
```",2,2,3,2,1,3,3,71,0,0,23,0,0.0,0
64,5,train,"Give me the alma mater of the person decedent, that is a writer, at Sremska Kamenica.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>. ?v0 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Sremska_Kamenica> . ?v0 <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
SELECT ?person ?almaMater WHERE {
  ?person <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Sremska_Kamenica> .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer> .
  ?person <http://dbpedia.org/property/almaMater> ?almaMater .
}
```",2,3,3,2,1,2,2,9,1,1,0,0.5,1.0,0.6666666666666666
767,15,train,"Give me the administration, that is a settlement, of the writer of Where It's At (Dustin Lynch album).",SELECT ?result WHERE { <http://dbpedia.org/resource/Where_It's_At_(Dustin_Lynch_album)> <http://dbpedia.org/property/writer> ?v1 . ?result <http://dbpedia.org/property/leaderParty> ?v1 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
SELECT ?result WHERE {
  ?album <http://dbpedia.org/ontology/writer> ?writer .
  ?writer <http://dbpedia.org/property/administration> ?result .
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement> .
  FILTER(STRSTARTS(LCASE(?album), ""where it's at (dustin lynch album)""))
}
```",2,3,3,2,1,3,3,71,0,0,31,0,0.0,0
251,5,train,Give me the author of The Twelve Abbots of Challant.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Twelve_Abbots_of_Challant> <http://dbpedia.org/property/author> ?result . },"```sparql
SELECT ?author WHERE {
  <http://dbpedia.org/resource/The_Twelve_Abbots_of_Challant> <http://dbpedia.org/ontology/author> ?author .
}
```",1,1,2,1,1,2,3,28,1,0,0,1.0,1.0,1.0
314,1,train,Give me the awardee of 30.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ""30""^^<http://www.w3.org/2001/XMLSchema#integer> . }","```sparql
SELECT ?awardee WHERE {
  ?award <http://www.w3.org/2002/07/owl#sameAs> <http://dbpedia.org/resource/Award_30>.
  ?award <http://dbpedia.org/ontology/recipient> ?awardee.
}
```",1,1,2,1,1,2,3,28,0,0,951,0,0.0,0
184,12,train,Give me the parent of Archduchess Ilona of Austria and child of Archduke Joseph August of Austria.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_August_of_Austria> . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Ilona_of_Austria> . },"```sparql
SELECT ?individual WHERE {
  ?individual <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/Archduchess_Ilona_of_Austria> .
  ?individual <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Archduke_Joseph_August_of_Austria> .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
328,5,train,Who is the person decedent at Budapest?,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Budapest> . },"```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Budapest>.
}
```",1,1,2,1,1,3,3,71,1147,0,0,1.0,1.0,1.0
184,11,train,Give me the parent of the native of Budapest.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Budapest> . ?result <http://dbpedia.org/ontology/child> ?v0 . },"SELECT ?parent WHERE { 
  ?person <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Budapest> .
  ?person <http://dbpedia.org/ontology/familyName> ?familyName .
  OPTIONAL { ?person <http://dbpedia.org/ontology/father> ?parent . }
  OPTIONAL { ?person <http://dbpedia.org/ontology/mother> ?parent . }
}",2,2,3,2,1,3,3,71,0,0,19,0,0.0,0
617,8,train,Who is the child of Antiochus (son of Antiochus III the Great)?,SELECT ?result WHERE { <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/child> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/child> ?result .
}
```",1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
492,11,train,"Give me the person decedent at the work of US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/author> ""US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite""@en . ?result <http://dbpedia.org/ontology/deathPlace> ?v0 . }","```sparql
SELECT ?person WHERE {
  <http://dbpedia.org/resource/Joseph_C._Satterthwaite> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/US_Assistant_Secretary_of_State_for_African_Affairs>.
  ?person <http://dbpedia.org/property/death> ?deathEvent.
  ?deathEvent <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Death>.
  OPTIONAL { ?deathEvent <http://dbpedia.org/ontology/location> ?location. }
  FILTER EXISTS {
    ?work <http://dbpedia.org/property/work> <http://dbpedia.org/resource/Joseph_C._Satterthwaite>.
    ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>.
  }
}
```",2,2,3,2,1,3,3,71,0,0,30,0,0.0,0
645,2,train,Give me the commander in Battle of Diamond Rock.,SELECT ?result WHERE { <http://dbpedia.org/resource/Battle_of_Diamond_Rock> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Battle_of_Diamond_Rock> <http://dbpedia.org/ontology/commander> ?result .
}
```",1,1,2,1,1,3,2,20,2,0,0,1.0,1.0,1.0
16,1,train,Give me the professional in Actress.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Actress""@en . }","```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/profession> ?profession .
  ?profession <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Actress> .
}
```",1,1,2,1,1,3,3,71,0,0,19241,0,0.0,0
498,1,train,Give me the band of Will Rahmer.,SELECT ?result WHERE { <http://dbpedia.org/resource/Will_Rahmer> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT ?band WHERE {
  <http://dbpedia.org/resource/Will_Rahmer> <http://dbpedia.org/ontology/memberOf> ?band .
}
```",1,1,2,1,1,2,2,9,0,0,2,0,0.0,0
747,7,train,Give me the persona of Shèna.,SELECT ?result WHERE { <http://dbpedia.org/resource/Shèna> <http://xmlns.com/foaf/0.1/givenName> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Shèna> <http://dbpedia.org/ontology/persona> ?result .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
915,6,train,"Give me the father of Lizzie Spaulding and resident of Springfield, Illinois.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Springfield,_Illinois> . <http://dbpedia.org/resource/Lizzie_Spaulding> <http://dbpedia.org/property/father> ?result . }","```sparql
SELECT ?father WHERE {
  <http://dbpedia.org/resource/Lizzie_Spaulding> <http://xmlns.com/foaf/0.1/father> ?father .
  ?father <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Springfield,_Illinois> .
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
161,0,train,Give me the military force of Rif War.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Rif_War> . },"```sparql
SELECT ?result WHERE {
  ?result <http://dbpedia.org/ontology/militaryConflict> <http://dbpedia.org/resource/Rif_War> .
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryForce> .
}
```",1,1,2,1,1,3,3,71,0,0,56,0,0.0,0
179,2,train,"Who is the child, that is a royalty, of Nakkhatra Mangala?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Nakkhatra_Mangala> . },"```sparql
SELECT ?result WHERE {
  ?child <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/Nakkhatra_Mangala>.
  ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>.
  BIND(?child AS ?result)
}
```",1,2,2,1,1,3,2,20,0,0,1,0,0.0,0
356,0,train,Give me the player in 2015 Sacramento Republic FC season.,SELECT ?result WHERE { <http://dbpedia.org/resource/2015_Sacramento_Republic_FC_season> <http://dbpedia.org/ontology/team> ?result . },"```sparql
SELECT ?player WHERE {
    ?player <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/Sacramento_Republic_FC> .
    ?season <http://dbpedia.org/property/team> <http://dbpedia.org/resource/Sacramento_Republic_FC> ;
            <http://dbpedia.org/property/year> ""2015""^^xsd:integer .
}
```",1,1,2,1,1,3,2,20,0,276,1,0.0,0.0,0
54,3,train,Give me the child of Thinkhaya of Pagan.,SELECT ?result WHERE { <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Thinkhaya_of_Pagan> dbo:child ?result .
}
```",1,1,2,1,1,3,3,71,3,0,0,1.0,1.0,1.0
9,4,train,"Who is the mayor, that is a politician, of Northern Ireland Forum?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Northern_Ireland_Forum> <http://dbpedia.org/property/leader> ?result . },"```sparql
SELECT ?result WHERE {
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>.
  ?result <http://dbpedia.org/property/mayor> <http://dbpedia.org/resource/Northern_Ireland_Forum>.
}
```",1,2,2,1,1,3,3,71,0,0,10,0,0.0,0
626,4,train,Who is the military force of Battle of Borodino?,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Borodino> . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Battle_of_Borodino> <http://dbpedia.org/ontology/militaryForce> ?result .
}
```",1,1,2,1,1,3,2,20,0,0,52,0,0.0,0
10,9,train,Give me the professional in  and band member of Luke Vibert.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Luke_Vibert> . }","```sparql
SELECT ?profession ?band WHERE {
  <http://dbpedia.org/resource/Luke_Vibert> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?profession .
  OPTIONAL { 
    <http://dbpedia.org/resource/Luke_Vibert> <http://dbpedia.org/ontology/memberOf> ?band .
  }
}
```",2,2,3,1,2,2,3,28,0,19,1,0.0,0.0,0
485,4,train,"Who is the awardee, that is a writer and a poet, of Eric Gregory Award?",SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Eric_Gregory_Award> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Poet>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>. },"```sparql
SELECT ?awardee WHERE {
  ?awardee <http://dbpedia.org/ontology/award> <http://dbpedia.org/resource/Eric_Gregory_Award>.
  ?awardee <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>.
  ?awardee <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Poet>.
}
```",1,3,2,1,1,2,3,28,7,2,0,0.7777777777777778,1.0,0.8750000000000001
783,2,train,Give me the person born as Samuel Ofori Amponsah.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Samuel Ofori Amponsah""@en . }","```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/birthName> ""Samuel Ofori Amponsah"" .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
182,11,train,Give me the entity in the nationality of Tamara Kunanayakam.,SELECT ?result WHERE { <http://dbpedia.org/resource/Tamara_Kunanayakam> <http://dbpedia.org/ontology/nationality> ?v1 . ?result <http://dbpedia.org/ontology/place> ?v1 . },"```sparql
SELECT ?entity WHERE {
  <http://dbpedia.org/resource/Tamara_Kunanayakam> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Nationality> ?nationality .
  ?entity <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Nationality> ?nationality .
}
```",2,2,3,2,1,2,3,28,0,0,62,0,0.0,0
488,17,train,"Who is the father of the spouse, that is a royalty, of Tokugawa Masako?",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Tokugawa_Masako> . ?v1 <http://dbpedia.org/property/father> ?result . },"```sparql
SELECT ?father WHERE {
  ?spouse <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Tokugawa_Masako> .
  ?spouse <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
  ?spouse <http://dbpedia.org/property/father> ?father .
}
```",2,3,3,2,1,3,3,71,1,0,0,1.0,1.0,1.0
827,0,train,"Give me the child of Charles Alexander, Grand Duke of Saxe-Weimar-Eisenach.","SELECT ?result WHERE { <http://dbpedia.org/resource/Charles_Alexander,_Grand_Duke_of_Saxe-Weimar-Eisenach> <http://dbpedia.org/ontology/child> ?result . }","```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Charles_Alexander,_Grand_Duke_of_Saxe-Weimar-Eisenach> dbo:child ?result .
}
```",1,1,2,1,1,3,2,20,3,0,0,1.0,1.0,1.0
92,0,train,Give me the band member of Nevermore.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Nevermore> . },"```sparql
SELECT ?member WHERE {
  <http://dbpedia.org/resource/Nevermore_(band)> <http://dbpedia.org/ontology/member> ?member .
}
```",1,1,2,1,1,3,3,71,0,0,12,0,0.0,0
115,6,train,Give me the alma mater of the awardee of National Order of Scientific Merit.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/almaMater> ?result . ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/National_Order_of_Scientific_Merit> . },"```sparql
SELECT ?recipient ?almaMater WHERE {
  ?recipient <http://dbpedia.org/ontology/receivedAward> <http://dbpedia.org/resource/National_Order_of_Scientific_Merit> .
  ?recipient <http://dbpedia.org/ontology/almaMater> ?almaMater .
}
```",2,2,3,2,1,2,2,9,0,0,5,0,0.0,0
701,2,train,Give me the spouse of Ramesses II.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Ramesses_II> . },"```sparql
SELECT ?spouse WHERE {
  <http://dbpedia.org/resource/Ramesses_II> <http://dbpedia.org/ontology/spouse> ?spouse .
}
```",1,1,2,1,1,3,3,71,0,1,5,0.0,0.0,0
465,6,train,"Give me the administration of the leader, that is a political party and an organisation, of Chamber of Deputies of the Czech Republic.",SELECT ?result WHERE { <http://dbpedia.org/resource/Chamber_of_Deputies_of_the_Czech_Republic> <http://dbpedia.org/property/leader> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/property/leaderParty> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. },SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organization>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. <http://dbpedia.org/resource/Chamber_of_Deputies_of_the_Czech_Republic> <http://dbpedia.org/property/leader> ?v1 . ?v1 <http://dbpedia.org/ontology/administration> ?result . },2,4,3,2,1,2,2,9,0,0,50,0,0.0,0
285,8,train,Give me the spouse of the professional in .,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v0 . ?v0 <http://dbpedia.org/property/occupation> """"@en . }","SELECT ?result WHERE { <http://dbpedia.org/resource/Professional> <http://dbpedia.org/ontology/spouse> ?result . }

Note: Replace `<http://dbpedia.org/resource/Professional>` with the actual URI of the professional in question to make this query functional.",2,2,3,2,1,3,2,20,0,0,4149,0,0.0,0
820,8,train,Give me the child of the parent of Jason Schwartzman.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Jason_Schwartzman> . ?result <http://dbpedia.org/property/father> ?v0 . },"```sparql
SELECT ?child WHERE {
  OPTIONAL { <http://dbpedia.org/resource/Jason_Schwartzman> <http://dbpedia.org/ontology/father> ?father . }
  UNION
  OPTIONAL { <http://dbpedia.org/resource/Jason_Schwartzman> <http://dbpedia.org/ontology/mother> ?mother . }
  
  FILTER(?father != UNDEF || ?mother != UNDEF)
  
  OPTIONAL {
    ?parent <http://dbpedia.org/ontology/father> ?child .
  }
  UNION
  OPTIONAL {
    ?parent <http://dbpedia.org/ontology/mother> ?child .
  }

  BIND(IF(BOUND(?father), ?father, ?mother) AS ?parent)
}
```",2,2,3,2,1,3,2,20,0,0,2,0,0.0,0
778,0,train,Give me the entity in United States.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/United_States> . },"```sparql
SELECT ?entity WHERE {
  ?entity <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>.
}
```",1,1,2,1,1,3,2,20,1307,62114,11701,0.020608315857523533,0.10047662976629766,0.034201677373771736
161,3,train,Who is the person decedent at Francoist Spain?,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Francoist_Spain> . },"```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Francoist_Spain>.
}
```",1,1,2,1,1,3,3,71,125,0,0,1.0,1.0,1.0
303,6,train,Give me the entity in Panama and party of Guillermo Endara.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Panama> . <http://dbpedia.org/resource/Guillermo_Endara> <http://dbpedia.org/ontology/party> ?result . },"```sparql
SELECT ?party WHERE {
  <http://dbpedia.org/resource/Guillermo_Endara> <http://dbpedia.org/ontology/party> ?party .
  ?party <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organization> .
  ?party <http://dbpedia.org/property/country> <http://dbpedia.org/resource/Panama> .
}
```",2,2,3,1,2,2,3,28,0,0,2,0,0.0,0
547,17,train,Give me the awardee of the award of Gerald Graham.,SELECT ?result WHERE { <http://dbpedia.org/resource/Gerald_Graham> <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/property/awards> ?v1 . },"```sparql
SELECT ?award WHERE {
  <http://dbpedia.org/resource/Gerald_Graham> <http://dbpedia.org/ontology/awards> ?award .
}
```",2,2,3,2,1,3,3,71,0,0,2075,0,0.0,0
959,13,train,"Give me the native of the residence, that is a country, of Yōichi Masuzoe.",SELECT ?result WHERE { <http://dbpedia.org/resource/Yōichi_Masuzoe> <http://dbpedia.org/property/residence> ?v1 . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
SELECT ?native WHERE {
  <http://dbpedia.org/resource/Yōichi_Masuzoe> <http://dbpedia.org/ontology/residence> ?residence .
  ?residence <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country> .
  ?native <http://dbpedia.org/ontology/nativeOf> ?residence .
}
```",2,3,3,2,1,3,3,71,0,0,8419,0,0.0,0
251,3,train,"Give me the war, that is a military conflict, of Louis François Félix Musnier.",SELECT ?result WHERE { <http://dbpedia.org/resource/Louis_François_Félix_Musnier> <http://dbpedia.org/ontology/battle> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
SELECT ?result WHERE {
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>.
  <http://dbpedia.org/resource/Louis_François_Félix_Musnier> <http://dbpedia.org/property/battle> ?result.
}
```",1,2,2,1,1,2,3,28,0,0,16,0,0.0,0
182,10,train,Give me the war of the work of Gotabhaya Rajapaksa.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Gotabhaya_Rajapaksa> . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Gotabhaya_Rajapaksa> <http://purl.org/dc/terms/creator> ?work .
  ?work <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?type .
  FILTER(?type = <http://dbpedia.org/ontology/Book> || ?type = <http://dbpedia.org/ontology/Article>)
  ?work <http://dbpedia.org/property/about> ?result .
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>
}
```",2,2,3,2,1,2,3,28,0,0,5,0,0.0,0
55,3,train,"Give me the producer, that is a band, of Used to Love Her.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. <http://dbpedia.org/resource/Used_to_Love_Her> <http://dbpedia.org/ontology/producer> ?result . },"```sparql
SELECT ?result WHERE {
  ?song <http://dbpedia.org/ontology/producer> ?result .
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band> .
  ?song <http://dbpedia.org/ontology/title> ""Used to Love Her"" .
}
```",1,2,2,1,1,2,3,28,0,0,1,0,0.0,0
981,5,train,"Who is the person born, that is a beauty queen, as ?","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BeautyQueen>. ?result <http://dbpedia.org/property/birthName> """"@en . }","```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/beautyQueen> ?title .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/BeautyQueen108930069> .
  OPTIONAL { ?person <http://dbpedia.org/property/birthDate> ?birthDate . }
}
```",1,2,2,1,1,3,2,20,0,0,120,0,0.0,0
485,9,train,Give me the entity in Nottinghamshire and birth place of Thomas Warner (poet).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Nottinghamshire> . <http://dbpedia.org/resource/Thomas_Warner_(poet)> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?result WHERE {
  ?result <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Nottinghamshire>.
  <http://dbpedia.org/resource/Thomas_Warner_(poet)> <http://dbpedia.org/property/birthPlace> ?result.
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
783,7,train,Give me the associated musical artist of the band member of Ofori Amponsah.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Ofori_Amponsah> . },"```sparql
SELECT ?associatedArtist WHERE {
  ?band <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/Ofori_Amponsah>.
  ?band <http://dbpedia.org/ontology/associatedMusicalArtist> ?associatedArtist.
}
```",2,2,3,2,1,3,2,20,0,0,35,0,0.0,0
251,8,train,"Give me the location of the war, that is a military conflict, of Louis François Félix Musnier.",SELECT ?result WHERE { <http://dbpedia.org/resource/Louis_François_Félix_Musnier> <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://dbpedia.org/ontology/place> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
SELECT ?location WHERE {
  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>.
  <http://dbpedia.org/resource/Louis_François_Félix_Musnier> <http://dbpedia.org/ontology/battle> ?war.
  ?war <http://dbpedia.org/ontology/location> ?location.
}
```",2,3,3,2,1,2,3,28,0,0,25,0,0.0,0
345,3,train,Give me the nickname of FC Vaduz.,SELECT ?result WHERE { <http://dbpedia.org/resource/FC_Vaduz> <http://dbpedia.org/property/nickname> ?result . },"```sparql
SELECT ?nickname WHERE {
  <http://dbpedia.org/resource/FC_Vaduz> <http://dbpedia.org/ontology/nickname> ?nickname .
}
```",1,1,2,1,1,3,2,20,0,0,3,0,0.0,0
92,9,train,Give me the band member of Nevermore and associated musical artist of Jim Sheppard.,SELECT ?result WHERE { <http://dbpedia.org/resource/Jim_Sheppard> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Nevermore> . },"```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/Nevermore_(band)> .
  ?person <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Jim_Sheppard_(musician)> .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
820,10,train,Who is the parent of the professional in Actor?,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://dbpedia.org/property/occupation> ""Actor""@en . }","SELECT ?parent WHERE {
  ?actor <http://dbpedia.org/ontology/profession> <http://dbpedia.org/resource/Category:Actors>.
  ?actor <http://dbpedia.org/property/parents> ?parent.
}",2,2,3,2,1,3,2,20,0,0,921,0,0.0,0
626,1,train,Give me the awardee of Order of St. Andrew.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Order_of_St._Andrew> . },"```sparql
SELECT ?awardee WHERE {
  ?awardee <http://dbpedia.org/ontology/award> <http://dbpedia.org/resource/Order_of_St._Andrew>.
}
```",1,1,2,1,1,3,2,20,33,12,0,0.7333333333333333,1.0,0.846153846153846
161,11,train,"Give me the military force of the force, that is a societal event and an event and a military conflict, of Francisco Franco.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v0 . ?v0 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Franco> . },SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Francisco_Franco> <http://dbpedia.org/property/force> ?v1 . ?v1 <http://dbpedia.org/property/militaryForce> ?result . },2,5,3,2,1,3,3,71,0,0,545,0,0.0,0
666,3,train,"Give me the manager, that is a sports manager, of 2016–17 Hull City A.F.C. season.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. <http://dbpedia.org/resource/2016–17_Hull_City_A.F.C._season> <http://dbpedia.org/ontology/manager> ?result . },"```sparql
SELECT ?manager WHERE {
  ?season <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/Hull_City_A.F.C.>;
          <http://dbpedia.org/property/startYear> ""2016""^^xsd:gYear;
          <http://dbpedia.org/property/endYear> ""2017""^^xsd:gYear.
  ?season <http://dbpedia.org/ontology/manager> ?manager.
  ?manager a <http://dbpedia.org/ontology/SportsManager>.
}
```",1,2,2,1,1,3,2,20,0,0,4,0,0.0,0
232,5,train,"Give me the professional in Actor, narrator and producer.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Actor, narrator and producer""@en . }","```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/occupation> <http://dbpedia.org/resource/Actor> .
  ?person <http://dbpedia.org/ontology/occupation> <http://dbpedia.org/resource/Narrator> .
  ?person <http://dbpedia.org/ontology/occupation> <http://dbpedia.org/resource/Producer> .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
179,0,train,Give me the person born as Mom Rajawongse Sirikit Kitiyakara.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Mom Rajawongse Sirikit Kitiyakara""@en . }","```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/property/birthName> ""Mom Rajawongse Sirikit Kitiyakara"" .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
318,1,train,Give me the professional in Composer.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/Composer> . },"```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/profession> <http://dbpedia.org/resource/Category:Composers>.
}
```",1,1,2,1,1,2,2,9,0,0,1916,0,0.0,0
838,10,train,"Give me the band, that is a group, of the reference, that is a group and an organisation, to YU Grupa.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""YU Grupa""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. }","```sparql
SELECT ?band WHERE {
  ?reference <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>.
  ?reference <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>.
  ?reference <http://dbpedia.org/property/reference> <http://dbpedia.org/resource/YU_Grupa>.
  ?band <http://dbpedia.org/ontology/member> ?reference.
}
```",2,5,3,2,1,3,2,20,0,0,8,0,0.0,0
9,12,train,Give me the figure known as QUB and alma mater of Allen Hill (scientist).,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ""QUB""@en . <http://dbpedia.org/resource/Allen_Hill_(scientist)> <http://dbpedia.org/ontology/almaMater> ?result . }","```sparql
SELECT ?qub ?almaMater WHERE {
  <http://dbpedia.org/resource/Allen_Hill_(scientist)> <http://www.w3.org/2000/01/rdf-schema#label> ""QUB""@en .
  OPTIONAL { 
    <http://dbpedia.org/resource/Allen_Hill_(scientist)> <http://dbpedia.org/ontology/almaMater> ?almaMater .
  }
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
9,16,train,"Who is the awardee of the reference, that is an award, to Royal Medals?","SELECT ?result WHERE { ?v1 <http://xmlns.com/foaf/0.1/name> ""Royal Medals""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?result <http://dbpedia.org/property/awards> ?v1 . }","```sparql
SELECT ?result WHERE {
  ?reference <http://dbpedia.org/ontology/type> <http://dbpedia.org/resource/Royal_Medals>.
  ?reference <http://purl.org/dc/terms/references> ?result.
}
```",2,3,3,2,1,3,3,71,0,0,45,0,0.0,0
328,11,train,"Give me the awardee of the award of Bruce Fraser, 1st Baron Fraser of North Cape.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape> <http://dbpedia.org/property/awards> ?v0 . }","```sparql
SELECT ?awardee WHERE {
  <http://dbpedia.org/resource/Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape> <http://dbpedia.org/ontology/receivedAward> ?award .
  ?otherPerson <http://dbpedia.org/ontology/receivedAward> ?award .
  FILTER(?otherPerson != <http://dbpedia.org/resource/Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape>)
  BIND(?otherPerson AS ?awardee)
}
```",2,2,3,2,1,3,3,71,0,0,1484,0,0.0,0
915,3,train,"Give me the birthplace, that is a settlement, of Stephen Verona.",SELECT ?result WHERE { <http://dbpedia.org/resource/Stephen_Verona> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Stephen_Verona> <http://dbpedia.org/ontology/birthPlace> ?result .
  ?result a <http://dbpedia.org/ontology/Settlement> .
}
```",1,2,2,1,1,3,2,20,1,0,0,1.0,1.0,1.0
55,4,train,"Give me the band member, that is a band and a group, of San Francisco Symphony.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/San_Francisco_Symphony> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. },"```sparql
SELECT ?result WHERE {
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>.
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>.
  <http://dbpedia.org/resource/San_Francisco_Symphony> <http://dbpedia.org/property/member> ?result.
}
```",1,3,2,1,1,2,3,28,0,0,3,0,0.0,0
345,1,train,Give me the team of Alessandro Mangiarratti.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Alessandro_Mangiarratti> . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Alessandro_Mangiarratti> <http://dbpedia.org/ontology/team> ?result .
}
```",1,1,2,1,1,3,2,20,1,7,1,0.125,0.5,0.2
55,6,train,Give me the band member of Metallica and band member of Guns N' Roses.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Guns_N'_Roses> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Metallica> . },"```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Metallica> .
  ?person <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Guns_N%27_Roses> .
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
827,2,train,"Who is the parent of Charles Alexander, Grand Duke of Saxe-Weimar-Eisenach?","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Charles_Alexander,_Grand_Duke_of_Saxe-Weimar-Eisenach> . }","```sparql
SELECT ?parent WHERE {
  <http://dbpedia.org/resource/Charles_Alexander,_Grand_Duke_of_Saxe-Weimar-Eisenach> <http://dbpedia.org/ontology/father> ?parent .
} UNION
SELECT ?parent WHERE {
  <http://dbpedia.org/resource/Charles_Alexander,_Grand_Duke_of_Saxe-Weimar-Eisenach> <http://dbpedia.org/ontology/mother> ?parent .
}
```",1,1,2,1,1,3,2,20,0,0,2,0,0.0,0
547,12,train,Give me the resting place of Simon Cadell and resting place of Alan Cunningham.,SELECT ?result WHERE { <http://dbpedia.org/resource/Simon_Cadell> <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Alan_Cunningham> <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
SELECT ?person ?restingPlace WHERE {
  VALUES ?person { 
    <http://dbpedia.org/resource/Simon_Cadell> 
    <http://dbpedia.org/resource/Alan_Cunningham_(British_officer)>
  }
  ?person <http://dbpedia.org/ontology/burialPlace> ?restingPlace .
}
```",2,2,3,1,2,3,3,71,0,0,2,0,0.0,0
92,4,train,"Give me the reference, that is an artist, to Nevermore.","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Nevermore""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
SELECT ?artist WHERE {
  ?entity <http://dbpedia.org/ontology/reference> <http://dbpedia.org/resource/Nevermore_(band)> .
  ?entity <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist> .
  BIND(?entity AS ?artist)
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
378,12,train,"Give me the war of Joaquín Blake and claim to fame of Louis des Balbes de Berton de Crillon, 1st Duke of Mahón.","SELECT ?result WHERE { <http://dbpedia.org/resource/Joaquín_Blake> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Louis_des_Balbes_de_Berton_de_Crillon,_1st_Duke_of_Mahón> <http://dbpedia.org/ontology/knownFor> ?result . }","```sparql
# Query to find the wars associated with Joaquín Blake
SELECT ?war WHERE {
  ?person <http://dbpedia.org/ontology/participatedIn> ?war .
  ?war a <http://dbpedia.org/ontology/MilitaryConflict> .
  FILTER(STR(?person) = ""Joaquín_Blake"")
}

# Query to find the claim to fame of Louis des Balbes de Berton de Crillon, 1st Duke of Mahón
SELECT ?claimToFame WHERE {
  ?person <http://dbpedia.org/ontology/knownFor> ?claimToFame .
  ?claimToFame a <http://dbpedia.org/ontology/Film> .
  FILTER(STR(?person) = ""Louis_des_Balbes_de_Berton_de_Crillon,_1st_Duke_of_Mahón"")
}
```",2,2,3,1,2,3,3,71,0,0,2,0,0.0,0
645,1,train,Give me the alma mater of Sylvia Pankhurst.,SELECT ?result WHERE { <http://dbpedia.org/resource/Sylvia_Pankhurst> <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Sylvia_Pankhurst> <http://dbpedia.org/ontology/almaMater> ?result .
}
```",1,1,2,1,1,3,2,20,2,0,0,1.0,1.0,1.0
427,3,train,Give me the party of Michele Pinto.,SELECT ?result WHERE { <http://dbpedia.org/resource/Michele_Pinto> <http://dbpedia.org/ontology/party> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Michele_Pinto> <http://dbpedia.org/ontology/party> ?result .
}
```",1,1,2,1,1,3,3,71,2,0,0,1.0,1.0,1.0
498,6,train,"Give me the band of the member, that is an artist, of Mortician (band).",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Mortician_(band)> <http://dbpedia.org/ontology/bandMember> ?v0 . },"```sparql
SELECT ?band WHERE {
  ?member <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/Mortician_(band)> .
  ?member <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist> .
  OPTIONAL { ?member <http://dbpedia.org/ontology/member> ?band . }
}
```",2,3,3,2,1,2,2,9,0,0,2,0,0.0,0
44,1,train,Give me the band member of Sledgeback.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Sledgeback> . },"```sparql
SELECT ?member WHERE {
  ?band <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalGroup>.
  ?band <http://dbpedia.org/ontology/name> ""Sledgeback"" .
  ?band <http://dbpedia.org/ontology/member> ?member .
}
```",1,1,2,1,1,2,2,9,0,0,8,0,0.0,0
281,15,train,Who is the awardee of the award of Jonathon Band?,SELECT ?result WHERE { <http://dbpedia.org/resource/Jonathon_Band> <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/property/awards> ?v1 . },"```sparql
SELECT ?result WHERE {
  ?award <http://dbpedia.org/ontology/awardee> ?result .
  ?award <http://www.w3.org/2000/01/rdf-schema#label> ""Jonathon Band""@en .
}
```",2,2,3,2,1,3,3,71,0,0,558,0,0.0,0
435,3,train,"Give me the figure known, that is a settlement and a town and Icelandic, as Land of fire and ice.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ""Land of fire and ice""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Town>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Iceland>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. }","```sparql
SELECT ?result WHERE {
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Town>.
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>.
  ?result <http://dbpedia.org/property/country> <http://dbpedia.org/resource/Iceland>.
  ?result <http://dbpedia.org/ontology/nickName> ""Land of fire and ice"" .
}
```",1,4,2,1,1,2,3,28,0,0,1,0,0.0,0
421,10,train,Give me the native of the birthplace of Samir Bekrić.,SELECT ?result WHERE { <http://dbpedia.org/resource/Samir_Bekrić> <http://dbpedia.org/ontology/birthPlace> ?v0 . ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . },"```sparql
SELECT ?native WHERE {
  <http://dbpedia.org/resource/Samir_Bekrić> <http://dbpedia.org/ontology/birthPlace> ?birthplace .
  ?birthplace <http://dbpedia.org/property/nativeOf> ?native .
}
```",2,2,3,2,1,2,3,28,0,0,5492,0,0.0,0
659,12,train,Give me the military force of Napoleonic Wars and commander in Battle of Leipzig.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Napoleonic_Wars> . <http://dbpedia.org/resource/Battle_of_Leipzig> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT ?militaryForce WHERE {
  ?militaryForce <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryForce>.
  ?militaryForce <http://dbpedia.org/property/partOfWar> <http://dbpedia.org/resource/Napoleonic_Wars>.
  ?commander <http://dbpedia.org/ontology/commander> ?militaryForce.
  ?battle <http://dbpedia.org/ontology/battle> ?commander.
  FILTER(?battle = <http://dbpedia.org/resource/Battle_of_Leipzig>)
}
```",2,2,3,1,2,3,3,71,0,0,5,0,0.0,0
712,1,train,Give me the resting place of Nina Onilova.,SELECT ?result WHERE { <http://dbpedia.org/resource/Nina_Onilova> <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
SELECT ?restingPlace WHERE {
  <http://dbpedia.org/resource/Nina_Onilova> <http://dbpedia.org/ontology/burialPlace> ?restingPlace .
}
```",1,1,2,1,1,3,2,20,0,0,2,0,0.0,0
959,6,train,"Give me the residence, that is a country, of Yōichi Masuzoe.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Yōichi_Masuzoe> <http://dbpedia.org/property/residence> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Y%C5%8Dichi_Masuzoe> <http://dbpedia.org/ontology/residence> ?result .
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country> .
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
712,2,train,"Give me the military force, that is an organisation and a military unit, of Vyoshenskaya Uprising.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Vyoshenskaya_Uprising> . },"```sparql
SELECT ?result WHERE {
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organization>.
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>.
  <http://dbpedia.org/resource/Vyoshenskaya_Uprising> <http://dbpedia.org/property/militaryForce> ?result.
}
```",1,3,2,1,1,3,2,20,0,0,1,0,0.0,0
783,3,train,Give me the band member of Ofori Amponsah.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Ofori_Amponsah> . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Ofori_Amponsah> <http://dbpedia.org/ontology/bandMember> ?result .
}
```",1,1,2,1,1,3,2,20,0,0,5,0,0.0,0
232,17,train,"Give me the residence, that is a settlement and British, of the native, that is a politician and an office holder, of France.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/France> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://dbpedia.org/property/residence> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. },"```sparql
SELECT ?residence WHERE {
  ?person <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/France>.
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>.
  ?person <http://dbpedia.org/ontology/officeHolder> [].
  ?person <http://dbpedia.org/property/residence> ?residence.
  ?residence <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>.
  ?residence <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>.
}
```",2,6,3,2,1,3,3,71,0,0,2,0,0.0,0
179,10,train,Who is the child of the parent of Vajiralongkorn?,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Vajiralongkorn> . ?v0 <http://dbpedia.org/ontology/child> ?result . },"```sparql
SELECT ?child WHERE {
  ?parent <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Vajiralongkorn>.
  ?parent <http://dbpedia.org/ontology/father> ?child.
}
```",2,2,3,2,1,3,2,20,0,0,4,0,0.0,0
10,10,train,"Give me the band member of the person born, that is an artist, as Luke Francis Vibert.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ""Luke Francis Vibert""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . }","```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/birthName> ""Luke Francis Vibert"".
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>.
}

SELECT ?bandMember WHERE {
  ?artist <http://dbpedia.org/property/memberOfBand> ?bandMember.
}
```",2,3,3,2,1,2,3,28,0,0,3,0,0.0,0
783,1,train,Give me the band member of Ebony Reigns.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Ebony_Reigns> . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Ebony_Reigns> <http://dbpedia.org/ontology/memberOf> ?group .
  ?member <http://dbpedia.org/ontology/memberOf> ?group .
  FILTER(?member != <http://dbpedia.org/resource/Ebony_Reigns>)
  BIND(?member AS ?result)
}
```",1,1,2,1,1,3,2,20,0,0,7,0,0.0,0
232,0,train,Give me the child of Jon Pertwee.,SELECT ?result WHERE { <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/ontology/child> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/ontology/child> ?result .
}
```",1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
182,4,train,Give me the work of Gotabhaya Rajapaksa.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Gotabhaya_Rajapaksa> . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Gotabhaya_Rajapaksa> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?type .
  <http://dbpedia.org/resource/Gotabhaya_Rajapaksa> <http://dbpedia.org/ontology/work> ?result .
}
```",1,1,2,1,1,2,3,28,0,0,1,0,0.0,0
391,1,train,Give me the actor of The Departed.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Departed> <http://dbpedia.org/ontology/starring> ?result . },"```sparql
SELECT ?actor WHERE {
  <http://dbpedia.org/resource/The_Departed> <http://dbpedia.org/ontology/starring> ?actor .
}
```",1,1,2,1,1,3,3,71,9,0,0,1.0,1.0,1.0
547,2,train,Give me the resting place of Alan Cunningham.,SELECT ?result WHERE { <http://dbpedia.org/resource/Alan_Cunningham> <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
SELECT ?restingPlace WHERE {
  <http://dbpedia.org/resource/Alan_Cunningham_(British_Army_officer)> dbo:burialPlace ?restingPlace .
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
142,5,train,Give me the entity in the region of Japan Standard Time.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Japan_Standard_Time> . ?result <http://dbpedia.org/ontology/country> ?v0 . },"```sparql
SELECT ?entity WHERE {
  ?entity <http://dbpedia.org/ontology/timeZone> ""Japan Standard Time"" .
}
```",2,2,3,2,1,2,2,9,0,0,8922,0,0.0,0
981,7,train,Give me the entity in the region of Time in Indonesia.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Time_in_Indonesia> . ?result <http://dbpedia.org/ontology/country> ?v1 . },"```sparql
SELECT ?entity WHERE {
  ?region rdfs:label ""Time""@en .
  ?region wdt:P31/wdt:P279* wd:Q2220681 . # Instance of a region in Indonesia
  ?entity dbp:locatedIn ?region .
}
```",2,2,3,2,1,3,2,20,0,0,2949,0,0.0,0
659,9,train,Give me the commander in German campaign of 1813 and commander in Battle of Leipzig.,SELECT ?result WHERE { <http://dbpedia.org/resource/Battle_of_Leipzig> <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/German_campaign_of_1813> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT ?commander WHERE {
    { 
        <http://dbpedia.org/resource/German_campaign_of_1813> <http://dbpedia.org/ontology/commander> ?commander .
    }
    UNION
    {
        <http://dbpedia.org/resource/Battle_of_Leipzig> <http://dbpedia.org/ontology/commander> ?commander .
    }
}
```",2,2,3,1,2,3,3,71,16,20,0,0.4444444444444444,1.0,0.6153846153846153
465,5,train,Give me the death place of the native of Prague.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/deathPlace> ?result . ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Prague> . },"```sparql
SELECT ?deathPlace WHERE {
  ?person <http://dbpedia.org/property/birthPlace> <http://dbpedia.org/resource/Prague> .
  OPTIONAL { ?person <http://dbpedia.org/ontology/deathPlace> ?deathPlace . }
}
```",2,2,3,2,1,2,2,9,208,0,46,1.0,0.8188976377952756,0.9004329004329005
963,9,train,"Give me the region, that is a country, of the time zone of Herzegovina-Neretva Canton.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/timeZone> ?v0 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Herzegovina-Neretva_Canton> <http://dbpedia.org/property/timeZone> ?v0 . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Herzegovina-Neretva_Canton> <http://www.w3.org/2006/time#during> ?timeZone .
  ?timeZone <http://dbpedia.org/ontology/country> ?country .
  ?country <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country> .
  BIND(?country AS ?result)
}
```",2,3,3,2,1,3,2,20,0,0,56,0,0.0,0
801,1,train,Give me the producer of Westside Story (song).,SELECT ?result WHERE { <http://dbpedia.org/resource/Westside_Story_(song)> <http://dbpedia.org/ontology/producer> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Westside_Story_(song)> <http://dbpedia.org/ontology/producer> ?result .
}
```",1,1,2,1,1,3,3,71,2,0,0,1.0,1.0,1.0
617,16,train,"Who is the child of the successor, that is a royalty, of Antiochus (son of Antiochus III the Great)?",SELECT ?result WHERE { <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/successor> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/child> ?result . },"```sparql
SELECT ?child WHERE {
  ?successor <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> .
  ?successor a <http://dbpedia.org/ontology/Royalty> .
  ?successor <http://dbpedia.org/property/child> ?child .
}
```",2,3,3,2,1,3,3,71,0,0,6,0,0.0,0
820,7,train,Give me the professional in the award of Scott McCloud.,SELECT ?result WHERE { <http://dbpedia.org/resource/Scott_McCloud> <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v1 . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Scott_McCloud> <http://dbpedia.org/ontology/award> ?award .
  ?award <http://dbpedia.org/property/professional> ?result .
}
```",2,2,3,2,1,3,2,20,0,0,39650,0,0.0,0
617,6,train,Give me the parent of Mieszko II Lambert and child of Doubravka of Bohemia.,SELECT ?result WHERE { <http://dbpedia.org/resource/Doubravka_of_Bohemia> <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Mieszko_II_Lambert> . },"```sparql
SELECT ?parent WHERE {
  <http://dbpedia.org/resource/Mieszko_II_Lambert> <http://dbpedia.org/ontology/father> ?parent .
  OPTIONAL { <http://dbpedia.org/resource/Mieszko_II_Lambert> <http://dbpedia.org/ontology/mother> ?parent . }
  ?parent <http://dbpedia.org/ontology/mother> <http://dbpedia.org/resource/Doubravka_of_Bohemia> .
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
801,0,train,Give me the professional in .,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . }","SELECT ?result WHERE { 
  # The query cannot be completed without specifying an entity or context.
}",1,1,2,1,1,3,3,71,0,0,39640,0,0.0,0
328,13,train,Give me the commander in the force of Ferenc Szálasi.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Ferenc_Szálasi> . ?v1 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT ?commander WHERE {
  ?force <http://dbpedia.org/ontology/commander> ?commander .
  ?force <http://dbpedia.org/property/memberOf> <http://dbpedia.org/resource/Ferenc_Szálasi> .
}
```",2,2,3,2,1,3,3,71,0,0,73,0,0.0,0
391,4,train,Give me the figure known as Hub City.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ""Hub City""@en . }","```sparql
SELECT ?entity WHERE {
  ?entity rdfs:label ""Hub City""@en.
}
```",1,1,2,1,1,3,3,71,0,1,4,0.0,0.0,0
659,14,train,"Give me the military force of the force, that is a societal event and an event and a military conflict, of Rutger Jan Schimmelpenninck.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> . ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> <http://dbpedia.org/property/force> ?v1 . ?v1 <http://dbpedia.org/ontology/militaryForce> ?result . },2,5,3,2,1,3,3,71,0,0,1127,0,0.0,0
617,17,train,Who is the child of the commander in Battle of Panium?,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Battle_of_Panium> <http://dbpedia.org/ontology/commander> ?v1 . },"SELECT ?child WHERE {
  <http://dbpedia.org/resource/Battle_of_Panium> <http://dbpedia.org/ontology/commander> ?commander .
  ?commander <http://dbpedia.org/property/child> ?child .
}",2,2,3,2,1,3,3,71,0,0,7,0,0.0,0
360,8,train,"Give me the writer of the work, that is an album, of Dave Flett.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Album>. ?v1 <http://dbpedia.org/property/author> ""Dave Flett""@en . ?v1 <http://dbpedia.org/property/writer> ?result . }","```sparql
SELECT ?album ?writer WHERE {
  ?album <http://dbpedia.org/ontology/work> ?work .
  ?work <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Album> .
  ?album <http://dbpedia.org/property/contributor> <http://dbpedia.org/resource/Dave_Flett> .
  OPTIONAL { ?album <http://purl.org/dc/terms/creator> ?writer . }
}
```",2,3,3,2,1,2,3,28,0,0,8,0,0.0,0
294,6,train,"Give me the resting place of Luke Lea (American politician, born 1879) and resting place of Edwin A. Keeble.","SELECT ?result WHERE { <http://dbpedia.org/resource/Edwin_A._Keeble> <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Luke_Lea_(American_politician,_born_1879)> <http://dbpedia.org/ontology/restingPlace> ?result . }","```sparql
SELECT ?person ?name ?restingPlace WHERE {
  {
    ?person <http://dbpedia.org/property/name> ""Luke Lea (American politician, born 1879)"" .
    ?person <http://dbpedia.org/ontology/deathPlace> ?restingPlace .
    OPTIONAL { ?person rdfs:label ?name . FILTER(LANG(?name) = 'en') }
  } UNION {
    ?person <http://dbpedia.org/property/name> ""Edwin A. Keeble"" .
    ?person <http://dbpedia.org/ontology/deathPlace> ?restingPlace .
    OPTIONAL { ?person rdfs:label ?name . FILTER(LANG(?name) = 'en') }
  }
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
184,0,train,Give me the parent of Géza von Habsburg.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Géza_von_Habsburg> . },"```sparql
SELECT ?parent WHERE {
  { <http://dbpedia.org/resource/G%C3%A9za_von_Habsburg> <http://dbpedia.org/ontology/father> ?parent . }
  UNION
  { <http://dbpedia.org/resource/G%Céza_von_Habsburg> <http://dbpedia.org/ontology/mother> ?parent . }
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
328,3,train,Who is the commander in Volcano and Ryukyu Islands campaign?,SELECT ?result WHERE { <http://dbpedia.org/resource/Volcano_and_Ryukyu_Islands_campaign> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT ?commander WHERE {
  <http://dbpedia.org/resource/Volcano_and_Ryukyu_Islands_campaign> <http://dbpedia.org/ontology/commander> ?commander .
}
```",1,1,2,1,1,3,3,71,20,0,0,1.0,1.0,1.0
626,0,train,Give me the commander in Battle of Leipzig.,SELECT ?result WHERE { <http://dbpedia.org/resource/Battle_of_Leipzig> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT ?commander WHERE {
  <http://dbpedia.org/resource/Battle_of_Leipzig> <http://dbpedia.org/ontology/commander> ?commander .
}
```",1,1,2,1,1,3,2,20,21,0,0,1.0,1.0,1.0
838,3,train,"Give me the band member, that is an artist and a musical artist, of YU Grupa.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/YU_Grupa> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
SELECT ?result WHERE {
  ?result <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/YU_Grupa> .
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist> .
}
```",1,3,2,1,1,3,2,20,0,0,4,0,0.0,0
747,8,train,Who is the person born as Tracey Elizabeth McSween?,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Tracey Elizabeth McSween""@en . }","```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/property/birthName> ""Tracey Elizabeth McSween"" .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
345,6,train,Give me the figure known as Stolz von Liechtenstein and team of Alessandro Mangiarratti.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ""Stolz von Liechtenstein""@en . ?result <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Alessandro_Mangiarratti> . }","```sparql
# Query to find the figure known as Stolz von Liechtenstein
SELECT ?entity WHERE {
  ?entity <http://dbpedia.org/ontology/knows> ""Stolz von Liechtenstein"" .
}

# Query to find the team of Alessandro Mangiarratti
SELECT ?team WHERE {
  <http://dbpedia.org/resource/Alessandro_Mangiarratti> <http://dbpedia.org/ontology/team> ?team .
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
801,8,train,"Give me the writer, that is a musical artist and an artist, of 40 Dayz & 40 Nightz.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/40_Dayz_&_40_Nightz> <http://dbpedia.org/property/writer> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"```sparql
SELECT ?writer WHERE {
  ?work dbo:title ""40 Dayz & 40 Nightz""@en .
  ?work dbo:composer ?writer .
  ?writer a dbpedia-owl:MusicalArtist ;
          a dbpedia-owl:Artist .
}
```",1,3,2,1,1,3,3,71,0,0,12,0,0.0,0
666,7,train,"Give me the player in the manager, that is a sports manager, of 2016–17 Hull City A.F.C. season.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/2016–17_Hull_City_A.F.C._season> <http://dbpedia.org/ontology/manager> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. },"```sparql
SELECT ?player WHERE {
    ?manager <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/2016%E2%80%9317_Hull_City_A.F.C._season> .
    ?manager <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager> .
    ?player <http://dbpedia.org/ontology/team> ?team .
    ?team <http://dbpedia.org/property/manager> ?manager .
}
```",2,3,3,2,1,3,2,20,0,0,22,0,0.0,0
345,9,train,"Give me the nickname of the player, that is a sports club and an organisation and a soccer club, in Armando Heeb.",SELECT ?result WHERE { <http://dbpedia.org/resource/Armando_Heeb> <http://dbpedia.org/ontology/team> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v0 <http://dbpedia.org/property/nickname> ?result . },"```sparql
SELECT ?nickname WHERE {
  ?club <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>.
  ?club <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>.
  ?club <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>.
  ?player <http://dbpedia.org/property/team> ?club.
  ?player <http://dbpedia.org/ontology/nickname> ?nickname.
  ?player <http://www.w3.org/2000/01/rdf-schema#label> ""Armando Heeb""@en.
}
```",2,5,3,2,1,3,2,20,0,0,3,0,0.0,0
981,4,train,Give me the author of Kamikaze Girls.,SELECT ?result WHERE { <http://dbpedia.org/resource/Kamikaze_Girls> <http://dbpedia.org/property/author> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Kamikaze_Girls> <http://dbpedia.org/ontology/author> ?result .
}
```",1,1,2,1,1,3,2,20,1,0,2,1.0,0.3333333333333333,0.5
391,6,train,"Give me the claim to fame, that is a work, of Michael Ballhaus.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Michael_Ballhaus> <http://dbpedia.org/ontology/knownFor> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Michael_Ballhaus> <http://dbpedia.org/ontology/knownFor> ?result .
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work> .
}
```",1,2,2,1,1,3,3,71,4,0,0,1.0,1.0,1.0
9,10,train,"Give me the figure known as QUB and alma mater of John Alderdice, Baron Alderdice.","SELECT ?result WHERE { <http://dbpedia.org/resource/John_Alderdice,_Baron_Alderdice> <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://dbpedia.org/property/nickname> ""QUB""@en . }","```sparql
SELECT ?result WHERE {
  ?person <http://dbpedia.org/property/knowsAs> ""QUB"".
  ?person <http://dbpedia.org/ontology/almaMater> ?result.
  FILTER(?person = <http://dbpedia.org/resource/John_Alderdice,_Baron_Alderdice>)
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
197,2,train,Who is the member of FC Politehnica Timișoara?,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/FC_Politehnica_Timișoara> . },"```sparql
SELECT ?player WHERE {
  ?player <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/FC_Politehnica_Timișoara> .
}
```",1,1,2,1,1,2,2,9,572,0,0,1.0,1.0,1.0
54,5,train,Give me the parent of Thado Minsaw of Prome.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> <http://dbpedia.org/ontology/father> ?result .
}
UNION
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> <http://dbpedia.org/property/mother> ?result .
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
182,6,train,Give me the war of Mahesh Senanayake and war of Jagath Dias.,SELECT ?result WHERE { <http://dbpedia.org/resource/Jagath_Dias> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Mahesh_Senanayake> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
SELECT DISTINCT ?war WHERE {
  {
    <http://dbpedia.org/resource/Mahesh_Senanayake> <http://dbpedia.org/ontology/battle> ?war .
    ?war a <http://dbpedia.org/ontology/MilitaryConflict> .
  }
  UNION
  {
    <http://dbpedia.org/resource/Jagath_Dias> <http://dbpedia.org/ontology/battle> ?war .
    ?war a <http://dbpedia.org/ontology/MilitaryConflict> .
  }
}
```",2,2,3,1,2,2,3,28,1,5,0,0.16666666666666666,1.0,0.2857142857142857
778,7,train,Give me the entity in the award of Ralph L. Brinster.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ralph_L._Brinster> <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/ontology/location> ?v1 . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Ralph_L._Brinster> <http://dbpedia.org/ontology/award> ?award .
  ?award ?p ?result .
}
```",2,2,3,2,1,3,2,20,40,5795,18589,0.006855184233076264,0.002147189865263836,0.003270111183780249
179,5,train,Who is the child of Bhumibol Adulyadej?,SELECT ?result WHERE { <http://dbpedia.org/resource/Bhumibol_Adulyadej> <http://dbpedia.org/ontology/child> ?result . },"```sparql
SELECT ?child WHERE {
  <http://dbpedia.org/resource/Bhumibol_Adulyadej> <http://dbpedia.org/ontology/child> ?child .
}
```",1,1,2,1,1,3,2,20,4,0,0,1.0,1.0,1.0
54,13,train,Give me the parent of the child of Narapati I of Ava.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Narapati_I_of_Ava> . },"```sparql
SELECT ?child ?parent WHERE {
  <http://dbpedia.org/resource/Narapati_I_of_Ava> <http://dbpedia.org/ontology/child> ?child .
  ?child <http://dbpedia.org/ontology/parent> ?parent .
}
```",2,2,3,2,1,3,3,71,2,3,0,0.4,1.0,0.5714285714285715
303,5,train,"Who is the person born, that is a politician, as Arnulfo Arias Madrid?","SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Arnulfo Arias Madrid""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/birthName> ""Arnulfo Arias Madrid"" .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .
}
```",1,2,2,1,1,2,3,28,0,0,1,0,0.0,0
534,5,train,Give me the owner of RDS Arena.,SELECT ?result WHERE { <http://dbpedia.org/resource/RDS_Arena> <http://dbpedia.org/ontology/owner> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/RDS_Arena> <http://dbpedia.org/ontology/owner> ?result .
}
```",1,1,2,1,1,3,2,20,1,0,0,1.0,1.0,1.0
767,1,train,Give me the alma mater of Carl L. Nippert.,SELECT ?result WHERE { <http://dbpedia.org/resource/Carl_L._Nippert> <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Carl_L._Nippert> <http://dbpedia.org/ontology/almaMater> ?result .
}
```",1,1,2,1,1,3,3,71,3,0,0,1.0,1.0,1.0
963,1,train,Give me the administration of Serbian Progressive Party.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Serbian_Progressive_Party> . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Serbian_Progressive_Party> <http://dbpedia.org/ontology/administration> ?result .
}
```",1,1,2,1,1,3,2,20,0,0,86,0,0.0,0
345,4,train,Give me the birth date of Eiður Guðjohnsen.,SELECT ?result WHERE { <http://dbpedia.org/resource/Eiður_Guðjohnsen> <http://dbpedia.org/ontology/birthDate> ?result . },"```sparql
SELECT ?birthDate WHERE {
  <http://dbpedia.org/resource/Eiður_Guðjohnsen> <http://dbpedia.org/ontology/birthDate> ?birthDate .
}
```",1,1,2,1,1,3,2,20,1,0,0,1.0,1.0,1.0
10,6,train,Give me the associated musical artist of Matt Colton and band member of Luke Vibert.,SELECT ?result WHERE { <http://dbpedia.org/resource/Matt_Colton> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Luke_Vibert> . },"```sparql
SELECT DISTINCT ?artist WHERE {
  # Find associated musical artists of Matt Colton
  { 
    <http://dbpedia.org/resource/Matt_Colton> <http://dbpedia.org/ontology/associatedMusicalArtist> ?artist .
  }
  
  UNION
  
  # Find band members of Luke Vibert
  { 
    ?band <http://dbpedia.org/property/bandMember> ?artist .
    ?band <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/Luke_Vibert> .
  }
}
```",2,2,3,1,2,2,3,28,1,3,0,0.25,1.0,0.4
391,3,train,"Give me the nick name of Jackson, Tennessee.","SELECT ?result WHERE { <http://dbpedia.org/resource/Jackson,_Tennessee> <http://xmlns.com/foaf/0.1/nick> ?result . }","SELECT ?nickname WHERE {
  <http://dbpedia.org/resource/Jackson,_Tennessee> <http://www.w3.org/2000/01/rdf-schema#label> ?label .
  OPTIONAL { 
    <http://dbpedia.org/resource/Jackson,_Tennessee> <http://dbpedia.org/ontology/commonName> ?nickname .
  }
}",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
696,2,train,"Give me the associated musical artist, that is an organisation and a group and a band, of The Boils.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/The_Boils> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. },"```sparql
SELECT ?result WHERE {
  ?result a <http://dbpedia.org/ontology/Organization> .
  ?result a <http://dbpedia.org/ontology/Band> .
  ?result a <http://dbpedia.org/ontology/MusicalGroup> .
  OPTIONAL { <http://dbpedia.org/resource/The_Boils> <http://dbpedia.org/property/associatedBand> ?result . }
}
```",1,4,2,1,1,3,2,20,0,0,2,0,0.0,0
994,16,train,"Give me the band member, that is a band and a group and an organisation, of the band, that is an organisation, of Fredrik Thordendal.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Fredrik_Thordendal> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
SELECT ?member WHERE {
  ?band <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/Fredrik_Thordendal> .
  ?band <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation> .
  
  ?member <http://dbpedia.org/ontology/member> ?band .
  ?memberBand <http://dbpedia.org/property/band> ?member .
  ?memberBand <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band> .
  ?memberBand <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation> .
  ?memberBand <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group> .
}
```",2,6,3,2,1,3,3,71,0,0,6,0,0.0,0
492,3,train,Give me the author of French Algeria.,SELECT ?result WHERE { <http://dbpedia.org/resource/French_Algeria> <http://dbpedia.org/property/author> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/French_Algeria> <http://dbpedia.org/ontology/author> ?result .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
9,1,train,Give me the alma mater of Allen Hill (scientist).,SELECT ?result WHERE { <http://dbpedia.org/resource/Allen_Hill_(scientist)> <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Allen_Hill_(scientist)> <http://dbpedia.org/ontology/almaMater> ?result .
}
```",1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
54,4,train,Give me the father of Soe Min Wimala Dewi.,SELECT ?result WHERE { <http://dbpedia.org/resource/Soe_Min_Wimala_Dewi> <http://dbpedia.org/property/father> ?result . },"```sparql
SELECT ?father WHERE {
  <http://dbpedia.org/resource/Soe_Min_Wimala_Dewi> <http://dbpedia.org/ontology/father> ?father .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
492,13,train,"Give me the commander in the war, that is a military conflict and an event, of Frédéric-Georges Herr.",SELECT ?result WHERE { <http://dbpedia.org/resource/Frédéric-Georges_Herr> <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"```sparql
SELECT ?war ?commander WHERE {
  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>.
  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>.
  <http://dbpedia.org/resource/Frédéric-Georges_Herr> <http://dbpedia.org/property/battle> ?war.
  ?war <http://dbpedia.org/ontology/commander> ?commander.
}
```",2,4,3,2,1,3,3,71,0,0,2,0,0.0,0
485,2,train,Give me the entity in Nottinghamshire.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Nottinghamshire> . },"```sparql
SELECT ?entity WHERE {
  ?entity <http://www.w3.org/2000/01/rdf-schema#label> ?label .
  FILTER(CONTAINS(LCASE(?label), ""nottinghamshire""))
}
```",1,1,2,1,1,2,3,28,110,755,259,0.12716763005780346,0.2981029810298103,0.17828200972447328
827,10,train,"Who is the child, that is a royalty, of the spouse, that is a royalty, of Princess Pauline of Saxe-Weimar-Eisenach?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Princess_Pauline_of_Saxe-Weimar-Eisenach> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
SELECT ?child WHERE {
  ?spouse <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Princess_Pauline_of_Saxe-Weimar-Eisenach> .
  ?spouse <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/RoyalFamilyMember> .
  ?child <http://dbpedia.org/ontology/birthParent> ?spouse .
  ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/RoyalFamilyMember> .
}
```",2,4,3,2,1,3,2,20,0,0,2,0,0.0,0
142,0,train,Give me the entity in Japan.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan> . },"```sparql
SELECT ?result WHERE {
  ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>.
}
```",1,1,2,1,1,2,2,9,8916,0,0,1.0,1.0,1.0
55,2,train,Give me the band of Newsted.,SELECT ?result WHERE { <http://dbpedia.org/resource/Newsted> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Jason_Newsted> <http://dbpedia.org/ontology/band> ?result .
}
```",1,1,2,1,1,2,3,28,0,0,9,0,0.0,0
392,7,train,Give me the province of Schio and entity in Italy.,SELECT ?result WHERE { <http://dbpedia.org/resource/Schio> <http://dbpedia.org/ontology/province> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy> . },"```sparql
SELECT ?schioProvince ?entityInItaly WHERE {
  ?schio <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement> .
  ?schio <http://dbpedia.org/ontology/administrativeUnit> ?schioProvince .
  ?schio rdfs:label ""Schio""@en .

  OPTIONAL {
    ?entityInItaly <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?type .
    ?entityInItaly <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy> .
  }
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
427,13,train,Give me the party of the father of Lamberto Andreotti.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Lamberto_Andreotti> <http://dbpedia.org/property/father> ?v1 . },"SELECT ?result WHERE { 
  <http://dbpedia.org/resource/Lamberto_Andreotti> <http://xmlns.com/foaf/0.1/familyName> ?father .
  ?father <http://dbpedia.org/ontology/party> ?result .
}",2,2,3,2,1,3,3,71,0,0,5,0,0.0,0
294,2,train,"Give me the entity in Nashville, Tennessee.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Nashville,_Tennessee> . }","```sparql
SELECT ?entity WHERE {
  ?entity <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Nashville,_Tennessee>.
}
```",1,1,2,1,1,2,3,28,340,0,0,1.0,1.0,1.0
303,11,train,"Give me the party of the person born, that is a politician, as Arnulfo Arias Madrid.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ""Arnulfo Arias Madrid""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/party> ?result . }","```sparql
SELECT ?person ?party WHERE {
  ?person <http://dbpedia.org/ontology/birthName> ""Arnulfo Arias Madrid"" .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .
  OPTIONAL { ?person <http://dbpedia.org/ontology/party> ?party . }
}
```",2,3,3,2,1,2,3,28,0,0,1,0,0.0,0
767,9,train,Give me the alma mater of Carl L. Nippert and entity in Baden-Württemberg.,SELECT ?result WHERE { <http://dbpedia.org/resource/Carl_L._Nippert> <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://dbpedia.org/ontology/state> <http://dbpedia.org/resource/Baden-Württemberg> . },"```sparql
# Query to find the alma mater of Carl L. Nippert
SELECT ?almaMater WHERE {
  <http://dbpedia.org/resource/Carl_L._Nippert> <http://dbpedia.org/ontology/almaMater> ?almaMater .
}

# Query to find entities in Baden-Württemberg
SELECT ?entity WHERE {
  ?entity <http://www.w3.org/2000/01/rdf-schema#seeAlso> <http://dbpedia.org/resource/Baden-W%C3%BCrttemberg> .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
488,8,train,Who is the father of Emperor Go-Mizunoo?,SELECT ?result WHERE { <http://dbpedia.org/resource/Emperor_Go-Mizunoo> <http://dbpedia.org/property/father> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Emperor_Go-Mizunoo> <http://dbpedia.org/ontology/father> ?result .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
838,8,train,"Give me the band member of the band, that is a group, of YU Grupa.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. <http://dbpedia.org/resource/YU_Grupa> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . },"```sparql
SELECT ?member WHERE {
  <http://dbpedia.org/resource/YU_Grupa> <http://dbpedia.org/ontology/member> ?member .
}
```",2,3,3,2,1,3,2,20,0,0,40,0,0.0,0
801,17,train,"Give me the writer, that is a musical artist and an artist, of the album, that is a musical work and a work, of What U See Is What U Get.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/property/writer> ?result . <http://dbpedia.org/resource/What_U_See_Is_What_U_Get> <http://dbpedia.org/ontology/album> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"```sparql
SELECT ?writer WHERE {
  ?album <http://dbpedia.org/ontology/work> ?work .
  ?album <http://purl.org/dc/terms/title> ""What U See Is What U Get"" .
  ?album <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork> .
  ?album <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work> .
  ?album <http://purl.org/dc/terms/creator> ?writer .
  ?writer <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
  ?writer <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist> .
}
```",2,6,3,2,1,3,3,71,0,0,12,0,0.0,0
48,4,train,Give me the show with Stacey Dash.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Stacey_Dash> . },"```sparql
SELECT ?show WHERE {
  <http://dbpedia.org/resource/Stacey_Dash> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Actor> .
  <http://dbpedia.org/resource/Stacey_Dash> <http://dbpedia.org/property/knownFor> ?show .
}
```",1,1,2,1,1,3,2,20,0,0,18,0,0.0,0
378,10,train,"Give me the claim to fame of Louis des Balbes de Berton de Crillon, 1st Duke of Mahón and war of Carl Pontus Gahn.","SELECT ?result WHERE { <http://dbpedia.org/resource/Louis_des_Balbes_de_Berton_de_Crillon,_1st_Duke_of_Mahón> <http://dbpedia.org/ontology/knownFor> ?result . <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/ontology/battle> ?result . }","```sparql
SELECT ?claimToFame ?war WHERE {
  # Part 1: Claim to fame for Louis des Balbes de Berton de Crillon, 1st Duke of Mahón
  <http://dbpedia.org/resource/Louis_des_Balbes_de_Berton_de_Crillon,_1st_Duke_of_Mah%C3%B3n> <http://dbpedia.org/ontology/knownFor> ?claimToFame .

  # Part 2: War associated with Carl Pontus Gahn
  OPTIONAL {
    ?gahn <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
    BIND(?gahn AS ?war)
  }
  
  # Bind the resource for Carl Pontus Gahn
  VALUES ?gahn { <http://dbpedia.org/resource/Carl_Pontus_Gahn> }
}
```",2,2,3,1,2,3,3,71,0,0,2,0,0.0,0
328,17,train,"Give me the office, that is a government agency, of the leader, that is an office holder and a politician, of Gustav Jonson.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Gustav_Jonson> <http://dbpedia.org/property/leader> ?v1 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v1 <http://dbpedia.org/property/office> ?result . },"```sparql
SELECT ?result WHERE {
  ?person <http://dbpedia.org/ontology/officeHolder> ?office .
  ?office a <http://dbpedia.org/ontology/OfficeHolder> ;
          a <http://dbpedia.org/ontology/Politician> .
  FILTER(?person = <http://dbpedia.org/resource/Gustav_Jonson>)
  ?office <http://dbpedia.org/property/governmentAgency> ?result .
  ?result a <http://dbpedia.org/ontology/GovernmentAgency> .
}
```",2,5,3,2,1,3,3,71,0,0,1,0,0.0,0
339,4,train,Who is the parent of Princess Olga of Greece and Denmark?,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Princess_Olga_of_Greece_and_Denmark> . },"```sparql
SELECT ?parent (IF(?parentType = ""father"", ""Father"", ""Mother"") AS ?relationship) WHERE {
  <http://dbpedia.org/resource/Princess_Olga_of_Greece_and_Denmark> 
    <http://dbpedia.org/ontology/father> ?father .
  OPTIONAL { 
    <http://dbpedia.org/resource/Princess_Olga_of_Greece_and_Denmark> 
      <http://dbpedia.org/ontology/mother> ?mother .
  }
  BIND(IF(BOUND(?father), ""father"", IF(BOUND(?mother), ""mother"", NULL)) AS ?parentType)
  BIND(IF(BOUND(?father), ?father, ?mother) AS ?parent)
}
```",1,1,2,1,1,3,2,20,0,0,2,0,0.0,0
701,16,train,Give me the child of the child of Seti I.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v1 . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seti_I> . },"```sparql
SELECT ?grandchild WHERE {
  ?child1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Seti_I> .
  ?child2 <http://dbpedia.org/ontology/child> ?child1 .
  BIND(?child2 AS ?grandchild)
}
```",2,2,3,2,1,3,3,71,0,0,8,0,0.0,0
996,6,train,Give me the entity in France and force of Dagobert Sigmund von Wurmser.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Dagobert_Sigmund_von_Wurmser> . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/France> . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Dagobert_Sigmund_von_Wurmser> <http://dbpedia.org/ontology/force> ?result .
  ?result <http://www.w3.org/2000/01/rdf-schema#label> ?label .
  FILTER (CONTAINS(LCASE(?label), ""france""))
}
```",2,2,3,1,2,3,2,20,0,0,4,0,0.0,0
492,10,train,Give me the person decedent at French Algeria and person decedent at Algiers.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Algiers> . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/French_Algeria> . },"```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/placeOfBirth> ?deathPlace .
  FILTER (
    EXISTS { ?person <http://dbpedia.org/ontology/placeOfDeath> <http://dbpedia.org/resource/French_Algeria> }
    && EXISTS { ?person <http://dbpedia.org/ontology/placeOfDeath> <http://dbpedia.org/resource/Algiers> }
  )
}
```",2,2,3,1,2,3,3,71,0,0,16,0,0.0,0
421,6,train,Give me the band member of Senidah and native of Socialist Federal Republic of Yugoslavia.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Socialist_Federal_Republic_of_Yugoslavia> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Senidah> . },"```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/band> <http://dbpedia.org/resource/Senidah>.
  ?person <http://dbpedia.org/ontology/birthPlace> ?birthPlace.
  ?birthPlace <http://www.w3.org/2000/01/rdf-schema#seeAlso> <http://dbpedia.org/resource/Socialist_Federal_Republic_of_Yugoslavia>.
}
```",2,2,3,1,2,2,3,28,0,0,2,0,0.0,0
487,4,train,Give me the birth name of Phil Scott.,SELECT ?result WHERE { <http://dbpedia.org/resource/Phil_Scott> <http://dbpedia.org/property/birthName> ?result . },"```sparql
SELECT ?birthName WHERE {
  <http://dbpedia.org/resource/Phil_Scott> <http://dbpedia.org/ontology/birthName> ?birthName .
}
```",1,1,2,1,1,3,2,20,1,0,0,1.0,1.0,1.0
827,3,train,"Who is the child, that is a royalty, of Grand Duchess Maria Pavlovna of Russia (1786–1859)?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Grand_Duchess_Maria_Pavlovna_of_Russia_(1786–1859)> . },"```sparql
SELECT ?child WHERE {
  <http://dbpedia.org/resource/Grand_Duchess_Maria_Pavlovna_of_Russia_(1786–1859)> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>.
  ?child <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Grand_Duchess_Maria_Pavlovna_of_Russia_(1786–1859)>.
  ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>.
}
```",1,2,2,1,1,3,2,20,2,0,0,1.0,1.0,1.0
435,9,train,"Give me the region of Greenwich Mean Time and work of Article 62, Section IV of Constitution of Iceland.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/author> ""Article 62, Section IV of Constitution of Iceland""@en . ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Greenwich_Mean_Time> . }","```sparql
# Query for the region associated with Greenwich Mean Time (GMT)
SELECT ?region WHERE {
    ?timeZone <http://www.w3.org/2006/time#hasTimezone> <http://dbpedia.org/resource/Greenwich_Mean_Time>.
    ?timeZone <http://dbpedia.org/ontology/location> ?location.
    ?location <http://dbpedia.org/ontology/administrativeRegion> ?region.
}

UNION

# Query for the work or context related to Article 62, Section IV of the Constitution of Iceland
SELECT ?work WHERE {
    <http://dbpedia.org/resource/Article_62,_Section_IV_of_the_Constitution_of_Iceland> <http://www.w3.org/2000/01/rdf-schema#comment> ?description.
    ?description <http://dbpedia.org/ontology/work> ?work.
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
488,12,train,Give me the administration of Emperor Go-Yōzei and death place of Tokugawa Ieyasu.,SELECT ?result WHERE { <http://dbpedia.org/resource/Tokugawa_Ieyasu> <http://dbpedia.org/ontology/deathPlace> ?result . ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Emperor_Go-Yōzei> . },"```sparql
SELECT ?administration ?deathPlace WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/Emperor_Go-Yōzei> <http://dbpedia.org/ontology/reign> ?administration .
  }
  OPTIONAL { 
    <http://dbpedia.org/resource/Tokugawa_Ieyasu> <http://dbpedia.org/property/deathPlace> ?deathPlace .
  }
}
```",2,2,3,1,2,3,3,71,1,2,0,0.3333333333333333,1.0,0.5
666,2,train,"Give me the team, that is a soccer club and a sports team season, of Leonid Slutsky (football coach).",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?result <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Leonid_Slutsky_(football_coach)> . },"```sparql
SELECT ?result WHERE {
  ?team <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Lionid_Slutsky> .
  ?team <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub> .
  ?team <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason> .
}
```",1,3,2,1,1,3,2,20,0,0,3,0,0.0,0
767,8,train,Give me the alter ego of Black Hood.,SELECT ?result WHERE { <http://dbpedia.org/resource/Black_Hood> <http://dbpedia.org/property/alterEgo> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Black_Hood> <http://dbpedia.org/ontology/alternateName> ?result .
}
```",1,1,2,1,1,3,3,71,0,0,5,0,0.0,0
9,9,train,"Give me the alma mater of Allen Hill (scientist) and alma mater of John Alderdice, Baron Alderdice.","SELECT ?result WHERE { <http://dbpedia.org/resource/John_Alderdice,_Baron_Alderdice> <http://dbpedia.org/ontology/almaMater> ?result . <http://dbpedia.org/resource/Allen_Hill_(scientist)> <http://dbpedia.org/ontology/almaMater> ?result . }","```sparql
SELECT ?person ?almaMater WHERE {
  { 
    <http://dbpedia.org/resource/Allen_Hill_(scientist)> <http://dbpedia.org/ontology/almaMater> ?almaMater .
    BIND(<http://dbpedia.org/resource/Allen_Hill_(scientist)> AS ?person)
  }
  UNION
  {
    <http://dbpedia.org/resource/John_Alderdice,_Baron_Alderdice> <http://dbpedia.org/ontology/almaMater> ?almaMater .
    BIND(<http://dbpedia.org/resource/John_Alderdice,_Baron_Alderdice> AS ?person)
  }
}
```",2,2,3,1,2,3,3,71,1,2,0,0.3333333333333333,1.0,0.5
281,1,train,Give me the entity in Colony of New Zealand.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Colony_of_New_Zealand> . },"```sparql
SELECT ?entity WHERE {
  ?entity <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Colony_of_New_Zealand>.
}
```",1,1,2,1,1,3,3,71,0,2,1,0.0,0.0,0
179,8,train,Give me the parent of the child of Bhumibol Adulyadej.,SELECT ?result WHERE { <http://dbpedia.org/resource/Bhumibol_Adulyadej> <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://dbpedia.org/ontology/parent> ?result . },"```sparql
SELECT ?parent WHERE {
  ?child <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Bhumibol_Adulyadej> .
  ?child <http://dbpedia.org/ontology/child> ?parent .
}
```",2,2,3,2,1,3,2,20,1,2,2,0.3333333333333333,0.3333333333333333,0.3333333333333333
142,6,train,Give me the birthplace of the actor of Papa wa Newscaster.,SELECT ?result WHERE { <http://dbpedia.org/resource/Papa_wa_Newscaster> <http://dbpedia.org/ontology/starring> ?v0 . ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?actor ?birthPlace WHERE {
  ?work <http://dbpedia.org/ontology/starring> ?actor .
  ?actor <http://dbpedia.org/property/birthPlace> ?birthPlace .
  FILTER(CONTAINS(LCASE(STR(?work)), ""papa wa newscaster""))
}
```",2,2,3,2,1,2,2,9,0,0,3,0,0.0,0
778,8,train,"Give me the author of the work, that is a software, of Bill Joy.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Bill_Joy> . ?v0 <http://dbpedia.org/ontology/author> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Software>. },"```sparql
SELECT ?work ?author 
WHERE {
  ?work <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/Bill_Joy> .
  ?work <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Software> .
  OPTIONAL { ?work <http://purl.org/dc/terms/creator> ?author . }
}
```",2,3,3,2,1,3,2,20,0,0,2,0,0.0,0
378,8,train,Who is the commander in Great Siege of Gibraltar?,SELECT ?result WHERE { <http://dbpedia.org/resource/Great_Siege_of_Gibraltar> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Great_Siege_of_Gibraltar> <http://dbpedia.org/ontology/commander> ?result .
}
```",1,1,2,1,1,3,3,71,7,0,0,1.0,1.0,1.0
360,10,train,"Give me the native of the death place, that is a settlement, of Winnie Madikizela-Mandela.",SELECT ?result WHERE { <http://dbpedia.org/resource/Winnie_Madikizela-Mandela> <http://dbpedia.org/ontology/deathPlace> ?v1 . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
SELECT ?native WHERE {
  <http://dbpedia.org/resource/Winnie_Madikizela-Mandela> <http://dbpedia.org/ontology/deathPlace> ?deathPlace .
  ?deathPlace <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement> .
  ?native <http://dbpedia.org/property/nativeOf> ?deathPlace .
}
```",2,3,3,2,1,2,3,28,0,0,1099,0,0.0,0
391,0,train,"Give me the native of Compton, California.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Compton,_California> . }","```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Compton,_California> .
}
```",1,1,2,1,1,3,3,71,97,0,0,1.0,1.0,1.0
534,0,train,Give me the birth place of Garret FitzGerald.,SELECT ?result WHERE { <http://dbpedia.org/resource/Garret_FitzGerald> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Garret_FitzGerald> <http://dbpedia.org/ontology/birthPlace> ?result .
}
```",1,1,2,1,1,3,2,20,1,0,0,1.0,1.0,1.0
528,10,train,Give me the force of Narciso Campero and war of Irene Morales.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Narciso_Campero> . <http://dbpedia.org/resource/Irene_Morales> <http://dbpedia.org/ontology/battle> ?result . },"SELECT ?narcisoForce ?ireneWar WHERE {
  OPTIONAL { <http://dbpedia.org/resource/Narciso_Campero> <http://dbpedia.org/ontology/force> ?narcisoForce . }
  OPTIONAL { <http://dbpedia.org/resource/Irene_Morales> <http://dbpedia.org/property/war> ?ireneWar . }
}",2,2,3,1,2,3,3,71,0,0,2,0,0.0,0
303,3,train,"Who is the commander, that is a politician, in United States invasion of Panama?",SELECT ?result WHERE { <http://dbpedia.org/resource/United_States_invasion_of_Panama> <http://dbpedia.org/ontology/commander> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
SELECT ?result WHERE {
  ?event <http://dbpedia.org/ontology/commander> ?result .
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .
  ?event <http://dbpedia.org/ontology/event> <http://dbpedia.org/resource/United_States_invasion_of_Panama> .
}
```",1,2,2,1,1,2,3,28,0,0,6,0,0.0,0
492,7,train,Give me the country of Khemis Miliana District.,SELECT ?result WHERE { <http://dbpedia.org/resource/Khemis_Miliana_District> <http://dbpedia.org/ontology/country> ?result . },"```sparql
SELECT ?country WHERE {
  <http://dbpedia.org/resource/Khemis_Miliana_District> <http://dbpedia.org/ontology/country> ?country .
}
```",1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
427,9,train,Give me the reference to Partito Popolare Italiano and party of Giulio Andreotti.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Partito Popolare Italiano""@en . <http://dbpedia.org/resource/Giulio_Andreotti> <http://dbpedia.org/ontology/party> ?result . }","```sparql
SELECT ?partyReference ?andreottiParty WHERE {
  # Find the reference to Partito Popolare Italiano
  <http://dbpedia.org/resource/Partito_Popolare_Italiano> ?property ?partyReference .
  
  # Find the party of Giulio Andreotti
  <http://dbpedia.org/resource/Giulio_Andreotti> <http://dbpedia.org/ontology/party> ?andreottiParty .
}
```",2,2,3,1,2,3,3,71,1,11,0,0.08333333333333333,1.0,0.15384615384615385
9,11,train,"Give me the alma mater of the mayor, that is a politician, of Northern Ireland Forum.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Northern_Ireland_Forum> <http://dbpedia.org/property/leader> ?v0 . ?v0 <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
SELECT ?almaMater WHERE {
  ?person <http://dbpedia.org/ontology/politician> _:b0 .
  ?person <http://dbpedia.org/property/mayor> _:b1 .
  _:b1 <http://www.w3.org/2002/07/owl#sameAs> <http://dbpedia.org/resource/Northern_Ireland_Forum> .
  ?person <http://dbpedia.org/ontology/almaMater> ?almaMater .
}
```",2,3,3,2,1,3,3,71,0,0,6,0,0.0,0
427,4,train,Give me the name of Italian People's Party (1994).,SELECT ?result WHERE { <http://dbpedia.org/resource/Italian_People's_Party_(1994)> <http://xmlns.com/foaf/0.1/name> ?result . },"```sparql
SELECT ?name WHERE {
  ?party <http://www.w3.org/2000/01/rdf-schema#label> ""Italian People's Party""@en .
  OPTIONAL { ?party <http://dbpedia.org/ontology/foundingDate> ?foundingDate . FILTER (YEAR(?foundingDate) = 1994) }
  ?party <http://www.w3.org/2000/01/rdf-schema#label> ?name .
}
```",1,1,2,1,1,3,3,71,1,0,1,1.0,0.5,0.6666666666666666
182,2,train,Give me the entity in Sri Lanka.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Sri_Lanka> . },"```sparql
SELECT ?entity WHERE {
  ?entity <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Sri_Lanka> .
}
```",1,1,2,1,1,2,3,28,0,4683,62,0.0,0.0,0
528,2,train,Give me the force of Narciso Campero.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Narciso_Campero> . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Narciso_Campero> <http://dbpedia.org/ontology/commander> ?result .
}
```",1,1,2,1,1,3,3,71,0,0,4,0,0.0,0
645,9,train,"Give me the residence, that is a country, of the commander in Battle of Diamond Rock.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/residence> ?result . <http://dbpedia.org/resource/Battle_of_Diamond_Rock> <http://dbpedia.org/ontology/commander> ?v0 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Battle_of_Diamond_Rock> <http://dbpedia.org/ontology/commander> ?commander .
  ?commander <http://dbpedia.org/property/residence> ?residence .
  ?residence <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country> .
  BIND(?residence AS ?result)
}
```",2,3,3,2,1,3,2,20,1,0,0,1.0,1.0,1.0
801,4,train,Give me the alter ego of The Shadow.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?result . },"```sparql
SELECT ?alterEgo WHERE {
  <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/ontology/alternativeName> ?alterEgo .
}
```",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
547,15,train,Give me the child of the child of William Haliburton.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> ""William Haliburton""@en . ?v1 <http://dbpedia.org/ontology/child> ?result . }","```sparql
SELECT ?grandchild WHERE {
  ?child1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/William_Haliburton> .
  ?child2 <http://dbpedia.org/ontology/child> ?child1 .
  BIND(?child2 AS ?grandchild)
}
```",2,2,3,2,1,3,3,71,0,0,3,0,0.0,0
10,0,train,Give me the associated musical artist of Matt Colton.,SELECT ?result WHERE { <http://dbpedia.org/resource/Matt_Colton> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Matt_Colton> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result .
}
```",1,1,2,1,1,2,3,28,4,0,0,1.0,1.0,1.0
528,6,train,Give me the commander in Battle of La Rinconada de Ate.,SELECT ?result WHERE { <http://dbpedia.org/resource/Battle_of_La_Rinconada_de_Ate> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Battle_of_La_Rinconada_de_Ate> <http://dbpedia.org/ontology/commander> ?result .
}
```",1,1,2,1,1,3,3,71,2,0,0,1.0,1.0,1.0
294,7,train,"Give me the entity in Nashville, Tennessee and resting place of Luke Lea (American politician, born 1879).","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Nashville,_Tennessee> . <http://dbpedia.org/resource/Luke_Lea_(American_politician,_born_1879)> <http://dbpedia.org/ontology/restingPlace> ?result . }","```sparql
SELECT ?entity WHERE {
    ?entity <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Nashville,_Tennessee>.
    ?entity <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BurialPlace>.
    <http://dbpedia.org/resource/Luke_Lea_(American_politician,_born_1879)> <http://dbpedia.org/property/buriedIn> ?entity.
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
754,8,train,Give me the parent of the child of Ram Khamhaeng.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ram_Khamhaeng> <http://dbpedia.org/ontology/child> ?v0 . ?result <http://dbpedia.org/ontology/child> ?v0 . },"```sparql
SELECT ?child WHERE {
  <http://dbpedia.org/resource/Ram_Khamhaeng> <http://dbpedia.org/ontology/spouse> ?spouse .
  ?spouse <http://dbpedia.org/ontology/child> ?child .
}
```",2,2,3,2,1,3,2,20,0,0,1,0,0.0,0
54,1,train,Give me the parent of Thado Minsaw of Prome.,SELECT ?result WHERE { <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
SELECT ?parent WHERE {
  OPTIONAL { <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> <http://dbpedia.org/ontology/father> ?parent . }
  UNION
  OPTIONAL { <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> <http://dbpedia.org/ontology/mother> ?parent . }
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
360,9,train,Give me the native of Johannesburg and reference to Manfred Mann.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Johannesburg> . ?result <http://xmlns.com/foaf/0.1/name> ""Manfred Mann""@en . }","```sparql
SELECT ?person WHERE {
  ?person dbo:birthPlace ?place .
  ?place rdfs:label ""Johannesburg""@en .
  ?place a dbo:Settlement .
  
  OPTIONAL { 
    ?person dbo:reference <http://dbpedia.org/resource/Manfred_Mann> .
  }
}
```",2,2,3,1,2,2,3,28,1,999,0,0.001,1.0,0.0019980019980019984
645,5,train,Give me the child of Richard Pankhurst.,SELECT ?result WHERE { <http://dbpedia.org/resource/Richard_Pankhurst> <http://dbpedia.org/ontology/child> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Richard_Pankhurst> <http://dbpedia.org/ontology/child> ?result .
}
```",1,1,2,1,1,3,2,20,3,0,0,1.0,1.0,1.0
161,6,train,"Give me the force, that is a societal event and a military conflict, of Francisco Largo Caballero.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"SELECT ?result WHERE { 
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. 
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. 
  <http://dbpedia.org/resource/Francisco_Largo_Caballero> <http://dbpedia.org/property/knownFor> ?result. 
}",1,3,2,1,1,3,3,71,0,0,1,0,0.0,0
251,2,train,Give me the death place of Laura Mancinelli.,SELECT ?result WHERE { <http://dbpedia.org/resource/Laura_Mancinelli> <http://dbpedia.org/ontology/deathPlace> ?result . },"SELECT ?result WHERE { 
  <http://dbpedia.org/resource/Laura_Mancinelli> <http://dbpedia.org/ontology/deathPlace> ?result .
}",1,1,2,1,1,2,3,28,3,0,0,1.0,1.0,1.0
314,0,train,Give me the person deceased at Madrid.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/restingPlace> <http://dbpedia.org/resource/Madrid> . },"```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Madrid>.
}
```",1,1,2,1,1,2,3,28,12,1334,8,0.008915304606240713,0.6,0.017569546120058566
391,14,train,"Give me the actor of the movie, that is a movie and a work and a television show, with Roz Ryan.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/property/starring> ?result . ?v1 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Roz_Ryan> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. },"```sparql
SELECT ?actor WHERE {
  ?movie <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Movie>.
  ?movie <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>.
  ?movie <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>.
  ?movie <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Roz_Ryan>.
  ?movie <http://dbpedia.org/ontology/castMember> ?actor.
}
```",2,5,3,2,1,3,3,71,0,0,5,0,0.0,0
712,7,train,Give me the capital of the country of Armed Forces of South Russia.,SELECT ?result WHERE { <http://dbpedia.org/resource/Armed_Forces_of_South_Russia> <http://dbpedia.org/ontology/country> ?v1 . ?v1 <http://dbpedia.org/ontology/capital> ?result . },"```sparql
SELECT ?capital WHERE {
  <http://dbpedia.org/resource/Armed_Forces_of_South_Russia> <http://www.w3.org/2000/01/rdf-schema#seeAlso> <http://dbpedia.org/resource/Russia>.
  <http://dbpedia.org/resource/Russia> <http://dbpedia.org/ontology/administrativeCapital> ?capital.
}
```",2,2,3,2,1,3,2,20,0,0,3,0,0.0,0
312,2,train,"Give me the administration, that is a settlement and a region and Italian and a state, of Democratic Party (Italy).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?result <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Democratic_Party_(Italy)> . },SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeDivision>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/State>. <http://dbpedia.org/resource/Democratic_Party_(Italy)> <http://dbpedia.org/property/administration> ?result . },1,5,2,1,1,2,2,9,0,0,14,0,0.0,0
801,9,train,Give me the producer of Westside Story (song) and professional in .,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . <http://dbpedia.org/resource/Westside_Story_(song)> <http://dbpedia.org/ontology/producer> ?result . }","```sparql
SELECT ?producer WHERE {
  <http://dbpedia.org/resource/Westside_Story_(song)> <http://dbpedia.org/ontology/producer> ?producer .
  OPTIONAL { ?producer <http://dbpedia.org/ontology/profession> ?profession . }
}
```",2,2,3,1,2,3,3,71,2,0,0,1.0,1.0,1.0
404,15,train,"Who is the person born, that is a royalty, as the birth name of Princess Victoria Louise of Prussia?",SELECT ?result WHERE { <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/property/birthName> ?v1 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/birthName> ""Princess Victoria Louise of Prussia"" .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
}
```",2,3,3,2,1,3,3,71,0,0,1,0,0.0,0
294,10,train,Give me the resting place of the architect of P. D. Houston Jr. House.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/P._D._Houston_Jr._House> <http://dbpedia.org/ontology/architect> ?v1 . },"```sparql
SELECT ?architect WHERE {
  <http://dbpedia.org/resource/P._D._Houston_Jr._House> <http://dbpedia.org/ontology/architect> ?architect .
}

SELECT ?restingPlace WHERE {
  ?architect <http://dbpedia.org/property/burial> ?restingPlace .
}
```",2,2,3,2,1,2,3,28,0,0,1,0,0.0,0
339,1,train,Give me the father of Princess Elizabeth of Greece and Denmark.,SELECT ?result WHERE { <http://dbpedia.org/resource/Princess_Elizabeth_of_Greece_and_Denmark> <http://dbpedia.org/property/father> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Princess_Elizabeth_of_Greece_and_Denmark> dbo:father ?result .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
963,3,train,"Give me the region, that is a country, of Central European Time.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . },"```sparql
SELECT ?result WHERE {
  ?cet <http://dbpedia.org/ontology/country> ?result .
  ?result a <http://dbpedia.org/ontology/Country> .
  FILTER EXISTS { ?cet a <http://dbpedia.org/ontology/Timezone> . }
}
```",1,2,2,1,1,3,2,20,0,0,56,0,0.0,0
820,5,train,Who is the parent of Jason Schwartzman?,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Jason_Schwartzman> . },"```sparql
SELECT ?parent WHERE {
  OPTIONAL { <http://dbpedia.org/resource/Jason_Schwartzman> <http://dbpedia.org/ontology/father> ?parent . }
  OPTIONAL { <http://dbpedia.org/resource/Jason_Schwartzman> <http://dbpedia.org/ontology/mother> ?parent . }
}
```",1,1,2,1,1,3,2,20,0,0,2,0,0.0,0
994,5,train,"Give me the band, that is an organisation, of Fredrik Thordendal.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Fredrik_Thordendal> . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Fredrik_Thordendal> <http://dbpedia.org/ontology/memberOf> ?result .
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>.
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
617,0,train,Give me the child of Doubravka of Bohemia.,SELECT ?result WHERE { <http://dbpedia.org/resource/Doubravka_of_Bohemia> <http://dbpedia.org/ontology/child> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Doubravka_of_Bohemia> <http://dbpedia.org/ontology/child> ?result .
}
```",1,1,2,1,1,3,2,20,1,0,0,1.0,1.0,1.0
16,9,train,Give me the professional in Actress and spouse of Ted McGinley.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Actress""@en . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
SELECT ?result WHERE {
  ?result <http://dbpedia.org/ontology/profession> <http://dbpedia.org/resource/Category:American_actresses>.
  ?result <http://xmlns.com/foaf/0.1/spouse> <http://dbpedia.org/resource/Ted_McGinley>.
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
915,9,train,"Give me the birthplace, that is a settlement, of the director of Pipe Dreams (1976 film).",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Pipe_Dreams_(1976_film)> <http://dbpedia.org/ontology/director> ?v0 . ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?birthPlace WHERE {
  ?film <http://dbpedia.org/ontology/director> ?director .
  ?director <http://dbpedia.org/property/birthPlace> ?birthPlace .
  ?birthPlace <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement> .
  FILTER (str(?film) = ""Pipe Dreams (1976 film)"")
}
```",2,3,3,2,1,3,2,20,0,0,1,0,0.0,0
115,4,train,Give me the alma mater of Vladimir Cerrón and alma mater of Jorge Sotomayor Tello.,SELECT ?result WHERE { <http://dbpedia.org/resource/Jorge_Sotomayor_Tello> <http://dbpedia.org/ontology/almaMater> ?result . <http://dbpedia.org/resource/Vladimir_Cerrón> <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
SELECT ?person ?almaMater WHERE {
  VALUES ?person { <http://dbpedia.org/resource/Vladimir_Cerrón> <http://dbpedia.org/resource/Jorge_Sotomayor_Tello> }
  ?person <http://dbpedia.org/ontology/almaMater> ?almaMater .
}
```",2,2,3,1,2,2,2,9,1,4,0,0.2,1.0,0.33333333333333337
184,4,train,Give me the native of Budapest.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Budapest> . },"SELECT ?person WHERE {
  ?person <http://dbpedia.org/property/birthPlace> <http://dbpedia.org/resource/Budapest>.
}",1,1,2,1,1,3,3,71,1573,114,1178,0.9324244220509781,0.5717920756088695,0.7088778729157277
801,7,train,"Give me the album, that is a musical work and a work, of What U See Is What U Get.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. <http://dbpedia.org/resource/What_U_See_Is_What_U_Get> <http://dbpedia.org/ontology/album> ?result . },SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/What_U_See_Is_What_U_Get> <http://dbpedia.org/property/album> ?result . },1,3,2,1,1,3,3,71,0,0,1,0,0.0,0
427,5,train,Who is the alumnus of Massachusetts Institute of Technology?,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Massachusetts_Institute_of_Technology> . },"```sparql
SELECT ?result WHERE {
  ?result <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Massachusetts_Institute_of_Technology> .
}
```",1,1,2,1,1,3,3,71,1559,0,0,1.0,1.0,1.0
16,12,train,Give me the professional in Actress and person born as Georgeanne Marie Rice.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Georgeanne Marie Rice""@en . ?result <http://dbpedia.org/property/occupation> ""Actress""@en . }","```sparql
SELECT ?person WHERE {
  ?person rdf:type dbo:Actress .
  ?person dbo:birthName ""Georgeanne Marie Rice"" .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
16,14,train,Give me the person born as the birth name of Gigi Rice.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Gigi_Rice> <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Gigi_Rice> <http://dbpedia.org/ontology/birthName> ?result .
}
```",2,2,3,2,1,3,3,71,0,1,1,0.0,0.0,0
959,0,train,Give me the member of University of Tsukuba.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/University_of_Tsukuba> . },"```sparql
SELECT ?member WHERE {
  ?member <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person> .
  OPTIONAL { ?member <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/University_of_Tsukuba> . }
  OPTIONAL { ?member <http://dbpedia.org/ontology/affiliation> <http://dbpedia.org/resource/University_of_Tsukuba> . }
}
```",1,1,2,1,1,3,3,71,104,1048472,163,9.918212890625e-05,0.3895131086142322,0.00019831376097280526
712,8,train,Give me the resting place of the awardee of Hero of the Soviet Union.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Hero_of_the_Soviet_Union> . ?v0 <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
SELECT ?person ?restingPlace WHERE {
  ?person <http://dbpedia.org/ontology/award> <http://dbpedia.org/resource/Hero_of_the_Soviet_Union> .
  OPTIONAL { ?person <http://dbpedia.org/property/restingPlace> ?restingPlace . }
}
```",2,2,3,2,1,3,2,20,4,892,45,0.004464285714285714,0.08163265306122448,0.008465608465608464
767,17,train,"Give me the alter ego of the persona, that is a fictional character, of Matthew Burland.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/alterEgo> ""Matthew Burland""@en . ?v1 <http://dbpedia.org/property/alterEgo> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. }","```sparql
SELECT ?alterEgo WHERE {
  ?persona <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>.
  <http://dbpedia.org/resource/Matthew_Burland> <http://dbpedia.org/property/persona> ?persona.
  ?persona <http://dbpedia.org/ontology/alterEgo> ?alterEgo.
}
```",2,3,3,2,1,3,3,71,0,0,5,0,0.0,0
356,6,train,Give me the player in 2015 Sacramento Republic FC season and team of Mark Briggs.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Mark_Briggs> . <http://dbpedia.org/resource/2015_Sacramento_Republic_FC_season> <http://dbpedia.org/ontology/team> ?result . },"```sparql
# Query to find the player in 2015 Sacramento Republic FC season
SELECT ?player WHERE {
    ?player <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/Sacramento_Republic_FC_season_2015>.
}

# Query to find the team of Mark Briggs
SELECT ?team WHERE {
    <http://dbpedia.org/resource/Mark_Briggs_(footballer)> <http://dbpedia.org/ontology/team> ?team.
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
55,1,train,Give me the band member of Metallica.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Metallica> . },"```sparql
SELECT ?member WHERE {
  ?band <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>.
  ?band <http://dbpedia.org/ontology/name> ""Metallica""@en.
  ?band <http://dbpedia.org/ontology/member> ?member.
}
```",1,1,2,1,1,2,3,28,0,0,15,0,0.0,0
77,8,train,Give me the force of the mayor of Congress Poland.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> ?v0 . <http://dbpedia.org/resource/Congress_Poland> <http://dbpedia.org/property/leader> ?v0 . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Congress_Poland> <http://dbpedia.org/ontology/mayor> ?mayor .
  ?mayor <http://dbpedia.org/property/force> ?result .
}
```",2,2,3,2,1,3,2,20,0,0,33,0,0.0,0
696,8,train,Give me the landmark at elevation of the award of Nie Rongzhen.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/elevation> ?v0 . <http://dbpedia.org/resource/Nie_Rongzhen> <http://dbpedia.org/property/awards> ?v0 . },"```sparql
SELECT ?landmark WHERE {
  ?award <http://dbpedia.org/property/receiver> <http://dbpedia.org/resource/Nie_Rongzhen> .
  ?landmark <http://dbpedia.org/ontology/elevation> ?elevation .
  ?award <http://dbpedia.org/ontology/associatedWith> ?landmark .
}
```",2,2,3,2,1,3,2,20,0,0,599,0,0.0,0
427,14,train,"Give me the party of the person born, that is an office holder and a politician, as Romano Antonio Prodi.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/ontology/party> ?result . ?v1 <http://dbpedia.org/property/birthName> ""Romano Antonio Prodi""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
SELECT ?party WHERE {
  ?person <http://dbpedia.org/ontology/birthName> ""Romano Antonio Prodi"" .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder> .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .
  ?person <http://dbpedia.org/property/party> ?party .
}
```",2,4,3,2,1,3,3,71,0,0,7,0,0.0,0
77,4,train,"Give me the territory administered, that is an organisation, from Warsaw.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Warsaw> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"SELECT ?result WHERE {
  ?result <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Warsaw>.
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>.
  ?result <http://dbpedia.org/property/administers> ?territory.
}",1,2,2,1,1,3,2,20,0,0,7,0,0.0,0
281,16,train,"Give me the birth place, that is a country, of the leader, that is a politician, of 1962 New South Wales state election.",SELECT ?result WHERE { <http://dbpedia.org/resource/1962_New_South_Wales_state_election> <http://dbpedia.org/property/leader> ?v1 . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
SELECT ?birthPlace WHERE {
    ?election dbpedia-owl:leader ?leader .
    ?election dbpedia-owl:date ""1962""^^xsd:gYear .
    ?election dbpedia-owl:state <http://dbpedia.org/resource/New_South_Wales> .
    ?leader a dbo:Politician .
    ?leader foaf:birthPlace ?birthPlace .
    ?birthPlace a dbo:Country .
}
```",2,4,3,2,1,3,3,71,0,0,1,0,0.0,0
801,12,train,Give me the associated musical artist of Chris Taylor (music producer) and producer of Westside Story (song).,SELECT ?result WHERE { <http://dbpedia.org/resource/Westside_Story_(song)> <http://dbpedia.org/ontology/producer> ?result . <http://dbpedia.org/resource/Chris_Taylor_(music_producer)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT ?artist WHERE {
  <http://dbpedia.org/resource/Chris_Taylor_(music_producer)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?artist .
  ?artist <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Westside_Story_(song)> .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
184,16,train,"Give me the child of the parent, that is a royalty, of Archduke Ladislaus Philipp of Austria.",SELECT ?result WHERE { <http://dbpedia.org/resource/Archduke_Ladislaus_Philipp_of_Austria> <http://dbpedia.org/ontology/parent> ?v1 . ?result <http://dbpedia.org/property/father> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
SELECT ?child WHERE {
  <http://dbpedia.org/resource/Archduke_Ladislaus_Philipp_of_Austria> <http://xmlns.com/foaf/0.1/knows> ?parent .
  ?parent a <http://dbpedia.org/ontology/Royalty> .
  ?parent <http://dbpedia.org/property/child> ?child .
}
```",2,3,3,2,1,3,3,71,0,0,3,0,0.0,0
391,11,train,Give me the native of the figure known as Hub City.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/nickname> ""Hub City""@en . ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . }","SELECT ?native WHERE {
  ?place rdfs:label ""Hub City""@en .
  ?place dbo:nativeOf ?native .
}",2,2,3,2,1,3,3,71,0,0,176,0,0.0,0
77,9,train,Who is the awardee of the award of Maxim Grigorievich Vlasov?,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Maxim_Grigorievich_Vlasov> <http://dbpedia.org/property/awards> ?v0 . },"```sparql
SELECT ?award ?awardee WHERE {
  <http://dbpedia.org/resource/Maxim_Grigorievich_Vlasov> <http://dbpedia.org/ontology/award> ?award .
  ?award <http://dbpedia.org/ontology/recipient> ?awardee .
  FILTER(?awardee != <http://dbpedia.org/resource/Maxim_Grigorievich_Vlasov>)
}
```",2,2,3,2,1,3,2,20,0,0,416,0,0.0,0
16,7,train,Who is the alumnus of Ohio State University?,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Ohio_State_University> . },"```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Ohio_State_University>.
}
```",1,1,2,1,1,3,3,71,467,0,0,1.0,1.0,1.0
92,6,train,"Give me the person born, that is an artist, as Jim Sheppard.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Jim Sheppard""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/birthName> ""Jim Sheppard"".
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>.
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
981,3,train,Give me the region of Time in Indonesia.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Time_in_Indonesia> . },"```sparql
SELECT ?region WHERE {
  ?time <http://www.w3.org/2000/01/rdf-schema#label> ""Time""@en .
  ?time <http://dbpedia.org/ontology/location> ?location .
  ?location <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Indonesia> .
  ?location <http://dbpedia.org/ontology/administrativeRegion> ?region .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
